I'm always happy to spread the word and perform some testing. My python skills are pretty basic tho. Let me know if I can help out!
I may or may not have done something similar to the Youtube thing for the Vine archive...
Would love to join!
I use venv/virtualenv, pip-tools, and [aliases](https://github.com/AndydeCleyre/dotfiles/blob/master/.python.zshrc): venv_path () { echo "$HOME/.local/share/venvs/$(pwd|md5sum|cut -d ' ' -f 1)" } envin () { venv="$(venv_path)/venv" [[ -d $venv ]] || python3 -m venv $venv touch requirements.txt [[ -s requirements.in ]] || echo "# python 3" &gt;&gt; requirements.in . $venv/bin/activate curl -I https://pypi.org/ &amp;&gt; /dev/null &amp;&amp; pip install -qU pip-tools $venv/bin/pip-sync *requirements.txt || pip install -qr requirements.txt } envout () { deactivate } 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [AndydeCleyre/dotfiles/.../**.python.zshrc** (master → 968488e)](https://github.com/AndydeCleyre/dotfiles/blob/968488e3f9308afdf716fa91587acd3967ddde32/.python.zshrc) ---- 
Post this on the [job board](https://www.reddit.com/r/Python/comments/8bx6md/rpython_official_job_board); it's why it exists.
I mean, it's free and fairly straightforward to set up your own rpm or deb repository, or dev-pi python repository if you're worried about having access to dependencies at all times.
You could use a shebang to indicate your code is 3.7 only. Or raise an exception if the Python version is less. Of course, if you run such code in an older Python 3 version, the code will not work. But this is true if you use any new construct in any particular version of Python. If you try to run code with f-strings in Python 3.5, it won't work. If you try to use the with statement in Python 2.0, that won't work either. Virtually no software is forwards-compatible in this way.
Need to set up our pypi cache. 
Artifactory is one stop shop for all that though, which is really nice. It also supports internal repositories, external repositories that it'll cache and then you knit them together under a virtual repository which will figure what it needs to do. If you're strictly a python, node, etc shop you can host your own mirror, but if your multilingual then you should probably look at something like artifactory. 
I think it depends what you're trying to do, who the audience is, and office politics. If your app was 100% do-able in PowerBI and the business requirements are always within the scope of what PowerBI can do, it might have been a waste. If your app is for other non-technical staff to see, use, and maintain and they can't use or maintain it without learning your programming skills, it might have been a waste. If the prevailing office politics has seen a large investment in PowerBI licences and employee training, and your app and it's deployment are unusual, it might have been a waste. This isn't to say you shouldn't learn what you're learning, it's just that sometimes business decisions aren't aligned with your interests. Equally, on each of the above points you could build an alternative argument: your Python app is a lot more flexible / capable, you can customise it into a more intuitive user experience, and you can distribute / support it cheaply and efficiently.
Come on. You should be well aware that the `prer` stands for `PreRenderer` which isn't the step that comes before the Renderer (`r`) (`postv`, the `PostValidator` is what leads into `r`). You get to `prer` when the step `prev` (`pre-validator`; obviously not previous) fails. What part of [the flowchart](https://raw.githubusercontent.com/orsinium/djburger/master/wiki/source/imgs/scheme.png) don't you understand? &amp;nbsp;^^^^^/s
Quart exists as I wanted to use Flask with asyncio rather than learn a new Framework (e.g. aiohttp). It then developed with features that I'd like Flask to have, but don't easily work in a non-async setting i.e. websockets and HTTP/2. Hopefully Quart is now useful to others as well. I didn't write all the http handling though, rather I used the excellent [h11](https://github.com/python-hyper/h11), [h2](https://github.com/python-hyper/hyper-h2) and [wsproto](https://github.com/python-hyper/wsproto) libraries. Flask-SQLAlchemy does work, but it will block the event loop whilst it does IO. The Flask extension support in Quart is meant to ease migration to asyncio based libraries rather than be a good performant choice. &gt; Also, most database drivers are probably not working with asyncio. How do you solve this problem? Could you go into more details on how they don't work? I've had a good experience with [asyncpg](https://github.com/MagicStack/asyncpg) and it seems to work fine.
Sign me up
It means I have to explicitly define the dictionary type as I always have because I don't necessarily have knowledge of the target interpreter. It "sorta is" because distributing for a target python version isn't feasible. They messed this up from the drop, and it's one of those things you just can't fix when its in the wild. At least as far as ensuring compatibility is concerned. That is to say this is an implementation curiosity that may have performance implications, but nothing more.
I'm not too big on Python, so all feedback and comments are greatly appreciated!
I need to land one of those $300/hr gigs
What sample rate do you need? If your required sample rate isn't too high then just sending it over serial as the data comes in should be fine. Just remember, with any ADC you'll get a ton of noise so smoothing it and reducing your number of data points is going to be something you'll have to do somewhere along the line - might as well do some filtering/smoothing on the esp8226. Even so you shoudn't be hitting a baud rate limitation: https://learn.sparkfun.com/tutorials/serial-communication/rules-of-serial The ESP32 is dual core which allows some clever threading work, but you seem to be using a separate ADC, so why not just use it with a Raspberry Pi. It also requires you to have a good grasp of locking and multi-threading. That way you can capture all your data with all the storage and ram you could need. There would be no real practical limitation to you. Even something as rudimentary as a Raspberry Pi Zero would meet all your demands, but get a 3B/B+ because its something worth having in your arsenal. Anyways, my overall advice would be to keep it simple, and choose simple implementations. They're almost always the best way to approach problems. Remember that part of the Python mantra "simple is better than complex."
Sounds exciting! I'd like to join!
Think about it in comparison to the cost of maintaining your own infra and its not too crazy.
Employment happens because workers add more value than they cost, including benefits, HR, AC for the office etc. Developer unproductivity, therefore, loses more money than just what you're paying them.
Salary + Benefits + Office Space + Heating + Licenses for software they may use + employer taxes + other costs. Not sure about actual totals but the cost of dev time is at least a multiple of base pay.
I’d try *bottle* since it’s more bearable. Or quit this policy, since you can’t go far with it. Django has only one external dependency, and you can make your own mirrors/copies.
god damnit. in light of the package's name and questionable english, your username and convoluted reasoning made me think you were an author or contributor. I had a long, confused response typed out.... nicely played. 
Eh, idk if compatibility is really that big of a concern, in the end. It certainly can be annoying now, but in just a few years, Python 3.6 and older will be EOL'd. Specifically, I believe Python 3.6 is slated to be EOL'd roughly around the end of 2021, which isn't too long away in the grand scheme of things. That said, Python 3.6 already supports this behavior, so pragmatically speaking, we just need to wait until the EOL of Python 3.5, which will be near the end of 2020. Of course, people who intend to support EOL'd versions of Python will need to still watch out for this, but that's not really new news. (That said, the More broadly, if this change in semantics is intended to be permanent, I think it does make sense to do it sooner rather then later. 
All our projects will be on GitHub so if you are inclined you are welcome to jump in and contribute!
Does the API have an endpoint where you can pass in the name and get the ID?
I am in
I think your 1st and 2nd address the third. Remember that “explicit is better than implicit”. If you always want ordered, then always use OrderedDict
Are you sure about those serial settings? Do you have a datasheet for the receiver we could look at? 
You have unmatched `(` on line 2. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Somewhere out there a manager just read this and is now worried about how long developer poops are taking
Fixed!
OrderedDicts are ordered collections, not just iterabily ordered, as such equality is different and they have many extra methods related to order. This is not the first thing Python has changed between versions that has subtly different behavior but works in both, classes, strings, division, etc... Now we have it standardized rather than being an implentation detail that people used anyway. Also, unfortunately, many people wrote code assuming dictionary order wouldn't change pre-3.6 because in CPython it didn't change unless insertion or deleation occurred under the right circumstance. It's one of the most common misconceptions about Python.
Sure, you can help with these and other tasks. You can reach us through our GitHub repo - https://github.com/shlomif/PySolFC . Thanks!
[Yes it is](https://status.python.org/incidents/1y1f44q6srh2)
I double that. Only attrs are allowed to do that, but they are an exception, he-he
You're not just trying to reinvent the wheel but all of vehicular transportation combined. There are already tools for this and they are better than anything you could build by yourself.
But but but **THE CLOUD™**
Cost != Salary
Thanks but no. 
`print` had no business being a statement in the first place. Python3 simply corrected an old mistake. Statements are for controlling the program flow; python2's `print` was the exception. 
https://www.python.org/dev/peps/pep-3105/
Because they are not functions but control structures. The basic principle of what return and yield do makes it impossible to turn them into functions. The whole point of return is to *end* a function call, it makes no sense to turn that into another function call.
Yeah, I agree. Can you pull it up in HyperTerm or something and see this data? This is clearly the header: o_[\xaaW\xd6Zv\xeb;; It repeats multiple times. I would think that would correspond with `!AIVDM` somehow. 
`\xe5\xeb\x00o_[\xaaW\xd6Zv\xeb;;` 
Oh good call, I just went by the first bytes listed in data.txt. Of course it would make sense that it wouldn't necessarily be complete... 
I like tour answer here because it shows a gradient of difficulty, something easier to grasp than clearcut answer. Nice
PIP was migrating to pypi.org today and they had some issues. Maybe this is related. https://status.python.org/
I can’t know what you are trying to do without seeing actual code, but it seems like abandoning classes altogether might be a simpler solution.
That's exactly the problem and what /u/flipperdeflip is talking about in regards to how examples are for new people. I see a [this flow chart](https://screenshots.firefox.com/62fHB3q41r2egSPs/djburger.readthedocs.io) and I can't even follow it because everytime I go to a new block I have to look elsewhere to see what the heck it means. Then go back and find my place. If I showed that flowchart to someone without context they would have no freaking clue what the hell it was. But let's say I showed them a different django flowchart. Like [this one that was the first google image search result](https://screenshots.firefox.com/dsq8T8VzhSEBWdGH/hitesh.in). Even if they weren't a developer, and they didn't know what Django was, and I gave them no context at all they would STILL be able to at least sort of understand what is going on. They would know what the flowchart is for, because it's labeled. They would recognize at least some of the pieces, such as "browser" and maybe "urls". They could use the key to determine what section belongs to what. And if that flowchart was given to a developer they would have a pretty good idea of the process and workflow of django at a glance. THAT is what flowcharts are supposed to do. The people in this thread aren't criticizing the project for the fun of it. There is a VERY good reason people don't litter production code with single letter variables. I'd suggest taking the feedback to heart and making changes based on it. At the very least, since you're project is built around Django, then you should follow the same [styleguides](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style/) and same conventions as Django itself. And while you should definitely decide for yourself the web style of your project, you could at least use [Django's web styleguide](https://www.djangoproject.com/styleguide/) as a reference.
For reference, [here](https://en.wikipedia.org/wiki/NMEA_0183) is where he's getting the serial settings from. 
**NMEA 0183** NMEA 0183 is a combined electrical and data specification for communication between marine electronics such as echo sounder, sonars, anemometer, gyrocompass, autopilot, GPS receivers and many other types of instruments. It has been defined by, and is controlled by, the National Marine Electronics Association. It replaces the earlier NMEA 0180 and NMEA 0182 standards. In marine applications, it is slowly being phased out in favor of the newer NMEA 2000 standard. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
I hope not - those settings are completely different than what OP is using. 
It might be "ugly", but it explains exactly what it is, what it does, and what it's used for at a glance. No one codes in notepad.exe, so autocompleting longer variable names is not a problem. It's more important to have readable code than "pretty" code. That's kinda the core idea of Python, and it's one of the reasons the language is becoming so heavily used. The creators decided to use long "ugly" variable/function names that were descriptive instead of short "pretty" things that were't obvious. If I see some perl code that like `&lt;&gt;&lt;&lt;6`... wtf does it do? I have to go look up a bunch of documentation to figure out it's just multiplying user input by 64. Whereas in Python that short pretty code turns into `int(input()) * 64`. Clear and obvious from the get-go. And yes, the perl code can be rewritten to be more obvious. You do have the option of using the "long version". But when someone doesn't use that version the code becomes an unmaintainable mess. That's why Python tries to force you to make your code readable. Even if it makes it longer.
I get where you're coming from, and in the past have definitely been the one advocating for keeping local repos of everything. But that's a lot of work to do well. It also makes the job of managing churn from upstream harder, and these days that's pretty much a daily task.
If you look at what statements do, they're generally for one of two fairly specific things: 1. Flow Control. Eg. for, if, while, return, try, except 2. Variable/Scope manipulation. Eg. assignment, del, with, def. print was the odd one out, in that it did none of these. There wasn't actually any *need* for it to be a statement, because it didn't do anything special that a function couldn't do, whereas stuff like flow control and scope manipulation (bar certain hacks) does. The only other thing that might fit in this category is the `assert` statement, which also doesn't really **need** to be a statement, though there there is a small difference in that it defers execution of the second clause unless the assertion fails, which would be more awkward to do with a function.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Please post in our job sticky
Only of WP the cms that plagued the web 
 coll = COLLECT(exe, a.binaries, [ ('icon.ico', 'icon.ico', 'DATA'), ], a.zipfiles, a.datas, strip=False, upx=True, name='PythonApplication3') 
life is too short to poop on your own time
**PSA**: if you're using Artifactory to mirror PyPi please read this: https://www.reddit.com/r/Python/comments/8cojrq/pypi_is_currently_experiencing_downtime_due_to_an/dxh9mq5/ 
Not quite decided. It is a direction but not a decision as there are still things to be resolved. https://speakerdeck.com/kennethreitz/the-future-of-python-dependency-management
1: /r/learnpython 2: search /r/learnpython for "project"
Had issues with pip on my Fedora 27 machine. After mucking about, I decided to a) put back the system pip with a series of dnf install python-pip, python-setuptools, python-wheel, python3-pip, python3-setuptools. - I didn't have any pip or pip3 commands at the prompt line, 'cause only sudo pip exists at this stage. b) then I used the system pip (aka sudo pip, sudo pip3) to install pip --user. Now I had my pip and pip3 commands at the dos prompt without having to use sudo. c) I uninstalled pipsi and couldn't re-install it using th curl command. Keep failing, thinking that virtualenv wasn't there (but it was). So I used my --user pip command to install pipsi and things were back to normal. d) Its crazy that this post contained the reference to the python packaging app -poetry. I couldn't remember its name. Spent the last hr trying to find it without knowing its name, using my bookmarks, duck duck and google searches and browsing history. I wanted to try it before using pipenv on a new project. I wonder if I can run poetry on top of a pipenv enabled project without breaking things?
Wow, my apologies. I misread and edited my comment. Thanks
I've used python ast. there are pros and cons to this. A search reveals the following recommendation. datamap = eval(raw_input('Provide some data here: ')) means that you actually evaluate the code before you deem it to be unsafe or not. It evaluates the code as soon as the function is called. See also the dangers of eval. ast.literal_eval raises an exception if the input isn't a valid Python datatype, so the code won't be executed if it's not. Use ast.literal_eval whenever you need eval. You shouldn't usually evaluate literal Python statements.
Sure, it was sloppy, but why would my webapp ever be run on an older version of Python? It’s an app, not a framework. It’s never going to be backported. 
For OS packages most people run an internal mirror, I don't understand why they don't do the same with library dependencies... Servers go down, yo. It happens.
Yeah, I just made that change. Before, I liked the simplicity of the venv being right there, ultra-local. But it's an extra hassle when packaging up bits for distribution and I have to specify to ignore that dir. So now it seems simpler to keep it external.
Worked! Many thanks :) `x.decode('unicode_escape')`
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
It’s free and fairly straightforward to host your own mail servers and version control system and make your own cheese and cobble your own shoes too, but I have work to do. I’d rather deal with issues when they pop up than spend my afternoon wondering which logrotate settings will prevent my disks from filling up because my git server is crashing. When github goes down all I need to do is grab a coffee with a coworker and shoot the shit for 20mins.
&gt; have them all implement ABC's and forward their calls explicitly. I am not entirely sure I understand the latter part? Let me provide an example as you suggested: # A common module with some default capabilities class CommonMod(ABC): def __init__(self, **kwargs): self.c1 = kwargs.get('a1') def default_foo(self): print(self.c1) @abstractmethod def common_foo1(self): pass @abstractmethod def common_foo2(self): pass # A module that might override some common mod + fill out some # abstract methods class ModuleA1(CommonMod): def __init__(self, **kwargs): super().__init__(**kwargs) self.a1 = kwargs.get('a1') def default_foo(self): print(self.a1) def common_foo1(self): print("A1's foo1") # Another module that fills out the rest of the abstract methods class ModuleB1(CommonMod): def __init__(self): super().__init__(**kwargs) self.c1 = kwargs.get('c1') def common_foo2(self): print("B1s foo2") # Goal I want to get too. To have a final class that uses combinations # of modules to make a complete class with no abstracts left class ConcreteD(ModuleA1, ModuleB1): pass The issue is that I don't always know what if any methods in common will need to be overridden when I add some new feature.
This is the correct response to this. Hosting and maintaining your own repo would be expensive. Donate even a small part of that to these guys. 
You did not explain what it does, or what Rich Presence is, and the link to https://nuclearthrone.com/streamkey/ is broken. :(
Every tool out there serves its own purpose, considering Firemon for monitoring firewalls, demisto and other ePO's seperately. Will this be a bad idea to integrate every tool into one with the help of API's?
I never thought of building this from scratch. Although implementing every tool that serves its own purpose into one crossed my mind.
Boss makes a dollar, I make a dime...
upip in micropython is still broken. But it is just because upip uses simple HTTP and do not checks for redirects. The project now just needs to alter the URL. https://github.com/micropython/micropython-lib/issues/274
&gt; Taskpacker is a generic schedule optimization and visualization library for Python.
thanks :)
Exactly! Much better to phrase it in terms of what you can do rather than talking yourself down to being "basic"
&gt; Beginning at 15:00:00 UTC, redirects were enabled from pypi.python.org to pypi.org **for all requests**. Thats the problem. Any large infrastructure change should ideally be a staggered rollout which you can monitor and fix as needed. 
&gt; Am I literally the only person who thinks such workflows are insane? 1. https://github.com/pypiserver/pypiserver 2. https://books.sonatype.com/nexus-book/3.0/reference/pypi.html tada, problem solved
You're very strange. If this library have only one problem - create proposal into issues section on github and then made your own pull request. If this library very bad than ignore this topic. This is open source. Actions speak louder than words.
No one make some proposal how it's must be named. No one create pull request. This is only words, no more. This is open source library. If it's good then improve. If it's bad then ignore. Internet is big. 
I thoroughly enjoyed this. 
You may find this useful. [salabim](https://github.com/salabim/salabim) The creator was recently interviewed on the podcast.__INIT__(‘python’) podcast.
No, the number of devs is not irrelevant, because many costs are per developer that are not their salary, such as insurances, taxes, office infrastructure and so on
Incident report: https://status.python.org/incidents/1y1f44q6srh2
because python 3 happened. Yes print should not be a statement, but for practical reasons it really should. To get back part of it, try use `%autocall 2` in python. 
it's simple to solve in python2. use `pprint.pprint`. 
I have used jsonschema and have no complaints. The best_match() function they provide is handy when you do have multiple errors. Haven't tried the other libraries.
`print 1` is more about pragmatic than correctness. typing p-r-i-n-t-shift-9-shit-shift-0 is just a fucking waste of time. 
That sounds like a lot of apps! What kind of Django application is this? I can't imagine something of that scale, but then again I'm very green.
Good luck... but this doesn't even look simpler.
Sadly, the receiver didn't come with a usable data sheet, for some oss reason. Only instructions for use. The settings are correct. We tested then with PuTTY on an old PC with a serial port.
Good catch! I didn't see that part. However, I'm still not sure on how to convert that to something usable. As mentioned above, the receiver should send the data in ASCII. 
You could say the same about every other function, why should print be any different? Ruby is _that_ way.
`print` just isn't special enough to deserve to be a statement, and is more useful and consistent as a function anyway (nice keyword arguments, can be used in higher-order ways) Most statements, including `return` and `yield` really couldn't be functions. `return` and `yield` are both context-sensitive and fundamental to how functions work. Some statements, like `import` and `assert` _could_ be functions, but just make more sense as statements (assert is probably debatable).
Is there Raspberry pi support as in it builds on Raspbian and is optimized enough for it to stream smoothly?
Yes, indeed. The wiki page even says that All transmitted data are printable ASCII characters between 0x20 (space) to 0x7e (~) However, .decode('ascii') fails time after time.
I've not tested it on rpi, but it should work on gnu/linux distro. It has been mainly developed on lxde/openbox based distro, and I think rpi uses lxde/openbox based desktop environment as default. And specifically, in debian jessie all the dependencies required for the project are available. Therefore, theoretically it should work on rpi without any hiccup.
The speed difference will probably be negligible. It's not a question of whether the big list will be parsed, it's a question of whether python's parser or the CSV parser handles it. From a code architecture standpoint, all those zip codes are data, not code. Therefore, it's better to keep them in a data file and read them on program load. It's not such a big deal in Python, but in a compiled language, it's much easier to swap out a data file than to rebuild a potentially large project if the data ever changes.
I am quite a fan of ruby's `p` function. Not the way it omits parentheses of functions though.
Would also like to know this
I don't realy get why this tutorial seems to advocate using the main ethereum blochchain instead of running a test blockchain with tools like [Ganache](http://truffleframework.com/ganache/).
Hey, Fabul0usLumin0us, just a quick heads-up: **realy** is actually spelled **really**. You can remember it by **two ls**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
delete
Try [ipaddress](https://docs.python.org/3/library/ipaddress.html). I have used it in the past just for this case and it's working fine. net = ipaddress.IPv4Network("1.2.0.0/16") num_addresses = net.num_addresses hosts = net.hosts() #return an iteraror with all the hosts 
[There's a module in the standard library for that](https://docs.python.org/3/library/ipaddress.html). &gt;&gt;&gt; import ipaddress &gt;&gt;&gt; network = ipaddress.ip_network('1.2.0.0/16') &gt;&gt;&gt; network.num_addresses 65536 &gt;&gt;&gt; network2 = ipaddress.ip_network('192.168.100.0/22') &gt;&gt;&gt; network2.num_addresses
Makes perfect sense. Thank you. So my thoughts here were/are: If I wanted to send the script (share) - keeping everything within the script reduces the volume of files to share. I guess that is inferior when weighing the risk reward of the greater matters at hand.
They did trials dating from (at least) a month ago. The people running this infra are far from noobs. I'm sure there's no obvious solution to any of the issues that came up.
When it comes to sockets and threads there is very little difference between python2 and python3. And the [socket docs](https://docs.python.org/3/library/socket.html) are pretty good. But I'd recommend asyncio for something like this. Although there will be a learning curve if you aren't familiar with the async / await syntax.
Thanks, that looks like the sort of thing I’m after. :)
Thanks, this one looks like a winner too. :)
Thanks, this looks like an interesting solution. :)
Im new into python too and didnt find any standarlized lib when I do my college stuff :/ upvote so someone can help
Awsome!!!! Thank you so much for replying really appreciate it. I will get stuck into researching what you mentioned. Fingers crossed it makes it a bit easier to grasp ahaha. 
Sweet, I'll check it out thanks!
I really don't understand why people keep posting this shit blog posts about things that the official documentation covers excellent. I guess they're trying to get an ״online presence", or whatever they call it, but for me it just reads like total noob bs. If someone did a nice project, implemented some useful tools or hacked python do nifty stuff I would be happy to read it. Those kind of article advance your knowledge and opens your mind to new idea and capabilities.
IMO, there is still much unknown (or rather disagreement) about software development practices. I don't know any course that will give you all the above, I'm in doubt you will find a course that will give you one of them. But, there are some leads you can follow: For work process I recommend to check the founders of the agile manifesto blogs and lectures (Uncle Bob, Martin Fowler, Kent Beck etc.) For coding convention and release process, check out some open source projects in various sizes and see what fit your needs.
I think for libraries people don't want to add dependencies beyond the basic tools so stick with setup.py etc, but for generic tasks in actual projects `fabric` is often used.
In my experience, most of these decisions were made long before you join any given team. And it makes some intuitive sense: you `git init` once but `git commit` thousands of times per project. I'm a fan of my team's "Git quickstart" tutorial if you want to set up version control both locally and on a shared host. https://aka.ms/gitquickstart (obvious disclosure, I work for Microsoft).
There are common tools for doing standard tasks, like `setup.py` for developing a library, or `manage.py` for developing a Django site. But as you found, there isn't really a standard thing for defining your own tasks like Rake. Some old-school people like to use Make, which is convenient on Unix systems and inconvenient on Windows. [doit](http://pydoit.org/) is an alternative written in Python, so it's cross platform, but I haven't seen many projects using it.
&gt; Is there any staple or standard I should be aiming to use? None is the chosen one. Pick one that you like.
In the past, I've used pyinstaller to compile Python to an exe, and it worked well. If you want to include the data in some XML files, I believe you'll need to move that data structure into the Python file itself - convert it into a dictionary, JSON object, etc. that exists inside of your application.
[marshmallow](https://marshmallow.readthedocs.io/en/latest/index.html), likely via [webargs](https://github.com/sloria/webargs) optionally export schema to frontend with [marshmallow-jsonschema](https://github.com/fuhrysteve/marshmallow-jsonschema/)
There's no single standard for these things, there's myriad git workflows, release management approaches, project management ideas, etc... You really have to adapt something to the project and team you're working with. If you're a solo developer working on hobby projects, a lot of that stuff is unnecessary overhead. If you're a student, that's the sort of thing where you learn when you get into a professional environment, and you'll begin to understand what works and what doesn't, and the factors that drive certain decisions. But git workflows, devops, continuous integration, test-driven development, the entire agile world of project management, and architectural principles like 12 factor all play a role in a palette to choose from.
No disclaimer? 
Flask-Bootstrap imports bootstrap 3 into your project so you are correct that this is different than the latest version of bootstrap. But you do not need to import Flask-Bootstrap into your project in order to use bootstrap itself. You can add script tags to your base template to load the latest version of bootstrap from your friendly neighborhood CDN. Then you can style your templates using the new version of Bootstrap you are more comfortable with.
Thank you for replying. I did check Bootstrap 3 tutorials and found it much similar to flask-bootstrap. Are they similar or flask-bootstrap is exactly the same as Bootstrap 3?
Hindsight is 20/20 eh?
I was sitting at my machine trying to do a fresh install of a project and it was giving me 503s. I thought I was going insane 
Might be able to do it with IMAP and forward to wherever you want to save them. You will probably have the whole email not just attachmenrts though. Are all the images the same format or from the same user? Any commonality?
https://gist.github.com/robulouski/7441883
Yeah, it’s a blog that sends a few “inspirational designs” regularly and I don’t want to save all of them, but it’s easier for me to save all of them and then filter out ones I don’t want since there are fewer than those. 
Yeah you should be able to just filter by their email and do so. https://gist.github.com/baali/2633554
That looks perfect, I should be able to adjust that to do what I need
http://www.obeythetestinggoat.com This is a really good book that teaches test driven development (TDD) which is a method of development where you will unit tests before you write your actual production code, basically the unit tests drive your development (thus the name). The book also teaches you how to use git and virtual environments. So it pretty much covers everything you mentioned. As a bonus, it also happens to teach you Django since that's the application your building throughout the book. It can be a little tedious with the whole test driven development approach but it is a really good practical introduction to all of those parts of development so even if you don't ever use TDD again you will still get a lot out of it.
Snakemake is becoming a standard for scientific workflows. It's really awesome.
I never understood that expression. What's this twenty twenty about?
Not impossible: they could easily make them look like functions if they wanted to. It would break language design and everything but in the end the code is just text and you can parse it however you like.
It means it’s easy to see/know the right answer to a decision after you see/know the outcome. “They should have done X”
Yeah I know what the expression is used for, but what does it mean? Like, what does "20/20" mean in this context? Is that like twenty points out of twenty as in a perfect score?
Me as well!! I was dealing with pipenv and some dependecy madness as I deployed to another test machine. Couldn't understand why I was able to install on Fedora but not on Ubuntu. Then realized I couldn't install on Fedora... `-v` ohhhh 503 errors. Maybe it's them not me. :) It was
20/20 is the perfect eye sight score basically.
Maybe you should explain us how is it better then Flask, Django and other existing web frameworks? What is the reason for a developer to reject existing tested and tried frameworks with well developed infrastructure (extensions, etc) and community and switch to something immature and (yet?) unpopular?
Very true. I actually get this question a a lot and halfway through writing an article about it. I'll be sure to finish it and send you a link!
Making them look like functions and making them functions isn't the same. You can already put parenthesis around your return value but return can never be an actual function. For example it makes no sense to use it as an argument to `map`.
I like Luigi by Spotify. 
Does this send a request to google and scrape the results?
I think that `invoke` is a more pure task type package. I'm pretty sure it's derived from the parts of fabric that dealt with tasks and leaves out all the remote execution stuff. I use it now instead of make.
Looks very verbose compared to R's ggplot, for example, no?
Yeah that was my super wordy way of saying I agree with the previous guy!
Okay :) I'm very new to web development. So I'm new with all the terminology lol.
See my edit for some example code
Instagram used Python for their backend, and I believe they still do. Their mobile apps are in Java (Android) and I believe Swift (iOS).
If your goal is to build a mobile app, you'll have to learn both, yes, or you can write your backend in Java or Swift as well.
But if i have some kind of website like a forum and i want a app to it a app so i can use my django backend for the app?
You can use the Django backend for anything you want, but you'll have to build the mobile app in a language like Java.
Thank you! You helped me a lot
You will want the Python package openpyxl for interfacing with Excel files. Others might have different packages that they use however I like openpyxl. You will want to look into file operations within Python, which largely means using the "with open()" statements. You want to understand Python's data types (string, int, float); data structures (lists, dictionaries, tuples); string slicing (string_variable[2:3]); list slicing (list_variable[2:]); for loops (also break, continue, pass); try/except blocks. Understanding these concepts, along with some sample project work to understand syntax, should give you a pretty general overview of the tools you will need to get off the ground.
If you're just learning, I'd focus on Python and Java. By the time you're looking into the job market, Apple will be [even less relevant](https://9to5mac.com/2016/08/18/android-ios-smartphone-market-share/) [than it is today](https://www.idc.com/promo/smartphone-market-share/os). Once you step outside the USA, iOS is basically nonexistent, and losing ground fast. Given another 3-5 years, they'll be Blackberry 2.0...
And rerun the code using the rebound command. Repeat until no compile errors.
Commonly known as the [ Eval-Rinse-Reload-And-Repeat](https://github.com/mattdiamond/fuckitjs) loop.
I’m working on learning Python! Learning from the Think Python book.
20/20 it's used to refer to perfect eyesight, it means that from 20 feet away you see as well as average person sees from 20 feet. I am not an optometrist, but I think those letter charts are displayed from 20 feet away and for example 20/40 sight means that from 20 feet you see as "well" as average person from 40 feet. Hindsight is 20/20, is a play on the word (since includes word sight in it) it means you have a perfect vision in hindsight (you know what the outcome will be as well), so making decision what's right is very easy as opposed to when things are actually happening and you don't see very well what your action will cause. The phrase is used to say that is trivial to comment after the fact what could be done, and is trying to remind that it was much harder to predict the outcome before it actually happens.
Interesting! I had a similar effort for uncaught exceptions: https://github.com/rahulnair23/pyRecommender
Can it automatically copy and paste the first answer from the first question into my file, recompile it, and if unit tests pass, commit it to SCM without any intervention from me? Asking for a friend. Who is retiring...
Newcomer here, but I've finally finished up my data collection on NBA historical data and am now working on creating a trending player webapp. I primarily come from a Java background so it's a nice little first project to learn some stuff. Looking forward to getting into it more tonight.
This is where I settled as well.
iOS developers make way more than Android Devs. 
Please see r/learnpython and r/learnprogramming
This post is better suited for r/learnpython 
You can use pyinstaller. It also allows you to include non python files, your xml.
Thats like.. a really good idea.
Sir, you are a hero.
Yes 
God bless
[Barely](http://www.businessofapps.com/guide/ios-android-developer-salary/). COBOL pays significantly better than either, but I wouldn't be recommending that any college students take that path since it's also a sinking ship. Sure, pay is better TODAY, but when you're looking at starting a career, you need to concern yourself with what things will be like in 5 or 10 years, too. iOS does not have a bright future.
Someday even programming will be automated.
Exactly! But... to be perfectly fair with the Perl example, the Python equivalent would be: `int(sys.stdin.readline()) &lt;&lt; 6` The obscure part in the Perl example is that `&lt;&gt;` means "read a line from standard input", which is much clearer in the Python world. The fact that `&lt;&lt; 6` instead of `* 64` was used was probably a case of premature optimisation, and is not Perl's fault (as you can do the same in Python), but rather the fault of whoever wrote that!
&gt; have them all implement ABC's and forward their calls explicitly. I am not entirely sure what this means? Do you mean something like this: class A(ABC): @abstractmethod def a_foo(self): pass @abstractmethod def b_foo(self): # Do some stuff class B(ABC): @abstractmethod def a_foo(self): # Do some stuff @abstractmethod def b_foo(self): pass class C(A, B): def a_foo(self): B.a_foo() def b_foo(self): A.b_foo() So in the final class I would just specifically call which parent's method I am using?
/u/turtle_with_dentures is just elaborating the reasoning behind all the flak you receive for deciding to use short variable names. You are of course correct when you say "If this library very bad than ignore this topic." But you should also be able to accept criticism. You are pretty much telling us: "I don't want any criticism" and simply use the age-old excuse: "Just do it yourself, it's open-source". From my perspective, I don't use Django so why would I create a pull request in the first place? I was just trying to give helpful insight and maybe help elaborate why so many people are saying that short names are bad, which is true for any project. Nothing more, nothing less.
I have never heard of mixins, it seems I was implementing something kind of like them without knowing what they were. I will look more into them, thanks for the suggestion!
You should google "sorting algorithms in python 3", then look at the first two links. The second one is everything already implemented, which can be useful to look at, but I definitely recommend you implement them from scratch yourself, and make a little suite of tests of things to sort. def broken_sort(unsorted): return unsorted def test1(sort_func): return sort_func([3,2,1]) == [1,2,3] print(f'Broken Sort Test 1: {test1(broken_sort)}') print(f'Python Sort Test 1: {test1(sorted)}') There's modules like pytest or nose to make a better test harness, but when I'm learning something simple like this I like to avoid dependencies until I understand how things are working. Make tests for things like reversed lists, already sorted lists, lists with strings, with numbers, with both strings and numbers, with negative and postive numbers, an empty list and so on. Once you have your test suite verified as working with both the built-in "sorted" and a broken_sort that does nothing to the list, then start implementing the different sorts yourself. When you've done that start adding timing so you can see how fast they are. Also, see /r/learnpython for more help. They're really friendly.
That looks quite neat, I'll have to remember to check it out in detail next time I swing around to a project of mine that could sorely do with it.
VERY Slick... NICE!
But insert the date of answer so user can identify how appropriate it is. Good work though!
This is a great idea. Actually disappointed I didn't think of this myself!
Is there any way to integrate this to a jupyter notebook?
I'm surprised no one has linked the, as always, relevant xkcd (check out the title text) [XKCD](https://xkcd.com/1185)
- grab the stack trace as text - text splice for each module name (should be easy to do because of the standard formatting) - compare names of modules found with the names of modules installed or imported to find the correct level (ie. the name of the library, not the library's class) - profit I'll poke around for some documentation and if I find some time I might even make a PR.
I recommend cx_Freeze which is much more advanced than pyinstaller. Then you could use a tool like inno to make a professional-looking installer (the msi you can make with cx_Freeze is a bit basic)
You want a competent human for spotting mistakes and fine-tuning things. And it's more than possible, it's already happening to some degree: https://blog.floydhub.com/turning-design-mockups-into-code-with-deep-learning/
Go for it! I already have some code written for pulling the names of imported modules from a file, so lmk if you need that.
/r/coolgithubprojects
[removed]
Amazing! Exactly what I need. Thank you so much :)
That's why we were wondering if you had the settings right. To clarify your other comment: &gt;We tested then with PuTTY on an old PC with a serial port. Does this mean you were able to see the actual `!AIVDM...` data being sent? 
Except cobol requires experience. There’s no such thing as entry level cobol. Saying that iOS doesn’t have a future when organizations prioritize iOS over android is hilariously misguided and is a sign that you are on too many Internet forums. 
A god among men
fuckit is perhaps the most amazing library ever conceived.
Agreed - I'm a big fan of Nuclear Throne, and I have an idea of what this probably does (I'm not great at reading python yet), but some screenshots of what it does on the GitHub page would be great!
If you're dead-set on writing client-side code that runs in the browser in Python, there's Transcrypt. It's python, the language, but a huge amount of the standard library is missing. There be dragons. I'd recommend making a desktop app instead. Kivy is nice, as is PySide2.
How does your code handle Python OS system commands? Would it ask for user input before I ran os.system ("some_commands with args")?
I love this, but now I'm hungry and want Chipotle 
Wow this is gold! Could you briefly advice me how can I get the underlying skills for building such a functionality? Thanks!
Desktop app isn't complex enough to to get a good grade + our teacher advised us against using kivy because one student was marked down by the examiners for using kivy for some reason... I did look at pyjs (formaly pyjamas) which seems like the only option for now 
Server side, and then I was thinking of using something like pyjs for client side 
Desktop apps can be as complex as you want them to be. Use Python in the browser at your peril.
This is all at once hilarious and complete mad genius!! Good on you sir!
This idea got 2nd place in 2017 Techcrunch Hackathon by someone else: https://beta.techcrunch.com/2017/05/14/codecorrect-disruptny-hackathon/ I have thought about things like this, but unfortunately did not find it useful in the end. I did make something related: you give some input and expected output, and let the module find the function (considering some module or global namespace) to satisfy: https://github.com/kootenpv/cant
Thats a great book!
I know it was ridiculous. Was just trying to make a point really. Other languages (ala perl) have more verbose ways of doing things, but when people don't use the verbose method it can cause unintended code obfuscation. Which is especially difficult for someone new to the codebase or new to that language (ala perl) in general. The fact that there are so few "insanely useful single character functions" or "single character representation of powerful data structure" is why I like python. For example, as a newcomer seeing things like `$_` or `$@` would be confusing to see in some perl code. But with Python, for the most part, everything is pretty much plain and easy to read. Even things that are sometimes difficult to follow in other languages, even when you know what they are, are easy to follow in Python. I think my favorite example of this is the ternary operator that most languages have. Seeing this example `$value = $value &lt;= $MAX_LIMIT ? $value : $MAX_LIMIT;` pulled from the [first google result for perl ternary operator](https://perlmaven.com/the-ternary-operator-in-perl) in perl still makes me stop for a second to figure it out. Where that same line in python is `value = value if value &lt;= max_limit else max_limit` reads exactly like a human reading a sentence would say it. I do get a little peeved that there are some non-obvious things in Python that I wish would go away. Then again they are kinda working on it. Seeing `'%g'%f` isn't obvious at all. But `"{:g}".format(i)` while still a little cryptic, is much clearer in what's happening. So even non-obvious stuff is getting future versions that are easier to read and are more intuitive. Even the most recent change that some people are complaining about where they are making dicts ordered by default. That's something that is intuitive to new programmers. I do hope one day for something more obvious for the unpacking operators though. Seeing `print(*my_list)` and having to mentally unpack the list to know what's going on isn't the clearest thing in the world. Even though it's a very powerful feature.
Finally.. an idea for a useful bot :) Why did you avoid SQL? Its pretty much necessary in data-oriented files.. which it seems like you are in (by your mention of opencv, nltk) Do you find going through tutorials useful? Typically I tend to avoid going through books/tutorials (even though I know a lot of people do go through them here).. because these books/tutorials contain a lot of fluff which are not really that useful for the projects, I work on. So I found that I ended up wasting a lot of time. Rather, I find it quicker to talk to people, and helping out other people on similar problems and figure it out that way.
I know the Flask-Bootstrap module is more than just a simple integration, it also does things like automatic form generation rather than having to break it out manually in the HTML template file. I wonder if this is something easily replicable in Flask itself though.
You don't need numpy neither, you can do all the numerical computation with C.
Hi wants to learn c?
And then one day bot programmers will post on bot forums while "its rendering" about other bot programmers who are terrible at searching, splicing, compiling, and committing. The future will be forced to repeat the past
Dam you're hot 
Working on an app that uses pillow and pandas to generate an image of a grid inside a circle. Using wxPython for a GUI. Still needs a lot of polish but I'm pretty happy with it so far. [My Repo!](https://github.com/Caleb68864/Scope-Cap-Chart-Generator)
This reminds me of how some time ago I've made a python library that would catch all unknown function names and find a function with the corresponding name on the internet and run it instead. I was surprised that it actually worked for stuff like sin, sqrt, factorial, ... .
It's ok, someone will have to maintain the automation. 
There is such a thing as too much reliance on stack overflow. If you’re learning a language, fine. Compiler error messages are written in English and are something that you can understand over time without needing stackoverflow to translate for you.
It already works for Node.js :)
That just leaves the world for QA then... 
I appreciate it!
I will take the downvotes as a no ;)
Until the QA is automated. But who QAs the QA automation? More QA software. It’s like the space shuttle computers coming to consensus. 
In the original solution, in line you have "rain == input()". The double equal sign is a comparison and an assignation. If you change it to "rain = input()", it works.
Is the network share mounted? Why not just import the version from a variable inside the script?
Right, so a clusterfuck. I think we agree :-P.
This post is better suited for r/learnpython 
This post is better suited for r/learnpython 
I'm afraid of what this information will reveal about me.
Correct. The data was plain ASCII, starting with !AIVDM. But there definitely is something strange going on. I'll set up an Arduino and have it send some sample data, so I can verify whether there is an issue on the pi or not.
Remember what Socrates said about the unexamined life
Nothing exists that does this.
Oh shoot! Sorry for the spam! Posted in the wrong place :(
Try to downgrade selenium, I have troubles with selenium 3.11 last gecko and last firefox
Thank you!
When does this get integrated into ides?
I recommend continuing with your 2013 book. If you understand it then you'll have no problem writing in 3.6. Once you've read your book you could get an app like sololearn and take their short python course which will teach you the small syntactical differences between Python 2 and 3
Read the sidebar
Code[ import smtplib def sendmail(from_, to_, subject, message, login, password, smtpserver): """Sending mails via gmail.""" header = 'From: %s \n' % from_ header += 'To: %s \n' % ', '.join(to_) header += 'Subject: %s \n \n' % subject message = header + message server = smtplib.SMTP(smtpserver) server.starttls() server.login(login, password) problems = server.sendmail(from_, to_, message) server.quit() return problems ] With gmail you have to give permission for third party access. Also according to this party you have to set up the password arg in your gmail account. 
Only if your boss found out.
Thank you, sorry I'm on mobile and it does let me access the side bar from this phone, ill have to look it up when I get on my of at home
[This techcrunch link](https://techcrunch.com/2018/01/05/app-revenue-climbed-35-percent-to-60-billion-in-2017/) which matches with [this androidauthority link](https://www.androidauthority.com/2016-recap-90-percent-google-play-revenue-gaming-fun-stats-743626/) says that the IOS app store has more total cash flowing into it than the Android one, which is the only metric that really matters. 
No time of day?
Just what we want, popularity rule. Just look at Trending on Youtube to see how well that works. ;)
&gt;more total cash flowing into it than the Android one, which is the only metric that really matters. No it's not. How many independent devs strike it rich on each platform? Not too many. I'd be far more concerned with which platform will get me a job with an employer. Android has 2-3x the app downloads, and when an employer is hiring devs to work on an app that's never going to make a cent in "app store revenue", and instead push consumers toward whatever product that company sells, they are going to be concerned with the most popular platform first. More app downloads = more eyeballs = more purchases/uses of whatever physical product they're supporting. That's why they're next to no difference in pay for full-time, company-employed devs. Plus Java is used in a ton of other situations, and has a ton of other jobs available for devs. Swift? Yeah, nothing other than iOS apps.
Humble Bundle runs frequent book bundles that deal with coding and a great deal on python actually. I have bought a few and would reccomend it. just keep an eye out for them, they revolve bundles about every 2 weeks.
Fuck(it), I complete forgot about this.
Yes it does. Google the name of your mobile app + sidebar
Yep, at the bottom of the fuckit.py github: &gt; This module is inspired by Matt Diamond's FuckIt.js. 
read the sidebar and post this in the right subreddit
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Thanks
I'd suggest Brython. ( http://brython.info/index.html ) It's pretty full-featured, but the docs are, uhhhh, "limited". (By "limited" I mean that out of a full site of content, there are very few complete examples. Most of the code examples are just the python, which doesn't work without the supporting html.)
I'm going to assume that it is only included in their Enterprise offering because... Microsoft and Enterprise.
I’m limited to the data accessible in the Mint export, time of day unfortunately isn’t. 
If there's next to no difference then why carry such a torch? If there a graph of developer demand per platform over time? Besides, if you learn one then the other one isn't hard to pick up so who cares? And if I was making an app I'd make it in kotlin anyway since it's so much nicer (imo) than java. Bare functions are nice to have
It's a joke, right? You're not actually encouraging anyone to work like this?
There are libraries like React Native (Javascript) that allow you to for the most part develop both with one code base. 
Nice, I was thinking of doing the same but never had the motivation to. *Clap clap*
You make me miss my mom....
f---ing genius
Reading/ doing the problems from Data Structures and Algorithms in Python by Goodrich
Yep, looking into that as well as a release version (frozen for non-devs) once I add some more functionality, ty!
Thanks.
I've used ImageHash to find dupes in my photo library. It works great and also do approx matches but I have tried that https://github.com/JohannesBuchner/imagehash 
I've seen it on my pc now (my phone just doesn't show me anything I've already tried its just blank for me) I'm sorry you had to point out something so obvious but if you didn't know about anything other than what the sidebar says why bother responding, I've had a few pms helping me towards the right direction and that's all I wanted 
If you're interested in a light-weight approx image matching module, I'd look at ImageHash which I've used to find dupes in my photo library. The stringified hash is a miniscule 14 characters. https://github.com/JohannesBuchner/imagehash. But I think you're referring to how to scale up comparisons to do it in real-time? Maybe ImageHash is fast enough 
Thank you! I love humble bundle but I had no idea they ran deals like that, I usually onky hear about game deals from my friends
curious, what did you use for your data source?
I agree it’s not the end of the world. It’s not even a big deal, just a small blemish. I think you can see though that most if any excitement around this is from the masses who were burnt by unordered dicts and had to dig up that buried body. 
I agree it’s not the end of the world. It’s not even a big deal, just a small blemish. I think you can see though that most if any excitement around this is from the masses who were burnt by unordered dicts and had to dig up that buried body. It’s just sadly not meant to be. Some bells can’t be unrung. 
*Why has no one thought of this before?!*
I agree it’s not the end of the world. It’s not even a big deal, just a small blemish. I think you can see though that most if any excitement around this is from the masses who were burnt by unordered dicts and had to dig up that buried body. It’s just sadly not meant to be. Some bells can’t be unrung. 
Getting ready to comb through a set I downloaded from Kaggle against some Basketball Reference data. Out and about right now, but I'll try to reply later tonight with another source for daily data if you're interested. NBA also provides public endpoints for some information
https://twitter.com/llanga/status/986381413455806464
Trying to get better at GUI and Threading. Currently making a program to download youtube videos. I have the main interface working, just stuck on how to make a working process bar. For some reason, Threading and Multiprocessing are really hard processes for me to grasp.
And really you can ditch C and do the whole thing in Assembly.
The top answer is often "this question has been locked because arbitrary moderation makes us happy".
In March.
Yeah, they actually had one that was all Python books from Packt. Which is also a good resource for Coding books and a lot more.
The problem with this article is that it doesn't show off the real reason for using plotly, which is to make interactive D3.js graphs in python, R and others. You can embed the html code created \(odd that the article doesn't do that\) in websites and/or dashboards to share with others. For R, i think the plotly library has a simple converter that will take your ggplot chart and make it interactive. Something as simple as newplot \&lt;\- ggplotly\(plot\) but I think it is less efficient than writing your own code. It is definitely verbose but there is a metric ton of customization \(as an ex., a drop\-down menu that will change the plot based on selection\). One aspect of plotly that isn't v. clear \(atleast for python\) is that you don't need to make an account at [plot.ly](https://plot.ly) \(the company\) to host the charts and that there is an offline version of its plot command. \(I don't know how it works for R\). 
Not All Heroes Wear capes.
[Finally got around to testing it](https://i.imgur.com/mNy5f95.png). Appears that you are still mistaken.
Thanks this is news to me. Seems like a lot of work though, writing a whole import statement.
Wow, TIL. Thanks for sharing.
People will still fight over who owns the wealth of production
Thank you I shot you a message! 
Okay I'll look into async thank you! 
You don't even need Assembly, you can just plot that bitch by hand!
I've been meaning to set up zulip at work. Need to get around to it.
I had no idea pypi.python.org was getting deprecated! :| I wish there was some command line warning in the last version of pip at least. Had a major panic thinking our company proxy had created problems again.
What are your goals? Data science? General programming? Web stuff? Your desires should drive the resources you choose. I'm a data scientist and I recommend the datacamp courses as well as the O'Reily book: python for data analysis (and the other O'Reilly books, they're pretty solid).
One thing that I alway find that helps me learn a new language is to take on a project. For me, I always have learned best by doing so a project is the best tool for to learn. I would recommend a medium sized project because if it's too small you don't learn anything and a large one could just get yoh overwhelmed. Some example projects I should recommend: - make an API for a to-do app with Flask (simpler) or Django - Use PyQt or just ASCII graphics to make a tic tac toe game - small text adventure game 
I don’t think I have a path I would want to follow. I’m beginner I’m open to the different paths. My goal is to be able to make useful websites or tools that would be able to make a company or an individuals task simpler and quicker. Thanks for the advice it’s much appreciated and will look at the course and the O’Reilly books. 
Or you could build the backend in node and the front end in react native and only write JavaScript (doesn’t sound fun) but there are options to avoid java/kotlin for android and Swift/objC for iPhone
Yes I feel the same why, the best way I learn is by doing. I like the sound of making a to-do app. Could you point me in the right direction to start off? 
I'm torn between "maybe I can deploy this and we will finally stop using 18 different chat systems" and "if i put this up, we're just going to have 19 different chat systems".
I personally would use Flask as I find it easier compared to Django. There is an extension for Flask called Flask-restful that makes creating REST API's easier. Finally I would use sqlite for the database side of things as it's simpler than setting up something like a MySQL. [Flask docs](http://flask.pocoo.org) [Flask-restful docs](http://flask-restful.readthedocs.io/en/latest/quickstart.html) From a simple search on Google it looks like there is a tutorial for creating a to-do app on flask on YouTube but I can't attest to the quality of it :)
youtube, instagram, pinterest all use python (even django)
You might want to put a disclaimer just in case some dumb program raises an exception with an API key or secret key or something, like maybe someone's exception might debug dump the django.conf.settings, which would show your DB password and such, which you'd be searching for on stackoverflow, inevitably going in *some* database
I have already installed Django on my Mac. I did some reading and I thought that was the best framework to use with python. Do you think I should change it? Thanks for the help :) 
[pdb](https://docs.python.org/3/library/pdb.html) is so much better, but you don't need to use it as a command-line interface... this also works as a breakpoint anywhere in your code: import pdb; pdb.set_trace() pass # ya, this is necessary; pdb doesn't always break in the correct spot - especially at the end of for loops and return statements And [Python 3.7 will add `breakpoint()`](https://www.python.org/dev/peps/pep-0553/) which is essentially the statements above.
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://docs.python.org/3/library/pdb.html) - Previous text "pdb" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
I really dislike this bot.
Please post /bin/time results.
Thanks!
It's very unclear from your screenshot what you are testing or what you expected the result to be. I took the code I linked to in my comment above, and then (in python2.7) ran: d = Dict() d[1] = 'a' d[2] = 'b' d[3] = 'c' print(d.keys()) del d[1] print(d.keys()) The result was: [1, 2, 3] [3, 2] which shows that deletions do not preserve key order with that implementation. However, if you look elsewhere in the comments you'll see another commentator already explained (with links) what the actual dictionary implementation does differently from the talk that allows it to preserve key order under deletions.
Can I pm you my code to have a look please, I did achieve some level of results but they are incorrect
Sure. Others could be interested to see it too if you're not keeping it closed.
Just worried about posting it online, its a uni project and I don't know how plagiarism works for code haha
Sounds like you need IRC.
Even better, hammer and chisel on a stone tablet.
Coming soon: metamodules.
It returns an array of frequencies because it's using welching to average the data. The noverlap and nfft will affect the frequencies that are returned. &gt; Most importantly, how am I supposed to control this in an inverse? You're not supposed to be directly controlling it. Yes, you can mess with the parameters that affect it, and to some extent you need to, but really you're trying to average out noise in your signal. &gt; Secondly, from curiosity, how does it correctly invert it's own forward transform without this being specified? Again, it's averaging, so you don't.
&gt; You're not supposed to be Bummer, that means I need a different library, or to write it myself. Thanks for the answer. 
Yeah sounds good am open to any help. You never know what someone can teach you. Even if you know a lot someone who doesn’t still might be able to show you something. 
20 different chat systems!
I think string formatting is a particularly hard challenge. I also don't think that the percent-formatting will go away any time soon. Even though it might look arcane to the beginner, it is still a concept which perpetuates many languages. And once you add a bit more formatting to the `format` string, it gets especially hairy. I never know where to put the colon, where to put the exclamation mark, ... &gt; Even the most recent change that some people are complaining about [...] People are complaining about that? ....... why?!? As far as I recall, R. Hettinger demonstrated that it does not incur any speed or memory penalty. So it's a net gain all across the board. My only (minor) gripe is that people moving from Python to other languages which *don't* guarantee ordered dicts will get bitten sooner or later.
Interesting one. I'm currently working on an application where I will have a Go server but want to use Python for some numeric / scientific computing. I planned to do this using gRPC (i.e. calling Python functions via RPC), but this might be another option worth considering.
No, not that I know of. I don't plan on adding support for lower level languages since searching "SEGFAULT" on Stack Overflow isn't going to help anyone.
Collaborate with [stackoverflow-import](https://github.com/drathier/stack-overflow-import), a lot of the work is already done there :)
Thanks, that makes a lot more sense!
That's completely untrue :) There are tons of entry-level COBOL jobs. It's probably easier to get an entry-level COBOL job than any other programming language... well, maybe not JavaScript. While banks / funds etc. certainly are looking into updating their inventory, they are very slow to update. Unlike mass-produced fashion-driven junk s.a. mobile apps, they are unphased by latest fashion trends. So, if you asked me for a prognosis, I'd say that ten years from now, nobody would probably remember Facebook's React, but Mainframe COBOL jobs will still be out there.
I was so wrapped up in doing the whole thing in python that I didn't even consider using HTML and JavaScript I will have better support. Thank you very much for your help : )
I don't think you understand how welching works. If I tell you I am going to smooth a time domain signal by averaging the 3 closest y pairs and then moving to the next 3, there is a loss of control about what the new time will be. If you want specific frequencies, just interpolate on that signal. It's an average anyways. However, now you need to decide if you're going to allow overshooting the y values because you're doing a spline interpolation metgod 
Sounds like you need Matrix bridging.
From the point of view of an "old asm" programmer the current breed of high level languages is "automated" programming. Or even magic if you want to look at it this way. There always be a need for a programmer, the tools will differ.
Well then I'll admit it's kinda ugly to look at, but at least it's not a stock photo of some bash or JavaScript.
/r/learnpython 
/r/learnpython 
https://marketnews.usda.gov/mnp/fv-report-config-step3?commodityClass=allcommodity&amp;locChoose=location&amp;startIndex=1&amp;rowDisplayMax=25&amp;type=termPrice&amp;locName=ATLANTA&amp;locAbr=AJ&amp;repTypeChanger=termPriceDaily&amp;repType=termPriceDaily&amp;_commAbrfrom=1&amp;commAbr=&amp;_commAbr=1&amp;locAbrPass=ALL%7C%7C&amp;locAbrlength=1&amp;step3date=true&amp;step3=Go
Ty
That’s a management mistake for even allowing this.
are the standards really that low for learning book covers? At least it's not &lt;some_other_language&gt; :D
Don't do this. Use Java, unless you want your app to work like a dinosaur from 2010
It's not as sudden. Python is just very convenient for developers and it's improving very fast, staying comprehensive and easy to use.
Location: Guildford, Surrey, United Kingdom Role: Senior Software Developer/Architect (Python) SALARY: £55-75k + Stock Options This is a genuinely exciting opportunity to join a fast-paced, well-funded, early stage software company who are revolutionising the way companies across an entire global industry engage digitally with their consumers. They already have an impressive portfolio of clients in the UK, US and Asia, and have just secured considerable investment to further expansion. For more details, get in touch via mgrimes@tech-res.co.uk (Mackenzie Grimes) or see our full job advertisement on: https://www.linkedin.com/jobs/view/597900329/ ((Technology Resourcing is acting as an Employment Agency in relation to this vacancy.))
Thank you for the responses. I totally missed the option to download a custom report! I feel rather foolish, you helped immensely.🙂
or HTML 😱
Does that work decent on similar images? I won't be using duplicates in my case, so I need to be able to match on similarity. So far I can take a nice comparison with SIFT, but it's barely fast enough with 200 images, so I'm looking at a way to lower the number of images I check against. Maybe take an average color sample? I don't know yet, but some kind of qualifier to make it to round two where I do the deeper comparison. Speed is a big concern for me though, I have a source image database of probably 30,000+ source images. lol I can cache some of this data, but that still only saves me so much time.
I pretty much mean the opposite: import abc class Reader(abc.ABC): @abc.abstractmethod def read(self): raise NotImplementedError class Writer(abc.ABC): @abc.abstractmethod def write(self, value): raise NotImplementedError class StdioReader(Reader): def read(self): return input() class FileReader(Reader): def __init__(self, path): super().__init__() self.path = path def read(self): with open(self.path, 'r') as f: return f.read() class StdioWriter(Writer): def write(self, value): print(value) class FileWriter(Writer): def __init__(self, path): super().__init__() self.path = path def write(self, value): with open(self.path, 'w') as f: f.write(value) class Doubler(abc.ABC): @abc.abstractmethod def double(self): raise NotImplementedError class ComposedDoubler(Doubler): def __init__(self, reader, writer): super().__init__() self.reader = reader self.writer = writer def double(self): value = self.reader.read() value *= 2 self.writer.write(value) doubler: Doubler = ComposedDoubler(StdioReader(), StdioWriter()) doubler.double() class StdioInheritedDoubler(ComposedDoubler, StdioReader, StdioWriter): def __init__(self): super().__init__(self, self) doubler = StdioInheritedDoubler() doubler.double() The inherited impl can be considered a special case of the composed impl where all of its dependencies are itself. In reality python is poorly equipped to handle the internal clashes you pointed out - its only tool is clumsy dunder mangling, but even that can't fix the problem of init arguments. The main workaround for that is kwargs forwarding which is similarly clumsy and leaky as each class has to be careful not to clash its arg names with other impls: class ComposedDoubler(Doubler): def __init__(self, reader, writer, **kwargs): super().__init__(**kwargs) self.reader = reader self.writer = writer def double(self): value = self.reader.read() value *= 2 self.writer.write(value) class FileReader(Reader): def __init__(self, read_path, **kwargs): super().__init__(**kwargs) self.read_path = read_path def read(self): with open(self.read_path, 'r') as f: return f.read() class FileWriter(Writer): def __init__(self, write_path, **kwargs): super().__init__(**kwargs) self.write_path = write_path def write(self, value): with open(self.write_path, 'w') as f: f.write(value) class FileInheritedDoubler(ComposedDoubler, FileReader, FileWriter): def __init__(self, **kwargs): super().__init__(self, self, **kwargs) doubler = FileInheritedDoubler(read_path='in', write_path='out') doubler.double() On top of being.. gross.. and not easily inspectable (as **kwargs is opaque) you continue to run the risk of the interfaces themselves clashing in method names. There are languages with more sophisticated context-sensitive mechanisms that can deal with this situation better (see scala's cake-pattern), but python is intentionally simpler and prefers the explicit approach of composition. A notable void to this approach in python as it scales to increasingly expansive object graphs is the lack of a standard dependency injection system but that's somewhat mitigated by the language's runtime dynamism (and I suspect type annotations will alter the landscape in the future). Even without it you can push manual graph construction pretty damn far. This is obviously a contrived example, were these actually just single-method interfaces I'd probably pass the callables directly, but it illustrates what I mean. To the "don't write java in python" crowd: move along.
This articles feels like it was forced to be written
Haven't heard anything about that other book.
thanks mate!
I'll save you a link click: "the answer is - don't"
It looks pretty bad. No docstrings, camel case variables, a while loop that could be replaced with a for loop and comparisons to 0. They should have run this through pylint or flake8. 
The problem in your snippet is that you're passing a dict to json.loads. json.loads decodes json to dict, so it redundant and wrong. [read the docs](https://docs.python.org/3/library/json.html) 
It also has some excellent libraries like Django, Flask, Requests, Pandas, and much more. It's a flexible and easy language that grows with you.
Sounds great! When you check it out please open any issues on how we can make it better. The next release (1.6) will be primarily about polishing the framework and improving developer happiness which will release in mid May 
The way I see it Python had neither the convenience of PHP nor the hype of Ruby, but instead focused on "doing things right" and improving with steady pace. It worked! 
What exactly are you trying to use the STFT for? There may be simpler ways to do what you want.
It's not much, but I have bigger plans! :)
The I wrote, Stats4R, uses the following libraries / tools: * Requests and Beautiful Soup for Web Scraping * SQLite for datasets * Matplotlib for creating the visualizations * Bootstrap 4 for a quick and presentable web layout **The inspiration behind this project was my mostly fruitless trysts with r/r4r.** The open-source program **allows anyone to obtain a dataset from r/r4r , analyse and visualize it**, and I would love it if you gave it a go. Critical feedback, suggestions to further enrich the program and general discussion related to Web Scraping, Data Analysis and Natural Language Processing are most welcome. https://github.com/sharmaeshaan/Stats4R Also, if the project appeals to you -- what do you like? what do you dislike? what would you like added? would you like to be involved? I'd love a dialogue on it :) *P.S.: I'm thinking the next step in this could be to run NLP algorithms on the content inside the posts.. what do you think?*
for websites, you'll need much more than just python it's a good idea to get good at making CLI things first, after that look into websites and GUI apps
Hiring Remote Senior Django Developer at Straits Interactive Our company is at the forefront of building tools that help companies manage the personal data they hold and transact with on a daily basis. We are looking for a developer who understands the latest technologies and is able to run with it. Blockchain, AI / ML are some of the things we are considering and have ready customers. See more and Apply from https://djangojobs.net/jobs/765/remote-senior-django-developer-straits-interactive/ 
Yes I understand I will need more skills than python. Can you point me in the right direction for making CLI stuff? Thanks for the help. 
This week I uploaded to Github a program that shows you vital stats of Reddit's most popular online dating sub, r/r4r It primarily uses Requests, Beautiful Soup, SQLite and Matplotlib to crawl, scrape, analyze and visualize r/r4r I am now looking into adding an NLP feature to it which will analyze the content inside the posts. I would love to know what you think about it :) https://github.com/sharmaeshaan/Stats4R
No need to scrape html, you can use [praw](http://praw.readthedocs.io/)?
u/xr09 Honestly I did look into Praw before starting the project, but I guess I just wanted to get going asap and was comfortable using Beautiful Soup. However, I do agree with you that Praw is the more sensible choice. I'll take some time to go through how it works, and create another branch which uses the Praw API instead of scraping HTML. I appreciate the suggestion :) 
From `python -h`: `-i : inspect interactively after running script; forces a prompt even if stdin does not appear to be a terminal; also PYTHONINSPECT=x `
u/xr90 Can you post a link to your bot? Sounds interesting and I'd like to check it out. Thanks for the videos -- bookmarked!
Sure, give me 5min to upload it to github, it's one of those quick'n'dirty projects you never publish.. hehe
Any reason you don't want to use Visual Studio's integrated Python support? Sounds perfect for you.
Needs comments
Pycharm is good
This is just a reddit meme. No institution is going to take chances with an unproven dev like that. 
I doubt the person who write these books design the covers. In fact I bet if a programmer type were to design a book cover it would probably be worse. I don't personally care to much about the cover, I care more about the content of the book tbh.
it's not about the design itself, it is about the message it sends. If you see a book about programming in python, and the cover has horrible style python code on it - wouldn't you think that same style code will be found in the book?
Had to tweak a few details before uploading. It's using praw for reddit and telepot for telegram. https://github.com/xr09/reddit-to-telegram-bot 
That's awesome! I think the repo is set to private though?
u/xr09 Just going through it now -- I like the way you've structured your scripts. I'm sure it must be a breeze to maintain with everything being functional. Also I loved the `pipfile` -- does it install the required packages? If yes, I should definitely write one of those for my project too. But man if this is what you call " one of those quick'n'dirty projects you never publish" I wonder how well structured your properly published projects must be! :D
Thanks a lot! It’s much appreciated for the detail you went to. I will look into that and I hope i can put it to use. 
The book from Ernesti and Kaiser has been one the worst books ever on python. I don't know what might have changed since the edition for python 3. The former had tons of unpythonic idioms and anti patterns inside.
It's a start! I've learnt this myself and used it to actually grab job specs and sorry them from a site that lists full stack jobs/contracts. I don't have to see the site anymore, and I can sort the jobs exactly how I want (the original doesn't let you do anything). But I do pop back and click his ads in support.
This post is better suited for r/learnpython 
This post is better suited for r/learnpython 
I have removed this post as it is aimed at beginners 
Thanks! Yep, after everything is set up this is nice to play with, although the telegram api gets moody sometimes. I try to structure code the best I can, simplicity first, "Simple is better than complex". To be honest I did a quick cleanup before publishing, the current deployed version is a little messier. ;) The pipfile is for [pipenv](https://docs.pipenv.org/), it helps with a nicer workflow than raw virtualenv+pip+requirements.txt, but in the end it's just another level of abstraction.
I agree. If you plan on integrating with a C# project then why not do it all in VS?
Agora é só colocar os acestreams links em frente :)
Also the 2 space indentation, no whitespace between method definitions, whitespace after an opening (, the horrendous line continuation for the string printing/formatting, variable naming inconsistency (einauslock and EinAusLock?), camel case vars, vars starting with uppercase, ... If somebody took PEP 8 and tried to cram as much DONT'S into a piece of code as possible then it would look something like this.
thanks mate, btw how can i post after putting it in pastebin?
Also, it's inclusion as a scripting language in things like Blender or ArcGIS or QGis make it very much a thing you could add value to just by knowing python.
I am using this book, as well. Highly recommended!
Oops! Fixed, thank you.
I tested a bit more today. I hooked up an Arduino and made it send some sample data via serial. That worked fine, by all accounts. Even had it send with the same baud rate as the radio receiver uses. The strange thing is that there definitely is some kind of structure to the data the receiver sends. I simply cannot figure out what, For instance, there are a lot of \x in there. The specs say it has to transmit ASCII, but that is not the case here. Even stranger, this works fine when hooked up to an old PC with serial and PuTTY. I'm still open to suggestions regarding this, so please, come with them.
Data science, machine learning. The entire NumPy ecosystem. There are plenty of other uses that keep growing but this one has made major contributions in recent years. 
Please don't use streamable... They showed me some kind of fucked up ad with a picture of a dying child.
You know Jupyter is popular for data science; here is the IPython kernel for C# which may help in testing your porting to Python. https://github.com/zabirauf/icsharp
Absolutely agree, Python makes data manipulation so easy and intuitive and the libraries available are well maintained, the documentation is neat, and are generally highly efficient. Compare this to trying to work with a library in Java or C++ and it's just so much more sluggish. 
"Sudden boom" yet article provides no data on adoption or usage. [Here's an article from stackoverflow](https://stackoverflow.blog/2017/09/14/python-growing-quickly/) which goes into much more detail with data to back it up, and shows a strong and almost-linear growth of python since 2014. That's the opposite of a "sudden boom"
Next step, automate the ad clicking! 
Agreed. Python as grown over the years to be mature language with robust libraries and framework. I always contrast it to javascript, which I use and love, but can't stand the toxic community around it with all the bs framework wars and need of every member of the community to reinvent the wheel and release yet another flawed npm module.
Nice article thx!
You don't need to run your data through any further json decoding, you can just work with it as is. https://www.screencast.com/t/umQ4dXjqb Also, it looks like there's a python package for the google speech api that you might want to look into in the future. I wrote a parser for the geocoding api before I realized there was a package; ended up being a lot easier to use the package. https://pypi.org/project/google-cloud-speech/
That's awesome!
holy fuckin shit. this is amazing. thank you so much
&gt; I don't think you understand how welching works. True, but I just read the wikipedia article and it doesn't seem related to the question. I'm not trying to accurately reproduce the original signal, I was going to intentionally change the mapping from bins to frequencies, which the library appears to simply not support. That's fine, I can make a workaround. 
What is ipython.embed()?
Working on beefing up our end-to-end test system with a tiny prototype for generative topologies (our system is a distributed, stateful stream processor). We have _a lot_ of tests defined for specific topological layouts, and it would be both neater and easier to maintain if they could be generated combinatorially in single test-generator-runner rather than explicitly in an individual test for each combination. Once the full generative testing infrastructure is in place, we would be able to run more tests, and more complex tests, and see what comes falling down and needs fixing. 
Numba is amazing. So easy to get performance comparable to C while writing python. Huge boon for data analysis in python 
No, a function declaration is always done as `def func():`, with the parentheses. If you wanted to use `ec2_status` in that function, you should pass it and define the function as `def instanceReport(ec2_status):`. You "should" also use the `with` statement, which handles closing the file automatically.
You should probably go over [PEP8 Style Guide](https://www.python.org/dev/peps/pep-0008/) a few times. You have a lot of odd patterns in your codebase (you appear to come from a Java background?). You should try to fit the styleguide to make your library more natural of a fit to Python developers.
I don't remember all the open() modes so 'w+' may be wrong but everything else looks good to me. I believe there is a mode for append I think it's 'a', you may want to check that out if you are adding to the file. Write mode will overwrite anything that's in the file already. 
your code is good as is, but it's good practice to use a with block when dealing with opening files. Also open with w and w+ overwrites any files immediately, so you'll lose the original file even if you don't do anything
Like this? def instanceReport(ec2_status): # Creating report of instances not running with open('stoplog.txt','w+') as f: f.write(ec2_status) f.close
`with` closes your handler automatically, so you don't need to `f.close()`. This way you'll never forget to close your files.
"Last year I only used Medium for consuming content" what?
I second the O'Reily books, absolutely amazing. In depth organized and interactive (to the point where you are almost talking to the author its crazy)
This post is better suited for r/learnpython 
from random import * yournums = [] lotterynumbers = [] def main(): numberOfLines = int(input('How many Lines would you like to enter: ')) print ('Your lucky numbers are' '\t\t' 'The lottery numbers are') print ('----------------------' '\t\t' '-----------------------') for x in range (0, numberOfLines): yournums = [randint(1, 50)] print(yournums, end = '\t\t\t\t') for count1 in range (0,6): lotterynumbers = [randint(1, 50)] if lotterynumbers == lotterynumbers: lotterynumbers = [randint(1,50)] print (lotterynumbers, end = ' ') print('\n') main() 
Hey guys, not really the place to post this but I couldn't find a related sticky or post. Just looking for some advice regarding Python. I'm completely fresh off the block, know my way around a computer more than most folks but am completely new to coding/programming. Is it possible/advisable to start with Python? Or should I learn C++ first? Read somewhere that it's advisable to begin with CSS which I've been doing with Free Code Camp. Should I just keep on with CSS and finish that? Will I be banging my head against a brick wall trying to learn Python with no prior knowledge? Cheers guys :) 
What are you building towards? It's a data-analysis pipeline, but what are you planning on analyzing? (Also do you think you'll do a write up of your process, it looks super interesting and is very different than the pipelines I've built, so I'd love to learn what and how you made)
Pardon?
Thanks for putting this together!
Speaking of making it easier to read large numbers, does anyone know if it's possible to have the REPL or ipython console output numbers with the underscore separator formatting? It would make it a lot easier to mentally parse large numbers sometimes, while keeping them in a format you can paste back in directly as input. Sometimes I find myself doing this when I want to more easily see how big a number is: &gt;&gt;&gt; 2**32 4294967296 &gt;&gt;&gt; f"{_:_}" '4_294_967_296' But it would be nice to avoid changing the '_' variable from a number to a string (I guess you can always do a `int(_)` to change it back), and it would also be nice if it were possible to just automatically display results in that format without having to reprint it.
6) it must pick the winning numbers for the state lottery
.isoformat() can take an argument to specify the separator. However I agree others like .ctime() could have been designed as properties. But to change them at this point though would break a lot of old code compatibility.
What version of python did you want? 
It’s the codebase of a startup that does machine learning powered curation of products to buy. It does ecommerce, warehousing, order management, quite a lot of user facing functionality, reporting, etc. Some people would split some of those bits out into separate services, but we find the integration useful (being able to use the same Django models in our order management system, warehouse, etc), and Django apps let us structure that all really nicely with little overhead, whereas micro services come with a cost. 
Ive installed python and pip on another computer and it worked fine. Whilst trying to install on this pc I get this error. I cant find any info about this online? Running Windows 7 x64 home premium. Usuing python 2.7 and pip 10.0.0
I love this. The python community is so welcoming... I should really finish Automate the Boring Stuff.
I'd say a "property-like" method is one that's a pure function of the logical state of the object (takes no arguments and returns equal values when called on objects that compare equal).
What im trying to do calls for python 2.7.0
I used to do VM linuxes (linuxs, linuxi?) On top of windows for my dev boxes, as we had MS tools for work that were easier to run as part of the main system. Now I don't even bother with linux at all expect for testing, that I can now do natively thanks to the new subsystem, so it has been a positive change for me. 
You would pre-compute the hashes for 30K source images once. You only need to hash the input image in real-time and do 30K hash deltas in real-time (I think it's fast, time it and see). Keep, say, 10 smallest hash deltas for further analysis. This technique is only useful if the 30K source images are significantly dissimilar. Example, if they are all baseball trading cards, probably not (all the deltas would be nearly the same). But if they are album covers, then maybe
Still. [PEP 8](https://www.python.org/dev/peps/pep-0008/)
Yes, well put. I would have the same answer to OP's question. 
I tried it out awhile back and was having issues using it with my favorite IDE. The workflow just felt really kludged together. Right now I have a 128gb thumb drive that is almost flush and is usb3.0 for when I want my full blown Linux. I’m still hopeful that Microsoft will improve the public api for this.
Fuck yes
Fuck yes
Python isn't doing three text rendering itself. Btw it's not clear if you are seeing this in a terminal or a browser. 
Most likely because the API predates decorators.
freecamp == medium clone?
I’ve goofed around with it in a couple of terminal and in other environments including a browser with variable outputs. Some render correctly, some render correctly, others with varying degrees of “weirdness” (e.g., diacritic completely separate. diacritic overlapping the second half of the character). My sense is that this is the “fault” of whatever is doing the rendering. The reason I was asking was because the characters are read in as individual characters that i fill into a list and then ‘’.join(). I wasn’t sure if there was a unicode or escape or something to place in the string to say “the previous character is a modification of the prior” or some such. Some renderers seem to figure it out, while others don’t. 
That's most likely correct. Unicode rendering is far from trivial. I would expect browsers to do much better.
I'm currently using PyQt5. I have another user giving me advice in another reddit thread. I haven't read it yet, but I know it involves signals and a subclass. If you have any advice, I'd greatly appreciate it.
Tip #1: Read the sidebar Tip #2: Post this in /r/learnpython Tip #3: Read THAT sidebar, especially the part about learning resources
You can! It's just that then you'd have to re-write the bulk of the boilerplate code, which sort of defeats the purpose.
thanks, I probably should have looked at that first
You're sure you don't have a second python on the path?
I'm trying to get away from VMs as much as I can. The only thing I haven't been able to get to work in Linux yet is WebEx. Glad to hear the subsystem is working well for you though.
Which IDE? I alternate between Sublime Text for quick edits and PyCharm for heavy coding.
The other extreme :) Do you grow your own coffee beans and roast them too?
Thanks. That's too bad though. So much potential.
Hey now, it's not LFS. 
So are data classes just going to be a shorter way to write pre 3.7 classes? Or is there something else I am missing?
You want to define a function to find the element: def has_usage_but_no_id(tag): return tag.has_attr('data-usage') and not tag.has_attr('id') Then you can just find it... elems = soup.find_all(has_class_but_no_id) print elems[0]['data-usage']
I would really like to have a functional onenote again. And Visio was a really good tool. But I can't live without a real shell anymore and running a VM constantly for it just doesn't work for me. Better to go the other way around and have a windows VM when you really need it. I really need windows like once a year.
This post is better suited for r/learnpython 
Please read the sidebar and check r/learnpython 
This post is better suited for r/learnpython 
This post is better suited for r/learnpython 
In my opinion int.bit_length() could be a property because bit_length is a "property" of int. str.lower() should not, because it's not a "property" of str. It's performing a "function" to transform the string. Since lower() takes no arguments, it could be a property technically. I would say that doesn't make sense though. 
In my opinion int.bit_length() could be a property because bit_length is a "property" of int. str.lower() should not, because it's not a "property" of str. It's performing a "function" to transform the string. Since lower() takes no arguments, it could be a property technically. I would say that doesn't make sense though. 
In my opinion int.bit_length() could be a property because bit_length is a "property" of int. str.lower() should not, because it's not a "property" of str. It's performing a "function" to transform the string. Since lower() takes no arguments, it could be a property technically. I would say that doesn't make sense though. 
What about OP's question? Would you call that a property? It kinda is, but it takes "work" to generate it. 
I LOVE U. saved me so much time 
Not really. Maybe I'm a cynic, maybe I just took "don't judge a book by its cover" to seriously, but I'm quite willing to divorce the quick mashup of stock images and maybe a dash of kerning found on your average book cover from its contents, *especially* as those contents get more technical and the cover artist conversely gets lower paid. For instance I've read a lot of books on hacking and penetration testing over the years, I don't usually expect to find either a sinister dude in a hoodie or some random shell code for looping through and printing the first hundred positive integers in binary on to a green phosphor CRT inside.
Hmm, unless I'm mistaken, an introduction to data classes that doesn't include a single example of creating an instance of a data class. Might be nice to see it in action, especially for things like frozen data classes.
Hey guys hobbyists python developer here. Still early on in my learning journey. Can some explain to me what he is referring to with “updated subsystem”. I have made some small programs on my main PC which runs windows 10 but have started writing code over SSH into a Pi I have as I want to learn linux commands too. (Sorry to ramble a bit) I guess my two questions are: 1. Why has Linux been considered better to write python code on? 2. And what is a subsystem as well as what changes have happened to it that what sounds like heavy Linux users are contemplating change? Thank you kindly friends!
I have one coming up too \- how did it go?
I'm thinking it should not be a property since it's transforming the format. And technically it cannot be as it takes optional arguments https://docs.python.org/3.6/library/datetime.html#datetime.datetime.isoformat But if someone just conceptually thinks that a datetime object always has all of its formats as part of itself (kind of because every format represents the same time), then it could be a property. I think this example is a little less clear than lower() and length().
Without seeing code we cant say for sure. The recursive function is not hitting the branch where it does not call itself. Best to just step through with a debugger.
A sample of code that shows the difference would be good. Maybe youre printing str vs bytes?
I'd advise learning tools in relation with the tasks you're attempting to complete. If you're into web development consider a Treehouse subscription to learn python by first taking their python track and then go to their flask track. IMO it's easier to learn when you have something to apply your knowledge to as oppose to just learning syntax. You could also check out dataquest if you're into data science. Also most would consider c++ harder to learn than python. Also check out r/learnpython. 
This is awesome, thanks!
The motherload. Sweet.
That's sounds nice. Less is always more lol. 
After using them a lot, I find its easier and more natural to write classmethods to do the logic you might have otherwise have been tempted to put in the init. They certainly encourage (at least me) to write more, simpler classes based on the data
Why are type hints required? I'm not really happy with that.
Afaik it's just boilerplate generation, yes. I used the attrs lib for that, but I may change that towards data classes.
It seems that data classes look better. I just feel they look nicer compared to the old way of defining init.
Thanks for the advice, but if it were stuck in a recursive loop then it would throw an error when running on its own without the merge sort function preceding it, which it does not. Here is the code if that helps! https://pastebin.com/0xQn8BMt
It doesn't, if you want to avoid type hints. The following is perfectly valid Python code, for example: from dataclasses import dataclass @dataclass class Point: x: ... y: ... Here, I'm annotating my fields using the ellipses literal, but literally anything will work: the dataclasses library ignores those annotations entirely. You could do other things as well -- for example, this would be valid: from dataclasses import dataclass @dataclass class Point: x: "The x-coordinate" y: "The y-coordinate" If you want your dataclasses to interact nicely with *other* code that may want to use type hints, but you'd like to avoid using them as much as possible, you could instead give every one of your fields a type of `Any`, which means "please treat the type of this field as being 100% dynamic: from typing import Any from dataclasses import dataclass @dataclass class Point: x: Any y: Any 
I have a lot of respect for Guido, but I think he screwed up here. I don't like compulsory type hints either, and this PEP should never have been approved. I haven't decided what I'm going to do about it yet.
You just misread it a little "**Ubuntu** Subsystem", not "updated" Ubuntu, a very common flavor of Linux, [has support for running alongside Windows](https://docs.microsoft.com/en-us/windows/wsl/faq). 1.) One of the major reasons Linux has always been popular for developers, is that it is the target deployment OS for the majority of server based code. Windows \ Mac haven't had light or headless (non GUI) server OSes for a long time. Whereas servers you generally want as little overhead as possible, so it's easier to develop on what you want to deploy on. Also a lot of system administration / server management is done via Linux so it's easier to stay in a single, known environment. (Obviously plenty more valid reasons, those are just the two most applicable to me.) 2.) The Windows Linux Subsystem is not a full version of Linux, so a lot of the aspects people fund useful are suddenly gone or don't work the same. 
I think they have faster attribute access as well, although I may be misremembering.
Thank you! I always figured that to be the case but I thought that if you spend say 20 hours coding you would chose the most efficient platform even if it was going to be used on another one. Any examples of functions that do not work on the ubuntu subsytem. Btw what is the difference between that a a ubuntu vm.
https://suredbits.com/api/nba/games/ Let me know if there's anything else NBA related you're looking for
Hey! Two-space indentation is perfectly fine! Right? Especially when you have descriptive variable names :)
I prefer pencil sketches of weird animals on my book covers.
Sorry, I think I made a mistake and got dataclasses confused with slots. There has been some discussion about dataclasses using slots by default but it hasn't happened in the first implementation.
Is vim + iPython shell (with auto-reload activated) really that bad? It's my go-to.
 You can adjust the limit. &gt;The highest possible limit is platform-dependent. A user may need to set the limit higher when they have a program that requires deep recursion and a platform that supports a higher limit. This should be done with care, because a too-high limit can lead to a crash. https://docs.python.org/3/library/sys.html#sys.setrecursionlimit
Okay fair enough. Thanks for clearing that up
Is this a picture of r screen?
My only recommendation is [wsltty](https://github.com/mintty/wsltty). It gives you a real linux-style terminal. Made all the difference for me.
https://www.reddit.com/r/Python/comments/8d7ddz/python_37_introducing_data_classes/dxlm6ul
https://www.reddit.com/r/Python/comments/8d7ddz/python_37_introducing_data_classes/dxlm6ul
Keep learning it until you think you "mastered" it or good enough you don't ask for help from people much. Then just learn more languages and keep learning them. Yea so... just learn all of them. Do Udemy courses courses to learn for a cheap price. I don't know about internship, I'm still in highschool.
It does... it just requires an x server (e.g. vcxsrv, xming, etc.), and then all of the gui libraries + dependencies installed under wsl (e.g. gtk, qt) Still an extremely hacky way to go about life, and I don't see any practical use for it (I only develop software on actual linux machines)
on chapter 6 :'( last read like a month ago. really need to snap out of the basics and jump into a project.
Data classes aren't exactly classes. They're sort of like named tuples. They have a tuple backend and should take up significantly less space and be faster 
*self* was the best thing to happen to Python. What are you talking about? We can make method decorators because self exists...
I think he meant doing a *super().__init__()* from his own *__init__*.
A lot of people are really good at using tools like VIM as their Python + everything else editor that switching to an IDE or different system would be inefficient. Also a lot of time can be lost deploying code / switching systems to test instead of just doing everything from same box. In the end it's best to allow everyone to use what makes them most happy and efficient (as long as it doesn't hamper the team) IMO. (There are also plenty of jobs that you are stuck with what you get handed, I had to use a Mac for 3 years. Not sure how I survived, but I'm still here somehow.) The two biggest limitations for the subsystem that I know of are GUI apps are not supported (some work arounds for them exists already), and some services heavily dependent on the kernel / server architecture (I.E. VirtualBox or Redis) 
I am an administrator so it works great for me. Built in SSH and a fine place to write simple python.
I think he means the explicit `self` passed to each method definition. That is not required to have decorators if python made `self` "magic". Not necessarily saying it's a good idea.
I think you have many redundant the instances of `[:]`. &gt; len(json_text['FileStatuses']['FileStatus'][:]) It is making a copy in order to check the length and then discarding the copy.
Do you mean **this**, like many other languages have? The problem there I see is scoping. *self*, *cls*, *klass* notations have no restriction on scoping or nesting. It's also better than having 3 ways to write a function. 
Yes, `this` as in C#, java, etc. I don't see what implicit vs explicit self has to do with with scoping. It's just an implicitly bound variable instead of explicitly bound. You can pass it around however you wish.
That seems like the most straight-forward way. I'm assuming this only works if the computers are connected to the same network?
The Arch setup is a one-time process and you learn what you are doing. As a programmer you shouldn't be afraid of the command line. I've been running Arch for 5 years and it's been awesome.
Interesting. Anyone have a link to the PEP?
Articles like this make me wish there were more hours in the day
Me 2 man... been so busy but its always on my mind.
Also tried type\(data\) but nothing was returned.
A 2 minute google search gave me miniupnp -- https://github.com/miniupnp/miniupnp, goodluck.
I finished it quite a while back. Worth every bit of time in my life. 
Please format your code with 4 spaces, and try to elaborate on what the problem is. 'variable not being saved' isn't clear. I'm guessing this is a socket server, but where is the client?
I've tried installing it, I get an attribute error from SorceFileLoader. I've spent a while trying to find a module which actually works. Do you any other ways to enable port forwarding with UPNP?
Bloat.
I think that would be a bit confusing though -- you're basically asking the user to write code as if their class is inheriting something even though there isn't necessarily any inheritance involved. (And what if you *do* decide to inherit from a class in addition to using dataclasses? In that case, would `super().__init__()` refer to the auto-generated constructor, or the actual superclass's constructor?)
/r/learnpython
I don't think they have a tuple backend? If you look at the implementation, it looks like the code is just modifying the class directly -- lots of calls to `setattr` and such everywhere. I'm also not sure if they actually will occupy less space or be faster. That might be the case if the dataclasses module auto-generated `__slots__`, but [they currently don't](https://github.com/ericvsmith/dataclasses/issues/28).
I don't knos whats before and after your snippet, but this is what I wold do: json_text = r.json() # get total length of dictionary keys for tracking items_list = json_text.get('FileStatuses', {}).get('FileStatus', []) total_items = len(items_list) for item_index, item in enumerate(items_list): octal_perms = item['permission'] replcount = item['replication'] fileuser = item['owner'] filegroup = item['group'] filename = item['pathSuffix'] filetype = item['type'] filelength = item['length'] # modtime is epoch (UNIX time) with the last 3 digits as milliseconds modtime_epoch = item['modificationTime'] modtime = time.strftime('%Y-%m-%d %H:%M', time.gmtime(modtime_epoch/1000.0)) logging.debug("Analyzing " + str(item_index) + ' out of ' + str(total_items)) in your code total_items and item_count are the same thing, you make 2 copies of the same thing doing json_text['FileStatuses']['FileStatus'][:] twice (it makes sense if it's a generator, but it seems not) and I guess json_text[key lookup][key lookup][index lookup] is slower than plain iteration...
Trying to fix a Pyqt5 bug with Qtabwidget stylesheet not working on first tab...
I love Pycharm \&lt;3
Been working on unofficial Python api for https://minds.com https://gitlab.com/granitosaurus/minds-api Minds.com is a rather interesting social network. It's open-source but not federated as well as being powered by cryptocurrency. I'm quite fond of the general UI and aside from big alt-right community I've been enjoying it quite a bit and there is cool content to be found. So I decided to write some bots and other interaction tools (I want to post in markdown for once) and for that API is required. I've writen API wrappers in python before but mostly for internal usage or something small - minds-api is full interaction with website. The features I've been focusing on is local profiles for the api - I want to be able to post X from one account and Y from another without having to enter credentials every time. For that I used [toml](https://github.com/uiri/toml) for config parsing which proved again to be nothing but a pleasure to work with! I've also been working on full cli interaction package separately with `click` but I'm still yet to publish it. And maybe a QT client later on. Another thing this project has forced me to learn is sphinx docs, new PYPI and Gitlab-ci. I used sphinx before but never really dug into it as documentation and the general workflow made my head spin - after giving it a deeper look I think I was wrong - it's actually quite pleasant to work with, it's just that the learning curve is unpleasant. Gitlab-ci is still great but I'm still much more fond of Github's UI, however my migration from Github is long-overdue. New Pypi is great as well, love the UI and surprisingly got everything working on the first go. Finally I have one issue, maybe someone is familiar with this: I've encountered one issue so far which I had trouble replicating and solving. To interact with the internal api Minds.com requires `XSRF` header/cookie. From what I gathered this is AngularJS taken on CSRF cookies(?) However the weird thing about it is that often enough initial request to login page will not return the cookie. An easy fix for this is just keep retrying till you get one, but I have a good feeling that I'm misunderstanding something, for the time being 5 retries has 100% coverage for thsi issue. Maybe someone has encoutered something like this before? Thanks for reading my micro-blog, check out my bot in action: https://www.minds.com/dota_live :)
Jupyter Notebook is great.
You should also look into `np.linspace()` for equally spaced points. It's easier sometimes
You should also look into `numpy.linspace()` for equally spaced points. It's easier than `np.arange()` sometimes
Redis was working fine for development purposes since WSL beta, but as it is a translation layer - VirtualBox and VMWare should be used from windows-level unfortunately. Most GUI applications require literally one line added in .bashrc and installing Xming or other X server on your windows (some, notably Electron apps, don't work within WSL at all right now, so no VS code if you're into that). Sound is not working at the moment, although Spring Creators Update fixes some issues that lead to problems with sound and having to use workarounds when using docker from within WSL. I'm very happy with WSL for my workflow: I use docker containers anyway, and they work fine both from WSL and PyCharm. And bash is so much better (faster to write and more concise) for a lot of mundane tasks than powershell it's not even funny.
Yeah, why not just declare a class with slots? Is the init boilerplate that the whole point of a data class?
Curious as to why Pandas, Requests and Click didn't make it to the list. I think these are extremely important. Aren't they?
Dataclasses are missing a lot of customisation features of attrs. No way am I going to change. 
That's completely wrong. If anything they take up more space due to additional boilerplate. 
Check out [Requests](http://docs.python-requests.org/en/master/) and [Click](http://click.pocoo.org/5/) both are good stuff!
Okay I worded it badly: I just wish it didn't require the usage of type annotations.
Did you just post an Instagram link, that linked to another site?
Okay, so I write a function that I want to later "attach" to a class. This function takes the current instance of that class as its first argument: def do_something(self): self.do_something_smart() All I have to do is set it as an attribute on the class: setattr(MyClass, 'do_something', do_something) and now I can call `do_something` on instances of `MyClass`. Everything is explicitly bound. But if we use an implicit binding, the body of `do_something` looks weird: def do_something(): this.do_something_smart() Where is `this` coming from? The `do_something` function isn't bound to anything so there's no way of telling what to expect `this` refers to! Or, what if I want to copy a function from another class onto `MyClass`? class OtherClass(object): def do_something(self): self.do_something_smart() def do_something_smart(self): # ... class MyClass(object): def do_something_smart(self): # ... setattr(MyClass, 'do_something', OtherClass.do_something) Now in this example - it's still clear that `self` in the `OtherClass.do_something` function still refers to the instance of the class. Try to tell me which `do_something_smart` function will be called in this example, which uses implicit binding: class OtherClass(object): def do_something(): this.do_something_smart() def do_something_smart(): print("OtherClass.do_something_smart()") class MyClass(object): def do_something_smart(): print("MyClass.do_something_smart()") Where is the `this` variable bound? Is it bound at function definition time? Then `this` would still try to refer to an instance of `OtherClass`. Is it bound at call time? Then `this` would refer to an instance of `MyClass`. But the point is this: you now have to know how Python binds variables to write correct code. This is why PHP and Javascript (aka ECMAScript) suck so much: every developer has to know so much of the language implementation to write correct code. And developers are lazy, so they don't read the documentation, and humans are stupid and forgetful, so they might not understand the documentation or might soon forget it again. I tend to think that implicit binding is an antipattern. After all: Explicit is better than implicit. Although I always thought that phrase should be condensed down a bit, to really drive its point home: Explicit is better.
Look like I totally forget to put that in, I have it in [the code that I wrote for the blog post]:(https://github.com/ErnstHaagsman/swapi/blob/master/main.py#L35) json = requests.get('https://swapi.co/api/films/1/').json() movie = StarWarsMovie(**json)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [ErnstHaagsman/swapi/.../**main.py#L35** (master → fb9fd56)](https://github.com/ErnstHaagsman/swapi/blob/fb9fd5649aa3c971afad64d5988c601ac16c3991/main.py#L35) ---- 
Looks ugly though. Python with mandatory type annotations is not pythonic anymore. Type annotations are fine so long as they are rare, well thought-out to avoid bugs. I really dislike things like Jetbrains IDEs littering them everywhere.
Thanks!
[link](http://www.evontech.com/what-we-are-saying/entry/python-development-7-libraries-to-look-for-in-2017.html)
I wouldn't call tensorflow helpful, unless you need to research linear algebra and neural networks. Which as exceptions go is a pretty big one.
I'm with Raymond Hettinger on this one. 4 spaces is way better and you can keep your descriptive variable names by not obsessing over lines that exceed 89 characters by a few chars. "Foolish consistency is the hobgoblin of little minds" is the most important advice from PEP 8.
Yea that was my thought is I'm not really doing plain iteration but a mix. I'll recheck, thanks
Thanks 🙂
I would have used `namedtuple` for cases like this before. I wonder whether there is still a reason for using `namedtuple`, or if `dataclass` replaces all the use cases.
Do you have a link I could check out for the hashing? I'm only used to hashing with things like MD5 which are not comparable for similar values. I'd like to check it out some more.
&gt; Also, using the ABC is nice since it ensures all the parts going in at each level have the methods they need And it ensures that the humans writing new implementations of them know what they need to implement :p
Here is a similar function in full. Speed is key here as this is iterating over a JSON return from requests that contains upwards of ~1 million entries. https://gist.github.com/mtdeguzis/48e5635a9b3395adeb661c92b18ab265
I appreciate you taking the effort of writing this, but you're completely missing the point of my original response. The clarity of implicit vs explicit isn't relevant here. I even said in my comment I don't necessarily think it's a good idea. The sole point of my response was to point out that the existence of explicit self passing is not functionally necessary, it's just a good decision. 
Nope. Debian all the way. 
Drat! I was hoping one of mine would be on the list. Neat article though. I'm going to save this for later.
Read a while back that debug was a pain with numba. Anybody know the recent situation?
You should have replied with "It's obviously frozen" :D Great project, will keept it in mind.
Why are you making a copy? Calling len won't change the object you pass it. I also don't see any good reason for making the same copy, again, in the for statement.
You'll want to add some code formatting. Prepend four spaces onto each line. import telnetlib import datetime now = datetime.datetime.now() host = "myhost" # your router ip username = "user" # the username password = "pass" tn = telnetlib.Telnet(host,23,6) tn.read_until("Username:") tn.write(username+"\n") tn.read_until("Password:") tn.write(password+"\n") tn.write("display int description"+"\n") # tn.write("sh run"+"\n") tn.write("quit"+"\n") output = tn.read_all() fp = open("sw_hu.txt","w") fp.write(output) fp.close()
Thank you. Just using elems[0]['data-usage'] did the trick. I was trying something like elems['data-usage'] which didn't work. Could you briefly explain why adding the index [0] makes it work? Thanks.
Ok, I've been doing python for 5 years now. Early on I asked a coworker why do I have to write "self" when lots of other languages get a long fine with with an implicit "this" and I was shown examples like you give above. Since that time, in the ensuing 5 years, I don't think I've ever made use of those features. Personally, I don't think the advantages explicit self gets you is worth it. Also, I think the saying "Explicit is better than implicit" exists strictly to justify the explicit-self. Implicit behavior runs throughout python. For example all the magic methods that exist to support cool python syntax-y goodness that are all called implicitly. If it wasn't for the explicit-self "feature" I feel confident that the Zen of Python would contain the opposite phrase "Implicit is better then Explicit" because actually, implicit is AWESOME! Implicit execution of machine code is the whole point of high level languages.
I don’t think Python is able to provide `self` magically. We touched on it as one of the limitations of dynamically typed languages in my operational semantics class when learning about types. I can’t provide specifics because I don’t remember offhand and I just woke up, but I think there was something in particular that made the type system incapable of providing a `self` reference that was guaranteed to be correct in all potential contexts without reworking the grammar.
See the gist above, where in that do you mean? I believe I removed that extra copy.
So to be clear, I wasn't giving an opinion on the necessity of explicit `self`. I said as much in my response. I was just countering the idea that it is necessary for method decorators to exist. But since this response steers the discussion into the other direction, I'll bite. The core problem with your argument is you're conflating syntax with semantics. Whether or not `self` is implicit or explicit does not dictate where or how it is bound. If in some alternate version of python `self` were implicitly passed as a param to each function, the exact same scoping semantics could be kept if desired. You could also keep explicit `self` yet have confusing binding rules (like javascript), because *these have no codependence on each other*. 
I think the problem is that it's challenging to do that from a technical perspective because the `__slots__` field needs to be present at class-creation time. This presents a problem because dataclasses isn't creating classes -- it's simply modifying an existing one. iirc there were two solutions that were being passed around, though both have some flaws: 1. Just synthesize together a giant copy of the class with the `__slots__` field added on in one big string somewhere and run `eval` on it to create a class. The issue though is that you now have to worry about whether or not you've accurately converted some class into an equivalent string. And even if you did, you'd incur an additional performance hit from having to eval more code and have to worry about accidentally re-running any code in the class that my have side-effects. 2. Rewrite the PEP so that instead of using this "decorator" thing, you use metaclasses. The issue here is that metaclasses don't necessarily compose well. For example, what if you want to use both dataclasses and `abc.ABCMeta`? How would two simultaneous metaclasses interact? None of these issues are impossible to solve of course, but they require some careful thinking and implementation. So the decision was made to punt on this feature request and handle it at some point later down the line, especially given that the workaround is simple: just manually add `__slots__` to the class yourself. For example, the following code works just as expected: from dataclasses import dataclass @dataclass class Foo: __slots__ = ('a', 'b', 'c') a: ... b: ... c: ... 
It looks like the functionality for Yahoo has been removed from the API you are trying to use. &gt; Yahoo Daily has been immediately deprecated due to large breaks in the API without the introduction of a stable replacement. Pull Requests to re-enable these data connectors are welcome. Basically, it was broken so they removed the code. For Google they must have a similar problem as well. 
I don't think so. Why are you interested in this? All imports should be on the top of your file, right?
I don’t understand. Wouldn’t you just pass a reference to the object that called the method? Where could that go wrong? 
Do you have any recommendations on how I can do it differently?
The error with Yahoo is clearly stated in the error msg and explained by the other comment. Could you please post the code with Google, and the error? 
Learn Python first. Python is beginner friendly. Once you get the logic down of a programming language it will be easier to learn more complex programming languages such as C++. You said you are learning CSS. Is your goal to create websites? If so learn python over C++. Python has two great frameworks such as Django or Flask. Learn in this order. HTML+CSS, Python, then Django or Flask. You will also need to be comfortable using the command line (terminal). Once you learn these you will need to learn how to host your website. What you learn is dependent on the type of server OS you choose.
find_all returns a list. (find returns a single element) elems[0] refers to the first item in the elems list. so elems[0]['data-usage'] refers to the 'data-usage' attribute of the first item in the elems list. I recommend using ipython. It's tab completion helps you out when you are getting started. https://www.youtube.com/watch?v=FAGb_qasXBE
 C:\Anaconda2\lib\site-packages\pandas_datareader\google\daily.py:40: UnstableAPIWarning: The Google Finance API has not been stable since late 2017. Requests seem to fail at random. Failure is especially common when bulk downloading. warnings.warn(UNSTABLE_WARNING, UnstableAPIWarning) --------------------------------------------------------------------------- RemoteDataError Traceback (most recent call last) &lt;ipython-input-4-04cfb4454dfd&gt; in &lt;module&gt;() ----&gt; 1 df = wb.DataReader('AAPL', 'google', start='1995-1-1') 2 df C:\Anaconda2\lib\site-packages\pandas_datareader\data.pyc in DataReader(name, data_source, start, end, retry_count, pause, session, access_key) 313 chunksize=25, 314 retry_count=retry_count, pause=pause, --&gt; 315 session=session).read() 316 317 elif data_source == "iex": C:\Anaconda2\lib\site-packages\pandas_datareader\base.pyc in read(self) 204 if isinstance(self.symbols, (compat.string_types, int)): 205 df = self._read_one_data(self.url, --&gt; 206 params=self._get_params(self.symbols)) 207 # Or multiple symbols, (e.g., ['GOOG', 'AAPL', 'MSFT']) 208 elif isinstance(self.symbols, DataFrame): C:\Anaconda2\lib\site-packages\pandas_datareader\base.pyc in _read_one_data(self, url, params) 82 """ read one data from specified URL """ 83 if self._format == 'string': ---&gt; 84 out = self._read_url_as_StringIO(url, params=params) 85 elif self._format == 'json': 86 out = self._get_response(url, params=params).json() C:\Anaconda2\lib\site-packages\pandas_datareader\base.pyc in _read_url_as_StringIO(self, url, params) 93 Open url (and retry) 94 """ ---&gt; 95 response = self._get_response(url, params=params) 96 text = self._sanitize_response(response) 97 out = StringIO() C:\Anaconda2\lib\site-packages\pandas_datareader\base.pyc in _get_response(self, url, params, headers) 153 msg += '\nResponse Text:\n{0}'.format(last_response_text) 154 --&gt; 155 raise RemoteDataError(msg) 156 157 def _get_crumb(self, *args): RemoteDataError: Unable to read URL: https://finance.google.com/finance/historical?q=AAPL&amp;startdate=Jan+01%2C+1995&amp;enddate=Apr+19%2C+2018&amp;output=csv Response Text: &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text/html; charset=utf-8"/&gt;&lt;title&gt;Sorry...&lt;/title&gt;&lt;style&gt; body { font-family: verdana, arial, sans-serif; background-color: #fff; color: #000; }&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;&lt;font face=sans-serif size=10&gt;&lt;font color=#4285f4&gt;G&lt;/font&gt;&lt;font color=#ea4335&gt;o&lt;/font&gt;&lt;font color=#fbbc05&gt;o&lt;/font&gt;&lt;font color=#4285f4&gt;g&lt;/font&gt;&lt;font color=#34a853&gt;l&lt;/font&gt;&lt;font color=#ea4335&gt;e&lt;/font&gt;&lt;/font&gt;&lt;/b&gt;&lt;/td&gt;&lt;td style="text-align: left; vertical-align: bottom; padding-bottom: 15px; width: 50%"&gt;&lt;div style="border-bottom: 1px solid #dfdfdf;"&gt;Sorry...&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div style="margin-left: 4em;"&gt;&lt;h1&gt;We're sorry...&lt;/h1&gt;&lt;p&gt;... but your computer or network may be sending automated queries. To protect our users, we can't process your request right now.&lt;/p&gt;&lt;/div&gt;&lt;div style="margin-left: 4em;"&gt;See &lt;a href="https://support.google.com/websearch/answer/86640"&gt;Google Help&lt;/a&gt; for more information.&lt;br/&gt;&lt;br/&gt;&lt;/div&gt;&lt;div style="text-align: center; border-top: 1px solid #dfdfdf;"&gt;&lt;a href="https://www.google.com"&gt;Google Home&lt;/a&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 
Because it's easier to read code like `package.function()` when package is highlighted in a different color.
Giving it an honest go at learning python. Virgin programmer :o
Than ujson? Just tried that it is extremely fast for large data sets. https://github.com/mdeguzis/python/tree/python2/json-benchmark
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [mdeguzis/python/.../**json-benchmark** (python2 → da7ad4c)](https://github.com/mdeguzis/python/tree/da7ad4cba210d3294c4212b10d6cee0a4866df09/json-benchmark) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dxmq3ci.)
Well you can always continue to use the `attr's` module then
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [mdeguzis/python/.../**json-benchmark** (python2 → da7ad4c)](https://github.com/mdeguzis/python/tree/da7ad4cba210d3294c4212b10d6cee0a4866df09/json-benchmark) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dxmq7iq.)
`namedtuple` is immutable (like the tuple). `dataclass` is similar but read/write.
i don't find it too bad to debug. if there are bugs in the python that can be problematic, but you can always remove the @jit stuff to find that. errors from using numba have been pretty descriptive and helped me locate the bug in my code quickly (usually related to using @jitclass incorrectly or passing nopython=True for an invalid case) 
Are you closing the file?
I have a dual boot setup. Currently the linux subsystem is a little weird for me and at times buggy. 
I need two-way video, which isn't supported, even on the 32 bit Firefox builds.
Thanks for putting this together there is literally something for everyone so i shared this forward :)
I had to develop things for a while on Windows and the subsystem did the job. Not to the point, of wanting me to switch to Windows permanently, but I had my command line, by apt and my zsh. But I could live outside of Gnome, so as soon as my notebook got fixed I returned to Antergos.
&gt; reading theory didn't help much Practice grounds theory. Theory informs practice. The biggest mistake people make when starting programming is to go all in in one or the other, when they should be doing both in parallel.
You can pip (or conda if you’re on anaconda) install a package called fix_yahoo_finance. Then override pdr at the top of the code and it will work! If you google fix yahoo finance there is info and example of how to do it. I did this a month or so a ago and it still works great. You only need to override it once then use pdr as normal
Thank you man. I'll check this in a few minutes. 
As below, you can also use ellipses. Using the namedtuple-style function still does all the good work of making the constructors and eq and repr methods for you.
Nice! I️ worked on a similar thing for Home Depot a while ago and their product list pages depend a LOT on localization which beautiful soup handled like dog shit. Have you noticed this or combatted it in some way? (I’m by no means a programmer but ended up using selenium to address the localization)
I previously built a python GUI wrapper for an R analysis package. I am currently working on porting the R code into python using the pandas database I order to ensure tighter integration and more easily crate deployable code
My primary machine has to be Windows for my PCB design software. I found that I have a easier time using Docker for things I need rather than Unix subsystem. Mostly I develop my Python on Windows. Deploy and test on Linux. Rarely have issues. 
Just use bs4 with lxml parser 😀
Thanks, I was considering lxml, also I am already planning an update. But I will look into it.
Thanks for the suggestion, airflow is definitely super impressive and I have been evaluating that as well. One requirement I have that it does not seem to fulfill is the ability to programmatically create DAG runs. I am dealing with a system that takes a payload via REST API, and then needs to trigger a DAG run with that data. Airflow seems to only provide the ability to either schedule runs or trigger them via CLI. I'm sure I could hack something together, but it would be nice to have a supported interface. Since you have some experience with Airflow, could you confirm whether I am correct about this right now? For reference, I am looking for something along the lines of [Luigi's build method](http://luigi.readthedocs.io/en/stable/api/luigi.html#luigi.build).
If you watch Rick and Morty, it looks like English
Haha nice1
Wut?
Can it read ext4 file systems? 
Take a look at [Requests\-HTML](https://github.com/kennethreitz/requests-html) too
ujson is a good suggestion as many were recommending here. Some people might be suggesting the same thing as me, so ignore any that are repetitive: 1) You shouldn't be iterating though the entire `json_text` if all you're looking for is `FileStatuses` 2) You don't need to do `for k, v in dict.iteritems()` if you're not going to be using `k` or `v` 3) Don't make copies if you're not planning on editing them apart from the original (usage of `[:]`) 4) You're not using itemcount for anything (looking at your gist). From this simple snippet you provided, here's what I would do to already improve the script. ```Python json_text = r.json() # get total length of dictionary keys for tracking if 'FileStatuses' not in json_text: # Raise exception or something print('FileStatuses not found.') else: for listitems in json_text['FileStatuses']['FileStatus']: octal_perms = listitems['permission'] replcount = listitems['replication'] ... filelength = listitems['json_text'] ``` You also have a huge chunk of code in your gist where you keep going dictionary[key] = value when in reality you can just declare the whole dictionary once Instead of ``` filename = filename.encode('ascii','ignore') list_status_dict[hdfs_path] = {} # Btw, you also have this at the beginning of your for loop list_status_dict[hdfs_path]['filename'] = filename list_status_dict[hdfs_path]['access_time'] = access_time list_status_dict[hdfs_path]['filegroup'] = filegroup.encode('ascii','ignore') list_status_dict[hdfs_path]['filelength'] = filelength list_status_dict[hdfs_path]['modtime'] = modtime list_status_dict[hdfs_path]['fileuser'] = fileuser.encode('ascii','ignore') list_status_dict[hdfs_path]['prefix'] = prefix list_status_dict[hdfs_path]['perms'] = perm_string list_status_dict[hdfs_path]['replcount'] = replcount list_status_dict[hdfs_path]['filetype'] = filetype ``` You could just do ``` list_status_dict[hdfs_path] = { 'filename': filename.encode('ascii', 'ignore'), 'access_time': access_time, 'filegroup': filegroup.encode('ascii', 'ignore'), ... 'filetype': filetype ``` You're also doing `return` on the wrong level in your gist (inside the for loop and not outside) Lastly, Always profile your code to see what is taking the most time. Sure you can make good improvements if you can find that you're using the wrong loops, but for any small changes, always profile before changing (otherwise you're gonna waste a lot of time for microseconds worth of improvements or worse performance)
String formatting includes a padding option: &gt;&gt;&gt; print(r"{: &lt;8} &amp; {: &lt;8} &amp; {: &lt;8}\\".format(1, 2, 3)) 1 &amp; 2 &amp; 3 \\ --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
it has a experimental REST api but I don't have any experience with it. In terms of dynamically building tasks airflow does support jinja templating so that might work for you. 
For the record, I just noticed that pinball does not support python 3, so will most likely pass on it anyway, but still curious about resources.
Countdown until the Oracle C&amp;D letter begins now.
I've never heard of streamlabs (nor twitchplayspokemon. but I digress), but clicking on the link you provided lead me to their [API documentation](https://dev.streamlabs.com/). That may help.
I had taken a look at their API page but I have never seen this one. I hope it helps, thank you.
I turned myself in to a pickle Morty!
If you only started to code 3 months ago, why didn't you use python 3?
I have no clue what your coworker was doing wrong but WSL has been a drop in replacement for a Linux shell. I'd urge you to try it again, leaving the Microsoft biases at the door might help. This is an extremely solid product. 
&gt; So to be clear, I wasn't giving an opinion on the necessity of explicit `self`. I said as much in my response. I was just countering the idea that it is necessary for method decorators to exist. Oh, sorry, I missed that in your original comment. Thanks for playing along anyway then. :) &gt; Whether or not self is implicit or explicit does not dictate where or how it is bound. It may not dictate it, sure, but when you force `self` to be explicit, it kinda makes unobvious binding semantics nonsensical. Explicit `self` syntax leads to much clearer binding semantics. &gt; You could also keep explicit self yet have confusing binding rules (like javascript) class OtherClass(object): def do_something(self, other_arg): # self is bound at definition time # other_arg is bound at execution time That's the only way (that I see) that you could keep explicit `self` and have confusing binding semantics similar to Javascript, and it's absolutely nonsensical, because *semantics should follow the syntax*. Is there something I'm ignoring?
Nice OOP implementation. Overall, it looks nicer than my HomeDepot scraper I made last year, though I opted for `lxml` and `requests` over BeautifulSoup.
Great tips. Thank you
Indeed- they're pretty uptight about the word "java". 
Has It any matter in common with JavaScripthon?
&gt; It seems that at the function level a pass is made to gather the local declarations to throw an error before an assignment is made? Exactly. See https://docs.python.org/3/faq/programming.html#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value and the following section, particularly this: "If a variable is assigned a value anywhere within the function’s body, it’s assumed to be a local unless explicitly declared as global."
Yes, unfortunately. This guy's project mentioned "JavaScript" in the name... and now he's had a take-down. Might be prudent to fork it to "JSthon" or something before it's too late. Oracle are evil.
ZODB?
[And JavaScript][1], which is more relevant here. [1]: https://www.techrepublic.com/article/why-its-finally-time-to-give-up-on-the-name-javascript/
How does it compare to Transcrypt ?
/r/codes Please explain
hey now
ESthon?
i have code samples on gh if you want me to pm my gh acct
https://en.wikipedia.org/wiki/Pigpen_cipher
https://en.wikipedia.org/wiki/Pigpen_cipher
Ahh fantastic, I missed that in the docs. Thank you very much!
Watch out, you dropped your ™! Oracle can probably claim ESthon now. Too bad, it was a good name…
Is there a compiler for Javascript to python, too? 
See https://github.com/timothycrosley/jiphy
Neat
If you were to google something like "vscode colorize parens" I'm sure you'd find something useful. I know I just did.
Shrouddddd
`request.form.get['username']` should be `request.form['username']` or `request.form.get('username')` in the login method.
I like it
There's no universal answer to that; everyone learns differently. We have [a pretty long list of learning resources in the wiki](https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_programming.3F). Try a few and see what resonates. For a brand new programmer I'd recommend codecademy. Also, if you don't have one already make sure you look for a project that interests you and start on it as soon as you can. Programming is a lot more fun if you have a goal. Come visit us in /r/learnpython if you get stuck. 
 can you upload the program to github?
So the same symbols are reused for the same letters? i.e. backwards L always represents "A"?
Yep. It's pretty easy to learn, and it's always nice to know if you ever need to write a cryptic message.
Thank you for your reply! I've heard that a few times and I sort of get stuck with that. I know what I want to do. I have 2 projects in mind, one web application and the other would just be a very basic game maybe like tic tac toe with a computer or something along those line. Where would I be able to look up information regarding these sort of projects? That's what I'm having a hard time figuring out. 
Had Oracle call on my work today to try to sell us cloud services. I told them that with many other good cloud vendors, I have no need for a company that makes a hobby of suing competitors, customers, and random passersby. 
Ok, I just checked this from Old reddit screen, and it seems like markdown is not supported. The new Reddit they've been slowly pushing out to users supports markdown. Let me try to edit it in code brackets.
 json_text = r.json() # get total length of dictionary keys for tracking if 'FileStatuses' not in json_text: # Raise exception or something print('FileStatuses not found.') else: for listitems in json_text['FileStatuses']['FileStatus']: octal_perms = listitems['permission'] replcount = listitems['replication'] ... filelength = listitems['json_text'] Instead of your long list of dict\[key\] = values list_status_dict[hdfs_path] = { 'filename': filename.encode('ascii', 'ignore'), 'access_time': access_time, 'filegroup': filegroup.encode('ascii', 'ignore'), ... 'filetype': filetype
Something like the anydbm module might be best but note that you might want to install ndbm or gdbm or bsddb to improve your options and performance. 
To continue on this, Kivy would be a good GUI for this purpose. However, I'd suggest just focusing on your Python skills for now.
The Python for Everybody specialization on Coursera is a pretty solid start. I'd suggest that for an absolute beginner. Ultimately, you're going to pick up things from a ton of different resources.
uuuu very nice, thanks man! 
Lame. So it's does not even qualify as a cipher. It's just a different representation. Like the always popular "01100001 01110011 01100011 01101001 01101001 00100000 01110100 01101111 00100000 01100010 01101001 01101110 01100001 01110010 01111001 00100000 01110010 01100101 01110000 01110010 01100101 01110011 01100101 01101110 01110100 01100001 01110100 01101001 01101111 01101110"
Splendor is such a fun game! This sounds really cool. 
What do you mean by CLI and vanilla python? Did I mention I'm an absolute beginner lol? I wasn't kidding, I have zero knowledge in this although I'm trying.
So true! Although I must admit I had to watch it a second time. The first time around I zoned out having intense internal debates with myself about the quantum physics.
Using it is the best way to learn it.
/r/learnpython 
I would recommend Python Cookbook. Try solving problems without looking at the solutions first
I prefer Python187
+1 I'm in a similar boat as the OP. Have been messing with python since around 2015, but hit a plateau for the longest time going from "this is a for loop" courses to "1. draw some circles 2. draw the rest of the fucking owl" courses. First ones had me bored out of my mind, second ones had me essentially copying code and thinking I'm doing something. What you want to do in that situation is come up with something you actually want to do with the language, do some research to get an idea how to roughly go about it, then start a journal or something where you plan it out to the appropriate or realistic level of abstraction in the given moment and start building it. You'll face challenges around every corner and overcoming them is where the real juice of learning is.
I have tried to REST API. It exists but it's extremely shallow and you can't do much with it besides trigger existing jobs.
I wonder who "Python2isbetter" would be. Also there's a fourth person to Cloud 9? never knew that
I’d say it can still be useful to pass messages when you are around people who dont really bother to learn ciohers and codes. 
Really Nice!
Just reach my gh account and comment on one of the files and I will look into it. thank you
Because the first tutorial I started was in Python 2.7 so, I didn't want to create any confusion. In the future I can always change the syntax and make Beagle Scraper in Python 3
Thank you! But I don't think I could consider it OOP as there are no classes, is more function based.
I am working on Beagle Scraper \- sorry to brag, but is my pet project :\) The goal is to develop Beagle Scraper into a plug\-and\-play E\-commerce scraper. At the moment, it supports only Amazon, BestBuy and HomeDepot, but I will add new websites weekly. [https://github.com/ChrisRoark/beagle\_scraper](https://github.com/ChrisRoark/beagle_scraper)
ah, okay. Yeah, I just tried to do a DataClass superclass that has a MetaDataClass, then wrote a subclass of DataClass with its own custom metaclass and I ran into this: TypeError: metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases I never ran into that before. Yeah, the class decorator makes more sense then.
Which Pi, a 3 or Zero W?
This guy shows some pretty neat features of python. https://www.youtube.com/watch?v=R2ipPgrWypI
ECMAthon
CLI stands for ‘command-line interface’ (e.g. the Terminal app on a Mac) you’ll use this a lot to run Python scripts you write and manage various other tools on your computer or server. Say you write some code in a text editor and save a file on your desktop called ‘main.py’, if you open up your computer’s CLI, navigate to your desktop directory (folder), type ‘python main.py’ and hit enter it will run main.py. Try insert a print() statement in your code so that you can see some output in the CLI. Vanilla Python just means writing your own Python code without using the functions from another open source Python package that someone else has written. If you come across a term you don’t understand then get into a habit of Googling it, the answers are out there. It might be painful to start but as you progress you’ll start to recognise things/errors etc and be able to debug things faster with your own intuition.
You could switch to Visual Studio Code, probably your best bet. Or switch your Python environment to Visual Studio. Other than that I don't see many options other than just an editor + command line or (Vim with some scripts)
Yeah, I've finally got the simulations running without tripping up. I discovered that a stalemate is technically possible if you have 4 neural networks that act like the three stooges &gt;_&lt; I'm giving a presentation on the topic next week, and I should be able to get some more interesting results out of this after some more network runs. I could get results a lot faster if I only had more RAM, as it takes about 12 hours to complete a full run of the simulations...
Thanks for commenting! With the post I was 1\) trying to show off some of the cool things you can do with the \``ast` module and 2\) show you can optimize some pretty code into faster but less legible code. In this case it was removing duplicate function calls in *all* comprehensions and generators. You can often solve this by using a series of `map` and `filter` calls, but this is not always possible, and when it is, your code might become less legible. For example: `{a: foo(a) for a in range(1000) if foo(a) &gt; 10}` is optimized into `{a: b for a in range(1000) for b in [foo(a)] if b}` so that `foo(a)` is only called once. If you wanted, you can rewrite this manually in 1 line as `{a: b for a, b in filter(lambda a, b: b &gt; 100, {a, foo(a) for a in range(1000)})}` such that `foo(a)` is only called once, but it's obviously not as legible. Hope this clears up the motivation and shows that optimizations like this can be useful!
Good bot
Thank you, Davidjhyatt, for voting on anti-gif-bot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
Can you please me the code repo?
Bad bot
PyJS? 
dude ruined his karma and eventually will get tbagged by perlisbetter
Working with Pyspark to join disparate data with tests, and then using that to replace the legacy system that's already in place.
skimming through a book won't help that much start by reading the official python tutorial, see if that helps or is too hard for you and try basic things in a python console
I don’t have the code in front of me but if you think there is an opportunity to abstract some functionality out that you can use in multiple situations OR if it’d make this cleaner and more organized, I’d go for it. I wouldn’t make classes for the sake of making classes, I’d make sure you are actively making good and consistent abstractions that will cut down in code reuse and make it easier for you to make changes in the future. Also you just may not need classes, modules may work fine if your problem doesn’t map well to classes but I’m guessing (maybe naively) you can probably pull something out. Maybe a base scraper class that your other scrapers for Amazon or wherever inherit from. That’d be clean. 
Does this mean I can code in Python and get JS to put on a site?
Hy adidas try this one its very basic and from scrtch to advance, https://plus.google.com/collection/sWgEWE Hope its helps you nd others
Yeah because what they did to the openness of Java should be replicated to other industry-wide open languages. /s
Step 1: Read first. Step 2: Read the sidebar Step 3: Post in the correct subreddit (see above) Step 4: Read THAT sidebar
Product = str(Float_1 * Float_2) NameError: name 'Float_1' is not define i keep getting an error :(
The error is exactly what it says! Type Float_1. What do you get ? 
&gt; PyJS http://pyjs.org/
What definition are you using for cipher? The only meaning I'm aware of is 'secret code'. A single transformation for each symbol qualifies, even if it's ludicrously easy to break. ROT13 is often provided as an example of a simple cipher, and it's also just a different representation of the letters.
Hurry up man, the cops are coming 
Sounds like we need an r/pyyyyyyyyyyyython
thanks for sharing! I just recently came off converting a much smaller codebase from Py2 to Py3. It was an interesting read that I could heavily relate to.
I think this is exactly what you’re looking for - https://automatetheboringstuff.com
Thanks, will look into this!
I'd still write it as two lines: ab = ((a, foo(a)) for a in range(1000)) d = {a: b for a, b in ab if b % 2} but it is still cool what you can do with the AST. Nice article!
If you install both CLion and Pycharm CE, you can use (almost) all features of Pycharm CE in CLion by Jetbrains' plugin, so you can stick in one IDE.
Next you'll say you don't even own a hacking hoodie. 
Alphabvantage is a free api for stock data. But I don't know how far their historical data reaches. 
I love these covers. It's also brilliant marketing. Everybody knows the Camel book. (Insert appropriate animal for your language)
Loving the start, but very eager to see a full example (video/blog) including how to setup Stripe and mail for registration. I did have a brief look at the documentation and I see it is there. When I have more time I'll walk it through.
Some criticism from a guy whole makes web scrapers for a living :) 1. It's not asyncrhonious - requests must be done async these days. Why block your whole code while you wait for http to respond? Checkout [`requests-futures`](https://github.com/ross/requests-futures) 2. Selenium sucks - while I love selenium for automation, for scraping it's really expensive and slow. Check out something like [`splash`](https://github.com/scrapinghub/splash) that renders javascript with qt webkit. 3. Python 2.7 is pretty much dead and not worth using, especially since asyncio is vital for any efficient scraping. 4. Lxml is better than bs4. Xpaths and css selectors are standard of the industry and are extremely powerful selectors, especially xpath - you can traverse the tree in every direction with powerful extensions such as regex. Check out [`parsel`](https://github.com/scrapy/parsel) which is a convenience wrapper around `lxml` package. 5. Schema.org - often enough you don't need to parse html or scrape anything at all with ecommerce websites like this. There is http://schema.org schema layout that webpages often use to display their products and other things they want scraped and indexed. Check out [`extruct`](https://github.com/scrapinghub/extruct) for extracting schema.org data from html. All that being said it's a good start! I love seeing people get into web-crawling because this particular medium just opens up so many gates for project opportunities! Once you have a bunch of public data, you can do so many cool things and not to mention the fact getting that data can be an entertaining and fun challenge on it's own :) Godspeed!
Look into Dash from plotly. It was made to do exactly this.
Ok great I'll make a "make your first blog app" documentation. Been meaning to get to that. Yes all the mail stuff is in the documentation. The Stripe stuff has a new official package coming out soon which I'm still developing. It should be done by the end of next week. If you want to help develop it then by all means :). do you mean the menu on top of the documentation? If you mean a menu inside of a view then you can create a normal menu like bootstrap and redirect to routes. Your web.py file should be capturing those routes. let me know if you have anymore questions. If you want to talk directly you can hop in the gitter Join the chat: https://gitter.im/masonite-framework/Lobby
Or better, have the data class decorator do that for you! I'm a bit conflicted though since I think post init is more explicit but having the decorator override the init is more elegant. Consulting the Zen of python it looks like post init is the better way to go. 
The learning never stops. Ever. Just pick a small project and start working. Google every time you get stuck. Continue to the next project. Pretty soon you'll have completed multiple projects just using Stackoverflow and the official Python docs as your mentor!
This is neat. I don't buy into the example, but working with the ast module has always boggled my mind. 
Able to write useful scripts in a few hours. Able to write reasonably "Pythonic" code in a few months. Still learning how to write better Python code -- 19 years. (Started with Python 1.5)
The best way is to pick a problem, and solve it in python. You're best friends as annoying this is is the documentation. The documentation can be quite wordy at times, and so you do need to take the time to read, understand, and then apply. Python cookbooks are useful to use in conjunction to the docs as well. [library reference](https://docs.python.org/3/library/index.html) [language reference](https://docs.python.org/3/reference/index.html)
I've previously suggested solving this problem by exploiting the fact that comprehensions can assign to any "assignable" expression, not just variables - e.g.: d = {} xs = [ d[i] for i, d[i] in enumerate(range(10)) if f(d[i]) ] , the idea being that you can extend this into e.g.: do = Doer() [(do.x, y) for do(expensive).unto['x'] in xs for y in ys if do.x &gt; y] with class Doer(object): def __call__(self, fn): class _apply(object): def __init__(self): self.unto = self def __setitem__(_, name, arg): setattr(self, name, fn(arg)) setattr(self, '_' + name, arg) return _apply() But the solution presented here is much more elegant, kudos!
I think this image depicting "stages of a photographer" is relevant. https://i.imgur.com/nGRqDkA.jpg It's easy to get productive early. Then you spend the next who knows how long in the weeds figuring out incremental improvements to the quality of your work and workflow.
A descriptor class is definitely the way to go, but only really if you have a few more instances of this code duplication. There's a readability and cognitive tradeoff when you factor code into something more generic like this. So, if these are the only 2 instances that need the descriptor, I find it's better to just live with the duplicated code. I find it only really becomes worth it to me when you have 3-4 instances, Because often once you have 3-4, you're very likely to have to put in more later. 
Try [https://automatetheboringstuff.com/](https://automatetheboringstuff.com/) .
Write a reddit bot using [PRAW](https://praw.readthedocs.io/en/latest/), [NLTK](https://www.nltk.org/) and [Keras](https://keras.io/), which identifies posts such as this one and directs them to /r/learnpython. :)
i think mine is a 3
This needs: 1. `re.compile` for compiling regexes that you're going to use more than once 2. `(?&lt;name&gt;Blah)`: defines a group named `name` (which is needed for `(?P=name)` mentioned in the Groups section!) 3. The use of `groupdict` with named groups so you can do: . import re regex = re.compile('First Name:\s*(?P&lt;first_name&gt;\w+),\s+Last Name:\s*(?P&lt;last_name&gt;\w+),\s+Age:\s*(?P&lt;age&gt;\d+)') class Whale: def __init__(self, first_name, last_name, age): self.first_name = first_name self.last_name = last_name self.age = age def __repr__(self): return "Whale(first_name='{}', last_name='{}', age={})".format( self.first_name, self.last_name, self.age ) whale_line = 'First Name: Moby, Last Name: Dick, Age: 35' Whale(**regex.match(whale_line).groupdict()) 
Yeah there are currently 6 and more might come eventually. You think it's okay that it's not a "standalone" descriptor, but needs the class to have these certain methods? I've never done it in my life, but this is the first time I'm considering nested classes, imo that would more clearly indicate that it's just a part of the class.
[regex101.com](https://regex101.com/) is great way to build your patterns too.
Maybe Ayu? https://github.com/dempfi/ayu
Automate the boring stuff is great for those who have 0 computer science experience. The book is free online(just search automate the boring stuff) 
Cool! re.compile is a must, re.VERBOSE is helpful in formatting code to be more readable. Also it helps to know you can use lists for the values to keys and iterate through them with recent changes to dictionaries in python. Also calling groups. Thank you for making this!
Love this site.
Many try/except code is not necessary if using pywinauto right way. This document may help to fix timing problems better: [https://pywinauto.readthedocs.io/en/latest/wait\_long\_operations.html](https://pywinauto.readthedocs.io/en/latest/wait_long_operations.html)
I understand what you're saying, but if you need a "cheat sheet", then the reader needs one too. At that point, objects are better. If your regex is less than 10 characters, then I agree with you.
I may be able to help. I normally use Windows and wanted to get a python setup going for my machine learning class. I have used the linux subsystem for windows for quite sometime. I really enjoyed it and was nice not to set up a VM box. However, everything ran like ot was in a terminal and therefore you couldn't get the full functionality of say emacs or vim and same for printing out graphs. If you are doing basic things it is fantastic if you need visuals it may be more difficult!
Yeah, it should be fine, you can pass a reference to the class when you initialize the descriptor if you need access to its members that may be updated later.
Be careful sending grades put via email! It is a violation of FERPA. 
I don't think I can actually, a class cannot be referenced inside of its own body like this: class Foo: item = Descriptor(Foo) # Error, Foo not defined
There are a lot of them. For example, here is a project, called [VerbalExpressions](https://github.com/VerbalExpressions) that tries to make and OOP interface fro writing regexes. Yes, they have a python version: [PythonVerbalExpressions](https://github.com/VerbalExpressions/PythonVerbalExpressions). The thing that once you learned how to write regexes all this stuff starts seeming to long, too verbose, too clumsy and you won't want to use it instead of normal regexes.
Try /r/learnpython. Tell them what GUI library / framework are you using. Also, include which version of python and what OS you are using. 
Thanks for the tip about the other subreddit. Will post to there. Changed it to the second option you gave me and it worked. Thanks for that as well.
Looks nice. I always use [regexr.com](http://www.regexr.com)
* The basic operations for lists, dictionaries, and sets * The common string methods \(join, split, reverse, endswith, etc.\) * Reading from stdin and writing to stdout * How to write generators and decorators * The collections module \(Counter, deque, OrderedDict\) * The datetime module \- \(datetime.now, datetime.strptime\) That's pretty much all you'll need for 90&amp;#37; of interviews
Last change was merged March 17th so I'd lean towards yes over no
Is there a reason you need the class to be passed rather than an instance? If self is passed to the descriptor when it is called can't it be referenced? If you need to make a descriptor that changes its behavior based on class you'll have to make a meta class for your descriptor, which will get complicated, but I'm not sure why you need to do that.
Thanks
Why did you begin to learn? What you usually do that can be automatized? 
Will this work? class FlagDescriptor: def __init__(self, flag): super().__init__() self._flag = flag def __get__(self, instance, owner): if instance is None: raise TypeError return instance._get_display_flag(self._flag) def __set__(self, instance, value): if instance is None: raise TypeError instance._set_display_flag(self._flag, value) 
https://github.com/razzledazze/Pig-Pen-Cipher
Yeah that's what I have in my main post
A couple of client projects - two technical (yay code!) and one business-level, but the stuff I've been having particular fun with is releasing two of our previously-internal libraries for the community to use. The first is our [Validator-Collection](https://github.com/insightindustry/validator-collection) library, which provides a clean API for over 60+ different types of validation, and (I think) works nicely with both LBYL and EAFP approaches. Here's a direct link: https://github.com/insightindustry/validator-collection The second is our [Backoff-Utils](https://github.com/insightindustry/backoff-utils) library, which provides a simple function and decorator-based approach to providing multiple backoff/retry strategies. At the moment, it supports Exponential, Fibonacci, Fixed, Linear, and Polynomial with configurable options like jitters and max delays. Here's a direct link: https://github.com/insightindustry/backoff-utils These are the first two of our internal libraries that we're releasing for the open-source community to use, so it's an exciting learning process. :) Chris
&gt;The thing that once you learned how to write regexes That's like saying once you've mastered calculus, relativity and quantum theory.... I'd never want to use regexes, the "Perl of Python". 
To add to /u/vovanz's list, you also have.... [Simple regex Language](https://simple-regex.com/) [RegExpBuilder](https://changelog.com/posts/meet-regexpbuilder-verbal-expressions-rich-older-cousin) which is more powerful than Verbal Expressions, but I'm not sure if there's a Python version anymore (there used to be) [Easy Expressions](https://pypi.org/project/easy-expressions/0.1.1/)
This post is better suited for r/learnpython 
[CSV Splitter for Windows](https://github.com/sean-phillips/split_csv_windows) Drop the CSV in a folder with the python .bat file, double click, and viola: your CSV is split. (Note: make sure the folder only has one CSV and the .bat file) You can edit line_limit's value to your desired CSV size. 
&gt; calculus, relativity and quantum theory... Oh, come on, you are exaggerating. &gt; the "Perl of Python" It's not just Python it is a standard way of processing strings in many places from programming languages to command-line utils. If you encounter tasks that require finding and/or replacing something in strings often, it is useful to know how to use regexes.
What would I change it to? It seems I get some errors when I try: range(0, 44100*60) 
Experienced programmer here (25+yrs), expertise in modular and object oriented techniques. Have worked with most of the modern 3 and 4GLs. Picked up Python, took about month before I felt comfortable. Now at about 3 months, feel like I can tackle most any task although that is probably hubris.
To get started, instead of a book I recommend any of the free online interactive python tutorials. This will be far more engaging and some people like me learn best by doing the work
Read the sidebar. 
&gt;Oh, come on, you are exaggerating. Exaggerating? Really? http://www.ex-parrot.com/~pdw/Mail-RFC822-Address.html &gt;It's not just Python it is a standard way of processing strings in many &gt;places from programming languages to command-line utils. A horrible, inhuman way that probably violates the entire Zen Of Python. As you noted, there are many **human-readable** alternatives out there that are just as powerful.
edX courses are a good start.
I see you've used cefpython and wxpython, what aspects do each of these handle. sorry for not being specific
Regex syntax is about as interpretable as the President's tweets
I use `python -m pydoc re` to get the same regexp info right on the terminal. One can do even `python -m pydoc re.sub` to get usage details on `sub()`
ty!
It's not that bad
Does it improve on any of the existing backports of lru_cache? 
&gt; I did not write this regular expression by hand. It is generated by the Perl module by concatenating a simpler set of regular expressions that relate directly to the grammar defined in the RFC. You are not expected to write or read such long regexes manually.
/SAD[!.]$/
You need to know the complexity of each type : https://wiki.python.org/moin/TimeComplexity
r/learnpython
&gt; &gt; Exaggerating? Really? &gt; &gt; http://www.ex-parrot.com/~pdw/Mail-RFC822-Address.html Everyone knows that is a bad idea. "They were so preoccupied with whether or not they could, they didn’t stop to think if they should." No one really should be using regex for email verification, but if thye really want to, they can copy paste that. &gt; A horrible, inhuman way that probably violates the entire Zen Of Python. As you noted, there are many human-readable alternatives out there that are just as powerful. I'm very sure there are, the issue is that everyone already knows regex. Once you take the couple hours to sit down and grok it, it is a very useful and standard tool for making find/replace more powerful.
Recently bought a beginner course from udemy and it's good I think so thought this will help me
Can it remind me to call someone else's mom? For instance, yours?
Over there: ---------------------------&gt; If you're using a mobile app, google the name of your mobile app + "sidebar"
Hmmm. Don't you need to escape that '.'?
I very much need to make my own cheat sheet. I have a habit of avoiding regular expressions due to a combination of my lack of understanding and their relative fragility ... perhaps a touch of phobia due to the resemblance to the kind of horrors that emerge from people who are proud of being obtuse in Perl. I think a cheat-sheet aimed at my own personal weaknesses might eventually do it.
No, since it's inside square brackets.
No.
https://www.codecademy.com/learn/learn-python or https://www.datacamp.com/courses/intro-to-python-for-data-science?tap_a=5644-dce66f&amp;tap_s=116411-750171 google "python interactive tutorial" and you'll find others
Me too, although I don't understand how to use some of the extra tools they have at the bottom of the page. 
If they're so complex they need to be generated by other code, they're way too complex. That's simply not Pythonic. Regex and Python go together like Python with inline assembly code. 
Thanks!
Arch is fine for dev but when I see it in production people gotta die.
Regexes fit within the Zen of Python since they are a succinct way to express some otherwise complex conditional logic.
Hi, it seems that your email validator doesn't follow the rfc 5322. Here is a regex that catch 99%: ``` re.compile( r"(^[-!#$%&amp;'*+/=?^_`{}|~0-9A-Z]+(\.[-!#$%&amp;'*+/=?^_`{}|~0-9A-Z]+)*" # dot-atom r'|^"([\001-\010\013\014\016-\037!#-\[\]-\177]|\\[\001-011\013\014\016-\177])*"' # quoted-string r')@(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\.)+[A-Z]{2,6}\.?$', re.IGNORECASE) #domain ``` (Shamelessly stolen from the internet)
Thanks! Quick question: Can you provide an example of an RFC-compliant email that was failing our email regex? We’ve got pretty comprehensive test cases, so if we’ve missed one, it would be good to add it to our tests.
&gt; Regexes are a computationally efficient, theoretically sound, and highly &gt;expressive way of denoting patterns in data and text. To say one &gt;shouldn't use them is akin to saying one shouldn't use trigonometry or &gt;algebra. It is nonsense. It looks like line noise. Line noise is bad. Because of that realization we have Python today and Perl is slowly fading away. Binary code is computationally efficient, theoretically sound and highly expressive too. But it's an awful way to program. We're human beings, not calculating machines. Human beings don't think in regex. Regex is designed for machines, not for people. To quote Jeff Silverman, &gt;Regular expressions are “cool” &gt; &gt;“Cool” doesn’t belong in production code. &gt; &gt;“Cool” leads to unreadable, unfixable, undecipherable code that is &gt;expensive. Expensive to maintain. Expensive to fix. Expensive to &gt;improve. We're Python users. We don't want "^\(*\d{3}\)*( |-)*\d{3}( |-)*\d{4}$" in our code because no one just looking at that has any idea what the heck it's supposed to do. It's... blasphemous. Unholy. The Anti-Guido. &gt;So you have a technique which can often be replaced by more ad-hoc &gt;methods, isn't the same from platform to platform, is bulky and hard to &gt;use, is hard to write, hard to read, and has a somewhat small window &gt;where it is better than the alternatives and can still get the job done Remember Ken Reitz and Requests For Humans? People today are working on creating regex for humans. 
Complex conditional logic? RegExpBuilder can express any regex expression in human-readable terms: https://changelog.com/posts/meet-regexpbuilder-verbal-expressions-rich-older-cousin The Zen Of Python encourages us to prefer beautiful over ugly, simple over complex, and warns us that readability counts and if an implementation is hard to understand it's a bad idea. Regex is ugly, complex, hard to read and understand. How about parsing phone numbers where the rules are as follows: 555.555.5555 # Acceptable 555-5555 # Acceptable 555 5555 # Acceptable 5-5-5-5-5-5- # Obviously not acceptable 555.555-5555 # Judges? Nope. Not allowed. The regex looks something like this: ^(((\d{3}-)?\d{3}-\d{4})|((\d{3}\s)?\d{3}\s\d{4})|((\d{3}.)?\d{3}.\d{4}))$ RegExpBuilder (JS) would look something like this: // Handle prefixes (optional area codes for each format) var areacode_dash = new RegExpBuilder().exactly(3).from(digits).then("-"); // \d{3}- var areacode_space = new RegExpBuilder().exactly(3).from(digits).then(" "); // \d{3}\s var areacode_dot = new RegExpBuilder().exactly(3).from(digits).then("."); // \d{3}. // Build each of the individual components (dashes, spaces and dots) var dashes = new RegExpBuilder() .min(0).max(1).like(areacode_dash).asGroup() // (\d{3}-)? .exactly(3).from(digits).then("-") // \d{3}- .exactly(4).from(digits); // \d{4} var spaces = new RegExpBuilder() .min(0).max(1).like(areacode_space).asGroup() // (\d{3}\s)? .exactly(3).from(digits).then(" ") // \d{3}\s .exactly(4).from(digits); // \d{4} var dots = new RegExpBuilder() .min(0).max(1).like(areacode_dot).asGroup() // (\d{3}.)? .exactly(3).from(digits).then(".") // \d{3}. .exactly(4).from(digits); // \d{4} // Handle build final expression var regex = new RegExpBuilder() .startOfLine() // ^ .eitherLike(dashes) // ((\d{3}-)?\d{3}-\d{4}) .orLike(spaces).asGroup() // |((\d{3}\s)?\d{3}\s\d{4}) .orLike(dots).asGroup() // |((\d{3}.)?\d{3}.\d{4})) .endOfLine() // $ .getRegExp(); Which would you want in your code base? Which would be more maintainable? Which would be easier to read? http://rion.io/2013/08/19/regular-express-yourself-using-regexpbuilder/
Need need need! Thx!
I don't know all the subtleties of RFC 5322, but it looks like it would fail on something like `me+reddit@example.com`, which is a [pattern](https://www.cs.rutgers.edu/~watrous/plus-signs-in-email-addresses.html) I follow often for email addresses I give to websites.
I think `"@"@example.com` is one, albeit contrived.
Have you tried pytest?
Whoa—No. They don't need a parser. Regexes are the finite automata language class. Parsers are overkill. They tend to be LL(k) or LR(k).
I agree with all of your comments here, but that regexbuilder syntax is not Pythonic.
Yes!
In no world do Regexes fit within the Zen of Python. Succinctness in terms of number of characters is not a value. Normal regexes are written using esoteric characters. Regexes written using objects are not any more "complex" or have any *additional* "conditional logic". Both are succinct in terms of complexity.
This particular example was actually from Javascript. There *was* a Python version, but I'm not sure if it's still maintained. There are several other attempts at producing a more readable regex that were linked to earlier in the thread. Most if not all internally build a regex expression from a higher-level syntax. I just find it funny that people who use a language that removed the *brace* for being less readable would be so wholeheartedly in support of the cryptic regex syntax. 
No, what's unreadable is multi-line regexes with embedded comments. Using objects is the same thing without the pain mentally parsing anything. PyParsing is not great, but it's true that Python doesn't have great parsing unfortunately.
This is a perfect example of a regex that most people will have to look up syntax for—that aptly named objects could have made instantly clear.
I think they think: I went through the pain of working with regexes 200 times—now everyone else should. But the thing is that no one else should. You should just learn the computer science behind finite automata, and then replace the esoteric syntax with objects. By the way, your example would be more motivating if more of those weirdo commands like "*+" or "?P"
Good point about the groups. As for compile, python uses an internal LRU cache of recent regexes so compile only helps if you have a lot (don't actually know what number constitutes a lot...) of regexes that you're going to reuse.
I agree with everything you said.
AFAIK, compiling doesn't do much at all performance-wise. Internally the library already caches the compiled regex so if you actually do a perf test, they'll both be just as fast. The only time I use `re.compile` is for clarity, when I want to give a regex a proper name, and pass it around, especially now that we have typing annotation. Regex type is clearer than just string. 
&gt; python 2 &gt; 2018
I'd highly recommend looking at [parsimonious.](https://github.com/erikrose/parsimonious) It's the best parsing library I've ever used, full stop. I feel like it's a great compromise between the readability of objects and the efficiency of regex.
read the sidebar /r/learnpython read THAT sidebar post your code, properly formatted, including errors post your question, your expected output, and your actual output we won't do your homework for you
I think I looked it back when I was trying to parse LaTeX to automate some things. Can parsimonious even match "\begin{any_random_thing}" with "\end{any_random_thing}"? I can't see how. It looks like you would have to statically define the rules. What I want to do is for it to match on something like "\\begin{(\w+)}\\end", but capture the group and then when it tries to match "\end{(\w+)}" it checks that the captured group is the same. I think these are sometimes called parser actions. I couldn't find one Python parsing library that supported these arbitrary actions. It's not like it's hard to do. These libraries are great for the trivial parsing tasks they show in their tutorials. Unfortunately, they're not powerful.
Great guide to mocking using the standard library. Thanks for sharing
Not sure what Matlab is, but Python is cake.
It’s this programming language they have us using for school. I hear that it’s not necessarily the first choice for companies so I’m wanting to learn another type of programming just in case.
What a cool assignment 
Matlab is better than Python at expressing compact matrix calulations. You'll never get to solve a linear system with "A \ b". You'll have to write ``np.linalg.solve(A, b)`` instead. But Python is overall a much better designed language for general programming. The syntax is more regular and self-consistent, whereas Matlab is arbitrary. There is no substitute for Simulink however.
Learning to program and learning a programming language are two different things that often go hand in hand. If you know how to program, the basics of python will be easy to pick up. In my experience people who use matlab often learn it in the context of a specific application and may not develop a deeper understanding of programming outside that context. That may or may not be the case for you. Either way, python is straightforward and knowing matlab will give you a leg up. Just try not to write matlab style code in python.
&gt; There is no substitute for Simulink however. http://www.scilab.org/scilab/gallery/xcos It isn't perfect, but it's pretty darn good. If you're speaking about Simscape specifically, I haven't found a great FOSS solution for that.
Thanks. In the README, put a link to this reddit discussion. Also, insert a screenshot in the README.
Matlab is very good at it's specific applications; e.g., very easy syntax for working with matrices, doing fancy plots, doing specific mathy transforms, while using a mathematical notation. Python with numpy/scipy/matplotlib libraries will in general be able to do 95% of the stuff that matlab can do, but will use a notation of general-purpose programming language. E.g., python can do math and do it well, while also 
Do not just try to use python the way you use matlab. It’ll do it but you lose all the great things about python like strong scoping and easy self-documentation. (This includes pyplot but to a lesser degree) It is much better to learn to do the same things but using the other language [SciPy lecture notes](https://www.scipy-lectures.org/) are a great resource. Good luck!
There are some corporate holdouts, since the industry is trending towards Python for scientific computing if you know Matlab really well and talk to the right people you can find some pretty lucrative Matlab jobs out in the wild.
Might be worth asking r/chemistry. There have been discussions there in computational chemistry.
Seconding xconde's suggestion of `pytest` - it's great. Another fantastic testing library is [Hypothesis](https://hypothesis.readthedocs.io/en/latest/), which lets you write tests that should pass for *any* value - then gives you minimal counterexamples.
&gt;AFAIK, compiling doesn't do much at all performance-wise. Internally the library already caches the compiled regex so if you actually do a perf test, they'll both be just as fast. I discovered this for myself years ago when I ran into a bug in the cache implementation. In pre-3.x, a regex compiled from a unicode would not behave the same as one compiled from a str even if they container the same characters. However, the cache was just a dict, and so it was possible for a unicode to match an already cached str, or vice versa. My bug involved a price of code that worked fine in unit tests, but would fail in certain program. It turned out the program imported another module that compiled an identical looking regex, but with a str instead of a unicode. Then when my module was imported, it would get the wrong re object.
the fourth is Wadu.
Python 2 or 3?
[OpenModelica](https://openmodelica.org/) is also arguably one of the most fully featured simulators out there. It compiles the simulation to C and runs it. Easily the most featureful FOSS software I've seen in this region of things.
Thank you! That's the criticism I love. I will look into them. As a matter of fact I have created a list of improvement for the next Beagle Scraper version. And yes, I love web scraping and the fact that a PC will do it for me. One last question, do you think I should add a GUI to it?
[removed]
I have posted several projects in my [github repo] (https://github.com/neozhaoliang/pywonderland) here on reddit. Hope you enjoy this new one! This project draws the images of regular 4d polytopes projected to 3d. I computed the vertices, edges and faces in python and then rendered them with POV-Ray. The algorithm is called Todd-Coxeter for coset enumeration in group theory. `Sympy` also has this algorithm included but the implementaion there is incorrect, so I wrote my own one. The math is a bit invovled for ordinary people, but everyone can enjoy the result. 
Check out Numpy for Matlab users: http://mathesaurus.sourceforge.net/matlab-numpy.html http://www.numpy.org
Depends whom are you targeting. I'm pretty certain people who are interested in this sort of data either are fluent I terminal or have someone hired who is :) However building some sort of gui can be a fun experience! You could make a scheduler or output parser in QT or webapp in flask! 
Recently started working on a personal project to download and update Minecraft mod packs from [CurseForge](https://minecraft.curseforge.com). They promised a Linux-compatible launcher years ago and never delivered so I took matters into my own hands. Only just barely getting started, so I don't have much to show yet, but the repo is [here](https://github.com/EmberQuill/cursefetch.git) if anybody's interested. So far it only does a few things. I've been working on getting the file downloads from Mojang working, but thus far I've only implemented [downloading the main Client.jar itself](https://gfycat.com/PointedIncompleteBullmastiff). Mojang has a fantastic API that I can query to get a list of every version they've ever released, the associated library and native files, and download links and sha1sums for every file, all wrapped up in JSON syntax. It's a breeze to work with. Curse, on the other hand, has no API. Or they do, but it's all tied up in some kind of weird .NET endpoint that only returns binary data when queried. So instead I'm scraping the site using requests and beautifulsoup4. So far it doesn't do much, just gets a list of available download files for any given project.
Thank you for your feedback and advice, will deff take it into consideration :\)
This is awesome! Ive always had a thing for ncurses UIs.
Download anaconda, open a jupyter notebook, and just start trying to replicate some of the things you can do in matlab, line by line. Use the Internet for help, you should have picked up quite a lot of python within an hour or two. Julia is also very similar looking to matlab if you want to try that. 
I've been trying out TUIs to make a simple CRUD frontend to SQL databases. Unfortunately many of the libraries are in disrepair. I tried npyscreen and it was ok. At the moment I'm testing pythondialog because they feel much more responsive.
I'm probably being too much of a stickler here but you're mocking classes, not patching classes.
**Python / Web Developer** We're looking for Python developers to join our team to work on our **open source** and internal projects. We need someone to help create a new modern Web UI for our large Python project. For more information browse the job description and apply online: **Contact:** https://goo.gl/jPj1hR **Type:** Full Time **Location:** London **Remote:** No 
I suggest starting with the Spyder IDE, it is similar to the Matlab Interface and you can view variables like in Matlab.
TUIs gettin' some love! Woot woot! lol :) Looks great. 
Good stuff! Two suggestions: * Add something about code coverage. I only recently started running coverage against my unit tests and I have found it to be incredibly valuable. I wish I had been doing it from the beginning. * Mention how mock_obj.assert_foo() will always return true. Not all versions of unittest have assert_called_once, for example, and this can cause some problems. Since learning this, I have switched to things like call_count (which you're using) and assert_has_calls. I always write these tests to intentionally fail first to make sure the assert methods are valid. Here's a good run down on the latter: https://engineeringblog.yelp.com/2015/02/assert_called_once-threat-or-menace.html
You've missed the single biggest tip for how to write good unit tests in python. Use pytest.
Okay?
I'm still fairly new to Python, can you elaborate on the "easy self-documentation"?
Creating a useful class in each language is a great way to see where Python shines and Matlab struggles. I realize that this is really more of an argument for why Python is a better general-purpose language, though, as others have mentioned. It's a useful exercise, in any case. My general rule of thumb is, if you don't need Simulink, get yourself a snek.
&gt;What kinds of validations do you find yourself using most often? * Assert is instance of type of object. &gt;What kinds of validations would you find most helpful? * Check if is a file and is readable (and give a clear message indicating *why* what you put in isn't a readable file covering all of the different scenarios). * Same, but writable. &gt;We're thinking of extending the library with image validation (type, size, etc.), configurable password pattern validation, and the like. I wouldn't. If you're super keen I'd just do new libraries for these things. This library probably already does about enough. Comments on this library: * There could be work done to make it a bit terser - if I'm going to use these things all over the place I'd like to write a minimal number of characters. This might include shortening the name of the package to something 4 letters long and library names and using "is_int" rather than "validators.is_integer". * You should show what kind of exceptions get raised in the README. The idea is nice, but in order for it to really be useful I'd like to see evidence of ultra crystal clear exceptions - e.g. if what I put in isn't a readable file, *why* is it not a readable file? is it a directory? is it a file but not readable? also, what value actually did I put in?
Networkx is one possible solution, One question is missing however. A node moving is for you a physical movement or a change of the node of its links through the matrix ? this makes a lot of difference. If you are evaluating the movement of a node you will define a space (x,y,z) and just check the movement of the network is embedded in space. Otherwise if you are talking of rewiring you just need to check time to time the neighbors of your node, if your simulation change the wiring (destroy and create links) then you are done just checking changes in the neighbors 
You might get some inspiration from [pgcli](https://github.com/dbcli/pgcli/blob/master/README.rst). 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [dbcli/pgcli/.../**README.rst** (master → f81243e)](https://github.com/dbcli/pgcli/blob/f81243eb1c86598b020169e01a0738c68a4c74e0/README.rst) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dxqa80m.)
Also check out [prompt_toolkit](https://github.com/jonathanslenders/python-prompt-toolkit), my favorite terminal UI lib
2000$/eur for the license, and another 2000 for toolbox X ,and another 2000 for toolbox Y.... At work, I got the matlab license and the signal processing toolbox. Tehn I tried to do some stuff that, ups, is not there. There fore you can find in internet dozens of self-made matlab packages from people implementing, I don't know, non linear fitting, of course who know what bugs in there. I gave up, installed python + scipy and never looked back. 
Probably `int` is the correct response. There are different types of numbers in Python. Please, read about numeric types: https://docs.python.org/3/library/stdtypes.html#numeric-types-int-float-complex
I figured too as it's the return will always be a number but I tried 'int' &amp; it doesn't work!! I highly doubt spending more than an hour frustrating on such a silly problem has any encouragement reward
I would suggest you read the community info sometimes referred to as the sidebar or wiki. That being said take a look at http://inventwithpython.com/
&gt; and looking it up patch is only really used when you're instantiating a object from within a class I was responding to you. Your statement was incorrect.
Do you need all those columns? `read_csv` has a `usecols` parameter
The non-propriety nature of python is enough of an argument to justify its use over MATLAB
[urwid](http://urwid.org/) is what mitmproxy uses -- if anyone's used their cli client you know it's a pretty sweet frontend.
Dude that's some next level thing. I dig it. 
It appears to also want the types for your parameters? Not really sure...
def count_vowels(word): '''(string) -&gt; int Counts vowels from word &amp; returns int to caller'' return '''some code I don't know of to evaluate from word''' That's as far as I got 
Will do. Thank you!
Wow. Now I'm gonna start writing a tui app. Thanks :)
Looks cool. Going to test this out and compare with results from textacy. 
You could switch to the pyspark API, that will be much faster.
Great post! 
Thanks for sharing my article!
Calling it self documenting may be overboard but still. One extremely frustrating things in matlab is the global namespace. So you can (a) have multiple functions with the same name and hav Roy worry about which one gets called by manipulating the path. And (b) you don’t immediately know where certain functions “live”. Are they built in? Toolboxes? Self-made? In python, assuming you don’t do From mymodule import * (And you **really** *shouldn’t*) you know the modules for each function. The downside is you have to type `math.sqrt` or `np.sqrt`but that’s good. They work on different objects and have different properties. 
I generally write libraries that have one common base class for exceptions and then inherit everything that I anticipate can go wrong from that. I like the approach that *whatever* goes wrong running your library - I know that I can just do "except YourBaseClassException as error" and it will be caught. That said, if you were going to do the assertion thing I suggested I'd be consistent and raise AssertionError.
I love keyboards and that TUI's virtually have to be keyboard-centric.
I just made the change. Python without numpy is not a replacement for matlab. Other than that it is fairly similar. Recently numpy introduced new operators to make matrix multiplication b=A@x Unless the matrix is small, you almost never call A\x but rather a solver so you can do that too in python. From numpy import * Is discouraged, but From numpy import sqrt Or Import numpy as np Is fine I never used simulink, so I can’t speak to that. A few things like Jupiter notebooks are cool, but they just don’t fit into my workflow. 
From everything I'm seeing it's preferred to use mock, why do you use patch? It made sense to me to use patch when you're instantiating something within a method/class or I guess for static methods/classes? I'd think it was a code-smell if you're using patch more often than mock, unless you're able to use patch to mock objects being injected into a function just easier than using mock? Not trying to argue, I'm more of a Java dev, just trying to get a better understanding on this. I also understand python is written a bit differently than Java, so I might just be trying to force some Java-ish programming in python.
Thanks again for your suggestions! Very much appreciate it.
This one is quite good: https://www.amazon.com/Effective-Python-Specific-Software-Development/dp/0134034287
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [learnbyexample/scripting_course/.../**Python_curated_resources.md#code-solutions** (master → 44b288f)](https://github.com/learnbyexample/scripting_course/blob/44b288f74a99a4fb9e22814455303a69d646fa4f/Python_curated_resources.md#code-solutions) ---- 
What does this data represent? It might be a good idea to load the data to a database and do some manipulations to get it to a more usable form. From there, pandas may be able to handle it better
I've used pytest a little but I don't see why it's considered so much better than regular old unittest? These days I just run my unittests with because it has nicer debug output.
`numpy` is a better designed library imo, but it can be slower to become proficient because even more general purpose also `scipy` will make you feel right at home since so much of that code mirrors matlab and will be most relevant for engineering homework. You also might like `jupyter lab` and `ipython` for the interactive environments.
I've tried to test with different baud rates, databits, stopbits and flow control, but to no luck. Tried letting it autodetect as you suggested, but that gives the same results at before. This certainly is quite the riddle.
There is a difference between a TUI and a CLI. That's a CLI with a fancy layer of autocorrect/completion. I'm talking like old PCTools interfaces, AS/400 or dBase database forms, etc.
ULang, an esoteric language based on [&gt;&lt;&gt;](http://esolangs.org/wiki/Fish).
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](http://esolangs.org/wiki/Fish) - Previous text "&gt;&lt;&gt;" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
Why a web page rather than a normal GUI like PyQt, Tkinter, or wxpython? You may be interested in [Gooey](https://pypi.org/project/Gooey/), which is a streamlined way to make a CLI into a GUI, based on wxPython. If you really want to use a webpage, you could look into electron or htmlpy, which basically allow you to write a GUI in HTML / CSS. If you really really want to use a webbrowser, then you can use Django or Flask, even though it's kinda off-label. 
Yeah, again MATLAB is wonderful for matrix math, plotting and things it was designed to do well, when you have it pre-installed everywhere the code will be used. It sucks for using non-matrix datatypes, function calls (slow), for loops (slow), syntax for non-math things (ugly), sharing your code, etc. Granted, most things I can think of, there are ways to get around in matlab even though they are more annoying to use than a general purpose programming language. But the biggest advantage of python over matlab is the community. (Due to being open-source and having made great language design choices that make python code very readable for a wide variety of applications). Most random services have python APIs or well-supported python libraries (similar to other major languages like javascript, C, java), though usually python has the most readable and least cumbersome syntax. E.g., you want to [send/receive text messages](https://www.twilio.com/docs/quickstart?filter-language=python), or manipulate a google API like read/modify [google spreadsheet](https://developers.google.com/sheets/api/guides/concepts), or [interact with reddit (create a reddit bot)](https://praw.readthedocs.io/en/latest/). You want to use the major deep learning libraries [still in active development? (e.g., not Caffe 1 which is effectively dead (last releases in 2014 but had matlab support), but tensorflow, caffe2, torch, keras, CTNK, gluon, etc.](https://deeplearning4j.org/compare-dl4j-tensorflow-pytorch).
I'm guessing TUI stands for "Terminal User Interface". Shame the author didn't define it at the start of the article, and assumes everyone already knows what a TUI is.
CSVs are usually expected to have relatively few columns and much more rows. I won't bet on it, but I can imagine that someone implementing the reader would try to process a row at a time, which would be a terrible idea in your case. What I'd try to do: write a script that transposes your data, so that you have 5 columns and 85000000 rows, and hope you can process it in chunks. Also, Pandas will load everything in your CSV into memory. Depending on what kind of data you have, it may mean that you need twice the size of your file, or maybe even more... else it will be really wasteful to wait for it to finish.
That's really cool! Link to code?
read the sidebar, post in the right subreddit, read THAT sidebar, and we won't do your homework for you.
Have you tried using [chunk size](https://stackoverflow.com/questions/46602613/iterate-through-large-csv-using-pandas-without-using-chunks) or [iterator](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.iterrows.html) already? I think using iterator it should be fast {theoretically it will load only few rows into memory} 
The book "Fluent Python"
The killer feature for me is parameterised testing. Totally non-negotiable, a gaping hole in pyunit. Using the built-in assert is much more flexible and usually much more informative. Actual fixtures are much better than setUp and tearDown methods - being able to write the setup and teardown for a single fixture in one place is much better than having to write separate classes for every combination of fixtures you want to use (or waste time instantiating a bunch of stuff you don't need). That they're composable is awesome too. It also lets you skip or xfail tests easily if one dependency isn't there. We also just don't need test classes. The xUnit pattern makes sense for obligate OO languages. But Smalltalk was designed in the 60s and there's no good reason to cling to its patterns when we don't need to. Pytest is more pythonic. But you can write test classes if you need to. Because pytest is great. I've done this for testing several levels of inheritance. 
I don't see anything wrong with your code. Are you sure you pushed "save" before you ran it? A syntaxerror means your code is not valid python; what you are connected to will make no difference. 
Unrelated, but there's also a `write16` method so you don't have to split your numbers into bytes: def setAllPWM(self, on, off): "Sets a all PWM channels" self.i2c.write16(self.__ALL_LED_ON_L, on) self.i2c.write16(self.__ALL_LED_OFF_L, off
There's lots of different ways\(i only ever use 2 though\) and the least\-code way is to subclass QThread and redefine run method to do stuff. However that may pose limitations if you need to pass something to the class. So to gain that possibility: self.lel = QThread\(\) #name of thread self.Lel = Lel\(\) #name of class. i use big Case to differentiate from name of thread and have found that useful self.Lel.moveToThread\(self.lel\) #make the class act as a thread without having to subclass QThread self.lel.start\(\) #start thread Communicate with slots and signals. Bind signals &amp; slots together with .connect where you defined the previous. Sorry for this hastily written msg. Hope it was of value.
This can be a good start: https://github.com/tyiannak/pyAudioAnalysis You have to create a small clapping sounds dataset first and then train the model.
I suggest you to check out matplotlib and seaborn. They are very powerful where it comes to graphical representations.
Depends on how complex an interface you think you need. Can you simply print a menu to stdout and read stdin to have them choose what to execute? If you're comfortable with them choosing from the command line, look into the argparse library. But it sounds like they just need a guide rather than a script to do it for them.
I did, no error for me. Are you sure you don't have some old copies lying around? Maybe you are in the wrong folder?
"Text-based" I think.
This is an incredibly difficult program to create. Currently there are projects that exist but they have large time of computer scientists, programmers and linguists. As for where to start yourself. Your neural network would need feedback from correct syntax, responses to statements that make sense, and responses to statements that convey the attempted idea it is try to get across (is it sunny out? Yes and no are correct answers but it has to have some feedback mechanism to decide what to chose for all statements in general...) One thing that you may want to look into is google cloud language API. There was massive team who put it together and it is pretty amazing. It does not do exactly what you are looking for but you would likely remove a large part of the parsing required. Good luck!
please everyone refrain from using `sudo pip3 install ...`
What does `decoded_bytes = a.decode()` yeild?
It sounds like https://github.com/wooey/Wooey is exactly what you want. You might want to try out https://github.com/chriskiehl/Gooey as well as it generates something a lot closer to a native app and i have heard a lot of great things about. I plan on trying to use Gooey instead of py2app for my next few deliverable apps. If you need something more complex for the whole company I recommend using something like Rubdeck, which allows you to set up a whole admin panel of commands.
Try using [os.walk](https://docs.python.org/3.7/library/os.html#os.walk) instead. You can probably achieve the same functionality with only a handful of lines.
I'm thinking about that for half a year, but I almost give up because that need so much skill to implement.
Essathon has a nice ring to it.
One option would be to host a \[devpi\]\([https://devpi.net/docs/devpi/devpi/stable/&amp;#37;2Bd/index.html](https://devpi.net/docs/devpi/devpi/stable/%2Bd/index.html)\) instance, upload your common package to it, and then point your build server to the devpi instance so that the build process picks up the common package from there.
You probably want Kivy orQt for the interface. It needs be very responsive and not look like a desktop app so I'd recommend those either for flexibility or performance. If you try to put special FX over live audio from a microphone (e.g. a guitar amp program) you're going to have an issue with audio lag and I'm not sure how to get around that. Typically it's solved by turning off buffering in the sound card driver or by using a musician's sound card.
My tip for you is to use [virtualenv](https://virtualenv.pypa.io/en/stable/userguide/) with a different environment for each project.
This is a good site http://www.practicepython.org/
You replied to the bot
I'd recommend using pipenv, or a step older would be virtualenv and storing your package deps using pip freeze, piped to a requirements.txt file. That should be enough to Google.
You can point pip at source files: `pip install -e path/to/local/source/piackage` or `pip install -e git+https://github.com/username/repo` will both work
Why?
ok makes sense. I got the "Servo_Example.py" working. My final goal is to get it working with [this](https://gist.github.com/rjehangir/ccc62a332ce93482ac4c) code. It is little bit different because the speed is from 1500-1900 instead of 150-600. Error is saying "line 16 pulse. local variable 'pulse' referenced before assignment." Makes sense because setPWM doesnt take "pulse" while setServoPulse in "Servo_Example.py" does. Do you know how to get "examplePWM.py" working? thanks
You mean like https://lmms.io/ ?
&gt; An experienced programmer may start writing useful Python code in a matter of hours. As the first productive hours become weeks and months, a lot of developers go on writing Python code with a very strong accent carried from languages learned before. I think the Fluent Python author gets where I am coming from. Thanks for the suggestion.
When you say ‘ok’, do you mean that it did what you need, or that it was just enough for what you needed without anything special?
If only the screenshots and documentation for urwid didn’t include vomit-inducing colour choices. Really offputting at a first glance.
Not directly helpful: What's in the banner that you need? I'm wondering if there isn't an easier way to get the info you want remotely. For example, setting up SSH on each machine + using Ansible gives you complete remote access and it can run anything (like command line apps) on an array of machines to get that same info.
It turned out the fix for the cache bug was already in a newer version of Python. We were a couple of patch release behind the fix, IIRC.
Yes, Google your game engine + Python
In the read csv function? Not that I know of, but easily doable after. One way: For col in target_columns: df.loc [df [col] &lt; threshold_val, col] = np.nan 
[Godot](https://godotengine.org/) has a builtin scripting language that's really similar to Python, _and_ bindings to Python itself.
I need the banner that appears after you connect to telnet service of a given IP, regardless of what shows up there, be it a login prompt, a shell, text etc. Using ssh + ansible is not the solution. What I have is a list of IPs inside my infrastructre that have open telnet ports and I want to check what is there, so technically what I need is to automatize nc 10.1.1.1 23; get the banner; save to file; disconnect, move to antoher host. I just have the problem with getting the banner is a reasonable format...
Thanks! :)
The only (unsatisfactory) way using read_csv that I can see is to make use of the 'converters' argument: &gt;&gt;&gt; import io &gt;&gt;&gt; s = io.StringIO('0.1,5\n2,4\n0.3,7') &gt;&gt;&gt; pd.read_csv(s, converters={0: lambda x: np.nan if float(x) &lt; 1 else x}, header=None) 0 1 0 NaN 5 1 2 4 2 NaN 7 Any value less than 1.0 in column 0 is set to NaN. I dislike this approach, however. It's clunky and likely to be slow as the conversion requires Python-level function calls for each value. The column also has object dtype once parsed, not float64. It would be better to set values below the threshold once the CSV data has been read into a DataFrame: &gt;&gt;&gt; s = io.StringIO('0.1,5\n2,4\n0.3,7') &gt;&gt;&gt; df = pd.read_csv(s, header=None) &gt;&gt;&gt; df.loc[df.loc[:, 0] &lt; 1, 0] = np.nan &gt;&gt;&gt; df 0 1 0 NaN 5 1 2.0 4 2 NaN 7 If you want to replace values below 1 in _every_ column, you could use: df.where(df &gt;= 1, np.nan) This is likely to be faster and avoids the object dtype problem that 'converts' had.
What TUI did you use?
why?
The book Fluent Python. 
Haven't you, by any chance, learned Python from Al Sweigart's books/courses?
I was going to mention Fluent Python in my response suggesting the Cookbook until I saw this. I think between Fluent and Cookbook someone coming from C or Java would have 68% of what they need to work in Python. Or know what they would need to look for to know what they need to know to work in python.
I’m afraid not, just through 3 years of high school computer science
OK, so not only Al Sweigart promotes those ugly camelCase names for functions and variables. ;)
Thanks! I'll give the setting-it-after approach a try!
Thanks! I'll give it a shot!
What site is this? And what in the world??? If "(str) -&gt; int" was literally the answer that seems much more like someone trying to turn python into OCaml. It seems like the site wants to play some bizarre form of mastermind with you.
graphviz and networx - that's all you need.
do you think you can help me with that? 
Does it help if I point out that you can run things from a virtualenv without sourcing/activating it? e.g. you can begin `/usr/bin/something-important.py` with `#!/opt/virtualenvs/important/bin/python`
curses, which is why it only works on Linux.
Yeah, that's a good point. I don't like hard coding the path of the virtualenv into the script, but it's good enough for things that are only deployed internally. I think we could store the scripts in source control with a normal `#!/usr/bin/env python3` shebang, but replace it during our internal deployment/RPM build. It's definitely something I'll bring up.
I have a question. Why is the additional data files have a limit of 10MB. Is there a way to surpass this because I have a big project I need to combine into one exe file with like at least 20MB or more 
Besides, I hate being that guy, but I would never guess by looking at your code, that you've been learning programming for 3 years. That's quite long and you still make rookie mistakes. (like sometimes using global object `draw` and sometimes passing it to function as `t`, defining/importing unused objects, using magic numbers and magic strings. The whole concept of defining some `mode` in many if statements just to check it inside function in many other if statements isn't very fortunate IMO)
I mean two of those years were GCSE level to be fair to me, our coursework was having to create a simple nested if statement “customer help service”
I felt like there were many rough edges I didn't understand. I also found some lag I couldn't debug. Pythondialog is faster, but "canned" in that you can't be as flexible as npyscreen. I'd say "ok" because I felt it was mixed, but I haven't settled on a solution yet.
For anyone who might want to check this out, it's on my github: https://github.com/panki27/minebash
Woah I agree this is pretty cool. I’d love to see the code if you have it. 
Yay, finally read about someone else doing this. I thought I was the only one that ran my python apps this way. For systemd started apps, I normally set `WorkingDirectory` in my service file so then set the shebang as `#!env/bin/python`
There's Kivent. I've been building a game with it: Check it out! https://www.youtube.com/watch?v=c8HoZy-IM1Y&amp;feature=youtu.be
There’s plenty of runtimes, but pretty much zero tooling. 
oh yeah, makes sense. Thanks.
Why do you include flags when calculating the hint?
In my opinion Tkinter has not aged very well and does not appear modern. I would rather use a web page because I have front end development experience that I can use to accelerate the build.
Thank you for the suggestion!
Hey. Anyway you could share the code for the GUI? I am building something similar!
Hmm I'm pretty sure I am concerned only sith the movement of the node itself. Don't think I will need to rewire the network at any point.
But Python is free, and Matlab is not. Once my student access was over I switched to Python and never looked back. I do civil engineering calcs mostly on the water treatment side (chemistry and hydraulics) and Python can do all of the calcs that I used to use Matlab for. 
I don't need to plot anything. I just need to have a graph which I can refer to for position of a node and possible paths if that makes sense. So for example if a have a topology such as A--B--C and based on that I derive a direct graph. I want to be able to say, ok I have this node that will start at A then at t=2 (next interval) I want it so move to B. Hope this makes sense ahah
https://www.reddit.com/r/Python/comments/8dwocz/tutorial_for_building_a_localhost_gui_for_less/?st=JGA1K5JF&amp;sh=704db588
Sounds like you know what you’re doing for the most part. I take it you figured out how to create packages with init files and setup.py?
Commenting to save for later
There are two different kinds of flags - FLAG_MINE if it's on a mine, FLAG if it isn't. Only FLAG_MINE get's counted.
A minesl sweep, Ned! On an open field! 
Calm down, Santa. 
Santa? Deleting a user's root directory seems like a horrible thing to wake up to on Christmas morning ;_;
The first line of the batch file just starts the python console, I believe.
Yes that should work fine
You might want to go with something besides that dark blue for the 2s. It took me a second to see something was there. Maybe it's just my screen though.
If you have to ask, then don’t waste your time on recreating GarageBand. Python is not going to cut it for real-time audio. C++ is what I imagine most DAWs are written in, with a thin layer of C# or Objective-C on top. Do not be afraid to give Python a go, though! It is a fun, easy-to-learn language and good for both beginners and experienced programmers. I do not want to crush your dreams, just letting you know that building a clone of GarageBand would take way more effort than you imagine (months and multiple engineers for a MVP, years and dozens for feature-parity, I’m guessing). 
There is a prety good example here. https://stackoverflow.com/questions/4201062/how-can-i-unshorten-a-url 
Wrapping my head around asyncio. I was going to write a server program with threading, but found out about asyncio and decided that I should challenge myself with this new \(to me\) aspect of Python. It's certainly more challenging than I expected; particularly because of all the abstraction. If I had a greater understanding of the underlying layers, it would probably be easier. But wow... this feels like playing with voodoo.
That's what network is for. Graphviz will let you render an image of it for visual inspection
Do you know how that unshorten_url(url) function could be used to change each shorted url all at once
Unfortunately, PyJS hasn't been touched in 3 years. Might be dead-isa. In Internet time, that's like a decade or something.
Sudo pip3 install npyscreen I get some orange text, some white text, and some red text, followed by some more orange text. I’ll try and keep working on this but if anyone can tell what’s wrong just from that let me know. 
[Pipenv](https://docs.pipenv.org/) seems to be the best practices solution to your problem. It links together pip and virtualenv to enable deterministic builds from a Pipfile inside the repo. So you anyone running these scripts would just clone the repo, run pipenv install, and then they’d have a new virtual environment with the dependencies they need to run that project. It’s also the new officially recommended python packaging tool from Python.org.
same here! love it 
lol
I would start simple threading, but conside reading up about using a Queue or asyncio. https://stackoverflow.com/questions/16181121/a-very-simple-multithreading-parallel-url-fetching-without-queue http://www.eamonnbell.com/blog/2015/10/05/the-right-way-to-use-requests-in-parallel-in-python/ 
This sounds like a really fascinating project with some potentially significant consequences.
https://gspread.readthedocs.io/en/latest/ `open_by_key` returns a Spreadsheet, but `get_all_records` is a method on Worksheet, not Spreadsheet. If you know which worksheet within the spreadsheet you want (probably the first sheet), you could get it with `wks.get_worksheet(i)`.
r/learnpython for the motivated.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/u_mharbol] [Mines](https://www.reddit.com/r/u_mharbol/comments/8e19ww/mines/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Thank you. Regarding code coverage, I’ve not yet done this. Any tips on where to start? I’d be happy to add this to the guide.
Thanks man. Big help. 
1 You should test. 2 There's much more to testing than TDD Keep your goal in mind, of a correct, usable, maintainable program. Learn more than just one method of testing and contrast and compare. 
Nice to hear the situation is improving anyway...
Which resources are you using to learn?
At a company I worked at, we deployed our Python apps with Python installations and virtual environments to a central file system which was NFS mounted with autofs on all the systems. We also wrapped Python scripts in shell scripts that selects Python installation depending on OS. That way devs had full control.
Thanks for the heads up! Will try os.walk and update.
Nodes then are moving with some dynamics that is external to the network itself. You have to define the motion equations and check for the progresses over time. That is you don't need either the network itself just the coordinates of each node 
Best of luck to you. I hope your super innovative memesite takes off.
The effort is good, but it doesn't clarify much. Sentences like &gt; Tuples are like lists, except that they are immutable, so their values cannot be changed after initialization and &gt; A set represent the set data structure, which has different implementation than a list, and therefore different performance characteristics. Are almost meaningless. Why does mutability matter? When should a tuple be used instead of a list? What are the performance implications? What are the advantages and disadvantages?
It's like playing realistic minesweeper
For 3D games, you can check out Panda3D: https://www.panda3d.org/ It is made specifically for use with Python, has a lot of features, is well documented and is under active development. Also, Godot: Its main language is something called GDScript that is reminiscent of Python. It also has some sort of Python bindings, although I am not sure how well integrated they are with the rest of Godot (with regards to deployment on mobile or web for example). For 2D games, PyGame seems to be popular.
[r/Python Official Job Board](https://www.reddit.com/r/Python/comments/8bx6md/rpython_official_job_board/)
GODS I WAS EXPLOSIVE THEN
That's a great fact I never knew. As you say, I would still prefer `re.compile` for clarity (and short line lengths) when reusing a pattern.
This is the proper answer for any will-this-work question. Especially when the code is already written out. 
In that case, I think I will be sticking with `setup.py` for start. Thanks!
Like the name :) I will check it out, thanks!
As others have commented, I think it would be very useful to say more when you're introducing the data types. You can still be terse, but it's better to say something concrete. For instance, you could write something along the lines of "*A set is an unordered collection of unique values. Testing whether a set contains a given value takes constant time with respect to the size of set, compared to linear time for lists.*" Also, I think you should have a section on dictionaries, unquestionably one of the most fundamental data structures in Python! A couple of minor mistakes: Class Person(object): should have a lowercase 'c' for 'class': class Person(object): Also, you need to increment 'i' in your while loop as it will just print 0 forever as it currently is: i = 0 while i &lt; 100: print(i) # you're missing i += 1 