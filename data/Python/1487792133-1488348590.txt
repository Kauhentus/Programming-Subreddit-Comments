Very true. Of course, there should be a QA/Security guy checking your work for that sort of thing
Thank you so so much!
 with open(girlfriend,'r') as wife: wife.read('Accept')
 click 'Auto-format PEP8' click 'OK'
You need a much better demo of what you do. Or even let someone give a public github url and run on that. I'd never bother creating an account without a better idea what I'm getting. That one example image doesn't even show a real dupe as far as I can see. 
Excited to check this out later!
Hint hint.
You can also dynamically bind the methods to the instance instead of `__getattr__` returning the `unwrap` function: import types class Wrapper(object): def __init__(self, wrapped, actions={}): self.wrapped = wrapped for name, func in actions.items(): setattr(self, name, types.MethodType(func, self)) def __getattr__(self, item): return getattr(self.wrapped, item)
Oh I didn't know about /r/learnpython. Thanks a lot for the answer and info.
**Here's a sneak peek of [/r/learnpython](https://np.reddit.com/r/learnpython) using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#2: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) \#3: [Beginner's Python cheat sheets](https://np.reddit.com/r/learnpython/comments/4atn5f/beginners_python_cheat_sheets/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/5lveo6/blacklist/)
One question I have with this is will rotating all images 90 degrees which will have you 4x the images help the prediction? Or will something sideways look thr same to the CNN?
I've been making Python 3 compatibility fixes to a genetic programming framework I've been developing ( https://github.com/hchasestevens/monkeys ).
It's a little slower to execute if you use pure python, but it's much faster to program. In other words you trade computer time for programmer time. Of course most heavy duty computation can be passed to modules written in C (like numpy), where they are as fast as any other language.
Good point that the true bottleneck is programming time, usually not actual computing time.
No. modern processors use a source of quantum noise
Any GUI can do that. &gt; have the code for the web request running in a loop GUIs have their own loop (usually called the event loop) and you should add your code to that rather than making your own loop. If you have more questions like this it's better to post them on /r/learnpython. Be sure to include which version of python and what OS you are using. 
&gt; belongs in /r/learnpython
In my experience the only [simpleaudio](https://github.com/hamiltron/py-simple-audio) could be installed via pip without external dependencies and compilers. But it is, basically, bindings to a simple cross-platform wave-player (no mp3, no ogg). If you need a cross-platform mp3/ogg player without dependencies probably the easiest way would be to do subprocess.call on default system command-line mp3 player. You can provide your own binaries for such player if the system does not have one by default.
No, the cheeseshop sketch obviously.
thanks, I found that too, at least it's in the works
Burn the heretic Kill the mutant Purge the unclean
http://software.intel.com/sites/default/files/m/d/4/1/d/8/441_Intel_R__DRNG_Software_Implementation_Guide_final_Aug7.pdf
You assume pyInstaller is the problem. Python 3.6 decided to go break things. Why does deepcopy no longer work on struct objects? I don't test on the nightly builds and neither should pyInstaller. When you have a large code base, you can expect to find at least one problem every time you upgrade your Python version. Why should you expect pyInstaller/PyCrypto to be any different? Cut them some slack and give it some time. If it was super important for it to work, you wouldn't be on Python 3.6 yet and it wouldn't be a big deal. &gt; To my knowledge py2exe and pyinstaller are completely broken or unsupported now in 3.6. That's rude.
'Lifestyles of the Egotistic' is possibly the greatest rap lyric I've ever seen. Awesome work.
I'm not familiar enough with numpy or scipy to be able to help you myself, but the people at /r/learnpython/ are generally very helpful with these kinds of things.
Thank you! 
&gt; I don't test on the nightly builds and neither should pyInstaller. Um, except that's the smart thing to do and rather easy with a good CI, such as TravisCI. It's the best way to not be surprised by issues. Don't get me wrong, PyInstaller has plenty of things it needs to address before it will be working with latest or nightly, but doesn't mean they shouldn't be testing against it and seeing what potential issues lay ahead. 
That's not new! - Python 3.6 was released on 2016-12-23, and you could `conda install python=3.6` the same day. - Anaconda 4.3 was released 2017-01-31, at which point all the packages were tested and stable on latest python. This version runs `conda` itself under Python 3.6, and this was probably possible earlier. This is just a miniconda release that ships Python 3.6 in the root environment, which is a nice but not earthshaking thing to have.
I don't want the main thread to wait for the timer thread. There are scenarios where the main thread completes while the timer thread is still going, which should end the program in this case (timer thread set as daemon so main thread does not wait for it)
Hi asshole, this is NOT my homework. As you can see it says 2014, I found this on my own I would genuinely like to know how to solve it. Thanks for nothing. 
You can try /r/learnpython if you need help with the python part but you need to be able to solve it on paper first. Try /r/learnmath if you need help with the math. Both of those are going to expect to see some effort on your part; so I'd suggest you try it yourself first and post what you have tried and where you are stuck. 
Literally!
Love it! How does it know how to rhyme words? Is that just a feature the neural network has learned, or a side effect of the input data, or is there something else at play? 
Thanks a ton!
really was inquiring, not so much complaining, I do appreciate what the developers do 
the development speed of java spring ,is as fast as django. so,in the area of web development,python has no benefit than java. when use python to data science,the main work is done by the libaries,such as numpy,which is built in c,and so the speed is not a problem.
Speaking of non-native speakers not getting sexual innuendos, the Cabify app (spanish uber concorrent that is gaining a lot of users in my city) says "Your driver is coming" when you call a car, which always makes me giggle a little. Uber has a little more of a clue and says "Your uber is arriving". 
Aren't you the prickly one? Perhaps if you came in here with more than "do this problem for me" and actually showed your efforts, you'd get a more helpful reply.
Cool! A very nice idea!
Import SmoothMoves from python_wingman as lets_get_it_on
Seconded! 
camelCase* ThisIsPascalCase
Making my way through some beginner guides. Took a week+ off trying to get back on the grind.
A lot of this appears to be straight copy from the Google protocol buffers guide....
PyInstaller works great with Python 3.5 and Windows 10. I use it on a regular basis to make standalone executables. 
Are you learning ruby with your other hand? 
Great tutorial, I have seen a lot about tensorflow but never really had any opportunities to implement it. I do a lot with home automation using Arduino and RPI. Do you think TF is at a stage where it could recognise a person? 
If you're distributing this program using setuptools, you could use [pkg_resources](https://setuptools.readthedocs.io/en/latest/pkg_resources.html). I allows you to specify non-code files in your setup.py, and then access them without needing an absolute path. Please direct all future questions to /r/learnpython.
Will do. My mistake. 
It's just like USB, 80% of the time I fail the coin-flip.
;)
Here you go. op2_new = copy.deepcopy(op2) File "/home/travis/miniconda/envs/test-environment/lib/python3.6/copy.py", line 180, in deepcopy y = _reconstruct(x, memo, *rv) File "/home/travis/miniconda/envs/test-environment/lib/python3.6/copy.py", line 280, in _reconstruct state = deepcopy(state, memo) File "/home/travis/miniconda/envs/test-environment/lib/python3.6/copy.py", line 150, in deepcopy y = copier(x, memo) File "/home/travis/miniconda/envs/test-environment/lib/python3.6/copy.py", line 240, in _deepcopy_dict y[deepcopy(key, memo)] = deepcopy(value, memo) File "/home/travis/miniconda/envs/test-environment/lib/python3.6/copy.py", line 169, in deepcopy rv = reductor(4) TypeError: can't pickle Struct objects op2 is just a class with no special `__copy__` method It has multiple struct objects like: self.struct_8s = Struct('&lt;8s') I deleted them and the crash went away. Granted you should probably delete them when you're done reading, but still...why would that suddenly fail?
Umm well it's mostly a choice of personal style. Many find foo = 10 more readable than foo=10. I'd mostly just recommend being consistent 
thanks 
Can't see enough of your code to know. You should produce some minimum example that can actually run that shows the fault, and perhaps submit a bug report. I assume you mean a class used as a data store (C struct) and not the `struct` module in the standard library?
Personal style preference, makes no difference in the code. FYI this question is better suited to /r/learnpython. It's a great resource!
No. It's a Python standard library struct module binary object.
 Triamore:~ Moppy$ cat f.py import struct class Dob: def __init__(self): self.a = [1, 2, 3] self.b = [struct.pack('hh', 1, 2) for _ in range(4)] from copy import deepcopy a = Dob() b = deepcopy(a) print("No crashy") Triamore:~ Moppy$ python3 f.py No crashy Triamore:~ Moppy$ python3 Python 3.6.0 (v3.6.0:41df79263a11, Dec 22 2016, 17:23:13) [GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; I really can't see what you're doing from the code snippet you provided. Nested structs? But if it's truly busted, you should bug report it. I can't as I can't break it.
I'll second this. Doing the same thing. Only thing weird I find is occasionally having to add some imports that it doesn't find. I have to do this with pymssql. I'm using 3.5 on Windows 10 as well. But once compiled, it works great.
this is definitely the part of python I don't miss
Yes. To the letter, as often as we can. Yes, even line length. It stops arguments in the office. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I've actually learned something here. Thanks. 
I also started out using mercurial for all my repositories, but I've now migrated completely to git. I personally prefer git's "lightweight branch" model, but I didn't really have much preference either way. However, what I did have was a strong aversion against was switching back and forth between git and mercurial. There are so many subtle but critical differences between the two that using both required more than double the skill of using just one or the other. And since other projects I was involved with decided to go with git, I eventually just switched completely to git as well. Plus, having everything on github is really convenient. There was also the whole "bitbucket vs github" consideration (before bitbucket added git support), where github eventually came out on top. I'm am perhaps a bit concerned about the monopolistic "every project on github" state, especially looking back at the rapid decay of sourceforge. But OTOH, having essentially every library and app in the same place is just really convenient. And moving a distributed VCS like git from one master host to another is literally a non-issue, so if github goes the sourceforge way it is easy to abandon ship.
I'm working on my project called PythonBuddy (https://github.com/ethanchewy/PythonBuddy) which actively lints Python online. I made this so that MOOCs like edX or codecademy could easily embed and use this on their courses. Also, PythonBuddy could help alleviate the frustrations with setting up a programming environment. Just thought it might be helpful for those who want to program in Python online with a helpful live syntax checker. Please leave a 🌟 if you found this project to be helpful! I'm currently trying to convert this project to an XBlock so that online courses (like 6.00.1x) can embed a live python syntax checker for quizzes and assignments online.
this is a really cool project. i will definitely check this out :)
Yep, I understand completely. By the way, mercurial supports the "lightweight branch" approach, too. It simply uses a different term for them: bookmarks. (The term "branch" in mercurial is something more like the branches in traditional VCS, which most people were used to at the time.) Anyway, I'm not surprised things went as they did. Between Linus's immense sway and the unmatched utility of github, mercurial didn't have much chance in the open source community (despite being a better tool). To be fair, they're more similar than they are different, and git *could* be fixed to catch up with mercurial. Maybe it will some day. I'm glad we finally have tools this good. CVS was awful. 
and he's in hs
Good job pasting all the code and giving line references! The next thing we need from you is: what does "work" mean? What are you expecting to happen, and what does happen? 
This question would probably be better directed to /r/learnpython. This subreddit is mostly for announcements and news about Python. Your issue is that `mynums` is a string, but you're comparing each character with an integer from `check`. Python integers and their string representations are not considered equal like they are in some other languages (e.g. Javascript). Instead, all integers are unequal to all strings. If you want to do an integer comparison, you need to convert each digit of the string into an integer. There are a few different places it could make sense to do that. You could do the conversion right where you get the input, with a list comprehension like `mynums = [int(digit) for digit in input("Guess a four digit number")]`. Or you could do the conversion in the `bull_check` function. Probably the best place would be at the top of the loop, where you could do `el = int(el)`. You could also do the conversion right where you're doing the comparison (`int(el) == check[count]`), but you'd end up doing the conversion more than once, which is wasteful.
Here are a couple libraries I bookmarked a while back. I haven't tried them myself. [VLC / VideoLAN python bindings](https://wiki.videolan.org/python_bindings) [PyAV](https://mikeboers.github.io/PyAV/) "Pythonic binding for FFmpeg or Libav." [PyMedia](http://pymedia.org/) 
I actually didn't realize Guido was that old
Good job downloading.
I didnt know that he is on Patreon, thanks. For sure I will support him. /u/mikeckennedy you could mention it on the show, or I just missed it all the times?
It's just a budget tool for a holiday. I really feel like I've set the layout wrong and could have condensed the code with some simple functions. I did try this, but could wrap my head around it. It's only been a couple days. Help. 
What are you asking exactly? 
[Here](https://github.com/evanmiltenburg/python-for-text-analysis/blob/master/Notebooks/Topic%206%20-%20Visualization%20and%20Statistics.ipynb)'s one I made for teaching visualization. Maybe there are some interesting examples for you.
Hey, thanks for the tip. can you please provide a working python code for the job?
There is a tutorial on how to do that on the arduino website... 
Thank Your very much sir. and yes it totally makes sense it's my own fault i didn't see it but thank your very much :)
Just a note that pyglet does support wave files without any external dependencies. I'm guessing you're looking for compressed format support though. The avbin issue is a sore point since it's not currently maintained. I'd like to see this addressed in the future. 
Try installing Qt (https://www.qt.io/) then use pip to install PyQt. This is really a lot easier under Linux.
How much time have you spent waiting for your programs to finish running? How much time have you spent writing the actual programs?
I usually use **-F --noupx** for command line switches for pyinstaller. For some reason, upx compression can mess things up sometimes. Also, the compression rate is not the great anyways.
Yes, that would be great!
Software can be written with software yes. 
Well that's super obvious bs. And you can't even put commas in the right place. What's up with that?
Yeah this is sweet!
RUBY RUBY RUBY RUBEYYYY. AHAAAAHAAAHAAAAAA!
They don't care about whitespace.
Check out https://nuitka.net/ I have not tried it or tested it. They have updates with it for 3.6 compatability. In their docs they only mention 100% compatability up to 3.5. I hear that some modules or custom types don't work the same, but this was years old information (::shrug::), this is because it tranlsates it to C, uses libpython to execute, it actually compiles it into an exe instead of packages it, so there is no bytecode end result, or package for someone to read your code. If your 'types' are executed well, you can expect a 258% or more performance boost. No less than 2x's though. Some have tested it to be as fast as 500% when builiding specifically for speed test. Edit: Here is where I had first heard of it, and to be honest these things are currently above my head. Pycon 2014 subject exe's. https://www.youtube.com/watch?v=wsczq6j3_bA
In general, Python is faster to implement in, as a number of other people here have mentioned. It's also one of the best glue languages, for putting together libraries written in other libraries (predominately C). Python ends up being successful by being second-best at everything. I will say contrary to what some people here have said, NumPy is not C-speed. Most NumPy backends are single-threaded, and even if they are not NumPy has to come up for air after each expression, doing repeated GIL releases/acquires which is sort of like jamming your foot on the accelerator, then the brake, then the accelerator, then the brake, etc. There are packages that are near C-speed (`numba` and `numexpr` principally), mostly because they escape the GIL by having virtual machines to compile a limited subset of the Python language. 
I am really hesitating about Qt, especially considering that twisted licensing model. What are your thoughts about it? I tried Kivy and I came to the same conclusions than you. I don't like javascript that much but i'm even considering switching to Electron, since there is no ambiguity there, for a simple app, that I'm selling (publicly).
Working on back-testing simple trading strategies - more for learning Python than the search for anything profitable. Then writing about it at www.pythonforfinance.net to cement concepts etc
Right, it's just bundling the files but it executes like a standalone exe and just needs the extra parameters which is easier. I've used 7-zip and IExpress to create a package but it's not as simple or clean to me. Didn't know about InnoSetup, thanks, I'll check that out
What positions? Researcher? Paid open source dude? I'm maybe missing something from his bio that you're seeing?
I know for a while he worked at Google but I have almost no details on his salary, but it seems more likely they paid him kindly than not. 
TBH I don't care. We are service provider for solutions and usually our customers get the source anyway. Python is great for small apps, like pushing data from instruments for marine into a PLC. Or provide a server for measurement data. I love the infrastructure of python and the language. We need just a base for a gui. 
Is it possible to use python on a windows UWP app? Considering they have IronPython...
Currently working on a desktop app(game) with Kivy myself, and there is something to the Kivy way of doing things. I'm currently refactoring code to try an implementation in "full Kivy mode". By that I mean no init methods, all classes are setup through the .kv file, and all variables are Kivy properties. It's working fine, though I wish DictProperty was Ordered dict. In any case I believe in Kivy, I like the tablet/phone approach, but I know so many examples of people working with Kivy for a desktop app and having to do workarounds for all kinds of issues. This needs to change. Don't start from scratch please, just make Kivy great ~~again~~. 
Have you checked Toga? It's still a bit basic but seems popular. There is a bit of a wave of html-based GUIs for Python, i can't remember the other names because there are so many...
If you don't care about source, PyQt is free, no licensing problems.
Using my Whatsapp chat logs to do a text predictior
Possibly remi - https://github.com/dddomodossola/remi
When you are using Qt you should have to pay for Qt too and not just the interface. Quote Riverbank: &gt; You must obtain a correctly licensed copy of Qt yourself.
I did already full Kivy mode, because I have always problems to remeber an API. Doing Kivy files is much easier and all the stupid boilerplate code is vanishing. It is awesome and it's sad at the same time because of Kivy's flaws. 
Correct unless you license your code as GPL compatible and make your source code available to customers. 
I'm also a big fan of [Talk Python to Me](https://talkpython.fm). You should check out [Test &amp; Code](http://pythontesting.net/podcast), you might like it. I'm biased though, as I'm the guy from Test &amp; Code. :)
I have not but I certainly will, thanks. 
"Elegant syntax, clear namespaces - which means good code-maintainability in long run." More or less. People have different opinions on this point because primarily it depends on your taste &amp; choices. Maintaining a very large project in Python might be cumbersome for some people who have a thing against using dynamic languages for big projects, while others may be perfectly fine with it. Also, one of the foremost reasons behind Python's popularity &amp; why it should be used is its vast applications. Machine learning, web development, games etc. Python supports a large a number of platforms and is actively used in all these areas. Meanwhile, PHP is still stuck with the web thingy. In 2017, I will highly doubt your choices if you still pick PHP for something serious when there's a ton of drastically better options available. People usually present the argument that "Facebook/Wordpress was written in PHP!". Well, I think the Facebook part is more than obvious. They grew to an extent where PHP couldn't keep itself together anymore, hence HVVM came into existence. As for WordPress, it (PHP) was the most prominent choice available at that time. I highly doubt if something like WordPress was to be built today, it would be done using PHP because we have far better alternatives available now. At the end, it comes down to personal choice &amp; preferences. 
As you said, in a lot of cases you can make your own classes and make your workarounds like that. That's time consuming, but not too hard, and it means Kivy has a lot of room for improvement, and that that improvement is not TOO hard to do. Just again... time consuming. 
Another similar project is osnap https://github.com/jamesabel/osnap
I found one using pySerial. But when I run the code, it can not accedd the '/dev/tty' directory import serial &gt;&gt;&gt; ser = serial.Serial('/dev/tty.usbserial', 9600) &gt;&gt;&gt; while True: ... print ser.readline() PS: Was trying this in python interpreter.
How do you debug .kv file errors? I'm trying to learn kivy and building a small app with it, but whenever I screw up something in the .kv file I end up with errors in the kivy parser that feel impossible to use to figure out what I actually did wrong.
Needs more negative weighting on repeats, for 18 lines it spit out 5 different words to rhyme with :p.
Why doesn't this qualify as discussion regarding python **uses**? Please note this is not a "how do i" question. 
I'll have to look at that. I think I got it down to just the following: import _mssql # Might be needed for PyInstaller import decimal # Used for build systems, due to pymssql issues _mssql might not be needed, but putting both in solved the issue. What I don't know is if I'm not using some parts of pymssql that might cause other issues.
I know this is unpopular but what about wxPython? A senior grad student showed me the interactive docs and demos applet in like 2007 and I've built some full featured GUIs with it since then. Still using it, and Project Phoenix (wx on python 3) migration wasn't really that bad at all. 
Artificial neural networks and Markov Decision Process agents.
I don't think Python is slow. Optimization is key. If you are concerned about speed, write code to take advantage of things Python is good at. Speed is relative to need, and most applications simply don't need anything faster than Python.
X-Post referenced from [/r/machinelearning](http://np.reddit.com/r/machinelearning) by /u/Reiinakano [[P] Python users: I find visualization of results tedious and repetitive, so I built a small library to make it easier.](http://np.reddit.com/r/MachineLearning/comments/5unthk/p_python_users_i_find_visualization_of_results/) ***** ^^I ^^am ^^a ^^bot. ^^I ^^delete ^^my ^^negative ^^comments. ^^[Contact](https://www.reddit.com/message/compose/?to=OriginalPostSearcher) ^^| ^^[Code](https://github.com/papernotes/Reddit-OriginalPostSearcher) ^^| ^^[FAQ](https://github.com/papernotes/Reddit-OriginalPostSearcher#faq)
Yes, but Qt is also LGPLv3 where as PyQt isn't so you have more versatility with Qt in this regard.
Thanks Dave! Yes, I was super happy to be able to bring this conversation to you.
Thanks!
Thanks for the support!
`TypeError`
It's not that it didn't interest me. It does. It's that this isn't the place for this discussion, and it got reported a bunch of times, so I removed it.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
You going to start auto replying to your mum? 
I would say it would be a good place to start! Front end testing usually entails, testing user functionality from a story point of view like: &gt; When User A enters text in Field 1 and 2 and clicks button 5, page User Login is shown It's not necessarily glamorous but it's a really important piece of creating software that most companies neglect and is a real big need right now.
I don't see it explicitly stated here, so just to be clear: it is possible to use Python and Qt for commercial products for free with PySide. Both PySide and Qt offer LGPL licensing.
numba baybee
Can you direct me to resources that can help me start with it? I know the syntax, but I never wrote anything this complex, so have no clue where to start.
People tend to say that [pyside](https://wiki.qt.io/About_PySide) is very similar to PyQt and its free to use even for commercial projects. Well at least pyside and PyQt4 are really close.
This might be the most unclear question I've ever read. Completely unhelpful and utter garbage. Learn to use Google. To run python code paste it into a text editor and save it with the .py extension. Run it with python &lt;Pathtofilehere&gt; assuming you have python installed correctly. 
wxPython uses *native widgets*. It therefore should look exactly like whatever the platform is supposed to look like (Windows 10, OSX Sierra, etc.). 
it's a feature it learned - i need to get it to learn ABAB rhyming schemes instead of just like, AAAA though - it could still use a TON of work. glad you liked it though!
It is. But my point is it's still far better then starting over when a lot of the desktop issues can be fixed. 
Putting my first ever Python program into production. I work in finance/tech. The program queries an Oracle db to get a list of securities held by a particular fund, hits Bloomberg to get some credit ratings for each one, and then inserts them back into the database. It has some error handling and email notifications to alert for any new ratings. It uses the Bloomberg API library, pandas, and cx_Oracle. It's amazing how much easier it is to learn when you have a project to work on.
Great episode, just finished listening. Keep up the good work!
I've been reading through your site for the last couple of days. It's great. 
There are some new alternatives, like [the python bindings for libui](https://github.com/joaoventura/pylibui) or [pybee's toga](https://github.com/pybee/toga), which are quite nice. They just need more time and support, because they're not mature enough for production at the moment (in my opinion)
Here's some example code I wrote for someone else's device. It also handles reading full lines and not delivering half-writes from the device as was mentioned as a concern in another comment. Code below uses Py2.6 import serial, time, csv, decimal port = '/dev/cu.usbserial-A401316V' # You need to adjust this for whatever your device is ser = serial.Serial(port , baudrate=57600, bytesize=8, parity=serial.PARITY_NONE, stopbits=1, timeout=2) # Adjust this as needed for your device def get_data(): ibuffer = "" # Buffer for raw data waiting to be processed while True: time.sleep(.1) # Best between .1 and 1 data = ser.read(4096) # May need to adjust read size ibuffer += data # Concat data sets that were possibly split during reading if '\r\n' in ibuffer: # If complete data set line, ibuffer = ibuffer.split('\r\n', 1) # Split off first completed set yield line.strip('\r\n') # Sanitize and Yield data ser_data = get_data() # I'm a generator while True: data = next(ser_data).replace(' ','').split(',') # Check for next line if len(data) &gt; 0: # If a line is ready to use """ data processing here """ ser.close()
First off, it's a good design. However, thermal noise has many deterministic factors coming together to produce the noise: The temperature inside the chassis The current load for the processor(s) on the board The manufacture of the silicon board itself will play a part As will the power provided to the ES hardware, and the board Each processor will have a unique "signature" that will also play a part in determining the effective thermal noise, as well. So, as I said before, it's a good system, but I don't think it technically qualifies as a quantum source. It could be an example of shot noise, but I'm not seeing any specifics about if/how photonic content is being generated, or the inclusion of photo(voltaic?)diodes. If they included some sort of semi-transparent array of mirrors and a matching array of emitters, that would be, I think, a quantum source. I'd really like some more detail on it, but I can understand why they might keep that kind of proprietary secret "locked away." &gt;The ES runs asynchronously on a self timed circuit and uses thermal noise Schmitt trigger?
If this still does not work, please verify using the IDE that your code on the arduino is working correctly.
How can i make sure it was deleted from my new 2016 macbook pro
Title is suspiciously like clickbait to me...
[removed]
Listened to the first half of the interview on the way to work this morning, and I look forward to listening to the second half on my way home. One of your best so far. Great work! I look forward to your podcasts each week. 
&gt; Special cases aren't special enough to break the rules. &gt; Although practicality beats purity. [PEP 20 -- The Zen of Python](https://www.python.org/dev/peps/pep-0020/).
Python isn't making you create properties on the fly. If you don't want to do it, you have two options: 1) don't do it 2) Go back to a language that won't let you. 
Thanks, will try there.
Close, but not there. I'm not asking the question above. I'm only asking the reasoning for allowing it.
The reasoning is that there's nothing special about creating properties inside `__init__`, or anywhere else. There are also completely valid cases when a property can be added outside of `__init__`.
You need to reboot the command line window. 
Never read this, but having a more formal description, have a look at this: http://users.iems.northwestern.edu/~nelsonb/IEMS435/PythonSim.pdf What you are trying to simulate is an arrival process. In the end you can probably just simulate each components behavior in each timestep and that should be enough.
You could just make a file named strings.py where you define your strings: # project/strings.py STRING1 = 'string one' STRING2 = 'string two And then import that file wherever you need the strings: # project/main.py import strings def string3(): print(STRING1 + STRING2)
I have (some) code that adds attributes in run time, just because (sometimes) it gives you flexibility to re-use code in some useful way.
Well, in order to assign A to B. We need to first get B and make it value A. We first get the property B and we realized there isn't property B? Maybe?
Objects in Python are basically namespaces, and attributes variables. It works for much the same reason `a = 5` works when `a` hasn't been defined before. 
You could look at gettext. 
You can define slots to stop this. It will actually optimise your object a little bit as it won't need a dict anymore. 
dropbox?
I had the same experience as you and had to spend an awful lot of time on the internet looking for answers. You are doing it wrong. Try to forget about that concept of widgets *communicating* between eachothers. It does not work this way. A guy with the nickname tshirtman posts very useful insights all over the internet. The documentation is really good once you have learned the ropes. Learning the ropes is absolutely awful. I really like kivy now that I have learned how to use it. I would not do it again though.
Thank you! I also found SimPy.
You are either the angriest sad person or saddest angry person I ever met on reddit. \*\*Hugs**
It's a pleasure to speak with you! I totally subscribe to Test &amp; Code also, and generally feel testing and the toolkits around testing are underrepresented so I'm very glad for your efforts!
Relevant: http://mauveweb.co.uk/posts/2014/12/dont-name-strings.html
I'm not employed to write Python code. Quite the contrary, I work in .NET. So when I write recreational code at home I don't follow Python's conventions because I find them arbitrary and other people won't have to be referencing or using my code. That being said, if I were to share the code, I'm *pretty* sure people would be able to understand that doCrossover() is the same as do_crossover(). camelCase isn't that hard to read, and I find it to personally be moreLegible than separating_things with underscores. So if you're working on a shared project in Python, yeah, you should probably follow pep8. And if you don't, people will probably know what you mean anyway.
In the history of desktop software development, which stretches back to the late '70s, the possibility of such a feature is relatively recent. The internet arrived in the '90s but wasn't really fast enough and ubiquitous enough to do reliable software distribution until mid-2000s. Then each platform really wanted to do its own thing (Windows Update, apt-get, umpteen appstores...). Add that developers are more or less happy with hacky solutions like Pip, and that desktop development as a whole has gone a bit out of fashion, and you see how this sort of relatively hard but relatively boring problem has not been on anyone's mind.
Python is **dynamic**. If you come from a dynamic background then you can solve problems in other ways, such as making object fields mirror (sanitised) run-time data. 
It's exactly the same reason that Python doesn't require variables to be declared before assignment. Once you assign to a variable in a scope (a file is a scope, a module is a scope, a function is a scope, etc), it *exists*. An object is just another scope for variables to live.
Very nice and clean article. I appreciate every "good practices for ..." article since dealing with dirty code, APIs and general software architecture is sometimes fucking nightmare and I believe articles like this one might actually have some (even a little) impact on improving this situation. Also didn't know about HTTP status 418 until now :D will implement it when I get a chance.
Checkout configparser. I believe it can do more than just strings. https://docs.python.org/2/library/configparser.html
I was trying to be silly and play with my company's description of itself. It kept running into memory errors. So after playing around, I found out what was happening. Each line ended with a newline, BUT, it had a space between the actual end of the line and the newline part. That was causing it to not use a lot of my lines.
i think that [remi](https://github.com/dddomodossola/remi) does a good job. It removes all the pain of different libraries, sizes, etc, and lets the browser do the job. If your user can use a browser, he can use a remi app.
Pybee's toga really has the most promise, I really like the colosseum CSS approach. 
Does computational biology have any unusual requirements from an IDE? 
EasyGUI is a very simple GUI solution, almost as easy as using a print statement.
Don't know, I'm trying to find out. :D *Edit*: But there is certainly something unusual about it because I've had two computational biologist tell me they don't use IDEs at all. See my main post edit.
I don't imagine there are. For the purposes of your IDE search, you are not a computational biologist, you are a python programmer. That doesn't really help you further, because everyone has their own fierce opinion of the best IDE, or if an IDE is needed at all. The most popular choices seem to be Pycharm or Spyder, or code editors like Sublime Text, Geany (my choice), Atom, Notepad++ (Windows only), or a CLI-based editor like emacs or vim. Here's a long list of options: https://www.reddit.com/r/learnpython/wiki/ide. Wikipedia also has good lists of [text editors](https://en.wikipedia.org/wiki/Comparison_of_text_editors) and [IDEs](https://en.wikipedia.org/wiki/Comparison_of_integrated_development_environments#Python). 
Can you tell me about this no IDE thing? I've been asking around in other places and they don't seem to use one. How does this work I didn't even know it was possible to just use notepad++. How do you debug your code?
&gt; I don't understand how you would test or debug your code without running it. They are running it. Most code editors have a "save-and-run" shortcut key. The editor opens up a terminal window to run the code. Also, code editors are generally a lot more hackable and a lot faster. &gt; So could that be them using it on clusters? Yes, probably. Command line interface (CLI) based code editors (vim and emacs) have the huge advantage that you can use them over ssh. Basically a remote desktop. So you don't have to upload every change before running your test. How much experience do you have with python? If you are a beginner, I'd really recommend a code editor rather than an IDE. The IDE is going to try to do a lot of your work for you, and if you don't know what it's doing it's going to be a hindrance to you. Basically you'll be learning python AND learning to deal with the IDE at the same time. I think it's much better to take those one at a time. 
&gt; How do you debug your code? ipdb https://www.safaribooksonline.com/blog/2014/11/18/intro-python-debugger/
This looks great! Did not know something like this for emacs existed. Thank you!
What's the end goal?
Wow, that's very cool. It never ceases to amaze me the hidden patterns neural networks can pick up on.
Reminds me of [this](http://www.commitstrip.com/en/2017/02/23/dont-talk-ship/)...
Ok I've done that now but it still says that there is a problem on the string with the variable side. 
http://stackoverflow.com/questions/17153779/how-can-i-print-variable-and-string-on-same-line-in-python
Thanks again. I'm not looking for glamorous. I'm just looking for something lower stress that I can master reasonably well. I can go back to finding more challenging work when the rest of my life settles down :) I did a bit of searching today and didn't come up with a lot, but I'll retry again tonight. I may not have a good grasp on the correct keywords to search or the general vocabulary of this area of development/testing. Also, it seemed like a few of the jobs required other experience I don't have (Linux, full stAck developer, etc). Anyways, thanks again for your time and replies. I'm glad at least one person clicked on my question.
you have a few things wrong there... 1) you need to cast side to an int... side = int(input(... 2) you need to add "+" on either side of each variable you use on the last print statement.
Try without line break in last print. 
Is the variable a string?
You might want to check out [BeeWare](http://pybee.org/) which is under active development and attempts to solve the problems you encountered. There's a great [episode of Talk Python To Me](https://talkpython.fm/episodes/show/79/beeware-python-tools) with Beeware's founder. 
I think this misses a couple of pretty important points, either of which fully answer the objection even when you don't consider developer time. 1. If your program is going to spend almost all of its time waiting for other things to happen, you don't need to worry about how much time it spends executing the code. By this I mean, the time it takes your program to run will likely be small compared to the time it takes to do literally anything else. For example, to transmit its data via HTTPS to a browser. It will be miniscule compared to the time it takes the human brain at the other end to think about what it wants to do next, and then try to do it. CPU time will be tiny compared to many disk I/O operations. This doesn't apply to all programs. In some domains, your program is truly CPU-bound. (If it is, see point 2.) But the vast majority of software written these days is going to spend a lot of time waiting for database queries, HTTP requests, and user interfaces to respond. This wait time will overwhelm the time your CPU spends executing Python code by many orders of magnitude. 2. PyPy. PyPy is almost a direct answer to this objection, and it contains in it the explanation for what's wrong with the objection. As you said, code doesn't get faster by being closer to the metal. PyPy runs MUCH faster than Python and in many cases faster than GCC-compiled C programs. It works the same way GCC itself does: by reading the source code and compiling it into a format that can be executed efficiently by the hardware. But it is also simply a Python interpreter, and it's an interpreter written in Python. It's the simplest answer. "Why is Python so slow?" "[It's not.](http://speed.pypy.org/)"
The line where you take input and assign it to `side` has a string that starts in `"` and ends in `”`. "EOL while scanning string literal" is a very literal (ha) error - it means the python interpreter found an unescaped end of line while scanning a string (i.e., it was unterminated, or incorrectly terminated).
This reminds me of some of the horrific APIs I have had to work with in the past that followed approximately none of these guidelines. *Shudders*
Could have fooled me. I switched to matplotlib from gnuplot some 16 years ago and have never looked back.
has anyone tried beeware?
Well formatted like, not just a 2 step process of "explore. Attack. Explore. Attack"
Is that the formula for this? https://www.youtube.com/watch?v=bZe5J8SVCYQ
nah brah, `snake_Camel` FTW &amp;nbsp; `right_to_bear_arms = True` VS `right_To_BearArms = True` &amp;nbsp; [**#NoContest**](http://7.media.bustedtees.cvcdn.com/9/1/bustedtees.2d2b9839d17e3fb6fc859da14507a709.gif)
I agree. OP should have at least added [this](https://pynsist.readthedocs.io/en/latest/index.html) in the comments: &gt; pynsist is a tool to build Windows installers for your Python applications. The installers bundle Python itself, so you can distribute your application to people who don’t have Python installed.
How does it not exist? An hour after 1:30am is 2:30am.
i just happened upon this post and noticed the same thing. BF.B and BKR.B, yahoo's formatting requires a substitution of a '-' where the symbol reads a '.'. Not being familiar with pickle, i wanted to move forward quickly with something that made sense to me, so I stored the symbols as a list and did a ' '.join(symbols).replace('.', '-').split() to clean it up for the next function.
Why not? Its a GUI framework, we want boxes and menus that work, that's all.
Why don't you just create the virtualenv, activate it and then install it from pip? Seems to be hosted on PyPi so you should be able to install it just fine.
There are so many options out there that we cant answer the question for you. You will need to experiment to find what works for you. That being sad you should learn basic computer science skills and that includes the use of command line tools. So i would strongly suggest a few months with a text editor and the command line writing both Python and C++ code. The goal here isn't so much learning to program as it is learning the tools of the trade. Hopefully you do this on a Linux or Mac OS platform. When it comes time to move to an IDE or other advance environment id seriously consider PyDev running on Eclipse. Other interesting technologies include Jupyter Notebook and XCode with its playgrounds (not Python though). Jupyter is very interesting and i have high hopes for it but unfortunately it has bugs or negative features that have been giving me problems of late. Jupyters potential for what you want to do is pretty huge though, it will just take time for it to stabilize. Now to further your education you need to consider getting some real comp sci education because at this level you will have a very short career in computational biology. You will need to learn a high performance language such as C++. More forward looking you may want to learn Rust or Swift. By the way the goal of a comp sci class isn't to teach these languages, it would however fill in a lot of missing pieces for you. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Indeed a young project Save the commands you usually forget in ssh sessions and sync it with your local machine. **Installation** $ pip install keep You can install pip using apt-get as sudo apt install python-pip. Usage Usage: keep [OPTIONS] COMMAND [ARGS]... Keep and view shell commands in terminal only. Read more at https://orkohunter.net/keep Options: -v, --verbose Enables verbose mode. --help Show this message and exit. Commands: grep Searches for a saved command. init Initializes the CLI. list Show the saved commands. new Saves a new command. pull Updates the local database with remote. push Pushes the local database to remote. register Register user over server. rm Deletes a saved command. run Executes a saved command. update Check for an update of Keep.
Nsis is a library to create installers. This project allows you to create an installer for a Python application.
The last line should be print(strings.STRING1 + strings.STRING2)
One of my big concerns is always embedded plotting. I want to be able to embed matplotlib, OpenGL, or others like Vispy into whatever graphics library. While there are gui-library-specific plotting tools like pyqtgraph, which is fantastic, I don't want to have to wait for TogaPlot or whatever to become mature enough to do everything I might ever want when I already have 8 other plotting tools that do all the things. Hopefully they can easily create a canvas that matplotlib and others can render to.
I used xrange when I was using Python 2. Python 2 has xrange and range, whereas Python 3 just has range (which is actually the same as the Python 2 xrange - so in effect it is Python 2's range that has been removed) When using Python 2's range, it actually creates a list which has to be stored in memory to iterate through, where as Python 2's xrange (and Python 3's range) creates a sequence object that is evaluated 'lazily" meaning it doesn't create the whole list at once and have to store it in memory. For small ranges, I think the difference is minimal, but for large ranges I guess the effect can make a difference. I may have used some terms above not strictly correctly, but that is how i understand it. :D Basically if you are using Python 3, just use "range" as it does what Python 2s "xrange" did. 
Check out telemetry and it's python counterpart pytelemetry. That might be what you are looking for. It might be simpler and more reliable than using plain serial I/O. https://github.com/Overdrivr/pytelemetry
I'm still thinking about its use hahaha
Looks like he reported and it was resolved as "this was always broke, but now errors explicitly, and you can make struct pickleable as a workaround" https://bugs.python.org/issue29628
A very good library for command line programs in python is argparse. It allows to add documentation and help when the input are wrong and to handle multiple command line arguments and optional arguments. It would be a lot cleaner for other people to use your tool and would make the searching more flexible.
Very accurate, but doesn't do so well on recall :)
If I want Qt I will take Qt5 and PySide is a no go as long as PySide 2 isn't ready for windows. Python on Windows is sometimes terrible, when some packages demanding a compiler and the you have to download manually a wheel from a university and hope it's working. That's the reason I take WinPython, which has a sort of a quality management. Anaconda is fine too, but WinPython fits fine into the Python infrastructure by using pip. 
 def isPrime(n): if n &lt; 2: return False for x in range(2, int(n**0.5) + 1): if n % x == 0: return False return True You can also use: def factors(n): results = set() step = 2 if n%2 else 1 for i in xrange(1, int(math.sqrt(n)) + 1, step): if n % i == 0: results.add(i) results.add(int(n/i)) return results I haven't compared these two methods yet. Feel free to do so and post your results here! If you improve upon them, please let me know :) math.sqrt(n) and n**0.5 are interchangeable, although the former requires an import and is faster by an incredibly small margin. 
No, it's actually a lot more complicated that you make it sound. If "working" was enough there won't be posts like this. You want a cohesive experience with the platform and that's a pretty hard problem and it's harder the more different these platforms are, leading to more compromise.
I get that. But my point is there is nothing fundamentally wrong in how Kivy is built that is preventing Kivy from being a better experience for Desktop Apps. We need more widgets and layouts that speak to the strength of Desktop, that's about it. 
Haha - I worked on a major molecular evolutionary analysis package that was just full of stuff like this, except the indentifiers were things like "f", "f2", "hh", etc. I started trying to clean it up but gave up after realising the scope of the task. Truly, academic code is its own special sort of hell. You'd swear it was a way to force people to collaborate with you if they want to use your package.
Hey, I'm the article's author. I guess not too much boilerplate, but maybe unnecessary friction. If you already have clients, they'll have to change it. It may be faster if your API is pretty new, but as we do know, it's hard to change something that's being already used. In a next article I'll try to get deeper into this subject :D Thanks!
Google has an awesome 418 google.com/teapot haha Thanks!
I know, right? Pretty awesome to right that, feels like writing a poem.
Do you mean "interactive fiction" perhaps? http://christianthompson.com/node/35
Not a great argument I think. The string constants pattern he advocates against is bad, but inlining isn't great either. What if there's "break" that means one thing in one context and another somewhere else? Then changing one is going to be super error prone. Plus these string constants are probably really enum values anyway so not putting them in an enumerate thing is bad in both scenarios. I'd use tri.token for this, but I'd be biased since it's the work of a colleague and me :P
Funny you pick facebook, my experience with them is an ever changing (read braking) api with little to no warning.
Depends upon the task and the facilities policies. In any event i firmly believe that learning a bit of low level development goes a very long ways in skills development for even a Python programmer. Beyond all of that; as modern compiled languages are developed, like Rust or Swift, there is less of a need to use Python as you get some of the advantages of Python with these languages. As much as i like Python and make use of it, I'm fully aware that the industry is still very young. Python could easily go the way of BASIC and other languages that have disappeared from the developer landscape. If one is to stake their career on programming they really have to avoid being a one language wonder. 
Hey /u/mafontes14 -- Nice article. In fact, it touches a lot on something I've been working on for the past year: Writing wrapper libraries for JSON REST APIs. I was planning on writing a 2-part series: (1) How NOT to write a REST API (where I make fun of all the dreadful APIs that I've run into over the past year) and (2) How to properly wrap and abstract the APIs and how to handle their weirdness. I'll be sure to link to your article when I get around to writing them (which should be sometime in March, I figure.) Btw, Nice job! :-)
This is my favourite answer. I'd suggest downloading a precalculated list if primes - say the first five million - and loading it into a set. O(1) primality test with "number in primes"! (Of course you could get more efficient via binary search, various native libraries, etc. But for any practical problem the set approach should be fine.) 
Looks like a great bit of kit that would solve/answer quite a few of my needs. Is there anything out there that is similar? My need is connecting graphs (basic and advanced ones) to a gui (text input, sliders, dropdowns). The jupyter notebook is getting there, but Dash stronger point is the ability to serve it easily. The bad point is that Jupyter will have more customizable widgets/plots (e.g. adding custom D3 plots). But Dash may also be able to do that.
Hey, I'm the article's author! That's awesome! Let me know when you write that, I'd like to that a look :D
In movies they use a short montage to show the trainee become the master. Keep in mind that the events depicted in the montage actually happen over a long period of time with a lot of hard work. Why do you want to be a ninja anyways? Sounds like you're building up all kinds of useful skills and experience. The goal isn't to (or shouldn't) be to do fancy and complicated sounding/looking things, it should be to do useful things efficiently and in a way that makes sense to your colleagues.
Why not use the Api? 
so it's creating fake/spam posts and likes? why do i want that?
I didn't get any actual numbers as far as which is quicker, but it's fairly obvious the script runs much quicker on my Windows computer throughout the entirety of the process. So you think this is due mainly to my internet connection? I also forgot to mention my Windows computer is a 2014 pc with 8GB of RAM and an i5 processor. My Mac is s 2016 MacBook Air also with 8GB of RAM and an i7. 
If you need a deterministic approach I know AKS but I find it difficult to implement. But if a heuristic is fine, go for Miller-Rabin !
Thanks for the feedback. But making it spammer or not depends on the user. Basically this script posts single status per hour and single like every half hour. But if someone decrease the time then it could be a spammer. Afterall it depends on the person who is using this. Thanks.
Thanks for comment. I am also planning to write script using API too. I wrote this script because I wanted to do this without API and I thinked to share so do i. Thanks.
Yea. Ok so you probably just need to install lxml. It's in the docs for beautiful soup right there, doesn't it also print a warning at you? AND you should run a profiler on it. 
I've tried asking beautiful soup to use lxml before in hopes it would speed things up, but it was of no use unfortunately. What's a profiler? Sorry, very new to python. 
Well, no one is even asking you to do. Have a good day.
Or just use the safe way which is `dict.get` to retrieve potentially missing keys. There's also `dict.setdefault` which will only set a key of it doesn't exist and return the value. And finally `dict.pop` with a default if you need to destroy a key that might not exist. All of these are atomic (and ergo threadsafe) on CPython. 
A profiler is a thing that tells you where your program is spending time. In other words: where it's slow. Google "Python profiler"
Or perhaps a [MUD?](https://www.google.com/search?q=MUD+games&amp;ie=utf-8&amp;oe=utf-8) 
The [examples](https://github.com/Luavis/sherlock.py/tree/master/samples) don't seem too convincing, both of them is a Python code that would not work in Python. It seems more like a tool for writing shell scripts using Python syntax. Do you have example of an actual Python code that could be translated to bash (can your sherlock package be translated to Bash?), otherwise I don't know if word transpiler applies here.
This would be so useful for me! I help run a big student organization at school, and as such, I'm always too busy to like their posts on FB. Can I set this to like specific people/groups posts?
Why all this hassle instead of `zappa deploy`
Or use something else and become stronger as a group because you add new strengths. 
Or collections.defaultdict too
What do you mean? Do you need to understand their editing keyboard shortcuts? Why? Are you looking over their shoulders when they work?
Does this relate or is comparable to [nltk](http://www.nltk.org)?
Probably due to the `hello world` nature of the tutorial. Separating all those into other containers would be a more detailed tutorial.
c9.io is an online IDE with collaboration features.
How would you implement the article's describe() function using dict.get? Can you post your code for that here? (Keep in mind: whatever you use as a sentinel, you have to address the possibility that the sentinel is some key's value.)
Amazing write up and work! Very interesting and not sure what the license is but an iPhone app to input photos and get an average face will be awesome!
Importing a module that's not present will fail, not produce wrong results. If you want to distribute your script together with its dependencies, look into cx_Freeze or PyInstaller.
Author here. Good points, thanks for pointing them out. In the article's describe() example, I don't think dict.get is the best option, even though it's also threadsafe as you point out. The problem is that `favorites.get(category)` will return None if that key is absent - OR if that key is present, with value None. If that's a bug, using the one-arg form of .get() allows that bug to hide in the code. I prefer to be more explicit, and use a unique sentinel - here's how I'd write describe() using .get(): def describe(category): # Sentinel signaling a missing key. missing = object() fav = favorites.get(category, missing) if fav is missing: message = "I don't have a favorite {}. I love them all!".format(category) else: message = "My favorite {} is {}.".format(category, fav) print(message) If somehow None is inserted for `favorites["dessert"]`, this version prints out "My favorite dessert is None.", which makes it more obvious something is funny. Whereas if I write `fav = favorites.get(category)` followed by `if fav is None:`, that prints "I don't have a favorite dessert. I love them all!" even though the key is present. Possibly masking a bug until it can cause bigger problems later. Of course, this is independent of whether the program is multithreaded or not. So if I'm going to go to the trouble to create a unique sentinel like this, I'd rather use try/except KeyError - it's shorter, and (to me) more readable. When writing the article, I originally wanted to keep its focus on the contrast between "key in dict" vs. "try/except KeyError". And a lot of readers have been emailing me about dict.get(), so I might extend the article to cover that too. edit: untabify 
How do I access cron? ** I'm a total noob... I know. 
It's more like I need them to be able to look over my shoulder when I work. Or what if they find a really good extension that they think I should try out? I can't go learning how to do the basics while trying to judge something. Point is it's always best to know what's going on in your field and in your group. It's great to know more too, but everyone needs a common base. I think the tools we use to code are super important and if my group is using almost all one tool then I think it's safe to assume they are using it for a reason. I may not know that reason yet, and I may need to learn a lot to understand that reason, but that comes after the initial stages of learning what's going on. 
I recall reading an article earlier this week about how unreliable running Docker on AWS is.
http://pythonjobs.github.io/ and https://www.python.org/jobs/ may be helpful
Python 3.6 introduced some very big changes and it's taking some time for some projects to catch up. So if you need any outside libraries you may want to check to make sure they support 3.6. If so, absolutely use it! Those big changes made it much faster and sleeker than 3.5, and the new features like f-strings are awesome. If you have more questions like this it's better to post them on /r/learnpython. 
2:30 am on March, 12th 2017 doesn't exist in New York which is the timezone I asked.
I work with a variety of BSD-licensed Python projects, including [HoloViews](http://holoviews.org), [ParamNB](https://anaconda.org/jbednar/paramnb), [Bokeh](http://bokeh.pydata.org), and [Datashader](http://github.com/bokeh/datashader), and my colleagues and I have made some notebooks this week showing how to use all of them easily together to build interactive dashboards (for use with the [Jupyter Dashboard](https://github.com/jupyter/dashboards) server) for big or small data: https://anaconda.org/jbednar/nyc_taxi-paramnb https://anaconda.org/jbednar/stock_dashboard The key is to look at the code and think about how it actually works, to see how straightforward it would be to add other types of interactivity you might need. Personally, I think this is the way forward at least for small dashboards, because it makes use of fully open projects that each do one thing well, to provide flexible solutions to a wide range of interactive visualization needs. Now we just need to work on making some better documentation and making people aware of how simple and powerful it is!
Maybe a better way of asking what /u/fdemmer is asking is, what use cases have you seen that make your work particularly useful?
Back when I did that I would just mount the remote drive (sshfs). 
It really depends what you want. If you prefer stability over features then download latest patchlevel for 3.5 if you want the latest, greatest, then download latest patchlevel for 3.6. It's all about trade offs. This approach generally applies for many other software projects (with sane releases) not just Python. If you still aren't sure, then most likely it is for your hobby project and 3.6 should be fine for you.
Yeah, it's the caveat that key might have None assigned which worries me. Would only happen here if bad data was inserted in `favorites`, but I wouldn't want to write code that hid that fact either. See my solution in another reply on how I'd avoid the collision, but I think it's just clearer to use try/except KeyError. Of course, there are other scenarios in which `.get()` is better. Thanks for your last comment there, I'll consider rewriting to include a discussion of `.get()`. I may or may not mention defaultdict - though I love it and use it CONSTANTLY, the longer an article is, the fewer people will read it; I have to draw the line somewhere.
I'm on python 3.6, and haven't found any packages that don't work. And I use quite a number of the popular ones, although not numpy. So I don't know about that one. Unless you actually find a package that breaks, I'd recommend 3.6. 3.4 was the first "feasible to use". 3.5 was "great to use". 3.6 is "must use", IMO.
If you want the latest and greatest, just compile master nightly. :p
The only potentially breaking changes I'm aware are in asyncio and the metaclass machinery (you can pass keywords to metaclasses and the new init_subclass hook doesn't accept keywords by default, which makes sense but I think was a bad move). 
Or if you want to maintain that functionality, from strings import *
Thanks! If you decide to write that app, you will need to port the landmark detector to iPhone. A while back one of the readers of my blog put this together https://github.com/zweigraf/face-landmarking-ios
 I wonder how much deviation is there between me and my cousins. Would be fun to write this application. Thanx for the website. I am very interested in learning CV and your guide book looks a good way to start off. 
Awesome. I'll do this and see if I can pinpoint the issue. Thank you so much for your help!
I've thought about doing something like this for my chicken coup.
mostly support packages that depend on parsing the code are the ones that break. Pylint's pypi version still doesn't support 3.6, although I'm able to use it just fine installing from github. There's always some cautions to be taken. You also need to make sure everyone that's working on your team has access to the latest version in their OSs. When 3.6 first launched I hurried to upgrade every build script to use it, just to find out that one guy in the team used a mac, and still had 3.5, and couldn't deploy anything.
Is the section about `Forward X11` in this: https://wingware.com/doc/proj/remote-hosts describing a way to run your ide on the remote machine? I have often used emacs over a forwarded X connection.
awesome
Thanks!
but... why? Also, stuff like pipe(print('./test'), wc('-c')) is just wrong on so many levels. If you could just do that, it makes no sense to have a `pipe` function, just override the `__or__` operator, but given the previous example `ls('-al')`, it seems that the functions are supposed to run immediately. Also, print wouldn't print a file like that unless your print is completely different from Python's print.
3.6's asyncio looks mature. I manually compiled one on my single board computer to get used to it. You know you can use anaconda to switch between different python versions, you can create 100 python versions without breaking system.
Had primality by trial pinned as another potentially good one. Nice to know that it does work well.
That's what I'm doing it for. I'm automating my chicken coup. 
Any intetested in doing python3 in Japan? Looking for some people with strong stats back ground for data science type work. Please share github and SO profile if you're interested! https://www.wantedly.com/projects/87697 
On the other side, what's slow for you about Windows python development? I've used Python in Windows for data analysis and processing and find it's speeds very similar to doing the same things on Linux.
It's just that to get a new library, I have to go find the thing, download it, open up a command prompt window where I saved it, compile it, and then it MIGHT work because it might still require some other library that wasn't mentioned anywhere. In linux, I just do sudo apt-get install python-&lt;library name&gt;. It's just easier *shrug*
Start with [Pyplot tutorial](http://matplotlib.org/users/pyplot_tutorial.html).
True, I could see that being really annoying if you're using libraries that don't have windows builds set up. I guess everything I use usually has a wheel build already for Windows (and so `pip install` just works), or I can use conda to get around that just as easily. The WSL ('Windows Bash') is real nice, too though and yeah, using an X11 server (I use VCXSRV), you get graphics really easily.
This guy [Vasudev Ram](https://www.codementor.io/vasudevram) has done a lot of work with PDFs, e.g. [xtopdf](https://bitbucket.org/vasudevram/xtopdf). There are also his and other people's [Activestate Recipes](https://code.activestate.com/recipes/langs/python/tags/pdf/).
Ah yeah - I just conda for that stuff. You can create environments with specific python versions, and then it's just "activate &lt;env_name&gt;" to switch. I think 'pyenv' can do that too, but I've never used it.
It is trivial to create your own guaranteed-unique sentinel, guaranteed to not be used anywhere else: sentinel = object() fav = favourites.get(category, sentinel) if fav is sentinel: # not found Technically, that guarantee is not *quite* bulletproof for top level code where `sentinel` is a global variable, since some other thread might have grabbed a reference to it while your back was turned and shoved it into the `favourites` dict. The answer to that is: "Then don't do that." But for a local variable inside a function, that's pretty much bulletproof. 
It could be combine with __or__ operator... :o, I have never thought like that. Thank you for your suggestion. And print function in that code is working just like python(but it did not support options like change stream or select end character.). It wouldn't print file.
CRUD is certainly simple, but what if you need to add a couple more actions upon objects later on? What would the requests look like? In REST idea, the HTTP method should be the verb; but it is not okay to add more HTTP methods, like 'PUBLISH /cakes/1/'. The write-to-act, often used, seems like a huge cludge (POST /cakes/1/ {"publish": 1}).
Nice
From a project I did once # Many to Many relationships require manual creation of the relationship table tags = db.Table('tags', db.Column('tag_id', db.Integer, db.ForeignKey('tag.id')), db.Column('post_id', db.Integer, db.ForeignKey('post.id')) ) class User(UserMixin, db.Model): # ... posts = db.relationship('Post', backref='submitter') comments = db.relationship('Comment', backref='submitter') class Post(db.Model): # ... comments = db.relationship('Comment', backref='post') # and Many to Many appears in secondary= too tags = db.relationship('Tag', secondary=tags, backref='posts') # And backrefs magically appear on objects # submitter: User class Comment(db.Model): # ... # single to many reverse relationship, # it is created on the remote side (the "other" Comment) # but is defined in "this" Comment, # but both Comment are the same one?? children = db.relationship('Comment', backref=db.backref('parent', remote_side=[id])) # And backrefs magically appear on objects # parent: Comment # submitter: User # post: Post class Tag(db.Model): # ... # And backrefs magically appear on objects # posts: List[Post] I'd find it easier to just have foreign keys, and manual relationship definitions
feel free! open up an issue on the repo if you have any questions or problems
Wow I just looked up that Quake reference - pretty cool! There's probably no black magic with math.sqrt(). Presumably it's a single case of exponentiation and can therefore be done more efficiently, in spite of the overheads (additional attribute lookup and function call, for example). 
Huh, weird. I mean, I might swap to that at some point, but so far I am enjoying this setup. On linux I just run things with "python3" vs plain old "python" (for when I'm doing 3 vs 2.7).
Neat stuff. I'd be curious to give it a try. Any suggestions for how to install OpenCV for Python 3.x? I was looking into using it earlier this week, but decided to hold off since it seemed only possible to install OpenCV for Python 2.7. 
the thing is I don't know yet what should be part of the delivered code and what shouldn't, so build/* can be ignored ? what about dist? function per file thing is for separation of concerns, but I see your point
Lots more comments on the Python side so it looks longer when in fact it isn't. 
What exactly is meant by *Unsupervised* Natural Language Processing? Is it correct to say it's not similar to the notion of Unsupervised Machine Learning?
It's the expansion of a row vector of powers of t from [0,3] multiplied with a matrix of all those numbers and a column vector of powers of rh from [0,3] This isn't that simplified, but by expressing it in these terms allows people who understand linear algebra to reason about it where the 4x4 matrix represents the "character" of the equation.
This comparison seems biased 
Here "Unsupervised" mean that Kadot does not use algorithms that require hand-labeled data (like a treebank POS tagger) . The only exception is for the text classifier.
rootpy isn't currently working with 3.6 because it uses byteplay.
i like the way type annotations (and their relationship with mypy) as well as named tuples are introduced and shown off, but i disagree with the use of ApiResponse objects -- python does have exceptions for that purpose, so just use them (possibly deriving of an ApiException, so whoever would want to deal with ApiInteraction.ERROR could catch ApiExceptions and handle any other exception differently). if one were to go the way of rust-style enum responses, i'd rather imlement a RustyEnum and some kind of let-pattern/match-pattern unpacking than a (c-style enum, arbitrary payload) tuple for direct use.
This is a good article, however, I'm not sure how I feel about catching generic exception. It can cause serious errors to be not recognized. For example, the author says: try: ... except Exception as e: logging.error(f"Something bad happened trying to reach {url}") logging.info(e, exc_info=True) return ApiResponse(ApiInteraction.FAILURE, None) If a serious error such as `SystemError` were to be raised, it would simple appear to be an `ApiInteraction.FAILURE` to the library's user, and not signal how serious the issue is. This could lengthen time to report bugs and create more issues. 
Sounds like a job for trained monkeys. Nightmarish. The "thinking" phase is IMO the only one interesting. Pointless refactoring or keyboard mashing just got boring after a few years, and I like to shave as much as possible by thinking in advance.
&gt; If you change it to `while guess != True` you will find that the code will work. Though it would be far better to just not reuse the variable name.
Can you point to any actual examples of module breakage from the 3.5 -&gt; 3.6? Further, can you point to any that would matter to someone beginner enough to ask this question?
The files with names beginning 'letter' in [the repo for a mail merging thing I was toying with years ago](https://github.com/garry-cairns/correspondence/tree/master/api/correspondence/letters) contain some ReportLab code. This was working the last time I used it but things will have moved on. Hope it's useful.
Swingers dating club online with webrtc video features 
FYI "Data" is already plural (sing: datum). 
Oh wow. I'm not sure what language this is but it really makes me appreciate maths libraries with vector and matrix classes.
Thank you, I'll try that.
Probably I wasn't clear, it's not like they aren't displayed. The label does show that there exist several different scatter plots, the problem is that they are very very close values, they obviously overlap but that doesn't show on the graph, it just puts one graph over the other.
https://github.com/Staffjoy/suite/blob/master/app/email.py#L22 Why not just use endswith or am i missing something?
Ajax requests are the easiest way I have found to do asynchronous server-client communication.
You probably don't even need to finish codeacademy, but I don't know the course. You need to only learn the extreme basics: variables, loops, functions...etc. Once you know the extreme basics, a basics course is pointless and boring, and the best thing you can do for yourself is get the heck out of basics and into something you find interesting. If you're actually enjoying the basics course and finding it fun, go ahead and finish it. I have my own basics course, and I frequently tell people to quit it early, only to revisit if they've got questions on a specific topic from within the basics course. I might suggest that, after the basics, you do at least a bit of: https://pythonprogramming.net/data-analysis-python-pandas-tutorial-introduction/ You can probably just do the first 5 and at least somewhat understand pandas, but do as much as you enjoy, then do the finance series. 
https://github.com/wong2/pmm aka Pypi Mirror Manager
Fair, my wording was not explicit. But I strongly disagree with you here. None, empty strings, empty lists and friends all evaluating as false is an intentional design decision. It's not like that in order to trick novices, it's like that (at least in part) to help accommodate comparisons across types. Being able to do: if fav: instead of: if fav is not None and fav != "": is a feature, not a bug. Of course, you do need to be aware of what you actually want. Yes, sometimes you need to differentiate (for example) between when the key doesn't exist and when the value was false. But there is nothing unclear about covering both (or all) cases with a simple "if x:" if that is your intention. 
Good point, set would be great for a longer-running application.
Reminder to all: "Production quality" doesn't necessarily mean "best code possible". It means "suit(s/ed) business needs including budgetary constraints and team skill".
I would agree with this, potentially registering this behavior in a generic exception handler at the framework level so you don't need to remember to include it at each failure point. You can even do fancy stuff like exception aggregation and report how many unhandled exceptions propagated out (and potentially serializing information about them for that report). I might play with this and see what comes out of it. I know there's stuff like Sentry that handle exception reporting but I'm thinking something more localized like an in memory sqlite database. More of a "how is this done" than a production grade component. 
It might, but more often than not it is not. 3.5.3 means that there were 3 bug fix releases (releases that don't add any features and only fix bugs), while 3.6.0 means there were none. Ideally we wouldn't have any bugs and all releases would end with .0, but we don't. Most people won't use given version until there is an official release (e.g. 3.6.0) once many people start using it some bugs will be discovered, after they are fixed 3.6.1 will be released and even more people start to use it, finding even more bugs. It's very possible that 3.6.0 is perfect and there won't be 3.6.1, instead we will go straight to 3.7.0, but I would stay that this is unlikely. Having said that for hobby use 3.6.0 is fine. You could even use it on production, but it is your judgement call.
So this title says 7 libraries...the actual title says 10...there are 2. Save your time. Arrow &amp; Tensorflow.
That's easy enough to do. You're just going to have to handle permissions, possible binaries, timeouts, package changes, python version changes, and hacking sys.modules. My open source PyQt-VTK gui reads my github page to find the latest version. Then it pops a box if it found a new version has been released. The user must then go download and install it. It takes 1.5 extra seconds for the check. I just try-except all over to avoid say not having internet.
i'm a database admin so the solution is always a database or lookup table or something similar
Yeah you don't need dist or build. I have no idea what Linux.exe is. Nor why you would version control a tar file of the rest of the repo (that just makes the download bigger, not smaller). Also, github will deliver a zip of your code if you ask: http://stackoverflow.com/questions/2751227/how-to-download-source-in-zip-format-from-github Git is for version control, not code delivery. Just put your code in there so I can clone and run setup.py and hopefully your tests. If you want to build exes and whls and versioned compressed archives, host that somewhere else.
There are two of them :)
Thank!
Living on the cutting edge is bound to find bugs. It'd be pretty cool to find, report and patch a bug in the language. Sadly, I stay firmly in the "safe zone" in my daily job and I don't find enough time outside that to really push Python to that extreme.
Try PyCharm. Also, post questions in /r/learnpython next time.
Okay, thanks, and will do 
I'm aware but it has worked before. Like stated above I've had a pretty high success rate this past season using it. 
So what could you use in its alternative? Just do a while = True and break it with an if statement?
Thanks, I'll check it out. 
Personally, I've always had a lot more luck getting plotly to do what I want than bokeh. I haven't used either of them a ton, but I found plotly more intuitive.
This is old news.
The tweet is new. Just checked the date.
Zzzzzzzz
It's been a great way to force my coworkers to update their Python versions :)
I know, I just wanted to say that. (I could have written "Extra-Bushy" if I'd thought of it!)
Beautiful.
&gt; In the end if it works without bugs its fine i guess. The essence of "production quality"
In particular amorphic777 is referring to the toga module from BeeWare. Toga is a gui library that seems cool, but I can never use it because AFAIK it lacks a checkbox widget. Also, the documentation is incomplete. From my experience with gui toolkits: tkinter - PROS: Works great, especially for simple to moderately complex interfaces. It's built-in, so no dependencies, and no packaging tool (cx_freeze, pyinstaller, etc.) has any problem with it. CONS: Not super pretty or native looking. wxwidgets/phoenix - PROS: Full featured and powerful, looks pretty good. CONS: Sometimes this can be hard to install, for a while it lacked python 3 support, but they're currently revamping it. I haven't used it for more than a few tiny utilities and never tried to package it up. pyqt/pyside - PROS: pretty awesome, full featured and powerful, looks really great on each platform. CONS: I have had some pretty frustrating times trying to get project to package up. It really depends on how you have installed python and on which platform you're coding. Sometimes it works great with pyinstaller, sometimes I have to use cx_freeze, and sometimes I just can't get it to work. Especially on the mac. You may be thinking that there's something wrong with my setup, but I assure you I've tried every way possible (python.org, anaconda, macports, homebrew, with/without virtualenv, with/without framework build, etc., yet some project package, some don't) pyglet_gui: pretty limited, but if you're coding in pyglet or arcade and you just want to offer some settings, it comes in handy. toga: I want to use this, I love BeeWare, but I always need a checkbox and there is none. I might write it myself and stop complaining about it. kivy: I personally find kivy to odd of a beast, so I haven't made it very far the few times I've toyed with it.
To people downvoting me: This isn't my opinion, I'm just sharing what I saw. Especially since I see him getting a lot of retweets / replies that agree with him. 
Explain why this is bad please. 
Do you even have to ask? Use a different name! Why would that not be possible?
My professor wants it to be called min. 
I fucking have no idea. I'm trying to write a recursive function that finds the minimum value of a list. This is shit. 
He's aware. He said Are you sure the functions are properly named (e.g. not capitalized)? min and max are built in python function so you have to be careful that you are test your version of of the functions and not the built in version. (You should be testing lab3.min and lab3.max if you have imported lab3) If you can make heads or tails of his response, that would be great. I'm confused. 
When testing this, i only got an error due to exceeding the recursion depth. You should name the function min_ or something that is not a built in, however this shouldn't cause any errors in this code.
Use a namespace? And as others have said, this is a dumb requirement to put on you.
Read the formatting help. Or just post a link directly.
How does that work?
You should ask your professor about help concerning your tests, not here
It's due tonight and he's not available for contact. 
That name is a problem I think, the 3D software from Pixar is called RenderMan and that is way older
I CAN'T rename it something else becuase it's REQUIRED.
This is something that _really_ needed to be done; the examples I have seen previously are \(and I am being kind here\) opaque. Mad kudos. 
It's been forever since I did it in Python and I'm on mobile atm. Sorry. If you google 'Python &lt;version your using&gt; namespace syntax' I'm sure you'll get what you need. The whole point to namespaces is to prevent conflicting function names from different packages. You basically end up referencing the namespace as part of your function call so the interpreter knows where to look.
Depends on what you mean by user. If this is in a library, I would say the user of the library should handle exceptions in the library. If this code is in a non-library context, then it could work fine.
Hm it might be worth to read some tutorials and then come back and understand the code. It's not so different from other projects except for meaningful variable names I guess ;)
Thanks :) yeah I didn't like the 'name the variables as in the equation' approach.
Andrew Ng's Machine Learning
What does that mean? I'm an intro to cs kid. shadowing a builtin name 
Sounds like he wants you to put the function in one file, import that file, then call it using: `filename.min` Then technically the function is still called min. Though you shouldn't be getting any errors related to shadowing anyway as you don't actually use the original builtin. And Python doesn't care if you overwrite a builtin until it actually breaks something.
It is not forbidden by the language. However, judging from your code, you actually want 2 things: you want to define your own function min, but, inside it, use the old one too. You can do it like this: _oldmin = min def min(ls): if len(ls) == 1: return ls[0] else: return _oldmin(ls) Of course, as others noted, redefining builtins is a bad practice.
So something like this: def min(ls): if len(s)==1: return ls[0] else return newfile.min(ls) I save min(ls) in another file. 
My adviser pretty much universally suggests this class to anybody who has the slightest interest in learning some machine learning. It's a very accessible class if you have a good programming background. He simplifies a lot of the math, so you don't need an engineering degree (though it doesn't hurt!)
Workaround: def my_min(ls): if len(ls) == 1: return ls[0] else: return my_min(ls) min = my_min You still need to fix the function, but that should let you use the name `min` to call your function. This will also let you use the built-in function `min` within your function.
Thanks for the pointer and fair enough! I'm small fry so if they ever write to me having a problem a) I'll be flattered they noticed me and b) I'll change it! 
Put it in a class?
I think things requiring non-trivial recompiling of c++ libraries alongside updated bindings to maintain dll compatibility on Windows... like I'm guessing PySide, PyQt, OpenGL, VTK, OpenCV, Shapely...
Make sure you're using the same name in all of these spots: def **my_min**(ls): &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if len(ls) == 1: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return ls[0] &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return **my_min**(ls) min = **my_min**
magic. do you know a nice guide or explanation for python async stuff? i find it hard to wrap my mind around it
He's not importing "min" from his other module, and his main() is looking up the global "min".
Your problem is that you aren't importing your code from that module, not that there is a global "min".
Is it really the same outcome? How did you test this? Are you able to access players near the end of the list right after you issue the asynchronous call? 
I don't understand...
then just keep the name, nothing bad will happen (unless you try use the builtin min later)
Brain fart is my guess. It happens. Check out [this](https://github.com/pallets/werkzeug/commit/64d1d2117cc177b9caf18bb571f32133492978c3) recently merged PR from the werkzeug project
not so much the concept of async but the syntax.
Hey all - author here. The V1 repo was started about 9 months before we went full-time on Staffjoy. It was our primary code base until ~July 2016. We have some additional services it interfaced with that will be going online soon. It's definitely not the cleanest repo - the dev environment sucks, front-end development was hard, and we didn't have time to go back to improve old warts (like the smoke tests) as our knowledge improved. Flask was great for rapid development, but we had growing pains - such as issue with sqlalchemy that could take down the whole site. The V2 repo is in Go and a lot cleaner. That will be going online this week too. 
Probably because email is one of the first things we wrote, and we were not super familiar with the python standard library at that time :-0
I enjoyed this write up. I've been following libraries like these and keep waiting for a good reason to use them. Anyone have any real world applications out in the wild using these?
Fuck that. Use gevent: from gevent import monkey monkey.patch_all() requests.get(URL)
&gt; UVLoop is written in Cython and uses the libuv library It's actually a thin wrapper around a big C library. At least be honest and say that the future of Python is being used as a glue language - much like shell scripting.
You don't need to scrape, you can utilize the API. Here are some functions I use to get quotes with just requests, which you could swap out for urllib2(and the json lib, because it comes back as json). I find that the download method is more consistant. def get_stock_download(inp): try: url = 'http://query.yahooapis.com/v1/public/yql?format=json' q = "select * from csv where url='http://download.finance.yahoo.com/d/quotes.csv?s=%s&amp;f=nl1d1t1c1p2ohgvj5j6jkm4a2d1&amp;e=.csv' " \ "and columns='Name,LastTradePriceOnly,Date,LastTradeTime,Change,ChangeinPercent,Open,DaysHigh,DaysLow,Volume,ChangeFromYearLow,PercentChangeFromYearLow,YearLow,YearHigh,TwoHundreddayMovingAverage,AverageDailyVolume,LastTradeDate'" % inp query = requests.get(url, q=q).json().get('query', '') quote = query.get('results', '').get('row', '') except: return None return quote def get_stock_rest(inp, q='SELECT * FROM yahoo.finance.quotes WHERE symbol in ("%s")'): try: url = 'http://query.yahooapis.com/v1/public/yql?' \ 'format=json&amp;env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys' q = q % inp query = requests.get(url, q=q, timeout=15).json().get('query', '') quote = query.get('results', '').get('quote', '') except: return None return quote They return nice dictionaries of values like this: {u'YearLow': u'89.47', u'Volume': u'21776585', u'YearHigh': u'137.48', u'Name': u'Apple Inc.', u'PercentChangeFromYearLow': u'+52.74%', u'TwoHundreddayMovingAverage': u'115.71', u'DaysLow': u'135.28', u'LastTradeTime': u'4:00pm', u'AverageDailyVolume': u'29132600', u'LastTradeDate': u'2/24/2017', u'ChangeFromYearLow': u'47.19', u'Date': u'2/24/2017', u'LastTradePriceOnly': u'136.66', u'ChangeinPercent': u'+0.10%', u'Open': u'135.91', u'Change': u'+0.13', u'DaysHigh': u'136.66'} And forgive the silencing of errors, in my app I handle that in the calling function
Yeah the syntax is definitely wonky.
she
I don't think it's a glue language. Look into Python 3.5 and it's async implementation. I don't see using native C libraries as a glue but as a major implementation decision. The fact it's possible without loosing implementation simplicity is huge.
In NLP, the distinction between supervised and unsupervised methods is no longer all that relevant. Most approaches end up semisupervised anyways.
Yet another blogger who thinks async has anything to do with the GIL. The main problem with the GIL is that you can't take advantage of multiple cores due to the serialization of CPU activity. async does not have anything to do with solving that problem. The GIL doesn't block on IO. And the OS can context switch plenty fast enough between threads to overtake a CPU-bound async program. 
To be more specific, itd be in the form of a questionaire. 
Why you are so bitter? Read again and see that's exactly what the post said. Async is a way to overcome some of the GIL issues (there are others) by using networking I/O and event loop. 
Or [`concurrent.futures.ThreadPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example)
I wonder what the runtime would be with multiple threads. In my opinion, that's really what you should be comparing against when it comes to convincing people to use async for io-bound operations. 
[removed]
I am trying to avoid old technology (.NET is falling into that) so your advice is really helpful. My first goal is to make a modern looking website that will be utilizing API calls frequently. I'm planning on doing a bit with analytics. I really like JS and I would be happy to learn a new framework such as Ember, I'm just looking for what would best suit me or any recommendations. I'd prefer something that would help put up a web app quickly.
"Message: 'geckodriver' executable needs to be in PATH" i think the problem is that the driver isn't in the correct directory.. btw, u did first install selenium and download that gecko driver did u? 
Hey there, thanks for replying. Yes I installed selenium through cmd, and downloaded the gecko driver.
https://chromedriver.storage.googleapis.com/2.27/chromedriver_win32.zip download that and extract it to somewhere in your PATH... Do you know what your path is? C:\Users\MyPC\AppData\Local\Programs\Python\ restart your computer
Hey dude, you need to set your operating system's PATH to point to the directory that contains your GeckoDriver you downloaded. 
Tried this, getting the same error, even when I import the Chrome webdriver
Alright, this seems like this could be the issue. Would you have any resources that could show me how to do this?
&gt; selenium.webdriver.common.keys import Keys missing from from selenium.webdriver.common.keys import Keys
Derp. That solves this part.
open command prompt, type: PATH &gt;&gt; c:\path.txt going to create a file with all the folders in your path. Chrome driver needs to be in one of those folders. Alternatively, you can add a folder to your path via Win+X, Y &gt; Advanced System Settings, Environment Variables, Path... Should look like picture. http://www.evernote.com/l/AUm0_SRqMYlGvrnyY263-KVYdStc-i1ajXE/ ^ Add a folder to that pop out, now that folder is in your path. after you add a folder, restart your computer if doesn't work after adding to path 
If you see an OverflowError in python, you're doing something very, very wrong. Also what does 2.n mean?
Thank you so much. It's working now!
Apologies, I wasn't aware of that subreddit. I'll have to go take a look through there now. Thanks again!
I'll have to bow out of the convo, you're still not really giving info as to what you are trying to accomplish. Nothing you have said really suggests you need one (server rendered) vs the other (single page app). So me, or anyone else, recommending a framework (whether Python or JavaScript) is ill-advised. Like I said before - I start simple and leave room to grow as necessary. Most sites have only needed server rendered templates to date for me. Though I've learned a few front end libraries to stay relevant and apply them as necessary.
There is something wrong with those box plots. How can the box bodies be so extremely narrow, but the whiskers so far out? That's not your father's normal distribution. It looks more like you only plot three data points per box, in which case a box plot is clearly the wrong visualization.
From the blog: &gt; In essence, these [async] libraries use callbacks to run an event loop on a single thread that allows I/O and CPU tasks to be carried out simultaneously. (Even though these tasks don’t interfere with each other, only one task can be carried out a time in the traditional, multi-threaded process Um, no. IO tasks are **not** blocked by GIL. So, if you have multiple IO tasks and *one* CPU task, they can and will be carried out parallelly. 
This is a contradiction. It doesn't add up that you "don't trust anyone to implement HTTP correctly" and also "use libcurl and let it deal with the details". That implies some extent of trusting libcurl. Even then, whether or not they implement HTTP correctly doesn't really answer the question of how to handle async requests in Python.
Normally when people say "front-end" they don't mean the server side view layer. 
Is this 3.6 magic? 
Why won't you just use JS in that case?
It's all wrong in his mind because his mind is working. 
That has always been the way Python is. Just doing string splits calls out to fast C. That's how CPython works. 
Plenty of things on the table for next week. I'm planning on releasing the next version of our ERP manufacturing module after we get the last integration tests greenlighted. A couple of stressful days at the end of the week as I'll be putting the last touches on a new client project (Django API and Angular frontend, first production project). 
Go with pure JS.
&gt; Recreating it for each call is a bit unnecessary. It's more than unnecessary, it's actively bad. From the docs: &gt; Unless you are connecting to a large, unknown number of different servers over the lifetime of your application, it is suggested you use a single session for the lifetime of your application to benefit from connection pooling. Importantly, each session is limited to 20 simultaneous connections to the same endpoint (by default). That's already too high (it's rude and will likely get you blocked), but with a session per request, there are no limits in place. Given the 50X+ speedup OP's async code gets, it must be *absolutely hammering* that server. Great example of the potential speed of async, but if you try that in practice, you'll quickly find yourself getting blocked. 
S. 
Part II: http://www.automatingosint.com/blog/2016/08/dark-web-osint-with-python-part-two-ssh-keys-and-shodan/ Part III: http://www.automatingosint.com/blog/2016/08/dark-web-osint-with-python-part-three-visualization/ Part IV: http://www.automatingosint.com/blog/2016/09/dark-web-osint-part-four-using-scikit-learn-to-find-hidden-service-clones/
The funny thing is that I tried to be sarcastic.
Yup, I write a lot of API integrations (mainly sites with no public API) and not hammering the site you're accessing is the golden rule. I'm not familiar with the NBA stats API but I'm guessing it's meant to be for their website and mobile apps only, not for mass scraping; bashing it with dozens of requests at once, especially when each request apparently takes a lot of resources on the server to complete, is a great way to see that API put behind more obfuscation or removed altogether in favour of embedding the content in HTML, or more efficient blocking of unauthorized clients than just checking the user agent, which the NBA site obviously does.
There are of frameworks like django, flask, web2py and a lot more -- they seem strange and big at the first look: but they abstract the database and include a modern web frontend. And they handle a lot of things you won't think of: sql-injection, cross-side-scripting and so on. And as a bonus you get free goodies like "log in with google"... 
So what exactly am I doing wrong?
Maybe even https://github.com/ross/requests-futures 
FFS OP THIS
 from gevent import monkey monkey.patch_all() Fuck that right in the arse
I didn't finish the article yet and i just came to say that this is amazing.
`asyncio` is akin to an official version of Twisted. In Python 3.5 and above, support for `asyncio` is built into the language with the `async` and `await` keywords. In older versions, you have to use decorators, as with Twisted. Twisted is a *lot* older (and therefore more mature) and supports a lot more out of the box. Both are badly documented. Twisted and `asyncio` are both "explicit" async frameworks. They're single-threaded and any code that does IO must be compatible with the library or your entire program will lock up till it completes. That means you can't mix Twisted/`asyncio` with existing libraries that do IO (which includes database drivers, API clients, network libraries). You can run some code in threads, but that doesn't scale. This lack of compatible libraries is a major disadvantage of the Twisted/`asyncio` way of doing things. `gevent` tries to solve this issue by patching Python's built-in IO libraries to add asynchronous support in a way that's transparent to the code using those libraries. That way, you *can* use existing libraries based on Python's synchronous stdlib. The downside with `gevent` is that it's closely tied to the CPython implementation and it dicks with stdlib internals (which should make any programmer feel at least a bit queasy). There are gotchas to `gevent`, so not every library will cope with having `socket` changed out under it, nor does every library use `socket` to begin with. But if it works, `gevent` is a great way to turbocharge "normal" libraries. 
Fantastic answer, thank you very much!
The most ugly thing there is asyncio.gather(* (get_player(*args) for args in player_args))
I've been working on a web app with flask. I didn't know any javascript at all when I first started so I decided to go with pure js, after a while my front end was getting pretty complicated and I was writing a lot of code to do DOM manipulations myself, so I decided to start looking in to frameworks. I ended up going with [vue.js](https://vuejs.org/) because it was the easiest to learn.
In my experience plotly is much better. Its been a year since I've used bokeh, but I use plotly quite frequently. The plots are more interactive out of the box. I also found the api to be more intuitive. 
So I was working on a single and rather straight-forward task, the whole program is maybe 100 lines (with imports, argparse..), less than 10 functions. It's a standalone program that does some input/output and that's it (i.e. it's not expected to be used as a module). But it got me thinking about the design and I have a question for you. Would you use class for it or not? My motivation for using class is to not pass around the same data over and over between functions. The usage in "main" would be just my_porgram = MyClass() my_program.run() probably with some command line arguments passed to either of these. I got used to write classes like this, it's convenient.. but at the same times it feels weird. So, what's your take on this issue? Pass around the same stuff, use class, use globals, ... merge code into bigger functions? General guidelines on when/how you decide this would help me.
Part I: http://www.automatingosint.com/blog/2016/07/dark-web-osint-with-python-and-onionscan-part-one/ edit: oh... it's in the submission haha
Currently trying to both learn Django, advanced Python, and manage user access and security to a server. I'm using Apache2 and MySQL. Are there any vulnerabilities that I should take note of?
Anaconda 4.3 has Numpy on Python 3.6, so it's definitely working (I've used it) and I trust their stability testing.
The content itself was a great deep dive; there was a decent amount of valuable content that you presented. I'd be happy to look over a second edit if you're looking to clean it up.
Hi @LightShadow, tk for taking the time to read my blog post. Regarding the writing style, I understand that it could be for you a turn off, but as being forced I can assure you it is not, this is kinda the way I explain and speak on a daily basis. But fear not, you are not the first one to point out that to me :).
Hi @Tomkeus, thank you for posting this on reddit, this is a huge surprise for me, since my usual pageviews are around 6 per month. Regarding the article: at first this was a personal project to better learn pymod, later it became a presentation at my local python meetup group, and then it became a blog post, some details got lost during this process, regarding the witty stuff, I can only say what I said to @LightShadow. Good thing to see that I have a lot to improve :D.
&gt; I don't think it's a glue language. Keep using it as a general purpose language and you'll see my point, sooner or later.
But that's not how 99.99% of us are using it. We don't write CPU intensive code in C. We write it in Python because we're lazy.
Sure. Then profile it and use CPython if we need to. Mostly it's already fast because Python is largely a wrapper around C libs anyway. 
It's required so show how namespaces solve the problem. It's not dumb. It's essential to the lesson.
Assuming the student has been informed of namespaces. We don't know if the student wasn't paying attention or the professor was being dumb. Either way, if the intent is to show how namespaces work it would be better to do that by having them create two packages with the same function names rather than encourage someone totally green to mirror names from the standard library and think that's okay as long as they use a namespace. Seems a lot like a 'not even wrong' kind of situation.
What's confusing? The Braintree documentation is pretty straightforward. 
Here's one: https://www.imagescape.com/blog/2016/03/29/braintree-integration-django/
Correct me if I am wrong but: 1. GIL is thread issue and threads should be bound to CPU unit. 2. I mean you cannot effectively share your states between threads on different cores. 3. So threads do not let you leverage multicores as processes do. 
oh, thanks!
Definitely, as I was trying to use it for tests earlier, but I don't have much experience with writing pytest plugins. If anyone wanted to submit a PR, I'd be grateful.
Don't have time to read the article so I don't know if this is the purpose or even one of the things you can do with this tutorial; but I was involved in a political student org in college and for one of our meetings we were talking about student demonstrations in Hong Kong (I think, it was a while ago). I had heard that the students were coordinating through the deep web to avoid the authorities and so I got TOR and tried a bit to find their discussions. Turns out I couldn't navigate the deep web worth a dang and didn't find anything; but I bet if I'd had a scanner (perhaps like this) I could have automated the search and looked for references to terms or places related to the demonstrations and had that info to show the org. So I guess -- at least for me -- the purpose of having something like this would be to have the software make up for my lack of savvy when it comes to finding stuff on the darknet. Also, I bet with something like this you could force it to ignore links and stuff leading to CP or other really questionable stuff (or have it only grab text); if so that'd be a huge advantage over manual browsing as far as accessing the darknet while keeping your head above water legally.
I recommend the Python challenge. 
I think you might be trying to run a script without first having installed it's requirements. Is there a file called setup.py or requirements.txt - have you use it yet?
&gt; DarkNet Such a ridiculous name. Whoever coined this and made it popular should be laughed at.
You should probably check out Vim's "quickfix list" feature (documented [here](http://vimdoc.sourceforge.net/htmldoc/quickfix.html)). It can read the output of compilers/interpreters and load the stack trace into a list you can navigate. I'm sure other editors have a similar feature.
###### Frog Program ###### def frog(): print(" 0..0 ") print(" (----) ") print("( &gt;__&lt; )") print("^^ ~~ ^^") #### Run Program ##### print("One frog...") frog() print("Two frog...") frog() print("Three frog...") frog() print("Four...") frog() ### I would like to shift the frog face to print to the right not directly under the string###
so yes i have a def function like that. i would like to call that function but i want it to be tabbed over on a line of its own when i call it. then i want it to run the def function at that point 
Fucking subscribe popover.
i printed a copy of what i was working on i came out weird in this 
your formatting is messed up, we cant see what you are doing since its all on the same line. type 4 spaces before each line to make it appear like this: print("hello) print("world") or use pastebin and link it here 
 #I thought you could hack your problem this way def frog(n): print(" 0..0 {}frog").format(n) print(" (----) ") print("( &gt;__&lt; )") print("^ ~~^ ") #Running the program for i in range(1,x): # where x-1 is the number of frog faces frog(i) 
sorry im bad at this im a math major and need to take this class lol i like this stuff but not good at it yet
`sys` is an example of where it's not supposed to come from, for the sake of producing the same `ImportError` text. OP presumably tried to import the name `SessionListener` from a module which really does exist (like `sys` does). I also have no idea what a `SessionListener` is and where it's supposed to come from.
 def frog(n): for i in range(n): print('\n') print('this is a frog face ' + str(i)) print('@..@'.rjust(15)) print('(\--/)'.rjust(16)) print('(.&gt;__&lt;.)'.rjust(17)) print('^^^ ^^^'.rjust(17)) frog(4) with rjust you can position text, there is also ljust. 
This is ridiculous. OP has made it clear that his/her _professor_ is requiring the function name to be _min_. Yes, that's terrible practice, but ignoring the professor when they specifically said something has a high likelyhood of making them fail (or get a ton of points off) their HW. It seems like many of you have been out of school for a long time. You can't just ignore a professor and expect to get full credit, and it's not worth failing the HW because of a function name. OP, in the real world, try to never override builtin function names. You can do it for your HW, but understand that this is bad practice and that your professor is wrong to require you to do this (unless they have some other reason behind it). I don't understand why you are downvoting him/her just for telling you that the professor is requiring a certain name. OP has said it multiple time now, they are clearly not lying. OP, try not to get too frustrated. People over in /r/learnpython might be more helpful. I see it's past the deadline though so I'm not going to spend the time to write something up, I hope that's okay.
Yeah had a couple of errors Like sending async mail using flask_mail and missing csrf token when I deployed the app
I'm sorry you feel that way. I think it would be better to be constructive and provide an alternative if you think it's so silly. DarkNet sounds pretty catchy to me and seems like it embodies the topic pretty well.
Don't be sorry. The dark net is simply the internet. It isn't anything different. It traverses different routes using different protocols. Calling it the "DarkNet" is akin to calling the internet not referred to the "DarkNet" the "LightNight". It sounds like something someone's mom would say. Edit: We also don't have terminology for other encrypted network traffic that traverses the internet, nor do we have names for internet routed traffic using IPv6 vs IPv4. There's no such taxonomy. It's a dumb thing that someone said that is now being said.
now try: x = 100 y = 100 x is y I get True. it might be different for you. This has something to do with deeper, under the hood, stuff that python does and i dont fully understand it myself. Here is a link that has some discussion about this: http://stackoverflow.com/questions/33014871/different-python-variables-with-same-value-pointing-to-same-object
&gt; The operators is and is not test for object identity: x is y is true if and only if x and y are the same object. x is not y yields the inverse truth value. [Python Documentation](https://docs.python.org/2/reference/expressions.html#is)
Well, it refers to the same object only for small integers, more specifically 0-256 and for some reason also negative up to -5. But strangely no such limit when I try it on repl.it. :0) Strange mystery. Maybe Windows only?
Format your code. Indent your code 4 spaces.
Check out `ipdb`, a library that wraps the built-in `pdb`, you can install it with `pip install ipdb`. At the very first line of your code, put `import ipdb; ipdb.set_trace()`, then keep typing `next` and printing out values of variables until they don't make sense anymore and figure out why. /r/learnpython too.
 A variable is a piece of memory put aside to store a value. The value is the number you put in the variable, but if you create two different variables, it is generally because you want to store two different values. Here, you have created two completely different variables, a and b. The computer has set aside two areas in memory for you, quite separate. You happen to be storing the same value in them, and using a == b will compare the values. But the variables themselves are not at all the same. You could change the value in b without affecting the value in a , because a *is not* b, even if the values are equal. People have pointed out that in Python this may be different for the first 255 numbers (I believe that's implementation defined, but true for the reference implementation), because the interpreter can pre-allocate variables for those. In that case, the interpreter does say "oh, I already have that, if a=100 then a *is the same as* this variable I have. " But you shouldn't rely on that. More discussion here: http://blog.lerner.co.il/why-you-should-almost-never-use-is-in-python/ Edit: Worth pointing out that Python blurs these lines a little more than many languages when you start doing `a = b`. Because everything is a reference, in that case, Python has a tendency to point a to the same underlying *thing*, in which case a in a sense is b, because they are just references to the same underlying object. If you do a = 1000 b = a then in python `a is b` will be true ( not the case in all languages). If you then do `b=999`, then b is no longer a. 
&gt; such as issue with sqlalchemy that could take down the whole site Could you elaborate on this? e: formatting
Is works like this A = 100 B = A A is B# true They are literally the same. If we repeat that with 2855339, the answer is still True, but False for the way you did it. It's an optimization. Use is for testing if something is None or is True (vs. say 1, because True==1). Use == for integers. For float equality, you have to account for numerical accuracy. Since I heavily use numpy, I just use np.allclose.
Thank you! 
Ooh, thank you for the link to fastavro! I'd only used the other avro package, and found it to be too slow to be useful.
`==` compares values and `is` compares references. Since `a` and `b` are different references with the same value, the `is` returns `false`. If you were to compare with `==` then you would get `true`.
In fact it's harder to hide a variable than that; you can access the variables in a function's closure. There are a number of `co_*` variables that you can find the value in. There's the `inspect` module in stdlib that makes exploring these more comfortable. To play with it, write a generator function, advance an instance of the generator a few times, then modify the local variable so the generator returns the wrong thing. Python has very few absolute protections. For example, you can get the runtime's pointer to `dict` and replace it with a custom class (implementation dependent). Jinja has/had a module that modified the traceback to improve template failures (you can't remove frames of a tb otherwise, iirc). I think it was also CPython only. Which is all to say that you can very much access variables defined in a function, and even modify them. There is of course a point where we're all responsible adults, and if the caller had found your function-local sentinel and used it as a value, there's not much you can do to help them.
Can somebody please explain to me why so many people are completely obsessed with performance when programmer time is so expensive, plus a lot of the time your code will be waiting on the network, database or any other resource you'd like to name?
Sure, let me see where I get with it and then I'll try to share it with you. 
For what? The minute you see *range(len* in Python it's a code smell :-(
have you seen [**syntax_sugar**](https://github.com/czheo/syntax_sugar_python)?
Hi there, here is another answer to your question (which you x-posted to /r/learnpython) [[chr(((n-32)%96)+32) for n in l2] for l2 in l] Although I get different results than the ones expected.
I used both at uni back in 2007, and pyqt was the better library. The documentation was massively better, names were more consistent and I had access to more widgets.
thank you, my question there was so badly written so thought I should upload it again
Depending on whether the caller has access or can influence the instance creation, simply subclassing the class that defines `__slots__` will get around the original restriction (provided the subclass doesn't also define `__slots__`). https://docs.python.org/2/reference/datamodel.html#slots Depends where the instances are used and how badly the caller wants to add properties, of course :) 
Lol. I honestly don't know what to say to that.
''.join(l)
TIL
Why would anyone still use py2 for new projects?
I am guessing toward the intent; You want to create one of these online interpreters similar to what the python.org homepage has. It is an interesting project and sandboxing the Python interpreter is arguably no easy feat. You may want to look into some way to jail the python process or put it in a VM. Maybe a docker container? It is not a pure python solution, true but may be a hint toward a workable one. There is a lot of security aspects to think about here.
How does this compare to deap? What are the advantages?
Py2 only Packages. 
Yeah that's pretty much the idea. Was hoping I could do it purely in Python :( but I'll look into the methods you suggested. Thanks!
I was having a hard time getting the first part of this tutorial to run, but I believe I solved the issue. In your code you have this: process = subprocess.Popen(["onionscan","webport=0","--jsonReport","--simpleReport=false",onion], stdout=subprocess.PIPE,stderr=subprocess.PIPE) I had to change this line to: process = subprocess.Popen(["onionscan", "-webport=0", "--jsonReport", "--simpleReport=false", onion], stdout=subprocess.PIPE, stderr=subprocess.PIPE) I'm using Python3.6, which could be the cause of the issue, but I figured I'd post it here in case someone else runs into it. If anyone is curious about python3.6 and this guide, feel free to follow along: https://github.com/BaltimoreChad/pyOnionScan So far I only have the first part of the guide done. I'm no expert programmer or anything, but feel free to follow along.
Adding to what others below have said the `is` operator compares the ID of the two objects. The ID of an object is sort of like it's address. Every object in python (value, list, dict, class instance) has an id, and they're all different. When you do an assignment, you effectively make a label (the identifier on the left side) for the thing on the right side. Names (bindings) are not the same as objects - an object (a value) may have many bindings, but a binding may only have one value. This example might clarify: &gt;&gt;&gt; a=6000 &gt;&gt;&gt; b=6000 &gt;&gt;&gt; id(a) 16275128 &gt;&gt;&gt; id(b) 16275032 &gt;&gt;&gt; a==b True &gt;&gt;&gt; a is b False &gt;&gt;&gt; 16275128 == 16275032 False &gt;&gt;&gt; 
Why is this comment so heavily downvoted?! It's perfectly fine!
For the plotting part I would suggest [matplotlib](http://matplotlib.org/), for the actual packet flooding try the socket library or [scapy](http://secdev.org/projects/scapy/)
If the libraries you wanted to "blacklist" are just a few, I would simply add an empty local module (on the same directory as your script) named after them, so to create a name conflict on purpose, although it might not be the most pythonic way...
I assume you mean using constructor to build an `.exe` which includes Python 3.6, as well as you program. You can certainly do that, if you have conda packages for all dependencies you need. Which dependency do you run into trouble with?
I'd like to hear your opinion on "Web Surfing"
"".Join(itertools.chain(*l))
Great article as usual for pbpython.com. The site has really become a treasure trove for learning practical Python stuff.
I'll be attempting to include selenium, pandas, PyQt5. How would you advise I achieve it?
There's a save button. I'm not trying to be a pest I just figure you might not know about it
Thanks, yea I've written most of it already in Scapy but just need help with the graph part
Basically, commits on sql transactions always needs to be wrapped in a "try / except" block with a session.rollback(). Otherwise, when there is a failed commit, the session errors until it's rolled back. Here's an example - you want to insert a user with a particular email into the database. DB says email must be unique. You check before inserting that the user doesn't exist, but if you send two requests at the same time - there's a race condition where one insert succeeds, but the other throws an exception that there is an integrity violation. If you don't catch and rollback, the SQLAlchemy session throws exceptions and can take down the site. So, we wrapped all the inserts with rollbacks. However, we started to hit other issues. For instance, we update the "last_used" for an api key in the database with every API call. However, when getting slammed with api calls, occasionally the SQL transaction would fail due to a timeout obtaining a lock. This would have the same effect - and basically pollute the session and take down the site. So, long story short, don't use autocommit - and every single db.session.commit() needs to rollback on failure. 
Thanks for this. It's rare to get to see the code behind an actual company and how that may differ from projects designed to be open source from the start.
I am using the requests library through locust.io and in this configuration the requests library is partially async at least. It even mentions it in the requests library docs under advanced usage, it won't wait for a response unless you try to look at reponse.content for example.
QT is also truly multiplatform. I have honestly never seen GTK applications running outside Linux, though that may or may not be possible. On a personal note, I've written a small PyQT app and am pretty satisfied with the result. Can't say anything for more complex ones though.
I already have my environment set up. I mean something like pyinstaller or py2exe. Making the package into an executable is where my interest lies, not my dependencies.
I'm actually writing API load tests where I need to script fake users doing stuff and making choices as they get through the loadtest script and do any HTTP requests asyncrhonously as a web browser would, which is where locust comes in. I would hate to write loadtests that would use curl for this sort of thing and have it driving 500+ users, with locust this just works for me as this is exactly what locust was designed for. Go would be excellent for this sort of thing too, though I am using locust because it's more mature.
There's nothing deep here. It's simply caching small values of ints. When you have code like `x = 100`, the Python runtime has to create an `int` object with value 100. Because ints are immutable, it can either create a new object each time, or it can cache them and use the same object. It's a tiny bit quicker to fetch the object from a cache than to create a new object, but on the other hand there are a lot of different ints, and most aren't used very often, so you don't want to waste memory with a huge cache where most values are never used. Python caches the most commonly used ints between -5 and 256. That's all it is: a micro-optimization. And a version-dependent, implementation-dependent optimization. You shouldn't be relying on this at all, you should never use `is` as a way to spell "equals". There is never any reason to care whether x and y are the same int object or different int objects. 
&gt; For float equality, you have to account for numerical accuracy *Some* people *might* have to account for numerical accuracy *sometimes*, but it isn't a hard law of physics. Float equality is perfectly well defined and it is [sheer superstition that you should **never** test them for exact equality](https://randomascii.wordpress.com/2014/01/27/theres-only-four-billion-floatsso-test-them-all/) and **must** use some form of "is close" test. 
Oh, yeah, I agree 
Agreed, docker to let the script not mess up your system, then disable networking for the container so they can't do anything else malicious. Also allows for a clean instance per script (or user, depending on usage), and instant start over or ability to save state. 
Not sure I follow. The GIL locks all python objects so only one CPU thread can use them at a time. You can share state using shared memory no problem, just not python objects because of the GIL. Multiple threads can use multiple cores so long as they aren't trying to use locked python objects. IO defers to the OS, so the GIL can be released in that case. Numpy releases the GIL for some operations, and cython and numba also let you release the GIL. Thus when used with the threading module, multiple cores can be used within the one python process.
Is there a way to block on these? If you want to call an async function in your synchronous function, can you do that? If so, this seems usable. If not, async/await will never work for me. I refuse to make every function in my programme async.
 results = [await fun(open(fname, 'r').read()) for fname in filenames] I thought it was results = [fun(open(fname, 'r').read()) async for fname in filenames] EDIT: Oh shit I just think I realised the difference. The first one is looping over a *synchronous thing*, a normal array. It's *doing asynchronous work*. So it uses `await` (because it's waiting on that async work) but a normal comprehension otherwise. The second one is looping over an *asynchronous thing*, an iterator that is produced by an iterator that might go off and block and transfer to another thread of execution while iterating, but it does synchronous work for each one? So the former is like: foo = [] for x in y: foo.append(await fun(...)) and the latter is like: async for x in y: yield fun(...) or something? But you could also combine them, right? [await foo(x) async for x in y] This is the first time in a long time I've found a language construct this difficult to comprehend. (pun intentional)
In his defence, the article is at least 8 pages long, and is highly technical. If its new information, I'd need way longer than 5 minutes to read and understand it. On the otherhand, just retelling stories that I've heard months ago is something I can do even drunk.
Thanks Philip. I really appreciate that you and your team made the codebase publicly available. Best of luck in your next endeavour. I have virtually the same boilerplate for commits* — I figured this is what you were getting at. I'm surprised that the try/except pattern for SQLalchemy commits isn't seen more often in the wild. In fact best practices for flask in production aren't all that common. Like I wonder what the best way of avoiding the timeout would be. [*] For posterity: try: db.session.commit() except (exc.SQLAlchemyError, exc.DBAPIError), e: current_app.logger.error(e.message) db.session.rollback() e: formatting
&gt;Please do not alter this account in any way That's cute
...why
Oh oops sorry I forgot that I still use 3.5, my apologies 
Yeah. I'm anticipating that email account gets totally FUBARd pretty quickly.
So, your friends order pizza, and you magically show up at their place 5 minutes before the pizza dude :)
"Man, how does Dave keep knowing when we order pizza?!"
Lol, Dave's psychic! :)
It's less popular than PDFMinder; however, it's more actively developed https://python.libhunt.com/project/pdftabextract/vs/pdfminer
&gt;Besides installing a basic set of packages on everyone's computer... You are aware that you can specify these requirements in setup.py and when they install your package, it will install all the requirements too, right?
The deep web is not the dark web.
I think they mean mail them your computer. It's the only way to do it safely.
It's customary to leave in a non functional stand in for the email /password in code like this. No one expects you to include an email and pw. 
Preferences? Who cares.
Gtk is largely competent on Windows though it is quite lacking on OSX compared to Qt.
Dominos uses fake delivery driver names to prevent stalkers. For some reason their name database is exceedingly British. Ever wonder why they're all call John and Susan instead of Rahul and Yolanda?
Silvia is one that I got a few times, haha! But hat makes total sense. Interesting to know
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Am I overly paranoid for not wanting *any* information given out for just a publicly-available phone number? This isn't a hard problem. Nearly every website that handles orders has an authentication system now. I mean, well done OP, but the fact you were able to do this is a horrible security failure on Domino's part.
/r/learnpython has an IRC chat for this sort of thing ☺️ give that a try. /r/python is more for established python programmers or python news and high level discussion. Good luck with your education. 
I will be messaging you on [**2017-03-04 06:20:13 UTC**](http://www.wolframalpha.com/input/?i=2017-03-04 06:20:13 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/5wc341/exe_builder_for_py36/de9lgro) [**2 OTHERS CLICKED THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/5wc341/exe_builder_for_py36/de9lgro]%0A%0ARemindMe! 5 days) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! de9m5p7) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Too late, but yes that's probably a good idea
Thank you.
I'm just confused went domino's let's you do this. 
If there are globals that are modified, I tend to change into a class. Either that, or just compose functions as necessary. Don't merge into bigger functions though.
Oh, see now that seems sketchy, ha
I'm going to look into this right now! I might end up changing the code in the post if this is solid. Thanks for the advice!!
Is it free?
from stem.control import Controller from stem import Signal from threading import Timer from threading import Event import codecs import json import os import random import subprocess import sys import time all, including stem are available for py3.
index FINDS the index of a value. You want to just access the item at the index I think: "foo[index]" You should really use better variable names. It would make it much easier to read that code. 
Don't use a blacklist, uses whitelist. Thats step one. 
Thx
My name is John and I delivered for Dominos for like a week and a half a few years ago. AMA
They also have a REST API that is pretty easily abusable. Quite a few projects for ordering pizza from that. What is even better is Dominos devs know about these projects and like them. 
That learning curve is what worries me most. Because at some point, everything *will* carry them, and then even beginners will have to learn what it does (AND a lot of them will think, stupidly as beginners often do, that it's required since it's on *EVERYTHING*) -&gt; self-reinforcing cycle.
I've learned on statically typed languages. Used a ton of them. My first language, though, was BASIC. Which means, this part of your post makes no sense.
OMG how cool is this now :O
You can just about hear the words 'it's just pizza' echoing from the design meeting.
"very long" == "3 months"? How old are you?
So post back in a week with domino's #1 customer by area code?
Have not been coding in Python for very long. Sorry if that was unclear.
Prowl hasn't been updated in a while ... checkout Pushover. Pretty flexible push notifications, support for acknowledgements (marking a notification as "done" and having that event marked back on Pushover's servers so you can query it), even an Apple Watch glances API so you can push data to a complication. 
If you know someone's phone number and they order a pizza you could find out where they live 
Why python2?
Yes, it seems really stupid for numerous reasons. They are giving away all their valuable data on who their customers are for free to all of their competitors. Many of their customers also prefer a little privacy instead of telling the world every time they order pizza.
Well in English, dark does connote 'hidden' but it also connotes 'bad stuff' because bad stuff is usually hidden.
I am not sure about anything outside of the US. I'd be happy to assist someone if they wanted to try to figure it out for some other location though. This program takes a 10 digit (most likely US only) phone number. I imagine the process is pretty similar for other locations, though edit: try going straight to Domino's website in your country and see if you can find their online pizza tracker. Should give us some more info to work with
[Pushbullet](https://pushbullet.com) is another good one for notifications, if you're willing to install their app on your smartphone and/or their plugin in your browser. I personally found it more convenient than texting.
I just found a previous order of mine, the tracker URL is : https://www.dominos.co.uk/PizzaTracker/?id=MTgwMTMwMzAzfDBhMmNjNWI3LTc4EDUtNGE1OS05MmMzLTc1OWE3ZWE2ZDc3MA== So I presume they must just generate it for each order.
I think my favorite thing about making this post is all the advice I'm getting. Believe me, I'm taking notes on all of this. Thank you for taking the time to stop by and drop some knowledge!! :)
Hmm, I don't have access to that link. If you have a previous order though, just open up your browsers developer tools. Go to Console, look for the 'GetTrackerData?Phone=' you should be able to click it and see all the XML info.
Classic Dave
Honestly, I've thought about letting it run from now until December and gathering a bunch of data, and then come Christmas time ordering all of my friends their 'favorite' pizza. (based on what they ordered most over the year...) What greater things do you have in mind? 
will do - cheers
You still have 1 request per phone number so imagine if you got 100 friends :)
Except you are giving away your friend's phone numbers
good stuff mate ,but is it legal ? :) if it is integrate some sms notifications like twillio , and send your friend some msg , " you better save me slice from that pepperoni " :) or something :D 
In my experience the best thing is doing something *you* are interested in. It will help keep you motivated. When really being short on ideas, try and contribute to some open source porjects that's already existing, or rewrite a script you like or find useful.
Yeah, this was a throwaway email. I definitely see why it shouldn't be done. It's mostly in there as a place holder in the code. Others have suggested various text message services. I'm going to be looking into them, and if they work well I'll likely be updating the source code to use that method instead. That Google account sync is actually a really neat idea. I'm for sure going to look into this. Thank you for your comment!
&gt; If nothing changes, float equality is defined. I've see it change [...] Seen exactly what change? Its possibly you've found a bug in something. Not all floating point operations are calculated with the same precision on all platforms, but if you're just doing simple arithmetic operations `+ - * /` (but notably *not* `**`) then they should be correctly rounded on all Windows, OS X, Linux and Unix systems. Which means they should give identical results. I'm not saying that there aren't many situations where the calculations have to include tolerant comparisons. I'm saying that it isn't the case that ALL calculations have to be done that way. Bottom line: if you calculate `1/7 + 1/5` in Python3 and get anything other than *exactly* `0.34285714285714286` on any mainstream Windows/POSIX platform, that's a bug. 
You should change the password on the account to ensure no one can access it, then remove it from the post. The way it is now, as per your own disclaimer, there should be sent mails in that account with email addresses and phone numbers from others. Maybe it's their own fault for using your script, but it's just a basic notion of responsible data ownership not to allow people to do this at all.
You're not paranoid at all. I read the title and thought it was an /r/netsec post criticizing Domino's for their bad design. I can totally understand if Domino's doesn't want to require authentication to check order status (maybe you don't want to require an account, or you want to allow easy sharing of the status page). But in that case you make the url have a random hash in it, you redirect them to the link on order completion, and you send them the link in the order confirmation email. Now only someone who has the url can find the link, and the link isn't practically discoverable by random search. As you said, it isn't a hard problem. EDIT: To clarify, the hash you use doesn't even have to be random. Make it some non-reversible hash of some combination of the information from the order, and then you don't have to even store any extra information in the database. I would personally estimate the time to implement a feature like this at no more than an hour or two if I were asked to do it.
Because tons of people still use python 2
Assuming you mean that they allow you to complete the order and that they still get their money and not just "send this API call and get free pizza", I'm pretty sure that not only the devs but everyone in their chain of command is also happy about the fact that people are placing more orders with them. 
Because there are many categories of software where there isn't the waiting you talk about.
Apparently you would win that argument though: https://www.wired.com/2013/03/att-hacker-gets-3-years/ 
Bonus points if you use os.environ.get to access environment variables
rewind back to thepoint that we don't have an address.
It appears to just contain the order number (Confirmed by looking at the email) followed by 0a2cc5b7-7805-4a59-####-############ (Parts omitted with #)
you can declare an list whose length is the number of levels in your game, and whose each entry is the range of numbers to guess, like so: import random levels = [[1, 20], [1, 30], [1, 40], [1, 50]] for level, levelRange in enumerate(levels): secretNumber = random.randint(*levelRange) print(" I am thinking of a number between {} and {}.".format(*levelRange)) for guessTaken in range(1 ,4): # take user input and compare as before 
&gt;Feedback is always welcomed I would remove the `while True` loop and would use on board mechanics to call the script regularly.
&gt; It is just that when I copy paste code it does this for some reason and it is unreasonable for me to be forced to spam space on all the lines of code just to show that I have indented the for loop in the "def" This attitude sorta explains why you're so shit at programming. Also, read the fucking sidebar.
They're not 'creating urls.' I'm not even sure what that would mean exactly. They do have a single endpoint that accepts a phone number as a query param that will make a DB lookup. 
I like Pushbullet for the feeds every morning and when I'm on my computer not listening to my phone it's nice to have my messages or call notifications pop-up. 
Never under estimate crazy. They'll follow the delivery driver. 
It's like [yagmail](https://github.com/kootenpv/yagmail#username-and-password) read your mind, it is a way to send email WITHOUT having your user+password in your script ;) Actually, it has a whole bunch of other features, as sending html by default, adding images and attachments. Disclaimer: I'm its main developer :)
Shitty pizza. Shitty website. Cheapest quality and effort they can get away with is the business model. And it probably just didn't cross their mind. If someone lets them know, they might fix it.
or config parser
Can you include your own application as well as conda packages? Would I be able to make an install to distribute https://github.com/siecje/qml-testing ???
Isn't this a privacy violation?
Thanks for checking, I'm new to all of this so I wanted to make sure I wasn't missing something dumb. I just did pip install pystan on my mac and it worked fine, so I wonder if there is an issue with the windows version, since you also ran into the same error... Edit: Even though I installed them in using pip install, I still can't get them recognized in Anaconda, not sure why. pip install is setup to point to /user/anaconda/bin, I think. I ended up running /anaconda/bin/pip install pystan and it said everything was already installed
Yeah, Dave is over at his friends house getting Domino's.
So how do you get there first then.
Other people have said this before, but the easiest way to keep secret variables out of code (though still insecure) is to have a file called secrets.py And in that secrets.py file, just have a bunch of variables for your "secrets," such as the username and password for the email. Then, in your main code, you can just do "from secrets import username, password"
&gt; Weev What the white supremacist guy that exploited a security hole and stole data from AT&amp;T.... being technically accessible is different to publicly available. Dominoes aren't trying to withhold of hide this data..
I've been using configloader. It lets you read from env vars, and other files (I keep defaults in a dict, have configuration files in yaml and override with envvars). The only thing it seems to be missing is parsing and verification.
You know you can set up app-specific passwords in gmail, right?
We all miss Dave.
This is cool - I love the idea of running a suite of unit test with type tracing on, which then could update type annotations in the code based on what is discovered.
Damn straight. An easy way to answer that question is to imagine a worst-case scenario for using the information and weighing how bad it would be. Ok, here's one: Jane now lives safely across town from her crazy, jealous ex, Jerry. She just blocked him on Facebook and Instagram and he's furious. His job doesn't give him time to stalk her house, but he sure wishes he knew when she'd be home so he could give her a piece of his mind... Fellow engineers: don't write software like this. Push back. No one can *make* you write it (assuming you're not reading this from North Korea). Can you imagine how you'd feel reading the news story about Jerry assaulting Jane with the help of well-meaning software you'd written? Sorry, I know that's a little bit off-topic, but this is a group for software engineers and seeing my colleagues at places like Dominos write stuff like this drives me nuts. I think OP did a service in showing how easy (and obvious) this is to abuse.
Please use standard Python terminology on a Python forum. Your *levels* is a Python list, arrays have to be imported from the array module.
On the next trip? Maybe ten minutes later and claim they forgot something? The point is that the system can be exploited as OP proves, how far it can be exploited depends on the creativity or obsessive nature of the persons exploiting it. 
Note that this language appears in their terms of use - &gt; **You agree not to use or launch any automated system, including without limitation, "robots," "spiders," "offline readers," etc., that accesses the Websites or Applications in a manner that sends more request messages to the Domino's servers in a given period of time than a human can reasonably produce in the same period by using a convention on-line web browser**. Notwithstanding the foregoing, Domino's grants the operators of public search engines permission to use spiders to copy materials from the site for the sole purpose of creating publicly available searchable indices of the materials, but not caches or archives of such materials. Domino's reserves the right to revoke these exceptions either generally or in specific cases. **You agree not to collect or harvest any personally identifiable information, including account names, from the Websites or Applications**, nor to use the communication systems provided by the Websites or Applications for any commercial solicitation purposes. You agree not to solicit, for commercial purposes, any users of the Websites or Applications with respect to their User Submissions.
Just sent a pull request for adding a dict of the valid airport codes based on what's posted on southwest.com
For stuff I've pushed open source I've tended to use ConfigParser.
I actually might have time to dedicate to an extra python project, let me know if something interesting comes up :)
What is the difference between a unit test, an integration test, and a system test? Mahmoud Hashemi helps me to define these terms, as well as discuss the role of all testing variants in software development. * What is the difference between a unit test, an integration test, and a system test? * TDD * testing pyramid vs testing column * the role of testing in software development * web frameworks * listen to wikipedia * hatnote * the world’s largest photo competition * Enterprise Software with Python
Presence of pineapple in the toppings list indicates that the household is in imminent danger of being stormed by Icelandic security forces.
Are there no data protection / privacy laws that outlaw this kind of PII leak?
As of python3.6 you don't even need to fuss around with `"string {}".format(some_var)`, you can just do `f"string {some_var}"`
It's a system variable. It lists all the places where windows will look for your .dll files. Here is a nice description for every windows version on how to find the path variable: https://www.java.com/en/download/help/path.xml (Yes, it's about Java but it's still the same PATH variable as in your problem :) )
Thank you!
Everyone not [rationalizing they have to remain] stuck in past ?
Good grief
3meta5me
To be fair, from what I've seen, they differentiate the Deep Web, which is the portion not available to the general public, and the Dark Web, which is the subsection of that used for illicit activities. Not everyone might, but it's a distinction I find useful.
I would highly recommend the following courses: https://www.edx.org/course/effective-thinking-through-mathematics-utaustinx-ut-9-01x-0 https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/index.htm
I am a somewhat inexperienced, confident python programmer. And would like some experience in freelancing. Depending on the project size I am happy to work for free!
Violation of terms of service can be a felony
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/bestof] [Redditor creates a program to notify him if any of his friends orders Dominos.](https://np.reddit.com/r/bestof/comments/5wijgg/redditor_creates_a_program_to_notify_him_if_any/) - [/r/shittyprogramming] [I wrote a program that emails me when one of my friends orders Domino's (x-post from \/r\/python)](https://np.reddit.com/r/shittyprogramming/comments/5whxfl/i_wrote_a_program_that_emails_me_when_one_of_my/) - [/r/technology] [I wrote a program that emails me when one of my friends orders Domino's. • r\/Python](https://np.reddit.com/r/technology/comments/5wjby8/i_wrote_a_program_that_emails_me_when_one_of_my/) [](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))* [](#bot)
Step 9999 being "Trying to sandbox a piece of python code is futile, sandboxing whole process is the only possibility". At least until CPython devs get a clue from Tcl, eliminate globals [=allow hosting multiple interpreters in one process], and then get another clue and implement safe interpreters [any unsafe functionality is not available to the safe interp, but the call is forwarded to hosting interp which can decide what to do]. PS: Multiple interpreters also give you - relatively painlessly - share-nothing threads. But of course, "Tcl sucks, Python rocks - oh what a masterpiece".
Weev was my first thought when I saw this.
He's an asshat for sure but incrementing an id in URLs is not hacking and his conviction was utter nonsense. That said this script does exactly the same thing but it's just using known ids (phone numbers) instead of incrementing the id.
if you want something truly cross platform and something that will look more or less native then I'd suggest PyQt / Pysides. 
While I can see where you're going this doesn't reveal any info personal info you didn't already have (phone number).
Health Insurance Pizza and Accountability Act
Health Insurance Pizza and Accountability Act
Have you heard of legacy programmers? They're pretty important. 
I think I'd prefer to name the tests rather than number them: def test_addition(): return True def test_mult(): return False for test in filter(lambda x: x.startswith('test'), locals()): print(test, 'passed' if locals()[test]() else 'failed') 
Does guessing the data chubby as collecting it?
So it's illegal. How will they stop me?
Vim. But... I use Vim for everything.
If your actions actually cause them harm, they're going to a) hash their phone numbers and b) try and get your ISP to release enough info about you to take you to court. Just don't forget your proxies.
LiClipse may be on the old-school side for some people, but I'm happy with it. Looking at VS Code as a future alternative, though.
sublime text 2 or idle
I've tried several editor, all are good if suited to your needs: - **VI**: On some server, I sometimes use **vi or vim** because it's always available but the learning curve can be quite harsh. It's a really powerful and lightweight solution. It can be a bit long to master though. (available everywhere and free) - **SUBLIME** For my everyday job, I use a lot **sublime text 3** with a bunch of plugins. Lightweight and powerfull, easy to use and to start with. Lots of plugins, quite a good choice. (free and available on all platforms) - **PyCharm** or any **IntellJ IDE**. It's extremelly powerfull but quite heavy. If you need to switch regularly between tons of projects and want them to start right away, maybe it's not the best solution. BUT, it can help you with static analysis, smart indexing, refactor, code generation etc... A lot of plugins available. Really powerfull. It can sometimes take up to one minute to get a project to be launched with that IDE. It may be worth it. (available on all platforms, not free. There are educational and trial license) Hope that helps.
Emacs
Heh, I wish. I bet there's an Emacs plugin for that, though.
Sublime Text FTW because it's extensible with Python (*and waaay faster than the Electron-based options*).&amp;nbsp; It's super easy to optimize your workflow by writing your own plugins. &amp;nbsp; Atom does have some really cool API features (*the custom plugin GUIs are my favorite*), but I find it (*along with VSCode*) unusable in terms of performance. Specifically region-manipulation. They're crazy slow when working with a large amount of regions (*advanced multi-editing, complex macros, etc*).
GTFO n00b: # [cVim](https://chrome.google.com/webstore/detail/cvim/ihlenndgcmojhcghmfjfneahoeklbjjh)
I guess my biggest question is where and when did I ever agree to a ToS? I saw on the web how to scrape their site, I don't remember being presented any sort of terms of use. Just a rhetorical question really. If I'm scraping a site but never went through their channels/API to agree to anything would I be considered at-fault if there was never malicious intent? If its public web then what recourse do they have?
&gt; I guess my biggest question is where and when did I ever agree to a ToS? You de facto agree to them by using the site/service. If you do not agree to them, you are supposed to stop using the services immediately. The company posts the ToS publicly and that's meant to serve as the notification to the public.
It makes me wonder, do any other of the major chains do something similar?
Although there has been at least one case that is based on 'this access is not allowed in AUP, therefore it is unauthorized access, therefore it is illegal under the CFAA'. I think it's US v. Nosal.
Unfortunately.
"Faster than a human can reasonably produce in the same period by using a convention on-line browser." Which is why we have that 60 second sleep statement. "...not to collect or cache any personally identifiable information." This doesn't do that.
Awesome! I see that `iteritems` though. Python 3's pretty good, and you're missing out!
I wasn't trying to claim you were, just pointing out that these are the terms on the site. (In relation to the discussion about whether someone could use this tool to 'farm' data by brute forcing phone numbers) The collecting of personal data could be argued if they wanted to claim you were 'hacking' the site though, as they could state that the information tied to a phone number was private (maybe contains an address, name) and that you should not reasonably have otherwise had access to that info. I mean if anything this is just a great example of a business not really thinking through their APIs.
So what you're saying is we should run all web site scraping behind tor. (Seriously, this is a joke.) 
Happiness Is Pizza And Accountability HIPAA if you will
The courts in US/EU generally agree that a "Footer" TOS is unenforceable. If you have to click-through a TOS, or if it's popup'd, that's another story. Bear this in mind if you ever order a pizza. :)
Domino's Denmark, which has 8 digit phone numbers, appears to serve its responses on http://www.dominos.dk/async/tracker/?q=87654321 (bonus points for lack of encryption).
There is a current case, where it was argued that violating the ToS, and continuing after receiving a cease and desist letter, amounted to 'unauthorized access' under the Computer Fraud and Abuse Act. There seem to be 2 interesting cases. Compare [Craiglist case](https://en.wikipedia.org/wiki/Craigslist_v._3Taps) where the argument worked with [Facebook case](https://en.wikipedia.org/wiki/Lee_v._PMSI,_Inc.) where it didn't. 
Just posted a few related answers @: * [**Python competition/tasks/projects**](https://www.reddit.com/r/Python/comments/5waim7/python_competitiontasksprojects/de8yij3/?utm_content=permalink&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=frontpage) * [**Any ideas for a script?**](https://www.reddit.com/r/Python/comments/5welna/any_ideas_for_a_script/deabtnq/) * [**Is there any good guide / course / website on how to think logically when programming?**](https://www.reddit.com/r/Python/comments/5who7c/is_there_any_good_guide_course_website_on_how_to/deaabka/) &amp;nbsp; Personally, I'm not a fan of working through courses &amp; predefined projects.&amp;nbsp; I got into programming because I have a ton of apps that I want to make, kind of really-specific lifehack/efficiency/learning related stuff, so pretty much all of my learning has been through working on personal projects. &amp;nbsp; Since you mentioned that courses also aren't your thing, my advice would be to think of a project that actually interests you, and make it.&amp;nbsp; Initially, you might not have the skills to make your actual idea, so you'll have to start off with a super simplified version. &amp;nbsp; For example, if you want to make a full-fledged fitness app, maybe you start off by writing a program that ouputs a simple workout to text.&amp;nbsp; Something like: `{"push-ups": [20, 15, 10], "pull-ups": [10, 8, 6], "squats": [50, 40, 30]}` Okay cool, so what do you do with that data?&amp;nbsp; Your next step would be to figure out how to create a GUI, so you learn how to use `tkinter` and create a layout that displays the exercise name, reps, and has a button so that you can advance through the workout.&amp;nbsp; Then you want to track actual vs completed reps, and display graphs that show progress over time, so you look into data persistence &amp; charting libraries.&amp;nbsp; You decide you want to add a `share` feature so that users can post that they completed a workout, so you look into how to work with web API's. &amp;nbsp; That method of `make app` &gt;`learn &amp; add new feature` &gt; `repeat` will keep you busy &amp; learning for a while, and after some time you'll get to a point where you can plan out your apps in advance &amp; build them from start to finish.&amp;nbsp; Also, that process isn't necessarily happening linearly as written above.&amp;nbsp; During each iteration of a project, you'll likely run into some programming paradigm that was difficult for you or prevented you from fully completing the project.&amp;nbsp; So you take some time to research, StackOverflow, read a book, etc. that will help you overcome said issue.&amp;nbsp; Then you revisit the project (*perhaps from scratch, wanting to try a new approach after having gained some knowledge*), or maybe even start another project that you thought of in the process of learning. &amp;nbsp; IMO this approach is way more engaging than pre-made courses &amp; projects since all of the learning is done when you actually *need* it.&amp;nbsp; You're not just learning a bunch of concepts in a short amount of time without knowing why/when you'll actually need that knowledge.&amp;nbsp; You'll also be directly applying concepts as soon as you learn them, in a context that is meaningful to you &amp; makes sense because you're the one who crafted it; so you'll actually develop a sense of understanding rather than a shallow remembrance.
"No module named 'pyperclip'" did u install pyperclip?
Looking for a **Senior (7+ years) Python Engineer to join SaaS team located in Minneapolis, MN.** FTE salaried position. We have a great product line, strong financial backing, and a fun/creative startup culture. [Details and more info is here](http://leadpages.jazz.co/apply/BnxMyM/Senior-Python-Engineer) Thanks in advance! 
You are now subscribed to cat facts.
Good observation. A simple s/GET/POST would be a good place to start.
You're also just looking for a URL. Your program is really no different than saying "Does this URL exists? yes/no" 
How could they take legal action against someone using a private API that is publicly accessible? It just shows that they really don't care about security. 
Oh great grandmaster, perhaps don't be so condescending wrt. newbs &amp; whatever. Simply stating (suggesting ?) how "we do/call it" might suffice. Hopefully [not this case], it will be more substantial (the "we") than like "You should use Python 2.x, bro" ;-)
Sheet ;-) Effort, research, decisions and perhaps even previous knowledge required ;-)
What about Angular?
Not a plugin, but I use [rtv](https://github.com/michael-lazar/rtv). I post/reply using vim.
I use vim with [entr](http://entrproject.org), in tmux. 
Security through obscurity. Great work, Dominoes. Any bets on how long before this turns into a massive PR disaster?
Sublime is not free, by the way. It's free to try (no fixed period) but to continue using it you are supposed to buy a license.
I like the idea of "Unless it's locked, assume you're allowed to be there" for the web. Behavior on the web is much less public than behavior on e.g. the street. It is also much less personal. This means that a lot of people might act without scruples on the web. By making this a public right, those with scruples are not disadvantaged, more innovation is possible, and security gets better.
As others have pointed out, you could set up a bot (or a cloud-full of them) to run all different permutations of phone numbers and see which ones match. If it also reveals your current location, you can cross-reference that to address books and boom: you know know what time of the day is safe or not safe for a burglary... and that's the best case.
i wonder if dominos know that their endpoint for this is public? ahahaha thats not really data you want publicly accessible to be honest. 
I used Angular in another part of this (internal) app and found it to be a huge pain in the ass in comparison to Vue, in terms of the amount of stuff I had to learn to get it working like I wanted. Vue felt a lot like Flask did when I first picked it up - I just use what I need, and there's nothing else required.
Why do I have to login to see the curriculum? Why is allowing springboard to access my preferred social networks the best option?
Fun thing, a dating website I used many years ago had something like this. The site hid people's photos until the user (usually the woman in the match) decided they wanted to reveal them as part of the "introductory" process. I found that the site was just using two URL encodings to hide the info. To see the photos all you had to do was change a flag and you could see their full profile. Took me about 10 minutes to prune the matches down to the woman I eventually married.
Wtf is "sheet"?
Easy. They're a big company and you are probably not as wealthy as they are. Even if they're wrong they can throw down enough legal pressure to make you cave.
Yeah, Python doesn't have built-in GUI aspects the way C# and VB.NET do, and Python apps aren't _normally_ distributed as a binary executable. So, any tools to deal with those aspects are generally standalone (cx_freeze, PyInstaller, GUI designers, etc). PyCharm is definitely as full-featured a Python IDE as you're going to find.
IMO Sublime Text is already being surpassed, in terms of innovative features &amp; API functionality, by all 3 of the mentioned Electron editors.&amp;nbsp; However, from what I've read, Electron is not capable of catching up to ST in terms of performance due to its dependency on Chromium/JavaScript. (*check out the links &amp; discussion @ [Sublime Text vs Visual Studio Code vs Atom Performance Test](https://www.reddit.com/r/programming/comments/5lmr1k/sublime_text_vs_visual_studio_code_vs_atom/)*) &amp;nbsp; Those editors are definitely legit for particular use cases, I just hope that: * ST steps up their game (*EG: consistent updates instead of disappearing for months on end, adding more people to the core development team so that they stand a chance against the massive organizations they're competing against*) so they don't get phased out * Processing power of commercial PC's increases enough that JavaScript performance issues are no longer an issue * GitHub, SublimeText, &amp; IntelliJ team up to make a full beastmode language agnostic IDE with IntelliSense that allows plugin scripting in python with HTML/JS GUI extensibility &amp;nbsp; *the last one is my top pick : )*
Any idea how I can find more simple open-source projects that don't require more advanced knowledge of Python?
How do you like pandas vs. dplyr &amp; other hadley libraries? I could see a huge advantage over base R, but I prefer using dplyr over pandas. Probably has to do with my familiarity with dplyr.
Newest versions of pip don't support Python 3.2. Update to 3.3 or newer.
What distribution are you on and what version of it? Edit: I see now. You won't be able to upgrade through `apt` then. Is this your personal machine? Might be a good idea to upgrade to a supported version of Debian.
How did you install pip? The version of pip in the repos (`python3-pip`) is probably the old version. 
&gt; I'm using Debian 7.11
I noticed one of the daily newspapers I read was basing their entire paywall on a single inlined style="display: none;" attribute. I can't imagine how anyone thought that was a good idea.
the web (ie content served through a web server) isn't really a bunch of buildings with closed doors. It's more like a a wall with posters and brochures. If you dont want people seeing your posters or brochures dont hang them up. If the content was an a computer connected to the internet, but not on a web server. then thats more like trespassing on a building.
Yeah, sorry for my attitude, and yes I am learning. I didn't mean the crap attitude btw.
try /r/learnpython 
So what about all the data aggregation that goes on without my approval? Lets apply this and see some heads starting to roll at the top 
Ok, will do! Thanks
ohhhh, IC now -____-.
Laziness is one of the most annoying thing about Python3 :)
Did you manually upgrade python? How did you get this version mismatch? *Personally* at this point I would build 3.6 from source and `make altinstall` so that it doesn't trash the system Python.
Criminals don't care about TOS
When I see things like that, I like to imagine the IT guy who implemented it thought it was an utterly stupid idea (and/or didn't want to pay to read his own employer's paper), so did it in the most pathetic way imaginable.
i suggest /r/learnpython vb and python are very different in a lot of aspects, especially when it comes to guis and "exe".
He says that in the section "Namedtuples to the Rescue", just a little ways into the article. They were introduced in Python 2.6. 
 /r/learnpython ~~That error usually indicates a bad/mixed indentation on line 8/9.~~ Usually yes, but in your case a syntax error. Also, what's with the screenshot? reddit supports text
Holy f'ing shit... yes
line 9 has bad math. should look like answer = 40*r+((h-40)*(1.5*r)) also, this is what /r/learnpython is for. 
&gt; I don't have a good answer for this. I think it's because IDLE Py2 comes before IDLE Py3 in the nav menu on a Raspberry Pi. &gt; I've been meaning to switch over to Python3, but its just habit at this point. That's a response to why he used python 2 and since he mentions the pi im going to guess he just has a pi connected to his local network running this script
If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) (no images) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Ok! Thank you! I didn't know that, I will try posting there.
First of all, use the functions already to hand. print("{:b}".format(10)) 1010 If you have to do a function then there is a shorter way &gt;&gt;&gt; def binary(VarBin): ... store="" ... while VarBin &gt; 0: ... store+=str(VarBin%2) ... VarBin//=2 ... return "".join(store[::-1]) ... &gt;&gt;&gt; binary(2) '10' &gt;&gt;&gt; binary(10) '1010' I don't know what you are copying from, but It Works For Me^(tm)
If I know your address, it tells me when you'll be home (e.g. your current location) and ready to answer your door.
What exactly are you **trying** to do in this function?
How does Bokeh plot streaming data as it arrives?
[Keep the body toasty to destroy evidence](http://www.mlive.com/business/ann-arbor/index.ssf/2015/10/dominos_unveils_vehicle_design.html)
/u/rxdazn already explained it in more detailed than I can be arsed to type :-)
This question is probably more appropriate for /r/learnpython (linked in the sidebar). Also, this stackoverflow answer might help you: http://stackoverflow.com/a/14132912
so.... a post that redirects to another post that redirects to the AWS site...? 
They probably meter the calls from random ip addresses and return a 429 eventually. Competitors can't find anything without hitting it thousands of times, but finding out if a specific set of 10 people have ordered pizza recently isn't really useful except as a novelty.
/r/Python: Facebook open sources a Python and R library, 10 upvotes Literally just a beginner script to look at phone numbers in a URL, 600 upvotes. And didn't even cover up sensitive info. See you next week when someone makes the 10th script that looks at airline fights.
I'd appreciate any feedback you guys have. In particular, I didn't know if there was a slicker way to put this together, besides just putting the `.css` and `.py` files in the repo and telling people where to put them.
https
&gt; So it's illegal. How will they stop me? Your next pizza... TRIPLE ANCHOVIES!
They use a rate limit- I've messed around with their API before for a personal project and got my house's IP blacklisted for a while... a couple times. By the time I moved out, my housemates were convinced their site was just really unreliable haha.
Cool thanks for the info! Super helpful :) 
Yes. It is. https://en.wikipedia.org/wiki/Personally_identifiable_information
That's how Facebook and Google make all their money. Selling data is a million times more profitable than selling pizza.
If your friends are ordering Donimos its time to find better friends!!!! 
I am sure there is. What is the format of the pubmed files?
[qutebrowser](https://qutebrowser.org/). The find-links thing has a little delay, so it's probably actually slower than clicking. The other shortcuts like j/k and gg are actually useful though. Mostly I use it because it's more fun and it lacks a lot of bloat so often loads faster. Most sites think it is Safari 1, so they will serve basic html if possible as well.
That's really exciting to hear. Would you be able to point me in the right direction to get started?
This is going to be a bit incohesive as I'm writing this as I'm looking at your code. The big thing I noticed is that you can change a lot of your functions where you just return a value, such as getMAGE(self), into [properties](https://docs.python.org/3/library/functions.html#property) For example, it would turn this if self.current() &gt;= point.plusSigma(): into if self.current &gt;= point.plusSigma: The printEverything method seems unnecessary, you could just call m.printPoints = True My favorite bit of advice I heard in terms of Python is that it's a language of consenting adults. Unless there's a good reason, you don't need to hide everything behind getters and setters. Also, if you want to follow standard Python code style practices, I recommend having a look at [PEP8](https://www.python.org/dev/peps/pep-0008/). Your function names should for example should be underscore separated find_other_peaks_and_valleys and all your private variables and function names should have an underscore in front of them self._g All capital letters usually indicates a constant in python. There's also a typo on line 201, it should plusSigma() not plussigma(). On 234, runtimeexception is not a valid exception. If you're raising an exception it's better to add the descriptive text in the exception, rather than in a print statement. You also mispelled valley and peak a few times, instead of Valley and Peak Honestly, I don't understand the purpose of the purpose of the PointType. It seems simpler to declare three constants NOTHING, VALLEY, and PEAK. As of right now when I tried to run the code it would not work for me, even after fixing all the typos in peaks, valleys, plussigma, and minussigma, I end up getting a recursion error. Hopefully this helps a little bit, I may look at it more closely later to see if I can't get it to actually run. 
I think this might be a good solution for this. https://codenvy.com They have tons of virtual workspaces. 
I like it, I just wish: * the cells were more defined * the menu bar was more defined * the border of the selected cell didn't overlap the gray line these might be specific style choices, however
&gt; The good news? This is already proposed as PEP-523, (...) &gt; If that PEP gets accepted, (...) Isn't PEP-523 [already in Python 3.6](https://docs.python.org/3/whatsnew/3.6.html#pep-523-adding-a-frame-evaluation-api-to-cpython)?
An important thing to clarify here - is the data you're looking for within the article _itself_ or is it keyed info at the top of the article? Both are possible to mine for, but finding the right info in a paragraph is going to be a bigger layer of complication, if that's what you're trying to do. Regardless, here's a [quick primer I found](http://www.fredtrotter.com/2014/11/14/hacking-on-the-pubmed-api/) for the PubMed API (Entrez) that can help you get JSON-formatted data that will be much easier to work with that trying to parse HTML/CSS data, and that should help get you started. If you can link a sample article and tell me what you're trying to get from it specifically, I can probably be more help.
That's actually pretty sweet, thank you. Any hope that resolution issue will be closed any time soon?
All of those (besides ternary operator, which is not "pythonic") are already in Python 3.6.
Crouton and chroot an Ubuntu instance and profit
Suggest you get a Chromebook that GalliumOS (/r/galliumos) can be installed on via [chrx](https://chrx.org/). I have it on my Acer C720 and almost never boot into ChromeOS anymore. Use it primarily as a travel laptop and Python dev environment. 
What software was used to write this code in? I've been struggling to find out which is the best.
I have been in both of these positions. I work in a shop that does a lot of programming in python. Typically, it is the language of choice because the syntax is simple and powerful, there are a lot of libraries available for it which helps to expedite most development tasks, and the interpreter makes iteration fast and easy. For a large portion of tasks where performance is important, the underlying code is written in C. If there isn't C code already written to perform a time-sensitive task, it's not terribly hard to write a C extension, but it can be cumbersome. If all your python is doing is connecting C code, performance is usually sufficient for the large majority of tasks, even those with some time sensitivity. On the other hand, if high performance and parallelism is required, Python will not be the language of choice. The GIL has far too much impact on performance, Multiprocessing can be slow and limiting, and the language will tend to introduce various delays. In these cases, the language that is selected is usually based on what best fits the need. This will usually be a selection between Java, C/C++, and Go. I would love to see the performance woes associated with python disappear, unfortunately we're just not there yet. There are some alternatives to CPython that provide speed for other scenarios, but they are either not ready for prime time, or they tasks they perform well at are not the ones we need. Hope this helps. 
I'm actualy very curious about the sent messages, has anyone got that password?
1.Backward Compatibility ? 2.Backward Compatibility ? 3.Backward Compatibility ? 4.Backward Compatibility ? 
The problem is that the CPython interpreter usually takes about a second to start up (still way better than Java though!), or even longer if you need to import anything heavy-weight. Fully-compiled languages will *always* win for startup time when you (or your libraries) have a lot of code. Especially if you use prelinking and `-fsemantic-interposition`, but those usually aren't *necessary*.
Definitely possible. Parsing, filtering, &amp; translating data is actually pretty common and not too hard to get into. The difficulty of your particular project depends on how well-structured/accessible the data you'll be working with is. &amp;nbsp; Check out: * [**Automate the Boring Stuff with Python**](https://automatetheboringstuff.com/) *Has a bunch of examples similar to what you're asking. Also available as a [**book**] (https://www.amazon.com/Automate-Boring-Stuff-Python-Programming/dp/1593275994/ref=sr_1_1?ie=UTF8&amp;qid=1488259806&amp;sr=8-1&amp;keywords=automate+boring+stuff).* &amp;nbsp; &amp;nbsp; * [**Awesome Python**](https://awesome-python.com/) *Has a ton of libraries that cover most project requirements.* &amp;nbsp; Also, [**pandas**](http://pandas.pydata.org/) is a pretty popular library for manipulating data. It has a bunch of built-in methods for [**translation between formats**](http://pandas.pydata.org/pandas-docs/stable/io.html) &amp; [**data filtering**](http://pandas.pydata.org/pandas-docs/stable/indexing.html). Here are a few learning resources: * [**pandas &gt; Official Tutorials**](http://pandas.pydata.org/pandas-docs/stable/tutorials.html) * [**A Complete Tutorial to Learn Data Science with Python from Scratch**](https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-learn-data-science-python-scratch-2/) * [**Top 8 resources for learning data analysis with pandas**](http://www.dataschool.io/best-python-pandas-resources/) * [**Udemy &gt; Data Analysis in Python with Pandas**](https://www.udemy.com/data-analysis-in-python-with-pandas/) * [**Udacity &gt; Intro To Data Analysis**](https://www.udacity.com/course/intro-to-data-analysis--ud170) &amp;nbsp; I personally haven't worked with `pandas`, but it seems like a pretty big, fairly complex library.&amp;nbsp; If you just want to get a working solution together quickly, I recommend checking out `Automate the Boring Stuff` &amp; `Awesome Python` first.&amp;nbsp; If you're super interested in data manipulation or foresee that you'll get a lot of use out of having the skillset, learning `pandas` will definitely serve you well in the long run.
Thanks man you the MVP 
My CPython interpreter starts on milliseconds. In fact, the point of the import system is that you only need to load the things you actually need. I suspect that you are importing Matplotlib or something. Pypy sure takes a while to start up because it has to compile your code. But CPython does not, and starts pretty much instantly. 
not to mention that as soon as whatever it is becomes part of the language, some new type of hardware will come out invalidating all the work...
Or release a new version of Python every 3 months, incrementing the major version number like Chrome. From then forth Python is no longer linked to a 'version' per se. It automatically upgrades even in your production systems so you get the latest and greatest Python no matter what. Within a few years we can be at Python 99 and call it a day.
From the crazy-ideas-machine: I'd like to see better support for immutable data. I just feel I end up with some many issues from data being altered in unexpected places, sometime I wish I could declare some things const or final or whatever. There are a few libraries around but all seem a bit awkward. Maybe this could be done backward compatibly using some mixture of immutable parent data types and type annotations. I don't know really, I just want at least something that will throw a big fat error if you try to modify it when you aren't supposed to. Otherwise, rust-style match statements seem pretty neat.
.NET (Ok, that's a framework)
This. Protection against accidental modification would help strengthen a lot of code. Tuples are nice, and you can wrap dictionaries to make them read-only, but something official would help a lot.
Would definitely recommend sticking to python for anything like batch job management, I think you will find the overhead of wrangling java environments for this more 'ad-hoc' stuff will bite you pretty soon. As for overall performance, it really depends what you are doing. For me Python always wins for heavy numerical work because of the number of amazing packages available (numpy, pandas, numba, theano, etc etc) - in this case Python is basically a nice scripting API and 'glue' on top highly optimised cython/C/fortran code. I don't think anything in Java comes close to how powerful and easy to use these libraries are. In other circumstances, ymmv. Last point, having written a fair amount of Python and Java, I've found learning Python really helped me write better Java. In particular it's a pretty good vaccine against the over-engineering that's rife in Java (queue the FactoryFactoryInterfaceBuilder() jokes). Without all the ceremony of generics and interfaces, Python encourages you to Just Do It (and, if you really need to, let your IDE generate interfaces for you later)
If you want hyperlinks maybe just a web based GUI would do. You can fire up an HTTP server locally and open it. 
My company chose python because of it's excellent use of programmer time. Over time, we've made our heavy calculations super performant and python is no longer our performance bottleneck. Edit: numba and cython make disk IO and external C libraries the majority of our run time.
I've noticed recently that unless it's coming from a FQDN that VZW won't allow you to email a phone number.
Timely. Thanks!
If it is that important to you, then you could always wait for the .1 or .2 release ;)
Yes and no. Pyjion was the proof of concept implementation using dotnet core's JIT- but that changed significantly over the last 6 months and also it was a patched version of CPython. I helped do some of the patches (GitHub.com/tonybaloney) , the project will be a good example but it's not a complete implementation. -ed
Comprehensions are faster I believe because you don't have to call the list.append method every iteration. Python can just lay it all out and form it into a list (like how join can calculate the size of the resultant string first rather than successive concatenation which cannot). Python can use different c code. Even just not looking up the method on the object saves you multiple look ups every iteration. I'm confident it isn't the same bytecode in python 2, as clearly for loop &gt; comprehension &gt; map in my experience.
&gt;Let me compile all the required libraries into some portable package, I don't care about the f*cking disk space. If disk space is an issue I can simply chose not to do it but my time is worth more than the insignificant amount of disk space exporting both the .py and required libraries to run it into some kind of portable package (binary or otherwise) would take. It has nothing to do with disk space. Bundling all your dependencies is *moronic*. It's always been moronic, it will always be moronic. 
more support for multimedia and UI .. Kivy and pygame dont cut it
&gt;JIT as a first-class feature PyPy already exists. You can't add a JIT to CPython because in doing so you would destroy the entire point of CPython, which is compatibility with extensions. We went through the rigamarole of waiting years for Python 2 extensions to be compatible with Python 3, nobody wants to hear 'oh hey all that work? Enjoy doing it again for JIT-compatible Python 4'. &gt;2. A stable .0 release Python 3.0 was stable. &gt;3. Static type hinting Already exists &gt;4. A GPU story for multiprocessing The numpy/scipy ecosystem already exists.
Depends on what you want to get out. Beautiful soup will let you use the html markup as information. Mining more abstract data is more difficult, but I'm sure some of those news summarizer bots are python.
Yes, yes it is. If you read the PEP (don't know why the author didn't link to the actual [Rendered page](https://www.python.org/dev/peps/pep-0523/)), it shows the status as final, meaning it was accepted.
Not a problem, just outsource the task to someone less concerned about legalities.
Yeah, you're not getting it. 
What universe do you live in where CPython takes a **second** to start up?
My initial impression is that this would be hard or impossible with vectorized operations. Without looking at it further, I'd say write it iteratively without numpy. Maybe you'll have insight or refine your question, or numba could make your iterative solution numpy fast. Edit: but broadcasting might handle it. If not, maybe a gufunc in numba could.
Numpy or scipy don't handle multiprocessing, let alone gpu. But numba and theano do.
?? Isn't the expectation when a user installs a program that they can use a single installer to get it all? When you download Spotify, would you expect to have to hunt around online for all the dependencies?
... like some kind of virtual environment?
PHP, Java, Perl, JavaScript, Ruby... Basically every language that exists...
I would like to see some kind of opengl game UI created for python that replaces the aging pygame. It would not have to be a something that competes with other framework. But something that works and that you reliable could build 2d games with acceleration in {typically to get kids interested, } Though not as a part of the standard package. 
http://static.projecteuler.net/about : "Each problem has been designed according to a "one-minute rule", which means that although it may take several hours to design a successful algorithm with more difficult problems, an efficient implementation will allow a solution to be obtained on a modestly powered computer in less than one minute.". Not that you are a crap coder but your algorithm and/or the implementation can probably be improved. Usually, a different algorithm makes a huge difference.
1. pattern matching 2. better lambda 3. tagged union types 4. speed???
Can you think of a way to take some lines of text and output those same line but with leading spaces on every line? You said `num`is 1000 digits, right? So at what index is the last digit found? What is the greatest index your code is accessing?
Are you being sarcastic? That's gigantic. Are you 12 years old? I'm not kidding.
If you want python 3 adoption, you have to release python 4. Maybe they were considering 3.7 and decided fuck it, python 4 means people finally use 3.
The irony that you're thinking about it in terms of 'order of execution' when calling for a functional pipe operator.
It's not like it's usually necessary to support both versions of python.
If you want to distribute an application to non-developers, why is it bad and what do you suggest instead?
If you really want to compile everything into one executable and don't mind huge file sizes and long compilation times, Nuitka is probably exactly what you are looking for (bonus: it's mostly faster than CPython during execution): http://nuitka.net/pages/overview.html
When the dust settles, it may be seen that the Python 2/3 transition process, albeit painful and taking much longer than most had predicted, was actually the very best tactical and strategic move. Python was already having to fight for relevance against Ruby and Node in JS/web-land, and it was angling for position in data science against R, Hadoop, and even a little bit of Julia and now Spark. If all of Python had taken a 2-3 year slowdown to properly absorb the breaking changes in Python3, then work out all the kinks, then deal with all the brain damage as the core team tried to improve 3 (look at the differences between Python 3.0 and 3.5), it very well could have killed off a HUGE amount of momentum for Python in the broader tech ecosystem. Instead, with the concurrent existence of Python 2 and 3, it allowed for people who were heavily invested and needed the historical ecosystem of Python 2 (which included ALL of the data science and scientific computing stuff, up until recently) to have *zero* reason not to use Python. Meanwhile, early adopters and other folks could keep beating on Python 3 and polishing it. Furthermore, it allowed all of the thousands of package maintainers to onboard to 3 when they were good and ready, instead of being forced at gunpoint to invest a massive amount of time to all jump to Python 3 at once. We may have lost quite a few package maintainers in such a process, possibly even to the point of potentially creating an unofficial "Python 2.x" fork based around Stackless or something. FWIW, I initially didn't understand (and therefore disagreed) with the approach, but I think that time has shown that Guido &amp; the core team's approach has led to a world that is far from the worst possible outcome. (And many, many bad outcomes were possible.)
Create packages for it. There are lots and lots of tools that will automatically create packages for virtually every Linux distribution under the sun and for Homebrew for OS X. Sure for Windows you need to do shitty shit, but that's Windows.
That attitude works fine in some environments (the saner ones), but it gets thrown out the window when you need to deploy something on Windows. Most workstations are still using desktop versions of Windows, and that's just not how packaging is done in that culture. One developer can't change that.
I wouldn't be surprised at all. But Python 2 is deprecated, dead and irrelevant. I don't include it in any of my thinking.
Also, it's not the platform of the developer that means anything here, we're talking about deploying to end-users.
The deployment to end-users hasn't been solved in Python 3.x either.
The powers that be do not agree: https://www.python.org/dev/peps/pep-0416/ Rejection Notice ----------------------------- &gt; I'm rejecting this PEP. A number of reasons (not exhaustive): &gt; * According to Raymond Hettinger, use of frozendict is low. Those that do use it tend to use it as a hint only, such as declaring global or class-level "constants": they aren't really immutable, since anyone can still assign to the name. &gt; * There are existing idioms for avoiding mutable default values. &gt; * The potential of optimizing code using frozendict in PyPy is unsure; a lot of other things would have to change first. The same holds for compile-time lookups in general. &gt; * Multiple threads can agree by convention not to mutate a shared dict, there's no great need for enforcement. Multiple processes can't share dicts. &gt; * Adding a security sandbox written in Python, even with a limited scope, is frowned upon by many, due to the inherent difficulty with ever proving that the sandbox is actually secure. Because of this we won't be adding one to the stdlib any time soon, so this use case falls outside the scope of a PEP. &gt; On the other hand, exposing the existing read-only dict proxy as a built-in type sounds good to me. (It would need to be changed to allow calling the constructor.) GvR. &gt; Update (2012-04-15): A new MappingProxyType type was added to the types module of Python 3.3.
C - K&amp;R C, ANSI C, C99, C11 - all of which can be compiled into cogent executables.
A solution in `O(n)` is possible, meaning you will only have to parse the whole sequence of number once. This means a single loop (from `0` to `len(num)` or similar) Think of it like this: you have a band with a hole the size of 4 digits, you place it on at the start of the number. You see 4 digits, multiplies them. You don't need to store the result, unless it is greater than your previous results. Then you shift the band one digit right. What changed? 1 number has been removed, and one has been added. So you 'forget' the first and 'learn' the last and do your thing again. Do not read again what you already know. So (after getting the 3 first digits) at each step, you only need to learn about 1 number, the last one. For reference, my solution is 17 lines of python (including 1 import, and file reading for the number). It's near instant on the given input from the website.
not even close to the python 2/3 level dumpster fire
Thankfully Python 3 fixed this.
I think Pyglet has been used for some games.
Anyone willing to work with me on this project pm me. 
I'll give the same advice for $3.50.
Start reading up on NLP and machine learning. I got a friend who is writing something similar and it's a huge project and is handling pretty massive amounts of data.
The nice thing about the `func(input)` syntax is that it generalises easily to functions that take more than one input: `f(g(x), h(y))`. Once you start mixing the two, you probably lose a lot of the readability gains. Plus, more syntax makes the language harder to learn. There are packages on PyPI which let you make pipelines, either using an existing operator like `|` or making pseudo-operators like `-pipe-`. There's also [toolz.functoolz.pipe](http://toolz.readthedocs.io/en/latest/api.html?highlight=pipe#toolz.functoolz.pipe), which uses a less radical syntax: pipe(foos, transform, list, print)
&gt; Update (2012-04-15): A new MappingProxyType type was added to the types module of Python 3.3. I just played around with types.MappingProxyType (available from python 3.3). If you do: from types import MappingProxyType d = MappingProxyType({'a':1, 'b':2, 'c':3}) Now 'd' is immutable: d['a'] = 4 # throws TypeError d['d'] = 4 # throws TypeError del d['a'] # throws TypeError I bet a lot of people didn't know this. EDIT: hash(d) doesn't work though. Can that be fixed?
Pray tell what causes you such trouble? I've developed in both, and ported projects from 2 to 3 with very few issues.
I just want one thing, and that is to get rid of the GIL. Yes, for most people `multiprocessing` is an option, but no, for me it absolutely is not. When you have lots of communication and share several GB of data across threads (I do lots of HPC and number crunching), multiprocessing instead of multihreading is a real pain point.
Great suggestion!
Don't feed the troll.
Python 2 behaves nothing like javascript either way, here's what Javascript has to say: &gt; ({} &gt; 2) &lt; false &gt; ({} &lt; 2) &lt; false &gt; ({} == 2) &lt; false but &gt; [] &lt; 2 &lt; true (because `Number({})` is NaN but `Number([])` is 0). The Python 2 version is actually [pretty well specified](https://docs.python.org/2/reference/expressions.html?highlight=comparisons#comparisons), just completely weird, as I discovered trying to interpret a subset of Python 2: if two types are not directly comparable (either don't implement the relevant comparison or reverse comparison[0] methods, or they both return NotImplemented) it will use [the following fallback](https://hg.python.org/cpython/file/ab05e7dd2788/Objects/object.c#l778) * None is smaller than everything else * number is the next smallest category (so numbers are smaller than everything except None, which is what we see here) * different types are ordered by the *ordering of their type name* (insert "lolwut") hence `type("A", (), {})() &lt; type("B", (), {})()` being `True` * different instances with the same type name (regardless of the actual underlying types) are ordered by their *address in memory*, hence `object() &lt; object()` being True. [0] for a &gt; b it's `a.__gt__(b)` and `b.__lte__(a)` respectively
Yeah I noticed `MappingProxyType`, but people at SO were still talking about wrapping your dict instead: http://stackoverflow.com/questions/19022868/how-to-make-dictionary-read-only-in-python Not sure about all the pros and cons to it. And why is the PEP still "rejected" if this class does the desired thing?
Ok, I worked now several hours with PyCharm and it is really fantastic. I had to customize several parts, but now I can open qt designer, covert .ui and create exe files all from inside PyCharm with one click. The external tools feature is really powerful. The rest of my wish list was already inside of PyCharm. Also I'm in love with the easy to create templates :)
I read the PEP as that they rejected the `frozendict` and did `MappingProxyType` instead, which is a slightly different concept (read-only view of a another object, rather than an immutable object itself). Regarding the stackoverflow answer, they're rebinding `a.data`. `a` itself is not read-only or immutable in the example, so of course it's possible to rebind its attribute `.data`. 
By "Behaving like JavaScript", I meant weird, unintuitive results, regardless of how well they are documented. If 1+1 returned rand(3), it would not matter how well it is documented, it is not what anyone reasonable would expect, which is the type of thing JS is kind of famous for (queue link to the very popular "wat" talk). Python 2's way of comparing incomparable objects was clearly taking dynamic typing too far. If you have to spend several pages to explain such trivial behavior, you need to rethink what you're doing. Thankfully they corrected it in Python 3.
Why are we talking about 4 when people won't get off 2.7
Medium is garbage
Not a lot faster, since the focus is mostly on compatibility, but it does work well.
Same problem with macOS and linux.
Python has strong typing already. That typing is dynamic, true, but strong.
Sorry, the TL;DR was that for some smaller jobs even though most of our group are primarily java devs, some things we still chose python for because we could build it out faster than if we wrote them in java
 the second part of my question was asking if you ever chose python because the performance difference wasn't a deal breaker compared to developer productivity. Let's read the full post before getting salty 
I'd like to see blocking IO raise an Exception subclass Edit: updated to be slightly more clear. All exceptions are an Exception. That's how inheritance works 
Programmatically using coverage.py is pretty simple. It's super slow though so beware. 
I would love to see nim's "let", "var" and "const" keywords in python
It doesn't have to be, but one reason to worry about it is the way it worked with version 2 to 3.
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
There is already a [learn python discord](https://discord.gg/jQtfh66). I definitely recommend joining.
Here is the complete log: http://pastebin.com/EzbR4NZm Probably this line: src/pycares.h:7:20: fatal error: Python.h: Datei oder Verzeichnis nicht gefunden compilation terminated. It says he can't find the file python.h.. I've solved the problem: You just have to install the header files.. sudo apt-get install python3-dev
WE EANT SWITCH STATEMENTS! I apologise if this is actually in there, I couldn't read the article cause it's blocked on my school network
 src/pycares.h:7:20: fatal error: Python.h: Datei oder Verzeichnis nicht gefunden Now you're missing the Python development headers. If you installed Python from packages, then you need the `python3-dev` package. But it looks like you have a self-built version of Python because it's installed under `/usr/local`. So whatever you did to install this Python, you need to redo it in a way that it includes the development headers. If you did a normal `make altinstall` from a source build, it should have put the headers under `/usr/local/include/python3.5m` or similar, and distutils should have automatically provided the proper gcc flag to make gcc find them. I can't say more without knowing exactly what you did to install this python interpreter. 
It's more than that. It's being able to safely traverse property chains or make calls on objects without worrying about `AttributeError: NoneType object has no attribute ...` Instead of doing a bunch of None or hasattr checks, you just do: obj?.prop?.method() And the first None kills that chain. 
Thanks, typo fixed
And the current proposals for improving packaging are really no better than what we have and additionally are quite opinionated (making them worse than what we have).
What are they?
Your school blocks medium?
I'd like to see more comprehensive support for async throughout the standard library, though I'm not a fan of asyncio. curio is closer to what is like to see but I see the advantage of maintaining that separately. 
Yea, I meant static typing. Fixed. I didn't say people would only be allowed to use immutable types in threads, just that when/if you did only have immutable data those would be threads that can run without the GIL. You say the GIL wont be affected, but cython and numba already accomplish this. If you aren't going to touch any python objects then you can release the GIL. It might be that python would have to copy the immutable data when it forks, but your assumption that statically typed immutable data executed by compiled code has no effect on how a program can handle garbage collecting seems inaccurate.
But you can use rpython
Hm, interesting! Yeah, a None coalescing is useful and exists in several other languages - might make to Python one day.
I know the complexity required by a distributed web crawler, since I've built one myself. It definitely doesn't take 2 hours to build a robust one; instead, it takes months :) The idea for the article is great. However, it could be improved in the following ways: * It doesn't address [politeness](http://blog.mischel.com/2011/12/20/writing-a-web-crawler-politeness/) anywhere, and it's a super important concept. If you poke a website too hard, it's a surefire way to get banned or get into trouble. * The difficulty of writing a good distributed web crawler isn't in the basic tasks that it does; it's in the details. For example, you should respect *robots.txt*, and doing so in a "distributed" scenario is both hard and severely limiting, performance-wise. Also, the web is a very strange place, and there are so many different web pages out there (not all respecting standards) that you'll have to fix a lot of different corner cases that you didn't expect in the first place. * The post assumes that people are familiar with Docker, but I suspect that most people aren't. You don't necessarily need Docker containers to run a distributed web crawler. * You need to carefully monitor the memory use of your workers, especially because of the long-running nature of a crawler. If you haven't designed things properly, your processes will eventually crash (because of corner cases that you didn't expect, once again). So all in all, I like the idea of the post. But it should go a bit further.
It Not the impracticality.. its the fucking mess of it all.. python 3.0 was clearly over step by a bunch of egomaniacs trying to cobble together a language that trys to do everything but ends up in a bucket of jumbled pubes
I want to see lambda usable with multiprocessing-
&gt; I didn't say people would only be allowed to use immutable types in threads Which means your immutable objects make multithreading no simpler or easier than they already are. &gt; just that when/if you did only have immutable data those would be threads that can run without the GIL. No. The GIL is used to maintain the integrity of the runtime (including but not limited to the allocation and garbage collection machineries, both of which will see significantly increased pressure from ubiquitous immutability), not the integrity of userland mutable data structures. If you rely on the GIL for the latter, your code is already broken. Your immutable Python objects interact with the python runtime, and thus require a GIL. &gt; You say the GIL wont be affected, but cython and numba already accomplish this. When they're solely interacting with non-python objects and bypassing the interpreter entirely. &gt; If you aren't going to touch any python objects then you can release the GIL. Sure. That's got nothing to do with any of your assertions though. Immutable Python objects are still python objects, and the Python code manipulating them is python objects as well.
As someone who prides himself in his ability to create RPM's, I have to agree with you. When something I deploy only has one or two extra dependencies over what is already available in the repositories I'll usually package them separately, but if I've got 10 or more transitive dependencies I frequently say "fuck this, I'm just going to bundle everything into a single package and my own interpreter" because it's less painful. I still like RPM's for deployment, but my strategy changes based on how much work I have to put in to maintain said packages.
So the developers shouldn't have updated 2 to 3 to fix some glaring design flaws, taking a bit of pain but ultimately making the language better? How do you suggest they would freeze the core language at 2.7, with all the flaws it contained, and just added functionality through packages? This doesn't allow for any new optimisations under the hood, or security updates (I assume you're not so foolish as to disallow security updates?)
&gt;When they're solely interacting with non-python objects and bypassing the interpreter entirely. Exactly! The pep being discussed is exactly about bypassing the interpreter entirely (on a per function basis). 
&gt; Pypy is much more flexible (arbitrary python) but can't release the Gil I thought that was mostly a policy thing, like that PyPy runs fine without the Gil but can cause C extensions to crash if the Gil is disabled. 
Looks more like Russian to me. If using Chrome do right mouse click, choose 'Translate' and read.
Then you end up with a slow-as-balls language when you have to use packages to, say, handle unicode vs. hande bytes. It's also too easy to use a list where a generator would do. There is also non-intuitive comparison (comparing a str to an int should yield an error, but not in Python 2). There are basically a shitload of flaws in Python 2 that required a huge overhaul. So why not break compatibility once, fix these glaring design flaws and move on from there, stronger? It's a much better language in every way. Only thing left is to get rid of the GIL and we'll have a powerhouse.
I think they're thinking of *really* short tasks. Like, that you'd have a shell script piping between them, so you'd have a lot of startups in a single run. I *think* that's what they mean. Even then, I use plenty of tiny Python scripts that way and I see no such startup issue - perhaps they mean how long it takes their REPL to show up? Or they have something off about their setup?
ok, fair point... lets kill 2.7 instead!
Must be a "social networking site" or something. More interesting that the block Medium but not Reddit…
Your last line of code is missing a `return`. Also; /r/learnpython
I'd like to file a DMCA takedown notice for this comment. 
OMG THANK YOU STRANGER. I WISH I CAN BLESS YOU WITH GOLD!
The *only* thing 4.0 needs is a gilectomy. Or at the very least, a simple way to "opt-in" to no GIRL, such as a command line flag.
I lol big time whenever I see someone who thinks they're smarter than someone like Guido. You're probably not.
This seems pretty interesting. Like @dontnodofficial said, NLP is your ticket here. One question: how exactly do you get the SEC filings? 
I've used crouton a lot too, tbh it's easier to install crew PA leave manager that lets you install python and vim straight from the terminal in Chrome OS it's self. Crouton is great if you want an IDE and more extensive tools though
&gt; it's about everything else. What are these "everything else" you speak of then? Double clicking to install is just "too convenient"? &gt; Are you a Windows user? The most complicated installation process is on Windows. And uninstalling is virtually impossible. In Windows you uninstall by going to the Programs and Features page, clicking an application, and clicking Uninstall... On other systems it can still be painful - even for devs. I ran into an issue getting someone to install my data analysis package on a Mac because the bundled Python includes an older version of numpy and the system directory is placed over the user directory in the path order - making it virtually impossible to upgrade the library. 
Yes, more visibility for toolz. I find it to be the most readable of the current "functional" toolsets for Python, and the `pipe` syntax is one of the clearest examples.
&gt; `# Python's nasty range() is right-exclusive.` What. [It's not nasty, it's the only way to be consistent at all.](http://www.cs.utexas.edu/users/EWD/transcriptions/EWD08xx/EWD831.html)
Crouton on ASUS flip: Install trusty and xfce. I actually teach Python (and C, C++, Java, and web languages) with this setup. Or if you want to stay in ChromeOS, just use PythonAnywhere or cloud9. (Can't do IDEs, but you can do server-side python and use HTML/CSS as the IDE.) 
[*Three **HUNDRED** filing cabinets!*](https://youtu.be/AhSEfKo0tlw) It's not the 90s anymore, 2 meg of text isn't that insane.
&gt; Well if you want to ignore the part about then delegating the computations to an alternate runtime You do realise magic is not a thing and that's not going to make your wishes real right? And just so we're clear, OpenMP and the like can't be construed as "true multithreading". &gt; then I don't know what else to say. Maybe you could stop handwaving and actually explain how you figure your assertion would hold and how static typing and immutable types somehow make "true mutithreading" (whatever that is) "easy and built-in" despite that still not being the case for statically typed languages using immutable types like… OCaml for instance. Especially when you now require an alternate third-party runtime, which seems to run afoul your own "built-in" assertion.
&gt; So much for the "consenting adults" mantra. Native types have always been opaque (amongst their many properties not available to pure python code), that's not exactly news, and has nothing to do with the "consenting adults" quip.
It did link a tutorial"docker in10 minutes" though.
If you're talking about PyPI packaging, I find it pretty simple and easy, actually. Setuptools makes writing packages a breeze, and `pipenv` (https://github.com/kennethreitz/pipenv) makes package management sane.
`sys` is builtin, so importing it is a no-op. Try importing any single commmonly-used library that actually does anything, say `requests`. That's 0.5 seconds alone. Just two of those gets you to 1 second.
This doesn't fit with the rest of the language and stdlib (pass values rather than operator overloading magic).
Matplotlib is a great example of something you need in order to actually *do* anything. I was just going with `requests` though - that's 0.5 seconds alone. Two of those ...
[removed]
Or, conversely, you just don't understand how it is intended to be used in Python, and you think that because _you think_ another type system is more sophisticated that you're smarter for it. I for one rather like Python's type system. I notice this pattern over and over again, people who don't really know Python that well see one feature or another as stupid because they don't actually understand why it is how it is. If you prefer scala, then use scala.
Since when has developers being on non-windows platforms mattered when non tech savvy end users on windows are the target audience for a program?
They block everything that they haven't gone and personally verified, the only reason I was able to get on Reddit is because I was using the last of my monthly data
Not if the result of the compiled language requires the .Net runtime or the JVM. Short-lived python tools can start and finish before their C# / Java equivalent's first line of code is even executed.
1. Change your base case. What's the maximum of a one-element list? 2. /r/learnpython
Is that part of the 2 hours or an add-on?
&gt; The maximum of one element is the one element. Is that a valid base case?
Jeeze, tornado and multiprocessing were third party libraries in python 2 that are now integrated into python 3. Current third party libraries are prototyping functionality that might become incorporated later. At the very least, third party frame evaluators being supported at a core level as they are in 3.6 is a big step. Anyways, I don't see what's hand wavy or magic here. Static typing allows for compiled code that can release the GIL. You can already use multiple CPU cores with the regular threading instead of multiprocessing. No need for serializing and deserializing objects over a socket. You can even have multiple cpu threads access the same shared memory in the case of numpy arrays. This all exists already. So, what magic or hand waving do you see?
Then you need to recurse into it.
Just picked up a copy of [**The Hitchhiker's Guide to Python: Best Practices for Development**](https://www.amazon.com/Hitchhikers-Guide-Python-Practices-Development/dp/1491933178/), the first book from [**This List**](https://gist.github.com/Enteleform/85dc4117c3cac6097495dcd32036a332) I put together to take me from &gt; *"I can pretty much figure out how to code whatever I need to; but it might not be pretty, definitely isn't using all the best practices &amp; most efficient implementations, and probably will be difficult to maintain"* to [**Glorious Programming Wizard Master Race**](http://i.imgur.com/ZBuTgtj.gif).
Oh, maybe you're right. By the way, my life had been relatively easy until I found that I had to respect *robots.txt*. My crawler had been crawling super fast, just like the guy in his post. But when I honored the rules of *robots.txt*, it severely limited my crawl rate. So the bottom line is that it's not too hard to crawl a boatload of pages per hour. But it's much harder to make it fast when you honor the rules of *robots.txt* as well as politeness in general. It's something important to be aware of.
Of course not. But all exceptions are an Exception (instanceof Exception) 
&gt; Jeeze, tornado and multiprocessing were third party libraries in python 2 that are now integrated into python 3. Tornado is not integrated into Python 3 anymore than twisted or gevent or eventlet is. &gt; Current third party libraries are prototyping functionality that might become incorporated later. I see the goalposts are starting to scrape the pavement already. &gt; Static typing allows for compiled code that can release the GIL. No, it does not. Context-switching to &lt;not python&gt; allows releasing the GIL, that has literally nothing to do with static typing, you could release the GIL to execute Lua code. Because the GIL exists to *protect the interpreter*, and thus all that's required to safely release the GIL is to stop using or interacting with Python objects. Interacting with Python objects in a statically typed context does not allow you to release the GIL anymore than interacting with them in a dynamically typed context. Hell, [OCaml is statically typed and compiles to native code yet has a GIL](https://ocaml.io/w/Multicore#Why_Multicore.3F). &gt; You can already use multiple CPU cores with the regular threading instead of multiprocessing. No need for serializing and deserializing objects over a socket. Which is relevant… how? &gt; You can even have multiple cpu threads access the same shared memory Shared memory is kinda sorta the entire point of multithreading, again relevant how? &gt; So, what magic or hand waving do you see? Same as previously, you assert that * phase 1: optional static typing and immutable types * phase 2: nothing necessary * phase 3: true multithreading[0] is easy and built in so according to you, static types + immutable types = easy built-in true multithreading[0] yet there are languages which have the former and not the latter, so there's quite obviously something missing from your scheme. [0] still no idea what the fuck true multithreading is but w/e
Seems like you're on Windows since you're using `AHK`, so you might be able to figure something out with [**win32api**](http://docs.activestate.com/activepython/3.3/pywin32/win32api.html), [**SendMessage**](https://msdn.microsoft.com/en-us/library/windows/desktop/ms644950(v=vs.85\).aspx), and a [**Mouse Message**](https://msdn.microsoft.com/en-us/library/windows/desktop/gg153548(v=vs.85\).aspx). (*pretty sure that's what's going on behind the scenes in AHK anyway...*)
 40*r+((h-40)*(1.5*r)) and 40*r+(h-40)*1.5*r are equivalent. * and / are done before + or -.
Thank you! I actually have multiple classes. I will have multiple classes... JSON loading classes, Serial Classes, TCP Classes etc. I am making a cool JSON based configuration file that will create a number of hardware class instances based on whats in the file. Each instance will have a unique set of commands and will generate buttons for each of those commands. Would I pass all of those into the Gui... class GUI(robot, JSON, Serial_COM): qt.dispay(robot.name, JSON, Serial_COM) or class Serial_COM(JSON) some code class Robot(Serial_COM) some code class GUI(robot): qt.dispay(robot.name, JSON, Serial_COM) I am fairly new to this, and, although I have a pretty good handle on the functional programming in Python, I guess the next step is learning how to layer it properly. 
NP, here's an example that might provide some useful context: [**StackOverflow &gt; Python win32api SendMesage**](http://stackoverflow.com/questions/14788036/python-win32api-sendmesage)
Just what I needed, thanks a bunch! Great stuff.
first character to 13th character. and then 2nd to 14th, and then 3rd to 15th, etc. so I guess my "final greatest index" is 988th to 1000th character.
Does python actually claim to follow semantic versioning?
https://imgur.com/gallery/Br00TCn
This guys going to freak when he learns that I've got folders of datasets as text files that are all several gigs+ in size.
No problem, just my autistic head at work, and thank you for the polite reply :)
Well-performing Rust is easier to read, write and share than well-performing variant of python.
I resolved the issue. 
I doubt it, and I never claimed that it does. :)
I have 15 bookmarks on Firefox that point to articles about switch statements in Python. How many of them do you want to read?
Haha oh wow. So did your project get halted or did you just wait until your fix was implemented in the package? 
&gt; Python is completely unsuitable for short-running tasks. Good grief, a little bit of common sense, thank you so much :)
So what has all the waffle got to do with Python performance?
Work through [**Python Crash Course: A Hands-On, Project-Based Introduction to Programming**](https://www.amazon.com/Python-Crash-Course-Hands-Project-Based/dp/1593276036) if you like project-based learning &amp; having relevant context-based examples, or read through [**Python Essential Reference**](https://www.amazon.com/Python-Essential-Reference-David-Beazley/dp/0672329786) if you're comfortable with learning raw concepts &amp; want a solid overhead view of what's available to you. &amp;nbsp; ***Automate the Boring Stuff with Python*** is another good project-based option: * [**Book**](https://www.amazon.com/Automate-Boring-Stuff-Python-Programming/dp/1593275994) * [**Online**](https://automatetheboringstuff.com/)
Had to?
Not respecting it is a great way to get IP-banned from whatever you're trying to crawl.
Fair, but isn't that more related to the speed you're hitting it, rather than which endpoints you're scraping?
You missed Girlish Number at the bottom, but I'll let that slide ;) Stay weeby, my friend
You replied before I got there, but yeah, I didn't recognise that one. My power level, now revealed, is low.
What about [Skulpt.org](http://www.skulpt.org/). This is a implementation that runs in a webbrowser, and converts to javascript. 
I think the other posts here list some excellent resources. However, I'd also add that there is no substitute for practice. Reading about python's data model is certain to help you become a better programmer, but at a point you also just need to jump in and start failing (or sometimes, even succeeding!). I also experience this feeling a lot despite having learned python reasonably well over the past year or so. I find that it still happens when I'm attempting something within a domain that I lack familiarity. Break the problem down into the smallest possible pieces, and start writing chunks of code that solve the little micro problems. It may be helpful to write the chunks within a class if that is where they will be executed ultimately. Sometimes I even write the steps to solve the problem in plain English as little to-do lists. The resulting python functions bare a striking resemblance to the to-do list, and the notes frequently become comments.
Thank you so much! This looks like it will really help me get started. 
Top notch editing, keeping it simple and to the point!
Gimme your best 3 please, damn. Is the main jist using a dictionary with a key?
Fantastic!! Thanks so much!
Please post this to /r/learnpython , r/python is for discussion about the language itself. It looks like you don't quite understand some of the fundamental idioms of Python. I've rewritten your example in a more concise way. new_string = 'word' letters = 'ocswd' for letter in letters: new_string = new_string.replace(letter, '*') Some points: - In Python, there's no need to make the string into a list to iterate over it. Strings already respond to iteration. - Iterating over the letters in `letters` and then testing for membership in `letters` doesn't make sense, that will always be true. (I omitted the test from my rewrite) - You don't need Sets to test for membership. Simple membership operations can be performed with the `in` operator ( `'foo' in 'foobar'`, `4 in (0,4)`, and `2 in range(4)` all evaluate to `True`) - `for i in range(len(iterable_thing)):` is an anti-pattern in Python. Iterating over the iterable directly is almost always better. If you ever *need* the index, consider using the built in `enumerate()` function. 
I'm still new to Python, and having fun converting OULIPO writing methods into Python programs! (OULIPO were/are a bunch of poets and mathematicians who made algorithms for constructing literature). It feeds into my PhD, and helps me learn my way around Python a bit more.
I edited my comment with some more information you might find useful.
When I don't want the GIL.
Also, consider giving https://www.youtube.com/watch?v=OSGv2VnC0go a watch. It's a great video, and it will probably give you a big boost in "getting" Python, and make the language more fun.
*robots.txt* defines: 1. What you can/can't crawl in a website. 2. At what rate you can crawl it (i.e. *crawl-delay*). Not every *robots.txt* defines the crawl delay, so you need to choose an arbitrary one. But this must take into account that most websites aren't Google or Facebook. So you must use a conservative crawl delay, like 10-15 seconds if you don't want to get eventually banned. Check out [this post](http://blog.mischel.com/2011/12/20/writing-a-web-crawler-politeness/) if you're interested. Needless to say that this limits the speed at which you can crawl a specific website.
Break up the clique at the top. It worked in the early days, but the language is running out of control, and not helped by people looking backwards like Raymond Hettinger.
Github isn't a good site for communication, I agree. Bur as a potential user I'd be content with having at least one of skype, vk.com, e-mail, reddit or Telegram. Westerners will probably replace VK with Facebook.
That applies to Python 2 as well. Also, you can get rid of GIL in your own python C extension. 
Good point. A key benefit of functional programs is that they free the programmer from worrying about order of execution. However, I don't think order is irrelevant in functional programming. A functional program can be thought of as defining a computational graph, which is a directed graph. In the example above, the input of `print` is the output of `list`, so it `print` is a descendent of `list`. This kind of relationship is critical to the meaning of the Rather than saying "order of execution", I should have said "topological order in the computational graph". It's worth noting, that order of execution and topology of computational graphs are closely related: All ancestors of a node must be executed before the node can be executed.
You mean 90% of corporate engineering environments?
I don't like C, not very safe.
Nah dude, fucking HEROIN is how you REALLY LEARN!
Yes. Or download under "[Current development code](http://www.pyinstaller.org/)"
&gt; Make It So Once again, I ask who are you talking to? _You_ can choose whatever versions you want to support...so stop talking about it and just do it. Also since you're apparently new to python, let me at least recommend focusing on version 3.4 or newer. The earlier versions in the 3 series were not really all that popular.
What were you doing that you couldn't import scipy? I'm curious.
I thought this was basically just quick tutorial on celery and docker, the actual task was irrelevant.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Whatever is right. You clearly aren't interested in exchanging ideas and just want to slam people. I won't bother responding to most of what you wrote because you only use it as fodder to intentionally misinterpret. You continually ignore one of the topics of this this post and thread which is around a pep that supports non CPython interpreters to evaluate frames of python code in the CPython interpreter. &gt;Context-switching to &lt;not python&gt; allows releasing the GIL, that has literally nothing to do with static typing, you could release the GIL to execute Lua code. I think you mean switching to &lt;not the Cpython interpreter&gt; since it isn't a limitation of the python language, just the reference implementation. There's no reason you couldn't write code that is Python in syntax but just gets executed differently. But, as it is currently, how do you communicate to this "non-python" code (C or lua or php or whatever) what is the structure of the data you are giving it? It would be nice to have a robust way of communicating and enforcing a contract, like, uh, types? Cython, numba and cffi all currently convert your code to static types and enforce those types at the python/other boundary. I'm not saying it's the only way, but it's the only way that makes sense to me. **The One True Multithreading**. Clearly Jesus came down from the clouds and gave me information you do not have. Actually, you know damn well what the status of using python code simultaneously on multiple cores is. Serializing your data and sending it over a socket to another process is not what most people think of when they say multithreading, that's why they say multiprocessing, and new folks in this sub have to get the lecture about the difference regularly. Maybe it isn't some God given truth, but I'm just talking about writing code in a .py file and being able to execute it on multiple cores using shared memory. Even execute on a GPU. We know this is possible because it is happening already: it is just going to get better. If I am going to be communicating with frame evaluators that release the GIL and have a way of communicating type, then yes I'd like stronger support for immutable types in this domain. I don't see any value in discussing it with you, but no, immutable types do not magically make multithreading. Good luck!
Technically I could (and previously was), but it made things easier not to. It really comes down to 2 reasons: 1. SciPy doesn't offer Windows wheels (perhaps because of the MKL redistribution thing? I don't know.) 2. SciPy+NumPy via [Gohlke's unofficial binaries](http://www.lfd.uci.edu/~gohlke/pythonlibs/) totals ~140Mb and can take a nontrivial amount of time to download (slows down my CI builds). In addition: + To my knowledge you can't use Gohlke's page as a package index (e.g.: `pip install -i gohlke scipy`) + Getting a direct download URL for the wheel from Gohlke's page is a pain because it's obscured by some Javascript. 
I just released a pure-python implementation of the [Error Function](https://en.wikipedia.org/wiki/Error_function) and Inverse Error function because I didn't want to have SciPy as a requirement for a different project. [PyErf](https://pypi.python.org/pypi/pyerf/) [Reddit Post announcing it](https://www.reddit.com/r/Python/comments/5wq56l/announcing_pyerf_for_when_you_need_error/?ref=share&amp;ref_source=link). Not much additional info there though, haha.
Glad to see this (and v2.0)! I've been installing this on an Android tablet (Linux container). mitmproxy was great for Android development but today it's essential: Google's NEON updates to Google Play (Mobile) Services is wiping out customized Tegra 2 devices - like mine - nearly impossible to block it eventually killed my OS. Getting that back--and mitmproxy to catch the updates--has been a harrowing journey (over a week...days for mitmproxy) but I finally got it built. Unfortunately, I'm stuck on "unable to get local issuer certificate") so....trying Python 3; I found a partial (unofficial) build for CentOS 7 + epel...at Python 3.4.3 - and I'm stuck. If someone knows where the PyInstaller binaries are (I tried the whl) I'd be much relieved. O/w, I've done full gentoo builds so I may try to build 3.5...or start over (again) on another distro with 3.5 included. Trying to focus on employment (with my only OS)...any pointer to the PyInstaller will be *greatly* appreciated. 
This is a cool idea, I don't know when I will use it... but cool to have in my tool box. Great vid
To be totally honest, I suggest skipping out on the tutorial for $$$ and attending some things your local Python meetup group organizes instead. YMMV, of course, but Seattle gets VanderPlas from time to time, Wes McKinney gave a talk in New York last year, etcetera etcetera. You can watch the videos at your own pace later when they go up on YouTube.
I might use it to update a time sheet I keep on there. It would update the right cell based on the current date and add my worked hours.
Random question... as someone who reads a good bit of Stack Overflow when looking for answers and Reddit (for the interesting Python news, articles, and discussion), but not the official Python Mailing List... is it worthwhile to do that? What's the easiest way to interface with it? How hard is it to filter out the noise of all the things I don't care about (which might be most things)?
It looks like this has been discussed quite a bit under many names, but as far as I can tell not resolved or implemented: https://github.com/python/typing/issues/11