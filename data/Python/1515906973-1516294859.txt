That's pretty much my point, why would anyone pay for this? It's like 10 lines of code that look through a file...
It’s not a hash. If you want to know what can be done with that object just type dir(thing-you-want-to-inspect) 
that helps me see the methods and whatnot. what do you do in this situation where you're including a module and want to learn how to use it and what it can do? just read the docs on it? I took that `dir` that you showed me and I can see all the methods, but still don't know what they all do
That's just the location of the object in memory. The default string representation of objects looks like that, and since the csv reader type doesn't define any other way to represent itself as a string, that's what Python will show if you try to print it. You generally don't need to pay too much attention to the position of the object in memory, but it can help you differentiate between different objects, which can sometimes be helpful.
Reading the docs is the best way, but you can run `help(thing you want to learn about)` to get some infomation about it.
you rock. thank you so much
Reddit folks seem to be super generous, people give reddit gold and that's already crazy! Why not give this guy some cash for his "hard" work making this great bot! Especially for a community that keeps repeating the same jokes over and over again.
Mostly it's read the docs, yeah. You can technically do help(object) to have the docstrings print out. I've found that helpful now and again. 
You could have a bot that gets posts that people commented that's what she said to populate your list further
Yes reading docs is your best bet. If there aren't any docs, your next best bet is reading the source code and trying to figure it out. Like you discovered, just knowing the variables/methods doesn't tell you how to use them. Plus Python is very lenient about letting you use things in unintended ways. So there's no telling whether the author even meant for those variables/methods to be used by consumers or if they are meant to be private (though a well followed convention is to underscore prefix private attributes).
Why not just a $5 VPS you can run many things on? Digital Ocean, SWS, etc Prob not gonna find much in free tiers 
/r/subredditsimulator
&gt; i have a file for each class This isnt java. Flat is better than nested. 
Yes! Awesome! I found something very similar to this already and steered myself away because the documentation said it needed to be programmed in Lua, but the product page has instructions and links to references. This looks just right. Gonna get a few to play around. Thanks!
I came across this a few weeks ago. I deleted my inits thinking they were junk files. After about 5 days of headache I wasblioking at old versions of the code to see how I was doing it and saw the init files. Brought them back and everything was better. Init is like the dll of python. Don't delete them if you're not absolutely sure. 
Upon further investigation of your code, it seems you keep scanning a file for new commands and then run them? I can't help but wonder what that would be useful for? Just curious, not hating btw..
What you're seeing is the "repr" representation of the object. Here's a link to find out a bit more: https://stackoverflow.com/questions/1436703/difference-between-str-and-repr-in-python
The pi getting thrown off the network every 2 days sounds like a DHCP lease expiring, have you tried giving it a static ip address? 
That /was/ fun
Dude's set up not one, not two, but SIX ways for you to 'donate' to him! I wish I was as shameless as OP when it comes to soliciting donations... I might actually get some.
Yeah, that __init__.py looks like __pycache__ directories which you usually want to delete.
Maybe this? https://www.nearlyfreespeech.net/
Agreed ^ set PlayerCharacter as a super class 
&gt; Plenty of other programming languages, like SQL and R, can be useful in the field of data science. SQL?
That's what she said. 
Because it is an object of csv reader class. If you want to print you can use the appropriate method of csv reader class. ;) 
I'm using an ESP32 based dev board and BME280 to get barometric pressure too. It's not so cheap as other suggestions but it may worth a look if you want to set up a weather station. I've programmed the board in Python using Zerynth to send aggregated data to ubidots platform, but I think there are libs for uPython too.. 
That's a good point actually, hadn't thought of trying that yet. 
You could run a web server on the Pi that would change the brightness based on a value in a form or something like that.
I'll have a look at it, thanks :)
There's also pyautogui
This only goes back to 6 months.. https://www.national-lottery.co.uk/results/euromillions/draw-history/csv
You could save the brightness value into a file and use the deamon to read from this file. This way would not need to kill the deamon. If there are more values you can use you should look into config parser
&gt;SQL? ?
Sweet! You have some skills! We're always looking for contributors with a sens of design on the Jupyter team, and having an easier way to build/distribute themes have always been under the radar. If you're interested in contributing directly to Jupyter that would be great!
Agreed, I thought it was part of that at first.
Good SQL is actually harder to learn than python. 
This is an interesting problem to solve when you're learning python and using a CLI. However, this is exactly what a `.sh` file does. On top of that, bash (and other shells) offer useful constructs: A; B # run A then B A &amp;&amp; B # run B if A succeeded A || B # run B if A failed A&amp; ; B # run A and B at the same time 
Install Apache Configure cgi-bin to run python scripts Send json to a python script with the parameters
[removed]
[removed]
But that’s not what they want. They want to call a function by its name randomly, I was meaning that calling a function name randomly doesn’t seem like a good way to do things and they should try refactor to use conditional statements and make the code less implicit.
I second flask, it‘s the python way to do.
You run `pypy3` instead of `pypy` (or you pass it as the `-p` option to `virtualenv`
This is really nice :) I might give it a while on my next hobby project. Knowing that I only scratch the surface of Flask most of the time poring should actually be quite easy from what I see. I wonder if I run into an edge-case where I use an obscure thing from Flask which was not ported. If I do I will let you know via a GH issue.
I got you fam: wemos d1 mini + sht30 shield
This code is really really bad
How is this different from [Sanic](https://github.com/channelcat/sanic)?
First of all, the function you defined does not return anything. Second, when you're calling the function in line print(average), you're not calling the function or providing a value for the parameter n. This would be done like this: print(average(5)) for instance. Let me know if you need more pointers 
In addition to reading the doc and/or source, I like using ipython. It has tab completion for methods and attributes of the object. Just type the first letters, then hit tab twice :)
Whenever I try to fix it I get this: &lt;function average at 0x03127FB0&gt;
def average(n): total =sum(n) length =len(n) average=total/length return average print(average([5,2,1,7,8,9,10,11]))
SQL is Turing complete. For example, you can render [fractals](https://wiki.postgresql.org/wiki/Mandelbrot_set)
r/learnpython not here
Why not React Native?
Scaleway has dedicated ARM boxes or x86 VMs for EUR3/month. 
A database is overkill. Just save a pandas dataframe to a csv
This is what I came here to recommend. AWS and Azure offer free basic tiers but they expire, GCP is free forever. 
A hacky workaround might be to have a cronjob restart networking once a day, or use something like Monit to do the same/reboot the Pi if it detects a lost connection. 
Hey couldn't this be used for hackery? Seems like all the stuff in this subreddit is for web scraping, creating bots. Who cares about this stuff? Programmer's shouldn't fill the niches in an economy, they should contribute to open source projects they believe in.
Per the sidebar, this would be much better suited for r/learnpython.
The guy who asked the question that inspired the script stated that he was doing a bunch of video processing stuff, then the last thing he had to do with each file was run his own Python script over the video files, however he simply wanted to be able to queue up the files and have them run one after another while he's working on the next video. This way he can queue up as many as he has, and keep queuing then while the script does what it's supposed to do without him having to check if 'chop.py &lt;filename&gt;' is done running (apparently it's resource intensive on his machine) and you're in the next command a couple hundred times. I don't know if he'll even use the script, but I felt like it was a useful exercise.
My aim with Quart is to provide the easiest path to combine existing Flask knowledge with asyncio. Ideally using Quart would effectively be like using Flask with the async/await keywords. I think Sanic is Flask inspired but aims to be the fastest Python web framework. Aiohttp (another great framework), I think, aims to be more than just a server framework. It also wants to take different design choices to Flask, so it is not really Flask inspired. Otherwise I think they are fundamentally very similar projects. The most interesting difference at the moment (at least for me) is HTTP/2. Quart is the only one of the three to serve HTTP/2.
I'm not familiar with Sanic, but from a brief look I think the difference is Sanic is "Flask-like", while ___ is API compatible with Flask.
Yeah I could indeed see a use in being able to keep queueing up files whilst it's running! :) 
This function is available in the math library as mean(). from math import mean print(mean(1,2,5,59,53,32)) or you can do this: def average(*args): return sum(args) / len(args) print(average(1,2,5,59,53,32)) 
&gt; making a mobile app with python, preferably 3.5+ [Kivy](https://kivy.org) can be used for that, no experience with it though &gt; getting text read off of wine bottles through the phones camera. [OpenCV](https://opencv.org), probably in combination with Tesseract. Google "opencv OCR"
I am refactoring my algorithmic cryptocurrency trading bot /r/surgetraderbot The principle concern I have it that configuration files are harder to work with than a Python class. I'm thinking about ditching the INI files and using Python classes for configuration. 
Lambda is a free service beyond the 1 year, limited services: https://aws.amazon.com/free/?awsf.undefined=categories%23alwaysfree You will get 1 million free requests per month or capped at 3.2 million seconds of compute time, whichever comes first. So in this regard Lambda is your best option since you can schedule the tasks to run. You may, however end up paying for S3 storage given how you've described your use case. Know that Lambda limits you to 512MB of ephemeral storage while the code is executing, probably plenty but if you need durable storage between runs you're going to need S3. Finally the great thing about all this is AWS does a nice job of showing you invocations and the stats around them so you can choose to cut it off before you go over free. The downside is you need an account with a credit card on file, but that's seemingly well worth it for what you get. Reference link for AWS limits: https://docs.aws.amazon.com/lambda/latest/dg/limits.html#limits-list
Not entirely, this script allows the user to keep queueing up commands even whilst it is running! Though you could argue you could just run a commands in the background.. :) 
You'll be happier with the more accurate DHT22s: https://www.amazon.com/Diymore-Digital-Temperature-Humidity-Replace/dp/B01IT2E4ZW
Yup
Loving my D1 Mini but unfortunately only found out about their shields after getting a separate DS18B20 sensor. Would have gone with the SHT30 had I known... 
You might consider making use of [imageio](http://imageio.github.io/) rather than ffmpeg to create animated GIFs. It would allow you to do it without leaving Python, and without requiring non-Python dependencies. See the examples [here](https://stackoverflow.com/questions/753190/programmatically-generate-video-or-animated-gif-in-python).
I'm pretty sure str is a function, isn't it?
Apis are quicker , id pick that over scraping any day
[removed]
if type(animals) is str: 
In python 2, calling input tries to evaluate (as in the func eval) the input it given through the standard input. So if you pass "cats" it evaluates to a str object, but if you pass cats, it can't be evaluated and thus fails. You can use raw_input, but it will always convert your input to str, and you will need to change the check you do.
Cool! Yeah looking forward to playing around with that as well. Tip from a crypto enthusiast though: don't go for bitcoin. Check out Ethereum, OmiseGo and VeChain instead (among others) if you are looking to invest :) 
/r/learnpython
You can’t use == when checking for type. Use *is*
It also tends to be less heavy on the service. Even if they have rate limiting, it's usually there for a reason - and taking down someone else's public API/site with constant requests is just rude.
Better to use `isinstance` rather than `type` as the former will also detect subclasses, the latter won't.
Thanks I'll try that
The obligatory [Python Is Not Java](http://dirtsimple.org/2004/12/python-is-not-java.html) and [Java is not Python, either...](http://dirtsimple.org/2004/12/java-is-not-python-either.html).
If you can use an API, do it. That is what APIs are for, and unlike web pages, you are expected to consume them in an automated way. Whoever offers the API will avoid unnecessary breaking changes, the data will be presented in a usefully structured way, if authentication is required it will be done in a machine friendly way, there should be a clear explanation of what kind of access is considered fair so you can easily avoid being blacklisted or throttled, and you will not have to worry about pages loading data lazily with ajax.
Indeed. I was giving him the closest thing he had to his existing code though. 
Please ask these kinds of questions in /r/learnpython . In Python 2 the `input` function tries to evaluate your input as Python source code -- this was supposed to make it easier to handle numeric input. Numbers work, because in Python bare numbers are numbers, but strings have to be entered in quotes, because in Python source code strings have to have quotes. Bare words are names of variables, functions, etc., so if you enter those you will either get an error, if no such symbol is defined, or you'll get some kind of unexpected behaviour if you do happen to hit a defined name. If this sounds like a terrible idea, that's because it is. In Python 3 this behaviour was removed, and the `input` function just returns the input as a string and doesn't do anything to it -- you are responsible for converting things to numbers, etc. yourself. This is what the function `raw_input` does in Python 2. Do you have a good reason for using Python 2 in the first place? I would advise you to switch to 3. If you need to keep using 2, steer clear of the `input` function and use `raw_input` for everything.
Textract for text recognition in images. https://github.com/deanmalmgren/textract
I thought that is what I did, PlayerCharacter is the superclass and Fighter is the subclass
My background is in UEFI/EDKII, so I am used to there being tons of files for organizational purposes so I am not sure how it would be a good idea to have one massive file which includes the PlayerCharacter and every single subclass... it would be too cluttered.
You are correct, I should have read the sidebar. My apologies.
awesome!
thanks for taking the time!
This question is in no way related to Python. Try r/AppleScript
Python was used to create the code
I figured it was a coding error.
I also found this website and the answer to the question on the website, seems correct. But I don’t know how to implement it into my own coding. Please help. [error fix] https://apple.stackexchange.com/questions/157440/error-in-applescript-invalid-index
Qt5 using QML is way better than Kivy. Plus with Qt Creator you can design everything in the GUI. There are even examples of using the phones camera with QML so that'll get the ball rolling. 
I would look at a web-interface. You could make your own with Flask or Bottle (I prefer the latter for small projects). Or, you could look at [remi](https://github.com/dddomodossola/remi) to make it for you.
RemindMe! 3 days 
I am using that but it still results in two instances of it popping up in Task Manager (one that is smaller in RAM usage and one that is larger in RAM usage).
cool. read up on "fintech". Banks are open to working with API providers. You just have to pick one. In the US there is a service called Plaid. There's other choices for other parts of the world.
Do you really want the "short" logo to say Qt? https://en.wikipedia.org/wiki/Qt_(software)
Why does your script have to be running all the time? It could make more sense to run it when you want change the lamp state somehow and use different parameters for different actions. The simplest solution would then be to simply issue the command with parameters over ssh. Sure, you can install a web server make a flask web service, but that would be massively overkill.
Libgen here I come 
I use it mainly as a daylight alarm clock. So most of the time it will be running in alarmclock-mode, updating color temperature and brightness according to time of day. Occasionally I want to control it manually.
Peep the sidebar - If you are about to ask a question, please consider r/learnpython or [the learn python discord](https://discord.gg/jQtfh66). - Homework-style questions will be removed, and you'll be encouraged to post there instead. - Add 4 extra spaces before each line of code
From what I've seen, Kivy seems to be more game focused than applications.
&gt; (Quart is an async web micro framework with Flask's API) Good title, thank you for the context! It always bothers me a little bit when release announcements consist of the name of the project, a link, and *maybe* a changelog summary, and you have to go digging just to figure out what the heck the project is. Haven't done web stuff in forever, but I'll keep Quart in mind for next time! Strong Flask API compatibility would make performance comparisons very easy to look at, too. =]
It looks neat! Great professional look. Thanks for sharing.
How much money have you made by spamming your referral link around reddit?
Finally gave Python a spin (I work mainly with Ruby). Flask is nice. Wanted to understand modules better, so I created one to access the https://icanhazdadjoke.com api. Code on [Github](https://github.com/vanakenm/icanhazdadjoke-python), deployed on PyPI. Nice experience until now
First, let me say I'm a uuuge fan of your blogs (if you're the Jake I think you are) and other things you do - learnt a ton from your material online. I'll definitely give imageio a try. The approach with FFMPEG tends to produce unreasonably large .gif files which I then have to compress using online tools so they'll load fast in blogging platforms. Medium has a very hard time loading my GIFs even after I compress them.
Then I would suggest splitting your program into two parts. One interface to the lamp, and one alarm-clock-thing that runs all the time and that invokes the lamp part whenever the lamp state needs to change. If you want to do something manually from remote you would then simply invoke the interface part over ssh.
Does it really have to be simultaneous ? 
TIL you can make android apps using python
If it doesnt specifically have to be oxford dictionary, NLTK already has the data
https://github.com/pyinstaller/pyinstaller/issues/2483
I think [HumbleBundle](https://www.humblebundle.com/books/python-by-packt-book-bundle?partner=indiekings) has these books in this months dicount
It may be worth trying your library in pypy. There are other options to try when it comes to speeding things up in python. Cython and Nuitka are just two. 
gifsicle and gifski are interesting tools in the gif optimisation space.
I like the way there are 3 globals in the thumbnail
What do you mean? I'm not sure how to handle pycache.
PyCharm is a pretty heavy IDE, however a nice feature is it will colour the margin on files with style issues like this it finds, often you can press alt-enter on the code and it will suggest some fixes it can apply.
It's quite hard to get you're head thinking this way (- it's sort of reversing anything). This book - is all about getting there. https://www.labri.fr/perso/nrougier/from-python-to-numpy/
It is a coding error - in your applescript. You don't have a python problem.
A great presentation - Cross-[post](https://www.reddit.com/r/programming/comments/7qbqg4/brandon_rhodes_animations_in_the_terminal_talk/) from /r/programming via /u/Arve - Source: https://github.com/brandon-rhodes/scrawler 
&gt; It’s the algorithm that miners race to solve in order to create a new block. In general, the difficulty is determined by the number of characters searched for in a string. The miners are then rewarded for their solution by receiving a coin—in a transaction. I'll assume Mining things isn't terribly easy but if like if a bitcoin is worth whatever the ridic sounding value it has, wouldn't it seem like it would be worth it to mine just like one or two? Or is there an energy trade here (would you earn enough for the resources you've poured into it?).
Why not check if `inputArray[calcRng]` exists first? Use an if/else, instead of a try/except.
 len(inputArray) &lt; calcRng
I don't quite understand what the purpose of your function is. Every element in the resulting array is the same since the only time you use `i` is in `targetBalance[i]`. Also, you need `for i in range(len(inputArray))` - otherwise, you're trying to iterate over an integer. Some more context would be helpful to give you advice. 
Referral link aside ( Ill go strait from the main page) What level do you think would be most useful for someone that is just getting into this. ( First computer science class of Computer science major ) 
They are decent, not the best, but decent. Especially for this price.
I'm late to the party, but here's a simple DFS of the edge graph. It could be a bit more efficient by starting at a fixed number and adding new numbers to both the left and right sides of a deque, but that's more effort than it is worth. max_number = 15 number_range = range(1, max_number + 1) squares = set(i**2 for i in range(1, max_number + max_number-1)) edge_dict = {i: set(j for j in number_range if i+j in squares) for i in number_range} current_path = [] def dfs(number): current_path.append(number) if len(current_path) == max_number: print(current_path) else: for next_num in edge_dict[number]: if next_num not in current_path: dfs(next_num) current_path.pop() for number in number_range: dfs(number) 
Thanks! So I tried something similar, but I'm not quite getting the answer I'd like. Updated code: def calculateForwardTarget(inputArray, balancePeriods): # initialize zeros targetBalance = np.zeros(len(inputArray)) _balPeriods = balancePeriods for i in range(len(inputArray)): calcStart = i + 1 # calcs start in next available period calcEnd = calcStart + balancePeriods if len(inputArray[calcEnd - 1:]) &lt; balancePeriods: _balPeriods -= 1 calcEnd = calcStart + _balPeriods calcRng = slice(calcStart, calcEnd) targetBalance[i] = inputArray[calcRng].sum() return targetBalance I'd like to stray away from using an exception here because I don't think its needed, but logic isn't working just yet. If my sample is: calculateForwardTarget(np.full(10, 10), 3) I should return (first function): array([ 30., 30., 30., 30., 30., 30., 30., 20., 10., 0.]) But instead I'm getting: array([ 30., 30., 30., 30., 30., 20., 10., 0., 0., 0.]) I feel like the zero based index is throwing me off somewhere, so I've tried adding 1s here and there to the timing items and can't seem to get it right. 
Sorry about that. The values actually would be the same for all but the last periods where the length of the remaining array is &lt; the balance calculation periods, in which case, it declines to adjust to the target. Sample result: I'd like to say: calculateForwardTarget(np.full(10,10), 3) and return: array([ 30., 30., 30., 30., 30., 30., 30., 20., 10., 0.]) The try/except version works, but I can't seem to figure out how to make this work w/ if/then and the indexing.
Close -- len(inputArray[calcEnd (-1? ):] &lt; calcRng. The indexing is throwing me off somewhere.
Checking the condition first is called ["look before you leap"](https://docs.python.org/2/glossary.html#term-lbyl) in contrast to ["easier to ask forgiveness than permission"](https://docs.python.org/2/glossary.html#term-eafp), which is what you are currently doing. If you don't expect the error condition to be common then wrapping the operation in a try/except is generally the correct approach. Exception handling is costly--it involves unwinding the stack and building a traceback--so you only want to use it in *except*ional cases, but you don't want to waste a lookup and comparison every time if the error case is rare, so it generally costs less to catch the exception than do the lookup/compare every time. In your situation with JIT concerns you can just LBYL if calcRng &lt; len(inputArray): targetBalance[i] = inputArray[calcRng].sum() else: calcEnd -= 1 to avoid indexing into the list when the index is out of bounds. Or if calcRng can be negative if calcRng &gt;= 0 &amp;&amp; calcRng &lt; len(inputArray): targetBalance[i] = inputArray[calcRng].sum() else: calcEnd -= 1 
Bought it. Love humble bundles.
Depends on what your interests are. Since you're in CS101, you could just redo all your hw in python and you would learn 100x quicker than anyone else. 
Yes. Python is probably the premiere language for AI-ish stuff. Google's open source library for this is called tensorflow.
I didn't know that! Thanks. As I said I'm new to all this so I wasn't sure what Python is capable of. To me analyzing and creating original pictures sounds like a very complex code to design.
Looks like straight after his 100k+ karma alt /u/13378 got suspended for referral spamming he immediately started up on this account. So I'd say he's making a shitload. Or maybe he's just really desperate.
My interests are I have only made a house in python but would like to go more than the 101 class covers ( I am literally only 2 classes in ) do you think it is worth while if I do the 15 Plus ? or I am good just with the 5 and pick up other deals in other languages as they come ?
I'm sorry I should of been way more specific. If you haven't already, in the FIghter/other subclasses __init__ function add a `PlayerCharacter.PlayerCharacter.__init__(self, foo, bar, baz)` or better yet `super().__init__(foo, bar, baz)` 
I'm sorry I should of been way more specific. If you haven't already, in the FIghter/other subclasses __init__ function add a `PlayerCharacter.PlayerCharacter.__init__(self, foo, bar, baz)` or better yet `super().__init__(foo, bar, baz)` 
I'm sorry I should of been way more specific. If you haven't already, in the FIghter/other subclasses __init__ function add a `PlayerCharacter.PlayerCharacter.__init__(self, foo, bar, baz)` or better yet `super().__init__(foo, bar, baz)` 
The alternatives to invoking modules inside packages with `python3 -m` are 1) put the entry point scripts in a separate place outside the package and have them import the package, or 2) set the `__package__` attribute of the modules inside packages which will be run as scripts. Guido once called running scripts located inside packages an antipattern, but he later approved the PEP for the `__package__` attribute. Setting that attribute correctly is not trivial, however. I put a module on PyPI a while back which can automatically set the attribute: https://abarker.github.io/set-package-attribute/ 
Another python library for neural networks is Pytorch. Really love how easy it is to get started with that library!! Do note that almost all of these libraries have a C/cuda backend. It would probably be infeasible to create a fast enough NN purely in python.
I'll make sure to look into it! Thanks a lot. Yes I suppose the NN would be a rather slow worker. 
When you do convert you might want to try a script I put up a while back which can automatically convert most names (using Python-Rope). It is conservative in trying to avoid name collisions. https://github.com/abarker/camel-snake-pep8 
Hi. If you're referring to the WordNet NLTK corpus reader, I was looking at that sort of route. The problem is, it doesn't have phonetic and the etmology of a word. Oxford does all that. If I find a way to do wordlists and gain the results simultaneously, I should be alright.
As others have said, API &gt; Scraping if you can do it. Their API is quite different, but easy to work with. 
Hi. I'm not sure if that's right for what I'm doing. I need to incorporate it into Anki, and automating the lookup of wordlists is what I'm trying to do. So, creating an add-on seems like the best route.
I noticed wiktionary is downloadable via a link they provide and has pronounciation in IPA, and etymolgy
So... just use isinstance if you need to test for subclasses. I don't see either way as better or worse.
i think it should be == not is?
Yes, I meant to add that you may need to do some math to avoid off by one bugs (since indexes start at 0)
Thanks. This is definitely a good alternative. I could even do it for multiple languages with Wiktionary.
Woops looks like I responded to the wrong person there. Sorry! But to address your point, have a look at the comments in one of the previous submissions of this deal: https://www.reddit.com/r/Python/comments/7nhijd/humble_book_bundle_python_by_packt/ and https://www.reddit.com/r/Python/comments/7nmjf6/humble_bundle_has_15_books_on_python_for_12_bucks/ 
When you fill like you are writing bad code, don't be afraid to through it out. It is can also be helpful to draw out stuff on a paper. def calculateForwardTarget(inputArray, balancePeriods): n = len(inputArray) targetBalance = np.zeros(n) for i in range(n): targetBalance[n-i] = inputArray[n-i:n-i+balancePeriods].sum() return targetBalance 
I am a simple man. I see Brandon Rhodes in the title and I up-vote.
excellent. Thank you so much. I am still very new to the world of programming. I will continue just to use the free items out there. 
This is a hot topic with blockchain developers. You may want to look at crypto-currencies and one in particular, Etherium, that has a "smart contract" mechanism that can do the kind of escrow operation you describe with your bank.
Learning C this semester and I'm already triggered 
Thank-you, that library looks really helpful. 
Don't use -F and live with the fact that there are now multiple files besides the exe
You'll want to look into virtual environments. The [official python tutorial](https://docs.python.org/3/tutorial/venv.html) has a pretty good section on this, although you'll need to use virtualenv if you're working with python 2. In general, I'd recommend taking a look at the resources and tutorials over in /r/learnpython.
Why not write the updates for Flask and make a pull request?
Please, where can I find train.txt? I want it so badly, and Google will not enlighten me. 
Yup
I believe that the `rolling_window` function shown here [Efficient rolling statistics with NumPy](http://www.rigtorp.se/2011/01/01/rolling-statistics-numpy.html) could be modified to give your desired output. I'd do it myself but I'm no numpy expert :-( Certainly there is little point using numpy if you're then using pure Python loops.
I have to assume you are trolling me at this point... But, yeah. Just because you should use a electric drill with a clutch on the chuck doesn't stop people from using hand tools like screw drivers or even hammers. Javascript has a 3D library (and it is also a good example of a run time interpreted scripting language that is sub optimal). Why not python too.
In the appropriate scripts directories you should have (say) for Python 2 pip.exe, pip2.exe and pip2.7.exe and for Python 3 pip.exe, pip3.exe and pip3.6.exe. Alternatively use the Python launcher `py -x.y -m pip ...`.
I would need a full stack developer to do this API integration with platform.
That's cool but govt has banned crypto here. Hence a platform is required. 
These "creative" kinds of neural networks that you mentioned tend to be relatively hard to grasp, but there is an official PyTorch tutorial on this topic here: http://pytorch.org/tutorials/advanced/neural_style_tutorial.html It's very math-heavy and not a good starting point to learn, but you can just download the example code linked at the bottom of the tutorial and try to run it with your own pictures. If you want to actually understand what is happening in the code, you will have to be patient and work through the beginner tutorials first. 
or become one. yes.
What version of Python you downloaded? What OS you use? 
Windows 10, the latest version of python 2 
Add your respective /Scripts directory to the path system variable. Then you can call either from the command line. So, in your /Scrips directory you'll find the pip executables. I say that in plural because there are 3 of them. i.e. for python 2.7 you'll find pip.exe, pip2.exe and pip27.exe. The same goes for your Python 3 install. You'll find pip.exe, pip3.exe and pip36.exe. So when you add your paths, i.e. "C:\Python27\Scripts\" to the path system variable, you'll be able to execute `pip3 install requests` or `pip2 install pylint` from the command line (CMD or Powershell).
You're supposed to use `python -m pip install ...` which makes sure you get the right version for the interpreter. However I have no idea if this works on Windows, or with Python 2. 
Ok I'm really struggling with this kind of thing in my journey from domain expert who writes some code, to programmer who knows the domain. Python has no primitives - everything is a first class object. "Stop writing classes" is a meme in python, because a module in python serves a lot of the purposes of a class in other languages, and mixing functional and object oriented paradigms is common depending on your requirements for persisting state. This is the first time I've heard of primitive obsession as a code smell, and google doesn't turn up many references to it that deal with python code. Why would you recommend a class in this instance over a namedtuple?
flask isn't async?
Also, on linux, there's libxdo
What operating system are you using?
You can also tell which python interpreter you're using by running the command where python But realistically, you want to use virtual or conda environments, and activate them when you want to decide one or the other.
For a typical python install, you can double click the .py file. You can also right click and select "Edit with Idle". This will open the editor, Idle. From there if you hit F5 it will run the current script in the Python Interpreter. If you've tried on both 3.x and 2.x, you should post the errors and/or the script to get some help.
Could this method be used to handle possible duplication of libraries needed to be downloaded between python3 and python3 Anaconda. I believe my python3 is "pathed" while my python3 Anaconda is not. I would like to import from my anaconda scripts to regular python3. And the other way. Or should I just migrate to one python? Hope this made sense. 
or find one. yes. :) 
I hope it utilize unicode boxes and 256bit true color in terminals nowadays. You can use ffmpeg to stream real videos I think.
Thanks, this ended up working for normal libraries but after hours of work I found out the libraries I was trying to install only work on Linux &gt;.&gt;
WOW! as someone taking his baby steps in learning python (and coding), this is very useful. .Thanks
It does work, but in Windows with python 3.3+ (i think) you also get the [Python Launcher for Windows](https://docs.python.org/3/using/windows.html#python-launcher-for-windows) which helps you call the version of python you want (when having another version installed, say v2). In that case you can do it like this: `py -2 -m pip install...`. The "py" is the Python Launcher program, with "-n" you specify the version of python. But, as you can see [here](https://docs.python.org/3/using/windows.html#finding-the-python-executable) the Python windows installer does what I said on my first post automatically (namely add /Scripts dorectory to system `PATH` variable) if you select that option.
Check out the Machine Learning Specialization Course on Coursera (or YouTube), taught by Andrew Ng. Fantastic course, will walk you through exactly what you are looking to do and more.
Thanks, but that didn't work. The forward calculation is supposed to shrink from whatever it is at, by 1, down to 0 by the last period because it hits the ending index "wall" if you will. 
Thanks, its nifty, but the drop in values at the end is accurate in the formula originally posted, and I can't seem to work that with the rolling window.
To add to this list, "Hands On Machine Learning With Scikit-Learn and Tensorflow" is awesome. Highly recommend.
I can confirm that Learning Python and going through it from page 1 to the end is torture. But I am half way there and it seems worth for me, a new python learner!
Hi, I can currently program in python but I've been struggling with the official django tutorial. I find that there are too many configurations needed before I can get things running. In light of this, I've gone through the flask official docs and can understand about 70% of the info. I'm still struggling with how to configure databases although I can write sql. I was wondering if I would be able to go through the first half of the TDD book like you did in, order to fully understand django and flask official docs. Thank you
Generate: https://docs.python.org/3/library/secrets.html#generating-tokens Check: https://docs.python.org/3/library/secrets.html#secrets.compare_digest
Last time when I looked at this topic the support was not that good.. You cannot make widgets, startup time was incredibly long even for simple apps and the hardware was not that easy to use. The recommended language will stay java. 
The main thing is use the tools that exist to make this possible. Get the project skeleton set up in VCS, if it isn't already. GitHub is good, of course, and easily set up with Issue tracking, etc ... but for fixed teams I'd say Gitlab actually has more to offer, especially as it has a whole CI/CD pipeline built in, plus Mattermost (basically Slack) and Agile features like a Kanban board view of issues. If the project will rely on anything outside the PyPi ecosystem (and quite possibly even then), the ideal is to get everything building and testing in Docker or a VM that can be also be used as the common dev environment. At the very least use **venv** (or **virtualenv** if not on recent Python, though you should be), and personally I'd look hard at **pipenv** before even starting. Establish some quality control rules, with linting and coverage checks as part of CI being a bit of low hanging fruit. At the very minimum decide on a style guide and stick with it, PEP-8 being the easiest and first choice. All of these exist to make collaborative programming possible. Honestly, they're worth using on single-dev projects as well, but they really start to show their value the larger the team gets.
Yes it is possible. Look into Flask. Also check out /r/learnpython 
Thank you. I will look into venv and pipenv. Does Docker work for scripts that are not specific? I found a few articles about it but they all seem to be specific to web dev.
Use Anaconda. I'm convinced it's magic. You get virtual environments from any folder with `activate myenv`. I have a Python 2.7, 3.5, and 3.6 virtualenv each with their own packages. It's so much better than using pip.
I wouldn't use it for things that need to launch a GUI -- you can, but it ain't easy or simple -- and it's not the right thing for testing cross-platform (there are Docker images for Windows and apparently ways of building images for Mac, but it's all hacky), but if you've got a 'nix script that needs to launch in an environment and it has expectations about that environment, Docker can really help with providing that repeatably. It's not useful for *deploying* said script in the way it is for web, but for testing yeah it definitely can be.
Wow, that's a nice quirky details, thanks for sharing! 
I should post a more complete example. Sorry I typed it on my phone. Now that I am on my computer, lets get a little more deeper. I start of with an n-dimensional array of zeros that I want to fill up. The shape of this array is: (file-index, momentum-index, value-index, t) where value-index is either value or error. So, in my function above, p corresponds to tuple (file-index, momentum-index). My main function looks something like: data = np.zeros((file_index_max, momentum_index_max, 2, t_size)) def main(p, t): val, err = my_minimization_function(p, t, **kwargs) data[p[0], p[1], 0, t] = val data[p[0], p[1], 1, t] = err This is all the main function does. It just updates the data array. Here is something else I found after running my code for a long time. Even when I do this, my data array still contains 0's on every entry. This I find very strange as I can do something like this def update_list(my_list, a): my_list.append(a) &gt; my_list = [] &gt; for x in range(3): &gt; update_list(my_list, x) &gt; print my_list [0, 1, 2] Any idea what's happening?
https://imgur.com/yYbxXfJ do you have any idea what i'm doing wrong? I've used the correct path to the .py file
Try without the ~ or the C drive part of the path
Try without the ~ or the C drive part in the path
I did and it results into the two screenshots I have above, wait, no I tried removing the C: and it worked, thank you! 
&gt; "Stop writing classes" is a meme in python Unfortunately. However, I think a lot of people missed the message of that talk which was "Stop writing classes *you don't need*." If you need a class, write a class. If you don't need a class, don't write a class. 
I agree with everything you are saying, but on top top that add code reviews and please use git flow or something similar to manage your branches to avoid issues with git. And if you don't have any reason why not, python3 is the way to go! Outside of python writing specifications, and designing the application and delegating the work is usually where you want to put you money at, since writing the code should be the easy part.
Compact. I should try this out this week. 
Fluent Python is truly a masterpiece, but I also recommend [Dive Into Python3](http://www.diveintopython3.net/) by Mark Pilgrim, this was the one which showed me the light for the first time. (Althought I had no prior programming experience before Python.)
Sounds great, I'll do that!
Have you done any benchmarking? Was performance the motivation which forced you to move from Flask to "async Flask"?
[Stop Writing Classes](https://www.youtube.com/watch?v=o9pEzgHorH0) by Jack Diederich. I also recommend reading [this](https://eev.ee/blog/2013/03/03/the-controller-pattern-is-awful-and-other-oo-heresy/).
What about Vispy / Glumpy / pyqtgraph ?
If you want to create a reddit bot tutorial for beginners: don't. The aftermath is a pain for moderators. Some learning subreddits forbid posting these kinds of tutorials for a reason. At least mention the [reddit botiquette](https://www.reddit.com/wiki/bottiquette). If you are a beginner who wants to create a reddit bot: follow the [reddit botiquette](https://www.reddit.com/wiki/bottiquette). 
Hey, since you intend to share it, any chance you are going to share development (on github mayb)? I have a pet project that aims doing something similar, once I get it a bit more optimized I'll start automating the creation of anki decks, and that's why I would like to follow with and help if possible.
tic tac toe?
 for i in range(1, len(...)) Srsly? Don't teach this! 
Why not? I'm learning programming and I just want to know.
Love of Python is on topic.
This "article" is CS freshman level, not someone who claims to &gt; I recently graduated from Georgia Tech as a Computer Science major. I’m now a Cyber Security Engineer in the DC area. Despite the poor quality code used def getLatestBlock(self): return self.chain[len(self.chain) - 1] it's content can be summarized in couple of words, sth like "Block Chain is a chain of hash objects generated on previous hash objects, which is secure becouse it's based on previous objects and I can check it". After this article I don't know anything more about BlockChain, and god forbid that I would like to use this poor Python implementation. I'd definitely expect something more from "recent CS graduate, current Cyber Security Eng". 
The code wasn't that bad. Stop being a dick. 
If this is in a string leteral you are using it, then the backslash is used with escape sequences. Type two backslashes and it should then work.
A tuple is a defined data type. A namedtuple is a convenience wrapper around the same datatype. Sorry to labour the point but I really want to understand. From my perspective a custom class that needs instantiation and introspection when it appears on the repl is not more appealing than a tuple which has well understood characteristics, has powerful operators, and some handy convenience methods. If you could go into a little more detail about your thoughts I would be grateful. I try to have strong opinions but they're based on narrow experience so please feel free to disagree bluntly. 
for val in vals... don't use index access if you can avoid it.
Also curious as well!
If we'd be talking about the sole fact that it may work, then yeah, it's not bad. But let's keep up to some standards mate, both in the code and in the discussion 
A simple Reddit bot that replies to a comment when called by the author. Have mostly worked in R so this has been a fun introduction to Python.
Another Pythonic blockchain explanation that [I recently promised to post]https://www.reddit.com/r/Python/comments/7q2vt7/learn_blockchains_by_building_one_hacker_noon/dsm74j4/?context=0)(, [is also available](https://www.reddit.com/r/Python/comments/7qiwyj/simple_blockchain_demo/) I'm biased, but I think my post explains the ideas behind the blockchain a little more than this one does.
Hi! I'm the author of this post, please feel free to get in touch or ask questions here, on our mailing list (https://groups.io/g/wallaroo), or on IRC (https://webchat.freenode.net/?channels=#wallaroo).
I'm new to Python. Would this be better? def getLatestBlock(self): return self.chain[-1]
So...? Previousblock = none For Val in Vals: If not previousblock: Previousblock = Val Else: Currentblock = Val ... Previousblock = currentblock Sorry, typed on iPhone. 
&gt; See the answer from /u/SeaportDouglas for a better way. Please see my answer above.
PyCharm doesn't do that for me. Even after entirely closing it. Make sure that your file permissions are correct and the user running the IDE can in fact update the `.idea/workspace.xml` file. Every code fold is saved there I believe. You may also want to visit the PyCharm settings &gt; editor &gt; general &gt; code folding and check a lot of extra checkboxes. Though this is unrelated to the issue you have.
I really enjoyed reading it.
it sounds like the main advantage is enumerate doesn’t have to learn how many items are in the list. enumerate has to do a lookup as well, right? How else does it retrieve the values?
&gt; Make sure that your file permissions are correct and the user running the IDE can in fact update the &lt;project-root&gt;/.idea/workspace.xml file. Every code fold is saved there I believe. Yeah, file permissions are correct :/ &gt; You may also want to visit the PyCharm settings &gt; editor &gt; general &gt; code folding and check a lot of extra checkboxes to make your life easier. Though this is unrelated to the issue you have. I checked it out, but that's just for code folding, while my issue is part of the menu, not the code, so unfortunately none of those options help out.
Yep, that's the pythonic way.
Thanks for sharing!
Yes, that is considered the "Pythonic" way to do it.
As someone that is new to both Python and the world of blockchain, I appreciate the effort. I'd be greatly appreciative to anyone that can point out specific areas in which the code could be improved (rather than just saying it's not the best) by including the alternate code. Thanks to those who have done so already.
Tag removal on a legacy site. Anyone know of a good tool to detect marketing tags and pixels on a page? 
Don’t ever create a hash from multiple not-padded values. AFAIK bitcoin hashes the serialized block header.
Have you checked out [pythonlibs/(http://www.lfd.uci.edu/~gohlke/pythonlibs)?
Hi. Yes this is definitely the plan. I've just be figuring out the logistics of this and how best to implement everything. Once that's done I'll upload it to Github and I'll pm you.
I'm not arguing for Range+Len, but I am curious about the specifics for why enumerate is better in this scenario. What is enumerate doing differently on the backend? import timeit print("Enum:") print(timeit.timeit("vals = [0]*100000\nfor i in enumerate(vals): val = i",number=10000)) print("Range+Len:") print(timeit.timeit("vals = [0]*100000\nfor i in range(0,len(vals)): val = vals[i]",number=10000)) The results are closer than I expected. Enum 41.7296359539 Range+Len 46.5440580845 I found it interesting that as smaller timeit iterations, Range+Len was faster. number=100: Enum: 0.480576992035 Range,Len: 0.44536614418 Doesn't seem very reliable considering I didn't change the statement...
Readability. Even if it's a milli or three faster, you should optimize later.
and even less Java-y: @property def latest_block(self): return self.chain[-1] 
Thanks in advance! ..and to actually give an answer to your questions: - use the API if possible. In the project I mentioned in the previous comment, it uses bs4 because the site ( tatoeba.org ) doesn't provide one. Are you trying to make something to be used from the command line or a "one time" data generator? You don't need to worry about looking for multiple words at the same time, if the csv file will be generated once and imported in anki. :/ Have you worked before with either an API or webscrapping?
What can I actually do with a block chain, other than ~~pyramid schemes~~ create yet another crypto currency?
https://vt100.net/animation/ xmas3.txt is the one in the presentation, but there are other great ones too.
Just checked it, and I forget what I needed exactly, but it has nothing to do with python unfortunately. I'll have to keep that website in mind though for when I get home. Do you know if I can install all of those via a single pip command?
I don't know how to do that, but you can use ctrl+F12 to access the structure popup, then just type the first few letters for search
What's happening is that you can't modify variables across processes. At the time you branch your process, an entire *copy* of the program is made. So if you have 3 processes **plus** your main (trunk) process, there are 4 copies of the program. So `my_list` exists in 4 places. Updating one does not update the other. Think of it like Back To The Future with Marty McFly's mom in 1955. There are several alternative universe realities. In one reality, Marty McFly is in love with Marty and never marries George McFly. In another reality, Marty McFly never shows up and while George and Lorraine McFly get married, George McFly is a coward. In a third reality, Marty McFly changes George McFly into being a hero and he becomes very successful. At the point you branch your program using multiprocess, you're creating all of those separate realities. `my_list` can be changed by one process, but that doesn't affect the others. How you get your data back together is through the return value, which is sort of a worm hole between the alternate universes, back to the main one. Does that make sense? In terms of your performance issue, I think it's likely that is unrelated to multiprocessing and something is "hanging" in one of your processes. Perhaps get it working first, then figure that out. Unrelated: You can use threads to do concurrent programming where everyone shares the same values (careful not to step on any toes), but that isn't as performant on multi-core systems as the multiprocessing module.
A lot of it is explained in the now top posts of the function. Basically her code is very Java like and not very Python like. The way some of this is laid out is very CS101 and shows that writer doesn't have a solid grasp on the language and should have probably done it in a different language. If I was interviewing someone that said they knew python, but submitted this code, I'd know that they are only learning the language, they aren't proficient in it. For example, the atuthor doesn't seem to understand iteratables and doesn't do a very good job at her property functions. I guess she has a grasp on what the block chain is at its core, but for a security whatever she is, she isn't padding the hashes, which would make it easier to break the chain.
**If I were**
Fine
I appreciate the write-up. This is very helpful. Kudos!
Ok. I was thinking more along the lines of it being slow or the user having to download a giant executable, etc.
Can you explain how to use it ? Anyway, I would'nt recommend to use such tricks in any Python project. - It is not readable and understandable easily - If/elif/else do perfectly the job
Sometimes that doesn't work, had to trawl through a list with a while loop because I was condensing items and itertools.groupby wasn't going to give me what I needed unless I ran through newly condensed list again. Doing everything in one pass complicated the code less. 
https://www.python.org/dev/peps/pep-3103/ - for some history 
I got to sit with Andrey at PyCharm and watch him work on this plugin. It's amazing.
Bad idea. As it's using a class variable it will cause hard to find bugs if you have another `switch` in the code called from one of the `case`s, even if it is in another function or method.
Enumerate is essentially: `lambda it, start=0: zip(itertools.count(start), it)` behind the scenes. That said, it's readability. It's much more obvious at a glance what you're doing than `for idx in range(0, len(it))` There might be specific cases where this sort of iterating is actually what you want, but most times itertools has you covered for odd needs. 
The idea of the Blockchain is that the data is immutable do to both the Proof of Work and consensus algorithms used. So anything that is append only you can store in one. The downside is that you probably don't want to store sensitive information in the public Blockchains, so you need to either encrypt it securely (ha, good luck once someone finds out your storing medical records, they'll do they're best to break it) or run your own side chain possibly with checksums stored in the public chains. 
No probs. Yeah it makes more sense to just stick with the API. I'm really liking Wiktionary's API, but I think Oxford will give much more coherent data. I'm thinking of the end user. So, the simpler, the better. I'm thinking CSV file, then simple automation of the lookup of each word through an add-on. Web scraping I can do, but using APIs I'm just getting up to scratch on.
Where does mining come into the picture?
It's a dictionary, containing two key-value-pairs. Both of the values happen to be a list, with 2 lists inside each. To fetch the requested buy and sell lists: spam={ u'sell_price_levels': [[u'A', u'B'], [u'C', u'D']], u'buy_price_levels': [[u'E', u'F'], [u'G', u'H']] } sell=spam['sell_price_levels'][0] buy=spam['buy_price_levels'][0]
Please do not use CamelCase. get_latest_block()
Check out [Scapy](https://scapy.readthedocs.io/en/latest/). From their introduction: *Scapy is a Python program that enables the user to send, sniff and dissect and forge network packets. This capability allows construction of tools that can probe, scan or attack networks.*
Correct me if I'm wrong, but `enumerate` is also a generator. That means that it doesn't load the whole list into memory, which `len` does in order to calculate the length. edit: formatting
Thanks! this looks really helpful :) Appreciate the time and effort you put in
Thank you! 
Kind of like the switch/case in C#. 
Sounds like you need to learn python. If only there was a subreddit dedicated to that, then maybe we could link it on the sidebar for everyone.
It seems perfect.. Thanks!! 
Is that code example given not clear enough? But I totally agree with you! It's something someone else has written and I just don't have the heart to tell them that it's stupid.
It's not quite the same; for example: message = {"key1": f(), "key2": g()}.get(key, "default") where `f` and `g` are some methods, then both methods will be called, regardless of what `key` is. This can lead to some problems if `f` depends on `key == 'key1'` to be true.
Yeah, I don't think nested "switch"s even work...
Gorgeous
Thank you!
This is a big deal, I'm very excited to start using this in my daily flow.
Python fidget spinner? 10/10
I've never had a chance to take that course, but I always hear it recommended. I'd like to point people to it when getting questions like this but I don't know what kind of prerequisites it requires. How math heavy is it?
FWIW, this *can* emulate a `switch` that only checks equality of hashable items. It fails when you want to check inequality or comparison (`&lt;`, `&lt;=`, etc) or when your item is not hashable (say, a list). Not saying it is a bad idea, but I (personally) do not see the advantage over `if,elif,else`
This would be better posted in /r/learnpython Also, if you indent with four spaces, it will code-format: import email import smtplib from email.mime.text import MIMEText from email.header import Header body = u'some crzy code' subject = u'some crzy code' msg = MIMEText(body,'plain','UTF-8') msg['Subject'] = Header(subject,'UTF-8') header_charset = 'UTF-8' #msg['Subject'] = Header(str(subject,'UTF-8'), header_charset) msg['From'] = "from@email.com" msg['To'] = "to@email.com" msg['Cc'] = "phonenumber@vtext.com" s = smtplib.SMTP("smtp.live.com",587) s.ehlo() # Hostname to send for this command defaults to the fully qualified domain name of the local host. s.starttls() #Puts connection to SMTP server in TLS mode s.ehlo() s.login('credential', 'password') s.sendmail("fromaddress", "toaddress", msg.as_string()) s.quit()
And C. And C++.
Hey jwink3101, Many thanks for your suggestion :)
based on my noob python understanding, enumerate essentially traverses the (linked) list from head to tail so it doesn't have to do a lookup every time you want to access the next element in your list.
I would argue `range(len(vals))` is more "readable" than `enumerate(vals)`
Fair enough. 
Can you also explain how altcoins like etherium is better than traditional bitcoin-like blockchain?
Also the example uses Python 2.... I don't know why people keep doing this....
Nope. I don't know much about all the stuff above this level.
It's a dictionary. https://www.python-course.eu/dictionaries.php
This is an exploratory blog post. The author was curious about something and shared what she learned. She said she just learned about block chains and wrote a Python script to learn about them. - No, the Python isn't perfect. It's not the most elegant, efficient, production ready code. - No, she is not an expert in the field. You do not become that without years for work experience. She just graduated. She has an academic foundation and is clearly ready to learn and get that experience. Snarky comments like this are the reason a lot of people, especially women, don't stay in STEM fields. The second they make an attempt to participate and be excited about something, they are teased and told it's wrong. Next time you feel the need to chime in with corrections, think for a moment and try to build someone's efforts up instead of knocking them down.
Oh another bot tutorial! **Really great! /s** All the moderators on reddit will be very happy with you and glad that you have given them shitloads of extra work. /s As if there weren't already more than enough shitty, stupid, annoying bots roaming in the wild. Most programming related subreddits have already banned such tutorials in order to keep the influx at bay.
Oops, missed that, sorry! Thanks, it’s a great post.
It's useful if your case items are dynamic. But yes, elsewhere a standard conditional would be best. 
Certainly in the case that you have a team that doesn't exclusively use Python.
yes...and thus my point was the subjectivity of "readable"
The scope of this animation library is a bit more narrow than you think: It's not concerned with drawing geometric figures or mapping graphics to characters - it's entirely character-level, so supports whatever charset you've set in your terminal. It's up anyone who implements it to extend it further if you want stuff like drawing or transforming primitives. It also more or less requires terminals with truel-color support, rather than indexed palettes like the 256 color palette. 
They see me postin'... They hatin'... Tryna control me they tryna catch me bottin' dirty... Ignore haters, accrue bots. PyLife, son.
The video does mention it.
Where? I just skimmed through it. 
Not slow at all. The native look is completely dependent on how much elbow grease you put into it. QML is compatible with both Android and iOS so it adapts the look to the os. The executable size I'm not sure about. Obfuscating it will help with the compression. 
One of the last such tutorials **explicitly** mentioned it **in several places** and pledged users to obey the rules. The result was more than a thousand new, stupid, commenting bots that did not offer even the slightest meaningful content and that had to be banned by us moderators. Non-mods never see the huge amount of extra work that the aftermath of such tutorials creates for us mods. We are the ones dealing with these things behind the scenes. We are volunteers who don't get paid, nor any benefits for that work. Yet, we do get boatloads of incoming reports and bots to ban on a daily base. From a moderator's point of view the last thing we need are more bots and more bot tutorials.
Bookmarking
Awesome! I have all three of the boards mentioned and use Pycharm for back-end work. Will definitely try this out tonight.
This seems like it would break with nested switches. Also it doesn't really provide the actual benefit of a real switch statement, it still needs to run through O(n) conditions in the worst case. So you might as well use if/elif/elif/else. Then you save an indent level too.
Can it test for &lt; and &gt; ? No? Then it's not a real switch, so what is the point, you can just use a dict. 
Hmm. ok danke.
A Twitter bot made in Python was my first personal project made using the language. I still look at the tweets from the bot to this very day.
And if you want a centralized one, you actually want a database.
Looks stylish as hell.
[Mocks](https://docs.python.org/3/library/unittest.mock.html). With them, you can patch the functions and methods of the external resources you're using. 
Right in the description
Petition reddit for a mechanism to ban all bots, then. Or use [BotBust](https://www.reddit.com/r/BotBust/). Don't discourage the share of information, you won't end up accomplishing anything.
Thanks a lot mate! I used the SB Admin theme by Start Bootstrap and then trimmed it down and repeated certain elements as per my needs. And then quite a few hours of playing with different color schemes. So pleased that people seem to be finding the appearance decent enough!
Is it more than the *print*s that don't work on Python 3?
fair point, but when we talk about idiomatic python code (in an effort to avoid these types of arguments), using enumerate is definitively more idiomatic, preferred, and the most readable choice. Just like you wouldn't use pointers for everything in C++ just because it looks more readable to Java engineers.
Does it change again with *number=101*? Somewhere in the back of my head I have something about an implementation detail that CPython always has the first 100 integers in memory so they can be accessed really fast. Can't find a source now :| The difference in timing is small with this one loop but many systems have many more objects and sure more than one for-loops like this and the impact will get noticed sooner or later. This is why I hope that the *enumerate*-variant gets more known.
Learn a gui library, like pyqt. 
Do you want to pull down the whole chain directly? Or do you want to view info about certain blocks. If you just want info why not use the block chain api? Downloading the blockchain would be a pretty hefty task imho. I’m not too familiar on the API (just started using it myself) but I know there’s a ton of documentation. You just gave me a great idea for making a library dedicated to scanning blockchains actually lol. Might jump on that now. 
Its not hard, I use qt.
Would you recommend going at that via QTCreator/Designer? Or by coding the UI myself. I feel like using the designer is kinda cheating but makes things so much easier. 
Hey mate! I had an introductory course in Python in first sem in college last fall and that forced/pushed me to get familiar with the language after so many months of wanting to learn Python but not getting out of the comfort zone. But what catalyzed my interest in Python were a couple of books. One was Black Hat Python (I found hacking to be cool back then, and am still enamoured to it somewhat) and I got a very small glimpse into the power of Python -- such small things for newbie such as realizing you could send a web request and download Google's homepage without actually opening up the web browser greatly fascinated me. Another thing was that I always harboured a deep interest in automation stuffs -- wanting to automate different things on phone and PC. The thing is I had wanted to do that for years but never actually did anything tangible about it. But this time I thought, well let's look into how this automation dream of mine could actually be implemented. I surfed to the python.org website and there I looked at some of the "happy customer" stories and heard the name of Beautiful Soup module for the first time. I searched a bit more about Beautiful Soup and automation using Python in general and somehow came across what I consider is a gem of a book: 'Automate the Boring Stuff with Python'. I had already grasped the basic fundamentals of Python by then after a full semester in the introductory course and I felt somewhat confident (and more it was about the thrill for novelty and the possibility of learning/doing something exciting) about skipping the first part of the book. And then it was all thrill and bliss for me -- learning the different 'powerful' things I could using Python thrilled me to the core and I got deeply excited about implementing some of my ideas for automation (eg downloading all podcasts on a particular topic from a website) and as I learnt new things in that book it stoked more fire to my imagination. It affected my grades badly that sem but it laid the modest seed for my interest in learning new tools in Python (and programming in general) and exploring their capabilities by building new personal projects that interest me using them.
I prefer PyQt5 for desktop applications. There are also Tkinter, wxWidgets, PyGtk/PyGiobject and maybe Kivy.
May be, can't control that. 
Using the right tools for a job isn't cheating.
We have a lot of similarities lol, I'm currently taking an introductory course in my final semester and automation fascinates me, I'll definitely take a look at that book. Thanks a lot! 
I do not see, why this personal problem should stand in the way of others learning something. The video creater is not to blame if kids do stupid stuff with it. 
Next time before you ask such a question,you should do your research very well,before start throwing questions over here ok .
There's probably a better subreddit for this, but I just learned how to use Heroku the other day to run a Twitter bot, so here you go: I'm sure there's some sort of better setup that you can have, but if I recall correctly, you only really need three files: * script.py This is your script that you wrote. * Procfile This should contain only the line worker: python script.py * requirements.txt This is all of your required modules that you got through pip, one per line. You can omit this if you're just using the built-in modules.
I do not know why the OP decided python as being a option. If i have an understanding python would only get you so far, thus at a certain point you would have to backtrack to a differant language entirely to further your studies
I don't believe that a single pip command works, but you can just download a wheel file and use `pip install path/to/download/dir/filename.whl`.
Not using `pycharm` but still nice 
I have 16 bookmarks in my browser to Python switch/case. Given that none of them seem to have taken off I conclude that people don't really miss them.
I wrote a lot of Python-Qt desktop apps, and I think I'm far more productive writing by myself the UI code. No qtcreator/designer. You just need to be confident about the relation between widgets and layouts, and learn (through pratice) the most common widget's method and attributes. Just my 2c.
Python python everywhere! Didn't know these devices exist, awesome
So, in an exaggerated manner: the one who posts detailed plans for a nuke is not responsible if countries go up in smoke because it's up to the people not to do anything stupid Nothing should stand in the way of others learning something... ---- In reverse logic: why are internet providers and website hosting companies held liable when their customers store illegal stuff on their hosting plans?
Thanks for the advice, however, my goal with the program is to make it almost completely from scratch.
The mere fact, that reddit allows bots, makes your argument not too strong
What is the job?
All docstrings now inside. Also started enforcing pep8 (some ways to go before its done).
Giving a +1 for PyGtk/PyGobject - especially if using Py3. If still using 2, then wxPython would be worth looking at too.
I don't know, maybe I'm being too idealistic, but if I was to publish anything and sign it with my own name, than I'd want to make sure that everything is 100% flawless regarding the content and the presentation of the article. But of course, people have different standards, I understand. As a reader on the other hand when I see a code like in this article, it makes me question the actual author's knowledge on the topic. And why would anyone want someone learn from a flawed source? Why aren't we pushing the quality of sources, so that people learn on the subject and at the same time good code practices? I stand by my opinion that there's probably plenty of better articles on that matter and I'd suggest to read about it someplace else. 
only if you don't know what enumerate means.
i dunno, seems like theres not much more than that, that isn't a bunch of socio-economic babble
Very nice. Sadly I did not know many of the tools you are using. celery-beat? Good news is that I will look it up and this will be what I learned today. Cheers. 
It creates only one object for ints in the range [-5 to 256](https://github.com/python/cpython/blob/4830f581af57dd305c02c1fd72299ecb5b090eca/Objects/longobject.c#L18-L23) and all instances are just references to the same object.
Isnt working for me.. I get "Packages required not found" even though I installed them and they succeeded :(
If python were to adopt a real `switch/case` syntax, wouldn't that *also* be O(n) worst-case? I guess it could be done in C more easily than a `if/elif` block, but O(n) regardless. It would be *faster* is C but that doesn't change the complexity. Or am I missing something?
This was an awesome post, thank you so much. 
And when the code reads: for i, value in enumerate(values): You'd be hard pressed to not know what it means. But in the end the cat is still skinned.
Yeah, switches are implemented by jump tables or hash tables (dictionaries, basically) to get O(1) or O(log n) performance, depending on the language and the compiler. This is also why most switch implementations have restrictions on what types you can select over.
Oh, so would a "real" switch still not work for `myvar &lt;= 10` type statements? Or would that eval to `True` which is hashable? Anyway, thanks for the info. I didn't realize they were *not* O(1). I wonder how much that really would save though? The `n` is the O(n) for `if/elif/else` is the number of those statements and not some array size. I do not imagine many cases where the performance would make a difference.
Fanfreakintastic.
You mean like this? https://www.reddit.com/r/Python/comments/7pmvku/my_first_twitter_bot_just_made_its_debut_post_ive/ This dude is using PIL to create gifs 
With 2 versions of python installed you probably have 2 versions of pip as well; you should verify that pip is working with the correct version of python; try running `pip -V`. You should verify that your shell's current working directory is the one holding the wheel file. BTW, given your setup, you might benefit from the isolation given by a virtualenv. 
How did you learn python, web programming? If so maybe give Electron a shot. 
&gt; Srsly? Don't teach this! Why not? for i in range(1, len(self.chain)): currentBlock = self.chain[i] previousBlock = self.chain[i-1] vs. for idx, val in enumerate(self.chain): currentBlock = val previousBlock = self.chain[idx-1] Why using enumerate here is better (in terms of readability)? 
That's why I said "along the lines" of a raspberry project, I'm gonna edit to make it clearer, thanks.
Google codingbat and do their practice problems. Good stuff to get the language under command 
[@property's latest tweet](https://i.imgur.com/3tls3HR.jpg) [@property on Twitter](https://twitter.com/property) - ^I ^am ^a ^bot ^| ^[feedback](https://www.reddit.com/message/compose/?to=twinkiac)
Thanks!
This is the correct answer. Enumerate is the pythonic way to walk a list with iterator access.
Check out /r/learnpython
Seconded. Discovering mocks fundamentally changed everything about my unit tests. [Here's the tutorial](https://semaphoreci.com/community/tutorials/getting-started-with-mocking-in-python) i followed when i was getting familiar with it.
WOO! That's super exciting!
The first question its which is your final goal, beacause in the tech industry are too many options to build one thing and know all the options its too hard for a begginer. Methods : Practice, obviusly. Resources : Depends on what you want to do... But its important for all to know algoritms and DS Greetings 👍
People tend to usually ask these questions as how to prevent them. Networking Books are probably a good start though. Foundations of Python Networking by Brandon Rhodes and Black Hat Python.
Thanks mate!
Thanks mate!
Well I got well and truly bitten, so here's my (I hope) final attempt. def calculateForwardTarget(inputArray, balancePeriods): n = len(inputArray) targetBalance = np.zeros(n) for i in range(n - balancePeriods): targetBalance[i] = inputArray[:balancePeriods].sum() inputArray = np.roll(inputArray, -1) for j in range(1, balancePeriods): targetBalance[i + j] = inputArray[j: balancePeriods].sum() return targetBalance
Hey is part 2 available yet? This post is awesome! I can't wait to try it out :)
Thanks for the link, I know the -5 isn’t arbitrary, but it sure seems that way at first glance. 
This is faster than using the index directly? Or is the only goal here clean code? 
Dude this looks damn awesome! Great job! Is qt fairly easy to work with? I've made a GUI for a sizing calculator at work with tkinter and it looks like ass. 
Neat article but some of the code is odd and could be a bit better I think: for i, key in enumerate(words): if n_words &gt; (i + 1): This seems to try to get a list of words without the last one. This would be a lot easier: for key in words[:-1]: Next, have a look at the wonderful [defaultdict](https://docs.python.org/3/library/collections.html#collections.defaultdict) in the collections module. To replace all the `if key not in chain` lines.
I heard about this book. I will go check it out. Good one!
I just read the first chapter. This is great especially if you are new to python and programming. Thanks
As someone who just decided to learn python as a hobby, thanks for a great post showcasing what I too will be able to accomplish if I stick with it. It's always nice to see practical applications! Very slick looking site. I'll be checking it out for sure.
I am not sure if this is faster per se. The slicing will create a new list but we could simply make use of an [islice](http://pyfound.blogspot.de/2017/09/join-python-developers-survey-2017.html) to avoid this. My two cents is that this code is more direct and easier to understand as it avoids the lookups and presents the user directly with the objects required in this context. So, yes, you could say this is about clean code. 
So a little background, I recently graduated college with a completely unrelated degree and am in a spot where I A) want to continue learning something useful and B) would like to familiarize myself with the basics not just of python but of computer programming so I can make more informed decisions of where to proceed from there and most importantly C) I’ve always been one of those people who wrote it off as something that was “too hard for me” and have watched from the sidelines as people around me are creating awesome things and I’ve always kicked myself for not being more tenacious when I was 13 and first tried to learn Python. My first motivation for learning how to code is that I would eventually like to enter some realm of cyber security, however, I first would like to learn my way around before I really jump into a specific corner. 
Awesome thank you!
I believe this variant with enumerate would not improve readability that much and you would still have some lookup code wich I'd try to avoid. See [http://www.reddit.com/r/Python/comments/7qho7w/-/dsq1p8j](this comment) for a better solution.
Thanks mate! Yeah even I didn't know about any of those libraries an year ago. Celery is a very handy asynchronous task queue framework for running tasks in the background. Have a fruitful day!
Yes, I guess Mock is the standard for such cases. Thanks!
&gt; Internet providers and hosting companies are immune under Section 230 of the Communications Decency act of 1996, Ah yeah wonderful: the US is the whole world...
Nice man! The site looks sleek. Currently I'm at same position as you were one year ago. Hoping to make some progress this year :)
Give me some counter examples then. Yeesh. 
This is great! Keep it up!
I think you mean, "Have a vegetable day" with celery (°ロ°)☝
If a library doesn't exist, maybe we can make one together. I just want to get the total volume of BTC transacted each day, for the last few years. (Hopefully I can get the sum of fees too, and convert them both to USD based on historical rates)
Hmm but this would still require the lamp module to be stopped but I like the general idea of it. Splitting generally seems like a good idea though. In the meantime I use ssh-buttons to call a shell script, passing my arguments to python which already makes it a bit tidier since I only have to sudo the script instead of killall &amp; script. The daemon is now started at boot via systemd, and since I want the alarm-clock by default the script is started as well in alarm-clock mode. Now that I have found out how to prevent the deamon being killed with the python script it's a lot neater already.
This is a wonderful and inspiring tale, and I think the site works wonderfully! I'm curious how you have it deployed as I am looking to create a site utilizing Celery as well. Did you use Heroku or AWS, or are you running it on a personal machine? 
Shouldn’t be too hard. I’m more than willing to take that kind of project on 
I am on mobile and it's a lot to type so I would like to link much SA question: https://stackoverflow.com/questions/48257870/headless-chrome-with-selenium-can-only-find-ways-to-scroll-non-headless Running chrome in headless, adding parameter (--headless) will launch chrome without the GUI, you won't see the browser anymore while it runs your script. This is particularly useful for running your scripts on a (linux) vps where there is no GUI to start the browser in. Only terminal command line. I also have spender the last week with selenium in several tests. I am using execute_script to scroll down using javascript. But it only works when I am running it with chrome visible. In headless mode (non visible) the page doesn't get scrolled down. 
Sorry, see post above. 
The lamp module doesn't need to run except when used, but you should write it in a way that doesn't require it to be deliberately killed. Just have it call the interface module with some parameters depending on the requested action and then let it stop execution.
youtube-dl is excellent.
Which tools did you use to design frontend ? And what is celery if you don't mind explaining a bit. I am currently trying to develop a site too and have trouble designing frontend.
Thanks mate :)
I've never looked at the detail of blockchains before. The actual data structures shouldn't be too hard, right? It's basically just a one way linked list. I just don't know which addresses to download stuff from.
Blockchains are just giant ledgers. Nothin more than a massive ass json file. All you’d have to do, is set up a for loop which takes the json file, turns it into s dictionary/pickle file, and then read each block starting at the genesis or whatever you picked and then work from there. So each block you have would just be an array or some other data structure. I’m thinking a legit dictionary since these json files do get pretty hectic sometimes. 
The whole way through it’s all human readable. But if you pickle them then it becomes binary. If you’re just lookin to do BTC if you look up bitcoin api you should find the docs for it. When it comes to using it you’d need to use the requests module (standard lib) to call the api for your json files. 
Hey! I deployed my site on Digital Ocean using a fresh Ubuntu image. Digital Ocean has very hood tutorials and support for helping the devs set up their project. And their starting plans are cheap as well. Though heroku is a good option as well though you'll need to go through their tutorials and docs a bit to deploy properly.
Go to r/learnpython for questions in the future, please. Look inside the `print()`. You're printing a string, `'element'`. You want to print the variable, so without the quotes.
I had an exam just a day before PyCon. I gave the exam. Traveled all the way from ISB to LHR overnight on bus. Attended the conference. Traveled all the way back overnight and appeared on my second exam.
Strongly agree with him mock for unit but consider using an actual setup with constant test data if you're planning on integration tests. Mocks can only get you ai far 
Thanks a lot :)
Looks great but menu button looks a little bit big on mobile.
Nicely done man!
I'm curious about this as well. 
Glooey is interesting, but it's focused on games. It may not be what you're looking for if you're making a desktop application. https://github.com/kxgames/glooey
Try out tkinter. Sentdex has an excellent tutorial series on it to get you started.
I had this issue in the past while working on a mobile application. My solution was to have two instances of audio outputs leapfrogging each other and slightly cross fading the two sources as they meet.
Thanks for sharing this man this is cool!
Yes, markov chains are traditionally used for modeling probabilities.
Hmm... thanks for sharing, but I guess I'm confused here. You don't want to make a script that would generate csv to be imported by anki, but you want to create a (python) addon that will be able to check any word in any deck? Please don't waste your time answering to the question above, just code. :P
-&gt; % grep youtube-dl ~/.zsh_history |wc -l 459 
/r/learnpython 
You're retarded and your program is worth no more than an elephant's asswipe because: - It looks ugly. Add spaced around those frigging operators (`n = int` instead of `n=int`) - Spell correctly: wtf is `yor`? Your code editor probably has a spell check feature. Use it. - Validate your input. You asked the user for an integer. `-1` is a frigging integer. So is `0`. Does your code for them? No! Collatz conjecture is for positive integers. Always use a `please` whenever you ask for input. Be frigging polite! n = int(input('Please enter a positive integer: ')) if n &lt;= 0: print('You frigging retarded dude?') else: # ... - wtf do you need that `original = str(v)` for? That's not how you print. Python's print statement automatically converts variables of non-string types to strings before printing (if the object supports a `__repr__`). Also, it automatically adds spaces between the arguments (can be disabled). You should've said: original = n # ... print(original, 'satisfies the Collatz conjecture!') instead of v = n original = str(v) # ... print(original + ' satisfies the Collatz conjecture!') - Don't repeat code. See that `if-else` statement? Both of them have that frigging `print(n)`. Just move that print statement outside the `if-else` block, since it needs to be executed in either case. - Use integer division. In python3, `n / 2` is floating point division whereas `n // 2` is integer division. Here's a cleaned up version: print('''This program will test whether an integer satisfies the Collatz conjecture. It will print the value of each iteration as well. ''') n = int(input('Please enter a positive integer: ')) if n &lt;= 0: print('You frigging retarded dude?') else: original = n while n != 1: print(n) if n % 2 == 0: n = n // 2 else: n = 3 * n + 1 else: print(n) print(original, 'satisfies the Collatz conjecture!') del n input('Press ENTER to quit.') -- -- PS: Well done! Even though you're just starting, you have grasped quite a few of Python's features. Multiple line strings, `while-else`, `del`.. most beginner programmers are not aware of them. You've made a wonderful start. All the best with your programming journey. :)
This is exactly the type of thing that both turns me on and off about getting back into coding. So much of it is following logical steps and solving puzzles and problem solving, and so much of it is knowing what libraries and tools to use that I'd have to find and couldn't create on my own in a million years. Awesome job dude.
Python prefers snake_case over camelCase too, but yes 
Close, Len doesn't save the list as it gets it either, and that wouldn't make it significantly slower even if it did. And range is also a generator. If I had to guess, it's just enumerate being faster since it's a direct call to a C functions rather than two C calls linked together in python
Do you have an example of this in Python? That would be very interesting to me. 
And you did it all adhering to the PEP8 style guide! But in all seriousness excellent job! You can tell you are passionate simply by the fact that the website is mobile friendly. Keep up the good work!
qt is the only thing iv'e tried for GUI's and i have to say it's quite easy as you can use qt designer to make your gui's and then just save the file and do pyuic5 -x gui.ui -o gui.py to get your gui code and see exactly how it's done. If you know c++ the documentation is good too(although i have to admit iv'e almost never used it) When you get into more complex stuff like threads and resizable stuff etc then is the point when you should think: "ok i need to get the basics down" and youtube and stackexchange etc is not bad for that. qt designer also has some "quirks"(bugs) which you might run into when you start doing more complex stuff but honestly im amazed they have been able to make such an amazing program to begin with.
Very nice. I'm currently working through the django tutorial in the Crash Course in Python book, and this gives me hope that it's all worthwhile.
Wow, very well done (says the guy with 30 years of programming experience).
Sorry about that. I wont post any questions here.
Yeah, it's not a huge deal. I'm not aware of any switch implementations that can deal with inequality-type conditions, but it might be possible.
Supersmooth, great feel, bookmarked!
I have used pygame but that only takes wave files which is a slight challenge. (okay, you can use mp3 with music but you can forget about seamless playback) You'll also have to get creative with queue and seamless playback. You will probably have to write that yourself. I know this isn't a best answer but my policy at work is to spit out ideas even if they aren't the best; that leads to is coming up with the great ones.
You might want to consider your code architecture for a while. A proper architecture can make code much easier to test. In general, your code will consist of 1. Reading from some external service (e.g. databases, external APIs, or even stdin) into Python objects 2. Performing some logic on those Python objects 3. Writing those Python objects into some external service (e.g. databases again) A good way to structure your code is to separate the layer that interacts with the outside world (#1 and #3), from the layer that performs business logic (#2). This is the general idea behind the [ports-and-adapters architecture](http://www.dossier-andreas.net/software_architecture/ports_and_adapters.html) To use an example, a generic authentication flow might consist of - a function that fetches a row from a db using a username and returns a User object, and - a function that takes a User object + a password, and decides if the password matches the User's password hash. If implemented this way, notice that the second function has no dependency whatsoever on the database - the User object can come from anywhere! That makes writing unit tests much easier - no need to mock anything out. (I would argue that the first function shouldn't be unit tested at all, for the same reason we don't unit test network requests)
Use numpy, convert the PIL images to arrays and implement your own transition which gradually replaces the first arrays' contents with those of the new one.
Thank you means a lot. I think that py4e, is the best to start with I really like the coursera version I've learned the basics there and all the way too accessing data structures. You can take the coursera one and get a certification or go to py4e.com and take the free course 
I’m not yet very familiar with python, but I’ve done this in C++ and one of the best ways to do this is with a double buffer and multi-threading. You have one thread filling one of the buffers and another thread processing the samples. If done right there is zero lag because filling the buffer is much faster than reading/emptying. Best practice is to use the consumer-producer pattern. 
Thank you. // YW // // // //
As much as I like PyCharm (I’ve been a happy buyer of the Professional edition for years), I feel a bit sad that this will likely eat away the market for the lovely [mu editor](https://github.com/mu-editor), by Nicholas Tollervey et al. It started from nothing and now it gives a very simple and polished experience for kids using the microbit.
`next` only works on iterator objects, and lists/tuples are not iterators - they're _iterable_ meaning they have an `__iter__` method that returns an iterator, but that iterator is not the list object itself. In fact, your code can be majorly simplified by just doing def __iter__(self): return iter(self.channel_list) And not defining a custom `__next__` at all.
Since you asked feedback I'll point out a couple of things I noticed on a quick glance hopefully as a constructive criticism. Form validation is a bit bad with just a redirect to plaintext error page. On mobile Safari: Social media buttons loose CSS Login form stacks badly without a margin 
Thank you. Its working normally with this correction. But I dont still understand why "next" method works on object itself in my code.
if I understand you correctly, I need another class whose name is lets say 'iterator' and __iter__ method should return this iterator class' object To sum up, only __iter__ return type objects can use __next__ method. Am I correct?
Agreed. My beef with upython was it's lack of decent tooling. This makes it more plausible my next wifi smoker will be python instead of lua. 
I did not know that. Thank you!
MOck and magic mock. Remember unit tests should be testing 1 thing and 1 thing only and should have no "real" decencies. mock.all.the.things() 
sure but I'd like to have some nice hosted reports and github integration, a tag, etc. All the same features as Coveralls essentially.
Learn to use a god damn period and full sentences before posting such stupid shit
Can you post a link to the code?
Can we see the code?
Why does the developer need to know about and manage an integer index? What value could that possibly bring? Just iterate over the objects directly.
I think this would go a lot quicker if you posted some example c code. 🙂 You can read the binary data all at once into a string and then splice it by size or delimiter. Then you can make a new list of objects out of the list of substrings.
It's common C that every C programmer has written a million times before. I simply asking what the common patterns are for handling it when converting to python. io.BytesIO? Keep an integer position in a bytearray? ...? Nearly everything about the binary data is dynamic. There is no trivial size or delimiter to splice on.
Looking for leads in Minneapolis. For the last ~3 years I worked as an automotive parts e-commerce manager, primarily utilized Python and SQL to sell General Motors auto parts on Amazon, eBay, Walmart, and also on our own website. I created my own billing software, inventory parity software, and gained a lot experience utilizing several API's to do automated inventory management. I am conflicted in marketing myself, I am unsure if a developer with a decade of management experience, or a manager who can build his own tools is more useful. Current location is Oklahoma, but I am moving to MN in March. 
Are you parsing binary C data? In that case, you might want to look into [Kaitai](http://kaitai.io/).
Insults are not necessary or helpful.
I'm working on an auto-selling bot for a client that sells a set amount of btc for usd every x minutes according to the parameters they select. Project uses selenium webdriver to navigate the exchange site. 
Software developers can be divided into: a) Those who write imperfect code that is hard to read, doesn't meet business requirements, and/or takes too long to complete. b) Those who write technically flawless code that takes too long to complete and/or doesn't meet business requirements. c) Those who write imperfect code that nevertheless meets business requirements and is done on time. d) Those who write flawless code that meets business requirements and is done on time. In the real world, most managers/companies can't tell the difference between c &amp; d and wouldn't care even if they could tell the difference, and they definitely prefer either of those over a &amp; b.
grep -c
Going to recommend https://houndci.com/ then.
Thanks for your comment! I work on macOS and Linux machines so I'll be happy to find OSS contributors who develop on Windows and who are willing to debug the issue with connecting to devices via `pyserial`.
Hi, I'm a 1st year cs student and I really wanted to buy those books but I totally missed the bundle due to exams. Would it be possible for you to share them with me (through Google Drive for instance). If you want I could even send 15$ to the charity listed on Humble Bundle to make it fair. 
Maybe you could parse the binary records into namedtuples/custom classes, put them in a list, and then it's all normal python from there on. There's even stuff in the stdlib for this: https://docs.python.org/3/library/struct.html
This is a pretty good advertisement for Python 3. It makes me wish I could use some more of these features every day but, alas, I write all of my codes to be 2/3 compatible since I can only reliably assume I have 2.7 (and even then, it is usually an old version). Maybe some day.... (but at least until then, my codes will run on both)
Cool project. 
I will nitpick one thing: &gt; python 3.6+ dicts behave like OrderedDict by default **NO**. I mean it *is* true, but people need to **stop** giving this advice. It is super dangerous to assume a regular dict is ordered unless either of the two conditions are true: * You use an OrderedDict, or * You use 3.7 (still unreleased) * even then, I would say that unless you explicitly check for python 3.7 inside your code, do not make this assumption. "Explicit is better than implicit" Before that, it is a bad idea! And it is bad advice to give that things are ordered when the API docs *explicitly* say not to rely on it...yet
source: https://gitential.com
Deployment manager for an RTOS using paramiko and blessings
At the very least you could omit the currentBlock = val line. Or do as suggested elsewhere in the thread: for previous_block, current_block in zip(vals, vals[1:]):
I’ve saves this post. A lot of interesting stuff. I am a total newcomer to python, and have a long way to go, so I will use this post as inspiration. Any tips on fundamentals/ projects to start working towards? ( I am a goal minded person )
Thanks for the feedback mate! I'm thinking of putting the recent posts above the events section. Colour scheme is such a pain for me! I'll look into improving the website appearance later though for now I have my hands full with working on other pressing needs in the website and other obligations such as college.
Import pandas as pd df = pd.read_csv(“filename.csv”)
Don’t they only have Flake8? It doesn’t catch everything that pylint can. 
Yeah so true. I also feel that there are these two major components in software development. Being able to solve the given problems with original ideas and logic, and the other part where you want to avoid reinventing the wheel and use existing solutions to fasten the development. And I feel both of these skills are absolutely vital in order to build things as yiu can't as far with just one of them, especially when you are working alone or in a relatively small team.
The fix is available in version 1.0.3.
I'm new to python and try to build a chess programm from scratch. You can look at the current state here, feedback of any kind is welcome :) https://github.com/tweakimp/pythonchess
What about selling btc at market providing API? Poloniex.com comes to my mind...
still learning the basics..
Thanks a lot mate!
Thanks a lot mate!
Omg with_name/suffix will change my life. Thank you for so much for this.
Ok I will have a look at that
&gt; Is it even possible to scroll headless??? Caveat: I haven't used it. I looked at the docs, and taking a screenshot in headless mode requires you to provide a window size. That implies to me that there is no window size under the hood. Can you provide the error that you see when attempting to scroll?
Oooooooohhhh, now I get it. Hmm, if you're reading the whole thing in memory anyway, then wouldn't it be easier to use a bytearray or memoryview? This way you could index it anywhere you wanted, instead of having to seek (or does BytesIO implements []? I don't think so, anyway). And now that you explained it in more detail, I do see the point of comparing the bytearray/memoryview index to a C pointer, it does makes sense. The other thing that came to mind is, since it's a parsing problem, using a state machine to control where you are and what you should do when 'reading' some byte sequence could help keep things under control, too, I think
Learn Django instead and make a simple website even if you serve it locally.
They requested I use a specific site, which does not have a publicly-exposed api. I did reverse-engineer their http requests, but figured this was a better way to go so they can check in every so often on the program as they please. The http requests don't provide much information in their responses.
Creating a python-libvirt wrapper.
I'm working on building out a wedding website in django based on the post found [here](https://www.reddit.com/r/django/comments/6i77zk/a_django_wedding_website_and_invitation_guest/) by /u/czue13
are your values sequential in nature? that is the purpose of a probabilistic graphical model.
Thanks mate :)
Which exchange are you working with?
vcoinexchange
Yeah SSL is definitely the way to go, I'll be looking into that soon, though I wasn't sure it was easy to set up and didn't want to deal with additional complexity at first.
Trying to learn some machine learning techniques with crypto time series data sets I've been generating for the past few weeks. Yesterday was clustering. I'm having a hard time finding a good way to represent the data in a meaningful way though. Like in physics often you represent trajectories in a 'phase space' where the particles position and velocity is the coordinate and you trace out a curve as the particle moves in a force field. That was one idea but the data doesn't seem to be well ordered/clumping with that representation. If anyone else has some ideas for time series analysis, I'd love some input!
So it's a C-array of structs? NumPy can handle that with structured arrays. And get rid of that nasty pointer math and replace it with array indexing. 
Hmm, I'll try to look into that somewhat later once some of the more pressing issues are addressed.
The reason I didn't make the repository public is that the Django app that I've written isn't a packaged and reusable app, neither is it easily customizable or anything. It's just a real world project dealing with the specific problems at hand, without reusability in mind at that moment. It's in fact one of the things I want to do more or improve on: writing more reusable and refactored code so that the parts of it could be more easily used in other projects by others as well as me.
[removed]
Open CV for analyzing human behavior. Python is amazing. Doing this in C++ would be not enjoyable. 
Where did you start? I started a few years ago and kicking myself everyday for not carrying on. I have a few ideas in mind for python projects but just cant get over a particular hump! I am leaning towards learn python the hard way or codeacademy. I am a problem solver at heart, and figure I may be a good coder but just can't focus long enough to stick at it when it gets a bit more difficult. Any hints to get over the hump?
Hey mate! Thanks for the appreciation. I was more or less at the same position as you an year and a half ago. I will repost what I wrote elsewhere in the comment about how it all went about for me: &gt; Hey mate! I had an introductory course in Python in first sem in college last fall and that forced/pushed me to get familiar with the language after so many months of wanting to learn Python but not getting out of the comfort zone. &gt;But what catalyzed my interest in Python were a couple of books. One was Black Hat Python (I found hacking to be cool back then, and am still enamoured to it somewhat) and I got a very small glimpse into the power of Python -- such small things for newbie such as realizing you could send a web request and download Google's homepage without actually opening up the web browser greatly fascinated me. Another thing was that I always harboured a deep interest in automation stuffs -- wanting to automate different things on phone and PC. The thing is I had wanted to do that for years but never actually did anything tangible about it. But this time I thought, well let's look into how this automation dream of mine could actually be implemented. I surfed to the python.org website and there I looked at some of the "happy customer" stories and heard the name of Beautiful Soup module for the first time. I searched a bit more about Beautiful Soup and automation using Python in general and somehow came across what I consider is a gem of a book: 'Automate the Boring Stuff with Python'. I had already grasped the basic fundamentals of Python by then after a full semester in the introductory course and I felt somewhat confident (and more it was about the thrill for novelty and the possibility of learning/doing something exciting) about skipping the first part of the book. And then it was all thrill and bliss for me -- learning the different 'powerful' things I could using Python thrilled me to the core and I got deeply excited about implementing some of my ideas for automation (eg downloading all podcasts on a particular topic from a website) and as I learnt new things in that book it stoked more fire to my imagination. It affected my grades badly that sem but it laid the modest seed for my interest in learning new tools in Python (and programming in general) and exploring their capabilities by building new personal projects that interest me using them.
Are you asking for help? What are you stuck on?
What have you done so far?
A cryptocurrency entirely in python, as a proof of concept and to teach about cryptocurrencies. First time using flask and several other things, it’s not easy but I’ll get there someday ! 
Yeah they are. 
looks like someone wants their homework done...anyway i alone can think of multiple ways to do whats asked...post us what u have, something u understand, and we ll gladly help you
 from numpy import loadtxt data = loadtxt("filename.csv", delimiter=",")
Trying to make a custom media player for various movies and tv shows. Something like a custom made python netflix. 
You can use: https://www.codacy.com/ https://codeclimate.com Not sure if it's pylint vs. flake, but I use both. Coveralls is nice, but CodeCov is way better for understanding what's going on with your coverage. I don't use it because I haven't figured out how to make my integrated Travis status not "crash" despite the Travis build working fine; other people manage though. https://codecov.io On either Codeclimate or codacy, I haven't figured out how to actually upload my coverage, but you can do that too.
Thanks for the recommendation. I will check it out. The advantage the C pointer has is that it can serve two purposes as an index and access to the actual data. It does seem io.BytesIO is the closest equivalent where I can have a single object that is capable of doing both with a little bit more work.
1: no 2: /r/learnpython 3: no
Looks like this might actually just be an issue with pip on ubuntu. By default, its installing to .local/bin/bridgy, which isn't on my path. Doing a sudo pip install bridgy works, but obviously isn't recommended. Here's an explanation of that: https://github.com/pypa/pip/issues/3813 So you might need to update your path if you're on a deb system.
It's really easy to configure, just follow the letsencrypt instructions (I've only done it on Ubuntu, so search for a letsencrypt example with your particular operating system). Basically you just run the certification program and it installs some SSL files on your system and updates your nginx configuration to use those keys to enable ssl on your site. Doesn't require any code changes or anything.
I'm doing something horrible! I have to develop a script to download the emails sent by "WebHelDesk" (solardwinds) to analyze the subject and run a workflow in BAO BMC via APIRest. :_(
Indeed there is a way to configure a jumpbox/bastion. From the ~/.bridgy/config.yaml: # if you need to connect to aws hosts via a bastion, then # provide all connectivity information here bastion: user: some-user address: some-dns-host-or-ip # optionally provide ssh options for the bastion connection options: -C -o ServerAliveInterval=255 -o TCPKeepAlive=yes -o ForwardAgent=yes -p 22222 I'll update the docs to show this later today
Working on a 1v1 battle system to implement into Ren'Py.
Hi! Awesome site, what resources helped you get where you are in terms of programming? Specifically, what good Django references would you recommend?

Binary translated: Thanks. Sorry for not being good in literature upto your standards.
Thanks for your feedback! On the first run if the ~/.bridgy/config.yaml configuration is missing it will create it... I should probably do this in a more obvious way, such as add it a aux data to pypi (thanks for the suggestion!). As for your other questions: * Bridgy does support connections via a bastion, I just added the documentation you were missing. * Python 3 support: yeah, looks like the entry point is not working as it should. I'll take a look later tonight to reinstate python 3 support. 
If that's just a number of authors extracted from git commits, it doesn't necessarily mean there are more contributors now: previously patches were often applied by Python maintainers, so there were maintainer's credentials in git log, not patch author's credentials. Random pre-github example of this: https://github.com/python/cpython/commit/40fa26606d0dc3adfa05ae4a760b3b6b189df075.
nice! You should probably suggest using `-J` though it's really good :D Also, is there support for multiple bastions? I have one bastion per VPC.
fyi you are replying to me not OP
Yeah. I saw that when I pressed post. Then something came up. Thanks for the FYI. Hopefully op sees it too
The `'.'` refers to a marker, not a linestyle. Valid line styles are: `'-'`, `'-.'`, `'--'`, and `':'`. If you want no line, but dot markers: plt.plot(data, linestyle='', marker='.') If you want a line and markers plt.plot(data, linestyle='-', marker='.') 
Sounds like a good idea! I'll take a stab at what that could look like tonight
I don't use pyinstaller, but with cx_freeze sometimes I have to manually include numpy and pandas .dll's. It might be something like that. You could also try putting from pandas import _libs Occasionally with cx_freeze it has trouble automatically getting all the needed imports.
why is there the spike and then declines in code volume?
Hey, thanks for the appreciation! The books Learning Python and Programming Python by Mark Lutz are very very good and very comprehensive. Each of them are about 1500 pages long though and it would be very unmotivating to try to read them from cover to cover. That's why I greatly admire the book Automate the Boring Stuff with Python by AI Sweigart (esp the part 2 of the book) which gives some glimpse of different interesting things you can do with Python and then you should just dive a bit more into some domain in which you want to create some stuff and google the relevant libraries and read the docs, and only learn the relevant topic from a more comprehensive source like the books by Mark Lutz mentioned above. For Django I believe once you finish the polling tutorial on their site you could dive right into a peoject and look for solutions of the different problems as you encounter them. And the Django's docs are a very good source for finding solutions where you are stuck.
Pick the smallest of the projects that you would like to build and go for it! It won’t be easy but you’ll learn a ton of stuff along the way. Let us know which one you picked!
Well, You're right. There are lies damn lies and statistics :) I intend to write a more detailed post (or perhaps a jupyter notebook) about that transition. Just a couple of quick numbers (including PRs too) from 2017 compared to 2016: - the number of commit has increased by 190% - inserted lines of code has increased by 140% - number of unique contributors has increased by 1300% - number of returning contributors has increased by 900% They might be the previous patch author's though. OTOH I think GitHub helps transparency, at least makes CPython available for a broader community. 
Discord bot I've been meaning to finish for half a year 
Please post these kinds of questions to /r/learnpython Also, since you already defined an `axes` object, you really should just use the object API to interface. There is nothing wrong, per se, with using `pyplot` and the API together, but it is inconsistent and leaves you open to *many* more errors fig,axes = plt.subplots(figsize=(10,6), dpi=100) # use subplots to get both at the sam time axes.set_xlim([0,5000]) axes.set_ylim([.05,.35]) axes.set_title('Raw Measurements') axes.set_xlabel('Beam # \n Prox ' + '-'*79 + Distal') # set_xlabel(...) and use string multiplication axes.set_ylabel('mm') axes.plot(data, linestyle=".") # Alternatively: # axes.set(xlabel='myxlabel', ylable='myylabel',title='my title') 
Thanks I got it working!! :)
Probably because of these two commits: - https://github.com/python/cpython/commit/7445381c606faf20e253da42656db478a4349f8e - https://github.com/python/cpython/commit/6b6e68776663c0dda04b6a36609297728da2ae9e
**Stationary process** In mathematics and statistics, a stationary process (a.k.a. a strict(ly) stationary process or strong(ly) stationary process) is a stochastic process whose unconditional joint probability distribution does not change when shifted in time. Consequently, parameters such as mean and variance, if they are present, also do not change over time. Since stationarity is an assumption underlying many statistical procedures used in time series analysis, non-stationary data is often transformed to become stationary. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
I recently finished the free udacity Tutorial: https://classroom.udacity.com/courses/ud1110 For me it was the best Tutorial to get started. High quality stuff. I would recommend it
I recently got into python and made a program that generates random names by picking out one letter and based on that letter it chooses another, so on and so forth.
1: /r/learnpython 2: read the sidebar 3: include actual useful information 4: we will not do your homework for you
Zabardast Bhai 👍👍👍
Curiously, I found that using unit test had made me a better programmer, just for the reason yen233 commented. If my test is too problematic to write, probably I made a mistake in my design.
Strange that they use .bat scripts, when they could use Python scripts instead.
thanks yeah i'm pretty new. I'm decent with C++ loops, classes, functions and the basics. I'm using a mac editing with atom and running it off terminal. I apologize i think this is the wrong sub lol
&gt; wrapping all the logic of multiple command line programs not good Every things should do one job, and it should done it well. If you are making a web framework, make a web framework. Why would use a new unknown deployment tool instead of using well-known proven deployment tools like Ansible? Especially if your deployment tool doesnt support almost anything out of box, so they'd need to write a support for their deployment target first. Especially if you say you're targetting large application. No one is going to deploy "large application" from their own machine - they'll do it via CI, which will (most likely) run tests, then build package and store the artifact somewhere, and then deploy the artifact. Now your idea is that you need to have the framework installed to actually run the deployment command? That's quite unfortunate dependency to have. &gt; wrapping all the logic of multiple databases into an ORM good As said above, everything has (should have) one job, ORM is no exception. And that job is object-relations mapping with database. Since different people can use different database, it's quite handy to have such abstraction, but this abstraction doesn't violate the one responsibility principle. Unlike "magic command doing all the things". 
If you look at the pip code ( https://github.com/pypa/pip/blob/8.1.2/pip/req/req_install.py#L197-L201 ) you can see where that "'Requirement %r looks like a filename, ..'" message comes from; can you reproduce that `not os.path.isfile(p)` condition? Or perhaps trace how the name is transformed with `os.path.abspath`, `os.path.normpath` and`_strip_extras` on the preceeding lines will expose the problem?
Thanks for the information. Just to make sure I get it, the way to write data onto an array in parallel is through threads rather than processes? What about the joblib module work?
I think you could consolidate all of your print"________" lines by moving it out of your if statements 
A much quicker way of achieving this: for number in numbers: if number % 2 == 0: even.append(number) elif number % 2 != 0: odd.append(number) Would be to use List Comprehension: even = [number in numbers if number % 2 == 0] odd = [number in numbers if number % 2 != 0] Another thing that you could try is using a dictionary to hold a key: value pair for each option. Something like this: mydictionary = {"red": [1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36],} #"green": [], "even": [], and so on That way you can limit the number of if/elif statements so that you just check if the user choice is in the dictionary (e.g. is choice "red" in the dictionary) and if the spin number is any int in the list associated with the key. So something like this: if choice in mydictionary and spin in mydictionary[choice]: # logic for adding/subtracting from balance You would have to check how to handle the multiplier when it lands on green. I think this code looks really good. 
I haven't tried joblib. But correct, you'd need to use threads to modify a common variable. But you can still map+reduce your data in multiprocessing, which is probably the way to go. It'll utilize extra cores that way.
Timeout all the things. Got it.
Thanks for the tips. Using list comprehensions would definitely be easier. I'm not exactly sure how to use a dictionary the way you referred to, but thanks for putting it in my head. I am going try that out.
See I'm not sure I agree. I am building just a web framework but you can pip install the cli tool as well to help development and that cli tool contains a deployment command. There is a clear separation of single responsibility here. Also, it's simply not true to point at an ORM and say it only does object relational mapping. Nearly all (good) ORMs also come with things like collections, ways to work with lists and related data types, schema builders to work more closely to the database. To say that an ORM only does data accession isn't true as they also do data manipulation to help development with methods like contains or count or aggregate or sum or other helper methods. Just because something comes along with something else doesn't mean there's not a separation of concerns or their is some error in single responsibility. They also don't have to use a craft deploy command. I feel like everyone is freaking out that the framework comes with a helper command line tool to help deploy. Most people will find it helpful. The others can use their own deployment methods. Nothing in the framework says you have to deploy with the deploy command. https://github.com/josephmancuso/masonite/blob/master/docs/1.3-Deployment.md
Awesome! Thanks for sharing.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [josephmancuso/masonite/.../**1.3-Deployment.md** (master → 638d00e)](https://github.com/josephmancuso/masonite/blob/638d00e38e0b0f48045072ea85d0f0dab47e328d/docs/1.3-Deployment.md) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dss3bup.)
That sounds fun! :D /s
slow, but functional
Working on 6502 assembly code generator backend for the compiler I'm writing. It compiles a still experimental programming language targeting mainly the Commodore-64 :) 
I don't know how far you have gotten with dictionaries in python but they basically hold data as a key-value pair like so: dictionary = { "a": 1, "b": 2 } This means that key "a" is associated with a int (1). If you want the value associated with "a" you will use: dictionary["a"] # 1 So in your program, instead of having variables red, black, even, odd, green you can place them as keys in a dictionary "red": 1, "black": 2. However, instead of associating them with an int you can associate them with a list just like how you have your variables assigned. E.g. dictionary = { "black": [2,4,6,8,10,11,13,15,17,20,22,24,26,28,29,31,33,35], "green": [0], "even": [number for number in numbers if number % 2 ==0], #...including those 5 variables as keys instead } Now when you do choice in dictionary It will check whether the user input string matches any of the keys (e.g. user inputs "even" and "even" is a key in the dictionary). Then to get the value associated with they key you'd access it like before: dictionary["even"] # returns the list of even numbers. From there you're pretty much just checking if the spin number matches the numbers in the returned list and if it does then the user has won. Otherwise either their choice did not match any of they keys in the dictionary or the spin number didn't match what they selected. Dictionaries really helped me save time when I previously used to use a lot of if/elif statements.
`python` defaults to Python 2 on most systems (basically anything that's not Arch Linux) for legacy compatibility reasons. `python3` will run the latest Python 3 you have.
The command to launch python3 is `python3`. The `python` command is reserved for python2 (on linux and mac). 
can I change what it defaults to? I understand why it might be wondering for customization sake
Please post an update here :-) I ran into the same issue a few hours ago.
School projects mostly, though I have a bot for mumble in the works, need to figure out sending/receiving audio which isn't very easy with current implementations of the mumble protocols.
Im interested to learn more about your Mumble / Python project. What kind of feature or functionality are you looking to implement?
Great explanation, thank you! That really helped me understand dictionaries a lot better. 
&gt; OTOH I think GitHub helps transparency, at least makes CPython available &gt;for a broader community. It's a betrayal of Mercurial, which is written in Python. If Python itself won't use it, it's doomed Mercurial and also the Zen-of-Python UI it employed vs. Torvalds' UNIX philosophy/bash command line style UI. 
It is a bootstrapping problem. You need a compatible Python interpreter associated with Python files to use the a python script, but you may not have that until the venv is active.
Attempted to get OpenCV 3.x with Python 3.6 to work on FreeBSD 11. Lost patience. Anyone get Anaconda to work on (amd64) FreeBSD?
Thank you for the recommendation.
I worked on task composition for [Dramatiq](http://dramatiq.io) and conditional retries so far. I may tackle task states next as well as one bug that was brought up.
BTW Mercurial is moving towards Rust: https://www.mercurial-scm.org/wiki/OxidationPlan
I've been working on a small Pygame project based on space invaders. I'm hoping to start working with tensorflow and Keras soon. I want to start learning about machine learning and related concepts.
These new stats can be also decieving :) * How does general language growth look like, e.g. from 2015 to 2016? Could it be the case language is just becoming more popular, and this is unrelated from github move? * Could it be the case not all commits from pull requests are squashed (and that's the reason commit count increases), or that there are many pull requests for a single bug, while previously there was a single patch for a single bug? * are contributors counted via git commit meta? If so, these stats have the same issue. It is unfair to use these stats and say they are a result of moving to github. They can be e.g. caused by 20-year work towards a clean codebase and welcoming community. Or just a side effect of a using a new tool which exposes different metadata. On their own these numbers and charts provide no evidence a move to github helps. I fully support a move to github, IMO this is a great decision for many reasons. But if the goal is to analyze the effect, not just to congratulate ourselves, more care is needed.
What use cases would you like to see covered? What exactly don't you understand in how what works? Actually, come to think of it, isn't *I don't understand how it works, but it always does what I want* the holy grail of API design already? (Disclaimer: I'm the former lead developer and wrote much of the embedding doc and the actual code behind it).
Try with PyVirtualDisplay.
For what it's worth, if you're talking about developing with Python, we typically use virtual environments. Within a virtual environment, `python` should reference the venv Python bin. $ python3 -m venv venv $ . venv/bin/activate $ python --version That'll return a Python 3 version.
Adderall
Planning on hooking up mopidy or something similar so I have access to Spotify and other services outside of YouTube since the current radiobot is garbage. If I'm successful, then eventually do stuff with voice commands as there seems to be a demand for pre-trained on site Google/Alexa/etc so using those to processes the audio after a command would be cool.
"Learn python the hard way" is very basic and extremely repetitive... I you are not a complete beginner to programming, skip it. I learnt my python from "Learning Python" - Mark Lutz - beginner level and "Core Python" - Wesley Chun - intermediate I found both of these books very good at their job. 
There actually is an option to see window size. It would be selenium.webdriver.Chrome().get_window_size()
It is the wrong sub. Post over @ /r/learnpython my dude! Great resource and you'll get an answer fast. Also make sure to post your code so far :) 
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#2: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) \#3: [PSA: If you have a library card, you probably have access to Lynda.com, which has tons of Python courses](https://np.reddit.com/r/learnpython/comments/6rrsdu/psa_if_you_have_a_library_card_you_probably_have/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
If you want to golf a little with the even/odd: [odd.append(x) if x % 2 else even.append(x) for x in numbers] If I may get a bit off topic, would this be a good line in production code?
Personally, I would like them moving to Gitlab instead, but still good news.
Thanks bro already got some help. Great sub
Yes, "betrayal". Mercurial depended on Python and the Python project turned its back on it supposedly because there are a vast number of people who would contribute to Python if they just didn't have to use mercurial. You think it's ok to stab another open source project in the back?
This is cool! I'm not sure if a whole package is required for essentially 1 function. I'm not sure if it is useful to return of list of other fraction representations as they are just multiplying the first one by some integer i. It is definitely useful though, thanks!
You mean like what `Fraction` already does? In [1]: from fractions import Fraction In [2]: Fraction(3.14) Out[2]: Fraction(7070651414971679, 2251799813685248) In [3]: from math import pi, e In [4]: Fraction(pi) Out[4]: Fraction(884279719003555, 281474976710656) In [5]: Fraction(e) Out[5]: Fraction(6121026514868073, 2251799813685248) In [6]: p = Fraction(pi) In [7]: p.numerator / p.denominator Out[7]: 3.141592653589793 
Why does python owe mercurial anything? The python language doesn't offer its users warranties.
gallery-dl is really underrated and does the same as youtube-dl except for images.
web2py: "Yes python 3 support is official. Compatibility problems with python 3 are considered bugs" as of Nov 2017, but that is python 3.6 or higher https://groups.google.com/d/msg/web2py/89a846kPeGA/U-PfAnddCAAJ The DAL supported python 3 much earlier.
save time typing, add alias to your .bashrc `alias ytdl="youtube-dl"`
Ive upgraded pycharm to 2017.3 and trying to figure out why choosing Conda environment as an interpreter for the project doesn’t import all the modules (SciPy etc) into the new environment -.-
&gt;Why does python owe mercurial anything? Well that's a fine attitude for us to adopt! Because it uses Python, that's why. If no one uses Python there's no point to Python. It's a major project showcasing Python and exposing other people to Python. Guido Van Rossum himself cited it in his PyCon Keynote of 2012 as an example to disprove the charge that Python is too slow by describing it as "his favorite" DVCS, that it was "all python... blindingly fast... no one would ever consider rewriting it in another language because it's not fast enough". &gt; The python language doesn't offer its users warranties. If that were the case, no one would use it. We sure as heck do offer users warranties - in regards to backward compatibility, frequency of releases, bug fix windows, etc. Mercurial was good for Python; Python was good for Mercurial. They should have stuck together. Instead Python threw Mercurial under the bus for non-Pythonic Git and now Mercurial is talking about throwing out Python for Rust. :-( People will then use Mercurial's rewrite as an example of why developers shouldn't use Python and Git users will point out that Python itself walked away from Mercurial. Both sides lose.
Ok I guess we'll see in time. If people don't like it then they don't use it and I just remove the option. I'm not sure how many times I have to say it's not in the framework. What's the difference between running `craft deploy --local` and running `git push heroku master:master`? It's convenient for me, maybe it'll be convenient for other. Ill concede maybe not most like I said before but there's no way to definitely tell yet. You could see comments from the couple of people that said it wouldn't be useful compared to the 4k people who saw it and didn't so its fine to make your assumptions. Not saying they are wrong. You could be entirely correct.
The `onclick` function takes only one function argument so when you call it with more than one you won't be registering callbacks for both of them to run. If you want to alternate, you will have to add that logic, perhaps by maintaining a boolean flag to tell you which function ran last.
Do a project. Something you’re interested in. Then just google until you solve/learn the pieces. Project based tasks: [exercism.io](http://exercism.io) [checkio.org](www.checkio.org) 
This will be picked up by online plagiarism services, so you probably shouldn't use this, and instead understand the problem and create your own solution, OP.
Nice did you have to use any JS for this??
FYI The current block-chain is in the vicinity of ~200 Gigabytes of data Download a bitcoin client (there are others, but here --https://bitcoin.org/en/download) and once you've downloaded the blockchain just find the files on your harddrive 
There is a howto for compiling on MS windows here: https://github.com/Polyconseil/zbarlight#on-windows 
Nevermind, it's obviously dangerous. 
🙄
You should also put, in your writeup, that the plugin won't work on devices that aren't pre-flashed with MicroPython. Maybe link to the adafruit guide .. https://learn.adafruit.com/building-and-running-micropython-on-the-esp8266/overview Everything else is great! Got it working with multiple NodeMCU's :)
Me too brother. Codecademy, lot's of books and having fun. It's the journey that counts
I tried both of those. The book was a complete waste of money and it really pissed me off. “This should work on windows” oh it didn’t work? Sorry. Next lesson! Lol. I learned a ton through sentdex on YouTube and Kidscancode. I didn’t like codeacademy either, just didn’t teach me well enough 
Thanks for the feedback! Actually there is a link to how to setup a device next to the device type and path settings in the MicroPython settings tab. This link leads to a GitHub wiki page for the device type. I mention the setup steps there including flashing MicroPython. Please share your workflow with upip and your thoughts on integrating it (preferably) in the issue tracker https://github.com/vlasovskikh/intellij-micropython/issues or here.
Thank you!
including subtitle tracks, multiple audio languages?
Put the below into a shellscript. It will download the best (1080p) video and audio track and then merge them together. If no 1080p video is available it will pull a 720p instead automagically. youtube-dl -o "%(title)s-%(id)s.%(ext)s" -f 137+140/136+140 "$@" 
Someone just posted this free book, so I would recommend starting there. Kidscancode and various other YouTube channels will help you get the job done. Stack overflow is pretty good for asking questions about your code - people will reply with the fixed version. http://goalkicker.com/PythonBook/
Why? In Python 3.6 regular dicts are ordered! In CPython it was considered an implementation detail, like in PyPy. So both CPython and PyPy have ordered dicts in 3.6 (PyPy doesn't even yet support 3.6). So, when you are programming for Python 3.6, you are programming for CPython (and maybe PyPy in the future), and therefore have dicts that preserve insertion order.
/r/learnpython and read the sidebar.
Very good stuff
Crying myself to sleep over how big my project has gotten. 
Check out 'gitdm' by lwn.net. It's a python script used for data mining git repos. It was specifically created for counting stats for the Linux kernel, but it's a general implementation and should work anywhere. https://lwn.net/Articles/290957/ git://git.lwn.net/gitdm.git
Thats a great idea. But im not that good yet. 
Doesn't say much without labels on the vertical axis. 
I type 'you' then tab. Then, with zshell, I up-arrow to scroll through previous invocations. As I've previously copied the link into my clipboard, I back arrow into the quoted argument[1] and ^w repeatedly wiping it out,[2] then ^[shift]v to paste from clipboard... [enter] and sit back with a smug look on my face.[3] [1] Recommended because of unprintable characters sometimes showing up in link. [2] Is there an easier way? In vim it would be something like di' except I think vim treats single quotes special. [3] Smug looks are **important**.
Personally I'd suggest 'Python for Kids' by Jason R Briggs. Python 3 also comes with its own IDE thing called Idle, so you can use that while learning.
I am working on a django website for a client (an information platform for Enginering studients specialized in robotic, sit shows events, courses, news and personnal cursus). And during the night, i am working on a dating web app. If the website goes well, i'll create an API with Django Rest Framework and use it to lean ReactNative and create a mobile app for it! 
I find threads and coroutines conceptually very similar (independent sequences of code actively running). When the author started looking at "asyncio.Task.all_tasks", I found it very similar to "threading.enumerate()". also two of: * threading.Thread() vs asyncio.Task() * time.sleep() vs asyncio.sleep() I understand that asyncio scales to more tasks, it lets the application yield when appropriate (as opposed to OS context switch). But why do we have two different interfaces for this? as a counterexample, tuple() and list() are very different internally, but they can both be accessed using seq[i]. This makes code readable and makes knowledge transfer better (if I know tuples, I know lists too).
What are people’s thoughts on these books? I haven’t looked at pythons yet, but the c++ one has weird ordering. It talks about templates chapter 2 and for loops chapter like 17.
What do you mean about telling you which function ran last? I have no knowledge about Boolean flags
Check out /r/learnpython
Going to try the debugger Url. Although I already know what I am going to see. Also tried scrolling with actions and sending page down keys. None work headless. 
That would be my last resort. Want to try to keep it lean.
Ok! Simple fix to get python3 working again: v0.1.7 
Thanks for the fast turnaround. On Linux I was able to flash a few different brand ESP8266 modules after the fix.
OP, if this is your website you should do something about the header. It takes up almost half my screen
I used to work for a site that youtube-dl targets (not YouTube). We accepted it as a fact of life and didn’t put any effort into thwarting it because it wasn’t worth the hassle to try to spot hardcore nerds from being nerds. 
I like adding `--add-metadata` on to that
Thank you for this!
I have noticed this on some screens, I will talk to my advisor who runs the site about it. Thanks for the feedback!
From the docs: (emphasis mine) &gt; The order-preserving aspect of this new implementation is considered an implementation detail and **should not be relied upon** (this may change in the future, but it is desired to have this new dict implementation in the language for a few releases before changing the language spec to mandate order-preserving semantics for all current and future Python implementations; this also helps preserve backwards-compatibility with older versions of the language where random iteration order is still in effect, e.g. Python 3.5). It says it right there. Do not rely on it. You can in future versions where it is part of the spec, but in 3.6 it is **not**.
Open source needs your help! I need to get motivated and do some work myself. Tons of debugging to be done. You won't see a project come to life necessarily, but reiterating over code can help with understanding and best practices :)
You can try to sanitize before you run eval
My biggest issue with Numba is it doesn't play as nicely with Numpy as I'd like. If it allowed double/triple/quadruple/etc array splicing I'd be a promoter for it for life.
Implementing a background RPC service in Maya so I can open and import files from an external software. Also porting my old kOS scripts to KRPC because I’ve gotten way more confident in my pythoning since I was wrote all those scripts.
Is there any documentation on descartes?
Main result seems to be a conclusion that Y-axis labeling is for losers.
Find an element that is on the bottom of the screen it will move there
What is exactly what my script is doing. Have u tried it?
Safe and legitimate files?
I tried ast.literal_eval() and I tried eval(code, {"__builtins__":None},{}) but for both the eval fails every time.
Never cheated in Runescape, did you? 
I have created an array for the number of cows in the farm. Need to understand how to do we take the yield of the cows twice in a day? Do we make a fuckin for it ?
Awesome! Don't hesitate to reach out if you run into any issues!
You have 4 years experience with python? Just code some stuff and throw it on GitHub and use that as your portfolio. I finished my double major last year and by far the hardest part about finding a job was having experience! I'm actually frightened to be fired before I can get 3-4 years experience.
Trying to come up with efficient way for matrix operations without using any third party library (numpy etc.) 
&gt; /usr/bin/env I use /usr/bin/env on Windows daily and no problem so far. It does not point to an actual path, but tools that look for shebang on Windows already know that.
&gt; The average time for the ten runs of each size was used. Isn't best practice to take the minimum rather than the average for benchmarking? That's the way you can filter out random (ie. not algorithm / compiler dependent) noise the best way. 
I never went to a bootcamp, but I mostly just work on my own projects and projects to aid my work life. I check the subreddits for the languages I use to keep up with news and new frameworks/packages.
&gt; | grep porn sites | wc -l ? :D
Take a look at Dash, new Python library since June 2017: https://medium.com/@plotlygraphs/introducing-dash-5ecf7191b503 https://plot.ly/products/dash/ By far the best way to make GUIs in Python in my opinion. I used to use Tkinter also - it's not very flexible and the apps look horrible.
I used very little JS myself apart from the JS already there in the Bootstrap theme which I used. The comment section uses Ajax to send and refresh the comments without having to reload the page. That's mostly it. Though it's always helpful to be knowing the basics even if you don't use JS extensively in the app.
I'm using Landscape.io for linting.
&gt; The Python® Notes for Professionals book is compiled from Stack Overflow Documentation, the content is written by the beautiful people at Stack Overflow. Text content is released under Creative Commons BY-SA. See credits at the end of this book whom contributed to the various chapters. Images may be copyright of their respective owners unless otherwise specified
I got the PostgreSQL, algorithms and Python one. They seem to be of the 'quick intro to various functions' kind (like, several ways of using SELECT in SQL, or a paragraph on how to convert from bytes to unicode in Python; on the other hand, there's five pages on list comprehensions, and it's all mostly useful examples, not just theory). Haven't looked at algorithms yet.
They have a lot of good examples. Not super in depth from what I can tell, and very weird ordering. Seems good to learn specific concepts if you already know a good amount.
Why argue with the docs. And even downvote it. Ridiculous.
Selenium
Is a "client" different to a wallet? Jaxx, Electrum and Airbits don't involve 200GB of data.
I'd say yes... almost. One time, the site tried to download multiple files on one click. Happened on the Linux book. So far, everything has been legitimate, even the Linux book. From the "About section" inside it: &gt;Please feel free to share this PDF with anyone for free, latest version of this book can be downloaded from: http://GoalKicker.com/LinuxBook &gt; This Linux® Notes for Professionals book is compiled from Stack Overﬂow Documentation, the content is written by the beautiful people at Stack Overﬂow. Text content is released under Creative Commons BY-SA, see credits at the end of this book whom contributed to the various chapters. Images may be copyright of their respective owners unless otherwise speciﬁed &gt; This is an unoﬃcial free book created for educational purposes and is not aﬃliated with oﬃcial Linux® group(s) or company(s) nor Stack Overﬂow. All trademarks and registered trademarks are the property of their respective company owners &gt; The information presented in this book is not guaranteed to be correct nor accurate, use at your own risk Please send feedback and corrections to web@petercv.com
Returned to learning python last week. Been doing simple blackjack game.
Your open source code doesn't have to be reusable or customizable at all for it to be useful to someone as a potential source of learning by tinkering and studying how an actual real-world project looks like, warts and all. While reusability is an important aspect of open source, it is far from being a sole, most important or even necessary one. Just some food for thought. :)
I'm guessing some of you are too lazy to click on stuff. Here's a bash script to help you out. wget -qO- http://goalkicker.com | grep "bookContainer grow" | cut -c 44- | cut -d' ' -f1 | rev | cut -c 6- | rev | sed 's/.*/http:\/\/goalkicker.com\/&amp;Book\/&amp;NotesForProfessionals.pdf/' | xargs -n 1 -P 8 wget -q
u/huntoperator Hope you find this useful.
Just the tendency.
geirha from the same channel did the same thing using lynx and it's much easier. lynx -dump -listonly -nonumbers http://goalkicker.com | sed 's,\(.*\)/\(.*\)Book$,\1/\2Book/\2NotesForProfessionals.pdf,'
I'm leaning Python. I've tried to get going for a number of years, but without much progress. This time I'm taking a course on Udemy. Yes, I know what y'all think about that, but for me it has been great, and I'm making more progress than while only using YouTube, free tutorials and free books. After learning basic python, and making a chat bot for myself that I've thought about for a few months, I will continue with a course in Pandas, which I will hopefully be able to use for work.
Thanks for the reference! There is a github mirror: https://github.com/npalix/gitdm and a fork https://github.com/cncf/gitdm
Thanks!
TIL, Windows might not be as stupid as I thought. :)
trying to build some wrappers for a bunch of c/c++ libs from fingerprint device's sdk's, using ctypesgen and hacking around ! pretty nice technique :)
Linux Chapter 1: Getting started. Linux Chapter 2: Compiling the kernel lol
I commend you for going off and trying your hand at creating a new web framework. As you've seen - there will be significant backlash. But stay true - the amount of knowledge that you learn will be invaluable. Python has already a lot of web frameworks - but it doesn't stop people from creating new. This is the amazing world of software development - if you don't like what is available - create your own. Just be careful - getting support in this specific area may prove difficult.
Great tool. I'm installing.
Yeah JS is not too much of a requirement if you are not gonna have animations or many real-time components on your site. You shouldn't worry about that imo.
Could you also add pypy to the benchmark?
All eduction should be free. Why should it be a monopoly. 
This is reference material that assumes you already know what your doing, you just need a reference for things you don't do often. Thus even hard stuff should be at the front. Basics should be at the back, for those times you need to use basics in a different way than you normally do or for that feature that is basic but you happen to rarely use it. 
Thank you. I appreciate it.
A short answer is that threads give you fine grained (implicit) concurrency whilst coroutines are far more course grained, and explicit. Therefore, libraries designed for coroutines look very different to those designed for threads, regardless of the API, for this reason. You can make certain APIs more compatible between the two (like in David Beazley's recent talk, seen in the Curio Queue object IIRC), but this is a 'hack'. In theory, there is some compatibility already, in that concurrent futures and asyncio futures have a similar (but not identical) API, but again this is on a case-by-case basis. Personally I think that the two approaches to concurrency are so vastly different that at the framework level (asyncio vs threading), we shouldn't try and wedge a square peg into a round hole. That said, there are cases where using a common API is useful, and one such example would be the use of native socket objects inside of curio/trio. Here, it is more trivial to switch between threading and coroutine approaches, because you re-use the same underlying primitives.
Thanks, I will avoid such titles in the future :)
It's a minor criticism, and shouldn't retract from the quality of the article. Just my musing after seeing a few question based articles recently :) 
That something should be free is not realistic. Everything costs money. This was probably created trough someones free time. They have my gratitude. 
Great post. Thanks.
/r/learnpython 
Creating my own little cryptocurrency! It's going pretty well, I've got the blockchain all finished - much simpler than I thought it'd be. However I'm making the Flask end which is taking much longer, I've never used it before so I have a lot to learn!
I agree with /u/Nicksil, but as I absolutely love writing one-liners, here it is: [str(i).zfill(len(str(n))) for i in range(n)]
You want it in an array so: a = np.array([x.data.tolist(), y.data.tolist(), e1.data.tolist(), e2.data.tolist()]) 
They're not real books, thats the catch. They're just compilations of Stackoverflow answers. 
You should probably do that with python3 instead of 2 at this point. I noticed the print without the (). And why are you using the function pow() instead of the ** operator? It seems like you might need more experience or a partner to help with this project if you want to show both languages in their most accurate and positive situations.
... which is just a wrapper for dict. There currently is exactly one implementation of the 3.6 in existance, and that is CPython (maybe Stackless too, but stackless is just patches on top of CPython). PyPy doesn't support 3.6 yet (and when, dicts will be ordered anyway, since PyPy behaved this way from the start). Jython and IronPython are still stuck at 2.7. The specs even state why it should not be relied upon: 1. this may change in the future, but it is desired to have this new dict implementation in the language for a few releases before changing the language spec to mandate order-preserving semantics for all current and future Python implementations 2. this also helps preserve backwards-compatibility with older versions of the language where random iteration order is still in effect, e.g. Python 3.5 1 has already happened, the BDFL has decided. Just like before Timsort, sort was not guaranteed to be stable, now it is part of the spec 2 doesn't apply because the assumption of this whole argument is people who write code that will only run on 3.6 and above (e.g. it uses f-strings). Anyway, I don't think this discussion is useful anymore, and I will stop now. If you insist, you can tell people who code for 3.6+ to use ordereddict, I will telling them that it's not necessary.
Working on another revision of [Microservices with Docker, Flask, and React](https://testdriven.io/), preparing for [PyTennessee](https://www.pytennessee.org/), playing around with Django Channels. 
Sorry... Didn't know you can't ask for help here. 🙏
Which is good beacuase you should use list comprehensions much more often than loops ;)
&gt; All education should be free. Why should it be a monopoly. Just because something is not free does not mean it is a monopoly. Writing books likely takes thousands of hours. If the author chooses to give their book away for free then good for them. That said, there is nothing wrong with authors charging for their books. They deserve to be compensated for the time they put in. We are in no way entitled to access that information for free.
Wrote an Ansible module to assign an IP from Proteus IPAM to a newly created VCenter VMs This allowed us to provision a new VM, assign an IP, reboot then continue the rest of the provisioning by connecting to that new IP.
imo jupyter's a good idea for beginners. when you're just starting out, you ought to focus all your attention on the language, not get scattered worrying about debugging features and whatnot. the notebook approach makes it easier to isolate bugs without having to invest much time. you'll have plenty of time for pycharm after your first class is over, good luck! 
Have you tried importing selenium from the Python 3 shell?
Quickest way would be to use requests. http://docs.python-requests.org/en/master/
What might be happening is that when you used pip3 install, it installed for one version of python but when you are using Python, itś using a different version. Try Python3 -m pip install ____. That should guarantee that it is using the specific Python version you are calling pip with.
Only if FP style is your intention. Python is multi-paradigm. It doesn't enforce or even suggest that FP is preferred over OOP/Procedural, although "pythonic" patterns are definitely preferred by everyone.
Yeah, I didn’t mean to suggest that Python “enforces or suggests” that FP patterns should be used instead of imperative patterns. It’s just a matter of my opinion being that we should favor FP paradigms where possible because it objectively leads to safer and more readable code.
Didn't solve the problem with Python. I am disappoint.
Thanks
I'd advise a combination of both - Jupyter Notebooks are excellent for tweaking parts of code and helps you think of your code in blocks as opposed to a long script of instructions. However, as someone has been working in notebooks for the last 18 months, I wish I'd started to use PyCharm much earlier, as I now need to learn how to use a more feature filled IDE (my goal for the new year). Additionally, when you start to break your code out into multiple .py files, it becomes a pain to keep exporting your tweaked notebook as a Python file after every change.
This is just how I pip install things these days. Too much time spent trying to figure out what pip binary was needed and even then not having it work. Now it's just: &lt;python version&gt; -m pip install &lt;package&gt;
There are two types of linux users, gentoo and wrong
Looks even simpler. &gt; would this be a good line in production code? Can't really say but it works as intended so I don't really see a problem with it. 
For your odd/even, you don't have to predefine a variable for these, you can define it in the condition. Essentially: &lt;even number&gt; % 2 == 0 == False &lt;odd number&gt; % 2 == 1 == True Therefore: elif choice == 'even' and not (spin % 2): balance += bet print('You win!') elif choice == 'odd' and (spin % 2): balance += bet print('You win!') Here's how I'd write this. This isn't to say that my way is right, but to give you a contrasting option that you can ask questions about: import random red = [1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36] black = [2,4,6,8,10,11,13,15,17,20,22,24,26,28,29,31,33,35] start_balance = 1000 def main(): balance = start_balance print("Roulette!") while balance &gt; 0: choice = menu(balance) if choice is None: break spin = random.randint(0,37) print('Spinning... {spin}!'.format(spin=spin)) balance = payout(balance, spin, *choice) def menu(balance): print('\n' + '_'*50) print('Your balance is: {bal}'.format(bal=balance)) spin_yn = 'y' spin_yn = (input('Would you like to spin? [Y/n] ') or 'y')[0].strip().lower() # Break condition for the menu if spin_yn == 'n': return None bet = None while bet not in list('rbeog'): bet = (input('Where will you bet? [red, black, even, odd, green] ') or 'z').strip()[0].lower() bet_amount = 0 while bet_amount &lt; 1 or bet_amount &gt; balance: bet_amount = int(input('How much will you bet? [0-{bal}] '.format(bal=balance)).strip()) return (bet, bet_amount) def payout(balance, spin, bet, bet_amount): # Assume a loss win = -1 # All of these result in a 1x payout wins = [ bet == 'r' and spin in red, bet == 'b' and spin in black, bet == 'e' and spin &gt; 0 and not spin % 2, bet == 'o' and spin &gt; 0 and spin % 2 ] if any(wins): win = 1 elif bet =='g' and spin == 0: # The only 100x payout win = 100 balance += bet_amount * win print('You {w}!'.format(w='win' if win &gt; 0 else 'lose')) return balance if __name__ == '__main__': while True: main() if input('Play again? [Y/n] ').strip()[0].lower() == 'n': break 
[Here's all the books in a .7z if anyone wants them.](https://drive.google.com/file/d/1Fv2cy6xaMKg_CWHE1elpl2V6CdnrSyKR/view?usp=sharing)
You might want to check out [struct — Interpret bytes as packed binary data](https://docs.python.org/3/library/struct.html). If your data is fixed size chunks then clearly you can iterate directly. If not I see no option but to keep an index as Python doesn't have a direct solution for everything, contrary to popular belief :-)
https://www.python.org/ is chock full of all the free knowledge you need but if an expert writes a book that clearly lays out and organizes your educational experience in an exciting and interesting manner, that's worth gold.
Also arrays and vectors: You should be looking at np.array, instead of a list.
The one I looked at for Ruby seemed like a well organized reference. It's not really a "book" in the sense of learning. It's more of a quick reference for something you're not familiar with. And they're free. I just look at them as another tool in the arsenal.
It sounds like you have a good idea of when and how to use both Jupyter and whatever IDE you end up using. Keep in mind that some python won't behave the same in both environments. For example multithreading, simply won't work inside of Jupyter, but will behave normally in a program containing a proper `__name__`. Having said that though, Jupyter is wonderful tool for exploring how to work with new libraries and troubleshooting troublesome code. Edit: `__name__` formatting.
Well, BytesIO seems to handle much of what I need in that I can deal with a single object that represents both the data and the current index into that data. However, C pointers have an additional feature where they can be assigned to another pointer variable which can then track the same data separately. This feature of pointers may be one of those cases where Python does not have a direct solution and requires the addition of an index. 
Not only that, it has lists at chapter 17.
OK.
Works like a charm on linux. Windows cannot handle multiprocess and interactive session properly.
If you can install modules [SocksiPy](http://socksipy.sourceforge.net/) is worth looking at. 
Is that website safe? I am afraid to download anything.
&gt; print 'hello world' I recognize that not everyone can run and develop on python 3 (myself included) but there is ZERO reason to not teach python in a way that is at least compatible with both. 
I actually took a similar approach when I started. You'll definitely get to a point where you'll think "man I need to refactor this whole thing" and dread the idea of doing it in Jupyter. Enter PyCharm. Notebooks are awesome for learning (esp if you do data science), but when you start developing your own projects, you'll find you need something a little more powerful. Key is to realize that there is a difference between using python, and building out your own tools/website/whatever.
OK.
&gt; I agree with /u/Nicksil , but as I absolutely love writing one-liners, here it is: [str(i).zfill(len(str(n))) for i in range(n)] I also like writing one-liners. But I like to have it formatted nicely. Either, four spaces: [str(i).zfill(len(str(n))) for i in range(n)] Or, inline with backticks "\`": `[str(i).zfill(len(str(n))) for i in range(n)]` (yes, I am being obnoxious...sorry)
[r/learnpython](http://www.reddit.com/r/learnpython) And give a little information as to your setup. You haven't even said what OS you're using; no one can help you without you saying what you're doing.
that subreddit looks super dead. Pretty much nobody replies on learn-subreddits anyway. I'm using windows. But I digress, I've already uninstalled and dropped out. I clearly did not reach the minimal intelligence requirement. 
The first one am doing the same with django for my college ;-)
Working on a cryptocurrency trading program with support for 40 or so exchanges(it increased from 30 in the url). https://imgur.com/a/y2uzX Planning on selling it.. If anyone want it ( ͡º ͜ʖ ͡º)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/CO2iF8O.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dstmq4e) 
I actually put it in backticks at first, but then I quickly went "wait, this isn't GitHub" and removed them. I had no idea Reddit actually used Markdown. Cool. I edited my comment.
Found the socialist! 
You're probably better off using a dedicated microcontroller like an Arduino, or perhaps even a RaspberryPi, for starters. There's a code library for Arduino called FastLED that makes programming the individuals LEDs really easy, and provides abstraction for all of the popular (and some not so popular) LED controller chips. For an Arduino, you can use the USB connection for both power and commands; a Python app running on the host could take care of communicating high-level commands to your custom code on the Arduino.
Sounds like you have more than one python version on your machine. What OS are you on? 
I just downloaded a ton of free knowledge. The order matters not. Thank you OP.
You could try [this one](https://www.blinkstick.com/) says it has python api
&gt; that subreddit looks super dead. lolwut? There's like 50 threads on that subreddit just posted within the last 24 hours, most of them already with responses. &gt; But I digress, I've already uninstalled and dropped out. I clearly did not reach the minimal intelligence requirement. Honestly, your shitty attitude is probably a larger obstacle to your success than any issues you're having with your IDE or "minimal intelligence". Best of luck.
I want to die 
Just a few suggestions: You could try writing the Numba code with the optimized C++ algorithm. Also you're not using any flags with your `@jit` decorator. I'm going to assume that's running in `nopython` mode? Which compiler and version of compiler are you using for the C++? `gcc`? Your times for Numba include more overhead compared to the C++, which measures single-loop time only. Probably it makes not too much difference, but it's sort of obvious to look at that the optimized C++ code doesn't actually return any values or do memory allocation, so it has no issues with memory bandwidth. Your arrays are much larger than cache, so your calculation might be memory-bound and not CPU-bound. Also use `time.perf_counter()` instead of `time.time()`. 
Ooh, might actually get some use out of my adafruit huzzah esp32!
Thanks, pretty much what I was looking for! Maybe a little on the expensive side, but seems worth the features.
Héhé ! A lot of money just in that thing! They pay 9k $ for it ans it's a 3 weeks job max! And each big research project needs one! I have another one waiting for another department in Engineering!
from validate_email_address import validate_email needs to run inside a python script, not on the commandline. 
You appear to be fixated with pointers. If you do not drop this approach I cannot see a way in which you will ever learn to use Python. As for using two pointers on the same data then it is no surprise that C code is so bug ridden relative to Python. Thank goodness I stopped writing C 20 years ago.
How do these two books differ in your opinion? Are they complementary? As in, does one serve as a introduction and the other for more details? 
I don't mean such,knowledge should be shared freely,the question you asked is trivial a quick google search would yield a lot of lots of answer and it's gonna save you a lot of time,meanwhile the kind of question you should ask here is a question that is logical is nature,lots of people will be delighted in answering the question ,for the sake of showing off there intellectual capacity.everything i said here is just what I thought is right,it's by no mean affiliated to reddit standard or this community.
Jupyter is great for exploring new libraries. The tab &amp; shift+tab auto complete are great for learning what parameters to pass. It's also great for working with importing new datasets to figure out how they are structured. 
Seems really interresting :) ! Do you have benchmarks to show that *pyfakers* is faster than other equivalent library ? Do you have an idea how *pyfakers* could be integrated with [factory_boy](https://github.com/FactoryBoy/factory_boy) or [model_mommy](https://github.com/vandersonmota/model_mommy) ? 
One if the examples why operator overloading is bad. 
This is pretty incredible. If there was something like this for networking that would be sweet. I downloaded most of them and am going to read through them. Thanks!
ayyy!
Even better: class PleaseDont: def __eq__(self, x): return True Fuck yeah. It's equal to fucking everything, always.
I'm going to write another study using Julia sets, I will keep pypy in mind while I work on it!
Yeah, found out that it wouldn't be cheap if I wanted to program it too, but this seems like a great option.
Your use of "PyCharmer" has charmed me.
So i solved the problem by installing a precompiled version of the module here: https://www.lfd.uci.edu/~gohlke/pythonlibs/ 
jupyter notebooks are great for learning concepts. Moving to an IDE is just a matter of getting used to it. In fact some of us don't even bother with IDEs, vim is plenty for a lot of people.
Nah fam i got you import random class PleaseDont: def __eq__(self, x): return random.random() &gt; 0.5
I remember back when the micro controller community was angry about people using C and C++ instead of assembly and that was in 2002. My university professors thought I was crazy to use C on my senior project. We’ve come a long way.
I think Sebastian's book tends to fit better into PhD mind (knowing the underlying algorithms and methods), while Geron's book caters more towards the MS/BS mind, who are more interested in practical applications of these algorithms. Hence the book names :) In short these books are complementary, but there is some overlap. What does not overlap? Geron's looks at RL and autoencoders, while Sebastian's considers clustering and deploying web app with ML. Even on the basic topics of regression and classification both authors show various perspectives and it is still useful to read, implement and understand the examples from these books. 
 class Life: def __init__(self, aliveordead): self.alive = aliveordead @property def alive(self): return self.alive @alive.setter def alive(self, aliveordead): if isinstance(aliveordead, bool): self.alive = aliveordead else: raise ValueError("Must be True or False.") def __repr__(self): if self.alive: return "{} is alive.".format(self) return "{} is not alive.".format(self) def __eq__(self, other): return True
That is interesting, though I reckon that sqlalchemy seems to be general module that abstracts a differences in various types of sql idioms (sqlite, postgresql, MySQL, etc). Though the querying syntax is a bit different and takes some getting used to.
Why? what did you try to program it with? 
Please refer to the sidebar link: https://wiki.python.org/moin/Python2orPython3 Use whatever you need to use. If it does not matter, use Python3
Ah thanks. I’m on mobile and didn’t think to check there. 
This shift seems inevitable. Here you can find a nice discussion about this topic https://www.reddit.com/r/Python/comments/6oflnw/the_rise_of_python_for_embedded_systems/
You mean in the Blog Post itself or in the example files?
Too easy to spot. file1: class PleaseDont: pass In another file: def what(self, x): return random.random() &gt; 0.5 PleaseDont.__eq__ = what Bonus points if you detect a unittest environment and don't assign the method.
Support for Python2 will end in 2020. Your Python2 project should have been ported to Python3 by then.
expanding on my python slackbot :) 
I didn't follow it 100% but I got the gist of it and found it pretty cool. What about [jsonpickle](https://github.com/jsonpickle/jsonpickle)? Does it work similarly? Also, am I correct that the reconstructor does not keep the original class definition? If I change a constant in a class, it will too, right?
Can someone define Dataset for me? 
There are lots of situations where you should still write you code such that it can run on python 2. It's not ideal, but it is realistic. But, the best thing to do is write the code such that it can run on both! It really isn't that hard to do. Just use the appropriate `__future__` imports and call methods that work on both. For example, even though it is more memory efficient to write `mydict.iterkeys()` in python2, just do `mydict.keys()`. When you run that on python2, there is some overhead that is hopefully acceptable. When you do it in python 3, you get the boost. Using the same example, be *explicit* when you expect a list. If your `mydict.keys()` needs to be a list, do `list(mydict.keys())`. Then it will be a list no matter what. There are some other tips too, but this will go a pretty long way. It does get harder if you want to write for both python 3 and &lt;2.7. But I am comfortable not worrying about that
I'm currently doing the same thing for lights behind my monitor, butwithout the individual addresses. It's about $15 for a 1m addressable RGB strip, $10 or less for an arduino, connectors and power supply would be another $5.
As I don't use those libraries, it would be best if those who do would comment on integrating. pyfakers has a very straightforward api. Take a look at the README.md in the repo to see what I mean. I used full_name generation for benchmarking, library "perf" to bench. 
I don't know how `jsonpickle` works. The reconstructor doesn't keep any information about default (unchanged) class variables (that are defined outside the `__init__`). That's one of the reasons why people don't use `pickle`in large projects. It can cause very frustrating bugs. import pickle import pickletools class SimpleClass(): CONST = 101 def __init__(self, a=10): self.a = a t = SimpleClass() print(pickletools.dis(pickle.dumps(t))) One of the solutions to this problem is to write a custom reconstructor, which checks the version of the class. 
You mean I don't have to learn C anymore? Yes!! Well I mean I guess I should still learn C but now I can put it off that much longer.
1: read the sidebar 2: /r/learnpython 3: read the sidebar 4: don't post photos of code 5: we won't do your homework for you
I haven't started yet, but at work I'm migrating from developing scripts by myself, to working with others. This means that version control and readability are pretty important, and PyCharm can highlight inconsistencies from PEP8 - something woefully lacking from my work in notebooks! Additionally, being able to step through scripts line by line to debug code and inspect the values of each object is becoming more important t as my project continues to grow in length. I haven't actually started the switchover to PyCharm yet, but hoping to at least play around with existing scripts in the next month or so.
I nominate /u/Karlog to be your partner! I agree, why not use **? Edit: as /u/Kalrog so elequently pointed, I mispelled his name. The sentiment remains the same
If you cannot accept advice from anybody without regarding it as an insult then clearly Python the language and Python the community is not for you.
Any insights into why the Numba version is much faster than the naive C++ one?
If you want to shoot yourself in the foot, or end up like the Black Knight without arms or legs, or blow your own head off please feel free to do so, that's part of the Python "consenting adults" philosophy.
But you probably don't want them. The disclaimer on the site says the content is compiled from Stack Overflow. None of it is original material, it's literally a copy and paste job. [So, here's all the books content and more in one link. :)](https://stackoverflow.com/)
Because it's literally copy/pasted from Stack Overflow: &gt; "The Algorithms Notes for Professionals book is compiled from Stack Overflow Documentation, the content is written by the beautiful people at Stack Overflow." These books are garbage. It'd be like trying to learn programming by, well, just reading Stack Overflow answers.
&gt; All eduction should be free. ...
&gt; I nominate /u/Karlog to be your partner! There you go - just nominating random people to be partners. Check your spelling, that ain't me.
Thanks for your reply. Those are all things that would be very useful for me!
My use cases are probably nothing like those in a big project, but what I do is add a `dump` and `load` method to my objects. For almost all of my objects, it is different methods that act on its own attributes so all I need to do is rebuild the `__dict__`. I've had a few instances where it needed a bit more, but even then, it was easy enough to do custom (sometimes the `__init__` needed some information. I just manually pulled that from the loaded info). The downside of this is that I have to save each object, one at a time.
Multiple bastion support has been added in 0.1.8! (see the example in the repo readme). 
 6: .... OK, some of us *will* do your homework for you. But seriously, /r/learnpython. 
That's not how things work. The official Ubuntu repositories for 14.04 only have Python 3.4; you can get 3.5 or 3.6 from a third party repository, but you need to add it first. That said, why are you running 14.04, anyway?
&gt;That said, why are you running 14.04, anyway? Not my choice. I am working with VMs and Ubuntu 14.04 template is the latest version available to me to create a VM from :(
The fix for MicroPython REPL on Windows is available in 1.0.4.
It's kind of amusing when writing out a five item list of the reasons not to actually takes longer than just solving the problem. 
I'm waiting for battle to commence as to which is better once the inevitable f-string solution arrives :-)
So sad that the OP will learn precisely nothing. If it's so easy why do they need help? How will they cope in industry or commerce when they have to think for themselves?
thanks man....I honestly hate it, my office's ISO images are soooo out of date but I have complained and that didnt get me anywhere -_-
[well I already found this solution and it works](https://askubuntu.com/a/682875) I am just now having to add an if statement to my script that detects the OS level and adds that repo if it is 14.04 or below -_-
Sure, feel free to message me on reddit or [contact me otherwise](https://phihag.de/).
How could choosing the resolution easier? Unfortunately, personally I basically always download the best version, so when I wrote that code I may have overlooked a common use case.
Whatever works! `pyenv` is just one of those things I install on every new ubuntu system (even a few raspberry pi's) that I have to deal with. 
It usually means useful, clean data on a topic, like demographics about California, or data on world card sales. Most of it free and collected in places like Kaggle: https://www.kaggle.com/datasets 
Jupyter notebook is awesome if you have to visualize plot, dataset and so on. For all other scripts I prefer PyCharm
I'm sorry :( Promise i use python for a lot of things But bash scripts have their place! Especially if I don't really care about it afterwards.
Who is responsible for these books ? I'd love to translate these books while reading them, who should i contact ? Also, are these completely free (and opensource ?)
I have a setup that does exactly what you're looking for! A couple of years ago I made a Arduino based LED strip thing and a Python library to communicate with it. Code here: https://github.com/TheCDC/ardulight Video demo of PC controlling the strip: https://www.youtube.com/watch?v=F1baDAY0vDA The documentation is...pretty bad and for that I apologize. You'll need to learn digital circuits to get it going and I'm afraid my code won't help with that, but once you're up and running this might help you.
Depends on the package you are using as far as I am aware, you are probably using Requests (?) so you will need to use [http://docs.python-requests.org/en/master/user/advanced/#proxies](http://docs.python-requests.org/en/master/user/advanced/#proxies). Note you can can set http/https proxies as an environment variable (as shown in the link) which may effect other python packages or programs, or as a requests specific setting. 
Cool thank you I'll have a look at that.
Functional Programming maybe?
A mistake straight in the first pair. Python's `import` is like R's `library/require`. R's `install.packages` is like `pip/conda install` in Python.
Unlike other courses which tries to get you to use online utilities, this one: [The Complete Python &amp; PostgreSQL Developer Course](https://onlinecoursesstore.tumblr.com/post/169824099982/the-complete-python-postgresql-developer-course) lets you work directly with Python and its slow enough so that I can really grasp the material.
where is it listed as to which versions of Python are available on which Ubuntu versions?
Since you are using python 2 instead of 3, it is noteworthy that 5/3 is not divide, it is floor division. It will give you a result of 1 instead of 1.6666...
You should be able to just monkey patch the classes you want. Why do you need decorators? class foo(object): def bar(self): print('bar') an_object = foo() barRef = foo.bar def modBar(self): print('wet') retVal = barRef(self) return retVal an_object.__class__.bar = modBar new_object = foo() new_object.bar() It's not like `self` is protected.
That's not really "realtime" You can use any of pythons plotting libraries to do this matplotlib, seaborn or you can get fancy and use plotly or bokeh. 
Making function calls are expensive, and vectors are much larger than needed to store the data are some of the main things that slow down the naive C++. The python code was written using Numpy which is already quite optimized out of the box.
The discussion on this thread seems to convey the opposite. However, I do hope one day using Python for emedded systems is seen as common.
I think if you have 4 years of python experience, you probably won't benefit much from a bootcamp. I think the best thing to do is to find a junior position in python (or whatever language) and just take it so you're honing your skills every day. That's what I did and I think it's worked out quite well.
I just used selenium. Swipes right every 5 seconds. You'll get banned swipping that fast. 
I don't think knowing any particular IDE is necessary to learning python. Quite the opposite actually, it can make you do stuff without thinking about it.
(somewhat unrelated to your post, excuse me) thank you so much for youtube-dl. I'm trying to understand how youtubes adaptive bitrate streaming works and youtube-dl (mainly the youtube extractor code) is a big help.
Hi. I can't help with any guidance, but I need a freelance job about scrappy (or whatever do you feel comfortable) What do you think?
Hi all! I am very new to this kind of thing. How is this better or different than a raspberry pi?
Both `pyqtgraph` and `vispy` can do plotting at monitor refresh rates, if you really need realtime. `vispy` is the aspirational replacement for `pyqtgraph` but it's not nearly as mature. Probably the flowcharts in `pyqtgraph` would work: http://www.pyqtgraph.org/documentation/flowchart/ 
&gt; Can't you just serialize the dict? yes. That is essentially what I do but I do it as a method within the class. It comes down to the difference between json.dump(myclass.__dict__) and myclass.dumps() The reason I prefer the latter is sometimes objects need input to create them or something else special. It all depends on my situation at that moment
/r/learnpython 
There’s [Mapd](https://www.mapd.com/) , which I’m sure could solve your problem. But daily is not real-time. Within seconds is real-time. Think visualizing a DDOS attack in real time. If you’re doing stuff daily then the possibilities are endless. You just need the database to be able to be updated daily and your script to run daily. A cron job would likely easily suffice. But I’m sure you can give money to someone to solve it too. 
Why not run youtube-dl without any `-f`? Then: - you'll get even better quality if available (2k/4k/..) - it won't fail on YouTube if the video does not include 720p - It won't fail on YouTube if the video does not have mp4 files present. - it won't for most of the 1000+ websites youtube-dl supports Also, this output template is already the current default. Sure, you can hardcode it, but why?
is this a scam site? No working documentation, nothing works anywhere
Docker container?
The C++ versions have more than a few issues (some of which the compile may avoid thanks to inlining). In the first version: * `v == vector&lt;int&gt;{0,0,0}` will construct a temporary (which requires a heap allocation) just to compare against it. It will also check if the size of `v` against the size of that temporary. * Each generation does an allocation and a deallocation for the temporary `vec`, which can be expensive. It only needs to do 2 allocations at start-up, 1 for the previous generation and 1 for the next generation. In the second version: * The use of bitset provides better memory effeciency, but at the cost of more expensive accesses. Getting a value now requires a bitwise shift and a bitwise and, which probably more than offset the memory savings. It also creates a data dependency between each index, which isn't necessary. Also, it seems like there are different algorithms being used to decide the next generation's value (e.g. the python versions and first C++ version have 4 combinations that lead to a 1 in the next generation, but the optimized one only has 3). Finally, the C++ version don't use the values between iterations, which a good compiler will take advantage of to just skip the logic completely. Here is one way do it with C++ (though again, not sure if the `update_function` is correct). Also, this should be profiled more. Combining the values into a single `int` might be faster, but it might not. Also, it might be possible to use SIMD instructions, but because that requires 64-byte aligned buffers, it would likely require copying the buffer after each generation, which would probably offset the speed-up. This should be compiled with a C++14 compliant compiler. For best results, use `-O3 -march=native` flags. #include &lt;cstdint&gt; #include &lt;array&gt; #include &lt;memory&gt; #include &lt;chrono&gt; #include &lt;iostream&gt; #include &lt;utility&gt; void use_data(std::uint8_t*, int); namespace { constexpr auto runs = 10; constexpr auto timesteps = 1'000; constexpr auto width = 100'000; auto update_function(int left, int center, int right) -&gt; int; void test_function(); } // (anonymous namespace) int main(int argc, char* argv[]) { (void)argc; (void)argv; using clock = std::chrono::system_clock; clock::duration total_time{ 0 }; for (auto k = 0; k &lt; runs; ++k) { auto start = clock::now(); test_function(); auto end = clock::now(); total_time += (end - start); } auto total_microseconds = std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(total_time).count(); std::cout &lt;&lt; "average time over " &lt;&lt; runs &lt;&lt; " loops was " &lt;&lt; static_cast&lt;double&gt;(total_microseconds) / runs &lt;&lt; " us\n"; return 0; } namespace { // Update rule: // L, C, R -&gt; N // ------------ // 0, 0, 0 -&gt; 0 // 0, 0, 1 -&gt; 1 // 0, 1, 0 -&gt; 1 // 0, 1, 1 -&gt; 1 // 1, 0, 0 -&gt; 1 // 1, 0, 1 -&gt; 0 // 1, 1, 0 -&gt; 0 // 1, 1, 1 -&gt; 0 // // translate this into a 3 bit number via: // x = (L &lt;&lt; 2) | // (C &lt;&lt; 1) | // (R &lt;&lt; 0) // if 1 &lt;= x and x &lt;= 4, return 1, else 0 auto update_function(int left, int center, int right) -&gt; int { auto n = (left &lt;&lt; 2) | (center &lt;&lt; 1) | (right &lt;&lt; 0); return 1 &lt;= n &amp;&amp; n &lt;= 4; } void test_function() { // overallocate so that we don't need to handle the endpoints specially constexpr auto size = width + 2; // allocate storage for the current and previous generation // (this is done on the heap to avoid stack overflow) auto storage = std::make_unique&lt;std::uint8_t[]&gt;(2 * size); // zero the first `size` bytes std::memset(storage.get(), 0, size); // store pointers to the previous and current generation. // after each update, these can be swapped and the old // `previous` values can be discarded auto* previous = storage.get() + 1; auto* current = storage.get() + size + 1; // set the initial condition previous[50] = 1; for (auto time = 0; time &lt; timesteps - 1; ++time) { for (auto index = 0; index &lt; width; ++index) current[index] = update_function(previous[index - 1], previous[index], previous[index + 1]); // ensure values wrap around current[-1] = current[width - 1]; current[width] = current[0]; // pretend that current is being used for something so that the compiler doesn't get rid of it // use_data is implemented out of line as a no-op function use_data(current, width); std::swap(current, previous); } } } // (anonymous namespace) 
90% of my python code is in Jupyter notebooks. Everything is developed / prototyped there. There's often not much of a need to put it in a standalone script.
You can look at tools like pyinstaller. It can create a windows package (if on windows) and even Linux binaries (if on Linux) for you to make it easy to distribute. 
Thanks for the feedback, really helpful!
For Linux and Mac I would suggest to create a pip package and that's it. A User can install a package into home directory using `pip install --user &lt;package&gt;` command. For windows - Yes, something like pyinstaller should work.
No the problem I'm having is the method I want to replace is a decorator. I need to replace/wrap this: Command(*alias, type, etc) Which is used as decorator @Command("command_name", CommandType.Testing) def a_command etc 
Lower power and smaller footprint
In this sense? Your compiler vendor. Using Python 2 is like relying on gcc 5.x - you can do it, and everything works, but you're not getting new features and soon you won't get bugfixes either.
Twilio doesn't work for you?
A good option, and to add I'm wondering if the op is using a setup.py and just add numpy as a dependancy. Then a pip install . or python setup.py install should just add the package for them. 
You can use sensors with raspberry pi to monitor plants and use flask framework to show the stats on a screen.
Try to create a virtual environment and then activate it. virtualenv venv -p python3 source /path/to/venv/bin/activate This will isolate all your packages which you install in the virtual environment. Then try to install selenium. Problems like this arise when u install a package in one python version (2) but try to find in another version(3).
The pi doesn't have adc
ABC
Wish I had python course in hs
build this face recognizing doorbell. idk if thats too advanced https://www.oreilly.com/ideas/build-a-talking-face-recognizing-doorbell-for-about-100
It's great! And next year I take AP Computer Science and will learn Java 
&gt; word[::-1] What is this witchcraft. Can you explain it?
I'm sorry but the APCS exam is a joke unless it's changed recently. I took APCS in high school, passed the exam, and got credit into college (I'm a senior CS major right now). The exam is basically all trick questions, and uses a kind of awkward and outdated bug crawling example. It all just felt so out of date and weak. Don't get me wrong, the credits are useful, and the class touches on some good concepts, like object orientation in Java and big-O notation, but the exam itself is just *bad*.
Hmm, I suspect that the bitcoin.info api data is larger than the raw .dat files. I just did the request for a list of all blocks yesterday. Then for each of those blocks, I requested each transaction. When I chuck that all in one json file, that's 1.2GB, for just yesterday! I know there was a lot of stuff happening yesterday, but is the blockchain really that big? Maybe I'll try downloading the blockchain directly. (Bitcoin.info keeps timing out because it's overloaded)
Jeez that’s a huge amount. Especially considering it’s json... Perhaps since it’s all the same format, call maybe an hours worth of transactions, log them into a file with just what you need, delete JSON and then repeat? That may be more space efficient but probably not time efficient. 
Depending on when you've taken it I think it's changed since then. There have been a few overhauls of cs classes and testing in the past few years.
You can specify start index, last index and the increment value using the semicolons. Leaving it empty would make it assume the appropriate full lengths (start would be zero, last would be length of the array). This taken along with the `-1` would mean take the whole array and traverse in reverse order. For example, given a string or a list (-like) object, `word`, calling `word[0::2]` would return all the characters with even indices. If the word was `asdfasdfasdf`, it would return `adadad`. With `word[1::2]`, `sfsfsf` is the return. Hope this explains it. 
The user's computer does not have privilege to install any dependencies though. Any other alternative? And this is on a linux environment. Thank you 
It’s better to know Java than not, but it’s very bad as a teaching language. It throws a lot of concepts at you without explaining what they are or why you would want them. I think if you have a choice, Java should be your third or fourth language, not first or second. 
If you use a virtualenv created in a directory you own then any installations that pip does will be contained that directory, therefore no extra privilege will be required. 
plotly’s bad man, im always confused when it’s recommended
i mean but who uses a pi without an arduino attached via usb? it's my go to solution for remote data taking
1. The singularity engine 2. Half-Life 3 3. A joke generator 4. A command line recreation of tic-tac-toe or connect 4 5. A maze generator (probably too tricky - I implemented this when learning about data structures in college) 6. Crossword puzzle generator (import a text file with the words you want to include (style points: import text from a book, article, etc and randomly select words from said text) and use those to generate the words hidden in the puzzle, including an unsolved version and a solved version) Really, no matter what you end up making, your teacher will love you if you directly incorporate all or most of the sections you've covered. Just run through your notes or syllabus and try to incorporate as many of the elements that you can, so long as it doesn't go out of the way to complicate your code. You don't need a switch statement when checking for just 1 case on a variable - an if statement is far more viable. And as always, document the living hell out of it. Instructors love proper documentation, as will your future peers and coworkers.
Thank you for your contribution to the software world.
Twilio for sending SMS. Telegram for using WhatsApp like chat features programatically
I took the class in 2014. I really hope it's changed.
got it!!! thanks!
what an idiot I am!! thank you!! 
Then I would go for compiling a bin with pyinstaller. But Surinam keen to see what other recommend
awesome analogy by the way!
I need a Raspberry Pi solution to the following problem - I want to be alerted whenever a carrier drops a Package. Need the pictures and timestamp. I want to be alerted if the garage door is not closed. Need a dashboard with the above information as well as my other day to day tasks - Weather and traffic patterns before I leave to work. Birthday lists from Facebook, stock &amp; bitcoin performance.
If Python is a person's first language, what should their second and third be? 
What is your desired application of Python? If you want get more accustomed to a standard Python dev environment but still want to see the results of specific lines, you could try Atom with Hydrogen. It's a lot like writing in a notebook, you use it with plain old .py in your project. 
I'll get right on it boss! 
Could the C++ naive version be improved so it's faster than the numba version without resorting to tricks like bitsets and compiler optimizations or no?
I'm just going to second Telegram. They have an official HTTP "bot" API, where sending a message to a user is literally a single HTTP request. 
That is a very useful thing to know...
Anyone hiring remote Scrapy developers? I've worked with it extensively in the past, and I quite enjoy it. 
You might like to be aware of rosetta code. 
I came across slack. Pretty easy to use! https://github.com/slackapi/python-slackclient
I've been using the site for several months and it works, they even have a badge like coveralls or codacy. Indeed the FAQ/doc has gone 404 recently (I just checked) but the site and the service definitely works (have a peek at my code's results, last check 16 Jan: https://landscape.io/github/Zireael07/veins-of-the-earth-bearlib/113 )
In Python 3, you don't have to think about it. The accelerated version is imported automatically when it's possible. 
OK thank you!
Problem is I never found it so I thought it'd be cool to get my hands dirty trying some packaging. 
Newtype / distinct types are really good for eg, not being able to eg, add a centimeters value to a time value. They're both derived directly from a floating point value. It's one of the many techniques that eg Ada code uses (and learning materials strongly recommend) to help you prevent mistakes in your code: https://en.wikibooks.org/wiki/Ada_Programming/Type_System#Derived_types Basically in your case, this wouldn't typecheck: "td = ndt - dt", if you were trying to get the difference/delta between the two variables, since they have incompatible types. 
1. A simple chat application? It can be done without a fancy GUI, just on the command line. You’ll need to use sockets, and build a server script to run on your Raspberry Pi, and a client script to run as an end user. You can learn about port forwarding if you want to be able to use it from outside your home network. You’ll also have to have some way to write data to a text file (or something a little more fancy like json or a fully-fledged database) for permanent records of user names, passwords and sent messages. 2. Build a turn based board game like Reversi. You’ll want to learn Pygame for this, so that you can have a graphical user interface to play with. You could then make it multiplayer across two different PCs using some of the techniques outlined above.
Make sure to test it on a VM though. It can take a while before you work out all the DLL issues.
Available for web scraping, data mining and data re-packaging remote jobs. I have used BeautifulSoup, Requests, Selenium and also have a fair knowledge of Scrapy. Some of recent tasks performed are listed at: http://www.kashifaziz.me/web-scraping-data-mining-services/
Can you use "Fraction" to set a limit and find numbers that one can remember? Let's say we want to remember the fractional form for a number like 3.14159, which is a close representation for Pi. &gt;&gt;&gt; a=Fraction(3.14159) &gt;&gt;&gt; print(a) 3537115888337719/1125899906842624 Now, tell me if you would remember 3537115888337719/1125899906842624. But with pydiv, you can just write this code and get something more memorable, like, &gt;&gt;&gt; import pydiv &gt;&gt;&gt; a=pydiv.convert(3.14159,500,500) &gt;&gt;&gt; print(a) ['355/113']
I have a Concept2 rowing machine. With a combination of Python and Javascript, writing code to run on a Rpi that will pull the raw moment data off the Concept2 interface, store it in a transient database, feed the data to a UI running on a touch screen connected to the Pi that is in front of me while rowing, and run customized rowing programs that instruct me on when to speed up to a certain pace, slow down, etc.
Thank you for the comment. I did it so that others who make calculators and stuff like that can apply it. Plus, it was just for trying out packaging and understanding a little of how it works.
I learned python second, after c#, but I would recommend Rust as a second language. I found all the learning material I needed on the Rust webpage. I am not a big fan of Go personally but if you'd like to do back end web development, it's probably the best to learn. Im happy with the order I learned c# -&gt; python -&gt; rust, but it seems like people wouldn't recommend java/c# as an early language.
Assuming the function exists in module `foo` and you've created an alternative decorator `bar`, have this run before the code you can't change runs: import sys sys.modules['foo'].Command = bar
You need to know that there are two versions, so you will understand why your custom `pickle` work 30x slower.
Just curious, what type of performance issues were you running into with other libraries?
Microcontrollers also boot instantly, and only run the code you've put on it. RPi takes time to boot, has multiple services &amp; daemons running, and needs to be shut down properly. 
Where can I find the Spotify one?
`reversed(word)` more pythonic? Or no? 
[removed]
Wow, I didn't know you could call a function from within itself. Somehow I never assume that'd be possible.
Nice algorithms and an interesting presentation. I like the dark theme code blocks. For the last plot, though, I'm getting this message (presumably from plot.ly): &gt; &gt;Plot twist! &gt;Payment required... &gt; &gt;This embedded plot has reached the maximum allowable views given the owner's current subscription. &gt; &gt;Please visit the subscriptions page to learn more about upgrading. There's a "The the" typo in the last paragraph.
I think you can use https://www.pushbullet.com/. I have only tested the Android part and found it to be very easy to set up.
OP just posted a Java homwork in a python subreddit. That shows precisely how much he thinks.
https://home-assistant.io/ You're welcome :-)
FP has nothing to do with it. Simple transformations of lists should be done as list comprehensions, because it is less error-prone, easier in future maintenance, and sometimes faster, too. 
It's called recursion which is a very important concept in every language.
I'm currently doing a final project for school too. We were aloud to choose from problems teachers at my school had (my 'cs' teacher asked around and compiled a list). There were some cool problems to solve!
i think he didn't select Python as a language in the drop down menu yet.
You can at nameko framework for ides/compare: * https://nameko.readthedocs.io/en/stable/
This is a interesting framework. It has the same idea, mine is more like providing business processes. 
How Zerynth differs from micropython?
If it's impossible to do as /u/KyleG says, it might still be possible to make it work. If the original *Command* decorator uses *functools.wraps* on its return value you can access the original function. I.e. something like this: def my_replacement_decorator(func): # ... import some_module some_module.a_command = my_replacement_decorator(some_module.a_command.__wrapped__) But there's no guarantee that you can access the underlying function in this way. If you are really adventurous maybe you can find it in the code object of the *a_command* function.
Recursion is cool indeed but I've noticed that it adds more mental overhead and is resource intensive. So whenever possible I try to use an iterative solution rather a recursive one
hf learning recursion! :)
Back in college, I made a puzzle game [Connect the dots] (https://en.wikipedia.org/wiki/Connect_the_dots) for kids. I was realy nice project to do. I have used turtle lib for graphics.
**Connect the dots** Connect the dots (also known as dot to dot or join the dots) is a form of puzzle containing a sequence of numbered dots. When a line is drawn connecting the dots the outline of an object is revealed. The puzzles frequently contain simple line art to enhance the image created or to assist in rendering a complex section of the image. Connect the dots puzzles are generally created for children. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Wow, this manages to be even worse than [the if statement article from the same sources](https://www.reddit.com/r/Python/comments/7pni2a/python_if_statements_explained_python_for_data/): not only are the stretching of basic syntactic explanations over pages, odd terminology and sub-standard code formatting still there, this article features * *completely incorrect* explanations of the loop's semantics * recommandations of `range` to get list indices (complete with unnecessary start parameter) * utterly trivial syntax error mentions in "best practices &amp; common mistakes" * outright garbage surrounding the `print` function: &gt; You can’t print strings and integers in one print() function. It’s more a print-function-thing than a for-loop-thing but most of the time you will meet this issue in for loops. E.g.: print("Here's the letter #" + number + "of it: " + i) &gt; If you see this, turn your integers into strings by using the str() function! Here is the previous example with the right syntax: print("Here's the letter #" + str(number) + "of it: " + i) Can this domain just be banned already?
MicroPython is a very good implementation of Python on microcontrollers. Zerynth is Python even more tuned to micros than MicroPython is. A Micro MicroPython :) that addresses also business issues related to code size, scalability and Real-Time performance. For a more detailed comparison take a look here: [Micropython vs Zerynth](https://community.zerynth.com/discussion/382/zerynth-vs-micropython)
How do I use this?
Thanks!
If you need an ORM, check out [Peewee](http://docs.peewee-orm.com/en/latest/). Works great with Postgres!
Check out Zato ESB too (:
Model names?
micropython runs on microcontroller while zeryth is an IDE with Python that compiles the Python code and then uploads to the microcontroller that is pre-flashed to run those compiled blobs.
Write a plugin for jasper that does something cool.
I copied the notebook to a local environment because I don't feel comfortable providing a plain text version of my password on a site like that; however, I am unable to sign in through the mobile client. Is this a problem that others are having?
Hey thanks, the link was useful.
Start here [Python Flow Based Programming](https://wiki.python.org/moin/FlowBasedProgramming).
You could take a look at [gino](https://github.com/fantix/gino/). It's build on top of SQLAlchemy and uses asyncpg as a database driver. But as you can see it works onliy with PostgreSQL.
I actually find recursive algorithms are easier to understand when you're working with a data structure that is itself recursive, e.g. trees.
It is often the case that if monolithic approach to django is not for you - pyramid might be a good option. You also get a lot out of the box, very clean code base without threadlocals, and at same time you get great flexibility to do things your way.
Yup that's why I said if possible use iteration. Tree traversals and all of that? Yup definitely recursion. Reversing a string? Hell that doesn't even need iteration. But argument there some things are easier to grasp using recursion. Still is pretty resource intensive tho
I've replied on the site directly, stating that it's the worst tutorial I've seen in the 17 years I've been using Python. The author clearly hasn't got a clue.
Check out celery
Take a look at MPI4PY. It is like regular MPI, but a little bit easier. If you mainly need to parallize for singluar CPU, you can take a look at Numba parallel. Numba can split up for loops unto different threads.
http://goalkicker.com/PythonBook a free ebook, maybe you like this style of learning if you just read it
The topics seem to be relatively targeted at beginners. Definitely will download. Thank you!
Depends what the project is. Zerynt as well as MicroPython can handle for example ESP32 but it's not guaranteed that libraries for third party components will be available. Zerynth has some, mostly available with the default install. MicroPython has more I would say but some are STM-only (pyboard and using pyb module). Both are usable if you have the libraries (or can "easily" write them) for components you want to use.
Indeed, I've updated the docs to reflect this.
Wow, I didn't know there are so many free books! Thank you.
I'm studying the blockchain! I've taken a huge interest in the various consensus algorithms - proof of work, PBFT, etc. I'm hoping to find work as a blockchain developer at some point. 
Nothing fancy, my project includes temperature sensors, door switches and some air quality sensors and a couple esp8266 boards. So I think I’m better off using micropython 
Thanks!
Ooo when I first saw the [::-1] operator I didn't realize I had stumbled upon a valuable tool for the toolbox. That operator is amazing
it gives me an error "no module names selenium"
What kind of parallelisation are you looking for? Running across multiple computers or running more jobs on one computer? Are the fitting jobs independent or do they need to communicate with one another? You might get more useful answers if you can provide that information.
Apologies for the lack of information then. I am looking to potentially learn both single CPU cases, as well as using a Cluster to process the workload. My fitting routine is using a chi-square minimizer from LMfit, so each case is independent and has pre-set parameters to start off from each time it is called. The current example use case is that i have 470 objects (arrays of 256x271), and then I run each object with 10-20 iterations (copies). Each time it starts from scratch with no priror knowledge of the previous fit's results. I hope this is enough to get a better idea of what I am after.
As others have said, you could create a virtual environment, activate it and then pip install selenium. That way you would be sure that you used the right pip/Python.
I had a student use multiprocessing pool.starmap for this exact purpose, it's not pretty but worked https://docs.python.org/3/library/multiprocessing.html?highlight=starmap # Creating curve fit function called def curvefunction(model, t, h, P0, lbounds, ubounds): try: opt, cov = curve_fit(model, t, h, p0=P0, bounds=(lbounds, ubounds)) except RuntimeError as e: print(e) opt = np.full(5, np.inf) return opt # Monte Carlo method to find best fit data = [] for j in range(n_runs): # Create list of tuples for starmap i1, i2, i3, i4, i5 = np.random.choice(n_samaples, 5) initial_guess = (amplitude[i1], period[i3], phase[i2], Velocity[i4], Acceleration[i5]) CurvefitValues = (sin_vel_model, t_diff, v, initial_guess, lower_limits, upper_limits) data.append(CurvefitValues) # Use Pool and curvefit to get all the parameters with Pool(2*cpu_count()-1) as pool: out = pool.starmap(curvefunction, data) pool.close() pool.join() 
running above command says"/usr/local/bin/python3: No module named pip" is pip3 not installed?. i ran $sudo apt-get install python3-pip and it says "python3-pip is already the newest version (9.0.1-2)."
It looks like you have more than one version of Python3 on your computer. Does python3.6 -m pip install selenium work for you? If that works, try running your program with python3.6 programname.py
you're missing the fun of `foldl`, `foldr`, `scanl`, `scanr`
1. /r/learnpython 2. If you want to assign multiple variables in one line, use `A, B, C = 1, 2, 3`.
Awesome, I will give it a look.
i used A=1 ; B=2 ; C=3 Does that work ^? 
Yes. 
Did they explicitly say that you have to manually define each variable? Sounds unnecessary - best way would probably be to use a dictionary: import string aList = list(string.ascii_uppercase) myDict = {} i = 1 for letter in aList: myDict[letter] = i i += 1 print myDict And if you need to access a single letter: print myDict['A']
Pretty easy to use , thanks.
Yes it is, much better than all other solutions I came across the internet. 
Fun! 
I tried wrapping the importer at your recommendation but it occured to me, no way for me to hook into the importer if the module containing the hook hasn't imported yet, right? Am I misunderstanding?
Find other people learning Python and form a study group.
Automate the boring stuff is a recommended read
Im a noob and thats too complicated for me ._. please reply to my new thread i need help somewhere else now...
I don't understand your requirement. In order to use find, you have to know what you're looking for. But it seems to me from your description, that you won't know what you're looking for until you get the result from your function, but if you don't know what you're looking for, how will you know when you find it? Could you please post a use case or pseudocode?
wow i have no idea what u just said but i meant lucky= 2344 lucky.find('2') =0 i wanna know how to use the position to find the number instead of the number to find the position ;-;
You tried using Notepad ++?
crap i mean lucky='2344' its a string
You're talking about indexing into the string. You need to address the char position you're looking for with an index or subscript.
half-guessing what you want, and assuming that you mean lucky = '2344' : lucky[0]
uh and how do i do that? can u show me a code or smth. Im really bad at coding and im trying to get better
Thanks- that was my motivation as well! Shout out to the "unofficial Ggoogle Music API" https://github.com/simon-weber/gmusicapi which made this surprisingly straightforward.
Oops. At least it's getting people to use 2FA 🙃
I've suggested an approach; it will be a much better learning exercise for you if you figure out how. It shouldn't take much research effort. 
Little disclaimer: I've never built a self balancing robot. That being said, look into OpenAI Gym and the game cartpole. Definitely seems applicable to the self balancing robot problem. With Gym you would be able to test and potentially train your machine learning algorithm before loading it on to your robot which I imagine would be a plus. 
I definitely understand the security concern. You could create a temporary app password. Binder runs a new docker container on each visit, so it is more than likely not persistent. Source code here: https://github.com/jupyterhub/binderhub/blob/master/README.rst 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [jupyterhub/binderhub/.../**README.rst** (master → 8d171f0)](https://github.com/jupyterhub/binderhub/blob/8d171f0c818d7a1c020749d9b229caa760edecc0/README.rst) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dsvhv9n.)
I'm hosting it on Digital Ocean. Their site itself has quite a lot of useful docs for setting up the server etc.
!remindme tomorrow
Okay, sorry for freeloading you in a way :( I guess Ill ask my teacher tmr then this was a assignment for us thats due by tmr xd. Thanks for the help anyways man!
Click on the ipynb file, go the the link to create a google music app password, plug in your user and app password in the notebook, then click run all in the notebook menu. Your charts will appear below. Cheers. 
But not /that/ important in python as we dont have tail recursion optimization.