Learning python the past week to start working on project malmo. No idea what I'm doing yet.
this sub is for beginners too stupid to read the sidebar
[`pandas.read_html('https://en.wikipedia.org/wiki/List_of_nuclides')`](http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_html.html), and maybe supply a `match=r'regexp_for_the_table_id'` parameter if it's not working. The main win here is that the table parsing is far more robust, but there are also nice features like efficiency, speed, and getting a dataframe immediately. 
So true.
if you upgrade all packages, and use pip freeze &gt; requirements.txt, yes. However, in most cases you upgrade only what packages you need, because things may break. Many important packages release backwards-incompatible releases, which will break the project if changes are not made. That's the whole point of pip-upgrader.
Have you heard of [parslepy](https://github.com/redapple/parslepy)?
Don't do that, you can't tell when the object destructs. For example, if an exception is thrown, your object is captured in the stack trace and doesn't get destroyed before the exception handler is executed, like in C++. Use the ["with" statement](https://docs.python.org/2/reference/compound_stmts.html#with) and context manager protocol instead (see also [contextlib](https://docs.python.org/2/library/contextlib.html)).
Your `map` call doesn't appear to be doing anything. Also, I'm not sure why you think a `lambda` will help. /r/learnpython is a good place for this 
[float(a) for a in scope.ask('CHAN1:WAV1:DATA:HEAD?').split(",")] i guess
Really nice initiative! Thx for that.
Have a look here: https://docs.micropython.org/en/latest/esp8266/esp8266/tutorial/intro.html
That's a bit weak. It would be much better if the exposed API was just "send_sms(url, username, password, message)" and then the user of the API can create a partial ("sms_client" in the example) him/herself. 
I'm actually really confused how it's running at all. izip is gone in 3, but returns in generators weren't added until 3.3
Thanks :)
There are several ways in pyparsing to skip over text chunks that don't match your grammar: * Use [SkipTo](https://pythonhosted.org/pyparsing/pyparsing.SkipTo-class.html) in your grammar to skip over the leading class to get to your form data. * Instead of parseString (which means your grammar parses the entire string), use [scanString](https://pythonhosted.org/pyparsing/pyparsing.ParserElement-class.html#scanString) (a generator that returns a `(tokens, start, end)` tuple for each match) or [searchString](https://pythonhosted.org/pyparsing/pyparsing.ParserElement-class.html#searchString) (a simple wrapper around scanString that just returns the tokens)
Spend less time playing computer games, and more time learning Python. Why bother going to school if you aren't going to invest the time in *yourself*!?
"bfs" is a terrible method name. As long as you are converting to python, why not pick a decent name too?
Knowing your language is autism? You stupid?
Good point. I made a couple of other improvements during the translation. For example, rather than modifying the nodes of the input graph, I build and return two new data structures: a dictionary with the path lengths and a directed graph with the paths. I gave the variables better names, so I could have picked a better name for the function, too.
Python is easy enough to pickup in a few minutes. Just try it. Even if you don't like programming, you'll still have learned something that may be useful some day.
Flask-wtf is a wrapper around wtforms that helps integrate it with flask. 
&gt; I think that would reduce the refactorability of the code Why? &gt; and increase code duplication in every module that uses this API Why? Instead of doing sms_client = SmsClient(settings.sms_url, settings.sms_username, settings.sms_password) like you suggest, the user could just do def send_sms(message): return sms.send_sms(username=settings.username, password=settings.password, message=message) I think that's more readable and doesn't create an object for no reason. &gt; For example, if we decide to add a retry mechanism to the send_sms API, then we would have to make changes everywhere Why? A constructor and a function can both have default arguments so they have the exact same problem.
Having the user wrap the exposed API into their own functions is a sign of a bad API imo. The functionality a user would wrap should already be built into the API.
Quick question: why not use tab but indent 4 separate spaces? I feel like the less typing the better.
This would be interesting! Thanks you.
http://stackoverflow.com/questions/419163/what-does-if-name-main-do
Please reply on https://www.reddit.com/r/Python/comments/67udx6/python_interface_design_designing_modules_part_1/dgtjfe3/ for specific objections. I don't understand what you or dev2302 are talking about. It seems to me like you want more complex code for no gain.
I don't want to diminish your frustration, but pushing through this frustration you're feeling is a large part of programming! First off, what Python version (check with `python --version`) are you running and on which operating system? Do you have `pip` installed? (Check with `which pip` on posix systems, I'm not sure on Windows).
The intent is to build a reusable module which will be used by other module. Exposing just the send_sms API wouldn't mean designing a reusable module Also, the developer using it in the other modules will have to handle things like adding a retry logic. Suppose we had exposed just the send_sms API and a developer had used it in 4 modules. Now if he was asked to add a retry logic, he will have to do that in all the 4 files. Which will cause Code Duplication 
[What...](https://giphy.com/gifs/firefly-drawing-motivation-UvwI1X7XkbXq0)
&gt; like you suggest, the user could just do &gt; &gt; def send_sms(message): &gt; return sms.send_sms(username=settings.username, password=settings.password, message=message) &gt; The purpose of keeping this as an object in sms.py is to to promote refactorability. Suppose you have to load balance the send_sms functionality with another service provider that uses access tokens instead of username/password, then you could just write that balancing logic in sms.py, since in all the user modules, you have just used sms_client.send_sms(number, message). 
Just rolled out a small .exe that is the default app on the user's computer now. This is a little over done, as I had it as a tkinter app at first. The os.system('start app') call spawns a cmd window anyway, so I stripped it out. (I also noticed a sizable startup delay for tkinter, vs cmd for really no gain.) It pauses 3 sec if there was an update, 10 sec if there was an error. Needs a bit of work, but functions pretty well. I have folders in the network path, like '2017-04-26' and just have ver.txt updated with that in contents to point the launcher at that. This pulls the app_name.exe locally. This can be a decent startup boost, as I'm at about 8 MB pulling over the network at start otherwise. We started using C:\Projects at our company before windows had an established place for this for the user. I would probably otherwise use user's AppData folder or similar for this that is default r/w regardless of user class. import os from time import sleep from shutil import copyfile class UpdaterWindow(object): LOCAL_ROOT = os.path.join("C:\\", "Projects", "AppName") NETWORK_ROOT = os.path.join("\\\\UNC-PATH", "PYProjects", "AppName") LOCAL_EXE = os.path.join(LOCAL_ROOT, "app_name.exe") NETWORK_VER = os.path.join(NETWORK_ROOT, "ver.txt") LOCAL_VER = os.path.join(LOCAL_ROOT, "ver.txt") def __init__(self): self.program_version = None self._status = list() def network_exe_path(self): return os.path.join(self.NETWORK_ROOT, self.get_remote_version(), "app_name.exe") def get_local_version(self): try: with open(self.LOCAL_VER, mode='r') as f: version = f.read() return version except FileNotFoundError: return None def get_remote_version(self): with open(self.NETWORK_VER, mode='r') as f: version = f.read() return version def copy_from_network(self): copyfile(self.network_exe_path(), self.LOCAL_EXE) copyfile(self.NETWORK_VER, self.LOCAL_VER) def update_results(self, message): print(message) def launch_program(self): self.update_results('Checking for update...') try: local_version = self.get_local_version() remote_version = self.get_remote_version() if local_version != remote_version: self.update_results('New version found: {}'.format(remote_version)) self.update_results('Installing...') self.copy_from_network() self.update_results('Starting program...') os.system('start {}'.format(self.LOCAL_EXE)) if local_version != remote_version: sleep(3) except Exception as e: self.update_results('Error Occurred: {}'.format(str(e))) sleep(10) us = UpdaterWindow() us.launch_program()
&gt; Lift the whole project into a module instead of having everything be in the base of your git repository. What advantages does this have?
Pyqtgraph is working great, plugged right into my existing PySide chi nicely. Thanks!
Learning a new language C or C++ if you don't already know it is a SMALL cost if you want to get into embedded programming, considering all of the tooling, ecosystem, documentation, and resources you would be able to take advantage of. Believe me, choosing a new platform like micro python is going to be more work for any project that matters (tm). You use micropython or some other trendy new thing for fun, not because you want to do things the easy way.
Have you read through the docs at https://packaging.python.org/installing/#requirements-for-installing-packages 
Python since version 3.4 includes `pip`, so you can install virtualenv with `pip install virtualenv`. Python since version 3.3 includes `venv`, an alternative to virtualenv that's probably sufficient for your needs, so you can also just use that instead.
Awesome - thanks! This is helpful! Does this book have actual learning exercises that you can go through to go along with the text?
Did you record this in a car? Audio is horrible and your accent is not helping at all.
&gt; pycharm's built-in package manager. what?! I had no idea :P I'll check this out
I miss people just writing a how-to for this kind of stuff rather than record a terrible video.
Misread as MontyPython
sweet! it's a cool project, i'm glad I stumbled on it. 
[Well looky here](https://www.jetbrains.com/help/pycharm/2017.1/installing-uninstalling-and-upgrading-packages.html) Glad to know it exists! I wonder what else i'm not using in this thang.
What's it? What operating system are you using, which shell, how did you install which version of Python?
There is nothing of substance to this post. You are merely posting your script with almost no rhyme or reason other than to just post, which makes me believe your just looking for hits on your web page. If your goal was to help 'newbies' then please post to /r/learnprogramming, but I don't think they'll like it either since there are far better write ups out there about data structures out there.
https://github.com/laike9m/pdir2
i like both, it's nice to have options. 
This is so damn good. Awesome!! Flask had started as a prank which turned out to be true and made a developer's life easy. Now it has been made easier. Looks wonderful too
Doesn't mean that we can't discuss alternative tools and compare their use to Python
What is the C API for MicroPython like? I have always been a bit annoyed by the Python-C API, and I'm curious if they did it better. 
Whereas I don't think [Fluent Python](https://www.amazon.com/Fluent-Python-Concise-Effective-Programming/dp/1491946008) woudld give you the "nitty-gritty" parts of Python, I seems like it would be a great book for an experience Python developer looking to polish Python programming. *Disclaimer: I haven't read this book yet, but it is no kidding in the mail on the way to me. Like you, I'm looking to polish certain parts of my Python programming, and just become and all-around better Python developer.*
I've read it, and it's definitely a good book. I've also found "Effective Python" and "Treading on Python Volume 2" useful.
Yes it is.
What's the missing tooling at this point? When I looked at MP a year ago or so, it did indeed seem like there were tons of libraries that didn't exist or were very rudimentary like MQTT. Has that situation improved much or are there gaping holes still?
You bring up a really good point and this easily could turn into a slippery slope. But, just as reposts help to expose "legacy" content to new viewers (or viewers who missed it), posting a random but useful module you found can be beneficial to the community...in moderation! Personally, I've never heard of this module but I am going to give it a try tomorrow
Crippled how, seems fine to me 
What you said is true, however if everyone sticks with the current standard there is never going to be progress. There is always a phase where the new tool, however promising, is not yet the best or easiest. However, once it matures, who got in the boat earlier enjoy some benefits. It is a fact that someone who start toying with mcus is not going to do a big project anytime soon. I was studying c in order to use Arduino and I almost quit 'cause of boredom. Micropython made me stay in this world a little longer, appreciate it and gave me the motivation to go on and now I learned how to work with Arduino as well. I would definitely recommend Micropython for an absolute beginner.
Neither. Get a proper code editor. Sublime Text is probably the most popular (not free, but practically). Other good options are Notepad++ (Windows only), Geany or Atom. Personally, I like Geany. Or you can get a full fledged IDE such as Pycharm or Spyder. Here's a long list of options: https://www.reddit.com/r/learnpython/wiki/ide. Wikipedia also has good lists of [text editors](https://en.wikipedia.org/wiki/Comparison_of_text_editors) and [IDEs](https://en.wikipedia.org/wiki/Comparison_of_integrated_development_environments#Python). 
Oh okay. Yeah that simplifies it a lot more for me. I've been learning from the learn Python the hard way and he's so adamant about doing the programming using atom and running it with PowerShell but it's been a bit confusing. I also hear a lot of complaints about that guy though too
Because now you can write for Python 3.6 directly and not rely on `six` or `2to3`. Also the base version that you develop for is going to be the latest Python version, not the oldest one. (Not sure how this accomplishes that goal, just saying that's the goal)
thank you!
It is ideal for beginners but if you focus on just beginners you mis the point of Python. MicroPython is ideal for professional development where performance is suitable and time to market is critical. This especially if the market is one to a few hundred devices. It is ideal for industrial automation projects. Don't get me wrong here there is a lot not to like about Python in general. The thing here is that it is the only solution that puts a modern interpreter on a Microcontroller, with a REPL. Sometimes having an interpreter on an embedded board makes more sense than having a stand alone development system. Id actually would like to see something like a Swift or Rust system embedded on a chip/board but that has yet to pass. I look at MicroPython as filling the niche left by BASIC maybe even Forth. It is kinda senseless to compare it with C which fills a very different need. 
I use jupyter notebook more often, that'd make a good plugin for when I'm exploring. You can do the same thing with pprint magic
Don't forget tauthon is also available. It's an actual cpython version with back-ported 3.X features. i.e. it's what 2.8 would have been if it were allowed. https://github.com/naftaliharris/tauthon
Hmmm. So say you start the site and a secret key is generated, it will stay constant until the site goes down for example. Then rerunning the site a new key will be generated. Is this wrong? Should the key be generate once and then kept consistent if the site goes down and needs to be redeployed?
No. Just no.
That's actually really interesting. Hopefully someone more knowledgeable than me can weigh in on MPython's support of that. 
worth checking out [Armin's talk here](https://www.youtube.com/watch?v=1ByQhAM5c1I&amp;feature=youtu.be) where he talks about a lot of best practices for Flask apps. 
At this moment it just translates some syntax, so you should have in mind changes in standart library.
The main goal of the app is that you can stop worrying about support of older python versions and just translate code to them. But at this moment it just translates some syntax.
`super().method()` shouldn't be compiling down to `super(type(self), self).method()`!
All those widgets are probably why it says his ram is at 71% usage.
Pretty much anything that says, "I found a bug, and then fixed that bug," or, "I needed a feature, so I submitted it," is worth an upvote.
be sure to check out ossec hids
Sort of pricey, though. =/ What about PyDev?
Hmmmm... Cool perspective, goldfather8. I'll def give it all some thought! Thanks
I think I found what I was looking for. scanString() allows me to only parse content that fits my grammar.
Oh, not thought about that, you're right.
Have now changed to Atom ❤️👌🏻
There are errors for the input lines. Since python interprets any number starting with zero as octal (go figure), do not use leading zeros. Note how 0103 (standing for Jan 3) appears in the output as 67 (octal 103). 
I realize that you are doing this to combine the learning of python with Quant Finance. Even then, you might want to look at Quantopian and that community. Good luck. 
Kids trying to get someone to do their homework for them. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
If you're hiring a develop, post in the job sticky
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
What if we wanted the avg price over release 19-23?
I've never used .find but I would just run a For Loop and check each incremental value as being an exclamation mark and if it is, remove it. Example : for i in example2: if example2[i] == "!" : example2[i].remove() else: break I feel this way is better for beginners since it helps you get better at using loops. Theres so many built in functions these days that do a lot of complex tasks for you, it can make learning more difficult. They should really be used to just speed things along once you understand the fundamentals. I don't know if this helps but I hope in some way you find it useful. EDIT: formatting
This code doesn't actually work. The `for` loop is looping over the characters of the string rather than the indices. There is no `remove` method for strings.
You're right. I noticed my mistake. It doesn't need to reference an index value. Derp. 
You likely could use decorators for this, but it would be harder to read for Python programmers and doc tools that don't use .__doc__ will not get it. 
Tutorials were not recorded :(
I can actually support that reasoning.
I wouldn't bother with find, I'd just use [string.replace](https://docs.python.org/3/library/stdtypes.html#str.replace) :-)
that is extremely helpful thank you!!! would you just be able to clarify how the below comes to 20? second = example.find('!', first + 1) 
I skimmed a bit, but didn't get it. He mentions his goal, mentions Electron... why roll his own instead of using electron? Was there some benefit?
Hey guys, this is just a small project I made that makes Mandelbrot fractals using Pillow. I'm looking into how to make it run faster, maybe with multiprocessing? Any ideas are appreciated.
oh nevermind, dumb me. i figured it out!
http://stackoverflow.com/questions/11091623/python-packages-offline-installation
I'd assume that this bit is relevant &gt;If you’re thinking that Python can bind with C and take advantage of these features as well, then you’re right. Look no further than the pycef project to call the CEF wrapper functions directly. However, it does come with the Chromium binary as an added dependency. So if you’re worried about managing complicated support statements, think before you jump. In my particular situation, the Sofi project manages all interactions through a websocket, providing a consistent interface across different types of platforms (web, desktop, mobile, etc.). This means I don’t have the need of commanding or driving the browser. I only wish to interact with the DOM it displays through standard web technologies.
I wouldn't mind integer division as an import. I want it to emulate Fortran, which does do integer division.
I notice that you too argue that a simple function is worse without comparing it to anything. Let's recap: I'm saying class SmsClient: def __init__(self, username, password): self.username = username self.password = password def send(self, message): pass # do something here is just a longer way to write def send_sms(username, password, message): pass # do something here You have not explained why this is somehow not the case, or why the user of the library somehow magically will be a better programmer when exposed to a class instead of a function. Why does the user of the lib not write in 4 places: SmsClient(settings.username, settings.password).send(message) ?
Why not a proper use of Numpy? Built-in python do not fit well for that kind of computation. You can check on numba too, which can give you great results with that kind of loops. An other way to have a serious time boost is to use opengl (with vispy or pyopengl), or to use a library like theano which will give you an optimized version of your algorithm for GPU computation.
i see a lot of merit in this project not for python 2 support but for allowing library developers to use 3.6 idioms (i like variable annotations and formatted literals) and still support eg. debian stable whose python3 is 3.4
You can start by profiling your code. The number one hot spot will be the loop where you're calculating the z=z^2 +c iterations. You can optimize your version a bit more. For instance, I have one here that does a lot less operations in the inner loop: https://github.com/irmen/Pyro4/blob/master/examples/distributed-mandelbrot/server.py#L40 I used python's complex number type to reflect the actual mandelbrot formula. In [that example code](https://github.com/irmen/Pyro4/tree/master/examples/distributed-mandelbrot) I also explored parallelizing the computation over multiple cores. Finally, you can try using pypy to run the code. It should result in a massive speedup without having to change anything.
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [irmen/Pyro4/.../**distributed-mandelbrot** (master → e26caed)](https://github.com/irmen/Pyro4/tree/e26caede6286007dd838ec0c84d761d2b5e06576/examples/distributed-mandelbrot) * [irmen/Pyro4/.../**server.py#L40** (master → e26caed)](https://github.com/irmen/Pyro4/blob/e26caede6286007dd838ec0c84d761d2b5e06576/examples/distributed-mandelbrot/server.py#L40) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dguxhfy.)^.
I'm not exactly sure what you're asking. But if the goal is to programmatically browse to pages, enter data into fields, extract values displayed on a page, etc, with Python, I would recommend PhantomJS or chromedriver.
use selenium. It does exactly what you are trying to do. 
Using electron, but with a good language?
Give me an hour, I'll write something up for ya. EDIT: Try this: https://gist.github.com/anonymous/5246111610b1945d79130ca56bce3b46 Note: This uses the [RoboBrowser](https://github.com/jmcarp/robobrowser) library, which is a bit more lightweight than selenium. I used it because I'm lazy and didn't wanna parse out EVENTTARGETs, otherwise I'd use pure requests. Also, if possible, use Python 3, instead of Python 2. ***IMPORTANT: Do `pip install robobrowser` in your command line!*** ---- Also, good work on the code so far, really make sure to try and understand what's going on. I noticed that in your code, it seems like you may have read a tutorial on submitting a form and copied it. If you understand what's going on before copying over that code, it'll make things run a bit smoother. Consider your code right here `match = re.findall("PA/(\S*)", text)`, and then `value = match`. What would be the data inside `value`? It would be a list of strings, that look like [this](https://gyazo.com/3a36b975c8a38774196d4bd5b3142992). We need to transform that into something meaningful before submitting our form. So we loop through each item in the list, split it by the slash and stick it in its respective variable. Then let's look at this in your code: `query = {'field': value}`. Ok, so this makes a [dictionary](https://docs.python.org/3/tutorial/datastructures.html#dictionaries), with your entire [list](https://gyazo.com/3a36b975c8a38774196d4bd5b3142992) in the single `field` value. `res = requests.post(url, data=query)` will send a POST request, but that POST data isn't meaningful yet. There's no form field called "field", and if there were, it certainly wouldn't take a Python list formatted with a slash between the case number and year! So our task is a bit harder here. We've gotta turn that into something the web server (pa.org.mt) can understand. And in order to do that, we need to go digging in the HTML source code of the page. I'd recommend reading [this](https://www.w3schools.com/html/html_forms.asp). What we're looking for is the name of the form fields. If you use Chrome's Inspect Element, you can [see the name](http://i.imgur.com/P3pOJWE.png?1) of the form field we want. Now we do that for the second form field, and we've got something cooking. Anyway, that code is functional, but I'd recommend picking it apart. Try and change something and see what happens! Maybe add more print statements throughout that code and see what kind of information each variable contains. ---- I know starting out, this almost seems like a bit too much work. Like you've gotta get your hands dirty with HTML source code? POST requests? Different form field names? I promise you that it's worth it. Figuring out stuff like this is really rewarding. Good luck! Please let me know if you need any help understanding something!
&gt; Show how adding retry logic would be done in your preferred scenario with &gt; a class and I'll show my version and we can compare Can you please share your code first. Its about what you prefer. If you dont prefer a class based approach then its fine. You weren't so clear when you were stating your point. If you feel that both the approaches are EXACTLY THE SAME, why did you say "Its a bit weak" in the first place. I would also request you to try to have a constructive discussion 
Thank you for your reply. I'm using anaconda as the interpreter. That includes jupyter. Is that sufficient?
&gt; Why does the user of the lib not write in 4 places: &gt; &gt; SmsClient(settings.username, settings.password).send(message) &gt; ? That's exactly what's mentioned in the blog post. **Requoting some text from the blog** &gt; The solution is to create SmsClient object in sms.py module [see footnote 1]. Then orders.py and logistics.py can directly import the object from sms. Here is how it looks. So, at 4 places in my code, I would use this - from sms import sms_client ... #when you need to send an sms sms_client.send_sms(phone_number, message) So, if someday I have to replace username/password by a token, i would just export some other object from sms.py and No changes in the user modules. This is not possible if I export the function **send_sms(username, password)** from sms.py, since in that scenario I would have to change the function signature and hence, all the calling statements too. This is "WHY", exporting an object instead of **send_sms(username, password)** "magically" increases the refactorability of the code. Still, if we have to use functions in sms.py, a better function to expose would be **send_sms(message, number)** that's just equivalent to putting them in a class and following object oriented principles, "BECAUSE", a function represents functionality, and a class represents an entity. Functionality can and WILL change over time, but the entity must remain unaffected.
Looks interesting, but at the moment it looks like a project in itself and not something I'd use for a project.
I believe ipython was split out of Jupyter and is different extra dependency.
You are following the functional paradigm, the article is recommending an object oriented approach. One isn't necessarily better than the other. Both are achieving the same objective, and which one you choose is a matter of preference. The essential idea is that username and password is an implementation detail, and must be hidden from the client developer. You can create a partial function to provide these parameters and then use the partial function everywhere else. Or you could create an class and provide the username and password as constructor arguments. The core idea remains the same. 
Thank you so much, now it is much more understandable for me, thank you so much!!
Thank you. I will post to r/learnpython.
I recently picked back up on a text based RPG that I had started months ago. Last night I implemented a few changes to the combat system so that not every attack is a guaranteed hit. I plan on implementing armor and revisiting the equipping system next.
It's fair to say that everybody handled it calmly. It certainly kept ThievingRottenScumbags.co.uk aka lawyers out of the picture :-)
Well you have it backwards! The article is recommending putting the wrapping class IN THE LIBRARY. So now, since you just used that class directly, you're actually using that library directly. That's the opposite of what you just said.
Well, I just saw that I screwed up an missed the argument "message" in my send_sms function, so sorry about that. But in any case your argument doesn't make sense. &gt; a function represents functionality, and a class represents an entity. Functionality can and WILL change over time, but the entity must remain unaffected. I have no idea what that means. A function is an API, so any backwards compatibility concerns apply just as much as for a class. 
I very much doubt that you'll ever get anywhere near 100% passing as 2to3 has around 50 outstanding bugs that are unlikely to get fixed as they are all edge cases.
If you choose Electron to make a GUI app without any further thinking - you're absolutely incompetent as software developer. It has so many flaws that i avoid Electron apps even as a user.
 direction = True directionpin1 = motorpinA directionpin2 = motorpinB ... if direction: direction = False directionpin1 = motorpinB directionpin2 = motorpinA else: direction = True directionpin1 = motorpinA directionpin2 = motorpinB for i in range(0,framecount): gpio.digitalWrite(directionpin1,gpio.HIGH) sleep(pulse_length) gpio.digitalWrite(directionpin2,gpio.LOW) ... 
Jupyter is separate but requires ipython as it's own dependency. So if you have jupyter you have ipython.
The Python Cookbook is fantastic. It's free and online too.
1. /r/learnpython 2. If you're using `from config import *`, you shouldn't need to use `config.` to refer to variables. However, it's not the same as `import config`.
I mean it's empty. It's a string with value "".
Can you post your code?
It's a bit long, you know. But I'll like the Git page asap.
This is one of those things that I have open and use all the time, figured somebody else might get some use out of it as well.
Who is writing this library? If I understand correctly, it's the provider (or someone hired by the provider), for use specifically with this API. In which case it would seem pretty silly to map an API providing a single simple function according to 4 parameters to anything other than a single simple function taking 4 parameters. Leave it up to the client to wrap it up however they like for re-usability for cases where they may want to handle multiple providers and accounts. It's not like you can completely abstract away username and password, the user has no choice but to provide it at some point. And if, for example, as part of their retry logic, they want to switch accounts (usernames and passwords) the proposed class structure is no longer ideal. I will point out we're probably missing the point of the article here, and we're over analyzing an example that is simplified for the purposes of demonstration. 
You may not have the deafult drawing backend available? If you're in a remote shell or similar without GUI libraries installed, that's bitten me before.
Exactly. Good to see someone getting this :P
I've found out that Pygame has a nifty pygame.transform.smoothscale() This ultimately led me to choosing Pygame for my projects, as it seems to be the simplest to use. :)
First off, Python questions should go on /r/learnpython. Second, what have you tried? What code have you written that doesn't work?
[removed]
sorry im new here. For question 2 I have this: height = raw_input("Enter the height:\n") width = raw_input("Enter the width:\n") gap=" " def print_rectangle(height, width): for i in range(height): if i == 0 or i == height-1: print(width*'*') else: print('*' + gap*(width-2) +'*') print_rectangle(height,width) When I run it I just get a blank box.
Work in a virtual environment first of all. Generate a requirements.txt file that contains the list and version number of the installed packages (`pip freeze --local &gt; requirements.txt`). When you want to use the project on another computer, do this: re-create a virtual environment, activate it, and install the dependencies from requirements.txt (`pip install -r requirements.txt`).
We're not going to do your homework for you. If you have actual questions, try /r/learnpython. If you don't want to have questions, try /r/forhire.
PyCharm supports jupyter notebooks https://www.jetbrains.com/help/pycharm/2016.3/using-ipython-jupyter-notebook-with-pycharm.html
Do you have a straight up list of the sites you are including? (Easier for us to see what might be missing) Would suggest [codecalamity.com](http://www.codecalamity.com/) If you can filter feeds at all, some other sites like opensource.com will sometime have [good python articles](https://opensource.com/article/17/4/grok-gil). 
You can use Ipython as an interactive console in PyCharm if you follow the steps explained in this post on [StackOverflow](http://stackoverflow.com/questions/42562734/pycharm-how-to-run-file-in-ipython-console-as-default-instead-of-terminal) This will pretty much work exactly like you are used to in Spyder.
So introductory articles on some of Python's graphing libraries would probably be of interest, for example? Although I also saw you had mentioned that beginner tutorials would be okay as well in your cross-post to r/learnpython
Hey - just FYI, I brought all these issues to the dev team and we've entered bugs in the issue tracker so that they can hopefully make it into a future release. Thanks for your feedback! If you have any further info/repro steps, please feel free to comment on any of the below issues: https://github.com/Komodo/KomodoEdit/issues/2560 https://github.com/Komodo/KomodoEdit/issues/2559 https://github.com/Komodo/KomodoEdit/issues/2558 Would it be possible for you to reply to this thread especially with further info to help one of our devs sort the issue for you? https://github.com/Komodo/KomodoEdit/issues/2557
For me, micropython has the advantage of a REPL. On an ESP8266 it's even wireless and remote and you can fiddle the firmware easily and dynamically. That alone puts it lightyears ahead of C / ASM for fucking around with embedded projects. Easy iterative design is so nice when you don't know exactly what you want. But there are costs and drawbacks. I started out playing with microcontrollers using PIC's and C/ASM. I'm currently spending most of my time with ESP8266 and micropython, but I constantly compare it to PIC's. Aside from wireless, I haven't really found anything I couldn't do cheaper, easier, and faster on a PIC. I just wouldn't have thought to do it without taking the journey before hand.
It allows you to move your code into a subdirectory. If your code spans multiple files then it may clean things up to put your code in it's own directory. If your code is in a single file then I wouldn't bother. --- If you have more questions like this it's better to post them on /r/learnpython.
Python 3 for impatient: http://python-para-impacientes.blogspot.com.es/p/indice.html 
Calculating similarity between terms used to search and terms on the results page for a website, and examining whether people found what they are looking for.
A link here without [Planet Python](http://planet.python.org) is incomplete.
Is mitchell-as a developer? Very sad to see what I did in his comments, just passing the buck or screeching "unsupported" (aka not curated) * 2557: V, shift-V and ctrl-V start a mark in real vim. y in real vim (ctrl-c or y in komodo) yanks the marked text to the clipboard. p or shift-insert or ctrl-v paste the clipboard. Pretty simple. Funny that a dev of a feature does not know the basics of that feature or the absolute basics of the editor he's emulating. I guess this explains a lot of why the vim emu is goofy. * 2558: It's vague because it doesn't behave consistently. Is this guy too lazy to open the editor and follow simple instructions? Thanks for trying rawktron :)
It depends on your level of abstraction and what the exception actually means. For example, a function that submits a Reddit post can catch an HTTP timeout exception internally and retry the request until it succeeds. However, that same function probably shouldn't ignore an HTTP unauthorized error, as that indicates a problem with the credentials and the program won't work properly anyway.
Generally speaking, unless you have a strategy for dealing with the specific exception that's been raised by a unit of code, don't do anything and let the exception bubble up the stack. If we assume that `Exception` is specifically being caught, then both fragments are arguably incorrect. If `Exception` is merely an illustrative stand-in for one of it's more specific minions, then fragment 1 is more correct if the exception code actually has a plan for dealing with the exception that was thrown. Otherwise, fragment 2 might be the better the better structure. 
If I understand correctly, you want it to calculate the shipping cost as the weight times charge level. I have added some formatting for it to look how I expect you'd want. the '\n' jumps to the next line. The '%.2f' makes sure your float has 2 decimal places. weight = float(input('Please enter the package weight in LB, to calculate shipping cost:\n')) charge1 = 1.5 charge2 = 3.0 charge3 = 4.0 charge4 = 4.75 if weight &lt;= 2.0: print('Shipping cost is: $%.2f' %(charge1*weight)) elif weight &gt; 2.0 and weight &lt;=6.0: print('Shipping cost is: $%.2f' %(charge2*weight)) elif weight &gt; 6.0 and weight &lt;=10.0: print('Shipping cost is: $%.2f' %(charge3*weight)) elif weight &gt; 10.0: print('Shipping cost is: $%.2f' %(charge4*weight)) Is this what you are looking for? Let me know if you have other questions.
yes, Thankyou very much 
Not really relevant, but I've been following datascienceplus.com for a while. Currently going from a comm degree to data science and it would be great to have access to both R and Python tutorials. Can't wait to have access to both on the blog. 
Absolutely. GUI support is always useful. This is actually the first I heard of this, will definitely look it up further! 
please take this as constructive criticism, i mean it as such :) * it's 2017, time to use python3 * dont use reserved names for variables, like "list" * use ipython for a more comfortable shell, it has suggestions and autocomplete * use the `help()` function to learn about things, not `dir()`: * `help(list)` gives you the list api documentation, this is way more telling than just the `dir()` output (note that `list` here is not a variable, it's a built-in, but `help()` also works with instances) * `help(list.pop)` would tell you, that `pop()` is removing by index and `help(list.remove)` by value edit: hey, dude made a video about `help()`: https://www.youtube.com/watch?v=Cjp2i4lUs6c :)
Right. It was more common for people to use both pronunciations years and years ago but since PyPy has become a thing, the community has settled on: * pie-pie == PyPy * pie-pea-eye == PyPI Edit/citation: In an interview a while back ([link](https://www.podcastinit.com/episode-54-pip-and-the-python-package-authority-with-donald-stufft/)), PyPI maintainer Donald Stufft clearly uses the pie-pea-eye pronunciation. 
Thank you very much! I knew there had to be a better way to do it than the way I was. 
Good stuff, thanks for sharing.
I'm not sure what you mean by blender's node system. Are you talking about that flow graph thingy? There's this one: https://github.com/grindhold/libgtkflow That's the only one I've found so far. I think I remember a QT one on top of QGraphicsScene, but I didn't like it so I started writing my own.
Thank you :-)
I'd also add that it's time to rethink all the programs he's using uTorrent, Avast, 2 different pdf readers, "free alarm clock', and one of those "free youtube downloaders". I mean - come on!
Not that I know of, and definitely not well-known if there is one out there. If you're looking to have concrete proof of a Python development skillset, I recommend you start working on a code portfolio (commonly done by hosting git repos on GitHub).
I thought people complained about how Electron apps have to be packaged with a bloated code base and web engine. Is this a result of the language? Sorry, I'm pretty new.
The traditional approach is called a callback function. In main you would would pass a function to GUI that the GUI code would call when the button is pressed (this "callback" function defined in main). You could achieve a more elegant but equivalent solution in 3.5 with async functions. 
[MVC](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller) is a traditional way to structure GUI apps. It's not the be-all and end-all of patterns, but is a good starting off point. Not sure what gui toolkit you're using, but here's an example with tkinter https://sukhbinder.wordpress.com/2014/12/25/an-example-of-model-view-controller-design-pattern-with-tkinter-python/ here with wx https://wiki.wxpython.org/ModelViewController pywiki entry: https://wiki.python.org/moin/GuiProgramming
A blog about optimization in which no optimization occurred. Go figure.
And for those who speak Spanish.
You should create sets for each of the limitations separately. For example `a+b+c=15`, there's no reason to run through every combination of `d, e, f, g h, i, j, k`. The allowable values for `a, b, c` will be the same no matter what those are. Make sure you're enforcing the unique elements rule here (ie. `a != b) Then, calculate the valid sets for the second restriction (`c+d+e+f+g`). Because of the uniqueness rule, you can already rule out some combos. Then move onto the other rules. In the same vein, you can exclude most of the remaining combs at this point because most of the other numbers are used up or don't overlap (with `c`)
[removed]
Yes, you're still going to have essentially 15 nested loops, but you'll be able to break out of each loop earlier. You can use generator functions and recursion/currying to prevent it from actually looking like 15 nested loops.
Thanks!
https://mva.microsoft.com/en-US/training-courses/introduction-to-programming-with-python-8360?l=IROXl0Fz_1604984382 gets you an basic certificate when you finish. AND its free. If you're looking for concrete credentials, just build your portfolio dude. Honestly thats all you need.
Just started Python this past month but after not being able to find programs to do what I wanted, I decided to make my own. One delivers a modified hosts file to a classroom full of laptops to help me block sites. The other scans the hard drive of each laptop to delete key files from an annoying computer game that keeps finding its way back onto them. 
len(x) just gives us the size of the first dimension. You need to show us x.shape, y.shape, and z.shape. The error message is saying they have different shapes.
I have a cross shape that has links and points , the points are at the edges and links are .. in between each point . I want to have the combinations that yield a sum of 15 while walking towards the center point of the cross from the four main edges including edge values and link values . center point also has a value , values have the range of [0&lt;= x &lt;= 14] Edit : Here's something i drew in paint : https://imgur.com/a/HgWvz
I think you can do this with some sort of vector/matrix math. This is really a math problem, not a programming problem. There's a right way to do this; you're brute forcing it - which is fine at this scale. I don't know remember how to do it though off the top of my head.
It's just like the JavaScript community! Lets all pretend to write python 3 and it's cool new features but then wait for 60 seconds while it gets compiled to unreadable python 2 every. single. time. you make a single change. 
This could work. I've decided to use treeview for my project since all I have are parent children objects that need to be sorted.
`np.outer` returns a multidimensional list. In this case, a 50-item long list, each item containing 50 items. See [docs](https://docs.scipy.org/doc/numpy/reference/generated/numpy.outer.html). You want `ax.scatter(x, y, f[0])`. It worked fine for me. Depending on what you're trying to plot, you'll have to adjust the index of `f`, or maybe plot several of them in a loop or something.
Oh rad! This is a combinatorial [graph theory (wiki)](https://en.wikipedia.org/wiki/Graph_theory) problem. I whipped up a quick [reference here](https://imgur.com/a/hopSN). Essentially graph theory is the formalized mathematical way of expressing the game of "connect the dots". Most computational scientists love graph theory because there are many elegant solutions to puzzles like the one you provided, and because the world is littered with things that can be described with graph theory. Your example (in python) will start similar to the following. V = ["v_{}".format(i) for i in range(0, 6)] E = [ (V[0], V[1]), (V[1], V[2]), (V[2], V[3]), (V[2], V[4]), (V[2], V[5]) ] G = (V, E) So you say that the dots (*verticies*) and the lines (*edges*) have values that you're are trying to sum across and constrain? You should show an example of a (simple) possible solution with the cross that you linked.
As /u/_blub said, it's worth really looking into whether this is actually what you want to do. That said, I notice that `c` is the only variable that appears in more than one equation. In fact all of the equations can be written in the form `c + x = 15` where `x` is some other sum of values. That makes this pretty similar to the coin change problem, and I'm quite confident that an efficient solution can be come up with using a recursive algorithm and dynamic programming. With a cap of `15` I'm also confident this approach would be more than fast enough for most practical purposes. I started on some code, but I need to go to bed - maybe it will help you: from functools import lru_cache @lru_cache(maxsize=None) def sum_to(n, total): return list(sum_to_generator(n, total)) def sum_to_generator(n, total): if n == 1: yield [total] else: for x in range(total + 1): for l in sum_to(n - 1, total - x): yield [x] + l This will generate all possible sums of `n` elements that add up to `total`. You could probably use that along with filtering for uniqueness and looping over `c` to come up with a working solution that's fast enough. Good luck!
I would think that someone, who is at the level of studying graph theory, would be able to articulate their problem a bit better. But maybe not! We'll see if OP delivers... 
I just discovered how wonderful Jupyter notebooks are and I'm working on changing how we make reports at work. All in sweet, sweet Jupyter! 
Nah, the only thing I've tried similar to that was just sudo pip install vpython, making sure python27 was my default at the time. I'll give it a shot, thanks. 
When I had to use windows for school I just used a VM. 
Despite rudely asking people to do the footwork for you, you still get constructive answers (which you don't deserve), rather than the silent treatment (which you do deserve). Snarky remarks are a relatively mild punishment, bear them with dignity.
That an API has a global dependency on the 'async framework' is a little worrying. While Curio/trio look great, I'd rather the community settles on something soon (asyncio?), because the trials Brett went through with this will be common to library authors everywhere. On a different note, this is why I love the Python community: &gt; remember, API design is UX design at the code level; public APIs matter a lot, so I try to never rush this initial design stage
You can see and edit the list of sources when you sign in
Too many pop-up ads to read the article
X-Post referenced from [/r/blackmirror](http://np.reddit.com/r/blackmirror) by /u/wasabihater [Which Black Mirror episode is the most negative? Sentiment analysis of Black Mirror (link fixed)](http://np.reddit.com/r/blackmirror/comments/688cyn/which_black_mirror_episode_is_the_most_negative/) ***** ^^I ^^am ^^a ^^bot. ^^I ^^delete ^^my ^^negative ^^comments. ^^[Contact](https://www.reddit.com/message/compose/?to=OriginalPostSearcher) ^^| ^^[Code](https://github.com/papernotes/Reddit-OriginalPostSearcher) ^^| ^^[FAQ](https://github.com/papernotes/Reddit-OriginalPostSearcher#faq)
Haven't played with it in a lone time but check out sl4a.
Thanks, the searches I found are for making apps using Kivy but I just want to cycle through a few apps that display information I want to see. I'll check out option 2, appreciate the heads up.
Ok I'll give that a read. Thanks.
Is the tablet going to be connected to a computer? If it is you can just use a ADB [wrapper](https://github.com/sch3m4/pyadb) and have it cron. There are ways to connect via ADB over [wifi](http://stackoverflow.com/questions/2604727/how-can-i-connect-to-android-with-adb-over-tcp) but I haven't tried it so I can't speak to reliability.
With option 2, you might just need the Automate app. I took a quick look at the scripts library, and there are example scripts that launch apps (from a dialog, when the phone is plugged in). Would take a look at one of those then just add a timer and your assortment of apps.
This response made me crack the fuck up. Thanks OP. 
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [njsmith/h11/.../**README.rst** (master → 05ad7a7)](https://github.com/njsmith/h11/blob/05ad7a72a30e4fc3db735d85fc3553bd5d10b164/README.rst) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dgwkjno.)^.
Yes, I got that the problem he solved was abstracting the http library, but the problem he described in the whole text is another one. If he wanted to do what we usually do in synchronous code, but in async, he really wants an http library that does no IO, but instead awaits on an abstract socket interface that may run in any event loop. The text should have made it clearer that the issue was that he didn't want to tie the library to a specific http library instead of talking about async (which has nothing to do with it).
Python 2 has no async/await syntax, I don't see what you're trying to say there. But the text is discussing API design, not legacy code compatibility.
[Matplotlib](https://matplotlib.org/) with a knack for graphic design. For data visualization, R is the standard due to the brilliant work of [Hadley Wickham](http://hadley.nz/). Out of the box graphs using ggplot are great and matplotlib has a ggplot plugin. Many fancy visualizations are typically with [d3.js](https://d3js.org/). I've been using [vis.js](http://visjs.org/) since it's more lightweight and has more 3D options. A few of my buddies work at Tableau which is more proprietary but has a framework for beautiful vector graphics on desktop apps and dedicated devices. 
Thanks a TON !! 
As it happens, it doesn't matter. When `c` is `15` there are no possible values for the remaining variables. Actually, the largest value of `c` that yields any results is `9`. `c + d + e + f + g = 15` and all the values are unique, so the minimum value for `d + e + f + g` is `6`. This sort of reasoning could be used to get a meaningful speedup actually.
&gt; An I/O-free protocol implementation (colloquially referred to as a “sans-IO” implementation) is an implementation of a network protocol that contains no code that does any form of network I/O or **any form of asynchronous flow control.** http://sans-io.readthedocs.io/how-to-sans-io.html#what-is-an-i-o-free-protocol-implementation
Matplotlib. Beautiful. Hm. Let's be real. Python's graphics capabilities suck.
It's enough. If you cannot represent your data on a 2d surface you are doing something wrong
I'm not saying it's not enough. It's functional. It's not beautiful.
Have you looked at Matplotlib lately? In the 2.0 release, they've updated all the defaults to look nicer. Additionally, in the last year or so they've added the ability to swap between style sheets to easily change all the defaults. Several pre-built style sheets are included and they look pretty nice.
I use MPL on the reg, so yeah. Like I said, it's functional and made for research and clarity. It's not made for presentation or design.
Disagree re gevent: magically turning an API from sync to async breaks some caller assumptions. Async is materially different to sync, and gevent is a wonderful hack, but it's not the foundation to build the next 10 years of Python on. 
With a little work (not even much work), it can be beautiful.
You can literally do anything in matplotlib as long as it's (1) 2D, and/or (2) has a relatively small data set. Yes, matplotlib *can* do 3D and *can* handle large data sets, but it will be slow to render. Even with 2D a *huge* array takes some time (we're talking literally astronomical data sets). If you want to render anything in 3D with large amounts of data while still using Python, look into using Mayavi. 
I really like bokeh. It allows me to explore the data and graphs and I find it easy to use. Haven't used it extensively yet, so take my opinion with a grain of salt (like you should always ;) )
I have an ubuntu VMware image with vpython installed I can send you if you can't get it working, but try installing with apt first. I think that's how I got it to work.
I don't know. Some things look pretty slick out of the box. Pulled up a stackplot of probabilities in a timeseries for my coworkers, and everyone oohed and aahed.
Help with homework is fine, but you should post in /r/learnpython. I tried to look in your Google drive, but I get some sort of warning ("you need permission") and I immediately lose interest. Try making your code more accessible.
Try seaborn.
if you're a real software engineer you would know that having a global variable has its downsides and good sides. in the actual case i'm aware of what i'm doing. i believe you just want to be gross and do bad criticism with the hope of earning attention from our peers. you clearly have no knowledge to do a fair criticism on the code. as our peer pointed out global variables are used all over due to some good reasons that overcome the bad ones.
Not sure why this hasn't been mentioned higher up. It can be a little sticky at times when trying to specify certain things but generally speaking they're very nice graphs!
I'm not 100% sure what you are having problem with, but the general flow is: 1. You have a list containing 25 letters 1. From the student file, you are importing another list of 25 letters 1. You're comparing their list to your list, and if theirs is wrong, you are adding to a third list the index of the incorrect item in their list 1. You then create an overall scoring 1. You then output all the relevant information
I ran into the large data set thing recently. I've been trying to convince a colleague to drop matlab for Python but we were recently doing some data munging and it was so slow. I begrudgingly pulled up matlab and it was super fast and easy. I still say Python is better 98% of the time but this hurt
I have created a choice-based game, but I can't figure out how to get the buttons to disappear when you press them. Help would be much obliged. I'm losing my mind. def new_1_button(frame,text,function): #frame.stop() #frame = simplegui.create_frame('CYOA', FRAMEWIDTH,FRAMEHEIGHT) hp_color() #frame.set_draw_handler(draw_handler) frame.set_canvas_background('black') #frame.start() frame.add_button(text, function) def new_2_button(frame, text_1, func_1, text_2, func_2): #frame.stop() #frame = simplegui.create_frame('CYOA', FRAMEWIDTH,FRAMEHEIGHT) hp_color() frame.set_draw_handler(draw_handler) frame.set_canvas_background('black') #frame.start() frame.add_button(text_1,func_1) frame.add_label(" ") frame.add_button(text_2,func_2) This is the code for the buttons. 
Thanks, I'm trying installing from source now, but am running into problems with wxPython. I'm gonna keep googling and seeing what I could do. 
Can't remove the system python installs, particularly on Ubuntu. Whole lotta shit will stop working. Install pyenv and then do pyenv install 3.6.1 pyenv rehash pyenv global 3.6.1 python --version
Yes, the main issue is that too much of the ecosystem does implicit IO, which makes it very difficult to adapt to async. I think the only solution in these cases is to avoid the portions of the libraries that do IO (which takes a lot of effort, unfortunately). It would help a lot if there were a way to give a warning whenever a blocking call was made, so we can work around those libraries whenever possible (in your lxml example you can avoid the IO entirely). 
&gt; Let's be real. Python's graphics capabilities suck. The capabilities are fine. The actual implementation vs. R ggplot is more cumbersome and difficult given the various object aspects of figure, axes, etc. The way a plot can be generated directly (implicitly) through plot and also explicitly through defined axes is totally annoying and confusing to new Matplotlib users. I found matplotlib to be a real pain in the ass coming from R ggplot.
Hey, sure, here it is: https://gist.github.com/tadas-subonis/88daeb9512c020fc63e5571492d28434
For me, it felt a bit that they just post too much content. 
&gt; Yes, the main issue is that too much of the ecosystem does implicit IO, which makes it very difficult to adapt to async. Sync code allows us to be lazy in terms of design/architecture and we've gotten accustomed to that. I do it. Other do it. You probably do it. We're not forced to think "do I *have* to do IO here?" We might try to be mindful of it, but our hands are never forced. Async forces our hand, which is why it's difficult to adapt a sync library that just talks to whoever it wants whenever it wants difficult. If it's well designed, we might able to artfully wrap it in some coroutines or acquiesce to using a `loop.run_until_complete`. At worst, you end up using `loop.run_in_executor` everywhere (probably using a process pool because a thread pool will compete with your coroutines more directly) &gt; It would help a lot if there were a way to give a warning whenever a blocking call was made, so we can work around those libraries whenever possible (in your lxml example you can avoid the IO entirely). A lot of people say the async/await keywords are for concurrency but I think of them as exactly this, a big red flag that screams "I'M GONNA DO IO WATCH OUT!!!!" The concurrency thing is just a nice boon.
Is there an example of this somewhere? I'm running Python 2.7 unfortunately with Tkinter.
What exactly sort of munging were you doing? I can't really imagine a situation where it would be faster in Matlab, especially if you're taking advantage of the full PyData stack.
If you get into matplotlib you've gotta learn how to use their color maps. Sometimes you can plug and play with them, sometimes you gotta use a numpy.linspace in conjunction.
Python works a lot more like other languages. Matlab's pretty much based around matrices and requires putting thought into how your computations will work with regards to the matrices, or you suffer heavy performance losses. However, Matlab has a ton of science/engineering packages that were incredibly useful in some courses, like control systems. I don't have any stats on its use in industry, but I personally haven't seen it outside of my undergrad program.
What an inane read.
Preach
I'm an engineer that loves python and uses it for fea and specifically for emulating functionality in Nastran. I run the pyNastran project, which is 100k lines of code. It is NOT painful. Matlab is painful to try and parse a text file as complicated as Nastran and do it correctly in all cases. In python, it's still not easy, but it's doable. Matlab is fine for small scripts where you just enter your data with the right types directly into arrays. For controls, Matlab easily wins, but outside of that... The good news is you can run Python code in Matlab.
I think people go way overboard with applying the word "beautiful" to the visual presentation of data (charts). Sure, it's possible to make a chart look ugly, but it's really really not hard at all to make it look good with Matplotlib, even before the 2.0 revamp that makes it even easier. I mean, if you want *USA Today* style bar charts where each bar is a car or a building, yes, it's not intended to do that. Thankfully.
Just curious, do you have a link to the code to do this? (Your own or documentation). I did this once and i had to define a lot of extra code to get it working right
There is almost no difference in time to hand input data into an array. It's a few more commas and you have to write the word array. You trade that for not writing ... at the end of every continuation line. If you use Python 3.5+, you get the matrix multiply operator @. There is also no crazy .* or ' operators. Elementwise multiplication is * transpose is .T 
I'm actually trying to build one for controls https://github.com/ilayn/harold but missing quite some user feedback. I think the main reason is the lack of community to build something scientific in python. Data scientists pulled that off pretty nicely. It is more difficult to convince conventional engineers. Here is a question I've asked some time ago https://www.reddit.com/r/Python/comments/5kbknn/feedbackimprovements_on_this_nyquistbode_plots/
I've seen extremely large and complex codebases move between threading and eventet/gevent with no changes. I can try to guess what assumptions you're referring to but curious what you had in mind. 
Great book! The author also has fantastic YouTube videos that go along great with the book. 
If you want a student perspective, here is mine. MATLAB, will never be used by students in a way that they were not taught. Python allows you to explore and expend on your own projects much more readily. With Python, casual computation is just about as easy as in MATLAB. Performance wise, both use the linear algebra software (ATLAS), and both are capable of using CUDA for calculations. Python is the language of machine learning (R is a close second or tied). My experience for a final project was a PCA facial recognition program. Done in 5 min in Python, it took half an hour just to make someone else's code run in MATLAB. Every line of computation was simple and straightforward in MATLAB once the magic was figured out. Obeying the type system is painful (performant code is default, blegh). Okay, so I'm spoiled by Python, but that's what it takes to see new programs and new areas of experimentation pumped out continuously. In my program, I've learned MATLAB, JMP, and next semester will be R. I feel like, with a tiny bit of overhead, all of these languages could have been replaced by Python. Not that I would deny the educational and professional value of being somewhat familiar with all these languages. However, it has been extremely easy for me to reimplement everything I've done in MATLAB and JMP with Python. Edit: I should add, to reflect my personal bias, that I am a Python fanboy. What I wrote above is a conversation I might frequently have with professors or fellow students - to an extent, it's exactly the conversation I started my Linear Algebra class with when asked something like, "does anyone have any questions about why we are using MATLAB?"
If all this material is out there online for you to learn for free then why not learn it now?
It probably wasn't mentioned here because it's the second highest suggestion on the linked Quora question.
Is that an original Raspi 1?
Doesn't matter. The decision will be made based off of how much money MathWorks throws at your college and / or professor(s), as a kickback. Anyone that wants to vote me down should first realize that this happens all the time, I've seen it happen. Corporate America for you. 
FTR my first port of call when Python and graph theory get mentioned is always [David Eppstein](https://www.ics.uci.edu/~eppstein/).
No, just plugged in and mounted to the wall
On the device.
Any recommendations for getting up and running with D3 from a background of Matlab/Matplotlib and no JS experience?
Would [nonstandard](https://github.com/aroberge/nonstandard) help out with this as it "Enables easy modification of Python's syntax on the fly."?
Just do a reshape or add brackets. You can add it on every line or around a row array and transpose it. You have 3 options. An array that is 1D shouldn't be transposed and made 2D. It's an invalid operation. I've been working with numpy for 11 years. It's really good. You're nitpicking and ignoring all the benefits off open source software (actual bug fixes and new features for free). You're ignoring python's ability to do string processing, proper error handling, not copy every object on every step of a program (including classes), actually having a namespace that prevents global/local variable bleedover, and being able to use more than 1 function in a file from another file. Seriously, why is a file name a martix? 
work: Building a pipeline for client reporting with google api and my first production database (it went well!) home: working on posting image board posts onto appropriate subreddits automatically (it's really exciting to be working with systems I feel comfortable with) Happy bank holiday all you brits :) 
You got this! Maybe keep an eye out for modules that are already out there to make your life easier like Scrapy? Sorry if that's a shitty comment but I always find that after struggling through a problem its often something someone else has already solved! Hope it went well!
&gt; Python is the language of machine learning I thought Lua was? Or has the scene changed dramatically lately?
Thank you for the input.
Thanks!
I like the philosophy of keeping it close to the source -- thanks!
Thanks so much for this detail. I like these guidelines and I'm going to jot them down somewhere. Cheers!
We also need a Simulink replacement.
Anyone happen to have any opinions of [ggplot for python](http://ggplot.yhathq.com/)? Given the reputation of its namesake I'm tempted to try it for my thesis figures, but I haven't heard anything about how good or usable this python one is. 
The speed issue wasn't computation. It was plotting. We were messing with very large, very high sample rate, time histories. The matlab plotting engine handed it easily and matplotlib chocked. 
I recently moved to plotly as well. To me, plotly is to d3 what seaborn is to matplotlib. D3 is incredible and you can make anything in it, but even the most basic chart can easily require 50 lines of code. Plotly has ~nice default styling and provides a nice high-level interface to d3 for most plots.
I see no problems with this whatsoever. Boy will google be fooled. This should work out amazingly for you!
they're good graphs, bront 
[removed]
When I am looking for greater rendering speeds with matplotlib, the TkAgg backend helps a lot. In the notebook or an ipython shell, try %matplotlib tk and see how that works out
Cool. I'll look into that. 
Seaborn! If u're using 'pandas' it has some nice and easy plot features ;)
Not actually a wolfram alpha clone, just a sympy frontend. Wolfram Alpha is WAY more than a limited math engine still neat though, and Sympy is one of my favorite python tools 
This guy has a way of taking really complex topics and making really entertaining videos that don't explain them very well. I'm not sure what his target audience is. He presents like it's for beginners at a fast pace, but then the content can only really be understood by those with a lot of ML experience. This video (like his others) is fun to watch, but kind of useless. Not to mention, he rips a lot of his content from Google's deep learning tutorials.
What is the cwd of the subprocess call? 
...why? Why would you think you are smarter than a small army of some of the smartest software engineers on the planet, particularly when it comes to something that is directly tied to MONEY.
Absolutely. You can do a lot of fun things, and for always-on projects (web server, storage server, scheduled task, etc.) It is low power and physically small so unobtrusive. Lots of fun, and probably the cheapest server you can get brand new. People even cluster them together to relish in the heart of distributed computing or containerization.
Interesting , I just got a Kuman ultimate set from a person at work to mess with. 
I would look for overlap with your subject areas and the articles from the PyData and PyCon conferences. Or maybe even here: https://www.youtube.com/user/PyDataTV 
Don't forget Jupyter, which is used a lot in science communities nowadays
It is not more popular because wolfram alpha was the successful one in solving the elliptic integral that I just gave them both.
Is there a 'better' distro to run if I don't need a GUI or anything for my pi?
And Spyder which is similar to Matlab
Where did you buy this kit?
Thanks! Guess I'm *finally* trying Arch.
You can just `apt-get remove` the packages you don't want. That will almost certainly be less work than getting Arch up and running. There are also headless versions of raspbian available.
Don't try to combine numbers 3 and 4 without running up some costs.
Since it hasn't been mentioned yet I'll throw in PyQtGraph. It has tons of capability especially for interactive Qt GUIs which can perform well rendering a lot of data. Vispy is also in development by the devs of PyQtGraph, glumpy, and other current scientific visualization libraries to provide awesome GPU accelerated plotting across any backend. I keep watching it's progress and waiting for it to be usable without delving into it's guts or having to write your own OpenGL shades it whatever.
What if my 2d surface is a triangle? 
probably why it's not more popular... edit: never heard of sympy gamma until now, just my first time experience [sympy gamma](http://imgur.com/a/8q64b) [wolfram alpha](http://imgur.com/a/VNlAO)
Learn python the hard way is good. He has a secound book for more advanced things. 
How do you tend to use it?
[It's a syntax thing.](http://gamma.sympy.org/input/?i=integrate+x%5E2) WA is "good" at natural language processing, and this sympy gamma thing is apparently a little more reliant on you using the correct syntax. It seems perfectly capable of solving for the integral of x squared.
Right now, I'm beginning to learn Python. So far, I know the basics, along the lines (no pun intended) of print, raw_input(''), some basic variables and the most basic things. I just made a countdown in not real time, it just lasted about 2 seconds showing all numbers from 50 down. Then congratulated me... okay fine I congratulated myself with a print tag. Is there any advice on how to learn more? I always seem to get ridiculously confused with websites or tutorials. 
That is "The Python Reddit API Wrapper"
&gt; What are the things you expect are hardest to get used to when switching to Python as language? Being pythonic. You might try reading a lot of good Python code., such as the standard library code. You might also try reading Python entries on RosettaCode.org. Docstrings are a Python feature that has lead to more unique Python solutions such as docopt and, arguably, doctest (I argue for). Welcome to Python :-) 
As someone else commented, headless version of Raspbian. It's what they call the 'lite' image. 
But it's an explanation of why WA is more popular. WA is a so called "knowledge engine", SymPy Gamma is "just" a symbolic maths engine. SymPy itself and Gamma are both very impressive and useful, but Gamma just isn't a competitor to WA. 
Control problems are usually around maximum 1kx1k state space systems. They are more or less the discretization of PDEs and this can handle them properly. I'm continuously testing it against matlab and so far no problems. It is already based on numpy/scipy and also I'm a regular contributor of scipy ;) Riccati solvers got updated recently. And more is coming on the way.
https://github.com/masfaraud/BMSpy this is a very nice initiative.
option 2: added: android 5 and higher may be qpython will help you.
...or fast.
&gt; It is low power and physically small so unobtrusive. Another option for this but far more expensive is the Intel Nuc, if you want to run some more hefty applications on something smaller.
There is [an image called "Raspbian Lite"](https://www.raspberrypi.org/downloads/raspbian/) that doesn't include X (i.e. no GUI).
ggraph has great plots in R. working on making python wrappers for it bc i don't like R
What did you think of the book, was it value for money? I am complete coding newbie but am interested to learn 
It's also completely free online on the author's website.
This would be better posted on [r/learnpython](https://www.reddit.com/r/learnpython) I think what you are looking for is the `len()` builtin
far out! been two week since I last programmed and completely forgot about the len function! thanks for this :)
I get you, it's pretty confusing! I can only speak from personal experience but I learn best when given a project and then learning around that. I also learnt really practically with Codeacademy so maybe give them a try? Have an end that you want to work towards and then google your way there is my advice! Good luck :) 
&gt;It's scary how much structural engineering gets done in excel. You'd don't need to specify "structural" there for it to still be accurate. 
i don't mind studying a while before being able to make something like that, the problem is that i don't really know what subject should i even study that are relevant to this.
Hey I am a bit late to the party, but wanted to mention that this problem falls into "Constraints Programming" and can be solved elegantly using libraries like NumberJack. To save you some time, I tried the following and it instantly returned "False" which I guess means that there are no solutions (??) from Numberjack import * a, b, c, d, e, f, g, h, i, j, k = (Variable(1, 15) for i in range(11)) model = Model( AllDiff([a, b, c, d, e, f, g, h, i, j, k]), a + b + c == 15, c + d + e + f + g == 15, h + i + c == 15, c + j + k == 15 ) for solver_name in "Mistral", "MiniSat": solver = model.load(solver_name) print (solver.solve()) # returns false 
I made a basic Twitter clone in Flask with the help of a Github tutorial, feel free to check it out! https://agile-depths-40666.herokuapp.com
In the latter case, maybe use seaborn colorpallets. They have really nice functions to generate them: http://seaborn.pydata.org/tutorial/color_palettes.html
Graph a lot of stuff and solve crap, search up information on certain materials, simple facts about various things (date of birth + death/publishing) https://www.wolframalpha.com/examples/
This would be one reason. Wolfram would have integrated that sucker like an Asian math teacher. http://imgur.com/TMP0h2R
There are actually 920 Solutions :p 
Yeah I noticed aftwerwards that "Variable(1, 15)" should have been "Variable(0, 14)" to emulate "range(15)". Here is a better code which will remove equivalent solutions (since (a, b) are interchangeable, for instance): from Numberjack import * a, b, c, d, e, f, g, h, i, j, k = (Variable(0, 14) for i in range(11)) model = Model( AllDiff([a, b, c, d, e, f, g, h, i, j, k]), a &lt; b, d &lt; e &lt; f &lt; g, h &lt; i, j &lt; k, c + a + b == 15, c + d + e + f + g == 15, c + h + i == 15, c + j + k == 15 ) solver = model.load("Mistral) solver.solve() solutions = list(solver.solutions()) print (len(solutions)) It finds 520 solutions, in 0,3 seconds.
I'm just saying because Python is a all-purpose programming language the syntax is suboptimal and many stuff is reserved for nontechnical purposes such as bracket types etc. The column vector is just annoying that's it. It's not a criticism on the language. I'm using both for almost 15 years (started with matlab 6.5) so no worries ;)
"encourages an ad-hoc approach that is easy at the start but quickly becomes a mess, and leaves students lacking basic understanding of common concepts and tools." OH DEAR GOD YES 
You know, I just opened up a text editor because I love optimizing code like this and I started typing in the code you showed, but after three lines of me typing it I realized I had much better things to do than to type in code from a fucking picture. So how about you paste the actual code so that we don't waste our times typing code from a picture?
You can't learn math reading a book. You have to do the exercises to get the skill. Same with programming, espscially so with a new language. I'm a fan of Python for Kids. 
I'd say start building something and learn what you need as you go. If you understand OOP, then you'll know when it's time to bring in some polymorphism. When you need it, look up the documentation for how to do it.
There's probably something more vectorised that you can do, but you'll probably find instant speed up by decorating this function with @jit from Numba.
On a related note, what is the difference between specifying dependencies in setup.py and requirements.txt? Should I pin *all* my dependencies and subdependencies in setup.py? Just dependencies? 
what did you do? write python code on a raspberri pi?
I never said to use Pycharm. I just said it exists! It's their choice how/if/when to use it. :P
jupyter notebook is golden they have jupyterhub which lets users have their own space 
"Free" as in beer maybe, but it creates path dependency once people leave academia. Now who's paying for that license?
Thanks for this. Very interesting thought that I've fallen victim to countless times.
Don't buy Maplin kits, that's a horribly outdated Pi and you're going to have a lot of problems, and I can guarantee that you paid a lot for it.
Sounds great ! Good Job buddy and thanks for the Help :D 
You can specify the type of cheese
Very cool. It's sounds capable. I'm surprised by you being a scipy contributor! I'm not even one. I did report 2 bugs, but I don't think that counts :( I assume you have a PhD in controls; is that right? I'm not saying you need that, but you'd probably do things in a different way if you do.
So what's your recommendation? 
PyCharm CE doesn't include web development tools. I'm under the impression that you have to buy the full version for that. Django/Flask themselves are free, but Jetbrains wants to make money off of web development tools.
Instantiating zero vectors inside the loop will make it slow. Create them all at once beforehand. If they are all the same size, just use a matrix. As others have mentioned, [`numpy.vectorize`](https://docs.scipy.org/doc/numpy/reference/generated/numpy.vectorize.html) is your friend, as is [`numba`](http://numba.pydata.org)'s `@jit`. Edit: those library names are links.
Yes indeed I do have one (thesis is also on github account) but I don't know whether it is a good or bad thing for controls :) Every kind of feedback counts so keep them coming! Academia is way behind the real world problems. They are mostly stuck with obscure math that can't be implemented at all (I was one of them) and if you look at any other engineering discipline controls is out-of-league in terms of available tools. Take ANSys, Fluent etc. all have evolved into amazing software doing most of the things almost magically by themselves. Well worth the price but for matlab I can't say it deserves 11k euros for a standalone license just to plot some freq response. Same with sysid toolbox. That garbage bin is worth thousand words ... It's a shame that matlab can't even mark the unstable parts on Nyquist or Bode plots automatically after almost 70 years now. That's why I started building this toolbox with the hope that user-friendliness actually mean something. Those kind of stuff that I always want to get feedback for. I'm pretty comfortable with the theory it is the frontend that consumes most of my time actually. Choosing function names, what arguments are convenient etc.
Also system identification is, unlike what SysID people keep on saying, a completely different ball game and I've yet to meet a happy user of identification software. At work, we basically gave up on matlab id tools and wrote our own. Unfortunately that's property of my company but to be completely honest, most of the identification people we have spoken to don't even know what controls is about. That's why there is nothing yet about identification because I need to sit down and design a proper frontend. Otherwise it would be yet another ugly and cumbersome thing out there. If you are interested I'm really eager to hear your essential pain points about these issues. Just to emphasize again I'm really looking for feedback for even the simplest stuff like Bode plots, see this one in case you haven't https://www.reddit.com/r/Python/comments/5kbknn/feedbackimprovements_on_this_nyquistbode_plots/ 
usually just CAS things, in math settings sometimes it's useful when equations get out of hand and using simple programming won't cut it
I can't speak for OP, but I believe they meant that's what they miss from Django when they're using Cherrypi? Implying that they know Django has an admin interface, and like using it, and that's something they miss when they use anything else?
https://www.reddit.com/r/learnpython/wiki/books https://www.reddit.com/r/learnpython/wiki/faq#wiki_what_do_i_do_now_after_.5Binsert_learning_resource.5D.3F
oh yea, i use networkx all of the time. the visualizations are ok when you customize them with mpl but i think ggraph is a d3 wrapper. they have these hiveplots and inner laced bubble circle style dendrograms that look really good. i haven't found the time to actually make the wrapper yet tho. 
Don't be so dense. The reason why flask won over cherrypy could partially be same sort of reason why vhs won over betamax 
It depends where you live, Adafruit for the US, and Pimoroni for the UK 
Thi made my curious and my first search hit was this [performance analysis of Python WSGI servers](https://blog.appdynamics.com/engineering/a-performance-analysis-of-python-wsgi-servers-part-2/). Cherrypy is remarkably performant. For me the selling point of flask was the fact that it recommends using a different web-server for deployment (the flask-server is only for testing). The above link makes me wonder whether I should try changing from gunicorn to bjoern in deployments of flask-apps.
Read again and pay attention to the phrasing: &gt; Why did Flask run past CherryPy? &gt; I simply don't understand what motivated the creation of Flask [...] &gt; And I certainly dont understand why anyone [...] would choose Flask Legit interest sounds different to me. &gt; [...] why flask is so much more popular. Both framework have been around for a while, at least for longer than just the usual initial hype phase I'd say, and they are both actively maintained. So they must have done *something* right and you can pretty much exclude the factor that one is *obviously better* than the other. At this point it's pretty hard to pin point the reason for popularity. There's a [TED talk about why startups succeed](https://www.ted.com/talks/bill_gross_the_single_biggest_reason_why_startups_succeed) ([spoiler/TL;DW](http://i.imgur.com/X4A5NJJ.png)). Maybe OSS projects are a bit like startups? Anyway, I haven't found a reason yet why it's worth it to ask this question because any answer is probably inconclusive.
In most of the performance comparisons I've read cherrypy is almost always one of the most performant. On mobile but I'll link a few comparisons tonight when I get home.
Cherrypy has automatic explicit routing, defining a method doesn't make it a route, but adding the decorator @cherrypy.expose() does, additionally you can do manual explicit routing like flask, and you can easily create your own custom router as well.
&gt; I'm planning to write one for fun as a challenge to match redis' performance... [Redis](https://github.com/antirez/redis) is written in C. How do you intend to match its performance with software written in (interpreted) Python?
Google "ray casting algorithm"
&gt; There's a seemingly endless list of ToDos, but they are getting completed, one by one I'm in the same situation :D Keep at it!
I use them both. My default stack is now Flask running on the CherryPy webserver. It's a more reliable server than the built in Flask development server. 
I tried using Codeacademy but it never stuck. My friend who has been working with python for a few years has been teaching me the small tags, but he's not much of a teacher so sometimes i observe what he's doing. Besides that I'm kinda at a standstill as to what to learn. 
That sounds so silly, but it's essentially how I decided not to use it, too.
yes that's it. CherryPy lacks that but Flask has it. Django still suffers from lacking the most powerful ORM for Python that exists (SA).
You need to run it in command prompt, not in the Python shell.
Not sure how exactly you got to this question at this very moment, but a couple of hours ago I had a very similar idea! I actually just read that `redis` is thread safe, **because it is a single process**! Shocking. So I thought it would be fun to create a file-based database (something I've wanted for a long time, though the problem has always been thread safety). I use ZeroMQ in a single external process to give permissions to threads/processes, in turn, to read/write. Here is the result: https://github.com/kootenpv/justdb The interesting thing is that you are actually slightly/barely faster than the python `redis` client (if you write the read/write yourself, there's an example in the repo).
If you need a quick and dirty solution without worrying too much on the mathematical details, you can use the [shapely](http://toblerity.org/shapely/manual.html) library. You'd define your Polygon based on its vertices, and then check whether each of your points is contained by it.
&gt; because it is a single process Single threaded. Single process too in some sense, I guess. But what's impressive is that it is single threaded.
Haha yeah, xD
I didn't like it because it made me think of the American Pie movie.
Apparently it's cheese 🧀 
Have you tested gunicorn or uwsgi?
Cherrypy got python3 support years before Flask, which is why I chose it for my first python web project. I never saw a reason to switch to Flask, so I have been happily using it all these years, and asking myself the same question. Why is it not more popular?
I use both, but introducing someone else to Flask is easier since the documentation is and looks nicer. After investing a couple of hundred hours and/or running in to weird/specific use cases I think CherryPy pulls ahead, but by then most projects will have invested too much to change... I think.
I think... 1. The network is a significant bottleneck, so being faster than the rate you receive and send bytes matters more. 2. Python has a great standart library which includes many types of data structures that are included in redis. The implementation, AFAIK at least in cpython, is quite well optimized (example [Hash Table Benchmarks](http://incise.org/hash-table-benchmarks.html)). So the critical parts of the code are already implemented in C and they are quite good! All that is need to be done is to write the "gluing" code to utilize them and face the network clients. =)
This is more like a child of SQLite and redis, am I correct? I was thinking a drop-in replacement for redis instead. =)
Don't expect to match Redis performance, but it surely is a fun project. Go forth!
Yea, and add to that that you are actually having real files on your OS. So you could also just see it as doing file IO in a safe way. Though, in the end, it is not really sql, it's more a key value store like redis. Maybe this is then interesting to you: https://github.com/yahoo/redislite
&gt; requires putting thought into how your computations will work with regards to the matrices, or you suffer heavy performance losses. If you're doing numerical work, it's really the same story with Python and NumPy.
Is this in visible mass or does it consider the gravitational impact of the so called dark matter? By the way that is a lot of cheese. 
Wup, WA needs a lot of improving, but it's VERY good at a hard task
That was Apple though.
Holy shit that's a cool idea. please link me the github whenever you finish it? would love to tinker around with it as well
I specified mass of the observable universe
Based on that title, I was sure this was going to be a joke. When I saw all the text I was like "man, what a long setup!". Seriously though, you raise some interesting questions, but as others have mentioned a lot of times these things end up boiling down to really inconsequential things like naming, popularity, etc. Personally, I always thought CherryPy sounded more fun, and I liked the design of its site better (which I admit is a strong factor in my decisions...).
That's true. The college I went to has gone as far as to get rid of the cs requirement, which was a c++ class when I went, and replaced it with some class where they learn to use things like Excel, mathcad, etc. I think it's a shame. I think it should be going the other way. In my industry fees are getting so competitive that you really need to have a lot of custom tools do get the job done quickly and correctly. Not to mention so many of the commercial software packages we use are starting to ship with APIs accessible to the end users. 
One advantage of cherrypy is that, while feeling small and simple, it includes a production grade web server. So if you like the convenience of a fairly heavy duty web app with minimal dependencies, it is pretty unbeatable,
So does Flask use the same code as Denied or did he rewrite things when it started to become a more serious project?
And even if you didn't, linking would bump it up on search engine indexes 
Its the moon. The big cheese.
I was asking the same question about Cherrypy vs Django before Flask even existed.
As a heads up, this is more appropriate in /r/learnpython Without seeing the code, I imagine that gunicorn is executing your app in a different directory than where your pickled objects are stored, but I can't say that with certainty without seeing your code.
Conversely we do a lot of studies where the tender specifies that Excel must be used. It's the perception of it being a sandbox which drives a lot I think. But it does mean that on jobs where we have a choice and can automate analysis or presentation of results with a bespoke model we can make things a lot more attractive or auditable for those who can understand code.
This is just great! I'm interested in what Thomas Cassell's comment was about advanced matplotlib functionality. The notes at the bottom mention its in the comments but I don't see any comments (maybe since I'm on mobile?)
You mean CherryPy pre-dated Django? 
why use cherrypy as your webserver as opposed to gunicorn or uwsgi behind nginx?
I don't necessarily have a horse in the race (although I have used flask for things and not cherrypy... I should try that). But I love this discussion/question. Very neat to see people's feedback. Thanks /u/metaperl for asking this.
I can definitely say as a newbie starting out, community largely has to do with my choice. I was interested in CherryPy, but I already know there are flask extensions that will help me write a secure web application, along with guides (although even Flask could use a little more content in this area). If I'm a newbie that wants to get a project live on the web as quickly as possible, I would just assume Flask would be better for the job since I'd probably find the learning material for security a little quicker than I would for CherryPy. I'm quite aware that my assumptions might be wrong, but even if they are doesn't matter learned Flask. I wish there were more guides about Python web frameworks and writing secure applications in general. If there are please send it my way! :)
&gt; it installed just fine now try `python -c "import vpython"`
Yeah, that would be even better, especially in a production environment. CherryPy is just easy to get going as an alternative to the Flask development server. 
Thanks, I'll check it out
You could try https://blitzen.com if you don't have a lot of signups, as they have a forever free account. It hooks into Mailchimp for sending out emails to lists.
oh good tip thanks
In materials science there are entire journals dedicated to phase diagrams (e.g. CALPHAD) and this is how you do it. You may not understand it, but it is the accepted way that indeed real scientists use these and I'm not sure there's a better way to describe the phase present at all combinations of x moles of A, y moles of B and z moles of C. If you have a better way to represent ternary phase diagrams, I suggest you write a paper and submit it to Nature because that would be huge
Thanks! I will check it out!
link to the actual article: https://www.datascience.com/blog/intro-to-anomaly-detection-learn-data-science-tutorials
Its funny. I did almost the same thing. Did you use any commercial API or just web scraping ?
How about be a little more polite and specific?
I'm so sorry it's just that I'm stressed because of my project. 
Sure, pm me
I pmed you
Don't ask people to do you homework for you. If you have a specific question, post to /r/learnpython or stackoverflow.
I'm admit that I've never used Maya, but some quick googling got me to this page: if you are having trouble setting python up in Maya or are confused as to how to start, look here: https://knowledge.autodesk.com/support/maya/learn-explore/caas/CloudHelp/cloudhelp/2016/ENU/Maya/files/GUID-C0F27A50-3DD6-454C-A4D1-9E3C44B3C990-htm.html The Maya/AutoCAD scripting language is MEL. It seems like there's an interface for MEL in python. You probably have 2 options: save the MEL lines from the script editor into an script file and execute that from python OR you could write a python function that does exactly what that button does. In this case, a whole bunch of AddAttr commands: http://download.autodesk.com/us/maya/2009help/CommandsPython/addAttr.html
Keep in mind that all the button is doing is running addAttr functions.
Did you ask on the mailing list?
Would you mind posting the code? I've been thinking about doing something similar with baseball. 
Thank you! I did look into Scrapy, but in the end I managed to do it with Urllib! Picked urls within &lt;loc&gt; tags from a sitemap, looped through them and used urlretrieve to download to a .html doc for each, with each name file composed by part of the url. I must say as a complete noob, it was a good feeling. Maybe it's not the most polished way of doing things, but it worked! I'm addicted now
Lol
[removed]
Because compared to the master [you have nothing](https://imgur.com/a/UkZZs)
Why would you want to? That would be like turning in a screw without a screwdriver.
I just wondered that can it be quality. Is it hard?
I suspect because it occupied a middle-ground that wasn't quite what people were looking for. There tended to be two camps regarding web frameworks: - The "batteries included", hightly opinionated heavy monolithic megaframework approach. Here, the framework makes a lot of decisions for you, it's difficult to swap out components, and you're expected to organise your code around the framework. In exchange, you get a lot of functionality "out of the box". - The lightweight minimialistic microframework approach, where the framework is mostly about gluing other components together. Magic is generally minimised, and the programmer has much more control about the components etc, but is responsible for doing some work that the megaframework approach does for free. There were multiple frameworks competing in each of these nices. Django mostly won out in the "megaframework" category, and flask in the "microframework" (though by its nature, that category has many more options too). Cherrypy occupied (at least in terms of perception) something of an unpopular middle-ground between these (though obviously much closer to the latter) - the automatic routing you cite as "a step forward, not backward" is actually a disadvantage in terms ot the "microframework" approach, in that it's moving more in the opinionated direction. However, it's still far short of the "megaframework" approach, so it tends not to be the obvious choice for anyone looking for either of these extremes in terms of approaches.
[removed]
Not here, in space. We'll feel we don't have that necessity to show off.
It's not about understanding or not. The site you send me to had intentionally poorly designed plots. They lacked all kind of meta data required for at least the basic design. It's great you guys can use those plots, but that does not change the basic premise To demonstrate my point: you cannot add another molecule to that mixture And seriously, it is so far from Nature to improve plotting techniques that I thing you need to think about that one. Representing data in different ways has nothing to do with advancing understanding in singular fields
Yes, you can. Using only HTML and JavaScript. jQuery is technically a library not a framework, so you could use that as well. Wouldn't have any back end though, which means no logins and no database, unless you wanted to reinvent the wheel, but that's just silly. 
Yep, WSGI is indeed simpler than it sounds. I find myself more than often using WSGI directly rather than a framework when making simple python apps at work. Specially considering its all locked up inside the internal network and there is no need for authentication. Also writing all the page generators and whatnot is much easier than frameworks make you think, along with having much more freedom in whatever broken way you write your code.
When you run that command it will give you an error. The vpython module is intended for use with jupyter notebook.
Very cool, are you planning on sharing the code?
PM me and I'll help out, but I have to ask how you're able to get to a stage in class where you're asked to create a project without knowing how to code?
Not an impossible task of you need something to be only hand tight. It's also a good learning experience. WSGI sounds really hard until you realize the really hard parts are handled by tools like uwsgi, gunicorn and werkzeug. You can start by building directly off the wsgi specification rather than worry about things like parsing HTTP headers. 
It's basically hard coding like 8 or 9 questions and I suck at hard coding 
Blablabla, you shouldn't have said anything. I had a question, you didn't answer him, but you started talking shit. And now you are talking more shit. Dude, what is your problem? I am not going to respond to you anymore. Good bye.
Of course, web dev in Python existed before frameworks ! If you decide to roll your own, it's still a good idea to see how existing frameworks do, specially Pyramid and it's design choices. As a bonus it will ease the upgrade to Go if you like.
are you stupid? how is adding one line to `requirements.txt` even comparable to migrating from 2.7 to 3?
Trying to figure out how a text adventure would look like in python. Also, figuring out cx_freeze.
Or ipython
Discipline 
You're welcome.
Learn C++
What is hard coding?
Hi, thanks! I've implemented this into my code and it works perfectly the first run though the funcs index. Though when at the last 'stay' and I press it again it gives a 'tuple index out of range' error, which probably means it's not resetting to index to 0. Do you suppose it's just that I haven't got things in the right order or is there something obvious I'm leaving out? I have the last section of the code as such: funcs = (up, stay, down, stay) index = 0 while True: if button.value() == 0: if index == 4: index == 0 funcs[index]() index += 1 time.sleep(1) Thanks again!
Or really, building your own shitty screwdriver instead of using one from the set your dad gave you.
Ah ha! Thank you so much, that was the problem. Works great now.
Take an online course on some topic that interests you, and uses Python as the language to do your assignments in. I'm currently doing this one: https://classroom.udacity.com/courses/ud730 Maybe not the course for you, but if you can find something that interests you, and gets you to use Python in the process... that might work. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Or use Flask. No, I see your point, but unless you have a specific reason to it's kinda the long way around. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Better question: why did Flask run past Bottle ? ;-)
T.T Amazon, y u no help your fellow developers! 
Python 3 wasn't available in stable Google App Engine until &lt;2mo ago, and it's still only available via Flex, which has it's problems. Also, you're highly underestimating the cost of migrating a legacy Million-LOC enterprise app anyway.
I really want to try AWS Lambdas but I don't want to give away my credit card number for the free tier. If I fuckup and accidentally use too much CPU I could get an unwanted bill.
My bad, I went general as far as certifications goes. Python specific? I've never heard of one existing.
Sorry and thanks for that.
Very cool. I just spent the last couple days figuring out why my uploads to pypi weren't working. It was because I'm an idiot and didn't understand it of course but this would have been extremely helpful. 
I hate to be the grumpy programmer but... if you can't complete the final project because you can't figure any of it out, maybe you need to take the class a second time?
Well, the author is from Sweden based on his About, and has made several linguistic publications. But thank you for deciding who is and isn't qualified to study language, we need more exclusivity in science. /s
Haha, yeah, I understand. Usually they recommend billing alarms but I don't think they have something like that (although I do see the value in it).
You can play around with localstack https://github.com/atlassian/localstack
I think since it uses a python file for its configuration, it's possible to integrate with a separate workflow for managing requirements, as I can process the existing requirements.txt file right there in packages.py.
Oh, your project seems way more ambitious than mine. Mine is really just a wrapper around setup tools and twine. Really simples stuff, but it saves a lot of time. Your's seem more like the new pip. Definitely keeping an eye on it :D
You complained about: &gt; The benchmark in your link a bit strange: doesn't mention which version/implementation of python used (python2/3, pypy, ...), it doesn't say what type of request used during testing ...but then linked an article about performance that had even less information about how the tests were performed. Additionally in the article from /u/861e3f75 they link to the source of the code used to perform the tests.
Oh, didn't know that one. Very similar project indeed. Keeping an eye on it. thanks!
Flask managed to collect people for whom Django is an overkill. It provides familiar to them templating language, familiar approach in doing things like plugins etc. Flask tremendously benefited from tutorials from [Miguel Grinberg](https://blog.miguelgrinberg.com) and some other guys. This lowered the entry point even more. Cherrypy on the other hand competed with Zope and Turbogears. Originally, it was not even a wsgi solution, it was a standalone server and the server part was kind of emphasized. It looks like Cherrypy people knew what they want to do and where the boundaries are. At some point, Cherrypy reached perfection. After that there was not much to do and since then Cherrypy project looks kind of stalled. And with Flask something is always happening. I am more familiar with Cherrypy than Flask. We are running a production application with Cherrypy behind Apache. 
If you are mastering matplotlib you would use the OO interface and things like `plt.subplots` with an S at the end, not `subplot`., use C0 , C1.. instead of explicit color name or shortcut. And wouldn't have to use `show()`. Knowing that matplotlib devs are trying to push people to not use these API you are making a diservice to them, and your users. 
&gt; Once the code is under source control, the fact that it got deleted will be recorded in the repository. If for some reason it becomes necessary to revive that code, any developer on the team can go and revisit the commit history and pull out just what is needed. (Spoiler alert: Most of the time you will never need that commented out code.) I've needed to do this a few times in the past few weeks and it's only viable if the person who deletes the code is a micro committer (e.g. each change is a separate commit) rather than a macro committer (e.g. the entire feature is one commit - either because fuck micro commits or squashing). That said, I prefer a revert over uncommenting code any day. 
I don't see the link to the source, there is a link to article from 2010. The link I added is one I could find with flask and cherrypy. It said, based on benchmark developed for falcon - just want to show example when not everything so good for cherrypy. 
&gt; CMD export FLASK_ENV=prod; python src/index.py Please tell there is a second Dockerfile I'm missing that runs the app with uwsgi or something. As it stands, your app is vulnerable to all sorts of nastiness. And it's only single threaded. &gt; from utils.TokenController import TokenController Why not import the TokenController into the `__init__.py`? Ditto for all the other similar imports? You might want to look into relative imports as well. Something else, if you have a directory with an init file and a file named the same as the directory and that's it, just ditch the directory and import that file directly. All the `from signin.signInController import SignInController` just becomes `from signin import SignInController` Namespaces are great, but that doesn't mean you need all the namespaces. &gt; requests.get Look at `requests.Session` to get that tasty connection pooling and keep alive. For your config, look at a tool like EnvParse so you can configure from envvars and .env files. My train stop is coming up so I'll leave it at this for feedback 
I agree, though in fairness, the person who posted this here is likely not the same one who wrote the piece. The title of the piece on the website is merely "Data visualization in python matplotlib with example". Matplotlib is huge and there is no realistic mastering it in one day or anything close to it. 
Interesting... I know Gunicorn spawns several Flask processes. Nginx/Gunicorn must perform some sort of load balancing to those separate processes then?
Check out this project: https://github.com/zoofIO/flexx It's not super mature, but I really like the look of it.
Please don't use electron. Spend the time to make something that works well. Electron is like buying a house when you need a shelf.
The `requirements.txt` works very similar to `package.json`. The basics are easy enough. If you want the latest version of a package, you simply list out the package name: package1 package2 package3 If you want a specific version, then follow the package name with `==&lt;version&gt;`: package1==1.0.2 package2&gt;=1.3 package Just as an FYI `venv` and `virtualenv` are the most basic topic when it comes to environment management. There are tons of other packages that will make life much more easy and can replicate what, for instance, npm does.
I had an idea to build something like this once, but when I really thought about it, I couldn't see the point (ie, I was trying to solve a problem I didn't really have). Do you have an example that shows why you need and how you use python support like this?
https://www.reddit.com/r/Python/comments/18leav/python_integer_range_5_256_and_identity_comparison/
https://docs.python.org/3/c-api/long.html#c.PyLong_FromLong Basically all integers in the range -5 &lt;= x &lt; 256 are actually references to an object in a fixed list of integer objects, whereas integer values outside that range are not and therefore two values outside of that range refer to different objects. The is operator checks that its arguments refer to the same object, not that their values are equal
I pmed you
check out: * [**QPython**](https://play.google.com/store/apps/details?id=org.qpython.qpy3) *- for running scripts from an Android device* * [**Kivy**](https://kivy.org) &amp; [**Kivy/Docs**](https://kivy.org/docs/) *- for writing apps with Python* *- deployable to [Linux, Windows, OSX, Android, iOS]*
TL;DR, don't use `is` for checking equality
&gt; Why not simply run a Flask server that takes requests straight from port 80 instead of the reverse proxy? From the Flask docs: &gt; While lightweight and easy to use, Flask’s built-in server is not suitable for production as it doesn’t scale well and by default serves only one request at a time. So that removed the option of just using Flask's built-in WSGI server. That's where Gunicorn comes in as a recommended production WSGI server as it's very simple and reliable. You can run use Gunicorn on port 80 if you're *not* using sync workers. You can read more about why on their docs under [Choosing a Worker Type](http://docs.gunicorn.org/en/latest/design.html#choosing-a-worker-type). nginx is much better at terminating TLS and serving static files. It also allows you to easily [rate limit](https://lincolnloop.com/blog/rate-limiting-nginx/) and other useful things. You also might want to serve multiple websites on the same server. nginx is better at handling that too. It's the "default" stack for good reason.
As promised last week, I successfully ported my main code-base to python3! No more living in the past, and now I can use fancy string formatting!
Off-topic: I wish git had a "sub-commit" feature, so that you have the best of both worlds: "macro" commits for a clean and easily viewable history that consist of "micro" commits for easier reverting and viewing of individual changes. + Implement feature XYZ + Preparational refactorings - Move class Foo from A to B ... + Database schema changes ...
I think that the general reason is that they are three well established components that are pretty good at what they do in this context. Flask is the WSGI application framework, Gunicorn the WSGI server, and nginx the reverse-proxy to securely interface with the outside world. If you aren't familiar with the WSGI protocol its worth looking over [PEP-333](https://www.python.org/dev/peps/pep-0333/) to get a sense of it. As a WSGI application framework, flask just provides a callable object, the "app", and essentially what it does is you call it and pass it a special `environ` dict with all the details of a request - the method, path, body if any, etc... and then it does its thing and hands back a status code, response headers, and data for the body. It doesn't really know anything about sockets or how to really talk HTTP. Flask makes it easy for you to write specialized functions to handle different paths, and so on, but at the end of the day you are just providing something for a server to call when a request comes in. Flask comes with a simple WSGI server for debugging which provides a single worker to accept one HTTP connection at a time. As others have said, the flask maintainers don't recommend that you use it for production. Gunicorn creates multiple workers of specified types that listen and create sockets, and handle HTTP requests by calling the flask app object and sending the response data. In my mind, load-balancing aside, the biggest reason for using a reverse-proxy is to enable HTTPS. Even if sensitive data isn't being transferred, internet providers have been caught injecting ads, rewriting pages, and collecting customer data. Another big reason is that if you have any static content to serve, nginx can do it very quickly and easily provided that there is specified path to that content that can be mapped to a directory of files.
&gt; if you want a py2 and a py3 branch But why would you want that anymore? Py2 is close to end-of-life. Other major projects are already announcing no more py2 versions of their 2/3 compatible software. 
Feed and speed as in CNC routing/milling?
I try to do that. I.e. at the moment Trump is "Twitter Boss", isis is "some hackers" and so on. If you look at the GitHub page, you can contribute to the dct.py file. Just do "WORDS FROM CNN":"REPLACEMENT WORDS". That would be greatly appreciated.
I'm not asking them to do my homework mate. I just really need help. I do have some codes but I'm not sure it's what I needed. My bad tho. I'm so sorry for causing trouble.
Jinja was inspired by Django templates, and Django was built for content management. So, clients should be able to modify templates themselves. Therefore, they provide a sandboxed environment with no python blocks. Mako ideology is more about utilizing the full power of python in templates. 
You need to instantiate `ExampleApp()` directly. window = ExampleApp() window.show() Since you are subclassing `QMainWindow`, it doesn't make sense to directly call the `QMainWindow` constructor... calling ExampleApp() will cause the `__init__()` to be called which includes `super().__init__()` which will invoke the initialization of the classes you inherit from. Your current code never calls `__init__()` which gets called when the `ExampleApp` class is initialized. `__init__` will also result in the `setupUi` to occur and more importantly for your problem, the `clicked` signal to get connected to the `on_click` slot (any method or function can be connected to a signal and act as a "slot" in Qt terminology). One way to understand why your code doesn't make sense (if you're​ interested in what causes me to scratch my head when I first saw your code...) is when you have the same stuff twice. You have a call to setupUI in init, but then you call it separately in your main code. You also inherit from QMainWindow and untitled.Ui_MainWindow, but then refer to them directly in your main block below. You shouldn't need to repeat yourself this way... once you've inherited, you gain access to the parent classes through the child class, ExampleApp, which now has all the methods of both QMainWindow and UI_MainWindow. Since you went through the trouble to define a convenient child class with all these abilities, it only makes sense to use that class instead of creating the same thing by calling the parent classes and rewriting parts of your initialization. Does this make sense? Let us know if calling ExampleApp directly works, maybe someone else has other ideas.
I was excited about the 3.6 support so I started a project targeted at Alexa skills using lambda: https://github.com/arcward/echokit
Certainly not. If you were a master, you could make 500 plots in the time it takes most people to make 2. It requires not using the default API. Shoot, most people can't even be bothered to close figures, so they bleed memory.
Only in cPython, there is no guarantee that other Pythom implementations will behave in the same way.
"Fully functional", yeah, right, they'll have one or two of... Holy cow. pip install localstack
To learn and be independent is not a waste of time, specially in the long term. How do you do when the framework is not more maintained, doesn't upgrade to Py3, doesn't scale like you want ? (i don't speak about web2py, i don't know it).
One specific reason is maintenability in the long term. The less dependency you have the more you are free with clean code. In Go very few of us use a framework. Python doesn't need them also, just use webob and a router.
I have issues with their shitty generic naming choice. 
A very, very, very valid point. "I'm using Serverless, to create a serverless service". "I'm making a serverless service too, but not with serverless". "So is it serverless or not?". "Yes, but not with serverless". "..."
Yep, creating this confusion for their own shitty gains is hostile to the community. 
Nice summarization.
You must have been so high up on your horse that you didn't read the article: The author is using *swedish news* as his text sources. Then he apparently decided to translate the words into english so that other people could understand it as well. &gt; These results are meaningless, laughable, and cannot be considered science. It's a blog post, not a peer-reviewed paper. It's not my field of expertise, but the data is from a reputable source, and he clearly shows how he arrives at the results. Seems to follow the scientific method good enough to me.
I did the same thing some months ago. Do you want to chat (also in private) about the prediction algorithm that you use?
Alternatives to Electron that embed a web browser engine and integrate with Python: 1. [PyQt5](https://pypi.python.org/pypi/PyQt5/5.8.2) and its [QWebEngineView](http://doc.qt.io/qt-5/qwebengineview.html) widget (embeds Chromium) 2. [pywebiew](https://github.com/r0x0r/pywebview) (embeds IE / Webkit / Chromium depending on platform) 3. [CEF Python](https://github.com/cztomczak/cefpython) (embeds Chromium) 4. [wxPython](https://wxpython.org/) and its [WebKitCtrl](https://wxpython.org/Phoenix/docs/html/wx.webkit.WebKitCtrl.html#wx.webkit.WebKitCtrl) widget (embeds WebKit) See also: a. [How to Turn a Web App Into a Desktop App, Using Chromium and PyInstaller](https://medium.freecodecamp.com/the-python-desktop-application-3a66b4a128d3). b. https://github.com/fyears/electron-python-example
I've been messing around trying to find a language to learn as well as to write an application to manage my lending accounts. Tried C++ and Java, but ended up with Python because it only took half an hour before I'm confident with the constructs and I'm already writing the business logic itself. My goal is to finish a functional CLI version, and then improve it with a GUI. Wish me luck!
you can set allerts (and I think a maximum) in the billing options. 
https://youtu.be/tdIIJuPh3SI a very good talk that covers this subject if you're interested 
I used fcupdate.nl. They keep track of the minute in which a team scores, not only the result. This way you can get more accurate information to simulate matches with.
Eh it was worth a try, the only options were: `epc, gif, hex, jpeg2k, jpeg, libtiff, pcx, raw, xbm, zip` The only reason I'm using BMP is because it seems like the format closest to raw data that mozjpeg takes. If I'm to keep using BMP, it looks like I'll have to stick with the BytesIO method.
Neat
This... is interesting. EDIT: Wait, I thought this was just mock endpoints. I can really run Lambda functions in Docker containers locally with this?! By interacting with the API just like I would with AWS? And CloudFormation? This is very interesting.
I can confirm that `.tobytes` [absolutely most definitely isn't to be used for anything useful](https://github.com/python-pillow/Pillow/pull/1470). It's a trap specifically designed to waste your time.
Thanks!!
&gt; Or it might be possible to link PIL against mozjpeg as libjpeg Could you elaborate on this, how does mozjpeg linking work?
I was trying to do as you said, to parse the data but it is keeping returning an error, could you see if you can help me out on this one? here's the link of this new error: https://redd.it/68sjmf If you could help me out, thanks a a lot
1. Look at the error message. It tells you that in line 87, you try to call something, but the value there is an instance of `None`, so calling it fails. 2. Look at line 87. What's being called? Where does this value come from? How does it get to be `None`? How might you change your program to fix that? 3. Implement the changes you come up with from step 2. 4. Iterate until the program works the way you want it to.
Halfway through Automate the Boring Stuff with Python. Want to be able to scrape, clean up data sets and do intensive data analysis by the end of the year. 
You could use [osmnx](https://github.com/gboeing/osmnx)
This is a link to an Udemy paid course. Not a tutorial. nothing wrong in sharing a course, but please do mention it. This will be considered as an ad not a resource.
Oh ! Thanks for the tip ! :)
awesome project. This is definitely useful to many students trying to find something interesting. 
Wheels? Is there anything significantly django specific here or can you drop the dependency on django? Asyncio? 
i'd move the semaphore into the loop, and thus not create a task and take data out of the iterator when the job limit is reached: async def main(): semaphore = asyncio.BoundedSemaphore(10) for i in range(100): await semaphore.acquire() f = asyncio.ensure_future(do_work()) f.add_done_callback(lambda f: semaphore.release()) tasks.append(f) await asyncio.gather(tasks) the `.acquire` and `.release` can't be in a context manager here, but any exceptions happening between acquisition and setting of the callback would make the semaphore go out of scope anyway. a non-decoupled version could be achieved with an ensure_future wrapping call.
Thanks for both the suggestions, but I'm still stuck. This is my first pyqt5 foray, so I'm a little lost. I tried what you recommended but I'm getting the same results. Any further suggestions?
I should say that my ultimate goal here is to be able to change the UI as generated by QT designer without having to do a bunch of cutting and pasting with my original code.
Well, did you see all the hostility [elsewhere in this thread](https://www.reddit.com/r/Python/comments/68m6iu/how_to_create_your_first_python_36_aws_lambda/dh0rpa9/) about the project named "serverless"? Seems wise of them to avoid that.
/r/learnpython
Awesome! Thank you for the kind words!!
Many have said that nginx is good for terminating SSL (it really is). When doing a larger deployment of an app it's common to have your edges (load balancer, cache, etc) terminate your SSL for you while nginx delivers content to them via port 80 unencrypted. The outside world never sees the device you eventually hitting to satisfy the HTTP request. HTTP has many needs and nginx can handle everything from logging, rate limiting, securing portions of your URL-space, fastcgi caching, and julienning fries. At some point a marketing person is going to ask you to proxy something onto your site at /blog/. This is at least 90% of my nginx usage... :/
That is actually a good hint. Since I usually rebase and cleanup my commits before merging, this could work well. Will try. 
I would not take this course/test unless you are comfortable with Python. It is self study/video lectures/a forum, leading up to a test. For the test, you are given a series of challenges during a limited time window. Working code has to be developed and sent back. It is not easy.
Keep trying, I don't think you made it to step 4. Your looking for something very specific and it is not finding it. Are you really looking for &lt;td&gt;&lt;/TD&gt;? 
I'm currently taking a course on udemy.com by Tim Buchalka. Great instructor and you get lifetime access to the course. I feel like I'm learning a lot and I can highly recommend it.
Why? 
does not work everywhere. has no clear, universally accepted meaning. does not add anything valuable, words could not. 
Yes and no, but the main reason is non-technical: it creates irritating noise which makes it harder to quickly read through the commits. In OP's repo they're using "markup" (for the lack of a better word) which means they write something like `:construction_worker:` and GitHub turns it into this little image. But in my terminal it looks like this: http://i.imgur.com/jSxH0yP.png, noisy as hell. They could have used the actual [Unicode characters](http://unicode.org/emoji/charts/full-emoji-list.html) but that would also result in irritating noise because not every font supports emojis or not all emojis.
i think it works on github and gitlab which is enough for him. if he likes it, i see no reason to not use this feature and as long as the commit message describse the changes well, its only adding some additional smiles.
If you want to stick to 100% python, either you'll want to use a python gui library (tkinter) or, try something like http://www.brython.info/ for your front-end. I have never used it myself though. Python can technically do anything js can, but js is universal adopted. Since you're only serving the dashboard to yourself, that's not a problem though.
Why did you parse the data from that site rather than using... say the MagicSeaweed API?
It is precisely *because* I saw that these conclusions about gender bias in English usage were drawn from translated Swedish that I felt motivated to say something. Please clarify for us all how the author can assert conclusions about the subtleties and biases of words like "*speaks*" or "*becomes*" in English when he doesn't understand the language well enough to use these words in a sentence. As evidenced above, the author cannot correctly construct the sentence "Men speak.". Yet you accept his conclusions about gender bias in the English usage of this word? The scientific method says you're supposed to observe and try to *understand* your subject before drawing conclusions about it. Basic English conjugation is a very low bar to meet, yet the author has failed to meet it. He has drawn conclusions before acquiring basic understanding, and has not done his due diligence. So no, the author has definitely *not* followed the scientific method here. Requiring reasonable standards is not a high horse, it is standard practice in any field of science. Only charlatans feel offended or threatened by this. 
I assume the hate for emojis is bitter old man syndrome
A drawback is that hackers using AWS as a C2 platform would then have a much easier time. 
+1 for AtBS!
Install Package Control, then install Python PEP8 Autoformat and Python Flake8 Lint https://packagecontrol.io/installation
Mmmmmm fries :D
Read the sidebar: &gt; If you are about to ask a question, please consider r/learnpython It's very clear. 
No ELB. :(
Then leave them away in your project. I don't understand why you are so angry about it. Have they killed your cat or something?
i am not angry. i just think it is really, really, really, really stupid and instead of writing "really" four times i used "fucking". doesn't language work like that? should i google for an emoji instead of words?
What is the purpose of your question? DiP is free. Just start. Don't ask permission. If it's good it's good. If it sucks do something else. 
Suggestion for improvement: match whole words?
Okay, I really don't know how this got in there...
After the comments the author made some months ago about Python 3, which he was pretty much forced to retract as it was costing him money, I wouldn't touch LPTHW with a 100 foot long, disinfected barge pole.
Please post the code and don't guess, most often in Python your gut feeling is wrong, use [The Python Profilers](https://docs.python.org/3/library/profile.html).
Hi /u/Admin071313, Would be helpful to see you code: can you edit you question with a link to a pastebin-like service ? (For exemple : [ZeroBin](https://www.zerobin.net/)) But, before seeing your code, you can be confident that your bottleneck in Python (and any other language) is more likely to come from IO stuffs than from the language itself. In you case, one optimization could be to make asynchronous network calls, instead of making them one by one. Here is a good and easy to use library to handle this: [Curio - Github](https://github.com/dabeaz/curio) [Curio - Documentation](https://curio.readthedocs.io/en/latest/) If you never heard about asynchronous programming before, there are plenty of tutorial out there too :) [Get to grips with asyncio in Python 3 - Robert Smallshire ](https://www.youtube.com/watch?v=M-UcUs7IMIM)
check out thenewboston on youtube, I started with him
@OP: your emojis are dope, keep doin you, haters gonna hate. &amp;nbsp; @hater: if it bothers you that much, write a wrapper that RegEx replaces all known emoji markup. ARE WE NOT PROGRAMMERS?! (*PS: if you do, share it on /r/Python so all of your anti-emoji brethren can avoid rustlement*)
Automate the Boring Stuff with Python was recommended by 3 users in total. This was exactly the answer I was looking for. Thanks a lot!
Write a calculator or something easy like that. Try to visualize what you want your program to do then write it accordingly. 
Hey thanks for sharing! I'm the author of this blog post. You can check out my Python courses here in case you're interested: [Python and Django Full Stack Web Developer Bootcamp](https://www.udemy.com/python-and-django-full-stack-web-developer-bootcamp/?couponCode=2017DJANGO15) [Python for Data Science and Machine Learning Bootcamp](https://www.udemy.com/python-for-data-science-and-machine-learning-bootcamp/?couponCode=2017PYTHONDSML15)
I got LPTHW recommendations a lot. What did he say? I am curious.
Can we stop acting like everyone who uses foul language is "angry". It's so childish. 
What'd he say?
nt main(int argc, char* argv[]) { Py_Initialize(); PySys_SetArgv(argc,argv); char const * filename2 = "graph3.py"; FILE * graphFile = fopen ("graph3.py", "r+"); PyRun_SimpleFileEx(graphFile, filename2, 1); Py_Finalize(); return 0; } That was my approach but I couldn't package the program with boost to run it on a different system
Ah. Did you include the boost python dll as well as the Python dll on the other system? For example, in my project I have boost_python-vc110-1_54.dll and python26.dll which I include with my exe file. Yours would likely be different depending on the version of python and boost you're using and the compiler you used to build boost.
Attempting to write some simple code for the stock market. Very new idea in my head but I want to start by writing something that would tell me if it is a good time to buy a certain stock.
I saw Zed Shaw at a grocery store in San Francisco yesterday. I told him how cool it was to meet him in person, but I didn’t want to be a douche and bother him and ask him for photos or anything. He said, “Oh, like you’re doing now?” I was taken aback, and all I could say was “Huh?” but he kept cutting me off and going “huh? huh? huh?” and closing his hand shut in front of my face. I walked away and continued with my shopping, and I heard him chuckle as I walked off. When I came to pay for my stuff up front I saw him trying to walk out the doors with like fifteen Milky Ways in his hands without paying. The girl at the counter was very nice about it and professional, and was like “Sir, you need to pay for those first.” At first he kept pretending to be tired and not hear her, but eventually turned back around and brought them to the counter. When she took one of the bars and started scanning it multiple times, he stopped her and told her to scan them each individually “to prevent any electrical infetterence,” and then turned around and winked at me. I don’t even think that’s a word. After she scanned each bar and put them in a bag and started to say the price, he kept interrupting her by yawning really loudly.
Sounds like a jerk 
Word choice is a strong indicator of mood, especially in written text because most of the other indicators are missing then.
Yes, language kinda works like that but there's always context and tone. But you know that, you're not that naive, so please make an effort in communicating decently.
They look a little *C* sick. Do they sound like they have a *Lisp* at all? Try giving them some *Java* that might perk them up. If that doesn't work you'll need to *Haskell* a veterinarian^(this one was a huge reach)
Yeah dude. This is r/Python, not r/programming. We like each other here (mostly). 
It's 100% completely safe to just ignore anything that Zed Shaw has to say. 
No, I don't think you're missing anything. Using a debugger is very often easier than using print statements or logging, so perhaps the reason he's arguing against it is that it goes against the spirit of the book because it's not "the hard way".
http://github.com/catholabs/ESengine is a nice idea!
How about putting the matchtwo line in a try/except block and catching the TypeError?
Thanks everyone for your comments. I am a big debugger fan myself, so it feels good not to have my core beliefs shaken. I used to teach programming classes in C++. I was always impressed how many students would be so reluctant to use a debugger at the beginning of the course, just to become almost addicted to it at the end. All it required was me pushing them to use it until they realized how helpful it is.
You cannot take a random sample because time series depends on the past data.
You can simply use 3/4 of data to construct the model and 1/4 to fine tune the parameter estimates. But this is kinda standard method and not really cross-validation method ML field considers.
You can always do practice on Hackerrank to see if you can actually handle harder algorithms. From what I've learned in interviews is that they'll definitely ask lots of questions about the language ie what is it, pros and cons, environment variables, etc. You can find a lot of it online.
Sorry if this isn't helpful, just googling around, but this recursive whatnot is more complex than what I've done with Pyparsing before. Is this related to what you want? http://stackoverflow.com/q/4140884/1639671 Also, seems like something equivalent to the regex pattern \d\+? would also work without the need for recursion, but I'm assuming your example was an oversimplification of your actual use case.
Find a book that's reliably recommended to people who understand the basics, and are looking for an intermediate level offering. Flip through and see if you are familiar with the concepts. If the book sets tasks/problems see if you can complete them without having to look up the underlying principles or check the example code. I use this approach in a number of areas, and it seems fairly reliable. Plus, if you find you are not up to snuff, you have a book to learn from. It also works with good youtube tutorials, lecture series etc., but but can be harder to skim through while still making sure you understand the concepts. 
the fuck even
Would it help you if I PM'd you my simple equation parser/calculator?
youtube-dl, although not by any means simple, does this too btw.
I hate to say it but I got lost after the "Data" section because the data file I downloaded from https://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data is not called wine_data.csv and it doesn't contain the same columns as the examples below. ? I renamed the file wine.data to wine_data.csv and followed the tutorial. &gt;&gt;&gt; wine.describe().transpose() count mean std min 25% 50% 75% max 1 177.0 1.943503 0.773991 1.00 1.00 2.00 3.00 3.00 14.23 177.0 12.993672 0.808808 11.03 12.36 13.05 13.67 14.83 1.71 177.0 2.339887 1.119314 0.74 1.60 1.87 3.10 5.80 2.43 177.0 2.366158 0.275080 1.36 2.21 2.36 2.56 3.23 15.6 177.0 19.516949 3.336071 10.60 17.20 19.50 21.50 30.00 127 177.0 99.587571 14.174018 70.00 88.00 98.00 107.00 162.00 2.8 177.0 2.292260 0.626465 0.98 1.74 2.35 2.80 3.88 3.06 177.0 2.023446 0.998658 0.34 1.20 2.13 2.86 5.08 .28 177.0 0.362316 0.124653 0.13 0.27 0.34 0.44 0.66 2.29 177.0 1.586949 0.571545 0.41 1.25 1.55 1.95 3.58 5.64 177.0 5.054802 2.324446 1.28 3.21 4.68 6.20 13.00 1.04 177.0 0.956983 0.229135 0.48 0.78 0.96 1.12 1.71 3.92 177.0 2.604294 0.705103 1.27 1.93 2.78 3.17 4.00 1065 177.0 745.096045 314.884046 278.00 500.00 672.00 985.00 1680.00 &gt;&gt;&gt; wine.shape (177, 14) &gt;&gt;&gt; X = wine.drop('Cultivator',axis=1) Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; File "/home/user/.virtualenvs/scikit/local/lib/python2.7/site-packages/pandas/core/generic.py", line 1907, in drop new_axis = axis.drop(labels, errors=errors) File "/home/user/.virtualenvs/scikit/local/lib/python2.7/site-packages/pandas/indexes/base.py", line 3262, in drop labels[mask]) ValueError: labels ['Cultivator'] not contained in axis
I see at least 2 such expression parsers / calculators on the official examples: http://pyparsing.wikispaces.com/Examples
Ok, wow, you've done a lot more than me... sorry for my simplistic responses - hope someone can help...
Try using this data: https://www.dropbox.com/s/4z7jgujhz2gyap0/wine_data.csv?dl=0 Looks like the UCI is just the raw data, I forgot that I added the columns manually. Hope that helps!
&gt; i guess to be more specific, lets say you had strings and from which you need to make a tuple, then from that make a list, and then append to a dicitonary &gt; &gt; haha confusing i know :/ 
Thank you.
Since when does sklearn have neural networks? Can they be trained on the GPU?
i guess a general sense as of now
Yes, the author is an arsehole. Please see [The Case Against Python 3 (For Now)](https://learnpythonthehardway.org/book/nopython3.html) and [A Rebuttal For Python 3](https://eev.ee/blog/2016/11/23/a-rebuttal-for-python-3/).
You right
Ah :) looks like lot of us played around gathering soccer data. We should open some slack channel to build something concrete.
So I'm running Instabot.py from github on cms. Have pip install and ran the requirements.txt but have error : No module names 'unfollow_protocol' I've searched the thread for all updates to the text file but not sure why this error and broad searches are doing nothing to help me fix it. 
This seems a very good idea. We can also share some scraped and cleaned data (I have a lot from Italian Serie A) 
As an addicted viewer i highly recommend checking this out! 
Welcome to python! I won't be able to help you out, but I can point you to /r/learnpython and they might have someone who knows windows better than I do. I highly recommend asking this question over there, and in the future they'll be really helpful with your python programming questions. Is your machine 32 bit? I doubt that's the core of the problem but it'll useful to know. I'd ask more questions, but because of how unfamiliar I am with windows, I'd probably just be barking up the wrong tree. Good luck getting the fix, and give /r/learnpython a try!
no python 3 support? 
Hey just thought I'd pass along some props! Absolutely love your courses. I've been taking the Machine learning and the Sql courses and just bought the full stack Django. Looking forward to starting it. Keep up the good work! 
Damn, I think with all that stuff, the game would work exactly as I want it to, but I've never even heard of most of that stuff, would any of links in the sidebar be good to start learning? Only used python for physics simulations so far, so I'm not too advanced or experienced. Just to answer some of the questions: Card Questions: There's no numbering scheme like in regular playing cards, but I'm trying to make it so the same card can't be drawn twice in the same game. There are lots of different classes of cards, at the beginning of the game the players select which extra "modules" or decks they would like to include in the game, and the game would draw cards from the default decks + those selected modules. For example adding Truth or Dare cards to the game, or cards that tell you to do shots (since not a lot of people like doing that) So far, for my randomisation, I've re-written the english of each card so it's either ({player_name}, {do task}) or ({player name}, do {task} on, {player_name}. And then I've seperated all the solo tasks from the duo tasks. Once a random task has been selected, it checks which list it came from and has either: print( RandomPlayerName, RandomCard) or print (RandomPlayerName, RandomCard, RandomPlayer2Name) For Example, One of the cards says the exact text: ", take a drink with" So the print then places a name before and after that string. Deck Questions: I'm slowly adding to the cards, they're all defined in their lists so it's easy to add more add any time to any list. To draw from the deck, I make a variable equal to the number of cards in all the decks in the game then have the simple loop: for i in range(NumberOfCards): do stuff print ("Press Enter To Load Next Card") UselessInput = (" ") which stops all the cards from being drawn at once, the player says when they're ready for the next one. The game continues until all cards have been drawn. Game Questions: Kinda answered the first question in the last one. Can't figure out a way to have a specific order yet, so the best I've been able to do so far is to check who the last turn applied to and stops them from being in the next card, meaning you cant get two cards that say: Player1 do task Player1 do task. May add a scoring system at the end of development, but it's not a priority at the moment. At the moment I'm using Anaconda to code this since it simplifies the process a lot. Once the game is fully function I'll be trying to give it UI with tkinter, which will be a challenge. Sorry for the wall of text! Appreciate the feedback 
Wow, that looks really good. I didn't find that I assume my Google is broken. Thanks!
All that in the context of commit messages​. I use emojis frequently when texting and I'd even use them in Reddit comments if they were supported everywhere but they are not so I'm not doing it.
The data has been manually labeled. It's hosted in a google drive. The link is posted in the article. :)
That's an interesting question which raises another one - are you wanna be independent ? Just look at most popular open source projects which is really pushing industry forward - you can't even fork them on github, only commit to upstream. Because if you fork them - one month later you will be too far away from the edge and every month you will create something interesting and loose much more. You can build your own framework but if you do you will not be able to make something wonderful because your energy will be spent on framework. So imho in contemporary reality it's better to use most advanced tools available on the market rather than be "independent" full stack of nothing.
you definitely need to give some stacktraces showing the error(s) you're running into.
Since about 0.18
It supports Python 3, infect all Python 2.7 + are supported expect 3.2 
I guess as well as downloading Instabot.py you also need unfollow_protocol.py. Download the whole project ?
I mean, Linus Torvalds also hates debuggers: &gt; I happen to believe that not having a kernel debugger forces people to think about their problem on a different level than with a debugger. I think that without a debugger, you don't get into that mindset where you know how it behaves, and then you fix it from there. Without a debugger, you tend to think about problems another way. You want to understand things on a different _level_. &gt; It's partly "source vs binary", but it's more than that. It's not that you have to look at the sources (of course you have to - and any good debugger will make that _easy_). It's that you have to look at the level _above_ sources. At the meaning of things. Without a debugger, you basically have to go the next step: understand what the program does. Not just that particular line. Debuggers are helpful for understanding an unfamiliar program's control flow, but after that people shouldn't continue relying on them as a crutch. They're also not a substitute for proper logging and error recovery.
Beautiful 
If the goal is to scrap the tables, simply ignoring them will suffice. Less facetiously, you might want to look through the [BeautifulSoup docs](https://www.crummy.com/software/BeautifulSoup/bs4/doc/#navigating-the-tree) on how to isolate the table you're interested in, and then write separate output functions using [an appropriate library](http://www.python-excel.org/).
...or you're writing code with no intent to distribute - like a personal or internal project, or a prototype, as opposed to a product you are selling/delivering. But, yes, thanks for adding the licensing/cost specifics that I was alluding to. I should know better than to compare PySide and PyQt and not explicitly mention licensing and cost.
It is a 64-bit machine, and thanks! I will give it a shot. Cheers
Automate the boring stuff also has a Udemy course.
In general, just stick with what feels good for you. A lot of people have a lot of different ways to solve problems or approach their workflow that it can seem overwhelming to try and incorporate all of the different ideas into your own workflow. If a debugger works for you, and the code you get at the end is good, and you *understand* what's happening (apparently Zed Shaw has trouble understanding what's going on with a debugger idk), then you're doing great. As for Zed Shaw, I don't mean to pick on or blame you for choosing it as a resource (his Learn X the Hard Way books were often spoken of as good resources for beginners - I even used his C course for a while as a resource), but you should switch to something else for a more rounded, accurate and up-to-date learning experience. There are plenty in the sidebar, try to stick to Python 3! Zed Shaw is the Donald Trump of programming tutorials. He speaks incoherently about subjects that you can tell he only has a tenuous grasp over, and states his opinions as fact.
Hi there, thanks for making these! After following your MLPClassifier example, I have been trying it out for some business analytics. The train / test data looks pretty good - but the results are not repeatable. As in, the number of failures changes by up to 10% when I re-run the program. Is this expected, and if so why? Just noticed it yesterday, will be doing some reading today. 
Where did he retract this?
I guess it's quite neat to be able to wrap for multiple languages, but if I'm only interested in wrapping Python I don't see the benefits over e.g. `pybind11`.
This library seems great - and maybe even better than *elasticsearch-dsl*. Thanks for the link!
Interesting read, I found this [post on SO that probably explain why it's so slow](http://stackoverflow.com/questions/29706278/python-pandas-to-sql-with-sqlalchemy-how-to-speed-up-exporting-to-ms-sql#30776241).
Yes, the timer is set. It cannot be moved. Winter is coming.
You can try posting in one of the subreddits dedicated to hiring people, like this one https://www.reddit.com/r/forhire/
Its true! Once Python 2 hit EOL NO ONE will use it. That's a fact!
Try using QPython application for android.
That commit message doesn't exist in the repository because the commit message doesn't contain those glyphs. When you copy-paste from github you don't get the message in the repository. What _is_ stored is &gt; Add : Coverage BAdge :hammer: :art: That's what I meant, maybe poorly formulated, with that it can't be copy-pasted. You copied githubs formatted message, not the message stored in the git repository. If you send that to someone they will not be able to find it in the repository.
Python is a deeply pragmatic language. I've literally never seen the term well-formed used in this context. The community tends to avoid getting hung up on formalisms and focuses on use cases. What is your use case?
So you're straight up looking to pay someone to do your homework for you? I like the cut of your jib, son, you've got upper-middle management written all over you.
I highly recommend [plot.ly](https://plot.ly/) wich you can use offline (i.e without an account on plot.ly) and is very well integrated with python. It also has a library for pandas integration (cufflinks) which makes ploting dataframe very easy. It can be used in notebook or in html pages (with plotly.js).
Okay, so I can't load up a console in QPython3 and type in some test code with Kivy and have it work, but I can create an Android APK using Python3 and Kivy, then run it as a standalone app? To be able to create and run packages is far more useful than entering Kivy test code into a prompt (especially on my phone), so if this is true then it resolves my problem.
I'd love to make a desktop app with a django backend
From what I understood, to_sql generates sql inserts for each line, while adding a csv is made through the database bulk input, which is much faster.
Use the `subprocess` module. Use `subprocess.call` to start another program and wait for it to finish, or `subprocess.Popen` to start another program in parallel with the python program. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to include which version of python and what OS you are using. 
Thanks for your comment. Yes, we know what an inverse problem is, and how to minimize functions and of all that. We study physics and have had more than enough linear algebra. The problem that we don't know even the basics of Python, like how to import a comma separated data file and apply the function on this data to minimize it with respected to the earthquake locations and times. Let alone iterate this process to approximate the slowness field. We knows the mathematics and general idea behind it, just not how to implement it in Python.
Thanks for the perspective man. I won't disappoint you. Upper management is the goal.
Socketserver is like node.js except in a sane programming language. 
It sounded interesting and I immediately wanted to test it out. However pip can't install it on my Ubuntu machines. Could not find any downloads that satisfy the requirement SocketServer Edit: [I need to RTFA better](http://readeroffictions.com/wp-content/uploads/2014/07/gif-i-feel-like-a-fucking-idiot.gif)
I don't know if you are jocking or not but SocketServer is in the standard library. I used to use it for testing purpose to mock dependencies.
I've played a bit with this module https://github.com/lukaszbanasiak/yahoo-finance. Easy to use and works as promised.
www.quantopian.com
It's in the standard library! That's the best part :)
Ahaha. Very true!
Code academy helped me a lot. Seems like the easiest and fastest way to start.
Why is it down voted? I am just curious
Um, hello, the conclusions are about ENGLISH WORDS. Not a single Swedish word is shown in the conclusion, and neither is any comment made about the results being valid only for Swedish. No mention is made of why he translated the words to English, yet he undeniably *asserts conclusions about ENGLISH WORDS*. The author has blindly assumed that if a bias exists in the use of a Swedish word, then it therefore also exists in the use of a similar English word. But of course, this is invalid, and was my objection the entire time. This is all presuming he translated it correctly from Swedish to English in the first place - which, given the quality of writing we see here, clearly cannot be the case. 
Start by clicking [here](https://www.codecademy.com/learn/python).
Hi, thanks for your comment and explanation. In actual fact we both study Theoretical Physics (We are also doing a course in general relativity currently), we just took a course in numerical methods to expand our horizons, which was a mistake. I understand what you mean about hiring the combination of a physicist and a Python developer. We thought that the 'physics' involved in this problem is so trivial and simple that any programmer would understand it. 
Install requests. It depends on your OS a bit, but probably this command: pip install requests
socketserver is there to handle really basic needs. Modules like this should be used for more professional applications https://rpyc.readthedocs.io/en/latest/tutorial/tut3.html#tut3
Yes, i imported and initialized tkinter. You said you wanted them as IntVars, and an "IntVar" is an object in tkinter. Did you mean plain integer variables? Then you can use this: &gt;&gt;&gt; agility_level = int(data['stats']['agility']['level']) &gt;&gt;&gt; agility_level 64 
`%s` means that the value will be converted to a string, however the value's type defines that conversion. `%d` means the value will be formatted as an integer, and it has to be a number (an `int` or a `float`).
It is converted to a string, but the conversion is specialized for numbers, and there are extra optional formatting specifiers that only make sense for numbers.
Just started python, building a discord bot for my server.
yea boi!
Code segments [look _really_ bad](http://i.imgur.com/zqCJu9w.png) on mobile. So much blank space, so little space for code.
Oooh, that's awful :( I'll see what I can do, thanks for the heads up.
[Print Formatting comparison.](https://pyformat.info/) 
**Here's a sneak peek of [/r/learnpython](https://np.reddit.com/r/learnpython) using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#2: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/5lveo6/blacklist/)
because people read the sidebar
Hah. I guess maybe it isn't so much of an issue as it's hard for the AttributeError to go unnoticed - assuming you're testing things.
No, you can't return anything from an \_\_init\_\_ since it has to return the instance. If the input parameters are invalid you should raise an error. class MyClass: def __init__(self, name): if name == 'mavavilj': raise ValueError('input parameter "name" is not valid') self.name = name --- If you have more questions like this it's better to post them on /r/learnpython. Be sure include which version of python and what OS you are using. 
What does the error raising do to the class initialization? Like if one has called `c=MyClass(...)`, then what does `c` become?
Nothing. The program stops. Unless you catch the error: try: c=MyClass(...) except ValueError: # do whatever needs to be done if the input was invalid raising errors and catching them is the standard way to deal with situations like this. For instance: &gt;&gt;&gt; int('banana') Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; ValueError: invalid literal for int() with base 10: 'banana' Or if you needed to keep the program going: &gt;&gt;&gt; try: ... c = int('banana') ... except ValueError: ... c = 0 # default to 0 if bad input ... &gt;&gt;&gt; c 0 
Sorry haven't been using Reddit for long. The learnpython sub is private and I had the question now so I figured I'd try my luck here and the cython sub. And I've already compiled a test project from a book I'm reading and everything worked as expected so I really have no idea what could be the issue. Thanks for the suggestion. I may try it in a Linux vm
You are almost there. Map very key to a list, so your dict could look like {'A': [30,40,50], 'B': [10,20,30], 'C': [10,20], 'D': [10]} to facilitate the creation such a mapping you can use defaultdict from the collections module and start with dict = collections.defaultdict(list)
I've always found that any code viewed on a mobile should be done in landscape mode. Unfortunate, but thats the way it is.
Or, just do it properly with hypothesis
After some further researching I came up with this X = mergedf['AnzahlTweets'] y = mergedf['Kurs'] tscv = TimeSeriesSplit(n_splits=10) print(tscv) for train_index, test_index in tscv.split(X): print("TRAIN:", train_index, "TEST:", test_index) X_train, X_test = X[train_index], X[test_index] y_train, y_test = y[train_index], y[test_index] linreg=LinearRegression() linreg.fit(X_train,y_train) y_pred=linreg.predict(X_test) print('RMSE:',np.sqrt(metrics.mean_squared_error(y_test, y_pred))) Would this then be the right approach except from the 'ValueError: Input contains NaN, infinity or a value too large for dtype('float64').' I get? Thanks in advance!
You could try making a reddit bot and have it post nice comments on r/wholesome. Or with any other functionality. Just an idea. But i am working on a script that downloads my school schedule in icalender format and reads it. Figures out at which time i have to stand up and create an alarm. Also notifies me when my schedule is modified. But yeah the r/wholesome bot would be pretty dope.
I've just made a youtube series showing me making one of my first programs, it's simple but is still probably not a good first thing to look at, here's the link incase you're interested. https://youtu.be/LgCkk3Rul5g As for how I started, I just tried to do stuff, the first thing I did was work through the problems on https://projecteuler.net/archives , you could start there if you liked. I'd be happy to help with those problems, I'm debating making youtube videos on them if it's something that would interest you? I'm still a beginner myself, but I find explaining code to others helps me understand it better. :)
The learnpython sub is definitely _not_ private. You might want to pm /u/zahlman about that. As to your issue, the first thing I can think of is that you never cythonize your extension. So the .pyx is never compiled to a C file, and gcc can't find the input file. You might want to read [this tutorial](https://cython.readthedocs.io/en/latest/src/quickstart/build.html).
If some weird technical issue is causing our assuredly public sub to appear as private to some users, I have no idea what to do about it.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Is that the one that matches up with SANS something something automating security with python?
I've used this a bit, and it's nice, but what I really don't understand is: why do I need to define a handler as a class? Why couldn't it just be a function? I can see there being cases where using a class might make sense, but for simple cases, a callback function would suffice.
May have to add that to the budget request next year... Thanks! 
If you want a head start grab violent python. They use it as the primary source material and it's a really good source material as well. 
Have it :)
I'm not implying absence of tests. I was alluding to that python (as majority of dynamic languages) is about _ADHERING TO INTERFACE_, not about "static guarantees that requirements were fullfillled".
I think you are looking for [Flat Pages extension](https://pythonhosted.org/Flask-FlatPages/).
&gt;Plus, there is no Jupyter Notebook in Scala: PySpark is our only option. Um. https://github.com/alexarchambault/jupyter-scala#comparison-to-alternatives The whole point of IPython turning into Jupyter is multilanguage support. Per the link above, there are at least seven options for a Scala backend, of which four explicitly support Spark. (I'd still use Python, but that's because I love it, not that there's no alternative)
Or, you know, chain the get with a dictionary? json_obj.get("k1", {}).get("m2", {}).get("n3")
Is it possible to make an APK with Python3 and Kivy on a Windows host machine without using the Kivy ubuntu virtual machine?
Main issue is that my code was written for python 3.6 but pypy seems to have lots of issues with it. Especially with scipy, numpy, pandas
PyPy3 has limited python3.5 support on the latest version, but it's still not production-ready. Check PyPy homepage. Also numpy and scipy had issues with pypy, as I remember.
Basically an algotrading software that processes 100+ gigs of data. Very freaking slow
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
What do you mean? I'm sorry I am new to this computer stuff and I really need help. From my understanding the file doesn't exist but what do you mean by "ls"?
Thanks! That one doesn't have a public git repo, but its in the same style, with lots of filled out and explanatory jupyter notebooks for each lecture. You can always enroll to see if its what you are looking for, and if not, just request a refund within 30 days.
I like this more for pure nested dictionaries. In full JSON, you'd have to switch between `{}` and `[]` depending on whether the next level in the schema is a list or a dictionary. It's not a big deal I guess, but it's not like `NA` is a complex object either, and it keeps things consistent.
Seems like we're heading into the wonderful world of [Abstract Base Classes](https://docs.python.org/3/library/abc.html), for anyone interested here's an introduction [Abstract Base Classes in Python](https://dbader.org/blog/abstract-base-classes-in-python).
Julia, python, R and haskell. Haven't heard of others.
conda create -n myPy3PyQt4env python=4 PyQt=4 did not work but conda create -n myPy3PyQt4env python=3.5 PyQt=4 did work. It also didn't like python 3.6.1 This was on OS X Sierra. 
Thanks so much!
Have not heard of this. Do you have a link?
But really, what I've been trying to figure out all day, is how to properly debug a spark pipeline in pycharm, with the full step-through capability. Clearly this would be on my local machine, not a cluster. Is there some magic to this? Stepping through spark apps like this would be really illustrative to the way they're working. Also, death to word-count examples for spark.
The only reasons to use 2.7 would be because you were dealing with code already written in 2.7, or if you were working in a system so old that Python 3 wasn't even available. Use 3.6.
&gt;The `socketserver` module simplifies the task of writing network servers. why this sentence is center aligned? It's awkward to look at it. And the spacing between paragraphs is wrong.
I can't speak for anyone else, but yes, they do help me. I learned OOP from a book (I couldn't understand it on my own). 
It was functionnal tests and ilI write only unit test at the moment. I spawned process to fake tiers api. Now i write unit tests and i mock request.session.Session. I've used httpretty before, but honnestly it simple to always mock the same way.
Uhm, by what do you mean, "Can books actually help you?" Learning Python? Yeah man, they can help you. If you don't have time, you don't have time. Books/video/tutoring/schooling for Python won't help anyone if they can't read/watch/attend them. Actually, I can't imagine if you don't have at least some kind of resource (books, videos, etc.) you could learn it anyway. When people (correctly) say, "Learn by doing" it's usually with the caveat, "After some level of instruction." You're not just going to sit someone in front of IDLE with no resources or experience and say, "Welp, learn Python." If you need a basic resource for the busy person, "Python Crash Course" is pretty solid. ~500 pages (that's short for a programming book) that gets to the point rather quickly and doesn't dawdle much. "*This* is what this is and *this* is how you use it, now use it." Sometimes I think the book is too terse, but it is called, "Python *Crash Course*" and not, "Python Beginnings and Assorted Minutia."
If you don't have time for books, make time for [this](https://www.youtube.com/watch?v=OSGv2VnC0go) talk. Hettinger is not mortal.
I'll check it out. Thanks a lot!
&gt; www.quantopian.com Ok this is really cool! Thank you!
Right I was thinking about that. I did use --with-python3 and it didn't work. It says pyqt-5.8.2 already installed. The weird thing is if I go into the python 2.7 folder or the python 3.6 folder pyqt is not there. 
Just tried it now and it appears that brew has renamed pyqt5/qt5 to qt — installing "qt5" triggers "qt" install, which is Qt4. ==&gt; Installing pyqt ==&gt; Downloading https://homebrew.bintray.com/bottles/pyqt-5.8.2.sierra.bottle.tar.gz Hm.
Nope, but afaik that just force-overwrites files, shouldn't change what is installed.
It says it's already installed but not linked. Hm. If I do brew link python it says I should remove it /usr/local/bin/2to3 with brew link --overwrite python. This is over my head lol. 
So, this worked for me: brew install cartr/qt4/pyqt@4 --with-python3 Then the following worked for me (in python3): import PyQt4 When I uninstalled the old version of PyQt4 I had some errors re: migrating the pyqt5 install to the pyqt folder. But other than that it worked fine. If you have errors linking take a look at `brew link`.
Hang on, that's python not python3. If you're using python3 the linking of python doesn't matter. What does it say for `which python3`?
https://www.coursera.org/specializations/python
also what is the cartr command it is taking a while to download
apparently I can't format reddit comments either
So, you probably need to move /usr/local/bin to the front of your path. If you run `/usr/local/bin/python3` can you import PyQt4 then?
So, if that works, you need to update your path to put `/usr/local/bin` in front of everything else. You can do this with `nano ~/.bash_profile`, find the line that says `export PATH=...` and put `/usr/local/bin;` after the `=` (in front of whatever else is there. Then exit, with `Ctrl-X` and `Y` + `Return` to save. Back on the command line `source ~/.bash_profile` to reload. You should now be able to type `python3` and import `PyQt4` from there.
ok great thanks that all worked and now I can run python from the terminal but when I use IDLE it still doesn't recognize PyQt4. Do I need to update the path for IDLE as well?
Well, this was the place where i started my fun with Python. I would definitely recommend it as a started - especially if you don't have programming knowledge I didn't finish it yet, because in the meantime i was so much fascinated with scrapping and other topic that i started to look for additional resources and books. IF you are newbie - give it a try, it worked for me and I'm still planning to go back and finish it. HOWEVER... Materials on coursera are for python 2, but exercised=s can be done in python 3 if you want (Dr. chuck created his own interpreter). It depends on your needs what you want to do. If you want to learn python 2 - just do this course or... If you want to learn python 3 - just go to YT, Dr. Chuck put there his updated to python 3 material. OR even easier... ;) Go to https://www.py4e.com/ log-in, and you will have an access to videos and you will be able to do exercises as well..
I have idle, idle2, idle2.7, idle3 and idle3.6 at `/usr/local/bin/idle` and the following line is for the 3.6 version. Should I just update it to be `#!/usr/local/bin/idle3.6`? `#!/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/bin/` 
ok, so im an idiot and it wasn't working and I went back to fix the bash profile file and I must have really messed something up because now whenever I type anything at the terminal it says `-bash: ls: command not found` or `-bash: nano: command not found`. If you could help me fix this that would be fantastic thank you Edit: I fixed the issue. For some reason I still cant import pyqt4 from idle, but I will figure it out. Thanks so much
hmm wasn't aware of that, though it seems pretty broken and complicated, also doesn't extract any of the meta data. Youtube-dl is just too overcomplicated and too big for it's own good. 
Errors like that mean you've broken your path. You can fix it for the current terminal with `export PATH=&lt;path&gt;`, which will allow you to get into `nano` and fix the problem. I'd try running `idle3` from the command line to make sure you're in the right one. If I do that I can import PyQt4 fine from there.
thank you guys for your reply. My website is open source here. https://github.com/magizbox/python. So you can make issues about what you care about python and create pull requests
I'd like to help if i can, i still consider myself a beginner but i've been using it at work for about 9 months and i've made several scripts and applications. pm me some details? :)
[removed]
Seems easier to find packages for 2.7. That and my classes only taught with 2.7. Plus, my work's servers only have 2.7 installed. So, it was a no-brainer for me.
* Flight Data Analysis using PySpark * Web Scraping to recover accident reports and news articles * NLTK to find registration numbers, dates, and metadata in documents What can't python do?
There are python 3 packages/solutions for almost any problem these days now that it's been out for nearly a decade. You have to be looking for something very, very specific to make this argument today. The argument of Python 2.7 being on your servers is sadly still valid for many folks, though many Linux systems are slowly migrating to 3 as default.
THis is exactly what I needed ! Too bad I'll have to wait until July for the next session. Is there a way to consult the lectures and videos pronto ?
So you want to fraud your resume on some libraries you have no clue about??
Hi, I apologize for the inconvenience, but I would like to say that I did repost my question in /r/LearnPython. However, the was more engagement here than in /r/LearnPython. User reply more and were more willing to collaborate. I did not see any sing of dislike about the post. I will keep your message in mind next time I make a post about my python learning but I though you should be aware of my experience. Thanks for the great work you are doing here. Keep it up! 
https://cloud.google.com/appengine/docs/python/ 
You can make a webapp with flask - it's easy, relative cheap (5$ for vps, 10$ for a domain name) and has a lot of valuable learning experience. I recently made http://wisdom.cat just for this very purpose and learned quite a bit about the web in the process. Try out webcrawling (request, parsel, scrapy etc.). With a bunch of easy data you can do a lot of things, so you won't run out of ideas. Make a wallpaper crawler, that crawls /r/wallpapers and sets a random wallpaper; a reddit crawler that notifies you about the latest video game deals from /r/gamedeals; a crawler that notifies you when your favorite sports team is playing? or notifies you when wind speed is low enough in your area for flying your drone? As you can see there are a lot of ideas to be had, just look into your daily routines and see what you could automate! 
No, there's no code review. New entries are displayed within seconds.
That's just not true. Besides, before long we will be moving to Python 4. As a community we need to stop using Python 2.
Which packages in particular only work for 2?
I'd love to, but I'm not good at physics, unfortunately. You should start by adding some documentation on the github page (readme.md) and comments in your code - that will help your future colleagues a lot. Another tip - you're obviously coming from some OO language like Java, since you're using so many setters and getters (particle.py). In Python, we do `.` reading and writing (instead of `obj.setPosition(x, y)` we do `obj.pos = x, y`) Watch this presentation by Raymond Hettinger if you have the time: https://www.youtube.com/watch?v=OSGv2VnC0go It's absolutely incredible how you can make Python look beautiful. Good luck with your project and waiting for Vento Aureo adaptation ;) Edit: I actually meant this video https://www.youtube.com/watch?v=HTLu2DFOdTg , that one's great too, but in this talk at ~39:00 he talks about properties - it's what you need to use if you have some actual logic in your setters in getters.
Down-vote for using a generic, uninformative title for your post.
It's pretty much completely ported now. I haven't run into a package I wanted to use that only supports Python 2 in years. I know there are still a few, mostly ones which aren't being actively developed and which have Python 3 compatible alternatives. 2 is pretty much dead now.
I never thought someone would be able to guess java based on what I did in python. I know it's totally possible to do obj.pos = x,y but I like like long, descriptive functions 
I'm at work right now, but I'll try to give you a brief review when I get home. 
Wow that's great! And you're certainly right Python is amazing! Could you suggest any ideas?
For beginners they're not *that* different. from __future__ import print_function Will cover 90% of the difference for a brand new user anyway. If you're a brand new user you have a whole lot to learn before features like asyncio. Write in 3. Test in 2. Source: Use 2.7 daily at work for multiple projects supporting a ton of engineering hardware testing. I develop everything on my laptop with the latest version I can find. Run tox tests against 2.7, 3.4:3.6 and have had no issues. 
I'm working as a junior python developer and I'm self-taught. If my opinion/perspective could be of your interest just let me know.
portable
What kind of game?
I noticed I had mistyped that - maybe you caught that also, but it should have been python=3 in that first line not python=4. if you specify python=3 it defaults to 3.6.1. However, as you said, python=3.5 should work just fine as well. I'll see if I can figure out why it doesn't work with 3.6.1 edit: the following worked just fine for me on OS X.11.6 (El Capitan) conda create -n envnamehere python=3 pyqt=4 however it installed python 3.5.3. Could be that pyqt4 doesn't support python 3.6? I'm not sure one way or another. 
I'm gonna be going back to Python 2.4 next week. I hate that language. At least python 2.7.12 works with modern code. If you're wondering, it's because I'm on Centos 5.6 LTS. Python 2.4 came out in 2003. I'm also using PyQt3...
Angery
I'm maybe out date right now. I and my coworkers in our company stick with python 2.7 in all our projects. It's kind of good time to make a switch.
it's a bit complicated for your first time because you need to wrap your head around so many things like WSGI and whole http process. Though I highly recommend pushing through and trying to understand it because it's very valuable experience and will open up a lot of gates for you. The general recommendation is to use Nginx as http server and gunicorn as wsgi (web server gateway interface). This blog covers it quite nicely, it's for linode vps but it should work on pretty much anything: http://connormurray.me/Deploying-Python/ To summarise in a short overview you need: - Systemd service that starts your app on boot and allows you to easily log and restart it. - Gunicorn wsgi service that pipes your app connections to a socket. - Nginx engine that exposes this socket to a domain. P.S. if you end up going with linode feel free to use my [referal link](https://www.linode.com/?r=37112fcbb52a0f3c556a91b37d215d72e4ef5702) :P
&gt; thanks for joining with me. can you give me what do you feel with this site? what does it lack? thanks for joining with me. can you give me what do you feel with this site? what does it lack?
thanks for joining with me. can you give me what do you feel with this site? what does it lack?
thanks for joining with me. can you give me what do you feel with this site? what does it lack?
From what I know async/await are made to replace promises, it's the next step so people won't have to write callback(resolve/reject however you want to call them). it helps async code to be executed easily. I just saw [this great talk](https://www.youtube.com/watch?v=j4fKFKh2vmI&amp;list=TLGGWdODrCyDDUwwNDA1MjAxNw) that explains about the js history evolution, js going to have async/await in ES8 this year. That in mind, I'm trying to be open minded - what's the benefit of using promises in python if we already have async/await? 
Sure. I''l let you know when coming back from the office, right now I'm still at work :P
This is great! I'd be willing to help in some capacity. 
It's not really a game but more of a simulation.
I don't really have the artistic skill to make a game.
thanks. I agree with you. Frontpage is now updated as your opinion. 
[DVC - Data Version Control beta release: iterative machine learning - tool review](https://blog.dataversioncontrol.com/data-version-control-beta-release-iterative-machine-learning-a7faf7c8be67)
Let's say I'm trying to do this over and over How will the for loop look, I have this AllHori = [] For col in range(0,Len(allColumns)): Let = [col[0] for col in allColumns] AllHori.append(checkColumns(Last)) Return AllHori
you have to do it at some point. better do it now. All this 2.7 stuff is just legacy and inertia. 
It seems your problem is not with python itself, but with learning programming. I think there​ are other subreddits that may be more helpful to you right now, and for learning the basics of python there's /r/learnpython as well.
**Here's a sneak peek of [/r/learnpython](https://np.reddit.com/r/learnpython) using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#2: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/5lveo6/blacklist/)
I really needed this tool when I did my university project. It was a big pain to iterate through dataset I worked with. Even though it was not really big dataset, just a few hundreds of images, around 50 MB overall.
Maybe look in to copying algorithms or programs maybe from another language or even pseudo code. Then you know what you want to do each step of the program and you just need to work out how to do that thing. The problem with a project as big as a calculator is there is endless ways to do it and you can spend lots of time thinking about implementation details beyond the language. If you are familiar with programming it could help keep you focused, if you are not you can learn stuff like algorithms at the same time. Another added bonus is you can link the thing you are copying and say "I'm trying to make a Python version of this and I don't know what this does or how to implement it in Python". Best of luck 
What kind of simulation then? Looking at the code, it seems that you follow sand grains colliding, but could you elaborate a bit more? Like, are you simulating anything physically relevant, our are you just interested in having grains of different sizes moving around, and being able to move them by hand?
Yep and you'd find out immediately upon linting.
That's it! Split! Thank you so much, Corey! Oh, and everything except the "AmazonOut_" part changes on every file. THank you again. Paul
Couldn't you just install Python 2.7 (or 3.6 for that matter) on Centos 5.6? 
"I was going to learn to develop Node.js apps, but it isn't installed on my computer by default. Guess I'll just give up." -- Nobody ever.
This is awesome!
You could, but we're plugging into someone else's code. They use Python 2.4 and PyQt3. The part of the code without the GUI (our part) runs fine in Python 2.7, but in order to be able to call it from the GUI, you gotta use Python 2.4. I do my development in Python 2.7 and I forget I can't use things like list comprehensions. It also means I have to backport libraries like docopt to work with Python 2.4 or pyInstaller, but of course they're not quite right.
To do what?
&gt; Hettinger is not mortal. If he is not mortal what does that make the TimBot?
Your receiving code needs to be a loop, otherwise it only runs once. That said, why a different process at all? Why a daemon? Why not a thread? Why formatting through bash scripts?
Is the list of articles supposed to be capped between days 40 and 32 or is Medium run by imbeciles?
I'm a programmer; so I've done more than my fair share of upgrades. And not all upgrades are good. E.g. Windows Vista. Plus compatibility is always an issue with new releases of anything 
Ah that's a good point. My threshold of adding syntactic sugar at the cost of less explicit code may be too low :)
You probably lose more time to multiprocessing overhead than you do to just printing the line in the right place in your code without any parallelism. Also, daemons are supposed to run in the background for extended periods of time, not be user facing. Also, the `daemon` thingy in the `multiprocessing` module is actually awful and not at all how you would write a well-behaved modern daemon. 
It takes a second to appear when you get to the bottom of the page. Here is the link: https://medium.com/100-days-of-algorithms/archive
Can you explain how this is any different than traditional analysis pipeline using GNU Make or Snakemake? Furthermore, it's not clear how this could be applied to very large workflows. I routinely work with datasets that are at least a few terabytes large spread across different sets of model outputs and observations. My workflow needs to handle the pre-processing of this dataset, ideally in a high-performance framework (usually pre-processing is embarrassingly parallel and I can farm out the work to whatever resources are available on my cluster when I need to run the pipeline). Can DVC work with clusters in HPC environments like SLURM or PBS? 
Oh! Thank you, I had no idea. I'll check it out then as this can be quite useful.
It's rather a new kid on the block, but check out [Altair](https://altair-viz.github.io/). It has the ggplot mindset (it uses the [Vega-Lite grammar](https://vega.github.io/vega-lite/) if you want to be a vis nerd) without the bizarre syntax of the actual python ggplot library. The code to do a [Github-style punchcard chart](https://altair-viz.github.io/gallery/github_punchcard.html): from altair import * Chart('http://vega.github.io/vega-lite/data/github.csv').mark_circle().encode( size='sum(count):Q', x=X('time:T', timeUnit='hours', ), y=Y('time:T', timeUnit='day', ), )
Man! Sounds painful
`thrift` is not ported. We could port this project to Python 3, and that library too, and use different thrift client, but the "problem" is... there are no problems with Python 2. We rarely need any new libraries, and our code maybe isn't the most "modern", but at least we have consistent coding style, which is a value on its own. I coded 2 years in Python 2.7 only, and now I code 10% of the time in Python 2.7 and 90% in Python 3.5, and I don't feel much of a difference. The only big change is that I mistakenly write `print "x"` instead of `print("x")` all the time... And I don't think I'm missing any important modern features of Python 3.5 or something, I know about all of them and I think I use them whenever I can (which happens not often). Of course, we will have to port ourselves to 3 before 2020, or whenever Python 2 support drops.
Do you know other python dangerous module? 
Agree with this Imo Readme is one of the important part of the project See art of Readme https://github.com/noffle/art-of-readme Cc u/jojoisawesome
What did you mean by this? How is that not the best approach? 
No, but I don't actively search for them. This is the first I've seen that does something like this.
Same here, I'm looking to try and finish it by the end of the week. I want to be able to put dota2 betting odds off a website into an Excel sheet.
&gt; You should aways use the latest version whenever possible. It's hard to imagine worse advice in a technical arena. You've just advised a student to be an alpha tester.
Depend on how big he/she want to. From what I read most of the time flask is good for api and fast prototype. But for big website django is more easier due to packages and community 
use request instead of urlretrieve? http://stackoverflow.com/questions/15035123/what-command-to-use-instead-of-urllib-request-urlretrieve 
Check out [delegator](https://github.com/kennethreitz/delegator.py) for a simpler interface. It's being developed by Kenneth Reitz of Requests fame, and that guy knows a few things about API design.
Google "python interprocess communication". There's tons of options and none of them are perfect. Don't forget about OS level options like dbus. 
The main difference is how you specify the dependency graph (DAG). The dependencies have to be explicitly specified in Makefile. DVC implicitly derives the dependencies from commands that you run (by command arguments and file changes the command makes). So, DVC is supposed to be easier to use. Cloud data sharing is embedded in DVC and could be part of your building plan. Regarding the distributed computing - it is not implemented in the current beta version. In the release version DVC will have distributed\cloud computing commands like: $ dvc cloud create mygpu --type p2.xlarge --cloud AWS $ dvc run --cloud mygpu python myscript.py data/input.csv data/output.tsv A massive parallel job could be easily created by a simple loop. Data synchronization - code and DAG through Git and data - through S3\GCP.
[Seen this?](https://github.com/NARKOZ/hacker-scripts)
Lol, that's pretty cool. *attempts to open an ssh server with coffee machine*
Thank you for the links!
http://ProjectEuler.net
Try making the code font smaller. Monospace fonts have in general better legibility, so it's fine to make them a notch or two smaller, and then you will need less horizontal space too. Besides, even now they are visually larger than normal text.
Same here. Also a word2vec exercise would be great.
If you want to setup a Hadoop cluster then by all means do so but it really does depend because you are the only person who knows your data. Had you provided information about the data structure, how much data, size, column, dimensions, etc, then one could give a quasi-accurate assessment. Your description of "large CSV file with timestamps and asset prices" is uselessly vague. However, without knowing anything about what you are doing, I follow the KISS methodology and generally store a gzipped JSON format. I work with datasets that are hundreds of megabytes in size using this and performance is acceptable. For larger datasets, I prefer a simple CouchDB or MongoDB server instance which will also be JSON data stores. Simple. JSON and gzip or a NoSQL JSON datastore. If you want to get wild and crazy, fire up an ElasticSearch node and throw in some fantastic aggregated queries which may negate the need for Pandas altogether.
Suggestion... Add example(s) for deploying with AWS and GAE. Your target for this is going to be folks who will want the turnkey examples. I think it's terrific. 
thanks for getting back to me. That's the part I had difficulty with linking my executable to have boost, I'm using a *nix machine. 
Seems to be a cool framework. Do you have a demo of it in action ? 
Thanks! I'll check it out.
No idea how to even on the first day 
https://pypi.python.org/pypi/pycrypto I would like to fix this permanently because this has happened with every package so far. netmiko and pycrypto
Hi @LightShadow, thanks for explaining that, Dask is really a work horse as far as data analytics is concerned. And I am planning on more blogs on exploring the distributed nature of Dask. 
This made me remember the merry times when I was doing a lot PHP with its "append to string" syntax: http://php.net/manual/en/language.operators.string.php
You should search the python-ideas archives. That same operator was recently proposed as an alternative to def __init__(self, a, b, c): self.a = a self.b = b self.c = c This would become def __init__(self, a, b, c): self .= a, b, c I stopped following the thread at some point so I'm not sure what its status is, but two completely unique proposals for the same syntax generally hint at the syntax not being obvious for either one. If you'd like to get feedback from folks who spend a lot of time thinking about the future of the language, python-ideas is the best place to propose this. 
Yes I saw that earlier, ran it, and still nothing has changed. Is there additional steps that need to be completed.
I don't like it, because you can't read the right-hand side of the expression on its own anymore. In your example "b" is implicitly an attribute in "a" instead of a variable. This would cause too much confusion. If you expand the example then the semantics will become even more confusing: a.b.c .= d.e.f(d) What does the argument refer too? a.b.c.d or a variable d? 
You can, of course, use mingw to build extensions that don't need to link to the MS Visual C++ Runtime, [after you monkey patch distutils to stop linking msvcr90 by default.](https://bugs.python.org/issue16472) I had to subclass the mingw compiler, take out the default msvcr90 linker argument and monkey patch it back into the distutils module in order to work around that issue. That module makes me foam at the mouth, it has no business being in the standard library.
Or Jacob Kaplan Moss is a troll 
This is the correct answer.
Using the subprocess module is standard. If you already have it working, stick with it. There's no need to fix what isn't broken.
It really depends on what purpose you want this to serve for you. If you just want to do it to say you've done it, then yes brute force will be fine, but if you're using this as an aid for job interviews than it's important to learn solutions that are better than brute force and most importantly why they are better than brute force. Of course Google will always be an aid though. 
You will need to become more aware of how things are installed on your system. You can find what the earlier version of Python is by looking through the root of your hard drive for a Python folder, and/or by looking at Add &amp; Remove Programs. You probably have both C:\Python34 and C:\Python36 folders. Then look at what Python folders are included on your system path. When you run "python" with no path, it will pick the first one listed in the path. You can also enter "where python" to have the system show you what it finds. If Python is correctly installed and referenced on the path, you can just run it as your are doing from any folder. Since you are getting errors, it might be better to uninstall both versions, then reinstall 3.6, unless you need both. You can also "cd" to the folder for the version you want to use and run "python" from there. Or you can include the full path when you type the command from your current directory: c:\python36\python.exe The PythonXX.DLL file should be in the top level of the respective PythonXX folder.
Why shouldn't you be able? Even if you type at world record speed (15 cps), you still give the PC more than 66ms to process one character. Even a very unoptimized implementation should not need that much cycles on current machines. 
This would likely be impossible. Python doesn't have arrays or pointers, making it near impossible to implement fancy data structures. Numpy gets you close, but not all the way. Plus Python runtimes tend to be fairly slow compared to the JVM or .Net or even Go. While fast Pythons do exist, the language isn't designed to be fast by nature. IMO Python would be the worst object oriented language for this task.
Hm, I would rather trust the OS to do the sandboxing. Keyword: PTRACE_SYSEMU. 
You can implement any arbitrary data structure in Python, such as linked lists, trees, whatever. You don't need pointers for that, and you don't need numpy. Plain old references work fine. 
Cool ,I will give it a shot! Thanks
If you have control over the C++ you can create a Ctypes wrapper from the DLL and header file.
I'd be willing to help out somewhat- somewhat in the sense of im a beginner.
Theoretically, yes you can implement any *abstract* data type in Python. But you can't implement an array list, for example. (Although I'm not entirely sure what data structure the built-in list implements). For a word processor, you are certainly going to want to allocate large arrays. One would possibly want to implement a [piece table](https://en.m.wikipedia.org/wiki/Piece_table) as the main data structure, and I can't imagine a reference based implementation being very performant. Reference based data structures tend to have poor locality of reference because you don't control where things are allocated with respect to each other. So you'll have a lot of cache misses. With arrays, you do control locality. This is important when you have lots of stuff allocated, which I imagine is the case in word processing. To be fair, I'm definitely NOT an expert in this. I just *feel* like locality is going to be important, and that's hard or impossible to ensure in Python.
I don't know what you mean by an "Array list", since that's a very generic term. If you're referring to a contiguous array of typed data, you can certainly do that with Python; see the `array` module, or `ctypes` if necessary, or just a plain byte string. And the question wasn't whether it would be performant, it was whether it was possible. And the answer is yes, it is most certainly possible. 
Why cradle Turbo Pascal when you can be rocking FreePascal!
The question wasn't about performance - and the idea that you can't implement 'fancy data structures' is just laughable; Python is Turing complete Language - anything you can do in C/C++ etc you can do in Python. It might not be performant, but it is entirely possible.
Some example of usage as a library: https://github.com/cedricbonhomme/Stegano/blob/v0.7/tests/test_lsb.py#L54 As a program: https://github.com/cedricbonhomme/Stegano/#use-stéganô-as-a-program Documentation: https://stegano.readthedocs.io/en/latest/
About PCAP network captures, years ago I worked on a project related to that. IP-Link: https://github.com/cedricbonhomme/IP-Link The main goal was to provide different visualization for PCAP captures. For example with Circos: https://ip-link.readthedocs.io/en/latest/tutorial.html#generation-of-the-input-matrix-for-circos I should work again on this project.
This has been fixed in the latest commit, which disables word breaking. By the way, I had to split few single-line comments but hadn't changed anything else to stay faithful with the original documentation.
Did you typeset this by hand or did you use something like pandoc for the rst-&gt;LaTeX-&gt;(pdf) part?
Save yourself the headache of Python on Windows and install conda
Thanks @sourcedexter . Any suggestions and feedback to improve it are welcome.
Thanks for the tip! I will look into that. However, even though I might be biased, my proposal seems way more intuitive than the one you presented... operants like these usually make this ` a ?= b` into this `a = a?b` which is consisten with my example (`a .= b()` to `a = a.b()`) but inconsistend with theirs (`self .= a` not to `self = self.a`). I don't know. It's still an incosisteny in that there is no `__ifoo__` for the `.=`, it would work completely differently.
You are right. Even though I personally would find it easy to read your example, it would be an inconsistency. Not only that, but right now these operands work on a class level and can be overridden using e.g. `__iadd__`, while my proposal works more at the level of objects in general and could not be overriden. It doesn't combine multiple things, it's just syntax.
It looks like someone's trying to use DOM when what they really wanted was SAX. As for naming, is this implying that a.b is the same *kind* of thing as a, or that the name 'a' describes both things equally well?
You will not get help here, but on the following subreddit, you shall receive. reddit.com/r/learnpython
By "array list" I mean a [dynamic array](https://en.wikipedia.org/wiki/Dynamic_array). The term "array list" is common for this data structure because of the prevalence of the JVM and Java standard library class `ArrayList`. The `array` module, like numpy, is for arrays of numeric values. Arrays of arbitrarily structured data are still not possible in Python ([record arrays](https://docs.scipy.org/doc/numpy/user/basics.rec.html) come close). Though, for a word processor, arrays of chars is probably enough, so this could be useful for OP's case. 
You make it sound as if several hundred KB of text is hard work for a modern computer.
hug is great, unfortunately the docs are quiet far from it.
I found this rather hilarious, but in all reality, it sounds like me wanting to automate literally everything that can in some way be networked to.
I have a slowly growing script I use to launch my workflow for Unity3D development. In one double-click, a batch program I dl'd for controlling whether both my monitors are active runs, 8 firefox tabs (Unity docs and forums and msdn) are opened, a mail client for my company email address, and Unity itself are all opened. One of my monitors is shared between two boxes, so if I was working on the other box that monitor may be disabled to prevent any windows from opening where I can't see them. The batch program sends the command to enable that monitor. One thing I want to fix is that if I want my firefox tabs in their own window I have to close any existing firefox windows. The whole thing takes about 24 seconds to run, and it's mostly sleep commands that give firefox a moment to load each new tab before opening another one. Still way faster than doing all that shit manually.
You are right that you can't write exactly the same code in Python that you write in C/C++ - for instance Python doesn't have a malloc/calloc. BUT the key question was about functionality - not how it was implmented. Yes you absolutely can make a word processor in Python, no you can't implement it using the same data structures that you would in c/c++ but the data structures are not the functionality. You chose the data structures so that your code has the right performance and footprint based on the requirements and the implementation language. You would choose different data structures in Python, but so what ? The key thing in this question is whether it does the same thing in terms of the functionality, not how that functionality is implemented. Using a large contiguous array is almost certainly not the only way to implement a text editing application. The Data structures you use are an implementation detail, not the functionality that the user sees. I would tend to agree that a Pure Python Word processor might not be performant, and might have a large memory footprint. The fact that Python doesn't support some data structures natively doesn't matter - it doesn't affect that actual functionality provided to the user (although I agree that in some cases it could well impact the non-functionals; execution speed, memory footprint, concurrent users etc).
I tried to write something like this and ended up DDoSing my router while I was developing/troubleshooting it. Gotta be careful about how often you scan the network and how deep you scan it. 
LPTHW was linked here but was removed some months ago as a lot of people think it's crap. The author is a complete burke who wrote a pile of complete rubbish about Python 3, [The Case Against Python 3 (For Now)](https://learnpythonthehardway.org/book/nopython3.html), but then did a swift u-turn when he realised it was costing him money, hence [LPTHW Python 3](https://learnpythonthehardway.org/book/nopython3.html).
&gt; I feel like 2 is better than 3 right now because a lot of good packages only work for 2 The [Python 3 Wall of Super Powers](https://python3wos.appspot.com/) says differently.
Yeah. I dont mind people sharing a link to their blog/company site, if it contains useful info. But just taking someone else's article and copying it, and then linking to your own... that's a downvote.
Make that from \_\_future\_\_ import print_function, unicode_literals, division, absolute_import We do new projects in Python 3 at work, but a few legacy Python 2 projects still have that on every file, meaning if we port those projects to Python 3 one day it should be a bit easier.
I'm writing a smartlight that works with an esp8266 flashed with micropython to light depending on time... baby steps but it's looking pretty!
Is there any way to possibly use that as a home security system? Maybe it could monitor devices that are close to your wifi, but not connected?
Haha, that works too!
Interesting, like a scraper?
It doesn't steal your /etc/passwd file (though it could have). It uploads an MD5 hash of the file. Jacob Kaplan-Moss is well-known in the Python community, works on the security team at Heroku, and is a good guy. This looks to me like either a demonstration, or an experiment in counting how many people will install potentially dangerous code.
Cool, thank you. I will check it out.
Yeah, then it simply scans for keywords. 
JAcob wrote for Pycon Australia Talk https://www.youtube.com/watch?list=PLs4CJRBY5F1KDIN6pv6daYWN_RnFOYvt0&amp;feature=player_detailpage&amp;v=daVHCUHtOZ4#t=1819s 
I use BeautifulSoup and Twill for web scraping. They work quite well.
That's....extremely interesting. 
bare bone implementations in python! https://github.com/mynameisvinn/algorithms
At our office we installed a gutter heater to battle a recurring icicle problem that needs to be turned on when it's snowing. There is no guarantee that someone will be here to turn it on or off at appropriate times so we installed a wifi enabled switch and poll the weather hourly. If the forecast includes certain precipitation keywords and the temperature is below freezing the switch turns the gutter heater on and e-mails us to let us know. It turns itself back off once the conditions change. Haven't seen an icicle on the gutter since. There is something magical about writing code that interacts with the physical world. With all the smart home devices coming out recently it's a pretty neat time to know how to write software.
make sure you're using `protocol=pickle.HIGHEST_PROTOCOL`. It's usually just as fast as HDF5 or anything else.
Done!
Go try one of the hard ones, then extrapolate from there.
You'd have to manually whitelist the physical address of any non burglar devices. Also, not all phones automatically join unsecured wifi. And you'd probably trigger some false positives from walkers by your house or people delivering something. 
Cool it's nice to have something other than free video games on the web 
There's a lot more things that word processors do like formatting. Typesetting that looks good can be pretty expensive. 
Originally the script sent ARP packets and noted the devices connected to the network, it didn't cause any problems but it was really noisy. This is 100% passive, I'm not scanning anything.
Reddit bot.
No... it just runs in the console for now
How did you translate then? 
Mind sharing?
Yeah I will it is still a bit buggy though 
I made a scraper for a restaurant near my office. Now instead of me checking their website everyday manually, the scraper checks day's menu. I automated the scraper with a cron job. Menu is sent to slack which pushes it to my phone.
Because unlike what you've possibly learned, OOP is not the be-all end-all of ways to program computers. It is, actually, quite often quite not the smartest way of doing things.
I do [hardware in the loop testing](https://en.wikipedia.org/wiki/Hardware-in-the-loop_simulation) with [dSpace](https://www.dspace.com/en/pub/home/products/sw/test_automation_software/platform_api_package.cfm) and [ETAS](https://www.etas.com/en/products/solutions_testing_validation.php). So my job.
All these religious fanatics.
I wrote a script that determines what reports I need to run today, runs them, exports and formats them and emails my customers. I run twice the reports of my coworkers but have free time pretty much all day. I've explained it to my boss and coworkers and I can tell that they don't understand it. I've even started running their reports for them to free up their time. It took me a couple of weeks to write the script because it was my first non-toy script. My next learning curve is microPython because I want to start playing with sensors and robotics as a hobby.
Your task is actually my main hobby! On top of what blitzkraft said you might also want to sniff around the source code of [PyUserInput](https://github.com/PyUserInput/PyUserInput). Development seems to have slowed down but there are a lot of references on how to do both mouse and keyboard inputs on all platforms in there.
If we ignore that free pascal has a huge fanbase, is still actively developed and compiles for a significant number of plattforms then you're correct, yes. So... not. What is it with you fanatics? Do you even realize how fanatic you sound?
This is gold xD
&gt; There is something magical about writing code that interacts with the physical world. This is so true! It really feels like a superpower to have written something that's changing the world around you (even in a super small way) 
&gt; Cherry 2000 Not just that, but one that runs on Python! ...Let's hope that they've worked out a way around pythons speed problem! 
Whats is your favorite flavour then
Asking the real questions 
If she comes with a pythong I'm sold!
I like that kind of topic, reading great ideas - it's so motivational.
Apparently you need to look up how to spot a fanatic and then look through this subreddit again. That's okay, I'll wait. Then we can talk properly.
This is a slight tangent, but did you know that [reddit is written in python](https://github.com/reddit/reddit)? There are tons of [actual applications written with python](https://en.wikipedia.org/wiki/List_of_Python_software#Applications). Here's [a list of text editors written in python](http://texteditors.org/cgi-bin/wiki.pl?PythonEditorFamily). Of course, not everything is 'pure python'. And you could even argue under the hood, python is C because the interpreter is written in C. But the broader picture is that you can do lots of real stuff with python.
Aloof sense of superiority without referencing any real arguments. Yup, definitely spotted one right here.
Iterator is anything that has `__iter__` method and returns iterable by calling it. Iterable in its turn is anything that has `__next__`/`next` (depending on python version) method and can be iterated over by means of it. So in general iterator is just a protocol (pythons' name for interface) required for iterating. Generators as a concept, disregard language they implemented in, are usually lazy sequences which preserve state between calls and used for iteration over large datasets. But in python generators are sort of coroutine which passes control flow to its caller between iterations and has pretty broad api, as mentioned above. But still they implement iterator protocol so they are still iterators. And asking difference between protocol and something that implements it its not that correct actually. Such answer I'm hoping to hear at best when asking this questions on interviews)
I wrote a Python Script to quickly text my phone a link from my laptop when I'm about to leave. The script is much quicker to share a link to my phone than using the Messages app, AirDrop, email, and bookmark apps. It's incredibly light-weight and has its own conversation in my iMessages, so it's convenient to scroll up and down and see everything I've read in the past. The text notification also means I can just click on it and have it open in Safari. [https://github.com/dsouzarc/dotfiles/blob/master/Python/TextLink.py ](https://github.com/dsouzarc/dotfiles/blob/master/Python/TextLink.py)
My bad...proper list comprehensions, with conditionals https://www.python.org/dev/peps/pep-0308/
Nightmares. Flashbacks. You might be OK if Conda has a precompiled package (someone else has suggested Conda in the comments already). If not, look up your packages among [Gohlke's wheels](http://www.lfd.uci.edu/~gohlke/pythonlibs/) (edit: link). These wheels can be installed with pip directly.
I used to use excel to calculate my sales tax deduction. It took up to 8 hours to sort through a years worth of data from my bank and group the appropriate items. Last year I automated the the process in an ipynb. It took about the same amount of time to get the script running properly, but it does the same sorting and calculation in seconds. This year it took ~30 seconds to calculate my sales tax deduction. This script has saved me thousands of dollars and about 16 man hours so far. I also use python for budgeting and wrote a script that calculated how long it would take to pay down credit card debt. Before learning Python I had never really coded any projects for personal benefit. 
it doesn't fit the syntax, and Guido doesn't like them, so probably not. On the bad side, the lack of it makes the language less flexible, so you can't write more concise code. On the good side, the lack of it makes the language less flexible, so people can't write too convoluted code. Python doesn't lend itself well to functional style, and map/filter are usually frowned upon in favor of comprehensions.
I fixed it by just using the following C:/python27&gt; python -m pip install [insert module name]
Try typing the following in a DOS box: *set path=%path%;C:\python27* [source](https://docs.python.org/2/tutorial/interpreter.html)
And some example images to boot. That way you know if you have things installed right.
That would actually be a brilliant idea if Unity work took up more of my time. It absolutely would speed up the script a lot, but it would also mean having those tabs open even if I'm just trying to look up some bash commands or browse reddit. Unless... is it possible to have a shortcut to multiple websites like you might have a desktop icon to a favorite website? 
Awesome.
How does it compare to Errbot? They seem to be used for same purpose.
Can't blame him. As they are, lambdas are quite useless. Its often much better to use the operator module or functools.partial, and if you need more complex callback style it's better to use named functions (or even better: factor them out into well documented ABCs)
Here's the code! Enjoy! def conjugation(): while True: englishInput = raw_input("Please enter a spanish word that you want to be conjugate.\n").lower() if englishInput [-2:] == "ar": print "This is how you conjugate " + englishInput + "\n" print "Yo: " + englishInput.replace("ar", "o") print "Tu: " + englishInput.replace("ar", "as") print "Usted, El, Ellas: " + englishInput.replace("ar", "a") print "Nosotros/as: " + englishInput.replace("ar", "amos") print "Ustedes, Ellos, Ellas: " + englishInput.replace("ar", "an") + "\n" englishInput = None continue elif englishInput [-2:] == "ir": print "This is how you conjugate " + englishInput + "\n" print "Yo: " + englishInput.replace("ir", "o") print "Tu: " + englishInput.replace("ir", "es") print "Usted, El, Ellas: " + englishInput.replace("ir", "e") print "Nosotros/as: " + englishInput.replace("ir", "imos") print "Ustedes, Ellos, Ellas: " + englishInput.replace("ir", "en") + "\n" englishInput = None continue elif englishInput [-2:] == "er": print "This is how you conjugate " + englishInput + "\n" print "Yo: " + englishInput.replace("er", "o") print "Tu: " + englishInput.replace("er", "es") print "Usted, El, Ellas: " + englishInput.replace("er", "en") print "Nosotros/as: " + englishInput.replace("er", "emos") print "Ustedes, Ellos, Ellas: " + englishInput.replace("er", "en") + "\n" englishInput = None continue else: print "ERROR\nSpelling might be incorrect." 
Yeah I've been looking into how to do that I think I'll end up adding instructions in the new that says "pip install this if you want to use this connector" Edit: I've made this change.
Take a look at the setuptools docs here: http://setuptools.readthedocs.io/en/latest/setuptools.html#declaring-extras-optional-features-with-their-own-dependencies
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [errbotio/errbot/.../**telegram_messenger.py** (master → e9f4ea8)](https://github.com/errbotio/errbot/blob/e9f4ea8a8d79f8d5c40f53100a97c79e4f4b0a2b/errbot/backends/telegram_messenger.py) * [chasinglogic/Chattie/.../**telegram.py** (master → 0db7180)](https://github.com/chasinglogic/Chattie/blob/0db7180c601e863175a892fd4605f57ad37f6d55/src/chattie/connectors/telegram.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dh6a6jk.)^.
Total edge case but, i make spotify playlists before i go to a concert based on the artists recent setlists.. and so http://www.setlistplaylist.com/ was born.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Thanks for this it's working now!
That's a big help, thanks!
No, you call `draw_art()` which calls `draw_shapes()`, so you don't need to call it again. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin, and do not post images of your code (impossible for us to test). Also, include which version of python and what OS you are using. 
And connecting to your network (which is hopefully secured). 
Indent it four spaces to get it to show, or better use gist github.com 
For closing all processes: import os os.system("TASKKILL /IM chrome.exe /F") The shortcut is more annoying but look at [this](http://timgolden.me.uk/python/win32_how_do_i/create-a-shortcut.html). For opening the shortcut after: import os os.startfile("D:\games\blender.lnk") 
The key thing here is reproducibility. If you run A, B, C, D in a bash script it runs everything. DVC reproduces steps based on the dependencies. It can realize that only A was changed and B, C are not depended on A. Thus, A and D have to be reproduced. This is crucial for ML tasks since each step usually takes a few minutes to run, sometimes - a few hours.
Thank you, I appreciate your comment. I'll add a better example in the README (how to hide and reveal a message). About working directly with file objects.I have to make some changes, but this is really easy. PIL is already able to open images with a path or with a file object. I just have to be sure that the use of the different modules will stay coherent. But I'll do that. 
If you clone the repository you will get the images used by the tests suit. And you'll be able to test the example: https://github.com/cedricbonhomme/Stegano#use-stéganô-as-a-library-in-your-python-program But, If you install Stegano with pip you won't get the images of the tests suit. Maybe I shoud add just a test image.
Oo, thanks for the information. I might use it in the future. With `patch` or `patch.object`, you might find `autospec=True` to be useful.
As a spanish speaker that's fun to see, otherwise irregular verbs are gonna F* you up.
Yes. There were several attributes of amorphous and hourly changing data that I had to pull from an ungodly API, a weekly XLS doc (via corporate email, pulling from owa), and other XML sources. Storing changes locally and displaying on command. That was the end specs. The first specs were: Make a web app that does analytics on these statistics.
You could move the "if" out of the function defs, and make one big if /elif Statement out of it.l which will then call the correct function. What you wrote is not a good pattern for bigger projects. (And even for small ones)
Practicality beats purity :-)
&gt; And you could even argue under the hood, python is C because the interpreter is written in C. I do wish people would stop making bland statements like this, e.g. Jython is written in Java, not C.
RemindMe! 3 days
Its taking a string and returning another string of equal length where each character is determined by the original characters position according to that equation with p. You should play around with passing strings to 'ord' and integers to 'chr' to get a better feel. Btw check out /r/learnpython
Ok. Im a lil busy right now so Ill try it later. Thanks!
Wow this is awesome!
Thanks a ton! I **really** appreciate you spreading the word about it.
Thanks! Hope you enjoy it.
I mean it more of a devil's advocate kindof thing. Under the hood it's all machine code, after all. 
You can also just ping that static ip address.
I don't believe SystemParametersInfo can set the lock screen wallpaper. [This UWP API](https://docs.microsoft.com/en-us/uwp/api/Windows.System.UserProfile.LockScreen) appears to have that ability.
I can second this. Having down enterprise Python development on Windows before and after Anaconda was internally approved, I can say that it's definitely much easier with Anaconda. (Granted sometimes it's handy to have the Visual C compiler alongside conda but still.)
If you mean "encryption on disk," that's a per-operating system thing. If you mean "storing a password" in your database, look up "storing a hashed password with salt". That should get you a wide swath of examples to get you started.
Obligatory I miss the old snake http://www.demiurgo.org/charlas/python-unittesting/img/python-logo.png
Hi, i'm teaching myself Python3 (just starting) and i would be interested to see your updated code. thanks
You can do an AES_ENCRYPT() when writing the data to a database and then an AES_DECRYPT() to read the data back. You'll have to set the column to be a binary data type though.
I just come here on a weekly basis and sort by top weekly posts. (:
I downloaded all the album art for my music, then used Python to change all of them to cover.jpg instead of whatever.png. This was atleast 50 images and took less than a second to run. 
I would first work on pulling the CSV files into a DB. Also, add a purge to that process. Weather data is available at undergroundweather as an API. You could store this as well into the DB several times per day since weather is not a static Secondly, I would then query the database to get your info 3 separate processes in my opinion
/u/opfeels /u/DontBeABadPerson
now, that snake is hidden in pygame :)