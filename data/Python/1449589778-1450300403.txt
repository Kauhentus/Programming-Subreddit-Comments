For the management: Maybe try [dagobah](https://github.com/thieman/dagobah). Luigi looks good here too. For the project creation: Perhaps create a skeleton with the basics? Scrapers are hard because the implementation is so different between each site that is scraped. Generic scraping is easy Ie. get all the links. However, when you want specific information, you are kind of stuck digging into the xpaths or css selectors. Bottom Line: I use [ansible](http://www.ansible.com/get-started) on my mac and on remote servers. I can bootstrap a new VPS server with everything I need with one command. It takes about 10 minutes, mostly downloading and installing. You can script it to perform almost every task and it just works. I can't tell you if this will work with Windows, but its worth a look.
Fabric is... beyond superlatives. All hail [@bitprophet](https://twitter.com/bitprophet).
Matplotlib is what I use. Once you have a good template going, you can simply copy and paste without having to change too many things.
Hm, still trying to force myself to learn regex... What exactly are you parsing/using this for?
This [article](http://pbpython.com/visualization-tools-1.html) is getting a little old from the perspective that there have been some changes to the tools. However, the landscape is still pretty accurate.
I call foul: 1. /u/Aleri0nV0RT3X/ has just one reddit post, which is "How Python Is Vulnerable" 2. Anyone who is selling something by saying that they are not selling something, but to "raise awareness", is trying too hard to market themselves. Conclusion: /u/Aleri0nV0RT3X/ is the author or an associate.
Django and Scipy
matplotlib
I use it often for multiple switch case statements. 
Specialized datastructures for primitive types (e.g. lists, maps, etc.) to avoid the boxing overhead you'd have when using generics. Edit: Btw. There are also libraries that do that, e.g. [fastutil](http://fastutil.di.unimi.it/) or [GNU Trove](http://trove.starlight-systems.com/), which should fit most of the problems. (We have different use cases though, which is why we do it on our own)
You could use a format for serialized data like [json](https://docs.python.org/3/library/json.html). Depending on wether you want your users to be able to edit their save games you might want to add some encryption though.
Unfortunately, it also looks like the most complex jargon to people who *do* know it as well. One of Python's biggest advantages is that it reads so easily, even to non-programmers. When someone writes stuff this complex, it is really painful for everyone to read: noobs, pros, and even to the author in 2 months.
It's really hard to tell people how to learn, especially since everyone learns differently - so if this doesn't work for you don't get discouraged! A large portion of programming is pushing through these barriers (seriously every few weeks I hit another new thing, feel similar, eventually push through, repeat). That said, I've given the book [Python for Kids](http://www.amazon.com/gp/aw/d/1593274076/ref=mp_s_a_1_1?qid=1449592189&amp;sr=8-1&amp;pi=SY200_QL40&amp;keywords=python+for+kid&amp;dpPl=1&amp;dpID=51wK-ZIUImL&amp;ref=plSrch) to quite a few people (all adults) and they seemed to really engage with it. I read it myself (though this was long after I had been programming) and enjoyed how it built on the concepts in a clear way after both introducing new concepts and applying them.
....oh
It's a huge pain to learn, but is incredibly powerful once you get used to it. I finally encountered a script where I had no choice but to use regex because of the precise information that I needed to parse. I'd say there are really only a couple expressions you need to know to use it effectively. The rest are really precise characters which can be looked up if needed. I found that an [online regex tester](https://regex101.com/) really helped me visually see what each regex character captured. This specific example was pulled from [here](http://stackoverflow.com/questions/3466850/complex-password-regular-expression)
Holy shit, I hope I never have to maintain anything you wrote. Do you embed APL in your Python code to save a couple lines, too? If you insist on using regular expressions for this, here's a slightly less insane (and on my computer, slightly faster) way to do it: FEATURES = [re.compile(f) for f in (r'\d', '[a-z]', '[A-Z]', '[@#$%^&amp;+=]')] def is_password_ok(password): return (8 &lt;= len(password) &lt;= 32 and sum(1 for f in FEATURES if f.search(password)) &gt;= 3) 
This is my first time trying a programming language, and this is currently the only book I have. Do you rate it? I am looking to translate some excel files into XML nothing fancy but I want the satisfaction of doing it myself! 
Fortunately I didn't write this
&gt; It's a huge pain to learn, but is incredibly powerful once you get used to it. Gee, I haven't heard that touted as an advantage since APL. &gt; I had no choice but to use regex because of the precise information that I needed to parse. What? Regular expressions are strictly *weaker* than many other types of parsers.
Yeah no reason to make us log in to a 3rd party site for this. Why not use like... cookies? I mean I guess there is a leaderboard so maybe cheating is a concern, but I don't care about a leaderboard.
What other types of parsing would you suggest over regular expressions?
Seaborn is a fantastic library. It takes some getting used to, but I've made some incredible visualizations with it that have really helped us drill down into data with a lot of different categories. It works really well with Pandas, which is also a great library for working with statistical data. My only complaint about seaborn is due to matplotlib, it's slow.
Well, there you go bleeding all the fun out of this. :) Good suggestion though.
Have you tried powershell?
It's also needed for tracking your progress. And if you use several machines (like me, solving it at home and at my workplace), then cookies are simply not enough.
Play around with matplotlib styles, but use matplotlib I've become fond of the ggplot styles, but there are a lot of choices and the code from matplotlib import style style.use('ggplot') 
I had actually tried sending the information as such, exported from pygal as base 64 data uri. But, IE always had trouble reading the base64 uri, no matter what I did. (What's more, it worked fine in local test, but only failed in IE11 when haproxy / everything else came into play. Super frustrating). I'll try this though with std library instead of pygal, maybe that was the mistake.
Oh. It very much sounded like it was your site =/ My bad, then. In any case, yeah I just don't want to log in to anything to do simple coding challenges, so I'll pass. But that's just me.
Are you sure he wasn't talking about perl6? /s I like his writing sometimes, he's prolific, and makes many good points often, but other times he comes off as a bit of a lunatic.
Any thoughts on Pylab? I kind of like it for the relatively basic stuff
There has been an effort for a while to improve exceptions in Python 3. See [PEP-3151](https://www.python.org/dev/peps/pep-3151/) as an example. JSONDecodeError in Python 3.5 is, of course, another example.
Oh, that's useful to know. I saw a guy on YouTube using an IDE with an attached window to the right which showed the code's execution. Would you happen to know which IDE that is? I'd love to find something like it. Thanks for the help! 
Have you looked at this MATPLOTLIB [tutorial](http://nbviewer.ipython.org/github/jrjohansson/scientific-python-lectures/blob/master/Lecture-4-Matplotlib.ipynb)? I think the official tutorial(s) at their web sites are too confusing especially if you don't have experience with MATLAB before. Not until I started using the OOP-style API did I really get MATPLOTLIB. Then I would look at seaborn.
If anyone is interested, here's a list of [complaints](http://sopython.com/wiki/LPTHW_Complaints) about LPTHW. One point I didn't like was that he tells people to search for random Python projects on random websites and read the source code when they can hardly write a program on their own. I think that can be rather intimidating and frustrating, and there's nobody to tell you if the quality of the project is actually good.
Searching is a valuable tool when programming. I'm self taught. I've worked through multiple resources both free and paid. Breaking things and researching them helped me learn the content with more depth. I don't think that any one resource is the best. I also think some are better at different parts in your learning path. Someone mentioned Code Academy. Their courses Python or otherwise are great but they don't get you past basics - ymmv. Zed's books filled a gap for me. Another book that filled a gap for me that comes to mind is How to Think Like a Computer Scientist. Specifically the algorithms and data structure chapters. I'm surprised to see this community so vehemently opposed to Python 2 when 1) multiple important libraries weren't ported to 3 for some time 2) there were more learning resources that used 2. Learn 3 if you can but I believe that the higher level skills that can be applied to different languages and problems are more important than whatever language you start learning.
Routine data analysis, cleaning, and visualization in order to replace closed-source expensive programs which I will no longer have a license for once I leave this position. My choices were use Igor Pro and Matlab - or learn how to do what those programs can do using a generic programming language. I chose python due to a number of reasons: * free (No need to worry about SSH/VPN to work network in order to use a License server for proprietary software) * ease of use * great support from the scientific community * cross-platform support * well documented with loads of resources for learning * IPython notebooks are a great way to convey how my code works to non-programming colleagues. (Useful for additions to my Doctoral Thesis) * GUI programming is relatively easy for many of the same reasons listed above - This makes wrapping my analysis routines into a User-Friendly environment a fairly simple process * Fast enough for the computational work I do while being simultaneously **Lightning Fast** in development time * Great support for RaspberryPi means for the above reason, setting up microcontrollers to automate tasks, control experiments, etc becomes quite simple and inexpensive Edit: Out of all the above, the thing which I think sticks out the most as being most applicable to folks in other fields (sysadmin, etc) would be ipython notebooks - They provide a really clean and concise way to documents your scripts with interspersed figures and Markdown text. So rather than someone needing to just read your code to understand how a script works, they can read a few paragraphs of formatted text then a few code snippets, etc... This is invaluable as a teching tool - so if you need to show a new coworker an easy way to automate a process, parse some log files, print out a report, email a report, etc - the notebook becomes a great way to teach them without just saying 'here's my code - figure it out yourself'.
PyCharm looks exactly right. Downloading it right now and printing out the cheat sheet for commands. You're great! Thank you for taking the time to answer such annoyingly prosaic questions. I'm setting up a second Raspberry Pi right now and just named it "A_History_of_Silence" in your honor :-)
Thanks for this link!
That is very vague, and mostly untrue. There is no true "mathematicalness" to matlab other having to think of everything you do in matlab in terms of matrices. Even if that's what you mean, it is an incredibly annoying constraint to think in terms of matrices. Python for example is much more expressive and there is less "mind to code" translation that needs to be done, and if you want to implement actual matrix-based computation, you can use python's amazing library NumPy. 
Seems like python is used mainly for scripting
There is [Lice](https://github.com/licenses/lice) (which I prefer) and [Harvey](https://github.com/architv/harvey) already, so you'll have to differentiate your project from those.
`raw_input()` (called `input()` in newer versions of Python) *is* the best way to do this. Perhaps you could tell us what requirements you have that aren't met by this?
It's stories like this that remind me that, despite whatever challenges Python may have on the performance front, that it's still more than fast enough for the vast majority of needs out there.
I'm not familiar with teamtreehouse.com, but it sounds like you're learning to program, too. Be aware that "learning to program" and "learning the Python language" are not the same thing. Python can be a good language to use while learning to program, but make sure you're using a "learn to program" course (which happens to use Python), not just "learn Python" (for programmers).
I'd love to see the code you used for this; if you could share a gist or something that would be awesome.
Everything. It crashes EVERYTHING.
I have built several small windows services which were a part of a flight manual delivery system.
It will be useful if you organize them properly. I think it may follow: "Namespaces are one honking great idea -- let's do more of those!"
It's a big problem if a book doesn't explain things properly, demands too much or even skips important steps. It will only frustrate the reader. And some people may not be self-confident enough to ask questions online and could even give up. I actually tried to learn programming some years ago and lost the interest after reading a bad (too rudimentary) tutorial and I'm only here because I found a good one a few years later. LPTHW has too many bad spots to be a good book for beginners in my opinion. Of course it's not entirely bad and there are still valuable things to learn, but I'd start with something else.
If you want to be able to have multiple line editing at once (what I assume you mean by "text editor"), you'll have to use a tui library like [curses](https://docs.python.org/3.4/library/curses.html). There's probably a more python-y tui library out there, but I'm not familiar with any.
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules there before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." If your question is about homework, show them that you've tried to solve your problem in your post and you should get all the help you need. Cheers &amp; best of luck with Python!
Yes I agree. It's only a good book for the subset of readers who don't mind/are able to put in the cognitive effort to use it. There are many other books for others who prefer different learning methods for whatever reason. At no point am I saying those others are stupid.
I just used python to compare two large pieces of text. Saved me 3 hours of work. Though I'd like to some day use python in the tech world. To bad word docs are a shit show to work with because I would barely do any work if that was the case. Please don't recommend pydoc to me. 
If you can't ask your question on /r/learnpython then yes, you are a dip shit
Why and what is this shit?
Fluent Python or Intermediate Python.
Would you suggest reading it instead or besides the online course?
Thanks alot, really motivating, will definitely check that book out! 
What do I need to know to automize my own tasks? Only Python or more languages? Thanks alot :)
It should be one in the same, the book is fully free online or you can buy a copy. Great option for just getting up and going!
Which for a lot of "python devs" requires a context switch. 
The similarities you mention are a few points in two languages of many features and you're meaning of similarity doesn't seem to be backed by much knowledge of language design, implementation and community. Develop a few languages yourself then review your statements.
Personally I've found Matlab to be much, much easier to deal with when doing neural networks / machine learning. They put considerable amount of time into putting GUIs/wrappers on the math to dumb it down for us engineers so we can use it easily. For example to train a neural net it's as simple as putting your data in a matrix and then: nodes=5; net = fitnet(nodes); net=train(net,data_in,data_out); Then to use the network: data_estimate = net(data_in); For doing pattern recognition networks it's [```patternnet```](http://www.mathworks.com/help/nnet/ref/patternnet.html). I haven't found a Python tutorial on Neural Networks that is that succinct as [the Mathworks version](http://www.mathworks.com/help/nnet/gs/classify-patterns-with-a-neural-network.html), they all [read like this](http://karpathy.github.io/neuralnets/). 
There was just a comma missing - should be fixed in the release branch now. 
If you need help just contact me on twitter. Same nick.
https://www.youtube.com/watch?v=8wfG8ngFvPk ?
&gt;[**I just sent myself a Woof (The Office) [0:33]**](http://youtu.be/8wfG8ngFvPk) &gt;&gt;Ryan (The temp) Starts a new web site to be the last site in social networking... &gt; [*^EliteGunnerX*](https://www.youtube.com/channel/UCWUF7J44qGCkKx9D5Tm2Ibw) ^in ^Comedy &gt;*^96,536 ^views ^since ^Sep ^2010* [^bot ^info](http://www.reddit.com/r/youtubefactsbot/wiki/index)
The mods will probably tell you this should be in r/learnpython instead, where we have [a list exactly like you're asking for](https://www.reddit.com/r/learnpython/wiki/books#wiki_intermediate).
Yes, Matlab is good for what it does. Just the pricing kills many people. 
You are welcome. I just found out about joblib a few weeks ago myself. I used pickle before, but joblib is just so much easier.
I think that Python gives you the tools and the freedom to do what you might have in mind, but there is cost in time and sometimes in results if you don't know enough about what you are doing. Programs like Matlab and Mathematica make your life easier because they have simplified things for you but might limit you. The high prices of these programs are a given. Although I don't prefer programs like the ones I mentioned above, Mathematica might have one of the best documentations I have ever seen.
Configparser can help you read/write to config files. Depending on your needs this might be an acceptable option. https://docs.python.org/3/library/configparser.html
[Here's the source](http://pastebin.com/z5WvYKC8). It's definitely messy and not at all optimized for speed, but I needed to get the map out to the players in the new campaign asap. Eventually I'll merge it into the swn module I'm making for my larger generator project.
I did ask him. His reply was "everything you just said." He's not the easiest person to have a conversation with, and it was on twitter, which is not the easiest place to have a conversation.
for my use-case, unicode everywhere greatly simplifies things. I think this is probably true for anyone who deals with non-English or at least non-western-European languages on a regular basis.
Format the code properly please, look up Reddit's Markdown syntax, basically it's putting four spaces before each line. Either that or post it on pastebin or similar and link to it here.
The _ at the beginning of _asdict() would imply it is a "private" variable, and as such may go away. Is there a documented way to get a dictionary out of a named tuple?
Yep, that's what [the docs say](https://docs.python.org/3/library/collections.html#collections.namedtuple): &gt; To prevent conflicts with field names, the method and attribute names start with an underscore. I assume this is an exception to the Python convention of using `_name()` to indicate a "private" method, and that the docs would have warned if users are not supposed to use this method.
Going to take my best shot at answering this one based on how I understand your question. I can discern two different potential machine learning problems from your post. **Learning a Regression/Classification model** for predicting future purchases. In this case, you only use the street-level information to map a consumer to a larger area (Census Tract or Block Group). I do not see how street level information could be used beyond this in a regression/classification application. You could even go one step further and map the street address instead to the average real estate price in the area for a feature that gives a better demographic snapshot. **Clustering** of areas within a census tract to identify spending patterns by area. I don't think this is what you meant, but I wasn't entirely sure. If what you are trying to do, in fact, is to learn what spending habits look like at a level more granular than Census data, you might look at a method of clustering the consumers to see if there is some underlying relationship in the way location affects spending.
*FIXED TEXT* Hey I'm trying to use the results from the users taking the quizzes to keep track of their scores.I need the system to store the last three scores for each student and i would like to be able to output the results of the quiz for a particular class, sorted: *in alphabetical order with each student’s highest score for the tests, *by the highest score, highest to lowest *by the average score, highest to lowest. Could someone please help me to do this I have put my code at the bottom really need help on this. schoolName=input("What is your school name:") className=input("Enter the class you wish to enter results for:&amp;gt;&amp;gt;&amp;gt;") FileName = className +(".txt") Name = input("What is your name:") NewToQuiz= input("Is this your first time taking this quiz? Answer in yes or no : ") print(Name," welcome to the ",schoolName,"- Arithmetic Quiz.") time.sleep(3) print("The program will start in five seconds!!") print("++++++++++++++++++++++++++++++++++++++++++++++++++++ ++++++++++++++++") time.sleep(3) for i in range(0,5): print (5 - i) sleep(1) time.sleep(1) print ("Begin!") flag=True score = 0 question = 0 while question &amp;lt; 10:#When all the 10 questions have been entered the program will stop asking the user questions. operatorSymbol = random.randint(1,3)#Return random integer in range [a,b], including both end points. Num1=random.randint(1,10) Num2=random.randint(1,10) if operatorSymbol == 1: print("Please answer the following question:&amp;gt;&amp;gt;&amp;gt;", Num1, "-", Num2) answer = Num1 - Num2 elif operatorSymbol == 2: print("Please answer the following question:&amp;gt;&amp;gt;&amp;gt;",Num1, "+", Num2) answer = Num1 + Num2 else: print("Please answer the following question:&amp;gt;&amp;gt;&amp;gt;",Num1, "*", Num2) answer = Num1* Num2 while True: try: userAnswer = int(input()) except ValueError: print ("The answer given does not compute!! Try again") continue else: break if userAnswer == answer: print("Congrats you are correct! ") score += 1 else: print("Unlucky you are wrong! ") question += 1 print("You have completed the test!Your scores will be shown now.") time.sleep(3) print(name, "You scored", score, "out of 10") if qstn == 'no' or qstn == 'No': #print("File exists") temp = open('temp', 'wt') with open(FileName, 'r') as f: for line in f: if line.startswith(name): line = line.strip() +"," +str(score)+'\n' temp.write(line) temp.close() shutil.move('tempeng.txt') flag=False #END if flag: file = open(FileName , 'a') file.write(str(name + " : " )) file.write(str(score)) #print("writing the score") file.write('\n file.close() time.sleep(3) print("Feedback for this quiz:&amp;gt;&amp;gt;&amp;gt;") print(os.getcwd())
He said something about this in our "conversation." Something to the effect that if both version of python can't run on the same VM like various languages for the JVM and the CLR, then the python developers have "broken CS" (whatever the crap that means...)
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules there before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." If your question is about homework, show them that you've tried to solve your problem in your post and you should get all the help you need. Cheers &amp; best of luck with Python!
Awesome man! Great work! Not only did you create something cool, but we no longer have to bow down to our minesweeper overlords. That code is saving lives. 
Thanks! The first version of my code was done specifically for expert level in http://minesweeperonline.com/# and in a 1920x1080 resolution. I'm changing it so you can use different values by inputing an initial coordinate, pixel spacing between squares, screen resolution and other variables.
Secondary option is using python to generate html/javascript code to make web friendly graphics. python-nvd3 was one library i've used before. At my job we use python to generate data on backend and one of our web devs has written the d3.JS to display chart data.
Thank you for not using unnecessary classes. I get tired of classes with just one function.
This code does not compile as it's messed up the indentation. You should paste your code from your editor directly into a pastebin or gist, and provide us with a link.
I'm beginner. I think It so hard, It take me 20 minutes to figure out how to do it. There's many style to do that, the problem is: which is the best way? Let me see your code. We can do that in list comprehension or while loop or for loop with some built-in function or maybe indices/slices, or use the dictionary/list methods. In some built-in function we can use the sorted() in the head or in body of loop. That's why it so hard.
Good tip, thanks!
That is awesome. Starting to learn Python myself. Hope I can do something fun like that in 6 months. :)
Here's my code: my_dict = {"abe": 22, "bob": 31, "carl": 65, "ron": 29, "doug": 54} my_list = [] for customers, age in sorted(my_dict.items()): if age &lt; 30: my_list.append(customers) print(my_list)
A 48-line script to post summaries to today's posts as comments on /r/autotldr -- any comments, criticisms, suggestions, questions welcome.
This does not work because : * You asked the wrong subreddit. Consider [/r/learnpyton](https://www.reddit.com/r/learnpython). * You didn't format your question for code. Both of these things can be read in the sidebar. 
Maybe its a Trump'ism or shock-jock comment.
See, not hard. I think mine is arguably more basic and for beginners, using only the first bits you learn about Python, and yours is better, because a) it's more quickly understood just what is happening ("age" is immediately understandable, whereas "my_dict[key]" is sure not), b) you wind up producing a list that is already sorted, in case you need it other than just printing it. One naming issue, though: I'd call it "customer" instead, since it is singular each time you loop through and potentially add a customer. Awesome job!
Ok thanks for the motivating words :) I shall give it a try: my_dict= {'abe':22, 'bob':31, 'carl':65, 'ron':29, 'doug':54} under_30= [] for customer in my_dict: if my_dict[customer]&gt;=30: under_30.append(customer) return sorted(under_30)
Hah, no. I was just trying to understand your use case. Honestly
Wow, that's a lot of area of usage. Here's mine: We use it in an image processing job. Basically, traffic and road analysing of videos taken by UAVs: car detection, speed detection, traffic density, traffic analysing and stuff. We use a lot of third party libraries in addition to our home-cooked image processing tools&amp;algorithms. Mainly: * OpenCV * Scikit stack (Image &amp; Learn) * NumPy (obligatory) At home, I use Python for entire different purposes. I use requests and bs4 for web scraping a lot. It is fun to gather data from different sources and mess with that unstructured data to distill some meaningful (maybe useful) stuff.
+1 &gt; I think this is probably true for anyone who deals with non-English or at least non-western-European languages on a regular basis. I can tell you a thing or two about it. ;) äöüß Tschüß!
Using a depreciated function ([`.login`](https://praw.readthedocs.org/en/stable/pages/code_overview.html#praw.__init__.AuthenticatedReddit.login)) does not make a good "how to" guide
sum(map(int, str(N))
A collections.namedtuple.as_dict(somenamedtuple) would seem nicer to me..
As I can't read the future, I can't tell you that. But my guess is that you want this answer so you can choose your tools for future projects, and I can help with this. Use Twisted if : - you want to use an awesome module that is currently twisted only. - you want to write some very low level ultra complex network service that can leverage twisted current toolki. Please note that most of Twisted (not all, but most of it) runs out of the box on Python 3, so it can't be a decisive factor to discard it anymore. If you don't fall in these categs OR you don't even know if you'd fall in these categs (which most probably means you don't), use asyncio (see http://asyncio.org/ for tooling). If you can start with Python 3.5, use that so you can enjoy async/await. In the end, if you build a web service, I would recommand you to use crossbar.io as : - you can write clients in twisted or asyncio and make all that stuff communcate transparently. So you can have the best of both worlds. - you an intregrate components from PHP, NodeJS, Java, C# or even directly in PosGres. - it allows you to create easily a multiarchitecture components without having to write this stuff manually. You can start on one machine and move components on remote machine later. Or Not. - it manages your workers life cycle for you and even external services (built in process manager). - it gives you a clean abstraction of websockets, and a generalized solution for simple yet powerful RPC and PUB/SUB. Which works between any components, including in a web browser. - it embeds permissions, authentication, cookie support and meta-events. - it's fast. Tavendo pushed it to 6000 req/s on a raspi. - it's pure Python and works on Python 3. - It uses a standardized protocol. - It's open source. See: http://www.slideshare.net/sametmax/intro-wamp?ref=http://wamp-proto.org/
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules there before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." If your question is about homework, show them that you've tried to solve your problem in your post and you should get all the help you need. Cheers &amp; best of luck with Python!
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules there before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." If your question is about homework, show them that you've tried to solve your problem in your post and you should get all the help you need. Cheers &amp; best of luck with Python!
Have you run it or you are guessing the output? Because if you have guessed the output, you should now run it. You'll be surprised. 
Not quite. If you try to use a list in a tuple, then you won't be able to use it as a key in dictionary (TypeError: unhashable type list).
Well, tuple IS immutable. Even though tuple with list can't be used as key in dictionary, that is only one reason for not changing tuples. I think error is expected and error indeed came. :0) Oh, I see. But it also changed that tuple. Well, well.
Oh. I have been using python for so lang that i have just internalized how to do it right, and that i no longer remember why, it seems.
Error was expected and you actually get it. What is actually interesting is the fact that error is produced only after tuple is changed. If you check for the current value of tuple in above case, you'll see that.
You are too humble and honest. You should have said, "heck, I knew lots of such stuffs." :) 
Thanks! The bot only plays minesweeper through the simple way, so only using flags and clicking when it's obvious, so there are times when I need to do a more advanced logical program to continue playing, so the bot simply stops playing if there aren't any more simple actions to do.
Nice explaination, It must be added to the long answer in that link. :-) 
And /r/dailyprogrammer We do all sorts of challenges that apply to real world algorithms and situations. 
That's a really cool idea for a project! Also I have to say I'm way more impressed that you managed to fetch and analyse screenshots and control the cursor than with the fact that you made an algorithm to solve the game. xD
It shouldn't be hard to have the bot auto detect the grid size and position. Just loop through a row of pixels and count the times you hit a known color that matches the cell border to get the width, and do the same thing in a column for the height.
Seems really nice, but I'd love a text version (easier for me to focus that way).
Personally, I think Twisted will become less and less relevant. It's been around forever, and could solve the C10K problem before it even had a name. Despite being a mature, production-ready solution in the nodejs/Tornado space, it has never caught on. And the reason is, now as always, that its documentation is horrendous. Over the years, it's improved significantly in quantity, but the quality remains marginally above useless. Twisted has a lot of special concepts and components of its own, and these—and how they fit together—apparently doesn't warrant an explanation. Of all the useful things I've read about Twisted, not a word of it was in the actual docs.
After version 14, they improved their documentation though.
You need to "call" the function by putting brackets after it: &gt;&gt;&gt; names() What is your name?Bob How manny times to you want it repeated?2 BobBob &gt;&gt;&gt;
Hi, I am the author of [Fluent Python](http://shop.oreilly.com/product/0636920032519.do). That example is from page 40 of the PDF (page numbers differ in print edition). On page 41 I show the bytecode which explains in detail what happens. The interpreter first appends to the list, but then when it tries to rebind the reference in t[2] you get "TypeError: 'tuple' object does not support item assignment". It is a quirk, and my main take away is: do not put mutable items into tuples. If you do, they become unhashable, and other strange things happen... I blogged about this and related issues in [Python tuples: immutable but potentially changing](http://radar.oreilly.com/2014/10/python-tuples-immutable-but-potentially-changing.html)
 """ This это просто You!""" # Someone please translate this According to Google Translate that's russian... not portuguese. What kind of establishment are you running here? ;)
Someone added that, not me :/
Matlab reminds me of Visual Basic from the 90s. It is useful and even powerful when used for the language's purpose. However, it is easy enough that people can use software design anti-patterns/kludge and still get to their results. The problem comes when you try to transfer your anti-patterns to another language. Python doesn't tolerate Matlab anti-patterns all that well. I hire for a Python scientific research shop. If I see only Matlab on a candidate's resume, a small coding practical is given to make sure that they would survive working in Python. Matlab folks have about a 50/50 success rate.
You don't need to use valgrind to find the peak memory use. [`/bin/time`](http://linux.die.net/man/1/time) (as opposed to the bash builtin) can report it for you using the `%M` format option. The conclusions is spot on. If you have some data that is taking too long to parse, takes up too much space, etc, then store it in a 1-1 format (protobuf, msgpack, compressed, whatever). The side note is also helpful for people who are tempted to reply before reading the whole thing. :) Great post.
&gt; R is more popular in the statistic community not scientific. Most bio researchers I know use python, because it doesn't suck
Oh hey! It's my cake day!
You should consider livestreaming on https://www.livecoding.tv/. You can easily get help from other programmers.
Congratulation! Here's your cake __.......__ ,-"`` ``"-. |;------.-' _.-'\ ||______|` ' ' ` | ||------| | _;|______| |_ (```"""""""| |``) \'._ '-.........-'_.'/ '._`""===........===""`_.' ``"""=========="""``
finally getting a chance to get back into some python, yesterday I was slammed with server setups and support stuff :( For the stdout stuff I have to run ipkg list to see whats installed on the device. I combine that w/grep so it looks like ipkg list_installed | grep name-of-application Then i use the :20 and .find to only output the number of the application. It makes it simpler for end user / operator to see. The stdout of it looks like pts150-application - 10.0.5 - Application and Daemons for Name of company I've already bookmarked this whole thread and added to a python folder that I go back to during lunches. 
Ok! I know Github is a great tool, but I'm not really into it yet, but thanks for the advice, I'll try to upload there.
Trabalho fantástico! :D (Great work!)
&gt;If you have some data that is taking too long to parse, takes up too much space, etc, then store it in a 1-1 format (protobuf, msgpack, compressed, whatever). The end of the article shows that JSON can actually be faster and less memory intensive than Msgpack for certain kinds of input data, though.
&gt; So, my question is should requests itself somehow be designed differently so that all these errors don't keep being left uncaught? How, exactly?
This throws a TypeError. However, it appears to make a change to the object, anyway. Tuples are immutable objects, meaning they cannot be changed. However, putting a mutable object, like a list, inside a tuple and changing *that* object makes it seem as though the tuple has been changed. What actually happens is a list gets created, then a "tag" to that list object is placed in the tuple. The list is changeable, but the tuple is not, and indeed the tuple never changes. Instead, the list object changes, the tag remains the same, and when the tuple is accessed the tag points to the changed list. So while an error is thrown for the tuple, the list still updates through a quirk in Python's architecture. Conclusion: try never to put a mutable object inside an immutable one. :)
I don't think so. There are many cases when you want to know when you have an exception. It's trivial to catch them if you have good practices, but not having them in the first place makes it harder to write good code, especially if you need them.
The other nice thing is the interface is basically through git so you take care of source control and sharing online at the same time.
&gt; You don't need to use valgrind to find the peak memory use. `/bin/time` (as opposed to the bash builtin) can report it for you using the %M format option. If you're using **GNU** `time`. POSIX `time(1)` only has one option, `-p`. Also `time` may be in `/usr/bin` given it's a nonessential command. And BSD `time` has different extensions (just one actually, `-l` dumps the *rusage* struct, the first member of which is the maximum resident set size in bytes)
Just make the library know what the designing engineer wanted when he called it. If the engineer expects an exception when the network is down and isn't checking return codes, then throw an exception. But if he is checking for return codes but not checking for exceptions, then send a return code. So all you need to do is introspect and analyze the calling code and check the stack for try blocks and/or references to status_code.
Exactly!
&gt; It's trivial to catch them if you have good practices I feel like they go uncaught so often that it's bordering on blaming the user though. Assuming I can't fire my coworkers, what am I supposed to do? 
One of the biggest advantages for me to python in general for quick scientific work (neglecting many advantages python has in computer science community) is how easy it is to reuse existing code and work modularly. You can write new functions and classes anywhere and import anything from any file, and organize with packages if you want... Matlab is very limiting in this regard and after 10 years of fairly heavy use with the latest versions of Matlab, I still haven't found the time and energy to understand Matlab's object oriented stuff, packaging stuff etc, because it's not easy or intuitive. ... Again this is for me, anecdotal evidence.
Interesting! So how frequently does it finish a game? And how long does it take? edit: great work btw, really cool idea for a project and really impressive what you learnt in 6 months :)
Yeah, most of my python education time is during meetings or on the couch during commercials, so text based tutorials are better for that, and easier to skim to see if it warrants saving for later.
The thread solution should work most of the time, but you may want to consider moving that logic to a worker daemon. Check out Celery to avoid hanging processes after your request is processed (it'll bog down your server if it ever has high load or you have a large file).
I think /u/POTUS was being sarcastic.
Nice to see your comment here. Only today, I wrote a kind of small blog praising your book. [see here.](https://messybytes.wordpress.com/2015/12/09/fluent-python-book-is-awesome/)
&gt; Besides, if some idiot doesn't catch errors what makes you think they will check error codes? From what I've seen, many developers are even more likely to ignore error codes than exceptions, because it means they can write even less code. On top of that, all that error-checking frequently looks so cluttered and inelegant (and therefore uncool), and it's never fun to write.
Really? What does a python scientific research shop do? As a scientist who uses python and is on the job market, I'm interested to know.
This sounds like it will be a very interesting podcast. When it airs, could you post a link to the sub?
Almost never hahahah, it normally stops when simple logical solutions don't exist anymore. It finished only once and it took 69 seconds. I'm studying minesweeper to upgrade my code so it can understand more complex logical solutions
See [this](http://www.businessinsider.com/how-blind-google-engineer-writes-code-2015-5). He talks in the end about Python specifically. :)
There is nothing wrong with blaming users for doing something wrong. If the user is writing code that is likely fail, it is their responsibility to deal with that failure.
This is fantastic work. Your teaching method is excellent and just what this field needs. I for one look forward to your upcoming videos planned for 2015-2016. Please keep up the great work!
Just in time for the new revision. converted to snake_case instead of camelCase, removed unnecessary terminal_size function and added confirmation. I looked at your version and it seems really good. I will try to get the stuff for the next revision which will come out shortly. (again)
Whatever you do, you will not be able to get the users to handle it. If you want them to check the inside of the json object to see the return code, they can just as easily write a try/except block. I think it would be better for your organization to have a standard and stick to it. At code review, for example, have it on a checklist. You *could* able to write pre-commit hooks for git so that code without the blocks would not be allowed in, but that might become too handholdy.
Thanks!
Would love to see some full simulations showing how some of the more popular community rules change things. Specifically, how long they extend the game, given that the 'Free Parking rule' (where certain fines are put in a central pool and given to the first person to land on 'Free Parking') is probably the #1 reason people think Monopoly games never end. Just curious how many extra turns you'd see, and what the average effect would be on individual survival times would be from the start.
We officially do biomedical imaging research. We primarily do training with imaging techs and doctor's offices. We have a few grants that we either support or are the PIs on. Mostly centered around reducing errors and false positives in medical imaging. Python (pandas and scipy) handles our data crunching. Mostly running over imaging results and correlating them with medical data provided by our partners.
&gt; definitely not the norm to get nice formatted data. I wouldn't say that. We have terabytes of data a day that comes from our data loggers in tagged and formatted channels. [MDF](http://vector.com/vi_mdf_en.html) is pretty much a standard if you're in any industry that uses CAN and is an ASAM standard.
Great post, I'm gonna order Justin's books because of this.
what are the errors....
Thanks a lot for your help throughout. Didn't realize there were 2 subreddits for Python. Will definitely utilize it. Thanks.
`Pip install numpy` always works for me.
I'm hoping to do something like the following: User in IRC says "!search type=bird name=raven" Then it will do a query from the "Bird" table and list all information on the table row "Raven".
Of almost all the comments, only yours is spot on. Your analysis was accurate.
I just pushed the new revision. Took a bunch of code from yours, mixed it with mine and dealt with pylint suddenly starting to work out of the blue in Sublime. I didn't use your get file code since it detected the directory as empty for some reason. So i reverted back to mine. Re-added the Other directory and converted everything to a bunch of functions, with main() doing the starting.
I like to try to do similar things with AutoPy for games. Your solution to use the color of the number is really great. I'd have been stuck trying to do OCR on the numbers. If you want to get more advanced in the logic, you can do constraint programming (or constraint satisfaction). 
This is really cool, OP. Nice job! I've been wanting to do something like this for a little while, but I'm only 2 months into learning. Can you tell me how you analyzed the pixels of each screenshot? 
Shouldn't this title be "How to store photos in the cloud and once again fail to avoid vendor lock-in." ?
pip install numpy (these seemed like the high points - if you want the full trace let me know): Failed building wheel for numpy RuntimeError: Broken toolchain: cannot link a simple C program 
&gt; 2) What trades or buying/selling of property is allowed? This is probably the most significant way in which people play differently n the ["real" rules](http://monopoly.wikia.com/wiki/Official_Rules): when a player lands on an available property, if they choose not to buy it, it is then put up for [auction](http://monopoly.wikia.com/wiki/Auction_(rule%29) so that any other player may purchase it. Same if another player goes bankrupt. This seems like it'd be incredibly difficult to simulate in a realistic manner, but obviously changes the overall strategy, pace, and nature of the game immensely - definitely changes point #4. Edit: according to the official rules, it seems like the most turns one can spend in jail is 3 - after that, you are automatically fined ($50) and removed from jail.
Double bonus mega hilarity: on top of locking himself into another vendor, that new vendor is killing part of the service he uses and enjoys. He went full circle right back in to the same situation.
The first Python book I read was actually written by an experimented blind python developer. This is a french book.
Yes, this is possible. But Google "what is sql injection" and read up on that. If done incorrectly, someone could type something like this: !search type=bird name='; delete from bird;-- To delete your entire bird table. Preventing sql injection is not hard, but you need to know about it. 
the tuple is never changed, the list is
It depends on what it's doing. I think Google et al. are using python where execution speed isn't the bottle-neck. If a program spends most of it's time in IO or waiting for packets, optimizing the code matters less and less.
Valgrind contains an in-process shared library that replaces certain function calls, including malloc. I expect the memory overhead to be 1 bit per byte for shadow address space, which is about what this is.
I'm curious how XML options compare. XML may be a terrible language, but it has very good infrastructure.
Can you install Python to the PATH, then create a batch file to run the .py file? Or is that not what you're asking?
For starters, you need to figure out how much work you're actually doing. You're not just charging for a 9-5 teaching gig, you're charging for producing all of the training materials **and then** presenting them.
&gt; he'd never use Python because the white space oriented syntax makes it impossible to use for his blind co-worker. That's stupid. A smart editor could easily transform indentation to/from whatever form he needs.
Haha I admit it's hilarious, BUT I'm actually better off this time. Because everything is in files/folders it's easy to move to another viewer. Instead of using Carousel I'll just use the stock Dropbox app in the future. Or I could use http://unboundapp.com/ and a number of other solutions.
We don't have numbers on this but I'd guess that minuscule (let's say, smaller than 8KB) JSON files make up &gt;99% of files. It's mostly used as a quick and dirty format to pass on simple messages, and it excels in that department. JSON files that are many hundreds of MBs or even GBs in size most likely just aren't a consideration. On the other hand, XML parsers have sophisticated ways to parse files, e.g. per chunk. One would think that XML parsers are slower because XML is a far more complicated format, but when file size is taken into account the picture can change significantly.
I do. Thank you 
I think the highest I've ever seen a win rate was 35.1%. No matter how perfect you play, there will always be a guess, usually 3-4.
I think web based IDEs are mainly intended for web and server applications. In this situation a game or graphical application would be written in HTML/JS and served to another browser tab.
Codeanywhere actually lets you install x.11 to address this https://blog.codeanywhere.com/setup-a-x11-desktop-on-your-devbox-openvz-container/
Thank you very much, @mayankkaizen! I am happy to learn you're enjoying the book.
Assuming "pts150" is the name of the application and "10.0.5" this would be a possible regex pattern to get both: `'(\w+)-application.+- ([\d\.]+)'` &gt;&gt;&gt; import re &gt;&gt;&gt; sample = "pts150-application - 10.0.5 - Application and Daemons for Name of company" &gt;&gt;&gt; re.findall(r'(\w+)-application.+- ([\d\.]+)', sample) [('pts150', '10.0.5')] To play around and test your regex's you can try this [site](http://regexr.com/) paste in your text and see what your regex will match and what you will get.
Cherrypy is * rock solid and highly performant * easy to use (no magic that I've noticed) * and includes a production worthy web server the third point can simplify deployment as your dev environment is simple and can be very similar to your deployed environment. Most frameworks have to be deployed together with another server such as nginx - or notably cherrypy
Cloud 9 is quite good. 
I think the OP wants the double click functionality in windows that associates .py files with python.exe
The real problem with orange is the competition to complete the set. Sometimes competition is for the losers, and going for no optimal properties can come out ahead.
Does it support textmate/sublime style syntax highlighting?
[cloud.sagemath.com]( https://cloud.sagemath.com/) EDIT: Sorry, not an IDE but you can run code and edit other people's code in real time.
Cloud 9 is dope. I can vouch for that.
I was wondering what [Dubsmash](https://www.dubsmash.com/) was and couldnt figure out from their home page. [The google search](https://www.evernote.com/l/ATU2uWTwPixGAo3gVsC51kOxjZbfiiOJRSoB/image.png) gave more of a quick overview than [their main page](https://www.dubsmash.com/). [Here is an example](http://www.dnaindia.com/entertainment/report-watch-ranveer-singh-and-deepika-padukone-are-adorable-in-this-dubsmash-video-2152937) of a dubsmash, though it would've been nice to see some on their page.
Let's just say I work for a NASA contractor developing the software to train the ground and flight crew for upcoming US spacecraft flights. My background beforehand is having a Aerospace Engineering BS and MS.
I have idea how I would do that... here's a test I've created.. could you give me an example of what you are thinking? from plotly import __version__ from plotly.offline import download_plotlyjs, init_notebook_mode, iplot from plotly.graph_objs import * from plotly import tools import numpy as np init_notebook_mode() x = np.linspace(0, 10, 10) y = np.linspace(0, 10, 10) xGrid, yGrid = np.meshgrid(y, x) z = xGrid + yGrid #formula 1 z1 = xGrid ** 1 + yGrid ** 1 #formula 2 z2 = xGrid ** 2 + yGrid ** 2 #formula 3 z3 = xGrid ** 3 + yGrid ** 3 #main formula #MainZ = z1 for y 0 to 3, z2 for y 3 to 7, z3 for y 7 to 10. scene = dict( xaxis=dict( gridcolor='rgb(255, 255, 255)', zerolinecolor='rgb(255, 255, 255)', showbackground=True, backgroundcolor='rgb(230, 230,230)' ), yaxis=dict( gridcolor='rgb(255, 255, 255)', zerolinecolor='rgb(255, 255, 255)', showbackground=True, backgroundcolor='rgb(230, 230,230)' ), zaxis=dict( gridcolor='rgb(255, 255, 255)', zerolinecolor='rgb(255, 255, 255)', showbackground=True, backgroundcolor='rgb(230, 230,230)' ) ) fig = tools.make_subplots(rows=1, cols=1, specs=[[{'is_3d': True}]]) # adding surfaces to subplots. fig.append_trace(dict(type='surface', x=x, y=y, z=z, colorscale='Viridis', scene='scene1', showscale=False), 1, 1) fig['layout'].update(title='Test', height=800, width=800) fig['layout']['scene1'].update(scene) iplot(fig)
Lets face it Vim has been around for 20 years. Vim is awesome. With Vim+Tmux there is nothing that CodeAnywhere can do over them. I personally think these browser based IDE's are a terrible re-inventing of the wheel. 
You'll also want to learn (eventually) a more "Pythonic" way: &gt;&gt;&gt; my_dict_und30 = dict([(name, age) for name, age in my_dict.items() if age &lt; 30]) # dict( ) =&gt; create a dictionary from sequence inside parens # [ ... ] =&gt; list comprehension # (name, age) =&gt; tuple # for name, age in my_dict.items() =&gt; iterate through key, value tuples returned by .items() method # if age &lt; 30 =&gt; filters out values less than 30 &gt;&gt;&gt; print(my_dict_under30) {'abe': 22, 'ron': 29} # sorted dict is coincidental, not expected &gt;&gt;&gt; und30_list = sorted(my_dict_und30, key = my_dict_und30.get) # sorted( ) =&gt; sort sequence # my_dict_und30 =&gt; dictionary we created earlier # key = my_dict_und30.get =&gt; key is sort criteria, in this case its .get method on dict which are the values of the keys &gt;&gt;&gt; print(und30_list) ['abe', 'ron'] 
lxml uses more than 700mb on a similar input (the one with the fat string). Surprisingly well. Edit: on Py2 (valgrind): pickle: 393.22 Mb msgpack: 397.49 Mb lxml: 1,040.17 Mb json: 4,519.07 Mb 
One possible reason for memory savings is that Python 3.3 and later changed the underlying memory representation of strings. Prior to Python 3.3, Python could be compiled with "wide" or "narrow" Unicode strings; "wide" used four bytes per character, and "narrow" used two bytes (with surrogate pairs for non-BMP characters). Starting in Python 3.3, however, those options went away and Python now chooses dynamically how to store the string, selecting either latin-1, UCS-2 or UCS-4 depending on the width of the highest codepoint in the string. So if your strings contain only characters that can be represented in latin-1, you can get a significant memory saving on 3.3+.
Quite a few people do this with Salesforce. It isn't the best option, but it's serviceable. Cloud9 also has a nice online IDE, and I believe the new Eclipse is an online workspace server and IDE.
Python 3.4 &gt;&gt;&gt; t = (1,2,[30,40]) &gt;&gt;&gt; t[2] += [50,60] Traceback (most recent call last): File "&lt;pyshell#1&gt;", line 1, in &lt;module&gt; t[2] += [50,60] TypeError: 'tuple' object does not support item assignment &gt;&gt;&gt; t[2] [30, 40, 50, 60] &gt;&gt;&gt; t[:] (1, 2, [30, 40, 50, 60]) &gt;&gt;&gt;
I did not see the data. So you are the one who knows. But it's hard to believe that there is no other way. Can't you change the upstream code a little bit?
How about this? from plotly import __version__ from plotly.offline import download_plotlyjs, init_notebook_mode, iplot from plotly.graph_objs import * from plotly import tools import numpy as np init_notebook_mode() x = np.linspace(0, 10, 10) y = np.linspace(0, 10, 10) xGrid, yGrid = np.meshgrid(y, x) z = np.piecewise(y,[y &lt; 5, y &gt;= 5],[(xGrid + yGrid),(xGrid ** 2 + yGrid ** 2)]) scene = dict( xaxis=dict( gridcolor='rgb(255, 255, 255)', zerolinecolor='rgb(255, 255, 255)', showbackground=True, backgroundcolor='rgb(230, 230,230)' ), yaxis=dict( gridcolor='rgb(255, 255, 255)', zerolinecolor='rgb(255, 255, 255)', showbackground=True, backgroundcolor='rgb(230, 230,230)' ), zaxis=dict( gridcolor='rgb(255, 255, 255)', zerolinecolor='rgb(255, 255, 255)', showbackground=True, backgroundcolor='rgb(230, 230,230)' ) ) fig = tools.make_subplots(rows=1, cols=1, specs=[[{'is_3d': True}]]) # adding surfaces to subplots. fig.append_trace(dict(type='surface', x=x, y=y, z=z, colorscale='Viridis', scene='scene1', showscale=False), 1, 1) fig['layout'].update(title='Test', height=800, width=800) fig['layout']['scene1'].update(scene) iplot(fig)
Great review. Will be reading book.
Seems serious to me. There's a lot I can do without Stack Overflow but there's one hell of a lot more I can't do without it. And all code stored on GitHub is publicly available unless you pay for a private repository. 
3%? I was under the impression most programmers use vim. And that IDE's are the minority. Myself and every great engineer I've ever worked with used vim. It's always the guys that use IDE's that you gotta be careful for. I've seen netbeans and eclipse have data corruption and mess up commits. 
dang you are an ulimited source of knowledge. Essentially I only want it to put out the numbers after it (10.0.5) I've bookmarked that regex:learn site too. thanks!
Very cool! just as a tip, if you ever think anyone besides yourself might want to read or hack on the code, it's a good idea to keep all the internal names in English. Culture wars aside, It's the de-facto international language for computer programming.
Do you need to be a US citizen to do that?
I had to use it for one of my classes at uni, it was unbearably slow.
Technically not for everything, but generally yes because it is too hard to hide all the ITAR information from select employees who aren't US citizens. Most companies just blanket require US citizenship for that reason.
[removed]
/r/learnpython The answer is simple if/elif. Post there a simple function that illustrates your understanding, not your whole program that plots and everything.
For me it's less about Stack Overflow and more the fact that I can't reference the docs (https://docs.python.org/3.4/) and the api docs for any libraries I'm using are almost always web hosted on readthedocs or something. The basics I can do, but I need my reference material. Was the same before the internet was such a big part of life. Lived out of my 6" thick stdlib reference manuals.
My ~~biggest~~ only gripe with this service is having to pay extra to enable 2FA.
Cloud9 is great. Koding is pretty good too
Why do you call CodeAnywhere as "IDE"? - no refactoring (I just want to rename method name) - no "go to definition" (or ctrl-click) button - stupid autocomplete - can't comment out several lines - plugins for implementation all ^^^^ of that features? Sorry, you don't want this. Online notepad.exe with syntax highlight and dark theme? Yes. IDE? Hell no.
Came here to say this if it hadn't already been said. It's got a nice UI, and Git integration through its mini-vm is nice.
I haven't worked directly with numpy in a while, but you can use logical indexing to do this. For example, if you set ind = (yGrid &lt;= 3 &amp; yGrid &gt;= 0) You can use ind as a way to access the correct elements of xGrid and yGrid. So something like z[ind] = xGrid[ind] + yGrid[ind] ...then repeat for the two other conditions. Check out this link: http://docs.scipy.org/doc/numpy-1.10.1/user/basics.indexing.html
Thanks for that. That can help. I was thinking of using Mechanize to search and then requests to extract the number of favorites and RTs.
I hate it when people announce a new IDE and don't even say what languages and technlogoies it's for.
I have been a vim user since approximately 2002. I love vim. But these days, most of my vim usage is really just the vim plugin for some IDE. Right now, that IDE is Android Studio and IdeaVim is pretty darn good. It supports all of the things you would expect it to and then a bit more that you wouldn't. For example, macros completely work. The selection modes all work. Most of the `:` commands that I have tried work, from `:w` to `:vs` and `:%s/^.*ASDF.*\n//`. I still use vim on the command line for auxiliary tasks throughout the day, but I think at this point in time, you can be both a vim user and an IDE user.
If that's true, then he's just completely full of it 
why are you guys running squid and apache on a windows machine?
This might help if you have OSX, https://kapeli.com/dash
Its out of necessity... not choice. 
This seems unnecessarily complicated. All of my photos (except those uploaded to Facebook/Twitter from my iPhone) are ingested by Lightroom. There I do culling, geotagging, editing, and whatever else is necessary to get the photos to a publishable state. At that point they can be uploaded to Facebook, 500px, and Flickr (there are also plugins for other services). For archival purposes all photos are stored on two local hard drives, and CrashPlan.
I thought dicts could only be created by curly brackeds {}, is it the **dict**() infront of the brackets that makes it work?
&gt; I use GitHub to store and share code ...but you can commit to your local repo, and push / pull when you're connected. You don't need to be online to have content management.
will it helps? https://github.com/tshrinivasan/google-ocr-python
Thanks ..I'll check it out
Do not touch *requests*, **test** instead. Design unit tests that trigger exceptions and make sure the tested code traps them accordingly. This is how you can force coworkers - and yourself - to handle exceptions. Everybody on the same level, under the unit test banner.
&gt; dang you are an ulimited source of knowledge. Just stuff I learnd in the long run ;)
http://www.b-list.org/weblog/2015/nov/15/real-python-wat/ here is better article about that
It's not really about "taking the time". 
You can simply use [Saros](http://www.saros-project.org/).
Cool story /r/learnpython
Because there is no one standard set of features to call something an IDE. You may consider a code editor with the ability to run a compiler an IDE. 
Wanna lowest memory use? try [ijson](https://github.com/isagalaev/ijson)
Then you won't need GitHub at all, but only git. 
Yeah it's a great idea and I love pushbullet. I personally use sickbeard &gt; sabnzbd &gt; notifymyandroid &gt; xbmc so it just turns up on my telly and I get a notification. 
I have tried [koding.io](http://koding.io) in the past. It was simple to use and you get access to a free virtual machine to play around in. Haven't used it in a while though.
Not most, contrary to popular belief it's only 49.9%
Supposedly you can also do it with `csh`: % set time=(99999 "%M KiB") % time ... however I'm very dubious of the results I'm getting.
ijson is incredibily slow. I can't get it to run on my "problem input" in reasonable time. I don't want to run it for 5 days, just to get peak memory use. Something is very wrong with that library, even the yajl2_cffi backend has the issue. You can try it yourself, there's support for it in the benchmark ([gist](https://gist.github.com/ionelmc/1521c5a87df8cf49a23d)).
I'm not an expert on these things, but isn't md5 outdated for hashing? # hash the password password_hash = get_md5_hash(password) (from https://github.com/edaniszewski/safe/blob/master/safe.py#L366) It looks neat otherwise.
Redirect to Facebook.github.io, which redirects to code.facebook.com. Wondering if this is some sort of "let me capture how many people will click that link"...
what language will the presentations be in? i cant seem to find where to buy a ticket etc or will that come closer to the date?
Really proud of you!!! I have worked as lead developer and recently as CTO and I have interviewed lots of programmers in the past 4 years and I am pretty sure that 80% of them just can't do something like this (most of them can't complete a fizzbuzz test)
You might need &amp;&amp; or the keyword and Instead of the single &amp; sign. Sorry, I'm on mobile and like I said, haven't used numpy in a while.
Check this site: http://www.openligadb.de/ It got SOAP and JSON API. I used it mainly for German Bundesliga. But it got some other Leagues as well (http://www.openligadb.de/Sports). Important to note it's community based.
Awesome! I was kinda worried it was going to stay on Python 2 only for years.
Please don't apologize. I really appreciate your help. Thank you.
Looks like Sourcelair prioritizes Python support. 
I use koding for Flask (Python) and also Common Lisp. Whats great about it is tjat you get sudo priviliges. At.my uni we dont get sudo priviliges so I cant code web applications using Flask or Django. But with koding I only need a browser. 
If you just want a fixed ordering: &gt; foo.sort(key=str) But that True is after "harbh" and before 1.3f and after 1L and 1 is weird in Python 2. "Natural" sorting. Pfffft.
That's still doable. Just use the 'key' keyword to provide a sorting function. eg. [1,"String",{"key":"value"}].sort(key=id)
I like to code in planes to pass the time. I have a copy of the CPython source and MRI in my machine and use them as "documentation". It has taught me a great deal actually. Obviously I only do this for personal projects, not for real work with deadlines and stuff. 
Lol me too! 
This is what I used a few years back. If I recall correctly, I had to separate the entire PDF I was working with into a whole bunch of one-page files. Then converted each page into a .tiff image, then ran tesseract on it. The tesseract process slow--particularly if you set your resolution ambitiously high--but it works.
Its very interesting that two of the orange plots are on even numbers, apposed to colours before and after which seem to only have a 1 even number plot and both are in reach of from jail.
yeah md5 is bad, it brings back the same hash for an identical string so shouldn't really be used. I think bcrypt is the way to go, though I could be wrong.
/r/python is NOT for homework help Please use /r/learnpython and provide as much of your won work as possible so people can see where you've gone wrong and help your work towards a solution.
Millennial-speak makes for great generic variables: Yolo, Froyo, Swag, Fleek Then combining them is even more fun: Froyolo, Yoswaglo, Swagfro, Fleefro, Yololeek
With the new `@` operator for matrix multiplications, is there really anything left in matrix algebra that Matlab does nicer than Python though? 
From the sidebar: Try Python in your browser * [try.jupyter.org](https://try.jupyter.org/) (Evolved from the language-agnostic parts of IPython, Python 3) * [learnpython.org](http://www.learnpython.org/) * [Skulpt](http://www.skulpt.org/) (uses WebGL) * [trypython.org](http://www.trypython.org/) (uses Silverlight) * [ideone](http://www.ideone.com/) (online compiler and debugger) * [PythonAnywhere](https://www.pythonanywhere.com/) (basic accounts are free) * [Brython](http://www.brython.info/tests/console.html) (Python 3 implementation for client-side web programming) * [Wakari.io](http://wakari.io/) (Web-based Python Data Analysis) Personally, my main IDE is a self hosted instance of jupyter. I also subscribed to PythonAnywhere back when I had hosting needs which is a good service I'd recommend.
I hope you're not using old style classes in Python 2!
Oh yeah I understand how that works but I plan to use a re's tokenizer and filter out delete commands or just not acknowledge them.
Don't forget herp and derp. I still see that instead of foo and bar. What the hell is froyo and why would it be a var name?
Gotta stick with the dogma!
I use pop bang pow etc... I think that's fairly normal. 
If this were a reason to not use a language nobody would use Javascript... [Wat](https://www.destroyallsoftware.com/talks/wat)
"Dogma" sounds bad, but since I can ignore the connotations, I can agree with you. A consistent overarching philosophy is good to have.
It would have never happened if you had written unit tests.
Is the idea that the order is sorted by the objective function? At first I thought it was some type of index truncation scheme but then when I started to play with it, it looked more like a sorting scheme. Your title here makes sense, but you may want to add something more clear to the description about it all being the same index just sorted differently 
Ever since I started writing unit tests, my code works perfectly on the first try. It's gotten so good that I push my code straight to live production, on a friday night, before a long weekend. My boss says I'm a rockstar coder. He gave me the keys to his Range Rover, because with all the extra revenue I'm bringing in, he managed to buy himself a Porsche. I can afford dental care for my three beautiful children, but I haven't even needed it, because since I started writing unit tests, their teeth have become just a little bit straighter and whiter. My dog is 36 years old, and is still spry as a spring chicken. I used to think my connection with the dead had faded after I hit puberty, but just this morning, my grandmother reached out to me, and I could hear her voice ringing in my mind like a clarion bell cutting through the rain and fog. She told me she's proud of me and what I've done with my life, and that God Itself in Its many radiant faces has arranged a throne for me in heaven for when I finally arrive at the age of 146. I've kept this portent with me all through the day, and my unit tests are still passing.
Hey, I use derp and herp too!
Tickets are not released yet, and all talks are in English 
&gt;First, I'm interested in knowing what sort of things are getting "shut down" Any use of lambda, map, filter and reduce. Guido doesn't like it so everyone trots out ZoP to stop people using them even though they're no harder to understand than list/gen/dict comps.
you're right and if you take a look at their blog they have some nice technical posts about things you might wanna do with it(or with any other ide for that matter), but they also have support for most web languages (right? at least that was the case last time I checked) //disclaimer: I'm not affiliated with sourcelair, just think it's a cool ide for simple stuff
Please forgive my ignorance, but why is that a bad thing? Indeed, what is the possible use of a hashing function that does not return the same hash for the same string?
There isn't one. If you're starting out, there's no good reason to choose 2 over 3. If you ever happen to run into Python 2 code, the differences (at the beginner level) are minimal anyway. Many of the existing training resources are based on 2 because they were created in the past and just haven't been updated/adapted (reasons can vary, from disinterest to financial).
&gt;pop I can see how that might become confusing In [5]: pop = {} In [6]: pop['pop']='pop' In [7]: pop.pop('pop') Out[7]: 'pop'
It is a reason. Just js is so ubiquitous that it can't be avoided. And it has a lot of useful features and libraries for web dev. 
What use case motivate making this?
I think that see other people's code is a way to be a better programmer. you have to read lots and lots of code and of course write a lot. And try to be part of something, like meetups, conferences, open source projects, have a group to discuss programming with friends, etc. The best programmers I had the pleasure to meet do this. 
Order guaranteed^\*! ^^\*But ^^may ^^appear ^^random.
slight variation.. I usually go for hurp and durp, hurpa, durpa, and durr.
Here’s the homepage - http://www.zerodb.io/ 
It gives you a very predictable output meaning you can use a tool like [this](https://hashkiller.co.uk/default.aspx) to p00n someone fairly easily. If you *must* use md5 (for whatever reason), then use a salt or a guid or something for randomness, that'll guarantee that the same string won't return the same hash. Why do you think a string should return the same hash each time out of interest?
There's not a good reason to start with 2, although it doesn't really matter. For beginners, the differences between 2 and 3 are pretty minimal, and learning 2 after 3 or 3 after 2 won't make much of a difference. Most of the changes that concern beginners are small syntactic changes (`print` is a function in 3 but a statement in 2) or have to do with differences in the standard library (some packages available in 3's stdlib aren't available in 2, and I believe some old, deprecated packages in 2's stdlib aren't available in 3 or have been rolled into other packages).
This was posted few days ago in a few subs and there are some outstanding questions. Like how much can the server work out about the data, can the server determine if clients are issuing the same query even if it can't know what the query is? To me it seems a little bit optimistic and it's not clear exactly what the use case is.
But which did you hate first?
Wow!!! Insert in 0.5s!!!!! Holly smokes.. THATS SOOO FAST! -- in all seriousness i would like this to be a bit more mature, and maybe i'll use it.
I learned Python 3 first... well, I can't say that I've really learned python 2, but when I have to use it I usually find random things to be very inconsistent and illogical compared with ver. 3. This is just one example of such an illogical "feature" 2.x. 
Seeing as I live in Sweden, maybe I should go to this next PyCon just because I have the chance. There aren't a lot of opportunities for programming gatherings otherwise, living here.
I'm not super concerned about the performance really. It's part of the trade off for security. I just want to know more about what the trade off gets you.
The following function gives the same output as your test cases. Is there some important difference? def product(iterables, key=lambda x: x): return sorted(itertools.product(*iterables), key=lambda x: sum(key(y) for y in x)) 
I mean, if you're assigning `x = foo()` then you probably want the list of `fish` results to be stored in `x`. Otherwise, what would you expect `x` to contain? `undefined`? So I wouldn't call this a gotcha. But is there a way to do a for loop without creating a list? If so, I would call that a bad design decision.
Almost everybody starts out copying and pasting code, but to actually understand what's going on you'll have to learn about the differences between functional and object-oriented programming, basic data structures and how algorithms use them and architectural patterns. If you don't have the fundamentals everything will appear to be "magic" and unable to use and fix for yourself. I think there are a few universities that offer free computer science lectures online, that may be a good way to start. And forget game programming for now. It's a great long term goal, but you don't just go out and "build a game". And if you'll be a game programmer one day you will most likely focus on one aspect like AI or dynamic level building (evolutionary algorithms, etc.), the physics engine or model design.
Don't forget Fuccboi and Bae
It would be kind of cool if this worked to assert a subclass though: &gt;&gt;&gt; class Foo(): ... pass ... &gt;&gt;&gt; class Bar(Foo): ... pass ... &gt;&gt;&gt; Foo &gt; Bar True
Fortunately, Java 8 has lambdas and function references for actual functional programming now. ^(kind of sad I didn't get to use them though)
okay thanks for the reply 
Their [version at github](https://github.com/robertlugg/easygui) has a `setup.py` and more information than the version at your link above. There's also [a version at PyPI](https://pypi.python.org/pypi/easygui/0.97.4) you could download or just install with pip.
What kind of things are you wanting to do on the file? If you just need to convert or filter line by line you can just iterate the lines (only loading small bits into memory at a time): with open('mybigassfile') as f: for line in f: pass # do your thing with the line
http://stackoverflow.com/questions/8009882/how-to-read-large-file-line-by-line-in-python Python handles huge files pretty well, you just have to work line by line. If you want to iterate in a sliding window manner, http://toolz.readthedocs.org/en/latest/api.html#toolz.itertoolz.sliding_window is a pretty good start. If you want to iterate over a bunch of huge files line by line as if they were one large file, use https://docs.python.org/2/library/fileinput.html
My bad, I don't believe I meant NFS, but being over a week ago don't remember what I DID mean (Expandrive works in a different space than NFS make sense for it). Windows does have some wonky support for NFS natively since Windows 7, though.
It seems like it would be really inefficient to cleanse the data line by line for each file using Python. I would import each file into a database, connect to the db with Python, and then cleanse the data using SQL and Python. Once the data has been cleaned up and normalized, you can combine the data into one or multiple tables to use for data analysis in Python.
A full table scan with Postgres will most likely be a lot faster than what can be cobbled together in Python. If you set indexes it gets even better. Plus there are a lot of data analysis tools that work with Postgres.
I would use map reduce and partition the data by hash.
sounds interesting, could you give a little more detail?
http://musicforprogramming.net
So I have 10 people in the database all with the password hello, how does my hash function verify a password against a hash?
pyspark
That's awesome!
Hello. Welcome to reddit. This subreddit is specifically for discussion of the Python programming language. You may find better help over in /r/learnprogramming , which is specific to helping users code things. 
Thanks :) I'll try to post there then
You said you have been using it....
Try solving a small one and you'll learn patterns you can use to fix black squares instead of amassing combinations of possibilities.
Not sure about CoffeeScript, but in the (much nicer imo) fork of a fork, LiveScript, you can do this, where the exclamation mark denotes there's no return value. foo = !-&gt; for bar in baz fish(bar) Which compiles to: foo = function(){ var i$, ref$, len$, bar; for (i$ = 0, len$ = (ref$ = baz).length; i$ &lt; len$; ++i$) { bar = ref$[i$]; fish(bar); } }; edit but sadly this happens: x = -&gt; void x (a)-&gt; void //becomes x(function(a){}); x(a) -&gt; void //becomes x(a)(function(){}); 
Maybe now use the knowledge you have gained of programming to try a technology that is easier or more specific for games development. Much of your Python learning will help you if you use one of the games development systems out there that use different languages.
Wow, did not know about the to_sql function. Makes life quite easy.
good point! I haven't had a lot of exposure to the crypto/security world so I didn't even realize this. Some good, succinct answers as to why md5 is considered bad, for anyone else looking at this: http://security.stackexchange.com/questions/19906/is-md5-considered-insecure thanks for taking the time to look at it!
Sorry to have lead you astray with my description of Expandrive. I promise it was not my intent.
did some quick reading and it seems like you're right, though pbkdf2 seems to be about as good an option. thanks for the suggestion! 
i think this get back at one of the previous comments &gt; use a salt or a guid or something for randomness so, for a given user, instead of just hashing their password, you could hash their username (or some other unchanging value, e.g. guid) along with it hash_function(username + '|' + password) then, assuming everyone has a different username, the hash would be different, but you would still be able to reliably reproduce the hash to validate a correct password for a user
Check out this for NFL, it will do live scores and stats https://github.com/BurntSushi/nflgame
Not having used letsencrypt but taking a glance at the project: The 'setup.py' file describes both how the letsencrypt script is called and how the plug-ins are located. entry_points={ 'console_scripts': [ 'letsencrypt = letsencrypt.cli:main', 'letsencrypt-renewer = letsencrypt.renewer:main', ], 'letsencrypt.plugins': [ 'manual = letsencrypt.plugins.manual:Authenticator', 'null = letsencrypt.plugins.null:Installer', 'standalone = letsencrypt.plugins.standalone:Authenticator', 'webroot = letsencrypt.plugins.webroot:Authenticator', ], }, The script 'letsencrypt' will call the function 'main' in the file 'letsencrypt/cli.py'. There is a 'webroot' plugin available as a 'letsencrypt.plugins' in the file 'letsencrypt/plugins/webroot.py' at the 'class Authetnicator' line. If you read the source for cli.py, the second line of the main() function is: plugins = plugins_disco.PluginsRegistry.find_all() This calls a class method in 'letsencrypt/plugins/disco.py' called find_all(): @classmethod def find_all(cls): """Find plugins using setuptools entry points.""" plugins = {} for entry_point in pkg_resources.iter_entry_points( constants.SETUPTOOLS_PLUGINS_ENTRY_POINT): plugin_ep = PluginEntryPoint(entry_point) assert plugin_ep.name not in plugins, ( "PREFIX_FREE_DISTRIBUTIONS messed up") # providedBy | pylint: disable=no-member if interfaces.IPluginFactory.providedBy(plugin_ep.plugin_cls): plugins[plugin_ep.name] = plugin_ep else: # pragma: no cover logger.warning( "%r does not provide IPluginFactory, skipping", plugin_ep) return cls(plugins) This code searches all distributions available to the letsencrypt python script and finds any distribution which provides a 'letsencrypt.plugins' entry point. To insert your plug-in into the this ecosystem you need to: 1. [Package your code into a Python distribution](http://python-packaging-user-guide.readthedocs.org/en/latest/distributing/). This basically just entails writing a small 'setup.py' file which contains some metadata about your code. 2. Your setup.py file needs to have an 'entry_points' key-value pair and the value needs a 'letsencrypt.plugins' value that points to your plugin. 3. Your setup.py needs an 'install_requires' key-value pair that declares 'letsencrypt' as a dependancy. 4. Finally, install your distribution with one of the Python installation tools (Setuptools, Buildout or Pip). Whichever tool you use, you may have to guide it to write out the scripts for the dependant 'letsencrypt' distribution. Maybe that will work? Maybe not? Maybe in the [lets encrypt docs](https://letsencrypt.readthedocs.org/en/latest/) it actually talks about how to write and register plug-ins? You probably want to use pip for your install tool, since that's what 'letsencrypt-auto' uses, which is a BASH script for managing 'letsencrypt' installations. Probably with the virtualenv/pip combination that 'letsencrypt-auto' uses, you can just install your plug-in distribution into the same virtualenv as the letsencrypt distribution and you don't have to worry about the 'install_requires' dance I mentioned above. You just have to ensure you provide an 'entry_points' with a 'letsencrypt.plugins' entry. Overall, this is actually really _easy_ to do. But only if you've been around the block multiple times with the Python packaging ecosystem. Otherwise your going to be faced with a whole bewildering stack of tools, and getting a foothold into the Python packaging ecosystem can be pretty daunting in the beginning. 
Wow. You understand my problem/situation perfectly. Thank you for this very detailed guidance.... Let me parse this and I'll follow up with the outcome
Is this for your job? Do you have a small budget? If yes, you can look into Redshift on AWS. Put the files up in S3, and then loading them is a simple COPY statement. Not a Python solution, but may it available for analysis using standard tools( Tableau, SQL). 
The csv standard lib module makes it very simple to read it line by line. No fancy extra packages needed at all.
What kind of games are you interested in making? There's really two questions there: 1) What kind are you interested in making next? Like, in the next few months? What's the next step in what you'd like to do? 2) What kind are you interested in making down the road if you could make whatever you want? Maybe you can get some help with (1), but it is good to look down the road sometimes for (2) as well. 
Dask is the way to go. Jake Vanderplas has a [great example](https://jakevdp.github.io/blog/2015/08/14/out-of-core-dataframes-in-python/) on his blog, or check [the docs](http://dask.pydata.org/en/latest/dataframe-create.html). You can easily handle large (much larger than memory) dataframes, and retain a pandas-like API and have it work seamlessly with tools that consume pandas dataframes (such as seaborn, the latest matplotlib, sklearn, etc.).
Sqlite. The database is a single file and it runs as a library for your application, not as a separate process.
Sigh, I'm simultaneously glad *someone* had this point of view, but also depressed it's not more prevalent. Oracle is phenomenal with bulk data loading. Whip up a quick external table, voila, you can instantly select across your entire CSV as if it were a normal table. And it works flawlessly with parallel options. My workflow: whip up a quick external table with very loose field defs (e.g. varchar2(32000)), poke around, do some max(length())s, then create the actual table as a `create table ... select * from foo_ext`. I f'n cringe every time I read a sentence along the lines of "my DBA exported my huge dataset to CSV, plz hlp?". Python and Pandas are ruining data modeling as a skill set.
[Kivy](http://kivy.org/) is good if you want to make fancy guis and use it as a basic game engine. No need to apologise for a wall of text on a programmers' site. Most of us actually read docs.
If you don't know what you have, I would start with sampling the data. Take 1% (1.2 gbs) which should be handled by modest hardware. Easy enough first step which would allow you to keep the data in memory for quick experimentation and guide you as how to analyze the rest. 
Go upstream and berate management or the DBA team to give me direct Oracle access. I then set up a database link on an Oracle instance I manage and use remote tables to pull the data in as needed, maintaining relational integrity as needed. If you've got a single row with 200+ columns that is actually a composite of many different tables from a heinous SQL query that joins on everything... you're doing it wrong. Fuck me I hate CSV as a data transport. (If you've got a legitimate single table with 200+ characters that's fine, Oracle will handle that. If you've got large data, then that belongs in a separate table via BLOBs that you reference via unique keys.)
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules there before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." If your question is about homework, show them that you've tried to solve your problem in your post and you should get all the help you need. Cheers &amp; best of luck with Python!
I'd like to try and explain this in layman's terms if I could to help me better understand if I'm getting this: The server side is really just 1 unencrypted index that points to many encrypted "buckets". The client side does all the other traditional database stuff, including traversing the btree (which referenced the unencrypted index?), and trying to optimize any queries that are performed. Thus the advantage of this is you can store your data on a "relatively" untrusted source and "minimise" the amount of data lookup required when you need to perform database like queries. Is this a fair synopsis? I have a lot of concerns about how you're preventing the server from figuring out the keys, specifically if they have lots and lots of buckets that they could start to figure out repeated data patterns, I'll definitely take a look at the code soon! 
It looks like you have a [nonogram](https://en.m.wikipedia.org/wiki/Nonogram). A cursory look at github shows a few solvers you could examine for guidance.
No it's public data from an organization that gets dumped out into several files of 200 plus columns. No field types or lengths, just descriptions. Most of the fields are dross/crap, but I still need to do some sort of analysis on the full set to separate the wheat from the chaff. I just haven't figured out an elegant way to automate setting up the initial tables.
Postgres would be good enough. I work for a large corporate and we have more Oracle databases than you could eat. IMHO Oracle is the best database I've worked with. A number of their other applications and systems are rubbish, but the database is unsurpassed. 
I think you can have 1000 maximum columns in Oracle. Not that you'd want to do that for obvious reasons. 
Maybe normalise the data and then write some rules to assign quality codes, then recreate a database structure with the data you want. 
Given that I just got an email from the federal government letting me know a shitload of my personal information (had background check done for job years ago) and my personal connections' information (they were interviewed for my background check) was breached alongside tons of other people's, I would love for this to be mature and put into place by the federal government.
came here to say this. if you're looking to do analysis that involves the entire dataset, dask takes care of the chunking for you.
I'm running PyCharm on an i7-6700k, 32GB RAM machine and it's incredibly slow - but at least it looks pretty now?
pandas' read_csv method has a chunksize parameter that you might find helpful (http://pandas.pydata.org/pandas-docs/stable/io.html) depending on what you're doing if you could read in chunks and aggregate as you read from disk you may be able to get the dataframe to a more manageable size...
This post is more suited towards /r/learnprogramming . The feature can implemented in a lot of different ways. Even Google doesn't do it properly. I'm not sure if you've ever seen Google Chrome suggest translating a page that was written in English, but perhaps had a little bit of a programming language somewhere. (There are memes out there that describe this
I am actually in the process of building a SaaS for cleaning and joining large CSV files :-) Would love to take a crack at your dataset. Let me know if you are interested. I pretty much use a lot of the technologies mentioned here - Spark cluster to do the cleaning (using pyspark), a data warehouse for analysis (Redshift on AWS and SQL DW on Azure), and a couple of ML pre-processing algos to find out the "interesting" columns in your dataset.
You might have something configured badly. I run PyCharm on multiple machines - the best of which has only half of your specs - and PyCharm runs perfectly well.
Good catch. But when I point people to /r/learnprogramming, it has to do with the -type- of question, not the complexity of the question. This post has nothing to do with Python specifically, other than that OP wants to use Python as an implementation. 
Why does it have location /templates in nginx config. Django templates shouldn't be visible to users via http, they should be used by django application.
What did they change besides the crappy new logo?
Apparently it's just a weird shape with PC in it... Fuck them
http://blog.jetbrains.com/pycharm/2015/12/pycharm-5-0-2-update-released-along-with-new-jetbrains-branding/
OK so just logo/splashscreen?
Did you read the link? * numerous visual changes according to the new company branding * numerous fixes for different performance issues * fixes for docstrings support * fixes for Docker and remote interpreters support * a number of fixes for scientific tools, including IPython Notebook, matplotlib and miniconda support * a few fixes for Django support * a number of fixes for the debugger * fixes for integrated test runner * numerous platform fixes and improvements, including UI and VCS fixes and more 
At sorry, I specifically meant design changes. I guess I thought I was replying to some comment
The use case is when you *do not need the whole cartesian product*. Imagine you have to make a plane trip, back and forth. You have 1000 possible flights for the outbound and 1000 possible flights for the inbound (the return). The whole set of possibilities is the cartesian product, so 1000000 possibilities. Now I want to know which of these 1000000 are the 500 cheapest ones. But I do not want to sort the million, I just want to iterate on the cartesian product, get results ordered by sum of prices, until I reach 500 possibilities, and then stop.
I have the same CPU, and half the RAM on my primary desktop. PyCharm works fine for me. It even works pretty quickly on my crappy 2ghz work laptop with a 5400rpm hard drive and 8gb RAM. Maybe your environment is not healthy?
Whether you can and whether you should are two different questions. IMO it'd never hurt you to learn Go, Julia, C++, whatever it is that would fill the niche of "high performance scripts" for you. 
You are right! It is only the order that is affected by the objective function. Then you can decide to stop the iteration whenever you want. I realize now the description thing is not great ;)
Dask df's are awesome. The api isn't quite as robust as pandas (the pandas app is massive) but it gets stronger with each update. 
Yes, this gives the same output, and yes, there is a difference ;). Your example uses `sorted`, which will have to consume the entire `itertools.product` iterator. Perhaps you do no need the whole cartesian product, just the n-th first elements, or all elements until the `key` is over a certain threshold. Computing the whole product can be very inefficient in those cases, specially on large datasets.
I have an i3 machine with 8GB RAM at work and there are no problems with Pycharm other than occasional restart (of the IDE) to free up RAM once a week or so, and that's just because of Java.
I have had a lot of trouble with type inferences on large files. Not to mention merges sem to freeze dask. 
you definitely have something misconfigured..besides, it now says **Lightweight** 
I wonder how aggregations would work with chunked dataframes.
Can't confirm. Running like a beast on all my machines. Something is mis-configured on your end.
Most tips here are very focused on personal experiences. I'm thinking you have to examine your demands by going through some possible solutions: 1) Merge the files if possible and read the file line by line with a generator. This is a good method, in the case your analysis is easy to implement 2) If you need a window, expand 1) to a class 3) You can store all your data into a database (sqlite, PostgreSQL, Oracle, DB2, SQL Server) and use pandas. Especially PostgreSQL has a very good API for time and GIS calculations. I most cases a database gives you a good access to ranges of your data. I would do that at least in the start to verify algorithms. A method like 1) may be faster, but since your data is static, I wouldn't care. 4) In the case you have missing values, use a library like pandas. How you use pandas is a decision process and depends on your data. You can "repair" missing values and write the result on disk or just using pandas for analysis (recommend) 
I experienced some delay when running debugger with dynamic type collection ON, in comparison with the old versions.
I deployed django+uwsgi+nginx on debian 8 yesterday evening, with so much tears and pain I used uwsgi emperor/vassals, anyway...
I've been thinking about a SaaS for cleaning / joining data together- some kind of SaaS glue to easily convert between formats really (for exactly OP's sort of situation). Can you tell me more about your thing?
Maybe learn programming in general, data structures, algorithms.
The secret key is also hard coded in settings.py, which is a really bad idea, with nothing in the README even suggesting this should be changed. This isn't good for beginners who might pick up this project and miss that they need to fix this first. You might want to consider managing the settings a bit better, maybe using something like django-environ or something similar that uses environment variables for configuration. Alternatively, I have also used .ini or .toml files for settings, which is another approach.
I think your chief programmer wants to stay a critical path chain link, if engineers and programmers can do the same thing, he becomes more expendable. If python is good enough for google to do big data, it should be good enough for you. Not really worse than C# in any case. &gt; Also it is really hard to "hide" python code and produce easy to install software with python in any machine (Mac/Windows is mostly our target). Look at cx_freeze. It bundles everything into a self contained .zip with .dlls and all. &gt;have both R&amp;D engineers and IT team on the same language to make easier and cost efficient the dev of our softwares. Not having to wait for the programming wizards to fix a simple bug is worth a lot.
Now I don't want to update!
Let me show you an obscure package that is about to change your life: [petl](http://petl.readthedocs.org/en/latest/)
I was thinking about stepping back and building an meta-data database built by scanning the text files and applying some rules. Then generate the table structure in SQL from the meta data to determine type and size, bring in the raw data, then make a second pass and build the final database with the fewer selected fields. (Of 2000 plus fields, I need maybe 80, but I need a good process to limit them.)
Surprised that [csvkit](https://csvkit.readthedocs.org/en/0.9.1/) hasn't been mentioned yet. It works line by line, so it's great for pre-processing the files and generating summary stats. Not python though.
Interesting concept, please I know that this is pain for engineers but I would like more documentation and use cases on github or your website. I kill keep an eye on this! :)
If you know what you want to get out of it - pre-determined statistical analysis, free text search for a limited number of items, conversion to different file format etc - then do it line-by-line on the existing csvs. If you want to explore the entire data set, try things out, see where the data leads you etc, then import it into a DB first. 
I also run PyCharm on a variety of machines, and its performance varies from 'shit', to 'good', but I have never heard it described as 'great'. The best compliment for the IDE is 'it runs fast enough you wouldn't believe it's written in Java, and a lot faster than eclipse'
uWSGI has always given me lots of trouble compared to Gunicorn.
Thanks for historical flashback, always good to have those. But if it is 2500 LOC is what it takes to have what we have now: that is flexible and complicated, which from my point of view is already beautiful and simple, then attacking the same language feature with the most PEPs reminds me of Don Quixote and his attack on windmills. Indeed, there is something noble about grappling with that which in and on itself already works and provides benefit to everyone. Imagine the benefit it would bring to everyone! And all that with just a fame as a reward. Except that the problem is more an invention, a fantasy, than an actual problem. As I see it, issues like these are more about programmer's self development, than about programming language development.
Why all the downvoting?
This is a bit of an aside, but does anyone have good article about the benefits of nginx over apache? particularly w/ regards to wsgi applications? I've got my apache+mod_wsgi setups pretty well honed, but hearing a lot about nginx, curious what the advantages are?
The one thing that will keep me away from IDEs is how cluttered they usually are to begin with. Probably why I love Atom even without the integrated part.
This: &gt; Example of a Django site served by uWSGI and nginx. Would be better written as: &gt; Example of a Django site served by uWSGI and nginx for testing and education purposes. This is not suitable for production and should be considered insecure. Or something along those lines. There are all kinds of people out there and many will not think beyond what's written in the text. If you have experience with this kind of stuff, you understand what `SECRET_KEY` means. If you don't then it's possible you either don't care or won't think to consider how secure the given setup is.
I want to upvote and downvote at the same time.
Yes, there's an organization called [Software Carpentry](https://software-carpentry.org/) that focuses on teaching researchers in industry and academia best practices in software development, including version control, testing, etc...
Unless I did not understand your point, this is not the case because we always sort each iterable in input using the lambda beforehand. After sorting each iterable, the smallest value is indeed at `(0, ..., 0)`. If you try this example, you can see that this decreasing lambda works as well: &gt;&gt;&gt; list(product([[0, 1], [0, 1]], key=lambda x: -x)) [(1, 1), (1, 0), (0, 1), (0, 0)]
Making a language so that engineers and scientists can produce production code and do quick bug fixes like someone mentioned earlier is really scary to me. We are rebuilding a code base built by someone who banged out a ton of code. It works and it quickly built a revenue stream. However there are code practices that are miserable and make extension and maintainability impossible. You want people who know how to make a large code base making your production code. Vb5 has a hard limit on function sizes and there are a few that are split in two to get around this limitation. You will find an equivalent from their code along with tons of global variables and no tests. It's probably easier for software engineers to implement the scientists specifications or rewrite the outgoing prototype than to manage a growing dynamic language codebase written by people not familiar with software practices. 
fml. this is hard.
Is there an opposite of that? An organization that helps bride the gap the other way?
lets just get practical here. it sounds like your organization primarily produces desktop software that will run on Windows. if that's your main use case undoubtedly C# is easier to get executable binaries out of. one of the only really valid complaints raised by your chief programmer is that one. Python is not nearly as well suited for producing redistributable, easy-to-install, compiled binaries that will run on a desktop machine somewhere. that's not really arguable. there are ways to do it in Python and if you _already had_ a development pipeline tooled up for Python than it would be worth looking into. But that's not your case. What you have is a development pipeline tooled up for producing C# apps. You should probably keep using that. you should, however, tell your chief programmer engineer (in more polite words than these), to shove it up his ass with those dickish remarks about "lack of rigor" and "nodody develops proper software in Python". Why? because its dynamically typed? that has nothing to do with rigor or lack thereof. thats the same smug horseshit thats been passed around as an excuse for argument in certain communities for _decades_ at this point and it still carries no water. Smug horseshit from guys who never learned how the backend of the internet really works and how much _rigorous work_ it really is. 
Im also a professional python developer, and: - python *is* hard to install. Solving the issues with distribution once does not mean you can generally consider this problem solved. Many packages fail because of bundling issues, and when you use a new package you get new issues. - tests will never make python as robust as C#. It fundamentally lacks the static analysis that C# provides; you can cover many things with tests... but many edge cases are poorly covered in public 3rd party modules, and this is a significant source of runtime application failure. - pure python *is* slow, and its terribly terribly slow; you can speed up using c modules, but then you lose the expressiveness of python. The 'python is fast enough for application level logic' game is usually one you can win; but when its not, fixing it using c modules is *massively time consuming*. If youre building large robust software services, be very wary before you pick python; prototype your deployment to production servers and installable packages before you do *ANYTHING ELSE*, because this is most likely to be the deal breaker for using python. Python is a great language and I love it; but it is not the best choice for all tasks; interactive simulations, low level systems and stand alone applications are particularly not well suited, when you compare the features of other languages. 
Is the speed boost from Numpy partially due to fact that it's written in C? 
Two thoughts: First, the arguments they're making against Python are mostly nonsense. The "rigor" argument is just kind of meaningless (really, what does he even mean?). As far as "hiding" your code, ultimately your only real protections are legal whichever language you use, and the issue is probably not in practice important. And lots of people use python for all sorts of software. Clearly your engineer is comfortable with C# and doesn't *want* to use python. Which brings me to my second point: it's a terrible idea to try to force your engineering department to do something it doesn't want to. They're not expert python programmers, and if they're not excited about learning and using python you're not going to get good results. Your engineers have to have control of their own choice of tools if you want them to be effective. Think how absurd it would be if they told you you had to learn and use C#? tl;dr: Python would almost certainly work well for what you want. It's a terrible idea to try to make the engineers use it if they don't want to.
What is a "serie"?
Using quick and dirty prototypes directly for production distribution is a very bad idea imo. Doesn't really matter what language. Python is great for experimentation, but I wouldn't really want to use it for anything else anymore. Many companies use Python for serious projects, but just as many use terrible languages like php or Javascript5, so this doesn't say much anyway. 
Well: https://github.com/jonathansp/pyception
Maybe I've done too much C, but that seems _almost_ natural to me.
Something that teaches academic skills to people with practical skills? Generally that's a role filled by universities.
This sort of thing *can* work well, but it requires forced rigor (eg code review) and the scientists to put in the work to abide by it. There also has to be trust on both sides so it doesn't turn into a political battle.
there is also py2exe to make self contained exes.
Fair points Just about the "but when its not, fixing it using c modules is massively time consuming.": Comparing to what? I think it's a better solution than get a "fast" language (Fortran, C++) and try to build application infrastrucutre with that. Or you could build both with C# (or Java), but they are not the best tool for crunching numbers either.
To get a feel for the data, at least get an idea of the field lengths (assuming it's a delimited file of some sort), with something like: import csv max_fields_per_row = 0 field_lengths = [0] * 200 # 200 is just a big number more than the expected fields per row with open('yourfile.txt', 'r', encoding='utf-8', errors='replace', newline='') as fh: # csv breaks if it encounters a null character, hence the generator reader = csv.reader((l.replace('\0', ' ') for l in fh), delimiter=',') for row in reader: if len(row) &gt; max_fields_per_row: max_fields_per_row = len(row) for index, field in enumerate(row): if len(field) &gt; field_lengths[index]: field_lengths[index] = len(field) print(max_fields_per_row) print(field_lengths[:max_fields_per_row]) There may be some fields which are huge and can be ignored if and when you load this data into a database (which I recommend, it's what databases are for). 
&gt;doing complex architectures and software it is not reliable thems fightin words
That is 1 millisecond. I'm concerned that it can't accurately delay that amount of time on Windows as per http://stackoverflow.com/questions/1133857/how-accurate-is-pythons-time-sleep
Not a very responsive website, can't read the code either :(
Sorry I didn't see a mention of Windows in your post. On Linux you can go down in to the microseconds, it all depends on what platform your python code is going to run on.
You're not using a product for its logo, why care so much? PyCharm is a great IDE, it's not like the logo changes that.
&gt; Look at cx_freeze. It bundles everything into a self contained .zip with .dlls and all. &gt; &gt; The main issue is that this process is not simple. Anyone who has tried to package a python program into an executable where they need to use major libraries like numpy, scipy, opencv, matplotlib, pandas, etc ... will UNDOUBTEDLY have run into problems where they have to make special tweaks to get the executable to finally build AND execute properly. It absolutely can be done(I have done it with all of the aforementioned libraries). However, from a production point of view, if you want a workflow to build an executable that is just going to work the exact same way always ... python's distribution system is definitely lacking. The other issue (which many people may not care about) is that it is not straightforward to build an executable with python that obfuscates or hides the source. For example, .pyc files can be easily reversed to generate the source code. So if you've got proprietary code that you don't want to be made public to your paying customers, it adds extra steps to your build process to come up with ways to prevent the source code form being easily visible. Again, this may or may not be an issue for some people. As a python developer, the quirks in the common distribution methods are my main (and pretty much sole) gripe. Otherwise I love the language and really enjoy using it to develop software.
You can't lay people off in France?
To be quite frank, trying to achieve a 100 microsecond delay is going to be extremely difficult to do regardless of programming language here. Even on Linux, you will need HPET to be able to begin to attempt to sleep with the desired resolution, and even then it's still going to be pushing it. Trying to work with precision like this is something you'd typically use an RTOS for and just use the appropriate amount of nops or other instructions to stall the pipeline for the desired amount of time.
cx_freeze, py2exe, and PyInstaller are all great for easy distribution, but they don't really work that well for hiding your code. It sounds like the boss wants to keep clients from knowing exactly how the code works, which is a lot easier in languages besides Python.
I think you might aware of Enthought. And those guys are building very computational intensive piece of softwares. If they can do it in python, why not you. 
And new splash and logo for the app itself
Have you tried turning on the zero latency typing? It's still experimental but it helps a bit. Especially on linux
A series. It might be a mistaken back-formation (two *series*, so one *serie*, right?). It might just be an accidental misspelling. Or -- very unlikely, I think -- it might be a very old English word, apparently derived from the French *série* (meaning series), and now mostly considered obsolete/archaic.
&gt; Matlab feels very outdated You might want to ask /r/matlab how they feel about that. It's expensive, but numpy isn't exactly a replacement for it, depending on what modules you're using. That said, a table showing the list of sponsors for PyCon and their annual revenues (created using python, natch) might sway things (I don't consider Microsoft, Hp, Redhat, Disney, Bank of America, Capital One, IBM, or Booz Allen Hamilton as having "nice quick web services") Another example is Tesla, they use a lot of Python internally [eg](https://www.teslamotors.com/careers/job/software-qualityassuranceandtestdevelopmentengineer-31641).
X-Post referenced from /r/programming by /u/kipi [How I solved GCHQ's Xmas Card with Python and pycosat (Explanation and source)](https://www.reddit.com/r/programming/comments/3wcyu5/how_i_solved_gchqs_xmas_card_with_python_and/) ***** ^^I ^^am ^^a ^^bot ^^made ^^for ^^your ^^convenience ^^\(Especially ^^for ^^mobile ^^users). ^^[Contact](https://www.reddit.com/message/compose/?to=OriginalPostSearcher) ^^| ^^[Code](https://github.com/papernotes/Reddit-OriginalPostSearcher)
Code is here http://pastebin.com/RNfv16KM#
code is http://pastebin.com/RNfv16KM#
You can make a dictionary with the words you want to replace as keys and the words you want to replace them as values. Then you can loop through the dictionary and use the built in .replace() method.
&gt; use the built in .replace() It won't work sometimes as expected if you have short words which can be part of longer word. Like if you want to replace word "at" and it would be replaced in words like "that", "attack", etc. Better use regex like re.sub('\\bat\\b', 'foo', 'that at test')
Thank you ggchappell
I tend to lean towards supporting your chief programmers security concerns. I however disagree with his language choice. Mind you at the moment Python is the only language I use to any extent, but I don't have to worry about code security. If you need to distribute an app securely Python is a terrible choice in my opinion. Now if you can be open with your code that is an entirely different story. As for C# I really do t think that is a proper answer, if cross platform is important. In that case I would develop as much as possible in C++ with separate native GUIs. I'm not a fan of cross platform GUIs either though that really depends upon the app and how interactive it is. One could keep an eye on up and coming cross platform languages to replace C++ but I'm not convinced that there is one ideal yet. 
Anything that helps up &amp; coming developers is a good thing. That said, I don't see *who* this video intends to help. It's pretty elemental, so it would only help absolute beginners. But it doesn't include any message as to *why* anyone would need these things. At best it tells them that something exists in Python, but they won't know why they should learn it or when they could use it.
This is a very good point that I didn't consider.
Because it sits on my task bar with it's stupid look driving me nuts. I personally hate their new design. It looks like they hired a designer straight out of the early 90's. Will I still use it? Yes. Will I be changing their shitty logo to something else? Absolutely. 
I've heard about stub files, but Google doesn't help, and I did not understand the relative PEP either. Do you know of any example open source repo / gist which uses stub files? 
About the code "hiding" part: [Nuitka](http://nuitka.net/) compiles Python to C++ code and can create easily deployable standalone executables. In active development but already usable.
Access to Theano and TensorFlow are the main reasons to use Python.
Take a look at Sframe - it's an open-sourced component of Graphlab meant to provide pandas-like functionality with disk-based data. Some conversion from csv will be needed. https://dato.com/products/create/docs/generated/graphlab.SFrame.html
[removed]
That was fast (pycosat): https://matthewearl.github.io/2015/12/10/gchq-xmas-card/
Pun intended? 
Not arguing with you, but examples have a very serious tendency to actually go into production, for the simple reason that the person who needs an example isn't an expert. If they knew, they wouldn't need an example.
look at the timing section from [here.](http://playground.arduino.cc/Main/AVR) You can get down to 62.5 nanosecond delays if you want. Out of curiosity, what are you working on? Also, you can get way more precise control of the pins by writing to their port registers. 
boy the image on the right hand side of that site is really distracting.
&gt; fun: social media automation scripts Can you elaborate a bit more? :)
Dunno what this guy's on about. One would never use a sleep for precision timing. This is when you harness the power of your microcontroller's timer and implement and ISR using said timer. All this being said, this isn't a Python thing. You'd want to use C/C++. That being said, using a microcontroller to implement a delayed one-shot is overkill. Are you doing other things on the controller?
It depends on what quality of software you're going for. Regardless, Python is amazing for prototyping algorithms and often times at the end, it's fast enough. I'm an aerospace engineer and hate Matlab and Visual Basic with a passion. They're bad languages with lots of problems. I code a lot of Python and wrote a massive 200k open source library in Python that's taken me 4 years. It's extremely capable, reasonably fast, and I'm still working on it. I'd never get half the features with C++ in the amount of time that I've spent and I still don't have everything worked out perfectly. Once I do, fine, I'll port some bits to C++, but until I actually understand things 100%, it's not worth it.
See this video as a reference practice these functions that exist in the Python documentation :)
But logging is https://docs.python.org/2/library/logging.html
Putting locks around print is going to do several very bad things. Print is a very slow, resource-intensive function, and you're going to end up making very poor use of your threads if print() is the determining factor in which thread(s) are running at any given time. From a design perspective, locking around single statements will lead to a maintenance nightmare. What if you want to switch locks? Lock libraries? What if there's a bug in how you use locks? Both of these problems can be fixed by following /u/baldarkajoe's suggestion: have one thread dedicated to user interaction, and feed information to that thread through one or more queues.
Awesome!
my eyes hurt
This is how you'd do it in plain C, but Python gives you a lot of power to think about programming at a higher level (via syntactic sugar, core functions and built-in libraries), and you should prefer to do so if there's no compelling reason not to. That's part of what it means to write "pythonic" code (the other part is just using conventions that work well for maintainability, readability and what the community prefers). For when it matters, built in methods are often faster than looping and doing logic yourself, but it depends on how you'd do each one.
I mean, Mozilla is a terrible organization, but it's nice they're giving money to django.
&gt; Dunno what this guy's on about. To be clear, are you talking about me or the OP?
Why do you say they're a terrible organization?
What has worked for me is to import only the "chunking/aggregation field" (date, in my case) for the whole file. Then count the rows in each chunk using groupby(). Use that to loop thru the data again, fetching all the fields, but one aggregate at a time. That is, each iteration will grab as many rows as it needs to make a logical unit.
&gt; I also feel that understanding the underlying mathematics is important as a practitioner Not always. Some people only need to use the end result. While I got the base level of introduction to the fluid dynamics in college I don't have the full base understanding of the higher level math involved in a lot of our fluid dynamics tools, I know how to use them to get a result. People don't need to have a full understanding of compilers to use GCC to make their Arduino work, for where I work neural nets are a means to an end and Matlab makes it the easiest to use.
Well, if /u/catholic_extremist really is a Catholic extremist, they might be upset that Mozilla got rid of Eich the homophobic CEO. 
How would you know neural nets are the right machine learning algorithm to use if you don't know how they work? NNs also have a ton of hyperparameters that greatly effect how they learn, which means they really shouldn't be used as a black box (partly why scikit-learn mostly avoids them).
You should probably mention in your description that the objective function or global key function for sorting is assumed to be the sum of the given key function applied to each component in the Cartesian product. Could you explain the gist of how your algorithm works? What is a `Grid` object, and how is `UniqHeap` used?
Woohoo!! This is awesome!!
Because we feed it data and it outputs the data we need it to. You use black boxes every day without questioning them.
You're confused about more than just this conversation, it seems. * Arduino implementations generally don't involve an OS. Dunno why you brought up Linux. * Calling sleep on a multitasking OS gives free reign to the scheduler. If you're worried about timing, sleep is the last thing you'd want to do. * There is dedicated hardware in many embedded processors just to implement precision timing. You seem completely unaware of this (really, NOOPs?) * RTOSes aren't a prerequisite for precision timing. No OS is a prerequisite, in fact. 
Screw NOPs. [The Story of Mel, A Real Programmer](https://www.cs.utah.edu/~elb/folklore/mel.html) ;)
He stepped down because the internet horde made a big stink about his personal, only-discovered-through-illegal-leaks beliefs. He didn't want Mozilla, a foundation that benefits all of humanity, to suffer from the boycott the mob was clamoring for, so he voluntarily stepped down. I'm pro-gay rights, but this whole thing left a very sour taste in my mouth. Violating privacy to name and shame people who disagree with you, hounding their employers, threatening an open-source non-profit, nothing progressive about that. I came out realizing that gay right advocates are not all noble liberals as I always thought, they can also be cruel screeching harpies. I also gained a lot of respect for Brendan Eich.
I understand the ideal being full control over the delay, but if your original concern was being under 100 microseconds why are you worried about the Python code not executing quickly enough? Why would you call sleep anywhere at all?
&gt; Meanwhile, remember that there were many employees at Mozilla who were uncomfortable with the knowledge of Eich's donation and what it said about him as a leader of an explicitly-inclusive nonprofit Not very inclusive since as you say there was a large rift in the company because employees felt uncomfortable with Eich's personal beliefs. Are there any other groups that make the employees uncomfortable? Are there any efforts to help employees open up to diversity?
Well, I remember when the feature was rolled out and they would miss a lot of pages. 
&gt; why is it that i can make a perfectly fine class without init [citation needed]
If you want to be inclusive then you need to include people who are different from you. Brendan Eich was to most inclusive person there, working with 600+ people who were antagonistic toward him.
I'd have fired him for inventing JavaScript.
I must say I am looking forward to Web Assembly. I feel like JS has changed so much since Eich first invented it almost 20 years ago now. Maybe it's just me but it seems like it started drawing ideas from different languages and it's now it's hard for me to follow js source code when I need to, but that may just be me looking at it from a python perspective.
Seems like you got the idea. Would be much more functional if you could take input from the user ;)
Agreed. The first few lines were a template for an MOOC class assignment, but if I were to do it on my own, I would definitely like to learn how to include input and randomization. I know you'd type comp = input('Rock', 'Paper', 'Scissors'). I'm not too sure about the random. Would it be random('Rock','Paper','Scissors')?
Simpler and better extendable version: https://trinket.io/python/c1531b29e1
Use `__init__` if you want to do something on instantiation, like populate some attributes.
Wrong answer. Google «Bobby Tables».
Well, this kind of thing should really go into r/learnpython, but here goes. Some of what I'm about to say is not *totally* true, but it should answer your initial question(s). The **_ _ init _ _()** function in python is used with classes. A **class** is like a recipe that describes how to produce an **object**. A call to a class **instantiates** one object of that class. When producing objects it is useful that we have a place for code that runs once when setting up each object instance. Let's look at the code below. The Alpha class has two methods, **_ _ init _ _()** and **print_name()**. The _ _ init _ _ method takes two parameters, **self** and **name**. The name parameter is the name we give to this object. Objects don't have to have names, it's just a decision the class designer (me) made. The lines beginning "#&gt;" are just the output produced when you run the code. class Alpha(object): def __init__(self, name): self.name = name print("Initializing Alpha with name '%s'" % name) def print_name(self): print("My name is '%s'" % self.name) a = Alpha('Foo') #&gt; Initializing Alpha with name 'Foo' b = Alpha('Bar') #&gt; Initializing Alpha with name 'Bar' a.print_name() #&gt; My name is 'Foo' b.print_name() #&gt; My name is 'Bar' The _ _ init _ _ **self** parameter is required. The _ _ init _ _ method is called by low-level python code after the object has actually been created. Since the class code is a generic recipe, the _ _ init _ _ code needs to know what object it is initializing. The self parameter is the object instance being initialized. Now the first line in _ _ init _ _ of Alpha makes more sense: the name attribute of **the actual object being created** is set to the value in **name**. Similarly for the **print_name()** method of the Alpha class. We need to pass a reference to the actual object we are talking about. Don't forget that when the class code is compiled there are no instances of Alpha anywhere. At runtime when print_name() is called it must be told which Alpha object we want to print the name of. This **self** parameter can have any name, but 'self' is traditional. Now, do we need an _ _ init _ _? Not really, but if you don't specify an _ _ init _ _ you still get one. Look at the Beta class: class Beta(Alpha): def print_name(self): print("This Beta is called '%s'" % self.name) c = Beta('First Beta') #&gt; Initializing Alpha with name 'First Beta' d = Beta('Second Beta') #&gt; Initializing Alpha with name 'Second Beta' c.print_name() #&gt; This Beta is called 'First Beta' d.print_name() #&gt; This Beta is called 'Second Beta' Put all the above code for Beta into the same file containing Alpha (and **after** the Alpha code). This has no _ _ init _ _ but it inherits from the Alpha class (class Beta(Alpha):), so it inherits the _ _ init _ _ of the Alpha class. That's why the code prints: c = Beta('First Beta') #&gt; Initializing Alpha with name 'First Beta' when creating the first Beta object. Now look at the definition of the Gamma object. This inherits from object so the only initialization code that runs is the low-level constructor code for any object. We add another method to set the name before we print it. So this class has no _ _ init _ _() method, but it still works. We just aren't running any initialization code specific to each object when we create it, which is why we have to have the set_name() method. class Gamma(object): def set_name(self, name): self.name = name print("Setting this Gamma name to '%s'" % name) def print_name(self): print("This Beta is called '%s'" % self.name) e = Gamma() e.set_name('First Gamma') #&gt; Setting this Gamma name to 'First Gamma' e.print_name() #&gt; This Gamma is called 'First Gamma' f = Gamma() f.set_name('Second Gamma') #&gt; Setting this Gamma name to 'Second Gamma' f.print_name() #&gt; This Gamma is called 'Second Gamma' Overall it's nicer to have _ _ init _ _ code to do this object initialization, as in the Alpha class. But you don't need to define _ _ init _ _. EDIT: Damn double underscores!
You seem to have a strawman definition of inclusiveness and tolerance. Which, of course, is easy to defeat, but perhaps you'd like to take a stab at defeating my actual views? Inclusiveness can be viewed in terms of how you behave toward others. For example: * Disliking the clothes a co-worker wears due to their poor fashion sense, but continuing to be civil and working with them anyway: success! * Disliking the clothes a co-worker wears due to their poor fashion sense, and actively seeking to have their preferred style of clothing outlawed: failure! And, of course, the person who first breaks this layer of civility-despite-disagreeing is also the person responsible for mending it. Thus, when Brendan broke it by lending public, verifiable support to Proposition 8, it was his responsibility to mend it, not anyone else's responsibility to just shrug and accept it. For a perhaps clearer explanation, reason by analogy to how conservative religious groups treat gay people: typically they preach that just feeling attraction toward a person of the same sex is not a sin, it's *acting* on the feeling that becomes a sin they'll condemn you for. The same standard is, ironically, in play here: it's not the personal views and feelings that are a problem, it's how they are acted upon that breaks the inclusiveness and tolerance of the society.
They changed it.
I even don't know what the heck this code does ? 
The set of potential answers to your query has a cardinality of 1: {Of Course}
still too complicated try this list = 'rock paper scissors rock'.split() a = raw_input('enter rock paper or scissors ') computer = 'paper' if list[list.index(a) + 1] == computer: print 'you lose' elif a == computer: print "tie" else: print 'you win'
To take this out of the theoretical you'll need to check your pins with an oscilloscope. I've done timing down to a 50 microseconds intervals using time.clock (on windows) for psych research. It ended up being largely irrelevant as human reactions are limited by synapse transmission speeds in the hundreds of millisecond range.
They fired him for being pro gay marriage... right...
Tolerance and inclusiveness require full symmetric participation by everyone in order to work. I'm OK with punishing symmetry-breakers in order to get it to work. You apparently aren't but you also don't seem to value inclusiveness or tolerance. 
You have to iterate over the lines and check the first element of line.split(" ").
BTW, mozilla.org is made with Django. https://github.com/mozilla/bedrock
Thanks for adding screenshots :)
Are you asking why some the test function, passes sorted(list1 + list2) as an ok solution? It's likely because the test function cannot analyze a program and decide whether it represents an algorithm for a problem that runs in linear time. It only tests whether or not it the output of your function is sorted. This is known as Rice's Theorem in computer science. Any non-trivial property of a program cannot be decided by a program, so the testing program cannot decide whether when given a program, if it's linear or non-linear.
Oh, so you're asking if your solution was ok when you used sorting? Probably not. I'm sure the point of the assignment was to test your understanding of either while loops or recursion. It passes the test because of Rice's Theorem, we can't really test if your solution is linear time, uses recursion, is written in English, etc., so the program just tests whether the output is correct. This is why when you used sorted, it passed even though your answer was trivially an answer.
I'd recommend Cocos2D. Cocos2D has been ported to many languages and platforms, but the original python one is still out there. It has integration with a physics engine and a scenegraph, which can help with a lot of simple 2D games. BTW - don't get too caught up in "real programming", all programming is "real programming".
Yes, though for the record I've read in the past here on /r/python people having success using Nuitika to compile code in a more obfuscated way. Not 100% secure of course, but at some point you have to accept good enough... or go full SaaS....
Interesting, so what punishment should Alice enact on Bob to deal with her anger in this situation? 
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules there before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." If your question is about homework, show them that you've tried to solve your problem in your post and you should get all the help you need. Cheers &amp; best of luck with Python!
Alice should feel free to rally supporters against Bob's attempt to use the law to enact his personal beliefs, and to apply social pressure to Bob to stop doing that in the future.
And reason you split list instead of creating a list? list = ['rock', 'paper', 'scissors', 'rock']
And at what point should Alice reign in the social justice forces she's targeted at Bob?
It looks like you're accessing your form incorrectly. The form traceback: Traceback (most recent call last): File "/home/chombreb/public_html/A3/get_invoice.py", line 11, in &lt;module&gt; black_cost= form["blackquantity"].value File "/home/chombreb/public_html/A3/cgi.py", line 598, in __getitem__ raise KeyError(key) KeyError: 'blackquantity' Is blackquantity a string? Once you've set black_cost to the quantity, you can manipulate it any way you'd like (as in adding tax, calculating price). So, examine the traceback more, and figure out what "KeyError" is telling you. 
Hey swifttuna , I really appreciate your time to get back to me, my TA's from class didn't even try so thanks for that. This is what my python looks like right now : #!/usr/bin/python import cgi form = cgi.FieldStorage() fullname = form.getvalue("fullname") salutation = form.getvalue("salutation") address = form.getvalue("address") blackquantity = form.getvalue("blackquantity") greyquantity = form.getvalue("greyquantity") whitequantity = form.getvalue("whitequantity") olivequantity = form.getvalue("olivequantity") black_cost= form["blackquantity"].value grey_cost= form["greyquantity"].value white_cost= form["whitequantity"].value olive_cost= form["olivequantity"].value print ("Content-Type: text/html") print ("") print ("&lt;html&gt;") print ("&lt;head&gt;") print ("&lt;title&gt;Invoice&lt;/title&gt;") print ("&lt;/head&gt;") print ("&lt;body&gt;") print ("&lt;h2&gt;Invoice&lt;/h2&gt;") print ("&lt;p&gt;") print ("The user entered data are:&lt;br&gt;") print ("&lt;address&gt;") print ( form["salutation"].value + "." + form["fullname"].value + "&lt;br&gt;") print ( form["address"].value + "&lt;br&gt;") print ("&lt;/address&gt;") print ("&lt;br&gt;") print ("Your purchase comes to" + black_cost + " " + grey_cost + " " + white_cost + " " + olive_cost + ".") print ("&lt;/p&gt;") print ("&lt;/body&gt;") print ("&lt;/html&gt;") I tried using int(black_cost) earlier but it just isn't working out for me, so I have no clue how to multiply it. The "KeyError" also only appears when I don't add anything to the form for a certain product. Any suggestions of how to fix this?
londons not that far away :)
About your edit: for some free reason people on reddit were never able to grasp the fact that the majority of people against gay marriage were simply against calling it marriage. That's it. It's not as if they thought gays shouldn't be allowed to be together. I know you understand this, but I just had to rant a little bit here. How reddit treated gay marriage had led me to unsubscribe from pretty much every major sub. 
&gt; Or you could build both with C# (or Java), but they are not the best tool for crunching numbers either. It's extremely rare for code in either of these languages to fall back to C++ for speed ups. They are, generally speaking, 'fast enough'. When you do... you're right, it's just as troublesome as with python. ...but it's far far more common in python to find your application is too slow because cpython doesn't inline loops or function calls, and pypy isn't a drop in replacement because (startup time something / some reason here / py3 something something / some native module something compile something something). I've personally had to do this several times, and it's annoying, and makes the problems of distributing python code even worse (even if you use cython). C# and java basically don't have this problem. Go doesn't have this problem. Hell, even *javascript* doesn't have this problem because of the insane amount of money google and microsoft and apple have poured into optimizing the runtime. It's just that python is slow. Use it where it's appropriate to, and with foreknowledge of the caveats involved~
You gotta do your own homework.... But your form["..."].value variables can't be accessed when empty. Maybe you can do some sort of check against that? If olivequantity != Null: Olive_cost = form["..."].value Else: Olive_cost = 0
I like channels, except this bit: &gt; One thing channels do not, however, is guarantee delivery. If you need certainty that tasks will complete, use a system designed for this with retries and persistence (e.g. Celery), or alternatively make a management command that checks for completion and re-submits a message to the channel if nothing is completed (rolling your own retry logic, essentially). Won't that mean that some requests might not get a response?
First, if you want someone to help you, you must be more specific when you say "doesn't work properly". Usually by showing some output and why you think it isn't working. I'm guessing, but I believe you think your code isn't working because the line: obj.printName("kitten") doesn't print "kitten" but "bob". That code is working correctly. You are confused in thinking that self.name is the same as name. Note the parameters to your printName function: "self" and "name". As we saw, "self" is the first parameter to a class instance method and is a reference to a particular class instance. The second parameter "name" is a string you pass into the method. The "self.name" and "name" references are **different** references. Your code instantiates a randomName object: obj = randomName("bob") Looking at the init() method we see that the parameter "bob" is used to set the instance attribute "name": self.name = name That means, for this instance "obj", self.name is "bob" (in the method) and obj.name is "bob" anywhere "obj" is visible. When you pass the "kitten" string to the printName() method: obj.printName("kitten") the parameter "name" has the value "kitten". But the "self" parameter is automatically filled in with the "obj" reference from the call (**obj**.printName("kitten")). So when code inside the printName() method references self.name it access obj.name. The "name" parameter is ignored - you're not doing anything with it. Also note that you are using "old-style" class definitions: class randomName : This is fine for just paddling around and learning things, but the old style class definitions are deprecated which means they will go away in future python versions. Better to use new-style in any production code you write: class randomName(object): There are also slight technical differences between the two styles, which is another reason to write only new-style classes. 
The problem with your code is that it doesn't run in linear time (which was one of the requirements), i.e. your code is slower than their solution. The difference is that you're not using the fact that the two lists are sorted to begin with.
First of all, you really need to delimit your records in product.txt rather than having them all strung together. Split is the function you're looking for, but again it will split based on whatever delimiter you use and the way you have the file formatted you can only use spaces as delimiter, so without some manipulation it's going to be difficult to get THAT data to do what you want. For your search function to work you must divide the file contents into records and there are MANY ways to do this. I'm going to show you just one VERY simple method for doing what you need. def main(): f=open('products.txt') fileContents=f.read() allRecords=fileContents.split(',') record=[] record=allRecords f.close() endit = False while endit == False: print('1: [D]ispaly all products:') print('2: [S]earch products: There are ' + str(len(record)) + ' products to search') print('3: E[x]it:') s=input('Enter Selection &gt;&gt;:') if s == '1' or s == 'D' or s == 'd': print('****************') print(fileContents) print('****************') print() print() elif s == '2' or s == 'S' or s == 's': q=input('Enter Product Number &gt;&gt;:') if q.isnumeric(): if q &lt;= str(len(record)): print('****************') print(record[int(q)-1]) print('****************') print() print() elif s == '3' or s == 'X' or s == 'x': endit = True else: print('That\'s not a valid menu option!') main() This will only work if you delimit your text file with a comma between each record. Your products.txt file should look like this: 1 doodad 3.50 50, 2 gizmo 1.75 30, 3 gadget 2.99 45, 4 lipstick 4.25 75 There are ways to do what you want with one big string, but no one EVER stores data that way, there is ALWAYS a record delimiter and usually a field delimiter as well. But I'm assuming you are just starting out, so this should at least give you something that works so you can see how it works. If you are using Python 2.7x this will not work because the input and maybe even the print statements are different. I think 2.7 uses raw_input instead of input. In the future it's always good practice to let people know what version you are using so they can provide version specific help. This code works in Python 3.5.
Have a look at Pyramid &amp; Django: http://www.pylonsproject.org/projects/pyramid/about https://www.djangoproject.com/ 
What a crock.
ImportD (the D is for Django) http://importd.readthedocs.org/en/latest/ it's minimalist, meaning you can get started right with one file, but it's pure Django, with all its tools.
Wow. I don't think I ever read their intro before. They spend more time talking about Django than they do Flask. They're pidgeonholing themselves into a Django knockoff with their own website. Edit: Okay, this isn't the official site. I stand by what I said, this really isn't a good showcase article to make Flask not seem like the underachieving little brother to Django. You Flask fans should really be directing your downvotes to the guy who posted the inferiority complex article.
+1 for flask being the easiest framework to get started with. A flask app can be comprised of a single file even. The caveat being that more sophisticated applications can be trickier than Django, for example, because you have to integrate all the parts (ORM, templates, etc.) yourself. From the flask docs, this is the most basic flask app: from flask import Flask app = Flask(__name__) @app.route("/") def hello(): return "Hello World!" if __name__ == "__main__": app.run()
I hope they're not actually going to submit this for consideration. I'm all for diversity but we don't need politics in our programming languages.
Why should they add a broker when there are so many other tools out there that already do it so well? Would you want them to add a homegrown database and cache backend as well? Like I replied to the parent, this appears to be using the same type of backend architecture as how Django currently handles databases and cache backends, it should be fairly easy to roll your own if you don't like what's shipped, then you can choose the software you want in your ecosystem.
This is a silly post. They are not replacements for each other as they do different things. Borderline trolling especially looking at post history.
I'm all for diversity and being accepting of all people regardless of &lt;reason&gt;, but PEPs are for technical proposals, not philosophical ones. I don't want python to become political. 
I think the chief engineer has a few points. OTOH, And depending on the project, an embedded interpreter can join the best of two worlds (e.g. stuff can be implemented in script on top of the core and be later put in the core if needed)
&gt; easiest web framework &gt; Django Please don't suggest Django as the easier web framework, haha. It is a mature project, but it can be very difficult to start with (regex URL patterns are a requirement, constructing a view can be difficult, you might need to collect static files and constantly re-edit `settings.py`, etc)
The Python software fundation already have [diversity rules](https://www.python.org/community/diversity/)
I had to follow 3 tutorials to get going, and since its been a while, I'll probably have to do it all over. Id say ditch Django and do Ruby on Rails. 
+1 for pyramid. 
Can't believe no one has mentioned http://www.cherrypy.org even more light-weight than flask
B-b-b-but rails isn't written in Python! Thus it must suck (Jk, although op did ask for a Python framework). 
&gt;Instalation
No.
Why does each paragraph not start on the same line? The indentation is bugging my eyes.
OP asked for *easy*, not necessarily *simple*. That said I think web2py is neither. When I look at the docs of all the other suggestions here (Flask, Bottle, CherryPy, importd, Pyramid, Django) most of them slap a piece of code basically directly in my face and get me started, even Pyramid and Django point me straight to their tutorials with just a few more clicks. I spent like 5 minutes on web2py's site and still can't figure out how to get started, all I found were walls of text with no meaningful code.
&gt; even more light-weight than flask In what regard?
&gt; A Diverse Community is Key for Great Minds What a strange assertion. 
I'm partial to tornadoweb. 
I think all the web frameworks these days have pretty decent docs... but I do like the layout of the web2py manual a lot.
Yea, I know. I probably broke the rules by mentioning it, but that's how I feel right now. Frustrated with Django. Lol
A Django project can be in a single file as well. Not that you should do it. But a single file doesn't necessarily say anything about the complexity or ease of use of a framework. 
&gt;OP asked for *easy*, not necessarily *simple*. That said I think web2py is neither. Your right, I meant easy. &gt;When I look at the docs of all the other suggestions here (Flask, Bottle, CherryPy, importd, Pyramid, Django) most of them slap a piece of code basically directly in my face and get me started, Apples to pineapples really. Flask, bottle, cherrypy, and pyramid all default to a "micro framework" architecture which is great for some projects but horrid for many others. Have you any XP building a full site with these tools? There is a lot more than just routing and a template and none of these frameworks require or even prescribe a particular code layout meaning two Flask projects by different devs could have completely different architecture. When using a micro framework it is critical to completely understand the request-response lifecycle of your application. &gt; even Pyramid and Django point me straight to their tutorials with just a few more clicks. Yeah, but pyramid is schizophrenic when it comes to routing declarations, and django basically flips you there bird when you ask "how do I deploy this?" Django has gotten less problematic with upgrades between versions but backwards compatibility is hardly their strong set. &gt;I spent like 5 minutes on web2py's site and still can't figure out how to get started, all I found were walls of text with no meaningful code. So you are illiterate, trolling, lazy or some combination of. The main docs are literally 2 clicks from the front page. Start with the link on http://web2py.com where it says "Extensive docs" http://web2py.com/init/default/documentation From there, under official documentation, there is the official "online book" http://web2py.com/book Now if you wanted to be extra lazy, you could have just downloaded the source distribution, then use the built in example app to get started poking around. Here are things web2py does better than others * supports nearly all db (unlike django) * fewer explicit imports or redundant routing declarations (some people consider this magic) * built in runtime, no need to also deploy gunicorn, uwsgi, modwsgi. * applications can be bundled and distributed easily * template system more like jinja2 * NO ORM!!! (They suck, and if don't learn proper SQL, you suck) * front end framework included but optional * one click updates (still beta feature) * built in IDE with debugger/break points * example app shipped with the source * docs on how to deploy * support for static files In production The funny thing is, web2py is far from perfect and had a lot of valid criticisms that can be leveraged agaisnt it just by reading the example docs yet you fail to cite a single factual issue with it. Having XP fixing bugs in the core framework myself, I have a p great idea of the pain points of web2py's architecture and can still confidently recommend it for many projects where there is a high desire for lower friction and high productivity with a minimal amount of developer resources. 
Flask is not a very small framework.
This is quite amazing. Seems like the right balance for people who desire to *sometimes* have the agility of flask or bottle but still know they can later expand their project into the django framework.
Easiest framework? If you are looking for framework with easiest learning curve, go with Flask (as compared to Django.) I started with Django but gave up it after few days. I didn't have any idea where I was going. Then I switched to Flask, and within days, I was able to make a (a very primitive) app. As for additional functionalities, you can always pick extensions depending on your needs and docs for most extensions are mostly around 30 pages. One of the best thing about Flask is that you can learn all of it with 'modular approach'. Besides, working with Flask will make your switch to Django a whole lot easier, if you feel like switching to Django. And yes, micro doesn't mean it is any less powerful. It only means that Flask ships with only 'kernel', on top of which you can build anything you want. 
I would also recommend Flask. Here's a [Flask Tutorial](https://pythonprogramming.net/dashboard/#tab_webdev) if you are interested.
Google app engine is quite easy to learn. Also there is a good web development course on udacity.com
Heh, good luck. There's too much competition now. Python is a ship that has sailed for juniors. I barely kept up, despite pressure from any angle that prevented me to do so.
working remotely, by it's nature, is a bit more of a risk than working locally. Most companies assume that senior developers are better able to handle it, and more reliable working from home.
&gt; If they say no, you know what skills you need to pickup on to work with them. By the time he picks up those skills, the market has changed. Seriously, we all know how hard is to keep up with technological progress in development. What makes you think that someone can just jump in? Plus, even if he picks up those skills, companies hire by "provable experience in commercial software development". You don't get hired anymore with skills from your spare time hobby learning.
Django projects are split between folders and files to make them easier to read and maintain, not at all because of technical necessity. You don't need to use "startproject" or "startapp". These are just shortcuts that create a typical file structure. A simple app (some settings, one or two models and a couple views and url patterns) will easily fit into a single file. Zero hacking required. You probably still want to put your html templates in another file though.
Look for something in IT operations or data center operations where you can establish yourself by developing automation tools. And join, or start, an open source project where you can share and document your coding/problem solving skills through code. Then keep applying for more senior spots.
Flask is awesome for those just getting started. Flask is also awesome for the more advanced who don't want to (or can't be) constrained by a framework. Flask gets out of the way when you want it to, and is always right there to help you when you need it. Huge +1 for Flask from me.
Could you post this again when you've got round to adding the documentation?
That seems sensible. 
If you can afford the time/money to go through a reputable boot camp, they're usually pretty good about facilitating job placement at the end. In any case I'd definitely work the local scene for meetups, hackathons, and I'd look into open source and having a visible side project. If you're honestly good, you can make a small reputation for yourself and then get hired from that. It won't even necessarily take all that long. One tip: you might look at test automation. Python is commonly used there (Java being the other big language in that space) and I have plenty of first hand knowledge as to how hard it is to find solid software engineers to work on it. However, the pay is in parity with any other SWE job nowadays as long as you get either a SWE/SDE title or a Software Engineer in Test title (but be careful of taking a QA title, that may end up being a sidetrack and a salary/opportunity limiter). Jr/intermediate is typically just fine for entry into that. It's relatively easy to leverage that experience to move over to full stack or tools development for later jobs. Alternately, there's a very good career path in framework/test infrastructure development if you stick with it. 
Thanks, I've updated this.
I use emperor too, but by hacking the uWSGI service. If you have found a neater way, please share.
&gt; Everyone has to jump in sometime. True, but seriously. I am a competent, old time python programmer. I don't know anything about java. How much chance do you expect me to have to get hired for a java position? &gt; And, at least in Silicon Valley, having proven skills by way of a well-populated github repo plus a friend to recommend you will indeed get you interviewed. It's up to you from there. The world is not silicon valley. &gt; Your struggle isn't necessarily everyone's struggle. We hire people from other disciplines into the industry commonly, and people from boot camps more commonly still. You hire people because they have the training you need (that is, the local universities have been delivering people you can employ) and they can solve a problem you have and that you can delegate to cheaper workforce while the highly paid one can take other things. A company takes a gamble when it hires you, and it's a gamble that it takes considering the offer it has. There's plenty of people available, and CVs received for a developer position are generally in the hundreds. Every discipline or technology goes through an expansion sigmoid curve. You have to jump on the bandwagon before it starts going up. If you jump on it when it's at the inflection point, it's already late. 
Most programming jobs are teamwork. All competent supervisors are looking to build a team where people comlement each other. If you advertise for junior position, you are guaranteed that no-one with *any* experience will even consider applying. So, in practice; All job ads are "want" not "need". *Any* sane company (and person) will hire the junior good guy who is willing to learn if they show the potential. People who make the final call usually have a budget - not a fixed headcount, so in quite a few a cases hiring the jubior guy with junior's salary actually seems like a really good option. Remote work from day 1 is a red flag, and rightfully so. If someone offers that to an employee with no track record of productive remote work must be really desperate. You see, every new hire requires a ton of assistance - the speed of ramping up the productiveness of a new hire is very personal, so a junior guy with no experience working remotely - so that there is no-one helping on-site is quite a risk as the starting at a new job really isn't something you can learn by other methodnthan trial and error.
You can do a trick with negative indexing in lists: from random import randrange hands = ['rock', 'paper', 'scissors'] results = ['tie', 'lose', 'win'] hand = input('pick a hand: ') if hand in hands: user, comp = hands.index(hand), randrange(3) print('I chose:', hands[comp]) print('You', results[comp - user] + '!') else: print(hand, 'is not a hand.')
Let's keep this discussion positive. There are people who will employ you for working on X cause you know Y. And if you know Y, it's totally worth it to at least check out X since the position offered deserves it.
As a Django dev, probably NOT Django. Its powerful, an complete, but having looked at Flask tutorials, that's easier (to get started with at least). Django bnefit's from the batteries included aproach, which means building a larger project it will make many of the choices for you, and you won't have problems integrating stuff. The Django Admin however is a great tool for buiding a certian type of site. If your needs closely match that, it might be the one to choose. 
&gt;supports nearly all db (unlike django) Django can support practically and DB, you just need to install plugins, which isn't difficult. &gt;fewer explicit imports or redundant routing declarations (some people consider this magic) I'm not sure what this means specifically, but from looking around it seems that all functions in a controller are immidiately considered views. This seems to very much break "explicit is better than implicit" &gt; built in runtime, no need to also deploy gunicorn, uwsgi, modwsgi. That's true for practically everything, from flask to django. Either you're going to be using the builitin for testing, or you're going to be using gunicorn and wsgi on apache [which they tell you to do](http://web2py.com/books/default/chapter/29/13/deployment-recipes#anyserver-py), and you still need to configure it for production &gt;applications can be bundled and distributed easily Which is true of practically anything stored in a git repo &gt;template system more like jinja2 As opposed to jinja2 or the django engine, which isn't that different, only less powerful? &gt;NO ORM!!! (They suck, and if don't learn proper SQL, you suck) lol, you shouldn't be writing SQL in your webapp, it'll lead to security vulnerabilities &gt; front end framework included but optional Okay, but I can't find any documentation on this, and that doesn't sound like a plus to me &gt; one click updates (still beta feature) meaning... &gt;built in IDE with debugger/break points That looks disgusting and is, if anything, only marginally better than Flask's debugging tools &gt; example app shipped with the source okay, I guess that's nice &gt;docs on how to deploy [huh?](https://docs.djangoproject.com/en/1.9/howto/deployment/wsgi/) &gt;support for static files In production Like literally everything else
Glad someone pointed this out. App engine (webapp2) is super straightforward to start out with, it has really powerful built-in capabilities such as user auth, jinja2 support, and the datastore, and deployment is easy. Having choices already made for you and good docs is nice when just starting out... not to mention a lot of design decisions by GvR. Still, it forces you to develop in Python 2, which isn't great.
I use python all the time at work, but I'm a system administrator so can get it installed (or installed by default) on most of the systems I use. You could probably get permission to install it though if your job is not in IT/software development, it may be more difficult. They may not want you implementing any solutions in python and then leave the company and have unsupported software. You could try something like this http://spointeau.blogspot.com/2013/09/python-install-without-admin-rights.html, though I'm not sure how well it would work or if your IT would be tracking these type of installations. Attempt at your own risk. 
PeeWee can "figure out the model from the database": http://docs.peewee-orm.com/en/latest/peewee/database.html#generating-models-from-existing-databases I've used PeeWee on several projects and the code is solid and it's author is thoughtful and responsive. I can't think of anything that prevents python metaprogramming from doing what MassiveJS does in JavaScript, i.e. auto-binding functions to SQL files on disk, it just hasn't been done, to my knowledge. It's a great idea though, which is what brought me to MassiveJS. Postgres.py would just need a small pull request for this: https://postgres-py.readthedocs.org/en/latest/# And while OT, see aquameta if you're interested in stuff like this: https://github.com/aquametalabs/aquameta 
In terms of documentation and real project examples I think flask an django fall into the category of easiest to learn. Because the documentation and community surrounding these projects the entry level is low. Flask (and flask style frameworks) are the most visually intuitive where urls are directly mapped to controllers -- in the same file. Use case is also really important. If you are looking for an easy way to get started rendering static pages on the server side django is the easiest, but if you need some asynchronous/event driven code twisted is the easiest. If you're looking for something with very intuitive routing then aspen might work for you. Learning a framework is another struggle. I'm not sure how you learn best, by example, through concepts, guided tutorials, one on one QA, through browsing the code base. The different python web frameworks have different strong points in all of these categories. In general you have to start building apps before you know which is best for you.
Lol
I am also a competent, old-time Python programmer. I got hired about a year ago, by a big company you've heard of, for a job that's involved Java, Ruby, Go, and JavaScript. Almost no Python. I did have Java experience (a long time ago) on my resume, but no Ruby or Go. They didn't care. They assumed that if I could make it through their interviews, I could pick up more languages. They were correct.
Good point. The project's antipathy towards Python 3 is... puzzling, at best. I struggle with that a bit myself. Still, they pack so much value into their framework, so much that I don't have to recreate myself (what others call 'magic') that its hard not to recommend them.
To expand on your options: try looking at QA / Automation jobs, or even DevOps jobs. While software development may not be your title, there's a lot of development required in these positions, and Python seems to be the most popular language for doing these things now. Juniors are especially welcome in these roles as they're a lot more well-defined than some development positions. As an added bonus, you'll have a more rounded resume when it comes time to shop for a straight development job.
Thanks everyone for the advice! There's a Python Users Group about a 30 minutes' drive from here -- I'll check that out. I'm open to the idea of starting in an office and transitioning to remote, so long as I don't have to relocate.
Perhaps you could try reading that in an LGBT context. Just a thought.
I second DevOps/automation. Companies are desperate to get help in this area. While QA is a hot field, it's not for everyone. In many companies, QA is seen as "other" than regular devs and are treated differently. It's also difficult to get out of and back to regular dev if you decide you don't like it. I'd say QA is a good way to go if you really have a passion for it. Unfortunately, in the situation you're in, you're likely going to have to prove yourself a bit before you're able to land something. Both Ansible and Salt Stack are Python projects that you could either contribute to directly, create extensions for, or just use. Another way that you could accomplish "proving yourself" would be setting up infrastructures for a local club/charity/church and open sourcing how you did it ([without posting passwords and keys, of course](http://12factor.net/config)). A great starter project is creating some auto-setups for your own machines. It really is nice to be able to rebuild your dev machine exactly how you like it by just running an Ansible playbook on it. Even if DevOps ends up not being right for you, the practice and exposure to infrastructure you'll get out of this will be incredibly valuable. Being able to discuss options and pros/cons of different approaches to DevOps and infrastructure will really help you come off as more than a beginner in an interview.
Definitely Automation! I think it's a perfect start for Juniors especially if you like Python. You will get to use/learn about proper Software Dev, work with teams, create tools that people will actually use and it's great way to learn the about working in companies. I also think it's great because it's usually not difficult work and allows you learn so many new things and create cool projects. The deadlines are also so lax/almost non existence. Devops is usually close to Automation but could require more mundane things, just in my opinion. (If you just wanna code)
You can install python 3.5 without admin rights for your own user.
Not necessarily, in most cases they had a track record doing work at that company. 
but they're good news !! https://www.reddit.com/r/programming/comments/3whff4/django_awarded_moss_grant_websockets_background/ Django received a grant to work on the integration of websockets and REST service in the core.
What's funny, I can't install python using their installers at the official web site. But I found out I can install Python using miniconda/Anaconda. Yeah our IT dept sucks...
&gt; By the time he picks up those skills, the market has changed. Seriously, we all know how hard is to keep up with technological progress in development. What makes you think that someone can just jump in? Maybe this is true in webdev land, where you can take a nap and at least one Javascript framework will rise and fall in that time, but I'm not sure this holds in general for software engineering as a whole. Twisted is going on thirteen years old now, and we're still using it for a lot of high throughput network applications, Ansible and Salt are three or four years old and are still considered cutting edge in many camps, and at least in the closer-to-the-system world, most Linux/POSIX development skill, again for example, doesn't change *that* much from year to year.
&gt;Django can support practically and DB, you just need to install plugins, which isn't difficult. While mostly true, not a default. Additionally not all features are supported on all DB. Micro-frameworks which take no opinions on what will take care of connection pooling etc, are a lot more flexible in this respect. This is why I greatly prefer SQLAlchemy Core over _any_ ORM including SQLAlchemy ORM. Web2py's Database Abstraction Layer (DAL) is a similar concept to SQLAlchemy Core, but a bit more friendly/easy to use for your average developer. Also take a look at how many DB's are officially supported, not even 3rd party extensions. http://www.web2py.com/books/default/chapter/29/06/the-database-abstraction-layer#Dependencies I have personally tested the hell out of the DB2 connector and fixed connection pooling for all DB connectors in the DAL. &gt;I'm not sure what this means specifically, but from looking around it seems that all functions in a controller are immidiately considered views. This seems to very much break "explicit is better than implicit" Then you know exactly what it means. That being said explicit is **better** than implicit, not the only way or right way to do things. It's a guideline, not a rule. Now you could ask "why when no one else does it that way?" The answer is historical and related to who developed web2py and for what reasons. To summarize, web2py is used as a teaching tool by some colleges. This means they hide some things that new programmers don't care about to greatly reduce friction of application development. Django's system however is far from DRY which is a worse offense IMO than being implicit with framework methods/APIs. &gt;Either you're going to be using the builitin for testing, or you're going to be using gunicorn and wsgi on apache which they tell you to do, and you still need to configure it for production No you are not getting it. The wsgi server shipped with web2py is _production ready_ and you don't also have to figure out guincorn/modwsgi/uwsgi. Additionally they ship deployment scripts and support for other WSGI runtimes. So moving from development to production has less friction compared to other frameworks, and in the context of OP's desire for something "easy" having to use a completely different deployment in production because all of a sudden you have to change how you host static files is odd. Flask doesn't even get that silly as it is trivial to just bypass the reverse proxy and just serve static flies as django _only_ supports. &gt;Which is true of practically anything stored in a git repo False. You conflate the distribution of source, with the distribution of the finished application. Web2py's admin interface both lets you compile the app to cache templates and other things for a performance increase, but it also lets you bundle the app into a zip file which can be distributed and reinstalled on a another instance of the web2py admin interface. Distribution of a complete program in Python is by far a totally simple affair and the more 3rd party libraries you involve in your project the more likely one of them will have a Cpython dependency. This means you now have a _system_ level dependency not just a _lanauge_ level dependency. virtualenv/pip only handle _language_ level dependency management. This is why people have started bundling applications in containers. While git makes the distribution and merging of source easy, it does not (trivially) enable the distribution of completed applications. &gt; django engine, which isn't that different, only less powerful? Exactly. The django template language is just clunky compared to other offerings. &gt;lol, you shouldn't be writing SQL in your webapp, it'll lead to security vulnerabilities Wow, so ill chalk this up to total inexperience here. You do know the way to send/receive data with any of the major RDBMS is with SQL? And that an ORM just generates SQL often poorly optimized for the data access? An Object Relational Mapper is designed to take objects, and map them to tables for persistence of data. It is meant to make saving/retrieving data to/from disk trivial. It also never does a good job of understating what a good data structure _should_ look like, it's a naive tool even at best. More of a machete than a straight razor. As I mentioned before, Web2py's DAL and SQLAlchemy Core both provide connection pooling, support parameterized queries, and leave it up to you to sanitize your input (for the most part). These tools provide plenty of functions to generate valid SQL for you as well. What you shouldn't be doing is using raw SQL statements with simple string concatenation to build your queries from un-sanitized user input. See the OWASP project for more info on SQL injection attacks (which is what you are alluding to). https://www.owasp.org/index.php/Top_10_2013-A1-Injection &gt;Okay, but I can't find any documentation on this, and that doesn't sound like a plus to me Well you must not have read through the documentation much at all then. Here are some relevant links: * http://web2py.com/books/default/chapter/29/05/the-views * http://web2py.com/books/default/chapter/29/03/overview * http://web2py.com/books/default/chapter/29/11/jquery-and-ajax From there you are free to use the included bootstrap template and jquery stuff or replace it with your own. The fact that they go ahead and include jquery/bootstrap with a sane template and working code is a huge boon to productivity for a "one man dev team" or any one beginning and struggling to keep _every_ relevant library in their head. If this isn't what you want, then that's fine. It is _easy_ though. &gt;meaning... The framework can upgrade itself with the click of a button. http://www.web2py.com/books/default/chapter/29/14/other-recipes#Upgrading Makes maintenance of a project nice an easy because they take backwards compatibility seriously. Maintaining old django projects can really suck if they were not updated with releases and instead have just been left to bit-rot. &gt;That looks disgusting and is, if anything, only marginally better than Flask's debugging tools You are looking at the debugging tool bar. Web2py ships the codemirror web based editor/ide. http://codemirror.net/ Besides a debugging tool has 0 need to "look pretty" as that is wasted engineering effort. It needs to work. End users should never see it any way. The reason an ide included is great is because it makes development and debugging not only easy, but in the context of OP or other new users doesn't require downloading/installing/configuring another editor/ide. The number of plugins it takes to make Atom usable for python can be a show stopper for people who are looking for something easy to get started with. &gt;&gt; example app shipped with the source &gt;okay, I guess that's nice You bet it is. It's not even a completely trivial app that makes you thinking "that's nice but how do I actually do shit." It is a full blown app. &gt;huh? Well that is a cute link, but it is not even close to _all_ the info you need to run your app in production. http://www.web2py.com/books/default/chapter/29/13/deployment-recipes Compared to web2py's docs on the subject, django's docs are anemic, sparsely organized, and lacking in real world complexities. &gt;Like literally everything else https://docs.djangoproject.com/en/1.9/howto/static-files/ As noted, the suggested method for development is only fine for development. This is not the case in web2py (but nothing stops you from doing it that way either). For all the good in web2py, there is plenty of bad though. The thing is, you won't typically run into those corner cases as new dev which is why there are only a minority of instances where I _would not_ recommend web2py. 
I remember when I got comfortable enough with Python to consider myself to know pretty much all of the grammar and general practices and enough of the standard library. And that's also when I realised that "what I don't know" about Python isn't even what I originally thought I didn't know. It's not about knowing one's way around a language, it's about knowing one's way around data structures and problem solving. It's also when I stopped considering myself to be a "Python programmer" and began considering myself a programmer in general. I know Python better than any other language, but I refuse to ever apply Python to a problem that it's not the right tool for. That gives me the opportunity to grow in many directions. What makes me feel like I'm molting out of a "Junior" shell is that I'm not even thinking about Python when I do my job. I think about how to decompose a problem and communicate a possible solution. The actual programming, whether in Python or another language (whichever fits best), makes up a minority of the work.
In readers_writer, the python one takes a full second longer than the go one, because the go one has `time.Sleep(time.Duration(rand.Intn(4-1)+1)*time.Second)` while the python one has `sleep(randint(1,4))`. That is, the python one picks a random number of seconds to sleep for (min 1, max 4), while the go one picks a different random number of seconds to sleep for (min 1, max 3).
i've just followed [this guide](http://uwsgi-docs.readthedocs.org/en/latest/tutorials/Django_and_nginx.html) with no hacking... just check files and folders permissions and run commands with sudo
This advice helped me a lot: communication is the one of the most important traits of a good programmer. Use gist.github.com or other similar tools to communicate your questions and ideas. Make it a habit to share snippets of ideas in code, even if you write partial or pseudocode. It always beats sentences of explanation (which may also be useful to share as well!)
None of what you says takes into the context of the fact that OP asked for easy. Web2py is easy. You just happen to disagree with some of it's philosophy, and that's fine. It doesn't mean web2py is bad, just you probably wouldn't like it and likely have enough XP to not need its benefits. No one is advocating "raw" SQL. I'm anti ORM and they're not the same. Not sure why you think that really. Bring a "teaching tool" is really not such a bad thing. As I said that's its roots. As a side benefit API compatibility has been a high priority as well as clean and well documented source code. Additionally lots and lots of eyes looking at it and trying to tinker. The community has done a p good job taking over the projects as the original author is no longer the main commiter. There are lots of great features hidden in web2py, give it a spin be fore discounting it so quickly. Or don't, I don't care either way :-) 
It can be difficult sometimes. I've once had to say to management, "Python is not the right tool for this and I'm not comfortable enough with C++ to do it in the time required. Ideally we borrow an engineer from another team to help." Though I'm lucky enough to be surrounded by eager to help geniuses and management that "get it" so I think it went over better than it could have at some companies.
The only thing I like more than Python is using the right tool for the job.
I'm not sure if plot.ly offers this service. If the user can input any number, you need a server running. I know bokeh offers this. If the user can only input some preselected values (i.e. A drop down menu) you can also look at ipywidgets-unsupported. 
Anytime, glad to help and thanks for adding it to the README. :) 
You are absolutely right, i will make it clean. The api is confusing. Overloaded operators are just wrappers around get method basically, i should document them . I usually use them like pipe ( they are not for that purpose obviously ) but in this case, i will add the proper methods. I will implement mapping soon. Still some functions are not integrated, like detaching, deleting or adding items into underlaying c structure, will finish it soon. Will also add a cython extension for return values, it should improve memory footrint and speed. C-ish error codes will be removed too. Thanks for your advice and feedback 
Depends on what you want to do. For a small and simple thing, flask or bottle. For a bigger project, I'd recommend django. It's extremely well documented, and gives you a good start for organizing a larger project.
Yes, that's possible but bokeh-server ([link to docs]) takes care of that for you. [link to docs]:http://bokeh.pydata.org/en/latest/docs/quickstart.html#bokeh-plot-server
&gt; Not that you should do it. Why not? If the project is small, it makes a lot of sense. 
Yeah. You're right. I was thinking more for big projects. One of the reasons Django projects have a suggested structure is so that it's easy for others to read the code. But if it's small enough who gives a damn.
Just learned this for a project. If you wanted to just use it for a basic web site, would be very, very simple
Overloading `&lt;&lt;` and `&gt;&gt;` to do I/O is a C++ idiom.
I am hiring junior python developer with either bioinformatics or scipy/numpy/pandas experience. Relocation required.
You need to commit. 
Guess I hit the nail on the head then. Eich was unable to continue as CEO because he was divisive and his discriminatory mindset did not mesh with the spirit of open source in which people are judged on their contributions and not their gender, race, religion, sexuality, etc. When you have to publish a memo telling homosexual employees you're not going to revoke their health care, you know you've lost your people's confidence. Also, he donated to support Proposition 8, which not only would bar same-sex marriage, it would nullify the marriages of those who married during the brief period in California when it was equal. One of those who were married during that time was a Mozilla developer who naturally did not want as a boss someone who would attempt to nullify his marriage. As for neuroses, those who knew Eich described him in a vein similar to Ben Carson - very smart as what he did, but delusional, ignorant and paranoid in his worldview and someone you wouldn't want to be dog catcher let alone CEO or President. There is no rational reason to fear other consenting adults' marriages, so he is quite the homophobe. &gt;It was soon revealed that Eich’s anti-LGBT political activities weren’t limited to Prop &gt;8. In fact, he’d donated to a whole host of homophobic politicians, including Pat &gt;Buchanan, who infamously said that “promiscuous homosexuals appear literally &gt;hell-bent on Satanism and suicide" and claimed the AIDS epidemic was the "awful &gt;retribution" for gays' "declared war on nature.” &gt;When the Guardian gave Eich a chance to distance himself from Buchanan’s &gt;repugnantly bigoted views — which were widely known at the time Eich supported &gt;his presidential campaign — the embattled CEO couldn’t even muster a comment. &gt;(Silence speaks volumes, doesn’t it?) He also refused to apologize for his Prop 8 &gt;donation and even implied that his, errrr, less-than-enthusiastic views about the &gt;humanity of LGBT people would help Mozilla do better business in anti-gay nations &gt;like Indonesia. 
&gt; they put up a message informing Firefox users of Eich's homophobia If they did this then it would be misleading as there is no documentation Eich has any neurotic fear of homosexuals.
The whole spirit of open source is that people are valued by their contributions, not by their race or gender or creed or sexuality. Eich's demonstrated beliefs (which also included donations to known homophobes and anti-semites such as Pat Buchanan) were clearly at odds with that. He doesn't have an egalitarian outlook; he clearly believes that some people are more equal than others. There's no way someone with that mindset can possibly lead an open source community or truly understand open source. Also, you wrote a very moving piece and I remember reading it at the time. Thank you for doing that.
&gt;He could have been in favor of a civil union, No, he couldn't have. He repeatedly refused to backtrack or express any of this during his interviews with the press when he was handed opportunities to say just this on a silver platter. Also, he donated to other homophobes such as Pat Buchanan, a man who said that gay people deserved AIDS. Eich even refused to distance himself from Buchanan's statements!!! &gt; I just don't think a computer guru from California is going to be a hardcore gay &gt;hater. Do some more research into what those who used to work with Eich wrote online. They described personal beliefs that sound like they could come today from Ben Carson - another very smart man (in one area) who seems completely clueless about everything else.
It's only intolerance of homosexuals that has to be tolerated: http://southfloridagaynews.com/Guest-Columnists/oped-donald-sterling-and-brendan-eich-a-tale-of-two-bigots.html
You don't tolerate immoral acts. I don't tolerate an employee trying to walk off with the petty cash or who gropes a customer. I don't tolerate making an avowed klansman head of HR either.
Are you using matplotlib? Can you show us some actual code and where you are getting unexpected results? Also /r/learnpython is probably a better place for this.
I actually learned from that book before I went on to do my CS degree, the method of rewriting everything manually is actually very effective for people who can't find a place to start that doesn't immediately run away in it's complexity.
Lol I love when people bring up separate but equal here. It's not like the old separate but equal, where they weren't actually equal. They would be the EXACT SAME THING. It's just words on paper. 
&gt; Sounds like Bob better not put him name on any food he leaves in the company refrigerator then. Why is that?
Ok, what is it you want to say with that statement?
As far as the timing you're asking about, I think I'd really really avoid trying to manipulate the Arduino directly from the PC. One of the big technical issues the hurts timing significantly, is that you're almost certainly using the USB bus in bulk mode, which while optimized for throughput, has exactly zero timing guarantees. I'm not even sure if USB isochronous or control mode would work well for direct control at the timing you want. What you really ought to do to achieve desired results is to implement all of the timing-critical control and low-level stuff in C for the AVR, and then write a simple serial protocol to expose a control interface over USB to do high level scripting in something like Python. I've done this before for several different devices, and it's really not too bad, and can give you the best of both worlds.
&gt; *Any* sane company (and person) will hire the junior good guy who is willing to learn if they show the potential. This is just not true. Some teams, and some companies, will only hire people with a minimal amount of experience. They may not have six months to train someone up. They may only have room for someone with the expertise to get up to speed quickly and be productive from day one.
Thanks so much! instead of rendering png... can I just have a plotly surface embedded on the website? Thanks.
Cool, TIL. Thanks! 
FYI, the C/C++ libraries isn't installed when you use pip. You need to install them separately.
&gt; (I'm on 7th year of professional mark) you'll start getting hit every single day. At this point I could spit in my bosses face and walk out the door tomorrow to multiple jobs. So you haven't been around for a full business cycle. Your career began when the worldwide tech industry was at the "meh" stage. Since then it has progressed to the "fucking awesome" stage. But there will be a day, sometime in the next 1 to 10 years, when the cycle will reach its trough. That's when your boss will be able to spit in *your face* and you'll stay put because there will be a thousand programmers applying for every job. Save your money and be nice to your boss, you'll need his help when all those recruiters chasing you get fired, too.
Really cool. Did you have to make an app through foursquare to get access to their API?
Yup! That's how you access your client keys. It's free to make an app.
insha'Allah
Take a look at [http://www.pythonlearn.com/book.php](http://www.pythonlearn.com/book.php); it comes with example exercises. I'm taking a Python class on Coursera that uses this book, and it's pretty good.
I don't understand why they choose the worst examples possible every time they try to explain decorators?
/r/learnpython 
This.
That is definitely the relevant one but more generally you can find all the Software Carpentry lessons at http://software-carpentry.org/lessons.html . They're all open-source. There are also installation instructions and useful bits and pieces.
Where are you located?
Exactly. Python is a fantastic language and is super fun to use, so I understand why it is so popular (which is where the fownvote a are coming from) but that doesn't mean it fits the mould for no business. I work with large multinationals and everything is Java because it is a language developed for enterprise. Yes, you may find small amounts of scripting done in Python for QA automation etc but that's not something a company will hire a junior dev for. With regards to web development, Python is way more suitable but still isn't widely used. At least in the UK, it's .NET that takes the majority of the market, then PHP. I spent three months job searching earlier this year and in that whole time I saw 1 Python job, which was a senior contractor position. The situation may be better in tech hubs in the U.S. but that isn't the standard. 
I don't understand how diversity at all affects the language. Say Python was written by a group of exclusively white men up until this point, would it be any worse off than it is today? What would we gain with this change? They state that the change would make us happier, more creative, and most importantly more productive, but it doesn't say how, leaving the reader unconvinced. It if had some examples of how those three things might improve Python, beyond vague comments about how happier people write better code, I'd be interested in hearing them. In the end, I could see how a diverse crowd of people could help the community in some ways, ie have speakers from differing backgrounds for Pycons, but not at all for contributing to the code. I don't think this should be part of Python.
/r/learnpython
You pulled that quote out of the 'Gender' section, its intended meaning being that you oughta respect people's gender identity, irrespective of their assigned sex. I've made no assumptions about or reference to your own sexuality.
/r/learnpython
That's pretty much the point of wrappers. 
Lua was so familiar I skipped most of the tutorial and went straight to love2D. I'm enjoying it so far. Thank you!
What is this supposed to demonstrate? 
 &gt;No. The default server is rocket. It still loses data. You can't download large binaries from it. This is known since mid 2011. How large of a file? Link to the data loss bug you are running into? Does this bug (still) exist in Cherrypy (of which rocket is forked from)? &gt;You need to use the `anyserver.py` script and some other server. I'm using paste. I like how easy it is to support "any wsgi" server with the files included. By no means would I say it is a requirement to ditch rocket for production. The likelihood that _you_ are building the _next Facebook_ or something similar is less than you building yet another _CMS of sorts_. For our work loads (fewer than a 50 simultaneous users, very data heavy for filling stuff) rocket has never been the bottle neck. What has been the bottle neck (before I fixed it) was the totally busted connection pooling for IBM DB2 and other drivers that do not support "Select 1" as a connection test. This is do to the non performance focus of web2py. The architecture lends itself very well to beginners but gets in the way of advanced devs who need something that is more than just a form-to-db tool. Most enterprise software is just form-to-db and benefits more from web2pys built in AD authentication modules. Trying to do good authentication/authorization in a micro framework can be a bit of a task if you are not familiar with all the bits required to pull it off. This is where full stack frameworks have a real edge over micro frameworks when building websites/apps, not really important when building APIs. 
Large files over 64KiB. https://github.com/explorigin/Rocket/issues/1
I wouldn't call a web framework heavier or lighter because it does or does not come with an application server.
Were any tests done with pandas? 
* New to web frameworks/web development? Flask or Bottle * Need a web framework that doesn't get in your way (i.e., doesn't make too many opinions about your web app)? Flask or Bottle * Need a micro web framework with a lot of extensions? Flask * Need a web framework that makes a lot of opinions about your web app thus provides a lot of ready-to-use functionality? Django * Need to create only a backend API? Flask, Bottle, or Falcon I also like Pyramid, but I didn't mention it above because I definitely do not consider it to be the "easiest" to learn in any of the above points.
&gt; When ie8 was relevant. You couldn't test it with Firefox 42 back then, too. But the bug showed in Firefox 4 as well. 
If you're moving soon and don't have the time to reinvent the wheel... https://www.google.com/search?q=android+barcode+scanner+save+to+google+spreadsheet&amp;oq=android+barcode+scan+save+to+google&amp;aqs=chrome.2.69i57j69i33l3.19110j0j4&amp;client=ms-android-sprint-mvno-us&amp;sourceid=chrome-mobile&amp;ie=UTF-8#aie=aig:xpd Otherwise, use any one of the many barcode scanner apps and write a simple program using their api to save the info to excel, or Google drive. You could take it a step further and generate a qcode for each box to scan first, then scan the books.
Are any of your applications using vector math? GPU programming is typically helpful for accelerating massively parallel tasks, so if you're just writing your first Hello World application, the GPU won't be very useful to you…unless you want your Hello World, e.g. rendered in 3D with nifty effects.
Of course you did. You're assuming I didn't consider this from the point of view of a LGBT context. If I were LGBT, I could hardly fail to consider it from that point of view, so you are assuming I'm not LGBT. The document doesn't say "respect people's gender identity". It clearly states that people have the right to be called anything they want. Since this is /Python, I must quote Monty Python: "I want to be called Loretta." Okay, fine, I'll call you Loretta, but that's *my choice* to do so, out of kindness or decency, not because it is a universal human right. Some people are trolls, jerks or drama queens, whether they are straight or queer, cis or trans, and insisting that is their right to be called by whatever they choose or else they are being discriminated against is just asking for trouble. If you don't believe me, just look at reddit user names. Even if we assume this is limited to pronouns, I can respect somebody else's gender identity without *necessarily* agreeing to call them by their choice of pronoun. Insisting that everyone has the right to the pronoun of their choice is rather like insisting that if McDonalds won't use precisely the right kind of cheese on their cheeseburger they are [racist](https://www.youtube.com/watch?v=JrK_HVGOnUo). People can invent their own words. Nobody has the right to force others to use those words. I think it is a positive step forward that my home country, Australia, has now officially added an [optional third gender option X](http://www.bbc.com/news/world-asia-pacific-14926598) on our passports. But until such time as the English language naturally develops a consensus for [an additional pronoun](https://genderneutralpronoun.wordpress.com/), I will happily *consider* (implied or explicit) requests to use other pronouns but I do not promise to acquiesce to them and I most certainly do not consider it a universal human right to be called by whatever you like. I'm very happy for (generic) you to self-identify as (say) a straight transvestite cis-genderfluid person, if classifying your gender and sexuality into such a narrow type is that important to (generic) you. If (generic) you want to be referred to as "zie", chances are I'll do so, since it costs me little or nothing. But ultimately, there are seven billion people on earth and so seven billion unique gender identities. We can and should acknowledge the fluidity of gender and the non-binary nature of even biological sex without making it a matter of human rights to distinguish in grammar every single fine distinction that some individual can invent. Doing so is not only impractical, but it trivializes the concept of human rights.
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules there before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." If your question is about homework, show them that you've tried to solve your problem in your post and you should get all the help you need. Cheers &amp; best of luck with Python!
Is this a guide that I should be using? http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-common-steps.html Thanks
Bad subreddit theme. I've switched it off.
I'd say the only reason would be to standardize it and do it the "django" way. The same could be said about ORM. There are other (opinionated) better options for ORMs out there but Django as a packaged framework benefited from a stable API. I'd imagine a broker would have to now be included. Django offers the base that you can extend from. And a base for this would require a broker, Otherwise it's like saying *almost all Django functions work straight out of the box. Except you need to bring your own broker.... Django with BYOB for the win? Nah. 
Try pandas 
Your assertion that the docs "don't sell you on it" is silly. If you have the XP to use a micro framework correctly then you wouldn't be the OP asking for "the easiest" frame work. A frame work that requires minimal investment from the dev is easier than one that requires you to piece together the whole stack. Defaults matter, and web2py has really sane defaults for beginners and making development and maintenance easy. Just because you don't like its features doesn't make it not easy. As you said they don't sell you on it because you are not the target. That's why it's silly, and a bit hipsterish to say that. 
They're not that desperate. I've got years in operations, I have a CIS degree, I've worked in plenty of dot-com environments. What they're desperate for is "Someone who has already worked years in Devops"
Nice, how can I view it? Do I need to install the remi package? 
I highly recommend going back and using [Braintree v.zero](https://www.braintreepayments.com/v.zero). I've been investigating new payment solutions for OpenEdX. We currently use CyberSource Secure Web Acceptance (very similar to PayPal IPN) and PayPal's REST API. PayPal's REST API is simply not reliable. Some payments need to be retried. Others come back as declined, yet the buyer is charged. It's terrible. The IPN approach works well...until you drop a request (either due to load or a server outage). The risk of this probably be low; but, having experienced these issues along with having to manually reconcile orders, I do not wish this pain on anyone else. Braintree v.zero lets you avoid these issues because the entire transaction is handled in a single request after the user POSTs to your server. There is no need to listen for external calls and validate signatures (aside from CSRF tokens). Get the POST, make an API call, finish the handling on your end. It's really nice compared to the alternatives!
It supports CUDA and OpenCL. 
Also, do you know if I can have this gui on a website?
With a known set of inputs and results, using a set will be the quickest way to implement such a program. You will see, rps2() completes much faster. Since we're talking about the algorithm, and not how fast the 'print' function works, I have disabled the print statements. import timeit #since we're using the same list/set many times, it's going to be faster to #initialize them once. l = 'rock paper scissors rock'.split() s = set(['rockscissors','paperrock','scissorspaper']) def rps(): a = 'rock' computer = 'paper' if l[l.index(a) + 1] == computer: #print 'you lose' pass elif a == computer: #print "tie" pass else: #print 'you win' pass def rps2(): computer = 'paper' a = 'rock' if a+computer in s: #print "winner" pass else: #print "loser" pass t1 = timeit.timeit(rps,number=10000) t2 = timeit.timeit(rps2,number=10000) print t1 print t2 print (t1-t2) / t1
Put the file name in the QR. In the file just keep a list of ISBN numbers. Do the lookup after.
I would expect a mutex in Sleeping Barber. You're allowed to use them in Go if it would produce a simpler design than channels. There are notes on it in the [Go wiki](https://github.com/golang/go/wiki/MutexOrChannel).
You'll notice throughout your time while writing Python, you'll see statements such as "O(n)" or "O(logX)" or "O(1)" Finding a value in a set is an O(1) operation. I believe finding the index in a list is an O(n) operation, which is quite a bit slower. https://wiki.python.org/moin/TimeComplexity Now, if your program only does a comparison once on each start of the program (like a cron job), then taking into account how much time it takes to initialize the objects might change how you decide to implement the functions. Perhaps creating a list is faster than creating a set (I'm not sure offhand). However, in a long running program, such as a web app, you're not going to want to initialize those lists on each call of a function. Since the resulting list and set are always the same, it's best to initialize them once and reuse them. The startup cost of those items is trivial to the amount of time spent accessing their contents.
West Michigan.
Thank you freekzindel! Not to complicated just at my level, good explanation! Thank you everyone! got lots of new ideas!
You just started working after 2008. The software engineering world was way way different then. And your assuming your career growth is the reason recruiters are emailing emailing you every day. It's not. It's simply the market is great right now. As much as you want to think your special, your not. Your just a name with a bunch of programming languages listed on your linked in profile that recruiters key word search then send off a canned email. But the confidence you have is good, just be ready when he is economy runs out of money again. 
Yay, let's foster cargo cult programming!
Just a minor point OP. Say list1 has 10 elements and list two has 1 million elements your solution is sorting a list of 1mil and 10 elements. Whereas the solution will only check 10 elements. So your program will be way slower for lists with asymmetric lengths. Also if list1 and list 2 have closely related elements - your solution is adding list2 after list 1 so the resulting list is far more random and will have longer sort time.
Lol what? I don't think you even know what your point is, old bugs exist in products some times. They are not always critical show stoppers. This isn't even a security bug, rather a poor behavior on old browsers due to a less than ideal method selection. Not even a security vulnerability. 
Does it work on old GPU's like my ATI4870? 
Yeah, right? Who needs productivity and money anyways! \*codes own signup/recover password views/template instead of using flask-security\*
This is absolutely 100% the best answer. I almost always prefer Flask over Django. However, when you're first starting out, it's better to be restricted on your choices until you know what you're doing. Furthermore, Django has some of the best documentation that I've seen (Although the [Flask Mega Tutorial](http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world) is fantastic). Long story short, just try one. Learn the basics of web. Then start exploring the others. Framework choice is often just a matter of personal preference and comfort.
I use 4 spaces, not sure why the pre tags are doing that here, not intentional.. must be something in the css for prettyprint langpy. Will look into that. Bullet point #1 - that logging example was a simple example to see output, wasn't meant to be any production-worthy example. Bullet #2 - Good point, thanks for the input. Bullet #3 - Same as #1. I struggle with needing to go over a ton of details, or to just show people how to get started with the task at hand. I choose to keep things simple, and, for the most part, people have appreciated that. I recognize not everyone agrees, and I also recognize I am not perfect, doing things in not the best way. I've only continued because feedback has encouraged me to do so. With that, I appreciate your feedback!
XPost Subreddit Link: /r/programming Original post: https://www.reddit.com/r/programming/comments/3wlwh9/pybind11_seamless_operability_between_c11_and/
Well, the [logging](https://docs.python.org/2/library/logging.html) module is pretty simple, specially if you use the [basicConfig](http://devdocs.io/python/library/logging#logging.basicConfig) function: &gt;&gt;&gt; import logging &gt;&gt;&gt; logging.basicConfig(level=logging.DEBUG) &gt;&gt;&gt; logging.debug("hello") DEBUG:root:hello I find it easier than opening and writing a raw file, tbh.
When you call a method function, the first parameter Python adds is the instance/object itself. So your method functions should all be something like: def Func1(self, some_var):
Depends what you mean by customizability. By default, these frameworks are just there to give you shortcuts. You don't need to use most of what they give you, but you can. Django will allow you to build something fast, and reuse tons of extremely useful components for mundane features. It's great if you're not an amazing developer, because it gives you... well... a framework.
Aha, my bad. It's pretty easy to miss out; maybe have a "Post-installation instructions" header just below the offline installation one for more clarity?
ImportD (the D is for Django) gives you the best of two worlds. http://importd.readthedocs.org/en/latest/ (I don't like Flask, too many pieces to wire up together)
A header implementation of critical parts of Boost::Python that uses PyObject. Means Python Package Index packages that tie into C++11 code are easier to distribute as you can attach a header file instead of requiring Boost to be installed (which is a massive behemoth).
Over simplified, but a decent starting point: Each client or player computer connects to a central server that your game knows the address of. That server then either facilitates all communication or just gives each client the address of the other client.
The prod/cons should use a queue, not manual locking. And the reader/consummer example should use context manager for locking.
I've built dashboards for largish clients, using pretty much the same stack as you. Generally feel that building your custom dashboard &gt; buying an off the shelf product, because: 1. You can build solutions that are suited for your particular needs 2. It is significantly easier to change requirements as you discover that new things are needed. This becomes super important if you are doing something new, as Enterprise-tier companies charge a fortune for accommodating any change to requirements. Would recommend a couple of things though: 1. If you are doing a lot of time-based analytics, it's wise to run a cronjob that stores summary stats every few minutes/hours (depending on your usecase). This ensures that you don't have to process too much data at once (which can be slow if you have tons of data). 2. Consider using [Spyre](https://github.com/adamhajari/spyre) if you don't need to customize things too much. It is the Python equivalent for R's [Shiny](http://shiny.rstudio.com/), and is a really quick way to prototype dashboards.
Yeah, that looks perfect. I'd have use Flask to modify the HTML and write javascript to show the plot.
I like leaving things completely undocumented, helps with job security edit - this is a joke
Just choose one that you like and move on. Both are most certainly able to help you reach your goal.
&gt; Well, the logging module is ~~pretty simple~~ as complicated as you want it to be The logging module is not simple, nor is it intuitive, but it's capable of a lot more than people give it credit for. 
Customization? Go with Flask but steer clear of the Jinja part of it as much as you can. Have those Flask views spit back JSON as much as possible. Doing that opens up your options for a lot of the different templating solutions out there.
That only tells employer about your non-professionalism. With proper effort, they can hire a smart-ass, who will be studying your code, and eventually replace you.
Excuse my ignorance but what do "junior-level" Python jobs entail? Where I work Python (or any language) is really a means to an end that all the engineers are picking up. Akin to what "Excel" was a decade ago. 
Disclaimer: I've only worked with Django and Flask (never heard of importd up to this point). I'd go with Django. Surely, right now it seems a simple ToDo, but a system never stops there and the ORM integration will really help that. You won't have trouble doing weird stuff with forms and models (like adding an audit log on every db action), so everything will go exactly like the examples. Flask would require a lot less of boilerplate, but because it lacks a natural ORM right now (I'm a fan of PonyORM, but up to version 0.4, it was pain to integrate with Flask and I'm not a fan of SQLAlchemy format) and it would hinder your progress in the future. All my personal opinions, mind you. You can pick another route and have a complete different result.
Just want to mention that there are time series databases that do the averaging stuff you talk about automatically like InfluxDB (or so I'm told). I haven't had time to completely replace my postgres solution with it, but it looks interesting.
Ha! This is great! Thanks for sharing
My experience is somewhere in-between. I often get transactions that are declined, but the customer is charged. Luckily, we don't capture immediately, so it's a simple Customer Service fix. With that being said...the API is sloooooooooooowwwwwwww more often than not. Also, in regards to v.zero, subscribe to https://status.braintreepayments.com/, it's helpful to diagnose possible upstream issues with PayPal.
Based on the [award winners list](https://blog.mozilla.org/blog/2015/12/10/mozilla-open-source-support-first-awards-made/), you could say that mozilla use Python a lot.
Thank you!
Then just use django. Theres litterally no reason not to.
&gt; As you become more proficient, using the command line for some data science tasks is much quicker than writing a Python script or a Hadoop job. Fair enough but a Jupyter notebook already provides the synthesis between scripting and shell execution. Also you probably want to map a CSV onto a pandas DataFrame. 
Definitely GitHub or some other kind of source control, most open source projects rely on them.
Python-specifics, learn about pip and virtualenv/virtualenvwrapper. General purpose, learn git and shell scripting. EDIT: I forgot about regex. It's too useful to be overlooked.
Use a directory server that keeps track of all of the players/client's/whatever and then either have them communicate through the server, or if it's only two that you need, then you can have them communicate directly.
Did you have any logging in place to discover what causes a decline yet leaves the customer charged? I've seen a few things that caused such a thing, but it was all my fault. For example, the encoding for PayPal is default some strange type, and you have to go in and set it to be something else. Customers with non utf-8 in their names tend to wreak havoc by default. I have a few more examples like that, and maybe you could say that's PayPal's fault, but it was something I could remedy. 
You don't think having multiple people with diverse backgrounds and ways of thinking is better than having ten programmers who all think about problems the exact same way?
if u like try to collaborate whit me in this project https://github.com/capitanooo/TinyAgenda
There are plenty of other factors that affect whether or not someone ends up in computer science -- whether or not they have access to a computer at home growing up, how many CS-themed classes they have available at their high schools, whether or not they're able to afford entry at high-level colleges, whether or not they perceive programming as a "white" or "male" activity due to social messaging, whether they are encouraged in their studies or not, etc. I don't see why people just completely deny that these issues exist when, for most of us, all it takes is a quick glance around the office to see that minorities and women are less represented among these fields than others.
How much html&amp;css should I know before starting Flask? 
I'm extremely interested in hearing more about what you built. In fact, I've been wondering the best way to render DataFrames in the browser. 
It's also best to build in reoccurring bugs that only you can fix
What's a directory server? Also, how do two personal computers communicate over the internet without setting up port forwarding on their routers?
Thing is, users will have to download an entire interpreter when they visit your site.
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules there before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." If your question is about homework, show them that you've tried to solve your problem in your post and you should get all the help you need. Cheers &amp; best of luck with Python!
At my job we're building a very very flexible dashboard framework that we're almost ready to open source. It provides periodic tasks that can be performed on server, or off via celery, as well as notification channels (email, pushbullet, text message, etc), automatic scaling -- including periodic tasks that are tracked in the global namespace via redis, user accounts with LDAP or SAML, an extensive plugin system that are competently sandboxed from the dashboard run time, and much more. Our goal was to create a framework to end "each group is making their own dashboards," in a large corporation and can't wait to share it with the community -- it'll be a game changer in rolling out professional, scalable, dashboards with a lot of tracking and notification functionality. 
Can you write scripts for the 21 computer? 
Hey that's pretty cool, tons of people are always looking to partner up with developers, have you checked out r/startups or r/entrepreneur? Where are you from and have you really planned out on committing to something on the side, 10+ hours can end up being pretty demanding, even if it doesn't sound like much. 
Know your team, and the people who will use the tool. If you build a tool from scratch, that tool is part of your reputation. If you have good coworkers and the tool breaks down, then they will be patient and understand that things like this are iterative. If you don't have good relationships with your coworkers, then things get political very quickly.
Once.
This is because the string and the line break get written to stdout separately. If you disable the line break and include it with the string then you will not likely have this issue: print self.threadId + '\n',
location?
First page load is the most important 
What's the 21 device/computer? On mobile otherwise may have tried Google.
You must know some smart five year olds.
It looks for tweets tagged with #christmastree for now
Flask doesn't lack of too many things but it doesn't include them by default (for my the better reason to choose Flask instead of Django: I choose what to use) If you like relational databases use SQLAlchemy If you like document databases there are plenty of drivers for them (example MongoDB or elasticsearch) If you are like me, you don't like to include something you will never use so Flask is your better chance because it doesn't include anything besides the core and then you include you needed parts
I work weekly with a 80gb csv file monthly updated. Pretty much what I do is search some strings and save an excel table for search results. If you are using this table more than once as I am to search strings, my best solution was to create a sqlite database with a fts3 tokenizer with a python connection. It's very very fast and allows you more flexible searching patterns. 
Cython, Numba, meta programming, multiprocessing, and async IO.
You mean PEP20, of course.
yes of course :D 
I don't think anyone is at all suggesting that diversity is a bad thing. You're asking a rhetorical question as if to suggest that somehow being against this document is being against diversity. The document is poorly formed and it is attempting to be submitted into the Python Enhancement Proposals. PEPs are for *enhancing the language* and not the political views of its users. The document was last edited 23 days ago. None of the grammatical errors have been fixed. None of the clarity issues have been fixed. Is this what diversity is? To be diverse, we must avoid breaching anyone's uniqueness by not bringing up that there may be some issues with their project? # Origin ('Do you see people from elsewhere?', ['y', 'n'], {'y': 5, 'n': 0}), ('Do you see black people?', ['y', 'n'], {'y': 10, 'n': 0}), ('Do you see people from Latin America?', ['y', 'n'], {'y': 10, 'n': 0}), Seriously? *This* is diversity? Are White Brazillians considered Latin American? Or is their physical appearance not diverse enough for those 10 diversity points? What makes someone black? Is it based on melanin? *What is the average percentage of melanin in your company?* ('Is your group made only of 20-40y people?', ['y', 'n'], {'y': 0, 'n': 5}), *This* is diversity? ('Have you ever made or heard a joke about gay people?', ['y', 'n'], {'y': 0, 'n': 5}), Yes. Yes I have. I've made jokes about myself (*no diversity points for you!*) ('How many women are now in this meeting? (percentage)', ['10', '30', '50'], {'10': 0, '30': 5, '50': 10}), I have a dream that one day everyone is judged by their appearance and not by their qualifications. I have a dream that one day, someone who is qualified will be considered just as qualified as someone who isn't qualified solely based on their Diversity Classification™.
Just avoid communities with manifestos like this. You'll be less stressed when you realize you don't have to walk on egg shells. 
I've been wanting to do the same thing. I also work full time and only have a few hours to spare each week. Lots of ideas too little time.
Basically an overpriced Bitcoin miner.
... correct.
so here's a link: http://importd.readthedocs.org/en/latest/ it's basically Django, but easier to start with since we can start with everything in a single file, like Flask.
And for the terrible coders, we have PEP Goto-20
Fuck if I know, I just googled `21 computer` and made the educated gues that [this](http://www.computer21.biz/) wasn't what they were talking about.
vgauthier's anaconda.org channel has all the dependencies needed, why dont you install those libraries from their channel?
That doesn't seem to be true: sigcpp is not in there, and installing it from cyclus' channel doesn't work because Anaconda doesn't recognize it. (I.e. it keeps saying `Error: Could not find some dependencies for cairomm: sigcpp`.)
Sounds cool, what's in the stack? What are you using to send texts? I have had this need for a few side projects.
If those people were to write python code you'd point them to pep8, not pep20.
https://twitter.com/treescore/status/676357439592259585 &gt;Sometimes it fails spectacularly at finding the tree, you don't say
[**@treescore**](https://twitter.com/treescore/) &gt; [2015-12-14 11:05 UTC](https://twitter.com/treescore/status/676357439592259585) &gt; Hi @C\_Breadon3, nice \#christmastree It has a \#treescore of 54 (lights:71 shape:46 color:45) &gt;[[Attached pic]](http://pbs.twimg.com/media/CWLngNUWwAAyiwv.png) [[Imgur rehost]](http://i.imgur.com/546G4wb.png) ---- ^This ^message ^was ^created ^by ^a ^bot [^[Contact ^creator]](http://np.reddit.com/message/compose/?to=jasie3k&amp;amp;subject=TweetsInCommentsBot)[^[Source ^code]](https://github.com/janpetryk/reddit-bot) 
full python manual, especially python language reference .
Not every piece of advice in life is easily applicable. That doesn't make it bad advice or untrue.
...still PEP20.
Yeah, I was just saying that it's a bit more fundamental than a 'basic overview kinda thing'. 
You are right, perhaps this is not clear enough in the description. As mentioned in another comment, applying a general lambda to the tuple would require to iterate over the entire cartesian product just to return the smallest value, and that is what I wanted to avoid. The algorithm is pretty straightforward. At first we sort all iterables with the *key* function. * [1] We know that the smallest sum is at `(0, ..., 0)`, we yield it. * [2] We put the neighbors(*) of the previously returned value in a heap * [3] We pop from the heap the smallest value (using *key*), and back to [1] We stop when the heap is empty. (*) As an example, the "neighbors" of the tuple of indices `(0, 0)` are `(0, 1)` and `(1, 0)`. We only increase the indices values. The heap is implemented with the class`UniqHeap` because it does not store duplicates (we do not want to return twice the same thing). The `Grid` object is just an abstraction to compute neighbors and return values from a tuple of indices. Hope this helped ;).
NO YOU DON'T. YOU NEED TO "SHELL OUT" YOUR COMMANDS USING THE [SUBPROCESS MODULE](https://docs.python.org/2/library/subprocess.html) IN PYTHON. THEN YOU CAN USE A TEXT AREA FIELD TO ACCEPT INPUTS AND DISPLAY THE RESULTS. WINDOWS OFFERS NO WAY TO TAKE A WINDOW FROM ONE PROGRAM AND EMBED IT INTO ANOTHER. THIS WOULD BE NICE, BUT IT'S NOT A THING THAT'S CURRENTLY POSSIBLE.
Just in case anyone is still confused-- [PEP8](https://www.python.org/dev/peps/pep-0008/): Python style guide [PEP20](https://www.python.org/dev/peps/pep-0020/): Zen of Python
Or you can deploy a time series database with a neat graphics DSL that allows you to build this type of dashboard in 90 lines: http://apps.axibase.com/chartlab/331b845b. Data-agnostic so metrics can come from nmon, collectd or scollector.
Very cool! Is this OC? Throw in a splash of color, and I'd put it up on my wall. :)
this should have been posted to /r/learnpython 
Not many, I think. I don't do anything professionally, but I document (with numpydoc) everything I can. I occasionally end up having programs that are 20% code and 70% docstrings. I have everything dark, rather than light. I prefer using vim because IDEs tend to have too many options.
It's like inverted Perl 
Beauty applies to both code and design. The poem in question is *The Zen of Python* and is printed in the interpreter if you type `import this`. So you should probably be familiar with it. Interestingly, the source code for the module is partly obfuscated. It's also PEP-20. Usually there's a general consensus as to what beauty is. In engineering, beauty is often seen as a conceptually simple design. For example when you take some code that has 50 inter-dependant modules and resembles a tangled knot when the the dependancy graph is drawn, and refactor it into three self-contained modules each of which has few components and a clearly understood structure. It can also refer to code following standard Python conventions.
Lest any beginners get confused and call this PEP8, this is the Zen of Python not PEP8. You can find the much more detailed PEP8 guidelines here: https://www.python.org/dev/peps/pep-0008/
Congratulations on the PhD program! That's a great accomplishment. One thing I've found from high level academics, and please don't take this as a stab, is that one important thing they can often learn is how to architect a larger system. Many of them are great with algorithms and so forth, but have never really built an enterprise(ish) level application that includes a larger stack. Some easy ways to do this are to read source of a big project that is well done (django, flask, etc). This isn't 100% true across the board, but it is common in places I've worked.
That's actually the zen of Python, but interesting and valid nonetheness!
A video? Pretty easy. Get a camera, start filming. Youtube? A little more difficult, probably out of the realm of a "noob" Or perhaps you meant what the video was trying to convey? I'm not going to watch it. Might get more nibbles at this if you state clearly what you want your project to do though. :)
&gt; "Beautiful is better than ugly" is just silly. &gt; How does that constitute a coding guideline? Write code for a couple of years, you'll eventually notice.
The core modules in our requirements are: `celery, flask, gitpython, sqlalchemy` and `tornado`. The current implementation uses MySQL and Redis as state backends. Notable custom flask extensions, that should be released independent of the dashboard framework, are: - AssetPack: dynamic, object oriented, verified asset blocks for jinja templates. - Periodic2: local, and global, tracked periodic tasks that can be run on clustered dashboard server instances. - PluginSystem: which allows bootstrapping arbitrary git repositories into the flask application as plugins, which get their own endpoints, web socket connections, and "window" on the main interface. All web socket connects are multiplexed from the client, and between server instances, so if two plugins on the same page are using the same backend data only a single periodic task is spawned and reported to every client. Periodic tasks are only run while someone is "looking" at them via the interface. This is what it looks like so far...[screenshot](http://i.imgur.com/QkGgJQO.png), [click and drag *action shot*](http://i.imgur.com/YMLALQ0.png)
I suppose you meant: print(etree.tostring(headerElement, pretty_print=True)) *(print function does not have a pretty_print argument)* In that case you either have to decode it afterwards, because it returns a bytestring *(but for that you have to know the encoding, ~~which is probably utf-8 though~~, nope, it's ascii, and non-ascii are escaped in the `&amp;#26481;&amp;#26041;` form)*. Or you just specify the return encoding, where "unicode" is a special value, telling it to return a unicode string instead of an encoded bytestring: print(etree.tostring(headerElement, pretty_print=True, encoding='unicode')) *Edit: some additions here and there*
From /r/explainlikeimfive guidance on what "ELI5" means: &gt;&gt; E is for explain. &gt;&gt; This is for concepts you'd like to understand better; not for simple one word answers, walkthroughs, or personal problems. &gt;&gt; LI5 means friendly, simplified and layman-accessible explanations. &gt;&gt; Not responses aimed at literal five year olds (which can be patronizing). For /r/python, this is probably enough. But we could make a more generalized statement towards what pybind is. What do you think?
It was what was happening in the video. In the video the guy made a program that somehow interacted with the site so you could leave your computer and the program did the betting for you. What he set the program to do was "Will double if it loses and stays on whatever color it is set to. If it wins, stays on same color and bet is reset to original bet." I know it sounds confusing becaue it kinda is here is a video show it https://www.youtube.com/watch?v=At-7IljidX4 
If you watch the video and skip to about 1 minutes it really helps to show what im asking 
I am not an expert at FFTs and especially not at NumPy's, but just taking a look at the documentation, it seems like it is giving you complex output. I am not sure what exactly you mean by RMS, but you can thing of the complex output roughly as two results with different phases. Recall that a Fourier Series is sines and cosines. Both are waves with different phases. You can convert a complex number to sines and cosines with [Euler's Formula](https://en.wikipedia.org/wiki/Euler%27s_formula). I think what you may want is the absolute value of the results. Do `np.abs()` and it may give you what you want.
Read thru automatetheboringstuff.com... in the later chapters he goes over automating responses to gui programs, which is probably where you want to go with this.
&gt; That said, I highly doubt switching FFT packages/implementations is going to fix anything. Well, it does when I'm not touching the FFTed data itself and just handing it off to something that knows what it's doing. But no- I popped here because I'm using Numpy and it seemed like a good spot, instead of begging in a more math/signals processing subreddit. 
The click and drag looks slick, let us know when it's up!
OK, I finished the tutorial. I liked it a lot and I feel like I learned a lot. I am rather new to Python, but not to programming languages. (So any of the things I list below could have totally been my fault not following directions.) I ran across a few issues when typing out the program. winner = False while not winner : print "HERE" On this step I added 'print "Here" to the program, and you never mention removing it because it was just an example of how the loop would run with that text. I didn't realize it should not be in the final til much further down. On the second "if" dealing with choices and if a player has won due to 3 in a row vertically, one of the choices[] is listed as choices[y] and it should be choices[x]. On the last input step dealing with printing a winner. After I entered it as shown the program printed a winner after every single input. I ended up putting it in it's own little "if" nest as follows. if winner == True print "Player " + str(int(playerOneTurn + 1)) + " wins!\n" Maybe this was something I missed as I am rather new with Python syntax, but this fixed it for me. On the final image of text labeled "Your full class should now look like this:" It doesn't have 2/3rds of the code needed to test if a player won vertically or crosswise. Over all I really liked the lesson and feel that I got a lot o useful knowledge out of it. Thank you!
Try running the following code and see if it helps at all import numpy as np import matplotlib.pylab as plt fig,(ax1,ax2,ax3,ax4) = plt.subplots(1,4,num=1) t = np.linspace(0,2*np.pi,1e3) F = np.sin(3*t) + 3.*np.cos(8*t) ax1.plot(t,F,'-k') ax1.set_title('Input') Ft = np.fft.fft(F) ax2.stem(Ft.real,'k') ax2.set_xlim((0,15)) # Just to only show some frequencies ax2.set_title('Real') ax3.stem(Ft.imag,'k') ax3.set_xlim((0,15)) # Just to only show some frequencies ax3.set_title('imag') ax4.stem(np.abs(Ft),'k') ax4.set_xlim((0,15)) # Just to only show some frequencies ax4.set_title('abs') fig.tight_layout(); plt.show() 
The line ^^^spacing^kills^me ^^^...
Blind leading the blind 
Imgur : http://imgur.com/a/35sso With more colors
&gt; from flask import request #micdrop
Is it just me or does the outline look like Santa Claus with shades?
I like yours better, it's a bit easier to read with line spacing.
I love it!
I also feel like PEP 20 really deserves a good monospace font. [Source Code Pro](https://github.com/adobe-fonts/source-code-pro) if you're interested. 
Updated! 
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules there before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." If your question is about homework, show them that you've tried to solve your problem in your post and you should get all the help you need. Cheers &amp; best of luck with Python!
So a directory server would run your server script (not the client script) would have a known IP and then you could have your client connect to that. When a client connects, the server keeps track of it's IP address. Now you have your IP addresses, you can send data to each other, or through the server (depending on what you want to do).
tamsyn 4 lyfe
a lot of the folks i work with in R&amp;D have been high-level engineers- brilliant people, able to come up with some great stuff. a few of them use python, but mostly for 'off the shelf/one-off' type work - coming up with some lump of math, or to test an opimization, etc. so they've been blown away by the stuff i've been doing with python, coming up with entire pieces of software to do certain things in the lab. the real humor is that there are some legit programmers here, who are blown away by what i'm doing - granted their fields are different, but integrating hardware with software wasn't THAT complicated... i didn't even have to write too much in the way of drivers - i let VISA do the heavy lifting. 
Cool!
And yet it uses rather awkward hand-rolled code to do its (un-)ROT-13ing. Also the names are terrible, and obfuscation of that sort in the first place has questionable motivation. Really, the entire `this.py` is an ironic example of what not to do :)
I don't take that as a stab 'cause I believe it is true! Thanks for suggestions!
`conda`'s good for a lot of things but unless the package is *very* mainstream `conda install` tends to struggle with it and I just use `pip install` (which anaconda is able to keep track of anyway). 
That's just the first level of obfuscation. The way the code works is highly (and very obviously deliberately) non-standard.
I agree with your assessment here, it was what I was going to suggest. `importd` is basically a way to have the fast startup time of `flask` but be able to naturally extend the project into a full-blown `django` framework when the time comes.
Yea sorry your first case wouldn't happen, as they would be the EXACT same thing in the name of the law. Literally there would be a law that says "A Civil Union provides all the same rights as marriage." The end. No arguments. Any case would be a slam dunk. 
Anything more specific? Have you got an example script you're working off? It can be a bit finicky to get started but then it's quite simple....
Do you already know Python? If you do not know Python, I suggest either learning Python (see links in sidebar) or using [Autohotkey](https://autohotkey.com/). It's a macro package that can read the screen and enter mouse and keyboard commands. It's less powerful than Python + Selenium, but it's easier to use and capable of doing the work in the video. If you do know Python, what specifically in the docs for Selenium are you having trouble with?
Possibly. I would say the biggest things to consider are: * Getting a cluster up and running took a non-negligible amount of setup time. A druid cluster has four different types of nodes, and then on top of that depends on zookeeper for coordination/configuration, HDFS (or S3) for permanent backups, and a SQL database for metadata storage. We already were using zookeeper, HDFS, and MySQL, so we got all that for free, but it still took us more than a week to issue our first query to druid. * Druid doesn't do single datapoints. It does rollups of the data (analogous to SQL group by's) on the fly as it ingests. If you need more than hourly granularity, you shouldn't use druid. * The major benefit of druid is the realtime data ingestion. If you don't need this, there are a lot of alternatives that you should consider, which might be a lot more suitable for your situation. That said, we're really happy with it. The realtime analytics aspect of it is invaluable to our organization. It's way faster than anything else we experimented with, and ultimately it's a lot less resource-expensive than our old system. We're really impressed with how much data it handles and how fast it queries. The [druid whitepaper](http://static.druid.io/docs/druid.pdf) was the most informative thing I read while we were making our decision, I'd recommend reading or skimming it so you know what you're getting yourself into. 
You sometimes don't have a GUI / full server access and are restricted to command line :) but definitely for most use cases jupyter makes sense!
&gt;Judge Walker already ruled that there is no rational reason to want to forbid gay people from getting married, Where did Judge Walker say that?
This might work: https://pypi.python.org/pypi/requesocks/0.10.8.
&gt; When I iffted it back and exported it to audio… I got the same audio as the input file. I was baffled. Either your code had a bug or you tried operations that didn't affect the sound. Numpy's FFT is the standard one you'd find in MATLAB, etc. I have no idea what ChucK is and what you're trying to accomplish.
I think mostly it's that I didn't understand how the result of an FFT represents signal data. I've got a much better picture now, and I've got a really nice mangler function that rotates points in the FFT domain about the origin which has some really unusual effects on audio. And that's all I'm really trying to accomplish: given an audio file, create an artistically mangled version of the input audio.
BTW, Reddit formatted it that way, the indents are proper in my code it just wouldn't take the spaces here when I posted it. I'm calling car.moveCar(100) or any other value. The error it's throwing is: _tkinter.TclError: wrong # args: should be ".4396733720 move tagOrId xAmount yAmount" If you run this code you'll have to change self.canvas=Canvas(self.root, to just root... that was another flubbed effort to fix the problem.
I'd really read up on [PEP8](https://www.python.org/dev/peps/pep-0008/) and then move on towards [Beyond PEP8](https://www.youtube.com/watch?v=wf-BqAjZb8M). Then after that I would start reading about VCS like [git](https://git-scm.com/book/en/v1/Getting-Started). Both PEP8 and Beyond PEP8 have helped me a lot in understanding how to structure things and what to do for my projects. Another good resource is to look at projects that people have done, find a style you like, and start emulating that style in your code. For me I really like both [requests](https://github.com/kennethreitz/requests) and [schedule](https://github.com/dbader/schedule) 
Is that a YJM reference ?
I'm certain that the .4396xxx it's asking for is the object reference or pointer. I've used a print right after the rectangles are created and I get objectID of 1 and 2 respectively which is what I'm guessing the problem is. This leads me to believe that I need to call the function differently or I'm missing some element of the class that I need to include in order to get a Real objectId.
Very cool. Thank you for posting.
No
Erm.....that is not PEP8.
I'm quite sure you can achieve this with GraphQL too: query MyQuery { allUsers(name:'John', age__lt:10) { name age } } 
&gt; YJM Anyway. https://youtu.be/TyYXKhYGsUA?t=125
Sadly it's py2 only.
You are correct. This is an issue with how vgauthier made his packages and not some much an issue with conda. 
Thanks. I will dive into Flask asap.
From a technical perspective, collaborating on code revolves around version control so learn Git. Documentation and unit testing are also important when working on large projects with multiple developers.
Thanks for the correction. I must have mixed up Falcor and GraphQL. I remember the Falcor team explicitly saying they didn't want to support filters because it breaks the pattern that the model can be treated as if it were a local json object. I thought I had heard the same thing about GraphQL, but I am clearly mistaken. I have a feeling that there are some other differences regarding how the graph is defined, but I'm going to have to read up some more on graphene first. Thank you!
not yet,,,but will
Are you sure you're calling `moveCar` and not `move`? The code you've provided works as expected.
FWIW, does the portability and duration of need for that data come into play for you? Likewise, does the complexity of the data or its manipulation require a more powerful structure?
Why would you use a list rather than a dictionary? They're basically the same. 
You should pass in the allow_redirects=False when you do the get() call. When I look at the headers ( r.headers ), it looks like it's sending me to a login page or something. Anyway, it's possible you are being redirected, so do this: r = requests.get(url, cookies=cookies, allow_redirects=False) 
http://inventwithpython.com/blog/2014/12/02/why-is-object-oriented-programming-useful-with-an-role-playing-game-example/ Because the class makes things cleaner, simpler, easier to understand, easier to modify, easier to reuse. You can add significantly more complex behaviors without losing your mind. The reasons go on and on. Read the above article then research from there.
nah it cool i got an answer 
Good on you for looking to grow yourself as a professional! The best folks I've worked with are still working on professional development, even 10-20 years in to their profession. Programming languages can be thought of as tools. Python, say, is a screwdriver. You can learn everything there is about screwdrivers, but this only gets you so far. To build something you need a good blueprint. For this you can study objected oriented design (OOD) and programming (OOP). Once you have the basics, take a look at design patterns like the Gang of Four. [This book is a good resource to learn about much of the above](http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented-ebook/dp/B000SEIBB8) What parts do you specify for your blueprint? How do they go together? Study up on abstract data types (ADTs) and algorithms that manipulate those data types. [This is the definitive book on algorithms](http://www.amazon.com/Introduction-Algorithms-Edition-Thomas-Cormen/dp/0262033844), it does take some work to get through it, but it is worth the work. (Side note, this is the book Google expects you to master before interviewing) How do you run your code? You may want to [study general operating system concepts](http://www.amazon.com/Operating-System-Concepts-Abraham-Silberschatz/dp/0470128720/) if you want to know how your code interacts with the system on which it is running. Want to go even deeper with code performance? [Take a look at computer architecture](http://www.amazon.com/Computer-Organization-Design-Fifth-Edition/dp/0124077269/) Another topic that should be covered is [computer networking](http://www.amazon.com/Computer-Networking-Top-Down-Approach-Edition/dp/0132856204/), as many applications these days don't work without a network. What are some good practices to follow while writing your code? Two books that are widely recommended are [Code Complete](http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670/) and [Pragmatic Programmer](http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X/). Though they cover a very wide range (everything from organizational hacks to unit testing to user design) of topics, it wouldn't hurt to check out Code Complete at the least, as it gives great tips on organizing functions and classes, modules and programs. All these techniques and technologies are just bits and pieces you put together with your programming language. You'll likely need to learn about other tools, other languages, debuggers and linters and optimizers, the list is endless. What helps light the path ahead is finding a mentor, someone that is well steeped in the craft, and is willing to show you how they work. This is best done in person, watching someone design and code. Also spend some time reading the code of others (GitHub is a great place for this) and interacting with them on public mailing lists and IRC channels. I hang out on Hacker News to hear about the latest tools and technologies (many posts to /r/programming come from Hacker News). See if there are any local programming clubs or talks that you can join, it'd be a great forum to find yourself a mentor. Lots of stuff here, happy to answer questions, but hope it's enough to get you started. Oh, yeah, the books, they're expensive but hopefully you can get your boss to buy them for you. It's in his/her best interest, as well as yours!
How does JS talk to Python? In other similar solutions usually Node does the bridge between JS and the OS, I assume this will be done in Python and that somehow JS will be able to do stuff at the OS level like accessing the filesystem.
"...unless you're Dutch." Can somebody explain this please.
Can you have methods in lists? Inheritance? If you use your classes only as storage, you need to read up on classes ASAP. [Here](https://docs.python.org/2/tutorial/classes.html) is a good starting point. And yeah, /r/learnpython.
I created a list of devops related articles that maybe helpful https://github.com/Leo-G/DevopsWiki
True, but it is an issue for the ecosystem: if it's super difficult to install less common packages, then that is not good for the user base.
The creator of Python, Guido van Rossum, is Dutch.
 import time while(True): &lt;insert code here&gt; time.sleep(15) edit: Changed true to True ;)
I'm just sort of starting with async myself, but maybe the [asyncio](https://docs.python.org/3/library/asyncio-eventloop.html#low-level-socket-operations) low-level-socket operations might be useful. And, yes, I know, this is not eventlet, it's a totally different approach to async.
 import smtplib import time fromaddr = 'email@gmail' toaddrs = 'email@gmail.com' username = 'email@gmail.com' password = 'password' with open('test.txt', 'r') as f: first_line = f.readline() msg = (first_line) server = smtplib.SMTP('smtp.gmail.com:587') server.ehlo() server.starttls() server.login(username, password) while True: server.sendmail(fromaddr, toaddrs, msg) time.sleep(15) server.quit() 
This is truly awesome, I am trying it out right now!
Just def __init__(self, **kwargs): for key, value in kwargs.items(): setattr(self, key, value) If you're passing in a dict full of attrs. Your first example sets class variables instead of instance variables. The second example just becomes redundant if you were to use setattr as you have already pointed out. 
Any joke that needs explaining is a bad joke. OP's qualifies as a bad joke.
&gt; Do you think this is a candidate for a bug report ? A similar bug is [already open for lambdas](https://bugs.python.org/issue25843).
Just another tool to do the job: https://github.com/ionelmc/python-fields
 **Clean Code: A Handbook of Agile Software Craftsmanship** |||| --:|:--|:-- Current|$33.32|Amazon (New) High|$44.30|Amazon (New) Low|$31.57|Amazon (New) |Average|$34.60|30 Day [Price History Chart and Sales Rank](http://i.imgur.com/RLLAe5k.png) | [FAQ](http://www.reddit.com/r/PriceZombie/wiki/index) 
If the attributes are flags of some sort, like 'trim\_whitespace', or other defaults that wont be modified, like 'decimal\_precision' I would most definitely declare them one by one in the \_\_init\_\_ function because you do want others to be able to read it and you might want to document them. If there are a lot of arguments I'd also try to determine if the class isn't doing to much, if some of them can be encapsulated by another class or named tuple instead, in order to group them sensibly. If the arguments are just arbitrary values I'd probably have a dict as a single argument.
I love pandas, but it is complete overkill for many csv tasks. It's memory intensive and doesn't process line by line. 
Thank you so much. This is what I was looking for. I guess that my code failed because I forgot to add spaces to the lines after while True.
Please give me a favor and read the article first, what the whole issue is about. Undocumented and possibly unintended coercion of numeric literals as elements of list comprehensions and only when written on the same line of code. 
Very neat! So cool to see under the hood, the history of a patch, see things improve.
Thanks. :-) 
Thank you, that helped a lot! I appreciate it.
Brilliant! And a great idea, not to mention implementation. Well done.
/u/juliob simply suggested that OP consider refactoring as an alternative. I saw nothing dogmatic in their comment.
Yea, you have to indent properly in python, won't work if it's not
Thanks for giving me my daily dose of C code. 
You're welcome :-). It is my first reddit post, I will start to share more whenever I find them. 
I'm going to second /u/Juliob's response and suggest that you should consider refactoring, but if your really do need a lot of default parameters, I think the best solution is: class X: def __init__( self, a=1, b=2, c=3, d=4): self.a = a self.b = b self.c = c self.d = d /u/Nicksil's [solution](https://www.reddit.com/r/Python/comments/3wxdni/askreddit_how_do_you_instantiate_a_class_with_a/cxznr57) doesn't raise an error when it gets unexpected arguments. /u/PhaethonPrime offered a slightly improved [solution](https://www.reddit.com/r/Python/comments/3wxdni/askreddit_how_do_you_instantiate_a_class_with_a/cxzq82a) which prevents intentional hackery, but silently ignores typos in a way that could very easily drive anyone trying to debug your code insane. You could remedy this by a slight augmentation: class X: _default = dict(a=1, b=2, c=3, d=4) def __init__(self, **kwargs): invalid_args = set(kwargs) - set(X._default) if invalid_args: raise TypeError( "invalid keyword arguments: {}" .format(invalid_args)) for key, val in X._default.items(): setattr(self, key, kwargs.get(key, val)) That adds some complexity (technical debt) and prevents most development environments like PyCharm from providing hints about the `__init__` signature or instance attributes. That's is an important consideration when your `__init__` signature is large. Finally, the simple solution allows you to easily add annotations. TL;DR: simple is better than complex 
Well, 1.0 *is* equal to 1 + 0j. Every real number is complex. Every integer is also a real number. Therefore, they are equal.
Constantly impressed by Continuum's commitment to open source development. 
TIL Thanks! 
Clean Code is very Java-centric. 
Interesting. I suppose I assumed that dict was very efficient since it's a hash table architecture. But I guess there's a huge difference between "very efficient" and "more efficient" when you're using a data structure a lot. edit: Now I'm reading more about Python's dict implementations: http://stackoverflow.com/questions/327311/how-are-pythons-built-in-dictionaries-implemented
In your question, you identified exactly what you need to do. Document your code. Every nontrivial function should have a sentence saying what it should do. Not how, what. Write comments like the maintenance coder inheriting your code is an axe murderer. Then learn git and its project flow. Start at [github](https://help.github.com/articles/good-resources-for-learning-git-and-github/). These two steps should take a few weeks. You won't be a master, just a bit better. Next time you start a project, document it, use git and reap the benefits. After that, figure out how to move to a job with coworkers. They will raise your game.
"very efficient" and "very very efficient" :-) 
You probably should move away from PyCrypto and toward cryptography.io. cryptography.io actually sits on top of OpenSSL rather than implementing its own crypto code like PyCrypto does.
That would work, but. I'm looking for a way to get a name set on any device when they run the script, and the majority of people aren't going to want to register a domain name just to use it.
Cool stuff, makes me want to learn c. Now that you finally succumbed to evil reddit, we need you in /r/learnpython too!
 print("Thank you. Your BMI is ",bmi(feet,inches,pounds,".")) should be print("Thank you. Your BMI is ",bmi(feet,inches,pounds),".")
Awesome bot, but nearly every single query times out and throws an error message. It was able to tell me how many teaspoons are in a cup and what time it was, but pretty much every other query failed. Examples: "Population of new york city" "distance from earth to the moon" Any tips? Thanks!
Oh my god, that was so dumb. That is very like me to make that mistake lol. Thanks! &amp;nbsp; It worked! Thanks!
Just a link to another reddit sub for python. /r/learnpython is more for beginners than /r/python, where we are now. Would be awesome if you spread your knowledge there if you have the time. And about reddit being evil, just a joke :)
Me too. I love how Anaconda is such a consistently good product and how it's free for personal use.
Give me C or give me death.
But why all caps? Are you really that angry to Windows? 
OH, GOT IT NOW, THANKS. 
The languages are completely different. One of the main arguments against too many arguments in Java is that you can't (can you now? Not seen newer Java) name the args. What are the args in `foo(a,b,c)` and how do you get them in the right order? In Python we have *named* arguments so I can do `foo(name='bar', size=12, currency='USD')` AND the function can raise/log if I miss an arg, or insert an extra arg. *Clean Code* is a really good book but you have to be careful about applying it to anything that isn't Java. A lot of it does apply to Python, but I don't think this part does. You can build a complex object in multiple steps via its subclasses (with only a few args to each), or implement hierarchial factories, or whatever, but it's not a requirement nor is it always a good idea.
I love it but my installs (both windows and osx) keep breaking in weird ways lately. It's to the point today where I am tired of googling fixes and just give up on the broken install and go use a machine or env that is still working. 
That looks great. Be sure to mark that as the answer!
&gt; Syncthing replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet. [https://syncthing.net/](https://syncthing.net/)
This isn't a "help with python" question. This is a "help with computer networking" question as well as a "help with distributed computing" question. You need a central server, or a server discovery service, to connect your client programs, if I'm reading your problem right.
[removed]
As it is a self answer, I need to wait for 2 days to mark it as an answer. But thanks. :-) 
that looks good, but I don't really understand what I can build with that. Do you have a screenshot maybe ? thanks :) 
It seams I'm working on something very similar. Haven't tryed it yet but have very good impressions on pybind11. I don't like that much the proposed cast solution in case of overload methods: .def("set", (void (Pet::*)(const std::string &amp;)) &amp;Pet::set, "Set the pet's name"); what I'm working on require something like: Wrap_Method_Of&lt;internal_type&gt;::With_Arguments&lt;long&gt;::use&lt;&amp;internal_type::set_int_val&gt; in such a case. Sadly it is still so verbose in straight cases. 
Yep. Conda, especially, has replaced a lot of stuff in my workflow.
I'm on a mac. I tried wireshark and HTTPScoop but neither will show encrypted packets.
Maybe you'd like to rephrase your question a bit more clearly? In Python **2.x**, running the left statement would return the right print(type("ABC")) # &lt;type 'str'&gt; print(type(u"ABC")) # &lt;type 'unicode'&gt; print(type(b"ABC")) # &lt;type 'str'&gt; In 2.x, string literals are by default interpreted to be a string of single byte characters. Hence the "b" specifier still returning a string, and the "u" specifier being a special multi-byte "unicode" type. However in Python **3.x**, it would be this print(type("ABC")) # &lt;class 'str'&gt; print(type(u"ABC")) # &lt;class 'str'&gt; print(type(b"ABC")) # &lt;class 'bytes'&gt; All 3.x strings are multi-byte unicode by default, so "ABC" and u"ABC both are 'str'. But to get a string of bytes, you need to specifically use the "b" in front of your literals. If you are worried about any other 2 and 3 incompatibilities during your Python Challenges, might I suggest switching to Python 2 for the remainder? 
I just wish it had more packages. There are some nice packages that aren't available through Anaconda, so I find that I use it and Pip about equally.
You left some important details quite vague. Will the Python and C/C++ both be running on the same system? You mention "Arduino/ Rasberry PI, etc", I'm not quite sure Python on Arduino is at a very mature stage. What will this C++ code be achieving, will it be passing any data back to Python to deal with? If not, is there a specific reason the C++ code could not be compiled to a binary(/exe), and then have Python execute externally?
Export as csv?
If you plan on doing any data manipulation, I highly recommend using [pandas](http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_excel.html) In my experience pandas can read pretty much any Excel file and give you something useful.
It's also free for commercial use, and redistribution... Not just personal use. 
I currently use canopy. Why would I want to switch? Are there advantages? 
One thing I found is that when you are processing input you are going through the WHOLE dictionary of accounts instead of just finding if that one account exists in it. And that is obviously wrong and with bigger number of accounts that would be pretty bad. 
If you use a programmers editor, it will highlight bracket pairs. This will help you avoid errors such as that. Secondly if you use a python linter, it would catch errors such as these. It's important to use good/proper tools. They give apprentice carpenters real tools. There's no reason why they can't give the same to apprentice programmers.
Shoot. You're right. Totally didn't see that till right now. I don't know what I was thinking. Thanks
Yeah. The not saving is actually intended behavior. The spec didn't want any persistence. 
Not to mention a lot of VC money as of late. See some of the recent posts at https://www.continuum.io/blog/news
Alright. I was thinking about that, and I usually do, but I remembered telling myself a long time ago not to, so i stopped, idk why. I should probably start doing it again.
Get a free Heroku account and be done with it. They set everything up for you. It's not like some others where you have to install your own stack.
Out of the box, its scientific software stack is great. 9/10 I can throw it on whatever machine I'm on, and have most of the Python tools I need.
I am not sure if it's the same but after using pip to update matplotlib, it broke. I found a few tips online I haven't tried yet but hopefully I'll get it working I use Canopy at work since we have a license and I didn't have a problem using pip to do it. 
Lesson number 1 in crypto: don't roll your own crypro. You did. There were the problems already mentioned. Then there is a lack of secure hmac so you aren't decrypting chosen ciphertexts (which can lead to some ugly behavior, which is not necessarily sufficiently protected by your except clause). You also leave the data unencrypted in memory until program exit, and use standard Python strings to store everything - both of which leaves the memory assigned and available for exploitation by any program running on the system. There are more issues, I'm sure, but I am on my phone. Whether any of these things matter will depend on your threat model. If you haven't defined a threat model... don't roll your own crypro. Edit: down voted for pointing out issues in code and design? Okay.
But how do you decrypt it?
Yes, my thinking is that python will run a function to get a measurement from an external device. The C/C++ code is not running all the time. I expect it to be called only when a calculation is needed. [Edit] The only specific reason for C++ is that this part of the code is already working and tested on a specific device. It does some complex calculations. [Edit] Python could call it externally, but I am not yet sure how to go about interacting or doing this and I might want to change the C++ code at a later date.
There's also the optimization enabled if the mapping is 1:1. You can do char:char mappings, rather than char:string.
I don't know what type of simulation work you do, but maybe learn MPI, and mpi4py? I'm not much of a scientist, but I've always had a lot of fun trying to parallelize things (if its the right problem).
Thanks for the link. Glad it being discussed at the right place.
I'm worried about an [XY Problem](http://xyproblem.info/). When asking for help, explain the problem you're having, not what you think the solution should be. I'm still not even sure if the Python and the C/C++ are running on the same machine or not.
I'm flying out on Thursday, so if you can get me into the beta by 14:15 GMT tomorrow, I'd be happy to check.
You could have used anaconda cloud to install matplotlib. Pick one of these: https://anaconda.org/search?q=matplotlib and then this: conda install -c https://conda.anaconda.org/USERNAME PACKAGE 
Gotta agree, I use paramiko any time i need to automate a bunch of SSH operations. It's lightweight and easy to use. Gets the job done.
So happy for everyone involved. I absolutely love Anaconda and Jupyter. The ease of use and intuitive interface makes it pure joy to use. My work flow is super slick for me. Create conda env -&gt; Fire up Jupyter Notebook -&gt; Generate workable solution -&gt; Write the code to .py files -&gt; Create project in Pycharm using Anaconda env and .py files -&gt; Iterate/Debug with pycharm and Jupyter -&gt; Finish project -&gt; To the VPS... Download miniconda or full anaconda to Digital Ocean VPS. Use the Exact same code/env with Ansible and I am off to the MF'ing races. 
I think you get the point.
This is awesome. You can simplify the 4-line block in next() that moves to the next character down to 1 line by using mod: self.position = (self.position + 1) % self.length I'm on mobile, so I hope this formats properly.
Context manager support would be great. 
Aldo, C++ is not portable when compiled, and Arduino is AVR-based while Raspberry PI is ARM, you would end up with very different compiled code. so, even Python C extension should be compiled for every platform. 
Yeah, just commit it to the dev branch, thank you &lt;3
This is nice and neat. I like it. I was actually working on something similar myself and yours is more abstracted making it more readable, looks like. I was just iterating over sys.argv to run the script with command line arguments in terminal though. As far as pycrypto goes, maybe someone has better suggestions, but I was leaning toward passlib (https://pythonhosted.org/passlib/index.html), which has a C implementation of bcrypt. 
Typically, you need to install the certificate the MitM proxy is using on the device you're trying to monitor. If your phone accepts the proxy's certificate (which it normally won't because it's self-signed), then the proxy can decrypt and re-encrypt SSL connections.
The main idea for pyspin is that: we put the decorated function to another process and when it finished, put something in the queue. In the meanwhile, the spinner keep rocking when the queue is empty. But how to do it with context manager? How can we reach the inner block func in your example.
/r/learnpython
personally I do class,static,properties,private,public but it doesn't matter
hey, being honest nothing is terribly wrong in there. I imagine that was a request from some company to prepare as a part of recruitment process. Could you maybe post the whole instructions they provided? if you want to talk more, just pm at twitter @macicpl
I've done something very close to that at work. Python would be only a minor fraction of the project here. The hardest part is the frontend (usually some kind of JS framework like Angular or React). API wouldn't be that hard and you're right about the use of sockets for some kind of Push-service, but I don't remember what technology we used for that (wasn't responsible for that part of the project). We used Redis for storing/queuing Push-messages, that's for sure. Anyway, don't be fooled by seeming "simplicity" of Google Docs - this is a very complex piece of software, developed by a big team over several years. The team (especially a bunch of competent fullstack guys, although they are a rare breed) is probably the first thing you should think of, if you're serious about such project.
I haven't rolled my own crypto? Did you even look at the implementation? There was an issue up to add HMAC, and I did add it. There is a lot more to be added to it, and I posted it for people to try so that I could debug the interface - which works. Again, I haven't rolled my own crypto. I used PyCrypto's implementation of AES-256 Rijndael in CBC mode. I did have in CFB, but I changed it to CBC because I have had more experience there and I know more about it. Once I learn a bit more about CFB, maybe I'll switch to it again. Also, the issue you point out of storing the data decrypted in memory is very difficult to fix in Python. Even the Cryptography.io library has made a warning with it - which is why I included at the bottom of the README. *cough*ifyouevenbotheredtoreadit*cough*...
I completely agree. Between this, work, and other things, I have to divide my time between this. This was a simple excuse for me to try out PyCrypto this weekend. It was around a total of ~13 hours of work maybe? I've been looking into PBKDF2 and its alternatives (bcrypt and scrypt). So, I'll see what I can do with those when I get the chance. I really wanted to get the core functionality of the manager down first before working more on the crypto. I posted it here to get, mainly, feedback on the interface. From what I can tell, people seem to like it. So, I'll continue forward with the current design I have in mind. :) 
Thanks! I need feedback on the interface, and it seems most people like it. For a library, I would recommend Cryptography.io. I haven't used much of PyCrypto despite using it here. I only used PyCrypto here to learn more about it and play with it. Cryptography.io is very nice and, like another user said, sits on top of OpenSSL.
I actually wrote this to play with PyCrypto. I usually use Cryptography.io in my other applications, and, so far, I prefer it. I haven't used pyOpenSSL, though. Maybe you've used it before? I was wondering because it is a wrapper for OpenSSL and looks pretty interesting, but haven't seen much use of it for the stuff I've been working on. After I'm done playing with PyCrypto, I'll probably move it over to Cryptography.io. Honestly, if I was going to keep releasing and managing this, I want to rewrite it in C++ and use Crypto++ so I can have more control over the memory. Python is nice and all, but for certain applications, I'm just more comfortable in different languages. C or C++, in this case, makes me more comfortable. Thanks for your suggestion! 
Alternative way to cache the results is to use `lru_cache` from the functools library: @lru_cache(maxsize=None) def fib(n): if n &lt; 2: return n return fib(n-1) + fib(n-2) That should yield a nice speedup using the standard library.
Why? It doesn't make a difference for english to begin with and you lose the ability to deal with languages that have chars outside of latin-1
I'd prefer nested Structs (preferably tri.struct.Struct https://github.com/TriOptima/tri.struct). That way you can still go getattr_path(ret, 'user__books__name') if you just use tri.declarative (https://github.com/TriOptima/tri.declarative), which you should :P
&gt; down voted for pointing out issues in code and design? Okay probably for violating the COC, dont hurt someone in the feelz. :P
I dunno. That retrying library is pretty sweet. I use so much serial, parallel and other low level communications. That library appears concise, well thought out and very pythonic.
Let's be fair here, you can say that for pretty much any benchmark ever written.
yes, I can see what you mean, XY makes sense. And yes they are on the same machine. I have a friend who is good at C/C++ and has written some code that interrogates a sensor, but he's no good outside of C++. I can scrap a python script together but no good at C/C++. I want to use his code. [Edit] How do we work together?
You learn something new every day. Though, I would have preferred it be called 'memoize'
No, on the same system as mentioned, XY makes sense now. 
Ok so following the "Python is not C" link I found out that I'm probably one of those scrubs writing unpythonic python. Seeing their solution to writing python not like C however I wonder how I can get there. How do I know which module to use to do what? Numpy is one of the more obvious ones and not doing big data in pure python but rather with a library that has a python interface is kind of obvious too, but is there a middle ground? At what point do I stop and say "wait a minute I should use a library to do this." ?
I don't get it, do you mean pure as immutable?
Yes, it is a shame that it wasn't named that.
There's no such thing as an EU address. Different countries have their own standards. I'm not aware of any Python libraries, but DIN 5008 might be a good starting point to get a handle on German addresses. Perhaps you could feed your address-looking strings into, say, the Google Maps API as a query to validate/normalise address. 
Me too, I actually found this decorator when I Googled for 'memoize Python'.
Pure means without using libraries and functions that are implemented in C. A large part of Python standard library is implemented in C for speed, that's why using sorted() will always be faster than writing your own sorting algorithm in Python.
Well, part of it is just getting to know the libraries that are out there. Jake VanderPlas has a very nice [video about the Python ecosystem](https://www.youtube.com/watch?v=5GlNDD7qbP4), for example. And the `itertools` and `collections` libraries are a godsend. If you're on unfamiliar ground it's just thinking "there's probably someone else who did this before me, let's see if there's a library for that", and then looking to see if there is one. That takes about five minutes but can be very rewarding because it saves you from a lot of coding. Otherwise, just keep coding and integrate stuff from new libraries as you find them.
Honestly I sort of consider that cheating. I mean if we're comparing languages for speed, then I'm interested in *that language*, not *C*. Any language can call C, if we allow for that it's a pretty meaningless comparison.
&gt; At what point do I stop and say "wait a minute I should use a library to do this." ? At the beginning! One of Python's main feature is to have an excellent (and optimized) standard libray ([vers. 2.x](https://docs.python.org/2/library/) [vers. 3.x](https://docs.python.org/3/library/)) and a powerful set of builtin functions ([vers. 2.x](https://docs.python.org/2/library/functions.html) [vers. 3.x](https://docs.python.org/3/library/functions.html)). Study those and you'll find easy methods to do thing you probably do by yourself. More, 90% of the times you'll find a package in the [PyPI](https://pypi.python.org/pypi) that solves the problem you are facing. Not every Package is written in the most pythonic way, and some are a little under-performing, but IMO the most pythonic way to solve a problem is to not re-invent the wheel and see if someone solved it before. But mainly I think it is about a way to think code, and you can find some clues on this approach in [PEP20](https://www.python.org/dev/peps/pep-0020/) (aka "import this") and in thinking "There must be a better way" every time you code as [Raymond Hettinger](http://pyvideo.org/speaker/138/raymond-hettinger) always says.
Did anyone tried [plumbum](https://github.com/tomerfiliba/plumbum?__hstc=62641971.f79ab8d322cf05c165b7421e17718520.1450273949412.1450273949412.1450275811075.2&amp;__hssc=62641971.1.1450275811075&amp;__hsfp=1515130095)? Opinions?
It's important to benchmark realistic code. Otherwise, what's the point? You would not implement your own pure Python sort in Python when you have `sorted()` in the standard library, so benchmarking a pure Python sort is pointless. Some parts of some C libraries are hand-rolled assembler, especially in older code. Mostly, C programmers get no aggro over that. How is Python different?
It seems to do exactly what I would want such a packages to do. A question though; `pip install pomegranate` seems to pull an epic fail. I've added an issue to github. If anybody has the time, could they check it out? Thanks! 
This makes the algorithm execute in practically* constant time, a massive speedup. import timeit from functools import lru_cache def fib(n): if n &lt; 2: return n return fib(n-1) + fib(n-2) @lru_cache(maxsize=None) def fib_cache(n): if n &lt; 2: return n return fib_cache(n-1) + fib_cache(n-2) for num in range(8): print(num) print('regular: ', timeit.timeit('fib(%d)' % num, setup='from __main__ import fib')) print('cached: ', timeit.timeit('fib_cache(%d)' % num, setup='from __main__ import fib_cache')) fib_cache.cache_clear() 0 regular: 0.09287170396419242 cached: 0.6701716289971955 1 regular: 0.08944826200604439 cached: 0.6428572519798763 2 regular: 0.2952958180103451 cached: 0.636898260039743 3 regular: 0.5089809420169331 cached: 0.632060952950269 4 regular: 0.904677462996915 cached: 0.6344322839868255 5 regular: 1.50502168800449 cached: 0.638174407009501 6 regular: 2.494161017006263 cached: 0.632484337023925 7 regular: 4.096015847986564 cached: 0.6297285950277001 
I think the goal is to compare languages using a well-known algorithm, not to see how fast sorting would be in the real world. Speed for custom code is very relevant for technical computing.
Here you'll find some holt winters which I've tried using: https://gist.github.com/andrequeiroz/5888967. Depending on your business industry, this might produce somewhat reliable results. I can tell you though, that from a e-commerce perspective, this will in the best case lead to +30%-50% accuracy (based on weekly based historical data from 3 years, forecast horizon of 6 weeks) . I've went ahead and bought some forecasting books and more or less written code in vba with the use of solver which gives me a better reliability and flexibility (e.g. http://www.amazon.com/Principles-Business-Forecasting-Keith-Ord/dp/0324311273/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1450279175&amp;sr=1-1&amp;keywords=principles+of+business+forecasting) Let us know if you do find something though ^^ 
For Danish adresses, there is DAWA, that among other things can [sanitize an address](http://dawa.aws.dk/adressedok#datavask). I don't think there is a similar EU wide service, but this will at least cover the first one or two % of your task. Edit: Typo
Could someone explain how the static typing made such a significant difference in the runtime performance?
Thanks! I've been going with Pyramid for a while and haven't looked back.
My bad, I *knew* there was somewhere to post it haha I'm just kinda retarded.
Just tried it. On my install, it runs slightly faster than the Cython compiled sequential version of fib. Quite impressive. I'll update my post as soon as it is back on line (seems down now).
"Cryptography" is about the entire process to turn encrypted bytes to not encrypted bytes, and back again. It's the primitives, it's the envelope wrapping your encrypted byte stream, it's how you handle buffers of data (encrypted or not), it's everything! Heartbleed wasn't caused by bad cryptographic primitives, it was caused by a *protocol* extension, which resulted in reading arbitrary bytes. As I said in my other post, this shit is hard. And getting it *almost* right doesn't count at all - you mess up one part, and your secrets are exposed. The people who do this for money are a lot more ruthless, and your choice of CBC vs. CFB won't matter in the slightest if everything else isn't 100% perfect. You used Python (I know, I'm a Python lover myself, been at it for almost almost 17 years now), which makes the 90% of the application that *isn't* AES both easier and harder to get right. And right now, it's not resistant to a collection of attacks - of which I already mentioned several.
Works for me now, maybe it was just temporarily down.
It's actually pretty easy to directly convert a pure-python package into a conda package. We have automated ways of doing that and it basically works for most things. The biggest challenges are when: * a package's dependency specification in setup.py is incorrect or imprecise * a package's setup.py doesn't include everything it really needs in order for its tests to pass; * a package has native code dependencies and its author didn't consider the build process on non-Linux operating systems We extensively test all the packages that are included in Anaconda by default, because we want new users to Python (and experienced users!) to have a great experience and not get random ImportError or segfaults. Moving forward, we will be improving the environment management features so that you don't strictly need conda packages, but can also use pip/wheel, node/npm, R packages, java JARs, etc. and still get good sandboxing and reproducibility of your data science/scientific computing scripts and notebooks. 
ayy lmao
You haven't made any specific points on the current application and where it falls short. HMAC was implemented quickly, and I'm verifying plaintext. I'm going to switch that to verifying the ciphertext when I get the chance. You seem to be giving a lot of grand advice, but no way on where it falls short. If it's vulnerable, make a PoC and show me. Otherwise, it's useless to be telling me what *should* be happening when you can't point out specific examples.
Yes
Lol
First, I really am biased in that I really would prefer to use Python vs language x. That said, a couple of thoughts here: * It's worth mentioning that the ideal code written shouldn't need much effort in optimization. Said differently, if there is a generally accepted mechanism for producing a result, and a trick could be used to increase performance, the generally accepted mechanism should be the basis for comparison and not the trick. Modifying an algorithm isn't a good trick -- it should be possible to modify the algorithm in both languages for a real comparison. * Python's power is at least partially its rapid prototyping. Spending cycles optimizing code that was rapidly prototyping is worth looking at, but also should be factored in the decision process for deciding on language a vs language b. If we already know at the start that we need to spend a large amount of time optimizing a chunk of code because it's going to be slow due to the interpreter, perhaps we should have picked a different language from the start. * The most performant implementations I've seen for python are almost universally either: a. using the standard python library (which was written mostly in c) b. extending python with a new c/c++ library (e.g. numpy or even cython) c. using a different interpreter (e.g. pypy, numba) Of the three, I think that (c) is probably the best (least extra steps) from a developer viewpoint. In an ideal world, someone would have figured out how to make python as fast as c/c++ using a new interpreter so I can keep my code and process identical. Since the latter two of the three involve not using cPython (or the python standard), I really think they should be excluded from actual benchmarking. Fundamentally something seems broken if you have to move out of your chosen language to another one for performance. And given that part of Julia's draw is that it is performant and provides better rapid prototyping than a language like java or c/c++ -- without having to leave Julia's programming base -- seems like a better option overall if we're looking purely at performance metrics.
It's like benchmarking a hockey stick by using it to bounce a basketball.
Learning the language: always good advice. I have this old script, a Perl script that generates passwords from /usr/share/dict/words. The person who wrote it did it in classic '90s Perl 5. At the time I was using it, pwgen iirc didn't ship with OS X and for whatever reason wasn't available in package managers. Whatever, because I was learning Ruby at the time, I rewrote it in Ruby. And then it turned into my obsessive hobby. Naively rewriting '90s Perl in Ruby is disastrously slow. Actually learning Ruby slightly after learning basics about Python was a real boon, because concepts like, "use the built in functions" and "make it fast enough", really help. I ended up with something that bore little resemblance to the original, but was about as fast as the original and did more or less the same thing.
It's got very specific behaviour pertaining the the initialism in its name - LRU. Unlike a simple memoizing function which could keep *all* function calls in memory (and therefore be a memory leak if used wrongly), it has a limit, and throws out the Least Frequently Used items when it hits the limit. If called without arguments it defaults the limit to 128, instead of being by default something that could use all available memory in a long running process.
ok. i'll have to look more into this.
Suggestions and comments on the projects are all accepted.. I'm a first year Soft Eng Student.
Why was Julia even created ????
Your non-hmac issues aren't realistic. At the point that a program would be capable of arbitrary memory reads in another process, it will also be capable of arbitrary keylogging and monkey patching into any external libraries like pycrypto or openssl. All of these make any password manager useless. That you had to reach that far too find an issue just goes to show that he implemented everything right.
The python.org Tkinter page is badly outdated. Python is an Open Source project and contributions are welcome, so why don't you update this page? I have been working on a Tkinter project and have found that John W. Shipman's reference is the most complete and up-to-date. The TkDocs Tutorial is also highly recommended. The "Tk Commands" website loads for me. I suspect your company or school may be blocking it because the domain ends in ".tk". Try it from your mobile device when you are not connected to the corporate or campus wifi. Also, try reading the docstrings for the library and for the individual functions. They are often more up-to-date than the printed documentation, especially if the latter is not automatically generated from the library source code. Finally, I have found that with open source projects with outdated or incomplete documentation the best dictum is "Use the source, Luke!" Sometime you just have to examine the source. Recently I had to do this when I had a question about the Tkinter color picker widget in Windows. I turned out the question had nothing at all to do with Tkinter but instead the details of the Windows API function called by Tk's color picker.
Nice. Thanks for the link
Instead of defining excessive variables for `while` loops, just do: while True: if thing_done: break You can input text into the `input()` function and it'll act like print. If you want to put the input cursor on a new line, just add `\n` to the end of the string like `input('Type url here:\n')`. `if` and `elif` in python don't have to have parenthesis, so your parenthesis are extraneous. Line 25 can be condensed to `index += 3`. There's no reason to `prettify` the BeautifulSoup object if you aren't going to be printing out the full source. Personally I would change `str2` to `img_type` or something along those lines. I don't like to have variables named so close to built in names (`str`). It also helps people who aren't you understand what's going on a little better. In this case it was pretty obvious, but there are times when that will make a difference. I don't really see a need to define `l` if you're just using it once, but that might just be me being picky. 
break julia's legs
Google provides a geocoding endpoint that could be a good start. There's also Google i18n data API used by libaddressinput that can give you an official format for a particular country.
Cool, I'll check that out. I've also considered setting it up so that if you try to reference an index that is missing, it will go head and run whatever needs to be run to get that additional property. I'll check out tri.declarative, I've not got any real experience with django so the tag line wasn't super helpful [1], but it looks interesting. With these changes, is graphcore something you would be interested in trying out? Is there anything else stopping you, or any particular use cases you are interested in? [1] tri.declarative contains class decorators to define classes with subclass semantics in the style of django Model classes.
ok so what makes it (significantly) better than Python ? 
Only runs on Linux. Mac uses a virtual box control machine to do docker. 
It makes a huge difference when you deal with mathematical quantities like \alpha or \gamma that are typically encoded as latin-1. Furthermore, all the English looking characters (e.g. French/Spanish ones) work fine in latin-1, but die horribly in utf-8 because they're typically encoded in latin-1. If you live in a world of utf-8 only, then yes, utf-8 is fine. However, encodings are often wrong and encodings for **my** standard character sets should work in **my** code. I couldn't care less about support for Chinese for my open source project despite it being used by people in China. It'll work; just set your encoding. The solution to the unicode problem is to punt the problem, not guess. If you're going to have a default, set a default based on what you run into, not what you wish you ran into.
You could give [Netmiko](https://github.com/ktbyers/netmiko) a try. It is a wrapper around Paramiko. I haven't tested it myself on Windows, but read that some people have successfully.
Not only. I would better say good performances when using only Julia code. The idea is that you don't have to use two languages (python for prototyping and C or Fortran for a specialized, efficient version of your code) to get fast code. You write generic Julia code like you would write Python/Matlab/Scilab/Octave for prototyping and if you need some speedup, you just specify types/etc to get a more specialized and faster code out of the JIT compilation
&gt;One of Python's main feature is to have an excellent (and optimized) standard libray "Batteries included", like pythonistas put it
Yep..I tested it and it worked fine..just the way I wanted too...
Thanks for the post. I like the idea of extending python.
It's been a long time since my c days.