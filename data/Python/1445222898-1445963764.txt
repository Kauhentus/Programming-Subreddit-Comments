No. In order to create one element tuple, you need to put a comma after the element before closing paren, like this: `x = ("a",)` This is simple string if you use `x = ("a")`
I automated scraping /r/wallpapers to run daily for a while so I'd always have new desktop backgrounds. Then one day a VERY NSFW background found its way into my collection...Until I figure out how to detect "man hammers" in pictures, it won't be used for a while.
Look into Brython, it's client side python. Less than the whole standard library is supported, though.
true. I guess I need to communicate better to be more on point. I definitely think there is a correlation to that with how you write code?
https://xkcd.com/927/
I'm a network engineer. We have about 140 Riverbeds across our estate and I needed to run a weekly report on each one of those, so wrote a script to logon, run a 'show' command and parse the tabled output into my format and then export to an Excel spreadsheet. Second idea I'm working on is a templating solution so that new sites can be rolled out by filling in a web page which will spit the router and switch configs back at you.
Downloading the top posts from my favorite subreddits every morning, removing the ones I've already seen before and keeping the rest ready in a single HTML file for me to browse offline. Particularly useful for image heavy subs like /r/funny, where clicking on each post and waiting for it to load is a pain
I used to hail those who hail Satan on Twitter. Then Twitter murdered me a few times and I gave up. Here are my earthly remains: https://twitter.com/hailbot666
I have a similar script for 4chan wallpapers. We play a dangerous game, my friend.
download the tar.gz from [pypi](https://pypi.python.org/pypi/ciscoconfparse/1.2.37) pip install ./downloads/SomePackage-1.0.4.tar.gz
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
This could be exactly what I have been looking for, thank you.
stupid. there’s licenses for that.
Might be able to use [this](https://github.com/hhatto/nude.py)
*Something* else -- but not "finally", because of how that works in exception handlers: you'd expect the "finally" clause to happen no matter whether the loop ran to completion or was "broken out of"... but that's just what the next statement after the loop does :) Raymond Hettinger proposed "nobreak". I have come to like the "else:" clause on loops with a possible `break` in their bodies, but I always always comment them, if only for my own sake: for x in iter: if cond(x): break ... else: # nobreak # cond was never true, act accordingly ... 
I think this article, while it gets to a number of interesting problems, only begins to skim the surface with the awfulness that is Python packaging. One area of contention (of several) I seem to keep beating my head against recently, is the level of insanity surrounding distributing packages and their dependencies locally within my org. These are all packages which can't be open sourced, and need to _just work_; we have a DevPi server, but because of a number of truly short-sighted [changes](https://github.com/pypa/pip/pull/1519) and [problems](https://github.com/pypa/pip/issues/2822), it ends up being a major exercise in hairpulling to distribute packages. Even though those specific use cases are ugly (like hard coding dependency links), it really seems to indicate that underneath it all the distutils/setuptools library is really bad at handling usecases that don't involve exclusive use of PyPI packages, or god forbid anything that that's remotely polyglot (see the total mess surrounding binary packages and what it takes to distribute *anything* with C bindings). This is certainly something that Java (and Scala) get a lot more right than Python; I can just specify the Maven (or SBT) repos to pull from and **bam** it's done no worries, it works as expected, and thanks to the mature packaing ecosystem there, distribution is also super simple. Often I don't have to do anything other than just drop a new JAR or WAR file in place, and nothing else is needed. It would truly be an awesome feature for me to not have to hack around the tools that really only seem to be there to work with PyPI, and to have the ease of distribution of Java, but I guess I can just keep dreaming.
Deciding what to put in a `try` block is a bit like deciding what to put in a function. The point isn’t really how long that piece of code is, it’s whether it does a single job and works as a self-contained unit. If you have a single operation that can either succeed or fail, and you can do something useful immediately if it fails, then yes, put a single line of code in a `try` block. On the other hand, if you have an algorithm with multiple steps and any of those steps failing will cause the algorithm as a whole to fail, you wrap the whole algorithm in a `try` block and recover somewhere higher up in your design where you know how to deal with the failure. Alternatively, you might consider extracting the part that can fail into a separate function if that makes sense, in which case you probably reduce back to the single operation case above.
My chemistry homework...
Imagine that there are companies that explicitly don't want automated testing. Working in outsourcing taught me few things. Among them: never get surprised.
Well.. not exactly. See what I'm imagining is more like a GUI/TUI of the entire header layout similar to: [THIS](http://2.bp.blogspot.com/-c7lQgK3nBik/UuiBitfGguI/AAAAAAAAFgg/sKC0ic-26WA/s1600/eth-ip-tcp-header.jpg) where one can manipulate the bits directly, and as they do so, useful stats such as CRC, IHL, Total Length etc are updated on-the-fly. This way it can be used both as a study-aid to teach IP/TCP/UDP/ICMP packet structure and also could be used to generate the cmdline for scapy. Get where I'm going with this?
yes. sweet and simple, and perfectly describes why it's executing. I love the `else` functionality python as in for/while/try, but it seems really stupid to use the word else. 
OpenCV
probably a better use for reduce would be worth looking into, guido's opinion on reduce is generally "I wish I never added it, as all it is used for is `sum`"
Always depends on what you're doing and why. For the most part, I put the least in try as possible, only the exact part that throws that specific exception. One case where I might wrap the entire main function in a try is with: def main(): try: most_logic() except KeyboardInterrupt: clean_up_after_ctrl_c() I handle the ctrl-c signal for the whole program and clean up stuff if the user presses it. If you have a script that processes a huge file and takes a long time, you might want to be able to ctrl-C that and clean up any intermediate files it could have created. Cleaner behavior, and easy to modify too. I don't see anything wrong with wrapping pretty much the whole program in a try for catching that specifically. If anything, you don't dump stacktrace when a user kills the program on purpose (unless they'd only do it in the event of a bug and need that stacktrace). I could see someone doing something similar where they write their own exception and catch it top level and just exit out of the program. 
Personally I prefer the else in this situation. It's something your eyes can skip over pretty easily. Easier for me to read if the non-break logic is in its own block. But as an old boss once told me, exception handling and break statements are like gotos. They essentially are gotos. They can be abused and make a program very hard to analyze. If you have no idea why something happened the way it did, and it could have breaked early and skipped some logic, then it might be a good idea to refactor that bit.
 print('x is true' if x else 'x is false') 
[Spyder](https://pythonhosted.org/spyder/) is a decent editor which allows you to run scripts and show you the results. You can also inspect the variables your script defines.
What os do you test this on? I have a similar project and windows is awful to work with for this. Can you tell me what packages you're using?
Yeah, I tend to use that a lot. It works well for a lot of really simple things that don't need 4 lines to express. but in that specific example I'd write shouldContinue = (x == 5)
Wait wtf coroutines are native in python, or will be? Just looked into it... Fuck, it's really time for me to move off of 2.7 and into 3 world.
Agree. But still, there it is.
there is a [github repo](https://github.com/ali2992/IP-Scrape), couple of things to note, I wrote this about 2 years ago as one of my first python scripts so there are a couple of things I would now do differently, mainly the plaintext user details. But, it's still working fine 2 years later!
I have something similar so that I can log into my FTP-server that lives on my NAS. I only run a script on startup on my desktop though. And store the IP in my Dropbox. My IP doesn't change very often, so seems to work fine for me. But it's not flawless. I don't have a computer running 24/7 except the NAS. And scheduling a python script on that is a bit of a hassel. So using this for now at least.
Virtual machine cloning and provisioning on vmware. What used to be a manual and error-prone process became running a python script against a CSV file (mostly because I was lazy to follow thru with xls(x) reading...)
Automation of code deployment for Webmethods. Actually i can deploy 70 + packages over 40 servers in less than 10 minutes.
That looks not too bad, if you have to use mongodb.
Use scapy and build a GUI. 
While the author has some nice points about docs vs. a sane system he is unqualified to fix this problem while he believes the following; &gt; niche problems like C extensions and &gt; What if there would be a build system just for pure-Python &gt; distributions (and maybe some C extension with no &gt; dependencies)? web developer types created the quagmire we are in by jumping in and trying to fix shit they don't understand.
Generation of a VHDL template which is very verbose: https://github.com/andrecp/vhdl_gen
Normally I don't reply to troll posts but I'm afraid people might take you seriously here. Most of the packages in PyPI don't ship any compiled code. In addition to that, the requirements of compiled code are only met half-way. Numpy and matplotlib have customized the setup.py code so much they might as well use their own system built from scratch. It doesn't even meet the requirements of an simple *optional* C extension. You need custom distutils commands for that ... So my point is: why aim to support all usecases if that's a ridiculously impossible job? And if specialized tools solve specialized usecases better? I'm not making any concrete proposal, I'm just making a note of few design considerations a new system should have. If you think it's a bad idea to aim for simplicity then stop and think about why Distutils2 failed to improve and get into Py3. Extensibility is another design goal and I'm not suggesting anywhere that it's not desirable.
Maybe NoIP free DNS services can help you with that?
I am not using virtualenv. I am installing the package on a fresh docker instance. A mentions B in its dependencies. both get installed. but upon importing A, it fails with the error "no module named B" whereas everything works fine when the same thing is installed via pip.
Seeing this post before prompted me to write [flit](http://flit.readthedocs.org/en/latest/). As the post suggests, it's an easy way to distribute a pure-Python package using a single file, `flit.ini`. In particular, it assumes that all the files inside your package are meant to be distributed, so there's no need for `package_data` or `MANIFEST.in`. It can make a wheel and upload it to PyPI, and your users can install it normally with pip.
username checks out 😂
Dynamic-DNS sites do just that. You cron something to make a HTTP request every few hours. They set a DNS record for the address the request came from. Then, you just "ssh rpi-ali2992.example.com" . No email.
wait. aren't strings supposed to be immutable, in python? someone more expert than me can tell why is that working?
Just found this thread on Google after getting stuck on the same problem. In case you never got it and still want to continue, what worked for me was resetting the whole thing and just setting bool_three to "False" since that's what the result ends up anyway. Even that didn't work without resetting it first, not sure why.
I'm going through this at the moment. Sometimes I have a PyPI package that I need to fix up, so it needs to be copied out of site-packages, but how to do that without creating a whole parallel directory of these libraries and perform either path-munging or import renaming, I don't know. I tried copying one such library into my project and it broke because it assumed it was always installed into site-packages and couldn't be referenced directly. Worse, a library that depended on it imports it from site-packages and trying to 'intercept' that and get it to use my new version was not worth the effort. Much of which is to say, the problem isn't 'packaging tools' on Python but the whole notion of how it handles modular software. If you can't bolt together different bits of software in a relatively robust fashion then no amount of tooling is going to make the distribution and encapsulation of it much easier.
You can use pip to uninstall a package you installed with setup.py
So my solution was to use fpm to create rpms, and distribute them to production in a private repo. Fpm allows me to specify dependencies from the command line, so packages like python-ldap can depend on the system package openldap. https://github.com/jordansissel/fpm/wiki
Py.test
 How would you do this by hand? Say someone gives you the number 5. How many spaces and stars do you put on the first line? Next? Next? How do you know when you're half way done, and what do you need to start doing differently at that point? How do you know when you're done?
After your text, press enter twice and then four spaces before each new line of the diamond.
Show us the code you have. And try /r/learnpython
Are you asking me, because I am not sure.
def main(): get_input = int(input("Enter the number of rows (or -1 or -99 to quit):")) j = get_input - 1 k = 7 p = 1 for i in range(get_input, 0, -1): print (" " * k," *" * i) k -=1 while j &gt; 1: j -= 1 print (" " * p," *" * j) p +=1 main() J, K, and P I am just messing around with so they aren't neccessary.
I guess that just says that their API is good.
Where's your Dockerfile?
See https://docs.python.org/3/whatsnew/3.5.html
I really like what I have seen of flit so far. Just curious, do you have any stats on how many people are using it?
Using docker to ship a Linux vm to a windows machine IS overkill. What I want is a binary to hand off to the sysadmins, not a Linux vm. Linux containers as binaries are bloated now, but likely to slim down as it matures. As far as memory and cpu utilization however, Linux container tech like docker or lxc are a lot less demanding compared to VMs. This translates to being able to pack a server more densely with single service Linux containers vs single service VMs. Thanks for the suggestion though, just not the right tool for this job. 
I'm sitting here almost crying laughing from your comment.
Nice I had one where you login using linked ins authentication api then parse all the text in the persons profile and compare it to job postings on Craigslist and return to a web page the body and contact info for each cl post. Had it check some other job posting sites too. Too bad LinkedIn locked access to their api, assholes. It was one of the more useful apps I made 
First of all, this belongs to /r/learnpython Here are some hints: either read the number as a string directly or do the following to get a list of the individual digits: digits = list(str(219)) then, perform your magic algorithm on every item in the list and wrap in back to a integer like this: int(''.join(digits)) 
Sorry, I wasn't looking to have someone do all the work for me, just help getting pointed in the right direction. I am trying to use tutorials and stuff to get my feet wet and build on what I have used before, but I am probably still missing the fundamentals. This approach is very helpful though, I will try to hammer at it myself some more. Thank you.
You're correct but your example still doesn't demonstrate why it's useful. Suppose you've got a list and for whatever reason, you can't turn it into a set (there's duplicate data, it would be too expensive, you're testing nested attributes and constructing the set would be ugly and complicated, or whatever). You need to verify you have a specific piece of information in the list. Without `for-else`, you might do this: found = None for elem in elems: if elem.foo.bar = 'baz': found = elem if found is None: return freak_out() party_time(found) `for-else` simplifies the code: for elem in elems: if elem.foo.bar = 'baz': break else: return freak_out() party_time(elem) This has no temporary variables, the only condition is the one you need to validate your data, and (in my opinion) control flow proceeds more naturally.
I think the point is that you need to be aware where indices start, if the character at index 17 (which one is that anyways?) is included in the slice or not... I doubt that the goal is teaching good coding practices with this, they probably rather want to check if you understand the language primitives.
Hey man this looks awesome! I'll definitely look into transferring my projects over to flit
I agree with the need to teach exacty where the thing ends, but you can do that with a much shorter string. It just seems like making people count 17 is (a) over-long adding nothing to the question when 3 or 4 would do, and (b) encouraging this kind of code.
For a one time thing, that's maybe *OK*, but it really defeats the purpose of ever having anything like Pip.
Which websites do you scrape for local jobs?
What library do you use for voice recognition? 
Do you know if there's a way to tell conda "just install the requirements for package XXX"? It'd be much easier if I could do something like conda install --requirements XXX pip install XXX rather than conda install numpy, scipy, matplotlib, pandas, scikit-learn.... pip install XXX And even worse with the latter case, I have to remember to modify my install instructions every time another dependency is introduced.
I used [Dragonfly](https://github.com/t4ngo/dragonfly) only because it was the first library that I looked into. If there are more modern libraries for voice, I would love to know about em. This was more of a proof of concept than anything else.
what about pycontracts? Edit: reading the above explanation makes me think this is basically the same as pycontracts
ha ha ... (y)
I love the concept, but I think it's better to use [Mypy](http://www.mypy-lang.org/) which conforms to [the standard for type-hinting](https://www.python.org/dev/peps/pep-0484/). Does PySignature offer anything significant that Mypy does not?
Partly because I get so many emails already, and partly to practice using Twitter's API. 
Is that the Zybook ebook? Edit: nevermind, it is. OP, are you using the book right now? How do you like it?
or '/r/python' ;-)
Would be great, right? Too bad publishers and authors are mostly incentivized to NOT do this.
&gt; http needs to die HTTP is still used if you're using encrypted traffic, it's just that TLS/SSL is used to secure it. `s/http/unsecured http`
 **Hello World_: Computer Programming for Kids and Other Beginners** |||| --:|:--|:-- Current|$28.96|Amazon (New) High|$30.88|Amazon (New) Low|$21.81|Amazon (New) |Average|$28.96|30 Day [Price History Chart and Sales Rank](http://i.imgur.com/9nV4AOs.png) | [FAQ](http://www.reddit.com/r/PriceZombie/wiki/index) 
For tech textbooks are fine. Teach people the fundamentals: how programming structures work, how to read documentation, etc. That is more valuable than a tutorial book with the latest changes removing depricated info
Ah I see. Thank you for the clarification. &gt; Another important reason is that we are required to use python 2.7 because of some libraries, and Mypy requires python 3.2+ because of parameter annotations. I know the Mypy team is working on Python 2 support but as far as I know there's no timeline for it. I'm not even certain if they consider it a large priority.
makes sense thanks for the response!
PyContracts is really cool. And yes, PySignature is a very similar idea (of course, with less features and probably way less robust at this time). Our approach is a little different: * PyContracts specifies contracts mostly as strings. We went with objects/classes for allow syntactic errors to be easily detected by tools like pylint. * I like the way PySignature handles variadic arguments (both \*args and \*\*kwargs) and even validates that the signature is consistent with the way the parameters are declared. * PyContracts offers some really cool features for debugging (such as # and disabling contracts). I feel like PyContracts is great for validating (to some degree) the correctness of the program. PySignature is intended to be run in production, in order to quickly validate input parameters that come from the internet and generate useful and clear error messages for the clients. At this point in time, both projects overlap in functionality and it would be wise to opt for pycontracts, but we're planning to add a couple of extra features such as invariant types in object properties and automatic type casting where possible. Why? Because we deal a lot of the time with parameters that are received as strings but are to be treated as something else, and since the signature already specifies the types, we can avoid duplicating knowledge. Edit: Formatting
Quick question: can anyone see this? :)
Leo is not new. It's been around for at least a decade IIRC. It's main selling point (i.e.what only it can do), is that it separates source code from source files. You tell it which code goes in which files, while you are free to organise elements of you program any way you want, including duplicate nodes. That means if you're working on a bug, you can create a view with all relevant parts of the code together, regardless of how many separate files they're actually in. 
Code: https://github.com/thebarbershopper/bombly
Yeah, I know. And since subprocess isn't pipe friendly, even you wanted to use sed, grep or awk under the covers you'd have to import popen and do some crazy magic. I honestly think rigging your own subprocess feature that DOES accept pipes wouldn't be hard at all, though, and have come close to motivating myself to implement it several times.
Just as long as you're not paying for anything on that site.
things like PyInstaller, Py2exe, CX_Freeze, Py2App, etc ... **definitely can work**. But as someone else has mentioned, the major issue is the shit-storm that happens when they don't work. If you are trying to distribute something to your non-programming friends then I have found you essentially have to have a working test machine (or VM) for all possible OS's they may be needing to use. Then you need to build and package the app for all these test cases and make sure it works. Otherwise you end up with a dozen questions about cryptic errors where it works on linux but not windows, works on win7 but not win 10 or Xp, etc. It really comes down to the fact that debugging when and why things like PyInstaller don't work can be a very time consuming process - when often the only issue is figuring out the 'correct' way to tell the packaging program 'Hey, I need the following packages installed alongside my code: X v 1.x.y; Y v 2.a.b; Z v 0.1.1, etc... and while you're at it please include the following non-python files: a.jpg, b.png, etc ...' 
Reddit in a single comment
This isn't entirely true. If privacy really is a concern for you, the culture of encryption needs to change from opt-in to opt-out. Data both in motion and at rest should be encrypted by default unless there's a *very* good reason not to. There's no downside to using TLS. Some may argue performance but I'd remind them that it's almost 2016 and that argument died years ago. Those were the days when HTTP had a place. This isn't true anymore in the age of big data collection and retention by both large corporations and nationstates. In your particular example, it should 100% be encrypted if there's an online ordering feature on the same domain. Otherwise, someone who can mitm your traffic may inject some JS that will happily sniff away your CC info even after you've migrated to TLS.
Check out the examples about half way down the article. Not POST, but easy enough to adapt to a POST: http://www.giantflyingsaucer.com/blog/?p=5557 (Uses Python 3.4 in the article and asyncio)
Bookmarked for when I buy the game.
You also didn't say there was no online ordering. But regardless, my point stands. There's no reason to use HTTP over HTTPS. It's not about keeping a menu secret, it's about changing the landscape of the internet and how it moves/stores data.
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
Since I'm not building any windows apps or including binaries or data in my packages I'm not really running into any of these problems. Pure python on mac &amp; linux is merely a matter of: $ pip install foo. Ideally after creating a virtualenv for it. This seems to cover that 80% really, really well. Right? and Nuitka seemed to create an executable very well, though I haven't really run it through its paces enough or compared it to other solutions. For that last 20%, I would love to see the [Hitchhikers Guide to Packaging](https://the-hitchhikers-guide-to-packaging.readthedocs.org/en/latest/index.html) updated to help.
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck! Edit: at /r/learnpython you probably won't have to pay anyone and odds are you will end up with a decent understanding of what you're doing.
I've got two people recommending Spyder, so it will be my first try!
How is Spyder different from Notepad++?
Thanks!
Thanks! It looks promising 
Pretty cool changes. I wish I could convince my coworkers that it's time to move on to python 3. Coroutines alone are a good reason to move on
Ever try to explain to a pizza shop owner why they need to pay $100 for something that they don't truly need and do not understand at all?
(1) Textbooks are obsolete, one should use online information or perhaps subscription online information. There isn't really any information on learning Python that's not in the web docs or you can't get from a good free site. (2) Some organisations require students to purchase the books from their own store, and prevent the use of 2nd hand books.
It really depends on how you look at it. No, browsing your local pizza shop isnt going to expose your credit card or bank info but maybe a week later you start getting coupons in the mail for 'insert shitty chain here' because somewhere along the connection, somebody was sniffing and sold your pizza chain preferences to a corporation. Silly? Maybe. I mean, who cares where you like to eat pizza right? What happens when its researching an illness, or shopping for baby clothes, or researching attorneys, etc. etc. etc. Let me give you a different example. You are not getting along with your spouse so you do some casual research on a divorce attorney. Maybe the marriage is still savable and you are just curious. You close your browser and go to bed. A week later you start receiving heavy solicitation from divorce attorneys and marriage counsellors because you spent 10 minutes glancing at a web page that one night. /u/OfFireAndFlame hit it on the head. HTTPS is trivial to implement and in 2015 there really isnt an excuse for not using it except laziness. Encryption should be there by default.
/r/learnpython is the correct subreddit for Python questions.
I would have made the answer "ython" just to see if the students were awake. Sometimes they assume the answer will be the expected one and just scribble down "python". That's going to get them into trouble when someone gives their program shitty data. Plus, they will learn what an off by one error is. Although I would not have put it 17 characters down.
Your ISP could mitm your connection to show a shitty menu, to encourage you to go to the pizza store that pays your ISP. Or the local Italian pizza protection club could extort your ISP and force them to deny the existence of any pizza with pineapple toppings. Maybe they're already doing it, without an authenticated connection, you can't know whether what you get is actually what some undetermined source intended for you to receive.
/r/learnpython
No, I wouldn't be okay with that. Opting-out implies you have a reason for not implementing your web app the recommendation and accepted way. Again, this has nothing to do with your example in particular, but how we treat encryption from a cultural perspective as a whole.
&gt; Your ISP could mitm your connection to show a shitty menu, to encourage you to go to the pizza store that pays your ISP. Or the local Italian pizza protection club could extort your ISP and force them to deny the existence of any pizza with pineapple toppings. Take off the tin foil hat. What pizza place is going to have the money, knowhow and power to force an ISP to commit a felony? Really? This is why you guys sould like crazed zealots coming up with shit like this. 
I would almost certainly use [aiohttp](http://aiohttp.readthedocs.org/en/stable/) (Assuming this is part of a larger asyncio application): loop.create_task(aiohttp.post(...)) Otherwise, I would use one of the high-level concurrency tools provided by [concurrent.futures](https://docs.python.org/3/library/concurrent.futures.html): pool = concurrent.futures.ProcessPoolExecutor() pool.submit(requests.post, ...) I agree with /u/xcombelle, though- at the very least you'll want to retain a future to ensure that the request completed successfully and handle errors.
&gt;I'm not following what's so hard about dependency management. Fair question. So any non-trivial Python app is very likely to depend not only on some 3rd party Python lib, but also some 3rd party system-wide c-lib. Often I am not deploying to an environment that is exactly the same as my dev environment. For me, they usually are not even the same Linux flavor. So developing an app for my company, I end up needing different types of dependencies. System dependencies might include packages like libsasl2, ffmpeg, exiftool. Python packages might include pillow, pycrypto, python-ldap and ibm-db to name a few. So to reduce friction between deployment from dev-&gt;preprod-&gt;production, I minimize my dependencies for the sysadmins by bundling them in a binary. This way I don't have to force my sysadmins to installing exact versions of my software. Also if they decide to use the server for more than one thing, I want to prevent potential conflicts of dependencies before it happens in production. Minimizing the amount of steps it takes to get an app from repo-&gt;testing-&gt;production is a great way of preventing friction between developers and sysadmins. Unfortunately there exist few good ways to bundle both system libs and language libs into a single bin in the Linux world with out building a package for that system which would not be a portable solution. By using docker, I can lock down the OS and version, any system libs that will be available, and the language libs that need to be installed into a single binary that can run across many modern Linux installs (there are even patches back-ported for older systems like CentOS 6). This also has the added benefit of fitting whatever backed language/run-time I might use, with out the Sysadmins caring or having to learn a radically different set of tools/commands. The flexibility to adapt docker as a deployment tool for any language/framework/run-time is quite appealing to me. Alternatively I could specify the system deps, specify the python deps and document how to setup and use virtualenv. This however still doesn't ensure the system libs of a certain version are available unless I change my development environment to be a clone of production (which is quite unappealing). Instead, I use a single docker file at the root of the project repo. All system deps and language deps as well as the steps for install and running the app are documented here just by the nature of this file. &gt;If you don't know how to specify your dependents I'd wonder if you wrote your own source code. You are free to inspect my public repos but not much interesting there. I wasn't able to find your github, bitbucket, or gitlab repos, maybe you use a different user name? &gt; Docker seems like overkill. It is and it isn't. It does require a silly amount of disk space, so it does have a higher bandwidth cost and storage cost but it's benefits greatly out weight this. Additionally as different container tech mature, it is very likely a "lighter" alternative will emerge. That being said, a Linux container compared to a VM is a lot more efficient in terms of CPU and memory utilization as there is significantly less overhead. This lets you pack more containerized apps on a single server compared to virtualized apps running in single task VMs. Hope that answered you question =D
You should have tried harder! 1. Automated emails (event triggered or on a schedule) 2. Automated nagging (for when he doesn't reply) 3. A robot with wheels and a programmed path from you to the other guy's location. Put the USB on him, have him drive over to the guy, and come back once the USB is returned. :)
When you're associated with an access point, clients never speak to each other directly, it's only ever via the AP. Many APs are configurable (some by default) to disallow client to client communication. That's done for many reasons, chief among them being performance impact (it literally doubles the amount of airtime needed for broadcast traffic originated by the clients) as well as security (there's seldom any good reason to do this, and most of the time people are trying to do it, it's for something bad). I read about that dash hack and it seemed (from a networking perspective) to be really fragile and unnecessarily convoluted. It's like trying to diagnose someone's cold by measuring how often people around them look grossed out. EDIT: In order to do it sensibly, I'd look for a way to get the Pi somewhere that it can reliably inspect all the traffic on/off the wireless segment. That said, I don't know where you work, or what kind of policies they have. But if there is anyone that gets paid to maintain that network, get their input and permission before attempting anything like that. Whatever it is you're trying to do is probably less important than the stability, performance, and security of that network. 
That money would only be spent on developer time, certificates are free already with StartSSL and soon Let'sEncrypt.
I know this. When I was using windows I insisted on installing the compilers and having everything install using pip. Though I also know I can not spend too much time debugging weird things like proxy issues no one else on the internet is having when there is work to do. 
It does. You need to import math before doing anything with the library. Just like any other library.
well, I figured that out two months ago
haha cool. I came across this post, thought I'd throw it out there in case someone else did. Or maybe help you in case you gave up lol.
And also /r/learnmarkdown
http://gifrific.com/wp-content/uploads/2013/04/Mr-Burns-Saying-Excellent.gif
Is that 80% though? I'd argue that it really depends on what you're writing and what the intended audience is. If you are writing Python packages intended for Python users, then yeah, it's probably 80% or more. The Hitchhikers Guide to Packaging is perfectly fine for these folks. If you are writing larger, UI-based Python programs for a general audience, one who thinks 'git' is an insult rather than a VCS? This domain just has never really been a serious focus for Python I think. It *can* be done, of course, it just feels really hackish compared to everything else about the language.
I'm a teacher, student, and most relevantly I design online learning environments. We had our own custom e-textbook platform that we used for a few semesters based off [Runestone](http://runestoneinteractive.org/), and I've also helped with [OpenDSA](http://algoviz.org/OpenDSA/). Different set of problems, different set of advantages. There's a lot involved in making these things, you'd be surprised how hard it is to get it right. Still, it's easy to develop a big disconnect between users and developers, always interesting to hear in-the-field reports.
No, I think I can understand how hard it is to do it right, I'm working off... I think 4 separate online platforms for 5 classes, so I can say I have a bit of experience with different styles. Worst I had was a chemistry one, really laggy and not intuitive at all, one level above MatLab. I think it all really depends on the class, really, for figuring out what's best and what's meh. My final recommendation - Zybooks is good for low level math courses and high math content courses, but not for demonstrating knowledge in those courses. Maybe that's the issue, it doesn't feel like you're really learning, just reading above something without major examples.
I teach so I looked the book over and this was one of the features I liked but ultimately am using Liang's book
&gt; There's no downside to using TLS. This isn't totally true. TLS adds a certificate requirement for servers. This can be a pain to setup. Servers have to get certificates signed from an authority that normally costs money, deploy them to servers, adds continuous maintenance over head as you have to keep them up to date over years, etc... Plus at the very least it adds extra steps for the admin that they have to be bothered with since "It's not something that needs to be encrypted" is a pretty common attitude and arguments like "everything should be encrypted to hide the stuff that really needs to be" aren't in businesses interests and don't forget people are lazy, busy, genuinely plan to do it later but never get around to it, etc... That's all assuming the admin is aware that they should even be encrypting it. We really need a system where you setup a server and it is encrypted by default. Hopefully [Let's Encrypt](https://letsencrypt.org/) can help fix this. But it's still likely got it's limitations. Ideally we need some kind of automatic distributed certificate chain of trust that separates encryption from authentication. Of course that's hard to pull off since anyone in a position to listen in is normally in a position to manipulate the data so they can claim to be the system and rewrite any data that claims otherwise. In that situation all you can really do is claim that multiple separate trusted 3rd party systems saw the same encryption certificate for that address as the client. Ideally those systems exist in multiple countries under the control of different individuals. That largely prevents targeted client side surveillance. Server side is a different issue as wiretappers can set themselves up in a position between the server and *all* the certificate systems (ie directly outside the data center) and trick the certificate authority systems into thinking they are the owner of that address. But it will be obvious when someone is conducting that kind of surveillance and possible narrow down where it is occurring by getting people to compare the certificate hashes and their internet routes. The servers themselves should be able to verify that their certificate isn't the one in the network and raise the alarm at their end. Of course if someone is in control of the address then they will be able to setup a fake server too. Also those certificate verification system could be abused to take down a server (or all the servers) by taking control of one of them and having it claim the certificate is invalid. You could have a vote system but then that makes it easier for someone to tap all the servers.
https://github.com/search?utf8=%E2%9C%93&amp;q=indeed+scraper https://github.com/pydo/lead_scraper_orm/blob/master/lead_scraper_orm.py
I'd be way too tempted to put this for #3 and see what the response is: str2 = str1[:-1] + str1[-1]
Learn about profiling. You can also test small pieces with timeit. Google those. Questions go in /r/learnpython Optimization before profiling is premature.
indeed. An ARP request is a broadcast. In theory it should reach every station on an ethernet segment. That *would* include every client on a WLAN segment, but for the reasons above many vendors circumvent that behavior. In most modern settings none of the client actually care about any of the other clients, and those broadcasts only serve to enable them to talk to each other, so might as well save the airtime.
That's part of the game mechanics.
Fair enough. So much for the phonetic alphabet being clear.
No, there is no need to do so.
I think those free ones are non-commercial only. But his point stands, regardless. It's not that it shouldn't be done, it's that the hypothetical is a very hard sell for virtually zero material ROI.
No idea if it's a felony. I think there were some that inserted tracker-cookies and replaced the ads? http://arstechnica.com/tech-policy/2013/04/how-a-banner-ad-for-hs-ok/ I'm glad http2 will make the pizza-page load faster and be secure.
I'm not sure if I'm not smart enough to understand what I'm seeing here, or if it's just that the book references r/python, so it must be legit.
**WHAT AM I DOING WRONG!** import time import imaplib msrvr = imaplib.IMAP4_SSL \ ('imap.gmail.com',993) unm = 'username' pwd = 'pass' msrvr.login(unm,pwd) stat,cnt = msrvr.select('Inbox') stat, dta = msrvr.fetch \ (cnt[0],\ '(UID BODY[TEXT])' print dta[0][1] time.sleep(10) **ERROR** print dta[0][1] ^ SyntaxError: invalid syntax Process finished with exit code 1 
Hi /u/goodboy5201314, unfortunately I'd guess most of this subreddit doesn't speak Chinese, so these aren't very helpful for the majority. Maybe there is a chinese-language programming subreddit they'd be more appropriate for?
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
I see what you are saying but this is a WSGI middleware and I really don't care if the request succeeded or not, I don't want to block the main WSGI app waiting for the HTTP response.
I get what you saying but its not it. I ask if there is a way to certify your knowledge in python language.
BTW, the statements about there being no simple guide to yaml are conspicuously false. That's what [this is](http://www.yaml.org/refcard.html) ; it is on the official www.yaml.org site, and was the #1 result in a google search for 'yaml cheat sheet'. It does less hand-holding than their ['brief YAML reference'](http://camel.readthedocs.org/en/latest/yamlref.html), but is overall pretty straightforward. It's also to a large extent a self-demonstrating document (being as it is written in YAML). That said, I do prefer the page in the Camel docs as a intro for newbies. I'd just prefer that it wasn't prompted by a false idea ("there is no reference guide for someone seeking to use YAML rather than implement it")
It stores them as YAML; ie. everything is serialized into a text file. Floats might be serialized like '1.0' for example.
Thanks for your reply !
Great news! One of the best things about personal computers in the 80s was booting immediately (less than a second) into a programming prompt. MicroPython brings this back, and putting it in the hands of a million children is awesome.
This makes it risky for working with numeric data. The `float -&gt; string -&gt; float` round-trip will introduce errors in many numbers.
I can get to it
Works fine for me.
I don't think that there are certificates (like CCNA) but if you do freelance work UpWork (oDesk) has a python test that you can take and show on your profile.
Nice work. My usual favorite for this is [webmux](https://github.com/ronreiter/webmux), but I like the simplicity of your project. some suggestions: 1. print the address to visit when starting 2. use a requirements file to simplify installation 3. put it on pypi so people can install with pip Also, I got some weirdness when connecting failed (looked like multiple stacked terminal windows).
You seem to be correct. I am unable to come up with a situation that results in such a mistake. My apologies.
I had the opportunity to have a play with a micro:bit at the NTU CAS hub last week. I was seriously excited by the end of the session and can't wait to get kids on to it. The progression through the different languages available will be really helpful. We're going to introduce it simply using Kodu, as an input device, then go through the block editor, to TouchDevelop then Python. The simplicity of the device and the online interface is fantastic. Good to hear Python is on the way, and hopefully is a little more "free" than the current choices that are little drag and drop for older pupils. 
okay. Thx!
&gt; give me a reason to not encrypt it. Caching, for one. err, that's all I got.
True. But encryption only makes it so that an attacker just needs to write a seemingly legit site and get you to visit it. It's mostly assumed to be safe to run javascript.
complete noob here, so please forgive me... Does this give an option for me to input a date range? Or does just delete everything? Also, does this also delete comments and posts I have done my friends and groups walls, photos, videos, etc?
Yeah, that is now fixed. I have a lookup table for words that sound like words that the game recognizes. The ones that get spouted in the video was "like". Windows Speech has recognized the following words as "like": might, white, light, mike. In order to not make another object, when I cross referenced the first words, I simply inverted the dictionary and told Bombly to speak the same words it uses to recognizes a given word. Turns out, that will speak all the words, including ones that don't make sense from our perspective. That has since been fixed so we only get one spoken response per word ;-)
No it's not a nice question, it's pointless. Since strings are immutable, it's just an implementation detail whether a string is being copied or shared. 
I don't use pickle, I use json.
Thank you. Unfortunately this is reddit, where people feeling 100% comfortable asserting that someone's subjective opinions are "just wrong".
Yes right, it would be a better question if it was asked for mutable objects. After all if you get to the conclusio that it doesn't matter, then you answered a lot of other questions on the way 
Fair enough! Thanks for making this, I really needed it! Could you tell me why it's not working for me? Exception: Failed to find firefox binary. You can set it by specifying the path to 'firefox_binary': from selenium.webdriver.firefox.firefox_binary import FirefoxBinary binary = FirefoxBinary('/path/to/binary') driver = webdriver.Firefox(firefox_binary=binary) Is there something I need to change in the code? I don't have Firefox installed, only Chrome and IE
nvm, i ended up installing firefox and looks like it is working now. thanks!
&gt; [Pickle's] magical behavior shackles you to the internals of your classes in non-obvious ways. What does he mean by shackles you to the internals? And what are the non-obvious ways he is referring to?
I don't know the details, but changing the class details can mean pickled instances of an old version of a class cannot be unpickled with a newer version. I have run into this problem myself. Part of the problem is that pickle cannot pickle classes, only instances. That means it depends on the local information about the class in order to unpickle the instance. If the local version and the version used to originally create the instance differ in ways I am not entirely clear on, then pickle can't figure out what to do and fails.
For me, it keeps going to the friend request page after failing to delete a post
One benefit of pickle that I think the author downplays is that you can just use it without writing any additional serialization code. Secondly, I don't think Camel would work very well with data-heavy objects, for example large numpy arrays. `joblib` works very well on this front. Finally, I've never understood the "giant security hole" of executing arbitrary code. We often hear the same argument around the use of exec and eval. Presumably, however, you're only going to unpickle something that you or a colleague pickled. Assuming that no one is _trying_ to sabotage you, is there really any danger to using pickle?
Siri hack? any references for that?
I've also run into problems when I was abusing monkey patching. Basically, I had a class from a library (Shapely) that represented different geometric shapes. I needed to track an extra property that was specific to the *instances* of the class (material properties). I can't remember exactly why, but inheriting and extending wasn't working, so I decided to just kludge it and monkey-patch the property onto the instances (I know... it's ugly but I was in a hurry) `pickle` reads the properties to serialize from the class, not the specific instance object, so when I pickled the instances and loaded them back the bolted-on property would be lost. You can fix this by writing a custom handler for serializing, but that kind of spoils the magic.
You assume malice / gross incompetence where 'slightly sloppy phrasing' is a sufficient explanation. Going by the context (as well as by humans in general), the latter seems more likely. Thanks for the upvote! Steve Losh is definitely the bomb.
Why not just ssh into the server from your phone?
[Yes there is.](http://stackoverflow.com/questions/15151133/execute-a-python-script-on-button-click) You should probably post this to /r/learnpython
Yes, there are many ways to do this. The basic concept is that your "html" button would send back a message to the server. Your options are: 1. Use an HTTP GET request 2. Use an HTTP POST request in a form 3. Use javascript to perform either #1 or #2 Here is an example using [flask](http://flask.pocoo.org/) index.html &lt;button&gt;&lt;a href="run-script"&gt;Run script&lt;/a&gt;&lt;/button&gt; app.py from flask import Flask, render_template app = Flask(__name__) @app.route("/") def hello(): return render_template('index.html') @app.route("/run-script") def run_script(): run_your_script_here() if __name__ == "__main__": app.run() This is just an example and not neccessarily the best way to do it. I would recommend you research into how web development works, specifically how to perform HTTP requests between your client (browser/webpage) and your server. I recommend using a lightweight framework to help you with URL routing and request management. 
Which one would be better, the GET request or the POST request in a form?
i don't find it convenient at all, this way you don't need another app, setup or other stuff. Just good ol coding
GET request is easier and the simplest, especially if you don't need to protect the resource but it all depends on your use case. 
I don't know, these two statements in the docs for `marshal` make me think I may as well just use `pickle`. &gt; If you’re serializing and de-serializing Python objects, use the pickle module instead – the performance is comparable, version independence is guaranteed, and pickle supports a substantially wider range of objects than marshal. and &gt; Warning: The marshal module is not intended to be secure against erroneous or maliciously constructed data. Never unmarshal data received from an untrusted or unauthenticated source.
But you have setup overhead on the server: you're running another process that consumes memory, that could have bugs, that could have leaks. SSH is already there. And certainly safer.
You are right, I'm not arguing the safety part as I'm not an expert on the matter. It's just convenient and fun. One thing though, is that you can manage a whole cluster of servers with this technique, by simply making a group chat. This feature will be fully documented in the next version. You can also do a simple ftp upload by uploading through whatsapp. It's a plug and play solution, and besides, your ssh app won't send you notifications :)
They aren't really the same thing. Unless you write your own serialization code, `json` won't serialize even a really simple class object. `pickle` will handle most objects fine without extra work.
aww, I kinda liked it blowing a fuse, it sounded like it was having a stressful meltdown, really puts it in character
4 da lulz mane
it's not the ssh business to do that, if you want monitoring, do have monitoring. That's a completely different thing, I get metrics and notifications with nagios, it's far more robust to see a plot of memory usage over time, CPU usage over time, and what have you. you can even get a free newrelic account and get that kind of thing. With notifications! To do cluster management, I tend to use fabric or ansible. But managing a cluster by hand like that is crazy. It should be streamlined and not on one single phone. And if it is on multiple phones: there is your security breach. Also, what is blocking me from picking up your phone and just running... `exec sudo rm -rf /`
oh, in that case... knock yerself out.
Sure, it's a world filled with opportunities.
How can I print integer lists without the square brackets or commas?
Vizard you say? http://goo.gl/7lfGNX
I'm using SublimeText 3 with Package Control, Anaconda, and PythonFlake8Lint. All the IDEs where too heavy for me. As far as your title, use a for loop to get each number into a formatted string and then print the string when the loop exits.
Why did you not read the sticky before you posted in it? It clearly says that questions should be posted in /r/learnpython.
Why?
I'll be trying out different ides for myself. Thanks! For the code I will do it that way. I haven't thought about that idea...yet
I'm sorry haha I just read through that. I'm going to check out /r/learnpython now. Thank you
I'll give those IDEs a try. And for the code I tried " ".join (my_int_list). It gave an error saying it's used for str
BTW, there's a wiki with a list of IDEs in /r/learnpython, but some of the best choices have already been posted here. And welcome to reddit!
You can cache requests made over HTTPS.
I'd actually recommend against vim as your first ide. There's quite a learning curve - to the point of the joke "To generate true randomness, tell a first year CS student to exit vim". It's a really nice editor, but iunno if I'd recommend it. Then again, I jumped in blind about three years ago. `str.join` is used to turn a collection of strings into one string. What you'll need to do is `" ".join([str(i) for i in my_int_list])` since Python does very little type coercion on its own.
[jsonpickle](https://jsonpickle.github.io/) works pretty nicely too
I 100% agree. This is why my stance is that we need to change how people think about encryption. As the desire for it grows, so will the marketspace for vendors such as Let'sEncrypt which make it very easy (and much cheaper) to deploy/implement. Nobody is going to stand up a service that people aren't going to use or isn't in demand. Another great example of this is SQL Server 2016. I've done a lot work with shops who don't leverage encryption for connections between application servers and databases. SQL Server 2016 is aiming to solve this problem by implementing encryption for data both at rest and in motion *by default*. And that's exactly where encryption as a whole should go.
no I remember it being at least mildly amusing
Not really, but dont worry too much about that. Certificates and diplomas are fine but usually your interviewer will give you a couple of problems/tasks or conceptual questions. That's how they check your experience not only with Python but with programming in general. The best thing you can do is start working un some small projects and ser up a github for those so you can show that. You can join to some OpenSource project/ library and you can learn a lot from It.
The only downside I've found to using json to store python data is that you have to convert decimals to floats before saving.
Has anybody been able to find out the power consumption of this device?
I'm incredibly confused. Would you mind explaining what this is?
Ha, didn't even see that you used `ls` as an example. Just wanted to make sure that noone who saw my comment would do that. xonsh sounded pretty well, what is missing from it that it doesn't work for your usecase?
Sure. To have higher-order functions (that take functions as parameters or return functions) requires functions be first-class citizens. First-class meaning they can be assigned to a variable, passed as a parameter, returned from a function. But the functional programming paradigm is more than just that. You need to avoid mutable state by using pure functions. Mutable state is bad for an optimizing compiler to optimize (can't make assumptions to parallelize instructions or defer computation until later or cache previously calculated values). For example, this isn't a good example of functional programming as the accumulate function modifies a mutable state, even though it uses a first-class function and a higher-order function. sum_so_far = 0 def accumulate(v): global sum_so_far sum_so_far += v return sum_so_far print map(accumulate, [1,2,3,4,1]) # [1, 3, 6, 10, 11] 
&gt; But I do both dev and ops (our shop is very small) and I see a lot more of the picture. I work closely with my Ops team and come from an IT background. &gt;I have to ship components to a global network of heterogenous cloud containers, so I want to remove as many variables as possible. Neat, my official title is Cloud Developer, so I guess we both know _something_ about this topic. &gt;Homogenizing the deployment environment as much as possible is key. Unfortunately, a docker is not a VM, so it does little to achieve homogeneity. I really don't think you understand how Linux containers compare to VMs. Making this argument shows you know next to nothing about Linux containers as they absolutely do "achieve homogeneity" when employed correctly. Containers and VMs provide mostly the same service with slight variations on their implementations. The main difference is VM's typically require more CPU/memory per VM compared to the equivalent Linux container. https://en.wikipedia.org/wiki/LXC https://en.wikipedia.org/wiki/Docker_(software)#Overview https://en.wikipedia.org/wiki/Virtual_machine &gt;I understand how it works, been there, done that, have since learned better and don't do monoliths anymore. Now you are conflating architecture and packaging. You can have a monolithic application packaged as an exe/deb/rpm/container the same way a normal or micro-service might be packaged. &gt;But the docker image is redeployed between any two environments, and as I said above, a docker is not a VM. You haven't completely isolated yourself. You could replace "docker image" with "Debian package" or "rpm." You also could replace "docker image" with "vm image" and get the same result while requiring more hardware if you set up your VMs as isolated services (some people like to have a whole LAMP stack on a single VM, we have enough resources to do it properly). VMs require some sort of host for managing the virtualized OS's and hardware resources. However you deiced to expose your ports to the outside world and provide routing between your servers/services is up to you. Isolate your containers as much as you like on their own private network or have each one talk to the outside world directly. Really, a VM is also a container technology, but docker/lxc is new and scary to people so it's not puzzling that you just don't get it due to a lack of experience with the tools. &gt;If you don't think software installation and system configuration are two separate domains, then we're having two different discussions. Never even came close to saying that. &gt;When it comes to testing and deployment, one cannot pay no mind to the stack. Actually that really depends on what your role in the process is. I don't want my sysadmins to have to care what version of python might or might not be installed or if they have the right version of the JDBC driver required. They lack the time, and knowledge to be good at that task and with out spending a significant amount of their time getting directly familiar with every one of my projects they wont ever be. I take care of those particular details because they are abstracted away by the container. By the time my software gets to the sysadmins, all they care about is the docker daemon as a dependency (and typically a reverse proxy to provide SSL wrapping for the service, which is also puppetized). Again this is no different than building a Debian package only with fewer dependence on the host system, mainly docker. The benefit is, we could put several docker images, on the same host with one nginx/apache instance doing routing to all the services and none of the dependencies for the services would conflict with each-other. &gt;The stack is the end product, not the software package! Are you sure you are not nitpicking definitions? The software package (what gets installed/updated/configured) is the end product from the sysadmin perspective if they never actually use the software. Where as the end users, only care if the app works when they open Firefox. &gt;Hmm sounds like you're playing more politics and less engineering. Maybe, or maybe we just practice separation of roles/concerns due to having a larger set of assets to manage. &gt;...then you'd be writing Puppet and handing that off to ops along with your software packages. That is only one way to do things. By far no where near an optimal solution for me or the people I work with as we have people dedicated to managing puppet, I'm not one of them. The exact pupetization of an install has to come from a template which would be provided and maintained by my sysadmins. I then can make my modifications to that template. Unfortunately I can't get any OS I choose as a base, only the ones provided by the sysadmins. This gets us right back to the issue of the base OS not provided the right versions of libs and fixing this by sharing the kernel with a docker container but letting the container bring its own set of libs to the party. Alternatively I could bundle everything in a VM and get the same result but require more CPU/mem utilization. Puppet is a fine ops/automation tool, but it struggles to fit well into the dev environment efficiently. Waiting minutes for changes to propagate from a script to your VM/container is way to time consuming. The best way to use it would be to capture changes made manually to a server during testing. But again, this would ONLY capture changes in the externalized configuration files. &gt;Again, the stack is the product! Think of it this way, you wouldn't balk if you were instructed to install some exe/msi in order to deploy an app would you? Typically an exe/msi will include all is libs and dependencies, maybe install a service, start listening on ports and drop a database file on your system. This is the same thing only with isolation that is equivalent to a VM while sharing a single Linux kernel. &gt;Now I'm not going to advocate for zero documentation, but I will say that documentation is only read when things go wrong, and only updated long after things went wrong and couldn't be fixed. If you noticed, I include automated testing **after** the docker image is built. This ensures that any changes to requirements to the projects that were failed to be documented, cause the project build task in jenkins to fail. This failure prevents a push to preprod (which inherently means no push to production). In this case, the requirements are checked on every build of the image, not "just when things go wrong" and it is done with automation so you are not going to have human error skipping over test cases at random. More than once, I have updated the requirements of the project with out updating the Dockerfile to match. This caused a failed build and was easy to diagnose when a "can not import python-ldap" error was thrown. An edit to the docker file, a commit and bookmark update later and Jenkins was automatically rebuilding the docker image. And because docker minimizes the requirements on the host to just the docker daemon, it's not like changes to the apps deps require a change on the host. The only time a change on the host is required is when we want to change a config file since it is a good practice to externalize your config files (same way you would do if you were distributing WAR files). &gt;Make the code readable, automate everything from build to test to deploy, and you won't have to suffer from so much documentation. I can't automate everything with out the sysadmins providing the tools/access. Which they have not at this point, and don't intend to any time soon. Funny thing is, I am the one pushing for complete automation at a minimum to preprod for quick testing and turn around of fixes. Better than just making my code readable, I actually document both in source and on the wiki. You can never "suffer" from too much documentation, only too little. &gt;While I enjoy developing software, I find it even more enjoyable when I get paid to do it. Hence I don't write anything for free. ;) That's kind of a smug and short sighted answer. Do you donate money or time to any of the FOSS projects you use or are you just a leech? Imagine where we would be if every person who donates their time to Linux, reddit, and the whole of computing were to be as greedy with their abilities so as to only ever use them if directly compensated. Personally I volunteer both as a mentor and a community developer for Code Across America and the local NRV chapter. Also because we use open source software at work, I actually submit patches, bug-reports and pull-requests to projects so that every one may benefit. I also get paid to do it because my company understands the value provided by giving back to the community. I guess some people are just in it for the money?
Strange, why wouldn't they use the YAML float type?
Very cool, I just successfully ran some easy tests. Basic types and numpy.ndarray type checking are correctly handled. The following snippet went wrong, though: from typing import Sequence from enforce import runtime_validation @runtime_validation def foo(x: Sequence[int]): pass foo(('a', range)) foo(1) No error was raised, although foo expects a Sequence of the type int and gets totally different types. It would be great if support for types from the typing module were correctly implemented.
&gt; Okay, so you might think it's safe if it's only ever used in code you don't distribute. But if someone else has a way to connect to your server, they may still be able to trigger this. This becomes more likely if people realise you are running a Python server. Guess I'm lost here...connect in what way, and trigger it how? Not looking for a step-by-step guide or anything, and not doubting it's true, I just often hear things like this (usually in relation to exec/eval) but never really any specific details.
Computer science degree, computer engineering degree, successful personal projects, decorated github profile. Knowing a language is one thing, knowing how to use it to solve problems is another. Demonstrate you can do the latter.
seems like a fun/interesting project to build (I love this game). I'm inspired to create a version for myself (never played with voice recognition yet). 
... That is what happens when you use the yaml float type. If it were serialized as a yaml string it would look like this : '"1.0"' (ie. you're reading the single quotes as part of the output, don't do that)
I do not assume malice. FUD is FUD whether caused intentionally or accidentally. Ignorance, yes.
Python questions go in /r/learnpython - you'll get a better answer there!
Do you have specific concerns you have about choosing one, because honestly you're going to get a bunch of people saying python in here.
Flask, simpler code, decorators
Nice tool. A few years ago I noted the following trick about a similar subject (the original website has disapeared): # Uses metaprogramming and instrospection # With those 7-lines of code ... import json class Serializable(object): pass class UniversalEncoder(json.JSONEncoder): def default(self, obj): if isinstance(obj, Serializable): # return obj.__dict__ # &lt;-- simplest version return {attr: value for (attr, value) in obj.__dict__.items() if attr in obj.exported} return super(UniversalEncoder, self).default(obj) # ... a user of this "library" can write: class Person(Serializable): exported = ('name', 'age') def __init__(self): self.name = 'Spongebob Squarepants' self.age = 14.5 self.password = '******' p = Person() json_data = UniversalEncoder().encode(p) Can you see some disadvantage with this method?
Thank you for elaborating on my comment, I am quite familiar with HTTP methods but did not think to delve into the distinctions as clearly as you did. Hopefully it is useful to Doctor_Red. 
Magic key names are a dangerous road to go down. What do you do now if the object in question has an actual attribute named "_class", or if you want to be compatible with another format that uses "_class"? Comments are sometimes done as "_comment" keys, but that's even more likely to become a problem. YAML has a specific syntax for these things, and I can appreciate using them. That said, I would probably still use json because every language ever pretty much comes with a json parser.
&gt; if you're saying how a format works, why would you quote it if the value is not quoted in the file format? That's stupid, and incorrect. Omitting quotes would have been even more ambiguous and incorrect. Probably the best thing to do would have been to use code formatting: `1.0`. &gt; it goes from float to a string representation back to float but maybe I'm just confused The code I wrote there simulates dumping random floats to YAML and then reading them back. Naturally the floats I generate become text when written (since YAML is a textual format, just like JSON) and then floats again when read.
Thank you for these suggestions, I really appreciate them! If I may ask, could you direct me to an explanation of why files should be open in a context manager? Thanks!
Genuine question -- what if you don't do anything that would touch an outside system? I write a lot of code that pulls text files from disk, or only accesses a database i built (not UGC). I spend some amount of brainpower thinking about the evils of exec in these situations, so there's clearly a cost to this. But I have yet to think of a situation in my closed code environment that doesn't have external connectors that is realistic. EG, a sensor system that I setup. I mean, I suppose it's possible someone could hack into that and send exploit data packets to my processing system... but that vector seems so unlikely that i generally try to shut off the security focused part of my brain in an effort to maximize my productivity.
Python has easier to read code compared to PHP. Since you are new to Python I suggest reading Learn Python the Hard Way. Do not use code academy. 
If you have a server that accepts input as a pickle object, and a malicious user has access, they can execute arbitrary code by crafting custom pickle payloads to send to your server. It's as simple as that.
I will go through this case when I get back from work tonight. Thanks for testing. If you don't mind, could you submit bug reports on GitHub if you find anything else? Cheers. EDIT: I checked your test scenario. Well, it raises an error with '1' (as it was supposed to) but it failed to raise it with a sequence type because it doesn't currently work with generic types (as it turns out). It is clearly my fault and I must fix. It will take some time, however. I am sorry for leaving such a crucial bug in it. Please stay tuned.
&gt; `ndiffs = sum(1 if f(v1) != f(v2) else 0 for v1,v2 in zip(data,loaded))` A neat shortcut: boolean values are actually just a special instance of `1` or `0`, and you can do arithmetic with them. `True + True == 2`, for example, so you don't need the ternary statement at all.
Should actually work, but I have never tested it. Have you had any problems?
I specifically included that so that the meaning was completely explicit -- the integer values of True and False are implementation details. I could have also written `ndiffs = sum([1 for v1,v2 in zip(data,loaded) if f(v1) != f(v2)])`
That's actually a line from a Bollywood movie. Loosely translated into English that is.
You can ride a motorcycle without helmet or drive around the farm without seatbelts, store your nonprod passwords in your source tree, etc.. It sets a bad habit and you will eventually move your skills to another environment and more likely get burned. You can increase productivity by developing secure dev habits. If you're used to pickle, exec and eval and are needed to provide code for a less trusted environment you are learning secure development from scratch. 
&gt;[**Knife vs Gun - The 21 Foot Rule - Great Demonstration [3:59]**](http://youtu.be/J_KJ1R2PCMM) &gt;&gt;Why cops shoot people holding a knife instead of using a taser. If a persons reveals a knife and he was already closer than 21 feet, you can't holster you gun and switch to a taser that fast. &gt; [*^The ^Indicrat*](https://www.youtube.com/channel/UCtoYWrRuzGxAlMNViBVBGGw) ^in ^News ^&amp; ^Politics &gt;*^524,482 ^views ^since ^Aug ^2014* [^bot ^info](http://www.reddit.com/r/youtubefactsbot/wiki/index)
Very cool! I have python 2.7 installed, is there a way that I could still use this installation by some means like "__future __"? (Newish to python, sorry)
I was more thinking of floating point rounding issues. I wouldn't trust the behavior of `NaN` in any program, personally, beyond them being `NaN`. Python itself has some weird `NaN` behavior, so this may not even be YAML's fault.
Usually things that run on servers are designed to accept external input, typically from a web browser, but potentially from other clients too. Sometimes security risks are more subtle - you might have written a library that uses pickle to process images, and someone else might use your library in their web server for their image processing needs... so an attacker could send their server a malformed image that, when it hits your library code, breaks their server.
Yeah, I vaguely recalled that there was some weird case.. looks like it's this: `float('nan') == float('nan')` (returns `False`)
How are you trying to understand that code? By reading through it? A lot of source will look like a nightmare from a distance, the key is to find and *entry point* and work through from there step by step. In the linked file you can read each class in isolation, e.g. `DictReader`. The `__init__` is well commented, except perhaps for the `reader(f, dialect, *args, **kwds)` bit, where a CSV reader is created to get rows back as a list. The things you need to understand to see what is going on are the `@property` decorator, getters and setters, and iterators (`__next__` and `__iter__`). If you aren't familiar with these, take some time to read about them. The stepping over the CSV is handled entirely by the `__next__` function, which reads a row into a dictionary, by zipping together the fieldnames (from the first row of the CSV) with the current row. There is also a bit of logic for where the row is longer or shorter than the header, storing the overflow or padding with a default as appropriate.
If you have an Android phone, go to About phone on settings, then légal informations. Then Open-source licences. You can see those licence on a lot of software, even your computer! Apple OSX is based a lot on open source too, they even host the source code on their website for all the "open parts" of the operating system. Other than giving this insight, I can't tell you for sure about more internal and precise usage of open source in big companies, but by looking at the licences in various apps (Facebook and Spotify have those of you want to see), you can see that they use open source libraries. EDIT: If you don't have an Android phone, message me and I'll send screenshots
How is this related to python?
They definitely do use open source libraries - especially newer companies which wanted to get up and running in a hurry. Older companies may be a bit less trusting of open source, but even the sockets code in Windows, if I recall correctly, is based on BSD sockets. &gt; For something as simple as an HTML parser... HTML parsers are not simple! Especially for a crawler, they have to handle as much broken HTML as possible, and even valid HTML needs a [big spec](http://www.w3.org/TR/html5/). Because parsing websites is so central to Google's business, I would expect that they maintain their own parser, though it may have been forked from an open source one. They're more likely to use open source code for auxiliary things, where they're not going to get a competitive advantage by writing their own. For instance, Android includes SQLite for apps to store data.
I think the "scoffs" are largely aimed at [this](http://blog.ionelmc.ro/2014/05/25/python-packaging/). The cargo culting in python packaging is ridiculous - "because popular project X does Y" is every so often the argument that carries the most weight. We have to rid ourselves of that mentality if we are really set to improve things.
I currently work in a subsidiary of fairly large global company. We do use open source libraries, as well as 3rd party proprietary ones for our development needs. But we're not just randomly introducing something into the process - it has to go through the auditing process, in case of open source - both source code auditing and license auditing. We don't want to use something with a license which would require from us to publish just about anything from our stack as open source (we have internal document specifying acceptable FLOSS license types).
Oh I completely agree. It's just interesting to see the amount of people using it i production. To add, I have noticed those who employ poor practices in one area generally apply them in others - although this is just personal experience I've noticed when pentesting such applications.
I’m honestly trying to improve that. We should do a “explain every line of your setup.py” competition at conferences…
I don't need to analyse the entire dataset all at once So each entry is tagged and I only want to analyse entries with a specific tag. I imagine those entries with the tags I want are probably &lt; 1% of the total size. Should I loop through the csv files and extract the rows I want and then save that down instead?
If the CVS contains a lot of numeric data, throw it into a database (MySQL, Postgres, whatever). It will probably be a lot less than 50GB if you store integer as integer and not as ASCII strings. Then put an index on the tags row you spoke about and let the database do the heavy lifting. That is what databases are designed for. 
So, this really doesn't convey anything to me except you reinforcing your opinion. My perspective is essentially, "I work faster when I don't have to include considerations that don't appear to affect my environment." Your response denied that experience, replaced with an analogy that falls apart. What you essentially said was, "you should wear a helmet when you're walking down the street because you eventually will want to ride a motorcycle, and walking down the street w/o a helmet sets a bad habit that you won't be able to break when you get on a bike." I don't know anything about you, but the reason I use "insecure" methods is because they are convenient and I've never seen a simple replacement for them that doesn't make my work harder. Secure programming isn't something that comes without a cost, and to pretend otherwise is silly.
You need a database. I'd do the storage and analysis in sqlite3, maybe with an ORM wrapper to avoid writing SQL syntax. &gt; *I will be doing my analysis in Panda's* [sic] If you are going to do it in pandas, then you are going to do it in pandas. Make sure you have enough swap memory available. This might also be a very slow way to process the data.
I currently have 8GB - what would you recommend as respectable?
&gt; Should I loop through the csv files and extract the rows I want and &gt; then save that down instead? yes 
I started in code academy. What do you not like about it?
My laptop has 16GB which I think is normal for development. The majority of my DB servers have between 64GB and 256GB. If I were doing significant data analysis as a core part of my job I'd probably go for 128GB as a minimum with SSD storage for the data sets (depending on size e.g. less than 1TB) If I was doing a one off analysis using your dataset I'd probably spin up an Amazon EC2 instance of type r3.4xlarge which is only $1.40 an hour NOTE: None of this is based on big data. It's based on my experience of working with moderate datasets in the 30Gb - 500GB range
Any suggestions? :) I'm open to anything. Happy to provide more info but not sure what people need to know
Another options is HDF5. It is a binary, table-based data format that supports multiple compression formats, is well-supported by a wide variety of data-analysis software (including pandas), and can handle huge amounts of data. You can think of a single HDF5 file sort of like a group of nested folders containing one or more n-dimensional CSV files (typicall 1D or 2D with pandas, but the HDF5 format supports higher dimensions). You can access those "files" by path like you would a real file. And you can read in a complete table or just part of a table. Pandas has excellent HDF5 support, but there are also python libraries like dask that are designed to work with data too big to fit into memory, and these pretty much always also have great hdf5 support. HDF5 is an open, standard, self-documenting format that is widely used in data analysis, so a ton of non-python software also supports it. And it can easily handle 50 GB of data. What I typically do with CSV files is read them into an HDF5 file, and use that from then on since accessing HDF5 data is much faster than accessing CSV data, and I can combine multiple data sets into a single file.
Since Python comes with SQLite, I was wondering if that would be a "good enough" option or 50gb datasets?
Exactly the point. It's just meant to be fun. I am fed up with all those wannabe security guys bragging about this and that. I admitted it's not secure. It's time to move on. I am having lots of fun at the moment talking to my server, haha ! (x
Do you need to pull small pieces of data from your dataset more than once or is this a one and done thing?
It should be, especially since, as /u/defnull points out, it won't necessarily take 50 GB in a database. YMMV
It's very unlikely that it makes sense to store CSV files in a database, if that's what you're suggesting. If you put the CSV into a database it makes more sense for every CSV row to be a database row. If you're just chunking CSV you might as well save them on a file system.
Thank you! That was really awesome, then! Nicely done!
That is a valid point. Something that would run while they're working on something else. You still need to load the data into a DB, setup appropriate structures and indexes though. My point still holds, if you've got all your code written and tested and the only issue is memory then it can be more cost effective just to use more memory than writing new code (especially if your code is already tested).
This, big time. Even if you use a (shudder) SQL Lite database, this will be so much faster. Read into the database on the first run, then perform all your number processing with data queried from it. Otherwise you'll have to read the entire file every single time you want new data. 
I have converted almost all of my data analysis pipeline to HDF5, and I'll never go back. +1 vote for this.
Not at this point, I am assuming they have working code (tested on a smaller data set). It's more the case that if you've got everything tested and working then changing how data is delivered could cause you to re-run tests to make sure you didn't introduce any faults. If it were me I'd have had everything in a DB to start with. I'm just concerned that the suggestion to move to a DB is going to cause them to have to consider 1. How to load the data into a DB 2. How to index it (if they only need certain record types) 3. Make sure the correct data is returned 4. Integrate their changes into the program Compared to spinning up an EC2 instance, copying the data up which is only a few hours that seems a lot of work.
Using insecure components will become a liability if you ever want to open up the project to the world. If you really super extra know, that your project will develop *only* as far as you can currently foresee, and never need to deal with untrusted stimulus... yeah, pickle is fine, from a security point of view (versioning is still a weakness though). I would posit, though, that we don't know the future, so some number of these projects we design in safety, we will eventually want to retrofit for a harder world. Or those design assumptions will hold some other, bigger thing back - "I can't expose this system because it uses Flipsy, a library I wrote with pickle and eval." As always, we are trying to find a balance between over-engineering for today, and under-engineering for tomorrow. Every shell script does not need an academic proof, but you also don't have perfect knowledge which projects will make it big, and which won't. Libraries and languages that make it easy to do the right, forward compatible thing, are truly a blessing.
Sadly, the trend of webapp2 and web2py doesn't look that wonderful: https://www.google.com/trends/explore#q=webapp2%2C%20web2py&amp;cmpt=q&amp;tz=Etc%2FGMT-2
Print ("{:&gt;20}".format('*'))
Here it is: https://www.google.com/trends/explore#q=python%20flask%2C%20python%20django%2C%20python%20pyramid&amp;cmpt=q&amp;tz=Etc%2FGMT-2
Nice to see flask gaining momentum, I love it simplicity and flask+restless is great for quickly building out REST APIs
No, Python 2.7 is not supported 
Is the final result because you've pointed `b` at `c`, so it's looking for the same object reference in `c` as is already in there?
O... kay... Maybe I'm just terrible at reading documentation, my impression was that it was Python-LIKE. Back to the xonsh page, AWAAAAAAAAYYYY!
This is the part that kind of threw me off: "Xonsh is a Python-ish, BASHwards-looking shell language and command prompt." But I'm gonna dig deeper into the docs to find this thing you speak of where you can import modules and junk.
I've had about 100gb in a sqlite DB once and it was fine, but it was a lot of text strings in only a few tables, so if the limitations are on indices or something like that it would make sense that I didn't bump up against them. 
Thanks. I've been playing around with Spyder for a couple days now, and looks to be exactly what I was after!
Adding another plug for HDF5. It's the ultimate mixed data type storage container. 
You also have various ORM's that simplify things. Lightweight: * https://github.com/coleifer/peewee * https://storm.canonical.com/ Heavy stuff: * http://www.sqlalchemy.org/ I've only used peewee and sqlalchemy there, but I've had good experience with both. Peewee is a nice little thing that's easy to start with and do simple things with, while sqlalchemy is the kitchen-sink ORM that can fit a lot more situations, but can be complicated to use as a result.
Seriously. I just avoided learning JS because of Bokeh. That might not be a great thing for me, but my boss approves. 
Yea there is bunch of absolutely cool REST frameworks on top of Flask.
Before you are too impressed, compare it to Ruby on Rails: https://www.google.com/trends/explore#q=python%20flask%2C%20python%20django%2C%20ruby%20rails&amp;cmpt=q&amp;tz=Etc%2FGMT-2 Yes, it's going down, but still beats both Django &amp; Flask combined.
Even small companies need to review the licenses to make sure that you follow them. It can hurt pretty badly if you don't. Typical example was a Swedish bank that used Moxie Marlinspikes GPL'ed certificate pinning code in their banking app. That caused a bit of a stink. 
Cool, did you use newaxis/expand dims?
My problem with flask is the request being global, instead of a dependency that is injected, like pyramid. Besides, pyramid predicates and subscribers give a lot more control over the request than flask's after/before request. I still use both, and I think both can and should grow in their own usage.
At the moment, python is bigger than ruby: https://www.google.com/trends/explore#q=python%2C%20ruby&amp;cmpt=q&amp;tz=Etc%2FGMT-2 Edit: wait, hold on, that includes monty python.
Haha. Monty Python is bigger than everyone
I'm about to start learning some framework. I'm only a hobbyist, but I want to make programs I can rely on for my own personal/business use. Is there any reason why I shouldn't choose django?
What have we learned today? Russia loves Python.
Well then while we're at it, let's not forget PHP: https://www.google.com/trends/explore#q=python%20flask%2C%20python%20django%2C%20ruby%20rails%2C%20php&amp;cmpt=q&amp;tz=Etc%2FGMT-2
I love flask for simplicity, but I was encouraged to switch to django for better user account control. After setting up my django environment and getting the admin console working (can create new users, looks great) I'm sort of at a loss as to how to proceed with actual user account signups and overall managing the sessions. I see how to limit access to endpoints using decorators, but I'm wondering if other people have dealt specifically with the "create a new account" and "Sign into your existing account" logic for users who aren't inherently administrators or created by me directly. Wouldn't suppose anybody has pointers?
I think flask-login has that functionality with stuff like a "login required" decorator.
Sure, I think the global request/session stuff in Flask is an abomination. Same goes for the way the app object is basically a global. But Flask is better supported and works well out of the box, whereas I've always found Pyramid to require a lot of groundwork and research to get anything useful working.
I use flask because getting from zero knowledge, to fairly functional was about an hour. 
Im doing microservices to provide access to data collected by crawlers. So usually it's not the case for me. http://python-eve.org this one is amazing time saver. There unfortunately nothing (except DRF but it's different story) like this for Django. 
What are some examples of the decisions that are made for me? I've got a firm idea of how my app works, so I'd rather the framework bend to me instead of the other way around.
Django comes with an auth framework, database ORM, template language and more stuff like that. If you have a special case where you need to use mongo or some custom auth framework - you can do it in django but you lose many of the benefits. Flask is probably better for this use case. If you don't want to think about security or spend time researching what database/ORM to use, go with Django with Postgres and you will probably be happy. You can even do nosql in Postgres. A lot comes down to philosophy and you probably won't know which path you like more until you make something in both. But both are great choices so it's not so bad. For me I often go with Django because I think Django Rest Framework is awesome and I like building reusable drop in django apps that require knowing a standardized number of components are available (Models, Templates, ect).
Laravel beats Django, Rails, and Flask combined. That's news to me - I thought it was trailing Rails by a lot. https://www.google.com/trends/explore#q=python%20flask%2C%20python%20django%2C%20ruby%20rails%2C%20laravel&amp;cmpt=q&amp;tz=Etc%2FGMT-2
I used to hate idiots, it isn't worth it anymore. Smile and nod. That reminds me, I need to write a CSV to Postgres conversion tool in Rust.
why not write a framework for text to relational conversion in swift? that would be more useful to all 3 people that don't write their own conversion tool from postgres to mongo in go. this is the drivel of modern software engineering. fools and bandwagons jerking each other off with obscure over engineered solutions to problems no one has.
Microsoft recently launched [Azure machine learning studio](https://studio.azureml.net/), with Jupyter notebooks built in. We've worked with people from Google on collaborative editing. O'Reilly made [Thebe](https://github.com/oreillymedia/thebe) to execute code on static sites using Jupyter kernels. And there are plenty of organisations using Jupyter internally.
many plugins, and it's a little bit easier.
I get it. Pyramid could be simplified and I agree with you there.
Yeah but what about CherryPy?
First, read about HTTP. Then read about WSGI. Then try to build something with only Werkzeug. Then you can move onto Flask and other, more complicated frameworks.
I still prefer Tornado. But if I *had* to choose between Flask and Django, it would be Flask. Most of my projects are small and don't need a lot of what Django provides by default.
I wanted to be witty and say "don't forget about Dr Dre!" and add my fancy link too.. But we maxed out on keyword searches and after checking he doesn't even register on the chart compared to php or java. 
What the hell is it with PHP? Why is it so popular?
Well, as someone who just started learning Django, deployment is a pain and there really aren't any great answers. With PHP, I just upload the code to any damn server on the internet and it runs, and I've been able to do that since before I could change directories in a bash terminal. The barrier to entry is just so much lower.
It's not my code but I always like to look at this project purely as an example. Well it's quite a long list of things done well so ill list a few:- * Docstrings, present and accounted for. Maybe a bit too detailed but I am not sure that is a bad thing especially if you wan't to actually provide documentation at some point * Acceptable commenting which helps when needed. * Correct choices for most data struct function methods (not all of the time but most of the time). * Most of the code is simple and easy to read which is very pythonic in itself. Generally the sugar of the language is used correctly in all lines of code. * it's a single file of ~900 lines that mimics minecraft....give it a go and run it yourself.... Let me flip the question back to you and ask you why you think it's not special? 
Scientist here. I use Tornado. This is in large part because I use it to control devices and it gives me things like websockets built-in. I have since come to love it in its minimalist-yet-batteries-included way. It's minimalist in the sense that it has almost no external dependencies (especially so if you are using Python 3.3+). Batteries included: templates, logging, websockets, etc. That said, if your choice is between Flask and Django, I would recommend Flask for both small and large projects. Django is quite nice with what it includes, but oftentimes it can be overkill for small things.
It doesn't work with generics indeed. I will be focusing mostly on fixing this massive letdown for now. Hopefully it won't take forever. Have a good day.
I was going to recommend HDF5 if no one else had. I am glad I don't even need to. Pandas is definitely good with its HDF5 support. It utilizes [PyTables](http://pytables.org/) which is a pleasure to use by itself.
Yes. If you have a script which processes a lot of records, you should investigate rewriting it to run core select / update / insert queries and bypass the ORM part of SQLAlchemy. Even if you've setup your libraries with ORM objects, the table object and its columns are easily accessible from the ORM class. If that isn't fast enough, you can write raw queries yourself and pass them through the SQLAlchemy session object. In other words, SQLAlchemy will grow and adapt to your situation as you need it to. In early dev, just make ORM objects and do things the simple way. When that isn't good enough, use the core layer to write queries for you. When that isn't good enough, write the queries yourself. Regarding transactional support, SQLAlchemy does a fine job managing this. It doesn't make assumptions that would cause problems if multiple processes were updating tables simultaneously. IE, if you query then update and commit a change to an ORM object, SQLAlchemy will re-query that object if you access its members later to ensure that it is correct for the transaction you are in. While this is slower, it is correct and absolutely necessary in a highly transactional databse. (It can also be turned off should you really, really need to.) 
Well put.
Hmm... I have been considering this. It is cool but (imho) it seems like it makes it too implicit. I wanted it to be as explicit as possible. However, I will come back to this idea some time later when some other major problems are fixed. Thanks and have a nice day!
Brilliant. Exactly what I was after. Thank you.
care to list out how ?
What's interesting for me there is how the Ruby total drops off but doesn't get picked up in Django and Flask. If those values broadly correspond to web framework users, where were people going from 2008 onwards?
So originally I looked this up and thought it was a dead-end because they describe it as Python-ish and it didn't seem like it did what I wanted and then /u/sththth pointed out that I'm a freakin' moronic monkey and it does in fact do what I wanted so I tried it out and sure enough, this is what I was looking for. So thank you so much!!!!
I was reading this Q&amp;A, interested, then left and coincidentally discovered ["q" on Github](https://github.com/juanpabloaj/q) - depending on whether your needs are single-use or many-use this might be right up your alley?
Who doesn't? 
It would be nice to see flask hit 1.0 some time soon! It has been awaiting a code name for several months with only minor changes in the last two months. 
It's only when you learn the difference, you start worrying whether it is properly secured and what the hell the hoster is doing.
every exchange and trading firm uses some open source code somewhere in their systems.
For Django look at the django-registration module.
This is a very common use case. For this, django-allauth is your friend: https://github.com/pennersr/django-allauth
You could achieve the same with both, without a huge difference in performance, if that's what u want to know, depending on the developer obviously. IMO, one of the key features python offers over php is readability, whenever I see php i want to take out my eyes haha. Python is really simple, there is no config file like in php, just install python and you're ready, very intuitive. I don't know about php, but python has a really nice community which is a plus and there are a lot of free books and resources out there. I guess if you want to know more about php u should ask around that subreddit. Greetings!
You could hack together a "working" solution but it wouldn't be great. Latency will be extremely high and you will run into issues with locking and writing to the file. Writing to sockets instead of a file really isn't very hard, especially given the number of easy to use libraries that are available. I'm sure there are libraries designed to properly share state between clients as well.
Several reasons. For starters, PHP is a language whose primary focus is web application development. Python, Ruby, Java, whatever else, are general purpose languages. PHP does not need additional libraries or frameworks to expose the contents of a web request in a programmatic fashion. Everything else does. Secondly, mod_php for Apache HTTPd. It takes, literally, a single command in Debian-based OSes to get a webserver up and running and using PHP. sudo apt-get install libapache2-mod-php5 php5-[whatever extension you want] That's it, you're done. For windows, there are packages like WAMP or XAMPP that get you going instantly. And even more surprising, is that PHP is actually quite painless to install in IIS as well. And of course, this was all true (except the IIS part), 15 years ago when PHP 4.0 came out. So THIRDLY, critical mass. PHP has it in this one particular domain. It may be losing ground, but even if all programmers suddenly came to their senses and ditched PHP, someone somewhere is going have to maintain all that legacy code, the way COBOL devs do today.
Can you clarify your knowledge of the and, or and not operators?
Nothing, and is probably the most appropriate choice for a lot of data analysis duties. Firing up a db server just for a one-off analysis of a few million records is total overkill. 
[removed]
And wordpress mops the floor with all of them :)
Node, I suspect.
$
&gt; Problem with PHP is exactly that. While it's easy to upload files and use them as endpoints. There really should be one endpoint so there is abstraction between files and scripts/code. Most modern PHP applications and frameworks use a single endpoint by redirecting all requests for files that don't exist to a front controller script using Apache `.htaccess` files and mod_rewrite. Deployment is kept dead-simple, and yet you get all the architectural benefits of a front-controller.
Only by force and I have never hated a thing so much... 
Thanks @djimbob for your reply. In the Haskell example it seems to me that xs must take all the stream of values from input and store them for you to then be able to "produce" end and vals. Oh wait, if mutable stte means that a variable can take on one value but never be re-assigned another value - but be read any amount of times after being initialised to its first value, then I might have learned, (or remembered) something. Thanks :-)
Many larger open source projects will even have a 'used by' section on their site. For example https://jupyter.org/ - a large open source python project - has 'Currently in use at' and lists companies such as Google (who just released their Cloud Data Lab based on this project, hence why I'm mentioning it specifically), Microsoft, IBM and a host of others.
That's sad.
Never not SQLAlchemy
I'd actually recommend being very careful with starting out low-level. WSGI, like any network/gateway protocol, is not actually all that simple, and there are traps and problems lurking in naive uses and implementations. IIRC Armin once had a nice rant on "don't write your own WSGI implementation", and I wholeheartedly agree with the sentiment. In fact I'd go a bit further, and say that until you have some experience and know your way around it, even using a well-written low-level WSGI utility like Werkzeug is probably not the greatest of ideas. So I'd say if you want minimal, start out with Flask, learn your way around it, and then decide whether you want to stay there, move down to a lower-level wrapper like Werkzeug (once you understand WSGI well enough -- and Flask itself uses Werkzeug and knows how to use it sanely) or move up to a more full-stack framework (once you have an idea of what you need).
I love spark, don't get me wrong, but it's overkill for this. 
well, slightly more than 4 years; 5 if we include 2020 til the end of the year 
&gt; that could handle arbitrary (positive integer 2-36) bases With a little modifcation you can handle the bases 2-96: from string import printable num_to_digit = printable[:-6] print(num_to_digit) &gt;&gt;&gt;'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&amp;\'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~' Too fancy with all that punctuation? `string.digits + string.ascii_letters` will give you all digits, upper and lowercase letters. Just say it because the `string` module contains some neat stuff ;)
I'd also highly recommend HDF5, although I like the h5py interface better than PyTables. It's really the right tool for the job. :)
Yeah. I actually used `string.digits + string.lowercase` to generate that, but thought it looked clearer as just a string (as OP seems new to python and programming). And as for why I stopped at 36, it's pretty universal to use the letters in alphabetical order after the numbers (either capitalized or lowercase), but there's no universal convention for going beyond [base 36](https://en.wikipedia.org/wiki/Base_36). E.g., it's why python's `int(str_of_num, base)` only works to base 36: In [1]: int('zz3',36) Out[1]: 46623 In [2]: int('zz3',37) --------------------------------------------------------------------------- ValueError Traceback (most recent call last) &lt;ipython-input-2-15ff957cae0a&gt; in &lt;module&gt;() ----&gt; 1 int('zz3',37) ValueError: int() base must be &gt;= 2 and &lt;= 36 as does javascript `parseInt(str_of_num, base)`: &gt; parseInt('zz3', 36) 46623 &gt; parseInt('zz3', 37) NaN Yes its possible to define larger character sets, but there's no universal standard for it. If I tell you a numbers is `A5` in base 62 it's not clear if its uppercase or lowercase comes first (while for bases less than 36 you can ignore case). (And yeah there things like how base64 use 6 bits to encode a value, but it encodes the letters as `string.ascii_letters + string.digits + '+/'` (though different implementations often change the last two characters) which is weird as then the number 1 is encoded as a `B` instead of as `1`) and say `/etc/shadow` passwords use `'./' + string.digits + string.uppercase + string.lowercase` (so now the number 1 is encoded as `/`). And sure I could have just picked a style and went with it, but I thought it better to just raise an exception. If I spent a little more effort at it, I could tweak it to support [negative bases](https://en.wikipedia.org/wiki/Negative_base). [Complex bases](https://en.wikipedia.org/wiki/Complex_base_systems) would probably be a tad more work, but could be doable.
The most important thing about coding is readability (especially when done professionally). I don't know what's going on in your code because you have chosen your variable names poorly. What is 'x'? What is x[0] supposed to be? What is 't'? What is 'driver'? Also 's' is a poor variable name as well, though I do see you have explained what it is. If you update your variable names it will be clearer what this algorithm does. Maybe add a comment or two as well. 
Well.. That's kind of the point of Flask, wouldn't you say? I'd much rather quickly build a Flask app, connect it to nginx via uWSGI than fart around with php config and the ever confusing voodoo that is Apache httpd &amp; mod_rewrite. I did that for years. I'm done.
That thing with Jared.
I meant without an external framework. Celery is a bit of a hassle, to be honest. the cherrypy Monitors are super easy to setup. I wish Flask had something like that.
After building things in node I'm not going back. I think it's outstanding. 
[removed]
and node: https://www.google.com/trends/explore#q=python%20flask%2C%20python%20django%2C%20ruby%20rails%2C%20node.js&amp;cmpt=q&amp;tz=Etc%2FGMT-2
&gt; So I'd say if you want minimal, start out with Flask, learn your way around it, and then decide whether you want to stay there... That's exactly right. Flask is / can be super light weight. Bottle might beat it for sheer size, but you can have it be as full featured or feature-less as you want. One script run with uWSGI in your virtualenv and hooked to nginx with maybe 2 or 3 lines to configure it. I actually started with Django because it was very trendy and had a huge following and tons of tutorials / resources. It was just too much... too many steps to get started (create a directory 'myproject', cd in and then create a directory named 'myproject'.. uh.. wat?), too many things to remember with django-admin, etc. I found adding routes was a huge hassle, because it made no sense at the time I was learning. Flask, on the other hand.... @app.route('/') def index(): return 'Hello, Flask!' I can immediately see the value of that... the route is right there along with the called method. With exactly 4 more lines of code I can have a working app with a single endpoint. `python -m myflaskapp` and you're up (well, with a dev server instance). After stepping down from Django, learning Flask and then Werkzeug, WSGI makes total sense. I think if I had taken much more time (and become much more frustrated) to learn Django, that's all I'd know, *how to use Django*. Now... ironically, my Flask apps are modular and structured much more like a Django app.. but I learned how to put that together in a way that I liked, not so much in a way that would have been already pre-planned for me.
As someone that works with JS for a living... -_-
Exactly! Flask is so fun to use for small projects. No bloat, just a couple of lines and you're go. It really feels pythonic.
You could try using a defaultdict kind of like: from collections import defaultdict list_of_tuples = [ (('dirty_old_cave_cat', 0), ('shitty_ol_cave_cat', 1), ('steve_french', 2)), (('dirty_old_cave_cat', 69), ('steve_french', 420)) ] data = defaultdict(list) for index, current_tuple in enumerate(list_of_tuples): # Adding the names and states to the tuple for name, stat in current_tuple: data[name].append(stat) # Checking if the length of each row is correct, otherwise append None for name in data: if len(data[name]) &lt;= index: data[name].append(None) print(data) &gt;&gt;&gt;defaultdict(&lt;class 'list'&gt;, {'dirty_old_cave_cat': [0, 69], 'steve_french': [2, 420], 'shitty_ol_cave_cat': [1, None]}) If you are confused as to why im checking if each row against the index, its because: At first tuple: index = 0, each row should be 1 At second tuple: index = 1, each row should 2 I'm sure there is a better way to do that though
Thanks, I am self taught so I do not know too many ways of doing things :)
 from itertools import permutations n = 8 # number of bitches cols = range(n) for vec in permutations(cols): if n == len(set(vec[i]+i for i in cols)) \ == len(set(vec[i]-i for i in cols)): print ("\n".join('.' * i + 'Q' + '.' * (n-i-1) for i in vec) + "\n===\n") 
I had a giggle at "# number of bitches"
You have the header files included but are missing a reference to the *.lib files which actually contain the (compiled) code. I don't have VS installed but if you go to project settings and the Link or Linker tab, there should be somewhere to specify input libraries. Add the *.lib files there by name (libsvg.lib and sdl-svg.lib or whatever they're called) then copy those lib files to your project directory. Rebuild the project. EDIT: I can't find the C code you're trying to compile. The link you supplied to PyGame-SVG project on Google Code has a couple of Python files and no C. I haven't compiled a Python extension before, though I know Python and C fairly well.
Seems like a lot of code for a very simple scraping job. EDIT: Unless the point of this post is less about scraping and more about advertising your book.
No problem with being self-taught or new at something. Just trying to give some friendly tips. Cut and pasting code (or typing nearly identical code) is almost always a sign you should be using a loop or define a function. And time you want to number variables (ok1, ok2, ...) that's a sign you should be using an array. But hey your code seemed to get the job done, which is the first challenge.
But I am african from Zimbabwe, I love Python :) 
What an unexpected twist. Also, how big is Ruby at this point if you exclude Rails? 
If you are just beginning, /r/learnpython would be really useful for you. As for the calculator, it's good. Yeah it's not perfect and it does not use those fancy built-in functions and loops but you'll eventually learn about them. The important thing for now is to think algorithmically and logically and to figure out things by yourself. Baby steps.
What advantage does it have when controlling devices?
I'm here too guys, and proud to say I've even made a (small) code contribution to pyramid!
Django makes the assumption that you want a robust and highly architected solution. What can be done in a few lines of flask may require many lines and multiple file changes in django. Flask is easy to pick up, and will still let you increase the complexity of your architecture if you want. 
It's ok... You Js guys get to create a new framework a week, though I think you are running out of five letter words... 
don't know, i use mongodb to collect and store data, works well for crawlers. If you use relation databases there is Flask-Restless. With Flask you always have a choice =) hehe
Haven't tried it, but read it as an framework designed to be fast. Of course, I also came to learn about it under the context of a team switching out its API from python (Falcon) to Go. https://blog.repustate.com/migrating-entire-api-go-python/
True. But javascript. 
How is that different from Django? 
Hi. I read about this the other day but haven't tried it out: [http://python-rq.org/](http://python-rq.org/). You might find it interesting. 
Pythonists usually search 'django' https://www.google.com/trends/explore#q=python%20flask%2C%20python%20django%2C%20ruby%20rails%2C%20rails%2C%20django&amp;cmpt=q&amp;tz=Etc%2FGMT-2 though after 2013 django unchained skewed the data.
I reccoment Django since when you don't know much about webdev and just want to get things going then you don't want to try to "plug all the best bits of python together" when you don't know what they are. What motivates people to continue with their projects is seeing fast success and improvements, if you get bogged down in choosing a templating framework and so on.. then it's not much fun.
Yep: biggest distinctions between free software and open source. Who is considered the source code's ultimate beneficiary; a user, or a developer? Should a dev be allowed take code and not give in return? I always use AGPLv3 for this reason. There's nothing wrong with companies or people using my code and profiting from it, but I disagree with them using *and not giving back*.
Wow, this is a detailed and informative post! Thanks for the effort! My original intention was just as I said to point on the helpful string constants ;) Higher bases like base64 and base85 are also common. Base64 is used for sending emails or create checksums, base85 is used for ipv6 adresses, pdf and stuff from ZMQ, this was pretty new to me. However the `base64` module uses [RFC3548](http://tools.ietf.org/html/rfc3548) for base16, base32 and base64. For base85 I think it uses [RFC1924](https://tools.ietf.org/html/rfc1924), but I am unsure, because the python docs only say this: &gt;and for the de-facto standard Ascii85 and Base85 encodings. But of course you are right, there are problems with higher bases to get a proper alphabet. &gt; Complex bases[3] would probably be a tad more work, but could be doable. Don't forget the [factorial base](https://en.wikipedia.org/wiki/Factorial_number_system) or all the other obscure bases! :D
hey sththth coder for flask_reddit updated how to start the app lol, https://github.com/codelucas/flask_reddit
&gt; My problem with flask is the request being global, instead of a dependency that is injected, like pyramid. can you elaborate on this? (beginner to Flask/WebDev here)
It's still ahead: https://www.google.com/trends/explore#q=python%20programming%2C%20ruby%20programming&amp;cmpt=q&amp;tz=Etc%2FGMT-2
I am truly amazed :-)))))))
https://twitter.com/sam_et_max. Although the comments are in french, the links are usually in english. https://twitter.com/gvanrossum. God himself. And he answers to mortals. https://twitter.com/raymondh. "There must be a better way", pocket edition. https://twitter.com/dabeaz. Not always Python. But when Python, it's good Python.
&gt; Without the cleaning functions or the comments the code would be 1/3 of it's current size. I wanted to show the cleaning functions though, even though the data coming from the Packt website is already cleaned, and comments just help newer Python developers understand what's going on.
It makes it executable from the current folder.
[import.io](http://import.io) ? It's free as in free beer. You only pay for datasets I think.
How about this: data = ((('test1', 0), ('test3', 10), ('test5', 100), ('test6', 15)), (('test1', 1), ('test2', 15), ('test6', 16))) list1 = dict(data[0]) #create dict for first list list2 = dict(data[1]) #create dict for second list keys = set(list1) | set(list2) #create a set of all dicionary keys new_list = [] # cycle through all dictionary keys and # add the name and stats from each list to a new list for name in keys: stat1 = None stat2 = None if name in list1.keys(): stat1 = list1[name] if name in list2.keys(): stat2 = list2[name] new_list.append((name,stat1,stat2)) print new_list The output is: [('test1', 0, 1), ('test3', 10, None), ('test2', None, 15), ('test5', 100, None), ('test6', 15, 16)] **EDIT:** Or this one: data = ((('test1', 0), ('test3', 10), ('test5', 100), ('test6', 15)), (('test1', 1), ('test2', 15), ('test6', 16))) list1 = dict(data[0]) #create dict for first list list2 = dict(data[1]) #create dict for second list keys = set(list1) | set(list2) #create a set of all dicionary keys list1.update([(x,None) for x in keys - set(list1)]) #update list1 with missing keys list2.update([(x,None) for x in keys - set(list2)]) #update list2 with missing keys new_list = [(i,list1[i],list2[i]) for i in keys] #cycle through all the keys and create a new list print new_list 
Fair enough. When I was initially looking into it, tutorials and so on assumed you were using everything that it comes with (admin panel, ORM, etc.). All that seemed pretty overwhelming to me which is why I went more towards Flask and eventually Tornado.
Much obliged, sorry for the missing info, I've been working in Ipython Notebook and I'm the only one who uses python on the team, so I have a bad habit of using variables that make sense to me directly. I've updated the naming conventions and added in some comments to help clarify the routine. Sorry for the confusion, stand on me. 
/r/learnpython
BackGruntGulpionetteReactPolymerQuery 
Just post the loop here (although it seems like /r/learnpython would be a better place) , removing the apparently super confidential parts and keeping the skeleton. There's no way to help you without it. 
I would take JavaScript over php any day.
 While True: pass yay, now you can do the same in a for loop: n = [1] for n in nn: nn.append(n) and you get a bonus MemoryError after a while
I was about to suggest exactly these accounts and raymondh in particular. Also : https://twitter.com/nedbat . 
Cool! My Co worker likes Atomic but it's not as tailored to python
I'd add @zzzeek (SQLAlchemy author), @mitsuhiko (Flask, Click, etc…), @glyph (Twisted), @GrahamDumpleton (mod_wsgi), @fijall (pypy).
If you have a specific problem I'm sure someone will help, but this sounds like an assignment and you sound like you have no idea what you're doing at all. Perhaps if you posted what you have already?
Flango 
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
sorry not really as I use it to exclusively build APIs!
change datatype of age to int 
https://www.google.com/trends/explore#q=%2Fm%2F0dgs72v%2C%20%2Fm%2F06y_qx&amp;cmpt=q&amp;tz=Etc%2FGMT-2 Isn't it more accurate to view the trends for each topic and not one specific query?
In Flask, if you want to access the current request object, you do so by importing it from flask: from flask import request Then in your view function you can just use it. def view(): print(request.form) In this case the request is a global. Flask takes advantage of threading. It's not very "Pythonic" as argued by some, and makes testing less explicit and more complex. Django, and other frameworks inject the request as a parameter to the view method: def view(request): print(request.form) In this case the request is explicitly passed as a parameter. You can easily test this method by mocking a request object and passing it to the method.
Nice!
Maybe you got downvoted because of a misleading headline? I mean, it says it right in the article you linked: &gt; Both the documentation of Werkzeug and Flask mentions this with large bold letters that you should not expose this debugger online. Sounds more like an issue with the user than the software.
Adding PHP was not supposed to make sense. It makes about as much sense as adding RoR in a comparison of Python frameworks in the Python subreddit. I was sarcastically one-upping the guy I replied to. Nobody here gives a fuck if RoR or PHP are more popular than Python. And on top of that I would also add that Google trends is not an accurate reflection of how much use something gets. RoR's line is heavily inflated by people who heard you can make 90k a year as a "Rails developer", Google searched for it, and never did much more than a few tutorials with it. In my last job hunt I didn't see a single RoR job posted anywhere. Everything was Python, PHP, or .NET. RoR came and went.
Looks like I've found a solution at http://flask.pocoo.org/snippets/129/ I can then use my app object for normal views and pages that need to be rendered when requested via a browser, and an api object that handles routes for API requests. So in this case /instances would be the browser accessible page, and /rest/myapp/1.0/instances would be the REST endpoint.
&gt; It's not werkzeug to blame for failing to disable debugging. Well if it were enabled by default it would probably be werkzeug's fault really. But it's not enabled by default.
Ah. Thanks for the assistance. I ended up getting the source from [here](http://www.linuxmotors.com/SDL_svg/). It doesn't come with lib filrs, so I would have to compile it in my own, right? Then add the library files directory? Looks like this will take some work, as there isn't an included sln file.
learn Django, shouldn't be too hard to pick up some freelance webdev work.
I didn't mean there's anything *wrong* with trying to make money from side projects, that just not what my personal side projects look like.
Who is blaming Werkzeug? Werkzeug tell you **not** to use it in production, and there's a reason for it: &gt; The development server is not intended to be used on production systems. It was designed especially for development purposes and performs poorly under high load. For deployment setups have a look at the Application Deployment pages. It really doesn't take long to setup Nginx, and uWSGI on a production server.
&gt; Who is blaming Werkzeug? You are. In your post title.
Already started on the Swift to Go transpiler for my Mongo on Spark on Nix on Docker platform. Maybe I should Shen instead? Distributed Shen with CRDTs?
It's really not though! Everyone says this! Requiring multiple workers (processes that have to be managed outside of Django) to always be up is scary if you don't read the documentation and source. You have to be very comfortable with your environment. When you start having to run external process from Django and manage those workers, it becomes overwhelming for those learning because it feels like overkill. There examples are honestly horrible. They are not in depth, and don't show true real world use cases. I'm currently implementing this at my job and while it seemed like overkill at first. It's amazing for long running important tasks. Plus the built in ability to be able to see what is happening inside the tasks is amazing. We are replacing all of our cron jobs with the tasks because we can monitor them way better, and retry if they fail, as well as pass parameters, with built in retry's, built in error handling, and it's distributed! 
Let me tell you about this wonderful language called Python...
You've just collected $5 million in VC backing, congratulations!
Not for money anymore, it used to consume too much of my free time and upset the wife. I still carry out some ML stuff on my own pace, but then there's Witcher 3 and it's easy to digress.
i use python, scipy, numpy, and ipy notebook to aggregate and analyze local clothing deals. then i purchase cotton in bulk, create the fabric, and teach myself how to sew trousers, etc. i then sit outside of retail stores hocking the clothing for less than the deal price. python and nimble fingers ftw
Recommended starting points for Django? I'm having a hard time learning it
Is this serious? Perhaps the strangest hobby I've ever heard of.
If you're having trouble getting off the ground with Django start with [Flask](http://flask.pocoo.org/) instead. Once you feel comfortable with that give Django a try.
It's the internet, there are people who are sexually attracted to balloons. Being a one man sweatshop isn't out of the realm of possibility. 
True. Badly create search terms can give you unreliable results. Or as we said the olden days, GIGO.
This answer is amazing.
&gt; They force me to write Java! Show us on the doll where the interface factory touched you. E: Thank you for gilding my one-line shitpost, Anonymous Hero.
I don't use Python at work because I'm an electrician. However, I helped the office out with a couple of scripts recently and someone suggested I do this on the side, but I don't have a clue on how to market it. Let us know if you figure it out.
&gt;implying that this isn't my full-time job
Learn how to do web scraping. Always in demand. 
I use it to aggregate baseball data and then build a model and bet based on my models. Not necessarily a hustle, but I use Python to help make me money
I think that this one truly meets the description of being a hustle, thank you!
My entire Python knowledge is based off of web scraping. Where can I make money doing this?
No love for base 1? :-(
You should use my tool iPurchase which automates the buying process and iSyt will hawk your jeans for you. 
Don't go on Upwork. It's shitty and getting shittier everyday. Bottom feeders all the way. [EDIT] I think I should clarify and change the tone to be more constructive. **the bad:** - I still use the site. - page loads, take 3-6s. It's really slow to navigate. - There is a lot of noise (Shady jobs; Build a search engine for $200; A week worth of work for $10) - You'll submit proposals that simply expire. It's not that you were not chosen but the job was abandoned and left to expire. - Extremely unclear job descriptions. "Clean this CSV file" type of jobs can turn into a "data carving" in a heartbeat. - *Everyone* awards 5 stars *almost* every time. It would be unwise to do otherwise. **the good:** - You *mostly* don't have to worry about payments. - The payment process is what drove me to the site and it's what keeps me going back. - Large marketplace.
This sort of shite would make the baby Jesus cry.
I'm a sys/net/wlan admin, and the tools I build I market to respective user groups. I'm consistently surprised how much more willing someone is to pay for something by someone they know, notwithstanding the added value, than a vendor they don't. I built a module that moves configs from one switch to another with one click using any protocol, and everyone I know who could use it, does. So I would start with making something you would use, and then find people who do what you do, and gauge their interest.
dang an electrician that knows python. I feel like you have to be a pretty sharp dude
It means look to the right and read the sub's rules &amp; etiquette.
Would gold this but I'm too poor. Good job tho.
I know, right? Obvs the way to do this is to teach a python-driven robot how to sew.
I heard he from south_america import pythons 
ahhhhhhhhh, I swear I'm retarded. I dropped the outer set of brackets which was throwing my syntax error. Now correct me if I'm wrong in this behavior, but the outer set of brackets on the two elements is passing the two as a list item to the new list correct? Thanks!!
Well its more unary was excluded as it doesn't work automatically (`n % 1 == 0` and `n // 1 == n` for any integer n) and I didn't feel the need to handle this case specifically. Would be easy enough to do. def convert_bases(n, base=2): num_to_digit = '0123456789abcdefghijklmnopqrstuvwxyz' if base &gt; 36 or base &lt; 1: raise Exception("Invalid base: %d" % b) digits = [] negative = False if n &lt; 0: negative = True n = -n if base == 1: digits = ['1',]*n n = 0 while n &gt; 0: digits.append(num_to_digit[n % base]) n = n // base if negative: digits.append('-') return ''.join(reversed(digits))
So? Are you short on HDD space? 
Could you expand on that? Thanks.
That's correct :)
The problem was that they left debug on, you have to be an idiot to leave debug on in a production environment.
yep, but you're totally binded to windows (also, python is prettier to read and funnier to write)
I thought ever since Microsoft started somewhat supporting/contributing to the Mono project that C# really isn't "Windows only" anymore? I mean, I run a C#/Mono based program on Linux (Sonarr) and it works great.
Any literature you can recommend?
I'd be interested in some sources that gives advice on how to get started with this. Do you have any such sources top-of-mind?
And making a nice living in Chennai
One thing that still annoys me with Atom: No proper PEP8 indentation. On VIM, if I do "def f(a, b, c, &lt;enter&gt;d):&lt;enter&gt;pass", I'll get: def f(a, b, c, d): pass With Atom, doing the same typing, I get: def f(a, b, c, d): pass Dunno how hard it is to fix this, but it's one of my small pet peeves with Atom at this moment. Note: I probably get the proper indentation on VIM thanks to [VIM-Polyglot](https://github.com/hoelzro/vim-polyglot), which is a meta package for improved syntaxes.
AFAIK the big issue with C# on non-windows platforms is the lack of UI tooling and .net. C#, CLR, and .net are also pretty tightly integrated with Windows so support on any other platform (even with Mono) is going to be second class. That being said MS is making efforts to decouple the whole environment form Windows and make non-windows platforms "first class".
We might be able to fix this actually. Could you please create an issue on gh?
Watch your decimal placement.
ya just gotta regex harder bro
Ramses dev here, if you want to try out the framework behind this: http://ramses.tech
Great response.
My python side hustle is a Django website I build that automates live price comparison for me. I was getting tired of doing the work manually every time I wanted to buy a new mouse or graphics card. If you buy lots of PC parts or electronics then it might be useful for you too. [https://www.slycut.com](https://www.slycut.com)
Holy shit. This is amazing. 
This is for certain the answer. Lists and lists and lists of lists for sale. 
Django is way too much for people... if you start with Django's overblown tutorials. I really, super, highly recommend picking up the book Lightweight Django on Oreilly. It's easily the best tutorial I've ever gone through with Django, and it starts from scratch, which is actually much closer to Flask than people realize. Fantastic book, really.
Nice regexp skillz :o
This is awesome, really. I'm interested in using this, but how well does Elasticsearch hold up as a back end under load? Does it need some sort of caching? Do you have caching built in?
At one point I had a bitcoin trade bot that would play multiple exchanges. It was based off of financial arbitrage of alt coins. This allowed me to simultaneously buy low and sell high on different exchanges and then cash out in btc. Edit: spelling
My first python project was a program that scraped printer star pages and gathered them into a database so you did,t have to go to every printer and could just go to one page and see them all. Edit: This is the GitHub repo for it: https://github.com/riei/printerstats
Yep, they don't want to use Windows but no one wants to give up Visual Studio.
I know the Qt framework is available for android - so in principle it could be possible to use PyQt or PySides but I have no experience doing so. My guess is it may be not worth the effort involved. There may be some issues in which versionsof Qt are supported. IIRC PyQt4 doesn't work? but PyQt5 does... maybe I have that backwards Kivy is the framework/module/library which comes up most often with regards to python development on mobile environments. I have not personally used it but it seems to be under active development which is a plus. According to their website, "Kivy runs on Linux, Windows, OS X, Android and iOS. You can run the same code on all supported platforms."
I'm ok, it's just that she misses me if I work 60h+ a week. It's actually a surprise to think someone wants to be around me that much.
Pretty good, but it has a bunch of information wrong about me. Basically says I post in subs that I've never posted in.
So if there were caching, it would be through Pyramid? Is that a feature you could add to Ramses in the future, if it didn't exist now?
Did you mean HTML or more likely HTTP verbs like GET, POST...?
[removed]
[Introduction to version control](http://guides.beanstalkapp.com/version-control/intro-to-version-control.html) 
Are you certain you saved it as what you think you saved it as, including the path? Its not in another directory? You aren't trying to open the pyc file? This is definately not a python error. It's your text editor or yourself.
You are gonna be better off buying an index. Unless you are an amazing genius you are not gonna beat the thousands of people doing this for a living, earning huge salaries.
Pssh, that's just a mundane detail.
Baby don't hurt me no more
By gaming two exchanges in this way it naturally shrinks the gap. It got to the point that it wasn't lucrative enough for me to maintain the bot for updated APIs. I controlled the bot by irc and it would announce transaction details. You could fine tune how big the gap had to be and how aggressively to trade. It was a really fun project.
Cool. Thanks!
updog
return person == 'solidcube'
Back when Qt 4 was the newest version, there was a push to support mobile, but it required an app installed alongside it (Look up Necissitas if you want to learn more). Pyside allowed you to do so, and there is a [tutorial for it](http://modrana.org/trac/wiki/PySideForAndroid). With Qt 5, there is support for apps without the second app, which makes deployment easier. PyQt5 supports building for Android (and iOS?) with the pyqtdeploy tool. Pyside2, a Qt 5 version of Pyside ( and also a project I am a contributor for) is not stable as of now. However, I and some other contributors are very interested in allowing for mobile projects, so I encourage you to check back when it is stable. Generally speaking however, the idea is to compile and link everything (Python, Qt, Pyside/PyQt5 ) for android, then package that in an apk.
What's updog?
Your post was too close to home, yet equally inspiring: &gt; Show us on the abstracted form of a humanoid figure generator where the process improperly referenced your private fields.
Oh, nothing much. You?
Oh, haha, I meant about advice getting started with Python contract work through something like CL.
Pretty sure he means HTML based on the context. 
Get some sleep, stranger. 
Once you come up with an estimate of runs, you can use [Pythagorean Theorm](http://www.baseball-reference.com/bullpen/Pythagorean_Theorem_of_Baseball) to put those scores into a win%
She's a beauty but I'm not sure she's going to scale as beautifully..
Cool. I am dealing with this problem now.
GOT'EM!
Do they have a HTTPS site? You should be careful of sending your credentials in the clear.
Very few, everybody. Very few. 
Damn dude you got him. Sniped.
Interesting. Comcast/Xfinity Data Usage for the Month. -------------------------------------------------------------------------------- 100% of data used 0 GBs remaining until 10/31/15. 262 GBs / 250GBs used. --------------------------------------------------------------------------------
I'm a huge baseball fan who has been interested in doing something like this. Is there somewhere that data is publicly available though? I wouldn't even mind paying some amount, but I don't think the big 2, fangraphs and baseball reference, have any sort of API.
Honestly, I'm not sure. This was all written out using Wireshark to analyze the http traffic the desktop usage meter app was using and it wasn't https. I'm not sure if that's surprising or not. 
Currently on my 3rd courtesy overage month. Any time I go over after this month, I get charged. :\ EDIT: I should mention that I live in Nashville, TN. Fiber is here in some areas already. 
To stay true to the thread, I'll gladly provide you a .txt file with data from fangraphs or bref for a small fee. You're welcome to PM me. I have DB's full of pitch by pitch or game level data and any other aggregate level data you can think of. Plus, anything I don't have I know how to get ;) That being said, you don't need an API to get data from a website. API's are faster, but any information on a website is scrapable! Think of it this way: Requests library grabs html from whatever URL you feed it. So take this thread's URL for example. Hit F12 on your keyboard and you see all of the HTML behind what your browser is visualizing. Between all of those &lt;&gt; tags are the text you're seeing. Using BeautifulSoup you can parse through all of those tags and find the correct text you want to save, say, all of the comments by OP. Then as you parse through, you send that info to whatever output file/db you want and you can analyze to your heart's content.
I used to have one. Happily, it grew from being a side project for my wife and I to being both of our full time thing. Originally it was an online test creation tool, but slowly it is becoming a full blown educational platform. This is the site if anyone is curious: [Help Teaching](http://www.helpteaching.com). The site backend is written in Python, and uses Flask, SQLAlchemy, Jinja2, MySQL, ElasticSearch, and PhantomJS.
Just changing the http to https for the 2 URLs seems to work fine.
I have a 4 year long side project. It's pretty popular. I've met 2 people in real life in the last week that use it with no prompting from myself and that aren't my coworkers. I personally haven't made a dime off it, though I have been funded by the European Space Agency. The money went to a grad student that worked on it.
You gotta get the data somewhere. Hence, the scraping. It's the analysis of it that counts as "big data", but only in the sense of the analytics. This isn't true "big data" from a size perspective. Run analytics in petabyte level datasets and then you're cooking with gas.
A lot of people joking. :) I scrap two local newspaper online classifieds. I store pretty much everything up to 1GB of text (sort of 1 year of posts). I build this with [scrapy](http://scrapy.org) first for trying to learn that tool. I was initially thinking on building a better search engine for the public to use, but I just use it for myself because I notice that I could get to know great deals on common items like: bikes, cellphones, rents, or any other thing that will be hard to find, 30% profit if I sell it the same day again. I made some bucks, not a lot but enough to pay a fancy dinner. I know I could get more money of it, because it's easy to highlight good deals in realtime, but I just don't get enthusiasm to do it. 
I dunno. How HTTP and the supporting technologies (cookies, CORs, AJAX) work were much bigger hurdles to my learning and using of Django than HTML. Of course this depends on what you're doing. But if you're working "with" Django it's more backend than frontend. The HTML templating system is very much agnostic, even completely replaceable with others.
At one time there was a guy that handmade Bikinis on Orient Beach St. Martin. Hell of a job to have naked or nearly naked woman walk up to you for a custom bikini, hand fitted of course. Being the Caribbean I'm sure he spent time sweating, probably more from the stimulation than the sun though. In other words some sweat shop jobs are sweet. 
I am an independent consultant, it's pretty great. I've doubled my salary in the last year.
I am surprised since anacondas are more of an aphrodisiac meal down there. However, locals only it them in between buns like a sandwich. If they've got no buns then they don't want none. 
Yes, replicant, finest quality!
Test Driven Development With Python, by Henry Percival, is a wonderful book for this. It walks you through building and testing a Django web app from the ground up.
Just found this subreddit. Glad to see lots of people here writing python and doing web scraping. Would like to share one recent example of what I've done at work. I work in Operations. However, I often find myself writing scripts to either retrieve data from our SFDC database that would take hours/days to do manually, or more recently, I've written an entire web scraper from scratch. Instead of using scrapy (i have 0 experience with that) I've used the following modules: * robobrowser - for authentication and login * beautifulsoup - for html/xml parsing * requests - because &lt;3 I've built an entire API around this only to discover today that the use of spiders/bots is against the terms and conditions of the page i've been scraping. Now, this was a direct request from my boss, so I hope I'm safe. And, I've taken precaution and been quite courteous (throttle of 2-6 seconds between requests) but the bitter aftertaste exists nonetheless. Wouldn't want my ass to be on the line if our company loses access because one guy scraped all night...
I had a python web scraper that went through my city's local wiki and returned every restaurant or store that didn't have a website so I could market my web dev services to them. 
Like management?
Honest question. If enough people utilize this method, does it make that method less effective? Isn't gambling/betting making money over time off of a small edge? Does that edge diminish if enough people figure out what is going on an emulate it?
No, it's not. In your graph there is a sharp peak on December, 2012. That's when the Django Unchained movie was released.
Gateways tend to be dedicated machines, dedicated to decryption of https streams, and are often load balancers too. Where as the "general" server that's doing the backend work is well doing the backend work so it's easier to make the backend machine dedicated to the backend work.
I am no expert on the field but I could defend myself with most web dev. Working with HTTP is not too hard. Knowing everything related to requests and responses may be a bit overkill, but knowing things like: - Requests should return a response. They have a verb and some arguments ("?arg1=var1" for GET requests in browsers) - Responses have a return code (200 OK, 404 NOT FOUND...) and a content, most of the time - Sockets are continuous (uninterrupted, can't open those who are closed) data connections with a server. The data can be anything as long as the server is programmed to interpret the input. Constructs like REST architectures are different (as they are not standarized) and work on a per-install basis, say, no two REST services ought to be the same.
Great reply. Just wanted to say I now understand ThreadPool.apply_async(). *thanks to your example.* I've always used *map* or *map_async* and didn't understand why I would just throw one job, a la apply_async(), at a thread pool. Now I know it's for ~~spinning off all the jobs manually~~ applying potentially non-homogeneous jobs to a thread pool. edit: see above.
Adding Python to mobile development chain will sadly hurt. It will be easier to just use Qt Quick / QML insteal od PyQt5 and figting with mobile parts with it and pyqtdeploy.
That sounds interesting. What project?
So useful thanks so much for this
I've tried [LiClipse](http://www.liclipse.com/) recently, but I wasn't very impressed - it should have a lot of powerful features for Python code, but I couldn't get anything beyond syntax highlighting working. At the moment, I'm using [Spyder](https://pythonhosted.org/spyder/). This works nicely so long as the necessary optional dependencies are installed (like rope and pyflakes). But it's not much good for anything besides Python files, so I tend to fall back to [Geany](http://www.geany.org/) for those. PyCharm has a free and open source 'Community Edition', and it's more capable than any of the other free options I've come across. But since it's controlled by Jetbrains, there are features it will never get, short of a hostile fork, because they need something for people to buy from them.
Mostly because they tend to be both Load Balancers &amp; SSL-terminators at the same time. Another common thing is to have a reverse proxy in front of the web server. Simply to enforce active rate limiting and do IO. Varnish, nginx, pound and others are common choices for either Load balancer, Reverse proxy, TLS terminators, or all of the above. Partially, because an architecture designed to handle multiple flows efficiently means using less resources per connection. But a server usually has a high overhead per connection (because it does work for each connection). So you want to split them off into "bundle of waiting connections" and "small amount of cpu/IO bound program logic threads". Imagine having to write all your code to never do dynamic allocations on connections, only ever using static buffers, do no extra work per page render. Then try to talk to a database and render HTML output with those constraints. Doable? Maybe. Easy? Feck no. So, you split the two apart, one part dealing with tons of connections with little/no overhead and no per-connection allocations. The other part doing work on a per-connection basis, but requiring dynamic access to memory/cpu. After that you rate limit traffic to the resource bound part, and you're done. A "better" flow balancer (varnish helps here) can identify "heavy" connections (requests that will require DB access) from "lighter" connections (things that the app server responds to without roundtrips) from "free" connections (cacheable data), and can then direct this load differently into different queues, in order to achieve "proper" load handling. This sort of stuff is interesting, fun, but also quite difficult.
What are those hex codes doing there? 
Who needs an airplane? This guy must be new. He doesn't about about import antigravity It's actually a language feature, and you should try it.
Do you feel like it's given you a significant advantage? I assume you've seen the movie Moneyball?
Except where you use OpenCV
On a related note - would anyone recommend using an ORM like sqlalchemy with asyncio/tornado? 
sounds like a PEBKAC error. This is well known in Python and there are some solutions for solving it online.
The closest is probably Eclipse+pydev or maybe Netbeans with some plugins
Sure, if enough people use your exact same method, books will adjust their lines quicker as they get additional money on that side. But I don't talk about my model except on a high level; my inputs may not be all that different from everyone else's but my algorithm's weighting is most likely different. If vegas ever starts adjusting, my program will simply stop spitting out bets because they won't have value. At that point, my gains will be limited, but I won't be losing money. 
Hi, that is definitely a bug, it will be fixed in the new PyCharm 3.4.3 that will be available in a couple of hours. Until then you can download PyCharm 3.4.1 from here: https://confluence.jetbrains.com/display/PYH/Previous+PyCharm+Releases
You mean in the doc string below the function name? That's just a list of Element objects that you can access. It's all just a string so nothing is being executed. But to answer your questions the Element's are each a python object. The hex code either refers to their location in memory or it's unique identifier. I can't remember to be honest. 
They chose python because the best reddit api wrapper is wrote in python (praw) 
Looks great. Thanks for sharing.
1. Split out related things (eg. REST endpoints) to a different file. 2. Create a Blueprint object. 3. Change the route decorators (with Find and Replace). 4. Register the blueprint with your app object. Real example: http://flask.pocoo.org/docs/0.10/blueprints/
I have tried this using Youtube-dl and it work 
well I mean there's the whole story arcs about his failed baseball career, and passing up the education at stanford, and working for a small market team, and he can't watch the games because they always lose. When I first heard about the movie, my reaction, literally verbatim: "That's cool, but how does it end? Scott Hatteberg striking out in the ALDS?" Then, the happy ending is that the Red Sox win the world series in 04. Because the movie was about Billy Beane. The book was about the efficacy of model and using data to make informed decisions. Definitely mixed messages, but I found it entertaining.
The retarded part about this is that when Fiber is finished here, Comcast will likely drop their data caps to compete. But since there's no competition right now they have no reason to do so. 
Yah I figured I would have to do web page parsing to get it; although I was wondering if there was another easier way I was unaware of.
Awesome - that's a great help, thanks ! 
Weird. There's no logic in those numbers. The 74% is something I wrote, everything is just reading what comcast sends down. Maybe their doing some sort of maintenance.
Okay, thanks. I updated my version of pygame-svg to link to 2.7, and have found windows ports to all of the *nix dependancies. I am currently working on fixing all the include starements, and I guess I'll need to fix a couple of other errors. If you want I'll report back when I have something that points to the right stuff.
After line 52, you could type print(resp.text) to see what comcast is sending back. My bet is that it actually is the zeros since I'm not specifying a default value. Sorry bud. :\ 
Baby, don't hurt me.
That's possible too. The script only requires that you add your own username and password to it. You do not have to be logged on anywhere else. 
No matter how good a team is, the MLB playoffs are a crapshoot.
Aye, goode olde Aunglish indeede...
I work in an IT security field (CIRT) and this are some projects I've automated: - I created a framework that is monitoring over 200k+ devices in our network. When a new event/incident come to us, it will automatically connect to that device and collect system artifacts &amp; analyze system (Rapid Remote Triage) so the analyst can then do the forensic analysis almost immediately when he start working on the incident. - Automated email analysis for our CIRT. It process thousands of emails incomming and it's using "outlook like" rules to process all the emails. It's able with 99% accuracy to recognize phishing, UCE, spam, categorize security incidents as low/med/high priority and it's directly integrated with SIEM. Besides that I have a personal project that is monitoring OSINT resources in real time on the internet (pastebin like sites, darknet forums etc...) and extract/transform intelligence that has been found there. It's than categorized and labeled, after it's stored in db it can be sent by email or whatever you tell it to do with it. \+ a lot of smaller stuff, mostly synchronization of data between systems when some event happens
Love is an equation running on the hardware of humans that is the driving force for evolution. http://michaelscharf.blogspot.com/2014/02/a-new-equation-for-intelligence-f-t-s.html It's the fifth major innovation of the universe: https://www.youtube.com/watch?v=yqc9zX04DXs Love is like a golf ball falling into a hole in the ground. Physics demands it.
I found a place with csvs back to 99, but I scraped statto to 1900. Remind me to get the website off my laptop for the csvs. Statto crashes a lot during scraping so it has taken me a few weeks to get that data.
I disagree wholeheartedly. I think it's that postseason success is built much differently than regular season success. The difficulty is you need to be the latter to test the former. Regular season is so long that a good regular season team just has to maximize it's opportunity. This is why the prioritization of OBP was important, this is why they followed the probability of events so closely (don't bunt, take more pitches, etc.), and this is why they found regular season success. The sample is large enough in the regular season that you can see that manifested. Depth is key. You face alot more bad pitching. The postseason is a different game. You see the creme of the pitching crop, almost exclusively. As the Cubs found out, a lineup built on boom or bust can very easily bust in four straight games, and that's your season. My personal philosophy on the two shapes is this: A great regular season team: * &gt;= 1 stud pitcher * #4/5 Starters are pretty good; could be 3s elsewhere * great catcher (elevates your pitching staff) * power through the lineup, at the expense of average in some cases * good mix of bullpen arms; diversity * 2 or more "middle of the lineup" bats; power and average Great playoff team: * 1 true "Ace"; your 'game 7 on 3 days rest' guy * 2-3 gas throwers at the back of the bullpen; true 8th and 9th inning guys * 2 more front line starters (can be ace's, can be #1/2 guys) = 3 great SPs * A good bat behind the plate (&gt; .265/15/70 split) * depth in contact hitters (your worst hitter should still be &gt;.300 OBP) * One or more true, stud bats (OPS &gt; .850, preferably &gt;.900) * Above average defensive play from 6+ starters (pitcher included) * veteran leadership: minimum of 1 in the staff, 1 in the lineup * A manager who doesn't suck (I think this could be the Royals' downfall again this year) Obviously, I'm being pretty specific, but I think that's wherre moneyball, as a concept, fell short. The model isn't the same regular season -&gt; playoffs. Those A's teams couldn't consistently get on base against good pitching, their backbone (Hudson, Zito, Mulder) were really good, but not absolutely dominating. In retrospect, I don't know that any of them were a real #1 pitcher. My thoughts on the matter. Y'all can get back to talking about Python
Are they poisonous?
Would it be possible to use for scrapping?
Another almost thousand free tutorials on wide variety of topics can be found on [PythonProgramming.net](http://pythonprogramming.net)
Don't forget that if you go over by more than 50 gigs it counts as two months.
Don`t hurt me.
This is amazingly simple yet clever!
NameError: name 'love' is not defined
Not if you've run the rest of the code beforehand: &gt;&gt;&gt; type (love) &lt;class 'module'&gt;
Go to sleep.
Nice work :-) 90% of data used 74% through the month. 23 GBs remaining until 10/31/15. 227 GBs / 250GBs used.
I'm trying to but it's proving to be a daunting task to get even a heightmap, I'm basing my work off of this heightmap: http://s1282.photobucket.com/user/JedJTL/media/Westeros%20Heightmap/WesterosMap_Flat_zps0483f39a.jpg.html Edit: The problem with this heightmap is it's only 8 bit grayscale and I need 16, so I've got to scale it up and try to hand manage the scaling and resolution
Thanks so much for this reply, very insightful. Actually I have a grayscale jpg image with a bitdepth of 8, I'm working to convert it to a png with a bitdepth of 16 for use as a heightmap in a game. Sqauring the 8 bit grayscale pixel values gets me a 16 bit grayscale value. It may not be scaled correctly (though I'm actually trying to purposefully exaggerate the heights to provide proper in game perspective). You're probably getting that error because your input image is RGB, since mine is grayscale each pixel is just an integer.
I'm only familiar with Mediawiki's "namespace." Is MW's use of namespace similar to the one used in this context? 
Python isn't really that fast, even JS is faster, about 6x faster than just Python3 and about 5x faster than Cython. If one used PyPy, I'd agree with the article a little bit more
 define love?
Yeah I'm sure there are multiple ways to figure this out. Wireshark is just what I felt would get the job done quicker with my skillset. :)
Really!? lol I didn't know this. At this point it doesn't matter for me anyways. I'll likely go over this month, then start getting charged $10 per extra 50GB. 
We have a PT Fall, PT Spring, and FT Summer internship at Caktus. We are currently taking applicants for Spring...keep an eye out here for the listing(s): https://www.caktusgroup.com/careers/
I only clicked to make sure this was here. 
I think it was a joke
Lots of networking and referrals, mostly. Make sure to maintain your linkedin profile and keep in touch with people you've worked with in the past, that can open all sorts of doors. 
I would like to farm out the work to eastern european subcontractors and manage multiple projects simultaneously. 
Oh god, I'm in love! This is amazing &lt;3
It was an update to enable usage of JetProfile with the new certificate. Unexpectedly it broke the license check and is treated as a major update. Sorry for the inconvenience. PyCharm 3.4.3 fixes it. 
Thanks so much! I'll keep this in mind and check back for summer positions.
I'm hoping for this: https://www.aeracode.org/2015/6/17/beyond-request-response/ (the author is also the author of South / migrations)
What environment is this?
Your love has been type coerced into a decimal value. 
ipython
I don't think you should be encouraging the use of GOTOs. Especially in Python. Shame on you.
There's a mediawiki project that has articles on topics like that.
an isolated environment
It looks like the code as-is doesn't provide it out of the box via methods, but parts of the [remote protocol seem promising](https://developer.chrome.com/devtools/docs/protocol/1.1/page#event-domContentEventFired).
From the creator of South: https://github.com/andrewgodwin/channels
nice solarized there
I get: &lt;ipython-input-2-b04a157b20b6&gt; in get_usage() 53 print(resp.text) 54 tree = ElementTree.fromstring(resp.content) ---&gt; 55 end_date = tree.find('device').find('counter_end').text 56 usage_remaining = tree.find('device').find('usage_remaining').text 57 usage_percent = tree.find('device').find('usage_percent').text AttributeError: 'NoneType' object has no attribute 'find' if I print at line 53 (print(resp.text) I get: &lt;response&gt;&lt;status&gt;&lt;error_code&gt;0&lt;/error_code&gt;&lt;error_text&gt;&lt;/error_text&gt;&lt;update_url_mac&gt;http://usagemeterapp.comcast.net/files/XFINITY_Usage_Meter.zip&lt;/update_url_mac&gt;&lt;update_url_pc&gt;http://usagemeterapp.comcast.net/files/XFINITY_Usage_Meter.exe&lt;/update_url_pc&gt;&lt;/status&gt;&lt;/response&gt; any ideas?
This poem is kind of depressing... If you run it, you find there is no world. 
https://www.youtube.com/watch?v=YWdD206eSv0
&gt;[**Lies on the Internet [0:07]**](http://youtu.be/YWdD206eSv0) &gt;&gt;Clip from Arthur &gt; [*^baines0*](https://www.youtube.com/channel/UC-81eCPQ1X2Ad9K4wyuOExg) ^in ^People ^&amp; ^Blogs &gt;*^1,379,203 ^views ^since ^May ^2012* [^bot ^info](http://www.reddit.com/r/youtubefactsbot/wiki/index)
Like Superman III!
The pop up "give us your email" crap froze up my browser for a bit. Seems like an interesting service though
Collection of election results: https://github.com/openelections/openelections-core
Yeah, I'm just gonna repost what's elsewhere; this has only ever happened when I tried to install the wrong bitness of pygame. All I can advise is to purge errthing and reinstall, possibly from gohlke.
I don't know
That's lovely. ♥ Comparing the zen of python to love feels like Auden's [Law like Love](https://thewonderingminstrels.blogspot.nl/2004/04/law-like-love-w-h-auden.html), and the law of the poem works more than halfway as a simile for the zen, too. &gt; Law, say the gardeners, is the sun, &gt; Law is the one &gt; All gardeners obey &gt; To-morrow, yesterday, to-day. [Edit: phrase-tinkering]
What's a GOTO in this context? Still pretty early in learning CS myself, and reading the wiki entry didn't necessarily elucidate how that relates to the original post. Edit: I'm dumb, I misread your comment completely. But while we're at it, why are GOTOs a bad idea, particularly in python?
and help(love)
you should be using self.albumtitleLabel instead of albumtitleLabel
Because they make your code hard to follow. For clean code, you want to have small logical chunks that you need to think about and maintain the context of. Without goto, if you're looking at a piece of code you can pretty easily just follow the lines above it to work out what the value of each variable is. With GOTO, who knows when the value of 'x' was last changed. It might have happened higher in the file, lower, in a different file, or maybe it was never even set (if that line was skipped with a GOTO), it makes it very difficult to actually figure out what's going on. Even if a goto makes a certain action easy to do in some case, it's often actually better to use multiple other more complex control structures (loops, breaks, functions, etc) because then the context is very clear. I think the Python reference is just because python is powerful and easy enough for you to never have to use goto, and it's modern enough that you're unlikely to have someone else hand code with goto's in it to you, so why introduce it? All that being said, goto does have some uses. This is the only one that I've ever seen, but I'm sure others have been in similar situations: http://stackoverflow.com/a/47472 I've seen people recommend more roundabout ways of solving different varieties of this problem using functions and return values (5 nested loops is an extreme example, even two is enough to need a goto if you need to break out of both of them), but most of those seem more convoluted than just a simple goto.
The fact that you are learning CS and you were not exposed to GOTO is great news in itself.
[removed]
Use selenium
No, the browser protects against this. Scripts may close only the windows that were opened by it.
His license is good for 3.4.x, so any future bug fix updates are included. This is how jetbrains has done their perpetual licensing, to include all major and minor updates for a year, and then any bugfix updates forever. 
I recently started https://python-jobs.com (built with Flask) as I needed to find a good gig. 
Best way to make money (easily on the side) with Python is with web development. You can get tons of side gigs for people looking to build a website where weebly or sqaurespace aren't enough
Very informative, thank you!
Looks like you could get a lot out of [pandas](http://pandas.pydata.org).
Tell them: "Imagine I'm a carpenter and this is a saw blade. It gets dull after a while and you need to buy a new one. Software is exactly the same."
I quit using pycharm. I don't like the new license. Also anytime I see splash screens I get annoyed. 
&gt; Because they make your code hard to follow. cat /usr/lib/python3.4/this.py Hmmm, rot13 encoding and zero comments in this code. How obfuscated non-pythonic! edit: I guess I missed the [joke.](http://stackoverflow.com/questions/5855758/can-anyone-explain-me-the-source-code-of-python-import-this#comment40459179_5855793)
That is awesome. Work on an MVP but ship it before it is done so you can get instant feedback. ABP, Always Be Pivoting. Go Hard, Fail Hard!
I didn't do it
I used to implement an auto update mechanism for each app I created until I got lazy. Not long after [PyUpdater](https://github.com/JMSwag/PyUpdater) was born
What's event loop ?
You don't need that much work to made money! 
Use this tool: https://pypi.python.org/pypi/sqlacodegen It reads an existing database schema into sql alchemy. 
You automated yourself into a job.
yield sleep.
If you have written some code and are stuck somewhere, we can help you in /r/learnpython. But we won't write code for you without your putting some effort in first.
reminds me of Paul's letter to the Corinthians. This will be the next big thing to read at weddings
I tried that. Didn't work.
I didn't know about that method. Thanks! However, it won't work very well when you have an object that contains many numpy arrays, for example. Rather than saving each one individually, you can joblib.dump the object and joblib does everything for you. It might very well use numpy.save under the hood.
If you're running this using iPython, then I'm not sure what's going wrong as I'm not very familiar with it. If you have python 3 and the requests library just type 'python comcastUsage.py' from a command line and see if that works. 
This is the best argument along these lines I've heard. I think there might be a difference in our use cases though. Am I being naive in thinking that my uses are not susceptible to the problems you describe? I use python nearly entirely for scientific computing: fMRI data analysis, neural networks, graphical models etc... I post code to github in the hopes that someone else might run it, and I use pickle to store models that take a long time to train. This file is always generated by the user. Is that safe?
Follow-up talk on the same topic @ PyCon Fi last monday by the same author: http://igordavydenko.com/talks/fi-pycon-2015/ Going to post a video recording of the talk to this thread when the organizers get it online.
I've just went through most of the process (pyqtdeploy) and I've just stopped. I've been following their docs, plus various blogs on the internet, and it is a major pain in the... Plus I had to use the snapshot version instead of a release. Considering the fact that it is a commercial product which has now reached version 5.5, I frankly don't have confidence that it won't blow up at runtime. I'm going to try Kivy next and if that fails it's probably going to be Xamarin :(
Maybe research online courses/MOOCs. Udacity has a few courses that use Python, although I don't think they have any specifically for Django or Flask. However, I think once you have the general idea of how web apps work, it's not that hard to go from one framework to another.
IMO that's a bad comparison a better one would be comparing an axe and a chainsaw.
I teach python to gifted children of the same age. What works for me: - reduce the iteration cycle between lecture and lab. Aka, show them something new, then practice it. I call them minilabs - understanding variable names can be anything is a hurdle, so have them practice assignment ops - as another said, input is a hard concept to explain. So is type casting - for differences in pace amongst kids, have upward flex. By this, I mean a way to make the task unbounded and infinte ("add these features instead of waiting for the class and being bored") - some mini Labs: - print hello world (of course) - input a name, hello to that - input age, add 5, print it - input age, do ifs and print different things - come up with a bunch of variations on last 2 so they get different ways of thinking about and using the same constructs - if you get more advanced kids, turtles are a great way to teach. You can do loops, functions, and classes. For example: - I had some kids define the Cartesian points needed for the letters in their name and then write a function that applied translation and scale. This was a multipart multiday task, but you see the idea. Turtles are really cool too when you make pictures and designs with them Good luck.
Not a mentor, but will mention that you can usually get pretty good help at /r/learnpython for specific questions
Reeborg's World: http://reeborg.ca
Looks cool, but I can't really think of a good general use case despite having written a few metaclasses that take additional arguments. A side note, in Python 3 it's possible to pass keyword arguments to the metaclass in the inheritance line, which is friggen awesome. 
/r/learnpython was mentioned. There's also /r/django and /r/flask as well. IRC is good as well, the flask channel is actually under #pocoo, there's #python (which requires a registered nick) and I'm sure there's one for Django as well. If you have specific questions, fell free to PM me and I'll answer when I can.
 for i in this.s: try: print(this.d[i],end="") except KeyError: print(i,end="")
I got 0s as well with this script, though my online meter also shows 0GB for as many months as the history goes back.
Nothing but a 2nd hand emotion.
I think this might be useful for aspect oriented programming where you might want to modify/block a certain object from being created based on a user's role or permissions, or the current context of the user.
just to clarify, are you saying that prior to this, event loops didn't run concurrently, so it was just an infinite loop with a condition to break once the event occurred? (thats so bad if it was!)
Yeah, but I also just want an excuse to mess around with parallel programming and mpi-io, so its all a wash...
I have been thinking about strengthening the crypto somehow, like rotating the keys used to encrypt the datastore as part of every "commit" step, or at least having a "rotate_key" function (which perhaps replaces the `salt` part of it every time). Also looking forward to implementing a change_master function in the next day or so (time permitting) allowing on the fly changing of the master password in use. Will have to get the KDF part looked at though, I wonder if it can be made more secure...
simple, powerful, readable ... so I can control my desktop and the rest of the world as well. ;) ... the matrix is pythonica ! ... but really... nice codes did quickly = Python - but the best Python Feature is the commnunity. ;) 
* Easy to learn * Increases programmer productivity (significantly) * Its syntax rules make yours and other's code easy to read * It's concepts of modules (and packages) make code easy to maintain * It's cross-platform * Batteries included (a lot of standard libraries) * A ton of third-party libraries as well
you can be productive in Python without it "taking over your brain", leaving space for your primary task such as doing the science if you are a scientist or completing your engineering if you are an Engineer for example.
Finally something i can spend my slot at the SuperMUC on.
Yep. That's what I'm getting too. 
Good point there, will be implementing that instead, after I am done implementing the "If password is older than `$time`, change password" warnings (which is half implemented at the moment ).
You should always assume the cracker knows your password strategy. A naive strategy might take 7e15 years, but a dictionary attack could take significantly less for only 6 words.
Because you can just get $hit done.
Silly reasons to use the Python programming language: * Named after the 'Monty Python' comedy group * Our third-party package index (PyPI) used to be called the 'Cheese Shop', taken from a Monty Python skit * Lots of older Python code examples use 'spam' instead of 'foo' or 'bar'. * Writing spaghetti code is hard, until you implement advanced techniques like metaclasses, over-sophisticated multiple inheritance designs, and my personal favorite (I did this once): combining partials, decorators, and callables. * It's not as obscure as Algol * Most popular Python web frameworks make a point out of picking obscure names that have nothing or tangential references to technology (Zope, Django, Flask, et al). * Used extensively by the video effects industry, meaning you can blame a movie's cheesy special effects on Python * Regional meetups involving DevOps are no longer Ruby meetups in disguise (back when Puppet and Chef were popular, this was the case), but are now Golang meetups (Docker is currently the cool shiny DevOps tool). * There WAS a golden period that ended not so long ago when DevOps focused Python meetups were indeed Python based. Alas Open Stack, Ansible, and SaltStack aren't the cool shiny DevOps tools anymore.
&gt;1 per second Not quite &gt;For some kinds of password hash, ordinary desktop computers can test over a hundred million passwords per second using password cracking tools running on a general purpose CPU and billions of passwords per second using GPU-based password cracking tools But it still looks like it would take 70 million years with a standard PC. 
Nope, it is actually 1 per second (on my machine). Okay, maybe 200 per second on a powerful GPU. But keepass uses key stretching, which makes it a *lot* harder to crack.
Private GitHub repos cost money. Maybe make the repo location configurable so that another service (like BitBucket) could be used.
I'm a design student, and since we are not programmers, the classes are designed for complete noobs, but have two non elective coding classes. One we are just taught some javascript sintaxes and build functions and do those classic drills like calculators. It's just terrible, nobody likes that class. The other one is a processing calss, where we don't need to do nothing specific, the professor just taught how to use some stuff and say "you need to do something cool with using this, it can be very basic". It work wonders. Then he proceeded to do the same with arduino, I don't know if that is a possibility, but arduino is just amazing. 
I learnt some Java and C++ first. I spent most of that time asking: Why this? Why that? Why not ... Now I realize that those questions were all actually "Why isn't this Python?". I was thinking in python before I knew it existed.
checkout zope.interface
Don't try to "learn"... Try to actually build something with the skills you have. Research what you need along the way... Learning will be the side effect...
A lot of it is attributed to everyone else codes in HTML/CSS/JS. If 99 people spoke English and 1 person spoke German... You get the analogy.
Python is about productivity for me. Whether it's writing APIs, integrating an existing library or an ML project, I can get the job done efficiently. The downside is it doesn't enforce much programming discipline, so as my team grows I'm spending more time keeping the quality where we want it.
&gt;isinstance(customIterable, abc.Iterable) returns True if customIterable has an __iter__ method, not if it extends from Iterable. Sorry, but what more or less is an iterable than something that exposes an iterable interface? If it walks like an iterable and quacks like an iterable, something something... In general, how is exposing an interface different from inheriting? How are the interfaces all roo similar to use hasattr?
I don't understand the question
/r/learnpython
And no curly braces ;)
I guess the compelling case is str vs list vs dict (as well as things that are or less like them: bytes, array.Array, tuples, sets, sure I'm forgetting something). I've run into cases where I want an iterable container\* but an external component might return a string in some instances so `isinstance(thing, (str, bytes))` ends up somewhere. Edit: Specified iterable *container*
Thanks. I checked it out, but it feels a little overcomplicated for what I'm trying to do.
Time based password expiry is a bad idea. It leads to using simple easy to increment passwords.
Its not enforced expiry, its "hey there buddy, you should probably change this!". Kind of a reminder to regularly change. Completely ignorable, but always nice to remind an end user about good security practice in a non-intrusive manner (i.e. not via a lockout or such, or an annoying alert, but just an indicator beside the data they want). Edit: As an aside, I might add in a "Generate Password" option that generates a long, secure, completely random password (using `os.urandom` as the seed). Given its a *password manager* and its designed so that the user doesn't need to remember any creds except their master password (which they self-define), it makes sense to encourage better creds by offering automatic generation.
Even encouraging such expiry is a bad security practice. A better alternative would be to write a routine that estimates the password complexity (in particular entropy) and suggests the user use more complex passwords. I am sure you will find implementing this complexity test much more intellectually stimulating than the expiry suggestion . I really suggest reading Bruce Schneier's blog: https://www.schneier.com/ He is one of the world's leading experts on cryptography and computer security.
Bank of America does a technology internship that is predominantly based on python. London and New York are the main locations. 
/r/learnpython or specifically /r/redditdev for PRAW help
That is a pretty good idea, actually. IIRC, Dropbox wrote a password-strength-analysis blogpost some time ago with some code to go with it that I might spend some time studying. And I have been a long-time reader of Schneier, his is one of the few sites I tend to check daily :)
a string is an iterable.
Yes, but if I want the whole string and not the individual characters I'd need to type check to avoid that. Honestly, I find myself wishing `str` wasn't iterable itself and provided some method that'd return an iterable of the characters instead. Specifically because `iter('beer')` and `iter(['beer'])` mean two completely different things. 
I'm very very early in doing this. I'm starting with Elo ratings, which are good but unresponsive to change (it keeps thinking Chelsea will win and Brighton won't). I plan to move to glicko, but I'm struggling to get this going. Glicko has the advantage of having variability included so I can include that in my decision making. All in all it is a pain. But to address your comments coaches and players change but it isn't that rapid. Chelsea are going to return to form, man city will be near the top, Sunderland won't magically win the league. The top teams will be near the top the next season.
try using webdav support, then you can store on owncloud
I love java too. But python for web development is faster. But i like Java for Services Development, also for desktop. Python simplicity also create a softer learnig curve
+1 , I'd love to just point this to my own git server :) I will attempt to contribute
 Yeah { This is annoying to write; }
Pyjokes is a joke itself. GG
Yeah check out the example on their main site, that very first block of code: @app.route("/") def hello(): return "Hello World!" [Then read the documents, which includes a sample application](http://flask.pocoo.org/docs/0.10/). Literally the things like "what it is, what does it do" is covered on the home page and the first page of documentation.
Here's a small example using [Bottle.py](http://bottlepy.org/docs/dev/index.html). import bottle @bottle.get("/") def homepage(): return "&lt;h1&gt;Hello world!&lt;/h1&gt;" @bottle.get("/reverse/&lt;word&gt;") def reverse(word): rev = word[::-1] #Reverses the word return "If you reverse {}, you get {}.".format(word, rev) bottle.run()
good initiative, mate !
the graph looks like a spacecraft's wing design ...
 It's Also { Annoying to read especially when nested parens are optional }
Generally speaking, our community is very friendly to noobs as well and want to see them succeed.
It's a blended wing body top view. That model is a variant of this https://www.nasa.gov/sites/default/files/images/677705main_ED06-0201-01.jpg
For a second there, I was excited about learning about fernet encryption. 
ah, got quite close :) cool rendered pic
 Error code number 1904828481748 No further information available 
Fernet is an interesting/safe AES implementation, allegedly "foolproof" to use as part of the `cryptography` module. I used it because I did not want the possibility of fucking up the crypto :P
You should start by checking the highest types first and go to more fundamental ones from there. If you check for iterable, then string, dict, set, etc will all pass. So, check if it's a string first, if not is it a dict? No, then is it an iterable.
From my experience in a similar path, I have a few suggestions: - Two Scoops of Django (not free) was the most helpful book for me. - Follow the DRF Tutorial, great bang-for-the-buck! http://www.django-rest-framework.org/tutorial/quickstart/ - Django Packages: https://www.djangopackages.com/ I wish that I commited to learning Flask before Django, as it offers a more fundamental path of learning the MVC/MTV. As for Python: Search for 'cook-book' or 'boilerplate' or similar on GitHub for great snippets of code to use as reference. I currently like this one: https://github.com/dabeaz/python-cookbook
let me make one thing clear: a database is the best solution here. you seem to be a bit confused on database normalization. you make a table of chemicals, and a table of compounds, and then finally a table where each row refers to a chemical and a compound. this way you can link any chemical to any compound. give me a poke if you need help working this out.
That's what I do. Usually I have some small utility functions floating around that are named like `_iterable_but_not_str` or `_iterable_but_not_str_or_map` -- the long obnoxious names are to make me think twice if there's a better way to handle the situation and of course because inevitably I'll do `isinstance(thing, str)` when I meant to include `bytes` as well.
I should've been more specific: I want to treat string types differently than other iterables, because `iter('beer')` and `iter(['beer'])` mean completely different things. Basically, I want an iterable container but I ended up with a `str` which is iterable but not what I want.
you use a third table. have a look at [this diagram.](http://i.imgur.com/zdwg4Fu.jpg) any time you want to relate a chemical to a compound you add a row to this third table. this is a very common way to implement a many-to-many relation. this way you can have 10000s of chemicals and 10000s of compounds without having enormous tables.
I apologize, because I think I left out a piece of data in the initial post, which I will change shortly. Each chemical is part of the formulation in a certain amount. The many-to-many relationship has a pairwise weighting. So formulation A would have 10% chemical 1, 20% chemical 2 and 70% chemical 3. Formulation B would have 10% chemical 2, 70% chemical 3 and 10% chemical 4. I need to extend beyond simply assigning the the relationship.
Wait what? Why are you running python in cygwin, it runs fine on normal windows
import sqlite3 [You might also want to take a look at this](http://fyngyrz.com/?p=1734) 
Add a third column into your third(link) table, containing the concentration.
The problem you have is that you are not building something real. Stop doing courses and build something. You don't need a mentor, you need a project and you need to write code.
okay, so add a weight field to the middle table.
Thanks, I'll try that.
 Use django for their database model interactions, django makes complex queries easy and enables growth for when you want to take your program to the web... Also database management through the admin stuff. look up the many to many intermediate table others have suggested Django empowers the data storage in/out persistence you want. Works well on windows with sqlserver and integrated authentication You definitely need a relational database but django does that for you, it's awesome 
PySS Conferences &lt;3
'dems fightin' words
My current hobby project is backtrader http://github.com/mementum/backtrader which is a stock market backtesting platform (around 25000 lines of python code including tests and samples and 6200 of documentation) End Users can define indicators/strategies/data sources which are plugged into the system. End users don't need to know (and don't want to) if the passed data was originally "single-line" or "multi-line" because in the case of "indicators" they always get passed a multi-line object (intercepted before init) In this "backtrader" case the "metaframe" concept is also used to create a hierarchy of metaclasses which follows the hierarchy of objects. By invoking the "super(xxxx, meta)._init_pre" (for example) all the code in the super-metaclasses is also invoked. Actually there many more uses in the framework like for example calculating the minimum periods needed by indicators/strategies based on the input data and defined parameters.
Oh ok I can see why you'd do that then
Look into PyTables. HDF5 is a great format and PyTables makes it exceptionally easy to use.
Sorry for necro, but do you have a detailed post on how to?
Didnt we see this a few days ago? I'm seeing this link far too often
There might be things that are easier to do in Nodejs, as compared to python. Specially if you are a javascript programmer dabbling on the server side. Similarly, there are lots of things that are much easier in Python as compared to Node. Just depends on what your skills as a programmer are, and what problem you are trying to solve. Stop listening too much... make up your own mind after listening a little.
Ignorance. They think that node js is better because they believe that nodejs is the only asynchronous platform. That is not true. Python have a good coroutine suport since Python 3.3, the asyncio library since 3.4 version and **native coroutines in python 3.5**. Also the asyncio library was developed by Guido Van Rossum with the help of many specialist. Saúl Ibarra Corretgé is one of such specialists. Saúl Ibarra Corretgé did help with the develop of the nodejs event loop. See [A deep dive into PEP3156, the new asyncio module](https://www.youtube.com/watch?v=MS1L2RGKYyY)
what are the limits of pulling in data from Twitter? I read somewhere they charge a lot of money to get really fast, bandwidth intensive data in large amounts. 
8/18 Not *too* bad.
Thanks for your reply. I can see how the streaming service would be useful. 
I keep a list of Python OOP Extensions/Goodies and have added this package to it: https://github.com/metaperl/python-oop
The title is correct.
Cygwin creates an entirely separate environment from Windows, and there are plenty of reasons to run Python from Cygwin. For example, many packages installed with pip need to compile native code, which isn't always easy outside of Cygwin's environment. 
why?
/r/learnpython also use gist / pastebin
ok why
because
In the readme examples, be nice to see what is printed
I believe the free version gives you 10% of the FULL twitter feed which we were using at a company I was working at. We found that not only does the full feed cost but it requires quite a few hoops the jump through with twitter. We ended up using https://gnip.com/ for a bit
Cross-platform support is actually one of the big benefits of using a high-level scripting language. You just have to get past the idea that everything must be compiled before you run it. Have your friend install Python on his Windows PC, then just run the script as-is.
Thanks for the tips
Python 3 is the future. However, knowing what doesn't exist in 2.6 and 2.7 is important as well because a lot of companies still run those for their apps. Most differences are trivial (print becoming a function, some modules got shuffled around) others are not (str is wildly different in Python 3) 
9/18, not horrible. Overestimated quite a few things by one answer.
yup, its been awesome!
1% is the correct figure
&gt;This is seriously making me consider changing programming languages. Trust me when I say no one is worried about what language you personally use, man. No one wants to hear about how you'd rather use another language because of X reasons. You not using Python doesn't affect us at all. I'm sure you're just frustrated but please consider your tone when you're asking for help.
because when you are 5 hours into a heisenbug debugging session, and you can't quite reproduce the issue, do you really want to be thinking 'maybe it is the cross compiler?' I know we make fun of windows software with a golden build machine and native builds, but it is one less thing to worry about.
My opinion: You should have a look at http://vpython.org/ -- this is really great for beginners and gives "real 3d" graphics with little effort. And it gives visual feedback for things like "loop to draw a line of figures", "list of figures" or "move all figures to the right". What I underestimated when I did a class last time: Python is "untyped", but you have to explain types as in any other language, the difference between types and how to convert between them; e.g. the difference between input() and numbers for calculation is hard to understand for most beginners. As an editor/IDE: start with idle which is little distracting, but change to a real IDE (pycharm educational) soon. 
Yes, In the past I have seen it to be in single digit percent. On an average I collected around 4-5 Million tweets in 24 hours which comes out to be around 1% or total tweets in a single day. 
What do big companies do when they want to release an application written in Python? You can't get all your is users to download it. 
&gt; PEBKAC error Nope, no luck, this is all that came up: https://www.reddit.com/r/learnpython/search?q=PEBKAC+error&amp;restrict_sr=on&amp;sort=relevance&amp;t=all And when I search PEBKAC: https://www.reddit.com/r/learnpython/comments/3d1ygo/hello_im_a_pebkac/ EDIT: I realized what this means. xD
Ok, sorry. I don't use reddit often.
FOR ANYONE LOOKING FOR THE NEW POST: https://redd.it/3q5wk6
The problem is the indentation of line 5. The else statement is not connected to the if statement because the print is in between the two at the same level of indentation.
I like to have params declared without having to play with the kwargs in the __init__ definition and have the values automatically parsed and updated (and also be able to check later if the default value has changed) Furthermore, I find it really convenient to have them show up under a single attribute rather than being attributes of the class. It might be someone else finds it helpful.
I would say if you are just starting to learn *programming* and choosing python as your starting language then learn Python 3. But if you are already a programmer and just learning a new language I would say learn both because of the massive amount of python 2 already out there in production and the slow but sure transition to python 3. I'm not a professional programmer this is just my two cents. Ultimately everyone should do their own research and decide based on what they want to accomplish
It sounds like I've been heading in the same direction as you with this. I'm curious what you think of the *actslike* library idea?
You can certainly compile your python script to exe, I do it all the time! Downside is the binary size, if you make a single exe from say a 4kb py file, expect it to be around 4mb. If you're looking to optimize size of binaries, python is not ideal.
`lambda *funcs: reduce(lambda f, g: lambda x: g(f(x)), funcs)` is nice too
&gt; It's odd that else can be used with a for loop that contains no break... It is, but realize that would make the parser more complicated, and a big goal of CPython is to keep it simple. Personally, I'd like to see the `for`-loop "else" called `nobreak` (or `on_nobreak` or... something: `onnobreak` is ugly) as a reminder of what the hell it means, and I'd *also* like to see a complementary possibility `onbreak`, as sometimes that's that's when you want to "do something special". 
Python is great for rapid development, but Java is great for big codebases. C++ is good for low level programming. I wouldn't use Ruby for anything lol ;)
a.k.a. the filthy casual test. Confirmed, I am a casual.
You should post this to /r/learnpython 
What big companies? The only one I can think of is Dropbox, which used Python for the Dropbox desktop client. They would make an application for each platform using a computer running that platform (they would own a Windows computer, a Linux computer, and an OSX computer; or virtual versions of).
If it's your first time programming, Python 3. If you're already experienced, just find a learning resource that you like regardless of what version. The differences in syntax are pretty minor.
Google Drive uses Python too: https://support.google.com/drive/answer/1716931?hl=en&amp;p=settings_licenses&amp;rd=1
8/18 here too :) 
Neat. They also use wxPython--didn't know that. Thanks.
That's like saying, which version of Windows should I use, there's so many! You might do fine on Python 2.7, but I would suggest the latest 3.x.
I love java too. But python for web development is faster. But i like Java for Services Development, also for desktop. Python simplicity also create a softer learnig curve
Iterable does and a few others, but most of the others do inheritance. Sequence and Mapping are two of those so the following prints False despite A implementing all the methods required to be a Sequence from collections import abc import sys class A: def __getitem__(self, key): return None def __len__(self): return 0 def __contains__(self, other): return False def __iter__(self): return iter([]) def __reversed__(self): return iter([]) def index(self, item): return None def count(self, item): return 0 def main(args): """ Run the main file """ print(isinstance(A(), abc.Sequence)) if __name__ == "__main__": main(sys.argv[1:])
Python is pretty good at single threaded async apps by using the Twisted network library.
My pleasure. That's why I wrote it. :)
Ev Every Everything!
Never forget that 2to3 is a great thing, as well.
What's wrong with pillow? It's easy to install.
I appreciate you trying to help and thank you for this. In my case I was able to fix it by changing the first line from `python` to `python2`.
Cool, I just assume anything I find online is going to be python 2 unless proven otherwise. 
The problem was not that it was python 2. The problem was that the code does not explictly specify an interpreter in the hashbang. Not all systems will default 'python' to the same version as the author's. edit: it's probably because I messed up when I uninstalled the Python launcher to install Anaconda. 
I don't see your message. Did you PM me here on Reddit, or somewhere else?
Looks like GitHub is having some outages at the moment. For those interested, here are the docs for this package: https://aiohttp-utils.readthedocs.org/en/latest/
[who likes Python ?](http://i.imgur.com/fTTBLia.gif?noredirect)
There is something like Google, please use it, we're not your servants.
traits has a different approach in that the parameters are class attributes declared as objects. Similar to an approach I followed in the past for other projects and other uses which leads to me to believe traits uses descriptors. One of the goals of metaparams was to no have the individual attributes declared/visible at class/object level, but to have a level of indirection. They are "params" to the class/object and not part of it. traits is also a different beast in that is looking to do things like type validation, delegation (to other objects) ... These "metaparams" follow the kiss approach and as such things like type validation are not in the scope of metaparams.
You could utilize programs from whatever operating system you're on.
Also a great excuse to create some pixel-art.
You either don't have much code or haven't converted a package.
6/18 Not a programmer
I guess neat python is that library for cataloguing all your favourite sandwich recipes into a searchable flask based website? Edit thanks
Apologies: This is a Python implementation of NEAT (NeuroEvolution of Augmenting Topologies), a method for evolving arbitrary neural networks.
Yup. Thats why /\\. Also, "because"!
That is the same argument the VB6 people said when .NET came out.. While i do 2.7 at work, i'm trying really hard to migrate. Maybe you're right, OP should learn both, but i would put an emphasis on the "3"!
I can't provide advice re Flask, but I can tell you that Pyramid provides many useful tools and standards for organising and including code. Perhaps you should check it out for your next project!
It's all the same really; Jupyter offers an identical (other than re-branding) experience. Now that they are done with the "big split" however you can expect Jupyter to move ahead quickly with new features (better widgest, web app deployment, multi-cell cut and paste, multi-user notebooks etc.) So right now there isn't much difference, but soon there will be.
Wow. Thats a lot of legacy.. best of luck with that! :P
The benefit of Flask is that it is lightweight and easy to get started. This is also its problem. As soon as you want to do anything serious you need to start cooking up your own application structure. Better to use something like Django that is already built out. But to answer your question: http://mattupstate.com/python/2013/06/26/how-i-structure-my-flask-applications.html http://bryaninspired.com/my-python-stack/
My computer is a lot slower than this person assumes.
Yeah, the other languages cheat too though, i have four java sdks and three .net libraries but no one says a thing about that
13/18. That was really fun. A lot of time complexity divided by "roughly how many operations of processing is there" which also relied on "what syscalls are likely involved". I've always been a bit overly conscious of how much CPUs are doing for us. I learned C in my teens as my first language and it clicked with me, and I enjoyed assembly class (although I almost never used it afterward). I've always thought about the code I write in terms of their more basic underpinnings. I like knowing the implementation details behind higher-level APIs. (And naturally I've had to fight the tendency for pre-mature optimization.)
You can use Daniel Pope's Pygame Zero to cut down the amount of boiler-plate code you have to write. 
looks similar to [toolz](https://pypi.python.org/pypi/toolz), but more LINQ-y an less Haskell-y. some toolz like functionality is in boltons as well.
I think it's better to use the diceware wordlist. You should not rely on **random**! Use **os.random** instead!
Did something like this myself after I got sick of so many bad downloaders :D It was my first project in python, and I've been using it at least daily for six years. Haven't really maintained it though, and found a slight issue that I need to fix...
Ah, okay. That is what I expected. I will wait for progress. Thanks for the advice. Also multi cut and paste will be amazing. 
I usually organize something like so (assume the app is called "boxer"): wsgi.py boxer/ app/ __init__.py - Flask app initialization here routes.py services/ - Code that connects to other services e.g. reddit reddit.py etc... tools/ - utility modules* datetimetools.py jsontools.py models/ - Database &amp; python models boxes.py flamingos.py resources/ - Controllers** boxes.py flamingos.py \* tools: My rule is that the tools modules may only import 3rd party libraries or other tools. This is to clarify what goes here vs in services, as well as to avoid cyclical imports \*\* Controllers: I aim for these to be as simple as possible. Process the incoming HTTP request, convert it to a python call; process the python call's response, and emit over HTTP. No business logic beyond simple validation; let the standalone python code do that. I tend to end up with a near 1:1 mapping of models to resources. `boxer/app/__init__.py` has the Flask object in it. I try to set things up so it takes a function call to generate the app object, but not always. `routes.py` is where I map URLs to `boxer.app.resources` views. That gives me a single place to go to debug routing issues. `wsgi.py` is "outside" the `boxer` namespace. It's straightforward - it imports the flask app object from `boxer.app`, and optionally runs it (optionally because I point gunicorn at wsgi.py to pull out the app as well).
 &gt;What I'd really like to happen when I serialize a Cache is for it to realize its intended to be a Mapping and then attempt to perform its Mapping conversion. I don't follow. You want to arbitrarily not follow mapping (not implement keys, values or items, even though they exist for free) but be able to serialize it? But you can't serialize because items isn't implemented? So you've come up with some other way? But what if iter isn't implemented? If you're going to break from abc, what interface can you expect to be there? Your custom actslike? Seems like a cluster fuck. I say stick with abc, but whatever you want. Don't expect it to be useable by others.
I sped up a 40+ minute program that does a ton of stuff to one that takes 4 seconds all by taking advantage of numpy better.
I think those names are good if you want something so specific. Maybe `container` is a better name? Explicit is good.
I wrote a library at https://github.com/EntilZha/ScalaFunctional that has pretty much everything that you have in PyQuery plus a lot more. The naming might differ here and there from LINQ/PyQuery, but the idea is pretty much the same. Are there things that PyQuery can do/will do that this can't or is a different model of computation? I would also be curious to know how you searched, because if it is the case that ScalaFunctional would meet what you are trying to do, it would be good to know how to improve discoverability. As for extension/collection methods, I do it similar to how you do it. Keep track of state and return self or a copy of self.
Use flask blueprints.
That's a pretty interesting layout, definitely going to look at how it would fit into current apps. I particularly like the separation of internal business logic and external service calls.
Module selection and deployment aren't really a problem I have, it's more providing a layout that anyone could jump into and clearly see what's going on and not have to grep their way through my code. This seems to be a pretty interesting suggestion, thanks!
The same as any other programming language (minus writing an OS): * websites/APIs * scrapers * testing frameworks * built tools and automation * real time system monitoring * anything you want to automate (background changing, file watching, etc) * low-ish latency networking In some categories other languages may be generally a better fit, Python can take you from zero to proof of concept damn fast.
Trace your code manually (I'm guessing on your formatting as you didn't really demonstrate your code): A = 1 # A is 1 if A &lt;= 10: # since A is 1, this is always true. Since it is true, the code indented under this is executed. print (A) # 1 is written to the console A = A + 1 # A is now 1+1 (2) # your code exits now because there are no more statements. Given that, what is your problem? 
Scraping a list of Kindle freebies from ereaderiq.com and automated purchase from Amazon using phantomjs + selenium. A 1000 times lifetime supply of e-books :)
so how do the maintainers decide something is a must watch?
Yep an ***BECAUSE*** ahahah
Sheesh, 5 answers none of them helping with my specific query and a few just plain bitching. Way to go community... I realise there are binary solutions. For deployment reasons I want to keep it pure python. I have yet to find one and thought someone here may have come across one.
...with text summaries and slides! The best kind. &gt; When I was your age, videos were called TEXT.
This might be one time that Jython is worth using. It's Python on the JVM and interops with java libraries. I suspect that your issue is related to being unfamiliar with the techniques for Python deployment. What are you wanting to do and on which platforms?
https://twitter.com/djangoproject/status/658529753624920064
[**@djangoproject**](https://twitter.com/djangoproject/) &gt; [2015-10-26 06:25 UTC](https://twitter.com/djangoproject/status/658529753624920064) &gt; We're investigating an unplanned downtime of the Django website, including the documentation. Fallback docs: http://django.readthedocs.org/en/1.8.x/ ---- ^This ^message ^was ^created ^by ^a ^bot [^[Contact ^creator]](http://np.reddit.com/message/compose/?to=jasie3k&amp;amp;subject=TweetsInCommentsBot)[^[Source ^code]](https://github.com/janpetryk/reddit-bot) 
Are we adding too many levels of abstraction from a simple SQL query?
[**@imayankg**](https://twitter.com/imayankg): &gt;[2015-10-26 09:11:02 UTC](https://twitter.com/imayankg/status/658571525843349504) &gt;.[@mitsuhiko](https://twitter.com/mitsuhiko) It seems thousands are using Werkzeug for public/production. [*shodan.io*](https://www.shodan.io/search?query=Werkzeug%2F0.10.4) ---- [^[Mistake?]](/message/compose/?to=TweetPoster&amp;subject=Error%20Report&amp;message=/3q9jw1%0A%0APlease leave above link unaltered.) [^[Suggestion]](/message/compose/?to=TweetPoster&amp;subject=Suggestion) [^[FAQ]](/r/TweetPoster/comments/13relk/) [^[Code]](https://github.com/buttscicles/TweetPoster) [^[Issues]](https://github.com/buttscicles/TweetPoster/issues) 
When I read about Tablib and realized that it was written by Kenneth Reitz, I was like it must be good. Though I am yet to use it. 
I just scanned the paper and it looks very impressive....I look forward to trying out the implementation 
Very cool! I searched something along the lines of "LINQ for python", "list extensions". I am working on this project to sharpen my Python skills and plan on adding a lot of the feature you've already incorporated. Looks good!
Could you elaborate on your concurrency idea?
Awesome! I love the feedback. I certainly will make the updates that you've recommended. Thanks for the taking the time to look at it indepth. Sure, I am accepting pull requests. Cheers!
Thanks, yeah I might have to consider the name change. Depends how big PyQuery is already :) 
Because apparently no one else is willing to help, but rather just do some bitching... http://www.imagemagick.org/script/index.php Never used it, did some googling and some reading and based on [this](http://blog.mlindgren.ca/entry/2012/09/14/the-state-of-python-imaging/) article it is the best option for resizing. Handles PNG and JPG (and conversion between). Hopefully that takes care of you. EDIT: Not pure python... sorry about that. Might still do the trick?
Will do from next time. Thanks
Very nice of Allen B. Downey to make it "donationware". You can read through it entirely [here!](http://www.greenteapress.com/thinkpython2/html/index.html). There are even more on the [main site](http://greenteapress.com/wp/). Would love to have an epub available. The source of it appears to be latex.
I love java too. But python for web development is faster. But i like Java for Services Development, also for desktop. Python simplicity also create a softer learnig curve
Seems to be back up now http://isup.me/djangoproject.com
Does PyGame has any use besides learning these days? I'm asking because there is such huge amount of tools available nowadays, even for free, both for professional and beginners, such as Unreal Engine, Unity, Game Maker Studios, RPG Makers and others.
Thank you for Python 3 version.
What about all Guido Van Rossum talks?
Python 3 is the future. Learn Python 3.
Thanks! Let me know how it works out for you.
didn't watch his 2009 one, but his 2015 one definitely rails on the GIL
Thanks! Line count shrunk now!
Think he means that right now everything is single threaded. There would be ways to compute things like maps/filters in parallel which would make it compute faster. My suggestion would be to keep this in back of mind while designing the library so its easy to add later.
Thanks for feedback on keywords. I will be sure to make some changes on the package so that it is easier to find using those, and perhaps add some of the names used by LINQ as aliases (like where). I also accept pull requests (10/10 merged) if you are interested.
These forms of videos about programming drive me nuts. Almost an hour long, almost 0 code actually shown, definitely no HPC code shown. The most HPC computing code even shown here was creating numpy arrays. Why anyone would use Python for HPC is the factor of ease and speed of development. Lots of languages have functionality to do it, that's all that was shown here. The major difference is how the code that does it actually looks and is built. 
I'm not sure what area you live/work in, but chances are there is a Python meetup in your vicinity. I would advise you to join and attend regularly! It's a great way to meet other people working with Python in your community, and also to become aware of open positions. When I was hiring for Python, I always started at the local meetup, and successfully hired 2 people who were in exactly your position. Beyond this, I'd find a personal project you are interested in and just start building it. Put the code on GitHub, share it, and ask for feedback. As a hiring manager it was always promising to see someone who was enthusiastic enough about their project that they were sharing the progress regardless of the quality of the code. Hope this helps!
Then they put Python as a system requirement to run said application, make it available through their update system or bake Python into the application itself. As a PE who works with 2.x/3.x Python supported across multiple versions of multiple applications trust me when I say its do-able. Also its not at all uncommon with other languages, how many applications out there require a java, or .net framework download?
Document! Write down what you learn, musings and what you're missing. Keep track of the things you don't understand but feel you don't need to understand right now. You're a programmer from the moment you write "Hello World" on the screen. Everything after that is improving on what you had before. Once you've done a few documentation bursts, blog, diary, what you want it, you can write down the things that you feel lacking. From above, you say: * Production ready * Deployment * Packaging Pick one, read up, start there. Make a few hello world, package them, figure out how to build an egg, how to distribute it, upload and test. Wrap the basics, enough to know where to look for more once you need it. The best tool you'll ever have is your head, and programming is a _huge_ and vast space. You can't keep it all in your head, but you need to learn enough that you can continue later. Also remember that there's a difference between Computer Science, which is a branch of mathmatics sometimes using computers, and the craft of Programming, which is a craft that builds upon a lot of other sciences. Figure out where on that scale you want to be.
You're finding solutions to problems through research, teaching yourself the basics of a lucrative skill, gaining work and project experience, networking with your colleagues by proving you can provide value on projects (even if said value is currently mostly derived from google.. this will change as you get more experienced) and presumably beginning to build an online presence in programming communities. You're doing a lot to progress from a career perspective, don't detract your own accomplishments; Sometimes its hard to see the forest for the trees when you get started at something.
Not really a python programmer here, but here's some general advice: First you need to think hard if you actually want your career to advance in a developer direction. If you don't want to be programming, don't pursue a programming job. Programming is great to know, but if you don't want to do that for the rest of your life, you might try to further your career in a different direction (chemical / mechanical engineering, maybe?) The more programming jobs you get, the more experience you'll get in that area in detriment to any other areas of interest. As for "what is a junior software developer?" Junior vs Senior vs Lead, etc is just a way for the companies to manage pay scale expectations and to define experience requirements. It's based on a company-by-company basis and so a senior developer at one company might only be a junior developer at another. Just apply and see what happens. Worst case, you won't get the job, but you'll find out what level you're at.
[removed]
[removed]
&gt; mostly googling around and reading documentations on how different python libraries work that's like 90% of what day-to-day problem solving in software development is though. if you're already comfortable with that then you're on the right track. &gt; I haven't been properly trained before in writing any production-ready software they don't train for this in Computer Science degree programs either. its almost entirely on the job practical knowledge. its a pretty deep topic, but there are really just 3 things that I consider 100% essential to writing production-ready software. 1. use version control systems to manage your code base. this is basically a pre-requisite to being able to work in a team, and being able to work on any piece of software for a prolonged period of time. 2. write good unit tests and integration tests. your project should have an automated testing suite that you can run after every change to the code. you should not develop new features without also adding new tests that asserts the correct behavior of those features. you should keep your testing package robust, up to date, and with wide coverage of your code base. the quality and reliability of a software project is directly linked to the quality of its testing suite. 3. manage your production environment with the right tools for the job. if you're writing desktop software, you'll want to have tools that assist in making a redistributable package that has all the necessary dependencies neatly bundled up in a single deployable artifact. if you're writing web server software you'll want to have tools that assist in provisioning, configuring, and updating your production server environment and you'll want to have tools that give you a local development environment that replicates your production server environment as closely as possible. and that's it. that's not to understate the complexity and depth of those 3 topics, but if you're looking for areas to focus your learning than those are where you should be focusing if your priority is to learn software engineering best practices. 
&gt; I don't know if I can call myself a junior software developer officially You write code every day, have absolutely no idea what you are doing, google/documentation/stackoverflow are keeping you afloat, and you have an interest in improving yourself. That checks every single box to qualify you for the title 'Jr Software Developer' Wear it proudly!
Subscribe to /r/dailyprogrammer and do problems there each day. Actually writing code is at least as important as reading about code. Not to knock reading, mind you -- reading _actual books_ about code is fantastic and will up your game. I recommend [Fluent Python](http://shop.oreilly.com/product/0636920032519.do) to any moderately experienced Python dev, it will make you much better at your craft. Reading blog posts about coding probably the slowest way to develop. It's also the most anxiety-inducing, since the the writer is usually in some tiny niche field you think you ought to know about. It's OK not to know every language and construct and idea ever. A good programmer is defined by her projects.
It raises the skill bar but it's not going to be perfect. With Python you can of course usually just read the source. If the code has been compiled to a .pyc file you can use something like uncompyle to decompile the bytecode and get something that's pretty close to source code. With Cython you're dealing with binaries which basically means you have to disassemble machine code. Reading machine code is not that difficult so if you're trying to prevent cracking or trying to hide a string literal or similar you're going to have a hard time. In my experience, I would probably say a combination of obfuscation and compilation to machine code makes for a fairly strong albeit still not perfect defense against reverse engineering. That being said, there is really no perfect protection against reverse engineering. As long as code is running on a system it can be copied, emulated, recorded, and analyzed. 
python and HPC are mutual exclusive
I've been reverse engineering a program for 4 years. It's not as hard as you think. You don't even need the source. You just borrow ideas.
Yes I am certainly going to look at your code and contribute if possible. I think your idea of providing LINQ like aliases would be good. -A
Sounds great. Let me know if you have any questions (either on GH, here, or PM) or ideas. I have open issues on GH for things that I am planning on adding soon so that might be a good place to start. I have been thinking about what to work on after that. Perhaps supporting a concurrency engine or finding a way to compile SQL queries into a plan based on components already in the library using pyparse (based on their sql grammar example).
nice! the pandas package is a lifesaver for me (way easier than just np, also makes a lot more sense to me as it can be used like a table) 
[removed]
I have no CS degree (senior year of industial engineering), had really basic python knowledge and got a job in a small startup (I did some java, that got me the job), working on python backend. Its been 3 and a half months already and when I got there I was completely lost. I felt like I'm doing nothing, I wanted to run away and never turn back. I was really nervous when I had to go to work. Today, 3,5 months in, I feel like my work counts, people ask me things, now I'm that guy that knows things. Am I the best python dev ever? No. Do I feel useless? Hell no. Do I contribute less then people with CS degree? No. Do I doubled if not tripled my python skills? Yes. Just keep trucking really soon you will start to feel it. About google: That is completely normal IMO, programmers google all the time and I feel that googling skills affect your productivity a lot. If you know what to search and how to find you are already half a programmer. In most cases its always better to find some already done solution that people commented on and expressed their opinion then just tinkering around for hours trying to re-invent it. If you have any questions, feel free to ask. I feel like I was in your shoes.
&gt; How accurate today is that 2009 talk about GIL? [From @dabeaz](https://twitter.com/dabeaz/status/658716673403453440): "still applies to Python 2.7. There are different GIL issues in Python 3."
[**@dabeaz**](https://twitter.com/dabeaz/) &gt; [2015-10-26 18:47 UTC](https://twitter.com/dabeaz/status/658716673403453440) &gt; @yellowshark still applies to Python 2.7. There are different GIL issues in Python 3. ---- ^This ^message ^was ^created ^by ^a ^bot [^[Contact ^creator]](http://np.reddit.com/message/compose/?to=jasie3k&amp;amp;subject=TweetsInCommentsBot)[^[Source ^code]](https://github.com/janpetryk/reddit-bot) 
The way I plan on implementing this is separating the execution engine from the semantics of map/filter/reduce/etc (in my case, this is already partially done via `functional/lineage.py`). You might imagine that doing something like `seq(l).map().filter().reduce()` creates an execution plan that is to take the input, map, filter, then reduce. That execution plan could be computed in a single thread/process using regular python code, or could be split and run in parallel using `multiprocessing`. This offers some insight: http://stackoverflow.com/questions/1704401/is-there-a-simple-process-based-parallel-map-for-python So this would be something you/I have to write. My plan is to support importing something like `from functional import pseq` or something like `seq(l).par().map`
Great. The _merge column for joins is something that I would be using quite a bit. 
If else ? i think.
http://bits.citrusbyte.com/protecting-a-python-codebase/
I don't even know, the server I'm working on basically fetches it daily from a tracking app (Android based) for phone calls, visits, emails, etc at a service desk. It creates a file along the lines of "METRICDATETIME.db". I've tried to connect to it using mysql to create a cursor and retrieve the info, but it just says the table doesn't exist. Also, Access can't open it either which is throwing me for a loop. 
You could open the .db file in a text editor to guess at the type. Like sqlite files would say "SQLite" at the beginning, even though the rest is mostly binary.
Short version: I didn't realize py.test existed until after I had written green. Long version: https://github.com/CleanCut/green#origin-story
You're pretty much spot on. It's not really viable for producing commercial games - the tools just aren't there for distribution. Heck, just installing the thing can be a massive pain. That said, I do think it's still a great tool for learning game dev principles, especially for newer programmers. I'd much rather teach beginners using Python than C#.
Trace out what would happen if you do that: A = 1 # A is 1 if A &lt;= 10: # since A is 1, this is always true. Since it is true, the code indented under this is executed. print(A) # 1 is written to the console A = A + 1 # A is now 1+1 (2) else: # e.g. if A &gt; 10, in your example # This code would never be reached. print("I'm in the else") # your code exits now because there are no more statements. Look at a `while` statement.
&gt; *Green is a clean, colorful, fast python test runner.* Exactly what I like to see in changelogs.
I lean toward putting more of the heavy logic in the models, not another layer on top. This also exposes too much of the implementation details, in my opinion. A huge reason of the API is to provide a consistent interface to do something, and not depend on what is actually doing it. If I wanted to start using Mongo or change a field name or start using elastic search, now all my clients need to do that too (or I need to manually translate this). Whereas instead if I accept a usual query param for `sales_min=1000000`, I can dictate if that is now done through elastic search because my app scaled a bunch, rather than my normal DB engine, without having to locate where I set up these unnecessary abstractions.
Does anyone know any advantages/disadvantages with pytest? 
Looks like you're missing a double quote before the word 'Enter' You should really ask questions like this on /r/learnpython
It sounds like s/he doesn't know which table to even call. OP, either download the sqlite executable and read this section (https://www.sqlite.org/faq.html#q7) or use sqlitebrowser/sqlitestudio to open it with a GUI. You need to know which table to reference. Alternatively, you can do it from within python itself: http://stackoverflow.com/questions/11996394/is-there-a-way-to-get-a-schema-of-a-database-from-within-python
If you haven't already, get familiar with [jupyter notebooks](http://jupyter.org/) to increase exposure to other domains and specialties. Thought I mention them since it appears your work entails scientific programming. Also, I would get familiar with the [pandas](http://pandas.pydata.org/) library which allows you to work with data in a more familiar, tabular format. There is a book by the creator of [pandas](http://shop.oreilly.com/product/0636920023784.do). The book can be very detail oriented so I actually made a cheat [sheet](http://nbviewer.jupyter.org/github/pybokeh/jupyter_notebooks/blob/master/pandas/PandasCheatSheet.ipynb) for pandas. Hopefully, by exploring jupyter notebooks and the pandas library, you'll be exposed to more complex programming paradigms that you haven't been exposed to before. Some interesting jupyter notebooks (formerly ipython notebooks) can be explored here: [link](https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks) [link](http://nb.bianp.net/sort/views/)
What are you stuck on? Also, indent each line of your code by 4 spaces to format it correctly on reddit. 
Ask in /r/learnpython Also, use four spaces before each line of code in your post to get proper code formatting.
Basically being able to get out of the loop, and writing a code that will tell me how many times I have tried it.
Sorry, I didn't notice this was not r/learnpython until you said that. 
Here is my [previous answer](https://www.reddit.com/r/learnpython/comments/3invpu/how_to_make_the_code_cleaner/cui9dow) on a /r/learnpython thread. This [is a screenshot](http://i.imgur.com/Ul7LoGI.png) of a mid-sized Flask app's structure.
Just out of interest, what do you look for in junior developer applicants? 
Not sure I follow. Adding a filtering abstraction would actually make it easier hide details like the backend--it would be trivial to modify this library to support elastic, and then switch backends as necessary without changing the filter code. Also, I don't see query parsing and validation and filter definition as the responsibility of the model. At least in SQLAlchemy, models describe the structure of a table, plus relationships, and not much else. Would you include query parsing and filtering on a model?
Cool. Thank you very much for your help! Like I said, I took a python course last spring, and was proficient with it. However, I did not keep up with it over summer and through now, so I am looking for a fun way to refresh and learn more. Once I work through some pygame, I will check out the other options you mentioned!
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
No.
Updated the question as I wasn't very clear - I want to output to a HTML file. Thanks
I'm pretty sure libreoffice has a command line interface that will let you do it pretty quickly. Wouldn't be python, but would be like a 3 line bash script.
Licensing is a mixed bag, py-enumerable -&gt; MIT, asq -&gt; something I don't recognize immediately, pynq -&gt; nothing that I could find, ponyorm -&gt; APGL (won't use at all because of license, but I don't really need it either). I think after I finish some things with my `0.4.0` release (read/write from various file formats), I will be 1) implementing some concurrency engine, 2) looking into how I might support sql/linq like things better since there seems to be interest in that. Will look into speed unit testing, any suggestions on good places to start for that?
Do you happen to know how to access the libreoffice commands via Terminal?
thank you for your advice! as for your problem, now the webssh support the windows and max os. After i beauty the front of the webssh, i will release it and put it on the pypi~
I just saw [this](https://ask.libreoffice.org/en/question/2641/convert-to-command-line-parameter/) page which seems pretty straight forward. I run linux, so I'm guessing Terminal is just the, uh, Mac? terminal? If so, seems like you could do something like: for file in *doc; do soffice --convert-to text "$file" --headless done Totally untested for what it's worth. If you're on Windows, maybe someone else can help. I'm sure it's close, but I have no idea how to use that OS at all.
Hey, another Linux Mint user! Mark Lutz's *Learning Python* is great, if incredibly long. He covers the language pretty exhaustively, which I find helpful: "here's a simple concept. Here's fifty pages of information that you won't memorize on first reading, but it's there when you want to look back at it." If you want a quick learning option that glosses over details, it's not for you, but really, this is a great and fairly comprehensive book on the language. The current edition (5th) covers Python 2.7 and 3.3, and is great about pointing out differences and writing portable code.
Why not use conda?
lpthw +=1
I've been using [pyqtgraph](http://www.pyqtgraph.org) to visualize up to 1 million points, with decent performance. The LinePlotItem averages around 10-20fps, the ScatterPlotItem at around 5fps, so I don't know how well it would scale to the tens of millions, but using the right options you might get it to work. Also, the creator of pyqtgraph is one of the guys working on VisPy. 
A month isn't much time. I've run into quite a few seasoned professionals who feel overwhelmed and in over their heads the first few months on a job. It means you're aware enough to know that there's a lot more you could know. In six months, you'll feel like you are finally keeping your head above water. Two years after that, you'll realize you could teach a class on your specific knowledge area. A month just isn't enough time to worry about developing future employment skills, in my opinion. Focus on doing the best work you can and continually getting better. Using Google for help is part of that process. Mastery will come in time, with desire and discipline. Of course, it always helps to have expert assistance. Online classes are good, as is making a list of things you come across that seem worth looking into when you have time. And then make time, like Friday afternoons, to actually do it.
Try to master all these 4 categories: 1. Programming language (e.g., Python) 2. Text Editor/IDE (e.g., Vim, Emacs, Atom) 3. Source code management (e.g., Git) 4. Operating System (e.g., GNU/Linux) I can see that you have picked up a good online course on CS. That will give you a solid foundation. Now a days there are lots of great videos in YouTube, Vimeo etc. about programming. I would suggest you to work on small personal projects apart from office works to get more confidence. You can consider joining a FOSS community and contribute code. I suggested to master a text editor or IDE because because most of your time you are spending with those tools. You will be more productive if you know your text editor very well. Similarly understanding the source code management system of your choice is very important. You can see links to awesome projects of your choice here: https://github.com/bayandin/awesome-awesomeness
that's a useful cheat sheet - thanks
If/when you do so please attach a copy of example.db, or a database that exhibits the slowdown. Bugs that can be reproduced easily are much more likely to be fixed
This shit again?
http://amzn.com/1449355730 Do it and don't look back.
 **Learning Python, 5th Edition** |||| --:|:--|:-- Current|$40.89|Amazon (New) High|$42.78|Amazon (New) Low|$29.15|Amazon (New) |Average|$41.03|30 Day [Price History Chart and Sales Rank](http://i.imgur.com/q29z5US.png) | [FAQ](http://www.reddit.com/r/PriceZombie/wiki/index) 
Undeniably /r/LifeProTips 
sounds like you're doing fine. jr/sr generally refers to how many years in the industry you have. companies like to see that you can teach yourself and that you can adapt. at your next gig, you'll be able to drop the "jr" title.
Yes. I would love if the mods deleted homework and bug report posts immediately.
Don't forget the flask vs Django posts
No, since the sticky was added the number of newbie questions seems to have declined. There still are some but they don't drown out other stuff and are usually down voted quickly enough. Can we leave moderation as it is right now and instead go back to the important things: GIL bashing and telling each other how much better Python is than PHP.
&gt; The target user I have in mind target real users not hypothetical ones. don't over complicate early. 
 &gt;So i have been working for a month at a start up company, writing python scripts for scientific analysis. I don't have a CS degree (chemical/mechanical engineering) I haven't been properly trained before in writing any production-ready software, and mostly googling around and reading documentations on how different python libraries work. Take a course somewhere that has a respectable reputation. Formal training goes a long ways in developing good programming skills or preventing the development of bad habits. As far as googling goes how do you think educated programmers operate? There was a time when you as a programmer had to own tons of books and attend monthly "users group" meetings to stay up to speed. These day the latest info is online and at your finger tips. It is brave new world really. M &gt;I know the basic syntax, recursions, functional programming, and a few bits and pieces. Most of my work involves transferring chemical engineering theories into code. Understand this, a lot of engineering software gets written by engineers and ends up suffering because of it. If you want to produce engineering software that isn't crap then learn programming or computer science in a formal way. Let's be honest here, basic syntax can be understood by people off the street with no training at all but basic syntax doesn't make great apps. It is all about knowing how to structure an app and use the full,strength of the programming environment that you are using. Basic syntax is just glue that holds a,software design together. &gt;I feel lost because I don't see how to progress from a career perspective. I am still learning a lot on my own, but I don't know exactly what to learn to gain skills employer look for in the future. I feel like I just google around whenever I encounter a problem. One month!!! That says it all, your expectations are not inline with reality. Think about your career after you get a bit of experience. As for chemical engineering your next job may never have you generating any code at all. Unless you already have strong goals you can't say where your career will go. &gt;Also currently going through this free CS online course, That is very good if the course reputable &gt;and learning more about the basics of object orientated programming and problem 'hardness' This is all good but any engineering type programming should be supplemented with a numerical methods course. Doing math via computers is actually hard in and of itself with much to learn. You need a good grounding in floating point to understand its limitations. &gt;I don't know if I can call myself a junior software developer officially, as I don't really know what it actually means. What do I need to know and learn so future employer will see me as a promising candidate for junior developer roles? Don't worry about titles at this point. Just keep communications channels open at your current employer to make sure you are meeting their expectations. No matter how you feel about it at the moment you have a long development path ahead of you. As long as they are happy with your work, you should press forward with skills development and not get too worried about your career. Frankly that is something to consider 3 years down the road. 
https://media4.giphy.com/media/JJfmK7fpNq8PC/giphy.gif
haha. welcome to my club. I have been "programming" for 6 years. I started out writing matlab scripts to do statistics and optimization algorithms on extremely large data sets (inversions, decompositions, etc as well as applied research) for a bank. then I moved to another financial institution developing trading algorithms. in those 6 years I have: - never touched Linux - never touched any other IDE besides Matlab - no Visual Studio, no Eclipse - nor vim, nor emacs - used lots of excel vba (if you consider that a dev env haha) - never used any kind of deployment tool. Some other guy who is "closer to the hardware" does it for me. - never used git, or svn, or even TFS - have some passing knowledge of SQL, but never had to use it. the only time I've ever got to use some of these tools that people talk about all the time are only in the free time I have, so never in a professional environment, I've never had a "do-or-die" situation, and only passingly because if you're working 15 hours a day and sleeping 7, how much energy do you really have left in the tank to tinker around with new toys? haha. so i don't know what these things are: refactoring, deployment, packaging, unit testing (I've heard of these things, but I don't know what they are). I didn't even use these at school! I left school a long time ago with a masters in applied mathematics. the company has been paying me between 2-300k a year and I have been saving aggressively, because I know when the charade is up and I'm out of a job, there's nothing for me to do. I am getting old (enough for both wall street and silicon valley), I don't have a trader's experience, and I don't have a developer's experience. my only hope is to start a firm doing financial software consulting just like the legions of other "professionals" out there with retarded career development to try to eke out a living on wall street with what little skills we have. some of the young guys I see have pretty fancy resumes - lots of fancy experience in math, without sacrificing professional development in a proper software engineering environment - and in all likelihood these young guys are going to replace me soon. my life is full of hacks and kluges and making-do with whatever tools are available to me, which in an imperfect environment, can be not much at all. good luck out there.
[Python 3 Object Oriented Programming](http://www.amazon.com/Python-3-Object-Oriented-Programming-Second/dp/1784398780/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1445939064&amp;sr=1-1&amp;keywords=python+3+object-oriented+programming)
can i use else in while statement ? while was my second thought too but i don't know how to loop that. A = 1 print (A) while A &lt;= 10: A = A + 1 this was my try. But still not working 
I make around $20 an hour right now. I've never been too worried about competing with Indians.
What dramework did you use to create this?
No, it is ok the way it is now. The amount of questions better suited for /r/learnpython will increase and decrease over time. I prefer to keep /r/python tolerant and gentle in guiding people to /r/learnpython. 
You could try to profile it to know where time is spent. Use cProfile. [SO usage](http://stackoverflow.com/a/582337). Filing an issue on bugs.python.org does soon good. However if it's commercial information sharing the database might be a problem...
Personally I find posts like this one more distracting than the so called homework posts. Posts about coding can gently be directed to r/learnPython if needed, but do realize that r/learnpython isn't always the best place to get questions answered. If the moderators want to do something constructive they need to start deleting posts from immature readers like you that can't parse a low volume Reddit for the content they want. 
A lot of packages to that (eg. [requests](https://github.com/kennethreitz/requests/tree/master/requests/packages)) so that it is a self-contained bundle without external dependencies. I might be going to refactor this though.
I can't attach a copy of this database. I will try create a similar but simpler database with fake data.
Don't get too hung up on what libraries are listed in job listings. Requirements are a wish list. If you can show that you have solid programming fundamentals and have learned new libraries in the past you'll be a good candidate. As others have said, you also shouldn't be too concerned with your future jobs yet. Concentrate on doing everything you can in the job you're in. Every time you "Google around" for a solution you'll learn a great deal that will help you solve the next problem. It sounds like you're actually getting very good experience.
I need help to start this test, I am a OOP developer in OpenEdge ABL, can anyone kindly guide me to get this test done and have a decent job YOUTUBE API TEST I must develop a web page that makes use of the YouTube Search API to allow a user to search for YouTube videos. The page should contain a text box to allow the user to type in their search query, a button to run the search, and when the results are returned they should be displayed in a table format and show the following details: - Title - Description - Video Thumbnail - A link to watch the video on YouTube - If there is any additional details you wish to display, that's fine. Only 30 results should be shown on the page at a time. If there are more than 30 results available, pagination should be used to let the user see additional results. The system should also store previous searches and display these to the user on the page as links. When a link is clicked, it should perform that search again without the user having to re-type it into the search field. The application should be primarily developed in Python The application should be hosted on Google App Engine The Datastore should be used to store previous searches made on the page. Please perform the YouTube API search requests from the Python backend (do not use the Javascript API). Notes: - I need to learn how to do this test in no more than 4 hours to complete. - All files/code should be returned in a zip file to my future contractor. - A link to the working application should also be provided along with the code. - The test is designed to evaluate code competency, style and problem solving skills. - Use code comments to explain your reasoning behind your solution and clearly explain any assumptions you have made. - You do not need to style the HTML page unless you want to. We're more interested in the back-end functionality. - If you don't get everything finished, don't worry - please still submit what you have done. - I may use 3rd party libraries &amp; frameworks if I wish, but I need explain my reasoning for doing so in code comments or a readme file. - Extra marks for elegance of solution - Feel free to add a bit of flare or additional functionality if you've any time left over. 
As with many things, it depends :) Do you want to learn the principles of game development or software development? When I was fairly new to programming (~6-7 months of C) I was taking a course where I had to make a game with C and SDL. The Lazyfoo tutorials for SDL were a great help and very accessible despite my juniority (my spellchecker is complaining about this word... Noviceness? Apprenticeshipitude? Newbiefication?).
Why would you build eggs in 2015 when we've got wheels?
( Shh, don't give away the secret. Sooner or later he has to discover that what he's learning is legacy, and the egg=&gt;wheel transition is a good place to start. Other than that, eggs are still quite easy to understand. )
Netcat is so old and written using such archaic tools that it has no hope of ever being turned into something webscale. Edit: It is really sad how pathetic some of you are at detecting what is obvious sarcasm. 
This is going off topic a little but i think a relatively good programmer/software developer can work anywhere in the world. (I currently have multiple citizenships and speak multiple languages) Traditional engineering chartership is location based, so it will tied me down. Of course there might be trade off e.g. traditional eng has a more stable career (do let me know if my assumptions are incorrect) So i guess why i am interested in becoming a programmer, i get more opportunities to work in different places and meet people. Maybe i feel this way because i am still quite young
Glumpy is a python library for scientific visualization that is both fast, scalable and beautiful. Glumpy offers an intuitive interface between numpy and modern OpenGL. http://glumpy.github.io/
Still not entirely site what's going on in here, is there a good primer on neural networks you can recommend?
Do you have any more examples? I can't seem to get h5py to install through pip. Also the pic here looks like the side view of a face, coincidence?
(I know I'm late to the thread) while this will increase your chances of winning, I assumed that the betting services would have very good staticians and game theorists so that the offer they give you always has a negative expected value for you Are you able to make a net profit?
This is a cool analysis. It'd be interesting to see it along side of some accuracy measurements. Do we get anything for our time if we use the slower algorithms? Does anyone know if there are any nice write-ups along those lines for these particular implementations?
Nice guide! One mistake though, your key bindings for split navigation are all capital Edit: Nevermind, see mixedmath's reply
Gave sqlitebrowser a go, turns out the app sending the .db files was generating the table with extra characters on the end which is why I couldn't access it (I was calling the wrong table). Thanks everyone for the help! I really appreciate it!
i'm looking to do this with Counter-Strike teams as you can now bet on them. I know where to get the data etc but not sure how to make a prediction, any tips or links in this area?
I'm afraid I can't allow you to do that.
One of Google's stated missions is to "Build the star trek computer" (their exact words) and they're spending a lot on it. Chances are when it arrives it'll be a Google product. What do you mean by "next" google search killer? I haven't found the first one yet.
I prefer NeoBundle, since I actually use plugins kept in Mercurial, and on Bitbucket.
Read up on Elo ratings and glicko ratings. Elo should do the job and is much simpler.
Also, this is a great book on ANNs: http://neuralnetworksanddeeplearning.com/index.html