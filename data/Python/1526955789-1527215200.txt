Efficiency and syntax issues aside I'd say this is actually a really good way to explain the concept of recursion. I learned it using the fibonaci sequence but I probably would have preferred this. 
Why is that? Noob here
Curious, do OS's use non stdlib packages? Otherwise this wouldn't be a problem I guess. Or, alternatively, they could make the critical packages read\-only so that they can't be updated by pip. I don't use the the OS's Python, but I think for many users it would be sufficient when used with virtualenv
List comprehensions are generally more expressive than opaque functions like map, filter, reduce. Being pythonic is all about having clear and unobscured intent!
Ok. Speculative it is, then.
Hm, that's weird, never had any problems with that. What OS are you using? My guess is your conda paths are not correct. In your terminal, maybe check that the pip command you were using was actually the one from the conda python. On Linux/Unix/macOS you can type `which pip` and it should show you something like this: /home/yourusername/miniconda3/bin/pip if you want it in e.g., `/home/yourusername/miniconda3/envs/someenv` you need to create `someenv` first before you install it. E.g., via conda create -n someenv pip python=3 source activate someenv pip install --ignore-installed --upgrade link * link is the URL for the tensorflow package version that fits your system 
What’s stopping you from doing that now?
sorry, but requests-oauthlib has no AssertionSession.
"Idiomatic" is the word you're looking for, I think 
In recursion execution goes back to the start of the function, However the stack frame of the previous function is still there, waiting for forward the function it called to return something. So after n recursions you have n stack frames which have built up, hanging out in memory, instead of being erased by the time travel. Best I can come up with is manually resting some of the variables and using a goto to go back to the start
If it’s being enforced, then it’s not really *asking*, is it?
I use a MacBook Pro for 99&amp;#37; of the programming I do. I wouldn't call it inexpensive, but hardware spec\-wise it's probably on par with a low\-end standard Linux desktop machine these days. It's sufficient for most of the stuff I do in terms of implementation and testing. \(The reason why I prefer MacBook for the initial implementations is purely because I find that macOS is a smoother experience in terms of having my favorite productivity tools there etc. \) To actually run stuff \(I do mostly ML stuff\), I am rsyncing the code to a more powerful Desktop machine or run the code via PBS scripts on a TORQUE cluster. But with respect to the original q \&gt; For running code \(testing and implementation\) a low end computer is typically enough.
And that specifically is important why?
upvoted! thx citisism guy that cant read!!
If anyone ever says "programming is so nerdy", I'm just gonna send them this. This is top notch dweeb
Tell this to the ReactJS people, sigh...
why do there exist baboons like you? stupid ass illiterate that think their opinion is valueable and needs to be shared :p do you tell your wife its her fault too when you beat her? cause you couldnt read the note she left?
Can you provide an example of such a situation?
do you only do this with the stuffs you will never be able to make or understand or are you a general wimp?
&gt; Authlib seems potentially heavy. No. It is monolithic, but it is not heavy. It has every spec implemented, but if you don't import them, they won't loaded into memory. https://docs.authlib.org/en/latest/intro.html#monolithic &gt; You don’t have to worry about monolithic, it doesn’t cost your memory. If you don’t import a module, it won’t be loaded. We don’t madly import everything into the root __init__.py.
This was all on python
it will be available on API
it can detect replay attacks as well
yeah, so there's other types of analyses- face "liveness" detection, texture analysis, contextual analysis, eye blinking detection. There's a whole lotta creative ways to break those. I'm pretty sure someone will try to break ours. Plus @panaetius is right about the interpretation of emotion.
n++
You are authlibs author. I asked simple questions, irrelevant to the docs of an AssertionSession. The requests-oauthlib package automatically refreshes tokens appropriately, in a similar manner. So again. Why should I install authlib *over* requests-oauthlib given the fact that authlib is probably larger than requests-oauthlib in pure size. The only conceivable reason is I have alternate systems that I will use in my own system that use other authentication solutions which you also provide. But this post is empy of anything except an oauth2 based api. If you are doing nothing making blogposts about your package without being able to defend the "there are seemingly better, simpler alternatives" argument, these posts are nothing but blatant adverts.
problem with counterfeits is that they're too damn good for even humans to detect. If humans can't, the AI can't (most likely).. unless you have super high resolution image of the product w/some super tiny feature that counterfeiters can't really copy. I think this might be more in the realm of blockchains. cut of meat - yea, probably but i'd have to see the data. concert ticket - no need for AI. the ticketmaster or whoever sells it just needs to have a web API for validation. altered photo - there's already software out for that. not sure how accurate though.
we used neural networks
Please don't put your Flask-SQLAlchemy db in the root `__init__.py`. This will cause a cyclic dependencies problem sooner or later, see https://github.com/lepture/authlib/issues/8 Thanks for your sharing. But where did you learn that? From the official documentation, it is suggested that you put these things in the `models.py`. Read my post on the folder structure: https://lepture.com/en/2018/structure-of-a-flask-project BTW, I'm a core maintainer of Flask.
yes, it is an ad. I have said, that Google service account is a JWTBearer Assertion which is defined by RFC7523, that requests-oauthlib has no implementation for this. If you don't like this post, since it is somehow an ad. I'll delete it.
Thanks for the reply!
I miss n++ though.
I use map when I apply functions to slices of a Pandas dataframe ¯\\\_(ツ)\_/¯
let's add wifebeater and sw_dev that can't read a readme of a .exe to yours.
Nobody said you had to delete it. But generally speaking on reddit self promotion at this scale is discouraged, if not outright not allowed by moderators, citing reddit's sitewide rule of no spam. Can you explain why there is no such implementation? It seems as though the implementation exists, but again, I am perhaps ignorant to the specifics. I do not have the time to read through an entire RFC to understand why it is different. But you seemingly already do, which is why I merely asked what the specific difference is.
Maybe it's even better to program on a low-endish computer. I've seen (and written) code that runs just fine on dev's machine and doesn't seem in need of optimizing, but crashes (or slows beyond usefulness) when it's not running on 8-core behemoth with 16 Gb of RAM and SSD storage. And I don't mean problems that actually require so much resources, I mean things like "who cares about data structures, I'll just iterate over this million-items list for every single element and do something if it's not fast enough".
Hi.. Al when you release a new course on Udemy or somewhere else... waiting for new one..
How much data is it? If the text file fits in memory split() will be the fastest. If you are worried about performance you could just iterate over the lines, and start fresh every time you hit ---
Dormancy, I’ve come to ERROR: Stack Overflow
First, if you check my posts, I didn’t post a lot actually. Yes, every link is a promotion. But I do reply to others posts randomly. I am not a heavy user of reddit. I deleted it because I don’t like to argue with people, better to avoid it by deleting it. Why requests-oauthlib has no such thing, because they don’t have it, because the library they depend on has no implementation. I was once a maintainer of oauthlib, but that time it is under idan’s account, and things are not going well. And the design of oauthlib is not good enough, especially when I was going to extend it with more RFCs, if I want to change it, it would be a huge job that a lot of people won’t agree. That’s why I created authlib, to make it a sustainable correct extendable flexible implementation that companies can use with trust. I’m sorry that this annoyed you. I’ve already deleted it. I’m sorry. Wish you a happy day.
I suspect that `map()` will work better in situations with a big list or big payloads, since you aren't putting everything into memory all at once.
Thanks! I've just changed it and I wish I found out about your blog post before! I actually looked at other pretty popular boilerplates when building mine and they used that, such as https://github.com/MaxHalford/flask-boilerplate/blob/master/app/__init__.py#L13 and https://github.com/hack4impact/flask-base/blob/master/app/__init__.py#L18 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [MaxHalford/flask-boilerplate/.../**__init__.py#L13** (master → a170e7c)](https://github.com/MaxHalford/flask-boilerplate/blob/a170e7cec605906801680567c4279b30ccd9630b/app/__init__.py#L13) * [hack4impact/flask-base/.../**__init__.py#L18** (master → 523c126)](https://github.com/hack4impact/flask-base/blob/523c126a6e37f2bc9dacfbe6a25df354a5794c65/app/__init__.py#L18) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dzdd6my.)
This is great. I'm not particularly focused on learning game dev, but have occasionally searched for an option in \(or similar enough to\) python that goes a little further than what pygame offers. Looks like fun to mess around with, don't know how my google searches have failed to unearth this one.
If you read the post, and the respective minimal comments 1, yes I need to use Py2 2, I am not starting out in the least 3, even if I was, this is literally an issue with the installer itself, and someone else seems to have this same issue. 4, Py2, while legacy, is not EOL. Trust me I want to use Py3. But I can't without enough rewriting of this tool, that I did not originally create, which will take at least a few months. Therefore switching to Py3 is unreasonable. Py 2.7.15 was released less than a month ago as a bugfix release for 2.7, which contains both security updates and bugfixes.
Also, list comprehensions are faster. 
If you’re worried about memory, wrap it in parentheses instead of square brackets and you’ll get both readability and laziness. 
they come from other languages where only this is possible. just like with \`\`range\(len\(my\_list\)\)\`\`
Pandas is in Python, but it is *not* Pythonic. 
Too true! I wrote it. I will try and do better next time. The whole post was written because **I** could not understand the YouTube numberphile channel's video that introduced me to the series. Sorry.
What alternative do you mean? Like for item in list? What if you want the range format for indices? Or is there another alternative to this?
Someone who has never seen code before can immediately understand n = n \+ 1, while they would have to take a logical guess to interpret that " n \+= 1" is the same as "n = n \+1". This is my defense of using n = n \+ 1!
I mean this is a cool post but recursion isn’t what’s happening in the scene. Recursion is more like *Inception*
There is not a simple answer, I can't summarize a RFC into a few lines, that's beyond my ability. I have said that it is an implementation of RFC7523, which OAuthlib doesn't have, I don't know how can I answer your question. I'm sorry, that is beyond my ability. I just got tired by the simple question that I can't answer, because it requires reading RFCs. I'm not a good writer to give you an answer why OAuthlib doesn't have this, it is just because it doesn't have.
You're welcome.
This is great. I'm taking a HPC course online but I still hadn't thought of this. Thanks a lot!
That makes no sense: A billion documents in a tuple is going to take negligibly-less memory than a billion documents in a list.
To iterate with indices you can use enumerate. for n, item in enumerate(items): print("item %d is %s " %(n, item)) 
About 400 lines for each segment. 
Whenever you need to create a generator but defer evaluation of that generator, for one.
Unfortunately this will make it a non-starter for Western companies.
A list comp with parentheses instead of square brackets achieves the same thing. 
Not at all. My main PC is 7 years old, runs Ubuntu just fine and is perfectly good for all my development tasks.
I tried your snippet, and it returns the first match as expected: &gt;&gt;&gt; line = 'x: 4.5, x: 5.3' &gt;&gt;&gt; re.search('x: (\d+)', line).groups() ('4', ) However there are 2 problems. First is that `re.search()` returns the first match only. Use `re.findall()` instead. The second is that that in the pattern `\d+` matches numeric characters only. Althoug `4.5` is no doubt a float, the `.` is not a numeric char. Use a pattern that matches float numbers instead. If you have plain simple floats, you could go with this: &gt;&gt;&gt; re.findall('x: (\d+\.\d+)', line) ['4.5', '5.3'] (My pattern does not work with negative numbers, numbers without decimal parts and so on.)
Nah - in Australia to register a political party you need to verify each party applicant against the roll. Last time I did this in the NSW format, it took a huge amount of time to manually verify each one. I’m working on the federal application at the moment and wanted to try and expedite the process. Important to note - people provide me their details, it’s not like I want to access other information (even though candidates get that during the election cycle anyway) No harm can be done by checking someone’s electoral status (ie - does their details match the roll, therefore are they eligible for us) I assumed there was no way to do this - but no harm in asking.
Hmm. Ahah! Here's one. How about higher-order functions? It's hard to pass 'make a comprehension' to a function as an argument: you'd probably need to create a function that makes a comprehension and pass that function as an argument. You can instead just pass `map`. So: ``` def process_list(process_fn: typing.Callable, items: typing.Iterable, *args, **kwargs): return process_fn(items, *args, **kwargs) process_list(map, [1, 2, 3], lambda x: x+1) ``` Of course this requires an instance where you might reasonably write `process_list` in a context where you aren't always going to be `map`'ing it, but might also be `reduce`'ing or something else. So to be clear, my example assumes you've got `process_list` already and want to tell it "please just map the first var-arg to the items". I mean, I use map all the time, but I find `map`, `filter`, `reduce` etc. to be _more_ readable than comprehensions, not less. But I also learned to program in Scheme and CommonLisp, so perhaps I'm broken. `yield from map(some_fn, items)` looks pretty readable to me, tbh. `yield from (some_fn(item) for item in items)` looks worse, to me. Reasonable minds can differ :)
Not unless 1. You use machine learning 2. It's poorly designed and stores the answer in browser Wtf do you want this anyway?
Hahah thanks for that! And to be fair myself, as much as I do use map and its cousins, I do also use comprehensions a lot. Set and dict comprehensions in particular. To anyone else reading this who decides to give `map` a fair chance: map gets along really well with `operator.attrgetter`, to the point that I kinda feel like `attrgetter` should be in the stdlib. Kinda. Ok, I won't push to hard on that one.
!remindme 17 hours 
I will be messaging you on [**2018-05-22 23:51:16 UTC**](http://www.wolframalpha.com/input/?i=2018-05-22 23:51:16 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/8l0f6q/best_podcasts_for_python/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/8l0f6q/best_podcasts_for_python/]%0A%0ARemindMe! 17 hours ) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
I answered in another comment.
Thanks. One issue I noticed, though. It doesn't return negative numbers, since I presume the string listed doesn't have a negative sign. Any way to retrieve both positives and negatives \(and keep them in the same output/order\)? 
Thank you! 
Okay.....why?
Map, filter and reduce are common concepts from functional programming that each have a clear purpose and intent. They can be found in most programming languages. List comprehensions are general and multi-purpose. They are awesome and powerful, but I would argue their intent is obscured more easily than specific, known, constrained functions because of their general applicability. Therefore I find it debatable whether it is "Pythonic" or not.
Learning python I’ve always come across n = n + 1, it seems very logical but n += 1 looks weird to me. But I ain’t a pro or anything
Sure it's possible just find a pattern on google that matches floats better than mine. Or you could rewrite the rule to match anything that's between `x:` and `, ` because you know that your matches must be floats. Example: &gt;&gt;&gt; line = 'x: 4.5, x: -5.3, x: 0' &gt;&gt;&gt; re.findall('x: ([^,]+)', line) ['4.5', '-5.3', '0'] 
I've updated the package for multi-dimensional functions :)
fmga has been updated to support multi-dimensional functions now! Some of the syntax has changed, look at the READMEs if interested. Thanks! 
Is BeautifulSoup installed on your machine already? If so, it's just as simple as: `from bs4 import BeautifulSoup` at the top of your code. 
It's really good advice if you ever land a job where you use python. It's a good habit to not mix up your environments because suddenly something doesn't work and no one can tell you why.
Guys lol seriously, it's just beginners code that I did for a bit of fun. It was also posted to r/programerhumor and r/geek I'm really surprised that it actually got this many views. It really funny that people are getting so worked up over it.
I think posts consisting of trivial code from beginners should be segregated away in r/learnprogramming/, though.
To be strictly equivalent, it should be `[(lambda x: f(x))(x) for x in [1, 2, 3]]`
I'm not aware of any relationship between BeautifulSoup and notepad++. You should install BeautifulSoup with pip. 
Ok, you haven't described your issue in much depth, but it sounds like you really don't need a logging module (there already is one), but possibly some better means of passing around logging configuration. There are [lots](https://docs.python.org/3/library/logging.config.html#module-logging.config) of ways to do that with minimal boilerplate, from having a common config file at a known path on shared storage to an installed package to a dedicated configuration server. Unfortunately the *right* answer will be highly specific to any given situation. I'm sure you've already seen some of this, but in the "advanced" section of the [how to](https://docs.python.org/3/howto/logging.html#logging-advanced-tutorial) and the [logging cookbook](https://docs.python.org/3/howto/logging-cookbook.html#logging-cookbook) there are some helpful starting points.
heh
Neat idea. I'd probably just create one "Untrusted" class wrapper around any kind of understandable untrusted input (dict/list/string, etc.) and put chainable declarative methods (e.g. sanitize_for_html) that focus on transforming the data inside into a regular trustable form as soon as possible though. I developed a similar library that tried to be a bit more "duck typey" and allowed the object I created to be used as a string/integer/list/whatever and I found that in a large number of instances the object caused problems when some other bit of code was attempting to use it as a list or a string or whatever, and it was simpler and more straightforward just to transform it into an *actual* string as soon as possible before continuing.
Lol, yeah. I mean the code was never meant to be taken serious or ever used in any practical sense. It was for a bit of fun. I remembered the scene from this movie and thus thought "oh maybe I could try writhing that into code". It's really funny that it actually this level of attention.
`\n` matches line breaks: `'x: ([^\n]+)'`
They used to think that all the people who were not white should be segregated from those who were; that was pretty damn stupid too.
I bet you made the same mistakes once; now your eyes are bleeding, then you were fucking excited it worked.
FTFY: for n, item in enumerate(items): print(f'item {n} is {item}') 
I have developed several applications based on PyQt: https://github.com/uetke/ Some of which include acquiring from a camera at ~1000fps. I am comfortable working with Qt in Python, but you it will really depend on what your use case is, you may find the strategy of web applications embedded into a window also a good way of splitting backed/frontend even for desktop programs. 
It wasn't broken?
Thanks, I prefer to measure these things how much real work it helped me avoid facing :P
It was just meant for fun as a way of learning programming. The same way a small kid might try to learn about cars by building one out of Lego. I'm honestly really surprised that it got this many views and hilarious that people actually got so worked up over it.
Would it make sense to leverage `typing.NewType`? 
Recently I had to make a "microservice" and was rusty with Flask so I based it on a tutorial template with Flask and Flask-SQLAlchemy. I ended up replacing Flask-SQLAlchemy with just straight up SQLAlchemy because I couldn't figure out how to define models without first having an instance of db = SQLAlchemy() like you do at the top of models.py. I just thought it was overkill to have to instantiate something just to define a child class. But then I found out that in SQLAlchemy I still have to instantiate declarative_base() to use as parent for my models. Whatever. One less dependency at least.
What on earth does race politics have to do with this? Are you unable to grasp that words mean different things in different contexts?
They are not faster and in some cases can be slower than the map/filter equivalents. They can be more expressive _when_ it's a simple operation that is clear but once you start mixing mapping and filtering in one expression they quickly become less expressive.
This is calling for a loop rather than recursion. This is how I might have tackled it. https://repl.it/@brontide_github/DrStrangeBargain
The nuking is a workaround that presumes you've got good backups of your configs, and reliable re-building plans...
Same old shit. It would be nice to see detailed side by side comparisons of pipenv with poetry, pip-tools and hatch.
What do you mean, backfire?
While this is a decent little overview, I feel like it's still not particularly clear for new users of virtual environments (such as myself) why pipevn is better than pip + virtualenvironment. For instance, the article says the following: &gt; To activate the environment you just need to enter: &gt; &gt; pipenv shell &gt; You can then run your code in the virtual environment by entering: &gt; &gt; pipenv run python my_project.py &gt; As you can see from this comparison, the simplicity of Pipenv is clear. Looking at the commands, I'm not sure I see pipenv as being "clearly" simple. For instance, when running pipenv command, I'm running the following: &gt; pipenv run python my_project.py However, in a virtualenvironment, I'm just running: &gt; python my_project.py It comes off a bit more complicated than simple in the above case. Now, it is easier to activate a pipenv than virtualenvironment but only slightly (pipenv shell vs source env/bin/activate). I'm not sure the article does a great job of explaining to a relative beginner, like myself, why pipenv is better. The examples didn't really feel much more simple, outside the lack of need to update requirements.txt. Just my noob 2 cents.
So......you have to be an expert to be allowed to post anything on r/Python? Or....should everyone just allow everyone post what they want and allow the public decide themselves if it's worthy or attention or if it's crap, people will just ignore and it will fade with time. The fact that my post currently on the top of r/Python with over 400 up votes and over 12 thousand views say people are viewing and seem to enjoy viewing it.
After the mess of the various threads last couple of weeks, I have poetry a chance (I had never heard about it) and I have found it quite appealing and well thought about. On the other, pipenv still doesn't appeal to me vs pip+venv+req.txt. This is not based on any thorough experiments, just a few trials.
Right, thanks
Do you have any examples where you find the map/filter equivalent more expressive?
You can actually use just `python my_project.py` if you did `pipenv shell` before. I don't know why the blog suggests using `run`.
that is tiny - without getting into regex or anything complicated, this should work, and give you several numpy arrays in a dictionary with open("filename.txt","r") as f: contents = f.read() outputDict = {} for index, chunk in enumerate(contents.split("---")): output = [] for row in chunk.split("-"): x, y = row.split(",")[:2] xval = x.split("x:")[-1].strip() yval = y.split("y:")[-1}.strip() output.append([float(xval), float(yval)]) outputDict[index] = np.array(output) 
Just see that on Windows, the \`which\` command seems to be called \`where\` \([https://stackoverflow.com/questions/304319/is\-there\-an\-equivalent\-of\-which\-on\-the\-windows\-command\-line#304447](https://stackoverflow.com/questions/304319/is-there-an-equivalent-of-which-on-the-windows-command-line#304447)\). So, maybe try to run \`where pip\` to see if it's actually using the conda pip installer, if not, then we know at least where the problem lies
&gt; it's a bitwise AND. Woah. But why does python need bitwise operators? I've learnt it for about a year now, and didn't know this
Frankly the filtering part of comprehension `[ x for x in y if case ]` vs `map( map_function, filter( filter_function, list ))` is often pretty edge-case in terms of readability to all but the most seasoned developer. Don't even get me started on nested comprehensions. Just write them out longhand, nobody but you are going to understand that junk ... `[x for i in range(2) for x in range(10) if i == x%2]` Of course that outputs the list in odds/evens, doesn't that make sense?
 Just go to [this link](https://www.udemy.com/python-for-complete-beginners-learn-step-by-step) and use the code `FREERAM` instead of using this spammer's link. 👌👌👌👌👌👌
Very useful. Thank you 
Some people, especially engineers, and most of all programmers, just seem to have to let everyone know how smart they are.
You mean, you find the filtering in the first list comprehension harder to read than the map and filter? That’s wild, I’m the opposite. List comprehensions read like sentences to me, and they map nearly one to one how I think about these kinds of operations. In the second case, it’s slightly harder to ready but that’s mainly because of the even check. I just woke up so I can’t think of a smoother way to do it in a single listcomp, but would you try to do this with map/filter as well?
It's new for Python 3.6.
Ah, I had sort of suspected that was true but wasn't sure. Thanks for the heads up.
It's the same with Doctors (I work with GPs), they just love the smell of their own farts. Ironically instead of just ignoring the bad code and letting it fade away, they just keep upvoting, commenting and viewing it.
Lol, it is now for any python &lt; 3.6.
To clarify why the second one is 0: ``` 2 = 0b10 1 = 0b01 ``` so there are no bits set in both 1 and 2, making the result 0b00, i.e. 0
If you know your input data is real then you can get another factor of 2 (or more) improvement with numpy by using numpy.fft.rfft instead of numpy.fft.fft. If you can also use a power of 2 (it will depend on your particular application), then the combined effect of this and using real fft reduces the time to about 1.8 seconds.
Thanks! I didn't consider using decorators with other callables like classes 
Yes, use kivy \- then you can easily add a very simple GUI.
pyzmq PUB SUB coupled with asyncio, otherwise known as the fourth circle of hell
I understand having bitwise operators in C, Cpp or Java. They are all descended from C and have similar syntax. Python is like the metal fan from a family of pop. Python has lots of abstraction, basically. To write the same things in C, it would require lots of mapping functions. What I'm saying is , Python is a high level language, and bitwise operations, I've only seen used in C which is lower than python, so why would _Python_ need such operators?
A backup script for my proxmox nodes. Got the SSH access working, finding files still wonky though, and backup module will be for tomorrow. I haven't used python for 5 years (used it before for computational chemistry), and I was really humbled; it took me a day just to get the "find and print what to backup". To be fair I wanted to do everything in python3 and not use bash.
Scala is the 2nd most popular programming language in the world? I guess this is a well-kept secret. Perhaps programmers using Scala are told that they must answer "I use C++" when asked what programming language they use. That is the only way I can reconcile what this article claims versus what I see in the polls.
Indeed, decorators are very flexible in their definition and application. What is the best approach, of course will depend on your specific application 
Hmm, there are a lot of questions in that one post, I'll try to answer them all. Python2.7 _maintenance_ work ends in 2020. This doesn't mean all 2.7 versions will be pulled from the internet. It will be up to OS maintainers to determine how/what to do, but there's plenty of time to figure that out. Depends upon how you've installed Python. How are you running Python for instance? Type python3 and you'll find Python 3 if it's in the PATH. You can then use `pip3 install ... `, or `python3 -m pip install ...`. Issues are for reporting package problems. They should be deleted if the issue isn't reported properly, or the problem is solved. Usage problems should be clarified in the docs (you can do this), or wiki. I'm not sure where your attitude of R vs Python has come from - it's not been my experience, anyway. There are many beginners using Python. In fairness to Python, the base level syntax is often lauded to be easier to work with than R. It might be worth thinking about how you're googling things (you need a Google fu with most programming languages to hit upon the search queries of interest). Have you tried /r/learnpython ?
 &gt;yeah i learn slower in python just because i cant google my way to get answers...i have to pre-know some of these fundamentals from the C language, etc on how to think and subset, indexing, setting dataframes, etc What are you talking about? Google's literally taught me everything I know about py. You can find everything you'd ever need to. The rest of your post is seriously meandering and I don't think we can tell what you're trying to say
Well, at least we won't have to recruit retired COBOL programmers to fix it this time. 
Look up Beautifullsoup basics then start a project you’ll learn faster
&gt; A ‘good’ knowledge of HTML Please define. 
- Know the basic tags and attributes - Structure of pages can be important - Being able to find the html elements you want on a webpage 
`yield` gets you somewhere in the neighborhood, but it's certainly not the same.
* pipenv * vex * pew * poetry * python -m venv * pip-tools * hatch * virtualenvwrapper's workon I'm sure there's more.
the word "deprecation" has a slightly less exciting meaning than you might think
Thanks for these. 
I'm creating a compiler for a toy language, with Python and the llvmlite library. [https://github.com/syegulalp/Akilang](https://github.com/syegulalp/Akilang) "Eventually, this might become something useful for production. Right now, it's strictly proof\-of\-concept \-\- a fun toy for me to hack on and to learn about compiler theory and programming language construction in the process." There's some runnable examples included \(see the readme for details\), but it is currently VERY flaky. LMK what you think.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/u_codevipr15] [Some of the best Python talks !!](https://www.reddit.com/r/u_CodeViPr15/comments/8laslu/some_of_the_best_python_talks/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
&gt; for your personal use there will be cases when you need one shot task, quickly validate an idea, hack something just for fun and see blinking LED thats when you can write sloppy code. "Quickly validate an idea" covers a lot of territory. I like to race through and "break the back" of the entire problem with code that is just barely as elegant as it needs to be. Once you know what the solution needs to look like, throw it away and rewrite. You save time in the long run.
Find a site you want to scrape and figure it out as you go along.
You are mixing virtual environment managment with requirements installation. venv and virtualenvwrapper is only creating the env, so it dosen't make that much sense to compare them to pip-tools, that do the requirements managment. I suspect that more of you list fall strictly in one camp or the other. 
Can you impact this list for me, I'm kind of understanding it but why say for range in 2 then say for range in 10. It seems like you should do the 10 then the two but then I'm further co fused at how does this generate a odds/evens separated list? 
Lulz, reddit doesn't like magic methods... it's Podcast.**\_\_init\_\_**
I have to say that while i chuckled at the code, i've found this thread immensely entertaining
Yes they do. A bloated default Ubuntu installation, or a some minimal distros should have quite a few packages. And of course they're read-only. Package managers put the files typically in `/usr`, root:root, 644. That's beside the point. If you can install yourself packages with `--user` or to a `venv` that doesn't hide the system packages, or you `sudo pip`… well, PEBKAC, just like `rm -rf /`.
Thanks a lot for the tip, I appreciate it.
I think this is a great example though, there's _so_ much confusion in this space that the use of each tool isn't clear from a quick glance, and there's some bleed over of one tool into the realm of another.
Great example, thank you!
Thanks for the insight!
This post is better suited for r/learnpython
A few years ago this post would have been received happily. Then python got popular and all the boring business types arrived and now this subreddit has lost its life. 
Anyone seen [this?](https://realpython.com/pipenv-guide/)
This post is better suited for r/learnpython
Lol, it's still funny watching how they get worked up over it.
This post is better suited for r/learnpython
This post is better suited for r/learnpython
My point exactly, list comprehension can quickly get out of hand and become obtuse. Here is that one broken down. &gt; [x for i in range(2) for x in range(10) if i == x%2] def nested(): for i in range(2): #[0, 1] for x in range(10): # [0...9] if i == x%2: yield x list(nested()) So you're looping over range(10) twice and each time you are matching a different remainder from i%2. It's a major complaint about the syntax that forces you to scan back and forth repeatedly to figure out what's happening.
It's possible to make a fair comparison of environment management vs other tools and dependency management vs other tools. But comparing blueberries to grapes as a whole is not that interesting.
I agree, this does seem possible.
I think it might be a bot or somebody attempting to create semi-reputable looking Reddit accounts Like, this same article was posted to /r/conspiracy by this same user Silly robot
I doubt I'd ever work myself up to put a code review out here, but after years of giving/receiving code reviews, and spotting all the sorts of things I used to do, it's entirely second nature to start critiquing the code in my head on read-through.
&gt;Edit: Realized the code was missing an infinity-stone, which quite literally manages context... Don't worry, if you are missing an infinity stone I'm sure half the people wouldn't know anyways. 
If you didn't have the operators, you'd need to use functions instead, which would be really awkward.
I disagree, but I also don't think pipenv really adds anything over pip + venv.
Python did not have the '+=' and similar operators until … 2.1, 2.2? I don't remember. Anyway it was considerably debated at the time (you can review the PEP, mailing list and c.l.p archives). I was against it. It enables certain execution efficiencies, but they're trivial and now we have 'more than one way to do it'. It was people that couldn't fathom a language that didn't act like C (++, other descendants). The troubling thing about '+=' etc is that with Python's generous typing and overloading rules you simply cannot rely on 'n = n+1' being the same thing as 'n += 1'. In C you can (mostly – leaving aside 'n = n += 1' and the like). It's a space-saving trick from 1973 that has no place in modern languages.
Professionals are paid to be right, and have different standards to hobbyists. It's kind of like talking about alternative medicine to surgeons. Keep on doing what you are doing - don't stop - but understand why you get that reaction and how it's very upsetting to certain types of occupation. Have fun but don't trigger people on purpose :-)
Please see r/learnpython
&gt;Have fun but don't trigger people on purpose :-) Unless it's funny ;)
I just put this in another thread [here](https://www.reddit.com/r/Python/comments/8l52km/doctor_strange_python_recursion_code/dze9f71/)
Doesnt answer my question AT ALL.
This is such a reaching comment that I can't believe it's not satirical.
Regarding `pyrax` and conflicting dependencies: this is a misconception because `pip-tools` (which `pipenv` uses internally) is unable to find the right set of dependencies. If you use `poetry`'s dependency resolver you will get what you want: poetry debug:resolve pyrax=1.9.8 will give you: Resolution results: - argparse (1.4.0) - babel (2.5.3) - certifi (2018.4.16) - chardet (3.0.4) - configparser (3.5.0) - cryptography (2.2.2) - debtcollector (1.11.0) - entrypoints (0.2.3) - funcsigs (1.0.2) - idna (2.6) - ip-associations-python-novaclient-ext (0.2) - iso8601 (0.1.12) - keyring (12.2.1) - keystoneauth1 (2.18.0) - mock (2.0.0) - monotonic (1.5) - msgpack-python (0.5.6) - netaddr (0.7.19) - netifaces (0.10.7) - os-diskconfig-python-novaclient-ext (0.1.3) - os-networksv2-python-novaclient-ext (0.26) - os-virtual-interfacesv2-python-novaclient-ext (0.20) - oslo.config (4.12.0) - oslo.i18n (3.12.0) - oslo.serialization (2.16.1) - oslo.utils (3.22.2) - pbr (1.10.0) - positional (1.2.1) - prettytable (0.7.2) - pyparsing (2.2.0) - python-keystoneclient (3.10.0) - python-novaclient (2.27.0) - pytz (2018.4) - pywin32-ctypes (0.1.2) - pyyaml (3.12) - rackspace-auth-openstack (1.3) - rackspace-novaclient (2.1) - rax-default-network-flags-python-novaclient-ext (0.4.0) - rax-scheduled-images-python-novaclient-ext (0.3.1) - requests (2.18.4) - rfc3986 (1.1.0) - secretstorage (2.3.1) - simplejson (3.15.0) - six (1.11.0) - stevedore (1.20.1) - urllib3 (1.22) - wrapt (1.10.11) - pyrax (1.9.8) A simpler case of this is trying to install `oslo.utils==1.4.0`: `pip-tools` will fail with: Could not find a version that matches pbr!=0.7,!=2.1.0,&lt;1.0,&gt;=0.6,&gt;=2.0.0 while there is a valid version of `pbr` that can actually be selected: `pbr==0.11.1`. The actual set of dependencies in this case is: Resolution results: - babel (2.5.3) - iso8601 (0.1.12) - netaddr (0.7.19) - netifaces (0.10.7) - oslo.i18n (2.1.0) - pbr (0.11.1) - pytz (2018.4) - six (1.11.0) - oslo.utils (1.4.0) Disclaimer: I am the author of poetry
Hi, I presented "Solve Your Problem With Sloppy Python". Thanks for the props! FWIW, I got some feedback from the talk, including one good idea: in the "mass rename" section, don't create backup hardlinks and rename the files, just create hard links with the new names (in a different directory)! Saves a step and I think is kind of a nicer way to work generally.
Well your first task will be to bootstrap a compiler for it.
A program that converts the wayback machine to a video of a sreenshots given a url.
I really enjoyed your talk. I think you really touched important problem. It takes while to gain understanding on when it is ok to write less pythonic code. Also I support your recommendation to use python scripts over . sh Made that mistake and never again 
Maybe my perspective is wrong, or too narrow. This is very different from how I've thought of the Decorator pattern in my past life as a java developer. I always thought of decoration as a runtime-type idea. Like, when I have to read a file, I build up a chain of decorators like this: &gt;BufferedInputStream bis=new BufferedInputStream(new FileInputStream(“myfile.txt”)); BufferedInputStream decorates FileInputStream. In this example, I could still use a plain, undecorated FileInputStream if I wanted to. In the examples in the article, it's a little different. Once you've gone: @check_positive def average(x, y): return (x + y)/2 Then you no longer have the ability to check the averages of negative numbers. That un-decorated functionality is gone. I guess, if I'm looking at your examples thoroughly, I could still go like this, couldn't I? positive_average = check_positive(average) That would conform better to my possibly-too-narrow concept of what the pattern is? There's something about the way the decoration permanently alters the original functionality that doesn't fit my pre-conception. What do you think? Is it that my idea of decorator is too narrow? Or is it just that the pythonic decorator is different from the Java decorator? 
By automate do you mean like Conway's Game of Life? What data structure are you using to store the world? I'd look into using numpy and Pillow. You should be able to blit this direct to a canvas (in either pygame or wx).
Upsetting people on purpose is crossing the line where it changes from "enjoyable learning" to "being an ass".
I liked the one about python 2 to 3, and the one about data classes. 
Take a look at https://github.com/duckythescientist/SmoothLife
Really cool stuff - looks like lots of fun!
Seriously, who cares about execution time of a tool to setup a virtual environment? Unless it runs for 30 minutes I couldn’t care less. Use the right tool for the job, and if pipenv fits, use that. If not, use something else.
Nope, trying to cluster spectral data where the components with small magnitude shouldn't have there phase information count as much. 
UPDATE: sklearn.cluster.DBSCAN can cluster from a distance matrix. If I make my own matrix, I can define a metric that incorporates the weights. There are probably others that have this feature, so I'm hopefully going in the right direction. I need both this and mini-batches at the same time. 
Wow. I was doing that last week, following this tutorial: https://youtu.be/G78cTmgeUxI One of the changes that was needed was to use llvmlite rather than the old lib being used in the video (from 2013). I also managed to get all components (lexer, AST, parser and the llvmlite) all covered with unit tests, which was nice. I’m seeing to commit it on github or bitbucket soon. Good luck. This is a very interesting project indeed.
&gt;Codes of conduct are to protect everyone, not specific individuals. that's rich
&gt; Frankly speaking, I feel that sDisPater's responses to Kenneth's letter to be a bit churlish But I never responded to his letter. What are you talking about?
Are you talking about your own comment? You compared that guy wanting filtered discussion to apartheid.
The back and forths the two of you have been having.
Yup. [https://github.com/syegulalp/Akilang/issues/1](https://github.com/syegulalp/Akilang/issues/1)
Thanks! My test coverage is still weak, but I'm forcing myself to get into the habit of adding coverage for every new feature as it shows up.
First off, sdispater didn't even mention Kenneth, only you did. sdispater only critiqued pipenv, showing a use\-case in which it failed, and in which another library didn't. You seem to be more interested in the author than the actual software.
Use Golly, it has python dupport builtin. You can even script art: https://github.com/Zogg/BlenderOfLife
I'd put each checkbox and lineedit into it's own frame. Then iterate through the frames, determine the checkbox state and then get that lineedit text. 
I only responded to one of his comment here on Reddit where he was "attacking" the Poetry community. That's it. But I would really like to know what you are referring to exactly since I avoided as much as possible to be involved in all of this.
I haven't tried vue.js personally but have heard a lot of good things about it. In some areas it's better than react.
I have removed this post as it is aimed at beginners 
&gt;Regarding pyrax and conflicting dependencies: this is a misconception because pip-tools (which pipenv uses internally) is unable to find the right set of dependencies As I said, its no big deal. The two will hopefully work things out. SDisPater has the advantage in that his mind isn't working within a straight jacket. Plus he's been a gentleman. The same can't be said of some in other threads within r/ Python who are using their freedoms inappropriately. The Information exchanges have been most rewarding. Plus, I'm really excited about the direction that Poetry is heading in. 
This post is better suited for r/learnpython
As an immigrant from AngularJS, the freedom scares me :c
Vue is the first framework I've fully invested in. I started a course on Angular, and got off track (life issues, not an issue with the instructor or the materials) and plan to go back, but right now, Vue is the framework I know. And from what I've learned so far is that, despite that it's complicated, it's not terribly so. Its very easy to get a simple Vue app going. The docs are easy to follow and the forums are useful. I'm not going to say its better or worse than Angular or React, but it's pretty hefty on it's own.
A simple but generic graph library for a simulation in my master thesis. It will be released as free software soon enough :)
OMFG I have been looking for a guide like this for a while. Nice one dude!!
I am by no measure a Kenneth Reitz fan, other than I use requests whenever I need to fetch an URL, and don’t care too much about how it is fetched. I’m not a pipenv fan either, in fact I’ve never used it, but then again I don’t use virtualenv much either. I still think runtimes are the wrong measure for something that’s only meant to be run “once”. I’m not even sure there’s a good metric to measure for pipenv besides it’s features vs the competition.
My opinions wrt the discourse are just that, opinions and not facts. I don't want you to be drawn unwittingly into the hooplah. That said, I would prefer to proffer up my opinion to you off line if its still of interest to you. 
Wrote a python script that goes through your twitter followers and sorts them by countries. A little buggy and has hacky code but it works. I am now trying to figure out a way to make it run off a web-server. Am new to python, so I had to google how to run Python off a website. Django seemed to be the way. So I'm now trying to learn enough of it to serve a python script over a website. 
Uhh...this is going to seem like I'm joking, but...if you have an astrophysics degree and want to do python....where do you live?
You need to shut up. I have numerous times told you that I'm clinical depressed, and you go and trot out your bigoted shit. I serriously begin to think that it's totally acceptable fro me to write terrible tumblr fanfic about you being gored to death. Shut up! 
I live in LA area 
That actually sounds really cool. You could add some music and do the google photos/facebook/whatever type montage--this is your website.
Please post the url as this link is broken, at least for me.
I think you missed the memo. There exists a rather large volume of comments that tout pipenv as the one and true solution just because it's possible to create and activate a new virtual environment in one command. I'm not targetting you, and I'm sorry if you felt that. 
You know I meant it as a joke?
Same thing I try to do every week--try to take over the world!! Actually just yet another Quine McCluskey thingee. Code is there; works; but want to clean up and document. 
Recently I read that this is a strategy to show a H1B visa is required because of a lack of skilled candidates. That doesn't make it suck less unfortunately.
Have to admit, I have never, ever, thought that ./bin/activate.sh was too hard....
Wow, guess I missed that! Thanks for letting me know!
I am a us citizen. Should I be putting that info in the resume?
I don't think it will make a difference. The scam is to send a job offer to 100 objectively unqualified candidates, and the use that as justification (Of 100 candidates, none fulfilled the requirements, thus no domestic workers are available) to create yet another H1B position. 
Just for clarification: I never made fun of Kenneth. There is no point in making fun of mental disorder. I have near friends with such problems and this shit is serious and the devil.
IMHO most recruiters are the moral equivalent of ambulance chasing lawyers. Lower than used car salesmen. 
As replied by z_mitchell, it depends on how you design the decorator. I'm not very familiar with how Java handles them, but in principle in Python you are generating a new callable. And therefore yes, you loose the option of using the original function. It is an interesting point, that I haven't considered before, but that I've already faced when dealing with decorated methods and inheritance. Will try to expand the examples to include also what you mention. 
Grabbing a keypress should be almost the same with any library, e.g. with curses its key = window.getkey() You're probably going to need to re\-write your display class though. All of the TUI libraries have their own APIs for handling colors and printing characters to the screen. In curses, it looks like this window.clear() window.addnstr(0, 0, "Hello") window.addnstr(1, 0, "World!") window.refresh()
Commercial 
Thank you for the information, I’ll definitely look into it!
Why not answer the calls? If they're looking for an "Expert Dev" and you can meet their requirements, who cares what the title is? The reason they're 'lazy' is because they're literally just running scripts looking for "Python", then shotgunning standardized emails to everyone hoping to get a hit. So, screw the experience, screw the modules. You can learn on the job once you get a job. Don't lie to them, tell the truth, but odds are good they don't need an 'expert', they just need someone who can use Stack Overflow, Git, and figure out Python from there. 
&gt;What I'm saying is , Python is a high level language, and bitwise operations, I've only seen used in C which is lower than python, so why would &gt; &gt;Python &gt; &gt; need such operators? Bitwise operators are super useful, not just for low\-level code. They're used very often in math &amp; science; for e.g. signal and image processing uses bitwise operators all over the place, like when you need to combine two masks. You don't see them used in Python \*as\* often, because you don't need to manipulate address values and such in Python, but they're still useful in other places. I use them often.
I let them know straight up I’m looking for a junior python position because I have no professional experience but that I can learn whatever fast. However, it seems like almost all are looking for someone who can take off running. In addition, I don’t want to end up starting work to feel like a dumbass stumbling stuff in front of the employers 
Also its zero because `x &amp; (x-1) == 0` IFF `x` is a power of two.
The real benefit is the separation between core packages you install and their dependencies (separated using a Pipfile and a Pipfile.lock). Also, the idea with pipenv is that you really shouldn't have to manually create a venv, it'll be created for you and reused subsequently. The rest mostly feels like a few more shortcuts if you previously used virtual env along with virtualenvwrapper. I like pipenv and have switched to it. Mainly because I don't have to manage venvs anymore or worry about them as much as I did before. Also when i uninstall a package, pipenv makes sure all its dependencies are also removed.
Thank you for putting all the links in one place, sir!
You can run the pipenv shell and then just call your program as you would normally. The advantage is that pipenv basically does all the setting up for you and allows you to easily manage dependencies.
Here would be a good place to start. [https://docs.python.org/2/library/csv.html](https://docs.python.org/2/library/csv.html)
not exactly,i was refering to a different kind of cellular automata https://en.wikipedia.org/wiki/Cyclic_cellular_automaton . I tried using basic lists and then having each pixel in the grid coloured accordingly,that process of colouring though is pretty slow (especially in pygame),would using numpy arrays make a difference (sorry i'm still a noob obviously). 
"person does something for fun, internet craps on it... news at 11" On the bright side you gave a lot of people something to talk about this afternoon!
This post is better suited for r/learnpython
&gt; The real benefit is the separation between core packages you install and their dependencies (separated using a Pipfile and a Pipfile.lock). Also, the idea with pipenv is that you really shouldn't have to manually create a venv, it'll be created for you and reused subsequently. What is that supposed to really mean? Just explain why you shouldn't have to create a venv? That is precisely the what pipenv does as a result of a manual command. Is pipenv really such a shitty product, that it will only be deployed as a result of free range merketese? 
Not exactly what i was currently looking for, but i'll definitely have a look since the project i'm working on made me interested in cellular automatas
After doing both Angular and React at work, for my most recent company I got to pick what tools to use. After evaluating, I chose Vue, and I would totally recommend it. It's versatile, can be used alone or w/ a complex webpack setup, and IMO the abstractions are simple. It's def. my favorite of modern tools and I 100% believe it was the right tool.
[This](https://hackernoon.com/extending-python-3-in-go-78f3a69552ac) article seems to explain simply how to extend python with Go, by " cgo , which is a way to import C headers and access the types and methods described in external libraries. It also enables you to build shared libraries from Go, and build C headers automatically from your methods in Go lang" A lot of code on the internet is extending python with C extensions, so if you need to extend python with Go, you will need to tinker a little bit. [There](https://github.com/google/grumpy) is also transcompilers, that is it compiles Python source code to Go source code which is then compiled to native code, rather than to bytecode. 
Not quite sure but that .python looks strange to me, also in python/ there is no \_\_init\_\_.py. Have you tried to remove it? Otherwise I debug stuff like this by looking into the modules .\_\_dict\_\_ . Eg from tensorflow import contrib print\(contrib.\_\_dict\_\_\) Don't know if this helps, good luck
`pbr==0.11.1` is not `&gt;=2.0.0`? What am I missing?
Heh, just try it for yourself! Built a simple web app with it last year in 2 days for a uni project, really easy to get started with.
Its true you didn't make fun of him. I'm so glad that there folks like you in the phython community.
What sort of things? I use zsh and haven't noticed a problem. I just checked, and yeah, the subshell that's spawned with `pipenv shell` includes the environment variables set in the parent shell.
Oh neat, thanks for introducing me to something new. Love this stuff! Yep, numpy should make this quicker too. The issue with using a lists of lists is a) it takes up a lot of memory (each value is a Python object) and b) lookup is slow, because Python has to do two list lookup operations to get to each value. In a numpy array the values are all held in contiguous memory. This means we can find any element with a single calculation - e.g. on a 4x3 grid, if we're after 3 across and 2 down, we don't need to perform any lookup: it's at 3 (our x position) + 2*4 (two rows). Even better, if you're wanting to view your grid as an image, a contiguous block of values is exactly what a bitmap image is. You'll need to check image formats (RGB) in Pillow/numpy, but there should be something. The view operation then doesn't even need to "look" at your elements, you just display it. Hope that's enough to get you started.
What you said was, that you were clinically depressed on 3 occasions. And then you proceeded to rip one off Kenneth. What's 'sauce for the goose is sauce' for the gander. So do onto others as you would have them do onto you. And for the record, I never attacked you. For some unfathomable reason, my asking those who claim to be in the python community, to be respectful of one another, sets you off. Particularly with someone like Kenneth who has a mental disorder. You, of all people should be high fiving that and stop dissing his illness. 
I’ve been dealing with this exact same thing for the last ~4 months. So many recruiters looking for expert positions. Two weeks ago a recruiter reached out to me for an expert position that requires ‘5 years exp. minimum’ I told him I only had 3 (the honest answer). He said the company was flexible, set up an interview, and I got a job offer yesterday. Just keep at it! I had to deal with a bunch of bad recruiters until I hit the one that made it work. 
Oh boy! Not again. And while at it let's compare Obama Vs Trump, Netflix Vs Hulu, PCs Vs Macs, Wordpress Vs Drupal. Why can't people just pick a tool and use it or discard it if it doesn't fit their particular use case.
&gt; Use your words more carefully. you need to stop telling people what to do.
I believe python-prompt toolkit will capture keyboard input https://github.com/jonathanslenders/python-prompt-toolkit 
It wasn't that long ago when Brett Cannon, (if memory serves me well here) wrote a poignant open letter to the python community, withdrawing from the business of being prime on the development of some software We can ill afford to lose important contributors to the python ecosystem. I am fearful that the actions of some farts here on r/ Pyrhon, might drive Kenneth away. That's not to say that we can't call people like him 'out' when they need to be put onside for the sake of our sanity. After all, there is only so much human folly we can handle. So thanks for being understanding 
yup, i have no clue why that is so hard, but it has been a long standing [open issue](https://github.com/jazzband/pip-tools/issues/355)
The author of poetry just stated pipenv uses pip-tools (I didn't realise until I looked at the source), so the bug I was referring to would exist in both tools. That's 100% a technical statement and nothing to do with the author of pipenv.
https://www.huffingtonpost.com/entry/trump-h-1b_us_5890d86ce4b0522c7d3d84af and https://www.google.com/search?q=trump+h1b&amp;ie=utf-8&amp;oe=utf-8&amp;client=firefox-b-1
Maybe I should start putting in my resume that I need a H1B visa so companies will start looking at me more. Never really cared about this issue because it never affected me but now it does. Odd thing is a lot of recruiter emails I get are from Indians or south Asians. I’m Asian myself but I feel like it’s harder to get a job in legit ways 
It's a bit complicated but it includes conflict detection and backtracking (I simplify here since it's not exactly backtracking), but here is a simplified breakdown: `oslo.utils (1.4.0)` depends on: * pbr (&gt;=0.6,!=0.7,&lt;1.0) * Babel (&gt;=1.3) * six (&gt;=1.9.0) * iso8601 (&gt;=0.1.9) * oslo.i18n (&gt;=1.3.0) * netaddr (&gt;=0.7.12) * netifaces (&gt;=0.10.4) What interests us is `pbr (&gt;=0.6,!=0.7,&lt;1.0)`. At his point, `poetry` will choose `pbr==0.11.1` which matches the constraint. Next it will try to select `oslo.i18n==3.20.0` which is the latest version that matches `(&gt;=1.3.0)`. However this version requires `pbr (!=2.1.0,&gt;=2.0.0)` which is incompatible with `pbr==0.11.1`, so `poetry` will try to find a version of `oslo.i18n` that satisfies `pbr (&gt;=0.6,!=0.7,&lt;1.0)`. And this version exists it's `oslo.i18n==2.1.0` which requires `pbr (&gt;=0.11,&lt;2.0)`. At this point the rest of the resolution is straightforward since there is no more conflict. 
Ah yeah, I got that bit working The part that no longer worked was overriding the library version at the end I'll adjust that
Just got an email from a recruiter. Looking for 5-7 years of python experience. Really? Every day I get one of these emails. Got another email earlier looking for a python dev with all kinds of stuff I’ve never even heard of. I wish I can put their emails into a spam list 
Yea I won’t give up. I’ve decided on this path and no going back. I just gotta keep studying everyday and find one company that will hire me and get my foot in the door. Thanks 
I have not used this but maybe you can find something helpful: https://keyboardinterrupt.org/catching-a-keyboardinterrupt-signal/ 
&gt; No issue here. Nobody is gonna complain about 1 second difference in the grand scheme of things. Just below the comparison...
Ah, nice breakdown. Very cool!
I have no qualms with that. In fact, I did pick a tool and it wasn't pipenv. However lots of people are picking tools based on recommendations in the official docs and this may lead them to think poorly of python tooling
Don't worry about my feelings :). I assumed you mean it this way, but I wanted to make sure (so that next time I can improve if I didn't accomplish what I set out to do)
That last point about adding in the cdn - do you have an example of this I can try out on my own stuff?
I don't think there's any specific use-case for EdgeDB that couldn't be done using another type of database; EdgeDB just seems like it stores (relational) information differently and has a different syntax for main that data. It seems like it tries to bridge NoSQL data (graphs and documents) with SQL - see [QuickStart](https://edgedb.com/docs/quickstart/) for example
Hmm, I really don't understand why it would be doing this. The last time I used Windows was in the 90s, and I don't have any experience with it beyond that ... but there is maybe a file that is similar to \`\~/.bash\_profile\` on Linux/Unix/macOS. It contains a path to where conda is supposed to be located. In my case, for example, it contains ```# added by Miniconda3 4.3.21 installer export PATH="/Users/sebastian/miniconda3/bin:$PATH"``` so maybe even if you have installed it in c:\Anaconda3, the \`\~/.bash\_profile\` equivalent on Windows might have the wrong path? Other than that, no idea what it could be. Maybe try to install the CPU version on your desktop computer to see whether it's a PyTorch-GPU specific problem or whether it's a pip problem. (btw if you install other packages via `pip`, does the same problem occur?)
It's basically the jquery of modern framework, in the sense it's easy to use, elegant, well written, versatile and light. Basically, it's like React, but and can be used with the same kind of complex tooling and gain the same results. But the best thing with vue is that... you don't have too. You can also choose to just drop a script tag and use vue for only a few things on your site and call it a day. Or dig deeper. Vue doesn't force itself on you. Ok, now the real killer feature of vue: THE DOCUMENTATION IS EFFING AMAZING.
Friendly suggestion: you can block people on reddit. You have to go through reporting their comment, but mods can approve that (and you can include a comment why you're reporting it)
Check out the getting started docs, they're excellent and the first examples start w/ a CDN: https://vuejs.org/v2/guide/
This is an obfuscated redirect/referral link rabbit hole. https://click.linksynergy.com/deeplink? id=uNC3S7FE9O0&amp; mid=39197&amp; u1=pcsd1&amp; murl=https%3A%2F%2Fwww.udemy.com/the-modern-python3-bootcamp/ DO NOT use use/navigate this link. This is SPAM.
Especially coming from the guy saying we're the horrible ones.
When the core algo is done I'm going to put it on github for the ui part so that people can fork it at mod it in whichever ways they want.
This is terrible advice. I had a former coworker who did this exact thing. He and I were going for the same position, I told the truth the whole way through, he lied until the interview. I got the job.
If you lie, you end up wasting people's time. Don't do this. Just be honest, and depending on how adept you are and how desperate they are, the recruiter will probably just look past the lacking years of experience and you'll get an interview. Use the interview to show off what your strengths are, and if you're good enough, and have what they're looking for, you'll get the job. Don't lie.
I said depression and disorders are two different things. Clinical depression is a disorder. Depression isn't. So when we are feeling depressed, we have the capacity to control our behaviour. On the matter of clinical depression, a sizeable number of people pass from being clinically depressed to just being depressed or not at all. So if there just depressed then, according to you, not me, that person is capable of controlling their behaviour. That was your statement, not mine. My position was and is that when people have mental disorders, that they often can not control some of their behaviour. Look, you keep wanting to make this thing, all about you and its not. I appear to be one of very few people throughout these 'Kenneth' threads, who is asking for some forebearance for people with these kinds of disorders, including you. I'll tell you what I do in a second, so that perhaps you'll understand why I'm not attacking you. You wer
I did notice that others had already suggested the power-of-2 improvement - sorry should have acknowledged this more clearly. It seems that (on my computer anyway), if you repeat the numpy fft, then it is faster the second time. Perhaps it learns the best method. My timings (for second time) are: Size 31257584, numpy.fft.fft: 20.3s Size 31258584, numpy.fft.rfft: 10.1s Size 33554432, numpy.fft.fft: 2.3s Size 33554432, numpy.fft.rfft: 1.2s (33554432=2^25)
If you haven’t used it already, I really recommend udemy, I’ve found their courses to be very affordable and a great way to learn new stuff and build out my GitHub. 
I’m actually going through Python for Data Science and Machine Learning bootcamp by Jose Portilla as I speak. Right now I’m on Seaborn section. Once I’m done with this course, I’m going to get the Data Science and Machine Learning Bootcamp with R. Hopefully I can finish both by end of month 
I read somewhere that gitlabs uses Vue because documentation is the only thing you will ever need. Everything is written thoroughly
I have just created this task: http://rosettacode.org/wiki/Kolakoski_sequence for programmers, where I have expanded on the definition and put the essential property up front. It is not one of the simpler tasks on RC so I'll check over the next few days to see how the RC community react. 
don't sell yourself short, and understand that "expert" can mean a lot of different things to a lot of people. previous company i worked for did this bizarre thing where they changed all the job titles and suddenly the bottom job level was "senior". so they are advertising for "senior engineers" but they are really looking for relatively entry-level people. i have seen the opposite as well, where they make the title seem really low level but then list a masters degree as a requirement. bottom line, an interview is never a waste of time. if they want to talk to you, use the opportunity to find out what they want and see if you're up to it. worst case, you just get some free experience interviewing, and you really can't have enough of that. 
it's ability to progressively adopt was 50% of the reason why me &amp; team went for it - docs/community/ethos/trajectory was the rest
http://pyvideo.org/pycon-us-2012/stop-writing-classes.html
Oh, NM. 
Right, I never knew. Sorry for jumping to conclusions. The good news is that it's using old captcha which I'm pretty sure can be easily solved. There's a few working examples out there you could give a shot https://github.com/ptigas/simple-captcha-solver
I've been here. In fact, I still reside here. I prefer to surprise people with competence rather than the reverse. Don't sell yourself short, but also don't talk yourself out onto a limb.
True. And that's what I said. Its a follow-on to a discussion if you will, about technical differencesl. A discussion that took place between the author of pipenv and poetry. In discussion, he mentioned that pipenv's resolver was way slower than the one in poetry.. I for one was estatic to see him follow up here with some metrics and code here. That's what is supposed to happen in this industry. And he did it in a professional and gentleman like manner. If one hadn't read the earlier discussion, one would never know that this is in any way related to that 'talk'. For me its a follow-on. And I loved it.
This is awesome. Thank you. I literally wonder if you could get a job literally just replacing tasks with pyautogui 
I've been using it for a project at work and I think it's pretty great. It's simple and it's pretty easy to understand what's going on under the hood.
https://plus.google.com/115212051037621986145/posts/R8jEVrobbRj
Thanks
Dude. I just finished ranting to the girlfriend about this. 9 times out of 10 - they can barely speak English. Shit is so fucking annoying
It’s even better when as soon as you respond to being possibly interested to the opening, they respond with “what’s your salary expectation” and won’t go any further until you give them a number. Like, motherfucker I can’t give you a number until you give me some job requirements besides “Python Developer”. 
You should take some of those calls and go on the interviews. You’ll get a sense of the process, which is a very helpful skill. You’ll also learn some about what those 5-7 years really mean. I’ve found those kinds of numbers are arbitrarily decided and have little meaning beyond having the ability to write new code and read / debug existing code. 
A way to ddos /r/devops with shitposts; looks like it’s working 
Third party recruiters are so fucking lazy and non-technical. This is just what you have to deal with.
Nice!
Ok I will upsell myself and start going deeper through the process. If they want to fuck with me sending me bs recruiting offers, I will waste their time but use it as job interview experience 
What’s worse is I’m seeing python dev positions in places like Texas for $30,000-$35,000. Dude I can work some bullshit entry level job in any field with a degree and get just as much or higher. Like I didn’t do Astrophysics to end up with that kind of offer. I’m looking at least $60,000 to start with hopefully 
Every email i get are from people that’s non American. Weird 
Personally I would rather surprise them with the amount of stuff I know rather than lack of stuff I know 
Yeah dude I know the feeling. I’m trying to get my foot in the door myself and it seems like every which way you turn - even if applying to a legitimate posting, you get a headhunter. I started taking my own route and just emailing companies directly asking if they’re hiring / willing to take an entry level dev on, rather than deal with that middle man bullshit because it’s becoming ridiculous with 3-4 phone calls a day from all over the US
Apart from the inventing Python bit, I imagine you're very similar :)
That’s funny 
Thanks for the mention! It's also worth mentioning Radio Free Python. It's not producing any new episodes, but I found the ones that are there to be quite interesting http://www.radiofreepython.com/
Here are some emails with names of recruiters I have been receiving: Ashok Kumar Pankaj Kumar Bansal Shariq Khan Rupesh Mourya Pawan Kumar Singh Tanvi Gandhi Rahul Thakkar Rishabh Pandey Satpal Sharma Sandeep K Sannu Sandilya Munchun Kumar Shiva Prasad Nitish Yadav Mayank Prakash Amit Kumar I feel like I’m not living in USA and they’re mostly looking for non Americans. And I’m also waiting for Harold to email me sooner or later 
The benefit doesn't seem to be enough to actually start off a new tool. I mean, its just wrapping pip and virtualenv, and the new commands that it introduces are not really all that different. There is very little time saving, if any at all. Also, the replacement of the requirements.txt does not seem to be required.
Believe or not I’ve had a good amount of receptive responses so far. I just send a small introduction of myself and my resume 
Always Indian 
I’ve been just letting them know straight off the bat that I don’t have any professional experience and that I’m looking for a junior dev job but I could learn real fast. Not sure if this is the right way to go about it 
This has been my experience so far. 
After you’ve got a key, if there are more than a handful of possibilities, the ‘if...elif...’ stack is not the best way to process it. The Python equivalent of a switch statement is a dict in which each key is a keystroke value, and the values are executables — either function names or lambdas. I’m on my phone so I’ll probably Bork this formatting, dispatch_dict = { ‘A’ : func_for_a, ...} if this_key in dispatch_dict: dispatch_dict[this_key]() else: #unknown key This has constant short time to process a key versus the if-stack.
I would like to be able to work on Django as well, to incorporate some of the ideas I have for web development and web apps. Then utilizing data science to further develop the web portion. I’m going into data science because I would like to use my Astrophysics background and skills. I feel that Django doesn’t fully utilize the stuff I learned but it gives me the ability to work remote in the future, which is my ultimate goal. Basically I decided to become an expert in python, Django and data science. This gives me the flexibility to work with data and create my own web to do stuff on it. One is using data science to analyze financial modeling, stock prices, etc, and have a subscription based web app that will charge monthly fees to those who want data analytical info. Not sure if that makes sense. 
No, it makes sense. Looks like you have a plan.
Personally I’ve been studying for python harder than I’ve studied for Astro. I’m so motivated to make it as I’m in a do or die situation. I never felt like I had a clear plan in life and this is the first time I actually have a somewhat of a plan mapped out for 1,3,5 year road. 
I'm straitjacketed by a minimum experience requirement that I can't bend on...but it doesn't have to be python experience. Do you have 5 years in some kind of software position?
If you're trying to build build a CLI with tab completion, history, line editing, etc., [readline](https://pymotw.com/2/readline/) is the way to go. It handles the heavy lifting, with hooks for you to build what feels like a 'standard CLI'.
Have you seen https://automatetheboringstuff.com/ ? If the ticketing system is web based, it might be something you get from an API, or webscraping, or from log(s) .. what ticketing system do you use? /r/learnpython might be a better place to ask.
Physics count? PM me details. I'll send my resume.
Recruiters don't even read your resume, they just auto-shoot out an email. Don't be surprised if you get .net jobs.
Which is a pretty irrelevant point. If I'm writing python, I care that I can get fast matrix operations with numpy and fast, parallelizable code that runs on the GPU with numba. I don't care that in theory pure python is slower than pure JS, I care that my python programs are going to be much faster at number crunching. I wouldn't advise anyone to do linear algebra operations in JS because "JS is faster if you don't use any of the fast python stuff". 
BMC Footprints is our ticket system. There is a business rule that when a certain trigger happens it kicks off an "external action" What it does is you tell it what language you're using, then what the .py file \(or powershell\) There's also an argument at the end that tells it what ticket you're running the script against... so what I really just want to see what happens when the external action is triggered
I’ve learned numpy, Pandas, matplotlib and seaborn so I’m becoming more comfortable with them. I’ve also learned PostgreSQL and SQLite so getting more comfortable with those as well. Currently taking a Udemy class where I will be tackling linear regression, cross validation, bias-variance, logistic regression, k nearest neighbors, decision tree, random forest, k means clustering, NLP, big data and spark, neural nets and deep learning as topics. Right now I’m learning python for few hours then switching to data science stuff for the rest. I’ve also learned how to use Beautifulsoup and Selenium. One of the projects that I’m going create and work on is going to the web, pulling data as csv or Json, import it using Pandas, then using numpy and seaborn to create visualizations and perhaps using PostgreSQL to save the data onto a database or something. I also know some stats and can find standard deviation from scratch since I already know the formula. I feel like I know enough for a job as a junior but I also feel like I’m downplaying my abilities 
The technical words you need to help you find the right library are "unbuffered non-blocking keyboard input" Unbuffered means you don't need to press return. Non-blocking means that the program doesn't hang, until a key is hit. That's actually the difficult bit. If it's OK to block, pretty much anything will do it.
I actually did get .net job offer. They said they will train for about 3 months then get you a guaranteed job at which you have to work at least one year. Says the pay was like $35,000. I said no way. I’m not relocating and doing all that for that pay
I will be in a year or so. Lol
That’s good. I feel like $80 k would be reaching for me but with my degree and knowledge I think I’m gonna go for that. Shoot, if I go for that but can’t get it worst I can do is $60k hopefully 
Don't lie, but don't see yourself short. Especially in areas like Data Analysis your science degree is worth a good deal.
Yes I am in LA. What I have been finding is that my skills and knowledge seem to only be part of what they’re looking for. Like I can’t check off all the required stuff that they’re looking for 
I stopped putting contact information on my resume. 
Is this in your JSON: " Command exited with status 0. === stdout ===" ?
I'm not a front end guy and don't know much javascript. I was able to make a useable front end pretty quickly. Once you learn the basics it's very easy to use and intuitive, good documentation. 
what are the things you generally find you're missing?
I've switched to using pipenv because it provides a handful of nice things. * It sorta follows the same dependency management process of other ecosystems like bundler in rails and yarn in the js world. When team members who work in other technologies either jump in on a python project, or integrate some python projects into their systems, the package management learning curve isn't that steep. * I generally have to deploy to a lot of different systems, so it's nice that the only thing I need on a target system is python, pip, pipenv and an internet connection. * I can use the lockfile to guarantee that a specific version of python is used, and that specific package versions are used. This is really nice for production configuration management. It certainly has its warts, but it's a big improvement over juggling pip, requirements.txt, and having to manage virtual environments.
til: there are paid python libraries 
Some have Keras, Tensorflow, PyMC, Hadoop, spark, mapreduce. etc. I think these are more for data scientist more than data analyst but I haven’t seen much junior data analyst jobs on boards. Mostly it’s senior data scientist or other engineer position which requires experience and stuff. I’m keeping my options open to any junior python positions including data analyst. By the way, from your opinion, is data analyst a good way to get into data science if you don’t have a masters or PhD? It seems most data science requires a graduate degree of sort
Pandas
Yeah that sounds like something for a data science role not data analysis. I would focus on getting a data analyst job with the skills you have now + what you learn on that course you're about to take. Not sure about getting a job as a data scientist without a graduate degree. If it comes down to it you can always get a masters after or during a couple years of working.
It might be actually, remove that with regex?
Beneficial or not, the question is about what’s people actually paying for, plain and simple. There are commercial python libraries out there, no doubt, I’m curious what people are paying for, that’s all.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
If you are about to ask a question, please consider r/learnpython 
I came here to say the exact same thing! It uses PyQT under the hood. Just makes it easier to develop, distribute, and update.
Hi, I don't know anything about the tech industry but I get something similar in my field. Those are mass-emails, sent out to a lot of people. You had some buzz-words on your resume that led them to sending those out to you. The best thing you can do: Hi so-and-so, I'd be glad to apply for this position if you find me qualified. I'm currently looking for work so please keep me in the loop if you find anything that fits my resume. I appreciate you reaching out. Thanks, Name
I just got an email from a recruiter with the subject line "Happy strawberry day" or something like that. She said she was impressed with my front end skills and wonder if I'd be interested moving 300 miles. I've written maybe 100 lines of javascript in my life. 
That must have been some 100 lines. Seems like your reputation precedes yourself
This is better for /r/learnpython 
If you are about to ask a question, please consider r/learnpython
As far as IDEs go, Pycharm is worth. Although, VSCode has been surprising me with it's Python support.
Why do you think it would take 3 years to be a Django dev?
This post is better suited for r/learnpython
Use the datetime library. I'm on mobile so I can't give an example, but just poke around the docs and you'll figure it out
http:www.github.com/paperduck/algo
One of the nice aspects of Go is that it compiles extremely quickly, because it's a very restrictive language. Like comparable to Python interpreter launch times. But as soon as you start using `cgo` features, it compiles at about the same speed as a medium-sized C++ project. It's one of those, "Ooh..." moments.
If that works, sure;\) Alternatively , I would use stringio: [https://stackoverflow.com/questions/22604564/how\-to\-create\-a\-pandas\-dataframe\-from\-a\-string?utm\_medium=organic&amp;utm\_source=google\_rich\_qa&amp;utm\_campaign=google\_rich\_qa](https://stackoverflow.com/questions/22604564/how-to-create-a-pandas-dataframe-from-a-string?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa) and create my dataframe with dataframe = pd.read_table(previously_json, skiprows=2, delim_whitespace=True)
got it! thank you for pointing to the right direction!
I don't even want to pretend I read your pathetic apology. 
I don't believe there are many good, or many at all, paid libraries that would be worth payment. There are, however, libraries and/ or tools that companies would supply workers with upon hiring them. But to answer your question I don't know any good paid for libraries or tools.
Genetic algorithm that produces multiple “cells” for systematic generation.
building dem docker images
I will never think "yeah a package managers would be easy to write" again.
I've created a [comprehensive list of python podcasts](https://www.cybrhome.com/topic/python-podcasts).
contribute to open source - great experience and public. Don't worry about messing up or looking stupid, just try to help. if you need a data science related project but not "jumping into the deep end," check out [quilt](https://github.com/quiltdata/quilt). Super nice guys, very open to contributions, bug reports, etc. DISCLAIMER: friends of mine. 
Yea huh, I should offer my scraping services to these recruiters 
Um..too late. I have my phone number on my resume...I’ve been getting at least like 1-2 calls a day. I just ignore it though. Most of them send a bullshit email first 
I should do that instead.
I have been getting about 2-3 emails a day. All useless positions that doesn’t apply to me like, Java / C++ experience, AWS experience, etc
Yea I’ll try that. Thanks 
Get a google number and filter it through voicemail. Call back the legit ones on your actual number.
Yea I know the feeling. I got idiots emailing me with Java/C++ in addition to python. Like do you see any Java or C++ listed on my resume? The incompetencies of these recruiters are amazing 
I enjoy telling data science recruiters one of two things... 1. The only people who would meet requirement of X years of experience would be the people who created the language/product and no corporations have been using it for X years... or 1. The only people who have 5+ years of experience at A,B,C,D,E,F,G, and H have to be lying or have done no actual work for years and just learn the latest buzz-technology for 24/7.
Numba Pro and other Anaconda premium stuff? I haven't used them, but hey, more paid examples. 
Spectral clustering can also accomplish the same thing, as can a hierarchical clustering (although the latter may not be particularly appropriate)
requirements.txt is as explicit as you can get. Replacing it doesn't really make sense.
Excel can definitely do that for you, and has good-looking visual output with things like plots, linear regressions, etc. It is also a pretty powerful tool for running being able to run statistics on things like your workouts, their frequency, and the metrics of your successes/failures with respect to numerical goals. This website goes through some Excel functions you can use, but by all means Google “excel statistics” as well: https://www.excel-easy.com/functions/statistical-functions.html I don’t imagine you’ll need anything more complicated for this project, but if you want to learn Python anyway, and are into data science, start researching Pandas. There are some great YouTube talks from PyCON 2018 on data science and using Python and Pandas (“an open source library providing high-performance, easy-to-use data structures and data analysis tools for the Python programming language”) Cheers bro, get programming!
It'd be nice if some one can tell why was I down voted so I correct myself.
As GTK\+ official Python binding, PyGobject's document isn't good enought. And PyGObject's document is rarely
Ah reminds me of those weird entry level jobs/internships that still want experts with over 5 years of experience took me a while to realize that the ones making the job posts are the actual coders/engineers. 
I use sublime text. It has anaconda package, which has intellisense, goto definition, refactoring, autoformat PEP8 errors, pyflake linter, docs of particular functions and methods, managing Python enviroments so it scans your local enviroment and every package you install will be scanned and you will have autocomplete of installed library. I was wondering what does visual studio code has to offer for python development ?
Agreed. PyCharm for larger projects, VSCode when working on something one-off or as a scratch pad with CodeRunner.
Didn't you write even one script for something in college? Even just a shell script, so you can claim you were scripting during school?
I think it will become too complex to build it on your own in Python, and maybe it will even considered cheating with external scripts. I recommend you to look AutoHotKey. It can combine pressed letters into one. So for example, when you press 1 on keyboard, when playing invoker, it can map it to press QWE for defending blast, and invoke it with R. So all invoker spells can be invoked with 1-9 for example. Also, there is script to controll meppo clones even with mouse activities https://github.com/donsingh/Meepawn/blob/master/README.md
More complicated games where player needs to press a lot of keys to preform something have Macros section. So you can check that too. P.S. I also only play dota sometimes and indie games. Indie games just brings something fun and new to table :)
It'll take your user theme on Linux. For other platforms you can just ship any of the thousands themes available online. At the beginning I even provided a couple and had a switcher in the settings window so the user could pick their favourite. Worst case the user can download one and put it in the installation directory so it gets picked up.
Just a small heads up in case you did not know. Doing this is considered cheating in online games and you risk having your account VAC banned for life. 
The other day, I opened a pipenv base project and VSCode detected it and auto-config it's self to the correct Python interpreter and such. I knew VSCode already supported the .venv layout. I didn't expect native pipenv support. I was pleasantly surprised.
/r/learnpython 
You generally don't need everything. Chat it over with potential employers and you'll find yourself surprised more often than not
Good tutorial
FYI: there is a tool called [gopy](https://github.com/go-python/gopy) that allows to create CPython extensions from Go packages. I haven't tried it personally though and I do not know if it is mature enough to be production-ready.
If you haven't already, go and see Raymond Hettingers talks also. 
&gt; I'm not into that kinky hipster front-end stuff +1 QOTW :)
Thank you, masklinn, for voting on CommonMisspellingBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
Beware: this guide relies on you using and signing up for a trial of their software. Not saying Auth0 is bad, but there are tutorials out there that let you accomplish this without what they’re offering. 
Building a public portfolio can be helpful. Find a public data set, e.g. something from the government. Do some analysis on it and write up a blog post about the results and how you did it. That shows that you can do the work. If you pick an interesting topic, then it can get a lot of reach. For example, gerrymandering is hot right now, do an analysis of how it affects your state.
The [curses](https://docs.python.org/3/library/curses.html#constants) standard module uses them extensively (emulating the C ncurses API).
List is defined in [].
Try angel.co ; if you're looking for opportunities in Asia, getkinks.co is a good bet. 
I have been using bs4 for scraping the biggest eshop in the world. Its now an easy ride but bs4 is very helpful so far. This is my first scraping project and I am using the http parser. Any advice for a rookie ?
https://www.reddit.com/r/Python/comments/8l89t3/5_pycon_2018_talks_worth_watching_subjective_list
Because tuples are made by the comma, not the round brackets. They are merely there to group things correctly. Add a single comma before the outer closing bracket.
I think you would need to contact valve and have your program approved or create a script that gives you no competitive advantage. If i was to make a script for something like dota i would make REALLY sure that it didnt affect actual gameplay in any way. Maybe controlling the camera when observing replays or something?
"I have a job opportunity you might be interested in. We are looking for an ex-" "imma let you finish, but have you heard of this new candidate scraping script I have developed?"
thanks for the answer yet in my example print(type(a)) will display &lt;class 'tuple'&gt; so it's kinda confusing
Of course it does. It IS a tuple after all. It just isn't a tuple that contains a tuple. In your example the round brackets are completely unnecessary. You can add or remove any number of them without changing the result.
I still see only one tuple there,you need coma in one element tupple
i'll medidate on that, thanks !
That's one place you need the round brackets to group things correctly. Or rather to differentiate between the same syntax (commata) used for different semantics (tuple v. function parameter list). But the fact remains: tuples are made by the commata, grouping is done by the round brackets.
Try looking into sqlalchemy. Your provider changes based on the underlying db engine, but the sqlalchemy indirection is pretty good at isolating most engine specificities. 
You need a trailing comma e.g. ((1,2,3),) for a single element tulle of tuples. Otherwise the outer parenthesis are just for visual clarity and grouping. 
Consider doing the challenges on the site "codewars". Begin with the easier ones. Slowly, you will begin to understand problems. It' s amazing learning by reading, but practice is still needed. Codewars helped me incredibly. Wish you the best!
Take the call. Most of the time they're over selling the position anyway. I've been to many interviews looking for an expert, but then when it comes down to the nitty gritty, they're all like "yeah, we're after a junior position on junior position wage." Sometimes, they might see potential in you and want you so they can mould you into their ideal developer. Try to build a little portfolio. I created a chip 8 emulator, a basic rom manager, and a small django project before applying for my first role. It was about a months worth of work, while doing my regular job. You'll do great.
This does not only apply to django models but also python functions' default arguments.
Wouldn't it have been easier to add a "pip create" option, to initialize a new virtual environment and read `requirements.txt` and install everything in one command? And "pip shell" and "pip run" options to do the equivalent of the `pipenv` versions? I get that the new tool does some other things but in every article the briefer user interface is the most obvious advantage over `pip`. Also if reducing the number of configuration files for a project is a goal, couldn't the prerequisites be added to a new section in `setup.cfg` instead of creating a new configuration file?
Brandon Rhodes http://rhodesmill.org/brandon/talks/ Ned Batchelder https://nedbatchelder.com/text/
What is "Database metadata"?
Dude this is like everywhere. For every field. It’s insane smh 
[marshmallow-sqlalchemy](https://marshmallow-sqlalchemy.readthedocs.io/en/latest/) automatically makes Marshmallow models from SQLAlchemy models.
Table definitions, column_name, column types, foreign and primary keys, constraints, indexes, etc. Basically anything that would be specified in DDL. 
Thanks, did a quick read, I will have to check it out. But I will say that although replacing literals with bind variables is almost always a very good thing, this is not the case when there is a large disparity in value counts, there is a histogram on the column and one is using Oracle as it can come up with completely different plans. For example if a table has a flag column returnable_flg and 1% have the value 'N' and 99% have the value 'Y' an indexed search may be appropriate in the first case and a full table scan in the second. Most programmers don't even know this, however. Again, thanks, it's worth downloading and checking.
\&gt; the garbage that is SQL queries you mean the garbage that is *your* SQL queries?
Yes, but you still have to define schema and specify the model, as well as using the schema to interact with your model. Orator implements to\_json\(\) method which automatically return the query results as a JSON object. I couldn't find something similar to this in SQLAlchemy ecosystem, which is very disappointing!
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [shosca/django-sorcery/.../**models.py#L145** (master → c83fd6f)](https://github.com/shosca/django-sorcery/blob/c83fd6f8dd15ca3c3604b9a4dcde73069d6299bb/django_sorcery/db/models.py#L145) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dzfqkk0.)
Use requests instead of http parser, its much easier and better and also very well documented
I'm working on releasing new version of ChannelStream \- standalone websocket server for applications. [https://github.com/appenlight/channelstream](https://github.com/appenlight/channelstream), need to add better validation to its API and work on documentation.
Parentheses are used for function invocation. They can also be useful for explicitizing precedence in calculations, for example. See: `2 * (1 + 3)`. Keep in mind that `(1)` is the same as `1`. If you trade out the numbers above for tuples: `((3, 4, 5))` is the same as `(3, 4, 5)`. You have to explicitly mark the parentheses as a tuple if you want a nested one: `((3, 4, 5), )`
Why? And these comments are usually aimed towards PHP. Even if it's not, why shame another language, they're all good for something. 
I do agree, but python makes it easier to focus on the logic over syntax and other fiddly things. I am finding the indentation for blocks a little frustrating at times though, im not used to it.
crystal clear !
BS4 is great, it helped get over that dark stage of my life when I used to do web scrapping using regex. Yes, I was young and stupid and thought everything could be solved using a bigger regex, but eventually I saw the light. 
Last time I tried it there was no support for many ccs3
It's just a web frame work. I was thinking more like a couple months
"The VAC system reliably detects cheats using their cheat signatures. Any third-party modifications to a game designed to give one player an advantage over another is classified as a cheat or hack and will trigger a VAC ban. This includes modifications to a game's core executable files and dynamic link libraries." So, i guess AutoHotKey only binds keys and mouse, while some other cheats can track some data without player doing anything, like auto ping enemies, automatically prevent stuns and so on...
(requests_html)[https://github.com/kennethreitz/requests-html] is nice too. from the guy who wrote requests 
Ya, python is pretty intuitive. It's basically runnable pseudocode 
Meh, real man use regular expressions for [parsing HTML](https://stackoverflow.com/a/1732454).
You can't parse [X]HTML with regex. Because HTML can't be parsed by regex. Regex is not a tool that can be used to correctly parse HTML. As I have answered in HTML-and-regex questions here so many times before, the use of regex will not allow you to consume HTML. Regular expressions are a tool that is insufficiently sophisticated to understand the constructs employed by HTML. HTML is not a regular language and hence cannot be parsed by regular expressions. Regex queries are not equipped to break down HTML into its meaningful parts. so many times but it is not getting to me. Even enhanced irregular regular expressions as used by Perl are not up to the task of parsing HTML. You will never make me crack. HTML is a language of sufficient complexity that it cannot be parsed by regular expressions. Even Jon Skeet cannot parse HTML using regular expressions. Every time you attempt to parse HTML with regular expressions, the unholy child weeps the blood of virgins, and Russian hackers pwn your webapp. Parsing HTML with regex summons tainted souls into the realm of the living. HTML and regex go together like love, marriage, and ritual infanticide. The &lt;center&gt; cannot hold it is too late. The force of regex and HTML together in the same conceptual space will destroy your mind like so much watery putty. If you parse HTML with regex you are giving in to Them and their blasphemous ways which doom us all to inhuman toil for the One whose Name cannot be expressed in the Basic Multilingual Plane, he comes. HTML-plus-regexp will liquify the n​erves of the sentient whilst you observe, your psyche withering in the onslaught of horror. Rege̿̔̉x-based HTML parsers are the cancer that is killing StackOverflow it is too late it is too late we cannot be saved the trangession of a chi͡ld ensures regex will consume all living tissue (except for HTML which it cannot, as previously prophesied) dear lord help us how can anyone survive this scourge using regex to parse HTML has doomed humanity to an eternity of dread torture and security holes using regex as a tool to process HTML establishes a breach between this world and the dread realm of c͒ͪo͛ͫrrupt entities (like SGML entities, but more corrupt) a mere glimpse of the world of reg​ex parsers for HTML will ins​tantly transport a programmer's consciousness into a world of ceaseless screaming, he comes, the pestilent slithy regex-infection wil​l devour your HT​ML parser, application and existence for all time like Visual Basic only worse he comes he comes do not fi​ght he com̡e̶s, ̕h̵i​s un̨ho͞ly radiańcé destro҉ying all enli̍̈́̂̈́ghtenment, HTML tags lea͠ki̧n͘g fr̶ǫm ̡yo​͟ur eye͢s̸ ̛l̕ik͏e liq​uid pain, the song of re̸gular exp​ression parsing will exti​nguish the voices of mor​tal man from the sp​here I can see it can you see ̲͚̖͔̙î̩́t̲͎̩̱͔́̋̀ it is beautiful t​he final snuffing of the lie​s of Man ALL IS LOŚ͖̩͇̗̪̏̈́T ALL I​S LOST the pon̷y he comes he c̶̮omes he comes the ich​or permeates all MY FACE MY FACE ᵒh god no NO NOO̼O​O NΘ stop the an​*̶͑̾̾​̅ͫ͏̙̤g͇̫͛͆̾ͫ̑͆l͖͉̗̩̳̟̍ͫͥͨe̠̅s ͎a̧͈͖r̽̾̈́͒͑e n​ot rè̑ͧ̌aͨl̘̝̙̃ͤ͂̾̆ ZA̡͊͠͝LGΌ ISͮ̂҉̯͈͕̹̘̱ TO͇̹̺ͅƝ̴ȳ̳ TH̘Ë͖́̉ ͠P̯͍̭O̚​N̐Y̡ H̸̡̪̯ͨ͊̽̅̾̎Ȩ̬̩̾͛ͪ̈́̀́͘ ̶̧̨̱̹̭̯ͧ̾ͬC̷̙̲̝͖ͭ̏ͥͮ͟Oͮ͏̮̪̝͍M̲̖͊̒ͪͩͬ̚̚͜Ȇ̴̟̟͙̞ͩ͌͝S̨̥̫͎̭ͯ̿̔̀ͅ https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags
What do you think of this course? I've been mostly self taught, but have been looking at taking a few structured courses, so I'm not going down random rabbit holes all the time.
Regarding your problems with versions: I use [pyenv](https://github.com/pyenv/pyenv) to install whatever versions of Python I want and then I use [pyenv-virtualenv](https://github.com/pyenv/pyenv-virtualenv) to create a virtual environment using Python version that I need without even touching system-level Python. Another option is to wrap everything in Docker containers with all dependencies (the particular Python version and everything else) inside a container.
I do not see, how is this similar to Y2K problem. Python2 won't magically stop working after deprecation.
We called him Tortoise because he taught us.
a=(1) returns 1 a=(1,) returns the tuple (1,), such that a[0] returns 1 So if you say a=(('a','b','c'),) then you get what you want
Well, if your software is licensed under the GPL (which it has to, if you want to use the free version of Qt), then yes, they would have the right to distribute your software (and so would everybody else).
Do this for Flask pls
Scrapy tho
Thank you so much !
I liked BS4 until I met Selenium when JavaScript rendered pages couldn’t be scraped. Now I learned about robo browser and Selenium/phantom JS which does what Selenium does but with less resources used because Selenium seems to be heavier in use. Now I’m going to experimenting with those 
Re2 has no backtracking. 
Even though most regex engines in practice today are more powerful than formal regular expressions, they still aren't powerful enough to parse HTML. For example there is no way to capture everything between a given tag and its closing tag. Either you can do a non-greedy match and you will get false positives for subtags with the same tag name, or you can do a greedy match and youll get false positives for parent tags with the same tag name.
You can use BeautifulSoup with lxml as its parser. 
Thanks I will take a look!
Classic example, I have actually used them. Thanks!
Well I did study it for few months and can create a simple multiple page website. I’ve gotten template tagging, and some stuff but I’m stuck at getting Mixin models and such. I know I have the basics down so creating a quick site isn’t an issue. Deploying is another issue that I’m having as for some reason I can’t seem to deploy due to some errors I believe comes from static files. I also went through a Django Backend REST framework for API which I need to go through again as I’m getting better dealing with API. Now I’m much more knowledgeable with serialization and deserialization that I would like to go through to solidify
jsonify methods are just not that hard to make yourself. here's a bunch on stackoverflow: https://stackoverflow.com/a/10664192/34549 here's another very nice to_json() recipe that seems a little more well-put-together: http://blog.mmast.net/sqlalchemy-serialize-json it's just not that hard of a problem to do generically
Ok thanks. Saves me the trouble. So what do you think are the current scrapers? I’ve learned bs4 and Selenium but it seems like bs4 is underpowered for a lot of Js rendered sites while Selenium seems to be overpowered for some scrapes. What’s your take on Scrappy and Robo browsers?
You wrote SQLAlchemy? Thank you SO much! I use SA in every DB project I write. If you’re ever in Vancouver, drinks are on me!
the last time I tried to get to Vancouver there was a very unenjoyable debacle with airplanes not able to take off and I never even made it there, will keep that in mind next time I try to get there!
First of all, thanks for your great work of art, SQLAlchemy is the greatest of all Python ORMs, that exactly what made me desperate to find a solution for that because I had a challenge task, a client required to migrate a major project from Laravel/PHP to Flask/Python for the next version. TBH, I tried a lot of ready recipes, tried to write my own to\_json\(\) method, and none worked well in all cases, I always had some cases where it fails. Thanks again for the blog post you mentioned, I will try it.
try `pip install python-language-server` and using `LSP` in sublime. I find it to be much better the anaconda package. Better than VSCode, Pycharm, or VS proper, too.
I'm in the same boat. Though from my own experience I think the problem was misunderstanding the task rather than the tool. Regular expressions are great for tokenizing, not parsing. Tokenizing is the part where you break down an input stream into bite-sized tokens, and parsing deciding how to respond to those tokens. And if you're scraping a well-formed HTML document, as part of a one-off task, you can probably make some wild assumptions about what a token looks like (e.g. ``r'^.*&lt;/head&gt;``') instead of breaking out a parser library. There's doubtless more efficient ways of doing it, but I've been using regex tokenizers for years without any trouble, and the parser rarely gets more complex than a large if-else-else-else-else statement. In this way, you can easily create a SAX-style parser which begins with regular expressions, and from that you can build a more sophisticated DOM parser. If you don't mind some cringe-worthy code formatting, here's [something I made public in 2009](https://bitbucket.org/sproaticus/chordpro/src/e16c549c0883e92d59d31de8dacadb64d60778ad/chordpro/tokenizer.py?at=default&amp;fileviewer=file-view-default). Not that I suggest rolling your own parser if you don't really need to. (BeautifulSoup is frickin awesome.) But I think it's useful in learning how these things work under the hood if you're curious about that sort of thing. 
I'm going to guess that you mean \*Scrapy\*, not \*Scrappy\*, and autocorrect had a fun time... IMO if you're working with pages that require heavy JS, nothing other Selenium is going to work as well. RoboBrowser flat\-out doesn't support JS, and Scrapy doesn't either without using Splash, which basically sets up a browser in the background anyway. As heavy as Selenium is, I've come to \*like\* the fact that it spawns a browser window by default makes it easier to debug your scraping tools, since you can see the page state \*exactly\* when your code is running. Of course, you can still make it headless via headless Chrome/Firefox. There's also a ton of documentation on how to do...well, pretty much everything, since the community is so huge. That being said, I still use BeautifulSoup for basic HTML scraping, though I should probably look into using RoboBrowser instead at some point.
There’s a funny zen video on YouTube where a guy’s asks ‘The entry job requires some experience, but to get experience you need an entry job’. Basically similar context [zen for millenials](https://youtu.be/jFzUbgpWNf8) 
Yea good idea. Right now I’m working on learning how to do analysis so once I get some data, I can start pumping out analysis easily
Will do. Thanks 
Yes Scrapy. Yea I’ve come to love bs4 for simple websites. Will also be exploring robobrowser as someone before mentioned it to me saying it’s Selenium without testing so it does everything but with less resources used. But it seems the one fit solution is still Selenium 
This post is better suited for r/learnpython
set up a digital ocean server and use system d
Thanks everyone for the kind words about [Talk Python](https://talkpython.fm/) and [Python Bytes](https://pythonbytes.fm/). I really appreciate you all listening and sending in feedback. \-\- Michael
You guys think this would be better over at r/learnpython
You guys think this would be better over at r/learnpython lol
I guess it's possible he's referring to \[Requests-HTML\](https://html.python-requests.org)? Seems nice (very "batteries included"), written by the author of requests. I haven't tried it yet, though. Probably will, next time I have to parse HTML fetched from an online source.
I've just recently started getting into web scraping. How does beautiful soup compare to something like scrapy?
you can also use requests with parsel \(maintained by the people behind scrapy\)
I'm largely new to python, but set myself a task of creating a content analysis tool for a friend who's a journalist. BeautifulSoup is what I'm using at the moment with lxml and requests. It's great. Also should out for www.coreyms.com, this dude is an unsung hero
You're using the wrong method to start your thread, it should be testTUI = MyTUI() testTUI.start()
Almost anything can be parsed, but some features will not be achievable sometimes (if some data is hardcoded in PHP before being rendered to an html file readable by your browser). requests is the most useful library to get, and to parse the results, beautifulsoup is great. import requests from bs4 import BeautifulSoup url = "http://www.example.com" page = requests.get(url) soup = BeautifulSoup(page.text, "html.parser") That's the starter code. After that, you can pull any data from the website's html render. You can also send data using GET and POST requests if needed. I'll let you look in the docs. An example of what's possible with scraping : from bs4 import BeautifulSoup import requests import datetime def to_time(s): return str(datetime.timedelta(seconds=s)) def split_time(string): string = string.split(":") if len(string) == 3: h = int(string[0]) else: h = 0 s = int(string[-1]) m = int(string[-2]) return h*3600+m*60+s def views_to_nbr(views): chars = [] nbrs = [str(i) for i in range(10)] for char in views: if char in nbrs: chars.append(char) elif char in "abcdefghijklmnopqrstuvwxyz.,:!/.?ù*%µ$£^¨&amp;é'(-è_çà)=°+{}[]\#~²": break else: continue return int("".join(chars)) def pond_avg(sample, pond): assert len(sample)==len(pond), "different length for sample and ponderation" mul = [i*j for i in sample for j in pond] return sum(mul)//sum(pond) print(to_time(split_time("5:20"))) yt_trending = "https://www.youtube.com/feed/trending" page = requests.get(yt_trending) soup = BeautifulSoup(page.content, "html.parser") videos = soup.find_all("li", class_="expanded-shelf-content-item-wrapper") times_in_s = [] views_all = [] for v in videos: time = v.find("span", class_="video-time") views = v.find("ul", class_="yt-lockup-meta-info").find_all("li")[1].string views = views_to_nbr(views) views_all.append(views) times_in_s.append(split_time(time.string)) #avg = pond_avg(times_in_s, views_all) times_in_s.remove(max(times_in_s)) times_in_s.remove(min(times_in_s)) avg = sum(times_in_s)//len(times_in_s) print(to_time(avg)) this script just pulls the time of all the videos in the trending page of youtube, and averages the times, to get the average length of a youtube video. It's not very useful, but it was a fun little project I made to get into scraping. What I usually do is to open up the page in my browser and inpect the elements that have the data I'm looking for. https://www.crummy.com/software/BeautifulSoup/bs4/doc/ http://docs.python-requests.org/en/master/
This sounds interesting. What sort of use-cases are you imagining ? Audio or graphics software for instance ?
Maybe showing the error would be helpful... Anyway, if you happen to be behind a proxy that's likely your issue.
Step 1 is posting your error messages here ;) Does `python -m pip` work?
You're going to have much simpler time if you use something like Twilio. If you were going to use your own phone you'd need to have access to their GSM gateway, which used to be fairly simple to do back in the old days, but I think networks have picked up on this and started locking it down. 
This is ancient (https://github.com/rehy/cordova-plugin-sms-receiver) and I remember it was somewhat flaky so linking just as a worstcase scenario backup. Make a cordova app, install it to your device, and then you have two options: forward each message to a email account your python script is watching OR write the SMS's to a public accessible directory which a script can watch via USB. Ideally things have improved and changed but turning your own cell phone into a SMS modem was hit or miss in the past. &gt;I can use with a spare Android Phone hooked up to my PC The above only works if your spare phone still has a working account with the network provider (cingular, verizon, t-mobile, etc). Alternatively there are plenty of SMS gateway services you can use instead without paying +$50/month for a crappy cellular modem.
Beautifulsoup is great :D I used it for a while until I came across pyquery, which I *love* - does essentially the same thing, but it's a lot cleaner/easier to use (or at least, I think so :D)
This might be of use to you: https://hackernoon.com/build-an-sms-center-with-python-kannel-and-a-gsm-modem-9c0d29560d82
Couple of things you can do. 1) Install IFTTT App to setup a recipe to forward all SMSes to a Google Spread Sheet or an HTTP webhook which can be your python endpoint. 2) Install apps like [this](http://smssync.ushahidi.com/) one or [this](https://smsgateway.me/) one to setup a webhook for your sms. I think even PushBullet API can do this. 
Somewhat related to the number one on the list, please don't go downloading pics of the internet and using them for any commercial purpoes (non-commercial potentially, too). Tony Northrup released an interesting video related to this today: https://www.youtube.com/watch?v=DUEbi4r8Pg0&amp;t=1393s
Google 'python keylogger' for inspiration. 
&gt; A brittle solution is still a solution. If, as the previous commenter states, the "solution" either rejects some correct inputs or accepts some incorrect inputs, then its not a solution.
Python is an *immensely* satisfying language to write code in, at least in comparison to languages that require so much syntactic sugar that they give you diabetes. Programming in general is also really satisfying. It combines the analytical and creative parts of your brain together, working to solve a puzzle using logic or to organize things into a structure. 
Another newbie coder chiming in, and I couldn't agree more! After a couple months taking MOOCs, I've been able to delve into a modules \(openpyxl, BS\) and the simple syntax\-nature of Python makes coding friendly to beginners like myself. Does anyone have additional module recommendations that are beginner friendly and widely\-applicable in the professional world?
My personal experience is BS heavily lacks in parsing performance compared to lxml, so I use lxml (for me it was about 10 times slower if I remember correctly). This experience however comes from creating a search engine where the time to parse a webpage is extremely important. If you just need to parse a single page every once in a while BS will do just fine :)
Is every combination of DATE and PERMNO in df2 unique, or can that pair of values repeat from row to row? My first guess without being able to see the data is that one line from DF1 is joining to multiple lines from DF2.
There's almost always an API somewhere behind heavy scripted JS sites. I find it's much more productive to just open your prefered developer tools and pull the required information directly from that backend.
Hey, not\_a\_novel\_account, just a quick heads-up: **prefered** is actually spelled **preferred**. You can remember it by **two rs**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Incredibly satisfying 10&amp;#37; of the time, but also 90&amp;#37; very frustrating
This post is better suited for r/learnpython
Yes, they should be. I mean, I obviously didn't check it line by line, but I get df2 directly from a data provider, so it should be fine. Is there a way where I can check if all those pairs are unique on Python?
it's been a long time since i've done zodb so forgive me if this is way off. But when you say add objects from one context to another do you mean change the objects parent or make the object have 2 parents? pretty sure an object can only have one parent if so I dont think that's possible but you could introduce another object type like link which holds the key of the object you want to link to sort of the same thing as having a shortcut or symlink in your favorite file system. 
Get on Freenode IRC! #python channel is very helpful. Many popular projects have their own channels, too. If you're not familiar with tech channels, you have to expect people to challenge your thinking as an exchange for their help. If you ask "how do I do X?", the response may be "why do you want to do X in the first place?". This is the tradeoff. Helpers get to solve problems while you get an even better solution for what you had in mind.
I mean, that could also work. For me personally, my scrapers are rarely ever long\-term enough for me to spend the effort on that rather than just emulating clicks.
So, I did the following: group = df2.groupby\(\['DATE', 'PERMNO'\]\) group.count\(\) len\(df2\)\-len\(group.count\(\)\) Which gives 10512. Now as far as I understand, this means that there are 10512 DATE\-PERMNO duplicates in this df2 dataframe.
My favourite BS4 technique is to turn off recursive, such as if I am working on a really ugly HTML table within tables: ... soup = BeautifulSoup(..., "lxml") table = soup.find_all('table', class_='...') for row in table.find_all('tr', recursive=False): cells = row.find_all('td', recursive=False) ...
YESSSS It works !! Thanks , A lot . Now i just have to split the window in boxes and optimize refreshing but i have a good base to start with .. 
I didn't know about robobrowser. It looks great! Thanks!
I'm not a programmer, but Python I believe is seen as a scripting language still; not "real" programming in the sense of building a full\-fledged C#/Java/etc Web or Desktop or Mobile application. What's my point? There's a reason the syntax of Python is easier than say C\+\+; you aren't building a graphics gaming engine being used in the next hot game on PS4.
Thanks for the detailed review. I'm still pretty novice, but determined to learn. I'll be sure to check out his other courses as well. :-)
Python is an interpreted language, meaning that it isn't compiled into machine code and then run natively. It can still be used to create exactly those things you've described, but people don't, because Python makes a tradeoff for simplicity at the expense of efficiency. Having to interpret code at runtime tends to make it less efficient than compiling and turning it into assembly/machine code. As things progress and computers become more fast, using a language like Python to write complex programs will become more manageable since it isn't as necessary to eek out that extra 25% of efficiency (or whatever percentage that would be) writing something in C++ or something instead.
[Cron](https://en.wikipedia.org/wiki/Cron)
**Cron** The software utility cron is a time-based job scheduler in Unix-like computer operating systems. People who set up and maintain software environments use cron to schedule jobs (commands or shell scripts) to run periodically at fixed times, dates, or intervals. It typically automates system maintenance or administration—though its general-purpose nature makes it useful for things like downloading files from the Internet and downloading email at regular intervals. The origin of the name cron is from the Greek word for time, χρόνος (chronos). *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
I like to use [crontab](https://www.tutorialspoint.com/unix_commands/crontab.htm) for running scripts every so often, if your using Linux or a Unix.
Use .content instead of .text. BeautifulSoup uses a library which attempts to automatically detect the encoding type.
Then I'd say you're probably on the right track to figuring out why you're seeing this behavior.
Not sure if it applies to Reddit specifically, but be careful where you scrape from. Some websites do not allow it and I recall Facebook taking someone to court and winning over scraping. Read the terms and conditions before hand just to be safe.
Python C binding
That's like the worst of both world. Why would you do that when lxml's parser is shit, lxml provides a better API and lxml has better performances?
When I started coding some years ago, I experienced the same. It's a kind of addiction. That feeling after figuring out what the problem was. This satisfaction is awesome. Wishing you a lot of fun with your future improvements.
Take a look at LowEndBox.com. You can find a year-long rental of a low-stat VPS for ~$15.
I personally like BeautifulSoup's API better, but when crawling dozens of pages, lxml's speed is really handy, and I haven't run into any garbage yet.
That means you forgot the import statement. Add this to the top: import libsvm --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
I had this problem on Windows as well. You may have to elaborate exactly where you install it to your computer in order to import it to Python. Sometimes tha dependencies don't overlap with the system and you cant import. That's my experience at least. I hope that helps.
My question is why would you even want to do this??????? First it puts a load on the servers that isn't needed. Second it pollutes the forums with crap that we are not interested in. Third don't you have something better to do with your life, maybe possibly actually learn UNIX/Linux.
Regex might work for one specific static page that never changes. So, basically useless. If you wanna parse HTML, you gotta go into the DOM, there's just no way around it.
This doesnt work. user@Machine:~/vmaf$ apt list python-libsvm Listing... Done python-libsvm/xenial,now 3.12-1.1 amd64 [installed] user@Machine:~/vmaf$ python Python 2.7.12 (default, Dec 4 2017, 14:50:18) [GCC 5.4.0 20160609] on linux2 Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; import libsvm Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; ImportError: No module named libsvm &gt;&gt;&gt;
My solution was for the error you have in your OP; this one is different. Glanceing through [the docs](https://github.com/Netflix/vmaf/tree/master/libsvm/python) it looks like it installs as `svm` and `svmutil`. So try: import svm and adjust your calls to match. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [Netflix/vmaf/.../**python** (master → b8ca506)](https://github.com/Netflix/vmaf/tree/b8ca5062bbc32c8c479bac110bcdcdad1af0221e/libsvm/python) ---- 
Working through learning python the hard way to remind myself of the basics since I quit learning python because of the insane hours I had in my old job. New job. Less hours. New hobbies. 
You can also do it with old school regex, the extra power of programming regex doesn't change much. Anyway, the answer speaks about parsing HTML and you can't just do that with any regex. You can precisely match parts of an html string, event complicated ones and it can be a good tool in some cases, but that doesn't make the answer untrue 
https://jsfiddle.net/amitavroy/2p9gsz49/
You should never make such an assumption unless you personally built the site you're parsing and you have no plans to ever touch it again. 
That's exceptionally awesome. Thanks! 
BS had me at "UnicodeDamnit"
I think I got it. Importing svm and checking the path revealed: &gt;&gt;&gt; svm.__file__ '/usr/local/lib/python2.7/dist-packages/svm/__init__.pyc' So it wasnt using the one installed in "/usr/lib/python2.7/dist-packages/svm.py" which was installed by apt. The one at /usr/local/lib/python2.7/dist-packages had an empty __init__.py, so it was never doing anything. I dont know where that came from. I did install a bunch of dependencies, so maybe that was when this bogus version was installed. Anyways, removing it allows the right one to be loaded, and the import now works.
Another chemistry pal here! I really like to get a grip on IT stuff in general. I already wrote two useful scripts (GC-MS analysis related) and am stuck in writing a gui for chemicals management :)
pyodbc has some very basic db metadata convenience methods like cursor.columns\(\) or cursor.tables\(\). Other than that, I don't know of a database agnostic way of doing this. To get more detailed metadata, I just resort to querying the database specific "helper" schema tables. For example, for MS SQL Server, I query the INFORMATION\_SCHEMA table. For DB2, I query the SYSCAT tables, etc.
Like bots do already though? Oh wait !RemindMe 100 years
I will be messaging you on [**2118-05-23 19:40:23 UTC**](http://www.wolframalpha.com/input/?i=2118-05-23 19:40:23 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/8llbfm/i_want_to_run_a_python_script_every_5_seconds_247/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/8llbfm/i_want_to_run_a_python_script_every_5_seconds_247/]%0A%0ARemindMe! 100 years) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Wait i think i figured it out. Still trying to figure out the correct regex to remove those words though lol. 
Great for HTML, but sadly it falls apart when trying to deserialize, modify and reserialize complex XML documents. 
I started scraping with Perl, Regex and Split functions before most parsing libraries where known. Later on started with python in combination with BS and selenium. Selenium is to unstable for production use and no active development is done. Now I work with Puppeteer, that looks promising. https://github.com/GoogleChrome/puppeteer
CPython, the default Python implementation, is just that -- an implementation. There are [quite a few](https://wiki.python.org/moin/PythonImplementations).
I agree with a lot of what you say, but it isn't 25% extra efficiency. Python is about 20 times slower than C on average, and sometimes up to 100+ times slower for certain tasks. C++ is usually less than 2 times as slow as C.
If you need any help / advice at any point feel free to PM me
It’s pretty reasonable to assume that the people with the best understanding of java bytecode to also be most familiar with java. 
Hence the parenthetical qualifier after. It depends a lot on what exactly is being accomplished. Plus, Python can be a wrapper to lower level, precompiled libraries and add very little overhead. &gt; C++ is usually less than 2 times as slow as C I know this is a general statement, but source? C++ is compiled into machine code, same as C. And since compilers are pretty smart nowadays, they can do quite a bit of optimization that never gets seen unless you literally look at the assembly code it generates from what you wrote. I'd be curious to know why C++ is slower in comparison to the same code written in C.
[VOC](https://github.com/pybee/voc) is a Python to JVM-bytecode compiler written in Python. 
I agree. But I'd just like to know if there is any fundamental reason that Jython HAS to be written in Java. Because it seems like there is. For instance, IronPython is (atleast I believe it is) a compiler that can take Python source code into CIL (bytecode for Microsoft's Common Langauge Runtime). And IronPython is written in C#... which is the language that typically produces CIL. So It seems like it's almost a requirement, and no a coincidence. So I'd just like to know if it's a requirement or just a coincidence/bi-product of the fact that those who understand jvm bytecode being java programmers. 
[here](http://www.drdobbs.com/cpp/why-code-in-c-anymore/240149452) it says C++ is about 27% slower than C, but that article is also from 2013. Today the difference is possibly much less. Just because it is compiled into machine code doesn't mean it should be just as fast. C is generally more efficiently mapped into machine code. If you write in the basically-C subset of C++ the differences shouldn't be measurable, but once you start using certain abstractions it slows things down, only a very little bit however. 
Interesting. I know the main ones are CPython (of course), Jython (for compiling python source code to jvm bytecode), IronPython (for compiling python source code to microsoft's CLR), and PyPy (for having a JIT compiler for the bytecode the CPython produces with some added restrictions). Didn't know there were so many others. 
If you want to dynamically compile anything (including Python) into JVM bytecode, it's easier to do it in Java than in any other language (since things like [ASM](http://asm.ow2.io/) exists). Once we have a Python-to-JVM compiler, we could rewrite the whole thing in Jython, but *a.* It will probably be slow as hell and *b.* Why bother? We already have a perfectly fine implementation in Java.
Selenium can get nasty when something changes. I've had more success with using BS4 for modern sites that tend to evolve slowly and add pieces here and there, as most of the time your existing find and other functions still work correctly.
Oh dear lord so it is possible. That's what I thought! When I asked the question on StackOverflow people seemed to think there was some fundamental reason that it needed to be in Java, but no one really explained it. I figured it's basically just text-manipulation with A LOT of added steps so why couldn't another language be used for jython. Thank you! 
Did you mean to say Python above? Cause if not I am very confused, haha. And I agree; I'm not saying Jython should be written in any other language. I was just wondering if it was theoretically possible, because some StackOverflow users made it seem like it wasn't. 
Bs4 let's you choose the HTML tree building library you use as the second argument. html = requests.get(url).text doc = bs4.BeautifulSoup(html, "lxml")
See the sidebar. Take this to /r/learnpython 
Right. So what's the difference between a General Public Licence and an Open Source Licence then?
Well, I'm no expert, but I think it comes down to the fact that languages are implemented by their compilers/interpreters. Because Java is a compiled language \(whereas Python is an interpreted language\), the alternative you suggested in your StackOverflow post \- implementing Jython in Python \- would mean extending the CPython interpreter to either interpret compiled or uncompiled Java files or compile either compiled or uncompiled Java files into an interpretable state. In either case, that would amount to implementing Java in Python rather than Python in Java. Like I said, though, I'm no expert, and I may be wrong. Speaking of which, I'm sorry if you were hoping for a more qualified user to respond, but I think the question is interesting, and it looks like this question is very unpopular with folks around here \(guess what you're suggesting is some kind of sacrilege or something\), so I thought I might as well.
&gt; we could rewrite the whole thing in Jython You mean here? No I meant to say Jython. Since we can use java classes (and ASM) in Jython, it'll probably be easier to implement Jython in Jython than in plain Python. But it could be done in plain Python for sure ([and as turns out, somebody did](https://reddit.com/r/Python/comments/8lmbvd/why_is_jython_implemented_in_java_could_it_be/dzgo8p9/))
Any recommended ones you used?
New to posting on reddit, will keep that in mind for future post. 
I just made an account but I believe I started somewhere harder then what I thought I knew. Gonna start easier. Thanks 
Ahh, I see what you're saying. Thanks.
Saving this to read and re-read when I get depressed and frustrated.
Well, dependency resolution is about finding a valid set of dependencies with the highest versions possible. It does not necessarily mean that you will get the latest ones though, depending of the constraint of sub dependencies. So, if you don't backtrack (even though in this case it's not really backtracking since there is no true conflict), you will never be able to resolve this.
Read the sidebar. Then go to the sub the sidebar points to. Then read THAT sidebar.
You might find Jim Hugunin's \(the creator of both Jython and IronPython\) explanation interesting: [http://hugunin.net/story\_of\_jython.html](http://hugunin.net/story_of_jython.html)
Congratulations on taking those first steps! Science folks like yourself often find [Jupyter](http://jupyter.org/) and [SciPy](https://www.scipy.org/) to be useful tools. Jupyter is a Python program that creates an interactive "notebook" you can use from your browser. In conjunction with SciPy, you can do stuff like write a small Python script to calculate statistics and then graph it right on your screen.
Thanks! This is neat, I'm reading it now. 
How do I get information from columns in an HTML table? Really struggling to find a good tutorial for this.
Python was my first language and I learned it watching videos from TheNewBoston on YouTube. 
As one of my final college projects we had to imlpement a compiler for a Java-like toy language that ran in a virtual machine we designed the year before. I wrote mine in Python :) so, basically it was parsing "Java", emitting "16-bit assembly" instructions, converted through an assembler (written in Python) that ran in a custom virtual machine, that was also written in Python; on top of PyPy. It wasn't pretty, and it wasn't fast, but it was pretty cool. Python wasn't the best language to write a compiler in, the duck-typing was more of a pain than a pleasure.
This is why I love programming, no matter what skill level you are, there are always new things to discover and learn
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
The compilers have definitely made great strides. Very little code is written in assembly these days, and most that is is just edited/optimized assembly that was the output from a compiler. Personally I like writing in that level, C is by far my favorite language (although I'm about to learn Go and that may become my favorite based off what I have heard about it). C++ I'm not much of a fan of (mostly because the syntax and I generally don't have a need for OO). Python doesn't seem like a great fit for embedded systems as I'm sure you know. Have you checked out Rust? Seems like a viable option that has some great features.
Haha, that sounds pretty neat! Funny how far the abstraction layers can go. Since you seem like someone who would know... why exactly do we use Virtual Machines for interpetting (or JIT compiling depending upon VM) bytecode into machine code? It seems like in a lot of cases the VM is really just a glorified interpreter... Is it for security? To be honest I'm not quite sure what VM's that run stuff like Python bytecode or Java bytecode are really even for... why not just have your run of the mill interpreter that takes in bytecode and spits out machine code? 
Nope, Still giving error due to delim being whitespace. Lines that have more then just the process being enclosed in \[\] such as. message\+ 710 1 0 May16 ? 00:00:00 /usr/bin/dbus\-daemon \-\-system \-\-address=systemd: \-\-nofork \-\-nopidfile \-\-systemd\-activation throw an error of. pandas.errors.ParserError: Error tokenizing data. C error: Expected 8 fields in line 70, saw 9 I just need to find how to make it so that it puts it into one column instead of treating it as its own :/
Relevant [xkcd](https://xkcd.com/353/).
Thats on the wall in our office, has been for at least years, and every year I need to send an intern to that wall and go read it.
Would there be interest in a side-project that we once did? It's a transparent proxy (with some https shenigans) which allows you to read the internet at will and filter a few things: * Map any html-ish content to xml/utf8 * Block any inwanted content / domains / file-types (no-one wants an iso in his ram which you cant parse anyway) * Map any txt file to utf8 The filtering logic is handled by config files which the client references. The html is parsed by libhubbub. Text re-encoding is done by guessing and transforming to utf8, and content scanning and thus deciding what to do is based on lib-magic. The whole thing is written in c++, is multithreaed, and works most of the time as a transparent proxy that just presents the internet as a clean utf8 xml feed to our python based scraping and analyzing tools. As of now its not open-source, but if there's any interest It might be worth working that way. 
you "wouldn't touch python" but you feel compelled to go on a rant about a python tool in a python reddit?
I love black. For the life of me I can't be consistent in my quote usage. People submit PRs to fix my open source project quotes I'm so bad at this. Black means that quirk of mine is moot.
What does that mean? I would like to combine python with c++. Is this relevant?
Only if no one ever changes the markup and what are you gonna do about nested tags? You can match for a very specific sequence of nested tags but if anyone adds an element to the page you're boned.
 **Python Programming for the Absolute Beginner, 3rd Edition** is book that I used when I started learning to code. It had those challenges that I mention above. And it wasn't hard to follow and understand. Btw, I recommend you to see turtle library for drawing. It's very interactive and you will see what you write and do. It comes with python. Good luck on your journey, make great software one day.
 if isroot is True: result = connect.sudo(command) #return result else: result = connect.run(command) output = str(result) output_clean = output[45:] return output
GCJ did exactly this. 
yep
 if isroot is True: result = connect.sudo(command) #return result else: result = connect.run(command) output = str(result)[45:] return output or just do the string operation directly
&gt;output\_clean = output\[45:\] That still is not working unfortunately, same error. 
Here's a couple recipes I use frequently. Get all hyperlinks on page: def get_outlinks(soup): try: links = [] for el in soup.find_all('a'): if el.has_attr('href'): link = el.attrs['href'] # Ignore fragments if not link.startswith('#'): links.append(link) return links except: return [] Get all visible text on page: def el_is_visible(element): try: if element.parent.name in ['style', 'script', 'head', 'title', 'meta', '[document]']: return False if isinstance(element, Comment): return False return True except: return False def get_visible_text(soup): try: text = soup.findAll(text=True) text = ' '.join([t.strip() for t in text if el_is_visible(t)]) return text except: return '' 
Ok, now you're joking! 
Instagram and Reddit are written primarily in Python. The only individuals who hold the idea it's a scripting language only either work at large corporations that have upgraded in years or are students who don't really know any better. Just in my experience anyway
Ok that worked for getting the invalid stuff out but now i have this issue dataframe = pd.read\_table\(derp2, skiprows=2, delim\_whitespace=True, error\_bad\_lines=True\) that is causeing error pandas.errors.ParserError: Error tokenizing data. C error: Expected 8 fields in line 68, saw 9 I have a hunch its because its using the delim as whitespace but im not sure what else to make ot, new line char maybe? Did not think getting a string into pandas would be such a pain in the ass lol. 
welcome :)
You might want to consider learning the basics of the AWS ecosystem. It's pretty common, and for what you described in other posts about wanting to develop web applications you'll want to host them somewhere. A lot of time the AWS experience asked for is going to be pretty minimal, like are you familiar with the pieces, can you use S3 storage, can you make an EC2 instance run an application. And while boring and I wish more obsolete, SQL is a beast that lives on in almost every business it seems. No need to become an admin, but a data scientist will be expected to be able to write their own queries.
i tested it now this works: [https://pastebin.com/z7MwRmdi](https://pastebin.com/z7MwRmdi)
I want to adopt it but can't yet give in to double quotes. I'll start using it as soon as my religious feelings will evolve.
I've been using them for a while now... this isn't new.
Perfect! Columns are a bit fucky but I should be able to get that sorted, let me try a few things. 
No this is 3.6, I installed python myself and for my friend and both of us didn't have pip on the Windows path by default. 
people are paid for getting things done.
does it pay more though? I feel like at a certain level, all languages pay roughly the same. that being said, Python has a lot of use in the data science world, which I think itself pays a little higher than average. also, it's pretty versatile, so salary ranges for people using Python arent restricted to just developers. for example, a sysadmin or network engineer could make more use out of Python than, say, JavaScript. this might have something to do with it too.
Python is use heavily in the data science and machine learning fields, which pay more than general programming. 
I was just about to say that.
Can you write me a program to summon this feeling
Have you logged into a site then scraped it yet? url = 'login\_url' login\_details = { 'username': user, 'passwd': passwd } with requests.Session\(\) as session: post = [session.post](https://session.post)\(url, data=login\_details\) request = 'hey, you seem to be logged in' t = session.get\(request\) html\_content = t.text soup = BeautifulSoup\(html\_content, 'lxml'\)
A horse is an animal. An animal is not necessarily a horse.
imaplib
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
&gt;.replace\(" \-\-", "\-\-"\) Honestly I am not sure, this is a screen shot of what the data looks like its super messed up. This is with that change you made. [https://imgur.com/a/SmMvlzV](https://imgur.com/a/SmMvlzV)
mm not really, pays well, sure, but I've seen other languages being paid higher or equally \(like ruby, there was a time when the prices for those guys skyrocketed\) About python being easy, yes, its really easy to do simple stuff, but it gets trickier the more you dive in, also, most of the time you are not hired just to puke python code, you need a specific set of skills that take lots of time to learn, same happens with python
Yes! BS4 is freaking spectacular!
I love it. Go has it \(gofmt\), JavaScript has it \(standardjs\), and now Python has it \(black\). It's a huge time and energy saver!
Oh! Neat. The Wiki says it could even take java source code straight to machine code, along with being able to take java byte code to machine code as well. That's pretty nifty. 
It does? It's usually the type of engineer you are. Are you using Python for systems engineering? Front end dev? Backed? Both? Data science? A lot of languages transcend multiple of these categories. Data science is for sure most commonly Python though.
I'm working on a data visualization tool that scrapes the job boards of companies using BeautifulSoup and creates heat maps of the skills that are most in demand for engineering roles (C/C++/Python/Agile/Verilog etc.)
In my opinion it's the best tool added to the Python ecosystem in the last year. I use it on every one of my projects. 
I hope you're not basing "easier and more pleasant" based on toy examples you see on crash courses and tutorials. Even the data science examples you may have seen online and in books, where you are given clean and simple data sets. This is only a small glimpse of what you would see working on real-world problems with messy data sets.
Welcome to the party! There's /r/learnpython, too. And when It first learned it I used [CodeAcademy](https://www.codecademy.com/catalog/language/python). It was free, then, anyways.
I keep using splits when I should probably be using regex but fuck regex, I will use the hacky method instead
I use it at work, it's pretty nice
It's really nice, swapped out yapf for it and haven't looked back. There's a few funny things it does but it's usually because I've crammed too much into one line and a tiny bit of refactoring makes it better. I guess my biggest complaint is that black wants to put logical operators at the beginning of a new line and flake8 doesn't like that. Pretty trivial to make flake8 happy in that case but it's annoying to be sure. 
😂😂😂
thanks.
Even at large corporations they love it. Google loves to incorporate python and its creator worked their for quite a few years. Probably related, but it's a powerful language and even if it's not the fastest while running, it is still a huge advantage to be able to build something in such a short period of time, especially when there are so many libraries that allow you to hit the ground running on just about whatever you want to do
Yeah, that case is pretty ugly and vertical-space wasteful, but it otherwise looks pretty good. 
&gt; chemicals management That's code for making LSD, right?
Pyboard allows for python in embedded applications! As well as an Rpi with python bindings for the GPIO!
Write it on the vanilla terminal first. Write it out with ifs if you have to. Then optimize and shorten it. I'd say the generator is harder than the solver.
well, pypy its python written in python, you could writte python in any turing complete language, there are a couple of gotchas of course
Oh I agree. I totally messed up my post, I meant to put "haven't upgraded in years".
Recruiters are shite. If I post my resume on Indeed, I will get multiple calls a day for weeks by recruiters (none of whom speak enough English to have a conversation with) with short-term contract positions in all sorts of random places all over the country. My profile makes it explicit that I will only accept full-time positions and I have a very limited list of places I'm willing to relocate to. Sorry, but I'm not going to uproot my entire life for a six-month contract in Bumfuck, Iowa. I've even had to C&amp;D some recruiters who kept repeatedly spamming me with the same shitty contract position in the same shithole city daily. I'll cc their firm's CEO, general counsel, head of HR, and anyone else important I can find with some searching on the C&amp;D notice. I've gotten some profuse apologies from high-level executives that way.
[https://github.com/pybind/pybind11](https://github.com/pybind/pybind11)
Hi, I see your passion for programming on your website. I am definitely interested. Would you please send your resume to lid@ruyi.ai if you are interested in this full time job?
Ia, ia! 
Welcome to the Python community! Others have mentioned good resources (#python on IRC, etc). Another good group of people that like to help is [pyslackers](https://pyslackers.com), we have targeted channels (on slack) to all sorts of interest areas. _disclaimer: I am a long time member and an admin on Pyslackers_
I found out today that I can parse XML with it too and fell in love all over again. 
well, I need that done in an automatic manner. I can't select a table manually. Yes, digital pdfs
It's very similar, to the point where you won't at all need a tutorial. I googled "python 2 3 differences" and found [this article](http://sebastianraschka.com/Articles/2014_python_2_3_key_diff.html) listing all the ones I know of
My point exactly. There is no need to deal with the underlying database data dictionary tables in java, there is a jdbc standard that must be implemented. https://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html So use a simple java program, marshall to json and have at it. I can provide one that does that, I can put mine on github.
I am currently going through this exact same phase and completely agree. What amazes me the most is the flexibility of python, there is a library for everything. The code I am working on is merging 6-7 of those. I am much further than I ever expected to be in my project and the satisfaction is real. 
The point is that *you* don't have to use double quotes. They even say in their docs that single quotes are easier to type, so write what you want and just let black handle how the file looks when it's saved.
Python is very much used to build websites. It's generally taken more seriously than PHP, about equally to node and Ruby and less so than Java and Go. It's not considered "enterprise", but neither are most languages (C wouldn't be considered "enterprise" for the web).
If I remember right, tabula is written in Java and can be used as a library. I didn't have a ton of luck with it for my case given the non-uniformity of my PDFs, but it's worth taking a look at
Lucky you! The page and instructions are new, which will help new users.
For connection strings for other databases: [https://github.com/mkleehammer/pyodbc/wiki](https://github.com/mkleehammer/pyodbc/wiki)
The reason they are called scripting languages is that they are often embedded into programs that also include highly efficient code like graphics renderers. These programs do indeed include the next hot game on the PS4. Most of those games use some form of embedded scripting language to make development faster and less error prone. These days that is usually lua instead of python. However that has more to do with concurrency support in the interpreter than anything to do with the language itself. 
Ctrl+F5 will force a cache refresh. 
I was at PyCon a couple of weeks ago and discovered that big companies like Google and Facebook/Instagram are using type annotations on their codebase, helped with MyPy. So, yeah. They said that having type annotations made their developers happier.
I would use it, but I also have a large project that uses single quotes and I’m not willing to muddy up the commit history in nearly every file. On new projects though, I plan on implementing black. 
You sure? Some people have success with MicroPython. Whether it can work for your embedded project depends on the specific constraints you have to satisfy. Definitely not for a majority of projects but also definitely worthy of consideration.
How does it differ from PEP 8 extension you can use jupyter notebooks?
Astra looked interesting till i saw it is dependent on 2.7. At this point in time I’m not interested in buying a 2008 used car, so I’m a little perplexed why the hell someone thinks that 2.7 is worth sticking with. 
 python -m ensurepip
You need to define what "no luck" means. What isn't working?
"without any option" is not exact. The line length is an option. Our projects use ' instead of ": lighter to read, faster to type. If black had one option to prefer ' instead of ", I would adopt it instantly. (I am a big fan of gofmt for example)
MyPy seems to have a lot of interest and is getting lots of usage in corporate environments...or at the very least they're taking type annotations and doing there own thing with them even if they're not using MyPy. Why do you say it have "very little actual interest"?
Thanks for the suggestion :\)
I'll have a look at it. Just borrowed the book from library.
your line was far too long to begin with
Exact lol. I do the same thing.
I'm just starting to learn Python, trying to use a package called "ClearMap" that takes whole-brain imaging of mouse brains and detects fluorescent neurons and then registers them onto an atlas. Shit is hard yo. [Here's a pretty sweet video of a cleared mouse brain with fluorescent neurons if anyone wants to see.](https://www.youtube.com/watch?v=y5x2q6rz3Ow&amp;t=1s)
Welcome! Python is awesome, you have made a sound choice. I use python for cmdline tooling and website creation in Django, mainly. 
Your comment lack of an uppercase Y and a . at the end. I think you are missing the point.
Without being familiar with the source, it looks like you should be able to [modify what it checks](https://github.com/ambv/black/blob/master/blib2to3/Grammar.txt) to suit your own needs.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [ambv/black/.../**Grammar.txt** (master → 230f1d2)](https://github.com/ambv/black/blob/230f1d277c96ff7d19b7b86ce2446d4639e54d3c/blib2to3/Grammar.txt) ---- 
That would be missing the point of black. The whole concept is that you can't configure those things.
Good on you, OP. Backporting features into 2.7 is the logical choice here. Much more logical than the absolute goatfuck that is the decision to not make python3 backwards compatible.
Yes. Yes. No, it's not true. It's just that mypy solves a specific problem, and that a lot of python users don't have problem. You want mypy for big projects (large teams or huge number of lines), which is a size most python project never reach because by nature the language allows you do to a lot with little. However, I would advice anybody to try to setup mypy for its editor (pycharm and vscode has the best support). Indeed, even if you don't add any type yourself, you still passively benefit from some type checking at nearly zero cost. And it's always nice. 
Ignore it? Doesn’t sound like a productive discussion is to be had. Full disclosure: I did not google what ‘naff’ means it sounds like a Britishism and a bad thing to be?
this is incredible
You can build complex machines with your mind.
i think you've missed the point, you use too many characters
What? Think about it... what do you have to do to type "?
Naff is about two levels beneath mediocre, with a splash of social derision thrown in for good measure. 
' takes one keystroke, " takes two
&gt; import antigravity
Have to hold shift for double quotes whilst single quotes is just a single key press. Single quotes is a keystroke less and based on how most people type is also probably every so slightly less straining on the hand (though one really should be using left shift not right shift else you move your hand from the optimal location.) 
I've always preferred using more vertical-space to fitting more data on one line. Generally a function isn't going to take more than a page anyway, and if it does, it might be worth taking a look at and splitting into better logical units.
It is necessary to be independent from the web. Also, i wanted to make an application from scratch. It's more about actually doing it. Not the results :)
For someone who knows a library it works pretty well for me, but for new people, it helps them out a lot. Other than that, I don't think most people run it.
I agree with __xor__ but it's not important. The point of black is to not have those arguments. 
Because you don't need to press shift. `-` is often preferable to `_` for the same reason, in filenames for example.
I’m on the same boat dude! Just started this past weekend and I already love it. Nothing like the satisfaction of running a code and seeing it work out :) Best of luck homie! 
Yeah, alhough I find autopep8 is slower and not checking the ast is really freaking me out.
On the american QWERTY keyboard.
Ah ok, im on the german QWERTZ layout and have to press shift for both :(
Im on the german QWERTZ layout and have to press shift for both :(
Im on the german QWERTZ layout and have to press shift for both :(
Satisfying until dynamic typing fucks you.
You might want to have a look at Dash: [https://plot.ly/products/dash/](https://plot.ly/products/dash/)
So which is the 'parent class' in this case? The Open Source Licence?
Unfortunately the recipe in the blog post didn’t work, I tried for many hours tweaking and trying! Thanks for your support.
Thanks, I will give it a try.
Spot on, its a British slang term.
Thats the thing, im a vet as well, its not getting to me, I just need advice on dealing with divas like this. How do i get this more junior engineer to provide his own reasoning on technical discussions?
Would you follow-up with an article titled "Why write blogspam?"
Same here. Until it compromises on this, it's a no go.
Thanks! I had seen Selenium around but wasn't sure how it fit into the picture. Will play with it!
Welcome to the club! I just shared your post with a chemist friend of mine who's not so persuaded she should jump in :D
Someone who uses Powershell has no right to criticize Python.
Cool stuff man
What exactly do you setup? (in vscode)
Ahh gotcha
Your comment lacks of precision... Your first statement makes it sound like parent's comment should be "your line was far too long to begin withY.".
We use it in our CI pipeline: if mypy isn’t happy, the build fails. We’ve been adopting typing gradually, though: as we write new code or touch existing stuff, we annotate it. And when we write new annotations, we require them to be accurate.
That's a matter of personal taste and specific context. Yes, it is "too long", but that doesn't mean it is worse than the output, because you could say the second example is "too wide"... making the code longer, maybe unnecessary.
So can I have both? Because, and I think this is somehow an established thing, you use single quotes for key dictionaries and other non-translatable words, and you use double quotes for string intended to read by humans. It is important to distinguish between them.
No yet but my current employer has several java and python bots running on a windows server. I guess it'll be interesting in the future.
For mypy or everything ? Mypy is very easy, you just have to install it, go in the settings of vscode, and set "python.linting.mypyEnabled": true. I like to set python.linting.mypyPath" to the absolute mypy path because it avoids confusion with virtualenvs and such, alhtough it works without it most of the time. VSCode uses the following params: python.linting.mypyArgs": [ "--ignore-missing-imports", "--follow-imports=silent" ], But for a better output, it's nice to put in your project parameters: python.linting.mypyArgs": [ "--ignore-missing-imports", "--follow-imports=silent", "--python-version x.y" ], This way you have the EXACT Python version type check. It's even mandatory if you check 2.7 code.
It always is. :)
Powershell? That explains it. You have to be a *real* programmer to appreciate Python.
MyPy is the #1 python helper for code refactoring that I know of. We use it in some places at work, mostly on all kinds of "library" parts of the project. Having it kills off a lot of "entry data" style unit-tests. And while it sometimes feels a bit verbose (especially considering indentation of function descriptions with default parameters.. yuch. ) it is generally a good thing.
I wrote a Java bytecode optimizer that took in standard JVM bytecode as output by Javac and made optimized it. That was written in C++ (it was a long time ago, when J2ME was still around, and we had 64K limits on Jar size, so optimizing the code was worth it).
Alternative solution: use the excellent [pyenv](https://github.com/pyenv/pyenv). You can find the system packages to install here : [https://github.com/pyenv/pyenv/wiki#suggested\-build\-environment](https://github.com/pyenv/pyenv/wiki#suggested-build-environment). And then: `$ git clone` [`https://github.com/pyenv/pyenv.git`](https://github.com/pyenv/pyenv.git) `~/.pyenv` `$ ~/.pyenv/bin/install 3.6.5` or any other versions. Then you create your virtualenv : `$ ~/.pyenv/versions/3.6.5/bin/python -m venv ~/.venvs/my_project` And activate it : `$ ~/.venvs/my_project/bin/activate`
Also a small sidenote to use requests efficiently. Chrome is a great browser for its dev tools. Hit the F12 key and go to the Network tab. There you can see the requests sent by your browser to the website. It's handy to automate logging into a site without an existing API, or posting comments, accessing some data stored in a json on the server... The inspect element is also very useful to have as you can get the class, id, and tag of the element you want quite easily, and then process the specific element with BS4.
I use it
Pip is just a small tool, it doesn't ship with any packages other than the ones it needs in order to run at all. It does, however, know how to download packages from [PyPI](https://pypi.org/). There is no need to manually go through a web browser and a website; pip downloads the packages directly, and then automatically unpacks and installs them for you. That's kind of the whole point of pip.
Thanks! makes a bit more sense now! :D
Thanks!
Would you believe you can make a lucrative career from this?
I'm learning Django these days. So, I'm working on Hackernews Clone using Django
Yes, the GPL is an open source/OSI approved license. 
What does black offer that is different from yapf, which has been around for years? 
Dash spins up an Flask instance \- which acts as webserver so you connect to localhost:\&lt;whatever\_port\&gt; But as mentioned above: Jupyter Notebooks is probably better suited for your needs...
If you want something more configurable, you can use yapf with `COALESCE_BRACKETS=True`. https://github.com/google/yapf#id9 
The PPA is a decent option, just sudo add-apt-repository ppa:deadsnakes/ppa sudo apt-get update sudo apt-get install python3.6 
Given that there were no offending lines on the GitHub repo and that most likely the developer's PyPI account was compromised, would it be safe to assume this can be mitigated by refactoring my projects to install modules directly from Github source rather than PyPI? Trying to figure out what would be drawbacks of it.
Why even bother answering? 
Because I hope I can encourage someone to read the source code and learn, instead of happily accepting the fish.
No I don't. No configuration is the main feature of black. Besides, after trying all the autoformatter, it's the fastest, easiest to use and to install. I give a lot of Python training, and trying to get students to use yapf is just painful.
Not sure of your needs but i found this lib : https://github.com/nehz/pubsub but it seems unmaintained. Why not use a simple queue ? https://docs.python.org/2/library/queue.html The paradigm is similar no ? 
Facebook have their own tool, but aim to keep it compatible with MyPy. https://www.facebook.com/notes/protect-the-graph/pyre-fast-type-checking-for-python/2048520695388071/
I agree with the idea, but perhaps a condescending approach isn't the best one when you're trying to encourage someone do to anything, and it's certainly not the pythonic way to do so. Just my two cents
`"` over `'` is the only thing that prevents me from using it. `'` is cleaner to read in my opinion.
i had no idea people still used IRC over text discords.
Ok cool. Thanks for explaining it :)
There, a more active project: https://github.com/schollii/pypubsub And an almost exhaustive list: https://code.activestate.com/pypm/search:pubsub/
Thanks! Really helpful 
No problem! There are many open source licenses, like BSD, MIT, etc. Also, some are "open source" licenses but not OSI approved/open, those are called "source available" licenses.
Same here, helps pick up errors early.
“Not a programmer” - then fuck off lol Don’t try to teach me about programming 
Have you looked at the threading primitives? What you want is basically a python queue for every topic and each consumer thread using a blocking get().
&gt; It's definitely at the point of being stable While it is true that mypy is stable enough to be used by thousands of developers at many large companies, I do want to qualify this that we are still considering ourselves beta. We might break things (though we try our very best not to, unless really needed). You can pin to a particular version of mypy, and when you update deal with changes (if any). Many projects find this a good approach.
So this is some kind of gofmt for python ? Pretty cool :\-\)
Takes approximately 20 minutes to learn and internalize all the differences. 
Hey :\-\). So my personal plan is to create a basic \(at first\) open\-source endpoint management solution, similar to Mcafee ePO and Symantec's SEP. The client will be running PlugSy as the engine, with a whole bunch of plugins to provide the functionality. I'll have a plugin for communicating with the Api, one for accessing and manipulating the Windows registry, one for accessing and controlling services, etc. The client component will run as a PyInstaller executable on each endpoint, which will be the agent. I'll then be creating the server component in Flask. I'll be starting off quite basic and adding functionality via plugins when ready. Nevertheless, you could use a plugin framework like PlugSy for all kinds of stuff! In the future for example I'm considering taking at look at pygame, and seeing how PlugSy could fit into a basic games engine.
I think the reason why someone prefer " over ' is another language experience. My first was C, and I prefer " in python for strings, since in C " means "string" (array of chars) and ' means single characters.
&gt; languages that require so much syntactic sugar that they give you diabetes. This is basically the opposite of the definition of syntactic sugar. Syntactic sugar is elements of syntax that reduce how much you have to type, and/or make what you have to type easier to understand. Python has lots of it, which is part of why it's so approachable. A word that would make more sense there is 'boilerplate' (more-or-less generic bits of code that you end up repeating all over the place in languages like C, C++, Java)
The next release of flake8 looks like it'll have W503 turned off by default. pycodestyle has had that for a while but flake8 is very conservative with upgrading and I have other limitations that prevent me from upgrading it independently. 
I use it in a couple of projects personally. If work decides to make the hop to py3 instead of replacing the py2 systems with node and dotnet then I'll absolutely push it as a tool to be used. 
Okay - I feel stupid now :)
Nice introduction to ML
&gt; I only have to communicate between threads If you have only one consumer, then the most sensible way of doing that is using Queue from standard library. 
/r/learnpython
Automating the data entry of my job. I'm working as a QA, supporting 6 to 8 developers, and we have to do mostly manual testing due to the project we're working on. We use ALM for storing our qa tests, but the site is clunky to use, and it's gotten to the point where I'm fed up with entering the test results by had, so I'm using pyautogui to automate clicking around and doing the entry for me. The little bit of automation I've already done with pyautogui has made that portion much more manageable and cut down on the time I have to spend not doing testing, or writing tools for them.
&gt; Python is an interpreted language, meaning that it isn't compiled into machine code and then run natively. This is misleading. Python source code is compiled into bytecode, which is executed by the Python runtime. Exactly like Java, only the compilation step is automatic. Would you call Java an interpreted language?
You should always use virtual env with python so that you can avoid package conflicts and use/test different versions of packages. Investigate virtialenv and virtualenvwrapper. Then create a python3 virtialenv and you shouldn't have an issue. 
I prefer what Python prefers. What does this output? &gt; &gt;&gt;&gt; "this is a string" &gt; 'this is a string'
cd /usr/bin ls Then find the name of the python 3 and pip 3. If they are python3.6 or something like that, substitute python3 below with that. Here are your commands: alias python3="/usr/bin/python3" Alias pip3="/use/bin/pip3" add them to the file ~/.bash_aliases if that file doesn't exist then use ~/.bashrc
Uglified my code :D ``` python def __init__(self, _user_requests: GeminiUserRequests, _locator: interfaces.ILocatorClient, _config: interfaces.Config, _injector: injector.Injector): super().__init__() ``` became ``` python def __init__( self, _user_requests: GeminiUserRequests, _locator: interfaces.ILocatorClient, _config: interfaces.Config, _injector: injector.Injector, ): super().__init__() ```
you mean when creating a django？thats the problem i found when im putting one into a server.thx anyway
got it.thx im new to reddit
I have had success using pdfplumnr: https://github.com/jsvine/pdfplumber/blob/master/README.md I have used it for both extracting text and tables. 
In which libs does that work?
But how much lines does the xml file have?
Thanks for sharing :)!
I don't understand. What do you mean "putting into a server"? We have multiple Django projects using both python 2.7 and 3.6 and don't have issues. All our production is 16.04 so it's the same environment as you. Maybe you can explain the steps your executing better and we can help. 
Welcome!!
Lol, noob mistake. I did try turning it off and back on again tho.. no, that does not work either. I did some digging and I think I have to change my "Environment Variables". There's seems to alot of root causes and alot of solutions, working through them. basically learning some other things like files paths and etc, which will be important down the line. 
You will have no difficulties to use Python 3 if you know already Python 2. Also, to gain some time: [https://docs.python.org/2/library/2to3.html](https://docs.python.org/2/library/2to3.html)
Humility comes with experience. Python is everywhere - tons of websites (including may UKGov ones) are built with Django, not to mention used in the film industry for automating special effects, 3D in Blender and Maya. Sounds like the guy is doesn't know what he's talking about.
But it IS spam! You are spamming your blog on Reddit. Stop or I'll have the admins delete your account!
Care to explain?
yes, all you need is watching a 20 minutes video, ITS THAT EASY, REAL DATA SCIENTISTS HATE HIM!! 
&gt; No configuration is the main feature of black. Ok, but they are wrong about quotes. Single quotes should be used for dictionary keys and constants, while double quotes should be used for strings intended to be read by humans. That's an established convention and they are trying to eradicate it. (I omitted "In my opinion" to be in sync with black's approach of not discussing about the choices.)
I love your videos man.
I don't consider not knowing how Python works or being lazy at reading the docs is a "trap"...
k.actually it's just that pip3 makes no difference to pip.I use pip3 to install something, and it says it already exists in python2.7??? but pip3 means i want it in python3 right?so i can never get the 2.0version django, it's always just 1.11django in python2.7
As not everybody is aware (this is at the [bottom of the doc afterall](https://docs.python.org/3/library/json.html#command-line-options)), you can achieve this already natively with Python 3.5+: ``` $ python -m json.tool [--sort-keys] in.json out.json ``` 
it seems that's not the pip3 or pip [problem. No](https://problem.No) matter i use which, it always says Requirement already satisfied: django in /usr/local/lib/python2.7/dist\-packages \(1.11.13\).But pip3 means i want to install something in python3 right?So i can never get the right version of django.
OT, but I'm curious.. wouldn't the 'Y' search have almost identical query time via both full table scan and index search? In this case the full table scan costs as much as an index with bad cardinality, right? Of course it depends on the DBMS, but I'm always curious about how those damn dbs optimize my \(nearly perfect :P \) queries.
I have already stopped. Even deleted that already. 
Try using SciPy?
It sounds like you might want to take a look at Mayavi and more specifically [mlab](http://docs.enthought.com/mayavi/mayavi/mlab.html). I haven't really used it, since the python 3 support has in my opinion been a bit of a pain to get working with anaconda. It looks like the anaconda files are all 2.7, so you should be good on that front. However, I've heard its quite a bit faster than matplotlib when it comes to 3D objects.
My reason for preferring " over ' is because there tends to be quite a bit of ' characters in the text strings I write. "We're doing xxx" simpler than 'We\\' doing xxx'. If I switch to " just for the cases where there's an embedded ' then it makes it difficult to look for the start of strings when I'm searching for something. 
Nice to hear good news. Keep it going \w/
Ugh, I quite active on the /r/learnpython discord and I get the feeling that a statically typed language would be easier to understand for many. Especially since many beginners don't use IDEs and as such don't immediately know what methods the variable has and try to .strip a float or add straight from input
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [I made a python cheat sheet](https://np.reddit.com/r/learnpython/comments/82t191/i_made_a_python_cheat_sheet/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
Think the title should be &gt; Facial Recognition in 10 Lines Of Python Using the OpenCV Library
Just enjoy anything that you are learning
 import facialrecognition One liner!!
&gt; How hard is it and how long does it take the transition to python 3 despite knowing python 2? If by transition you mean learning python 3 for new projects, it is not hard. If you mean also port old python 2 code to python 3, that might sometimes prove time consuming. Why do you find google results unsatisfactory?
What you name `toplevel_dict` is not a dict but a list with one or more dict's inside. Try making a function that iterates over your collection and looks for your item (i think by name?): def find_by_name(data, name): for level in data: for item in level['toplevel_dict']: if item.get('name') == name: return item item = find_by_name(my_data, 'foo') if item is not None: print(item)
&gt; Because, and I think this is somehow an established thing, you use single quotes for key dictionaries and other non-translatable words, and you use double quotes for string intended to read by humans I've never heard this before. In some other languages, single quotes are for single characters and double quotes are for strings. I don't think I've ever faced a problem which would have been solved by distinguishing between strings as you say.
They give a reason for why double quotes are easier to consume - specifically, empty strings are less likely to be confused. Anyway, this is all arguing over minutiae - the point of black is that you no longer have to waste time on these negligible differences, and you come out with code which looks exactly like everyone else's, so it becomes easier for everyone to reconsume.
That then depends on every other developer having this extra toolchain. This is my main issue, that you (probably) can't just throw black and pre-commit into your requirements file (because black has very tight version constraints) and therefore assume that your downstream devs get it. Things like `.editorconfig` are great for standardising what your downstream devs are using; there isn't a good way of doing the same with black right now.
This is a question for /r/learnpython or even /r/learnprogramming Anyway, your issue is that the HTML is updated by JavaScript (triggered by the ```startRealTimeISSIconUpdating()``` function in ```home.js```), and BeautifulSoup won't run the JS...it's just grabbing the source before the update. 
Thanks i'll ask the other subreddit aswell. Do you have any ideas on solving the problem?
I'd use Selenium, but that's because I'm already familiar with it. Might be easier if you find another ISS tracking website that doesn't update with JS?
You getting values at zero is likely due to some JavaScript updating the value after the page loads, so that scraping it programmatically won't necessarily be so easy. Looking into this page's source, it seems like the "live" data isn't so much live as it is some estimated path based on initial values from [fetchTLE.php](http://www.isstracker.com/ajax/fetchTLE.php), judging by `updateISSIconLocation()` in [home.js](http://www.isstracker.com/js/home.js), and `Satellite()` in [consolidated.js](http://www.isstracker.com/js/consolidated.js). Perhaps it would be easier to fetch data from another source, such as [Open Notify](http://open-notify.org/Open-Notify-API/ISS-Location-Now/), and parse the JSON instead, which seems to use [real time data](https://github.com/open-notify/Open-Notify-API/blob/master/update.py#L15), but I've only skimmed through it so I don't really know.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [open-notify/Open-Notify-API/.../**update.py#L15** (master → 88c34b7)](https://github.com/open-notify/Open-Notify-API/blob/88c34b793c9b0b299c8e941fd477e12c0b974353/update.py#L15) ---- 
@PinkFrojd yes you're right but I wanted to learn Django first deeply. I will use it with front end library after that. I think it will be better to learn like that. 
You're right, I called it a dict but that was actually the list. I was hoping there'd be a way to access each item directly without having to iterate over them all. In powershell I can do something like `echo thing.value | where {$_.name = "foo"}`, but I don't have access to powershell and bash just isn't working the way I want it to. I've never worked with python before. I feel like I've lost a whole lot of flexibility in favor of stability and readability. What's making it super tough is I haven't quite figured out proper debugging. I want to add a line that stops the script where it's att and drops me into a full shell where I can fiddle with variables without having to edit/save/re-run the entire script.
As mentioned by @hacksawjim, you can open URL with selenium web driver, target certain nodes and scrape data when they are loaded. You can Target them by Claas, id, or some other selectors
I have no idea if it relates, but npr.org changed their cookie policy recently. As of a day or so ago, unless you allow all their tracking cookies and stuff you only get a plain text version of a the website with no audio and very little content.
I don't know how you could find an item in a sequence without iterating over it (implicitly or explicitly). If you must you could re-organise your data so it is a map keyed on your name property instead of a list? Debugger: https://docs.python.org/3/library/pdb.html If you use an IDE like Pycharm or VS or something you have a slightly nicer GUI. Or just slap `print()`'s all over the place. 
I'm using boto3 and docopt to make entry points for AWS lambdas for our bioinformatics pipeline. It's pretty basic, just using boto3 to copy the inputs in and outputs out. Most of the work is setting up the bioinformatics code to work in Docker in the first place.
'top_list = [] for a_dict in data: if a_dict["toplevel_dict"]: values = [] for b_dict in a_dict["toplevel_dict"]: if b_dict.get("name","notfoo") == "foo" and "value" in b_dict: values.append(b_dict["value"]) top_list.append(values)'
python 2 is my go to main arsenal. I am talking about it in a "make it mine" sort of way ? Like imagine being an english prominent speaker and one day everyone's moving onto spanish? My google results only showed people asking questions whether python 2 or 3 is better, which is better to learn and sometimes how to convert from each other.
I also don't particuarly understand why your data is structured that way either. Why are your data layers so nested? Is "id" at the top level serving any purpose besides letting you avoid using the enumerate to add a counter to an iterable?
Interesting. Although I myself havent dabbled with lots of app devs
any recommendations on how one would go about doing this ?
Oh that's fascinating but I'd rather be as proficient with 3 that I wouldn't have to convert everytime.
https://docs.python.org/3/whatsnew/index.html you can just skim most of it
Sorry for my 'Murica-centric world view. My condolences on your wacky keyboard layout.
I think I can relate exactly to what you're talking about here. Just writing code (if it goes well) is really (and especially in Python) nearly pseudocode: *how* to do something. Where it gets really fun is when the code doesn't quite get you there and you're forced to debug. This is the point where you learn *why* to do something. Considerably more rewarding once you figure it out :) Enjoy! PS - I would recommend requests and beautifulsoup if you're interested in more modules. They let you make HTTP requests (i,.e., grab a webpage from a remote server) and parse it for relevant data within the returned document.
ok, one more time: apt install virtualenv virtualenvwrapper mkvirtualenv testpy3 --python /usr/bin/python3.6 python --version pip install django Then, google virtualenv and learn how to use them ... i.e. workon testpy3 puts you back into that env ... most IDE's (pycharm does) should support virtualenv ... experiment, learn, and enjoy
Ok, maybe it is not that established, but I read it somewhere and then adopted it. For example if you work in multi-language settings, you know that the double-quoted strings needs to be translated, or could be changed without affecting the performance. I agree it isn't such a big thing, but still I don't see what harm would it bring if black allowed to configure this behavior.
Have you ever considered switching keyboard layouts? For coding I use a US keyboard layout. When I need to work on Danish text I switch to the danish keymap. It takes a little time to get used to, but it saves a lot of wear and tear on shift and Alt Gr. 
&gt; I don't see what harm would it bring if black allowed to configure this behavior The *entire* point of black is to minimise configuration and enforce code looking as similar as possible across users. It's opinionated. It's open about that.
[Relevant xkcd](https://xkcd.com/1782/)
Yes, that's good. Anyway if you overdo it, lot of people with different opinions will not install it, and the goal will still not be achieved. I actually tried it in my project and liked the results, but then undid the changes since I didn't like it changed the quotes. It looks from this discussion that I am not alone here. So far, so good.
Yep this is probably what you want. mayavi is a total pain to set up, but it has all the functionality you want and it is indeed *vastly* faster than matplotlib for 3D animations
Absolutely. My first lang was C#, and being able to know exactly what I can do with a given object with a single ctrl+space was a godsend for familiarizing myself with the standard library. Even with pycharm (until everyone starts using mypy) the experience isn't that great.
&gt; I'd prefer something outside of IDE-world. Because you don't want to use an IDE in the first place, or some other reason? [Doxygen](http://www.stack.nl/~dimitri/doxygen/index.html) might fit your needs. It generates a HTML tree documenting your code, and with the proper settings will also generete dependency graphs going both upwards and downwards. 
And yet Python is widely regarded as one of the easiest languages to learn! Although statically typed languages can catch certain kinds of mistakes quicker, I think they're trickier to learn because you're simultaneously building two mental models: one for compiling your code, and one for running it. With Python, you basically only need to think about your code running - although there's a separate byte compilation step, that's mostly not important for beginners. Whatever kind of language you learn, there's a separate question over whether it's best to start with an IDE or a relatively plain editor. I'd generally encourage people to start with a simpler editor, because all of the project tools and debuggers and the like in an IDE are extra complications.
Thanks for the reply. &gt; Because you don't want to use an IDE in the first place, or some other reason? Some reasons: * I like emacs * My experience is that easy is a lot easier to modify than other IDE's * IDE's have a habit of dying * Using a standalone tool has a lower level of lock in (you can change IDE while still using the tools) * Standalone tools tend to be easier to patch and will likely have a quicker release cycle * I know the conventions of command line tools / libraries better than I do the conventions of IDE's if I want to push changes back.
&gt; Doxygen might fit your needs Thanks for the suggestion. I've have a look. It might be a bit heavy weight for calling from my editor :), but I guess I call it occasionally to generate the graphs. [Looking at this now](https://www.stack.nl/~dimitri/doxygen/manual/diagrams.html), it generates [graphviz](http://graphviz.org/) which are pretty parseable (there's a library in python). Also it's language agnostic which is kind of true. I'll have to think about how valuable "isinstance" is.
My work life is all about RESTful APIs - I love python's "requests" module.
Maybe useful: https://ipyvolume.readthedocs.io/en/latest/
I'm curious what the advantage would be for using `marbles` instead of `pytest`? Ignoring all the other advantages, you can simply use [`pytest` as a test runner for unittest test cases](https://docs.pytest.org/en/latest/unittest.html#unittest-testcase-support) and it already provides [more information on test failures](https://docs.pytest.org/en/latest/example/reportingdemo.html#demo-of-python-failure-reports-with-pytest).
Reportlab: https://www.reportlab.com/
Be sure to install `tblib` for the traceback pickling.
I'd prefer the iterations to be implicit rather than explicit. Nesting a bunch of `for` loops is ugly to me. I've got my answer, but how would you: &gt;re-organise your data so it is a map keyed on your name property instead of a triple nested list I've used pdb, but there's only so much you can do interactively.
b-b-but my IDE writes all that boilerplate for me, so it's not that much work, and when there's a bug in the boilerplate because of something I've done somewhere else and it takes two weeks before someone thinks of looking in the machine-generated boilerplate, that's just the cost of having obvious bugs pointed out at compilation time instead of at runtime. And waiting for code to re-compile all the time because you're trying to hunt down a runtime bug (or worse, something that doesn't show up in debug builds) is so much easier than dealing with the headaches of concise syntax and only writing code that actually does something.
This post is better suited for r/learnpython
I am still waiting for a good book on it, some years after its release. The people I'd expect to be experts in it? Well, they went and rolled their own libraries like Curio or they carried on using Twisted. I like the idea of it but the implementation seems bad. When I try, it just does not work, or breaks randomly, because I simply do not understand their implementation (for non-trivial usage).
This post is better suited for r/learnpython
This post is better suited for r/learnpython
Yes, sure. This tool intent to save some time for converting your old python 2 codes into python 3. I don't tell you to continue to write python 2 code and convert it with 2to3 each time ;)
Yeah, I remember feeling relief after reading Armin's blog post about [not understanding asyncio](http://lucumr.pocoo.org/2016/10/30/i-dont-understand-asyncio/), in which he talks about how difficult it is to have a clear mental-model of how this thing is supposed to work -- because that was my experience. I didn't understand the thing. I don't think even Guido understands it ([watch this talk if you don't believe me](https://www.youtube.com/watch?v=1coLC-MUCJc)).
Python 3 is not a different language, it is still Python. &gt; Like imagine being an english prominent speaker and one day everyone's moving onto spanish? It's more like switching from one English dialect to another.
I think you are over complicating things for no reason. Just start using Python 3, most likely you won't have any troubles.
I looked into it, and it looks promising. However, it's lack of configurability is a problem for my projects. For instance, we have flake8 configured to ignore some spacing rules for our tests because we do a lot of tests verifying tabular data in a database. It's a lot easier to read with extra spacing in the tests. For instance, we use strict pep8 in the source directory, but in tests you might see something like: assert matrices_match(db.session.execute('select name, nickname from holidays order by name'), [ [ 'name', 'nickname', ], [ 'Christmas Day', 'xmas', ], [ 'Thanksgiving Day', 'turkey day', ], ]) So, while black would be great for our source tree, the tests would not like it
Life was a lot easier before we had to type JSON.
WOW! Thank you for this one :\) 
I have been writing web connectivity applications for the last half year in asyncio. I recommend you don't. It is a terrible experience overall. We need a reboot on the event loop side. We need momentum behind alternative solutions such as Curio or Trio. The sooner asyncio can be phased out the better.
It almost seems like the core developers don't want anyone to use AsyncIO. The documentation is in no way beginner-friendly, talks and tutorials are almost non-existent. How are we supposed to learn what it is, why, and how to use it if there are no official references that are easy to understand? I hope this situation improves soon.
\&gt; It is currently pre\-1.0, so use at own risk. Erk. Thanks but no thanks. I've burned enough hours the past couple of weeks trying to run libraries that *mostly* work.
Please read my reply to p_10_user.
"Do X in Y lines of code with these multiple thousand of line libraries!"
You can't spell "python" without "ytho"
If you're from the south of France that's the right way to say it :)
Hosting and registering a domain are not inclusive of each other. Find a registrar that handles the .ai (namecheap etc) and host it wherever you want.
Asyncio is terrible. There is no reason for users to have to mangle their own event loops. Handling the event loop in the background is what the GIL is for, and abstracting unnecessary minutiae away from users is what *python* is for. Obviously twisted has the same flaw, but it isn't fucking with the core so I don't blame it so much. All I want is javascript's Promises with futures' `as_completed`.
fuck the cloud.
The .ipnb file is here: https://github.com/agiliq/notebooks/blob/master/paint-by-prime-numbers/scratchpad.ipynb
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [agiliq/notebooks/.../**scratchpad.ipynb** (master → a547002)](https://github.com/agiliq/notebooks/blob/a547002c2cd3945261a69338b275e4cd8d06594c/paint-by-prime-numbers/scratchpad.ipynb) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dzigxqj.)
Good bot.
Unfortunately I don't like the road Python is taking lately, first v2 vs v3, now asyncio. Lately people are going crazy about Data Classes, but they are just (worst, more verbose and mutable) named tuples. I'm not saying this stuff because I want to troll someone, or start a language war (please, really, please don't...) but because I like Python for doing many things and I'm finding myself using more and more some other language. And I can't be the only one feeling like this. 
Thank you, shabda, for voting on GitHubPermalinkBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
I don't know what you would consider a non-trivial usage, but I implemented parallelized URL downloader and it worked as expected. The general idea isn't that difficult - when you implement function as asynchronous, you can "jump out of it" before it ends via "yield" or "await"... at exactly that point, the program will continue with next function in the loop, at the point it was interrupted in its last run. The advantage is that you can (and must) explicitly define those points of switch. The disadvantage is that your code is literally polluted with those asyncs and awaits and it is harder to read what the program actually does. I later switched to gevent, which is much more intuitive from programmers perspective, you just implement function and then call it asynchronously. (but you don't control where the switches are occurring).
I thought about creating my own by logging which keys i press for some time and then designing the perfect layout for my typing habits and style. How does it feel to change the layouts? Is it more like talking a different language or more like driving a different car?
To add, literally any decent hosting provider doesn't care at all about your domain name. - You get your domain name - You point your domain name to the IP your hosting gave you. - Done 
I think that a \(healthy\) signal of the state of affairs in software, you can pretty much get away with only using free software. However, there are some commercial products that people do pay for, some of them hide in plain sight, some are more obscure, hence this thread.
My god, they have serious users: Wikipedia, HP, NASA! I wonder how the "ReportLab Markup Language \(RML\)" compares to LaTeX, which is the standard in academic circles. Are you a user of Reportlab?
I literally do this all the time
It is actually highly likely that many of them has given up on it. If you read Nathaniel Smiths blog, you can kind of get the gist of how everybody in core is pretty unsatisfied with how it has turned out.
Python is huge in data analytics in general right now. Especially anything that has to do with generating graphics or doing any in-depth statistics. Tons of really great modules like matplotlib, seaborn, numpy, pandas, etc. Bash is great for automating things you could do on the command line but if you want to broaden your scope to generalized analytics on any kind of data set python is definitely the way to go. 
This is literally the most trivial use-case I can think of.
How about putting your script in a function then when you run it, you can move the window out of the way and then call the function in the shell.
 ''.join(map(str, some_iterable))
 ''.join(map(str, some_iterable)) for s in filter(some_regex_object.match, list_of_strings): ...
Not sure if this is intentional as a reference to OP's code, but just do `map(f, [1, 2, 3])`
What? Python was just as popular a few years ago and there were certainly people back then who knew what bad code looked like
&gt; r/geek You didn't have to say :p
\&gt; Does OpenEye have a commercial license? yeah, for companies I think it's \~$60,000 per year per person, and for academic labs \~$10,000 per lab per year. You can apply for a free version under certain conditions, like non\-commercial use. I think this is more than reasonable since the products the company developing that library re centered around that library, and the staff has to be paid somehow. \&gt; but I think that's exactly the place to look if you want to make something open source I think the problem is that it's really not trivial to develop a software package like that. Recreating that would require 5\-10 domain experts and professional programmers for 1\-2 years and except pharma companies, I wouldn't know who would fund that \-\- and pharmacompanies actually do develop\(ed\) similar tools in\-house.
Without a doubt ;\-\)
Okay, so here is the [code](https://pastebin.com/YZ0dr3C9)
I'm planning on fixing and writing better documentation for the pykinect for Kinect sdk 1.8
Same skills, different attitude.
`''.join(str(x) for x in some_iterable)` feels more natural to me, even tho it's slightly slower. The latter makes a lot of sense. Thanks for those, very helpful to see others' code.
At where I work we have a number of non-trival Python code bases and we now have typing hints and Mypy as a "best practice" and any new code should use it unless there is a good reason not to. The error checking aspect is useful, I personally use it constantly, but most other devs really appreciate the documentation aspect of using hints and also the improved IDE experience (PyCharm). It takes a lot of the guess work out of working on big Python code bases. If you want to improve your development quality and speed then type hints and Mypy is what you should be doing. I'm convinced from experience that this is a much better investment than things like unit tests or TDD. 
Yeah your right he should have started from a level playing field and implemented the CPython interpreter. 
God dammit Pooja
Ok, just woke up from a nap so not fully awake. But I'll start with your URL. You're never actually changing it to reflect the key or location. Look into formating of strings. 
Print your URL. What does it look like? 
&gt; Data Classes, but they are just (worst, more verbose and mutable) named tuples. This depends how you describe it. You can say they are mutable named tuples with some handy methods backed in. The alternative would be to create class with __slots__ and implement those methods yourself. Now the language does it for you automatically, I don't see anything wrong with it.
If you want to spice it a little bit, instead of with REST API, try using "Webhooks for Instagram". It's better to use that and I guess your purpose will be served too. I would also like to know your progress. This is an intersting project. It you could write a blog about the same on Medium or any other blog, that would be awesome!
The url is fine, I think that the problem lies somewhere here: w = weatherData['list'] print(f"Current weather in {location} is: ") print(w[0]['weather']['main'], '-', w[0]['weather']['description']) But I don't know how to fix it...
I'm currently using boto3 to interact with AWS EC2 instances. There's a lot to learn, via digging through boto3's documentation, interacting with remote servers via SSH (and using Linux), bash scripting (and using crontab). I also learned how to do multithreading (waiting for multiple network responses is an ideal use case). I've learned how to use argparse (since it's a command line script with various commands) and separate the functionality across files. I've also learned how to create a PyPI package with it. What I'm trying to say is there's a lot you can learn with boto3, and running a small instance only costs a few cents an hour.
[No](https://en.m.wikipedia.org/wiki/Reductio_ad_absurdum).
this guy has posted his shitty videos to other subreddits too
Or you know, be more honest. "Do X using the Y library". Saying X lines of Python is disingenuous which is where my issue comes from.
This post is better suited for r/learnpython
Print w and have a look at it for yourself. 
Just finished writing a code that solves for exact equations. Been trying to write code for different concepts I've been learning in my Differential equations class so I can get a better understand of DE while also practicing python.
I'm agree with you
ahh, I overlooked it, thx!
Yes that is true. If you wouldn't mind, please see my response to p_10_user. Depression is not a disorder. Clinical depression is. I don't mean to quibble over the difference as that's not the jist of what I was trying to communicate.
Hey, Bandung, just a quick heads-up: **jist** is actually spelled **gist**. You can remember it by **begins with g-**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Your Github link shows everything fine, but the post you linked doesn't show Out[7] properly! I'm on MacOS High Sierra on Chrome. Really cool notebook!
So then print weatherData and look at the available keys, you will probably see that list is not there though be selected. 
And I hope you have an API key to use! 
Nah, if you can use backreferences to count matching parentheses or determine if a string is a palindrome then you're using features that make your regex matcher strictly more powerful than actual regular languages and that allow you to match matching tags 100% correctly. Nobody does that when parsing html of course. 
https://mywiki.wooledge.org/XyProblem
vscode
I'll probably get some hate for this but I like VS Code by Microsoft. Its open source, has tons of plugins, etc... I think its a good middle ground but that's just my opinion. https://code.visualstudio.com
lol. Also this PyPi package is pretty rad too. [https://pypi.org/project/face\_recognition/](https://pypi.org/project/face_recognition/)
I think the idea is to emphasize the low effort required rather than what tools are used. I prefer the latter too.
In what context would this be useful? Pretty cool though
Which other languages do you use? Just curious.
Thanks for compiling this list! There's bunch of interesting stuff I had missed out on, apparently!
Then why even mention Python?
You could probably do what you want with a custom build script in ST3. I used to have ones for finding/running tests for the current file. Not a ton of work tbh. 
I was relieved when I found out there were so many others who also didn't understand/enjoy the asyncio implementation. I spent countless hours staring at the documentation and watching Pycon videos trying to 'get it'. I wanted to use it so bad!
if you already have a job lined up, don't bother working for free!
Never
Yes, I started using it about 6 month ago and haven’t looked back. 
Yes, I started using it about 6 month ago and haven’t looked back. 
I highly recommend Spyder IDE. Recently defunded, which is a bummer, but still a great editor/IDE in my opinion. I think it fits the middle ground between text editor and Enterprise-scale IDE much better than anything else. Unlike pycharm, you can easily make one-off scripts with it and run them directly. When I last tried pycharm you needed to make a project for everything, and I wasn't a fan of that.
Hey, I have a specific project that I have written: urlscan\-py. Urlscan\-py is a wrapper for [https://urlscan.io](https://urlscan.io)'s API \(if you haven't heard of them, they offer a great service\). It definitely works, but I'm no programmer. I could definitely use a lot of help to make it better. :\) [https://github.com/heywoodlh/urlscan\-py](https://github.com/heywoodlh/urlscan-py) Feel free to fork it, make it better and then submit a pull request if you so desire. Or not, whatever you prefer. In regard to other ideas: 1. Follow a bunch of different programmers/security experts on Github and watch their activity on your feed to see what projects they are working on. 2. Look at what the people you follow on Github have starred. Lots of really cool projects I have found have been through other people's stars. Hope those are some good starting points. Good luck! 
either spyder or vscode
In python, selenium for browsers and winium for desktop apps. If it does not have to be python, autohotkey component object model for browser and excel. Maybe try autohotkey's controls for desktop apps.
I'm saving this!
I use Python a lot (I'm a data scientist), but for data engineering stuff I'm using mostly Clojure. Then it depends, I also use R, and a bit of Java and js.
You check each number if it’s even and add it to the sum if it is
yeah i got that, but i have no idea how to write that so it will work
http://pythong.org Yes, it exists.
I actually thought it would recognise individual faces :(
I think that open source project contributors are able to rack up an awesome resume based on the stuff they do for free. I mean, tons of people contribute to open source projects for free and everyone is better for it, including themselves when they become a contributor. Working in open source gives people who code experience and a public venue to show their accomplishments. Plus, they make the world better for people who don't know how to code.
Have you tried searching Google? Try inputting "How to sum only even numbers Python"
def even_sum(nums): sum=0 for i in nums: if i%2==0 sum=sum+i return sum - could this be the answer?
Extensively at work for some of our internal tooling and APIs… just not Jupyter notebooks. The only annoyance is all the ignores I must put in to work around SQLAlchemy. Even then, it has found bugs in my code.
This post is better suited for r/learnpython
This post is better suited for r/learnpython
ah okay, thank you! 
That's not true. I'm the asyncio maintainer and I simply, physically, don't have time to rewrite the documentation. A lot of my time is spent on fixing bugs in asyncio, adding features to it, thinking how to make it more usable, reading Nathaniel's blog posts, and maintaining uvloop and CPython itself. Any help is welcome, btw.
Only in the beginning. Once a project reaches a certain size it can become really difficult to keep track of what’s happening where, when especially if you’re trying to debug something.
Can't you just run your Python script from within Sublime? F7 works for me. If I really need to test something separate from my codebase I'll just create another script locally that does all my imports/cd that I need to do. You can customize your PyCharm errors to say that typos are not warnings/errors. Typically I just have a sandbox environment open I can write small throw-away scripts in. PyCharm also has a scratch editor if you want to write a quick one-file script.
&gt; But we really really need a sane event loop to run things on. We're working on that. Meanwhile, you can go and post your suggestions to bugs.python.org or various mailing lists instead of posting them to reddit where they can't be acted upon.
Given your background, I'm curious - have you taken a look at Nim? I really like Nim's class system, but the lack of "immutability by default" keeps me from really diving in to it.
Considered just using Linux? For simple scripts its so easy to do everything in the shell. I tried switching to an ide from vim/command line and couldn't force myself to like it. I guess you could do the same in a windows shell, but I don't really use windows (just for the odd video game), so I'm not sure about that.
I knew all the comments would be complaining about the title, but to me when I see "do X in 10ish lines of python" I read it as "here's a really concise quickstart on using X library", and it was! Here's the code: https://github.com/jg-fisher/faceRecognition/blob/master/face_rec.py And yep, that's a good quickstart on openCV. I had no idea you could get greyscale images from the webcam so easily. Very cool
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [jg-fisher/faceRecognition/.../**face_rec.py** (master → 398a7ce)](https://github.com/jg-fisher/faceRecognition/blob/398a7ceabdf9dfbdf563ccc0e8a7978d452474f0/face_rec.py) ---- 
you seem to suck at reddit
No, I never tried it, but I'll gladly look into it! The issue is at work I have very traditional colleagues, many know 1, max 2 languages and are mostly users, so I'm pretty much limited by this fact. Even Clojure is somewhat an issue, though I can make code that can be imported as a Java class.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I am getting heavily into Elixir now where async is the rule for everything. There it is perfectly easy to understand. It feels elegant and natural. But then, BEAM and the Erlang ecosystem is designed for this sort of thing from the ground up. I cannot make any sense out of async in Python. It's like an alien appendage. It's there, but it doesn't feel like it belongs there, and it doesn't blend in well.
I'm not sure what MS did with their customized installation of Anaconda but I've had all sorts of trouble with it. Others have suggested going with the regular Anaconda distro. I haven't tried that yet as I'm serously thinking of running Android as my primary system.
I asked a portion of your question over in /r/learnpython and provided an answer as well: https://www.reddit.com/r/learnpython/comments/8lwjou/how_does_python_handle_all_the_system_type_things/ 
Exactly my sentiment too. I can't wait to wrap an entire program into a function called program() and make a video "Hey guys! Do X in just 1 line!!!!1111one"
Not in my experience, but of course your mileage may vary. The biggest async project I ever worked on was using gevent extensively and it felt almost like cheating. Low effort, great results and great maintainability.
First, thanks for your work! Second, I think that's sort of the problem -- that there aren't enough people interested in helping you to update something as important as the docs. Hopefully that will change.
I've idly been wanting a larger writing project -- I sort of miss doing the "What's New". Do you want to help assemble an outline and then I could go off and write the text for a HOWTO, tutorial, or whatever type of document is missing? If you're interested, please send me an e-mail or PM! 
Well I don't think anyone thought he would make it with 10 lines not using a library.
Now all I need is "Machine learning in 10 lines of Python".
I bet your comment doesn't look as good when the core maintainer turns up. It's like you were saying this stuff with him standing right behind you the whole time. 
&gt; I wonder how the "ReportLab Markup Language (RML)" compares to LaTeX RML provides convenient way to express PDF idioms, nothing more. &gt; Are you a user of Reportlab? No, but I know many who were very happy with it.
Done :)
My first project was a simple web scraper that went to the website of my favorite radio station throughout the day and kept track of how many times each song and artist were played. Two text files were written/overwritten to show the counts for each. I had planned on making a website or app to display the information but never got around to it. I also wanted to add features like weekly rankings or a histogram of the years the songs came out. 
I've now had pipenv hang on Mac OS X, Ubuntu 16.04 and a brand new week-old Arch Linux... The Arch Linux system had no prior baggage. And it doesn't hang at the "Locking [packages] dependencies..." step, although that takes quite some time to finish. It gets as far as: Pipfile.lock not found, creating… Locking [dev-packages] dependencies… Locking [packages] dependencies… Updated Pipfile.lock (hex)! Installing dependencies from Pipfile.lock (hex)... [...progress bar...] 10/11 - 00:00:00 and there it sits indefinitely. (It has behaved this way for several different packages on the Ubuntu system. This i my first go at it on Arch.)
I'll echo a lot of others here, asyncio is clunky at best. I've used it once in an HTTP client app that I run in AWS Lambda and. . . if I were to write something like that again, I would happily use either of the following: https://github.com/gwik/geventhttpclient https://github.com/ross/requests-futures OR I'd use Go (goroutines, channels and an HTTP client library). tl;dr asyncio's syntax is difficult to grok and it's chock full of gotchas and weird behavior. 
THATS RIGHT FOLKS! You too can post shitty videos, ITS THAT EASY, REDDITERS HATE HIM!! 
I dont think wsgi has anything to do with async
i think it's the immutable data structures at the core of the language which makes async in elixir/clojure a lot easier to use/comprehend. Python will likely never have immutable data by default. 
Yeah, I'm not going to lie, I will always love Python but Go is quite a bit better for concurrency. For me, Python and Go are two great tastes that taste great together. I'm guessing you feel the same way __snake_likeGopher.
I've heard similar things throughout this thread and honestly I've never heard or read about that before. Is there a different language you came from or is it a standard practice you know of? I think I remember from pep8 (which is obviously not the end all be all) that they say it doesn't matter as long as you stay consistent. Which I took that to mean you should use one or the other most of the time, but I suppose it could mean that you use each for specific things as long as you stick to it. Just curious 
...and two libraries. FTFY
Intern
Number theorists must be getting really bored. 
Same story here. Was using exclusively sublime text before, but now I only use it for editing single files here and there. For coding on a project, vscode is really top and keeps improving. It even comes with optional sublime text key map, so the transition is easy. 
Not 100% sure about .ai but you can have a look at alwaysdata.com I remember seeing a long list of domains in their domain interface. They also have a free trial including python. 
Lies
LOL
Using python to sort through a 10,000,000 line database, just learned how to do it and boi does it help. 
I run use mypy at work. I have integrated it into my TDD workflow. I run it in strict mode and treat a mypy failure the same as a unit test turning red.
The &lt;center&gt; cannot hold it is too late 
I haven't used praw, but it looks like when you call r.subreddit you are giving it too arguments "all" and "scot..." When it only wants one. Try removing the "all" argument and leaving just the subreddit you're interested in.
The rest is crying in bed.
I did a [similar thing](https://ondergetekende.nl/vanity-rsa-public-key.htmlvery) recently for Rsa encryption keys (which are prime based). Cool to see the same kind of math being used for different areas of visual prime trickery.
Thanks a ton!
I am getting a 404 on that link.
I’m here now haha. But I might forget later. Lol
You aren't spending enough time downloading new packages to do old jobs because the old packages don't cover 100% of your use cases.
&gt; So I've recreated this code and its generating an error as the state has not been established. &gt; python theeyeofagamotto.py [Time loop primed ] [Time loop initiated ] Dormamu! I've come to bargin! [Rewinding Universe...] Traceback (most recent call last): File "theeyeofagamotto.py", line 103, in &lt;module&gt; amulet.activated = False File "theeyeofagamotto.py", line 30, in __exit__ self._restore_universe(self._universe_buffer) File "theeyeofagamotto.py", line 53, in _restore_universe state = self._first_line AttributeError: 'EyeOfAgamotto' object has no attribute '_first_line'
You're right. I was thinking of n++
I try to avoid using lots of extra packages, not because they don't cover all my use cases, but because they cover them in a terrible way.
&gt; it doesn't look like bugs.python.org is really for suggestions This contradicts my experience: a lot of asyncio features were requested through the bug tracker. People who really use asyncio usually find a way to make themselves heard. That said, issues like bad documentation are already known, it's just a matter of us (probably me) finding time to fix it. And btw, in Python 3.7 there's a ton of usability improvements that make asyncio more approachable. &gt; If you guys really want feedback, the potentially annoying, however definite improvement, would be to move the bug tracker to github, or at a minimum sync the current one two ways with github's. There's a high chance of that happening in the near future.
Yes, definitely. One line of smart code can do miracles.