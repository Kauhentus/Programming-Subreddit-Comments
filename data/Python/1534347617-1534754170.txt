Isn't much to contribute really, you can link the snapcraft and I can tell you if it's on the right track or not. 
Sounds like you should only use kwargs when you plan on structuring with multiple inheritance. Why would you ALWAYS use them in anticipation of multiple inheritance? I’ve been programming python projects for a few years and consider it my strongest language by far, and I’ve never used multiple inheritance
Lol, I am 36.. GTFOH!
This post is better suited for r/learnpython
Have you tried Abseil, particularly it's `flag` module? It's Google's py-flags library (which was merged into Abseil). An example looks like this: ```py from absl import flags FLAGS = flags.FLAGS flags.DEFINE_string('echo', None, 'Text to echo.') if FLAGS.echo: print("echo") ``` These days, I'd either use the above or click. Haven't use argparse for years. The problem with a tool like what is introduced here is that (just like with argparse), it's more work. In this case, I have to create a dictionary with each arg, etc, etc.
So I know how web traffic works, but you compared it to Yahoo storing passwords, which is a false metaphor. Yes, your password while behind this type of device has it in clear text. No, it's not stored like a database. It's broken open, inspected, packed up, and sent on it's merry way. So like I said, if an attacker got onto the device, then yes they can see everything. And it's sort of funny, as the Korean paper you showed didn't check out a BlueCoat, but the TLSeminar page goes to give Blue Coat ProxySG the only above C grade (A). I stated BlueCoat by name, as I have experience utilizing it for this purpose. Much like buying a safe to protect something, the product does in fact matter, and research must be made. I completely agree, that if while doing break and inspect, you have an attacker and you have shitty equipment, you will compromise your users. Also, break and inspect would be on outbound web traffic, not on for example employees logging into a local SharePoint or web app the company uses. So yeah, it would suck if Sally logs into her bank from the company machine while the company has been compromised, but one would also state she shouldn't be doing personal things on company hardware or networks ;) CERT also in the linked page, even states " Organizations that have performed a risk assessment and determined that HTTPS inspection is a requirement should ensure their HTTPS inspection products are performing correct transport layer security (TLS) certificate validation. Products that do not properly ensure secure TLS communications and do not convey error messages to the user may further weaken the end-to-end protections that HTTPS aims to provide. " Citing your TLSeminar page again, the Blue Coat ProxySG Validates Certificates. They also go on to say " Organizations using an HTTPS inspection product should verify that their product properly validates certificate chains and passes any warnings or errors to the client. \[...\] In general, organizations considering the use of HTTPS inspection should carefully consider the pros and cons of such products before implementing \[1\]. Organizations should also take other steps to secure end-to-end communications, as presented in US-CERT Alert TA15-120A \[4\]. " That goes on to talk about Utilizing certificate pinning ( [USCERT Alert](https://www.us-cert.gov/ncas/alerts/TA15-120A) and the [page ](https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning)it linked for info) So yes, the average Joe Schmoe at Mom and Pop computers should not be setting up break and inspect. Large enough organizations that can do the research, fund the security required, and implement it have no issue at all. As a matter of fact, many organizations follow DISA's guidance for various things (most notably the STIGs they have), and they have the following document break and inspect : [DEPARTMENT OF DEFENSE (DoD) Secure Cloud Computing Architecture (SCCA) Functional Requirements](https://iasecontent.disa.mil/stigs/pdf/SCCA_FRD_v2-9.pdf). So I'll take back my snark on your Yahoo example and leaping onto it for misrepresenting the point, but I stand by my point that when done properly, with the right hardware and in the right set up, it's fine. Which can be said for pretty much anything in InfoSec. If you implement anything in a not planned out way, it will fail and ultimately hurt your users in someway. That's why most organizations utilize a change review board before funds are even allocated to purchase the hardware in question.
¡Gracias!
``` from decli import cli parser = cli({ "arguments": [ {"name": "echo", "help":"Text to echo."} ] }) args = parser.parse_args() if args.echo: print("echo") ``` It doesn't look like more work to me, same 4 instructions in 10 lines (to make it pretty). I think it's just a matter of taste, IMO I don't think it's more work, I'm used to argparse. Thanks for the feedback, I'll check that library, looks super nice!
&gt; Some standard library API accept objects that implement sequence protocol or mapping protocol, regardless of whether they are implemented as iterators, others don't. Examples please. And that's not "inconsistencies about how iterators work in Python". &gt; So? Your program will generate stack overflow / OOM trying to consume infinite generator. Or run forever consuming all of a core. &gt; I don't see a problem with it. You… don't see a problem with a construct which is broken by default, of no use, and which you yourself describe as not a goo thing to do.
By your logic a university education is a waste, too.
LOL. Agreed with what others said. But fair enough. Type enforcement is just the worst. (Obviously my opinion) Not being able to keep track of type is a developer shortcoming not the language. Python wouldn't be as quick to write if you had to worry about type unnecessarily. If you're writing something complex and would like to keep track of type use type hinting and proper doc comments.
So what would be the benefit of using this over the Pushover module?
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Why are you fetching data from Twitter RSS? It doesn't seem like a reliable source.
Here's a sneak peek of /r/https using the [top posts](https://np.reddit.com/r/https/top/?sort=top&amp;t=year) of the year! \#1: [Happy Https day!](https://np.reddit.com/r/https/comments/91l15x/happy_https_day/) \#2: [Sketches](https://www.youtube.com/attribution_link?a=lNVCv-uPC5Y&amp;u=%2Fwatch%3Fv%3DUZXQ13eQmX8%26feature%3Dshare) | [3 comments](https://np.reddit.com/r/https/comments/8xu0uh/sketches/) \#3: [Cheapest way to setup https on website?](https://np.reddit.com/r/https/comments/7zatj0/cheapest_way_to_setup_https_on_website/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/8wfgsm/blacklist/)
Nah, I don't get mad about snark. Save it for TD.
This comment section looks a bit like bots
Thanks for actually thinking your response through. The laziness isn't as crucial, as laziness AFAICT is related to *when* something is computed. Or if the laziness your referring to is w.r.t. typing... i don't know. Either way it's a good point. Other comments bring up the 'constructor' concept. I'm okay with constructors.... it seems like an anti-pattern to me for something to pass data, or a pointer to data, just once, and then have 'dumb' behavior afterwords when you use the same object/ref, asking for it's data. I understand your criticism too about the length-dependent link being contradictory to the lazy iteration in the first point. It's fair, my merge routine just requires it since the data is nasty.
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Thanks for sharing, this is great!
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/programming] ["Word-part frequencies" Web scraping and data munging\/exploration example using Python in a Jupyter notebook. • r\/Python](https://www.reddit.com/r/programming/comments/97lg6g/wordpart_frequencies_web_scraping_and_data/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
The neural networks are uprising!
The best way is to just go through the Fibonnacci numbers until you get one with 1000000 digits.
Use the number of milliseconds since January 1, 1970 to represent the date &amp; time. ;)
Are they though? Do some have a human login to them once in a while to keep it looking real? Because comments keep trickling in that don't comment in the content at all, just mindlessly praising the author and saying things are so cool without any reason or reference to anything in the links posted.
Thanks for sharing! Awesome!
Yeah that's were I'm struggling I think is with the dataset. Do you need to use something like SQL to set up the database? Thanks for the response this was exactly the kind of guidance I was looking for!
Yeah thanks, I guess that's something I should've gotten on top of first. We had to write algorithms for our Matlab programs in some engineering courses. Thanks!
If you guarantee that your dates are formatted as YYYY-MM-DD then they'll compare and sort as strings. Not really the way I'd do it, but it'll work. This is how I timestamp folders on my computer so that they sort naturally.
Ever just considered the simple fact that people are just lazy but at least can provide a simple acknowledgement. What is everyone expecting...Yahoo comments style responses? There is no real need to break everything down into a treatise or review of the post. I see these 'bot conspiracy' comments appearing more often. The irony is that all of them are bereft of any mention of the post's contents. Hypocrisy seems to obvious. And yes, I have made no mention of the contents of the post too...prepare the pitchforks and torches :D
Do a Google search for web scraping and python I'm pretty sure you need to download the module beautifulsoup to parse through HTML. I haven't done that myself but it is listed on the list of things I want to do.
Oh nice never thought it like that.Will it work for every date if I remove the dashes and compare them as numbers?
Great thanks!
I agree fellow human.
https://www.reddit.com/r/ProgrammerHumor/comments/95j9t5/some_random_title/?st=JKVNBWND&amp;sh=cddacd21
https://www.reddit.com/r/ProgrammerHumor/comments/95j9t5/some_random_title/?st=JKVNBWND&amp;sh=cddacd21
what he said. i just went looking for the only useful link i found back when i did a project with it, but it’s now broken :/ such is the way of things these days 
 RGB = [a[(pos)*4+2], a[(pos)*4+1], a[(pos)*4+0]] Instead of calculating `(pos)*4` three times, calculate it once: pos4 = (pos)*4 RGB = [a[pos4+2], a[pos4+1], a[pos4]] It's probably a pretty negligible difference though.
Looks like it would be easy to vectorize in numpy
Wow they even have bilingual boys. r/totallynotrobots
What is a[]?
Thanks so much for your help...any idea on how to build them? I tried and I'm getting a Q\_FALLTHROUGH error
Is Selenium a hard requirement? The only way I know how to do this with Selenium is using Browser Mobprox. Scrapinghub's Splash server can easily render a pages HAR file via its API. The python port of Puppetter from the Chrome team may be able to do this as well. 
I love when established applications post stuff like this. I really hope more projects do as pygame is and tagging stuff for "newbies" and providing "How to contribute" resources (including the part time evangelists). That said--I learned jujitsu from a book ;-)
Unfortunately you've fallen into the trap of arguing, 'well, doing X _could_ be less secure, but it's not if you do it "right."' As soon as you're there you're admitting you have created a security problem because, as well all know, the most common source of security failures is people not doing things 'right.' Creating situations where it's much harder to do things incorrectly is a primary job of security engineers. "[O]ne would also state she shouldn't be doing personal things on company hardware or networks" is just an example of this security analysis failure: you a) completely ignore the cases where someone's doing a company thing that TLS intercept made less secure, and b) we know very well that, no matter how well you train your users, they will make 'mistakes' like this. That said, let me, one last time, take a poke at several of your details. 1. You can't guarantee that someone doing TLS intercept is not logging the data as well, deliberately or inadvertently. So it may well be the case in some situations that there's an exact parallel with the Yahoo example. 2. Regardless, you're taking the wrong idea from the Yahoo parallel. My point mentioning Yahoo is not about data at rest: it is, as I said, that "with almost unlimited resources to spend on securing their core data...have shown that this kind of thing is very hard to defend." It doesn't matter if it's at-rest or not, it matters that it needs to be defended and that's hard to do. So no, it's not the case that "[l]arge enough organizations that can do the research, fund the security required, and implement it have no issue at all"; I gave you an example of precisely where a company like that, and well aware of the sensitivity of the data and its security needs, and with a lots of resources to spend on this, failed to do this in a big way. You can find plenty more examples like this. 3. I do not know what "the Korean paper" you mention is. However, I gave you [a link](https://tlseminar.github.io/tls-interception/) that directly mentions a Bluecoat security failure when the information needed to avoid the failure was publicly available at the time. That you didn't even notice this when I directly gave it to you, much less didn't find it (and other Bluecoat failures) that are easily found through web search, is precisely the kind of security failure I'm talking about. 4. Even if your vendor is doing a perfect job of avoiding security failures known from public information, there are always further vulnerabilities that are available but not publicly known at any particular time. The only way to defend against this is not to use that vulnerable system. I don't disagree that TLS interception has a place in certain security infrastructures, given _very_ careful analysis that's beyond most the ability of most organizations. Most often, however, there are ways to handle the security requirements that do far less damage to the overall security of the system. That's why the title of the CERT document is _HTTPS Interception Weakens TLS Security_. I won't be responding further to this because I don't think you're going change your mind about this. My main purpose in going this far at all was simply to ensure that all the problems with what you're saying are well documented here so that others can see them and not be misled, which I think at this point I have achieved.
Not bots, just super happy people are finding the post useful! Thanks for your concern though :)
De nada!
You're welcome! Really happy you found it useful :D
Really glad it helped! 
You should use numpy. You seem to be doing image processing or generation -- if you use a python list of lists of ints, that's 24 bytes per integer = 150MB+ of memory for a 1080p graphic. With a numpy (1920,1080,3) array of uint8, it would be \~50MB.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
oh on the Contribute page https://github.com/pygame/pygame/issues?q=is%3Aissue+is%3Aopen+label%3A%22Low+Hanging+Fruit%22
I am currently learning Pygame + Python with the book Python Crash Course. I have open source contribution in mind and hope to start getting more involved. I'm interested in contributing and helping out. How can I help?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Text classification doesn’t “understand” language it only classifies it based on word frequencies
Lol gotcha bot
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Get a tldr?
Trying to update python bots to the new ts3 API changes.
How are you building? Also make sure you are on a recent version of Raspbian. If you paste the full log I might be able to help more.
tl;dr: If you're trying to buy a home and live in the bay, it sucks.
 Hello there! **Description:** The Johns Hopkins University Applied Physics Laboratory is hiring a systems analyst/software developer. No prior systems engineering or analysis experience is required and new graduates are more than welcome. You can find more information at this link: [https://tas-jhuapl.taleo.net/careersection/2/jobdetail.ftl?job=18049&amp;tz=GMT-04%3A00](https://tas-jhuapl.taleo.net/careersection/2/jobdetail.ftl?job=18049&amp;tz=GMT-04%3A00) . Our team generally values willingness to learn and probably would be willing to bend on certain criteria. Feel free to share this post around. Thanks and have a great day! **Location**: JHUAPL main campus, Laurel, MD, USA **Requirements:** • BS degree in Computer Science, Computer Engineering, Mathematics, Electrical Engineering or related field. • 1-3 years of related professional experience. • Proficiency with MALAB, Python, and C++. • Familiarity with software revision control systems (e.g. Git, Subversion). • Detail-oriented with strong analytical and problem-solving skills. • Highly self-motivated to dig into data to root cause issues and to understand system performance. • Strong technical written and oral communication skills. • Ability to work both independently and as part of a larger team, as well as effective collaboration skills with other teams and contractors. • Ability to obtain and interim secret clearance prior to starting.
18% due to season? Damn. 
&gt;(Can't host it on github lol) Why not? I just added it as a test and it worked fine.
This post is better suited for r/learnpython
I meant I don't really want to put a 8muses scraper on personal github account. Should've made that a bit clearer
Didn't know I could do that, thanks for the tip!
That’s explained in the article.
This is an abstraction for many notification providers and not just one. It also gives you a nice CLI interface for all of them. I cover this exact question in the docs: https://notifiers.readthedocs.io/en/latest/about.html 
Interesting. Thanks for the explanation. We don’t use beats all, but I probably would if there was a distributed, Active-active HA version. There’s some talk of pulling in Redbeats ti celery mainline. Guaranteed one-time delivery is a good goal for certain scenarios. We use lock/semaphore decorators, retries and early asks to approximate it, since a lot of the stuff we do isn’t idempotent. I’d like to see some more advanced support for this as well as dead message queues and other stuff. Maybe Kafka/ServiceBus/ other cursor based topic message brokers would help. Does Django-Q do any of those things? A cursory look leads me to believe it’s fairly simple, ala RQ/MRQ.
Finding something that interests you is always a good start. Or perhaps trying to figure out some skill you want to learn. Learning how to document something better is a very useful skill. Also useful is learning how to write a unit test. Both really useful skills in software development, and easy places to get started on any open source project. There's always something that could be explained better in the documentation, or tested better. Another thing to start with could be figuring out git and github (maybe you also need to install git, or make a github account).
That sounds like you're hiring people for freebooting.
Absolutely not. I started learning Python when I was 34. Making the transition from academia to industry wasn't easy, but I've been very successful in the industry for 10 years now. I with I had even known about Python when I was 23.
Plagiarize much?
Explain your use case please. By the way, OpenFace should work just fine. Not much work to be done honestly. 
I ported my python 2.4 code that has been in continual maintenance since 2012. So much grief over that time. I removed hacks, and replaced pyxml with lxml. It took a day...oh customers...
3.7 is not mainstream yet...
Due to feedback, we've started labeling them "good first issue" like some other projects do. Here is the link. https://github.com/pygame/pygame/labels/good%20first%20issue I'll update the post, thanks :)
The school year is probably the biggest effect. School starts next week for our district, so June would give people a chance to make some changes then move in. The quality of the school district in the Bay Area has a huge impact on property values. When we lived in Fremont a few years ago, being in a worse school district would drop rent prices by a third or more, even if the houses were half a block from each other. I did a quick look on Zillow. In Albany (with good schools) a 1300 sq foot house looks to be about $1M. In nearby El Cerrito (which uses Richmond schools and are ranked really bad), the same size is in the $600k range. El Cerrito would be fine for someone without kids or if you're willing to send them to private school. So I'm sure people are willing to pay more to get their kid into a good school by the start of the school year.
Many packages don't support 2.7 anymore. https://python3statement.org Python3.7 is working with every package supporting python3 
If the term "literal" can include arbitrary expressions which are executed at runtime, then the word is so broad that we can call just about anything a literal. We don't call list `[...]` and dict `{...}` syntax "literals" precisely because they can contain code which is evaluated at runtime, hence they are list **displays**, dict displays etc. But you want me to accept that code which executes a complex expression like `(lambda x, y: [2**1 for i in range(y**2)][x])(a-1, 4*b)` is a literal just because its wrapped in some syntactic sugar to convert the result to a string. Nope, not going to happen -- regardless of how the lexer categorizes f-strings, they aren't literals by any meaningful meaning of the word. You can call something which quacks like an elephant and swims like an elephant a duck all you like, but its still an elephant. I probably would have chosen the name "formatted string builder expression" myself. Getting away from "f-string" as an informal term is probably impossible, but we could at least have called them something more accurate in the documentation.
Trying to get a first release of [The Littlest JupyterHub](https://tljh.jupyter.org) out before next week. I mostly have to write more documentation and then boom! 
Most do though, even on that list, and many packages only support python 2. Every major package I use currently supports both. The vast majority of our internal ones do not. I think we'll see people finally dropping python 2 when EOL finally happens. I haven't due to my company and customers. I try to write python 3 compatible code, but if you're not testing it, it's close, but not quite. For my open source project, i'd love to drop numpy 1 9 or scipy 0.17 support, but there are really new features that aren't backwards compatible. I've looked. I'm at least happy python 2.7.7 made it easier to break support for python 2.7.6 and below. 2.7.6 is still supported as an LTS version, so people occasionally complain. 
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
pip will be using python2 pip3 will be using python3
Fun to see your functional toolkit. Your code looks nice and neat. Some remarks: * I was initial confused by "Use strings like normal sequences", because strings are already sequences in python. It seemed like you were adding an unnecessary layer. I do think I understand your intention now (to distinguish Array[Char] from Array[str]?). Perhaps you can clear this up in the documentation. * If you're looking for other people to use your package, consider setting up tox with testing and test coverage. This gives people confidence that your code works for particular python versions. There are plenty of python projects to use as examples. Some of the setups I've been using: [1](https://github.com/ariebovenberg/snug) [2](https://github.com/ariebovenberg/gentools) * The `Array` constructor is too complex. I can see you're going for maximum flexibility, but this can so easily and unexpectedly backfire: Array('foo') -&gt; ['foo'] Array(3) -&gt; [3] Array(3, 4) -&gt; [3, 4] Array([3]) -&gt; [3] Array([[3]] -&gt; [[3]] Array([]) -&gt; error Array() -&gt; error Array((1, 2, 3)) -&gt; [1, 2, 3] Array([1, 2, 3]) -&gt; [1, 2, 3] Array({1, 2, 3}) -&gt; [{1, 2, 3}] Array(MyObject()) -&gt; [MyObject] Array(MyNamedTuple(1, 2, 3)) -&gt; [1, 2, 3] Array(MyNamedTuple(1, 2, 3), MyNamedTuple(3, 4, 5)) -&gt; [MyNamedTule(1, 2, 3), MyNamedTuple(3, 4, 5)] Array(map(int, [1.5 2, 3.9])) -&gt; [map object at &lt;...&gt;] Array(int(i) for i in [1.5, 2, 3.9]) -&gt; [1, 2, 3] Array(iter(int(i) for i in [1.5, 2, 3.9])) -&gt; [1, 2, 3] Array(iter([1, 2, 3]) -&gt; [list_iterator at &lt;...&gt;] My advice: follow the pattern set by `tuple`, `list`, `set`, etc and just make it Array(&lt;iterable&gt;). This way the user *always* knows what to expect. Minor points: - avoid `from X import *`, this makes your code more difficult to understand - you often do: `if True in &lt;iterable&gt;` or `if False in &lt;iterable&gt;`. May I suggest using `any()` and `all()`? I often find this makes things a lot more readable.
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://github.com/ariebovenberg/snug) - Previous text "1" [Here is link number 2](https://github.com/ariebovenberg/gentools) - Previous text "2" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
Hilarious.
thanks, fixed.
Ideally you know someone who offers a Python job.
Thank you all, I decided that I will learn backend and then I improve myself from frontend side, after all this is not a serious job and I only develop for fun. Again, thank you all, they were very useful informations. This post can be closed now. I got my answers.
Thank you! Very good points you make here.
Documenting an introduction to skipole at r/http://www.skipole.ski \- which is an application, aimed at the Raspberry Pi, which creates and serves web pages which call your own Python functions, so can produce a web front end to your sensors, robots, whatever.. The application itself has now reached version 1.0.0 so it's development phase has finished, from now its enhancements, tests and debugging.
If your computer only has one python distribution, pip will use that one. However, if you have both python 2 and 3, pip will install packages to 2.x folders and pip3 will install them to 3.x folders.
So where very I see pip substitute it for pip3 and everywhere I see python substitute it for python3? 
You (and everyone) should use `python -m pip`
The standard seems to be \`tox\` along with a CI platform (usually Travis). Some examples: \- the [pyramid web framework](https://github.com/Pylons/pyramid) \- [django](https://github.com/django/django/blob/master/tox.ini) \- [flask](https://github.com/pallets/flask) For some really advanced tooling, have a look at the wonderful [scikit-learn](https://github.com/scikit-learn/scikit-learn).
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [django/django/.../**tox.ini** (master → 7f6b013)](https://github.com/django/django/blob/7f6b013bf60e6168a7e0a8f2b97954c3a45725e0/tox.ini) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e4ackbp.)
Yes, the main use-case for tox' "environments" is different python versions. However, these can also be used to perform other checks, such as `isort`, `flake8`, `pylint`, or testing [documentation builds](https://tox.readthedocs.io/en/latest/example/general.html#integrating-sphinx-documentation-checks).
Why you let other people exert so much control over you?
This guy is an affiliate linker! Avoid!
Submitting plain text passwords to some remote API without user consent?
The link to the image is generated by JS. So what I get from using selenium is the final webpage which includes executable JS, CSS. That's not the case if I simply use requests, urlopen etc. 
&gt; Basically you take a given password, and get the hex encoded sha1 digest of it. Then you take the first 5 characters of that digest and submit that to the HIBP service, which will return a list of all of the sha1 hashes of passwords that start with those same 5 characters. Locally you can then iterate over the returned hashes and do a simple comparison to determine if the given password exists in the dataset or not. &gt; &gt; This scheme means that the most that HIBP ever learns, is the first 5 characters of the sha1 digest of the password, which is not enough to recover any information about the password, and since the actual comparison is done locally, HIBP does not even know if the given password was in their data or not. From the article. 
After browsing and trying out over 4 different courses from multiple learning platforms this course from PY4E really stood out. Without any programming knowledge, I used this course to build my own payroll and incentive calculation system for my organization that employs over 100 people. Course Curator Certified Best Python Course on the Web. Dr. Charles Severance is truely a gifted educator who can simplify complex topics in to easy to USE, bite sized episodes that help you learn what's needed to start building applications right away! Check out the course at: [https://www.youtube.com/watch?v=AdWSvezLDG8&amp;list=PLBrjExWB18Fm6uwGN3pe0ID6IFEJ3Aj2t](https://www.youtube.com/watch?v=AdWSvezLDG8&amp;list=PLBrjExWB18Fm6uwGN3pe0ID6IFEJ3Aj2t)
Ptpython has a better user interface and handles scrolling in a more intuitive way. That being said, I use bpython exclusively. Main reason, I fathoms comprehension correctly even nested ones. So when using pudb, and I hit the '!' key, I only use bpthon because it calculates all manner of comprehensions correctly . List comprehension, nested dict comprehension, whatever. I love its autocompletion and it's introspection. The person who developed 'curses' which is the terminal emulation and readline like capability that bpython uses once said that he would have used ptprompt were it available (the interface behind ptpython). 
This! And not just for pip. `python -m virtualenv` `python3 -m virtualenv` `-m IPython`
Then youre a dishonest marketer 
I've seen this said quite a lot, but not why? I'm basically lazy so on Linux I'd do `alias pip3=`python3 -m pip` etc, so I don't have type all of that.
&gt; When should I use pip Always. &gt; When should I use pip3 Never. The reason being, whenever you're doing anything with pip, you should be working in a virtualenv. The virtualenv will make sure that, whatever python version you're intentionally using, `pip` will point at the correct one. If you're having to toss up between pip and pip3, it's because you're not using a virtualenv, which is your first problem.
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Thanks, I was thinking along same lines.
If all it needs are type annotations, it has big potential for adoption.
It's pycharm. Easiest way to test is open the console/terminal, type python -i ... Once in idle, import the module. It'll tell you immediately if it's not properly installed. 
Seems interesting. After working on fairly larger projects, I started to appreciate type annotations, and having a tool that will compile them into a c code will be a huge plus
I'm definitely interested in this
I already configured the correct interpreter in pycharm.
Actually, PyCharm is showing my that pyodbc is installed when I select my interpreter. Yet, my little one-line script still shows me the module not found error.
Might be project-specific. Might have to redo it for your project, not too sure. 
The only pyodbc files I have after installing pyodbc from pip are pyodbc-4.0.24.dist-info and pyodbc.cp37-win\_amd64.pyd, both in my Python37\\Lib\\site-packages folder. Is there something I need to do inside PyCharm to use these files? 
Strangely, it does run.
That's pycharm for ya
If you want to upgrade pip, and you run \`pip3 install --user -U pip\` surprise! \`pip\` is now Python3, and not 2 as you expect. The reason is that it stores the entrypoint in \`\~/.local/bin/&lt;mycmd&gt;\`. And both 2&amp;3 write there - the last one wins.
It is only natural development.
I've taken a small look at pyo3, but im not sure how it would prevent a case like having a python variable `num` which can be positive or negative integer being passed to a function written in rust expecting an unsigned int? Does the rust part just panic?
It looks like if the conversion fails, a ValueError would be raised. I will have to test it out.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/linux] [Open Source Week \[8-10 Oct\] - South Africa](https://www.reddit.com/r/linux/comments/97tnia/open_source_week_810_oct_south_africa/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Saw this last week on github - [https://github.com/JukkaL/mypyc](https://github.com/JukkaL/mypyc)
Dropbox is gonna make mypy the defacto standard for enterprise Python apps. If this goes well, mypyc could then crowd out Go and Rust as systems programming languages.
Wouldn't it be easier to fork Cython and replace its types with the mypy ones, instead of reimplementing most of it?
Launched an airflow environment and got some piplelines running to ETL data. Plan is to replace our 5k a month PAAS system with airflow which is only 300 amonth in server/compute fees
Yeah this is what Rob Pike meant when he bashed most languages for being the same since they borrow features from each other without considering a consistent design. All of these languages occupy their own niches. There is no reason that Python has to be a systems language. I don’t see how it would be. It was never designed for that purpose nor will it be maintained for that purpose. Just go learn those other languages if you want to do systems programming 
This is pretty much what I've been waiting for to make annotations part of my standard everyday.
There was a wierd discussion on Cython's sig about type annotations, but I've lost it. The gist from what I recall was that they couldn't use the standard annotations because they couldn't accurately infer the difference (for example) between a char, char[], int8, etc. I'm not sure why they couldn't simply document a default in the absence of a type as that would improve both adoption and clarity. But the general disadvantage of Cython overall is that if you really want a strong improvement in performance, you have to write in the "Cython" language. The huge advantage of mypyc (potentially) is that the same code file still works in Cpython or Pypy or Jython or IronPython. 
&gt;The huge advantage of mypyc (potentially) is that the same code file still works in Cpython or Pypy or Jython or IronPython. Assuming that Jython and IronPython will get Python 3 support.
Dropbox was building a JIT tool that never went anywhere. They couldn't replace PyPy; I'd be cautious about believing they can unseat Cython now.
This sounds like celery, a python task manager that may be well suited to what you need. 
This is similar to what Facebook's Hack has been for pho. Optional static typing without significantly changing syntax (aside from typing). Much easier than writing in the cpython api. This is really cool!
Indeed, the benchmarks will be very interesting.
&gt; The huge advantage of mypyc (potentially) is that the same code file still works in Cpython or Pypy or Jython or IronPython. Don't forget the possible disadvantage of not mapping as many Python types to C types as Cython does. &gt; But the general disadvantage of Cython overall is that if you really want a strong improvement in performance, you have to write in the "Cython" language. True, but how else could you generate simple and fast C structs from Python classes? It's a hard problem, when the type system is an afterthought.
Note: Experience much better on desktop / laptop, with private browsing / incognito turned off!
Hi, I also currently new to programming, but I have done a fair amount of projects ;) What I would do, is create an API on the server, then make my PI use the API to store data on the server. This will give you full control over data integrity, server side. With a server side API, it is fast to get a new PI to also provide you with temperature data, because it will call the same API. For some extra fun, you could create some authorization as well. However, this is just one solution. Good luck and I hope to see others solutions for further inspiration. I've worked with the Flask framework and RESTplus, when developing my Python APIs. 
Interesting. I'm pretty sure I've read in the cython docs it's in the works already. Was some time ago though.
[Relevant XKCD](https://xkcd.com/353/)
The PI can can post data directly into the database. You would have to write a script that reads the temp and uses sqlite3 to write directly into the db.
Its not the first time that Dropbox tries to do a compiler for python and I hope they don't give up this time
Capture video via open CV and just pipeline it all. By the way, this is going to be computationally very expensive. There are so many factors to consider. Good luck. 
Is there a repository to browse for this?
I would love to have a complete admin in Bootstrap 4 + React/Vue.js being as powerful as Django's admin using GraphQL or Django REST Framework.
Do you have a track that's developing open source security solutions based on face recognition and human form recognition that's now widely available on GitHub?
pytest uses precommit hooks for black
Just finished a project which helps you start your project with the right folder structure based on [The Hitchhiker's Guide To Python](https://docs.python-guide.org/writing/structure/). Here's the link to the [github repository](https://github.com/NektariosMar/Stamp-Structure_All_My_Python). If you want go check it out! Please do not hesitate for any recommendation! Thanks in advance.
Preventing nulls is one of the first things mypy gives you with optional types. 
I don't think the comparisons to Pyston or Cython are fair, though I totally understand where you are coming from. Pyston was a project that had to implement a full Python interpreter and JIT on top of LLVM. mypyc is a much simpler project, and is easier to accomplish gradually. When adopting a new runtime, it is an all or nothing affair. People usually don't hop between PyPy and CPython. mypyc has the advantage that you can gradually compile portions of your code. If development stopped tomorrow, parts of mypy could still be compiled. With Pyston, that isn't the case. Additionally, mypyc is *not* trying to be a replacement for Cython. It is meant to be an alternative at most, but the main goal is to compile mypy (and mypyc itself) so that mypy is faster.
So once again they're reinventing the wheel. They were making their own JITter for performance reasons too. 
&gt; It is meant to be an alternative at most, but the main goal is to compile &gt;mypy (and mypyc itself) so that mypy is faster. And they've got Cython for that. I don't understand the intent to build a sawed-off Cython that might not be good for anything else other than compiling mypy. They keep trying to reinvent tools the Python community already has rather than improving what's there. 
&gt; Yes, calling len will consume the iterator, but it doesn't have to throw the result away, instead, it can simply store the result and expose it on repeated access. Then just make a list out of your iterator. Lists are iterable and store each value inside. That is their whole point (and that they're mutable).
Maybe instead of a sawed-off python to C translator, we just need a little language that is statically typed but much like Python to use for those little spots where Python needs a speed boost. And if we could inline it the way some other languages let you inline assembler now that would be perfect. The only statically typed language I've seen that comes close to being Pythonic is Genie: https://en.wikipedia.org/wiki/Genie_(programming_language) 
[removed]
Yes it will work that way too. Just be careful of "dates" like 2020-20-20. It'll sort with all the others, but it's not a valid date.
&gt;And they've got Cython for that. I don't understand the intent to build a sawed-off Cython that might not be good for anything else other than compiling mypy. Cython is *not* a silver bullet. It is certainly an amazing tool, but it does not automatically give a large speedup to projects. Cython's type system is different enough from mypy's that it is unable to optimize mypy enough. Additionally, Guido wanted to keep mypy runnable as pure Python, which is not possible with Cython. You may want to read through https://github.com/python/mypy/issues/3408 which talks about using Cython, Nuitka, and PyPy. Carl's benchmarking showed only a 5% speedup via Cython, and I also independently later checked compiling mypy with Cython, and found similar results, only about a 5% speed boost.
Ah. Might want to put that in the description next time so we don't waste our time, thanks.
Did you follow installing the requirements? 
Yeah, you can look at all the source code here: [https://github.com/danielv775/Whisperly](https://github.com/danielv775/Whisperly)
 You might be interested in [this](https://github.com/JoshuaRLi/snek). It's a python package template I recently made for myself and includes `pipenv, make, pre-commit, black, flake8, pytest, travis, twine`. Used to start [`pylibgen`](https://github.com/JoshuaRLi/pylibgen), [`libgen-cli`](https://github.com/JoshuaRLi/libgen-cli), and a bunch of other private personal projects that I haven't released yet. Let me know what you think!
Oh? Types and native code are good huh?
Really sorry about this. Will push the windows update by tomorrow :). Do star the repo or fork it to build more on top of it :). You can contribute and set up the windows Update as well. Let me know what you think :)
Mmm, phở!
No worries! :)
And u/kofikou Thanks. It's nice to see that there's reasons behind these things and not just some opinionated Internet user shouting.
Hey it turns out the "no request" thing isn't a windows thing. https://stackoverflow.com/a/42379032/5948 I'm at work and can't update it and make a pull request, sorry. Thought it was interesting though.
Do generate a PR when you're free :)
I noticed this earlier and I am definitely adding it to the training set, but I don't know how I'd characterize rhetorical questions for a classifier. Do you have any ideas? Right now the bot is a collection of mildly creative if-statements, with some fairly simple classifiers. Later on I'm going to train a (hopefully more complex and successful) classifier, and I'd like to have a "chance the question is rhetorical" feature. But I don't know how I'd build it to be better than random, given the style of questions users seeking help ask on this sub. There's a good body of research I've skimmed on the subject of identifying rhetorical questions, and I plan to evaluate it eventually, but a lot of research uses questions that are noticeably syntactically different than rhetorical questions associated with a blog post on this sub. 
Can someone tell me how to use this python software. I have been able to run it however in kali linux it doesnt spoof the numbers or make any calls. what dependencies do i need for it? Here is a link to the software... [https://github.com/PortzCrackz/CallFlooder](https://github.com/PortzCrackz/CallFlooder)
I just started my end of year project. I have folders for each year Ive coded python, which is 2, and the last file in the "year" folder is a creative, fun idea I have. Since I dont have a job I just kinda wing what I do. This year my project is a website all users on the website have to work together to solve a maze like puzzle, by typing in a chat. I havent done much with flask and web development so its been a little shaky so far but it's coming together!
If fairness, Nuitka has barely started with any optimizations. That project is mostly focused on completeness and compatibility at this point. Once they have that square, the plan is to begin more and more optimizations. The optimizations which are currently in place are all low hanging fruit. I'd actually love to hear why they decided to re-invent the wheel and not adopt Nuitka as the basis for their effort. The code quality is high and the primary developer is a pretty smart guy. 
n[:,:,4,4,4] gives me the same output (remember python uses 0-indexing?) 
Yes.
Python wasn't built with types in mind, so it can't, even with mypy, handle things like tagged unions. At least not from what I can see by reading the docs. There are unions, but you can't assign a name to each of the states, nor can you have the same type with different names.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
We use dependency injection intensively at work on C# projects, and I am wondering if someone has any feedback on using a dependency injection framework within a Django project ? :)
Neat; thanks!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
so should i got post this thread in /r/LearnPython?
I'm very impressed with this UI and the functionality I'd love to merge some of this into a chat plugin I made for my AUCR platform. https://github.com/AUCR/Sermo is my chat plugin and https://github.com/AUCR/aucr is the framework. Lmk if you're interested in chatting about it
I think the problem is the resolution of your sampling frequency 4 the spectrogram. If you look at the second figure that you produced, and zoom in each one of the columns for time, the bar represents a window in which you sampled. The spectrogram is only seeing a small portion of the 2 hertz frequency, and is therefore not present. If you were to apply an fft to the entire signal, the two hertz frequency would be present.
Seconding this. I use Splash at work specifically for its ability to easily output HAR files. It's super painless.
3.7 actually broke many packages. [Specifically, making `async` a keyword](https://docs.python.org/3/whatsnew/3.7.html). For example: - [PyHive](https://github.com/dropbox/PyHive/issues/148) - [Celery](https://github.com/celery/celery/issues/4500) - [psycopg2](https://github.com/psycopg/psycopg2/issues/714) and [aiopg](https://github.com/aio-libs/aiopg/issues/436) - [PyMongo](https://jira.mongodb.org/browse/PYTHON-1455) 3.6 will be supported for 5 years from its release, so I generally tell folks to write for 3.6 (unless they need dataclasses or the new contextvars stuff). Once there's a 3.7.1 and more packages have addressed the `async` as a keyword thing then I'll start recommending 3.7.
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
&gt; I'd actually love to hear why they decided to re-invent the wheel and not adopt Nuitka as the basis for their effort. The code quality is high and the primary developer is a pretty smart guy. Well the biggest reason I would think is...Dropbox. It's a company, not a free/open organization/ individual person. They want to be able to exert some control.
I know development on IronPython3 is active (albeit slow)
&gt; True, but how else could you generate simple and fast C structs from Python classes? It's a hard problem, when the type system is an afterthought. Slightly less so now that dataclasses are a thing.
&gt; Python wasn't built with types in mind, Wait, what? Python is type safe, strong &amp; dynamic. What's with people shitting on / calling Python having a bad type system just because it's dynamically typed? It seems to grow more and more recently and doesn't even make any sense.
 facenet is another option, check the contributed page (https://github.com/davidsandberg/facenet/tree/master/contributed). Here you will find the real time face recognition example.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [davidsandberg/facenet/.../**contributed** (master → 096ed77)](https://github.com/davidsandberg/facenet/tree/096ed770f163957c1e56efa7feeb194773920f6e/contributed) ---- 
Maybe. But to me it seems like more effort than it’s worth 
&gt;It’s important to point out Mypy currently only supports Python 3 syntax — while they’re working on Python 2 support, it’s still in an early stage of development. I have no idea where the author got this idea. The majority of typed Python at Dropbox is Python 2. Python 2 is about as well supported as Python 3.
https://nim-lang.org/
Not really, just means there are more beginners with Python and Java than professionals with those and other languages.
I've gotten between 2-4x performance boost on every of the automated tasks I do at work with Excel and data analysis stuff. It's not a huge boost, but I figure it's not bad and essentially for free.
Is nim really that much like python? Looks not very python-like at all type Person = object name*: string age: Natural
Forking is a thing. Paying an expert is a thing. Purchasing the the project is a thing. All of which is how open source is supposed to work. 
Nobody seems to remember [RPython](https://en.wikipedia.org/wiki/PyPy#RPython) (the official pypy doc site is unavailable just now), the typed subset of Python used to implement pypy.
You can emulate some of the functionality of typed unions by using [enums](https://docs.python.org/3/library/enum.html). You can also use isinstance checks to branch against different cases in a union, which also helps a bit. E.g. mypy understands code like this: def foo(x: Union[int, str]) -&gt; None: if isinstance(x, int): # x is understood to be of type int in this branch # So this typechecks: print(x + 3) else: # x is understood to be of type str in this branch # So mypy reports an error here print(x + 3) But it's certainly true that Python in general doesn't really have great support for things like algebraic datatypes or pattern matching. &gt; nor can you have the same type with different names. You can do this using [type aliases](https://mypy.readthedocs.io/en/latest/kinds_of_types.html#type-aliases), or possibly [NewType](https://mypy.readthedocs.io/en/latest/more_types.html#newtypes), depending on exactly what semantics you want.
Have you used Haskell/Rust’s type system? Python seems fine until you use a type system as good as those 2. I also think it might be mostly the dynamism/lack of static types. The more I get familiar with static languages (or Julia’s optional typing) the more Python frustrates me when I go to do things.
For auto formatting I've been using 'black' lately and it is amazing I highly recommend it. 
Nim is interesting. It's inspired by a few languages and it seems like it tries to implement them all. They've said Python was a huge influencer.
Because I want/need all my code to be fast by default, and I don’t want to be writing C for everything?
To be frank, I do find the Head First series annoying not to say harmful to learning.
I'm just looking for a good book, not a comic, that's all
I'm in the midst ofstruggling with this very same question. I have many of the same toolkits on my list of tools to explore. Rather than study first then pick one, I've decided to press forth with an implementation that uses click plus a generous deployment of f strings and ascii codes. That's so I can narrow down the technolgy options to what's essential . To date, I've done so much refactoring that I'll be damned if I'm going down that road yet again, konly to discover that its not what I need. I am presently most intrigued with curtsies and ptprompt because they are essentially terminal emulators plus fancy readline emulators and suto compleyion tools. And while I like tui's like irwid et al, Ive already decided that if I'm going to muck around with eventloops and widgets then I might as well use a gui toolkit. My approach presently is to build it out as a command line programme (not a tui programme). But structured so that I can easily swap the command line front end with a gui front end or another tui like front end and keep the same backend as the common point. And when I've pushed that command line application as far as possible , then and only then will I look at an upgrade if you will. 
1. Does PyPi not offer any package installation stats? 1. If necessary, I'd make it a migration. Do the fast method for Py3 and leave it slow for Py2. Be sure to make an obvious note of this everywhere you can. 1. Start emitting warnings for Py2 in the next version that says support will be dropped I'm the next version. 1. Finally, deprecate and replace the functionality with a simple fatal error if it detects Py2.
I'm not really interested in the full GUI experience just because I know I'll spend even more time sanding corners to polish things in GUI land than in TUI (plus I'm running on old hardware so the terminal is faster than the GUI when the processor gets loaded or the system has a random lag spike) The main thing why I'm considering the TUI is so I can edit all parts of the database from one program, rather than having different scripts for the different parts or having a menu I'd have to deal with every time to pick which table I want to edit.
My ubuntu 18.04 system python does not have tkinter. You should have a note about how to get around this.
interesting, thanks
When it came to python for me it was reading and writing to files. It’s not an overly complicated concept but it definitely confused me at the time. 
&lt;groan&gt; Let's hope that they don't go in for too much JITter bugging &lt;/groan&gt;
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
They collect telemetry to improve things. If you don't trust them, you can always compile from source and remove the telemetry code entirely. 
Git was pretty difficult for me at first and I still don't understand a lot of it. But it is still insanely useful.
Learning to kick my ego in the nuts and ask someone for help, and I don't mean google/stackoverflow
Pointers amd references.
Second this. I find io to be one of the larger things I try to focus on at first bc it's usually pain if you don't.
Input (from a user) and output, in a way like other command line programs do. Even still it gives me a hard time. Having a main loop with a prompt for input, parsing the input, delegating work out to functions... it can be a lot to figure out the first time you do it. Nevermind the event driven GUI programming. It's easy to write a main that's full of if statements, but it's harder to make something that's more structured.
Dynamic char arrays get me every time in c++
You really don't need to switch OS's to do python development unless you're doing platform dependent things (like making a windows desktop app). If you want to develop android or ios apps, python really isn't the best option since there's very little native support for the language on those platforms. When I had a macbook I actually really enjoyed developing on it. For learning python check out /r/learnpython or the sidebar, they'll have better recommendations than I do. 
Wait, I miss something? Cython has support for type annotations for almost a year now: https://github.com/cython/cython/issues/1672
Not taking the piss but if you know to compile pycharm I'd be very interested. I couldn't build it from their repos, but I only spent 30 minutes on it, and I'm not familiar with the java toolchains.
2 options. 1 (easiest): Use pypeteer instead of selenium. It's awesome and actually pretty stable now. When you open a web page it emits events, all you have to do is set up a callback for the 'request' event (or 'response' events if that's what you need) and all the stuff you need will be available on the Request or Response object passed to the callback. `page.on('request', request_callback_function)` `def request_callback_function(request):` `print(request.url)` 2: Selenium Chromedriver, you'll need to enable performance log which will dump absolutely everything the browser is doing with regards to network requests, responses etc. `from selenium import webdriver` `from selenium.webdriver.common.desired_capabilities import DesiredCapabilities` `capabilities = DesiredCapabilities.CHROME` `capabilities['loggingPrefs'] = {'performance': 'ALL'}` `chrome_options = webdriver.ChromeOptions()` `chrome_options.add_experimental_option('perfLoggingPrefs', {"enablePage": True})` `driver.get('http://whatever.com/')` `performance_log = driver.get_log('performance')` `network_requests=parse_chromedriver_network_requests(performance_log)` `def parse_chromedriver_network_requests(performance_log):` `network_requests = [` `unquote(loads(log['message'])['message']['params']['request']['url'])` `for log in performance_log` `if json.loads(log['message'])['message']['method'] == 'Network.requestWillBeSent'` `]` `return network_requests`
You need to build it from the IDEA source code, the Python plugin is a submodule in that repo IIRC. 
Could you pin point what git concepts where most confusing or hardest to learn?
Rebase
From an old (20year+) RCS, CVS, Subversion user, I struggle with the decentralized thing. I want a main repository to hold "the latest" and not have to tell it to pull anything. I don't need or want a local history clogging up my local drive, that's what the server is for.
Making paths work cross platform and/or cross-user. Also, just installing a package. I was reminded of the horrors of trying to install a python 2.4 package. Once upon a time, setuptools sucked, so some guy wrote disturils, which was better. Then he stopped accepting patches, so it was replaced by distribute. That was then merged to make setuptools. So you're run a python script get_distibute.py to install setuptools. That script doesn't work anymore...turns out it just points to pypi because pypi changed. It just downloads the latest 2.4 compatible version, so you do it by hand.
Nested loops, multi-dimensional arrays, the necessity of clear functions and classes, GUI programming. I went back and looked at some of the programs I wrote in high school and good lord was it bad. I'm surprised they worked at all. Personally, I've never liked recursion. So far iterative approaches have always worked better imo.
Simple. `pip install pyodbc` Source: [http://hodentekhelp.blogspot.com/2018/06/how-do-you-install-pyodbc.html](http://hodentekhelp.blogspot.com/2018/06/how-do-you-install-pyodbc.html)
Yea, idea is what wasn't working for me. It's not really that important however.
Hello Might, thanks for the answer. Actually I don't think it's the sampling frequency resolution, because I've enhanced it and checked the lower frequencies, the values around 2 Hz still seem to be zeros. And yes you are right, when I apply a fft to the signal, I find my frequencies.
OSX, Windows, main Linux flavours... all these OS's support Python. I would suggest to install latest "vanilla" python, which is currently 3.7.0, and then an IDE: arguably two best choices are PyCharm (community edition is free) or Visual Studio Code. 
Personally, the way I found it easiest to learn Git was to use my IDE's GUI to understand what was meant by a branch, what the different repos were, what staging was etc. After a while, I took the plunge to command-line git, which ended up being just a situation of "I know I need to do X, what is the command for it?" There is no shame in starting off with a version of something with a better interface, that's why easy interfaces exist!
one `=` is assignment. Check for equality with two `=`s
What the fuck a monad is
You're a beautiful human, thank you!
Pointers in C. It was a bit hard to understand.
I have been studiously avoiding knowing what a monad is for 30 years of programming so far, and will probably continue this for the foreseen future. :)
Multithreading. 
Is this a hacking framework for performing [dependency injection attacks](https://www.destroyallsoftware.com/talks/useing-youre-types-good)?
Wait until you're trying to use a VPN to access a Perforce server hosted on cheap hardware on the other side of the world, and you may wish you had a local repository. :)
I was unable to understand I had to make an object and then run the method of that object instead of just trying to run the method. It is allowed, but the code I had made was not meant to run that way so I always had an error message from java "trying to access a non static method using a static call" or something like that.
Might be a bit out there but stay with me for a minute... ... How about installing tkinter?? sudo apt-get update Then sudo apt-get install python3-tk Or sudo apt-get install python-tk Wild I know but might be worth a try
Having started working more in Cython, it's really not just a case of 'compile Python for more speed'. Cython is effectively a different language that is some hybrid between Python and C. It's actually rather difficult and weird, to really see performance improvements you need to write this python-c blend that is not source compatible with python and is not idomatic python either. It's also not something well documented, probably because it can't really be - you basically have to have a sense of what the performance of the generated C-code is going to be, there are some rough guides (like visualizing how much C is generated per line of Cython code) but mostly its a question of profiling and preferably knowing C pretty well. I can very much see the advantage in a compiler for annotated python - it's source compatible so you can compile or not and see if it improves, it's 'native' to the new annotations so its overall much cleaner, and it can learn from Cython to take advantage of the best bits while hopefully leaving a few warts behind.
Classes and every single aspect of PHP.
Pointers (obviously not Python, actually can't remember what the language was, probably [BCPL](https://en.wikipedia.org/wiki/BCPL) actually), and higher order functions (functions returning functions, again definitely can't remember the language, might have been [ALGOL 68](https://en.wikipedia.org/wiki/ALGOL_68), might have been theoretical).
Poverty generation?
\&gt; code quality is high Whether its high quality i couldn't say but its idiosyncratic for sure e.g. not using pep8 style conventions at all. My general impression from following the project for a while is that the main developer is a 'work in my bubble' sort of guy. Can see Dropbox preferring to work on something directly targeting type annotations and doing so on their own terms, with their own project management and style etc. They also tested Nuitka so it's not like they ignore it, probably they can have some productive conversations.
Unwillingness to follow PEP8 is always a big danger sign for me. Can mean any combination of unfamiliarity with python, orneriness and simple laziness. 
My thoughts exactly although I would have been too lazy to find the unicode
No, not really :) This is another term “Dependency injection” that is about decoupling of object-oriented components. You can read more about it at http://python-dependency-injector.ets-labs.org/introduction/di_in_python.html
I am working on a new framework. The idea is to create an ORM layer on RethinkDB but with event sourcing technology. I choose RethinkDB because it can create database events which can be retrieved by applications to handle event driven commands. Also there should be a REST-Interface for the models and their events. What you think reddit? 
BTW the name is: Draper
In many circumstances, sure
I tend to agree, but adoption is difficult to predict. 
&gt;I don't need or want a local history clogging up my local drive, that's what the server is for. I know people often break this, but you can avoid tracking large data files and only commit actual source code that you maintain (not even third party). People use git like it's some backup/storage, but it's just supposed to track changes to code. Also you don't commit anything that can be generated programmatically, like compiled files, minimized javascript, third party code that can be versioned and downloaded any time. The whole point of git is history and branching, and that should be pretty lightweight most of the time. A busy week you're probably still committing less than 1MB of actual source code changes.
Rust for sure. Go has a massive runtime that you have to pull in every time.
Have just finished one, DI was used for creating a service layer between Django models and two interfaces (website + Celery workers). However, it’s not yet common practice indeed because Django is built a lot on meta programming and concept of global state (there is only one request handled in each process). Things start differ when you create something using asynchronous frameworks (like asyncio-based (aiohttp, sanic, ...), twisted, tornado, ...) where there is no global state (you have several requests being processed at a time in single process). Also some people use it with web frameworks that provide less application architecture (like Flask, Bottle, ...). Generally, I would say that it might be very useful for any big project that has a lot of components and dependencies between them.
Could you tell me some scenarios where you would need to use recursion? I think i understand how it works, but i can't really think of any scenario where it would be needed.
Think of it like a data structure and relevant code packaged into one big container. It has attributes that are variables related to each other, and there are functions which act on those attributes and calculate things based on them and modify them accordingly. Sometimes they're just there to store data. Classes don't have to exist. They're just an abstraction of writing code in a way that puts things in a nice little container. C didn't have them. You'd have a Struct which is literally a container of variables like a string/string/int, kind of like a tuple with explicit types. Very close to a python namedtuple. But then naturally you end up with Structs that represent some sort of idea, like a Rectangle. You might have Rect: {int x, int y, int width, int height} representing a single rectangle. Then you know you want to do things with those, so you end up writing functions like `calculate_area_of_rect(Rect r)`, and `check_for_collision(Rect r1, Rect r2)`. But those are just normal functions written in the file, and they're not really namespaced necessarily. They're just global functions, like if you wrote those directly in a python module. That's where classes come in. They namespace these things into one little container, where you have a Rectangle class and when you create one you initialize it's x,y,width,height in the `__init__`. Then you have a function in it called `calculate_area`. Then you have a function `check_for_collision(self, other)`. And it all fits under that class, and you can only invoke them from that class because that's only where it makes sense. It took this common programming pattern and turned it into a natural way to represent it. Even though you don't need them, it made it easier. Then object-oriented programming built on that farther. You start noticing that different classes are related. A Rectangle and a Circle both need a function `calculate_area`. And then there might be functions outside of them that can take any type of object that has a way to calculate its area. Duck typing. You pass in an object be it a Rectangle or Circle or whatever, you call `calculate_area` and you don't care about what type it is. That's the generic idea. I think a lot of Class and OOP tutorials fail people by digging into more abstract parts of classes like inheritance when really you might not even use it as much as it seems from the tutorial. Classes themselves can be super common but the concepts they try to shove into teaching OOP aren't all that common. Especially in Python OOP isn't as much as a focus as Java and C++.
\&gt; orneriness Looking a bit at the project, it shows a lot of hard work so I doubt it's either laziness or unfamiliarity... but something like orneriness (great word!) yes - the 'I do things my way' attitude which makes me think, cool for you pal but I'm so glad i don't have collaborate with you on anything if you think 'your way' is more important than 'making sense to everyone else'.
I've read on monads like 5 times now, had it explained to me verbally twice, and I swear to god I forget everything the next day. I feel like I get it... and it's gone.
If anyone has exercises specifically meant for trying to apply classes in a useful way, i would appreciate it. I still don't recognize when it might be better to write a class, and i'm unsure how the nitty gritty parts of it works. I mean i've watched some videos on the topic but i think i need to write a bunch of classes before i really get the hang of how it works and when to use it
I think this is commonly really hard for people because we're not taught how computers work as much as simple programming concepts. It's kind of backwards the way we use abstracted high level languages to learn computer science, and then two years later start learning assembly. Part of me thinks that assembly should be taught first year in a computer science program because it's actually super simple. Move this value here, reference it by it's address in memory, add this to it, add this to the address to point it somewhere else... if you see the low level code pointers just naturally make sense. But if you learn them from C, you're just like how the fuck does something point to something that points to x and why can I add to that and point to something else?
Python wasn't built with explicit types in mind. Rather like JS. Another issue is that basically every operation is a black box. Making code optimisation very difficult, since you can't assume a + b == b + a, while you can assume that for any integer. Or a + a == a * 2, which is true for integers and strings (I think).
[Black](https://github.com/ambv/black)
Do we even use pointers on python? I know they exist, but never used one personally.
I don't know if it counts in python. But I had to do a script that given a starting directory it finds every file and if it was a directory, enter and do the whole thing again till you got no more directories to access so you are done. 
Looks like exactly what I wanted, thanks
I've chosen Rust for same purpose. Solves more problems with better design, while Go feels just sloppy. There are many libraries that are modelled after Python equivalents, and most of the code can be easily translated (except OOP and more dynamic parts). LLVM probably helps a lot with performance.
Makes sense 
That's surely one model. But in the past, repositories were ideally boot-strappable. Ideally, a fresh machine with Subversion installed was (almost) all you needed to get back to work if the prior machine died. Or in some industries, large binaries are indeed the product, take hours or days to generate, and not just reconstitutable at a whim. Yet they need to be sync'd up with the toolset or input data that produced it. There are big benefits to Git. I just struggle with the model sometimes.
Less of a specific topic and more of a mindset, but it's knowing and understanding that if the code isn't working, it's strictly your own fault. When you pour hours and hours of your time into a bug crashing a project it becomes really easy to start thinking that there's something wrong with your computer, that there's a problem with your IDE, or even that you found a bug in the compiler. This is never the case. It is always developer error. Of course I'm hyperbolising, these errors do exist in more advanced projects but by that point the developer should already have this mindset. The hardest part about coding isn't the syntax or the abstract concepts, it's having the persistence to think flexibly after experiencing anger at the hardware you're using, a total loss of self-confidence due to lack of progress, while totally exhausted. It's realising that **you** made a really dumb mistake somewhere and that **you** are going to find it and fix it. But the hassle is worth it, all of the faith you lose during the development process is restored when you finally step back and run. That feeling of being proud of your creation and seeing first hand how your handiwork is functioning makes all of it worth it, what great developers have that decent developers don't is the self-control to keep working towards that feeling even when it feels like all the odds are against you.
Rust is probably the better option there. You can embed Go into other software but it's not really built for it and you'll be dealing with the interaction of two different runtimes (and GCs) which can get dodgy. OTOH Rust will let you build a straightforward no-runtime static or dynamic library (for use with ctypes/cffi) or a native python module (using rust-cpython or pyo3). You'll still be on-the-hook for properly managing your lifetimes (in the first two cases) but won't risk the runtimes undermining the other. *However* if you're dealing with some sort of processing server/daemon (aka rather than embed the native code you build a native system which Python calls over some sort of IPC) then Go might edge back up, it's way simpler to get going though not as fast or light.
I think that understanding how to use rebase is one of the more confusing commands to start with. However, rebase, particularly interactive mode (got rebase -i), is an incredibly useful and versatile tool. 
&gt; Python wasn't built with explicit types in mind. Rather like JS. Okay, yeah, no. Now we know you're bullshitting. JS is weakly typed as well as dynamic. Weak vs Strong != Dynamic vs Static. JS is Weak, Dynamic, and has minimal type safety Python is Strong, Dynamic, and has quite a bit of type safety. And of course you can't assume operations-- because people can overload them.
When your working with fractals and generative art you use recursion quite a bit.
I've been programming for a few years and I still don't know git.
Haskell, no. Rust, a bit. Don't see the big whoop, also don't see the big whoop over static types. Yes, of course, to some they are helpful. But to others they are fluff and nothing more. To others, they are actually a hinderance.
Decorators. I still don't get them.
Thanks for your detailed answer ! Our Django project is quiet big (100Kloc) and some modules are tightly coupled (technical debt), so I really consider to use one :)
Whats poerty? Is it some new type of skills machines have developed?
it's interesting.
Yes.
I just used the first example that comes up when you click "learn more".
Yeah, people love to hate using the stuff built into the IDE but when you're first learning it's actually awesome as it holds your hand a bit, makes sure you don't fuck something up royally and just gets you comfortable with a lot of stuff. The Pycharm Git integration is fantastic and the vast majority of the time I don't use the command line. 
Git, like others have said. 100%, i still don't really understand how to use it.
Debugging. I always used print statements and whilst they work great, they suck. Then I spent some time and invested in learning how to use a debugger and its made me so much more productive. Something that would have taken me half a day to figure out I can sometimes figure out in a few minutes with a debugger. It's so useful when documentation is poor (lacking or confusing) or the code you need to work with is a mess. Personally the Pycharm debugger is my all time favourite with those little red circles and being able to drop to a terminal and play with stuff. This is something more people need to learn, and I think the Pycharm one is the perfect one for most people. I also struggled to learn to write tests. I would write them, but it took me a while to understand how to write good tests. Lastly logging. It took me a while to figure out how to log well. 
Windows kind of sucks for development, but it's not terrible. Linux is where it's at for Python development especially when doing machine learning or computer vision. That said, you come right on whatever OS you're using. That said, most people deploy to a Linux server and it's always best to develop in an environment as similar to your production environment as possible. In that case Ubuntu or Cent OS are excellent. OpenSuSE is exceptional as well with amazing documentation and great tools (Yast) but probably not the best place to start. It is my distro of choice though. 
Is there some friendly frontend for python mailing lists? Every time I use mail.python.org I feel like I'm in 90-s.
Is your virtualenv active? 
Thank for the question ;) Hope you’ll enjoy it. If you would have any questions about Dependency Injector, you’re welcome to open an issue on project’s github or contact me directly via email (it’s on my github page). https://github.com/ets-labs/python-dependency-injector https://github.com/rmk135 
Decorators are pretty tricky to wrap your head around. 
Your just describing references rather than pointers.
I’ve been writing python on and off for 6 years or so. I _still_ don’t generally do things the object-oriented way. My programming infancy was Commodore BASIC then QBASIC, into ANSI C, none of which had real OOP capacity. 
Do not just think of it as data.
Deprecate Python 2 support. I would not be willing to support both an async and non async code base at the same time if I wasn't getting paid to. 
I didnt really understsnd generics at all. Kind of a non-issue for python though. 
check this helped me a lot [https://realpython.com/primer-on-python-decorators/](https://realpython.com/primer-on-python-decorators/)
Decorators are just functions that accept a function then spit out a new function. It’s a higher order function. This allows you to wrap your functions in different effects. 
First language I ever learned was Q-Basic (in highschool). It would be a stretch to say I understood any programming after learning few primitives, like `disc` or `line` (it was mostly about making simple geometric figures appear on the screen, iirc). First non-trivial program I've ever written was programmed in Borland's C++ Builder. I intentionally don't say it was written in C++ because it was mostly drag-and-drop of Builder's components with copy-and-paste of code snippets from elsewhere. It would be too ambitious to say I understood how any of it worked. First language I sort of understood was ActionScript 2. This is, essentially, JavaScript augmented with few proprietary extensions and a framework for dealing with entities exposed by Flash player. This is where I finally started to understand some of the language machinery, and it would make sense to say that while something I understood, other things were confusing. I had two problems: 1. How `this` works (if you know any JavaScript, you would know that it changes depending on how functions are called). 2. How event handlers work (in JavaScript, concurrency is implemented by having event dispatchers and event handlers). From certain perspective, handlers are regular functions, but because they are only ever used as callbacks by an entity you don't control, you cannot return values from these functions, and often times it felt like you would really want to return a value from a handler, like when loading some content from a remote machine.
Literally the concept of “return” for some reason 😂. Like for the first few days of class when i started in college I didn’t understand why you wouldn’t just print 🤦🏼‍♂️
Thanks! This is the first time I've tested it with a bunch more users, so I have noticed a few bugs haha. And sure, I'd be interested. What portion of the my app were you thinking of integrating?
That’s just laziness. 
Say you had a list of parent-child relationships, and you wanted to design a function which would turn that list of pairs into a family tree. How would you solve that problem? 
1. uncommit large files 2. branch? fork? 3. solve conflicts
Or you can use [git-lfs](https://git-lfs.github.com/) and get the best of both worlds.
Debugging always literally kills me. Also, for now, I don't understand `asyncio`, although I `async`/`await` fine in JavaScript. Oh, I have to say I don't get callback either.
My biggest issues are usually related being ahead by X commits, having to rebase. Git status being reporting up to date, yet can't push/pull because changes would be overwritten (may be related to the first).
Could you please explain how? It doesn't step into imported libraries for me.
Yeah I'm pretty sure. It never steps into imported packages.
What package are you trying to step into exactly?
 __int__
Burn.
Think of it this way. Git is for text, binaries go on an artifact server.
Downvote for asshole response.
Working on a project only you will touch. Cool. Working on a project that 2 or more people will touch. Fuck you.
Classes are just a way to define your own nouns. You could always make a mule by mixing half horse and half donkey but maybe eventually you'll want to define what a mule is permanently and never have to define it again.
Multithreading is fine as long as only one is running at a time. Concurrency is the real bitch.
That's interesting... I might try that later to get a feel for it
Just tried with pandas, didn't work.
Then the issue is probably that you're trying to step into native code, and that's just not really possible, as most Python packages don't ship debug symbols.
Learn it. Seriously. I don’t even program professionally anymore and it still dominates my life. 
The problem with documentation isn’t it’s utility, it’s that most programmers just use it as a means to restate what the code could tell anyone who can read it. Like all writing, novice writers struggle with narrative (why are you writing this, what are you trying to portray) and brevity (say what you need to say and only what you need to say).
WOw ! Great news for us that supported both Python 2 and 3 .... [**u/ashishb\_net**](https://www.reddit.com/user/ashishb_net/) ! There are two excellent exercises at [The Learn Python](https://view.ly/v/dbnKNuaX34Jv) The Hard Way that will get you setup with an editor, python environment, and running some Python code. 
Ok that’s a bit strange. Have you tried the solutions listed in https://stackoverflow.com/questions/6084416/tkinter-module-not-found-on-ubuntu?
Sure! But you should implement an API then code a different desktop application that consumes that API. Or even with primitive sockets, you should implement something for server.
The hardest things about coding have always seemed to be * dependency management * environment (e.g. local) setup * IDE setup * scaffolding/project infrastructure that you need in order to actually start the code &gt; test &gt; code loop
Google doesn't follow pep8. They're neither unfamiliar, nor ornery nor lazy.
https://youtu.be/7lmCu8wz8ro amazing talk about them and not only
Took me a while to get recursion back in the day. Not so much the concept of it, but the implementation.
Anyone here wanna take a crack at explaining monads as well as how they could be used practically?
If you like the academic/less-comic-like style of learning, Head First Python could be annoying. I see your point. I’ve read several books for Python and found that Head First Head Python’s contents of Python are one of the best for a beginner regardless of its writing style. It covers from Python built-in functions to deploying a website in Python. If you prefer a more-like-an-academic book, I recommend “Fluent Python” that teaches everything in the Python Interpreter since different OS platforms rarely influences the learning flow of Python. It expects you to have a beginning level of python and basic programming language before reading the book. 
I've been looking for a TUI for simple CRUD applications for a while. I have little tolerance to reinvent the wheel, so I'd be very curious to see what you find. I'm open to many languages, but I didn't want to regress to C and direct ncurses. My use case is simple tables and forms editing accomplished over SSH with a minimal vt100 terminal. You'd think something like dbase IV over SSH would be a no-brainer in modern langauges. I've created and submitted example code using npyscreen and wasn't satisfied with the results. You can see it here: https://groups.google.com/forum/#!topic/npyscreen/kKAeXUenjZQ 
Do you know of a package I can try to step into?
Closures/decorators. I just don’t write them much, so I feel like I have to step through them in my head a bunch when I do. Pointers were weird for a while, but they just kinda clicked and don’t seem weird at all now, hopefully that’ll happen with closures too. To be fair, my intro to closures was JavaScript like 3 years ago, and I was reading it from one of the main JS books (can’t remember which - in a nutshell or the good parts or one of those type books), and the auto kept saying &gt;a closure is a function that ***closes over*** another function. Yeah, thanks, saying it louder really made me understand it lol
Continuations. call/cc in Scheme still makes my brain hurt.
I think I needed a /s on there
I would love to know the answer to this
Try Requests, for example.
recursion but eventually turned out to be not a big deal
Php!
They never stop being a pain in the ass...
C and C++ are still the gold standard for speed and while they weren't invented recently they are still in heavy use all over the place. For just the speed part, you need a pretty strong argument to use anything else. (For the learning part, "I want to" is fine.) But really, you need a fairly strong argument that even Python isn't enough. Premature optimization is the root of all evil. Measure the real bottlenecks first. Then try to fix via algorithmic changes. \*Then\* start thinking about changing languages. Your future maintainer (which might be you) will thank you.
Didn't work for me.
"Pointers" \~\~ pass-by-reference
Good points, but its quite hard to write a concurrent and safe code in C/C++ and it is quite hard to write a multithreaded application in Python at all, and in such situations, when speed is important and would benefit from running some operations in parallel, would it not be better to use a language that was made with multithreading in mind instead of writing it with C/C++ (that would require more work/time in this hypothetical scenario)? Still, like you've mentioned, as for now most of my motivation is "I want to" but there's also a little bit of "maybe it'll help me in the future" :) And the argument about optimizing Python code firstly is of course totally right. 
&gt; Go or Rust Nim: https://github.com/yglukhov/nimpy
How does go feel sloppy?
Look into Julia. For Python extension it’s a better solution.
+/u/CompileBot python3 with open('/tmp/random.txt', 'w') as f: f.write('1 2 3 4 5 6 7 8 9') sum_ = 0 with open('/tmp/random.txt', 'r') as database: for number in database.read().split(): sum_ += int(number) print(sum_) # Should be 45 
File system parsing, organizational hierarchy parsing, dom parsing, xml and json parsing, xml and json generation reduce type functions of any kind, gui components hierarchy parsing, basically all situation where you traverse through structure where all elements have either leafs or node type.
Not sure where the assertion 'a gui is easier than a tui' comes from. I certainly didn'say or imply that'. My experience is that gui/tui's introduce yet another event loop. That is in addition to the event loop that gets built into ny command line app. The beauty of the command line approach to laying things out is that there is only 'one event loop' to rule them all. Those of us who had little experience with gui programming to start with, end up developing apps that confuse the two. Ergo why I settled on the structure that I use. Now when I add that second event loop, I know who's zoomin who. And there is no confusion about who's got the data and who does what. 
- https://bigquery.cloud.google.com/table/the-psf:pypi.downloads20180817?pli=1 - Click "Query Table", then "Options", then uncheck "Legacy SQL" - ``` SELECT COUNT(*) FROM `the-psf.pypi.downloads201807*` WHERE file.project = 'yourproject' ``` Click run.
Learn both. Never ask for permission to learn. Just learn as much as you can until you don't want to learn anymore.
I'll send you the problematic code when I get home. Was tinkering with PRAW and made a function to store any comment/submission id the bot replies to and then check against the database to see If it has already been replied to it only worked properly when I stored to a variable, and I've had a similar issue in the past.
I'm pretty sure I used to do: for line in f.readlines(): #dostuff
Check this link (use Google Chrome for the best experience): [https://learngitbranching.js.org/](https://learngitbranching.js.org/)
Check this link: [https://learngitbranching.js.org/](https://learngitbranching.js.org/)
How do I erase cache? I've tried restarting PyCharm and uninstalling and reinstalling pyodbc multiple times.
I think the hardest part of multidimensional arrays is that they don't look convenient when printed. A list of lists looks far more ridiculous than a 2D array on paper. Anything higher order is just ridiculous.
File &gt; Invalidate Caches / Restart
It's been many years since I last laid hands on Haskell, but I remember learning monads, or rather failing to learn them, despite all of the imagery thrown at me like "a monad is like a burrito". When it finally clicked, it was because I deleted all of the burrito explanations that had been given to me before and actually looked at it from a technical viewpoint. Forgive me if I get the terms wrong, as I said: it's been many years since I dealt with it: \`Monad\` is a class. "\*A\* monad" is just any \*type\* that implements the \`Monad\` functions \`(&gt;&gt;=)\` and \`return\` in a way that obeys the three "laws". That's it. No more, no less. No burritos needed.
PEP8 is ONLY intended for core inclusion. Anyone attempting to force it elsewhere is extremely suspect.
No generics.
PEP8 is ONLY intended for core inclusion. Anyone attempting to force it elsewhere is extremely suspect.
This. Programming is extremely humbling. I can yell at Python all I want that there is no TypeError, that variable is exactly what it needs to be I said so _right there_, but in the end I'm always the one who is wrong.
I've found by far the biggest issue in my docs is prescriptive writing vs descriptive. Prescriptive is nice to write, because you guarantee that you can do X, Y, then Z, and it'll 100% work. It's not great for people to use, because humans don't do X, Y then Z. They do Y, Z, A, i, then complain that it doesn't work. Descriptive is a lot harder to write, but I think it tends to be a lot more useful for users. 
Oh hi :^)
Floor division, counting from, 0 list length vs list indexing, trivial stuff like that 
The biggest one was making code that people can understand really. Not that people can't figure it out but having a good strike rate on understandable code is hard at times. Now I'm pretty good at it that it can sometimes seem too simple but when you compare it with my older code where I didn't give a shit about maintainability the difference is crazy. 
Thank you, but that didn't help.
Another thing that sometimes helps is deleting and recreating the interpreter configuration. 
Still didn't work for me.
With respect to the for-loop I guarantee these constructs are equivalent. The only difference is that you have a list `data` that persists in the current scope. I'm trying to guess what your real code might look like for there to have been a difference. Perhaps if you had one number per line and had originally written with open('random.txt', 'r') as database: for number in database: #whatever then you would get each line with the trailing newline character. Your `split()` version would get rid of extra whitespace. Of course I'm totally guessing and my chances of being correct on a stab in the dark are low. One thing I'm sure of though is that two versions of the code you've shown are functionally equivalent. It would be interesting to see the original code to see what was going on. 
In my opinion macOS is similar enough to Linux. If there‘s anything that differs too much, you can always just use docker. Setting up a bare bones ubuntu is so idiotically fast these days
I find it a good way to deal with functions that you want to retry until success. For example, if you had a terrible internet connection and you're willing to retry hitting it up to twenty times. [Example I've written](https://github.com/cdgriffith/Reusables/blob/master/reusables/wrappers.py#L307)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [cdgriffith/Reusables/.../**wrappers.py#L307** (master → 0e396cc)](https://github.com/cdgriffith/Reusables/blob/0e396ccb293115e3bf4a326803257215cff6c138/reusables/wrappers.py#L307) ---- 
Monad is the singular of gonads
/u/lungdart means that spinning up multiple threads (multithreading) is dead easy, it's the getting multiple threads to play nice with each other (concurrency) that is challenging.
If wanting to use multiple python versions definitely check out pyenv and pyenv-virtualenv. I wrote a small guide a while back: https://www.tibobeijen.nl/2017/01/09/using-pyenv-and-pyenv-virtualenv-on-osx/
Not normally. But learning C is good if you need to put in C-code for your Python project to get more/better performance. It’s similar to using Assembly in C-code. 
This is a great example. I have absolutely no idea what you intend prescriptive and descriptive to mean in this case. How are they polemical? You are using the word prescriptive in a novel way, without any explanation as to what you mean. Just vague descriptions of general utility using abstractions? That helps no one. You have to explain plainly and clearly. No fancy words or assumptions about the audiences knowledge. You have to make it plain, because everyone has different specializations even in code.
Confused me as well. Will reply with code in a bit
Every time you recurse you use up more memory so python has set a limit of 1000 recursive function calls (this number may have changed in python 3, I'm a dinosaur with python). Python has a lot of overhead with function calls and with recursion this overhead is amplified significantly. However, if you don't mind using more memory and are sure you need to raise the limit, then import sys new_recursion_limit = 9001 # its over 9000 sys.setrecursionlimit(new_recursion_limit) will do the trick
Try installing pyodbc using pip *from within pycharm's integrated terminal*.
I don't think I'm going to far out on a limb to say that multi-threaded and/or concurrent code in general is not just hard to learn but actually hard. To be able to write correct multi-threaded code requires significant discipline and care. The best approaches provide a structure that allows one to avoid many of the unnecessary complications. For example the CSP (communicating sequential processes) model for concurrency disallows many forms of data sharing that trend to generate hard to understand interactions and hard to resolve bugs.
So if i have a lot of functions which start the same way i can use a decorator to take care of that bit? Couldn't i just call the decorator function on the first line of the decorated function instead?
I know what functions are, I know how they are used, but I'll be dammed if I can wrapped head around using them! 
To look at another way, documentation should most often focus on the intention not the implementation. The most important question to answer is not what the code is doing, but why you are doing that.
Even if it's just for myself, if it's something I turn away from and resume six months later, tests and docs are gold.
&gt; For just the speed part, you need a pretty strong argument to use anything else. Keep in mind that Rust uses LLVM, so for a lot of cases you will get very similar optimisations, so "how you write and test the code" will most likely be a lot more important factor than which of those languages you will use.
Yup, been at it for a little under a year now, just whenever I have the time. Looking to study CS next year so I just want to gain some understanding and skill with programming :) They will teach C# and java though so not exactly python, but I heard it was a good place to start.
Oh wow, thanks. I appreciate it :)
I think they're helpful when the the function goes into the middle of the decorator function, rather than the start or end. def timeit(method): def timed(*args, **kw): t1 = time.time() result = method(*args, **kw) t2 = time.time() print t2 - t1 return result Then call: def test(): time.sleep(1) print 'test' test()
Always document. I've come back to some simulation code I'd written after a few years and had to spend far too much time untangling wtf I was thinking to the tune of "why was I doing all these calculations on a four dimensional torus" when "//using a 4d torus to suppress boundary effects" would have made things immediately clear.
Writing reusable modules/classes instead of procedural scripts. It's not that I don't know *how* to write a class. I do. I even understand them pretty well. It's much more difficult to abstract the problem I'm trying to solve into a class/module that isn't a total mess.
Yes -- like I said in my post, Python name bindings are sort of similar to C++'s `shared_ptr`, but with a lot of the rough edges sanded off. (For example, Python can garbage collect objects that have cyclic references to each other; if you tried doing the same thing using `shared_ptrs`, you'd get a memory leak since they use refcounting instead.)
 import praw reddit = praw.Reddit(client_id='censored', client_secret='censored', password='censored', user_agent='censored', username='censored') subreddit = reddit.subreddit('Denmark') new_posts = subreddit.new() def reply_database(id): # So now you can add the post/comment id to the database when the bot replies and make sure it doesn't reply more than once. with open('Commented.txt', 'a') as database: database.write(str(id) + ' ') for submission in new_posts: comments = submission.comments with open('Commented.txt', 'r') as database: data = database.read() if submission.id not in database.read(): if 'politiken.dk' in submission.url: reply_database(submission.id) print('_'*15) print(submission.title) with open('Commented.txt', 'r') as database: data = database.read() for comment in comments: if comment.id not in data: if 'politikken.dk' in comment.body.split(): reply_database(comment.id) print('_'*15) print(comment.body) print('/n' + comment.id) else: print('Already replied to ' + comment.id) pass Some of this was proof of concept so it doesn't entirely make sense yet (i'm not actually replying to anything, just making sure it works). But basically what would happen is, it would print the same comments over and over again unless i stored it in a variable like i explained. Thonny ide was riddled with errors so i couldn't get the debugger to work. I think i was getting an iowrapper error a bunch, but not sure that was the issue exactly.
Hashing
Return vs print. OOP Lambda List comprehension Decorators 
awesome, thanks! 
I thought it was funny, buddy. Upvoted you out of null into the positives.
hunter and pecker
If you go to File | Settings | Project | Project Interpreter, you should see a list of packages, does that list of packages include pyodbc?
Seriously, this. If you are the programmer, it's easy to write code that does something you already understand. It's challenging to write it in a way that is concise or well written for future development. And it can be difficult to go through someone else's undocumented codebase, on a deadline, and know how to add to it in a coherent way. On the flipside... Documenting your own code is pretty easy. For each minute you spend, you're probably saving someone else 10.
Super.
Yes, it does
I presume you mean the Python Console available under the Tools menu in PyCharm. Trying to run pip from there gives me an error complaining that it doesn't know what "pip" is.
But why not just go: def time_it(method, *args, **kw): t1 = time.time() result = method(*args, **kw) t2 = time.time() print t2 - t1 return result Then call: def test() time.sleep(1) print 'test' Time_it(test) Seems like the same result but with less code to me.
 from os import system system("say '" + input() + "'") For correct code block on Reddit you must have 4 spaces or 1 tab
I'm not sure what exactly you're trying to do, but I've always done: with open('file.txt', 'r') as f: for line in f: pass # Do something
Oh I see what you mean! I guess if you're calling test() multiple times and always want to wrap it in time_it(), then it's a bit less effort. Ultimately it's syntactic though.
How you use LLVM is dramatically more important than LLVM use. 
The old single threaded-multi thread....
Makes a lot of sense, thank you for explaining it
call by name, call by reference, and call by value
C'mon, that was a pretty epic typo. Own it!
Just do a Google search for "pho".
https://github.com/PyO3/pyo3
Why wouldn't you think of it as just data? That's kind of the entire point of classes: to organize your data and the functions that act on that data in a meaningful way.
Serious question. Do people keep a git command cheatsheet when they use git? Because finding a command on SO that works for a certain situation is easy, but the next day or week I will find myself in that situation again and have to look up that command again. 
What's ozone got to do with rust?
That's entirely missing the point of encapsulation.
-&gt; /r/howtohack -&gt; /r/netsecstudents Honestly python will only be part of your toolset you will need a lot of networking and basic computer knowledge as well 
Since you did not specify your experience with python, I am going to assume you ate a total beginner. First you should get comfortable with python. The learn ablut network protocols and how to use them in python. After that learn whatever you need for your current situation.
I did not know that numpy supports fortrun. I'm googling it, but as far I did not find any examples of this, if you've got some got some resources about it then please share them
I did. I got my workflow down and kept track of common commands and why I used them.
What would be the most important feature (or three) that PyCharm has and Spyder does not? What is PyCharm missing that you would like, and that Spyder also does not have? All that for a scientific workflow, I mean, not a web dev or other business workflow. I appreciated your response but couldn't actually find anything actionable or concrete in it.
I think not understanding PHP is probably better for you than understanding it.
Opynion
Isn't that basically what Cython is?
Plex namer?
How long have you been coding? 
Do you understand it now? 
Good morning, \_SunBrah\_ The running times for each solver function are recorded in file [ks\_dp\_solvers\_profiles.txt](https://github.com/mmamaev/looping_python/blob/master/ks_dp_solvers_profiles.txt) . I reran the script on a faster machine under different OS and got roughly the same ratios: solve_naive 135.1 sec solve_map 69.5 sec solve_list_comp 53.6 sec solve_numpy 0.49 sec There is also a no-`lambda` version of the `map`\-based solver. It consistently shows a slightly worse time than `map``+lambd`a (69.55 sec in this case). Also, inspired by your encouragement, I dashed off an [oversimplified benchmark](https://github.com/mmamaev/looping_python/blob/master/for-map-listcomp.py). It computes list `c` by applying some function to lists `a` and `b`, elementwise. There are five functions serving as `function`: * max * sum, returns `x+y` * dist1, returns `x*x+y*y` * dist2, returns the same value but computed as `sum(power(x,2), power(y,2))` \- this is to make many function calls * power, returns `x^y` I tried five looping techniques: * `for` loop, individual elements of prebuilt list `c` are accessed by indexing * `for` loop, list `c` is being built by appending * `map` with `lambda` * `map` without `lambda`, lists `a` and `b` are fed to `map` directly (though this is what we cannot do in the knapsack script) * list comprehension. The best running times for lists of 100 000 elements, after 100 rounds: max sum dist1 dist2 power for+append 0.034635 0.029972 0.041277 0.059206 0.033926 for+index 0.036813 0.031306 0.042612 0.061343 0.036542 map-lambda 0.032580 0.026926 0.037940 0.055374 0.031531 map-nolambda 0.016315 0.012339 0.022571 0.040457 0.015470 listcomp 0.028113 0.022837 0.033930 0.051079 0.027025 So far, `map` with `lambda` consistently runs faster than `for` loop, even though the margin is narrow.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [mmamaev/looping_python/.../**for-map-listcomp.py** (master → 188cc2b)](https://github.com/mmamaev/looping_python/blob/188cc2bb07ff1b9c617fe777a74ceaf0266a8ebf/for-map-listcomp.py) * [mmamaev/looping_python/.../**ks_dp_solvers_profiles.txt** (master → 188cc2b)](https://github.com/mmamaev/looping_python/blob/188cc2bb07ff1b9c617fe777a74ceaf0266a8ebf/ks_dp_solvers_profiles.txt) ---- 
I started with Java, and I had a lot of trouble with Interfaces and Abstract Classes and which one worked for which situation. Inheritance in general was a bit difficult to wrap my mind around. Of course, starting with Java means that once I started learning Python, it took me a while to understand the fact that not everything has to be in a class, and sometimes a dict or NamedTuple is better. And Comprehensions really threw me off at first.
Our QA engineer could reproduce your issue, and he's created an issue for you here: https://youtrack.jetbrains.com/issue/PY-31443 Looks like a temporary workaround is to use 'Go to Definition' (Ctrl-Click on pyodbc, or use Ctrl+B) which forces PyCharm to see it's installed. If you'd like to get updates on that ticket, please vote for it, and you'll receive updates as it gets fixed.
This post is better suited for r/learnpython
There’s a bunch of stuff on google, just search for “fortran python” or “f2py”.
The assertion only came from the statement regarding event loops and widgets, but that's fine. I'm enjoying your posts on your segmentation of tasks and architecture.
Yeah I have like 5 common commands in my workflow where I know what they do but if anything goes even remotely wrong I just save copy all my work to a different folder and reset everything. 
There's a book called "Violent Python" about this.
Yep inheritance Vs composition.
Care to explain it? 
As an example do you have children or nieces and nephews?
You know but I still have the urge to learn it eventually, if for nothing but the fact that it made realize I liked programming.
&gt; No fancy words or assumptions about the audiences knowledge. &gt; &gt; How are they polemical? :~)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
LLVM is a toolkit. LLVM can only do as well as the language/compiler/jit allows it to do. With the logic applied above that Rust uses LLVM, therefor it must be good, by extension any language implemented with LLVM is equally good. Which is simply not true. This is also the case with the JVM. For example, Jython, on top of the JVM, is slow as Christmas. A large part of that is that Jython doesn't provide nearly as much information to the JVM to allow for as many optimizations as Java and other languages built atop do. If you're interested there are Python bindings for LLVM. See reference below. I'm sure there are others. There are tutorials on how to write basic compilers with LLVM. You'll find that you simply create the constructs and the analysis required to even present enough information to LLVM to allow it to meaningfully optimize is in itself a considerable effort. Which ultimately means, it's all about what you do with LLVM moreso than the mere fact that LLVM is involved. Which is not a knock on LLVM in any way. It's an amazing project. As you can read here, LLVM *can* provide a lot. But it still requires a lot of complex development to leverage. Yet LLVM can provide for everything from static compilation to JIT. Yet even static compilation requires a ton of information to be gleaned and pushed into the LLVM layer to allow for optimizations. LLVM can provide the middle layers of a complete compiler system, taking intermediate representation (IR) code from a compiler and emitting an optimized IR. This new IR can then be converted and linked into machine-dependent assembly language code for a target platform. LLVM can accept the IR from the GNU Compiler Collection (GCC) toolchain, allowing it to be used with a wide array of extant compilers written for that project. LLVM can also generate relocatable machine code at compile-time or link-time or even binary machine code at run-time. LLVM supports a language-independent instruction set and type system.[18] Each instruction is in static single assignment form (SSA), meaning that each variable (called a typed register) is assigned once and then frozen. This helps simplify the analysis of dependencies among variables. LLVM allows code to be compiled statically, as it is under the traditional GCC system, or left for late-compiling from the IR to machine code via just-in-time compilation (JIT), similar to Java. The type system consists of basic types such as integer or floating point numbers and five derived types: pointers, arrays, vectors, structures, and functions. A type construct in a concrete language can be represented by combining these basic types in LLVM. For example, a class in C++ can be represented by a mix of structures, functions and arrays of function pointers. The LLVM JIT compiler can optimize unneeded static branches out of a program at runtime, and thus is useful for partial evaluation in cases where a program has many options, most of which can easily be determined unneeded in a specific environment. This feature is used in the OpenGL pipeline of Mac OS X Leopard (v10.5) to provide support for missing hardware features.[19] Graphics code within the OpenGL stack can be left in intermediate representation, and then compiled when run on the target machine. On systems with high-end graphics processing units (GPUs), the resulting code remains quite thin, passing the instructions on to the GPU with minimal changes. On systems with low-end GPUs, LLVM will compile optional procedures that run on the local central processing unit (CPU) that emulate instructions that the GPU cannot run internally. LLVM improved performance on low-end machines using Intel GMA chipsets. A similar system was developed under the Gallium3D LLVMpipe, and incorporated into the GNOME shell to allow it to run without a proper 3D hardware driver loaded.[20] For run-time performance of the compiled programs, GCC formerly outperformed LLVM by 10% on average in 2011.[21][22] Newer results in 2013 indicate that LLVM has now caught up with GCC in this area, and is now compiling binaries of approximately equal performance.[23] https://en.wikipedia.org/wiki/LLVM https://eli.thegreenplace.net/2015/python-version-of-the-llvm-tutorial/ Hope this helps. 
Julia is fast and it's as easy to write as Python. It was written for use in computing clusters and so has parallel computing built-in. 
Thanks for the explanation. It might be on a lower level than I thought. &gt; Newer results in 2013 indicate that LLVM has now caught up with GCC in this area, and is now compiling binaries of approximately equal performance.[23] Good to know and good news for Rust (one less reason to worry about usage of LLVM).
Wow the salt lol. Was wondering why I was downvoted and saw you got bombarded.
functions. Coming from a PHP background where you can just chuck code in a separate file and keep including it I didn't see the point.
&gt; "I know I need to do X, what is the command for it?" What I learned on, TortoiseGit does this excellently. It has visual representations that help you out but it also shows every command its executing underneath so switching to CLI is a breeze afterwards.
I’d like to see values for lists of my custom types in the Variable explorer tab (Matlab already does it).
thanks; any particular (small, self-contained) example list / custom type? 
*subscribed* in the same boat as OP!
Monads are a kind of mental trap for programmers. The concept is so simple and abstract, when you read it you don't believe it. You will grasp on a surface level what it means; but, you think. Yeah I get that, but what does it MEAN. Then you do what a programmer does best and apply more mental energy to try to understand what it means. It's a bit like that star trek episode where they find this anomaly attacking them and they keep boosting the shields. The more they added power to the shields the stronger it got. Turns out, the anomaly was feeding on the shields. The approach of throwing more mental energy at it doesn't work unless you are a computer language theorist. If you aren't a theorist you don't have a rich background of theoretical constructs to coordinate it with and to put it into a construct. If you are a programmer, you are a practitioner. You need to gain experiential knowledge. You need to use different monads as much as possible. Stop thinking so much about what monads are and just use them. Yes, think less! Once you gain experience with them, then the burrito blogs will make sense. THEN you can think about what it all means.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
who is down voting you ? lol this place is weird 
Hahaha! I had so much fun hacking on that with you! I thought we were sworn to silence when we found out! Great talk, great blog. 
&gt;Working on a project that 2 or more people will touch. Fuck you, document. But there's always at least 2 people on a project. You and future you. Future you will curse current you for leaving behind messes because "I won't forget what *this* does!"
Guess I forgot to mention that I'm in the "scientific" space since it seems important. As a side note I have seen this separation between "scientific" and "normal"(?) programming been done in the past and I don't really get. Does it implicit mean small and large projects where "scientific" programming is considered more to be "one-off"/small scripts or something else? Either way, some examples on things I discovered I really liked when moving over to PyCharm: improved native pep8 helper, how running tests are organized and hide functions/class. There's also a lot I have not used yet which seems useful (GIT integration etc.)
Ah, I forgot! NO ONE READ THIS, IT'S SECRET
Julia 1.0 just came out and looks awesome. Btw, have got tried simply doing numba.jit? What are you doing that's heavy? 
This is an awesome post, I'll be delving into this. For more (ab)uses of manipulating Python's AST, see [Hylang](https://github.com/hylang/hy), a lisp embedded in Python with full support for macros.
I'm learning the difference between a list and dictionary, and learning how to use them. I'm just a POS noob.
What on earth...I love it!
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Thanks a lot. I tried 6700 (\~95%) downloads are version "null" :/
I do not use spider so I'll just tell you what I really like about pycharm compared to others. *The debugger: it's so quality and stepping through a series of data transformations and seeing what changes at every step is the only way i want to debug code now *great support for unit tests: combined with the debugger you can test, take apart and analyse individual functions and classes at a time without running anything else *easily create or attach to virtual environments *debugger has a built in shell so you can drop into your environment midway through the code execution and play with the objects you have in memory *view/manipulate dataframes etc in the data viewer *attach/view and query databases easily, it's my go to database viewer *all the rest, linting, docstring generation, code folding, structure - view, shortcuts, TODO organiser, highlighting unused variables *powerful refactoring, change a function name and it will search for usage across the project including docstrings *git support is great, especially dealing with file merges in chunks graphically *auto install requirements.txt if you want *create unit tests with a click 
Check out /r/learnpython, they should be able to help you out more than /r/Python. Good luck! 
Writing a little script to count how many hours I have left in this hellish IT call center job before I start my new job as a DevOps Engineer next month. A fun little weekend project and it'll be really cathartic to watch it count down every day. Other than that, I am continuing my ongoing adventures with Flask and Requests. I was previously working on a website that would query Bungie's Destiny 2 REST API, and show notifications when you have enough rep tokens to turn in for a reward, or when you find better gear than what you already have equipped, or when your inventory's getting full, or other things like that. That project suffered from feature bloat and I was working on too many aspects of it simultaneously, setting up a flask site and sessions and a user database and API interaction and everything else all at once. I ran out of steam and put it on hold for a few weeks. Now I'm going back to it and trying to just do one part of it at a time, doing the API interaction first, then the rest of the back-end stuff (database, login, etc.), then the front-end. And I'll probably draw up a list of features I want to include **before** I throw myself head-first into coding like I did last time.
can I ask what’s a rainmeter ? 
Your intuition is right. Unless the language is designed to use recursion (Lisp, Haskell ...) you shouldn't actually use recursion to solve the problem. When you are using recursion you are actually exploiting the call stack and re-purposing it as a data structure for solving your problem. This isn't generally good because the call stack has limits that were set by people that weren't thinking about your particular problem. What you should do instead is convert your recursion problem to a loop by creating your own backtracking stack. As your algorithm goes down a path, it pushes "breadcrumbs" onto the stack. When you hit a dead end you pop things off that stack until you find the last branch point and keep going. The termination condition for these types of algorithms are when the backtracking stack is empty. Recursion problems with a single path to explore are actually simpler, they don't even need a backtracking stack. Generally these kinds of recursion problems can be converted to a simple loop without much trouble.
Do you guys already get a lot of grief for not going with OPyio? Because if not, I'd like to offer you some grief.
Check out r/learnpython
`print(x['created'])`
This is essentially iterating over the lines twice, not a problem for small files but could be a problem with really big file. This is reading the whole file then splitting it into a list, then you're iterating over the list. If you want to only iterate over the file once then you can do for line in f: # do stuff This saves loading the whole file into memory.
`x[created]` the `created` is a var called created not the key. Try `x['created']`
There's a difference between documentation and commenting code. Explaining why a string needs to be stripped doesn't help a whit if you're documenting the API of string.strip(). 
I'd be lying if I said I had any *real* use cases for this. It was mostly a "I wonder if this is possible..." kind of endeavor. &gt; I thought it was a great post but some of the uses are lost on me (whoooosh) Don't worry, this is some pretty weird stuff :) &gt; what it looks like to me is is a way to declare parts of the overall program (app, script, binary, whatever) using the actual language parser instead of declaring objects I had never thought of it that way, but that's an interesting way of putting it. The whole idea of a macro is shorthand, whether that's to reduce the amount of boilerplate code you have to write, or expressing something in a simple way that would otherwise be obscured by the amount of code necessary to implement it. &gt; ultimately, what are the benefits of this approach In short, my macros don't do anything that you couldn't do by hand, it's just a matter of convenience. The idea is that I can write a library that provides some functionality, and you can add that functionality to your code/class/whatever without having to do much work at all. It makes more sense in the Rust world, where's there's no inheritance. In Python, if I want to give you a default implementation of some class, I would create a base class. You could then inherit from that base class, override the methods that you want to tweak, etc. In Rust there's no inheritance, so I would write a macro that reads your struct definition and then generates the default implementations of the functionality my library provides. The Rust version generates the code when your program is compiled, so there's no overhead at runtime. My Python "macros" also work when Python reads your class definitions, so there's no runtime overhead there either (unless you're doing something like checking every time whether you're allowed to set something to a particular value). 
Can you post the exact error message? Usually, this is how it's done these days python3 -m pip install packagename Do NOT be tempted to sudo pip. It's how you break things. It modifies the system interpreter, which your OS uses. Also having all your python packages using the same library causes problems if they need different library versions. Instead, create a virtual environment with venv, and pip install into that. 
That's good to hear. If you're interested I'd be up for sending in a pr if u decide to set up services like Travis-ci/appveyor and the like
Grief received, though I'm not an organizer :) 
&gt; would it not be better to use a language that was made with multithreading in mind instead of writing it with C/C++ You're going to call it from Python, and probably call Python from it, so having an opinionated concurrency story is actually a drawback (if you're thinking Go in particular here). Seriously pybind11 is awesome and cute, you'll enjoy learning it.
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
It's a framework for displaying dynamic or interactive widgets on your Windows desktop (https://www.rainmeter.net/).
To control Rainmeter, you'll use `os.system` or `subprocess.call` to run the Rainmeter .exe with appropriate command-line options: https://docs.rainmeter.net/manual/bangs/.
Are you looking to have a rainmeter module that you can click to open your python program?
Check out this demo: [playground.tensorflow.org](https://playground.tensorflow.org). It helped me visualize why neural nets work, and how they boil down to a (very complex) regression problem. 
Look into `pyenv` and `pipenv`.
`You can use pass the json to create a pandas dataframe:` `import requests` `import pandas as pd` `url = 'your url here'` `response = requests.get(url)` `df = pd.DataFrame(response.json())` `#If the json has nested objects like you are showing you can the following line instead of creating a regular dataframe #like I listed above.` `df = pd.io.json.json_normalize(response.json())` `df.head()`
Using Pandas here is way too complicated. OP just needs to understand a dict first.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
For some reason, it took me a while to start using dictionaries. I came from a C background so I it never really occurred to me to use a dictionary over something like a class. A list is an ordered sequence of elements, whereas a dictionary is a grouping of keys with values. So in a way, a list is like a dictionary that can *only* have integer keys, whereas a dictionary can have (almost) anything as a key.
Try /r/learnpython. Be sure to show code that we can run and reproduce your problem. In your case the output is very dependent on what "x" is. 
I suspect git is something best learned by actually implementing a minimal git clone. That way you will get a good understanding of the underlying data structures and how the various commands manuliplte those data structures. ------------ My understand of the git and it's data structures: The contents of files are encoded as "objects", indexed by the hash of their contents. A commit is simply a tree (directory structure) mapping the objects to filenames/paths, along with some metadata (commit message, author, previous commit). Because commits referrer to their parent commit, any repo with branches will be a tree of commits. One again, these are indexed by the hash of their contents. A tag is simply a label pointing at one of tho commits and giving it a human readable name. Branches don't really exist it the git data structure, they are little more than tags pointing at the "head" of the branch (one of the tips of the commit tree). The git client has code to update the head whenever you commit to a branch. The entire structure is Copy-on-Write. Updating a file doesn't update the corresponding object, it creates a new object with a new hash. Likewise, amending a commit doesn't replace it, you create a new commit with new contents and update the branch head to point at that new commit. The old commit is still there in the commit tree, orphaned by any branches/tags. When you rebase, git simply copies the contents of commits and makes new commits with updated parents (and with updated objects and file contents). The old un-rebased branch is still there, orphaned. When you merge, git creates a commit pointing at two parents. If the merge is simple, with each file only edited on one branch the merge commit can simply point at the appropriate objects for each file. For commits where a file is edited on both branches, the real magic happens in the next layer down, merging the file contents line-by-line and detecting conflicts to be resolved manually by the user. But once that is done, the file contents are inserted into new objects with new hashes and the merge commit is created pointing at those merged objects. I believe early versions of git never automatically merged files edited on both branches, always requiring programmer intervention. 
Thanks for showing me that bot, I didn't know it existed and I'll be sifting through its source code to see if it has models that are helpful to pythonHelperBot. Right now there is a naive bayes classifier to identify if a sentence is a question, but it doesn't distinguish between an actual question and a rhetorical question. A higher quality trained bot is the end goal, but first I needed to build out a ton of the infrastructure so the bot can consistently run, and get a baseline of its performance in a simple setup. Most of the `if statements` will become elements in the post's feature vector. (Performance may vary). I also needed to evaluate what kind of performance I wanted: was it actually better to have many false negatives if it meant fewer false positives. (This clearly being a false positive--and deserving of downvotes, preferably below -2 votes) It's running on a raspberry pi. The source isn't public yet, but it'll be open source once I get the bot into alpha (when all of the original features I envisioned for the bot are present in a very simple form). I'm working on the last feature: suggesting relevant stack overflow posts to help the user. This feature will have a secondary element: implement a few question/answer papers to try to answer the original question, but I haven't decided when to try to implement it. Right now I'm just focusing on building a minor search engine for a local copy of stack overflow.
Spyder is really great for analytical work, and works basically like a jupyter notebook on steroids for me. Autocomplete works way better in REPL than it does in the code pane though, which seems really odd.
You are storing data in a single file, with space-separated records and using `if x not in y.read()` to determine if the database already contains the record. Take the example where your database file contains `1234 2345 3456 8888`. If you ask whether that file contains `12`, the answer is `True` which is not what you want. This is why flat files like this generally put a line break ('enter' key on the keyboard) between records so each record can be compared completely. I don't have time to try to work out what your code is trying to do, but the second for loop `for comment in comments` seems to be assuming the file will contain IDs of previous comments it has replied to. You are reading the file once (`data = database.read()`) then writing to it afterwards and never reading it again. If you expect the writes to show up in variable `data` then you need to call `data = database.read()` each time in the `for comment` loop.
Will do thanks
This
Sounds like a lot of scope creep. :p
My friends and I are all in a Slack group together, and share a lot of music with each other in various channels. I made a bot which parses Spotify links into a playlist, and automatically creates new playlists each months. I've also added a plethora of other features to the bot, just to add some fun to our Slack group. Currently it's had a few bugs with regards to scheduling events, since the library I'm using doesn't natively support timezones: [https://github.com/dbader/schedule](https://github.com/dbader/schedule) I've dealt with most of the issues I've seen, but there are a few more I need to squash this weekend.
Good human.
Thank you, 1ynx1ynx, for voting on pythonHelperBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://botrank.pastimes.eu/). *** ^(Even if I don't reply to your comment, I'm still listening for votes. Check the webpage to see if your vote registered!)
https://www.jetbrains.com/teamcity/
Slack : [https://keralarescue.slack.com/messages](https://keralarescue.slack.com/messages)
What language and what duffle clicked with you that to make you understand coding? 
Why would you want to spawn an event loop inside of another event loop?
I love Python so much! It's so simple, but extremely powerful, and once you master it to some extent, you can go full ninja and implement all sorts of crazy things. For example, did you know that there is a [full-blown C compiler](https://github.com/ShivamSarodia/ShivyC) written in plain Python?? And also (let me be a shameless plug for a moment) a (relatively limited, but working) [virtual machine that executes x86 object code](https://github.com/ForceBru/PyVM) written, again, in plain Python, without any external dependencies??? Python is super powerful, even though it's not very fast sometimes.
What is the final + sign for also i want the say cmd to read outloud what i put in the input
This is not related to python
This post is better suited for r/learnpython
You may also want to check out anaconda (conda or miniconda in AUR) 
This isn't really related to python. Try r/learnprogramming
When you write a say command on the command line you must enclose the phrase in quotes, so if you want say to read hello world you would write on the command line something like: say 'hello world' Note the quotes. So my code add the quotes around whatever you want to it to speak out loud and that's what the last plus does, it closes the single quote owned in "say '"
Your type, Path, needs to go after "param".thr current location is the description of the parameter 
This post is better suited for r/learnpython
This post is better suited for r/learnpython
This post is better suited for r/learnpython
This post is better suited for r/learnpython
It's related to Python package building
thank you my man.
For people who have used it, what do you think of Trio? [https://github.com/python-trio/trio](https://github.com/python-trio/trio)
I recently saw [this short series](https://youtu.be/aircAruvnKk) (4 videos, 1 hour or so in total). It’s pretty good to have a base understanding of neural networks and how/why they work. Ofc in one hour you won’t have a deep understanding of everything, but it’s a good place to start... Hope it’s what you are looking for...
I'm working on a CLI tool that handles versioning and generates CHANGELOS files. [https://github.com/mbarakaja/braulio](https://github.com/mbarakaja/braulio)
I can help u out if you're free later tonight 
No worries. As someone who almost exclusively writes `asyncio` code, I've been forced to learn again and again that an `asyncio` program has a single thread. Sure, you can have a process or thread pool executor, but there's only one scheduler and only one thread interacting with that scheduler. If you can learn to work with that then it becomes incredibly advantageous because most of the classical concurrency problems just go away. I rarely needs locks, and I can increment counters and mutate things with no fear because I know that nobody else is going to read that variable until I damn well tell the event loop I'm done with an `await`.
Oh man I remember this one. Shit was wild my man.
Consider integers (like `i`, `j`, `k`) and addition (`+`): * `+` is *closed*: `i+j` is also an integer. * `+` is *associative*: `i+(j+k)=(i+j)+k` * There is an `+`-*identity*, zero: `i+0=i` * Each integer has a `+`-*inverse*, its negative: `i + (-i) = 0` * `+` is *commutative*: `i+j=j+i` From only these simple five facts many useful conclusions follow. Other structures follow similar rules. For example the rational, real or complex numbers and addition. Or the nonzero real numbers and *multiplication*. Or polynomials. Such structures are called *abelian groups*. But for example matrix multiplication is not commutative. Non-commutative structures like that, which only follow the other four rules, are just called *groups*. Remove another rule. For booleans and the operation `OR` there is no inverse. It's not a group, but a *monoid*. Only three rules remain (closed, associative, identity). Remove another rule, keep only *closed* and *associativity*. This is called a *semigroup*. Keep only *associativity* and the *identity* instead. This is called a *category*. *Rings* are structures with *two* operations `+` and `*` that follow a bunch of rules (`+` abelian group, `*` monoid, distributivity). Again integers are a simple example. **TLDR**: Do you need to know any of this to use integers and addition? No. It's similar for monads. Monads are structures with some operations that follow some rules. That can be useful because it means the structure behaves like other monads. Things that behave like integers are rather intuitive (if you're used to integers). Things that behave like a monad are intuitive if you're used to monads. ---- Example 1: A normal, simple Python list of type `List[str]`: `["a", "x", "y"]`. Sometimes you get a `str` that's not in a list at all: `"n"`. The operation `def build(s): return [s]` can build a list from that string. Sometimes you get a nested list of type `List[List[str]]`: `[["a"], [], ["x", "y"]]`. The operation `def flatten(nested_list): return [item for inner_list in nested_list for item in inner_list]` takes a nested list and returns a normal list. Sometimes you want to use `map` on a list. ---- Example 2: Python's `concurrent.futures.Future`. Sometimes you get a `str` that's not in a `Future` at all. `executor.submit(lambda x: x, "my_string")` can turn it into a `Future` for you. Sometimes you may get a `Future` of a `Future` of a `str`! `executor.submit(lambda x: x, executor.submit(lambda x: x, "my_string"))`. That's scary. Can you "flatten" it? (Monad intuition / analogy to `flatten(nested_list)` says "yes" this should be possible!) There's also a `map` here! Coincidence? No. When to use it? Intuitively in similar situations as you would use a map (or list comprehension in Python) for lists. ---- Example 3: Python's `Optional[str]`. In other words `None` or a `str`. This one is messed up in Python, because you can't really have a `Optional[Optional[str]]` here. Great, that means we don't need a `flatten`. But it also means you can't easily model (in Python) something to differentiate "No we don't have anything here" from "Yes, we have something, but that something is a `None`". ---- What's the big deal? Do you need any of this? Mostly no. But sometimes when you encounter weird stuff like "a future of a future" it may help to have some intuition or know what kind of simple analogies are probably somewhat structurally similar. When you design a fancy library with structures and operations, try to see if a map / flatten makes sense. These are quite natural and flexible.
&gt; Cython's type system is different enough from mypy's that it is unable to &gt;optimize mypy enough. Cython's type system is conventional C/C++ types. What's more likely is that mypy is relying on dynamic features of Python that don't readily translate into C/C++. &gt;Carl's benchmarking showed only a 5% speedup via Cython, That's because they didn't take any advantage of Cython's features, merely passing it pure Python code. PyPy actually performed WORSE. The idea then that they're going to build, from scratch, a system that takes pure Python and produces amazing speed-ups seems rather naive and optimistic. Cython, with many years' lead time, can't translate mypy into performant C and the best Python JIT is slower than Python on the same code. Sounds like they're promising a miracle. 
There's some people here who are major Nim fans and extol it as Python-like. In reality, Nim borrows a lot from Pascal and has a Perl-like fascination with symbols as well. As someone who used Pascal/Delphi for over 20 years and then fell in love with Python, Nim is far too Pascal-y for me. Most of the things it borrows from Pascal are the things I felt Python did better, unfortunately. 
Nim often reads like Delphi/Pascal.
Too much Delphi/Pascal just borrowed out of a sense of nostalgia though. And I say that as someone who used Delphi for 20 years. And the obsession with symbols would make Larry Wall smile. 
It's also next to impossible, if you ask me. They fed unaltered mypy code to Cython and got almost no speedups. They fed it to pypy and it was *slower*. But they expect to take unaltered Python, feed it to their wonder-system and get C-like speed out of it? How they expect to do this on a code sample that Cython, pypy and Nuitka all fail at, despite having many years' lead time, I have no idea. 
Honestly, I think was it was just having a formal education. It really started to click when i had a professor teaching me instead of trying to teach myself. But to answer your question, it was Python.
There is a lot of scope creep, but I'm trying to prioritize coding the original features and writing notes in the roadmap for the scope creep features. The Q/A feature was the whole reason I wanted to use Stack Overflow in the first place, so it's getting priority right now. The biggest reason I'm not using stack overflow's site but instead am using a local copy is because I have next to zero experience with web scraping. I'm use to bioinformatics where a lot of my tasks are various forms of classification, visualization, and other random problem solving. Nearly none of which involves web dev or related knowledge. (Bioinfo is extremely broad: this is my experience, not a general rule) That said, there's other benefits to a local copy, which is why I didn't try to tackle the (presumably lowish) learning curve of web scraping. * I don't want my ip address blocked by SO for too many requests. My productivity would drop far too much. * SO's site search is.. not great. Soon I'll find out if I can make a better one, so I hesitate to say it's bad, but I have a hard time finding useful posts using it, and the bot has an extremely hard time. * To train a Q/A algorithm, it looks like it helps to have a lot of data to train it with, and a local copy of stack overflow should give me that. It's even decently labeled with accepted answers, and highly upvoted answers. At that point I already have a local copy, so why not limit my number of outgoing requests. The biggest downside to using a local copy will probably be having to update the database, and giving out-of-date answers in between updates. Hopefully in practice the out-of-date answers are few and far between so it's an acceptable fault. If not I'll have to reevaluate this approach. Thankfully, basic questions don't go out of date very often. 
nice one ;)
So decorators that change the actual source code?
It sounds more like you don't understand async rather than asyncio having any intrinsic problem. I say this because it does play with threads and spawning an event loop in an event loop is weird and sounds like the sort of thing someone who doesn't understand the paradigm would do. That being said, one failing of asyncio is that its documentation isn't very good in the sense that it largely isn't written with the audience of people not familiar with async.
Ah, Fundamentals of AI you seek.
Oh, that was definitely it.
Not optimal at all, but it's this what you want? Try it. def functionname(message): # 3: Return the right answer """This takes an input and returns something else""" if message == "hi": return "you sad hi" elif message == "hello": return "you sad hello" elif message == "potato": return "this is the potato response" message = input() # 1: Asks for a message answer = functionname(message) # 2: Call the function print(answer) # 4: Print the answer
Yes. Thank you so much. 
__name__ = '__main__'
Interested in reports too. It’s pretty new but api looks intelligible and well designed. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I find it much more intuitive to traverse a tree with recursion
This was one of the most entertainingly-written blog posts I’ve ever read. Great read! 
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
If you mean if \_\_name\_\_ == '\_\_main\_\_': that you see often in scripts. \_\_name\_\_ is equal to the name of the current module when imported, but when you execute directly a script the value of \_\_name\_\_ is, (you guessed it) '\_\_main\_\_' . Why this ? Because if you put your code without this condition, when you would import your code, it would be executed, or you don't want that behavior. 
It’s a fundamental misstep IMO. The whole idea is make it more convenient to do cooperative multitasking. The problem is a) it isn’t convenient enough and b) cooperative multitasking is a bad idea and preemptive multitasking is better. Some async IO systems are better than others but at the end of the day, it’s a chimerical paradigm. 
That definitely cleared it up alot
I would deprecate Python 2 completely. Your current version can continue to support Python 2 users, but Python 2 only has 15 months before it will no longer be officially supported in any capacity, so it's time to start moving on.
If my understanding is correct, in 3.7 you don't have to use strings or lambdas to quote your expressions but can use `from __future__ import annotations` instead.
Well, I can follow your code and that's a good thing. I have a lot more classes because of my architecture. A lot of them will become base classes but for now, I am sticking to composition rather than inheritance until their structure settles. 
I suggest learning to use the requests module to retrieve stats from web sources like ESPN. Learn to use BeautifulSoup to parse the HTML you retrieve. Store the data using MySQL, Postgres, etc. You may want to learn to use SQLAlchemy eventually, but I think it’s better to work with connectors first. 
Can you use python to configure serial ports in Windows 7 ? 
Pylama was a tool that grouped several linters together to run at once, such as * pydocstyle * pycodestyle * mccabe * pylint * and more I had to make a fork of a fork just to get it to work properly for 3.7 :/
yes your right, "spawning" an event loop was a very poor choice of words. I need to be get in the event loop mindset.
I used asyncio for several projects including one with threads and had absolutely no issue with it. BTW: a lot of people don't understand that asyncio is a low level library and using it just by itself requires spending some time understanding the documentation. You normally supposed to use projects built on top of it, such as aiohttp, aiopg etc.
Ths front end of my architecture contains a class for each screen. These classes act as screen controllers, similar to mist gui toolkits which h require or use a controller class per screen So as far as my back end is concerned, its talking to a screen controller. Which could be a gui, tui, or terminal emulator that writes to stdout. That screen controller has several helper classes attached to it using composition for the moment but later, most will be turned into base classes. These are the helper classes. - btns_modeller - screen layout class - an events loop class - a datapump class - a display screen method And if I'm driving screen changes via a statemachine then there are some additional methods which are callbacks (like on enter state, on exit state) - on_enter - on_exit The btns_modeler class handles the behaviour (not the look) of every possible type of button that a cli app/tui app might encounter. I have 9 btn types. The screen layout class writes things to stdout using click, colorama for the ansii escape codes and python3's f strings. This is the class that gets swapped out when a tui or gui frontend is desired. I'm leaning heavily towards using python_prompt to add the additional capabilities like, windowing , floating windows, menus and buttons. The events_loop class is what captures all key strokes, including up and down arrows, fn keys, etc. Its fed a lookup table tgat maps keys to event. I have 5 classes of events. - popup_events - btn_selection events, - nav_events (ie next, and previous screen) - exe_events The datapump class retrieves the values from the screen data store in the backend. This dict is handed to the screen layout class, and to any other screen drawing class such as the tui or gui. The cli_model.draw() method tells the screen layout class to begin painting the terminal screen and eventually, the tui or gui. My plan is to document all of this in detail with example code and include those helper classes within the tools shed so that others don't have to start from scratch should they wish to use this structure. It's my RAD toolkit for developing cli apls that can run stand alone as well as drive a tui or gui front end. I found the following Pycon video useful for understanding the cli aspects of terminal emulatiob do. It discusses python_prompt , curses, curtsie, readline etc. Thomas Ballenger - Terminal Whisperer (author of curties which is what bpython uses ) https://youtu.be/qOoKR8qEglU 
Thanks!
Thanks , it’s pretty cool 
Cracking the Coding Interview
Got it. More python specific though.. I've got data structures and algos, for the most part.
You could implement basic time series models from scratch, then compare them with results from statsmodels to make sure you're doing them correctly.
This from your code data = database.read() for comment in comments: if comment.id not in data: would work differently than this (not your code): for comment in comments: if comment.id not in database.read(): The reason is that the file read is occurring inside the for-loop. On the first iteration it works as you would expect, but on the second iteration `database.read()` returns an empty string because the file has already been fully read and there is no data left to read. (The file can be reset by doing `database.seek(0)`, but disk reads are very very slow compared to reading from reading from RAM so avoid doing this in a loop). 
Any plans to claim the original project name under \[PEP 541 -- Package Index Name Retention\](https://www.python.org/dev/peps/pep-0541/)?
Wow
Unfortunately (for this tutorial) I haven't used Windows for fifteen, so I have very little knowledge how Python works with that platform.
Never use sudo pip. Either sudo apt install ... or just pip. No sudo. Ever.
I'm more curious why you posted this question in \~19 subreddits
Plus God and Jesus hate cheaters (especially in Python, which is the language of the snake, aka Satan), so you'll probably go to hell...
You just won’t be able to hold down a job—or even pass an interview— because you wasted 4 years of your life and learned nothing. Congrats. 
&gt; If you're not amazed that this is possible, check your pulse. This is saying that you can attach entire functions to an attribute, not just a string or a type! It's like every variable carries around a little suitcase that can hold (almost) anything you want! Welcome to Perl!
First of all if copying code from github is cheating, then half of being a developer is cheating. If you understood what the code you copied does and managed to incorporate it or modify it to achieve your own goals. Then you really didn’t cheat, you are just using open source software. Unless you just copied the assignment from some other students it is not really cheating. 
Wrong. PyOhioIO is the only option.
When recruiting new python people I usually try to just make a casual conversation about their most complex / interesting / recent Python project. So be sure to have something in these lines prepared. It’s also nice if the person knows some “advanced” constructs like decorators, list comprehension, etc... I also really appreciate deeper understanding of any package (like functools, dateutil, pandas, ...). Tells me a lot about his / hers preferences and potential future assignments 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Elements of programming interviews in python. About $30 on amazon. 
What kind of job? Could you be more vague?
You write very well.
I use spyder a lot, and it is a wonderful IDE, specially for scientific computing. Despite that, I have found a bug with bothers me a lot, you can not run 2 times a QT or Kiby GUI without restarting the Kernel! That bug alone makes spyder not suitable for a all non "scientific" programing.
Neither cython, pypy, or nuitka understand type annotations. Seems pretty obvious then why they could expect to get a different result. 
Same here. Thankfully some groups (python-dev, python-ideas) are mirrored on Google Groups so you can feel like you're in the late '00s/early '10s, which is an improvement of some kind I guess. Better than nothing: https://groups.google.com/forum/#!msg/dev-python/xOydDOOX-ks/cCzKFDVZDgAJ But the fact that you need to click through each message one by one on other mailing lists (e.g. python-commiters) or go through setting up a mailing client and subscribing to a list... it's just so maddening that they still stick to that archaic format. I understand that a huge part of that is unwillingness to deal with a large influx of newcomers to e.g. python-ideas on GitHub/Discourse/NodeBB that would severely increase noise-to-signal ratio and the amount of time needed to moderate it. But still... "there must be a better way!"
Julia is interesting, but as far as I can see it is not that popular (yet?) thanks, I'll check it out. As about numba it is an interpreter(compilator? ) I'll read about it, but I usually need to use interpreters built in software. In fact the main reason for me to learn a new language is that I'd like to learn something new, but it would be nice to have a possibility to use it in the future. withs this said, I often need to perform some math of operations on large matrices, (3d animations and objects, skinning etc. ) open and analise large number of files, binary and text, so maybe some of those could be paralysed or speed up. 
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Yeah I'm pretty sure it's not intended for use in proper programs.
My SSH client uses XTerm for ANSI coloring. So I created this scheme to help visualize it within the editor's console. If anyone else finds this useful then here you go!
I started implementing a bunch of data structures in C because my Python code is slow :D
A plot/figure window that can handle multiple plots in a tabbed or slide show format. Back in the day I would have to make plots for papers in matlab and figures would be plot in the same window frame organized by tabs, though you could navigate through the tabs by with ctrl + page up/down. This was handy when having a first look for unexpected behaviour . In spyder, as far as I know, each figure is placed in their own window frame. So when you have dozens, or even hundreds of plots it becomes impractical. My work around is to save the figures (usually in .eps) and close them as soon as they are made.I would then use the file browser to open the figures, which is not ideal since I have not found any image viewers that support viewing .eps files as a slide show. This would save me a ton of time and frustration when making figures for papers. 
Numba.jit is simply a decorator that you can put in your functions to significantly speed up some kinds of python code. It's pretty amazing when it works, 100x speedups aren't impossible. Julia is not that popular yet but it will be fast for big matricies, not sure about fileio. Python numpy might well be as fast as you can get for matrix operations as far as i know. 
|*Title*|**XTerm color-scheme for the IntelliJ IDEA console.**| |:-|:-| |*Source*|[https://github.com/JF-Dunford/XTerm-IntelliJ](https://github.com/JF-Dunford/XTerm-IntelliJ)| |*Description*|My SSH client uses XTerm for ANSI coloring. So I created this scheme to help visualize it within the editor's console.|
There are more than enough differences that it's still worth sticking to the concept of developing in an environment as close to production as possible. Also, OSX does not have some packages particularly when it comes to machine learning and computer vision. It's got the big stuff but often half broken. For example there are no OSX wheels that I know of that support the SSE and AVX extensions for tensorflow on OSX and if I recall correctly GPU acceleration is not available at all. GPU acceleration for most libraries isn't available on OSX. Like I said, develop in an environment that mirrors production as closely as possible, it's always for the best. But yeah, a docker image is probably a good idea. 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Thanks, I'll check numba.jit then, sounds amaizing
Yes.
Awesome, thank you :)
If you have a project open, on the bottom of the window there is a “Terminal” button. You can run pip on there. 
Just create a web server app (https://wiki.python.org/moin/WebServers) that would listen to the requests, pass those requests further to the backend (look into “requests” HTTP client library or just use https://docs.python.org/3.5/library/http.client.html), and modify the responses as needed.
I'd like the ability to highlight any piece of code, and debug it using variables that already exist. Please take a look at what the author of this SO question describes under 'Option 5': https://stackoverflow.com/questions/48182309/stepwise-debugging-of-selected-python-code
Well ain't that something, Ruby and Rust finally settled down and had a child. Jokes aside, in what world does this honestly matter? Pick the right tool for the job, yo.
Julia has been around for some time. It's more for the mathematically inclined. [Also hinted by the name](https://en.wikipedia.org/wiki/Julia_set). But who knows ...
**Julia set** In the context of complex dynamics, a topic of mathematics, the Julia set and the Fatou set are two complementary sets (Julia 'laces' and Fatou 'dusts') defined from a function. Informally, the Fatou set of the function consists of values with the property that all nearby values behave similarly under repeated iteration of the function, and the Julia set consists of values such that an arbitrarily small perturbation can cause drastic changes in the sequence of iterated function values. Thus the behavior of the function on the Fatou set is 'regular', while on the Julia set its behavior is 'chaotic'. The Julia set of a function f is commonly denoted J(f), and the Fatou set is denoted F(f). *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
I've worked with several IDEs like Atom, Visual Studio and PyCharm. But I prefer Spyder be because it just feels better and more light-weight. And I love the cell-functionality with #%%. I'm looking forward to Spyder 4! Any chance that the following SO post will get answer? https://stackoverflow.com/questions/48261561/why-does-import-pdb-pdb-set-trace-trigger-two-different-debugging-scenarios-whe
Meh. I don't think it could knock out Python, I mean yeah it could rival it easily if used well and such. I think people should just use the best programming language for what they need to get done. 
Extended functionality with the window that pops up when you double-click a variable in the Variable Explorer. For example the possibility to not only sort a dataframe, but maybe even subset it or aggregate by uniqe values in a selected column directly in the view of that dataframe. And I don't know if it would be possible at all, but it would be great if you could "attach" the view (window) of a dataframe to that specific dataframe (perhaps by name?), so that it changes if that specific dataframe is redefined, sorted or aggregated. I always end up with a bunch of dataframes when I construct and make changes to my dataframes.
Situations like this is where the "science" part of computer science comes into play. Time to do some experimenting!
Until distros start shipping Julia installed by default and building tools in it I dont think there is much risk to python 
I think I wasn't that accurate about my question . So what I meant is how can I activate buttons the without the simple comments but instead he faster reliable way .
This was a great read. I've never felt the need for macro's, but I really enjoyed this.
I had the most wholesome conversation with a Ruby developer the other day. The conversation somehow landed on the Ruby backend he works on, so I chimed in with, Me - "I don't like Ruby syntax, it makes me uncomfortable." Him - "Ah, you must be a python developer" Me - "Yeah, how'd you know?" Him - "It's a shared feeling, I feel the same way about python syntax." And that was that, we got back on topic. No arguing about which language is better or anything. It was beautiful.
https://en.wikipedia.org/wiki/Gaston_Julia
current project Is a Chet boot . working with flask python . need some resources .
I honestly don't understand how people can get excited about syntax unless we're talking about the truly weird stuff like working with references in Perl or all the strange things you can do with parameter expansion in Bash. Python, Ruby, and the C-looking languages are all fine. Lisp is even alright, provided you have an editor which will give you a hint when you missed some parens.
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Yes. None of them worked. But this did: sudo apt-get install idle3 So I was able to check your examples out!
sudo apt-get install idle3 
I've worked with both-- tbh they're too similar semantically for me to complain.
To be fair to Python, &gt; - Threads (the real ones and the green ones) &gt; - Homoiconicity and the powerful macro story that goes along with it. &gt; - optional typing that's checked at compile-time. &gt; - structs (along with abstract types and multiple dispatch) promote a better approach to object orientation than classes. They also happen to have a much tinier memory footprint. &gt; - when performance matters, you can optimize to near-native speed (and it has baked in support for C ffi, as well as Fortran and ASM) * Python has threads out of the box. Green threads....no, but the idea of such (asynchonousity), yes via asyncio (albeit, I'll admit, it sucks). * I don't know what this means so I can't comment on it. The fact that julia has macros? You can create macros in Python, just not so easily, as a guy recently went in depth into with the ast parser. * Python has optional typing, you just need to download the checker separately. Wouldn't call that a big deal. * structs --&gt; dataclasses, python has abstract classes, and single dispatch out of the box. Yes, multiple dispatch is a problem I admit. * not out of the box, but Cython brings a something like up to a 40% improvement *in pure python mode alone*. And mypyc is being made.
You can use [mitmproxy](https://github.com/mitmproxy/mitmproxy) 
The requests-HTML library can do JS I believe 
This comment is even more confusing than your title.
Thank you so much for your work! I've been using Spyder for many years, and I'm very happy with it. 
Pycharm just isn't seeing the directory that the package is located in as a source. Right click that directory and select mark directory as -&gt; and select resource root (or sources root, whichever applies). This is just the intelliJ engine not knowing where to look. 
- Python's "out of box threads" are virtual. The GIL, etc. The only way to get true concurrent execution in Python is with multiprocessing, which is fine, but it's expensive. Also, I like asyncio. It's not threads, but I like it. I like it even more in 3.7. - Homoiconicity means that the code can be represented as native data structures. Lisp is the ultimate homoiconic language, because all code is literally just s-expressions. You can work with code as easily as you can work with lists. It's not quite 1:1 in Julia, but more or less the same and definitely more pleasant to work with than Python ast, in my opinion. Macros are possible to write in Python (I've written them), but they are delightful to write in Julia. - mypy is nice and I use it. Julia just does it without the extra step -- and what's more, the interpreter uses that information to optimize. - yes, yes. Dataclasses do promote better design. They aren't any more lightweight than normal classes, and they certainly aren't the "standard" way of doing things. - I'm currently working with Cython and it's great, but it's also a pain. Pure Python anything is never going to get close C performance because the (very nice) abstractions are not optional and the extent to which it uses the heap is basically impossible to optimize for cache. That's fine for most things, where performance doesn't matter. Julia was designed with performance in mind and frequently comes within a factor of two of C *without having to write any C*.
My first guess would be looking at the python threading class. Did you do that? I think, you create a new thread class and run it. Later you send a signal that makes the thread terminate safely. 
The thing that make me use vscode / jupyter instead of spyder is all the ide features as - multi-line editor - multi selection with ctrl-d that select the next occurrence of the selected word - proper dealing of parenthesis when some text is selected... All that stuff make the programming way smoother. 
Yea I did try that, but I ended up waiting for the thread loop to finish before continuing. also I need to kill it, which I found out how to do. It's a loop that will hang while waiting for stuff time to time.
This works nicely: [http://sebastiandahlgren.se/2014/06/27/running-a-method-as-a-background-thread-in-python/](http://sebastiandahlgren.se/2014/06/27/running-a-method-as-a-background-thread-in-python/) Gonna build on this one :)
Setting a bool within that specific class bShouldTerminate which is evaluated each loop doesn't work? 
[https://stackoverflow.com/questions/29296064/python-asyncio-how-to-create-and-cancel-tasks-from-another-thread](https://stackoverflow.com/questions/29296064/python-asyncio-how-to-create-and-cancel-tasks-from-another-thread)
Haven't tried that, all I know is that the loop stops and waits on a simple "for packet in packets:"
Hm, that looks nice.
That's strange. The packets tuple/list is really a simple list or a call to some functionality? 
&gt; Homoiconicity and the powerful macro story that goes along with it. This has been something that people rave about with Lisp, and I've honestly never understood it. I mean, ok, from an abstract, theoretical perspective, I grant homoiconicity is *really* cool. As a 13 year old who was a big fan of recursion of all sorts I would have loved it. But as a practical matter, I've never seen anyone give a *really* useful example of it. When I see examples of the applications of homoiconicity, my immediate reaction is "nope, I'm not doing that - that's hard to read, reason about and maintain." If you want a concrete example just look at the [wiki page](https://en.wikipedia.org/wiki/Homoiconicity). All the examples given there seem like terrible code. So, my view of homoiconicity is - since it works on the AST (instead of just being a text preprocessor) it's better than C++ macros, but it's still a terrible idea, and no one should be doing that. Am I missing something?
nice simple example, this probably needs a github issue created?
\^this. Install mitmproxy, launch it with with -s parameter: `mitmweb -s path/to/your/script.py` Example script: import json def response(flow: http.HTTPFlow) -&gt; None: if flow.request.url == "https://example/org/rest/sendData": json_from_response = json.loads(flow.response.content) json_from_response['your_boolean_key'] = False flow.response.content = json.dumps(json_from_response).encode()
It's from the PyDivert
&gt; all the strange things you can do with parameter expansion in Bash. I love me some bash parameter expansion. When things are slow at work I sometimes enjoy working with all the different syntax's available so that I'll remember them later on when I'm scripting something. There's an odd satisfaction derived from reducing bash scripts LoC by utilizing some of the awesome expansion features. &gt;Lisp is even alright We aren't friends no more!
I started out programming with Bash, and I know what you mean, but that doesn't make it right! cf. [my other thread](https://www.reddit.com/r/Python/comments/9855c7/wrote_a_tutorial_on_python_for_administrative/)
I’m not sure what you’re asking but it sounds like you might be looking for a way to automate input in a web browser? If that’s the case, check out Selenium.
It reads like the "Has anyone really been far as decided to use even go want to do look more like?"
Not just web browsers also games
Yes
number is an int, guess is a string. Convert them to the same data type before comparing. 
input() returns a string. You need to match your types for the equality check. Use either str(number) or int(guess), the former is safer because the input you get may not actually be able to be turned into an int.
Both 
Useful article and it reminded me about defaultdicts. Interesting about function calls in loops too - are the overheads really so game changing?
Thank you! I probably should've been able to realize that...
That's great news, cheers.
Also, using tabs instead of spaces, and using python 2. Both of which have been done in this article.
Try selenium for web browsers. Not sure if it works for games.
Ah fair, I must have missed that part. This was a great write up though, saving it for reference, thanks!
Yeah. Spyder is an excellent IDE 
I'd like to know more about the penalties of function calls in loops. From a maintainability perspective, functions are better for testing and readability. I take several indent levels to mean I should be using a function. 
Not bad, overall. I have a few points of disagreement. - Bare except clauses are fine if you raise the exception again. I'm also not sure what difference it makes if you use them early, so long as you specify the exception type and handle it appropriately. Silencing errors is bad, but handling exceptions is part of programming. For example, in the case of a dictionary lookup, it's a lot cheaper to handle a key error than to test for membership before looking up the key (you're doubling the number of lookups by using the test) - I prefer dict.setdefault() to collections.defaultdict. With a default dict, you never get a key error. Furthermore, for the case you mention (counting things), collections.Counter is a much simpler way to do this. - avoiding function calls inside a loop is a pretty extreme measure. Pypy actually can inline some function calls. Furthermore, while function calls do have some small cost in python, how much worse is it to have unreadable code? Function calls are how modern programs are written. If function calls are what's slowing your program down, you need to refactor or choose a faster language.
No. Especially not if you use Pypy.
Good point. Ubuntu for example relies on Python, so that's not going anywhere any time soon.
They are pretty up there though.
I don't know why anyone else didn't tell you this; use pyautogui. It'll let you automate the mouse and keyboard. https://automatetheboringstuff.com/chapter18/ https://pyautogui.readthedocs.io/en/latest/
Gr8 Work!!!!
In cython you can specify the type.
The attrs library.
Just did a quick test: &gt;&gt;&gt; timeit("{}['foo'] ='bar'") 0.06258795100438874 &gt;&gt;&gt; def wawa(): ... pass ... &gt;&gt;&gt; timeit("wawa()", globals=globals()) 0.059106315005919896 So, a function call takes about as much time as a dictionary assignment, which is interesting, since a function call involves looking up a function in the global dict. Basical, no overhead besides that. I'm sure there is also overhead for assigning values for functions with parameters and all that, but this is not too bad, since almost dictionary lookups are everywhere in python (like literally every time you use the dot (.) operator)
I'm not sure I understand the one about unpacking: &gt;The practice is very cool, and it's much wiser than writingname=human[0]. However, it's often abused, and the result is that thehuman will be unpacked in the program everywhere through the code above. Unpacking somehow affects the data in memory before you call it?
I've always been told to make many small functions and nest them than one large one. But the last recommendation seems to be saying that I should be doing the opposite. 
To be fair, your code would have worked in javascript or another language with implicit type conversion, so it wasn't such a bad mistake. 
Please post questions like these in r/learnpython next time. We need to see your whole code and/or error message in order to help you out, too. Except for `missing paren on line above`, maybe.
I haven't tried that one yet! I remember seeing some super cool demos though. I can see it being really awesome for machine learning stuff so I'll definitely have to give it a try some time.
Only if you're microoptimizing. It got me a 2x speedup on a test case that it looped over 100k times. Granted the time saved was 4 seconds, down from 45 minutes, but while I'm optimizing, I might as well do it right.
yes but not by using the new type annotations, which is the whole point of mypy. Normal Cython type annotations are also not source-compatible with Python.
This is awesome thank you! You've given me an idea, I'm going to parse text off journal articles and have them read to me so I can listen to them in the car. 
&gt; and the result is that thehuman will be unpacked in the program everywhere through the code above. Yeah, I don't understand this either.
thanks man appreciate that !!! and looking forward to that 👍
I would not call them "worst practices" at all. Maybe "things that infuriate Raymond Hettinger". It's a good reminder to use Python to its full extent, though. 
I don't know much about cakePHP, but based on your description the django web framework sounds about the same. Enjoy. 
[Django](https://www.djangoproject.com/) is the closest thing to CakePHP 
Don't get me wrong, bash scripting isn't right for everything (Python is home and my go to for personal scripts that bash isn't appropriate for). With that said, it's absolutely right for allot of things! 
Django is a great framework, PyCharm is my favorite debugger. Stepping through complex apps is hugely valuable. 
I used gTTS along with Markov chains and FFMPEG filters to generate fake myths (inspired from Greek and Hindu mythology) on demand. It's complete with random background music and audio wave visuals. This was for a code jam in June. https://github.com/momothereal/code-jam-2/blob/master/proj/web/resources/stories/create_story.py A lot of fun to work on! :)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [momothereal/code-jam-2/.../**create_story.py** (master → d81e66c)](https://github.com/momothereal/code-jam-2/blob/d81e66c18d40972a1f85e5c79e4fbbacb47cf24a/proj/web/resources/stories/create_story.py) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e4f2xzb.)
It's absolutely right for IO redirection and process orchestration with absolutely no logic. If are using any Bash control structures, you're already on the highway to hell. It's an injection honeypot.
I just replied to your question (it was in my long TODO list but I forgot to do it). The problem is not really with Spyder but with the way you're trying to use our cells to evaluate things that belong to the local scope of a function. My answer is how I'd do what you want, but using classes, attributes and methods.
See [this](https://stackoverflow.com/questions/42777430/why-autocompletion-options-in-spyder-3-1-are-not-fully-working-in-the-editor) question and my answer for the reasons. However, we have plans to improve this in Spyder 4.
For Qt, please see: https://github.com/spyder-ide/spyder/wiki/How-to-run-PyQt-applications-within-Spyder
Working on these improvements for Spyder 4.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Good list. Personally don’t like setdefault because I find it unintuitive but maybe I just need to use it more
Looks cool
thanks 
If PyPy worked on python 3 with numpy, scipy, matplotlib, vtk, pyside, and didn't have bad error messages and was faster, I'd use it. I follow it and poke it every now and then. It's not ready for me to use yet. PyPy is a subset of python. It also has significant startup time. Most of my stuff runs fairly quickly as a result of optimizations. They are mainly due to using the right data structure and using numpy and scipy.
This is a neat idea. My wife is a massive reader and tracks the books she reads each month and the number of pages of each books, but it would be fun to build her an interactive dashboard. What type of metrics are you thinking of displaying in the dashboard?
Jupyter notebooks for anything quick. And PyCharm for midsize to larger projects, awesome because of the debugger and profiler (the last one is a paid feature, totally worth it) If you're not a Python expert yet, make sure you know the PEP8 style guide. https://www.python.org/dev/peps/pep-0008/ - Following these rules will make your code more readable and look like other people's code, that will save you tons of time if you need to revisit older code later. (I did not follow this the first 2 years when I learned Python and the code I wrote then still annoys me now) Of course, then there's Black for formatting your code... https://github.com/ambv/black - which will save you a lot of time better spent on programming...
Regarding Python 3, when was the last time you tried it? It's better than it has been. However, if you're doing most things with numpy and scipy, well that could be a thing.
I'm really looking forward to Spyder 4! How stable would you say that the beta version is? I'm probably going to test it out as soon as possible either way though...
Pretty sure using `datas` as a word is punishable in more than 50 countries.
gTTS is great. I used in my [voice assistant](https://github.com/Dextroz/VoiceAssistant/blob/master/voiceassistant.py) project.
It's getting there, but I need a long running process with all my dependencies to make use of it. Those long programs are often big programs and have more dependencies, so more pypy bugs. The python 3 thing doesn't hugely matter and I can back off on that.
Never use for/else. No one interprets it correctly and it doesn’t even save any length versus doing it the normal way. 
Default dicts are overused. 99% of the time you’re fine using `.get` or `.setdefault` instead. 
The actual thing you should never do is make a network call without wrapping it in a try/except block. 
You can definitely do this using Python. On a different note, I use Goodreads to keep track of my reading habits + books (minus the analysis part). Thought you might be interested if you don't use it already.
Thanks for sharing! I'm actually using pytz right now to convert things to the correct time zone, before passing it into the [schedule](https://github.com/dbader/schedule) library. With regards to sharing my github repo, I would actually love to do so! I currently have some sensitive information in the repo though (I know that's a big taboo) such as SSH keys and access tokens, so I need to clean that up before making it public. I've been a little bit less strict with myself than I usually am on the job. It's also a little bit messy in general, since this is the first Python project I've done in over a year. I primarily code in golang and JavaScript for work (golang backend, ReactJS applications) but I did nothing but Python at my last job and really miss it. If you're interested in docker as well, the repo has the basic necessities for building and running a docker image, if that kind of stuff interests you. I currently have the app running on the smallest VM instance available on Google's Compute Engine. Once I clean things up, I'll probably post a link in next week's thread but I'll share it with you too.
&gt;I prefer dict.setdefault() to collections.defaultdict. With a defaultdict, you never get a key error. This 100% You usually only want a default value while building the dict. You usuallh want a typo'd key to raise an error. I've actually had a case for default dict like once, but use setdefault regularly
Thank you! That will be awesome! Hope to hear from you soon, good luck cleaning up your code, don't forget to document it ;)
&gt;You've had your time to transition. Not if you just choose not to transition. 2.7 is a fine language on its own, and I see no reason to transition when most people in my field are still using 2.7 in their code. Heck, there is still Fortran 66 code floating about that I encounter occasionally, mostly because it *works* and the audience of people using niche scientific code don't generally want to reinvent perfectly good legacy code.
Newbie here: why spaces over tabs?
I think you'd be better off using [Google App Scripts](script.google.com) and deploying the script as a web app.
It's in the pep8 style guide Python code should be indented with 4 spaces. Most Python programmers expect that convention and they frown upon code indented with tabs. 
Hah, everyone knows the correct word is `datums`
&gt;Only if you're microoptimizing If you're to the point of micro-optimizing Python code, it might be time to consider using a different (probably compiled) language.
So I built the AUCR framework to handle the normal stuff like auth, user profiles, navbar, theme etc. I'd basically like to use the chat feature set you have and build it either was a dedicated plugin or into my own plugin. That way more things can use it be it related to the DFIR plugins I'm working on or otherwise. 
defaultdict(int), not lambda: 0. And in that specific example, just use Counter(data) ("data" is always singular, btw). files: use io.open, so you can state an encoding. and we always provide an encoding for external data, don't we? and the 1function in a loop" thing is obscure.
I met one of the devs for [Castep](http://www.castep.org/Main/HomePage) at a conference a few years ago, who mentioned there being some remnants of Fortran 66 legacy code in there. There's also this one kinetic montecarlo code (whose name escapes me) that uses a few bits of '66. Very few things use Fortran '66 nowadays, but occasionally you'll find it in the wild. The most common legacy Fortran IMO is '77, which pops up way more often than it should. Almost everything I write, though, is in Python 2.7 at the moment. I'm familiar with 3 and could upgrade to it if I wanted. The biggest hurdle right now, though, are my co-workers; we frequently share code and collaborate, and because there is no backwards compatibility we all pretty much need to use 2.7 *or* 3 for that to happen. The other issue is that it's common to release your code alongside a publication, and I'll normally see Python2.7 code being released in those (not that big of a problem). Another problem is that many popular packages (such as [ASE](https://wiki.fysik.dtu.dk/ase/) have had something of a bumpy road upgrading to Python3, and you'll occasionally find edge-cases where it breaks as a result. And that's assuming the devs even *want* to upgrade to Python3. A popular [structure prediction code](http://uspex-team.org/en/) out there is written entirely in 2.7 and Matlab, and just breaks if you break out a Python3 interpreter as the current python.
Microoptimizations are not necessarily hard or difficult or have small effects. Xrange vs range in python 2 because most of the time it doesn't matter. Using %i instead f-strings. Why don't I save common binary structs rather than recomputing them each time I come to a function? That one can be a biggie. Python is great and unless I need to really use C++, I'm not going to. It's harder to write, I now have to compile it, it's no longer cross-platform, takes what 10x longer to add the same capability, 0etc.
&gt;There are plenty of reasons people use Python 2.7 nowadays You just named one, though ;)
Flask, SQLAlchemy, Flask-RESTful. Some of my go-to's.
Before you get too deep into it, the word you're looking for is **sentiment** not sentimental. 
Whenever you are unpacking, you hardcode your tuple. If you change it, the code will break. Named tuple gives class like member access, but for tuples you know cant change, unpacking is perfectly fine, and imo more easily readable
Making a blanket statement not to call functions in a loop can't possibly be a general principle all python programmers can adhere to. It smacks of premature optimization. Also if you are writing a loop in python that is so performance critical that you are worried about function call overhead, then you need to take a step back, think about what you are really doing. Go research more appropriate tools to solve your problem.
That advice is weird. You should not sacrifice readability and testability without a clear business case.
It's not wasting time to patch vulnerabilities and optimize subroutines. 2.7 will be slower than 3 in the long run, no question.
&gt;yes but not by using the new type annotations, which is the whole point of &gt;mypy. Then change Cython to parse them; implementing an entire compiler from scratch for that one minor difference is ridiculous. More of DropBox trying to reinvent the wheel. As I said, they tried that with their competitor to pypy and failed. Here we go again. They're going to spend a lot of time developing a tool that's only useful for them and no one else will contribute to and eventually they'll pull the plug on support when they can't beat the mainstream competition.
Maybe I'm missing something obvious, but is it possible to refresh the UI? I want to display an image and have it updated to a different image based on user input without having to close the interface and open a new one.
&gt;It's not wasting time to patch vulnerabilities and optimize subroutines. And good on the Python team for doing that. It's unfortunate they couldn't devote their resources to [proper back-compatibility](https://pypi.org/project/past/) as a basic part of the language. That would may be encourage people to move forward without having to update *everything simultaneously*. I suspect that many people in the scientific community are going to just stay with 2.7 until their admins force them to move on to something else. &gt;2.7 will be slower than 3 in the long run, no question. That's a moot point. Nobody attempts to write high-performance scientific code in Python. That is still firmly in the realm of C/C++ and Fortran within the scientific computing community. 
Yes, there is a way... but not all elements can be refreshed. I do not yet have the code complete on the Image element for example. I first need to add the ability to display images from RAM rather than only disk. Then I need to add an "update" method to that element. I'll get working on it since I know someone is looking for it. The way you keep a form open is by using ReadFormButtons rather than SimpleButton or the shortcut buttons like Submit.
I just finished up the [interactive graphs from a praw project](https://sadisticstatistics.github.io/) that involved scraping /r/all every hour for entire month of July to determine when /r/all's highest fraction of NSFW content is. [More details here](https://www.reddit.com/r/dataisbeautiful/comments/9827z7/ralls_highest_level_of_nsfw_content_is_between/). /r/dataisbeautiful didn't seem to care. :P
Depending on what you want, you might be able to use an existing dashboard product that can read data from Google docs. I know for sure that it's possible with Geckoboard, but you might need a payed account. Also Graphite/Graphana and Kibana on top of ElasticSearch are worth looking into.
Yes, you are right, python follows EAFP https://blogs.msdn.microsoft.com/pythonengineering/2016/06/29/idiomatic-python-eafp-versus-lbyl/
Oh, there are so many subreddits about everything... I promise I looked for the rules... Thank you
Grey hat python book
small update, realize that if you do: https://www.tradingview.com/#signin it will bring up the login panel, however it still won't seem to login :/
I like you
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I used both. Yes CakePHP is pretty much a not as well thought through Django.
The nice thing about using tox for testing as opposed to just running pytest (or nose, etc) or your code is you can install your project in a venv and test against that rather than just what's lying around in your working directory. It won't catch 100% of issues, but since I've started doing this I've caught quite a few install time issues
Also, set up your ide to insert spaces whenever you hug the tab key and you get the convenience of tabs without the potential downside. 
&gt;Python 2 is not in the worst practices only if you're providing palliative care to an application in its deathbed as an alternative to euthanasia. Python 2.7 has been agonizing [for the three last years](https://legacy.python.org/dev/peps/pep-0373/) and was given two more years to live. &gt; &gt;Let it go in peace.
Neat. I'll have to check out that code. I've been wanting to get back into computing. Thank you and best of luck.
IIRC Castep is closed source, and if you're not a UK citizen, you have to pay a certain fee to use it USPEX is semi-closed source. It's in front of a license that you have to agree to to view the code, but it's a fairly weak (and probably indefensible in court) license that amounts to "I promise not to work on a competing code," which is incredibly vague.
https://docs.python.org/3/library/functions.html#all The docs states that all() return True even if the iterable is empty. So in your case, it looks like the last while conditional check return True, hence the while body execute, and tries to pop an empty list, which result in an IndexError
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Sorry, for some reason I can't get this to format. I can't even get it to accept spaces. WEIRD.
thank you.
np thanks
I believe setdefault is significantly slower than defaultdict. Honestly I could be remembering wrong I'll profile this later.
This is a good idea,I'm also going to parse off my blogs and share them in twitter.
If you are about to ask a "how do I do this in python" question, please try r/learnpython
With Googles \`autoML\`.. the utopia is near :)
Very cool.. I can see why. The amazing thing about python is its libraries, especially with the huge amount of data being generated on a daily basis. I can only see python's tentacles growing..
Having used CakePHP a lot and never having used Django at all; I can say this story checks out.
Flask
Click
Oh so \*you\* are the reason all these banks are so fucked up!! It all makes sense now.
I'll get it written in a couple days. The button you want is to ReadFormButton since you want it to return but not close the form. RealtimeButtons return immediately are and used in non-blocking/async forms. Will let ya know when it's posted and ready to use.
You rock! Thanks!
You can use it for prototyping Django stuff, too, with django-extensions and the command: `python manage.py shell_plus --notebook`
I find it atrocious that 5/2 is not 2. 
Making a URL Shortener (creative I know) to learn Django, so far, it makes user management SO EASY. I did my user management in about 3 hours, which would've taken me a few days using PHP. thank you django!
It would be cool if you took the user's current location, then calculated the best place to go based on price and location. E.g. drive an extra mile to save $1 or something like that.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Your submission has been automatically removed. User accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Alright I'll make sure to use r/learnpython next time
OK, ask and ye shall receive. Got it done quicker than a could of days. Never hurts to ask for help ;-) You will find a new [PySimpleGUI.py](https://PySimpleGUI.py) file in the branch "Dev-latest" on the PySimpleGUI GitHub. Download that file and also the folder named ButtonGraphics. You'll need 3 buttons from that folder in order to run this sample code: import PySimpleGUI as sg form = sg.FlexForm('Image test') # begin with a blank form files = ('ButtonGraphics\\Stop.png', 'ButtonGraphics\\Exit.png', 'ButtonGraphics\\Next.png') data = open(files[0], 'rb').read() image_elem = sg.Image(data=data) layout = [ [image_elem], [sg.ReadFormButton('Refresh'), sg.Quit()] ] form.Layout(layout) i=1 while True: button,value = form.Read() if button is None or button == 'Quit': break data = open(files[i%len(files)], 'rb').read() image_elem.Update(data=data) i += 1 Every time you click "Refresh" you should see a new image. The additions for this release were: * New "data" keyword for the Image Element. Allows you to load the image from RAM rather than a file * New Update method for the Image Element. Allows you to modify the image being shown Let me know how it goes.
Reading the Python source code. 
I am planning to have total pages read, total books read, reading speed, no. of reading sessions, avg duration of a session, most read author and genre, longest reading streak etc in the dashboard
QzDev says hi. 
I have used Goodreads in the past for this purpose but it doesn’t provide a lot of insights, for e.g., avg reading speed, avg session duration, longest reading streak etc
I actually used Tableau Public and built a dashboard. But just when I finally got pleased with the dashboard that I built after multiple iterations, it stopped working for no reason! So I decided to use something that I control entirely. But thanks for the suggestions - I will try these out as well. :)
Is there a link to your fork that you can share? It might be useful to me and others.
Wow, you found time to develop it faster than I'll be able to find time to test it out. Thanks!
Yes, you can. I guess I just find it simpler to use .setdefault on a normal dictionary, but the defaultfactory thing is also an option, so long as you remember to do it (on the other hand, setdefault calls usually come out a little funny-looking, so maybe it's a wash)
What are you after? In case of web app, I would recommend django, as a solid web framework.
I just hope I can decide on a project layout this weekend, lol. I'm working on a team-centered notes app for learning some new techs. But I'm still debating the project layout with myself. I have it bundled in Vagrant for a *nix server, but I want a Selenium testing setup in Docker to test the front end. I need to bridge them in the integration tests and I don't want it to be unreasonably messy. I could just use two vagrant machines I guess, which cuts out Docker. Or all Docker, but I am a fan of VMs. 
I did this with news articles. I am having an issue with it where it is quite choppy for long paragraphs. Did you have the same experience?
I dunno. What are you trying to do? I do a lot of numerical computations, super fast file IO, and 3d visualization of results. Very different from a webpage.
It depends on what you want to create, dude. You could create scripts to automate stuff; you could asw create graphing programs, games... Python can do ANYTHING. It isn't the best in everything, though. It's slow compared to C++, so this explains why it isn't a good language to program 3D software in (computer graphics is really heavy. Yeah blender has python in it but for GUI and handler functions which deep down are C++) If you to develop smartphone apps, use kivy. However, Python isn't the best for this, so you might to consider learning Java for this job. If you want to develop websites, learn Flask or Django. Flask is really lightweight and is good for web apps that are not so heavily user oriented. Django is a more robust framework, but would be overkill using it for projects that have no users. In web developmenr, python shines beautifully. There are other frameworks too but these are the most adopted ones. Math? Matplotlib, bokeh, numpy... Python is among the top languages chosen by mathematicians, alongside Julia and Wolphram and it challenges even paid environments like Matlab. There's a book called "doing math with python" which shows a lot of its power... Although barely scratching the surface. With the edge left by the above topic: machine learning. I have no idea how this works because I don't have so much interest in this, but basically you're going to use statistics and linear Algebra to teach the computer to make accurate guesses. Alongside R and C++, Python also shines in this realm, although in many cases it is used only for prototyping, because some operations demand speed, and for this people will use C++, I think. 3D? Ok, you probably shouldn't develop 3D games in Python (you can use C# or C++ to order a game engine to do your bidding, or even code it all from scratch although it would be an Odissey. Python shouldn't be used for this because 3D is really resource hungry and Python isn't as light as C++ can be). You can, however, explore the mathematical world of 3D geometry. You can also manipulate blender objects with Python to create precise animations, mathematically precise 3D shapes, among other things. You can create 2D games alright with Pygame, and it is REALLY interesting. Also, PyQt is a really good framework for desktop application development. Don't waste your time with Tkinter: It's ugly as hell. Anyway, logic, good sense and imagination are your limitations. Just use the right tools for the job.
I definatwly prefer Atom over PyCharm, but I do miss their debugger. Someone needs to port this thing to Atom.
Pity the numpy approach (np.save) isn't in the list
To mention, there is also https://pypi.org/project/google_speech/ that does not save MP3 file to your computer. SOX is the non-Python requirement. I use Mac's `say`, though.
You need r/learnpython
I give them a month till this is non functional
Yup, happened a few times already, I tried to build a bot for WhatsApp and stopped because all third party apis stopped working
Enforced backwards compatibility slows down language development and makes it impossible to correct some big mistakes. Correcting these mistakes and improving the language, while giving everyone an opportunity to transition was the right thing to do. Although maintainers could have been more vocal about why it's silly to hold on to older versions. Not updating is actually pretty irresponsible because of security, maintainability and performance reasons. It is part of programming hygiene. There are tools that help you with transitioning. At least start new projects with Python 3.
You who commented that I'm asking how to do it then deleted it. I'm not, it's well documentated and I have gotten it to work, but if I attempt to get the IP out lf the object I get that error message, if you attempt to get the port it works. I'm asking: have you used it and made it work? Not how do you use it.
Can you code audio apps with python? Or maybe even embedded systems? I’m interested in audio dsp like stand-alone hardware multitrack recorders and maybe effects pedals
Except that some businesses already have bots on them, I booked a flight with KLM and put my phone and got a WhatsApp message with the information of my flight. 
It is largely written *by people with no async in mind*, or, probably, very little in that mind in general. It is an attempt to copy what Twisted did, when they tried to work around the unfortunate limitations of the language. It is an all-around failure even at doing that, not to mention that, well, if you are the author of the language, implementing a work-around instead of actually fixing the problem is kind of retarded. Asyncio is the worst thing that happened to Python in the last ten years.
thats fine. just as long as no one is surprised when it stops working. Unless they have a deal with Whatsapp.
Great answer. So I've really wanted to do development in Android, sounds like you've had experience with that. Any thoughts on the best place to start for someone who loves python? 
It's intentional though - Telegram wants bots and WhatsApp would prefer any API communication be set on fire.
Whatsapp offers [api for businesses](https://www.whatsapp.com/business/api), I guess that's what KLM is using. It's even in their [customer stories](https://www.whatsapp.com/business/customer-stories)
they have an arrangement with twilio, this will last long 
Yup. Asyncio is garbage. Don't believe anyone who tells you otherwise. It's because they either never tried anything else, or don't really know much about asyncio, (or, which is even more likely, both). There are so many bad things about it, I wouldn't even know where to start... so, in no particular order: 1. Every library I tried so far that relies on `asyncio` is an unusable pile of crap. `aiohttp`, `aiokafka`, `aiomysql`, `pytest-asyncio`, `asyncio-timeout` are those that come to mind. Every single one of them is a pathetic failure, one that you'd spend a lot of time fixing and patching before you chalk it up and switch to the non-asyncio based alternative. 2. The design of the package itself is horrible. Programmer should not start or stop event loops. Event loop should not close at all, in principle. The extra syntax that comes with it is a plague. It is not well-integrated into Python until this day, and, probably, will never be. For instance, you cannot use any of the asyncio crap in PDB. 3. Asyncio cannot be realistically used in native extensions, which are, basically, the reason why Python rose to prominence. So, it's kind of cutting the brunch on which Python sits. 4. It's molasses slow. At one point, I tried to write a load generator for a web server using asyncio. When I compared its performance to Ab (the load generator used with Apache HTTPD) at first I thought that no parallelism is actually happening: it was about 3 (three) orders of magnitude slower! I researched, asked different people, including asyncio developers, about my code, and they confirmed that there is no problem with it. It's just asyncio that's slow. 5. Regardless of what you may imagine as I/O, it's not what asyncio thinks I/O is. For instance, reading or writing files on your file system isn't I/O from its standpoint. So, all file I/O is blocking. Handling keyboard input? -- Hahahaha. 6. There are tons of bogus and unnecessary crap in the library: tasks, futures, executors, protocols - none of this crap is actually needed. 7. Async iterators are not iterators! None of the itertools works with asyncio crap. Even though there's an asyncio version of itertools, you cannot use it with non-async iterators. --- But, the bigger problem is: Python, as a community, wastes time and effort on this piece of garbage, that will never work properly, that, in principle, cannot solve the problem of parallel code execution, while only pollutes the language with unnecessary constructs. And, if you try to solve the problem properly, you, invariable, end up writing code in another language + interface to Python, but then, you are still limited, because you cannot properly use Python code in the context where the code might run in parallel, so, you end up replacing all the useful stuff you could, in principle, take from Python, like, containers, primitive data-types, printing etc. with something imported from the language you write the parallel code in. I believe that the best way to deal with Python's parallelism problems is to start with creating thread-safe objects, so that `Py_INCREF()` and friends don't require synchronization. I believe that the best way to achieve that is to, for a time being, introduce a separate allocator, which will create threads with their dedicated memory pools. Had this being done, one could write much simpler and a lot more performant code either in C or in Python using already existing threads. That's not to say that threads in their current state are perfect, but they are certainly more general and less defective than asyncio.
It's probably about preventing spam. It's bad enough with texts in many places where WhatsApp is king
I agree with this. Flags are a little inelegant and take up more space, but way more readable. 
In general that is the correct thing to do. I think the article is referring to one case in which function calls are in long loops, and that's something you should address after you've written the first draft of a program your way and then profiled it if you find it takes too long. 
Python kind of works without needing a framework. There's Django if you want to do web, though.
Does for ... else seem strange to anyone else? The else clause implies that it will execute if the loop does *not* complete, like if ... else, I think for ... then would have been a better syntax.
I just call dict on the object when returning it
Yes, you can. Google offers API to access data from your spreadsheet. Get it and insert to database, then use a framework to render it as plots. Assume you were able to get the data. Use Django and Django REST to make API. Front-End access data via API and use a lib, such as chartjs or d3js and render it.
It's saying don't catch everything. Like when accessing a dict, catch only KeyError, not just a general catch because you might catch TypeErrors instead and that's generally bad practice. It's ok to do blanket catches at top level (like endless loops) since the process should stay alive, or if you reraise, but otherwise it's not good practice
Thanks, that's actually a really interesting idea! Would be cool if I could plot this on a map.
Your submission has been automatically removed. User accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Well, if anyone knows better subreddits where I can share this, please comment down them.
Bokeh is pretty awesome and accessing things from Google sheets isn't too difficult. 
https://github.com/13steinj/pylama
Yes but flake8 has plugins for the most if not all of the above.
Maybe the digital art ones? Machine learning already knows this stuff.
Convention, that's all. Makes it easier to work with others. But, if you're collaborating on a project you should use what the rest of the project uses.
I think most people do understand it, the issue is whether or not they LIKE it. If you don't know how to interpret it, "the else executes if the loop terminates normally, that is, you did not call break". It's the same as else in exceptions. I seriously don't believe anyone intelligent enough to write code can't understand how this works.
I would prefer 3 for a new project but it's not always possible. One who thinks would do a cost/benefit analysis and there're some situations where 2 comes out better. The VFX industry has a lot of python 2 and cant switch right now because they are dependent on the embedded interpreters in their applications, like Maya, or there is no benefit to be gained in migrating a mature system that's not exposed to the internet.
I said it elsewhere in this thread, but I always think for ... then would make more sense than for ... else
Just use telegram 
Telegram doesn’t. best thing? It’s not owned by Facebook. Yet anyway
I refuse to have multiple messaging apps, and 90% of my friends and family use WhatsApp 
Yep that’s the problem with that. We can at least try to stop using Facebook products 
yeah. I prefer signal though, as private messengers go.
Your submission has been automatically removed. User accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Someone else also beat ya to the punch. I was just given this code that's a PDF viewer. Here it is for your reference. It uses the package PyMuPDF import sys import fitz import PySimpleGUI as sg fname = sys.argv[1] # fname = 'C:/Python/PycharmProjects/GooeyGUI/test.pdf' doc = fitz.open(fname) title = "PyMuPDF display of '%s' (%i pages)" % (fname, len(doc)) def get_page(pno): pix = doc[pno].getPixmap(alpha = False) return pix.getPNGData() form = sg.FlexForm(title) data = get_page(0) image_elem = sg.Image(data=data) layout = [ [image_elem], [sg.ReadFormButton('Next'), sg.ReadFormButton('Prev'), sg.ReadFormButton('First'), sg.ReadFormButton('Last'), sg.Quit()] ] form.Layout(layout) i = 0 while True: button,value = form.Read() if button in (None, 'Quit'): break i -= 1 * button == 'Prev' i += 1* button == 'Next' i = 0 if button =='First' else -1 if button == 'Last' else i data = get_page(i) image_elem.Update(data=data) 
Spaces aren't intrinsically superior to tabs (nor are 4 spaces intrinsically superior to any other number), and both are valid python. However, the entire python community suffers if every project, snippet and tutorial each uses different spacing - it gets harder to port code, to read others' code, to jump between projects and so on. For this reason, this and other ambiguities have been resolved by a community style guide, called PEP8. This guide decided to use 4 spaces. It doesn't matter which option the community settled on, just that everyone uses the same one.
Datumsies
"preventing spam" by providing an API for businesses. Perfect!
Triple-backticks for code blocks don't work on Reddit... You need to use four spaces to indent it instead!
done ! thanks
I would be interested in reading more of your opinion in a longer form with more details. Write a blog post!
\&gt; It's saying don't catch everything. That is *one* of the things it says about try...catch. It also says a different thing about try...catch: \&gt; In general, try...except should be used as little as possible so that problems can be discovered early in the development phase
Bokeh, with potentially holoviews are great tools for that. You can use them with flask / bottle as well if you wanna more customization. 
Could use a python Docker image, but you need Windows Pro to run it. Would give you an isolated python environment.
Pyramid made me fall in love with Pyhton. Flask, another framework, seems pretty popular as well. 
I use windows 7 pro because I'm not a fan of windows 10, would it work?
Also how to download it? googled it and seems a bit advanced for me :D
I did not have those issues, just add the environment variables and using win10pro
Here’s a very in-depth article on running python (and Django) in docker. You could probably skip the Django part if ur not building a web app. https://djangostars.com/blog/what-is-docker-and-how-to-use-it-with-python/ 
I use windows 7
Can you describe why it was so problematic? Why would you reinstall Windows just to try Anaconda? Can't you use the executable installer?
Programming on windows has been a hassle for me personally, just in general, unless writing something in C# that uses winforms. You can try enabling WSL and installing Ubuntu through it, but that has it's own issues. Personally I just run Ubuntu in a virtual machine solely for most of my development. If that's an option, that's what I'd recommend.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
thanks a lot!
How are you installing Python? It sounds like you might be doing some very weird, non-standard things, because both of the things you described should work out-of-the-box with no weirdness.
This is what pushed me to Linux. Are you running Windows 10? How about trying the windows subsystem for Linux: https://docs.microsoft.com/en-us/windows/wsl/install-win10
unfortunately, I have an old pc with medium specs. I tried a linux distro before and it was so laggy compared to windows 7, and then comes the space problem as I only have 80 GB of HDD space installed, so it's pretty difficult for me to install two OS's at once 
I wanna reinstall windows cause it seems to be difficult to reinstall things without running into problems, I guess windows just doesn't properly uninstalls softwares, and leaves some reg and temp files and that makes it difficult to reinstall python for me 
Mm virtual machine with virtual box and linux
I just install the official python software, and then I set up the variables and stuff, it used to work fine on my previous windows though, so I can't figure out the problem now. and to be specific, python gets installed without any issues, the problems come when I try to compile code with python in Atom or Pycharm
While nice, it does not solve my specific problems with asyncio (the cliff between Tasks and coroutines, no simple default thread-isolated event loop), so I'm making (nearly complete) a thin wrapper around asyncio to solve these issues.
I dunno what kind of distro you tried but every distro I've installed so far uses significantly less system resources (including drive space) than windows 7/8/10. In fact resource requirements are one of the most obvious selling points for Linux on desktop.
Solus
&gt; BTW: a lot of people don't understand that asyncio is a low level library and using it just by itself requires spending some time understanding the documentation. Except it's actually supposed to be a low *and* high level library which fails fucking miserably. This is how it is marketed, asyncore and asynchat are the things that are really "meant" to be low level, as well as some aspects of asyncio. Handling of the event loop and coroutine submission is not supposed to be a low level concept, and every other language that I've done async peogramming in before handles this beautifully. But in Python it sucks.
I think this is just poor phrasing on the author's part, his title is literally "Don't specify the exception type in the try...except". When he uses try...except he means a naked try..except. Not the control flow structure.
Looks like an issue with my RethinkDB docker setup, it was working last night. Will look into it
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
It does, see [https://www.reddit.com/r/Python/comments/98les0/just\_a\_little\_thing\_im\_working\_on\_pychromecastweb/](https://www.reddit.com/r/Python/comments/98les0/just_a_little_thing_im_working_on_pychromecastweb/)
I have 0 problems with Win 7 or 10 using Python3.6 My editor is Spyder 3.3.1. But Atom also works.
Dear lord what kind of weird spammer are you?
How do you use google\_speech?
Do you have any benchmarks? This seems extremely useful but may be overkill in comparison to a custom mini solution, depending on the scale of the application.
Try lubuntu
They actually do work on the redesign.
ELI5 REST? 
Very nice! Keep in mind that VLC can stream to Chromecast now, too.
Thank you for the feedback! I added a better explanation in that part, please tell me if you like it better.
basically just HTTP commands, like a URL with parameters passed after the ?. So when I say a single REST command it's really an HTTP POST request. You can use the Python Requests module and then it's a single line of code.
try preprocessing HTML more with like bs4
If you only have *80* gigs free, I'd recommend upgrading. This day and age, a 4 core cpu and 4 gigs of ram is annoying but you can survive. But to only have 80 gigs of hdd space, that's a major bottleneck for many people, especially me personally due to content creation and watching as dealing with data that has to be persistent. Hard drives are relatively cheap and are around &lt; 5 cents / gb, the larger the drive, the cheaper price/gb If you also need fast read and write speeds, you'd need an SSD. They are 10 times as expensive, (50 cents / gb), but still.
I'd like to do that (i love ffox) ... but firefox doesn't provide an "app mode" (just the content, no toolbars and buttons) ... But if mozilla release an app mode : sure that I will use it too
You modify an URL so it does something. So you could basically have it like this www.mycoolbot.com/send/yourtextgoeshere And it would send your text when you access that link. You can change the “yourtextgoeshere” so whatever you want and send a message that way. Basically. 
Dis
https://stackoverflow.com/questions/42225204/use-pandas-to-get-multiple-tables-from-webpage think there maybe more than 1 table 
Bokeh is very good for this. Look at this talk https://youtu.be/ayp5WELL6fM
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Yeah I ran a load test. Just a normal hello world nothing fancy, the request resolution was done sequentially. Sanic and Japronto are both implemented on event loop if I’m not wrong. Never tried out Vibora though. Also, I wanted to maintain code uniformity considering I’ve been on Node, Java(Spring Boot), Scala. I thought it could be done out of box in python too. 
Fresh from the press http://pbpython.com/windows-com.html I am reading this ..please if you have more suggestions post them here. 
I use Django with Channels.
Klein (github.com/twisted/klein) is patterned after Flask but operates asynchronously and works pretty well with other asyncio-based libraries. 
I'm pretty sure that if you're using Tornado, you can setup a async operation for IO operations that allow the single thread to jump to other request workload while the first request IO operations are being processed. The key point being is that async part is for IO operations. 
Yeah, I know, but I want to use this from my phone. I can run VLC and stream off NFS/Samba, but that's going to drain my battery. With this, I can control this from my phone and do the heavy lifting elsewhere. 
This! VS Code is free, open source does everything and it much lighter compared to PyCharm!.
this is probably it. it's highly likely that it has to do with how Pandas expects the html to be vs what you are actually feeding it
Assuming your sampling frequency is high enough to resolve all of the signal components, increase your window length to get better frequency resolution (at the cost of time resolution). You should start to see the 2 Hz component.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Any chance you've looked at this ff work around for app mode? https://github.com/precz/wpaana 
Take a look at `bloscpack`. It can serialize your `numpy` arrays for you and then compress them with `blosc`. Generally on anything slower than 10 Gb network, or on spinning disks, this significantly improves bandwidth. Try the `lz4` or `zstd` codecs.
Thanks, this is an awesome project I wasnt aware of
Awesome, thanks!
It seems someone has submitted a PR about 20 minutes ago. https://github.com/rk700/PyMuPDF/issues/197
ELI5 Flask?
That's the WSGI+reverse proxy's responsibility. Web frameworks are not Web servers. As a previous poster said look into Django and Nginx as a good starting point.
Slightly bizarre you chose the advantages of tabs to cqst them as Inferior. There's only one real argument for spaces I think. It would have to be something like a multi line item (say a dict) where you uses spaces to make it more visually aligned. If you don't want to mux rabs and spaces ever, you would need to go with spaces. Otherwise it's really not possible to argue in favor of spaces at all 
Have you tried sanic? [https://github.com/channelcat/sanic](https://github.com/channelcat/sanic)
Working on some web automations with selenium: 1- sending messages to all your Facebook friends 2- automating access to a visa website and reserving a rendezvous Things are going smooth except that im stuck on finding an easy/simple gui library that doesn't require much coding (i hate working on GUIs)
It has too many issues, that’s why I went with japronto. Both are built on event loop I assume
I was trying to avoid NGINX. My current infrastructure is cloud foundry (Predix) which doesn’t support docker and Mukti buildpack is a pain in the ass. 
[Flask](http://lmgtfy.com/?q=python+flask)
That’s a fair point, good luck with your project!
yes, but it's a workaround (linux only) ;-(
Using a temporary file can still use disk I/O on certain platforms. I personally used BytesIO in my project: with io.BytesIO() as tts_buffer: tts.write_to_fp(tts_buffer) tts_buffer.seek(0) tts_binary = tts_buffer.read()
never heard of it
You can still use your phone if you run VLC on a desktop. You can turn on the web interface in VLC.
Flask is not async (i.e. it doesn’t use the event loop) so what you’re seeing is expected. You can scale Flask horizontally with uWSGI or a load balancer in front of it. Async frameworks like Tornado that use the event loop will only outperform a traditional single-threaded app (in terms of throughput or requests/sec) if your workload is mostly IO-bound. That means your service spends most of its time waiting for database accesses or requests to upstream services. With this kind of workload, your service can process other requests while it’s waiting for IO operations to complete, because waiting for the network (or whatever) doesn’t require the CPU to do any work. These async frameworks can also be scaled horizontally in the same way described above.
So I do understand the idea of event loop and japronoto is based on it. And I experimented with a basic hello word response. But I didn’t quite get the expected response behaviour. Here’s my implementation https://GitHub.com/avn4986/japronto-celery
Flask 1.0 on Mac OS X and Python 3.5: from flask import Flask import time app = Flask(__name__) @app.route("/") def hello(): time.sleep(5) return "Hello World!" Running `ab -n 10 -c 10 http://127.0.0.1:5000/` - i.e. make 10 requests, allow 10 requests to be performed in parallel: Server Software: Werkzeug/0.14.1 Server Hostname: 127.0.0.1 Server Port: 5000 Document Path: / Document Length: 12 bytes Concurrency Level: 10 Time taken for tests: 5.015 seconds Complete requests: 10 Failed requests: 0 .. so threaded works by default, and werkzeug handles everything in parallel. I'd still go with gunicorn for something in production, though.
I’ll try it out. I have flask a shot but it didn’t work so well for me. P.S. I work on a windows machine, I’ll try the exact same snippet. 
You really should run a propper web server in front of your uwsgi/gunicorn service. DigitalOcean has a lot of tutorials on how to do that. Note that you dont need to do this in development.
Bottle with Cherrypy back end + a proxy like nginx
Or use Plex. Or any other web streaming home service. But this allows him to do it his own way. 
Correct, they're both single threaded event loop based, which is a very good thing. Check out `asyncio.run_in_executor` which allows you to easily run blocking/non-async code in a way that doesn't block your event loop.
I'm sure whatever cloud foundry uses as a load balancer is sufficient. Just run your Django app behind it.
I once used aiohttp for an osm vector tile service and the service was performing quite well, but I replaced it with a serverless service in a later stage because it was cheaper.
Yes
/u/kirbyfan64sos Update: Yes, it does. :)
Oh yeah. There's something to having it done just the way you like it.
The NaNs are coming from the multiple Notes columns, as you said. Since your rows have varying numbers of columns, the rows with only one Note are being padded out with NaNs. Your headers are turning into your first row. There is probably an option somewhere to explicitly set that row to be the header. It doesn't look like any data is missing. It's just not all displayed. Try printing each column to see what's in the table.
I am using celery. I think it might be the reason, I don’t remember what version of celery I am on though. I’ll have to check it out. 
So cakephp is merely a web dev framework ? Isn’t there a whole bunch of others seeing how php is/was synonymous with wed dev? 
Yup, I dont think it really pick up sentence structure. I've got a bit of playing around to do to make this a bit more potable to the ear.
Yeah, Plex covers very well what I want, but I really want something open-source, and couldn't find anything... so rolling my own. This is also meant to be small and focused. Just share a folder full of videos, choose video, cast, enjoy. Minimal, lightweight, etc.
Yeah, you have pretty much full control from the remote web interface, but if what you got works and you like, then there's nothing wrong with that. Just wanted you to be aware that there was an option.
So you made Mastodon? 
Possibly. Though, the author could as easily have made a mistake with his headings as he could have with his phrasing.
You had a go at apistar?
Your submission has been automatically removed. User accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Do you say this because the row with the &lt;TH&gt; is the 2nd or 3rd row? 
I think you might be hinting to something fundamental that I should know (IE - Like better knowing how the data structure is laid out in python or something). Would you elaborate a bit more? 
I am going to try and explicitly define the columns/headers and see what I get. This is my first attempt at a project like this. Sorry if this sounds noobish. 
Writing a daily ToDo list reminder. Things that I have to do every week on certain days. It uses google tasks to read a Json that contains my tasks and then adds the task that needs to be done to the google tasks app every night at midnight. Keeps me sane. And makes it more difficult to forget things. Lmk if anyone would like the github url. 
 from google_speech import Speech Speech(word, 'zh-CN') https://github.com/patarapolw/HanziMindMap/blob/master/HanziMindMap/utils.py I forgot that it didn't explicitly say how to use it in a script.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [patarapolw/HanziMindMap/.../**utils.py** (master → d089288)](https://github.com/patarapolw/HanziMindMap/blob/d0892881869638759cacb5b3d14cd4f177c4a0ad/HanziMindMap/utils.py) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e4hjmec.)
I wrote this article about List Comprehensions and was wondering, are there some other iconic use cases I didn't cover?
Ok. If there is more than one table the returned object will be a list of dataframes. It looks like you have just one there though. You can't really see it in the shell though. Open up a jupyter notebook and run your code there. You have 13 unnamed columns so I think your choice of header keyword arg was wrong. Run it in jupyter to see the full results. 
Why not open them in excel directly?
Start building stuff. 
Pandas is the gold standard for reading text files into excel
Lately I've been wanting to use \`concurrent.futures\` with Flask for background tasks. Solutions like Celery or Dramatiq are too heavyweight; I'm not generating huge volumes of jobs, I don't need persistence or routing, I just need stuff to run in the background. Manually managing threads or multiprocessing requires too much work for someone as lazy as me, especially if I want to avoid the dangers of spinning up a new thread/process every time a job is triggered. \`concurrent.futures\` is perfect for my needs: it provides an incredibly simple interface and manages all the complexity of queueing and managing pools of workers internally. Problem is, to use it with Flask I need it to do two things: a) Defer initialisation after creating an instance, so I can use the app factory pattern to pass configuration; and b) actually accept configuration via Flask app config. I wrote Flask-Executor as a fairly simple extension to provide those features so I can work with \`concurrent.futures\` in the same fashion as other Flask extensions. So far it works pretty well. There's room for improvement - more configuration options, perhaps some kind of native storage for submitted futures within an executor object to make it easier to pass results between different requests, etc. - but as is, it's quickly become my default solution for every app that requires some background task management. 
I'll try this before I try the above option from originalbigj.
I've read and experiment with `python-blosc` a little bit. It seems to be about the same speed as doing `pickle + compression` myself. For example, when I do `zstd.compress(pickle.dumps(X, protocol=pickle.HIGHEST_PROTOCOL))`, the output is smaller than the default `blosc.pack_array(X)` call, and the time taken is about the same. And when I try `cname='zstd'` blosc is much slower.
I've been looking for something cool to help work on in my spare time, and I think I may have found it :) 
Emby isn't **really** open source anymore, they violated the GPL then when they were told about it instead of actually adhering to it properly they put their release binaries in a different repo such that they're under a different (and unmentioned) license. That's not even getting into all the bits they're adding that are completely closed source (for example https://app.emby.media/) This thread kinda became a shit-show, but has more detail on the licensing issues: https://github.com/MediaBrowser/Emby/issues/3075
Your submission has been automatically removed. User accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Nice, I've just recently started working on similar (based on Flask) however I'm pushing the Chromecast integration out to the client. So the Python server will serve the videos and live transcode it to HLS, along with some HTML &amp; JS, leaving the client to tell the Chromecast where to get that same HLS stream and control it via the standard Android &amp; Chrome controls. I'm hoping to eventually make an Android app, but starting with just making the web app for now.
I highly recommend that you should use the Recurrent Neural Network(RNN) for sentiment analysis on any dataset. Since the sentence type is so much mutable from the beginning to end of a sentence, it can start as pessimistic; however, some question tags or phrases would get a view of positive at the end of the sentence. [Paper](http://papers.nips.cc/paper/5949-semi-supervised-sequence-learning) explains the sentiment analysis and classification of those, also how much efficient and the test cases also includes. [Code example](https://github.com/susanli2016/NLP-with-Python/blob/master/Sentiment%20Analysis%20with%20RNN.ipynb), one basic approach to sentiment analysis by using IMDB data can be helpful to expand your viewpoint, and give any clue for determining a strategy. 
 I see you've posted a GitHub link to a Jupyter Notebook! GitHub doesn't render Jupyter Notebooks on mobile, so here is an [nbviewer](https://nbviewer.jupyter.org/) link to the notebook for mobile viewing: https://nbviewer.jupyter.org/url/github.com/susanli2016/NLP-with-Python/blob/master/Sentiment%20Analysis%20with%20RNN.ipynb ------ ^(I am a bot.) [^(Feedback)](https://www.reddit.com/message/compose/?to=jd_paton) ^(|) [^(GitHub)](https://github.com/JohnPaton/nbviewerbot) ^(|) [^(Author)](https://johnpaton.net/) 
 I see you've posted a GitHub link to a Jupyter Notebook! GitHub doesn't render Jupyter Notebooks on mobile, so here is an [nbviewer](https://nbviewer.jupyter.org/) link to the notebook for mobile viewing: https://nbviewer.jupyter.org/url/github.com/susanli2016/NLP-with-Python/blob/e1b7f4c5006cd245700c82307de1e9b0985f87c3/Sentiment%20Analysis%20with%20RNN.ipynb ------ ^(I am a bot.) [^(Feedback)](https://www.reddit.com/message/compose/?to=jd_paton) ^(|) [^(GitHub)](https://github.com/JohnPaton/nbviewerbot) ^(|) [^(Author)](https://johnpaton.net/) 
Just cloned it and I'll give it a whirl tonight. I'm going to start following you so be sure to keep us up to date with progress.
Go into settings/base.py and settings/production.py and remove the things you aren’t using. 
Python 2? Do you hate her?
Will they tell me what the problem is?
And read the sidebar before you post there.
BECAUSE IF YOU'D BOTHER TO READ THE FUCKING SIDEBAR, YOU'D SEE THAT THIS SUB IS FOR &gt; News about the dynamic, interpreted, interactive, object-oriented, extensible programming language Python AND RIGHT BELOW THAT IT SAYS: &gt; If you are about to ask a "how do I do this in python" question, please try r/learnpython or the Python discord. Jesus christ, man.
I forgot to read the sidebar, made a simple mistake. Rather than explain to me nicely and try to help me out regardless, you act like a piece of shit. Thanks, won't be visiting this community anymore.
Python_prompt is used by ipython and ipython hasn't any python3 limitations. That said, python_prompt's website says it supports everything up to and including python3.5. Which probably means that you won't get to use f strings unless you download and import future_fstrings. There a few other 3.6 goodies that you can't use but theae aren't limitations that will affect the behaviour of python_prompt. A lot of those python_prompt examples are old and wont run unless you modify them yourself to run with python3. Can't comment on the slowness of the other app that you've been trying.
lol
Can’t you make it a daemon thread? Then the program won’t block waiting on the thread
Visual Studio Code (VS Code) is a great text editor with syntax highlighting for python, as well as many plugins. Not an IDE tho so not as many features as PyCharm. But it’s great, and free. 
Why the down vote? this answers the question as asked. Plz don’t downvote because you don’t prefer VS Code. Downvotes are for posts that are off topic
Thank you, didn't know you could use a plugin for inputs. Appreciate it!
Not yet I’ll try that out. 
Tabs is not bad practice. Inconsistency is.
Yes, dis! 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Fortran has a long history of being the go to language for numerical computing. Libraries like BLAS and LAPACK for the foundation for things like MATLAB or numpy. It is very good, and very fast - and well supported under the hood in python. But it is unlikely that new numerical code is being written in Fortran, outside of physics departments. If you want code that is maintainable in five or twenty years, go with C or C++. 
Have you tried https://gitlab.com/pgjones/quart
Nobody has mentioned Sanic? Im kinda surprised. Its pretty awesome
No, you are pretty save with Cython. It is still possible to go back from the compiled binary to something that resembles the C code generated by Cython, but in order to do that you have to be really experienced. Likely not the case of that guy.
Can you add some traps. Say it sometimes phones home to a server you own for a license check if missing it deletes it corrupts it self or functions differently.
Good idea, I’ve thought about it but I’ve discarded it because it will be suspicious. The idea is not to ring any alarms, plus thats a countermeasure. I really need to make sure that without executing my file he can read it. Take for instance that he gets the computer with the file inside and copies it without executing it, he could do reverse engineering without even running it.
I’ve tried out Sanic. Saw a performance comparison between tornado, sanic &amp; japronto. Japronto won it. Also, I found japronoto more friendly because it’s kinda easy to add handlers etc. 
Cada vez melhor =)
This is a rather mad question but I think you know that. Firstly you should realize that not all computation, in fact most computation done in a language like python is not invertible in general. So this problem is not solvable in general. For example imagine if B.a = A.a + A.b, you'd never be able to go backwards. If you stuck to invertible computation then yes but it would still be every hard, you could use introspection to get it done. If you're interested in just assigning attributes to attributes and have the program work out what to assign to what then this is called variable binding. Prolog is an example of a language that can do this and uses an inference system to work out what variable to bind to what which does allow you to run programs "backward" depending on what variables you specify.
Nice point. Python has [iterable unpacking](https://www.python.org/dev/peps/pep-3132/) since v3 is not cool for dict as in JavaScript. Maybe you can write a [PEP](https://www.python.org/dev/peps/pep-0001/) about it.
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://www.python.org/dev/peps/pep-0001/) - Previous text "PEP" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
Obrigado !!!
If you really wanted to, you could use [`inspect.getsource`](https://docs.python.org/3/library/inspect.html#inspect.getsource) to get the source code, [`ast.parse`](https://docs.python.org/3/library/ast.html#ast.parse) to parse it, build a new syntax tree that flips all the assignments around (although the second one would make that tricky), then [`compile()`](https://docs.python.org/3/library/functions.html#compile) it into a code object and and [`exec()`](https://docs.python.org/3/library/functions.html#exec) the code to get your new function. I have several questions, and all of them are "Why?", but you can.
There's no general way to invert a function like the one you show. The list comprehension `[o.name for o in a.something2]` for instance throws away all of the `o` object except its `name`. Unless you can recreate the `o` objects given only a list of their names, there's no way to get back to what the `a` object contained, given only the `B` instance returned by the function. If it's possible in a specific case, any implementation of an inverse function will usually need to be written by hand. You could simply make the conversions part of the constructors of your `A` and `B` types, so you could do `a = A(); b=B(a); a2 = A(b)` or similar. Sometimes you might want to make an alternative constructor instead of adding the behavior to the `__init__` method. Usually such an alternative constructor is a `classmethod`, and often named something like `B.from_a`.
Your submission has been automatically removed. User accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Key phrase here "you have to be really experienced" People break normal binaries compiled with C. There is no hiding what a binary does if they control the environment it runs on.
Compilation is really just one layer of obfuscation and it's not a strong one. There really is nothing you can do to prevent someone from learning what a program does when they have the binary and can execute it in their own environment. I think the question is more how important this code is to you. Is it a homework assignment? Is it work related? Is this your actual intellectual property, something that might pay off $$$ in the future and you want to demo it to someone that might take it and sell their own product based off of it and essentially rob you? How much effort do you think this person would spend trying to reverse engineer your code? What's it worth to them? Cython compilation might be all you need, or in that latter case I described I just wouldn't give it to them if you don't trust them, or maybe patent your code/algorithm at least. I'm guessing it's not that serious because you probably wouldn't consider sharing it at that point. But know that there's no way to truly make it private or secret if you share it. Reverse engineering takes time but if you can sit there and step through a binary and look at its memory, you can figure out what it does.
Why does it have to run on his machine? Maybe you could upload the code to.. Say Heroku or PythonAnywhere, make an Web API and.. Just write a client app that talks to that API. He only has the client app, your real code will be executed on the cloud 
It would be interesting to see what kind of performance hit something like Cython-&gt;movfuscator-&gt;binary would have. 
You could always run for a Flask (or any WSGI app), &gt; gunicorn -k eventlet file:app and just specify the environment in an environment variable, e.g. `FLASK_ENV` or multiple ones.