Graphic designers love to use JS because it is routinely minified and that looks good. 
For big datasets if speed is needed, i recommend to test snowflakes, that my friend is something else, the elasticity is crazy and they have their own library that uses sqlalchemy and is fast as light.
That reflects edx courses quality 
You should post this on /r/itsaunixsystem.
Kind of. It's currently an "active area of exploration, without any specific timeline" (2015) https://excel.uservoice.com/forums/304921-excel-for-windows-desktop-application/suggestions/10549005-python-as-an-excel-scripting-language
Ohhhh!! I see, well thanks for pointing out. I figured it on my own, I was trying to do more than what the function really asked for in our assignment handout. It's all good now. Thanks
By that logic everything is a decorator. Metaclasses are very specific things in Python. Unlike decorators, they *have to* take certain arguments, not just a function/class. Unlike decorators, they are passed on to subclasses. Unlike decorators, they can intercept the class dictionary before it is created. They‚Äôre completely different things. 
ah, my bad :( 
this is my code: &amp;#x200B; import winsound winsound.PlaySound("bird.wav", winsound.SND\_ASYNC) &amp;#x200B; if you can please find whats wrong it will be appreciated
this is my code: &amp;#x200B; import winsound winsound.PlaySound("bird.wav", winsound.SND\_ASYNC) &amp;#x200B; if you can please find whats wrong it will be appreciated
My solution to this problem is to use a file format that saves the metadata as part of the file. I‚Äôve been using the parquet file format. Look up the pandas function to_parquet. You may have to install the fast-parquet library and be aware that there are several different types of compression that this function can potentially use. The pandas documentation on this function is pretty straight forward. 
Well, that‚Äôs why I called them syntactic sugar. They wrap underlying semantics in friendly syntax. And the semantics is the same - treat a class like a first-class entity and modify it at runtime.
Does it throw any errors?
That‚Äôs when you start using generators üòÅ
This really belongs in r/learnpython. Let's say you've got the variable name you want in a string variable s. The vars() function gives you the dictionary of variables/functions currently in scope, so you can do things like: vars()[s] = 123 print(vars()[s]) It's a bit of a weird thing to do though. You'd probably be better off creating a separate dictionary and using that: my_dict = {} my_dict[s] = 123 You can do more general execution of code from strings with the exec function, but again, it's usually a weird thing to do: exec(f'{s} = 123') exec(f'print({s})') 
The semantics are really different. The MRO is a huge part of metaclass semantics. 
1
thank you :)
thank you :)
thank you :)
Really? Cause I struggled with the first and third one a lot.
Alright. Let me actually read the questions. 
Lmao
Sshhh, let him at least get through the honeymoon!
Another semantic difference: metaclasses are invoked before class definition, every time you create a subclass, and every time you create an instance. A decorator is only invoked once, after class definition. 
I used the [RustPython Demo playground](https://rustpython.github.io/demo/) to try to get an idea about how this worked. import math print(math.pi) # 3.141592653589793 a=1.0 print('str: ' + ' '.join(("sin:", str(math.sin(a)), " cos:", str(math.cos(a)), " tan:", str(math.tan(a))))) # sin: 0.8414709848078965 cos: 0.5403023058681398 tan: 1.5574077246549023 # print("string.mod: sin: %f cos: %f tan: %f\n" % (math.sin(a), math.cos(a), math.tan(a))) # TypeError: Unsupported method: __mod__ # print("string.format: sin: {0} cos: {1} tan: {2}".format((math.sin(a), math.cos(a), math.tan(a)))) # TypeError: Unsupported method: __format__ print(f"f-string: sin: {math.sin(a)} cos: {math.cos(a)} tan: {math.tan(a)}") # sin: {math.sin(a)} cos: {math.cos(a)} tan: {math.tan(a)} and here is the output 3.141592653589793 str: sin: 0.8414709848078965 cos: 0.5403023058681398 tan: 1.5574077246549023 f-string: sin: {math.sin(a)} cos: {math.cos(a)} tan: {math.tan(a)} Call me old school, but my first choice for formatting is the `string.mod` method. My absolute last choice is the `f-string`. I simply do not want my programs executing stuff that does not look like code. The impression I got was that Python is not a first class part of the web page. It is just a compute engine that passes values back into the JavaScript world. I did not see any indication that the Python code had access to the DOM. I would like to see a `RustPython` console application that we can compare with `CPython` and the various `GoLang` Pythons, and other implementations.
Awesome, I'll check out both options. Thanks!!
It isn‚Äôt. It can be. If you go into multiple inheritances. Otherwise, the resolution is linear from object to class to metaclass. And it can also be altered in a decorator, so I can‚Äôt see how that is even relevant. And the decorator can be an object or even a class. It all boils down to methods being called and variables being modified in scopes. Is this method a decorator or a `__new__` is the syntax difference. 
Your definition of expert is based on things that aren't absolute requirements for being an expert. I'm not sure how you are going to detect ego problems when it seems like you can't get past your own hardline understanding.
Did you save the script with the name ‚Äòrequests‚Äò?
yes filename is requests.p... oh wait. i see the problem ü§¶‚Äç‚ôÇÔ∏è
Yup. Never name a script after any module imported in it.
I believe they are not invoked at instance creation. In metaclass `__new__` you need to explicitly invoke `super().__new__()` to get the instance of the class. In the decorator, you get one as a parameter. So I agree that you can put some code before `super().__new__`and you cannot do it in a decorator, but it is nowhere said that syntactic sugars have to have the same capabilities as what they sweeten. 
It's weird irrelevant and sounds political for some reason
Why do you need to store the value in a variable with a random name?
 The Django tutorials are for polls, libraries, and blogs. I am looking for some resource that deals with Django and CSVs specifically, I think class-based views would be better since I have many different reports I want to generate. &amp;#x200B; &amp;#x200B;
They're math / algorithms problems, which means that 1-10 isn't an appropriate ranking guide. Instead, each problem breaks down into the following skills: - Can you recognize which algorithm is appropriate for a problem of this form? (In other words: were you ever taught how to solve problems of this general nature?) - Can you implement the appropriate algorithm correctly? Typically if you can figure out part 1, part 2 is not tough. One might argue that there are plenty of computer scientists who invent efficient algorithms, but it is also true that these people tend to be academics with plenty of time and mental energy to invest in a problem, not people taking a test. That's from an academic perspective, though. Looking at them as someone who's freelanced: the inputs and outputs are extremely well specified, and require minimal formatting and parsing. Client communication difficulty: 1.
This is a deep statistics question, not intro python.
Hi, go r/learnpython with next one. And I hope it‚Äôs at least Python 3.5 :) What you really want to achieve is to put under `'a'` two lists, right? You cannot do it just like that. However, you can have there a tuple of two lists or a list of two lists. There is no other shortcut for this than pulling already assigned list out; constructing new tuple/list with this addition; and then assigning it back under `'a'`. You can squeeze it all into oneliner, but first, try to write it separately in three lines with auxiliary variables. 
That will be involved, but exactly how? It's a deep question.
It depends on what you mean by "based off". You want it to be similar, but in what ways? The same histogram? Similar mean and standard deviation? A similar repeating then increasing pattern? Same length or just similar?
Ah, I'll delete this now then, thanks for the help
But why?
And btw sorry if it's in the wrong subreddit. I don't really know where it fits in...
no it doesnt, it says it runned the code but literally nothing happens this is my code: &amp;#x200B; import winsound winsound.PlaySound("bird.wav", winsound.SND\_ASYNC) &amp;#x200B; if you can please find whats wrong it will be appreciated
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
There's references to System and Forms, so probably C#, unlikely Java, less likely Javascript.
Well actually the quality of edx courses varies widely depending on who teaches it. I'd like to think the ad wasn't made by MIT, but by Edx.
&gt; but my bae for success was doing it faster than excel That is a low bar, and yet, profoundly significant in the workplace.
Like most of the stuff/jokes this site upvotes?
/r/learnpython
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [Just spent 2 hours to automate joining csv files saving hundreds of hours a year](https://np.reddit.com/r/learnpython/comments/a085dx/just_spent_2_hours_to_automate_joining_csv_files/) \#2: [I wrote a book on Python Regular Expressions, it is FREE through this weekend](https://np.reddit.com/r/learnpython/comments/aevgbi/i_wrote_a_book_on_python_regular_expressions_it/) \#3: [Learning Python and managed to save my company thousands per year](https://np.reddit.com/r/learnpython/comments/a0jqpr/learning_python_and_managed_to_save_my_company/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Thanks a lot man!
Which edx classes did you take? I‚Äôm also an ME and looking to delve into some data processing adventures. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
It should come with the dependencies, or dummy-proof instructions for installing them, for people who aren't programmers. Also, ideally it would be written in Python 3 imo not 2
 so far u/tunisia3507 has the most correct response. I'm working on a MacBook Air and a conda install rather than pip since I'm doing this for Bioinformatics. Anaconda installs Beautiful Soup for Python 3.7 so there may be some problems there as no tutorials show code with use of Python 3.7 (if that's even a case). In the Project interpreter when I show all I only have two, neither of which has the same names. recently I ran the following code in Pycharm using python 3.7.1: import urllib.request, urllib.parse, urllib.error from bs4 import BeautifulSoup import ssl I reved the 'from bs4' part and it still didn't work ctx = ssl.create_default_context() ctx.check_hostname = False ctx.verify_mode = ssl.CERT_NONE url = input('Enter -') html = urllib.request.urlopen(url, context=ctx).read soup = BeautifulSoup(html, 'html.parser') tags = soup('a') for tag in tags: print(tag.get('href', None)) and got the following error: Traceback (most recent call last): File "/Users/chrisgaughan/BeautifulSoup/BS4_1.py", line 2, in &lt;module&gt; from bs4 import BeautifulSoup ModuleNotFoundError: No module named 'bs4' Process finished with exit code 1 Do you have any further ideas? Thanks for the help thus-far
I think you may want to do some kind of [bootstrapping](https://en.wikipedia.org/wiki/Bootstrapping_(statistics))
[My God...](https://imgflip.com/i/2snm6e)
I dont feel capable of scoring the problems without solving them, and frankly thats not going to happen
The problem everywhere I've worked is using tools that other people don't understand. I can write something in VBA and have it take inputs from cells and spit out a list in another sheet... And that's fine. But do the same thing with Python and people get scared because they don't understand what's happening.
Bug I just noticed: It now says "drywooll" instead of "drywall". It'd be nice if someone could fix this, but I'll do it if no one else does. Let's add that to the list of bugs to fix.
It has a weird glitch or two, but I'm too lazy to fix it. It works pretty well as it is. Unfortunately this doesn't work as a discord bot (yet), it just outputs text into a file for you to copy/paste into your chat. Greater than 10x10 boards are usually too large to be pasted, but you can try! Have fun! 
It's strange, almost ironic, myself included, strong linux guy who knows virtually nothing of powershell 
What's to learn, feed em bamboo and watch em fuck /s
Hey man! I took the Georgetown intro to python class, and the MIT 6.001x intro to python (twice). The MIT python class is the most enrolled class on all of edX, and it is FANTASTIC. I can‚Äôt overstate how much I learned from those courses. I highly recommend them.
Yea, I have a problem. WHY THE FUCK DOES THE BIN WIDTH HAVE TO BE UNITY FOR ME TO PROPERLY NORMALIZE MY HISTOGRAM. WTF IS THIS STONEAGE SHIT?!
Easily. There are maybe ten standard models to learn. Learning when to use them and how to code them is pretty quick. Learning the correct theory is a much more in depth task. But getting your feet wet is very attainable. Just make sure to market yourself as a finance guy who can apply machine learning, and not a data scientist. 
And that‚Äôs bad because? Linux is open source. Firefox is open source. I‚Äôd trust an open source code over a closed source code. More eyes creates fewer bugs and transparency. Malicious packages aren‚Äôt popular. How many closed source projects haven‚Äôt fixed known security vulnerabilities because that would cost money? How many make you pay maintenance for the new version to get the bug fix?
false advertising
That‚Äôs extremely simple?
I‚Äôve been wanting to make a similar script for parsing large csv files! Glad to hear it worked! 
Once you learn the power of Python + Pandas, you won't touch excel. Please share your knowledge with as many as you can.
Take a look at where you define the all of the cards' "display value" manually, now look at contents of add_players_cards and add_dealer_cards where a lot of manual if/else work goes into mapping the card's numeric value to the display value; too much code duplication is going on which will become very painful when you move on to more complex programs. This is a habit you need to break yourself from; with a little Ctrl-C/V magic it might not seem like a big deal but it will quickly become quickly become unmanageable later on. Start with some easy inclemental improvements first, generating the cards could be simplified by using a couple of loops(it's just 2-A for each suite after all) and you might want to go ahead and attach a numeric value at the same time as well by using the dictionary data type to avoid the monster if/else blocks in the later functions. After that look into classes/objects and the @property feature to figure out how keeping the track of the card values in a player's hand might be done a little more gracefully. 
Yes I figured the code duplication could be solved a different way. I will definitely look at dictionaries as well! My next task will be to condense and try to do things a little better without so much duplication because it does make the code unnecessarily long/repetitive. Thank you for your input!
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Well, I used this https://www.adafruit.com/product/2809 , first off because its cheap and small. Hooked up to a raspberry pi zero w, I started off getting the X Y Z, I'd get the readouts like every 0.1 seconds they'd read like 1.2012801830812083 , a very long number its ultra sensitive. I just did a chain of if else statements. If X &gt;= 0.12121 and Y &lt;= 1.5 : Stuff like that. Basically what I did was do a bunch of walking and jumping ,ect to get the read outs. I was able to find like jogging might give me a 0.5 on z, but sprinting gives me a .6 on y axis, ect. After testing, it was able to tell different dance moves pretty accurately actually. No machine learning. I feel like machine learning is way over kill for this. To get the "what are the xyz's when I do this. I just did a while True: print(x) print(z) time.sleep(1) loop , did the action and recorded the readout outs. I ended up simplifying it more, and just using the G's readout, regardless of direction. Certain G's would set it off with a simple, if G &gt; 1.5: something simple like that, and it worked for it purpose. 
3d reconstruction Ask in r/computervision 
you see articles about how "Coding is the new literacy" these days. Yours is a perfect example of what this really means. Everyone should know how to change a tire, not everyone needs to be an auto mechanic. Everyone should know a little code to be able to automate and analyze data they work with in their jobs, that doesn't mean everyone has to be a full-time software developer. Programming languages are a tool, a tool that lets you take ideas from your head and give them form, and we all should be open to using tools that make our jobs easier. &amp;#x200B;
[https://en.wikipedia.org/wiki/Photogrammetry](https://en.wikipedia.org/wiki/Photogrammetry)
**Photogrammetry** Photogrammetry is the art and science of making measurements from photographs, especially for recovering the exact positions of surface points. Photogrammetry is as old as modern photography, dating to the mid-19th century and in the simplest example, the distance between two points that lie on a plane parallel to the photographic image plane, can be determined by measuring their distance on the image, if the scale (s) of the image is known. Photogrammetric analysis may be applied to one photograph, or may use high-speed photography and remote sensing to detect, measure and record complex 2-D and 3-D motion fields by feeding measurements and imagery analysis into computational models in an attempt to successively estimate, with increasing accuracy, the actual, 3-D relative motions. From its beginning with the stereoplotters used to plot contour lines on topographic maps, it now has a very wide range of uses. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
omfg
This sounds really cool. Mind sharing a screenshot of it's progress so far? 
This is so true. You can‚Äôt know where it will be useful until you learn Python and start realizing ‚Äúoooh, I could just make Python compare the values of these two huge excel files‚Äù or ‚Äúhmm wonder if I can use Python to automatically make these graphs I need‚Äù. Another thing is that once you made a working program it is there forever. We have different projects from different clients where I work and having a program that only requires minor changes to work with each project saved me loads of time. 
But this kind of Satanism is looked down upon
will do, thank you
awesome, thank you
You can't write your entire program as one giant block of text though
While I agree that Jupyter Notebooks do have their place, I prefer a plain old script for anything that should be run several times in the same manner. Now when we‚Äôre talking exploratory data analysis, this is where they shine. And then I‚Äôll pull out the good pieces and make a module/package out of it.
Only villains do this. 
Why not.
This would be _so_ much easier to convert to Python 3 if someone had thought to write a function that displays a message and pauses for user input. Also my guess is the **colorama** dependency exists mainly because raw ANSI escape sequences have never reliably worked across platforms, notably on Windows.
Yes, in order to create registries of objects. In an app, say you have classes representing various static objects ‚Äî different colors and their associated properties, let‚Äôs say. It would be a pain to decorate each of them. So you make a ‚ÄúColorBaseClass‚Äù which has ‚Äúmetaclass=ColorMetaclass‚Äù, and in the metaclass‚Äôs __new__ method you register each Color in a dict. This also lets you enforce code standards, such as not duplicating color RGB values. This pattern isn‚Äôt super common or beautiful, but it‚Äôs actually relatively straightforward and reasonable for expressing hierarchies that are still ‚Äúsmall‚Äù enough not to live in a database. 
I'd say that my title is fairly accurate, seeing as its unusable outside of discord
I have been learning python to build a Home Assistant custom component. I have built a web scraping tool to collect status and statistics from and APC HS500 UPS. What a lot of fun, but my code feels like it is held together with spit and glue. 
Consider training a neural network to do this sort of thing as a 3d image basically has more information than the 2d slices combined
I think you will have to do trials. You might also think on the kind of compute resource you expect to be available. 500k isn't much for me, and I might first try converting the JSON to a python dictionary then using pprint to convert the assumed static JSON into a .py source module file to ease assumed multiple loading. Then I would concentrate on the calcs using straight python first. Depending on those results I might try pandas or sqlite or numpy or pypy, ... 
That‚Äôs perfect! That‚Äôs what I‚Äôm looking for and would work just fine. Thanks!
I‚Äôm working on a blackjack ‚Äúgame" trying to implement things that I‚Äôm learning as I learn them. Helps reinforce all these tutorials I‚Äôm watching!
You're in the Python subreddit, do you even need to ask? üòÅ
Python is great as your first programming language. Check out /r/learnpython for learning resources, and don't worry about accreditations yet.
&gt; you need to explicitly invoke super().__new__() In almost all cases you need to actually invoke `super().__new__(metacls, name, bases, dict)` (or often just `type.__new__(metacls, name, bases, dict)`, since rarely do metaclasses use inheritance themselves). This is something decorators are not able to intercept. They don't allow you to change the base classes. If you want to do that, your decorator has to construct a brand new type. Sure, you can call `type.__new__(...)` within the decorator - but you can also do `a + b` within a decorator, and that doesn't mean addition is "just decorators". &gt; to get the instance of the class `metaclass.__new__` returns a new class (an instance of the metaclass), not an instance of a class.
Write code and put it up on github, that I'd how it works. Play around on top coder and get ranked is another way
Python is probably the best first language to learn
Subclasses and metaclasses are not the same thing
Thanks lol, but I don‚Äôt even know how to write a code
Great job! 
Yes. I faced the same problem as yours. I pulled a 4M rows dataset by read_sql. The execution time took too long and I am not patient. Then I export the query results to CSV for faster response. But the dtype when read CSV and dtype of read query results directly isn't the same. I have tried use parquet and store as HDF5. My opinion, use HDF5 is easier.
Please create a code block so it's actually readable. Also, where does request come from and what is it supposed to do vs. what is it doing instead? 
*sigh* yes, use the auto format button
Not exactly what I need but happy to find out about /r/learnpython
*sigh* python doesnt have buttons. neither does java. yes, there are ways to format your code
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
 this
Well snaftyroot, It's a real pity that I'm too dumb to mention that I referred to keyboard buttons and to expect from you to know it as common sense. I apologize for wasting your time assuming that moment. And yes, Java does have (think they were CTRL, Shift, and F, not sure)
This is the third thread about this. 
And yes, for being too naive to mention that I've referred to Eclipse or PyCharm, yes, we need to deal with terminology of course.
java does not have buttons. your IDE or editor is not a language. we have no idea what you are using to write your code in
Its a lonnng way to /r/learnpython Its a loong way to gooo Its a lonnng way to /r/learnpython to the learning sub, i know farewell to JS so long PHP Its a lonnng way to /r/learnpython but my heart lies there 
Request arguments come from a previous endpoint being executed that had a form within it to get the values. elif '=' not in month + year: and elif '=' not in month + year: and elif '=' not in name + year: does no return any results althoughtthey are present innto the database.
`global ...` *stops reading.*
I am trying to figure out how to perform instance selection instead in a dataset using genetic algorithm. Would appreciate any help and materials/code. Don't seem to find anything yet in python.
Transitioned from an Arabic &amp; history degree into something very similar. I've done this for all my month end and weekly reports. Jobs that took hours now take seconds. 
Oh and 90s is okay, you can speed up your scripts in pandas be declaring dtypes and date formats in read csv. Normally the longest part of any script for me is 1) writing to Ms sql database 2) concating multiple large files. 
"Apply Python Coding conventions" for VS code does an OK job as a guideline for beginners. But honestly Just follow PEP8, It's not that time consuming
This is not a question of terminology. Saying which editor you use is important for the question how that editor will autoformat your code. You wouldn't be happy with answers explaining how to do this in say Emacs or vi. 
If you have a smartphone check out SoloLearn. It's a great place to start. If you're having trouble wrapping your head around more fundamental concepts check out some YouTube videos of whatever language you want to try so that you can see how people are setting up their work environments, what tools they're using, and so on. And for everything in between you can have a lot of fun looking up unfamiliar terms on wikipedia where all sorts of concepts will begin to make sense if you spend enough time there. Just reading the overviews for a different language's history now and then is immensely educational. I agree with the others that Python is a good place to start. But you can pick any language out of a hat and give it a try if you're committed. 
I can get on that train for sure, lol have had to routinely stop myself from rewriting parts in Cython or rust.
Completely agree with this. It was my mistake, thank you for investing time to explain.
&gt;PEP8 OK, so it wasn't clear once again - my mistake, honestly. Here's what I'm dealing with: \- we have exercises where we use already written functions which exist as part of a pdf document. So I need to copy them, make modifications and then modify some parts of the code to make the solution work. So, when I copy the code from pdf it either copies into one line (the whole function) or it is not adjusted as it should. Dealing with this for several days made me forget that other people aren't familiar with my problem, so I failed to provide this fact in the intro. Thank you for your contribution :)
Write very bad code and put it up on github
It's interesting how people invest time to make jokes about someone but when they get the same approach reciprocally - it bothers them. I might end with -infinity points on reddit, I don't really care but what really fascinates me is how partly blinded are people: when you offend someone (maybe a beginner or someone rushing to solve a problem) you don't invest time to help explain why the statement was wrong but saying'duh' or downvoting. Thank you, I've learned a lot from this and I also believe that you've learned something about yourself too.
the problem is your 
the problem is that your question is wrong on multiple levels: it demonstrates a fundamental misunderstanding of what you are trying to do. you don't provide enough information to answer your question. you're posting it in the wrong forum. you didn't read the sidebar. you respond with snark even though you are the one in the wrong. even when you realize you didn't provide enough information, you still don't provide the missing information. also, for bonus points, replying to yourself is rather annoying
Well, I did reply that I made mistake to other people because it was true (of course, except the first comment), I don't have a problem to admit I was wrong. Yes, I didn't structure my problem as it should - I admitted it. When it comes to replying to myself, I dunno why I self replied instead of editing my comment, it just came that way at the moment. Thank you.
Yes you can. Encode as base64 then exec the base64 string without newlines. https://bitbucket.org/johannestaas/pyfuscate/overview
are you fucking with us? &gt; your question that should have been posted in a different forum which you would know if you read the sidebar, 
OK, I'm done with this, we're obviously not getting our intentions. No need to explain it further, get it as you wish,
ok, since you're clearly not going to read the sidebar: &gt; If you are about to ask a "how do I do this in python" question, please try r/learnpython, the Python discord, or the #python IRC channel on FreeNode. 
I'm not a passionate redditer and this holds for any community, platform etc that I get in. I really don't want to invest time to search where those rules are and what they are: too many steps for me as a user. That's why people directly agree with terms and privacy policies - we are too busy to read. I've provided this as feedback to them directly. Of course, it was ignored. Maybe you do use reddit every day or more than new/standard users, but personally, I don't. &amp;#x200B; I think this is an important aspect to consider. Anyways, no matter how you perceive me or my answers, I'm grateful for investing time to discuss this with me instead of doing 1000 things that you could do in these moments. Thanks. Best, E
In my opinion, the best first language to learn is... Pascal. It is strict about code structure, which teaches you to not write messy programs. It was created as an academic language and resembles pseudo-code, which makes implementing algorithms from books easier. Has explicit references and Borland Pascal has objects. It is also compiled to native code, which teaches you to program carefully. Unfortunately, Pascal is almost dead nowadays. Python is not the best first language - again, in my opinion. There's too much syntactic sugar and other "magic" in it. If you want to stick to high level languages only, Python is great. But, if you switch to C afterwards, many things will be confusing and hard to understand (ie. pointers).
Are you learning with a tutorial or simply the docs? I‚Äôd like to have a recommended tutorial.
Building a domotics project to automate watering, relays, temperature and humidity on raspberry pi. Currently struggling with the concept of distributed systems. Today I refactored a lot of code that looks so clean I‚Äôm actually proud of it.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
[removed]
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Thanks but read my message that I sent to your moderator a few months ago, as well as the following: " ...I'm not a passionate redditer and this holds for any community, platform etc that I get in. I really don't want to invest time to search where those rules are and what they are: too many steps for me as a user. That's why people directly agree with terms and privacy policies - we are too busy to read. I've provided this as feedback to them directly. Of course, it was ignored. Maybe others use reddit every day or more than new/standard users, but personally, I don't. I think this is an important aspect to consider..."
The #2 thing I hate the most about C# is the fucking PascalCase. camelCase or GTFO. Microsoft's proximity is #1.
Sounds good, but where's screenshot? 
If the line breaks or indentations are gone, it isn't possible to for a human or computer to guess where they were, except in very simple programs. (Think how a human would do it, and cases where you couldn't resolve nested IF statements) I do not think anyone makes software for this, as its just not going to get it right.
Because Python runs anywhere. 
For a first publish, the module looks quite useful. 
:///// OK, so to avoid to explain from the beginning (there are new moments) I've repurposed this discussion on [https://www.reddit.com/r/learnpython/comments/amcytc/beautifying\_an\_already\_written\_python\_code/](https://www.reddit.com/r/learnpython/comments/amcytc/beautifying_an_already_written_python_code/) Thank you :)
Already explained why it's not possible. To reinforce, look at your line 75-76. Is this supposed to be global, or part of the function above it? We can guess it is as we are intelligent. Your tools cannot.
Mmm, I see, even though I don't understand it 100%. So, basically, I'm totally fucked up. We have 1 hour to solve 2,3 assignments and I don't even invest in thinking about creating useful solution while dealing with this. Well....speechless. I will definitely fail the exam since I ran out of time on the first partial exam. The exercises were easy, as you can see. Cannot think of a logical reason why someone will create a programming language dealing with empty spaces, lines etc. Hmm, it must be some woman behind it - we are capable of complicating things.
Easiest way is to use pandas dataframes 
A woman invented the compiler. You can take that attitude of women are bad at computer science and go fuck yourself with it.
I think there's got to be a signal there -- maybe you've chosen the wrong design for this product.
It doesn't currently support C extensions
r/foundthelightmodeuser
I like it. Nice work. Should add that it requires tkinter and pygame. Add a *requirements.txt* with both dependencies and them we can do *pip install -r requirements.txt* This will work under Linux if you use os.path.join() for all path concatenations. Something like: with open(os.getcwd()+"\Maps\%s.txt" % file, "r") as f: Would be with open(os.path.join(os.getcwd(), "Maps", "%s.txt" % file), "r") as f: 
Rust is really good for targeting webassembly, and with a sufficiently compact runtime, one could use Python in the browser via wasm. In addition, Rust provides many safety garuntees that C lacks. An interpreter written in Rust eliminates an entire class of security vulnerabilities. 
Significant parts of the stdlib are implemented in C. While it may appear that modules like `io` are in Python, they really leverage code in C (`_io`). As the readme indicates, oroubous tries to re-implement as much as possible in Python, but not everything can be. 
Maybe they focus on bokeh...
It was a joke :)
@reddit, it will be nice to use this thread to learn more precisely about the behaviour of your community and hateful speech / inappropriate comments as well. Thanks :)
sounds to me that you need to recalibrate your mouse settings in windows, tbh
Exactly so. Seeing such why question diminish my faith in humanity. I shared this link expecting completely different reactions. Frankly, it sucks.
500k * 2.1kb = 1Gb. Just load it into memory each time and analyse with Pandas. Or load into mysql or postgres. Either solution will be just fine.
Thanks, I tried that. It did not work :/ It‚Äôs working fine in any other application but not in IDLE. 
The examples in the docs are not fair. You can as well catch all the exceptions inside the functions in the first example too. ``` async def create_user_handler(request) -&gt; Response: user = await check_valid_user(request) valid_user = await create_user(user) return return_201(user) ``` what are the return_* function supposed to do? throw an exception?
Jokes aside, Ive taken that course. It is really good. The reason for not using python in the ad is probably because python code is too basic to look like this cool hacking program stereotype all people who arent into tech have. Most people wouldnt even notice it, I think it was smart of them to do it like that. 
If it is exactly 120 lines for a single scroll tick then I know what that is. But still, I don't know how to fix it, sorry. 120 is a Windows constant by which every tick is multiplied. AFAIR it is 1-to-1 under Linux. If GUI is multiplatform it needs to detect the OS somewhere and fix it. It seems it failed. 
I will take a look, thanks!
For reading material, the best example I've ever seen was Microsofts Photosynth https://en.wikipedia.org/wiki/Photosynth 
**Photosynth** Photosynth is a discontinued app and service from Microsoft Live Labs and the University of Washington that analyzes digital photographs and generates a three-dimensional model of the photos and a point cloud of a photographed object. Pattern recognition components compare portions of images to create points, which are then compared to convert the image into a model. Users are able to view and generate their own models using a software tool available for download at the Photosynth website. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
The first page examples show an `exception` statement instead of `except`
i.e., monads?
Well, instead of praying five times a day in a mosque, you can put a carpet in your home and pray five times a day there, if you know which direction the holly city is. Yeah, that makes a huge difference.
Fixed, thanks!
Yes, I'm trying to do functional Python programing with asyncio.
r/assholedesign
http://www.pythonconverter.com
That would be a simple enough change with my code editor, BBEdit, using the multi-file find &amp; replace with regex. Syntax from the top of my head, here, so I might be missing an escape: find: `(print )(".*?")` replace: `\1\(\2\)`
r/crappyDesign 
Lines like this: elif "tv" in next or "television" in next or "remote" in next: can be written: elif next in ["tv", "television", "remote"] You should also, as suggested in the comments, encapsulate the user-input loops in its own function. Saves you a lot of scattered `while True` loops. 
Bu uh!!!
C# 
Well, usually, all the praise of Unicode comes from people who know very little about it, and are really very superficial thinkers. There are many problems with this standard. Chauvinism ---------- This standard declares that Latin alphabet is better than all those creepy moonspeek languages. Therefore it will have an encoding that makes storing information in Latin languages more efficient than in other languages. Yes, I know, it's "only" UTF-8 encoding, but, imagine for a second, there was a different encoding which would say, make Georgian alphabet use 1 byte and everyone else 2+ bytes. Well, nobody would support that, and you would be back in square one with the same problem Unicode was supposed to solve. However, now Unicode made it so that full implementation of the standard is about 100 times more difficult than what it would cost you to implement ANSI standard. Effectively gatekeeping national industries from ever getting ahead in this competition. Stagnation ---------- There are technical problems with certain languages and Unicode. Languages evolve, some add characters, some remove them, but as long as there is a single body which has to coordinate the change, it means now that the change can no longer be local. Every time Ukrainian language decides they want to add a new letter, like “ê, Chinese publisher must update. Oh, but not prior to Unicode standardizing the change. Another example of this problem: Hebrew subset of Unicode is lacking its own punctuation, while, Arabic, for example, does have its own codepoints for commas, dots etc. So, what happens when you write in Hebrew is like this: you type a word in Hebrew, then you type "comma", and the line is flipped from RTL to LTR order, or something even more bizarre happens, usually things get shuffled around and it takes a while for you to figure out if you made a typo, or it's supposed to be like that. And then you need to employ all sorts of tricks when sending emails in Hebrew so that your peer could understand what the fuck you are trying to say. Now, suppose Hebrew would be given its own punctuation: what happens to all of the texts already existing in digital form, where punctuation is broken? Oh, but if you thought that Arabic has it easier... Arabic Unicode has its own set of digits. But, people writing in Arabic often use what Europeans call "arabic" digits :D (which are actually Indian). So, whenever in Arabic you would try to write a Latin version of any number, you'd be in the same situation you are with Hebrew punctuation.
Well, Python had its ‚Äûeras‚Äù. In the beginning, it was supposed to be just scripting language. Maybe a little awkward at prompt, but better suited for, say, 20-line scripts than bash. When some maths libraries were ported it became obvious that it is great free Matlab replacement (you really don‚Äôt want to licence Matlab for commercial purposes - it is money drain). With Django, it became PHP-replacement, with pandas R-replacement, with TensorFlow‚Ä¶ Python became a leader which is followed by others. So it is now as a general purpose language like C++ (people even go into this territory doing embedded with Python, which is crazy if you as me). Old script-like features had to go. Change in major version always was a clear sign: THINGS WILL NEEDLESSLY BREAK. It‚Äôs not only `print`. `__nonzero__` was changed to `__bool__` breaking compatibility just for aesthetics. But if you know Python, aesthetics is king in this community. 
So you would skip f strings so you don't have to put brackets around the quotes?
I dunno, it suggests to me that they're relying on sucking in people who don't know any better, so is their baseline for teaching "better than nothing"? They're quite bad for this: https://twitter.com/edXOnline/status/1090656133319151616
This may be better posted in /r/learnpython just FYI. There are a lot of different ways to do this. I support using pandas as well for the record. However, as you said you are new to python, I will offer an alternative that does not need additional packages outside of what is included in your standard python install. As I do not know much about your data itself, there is not much I can comment on for how to load it into python. Note, this about as basic as I can do, there are a lot of more efficient ways to do it, but those assume more knowledge of python and programming. For one csv file: import csv data_header = ['column 1', 'column 2', 'column n'] data_column_one = ['data goes here'] data_column_two = ['next column of data goes here'] data_column_n = ['and so on...'] #An iterator i=0 sampleSize = 30 #or whatever your sample size is with open('my_data.csv', 'w', newline='') as myDataFile: myDataWriter = csv.writer(myDataFile) myDataWriter.writerow(data_header) while i &lt; sampleSize: row = [data_column_one[i], data_column_two[i], data_column_n[i]] myDataWriter.writerow(row) i+=1 If you are making multiple CSVs, then make a list of the names and put this the above into a loop and loop through the list of names! &amp;#x200B; &amp;#x200B;
Maybe not a very common use case, but semicolons are handy to suppress matplotlib's object repr output in Jupyter notebooks. See this tweet for an example https://twitter.com/pydatasci/status/870315351346601986
Start here [https://docs.python.org/3/howto/pyporting.html](https://docs.python.org/3/howto/pyporting.html)
That's why I said technically.
I have been working on my PyQt5 based tool for graphical programming: [Pythonic](https://github.com/hANSIc99/Pythonic)
You should be writing no code in Python 2.7 There is no excuse at this point. You have been given 10 years + to update your code. No new projects should be started in 2.7 They are going to purge the entire language very soon. 
Hey OP. I didn‚Äôt mean to diminish your faith in humanity. Really! I just didn‚Äôt understand the purpose of the project. If it is built for web assembly in mind, that‚Äôs awesome. Strengthens my faith in Reddit a bit. There will be bigger critics than me if your project grows! It‚Äôs good to have the answers now. 
I have updated my game and used dictionaries instead of manually doing everything. I would appreciate any further feedback if you dont mind! [https://github.com/rpowelson12/black-jack-game/tree/test-branch](https://github.com/rpowelson12/black-jack-game/tree/test-branch)
Thanks for the heads up! And thanks for your solution, I will try and adapt it to what I need. If I have any more questions, I will go to /r/learnpython Thanks again.
Dear God I cannot escape Matlab‚Äôs crappy syntax no matter what I do üò≠
yes, I can do this too. Hmm, I guess, I can also convert the code to C++ where I can "enjoy" extra typing?
I guess, the question is why this decision was made towards full blown language specs? This befits the purpose of the original python.
Let's ban all advertising! I'm getting so fucking sick of it
No, please don't, since this can be solved perfectly well with multi view stereo.
your complaints are about 10 years too late and if i were you i'd rethink it because many big libraries seem to drop support for 2 nowadays, with numpy gone there's probably be many that follow. But i guess being a rebel isn't about going the easy path. And there are technical reasons for the change (which you will find if you google it, turns out after 10 years your not the first one to complain). 
C through Cython is a great path. Maybe not the easiest one, but you will immediately gain a new powerful tool. Or Haskell if you want your brain to be blown about ‚Äùwhat programming even is, dude?‚Äù. It is not that useful but opens eyes (third eye) on things. Disclaimer - I myself admit it is not the best advice, I‚Äôm just giving it for completeness.
Stick with python, unless you have been going at it day and night you have just scratched the surface in a year. If you must add something, I would learn basics of C for the performance critical parts. About some of the others that I personally know a bit about. After python: * You will scream when you define a class in Java * You will cry when you have to do anything not matrix related in MATLAB (a simple path and string manipulation, some proper object oriented program...) * You will spend a decade trying the dozen different ways of doing the same thing in C++, none of them being 'the way', all while your eyes bleed from the fantastic syntax. In short, you started with Python, after a year you have been spoiled to the core and it is going to be _hard_ to stand many other languages you mention. (Others like Julia are all right). Have you considered functional programming?. At least those are so alien that you will not constantly compare them to python, and they do add a different way of thinking.
I've personally found Rust to be a nice, modern continuation from Python. Since it's got good compatibility with C, it's quite easy to integrate Rust and Python in a single project too. I recommend taking a look at 'The Book', Rust's ultimate guide: [https://doc.rust-lang.org/book/index.html](https://doc.rust-lang.org/book/index.html)
If you go for the data-engineer or data-analysis path look for common program language in that field. Consider instead of learning a new language focus on technologies like no-sql databases, bigdata. You don't need go down to all the little details but being familiar with it on the high-level theory stuff. Not a developer, just Devops, but from what i've seen devs who are consisered more experts have knowledge beyond programimng. 
Oh, this is going to have a lot of different opinions. I would personally say C/C++. You can go in a lot of different directions with it. Anywhere from data analysis to game dev. There is a lot of overlap as well, but you will find some things that python does not support well which is big in c/c++. I personally had to go this way because opencv does not have good support of GPU stuff in python. If you are not worried about web development... Then we will just pass on those. A lot of what you can do in java, you can also do in python... And... I am not too fond of Oracle... R and the like, python already fills in that niche, I mean they are good and have their own uses, it is just you will not get as much out of it vs another language. Ruby and other stuff.... eh.... Only if you have a project in mind with it. The only other think that you might want on your radar is C#. It is kind of in a similar bucket as Java, but there are a few well supported things in it which make it worth while.
Kotlin to create native apps.
Odd. Still, must be a windows issue if it worked fine before the restore. 
People that would notice that probably don't need the course after all.
Thanks, didn't thought about linux earlier, will change that.
I'd stick to your own plan and go with C++. I didn't get to understand the basics fully (pointers are from hell) but it certainly taught me something about how computers and compilers work. Don't leave Python though. There's still a lot to learn, I'm sure! 
Hi r/Python, This is to introduce my utility imgp, a very fast multi-core batch image resizer and rotator. I wrote it as I wanted a better alternative to nautilus image converter which I use to use earlier. I am a frequent traveler so I required the utility more than I wanted to. Hope you find it useful too! ##### Features - resize by percentage or resolution - rotate clockwise by specified angle - adaptive resize considering orientation - brute force to a resolution - optimize images to save more space - limit processing by minimum image size - convert PNG to JPEG - erase exif metadata - specify output JPEG image quality - force smaller to larger resize - process directories recursively - overwrite source image option - completion scripts for bash, fish, zsh - minimal dependencies
If you like the *idea* of Java, you might think about learning Scala. It runs on the JVM (and can use Java libraries), but the syntax is about a thousand times better. It's multi-paradigm, with string OO and functional aspects, and as very useful if you're interested in any Big Data engines (e.g. Spark, Flink).
I'd say, teach them how to use github and write clean code and comments. Data scientists are eager to learn. 
I feel like I'm sort of in the same boat. I'm a Python developer and image scientist. It's great fun, but I've been using Python for 2-3 years now and am ready to expand my horizons. Julia has piqued my interest and I've been playing around with it lately. Rust also seems highly valuable. I want to know C++ but I honestly can't stand it. And while it is a mainstay and isn't going anywhere anytime soon, I'm convinced it will be replaced in the coming years because it's so painful. So why bother if I don't need it for my job? Besides, I learn better when I'm having fun. And I do not have fun when learning C++. &amp;#x200B; Anywho. That's my 2 cents.
Don't stop expanding your Python skillset for sure. A good idea might be to pick up a toolset that complements your Python skills rather than another language specifically. Maybe dive into some machine learning. A lot of things you can do with Python are just as complex as learning Python itself.
Go with C/C++. After all it's a classic language you should know üòÉ
It's advertising, the code doesn't have to actually run. 
But it should be a picture of the same car
Unless you have a real reason/project for another language, just keep mastering python. I recommend learning new libraries. SQLAlchemy comes to mind to learn database programming: [https://www.sqlalchemy.org/](https://www.sqlalchemy.org/) &amp;#x200B; Learning the Object Relational Mapper right along with SQL would probably be really useful instead of grinding raw SQL strings forever until someone asks you why you aren't using an ORM.
Nim is an interesting language, that looks like a lot like Python with a hint of Pascal on the surface. Compiles to C (and other back ends) for a rapid, statically compiled binary. I was in the same situation and looked at the alternatives for this (C++, Go, etc) and none resonated with me like Nim.
I thought about Julia, but then I learned who owns the language. https://www.crunchbase.com/organization/julia-computing#section-overview The investment banks that fund Julia will want a return on their investment eventually. The PSF ownership of Python is a pretty important part of the strength of the language. I‚Äôm going with CPython/C/C++. 
Learn Docker!
You've stated that you're not interested in web dev, but haven't really stated what you're looking for in another language either. You've stated what you use Python for, and there's no real use learning something else related to those tasks without a reason (an example reason might be that timeseries analysis is not really great in Python, so you want to learn R). It seems you lean towards C++, which I do too, and it's a solid language. Moreover if you're a good Python programmer, there's a lot of concepts that port over nicely (e.g. iterator protocol, coroutines). And then you'll start to dig into specific C++ features and you'll think "this literally does anything I want." Another choice may be C# --- .NET stuff has kinda a lame rep but C# is a really nicely featured modern language. Null coalescing operators? Yep. Context managers? Yep. If you're interested in playing around with VR stuff, Unity is where most people are in that space, and that integrates nicely. Some other options: Rust (opinionated compilation means standardized code and less time debugging), Go (built for concurrency), Julia (if you're coding RK4 on the weekend...), Kotlin (write Android apps without using Java :D, also it's dope), Haskell (if you're a masochist and/or just really like annoying other programmers with your functors and whatnot).
&gt; You will scream when you define a class in Java I scream when I simply open up IntelliJ. 
What is wrong in moving back this syntax to Python3? This will bring backward compatibility, as expected for a solid language, and people stop complaining. 
Just start writing python3 dude. It's not that different.
C and C++ 100% absolutely 
 And then I‚Äôll pull out the good pieces and make a module/package out of it. Wow! You sir are way smarter than me. Thank you for your time to reply!!!
Default Linux installation (ubuntu 18.04) uses Python2 `python --version` `Python 2.7.15rc1` &amp;#x200B; with additional effort of typing "python3", I can get Python3. Why I would do this if it forces me to type longer programs with all these C++/C-style brackets? I do use any Python3 feature. I really want to help Python developers. Just bring backward compatibility back. This language deserves it. &amp;#x200B;
Just made a new release v0.6.0 where one of updates is support for email field support by default. Thanks for reporting and looking into this!
Sweet deal. I‚Äôll get on that. Thanks for the reply
For fuzzy matches start with levenshtein and similar stuff (https://rawgit.com/ztane/python-Levenshtein/master/docs/Levenshtein.html) https://pypi.org/project/python-Levenshtein/
leaning something functional... Haskell, elixir, scala... Is solid advice. It will chant how you think a little. Scala is also faster than python when using concurrent programming, I don't really know about the others, but maybe that's a side benefit?
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Are you sure: Just the other day I found out that \`\`\`\`def foo(): print('foo'); print('bar');\`\`\`\` is valid syntax.
Yeah, but I thought maybe as your fifth language, not necessarily second. Also: after functional/declarative one things like SQL are much much easier. 
Docker isn‚Äôt a language. It‚Äôs a container runtime.
/r/learnpython
It's true they're rough for language novices. But hey, it's a challenge I guess?
It depends what you're interested in. Interested in games? Use pygame to build a game. Interested in web development? Use Django or Flask and build a web site.
I might suggest taking a look at Elixir as a next language, as it will feel similar in some respects at first but will teach you a lot of new concepts. You'll learn about: * Pattern matching * Functional Programming * Concurrency without shared memory * Immutable data structures All of this will help you ease into other languages which might be harder to learn. And have fewer similarities. You'll find some overlap in that the language is dynamic, has a repl, similarish syntax, nice friendly tools, and you can start new projects easily. If you get a handle on the functional part and immutability then things like Rust will be easier later. If you like the concurrency model, then Scala's Akka will make a lot of sense. It's a pretty small language, so you can get a good sense of what it has to offer in a few weeks to a month or two. Check out the [home page](https://elixir-lang.org/getting-started/introduction.html) and the [community forum](https://elixirforum.com).
I don‚Äôt think it‚Äôs java but still hilarious cause it‚Äôs def not python. But kinda makes sense cause well python code is not the coolest thing to look at
I want to make useful programs with a UI and logic behind it
I use pass instead. It somehow feels more pythonic. 
learn go lang as it is similar to python but low level language
Expand your skills in Python and learn a modern language like golang, rust, julia or even swift or dart. Treat c/c++ like the plague unless you want to end up tearing your hair out doing your own memory management :-)
You've got a higher level language under your belt. Learn a lower level language. I would say either C++ (solid) or Rust (interesting). Once you've got that under your belt, learn a weird language. I would recommend Lisp.
Might even be hours. Excel is limited to 1M rows, so if yor dataset is bigger than that after initial filtering (ex. Wig Get&amp;Transform) you will have to split it into smaller files. 
&gt; it will be nice to use this thread to learn more precisely about the behaviour of your community and hateful speech / inappropriate comments as well. Look in the mirror &gt; Hmm, it must be some woman behind it 
&gt; I'm not a passionate redditer and this holds for any community, platform etc that I get in. I really don't want to invest time to search where those rules are and what they are: too many steps for me as a user. You're really not going to like the effort that goes into programming, then.
JavaScript, the Loreum Ipsum of Computer Science. 
This is the lousiest reason not to use python 3. Wow. Wait... is this a joke?
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Then learn to create GUI applications. Pick a GUI framework that supports your target platform and learn to utilize it.
Do you know any good simple GUI frameworks 
My apologies then.
Tkinter is (I think) avaiable on most Python installations.
Oh boy.. Ok so neither I nor the bot are moderators, so while it could be a fun read, neither of us have access. In your next comment you '@' reddit as a whole, which is confusing. I can't tell if you're being figurative, or you think you're talking to the reddit mods, because that isn't how you contact them. From that I'm not sure if your comment refers to the mods or reddit admins as a whole. And that confusion is ok. I don't expect everyone to know nuanced parts of reddit. Reddit is a big weird place no one expects you to know everything about it. But I want to emphasize I am not a moderator nor is the bot. Lets talk about your hopes for this thread to learn more (or for reddit to learn by this thread--I'm not clear on that point but it's moot). All top level comments are very respectful to you, but then uniformly you reply in an insulting fashion to the person trying to help you. At one point you mix sexism into in a super weird leap of rudeness. All of this is strange behavior for someone asking for help. People are literally taking their free time to interact with you and help you solve your problems with nothing in return. And in response to various types of help you are rude and dismissive. This brings me to my final point. the bot is literally built for people like you. People who didn't know about a sidebar or the rules. It doesn't care whether or not you should have read the rules, it just wants to help you be a better programmer and get better answers faster. In response to your whole, "I really don't want to invest time to search where those rules are.." bit, the bot goes, "I know, and that's why I'm here." And remember, anyone who answers you is doing it out of their own good will and free time. They aren't being paid for this and get nothing in return. Even if you don't like their answer or it doesn't work quite right, they tried to help you for nothing. Be kind. 
And, I think knowing some SQL is extremely useful for understanding SQLAlchecmy, or probably any ORM.
I would also like to add expertise in another language. My thinking is that it should be a compiled language to complement python‚Äôs interpreted nature. Im very surprised to read this thread and see very little mention of Go. Go is my next target. There‚Äôs a reason so many new technologies are being written in Go (and Rust, but I know less about Rust).
Swift is a good one; it has an expressive type system, borrows from multiple paradigms including functional and OO, and compiles down to tight native code. It originated on Apple platforms, though is now used on the Linux server side, and being hosted on LLVM, can and will be retargeted to other platforms. Or if you want to take a deep dive into functional programming, Haskell is fun. Beware: you might emerge with a PhD in category theory.
Thanks Do you know any tutorials for it?
Ugh, that‚Äôs why I don‚Äôt like IPython in general `Out[4532]`. I know it‚Äôs out! Why are you bothering me with minute details like this?
brace your`self`
If you want something more powerful (faster, statically typed, compiled, modern, forces you to learn more about how computer work) then I think you two options are Rust and Go Lang Rust is a little faster, but a little more complicated than go as far as I understand. Go is more geared toward servers, and it really shines in easy concurrency, and good error managment. Both don‚Äôt have the mature ecosystem you would find with python, or java so you will have to do more on your own. 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I've been into Python for a while. I do C++ tutorials once in a while and I think it helps me understand Python better. And, I think a lot of Python libraries are written in C/C++, so it interfaces nicely. 
Can't check it but when i run it on my default manjaro installtion the result looks a bit different: python --version Python 3.7.2 ubuntu is always a bit behind, but i'm convinced they'll get there too. 
So does your computer. Or have they fixed the issue of it requiring 64TB of RAM?
Agreed. If OP wants to make things interesting, learn C/C++ on a microcontroller like an Arduino. Super low-level, plus making hardware do stuff is fun, even if it's just blinking an LED :)
well said
SQLite has a JSON1 Extension that allows you to store JSON records in a column and run queries against the JSON before loading it into memory. There is also [tinydb](https://tinydb.readthedocs.io/en/latest/intro.html) to get you started with a simple, easy to use document (JSON) database
Definitely SQL. It's where the data lives. And it's a pretty cool language that will change how you think because it's a mostly pretty pure functional language, where you declare what you want instead of how to get it. And it's one of the only languages in widespread industry use with a concept of a pure function (no side effects). Also c would be excellent, both for being able to optimize your Python (can use inline c with it or write custom Python modules in c), and for getting a better idea of how Python's high level magic actually works underneath to be able to reason about performance.
&gt;utomating data analysis and figuring out new ways to look at our data Bash awk perl one liners
It's like advertisements aren't even made by programmers anymore!
I think R and SQL are good additions for python
Oh, thank you for kind words. I am not author of this project. Nevertheless, I would try to explain why such project excites me. This is not about webassembly, this is rather about Rust in general. I believe that the same service that Rust has been providing for Mozzila Firefox is achievable for Python interpreter as Rust enables more aggresive optimisation for concurrent or parallel programming. Eventually, this project might become proof of concept and lead to faster and more modern CPython interpreter. I shared the project link expecting people to understand its potential. What a failure :)
What about C# and Q#?
Time to learn a Lisp. I'd go with Clojure.
Hahaha. Python is, at this point in time, basically an MS puppet. Its automation runs on MS servers, most people who contribute to the core language are employed by MS. If, for whatever reason, tomorrow MS decides to tell Python to jump, it will jump. 
Nice! I'd be more robust on your comments. 
wait for Python 4
Not a language but www.fast.ai 
you're kind of a shitty person. are you aware of that?
Whichever language you enjoy working with and that you'l'l be happy to devote the most time to. Learning programming is mostly about doing a lot of it - whichever language makes that easy will be best, and every other concern is secondary. Once you've learned a language or two, learning more is easy. Also, as far as I can tell certifications are mostly scams. They're never rigorous enough to prove that someone is actually useful, and a technical interview will always reveal enough about a candidate to make the certification irrelevant one way or the other. A certification *might* get you an interview when you otherwise wouldn't have if there's a clueless HR department filtering candidates, but for the most part no one cares.
Sounds neat. Can you add a link pointing towards the github or the documentation? 
I‚Äôve wanted to learn Java a few times in my life, but every time I remember 12 lines for hello world is not ok. Kotlin isn‚Äôt bad though. 
I've been (very lightly) considering trying some robotics projects, would I need to learn some C/C++ or would Python do the trick?
I have not tried running Airflow on Windows. In any case, you can write your plugin containing a new operator that will perform the actions you need.
Perhaps looking at home assistant source code would help. You could figure out how it sends messages and then just create fake ones. 
 I coded in C/C++ for 3 years before starting with python and if I knew how much it would have helped to grasp basic concepts before going low level I would have started off with python and then going C/++ and would have written much cleaner code from the start. Like you said Qt is native C++ and the best documentation is for the C++ side, as PySide2 is only added recently to the official documentation and not as complete. Don't really know about PyQt so I might be wrong, but it helps me to understand the native documentation when I don't find anything for Qt in Python. Also integrating C for performance critical tasks into your python scripts might be a huge gain in the science field. Also going low level teaches much of the hardware related thought process in programming, but maybe that's kind of my opinion cause I often code for microcontrollers/hardware drivers. You could also just start with multiple languages and then go deeper if you really like one. :)
Why not all of them? But, if you want to stick with Python, then SQL and C will provide added value, and will, probably, make your programs better. Other options listed here... they don't sound too different from Python to satisfy curiosity, and anrn't directly contributing to you, if you stay mostly doing Python. If you are looking to expand your experience with how programming is, then there are languages that are quite a bit more different from Python, eg. Forth is different in approach to grammar, approach to VM, approach to types. Lisp family is very different in how it treats the language itself. Prolog family is different in how it treats execution flow. J is different in how it treats language and objects in VM.
Try Clojure or Haskell! :) But also stick with Python a little bit longer like /u/glacierre2 said
source code: [https://github.com/vietnguyen91/ASCII-generator](https://github.com/vietnguyen91/ASCII-generator)
This post just proves that Python attracts many programmers from the lower funds of the intelligence ladder. You would never see a C++ programmer resisting the latest standard because it might force an update to his old code. A C++ programmer might not make immediate changes but would have a plan in place for critical code. 
oh hey, i'm actually taking a python course on edx, except the course i'm taking is offered by georgia tech
Definitely go post this on /r/learnpython - this isn't the place for it. When you do, make sure to give a little more info about what you're confused about or what's going wrong. It's definitely not obvious at a glance, and expecting people to read through your code carefully, or copy it and run it is a little unreasonable.
What is your goal? - Do you want to be a good programmer? - Do you want to earn a lot of money? - Do you want to understand how computers work (and possibly make your own)? - Do you want to be a researcher? - Do you want to understand how programming languages work in general? Python is a decent start, if we are talking about being employed. Knowing Python will not make you a good programmer, neither will it teach you about how computers or programming languages work. Python is not interesting as a research subject in CS, maybe if you were into politics and / or sociology, perhaps even HCI, but not CS.
Even the embedded world likes easy to use and well defined languages. Fourth, BASIC and others have been used in the past to have a solution other than assembly or C++. Pythons has a lot of potential for low volume embedded work. 
It isn‚Äôt 12 lines, it‚Äôs 5. One line to declare class, one line to declare method, one line to call print. Then 2 lines for closing the method and class. It‚Äôs an object oriented language, if you don‚Äôt like the paradigm that‚Äôs fine but don‚Äôt at like it‚Äôs an objectively poor or nonsensical language. 
Good point, it may work to some degree. Thank you 
Yes, I want to be a good programmer.
Thanks!
Thank you. I was looking at pandas and hoped it would work, but the .json files I saw most using were only a handful of lines. Loading everything into memory sounded like it might make calls take longer. What might be the best way to store the .json files? Is it best to store them all in one file? I have some cognitive issues related to Young Onset Parkinson's‚Äîthe only reason I mention this is to convey my limitations. Learning new programming languages, scripting languages, and query systems takes me a great deal of time and is a real struggle for me. It is a constant source of frustrationg. In general, programing takes me a great deal of time, but it's something I enjoy doing (or trying to do). Pandas seems to be the thing that I could step into most easily. I just wasn't sure if it was a good tool for this. Even if the dataset jumps up to a million entries, which is quite likely, that's still only 2 gb of RAM. I'm thinking this will still be okay. The database of keyforge decks is constantly expanding, so I want to try to ensure that my program will be able to expand with the database.
That‚Äôs just my opinion, by I wouldn‚Äôt trade static typing for any ease of use. 
No one gonna mention GO? 
A lot of people will say Python is the best to learn first, and that's a perfectly valid choice, because it abstracts away most of the typical nitty gritty details that usually come with programming a computer to do things, and it's also easier to read due to less ugly syntax. In this sense, it's a good choice because it won't totally blow away newcomers who are intimidated and unsure about programming. The interpreter is also extremely easy to set up and use compared to the compilers and interpreters of other languages. If you do choose Python as your first, just keep in mind that there is a LOT going on behind the scenes whenever you write code, and that because of that, it is one of the slower languages. If you learn Python, let me guarantee that you'll take lists and dictionaries for granted. The joy of coming from C/C++ and seeing these as basic language features... &amp;#x200B; My first language was C, and despite being somewhat difficult to grasp in the beginning (in comparison to Python anyway I'd imagine), I feel that it gave me the underlying knowledge of how computers operate to very easily learn (at least structurally) how other languages - especially higher level languages - operate. When I first learnt Python, I required very little time to understand how it worked, and quickly tended to thinking about how the language was working behind the scenes. So if you want to understand how computers operate, and thereby acquire knowledge that will speed up everything you learn related to programming, I recommend C. It will no doubt take longer than learning Python.
Maybe try something completely different like Scheme, Haskell, Forth, J, Prolog or Assembly. You don't gain much by learning languages that are more or less the same.
I usually don‚Äôt like to use harsh language but you are publicly confirming to the whole world that you are an idiot that can‚Äôt read and frankly is willfully stubborn. You should hope that future potential employers never read this crap you are posting. The changes made to Python3 are not something designed to anger people that can‚Äôt adapt but rather changes made to assure the future of the language. Nothing happened without a lot of public debate often with people that have had extensive involvement in the language. The changes are good for the language, especially future adoption, they have not been made to personally piss you off. If you really want to help Python developers stop whining like a 5 year old. You are crying over decisions made a decade ago that helps no one. More importantly it puts YOU in a very bad light. 
So, today is the day when the code is released?
C/C++ would be a good choice to complement your Python use and knowledge. Yes, it will improve your general understanding of how computer actually work - which will help with everything. Also, when Python is not fast enough and there is no fast module (written in C) already available a focused C module for Python will fix that problem for you. Indeed, it will be a great departure from Python. But why else are you looking to learn another language. It will broaden your mind - and isnt't that the point. Java would by a solid choice. It has some of the best libraries and frameworks and excellent tool support (IDEs). It's run faster than Python (usually), but will feel terribly verbose. And for small projects it will be frustratingly slow to start in comparison to Python. &amp;#x200B; Yes, you can dig into SQL when you finally need it. But if you ever have to work with large amounts of data it's a must have for analysis and optimization. Ruby mostly fits the same niches as Python. Rust is meant to be a safer alternative for C. Developed by Mozilla to harden their Firefox development. &amp;#x200B;
So, today is day? Is today the day when the code is released/shared?
Not good example. Latest standard of C++ (C++11 and above with "auto" keywords) are simpler compared to older C++ standards that enforces types, so I see good reason why people can like new C++. Python3's most popular statements like print is a subset of Python2 (which can also use "()") but now it forces more typing. 
A lot of microcontrollers used for robotics are programmed with C but higher level planning will be done in Python. Python can be used on some microcontrollers but that's not always available.
I have no experience with Java in web development, but you should definitely try Flask out Django. They have subreddit communities. They are both beautiful libraries for web development. I started Django pretty long ago and I didn't understand it. Recently I started the Flask Mega-Tutorial and I understand everything and I really like it, but the buildup is pretty slow. I don't know about other frameworks but I think these are the biggest two. You should decide yourself which to choose. 
+1 for supporting RUST *biggest reason to use RUST over C/C++* : Safe memory allocation. Thats all we all should care. Buffer overflow vulnerabilities have to be solved sooner or later. This shitpile of *memory allocation bugs* have to be solved sooner or later for all programs. That means forget about /safe code\, start using *safe language*.
&gt; If anyone could outline their typical workflow using notebooks it'd be really useful. I use vim and an ipython console to do my heavy data processing. Results are saved to disk in some useful structure (usually pandas DataFrames, but not always). I then use the notebook to write reports. The notebook contains the explanations, equations, etc. in markdown cells, and the Python cells are used to read and visualise the results (plots, tables, etc.). Depending on the work, the results are stored in either a pickle dump or an SQL database.
I‚Äôm pretty sure it will not stop you from complaining. You are literally burning up bandwidth over a non issue. It take minimal effort to turn your print statements into proper function calls. With the use of modern editors the extra effort is trivial. Of all the changes made to Python3 you seemed to have gotten hung up on the one withatrvial impact. Why? Again this sounds like the squaking of a 5 year old that can‚Äôt understand that there are bigger things happening in the world than his immediate needs. 
Could not agree more.
Did you use a transform library that does light mapping to ASCII or did you do it by hand?
From my experience, go for something that can't be done with python. JavaScript - can be run by anything with a web browser C in microcontrollers - Arduinos can be extremely useful
I would learn something at either a lower level, or with a different programming paradigm. Lower Level: * C * C++ * Assembly * Rust Different Paradigm * Haskell * Clojure * Scala * Common Lisp * Erlang Of course this is showing my own personal bias, because I am a fan of both low level programming and functional programming. Depending on your future plans are you may never need to know what happens at lower levels of abstraction. Functional Programming is interesting on its own as it shows you different ways to think about solving problems and might change how you write python, but it might not be something you end up using.
C# it's a great language, better than Java in my opinion and the . net framework takes the cake in simplicity to power ratio. 
Yup. You should know C language as embedded programming is vastly C programming and C is fun too.... You'll C üòâ
 public class HelloWorld { public static void main(String[] args) { System.out.println("Hello, World"); } } 12?
The point is C++ programmers don‚Äôt whine over improvements to the language like we have seen with Python developers. Auto was in fact just one feature of the new C++ standards that C++ developers have rapidly adapted to. The function call syntax doesn‚Äôt involve that much typing, generally one character, considering the advantages it brings. I can‚Äôt for the life of me understand why this is even an issue for you. Honestly what is the percentage of lines of code that are print() statements in your code? 
Really, MIT should be the maddest of all -- edx is making them look like idiots.
Cool! Out of curiosity, how does the current version perform vs CPython, in terms of speed &amp; memory usage? 
If you have a function call that isn't needed by the program directly after it, then you can async it. It's probably only worth bothering if it takes a long time for the function(s) to complete, and you don't want your entire program hanging on a single function which could otherwise be completed alongside the following statements. &amp;#x200B; If you want multiple tasks being completed simultaneously which, for the most part, aren't dependent on each other, then you'll want to use async. It's been most obviously useful for me in any situation involving event loops. The event loop can run, and dispatch threads to do certain things, whilst still always checking for new events.
Python is now an option thanks to the Micropython project. But Arduino, a C++ library that provides a convenient API across different hardware, has been popular for over a decade so there's tons of example and tutorials using it. I found it very easy to learn. Micropython is also slower and takes more memory, limiting the range of hardware it can run on.
C/C++ will be relevant for a long time, and will allow you to understand and make use of many useful libraries throughout your career. From a practical standpoint, I think this is your best choice. If you want to broaden your horizons, you might also consider a functional language like Scala or clojure. If you're familiar with formal methods, you can make much more definite claims about the behavior of programs written in a functional language. Whether or not that is useful depends on what you work on, but I thought I'd mention it in case it piqued your interest.
Such a big laugh. I‚Äôm glad to lighten your mood. 
I recommend C/C++ because not only are they a valuable skill set but they teach you how powerful and dangerous it is in lower level programming. It will really make you appreciate languages like Python that protect you from the issues of low level languages. In addition there are things you may want to do in python that are very slow in pure python. C/C++ can be very fast and learning to bridge C/C++ to python is also a valuable skill.
I haven't heard of anyone using those languages on a microcontroller, but [apparently it's possible to use C# on some powerful ones.](https://nanoframework.net/) Those hardware requirements are higher than that of Micropython. 
Sure. I use Flask to do this. It's super lightweight and mega simple. The advantage over Java is **it isn't Java**. 
That pun though..
&gt; In short, you started with Python, after a year you have been spoiled to the core and it is going to be hard to stand many other languages you mention This might be true, but being able to do multiple languages not only makes you appreciate what you have, but will also allow you pick up other languages quicker. The first takes the longest, the second will be quicker and everyone after that becomes even easier. And lets be honest, it is not always possible to use python, so being able to pick something else is necessary.
`You will scream when you define a class in Java`: Python's class syntax (Other than DataClasses) is quite verbose too!
It seems this simple question "why Python3 deviates from its original design" brings just accusation of a person who asks this question? Hmm.. 
üòÅ
I retract my statement haha. Gonna go read about metaclasses now.
I think that's for the formatable notebooks. So you can accurately understand stdin/out/err
Learn C so you can use it to program python libraries. 
 import this It's an interesting easter egg. Especially if you look at the source code.
Tbf, though, 5 is a rather large amount to print a single line of text. Requiring a class and a constructor to do so. But to also be fair, C# (probably the closest analogue to Java) is a worse in this regard, since it requires importing (sorry using). Kotlin (which uses the JVM) does it in 3 lines: fun main(args : Array&lt;String&gt;) { println("Hello, World!") } 
That looks really cool
I'm interested how it could be less verbose?
Well I look at this from the perspective of working on a variety of devices as an end user. Often these devices have a hacked together ‚Äúprogramming language‚Äù that might resemble BASIC or something you can‚Äôt even define. Having a well defined interpreter in these devices that is universally understood and does away with op codes that sometimes reminds you of assembly language is a good thing in my mind. These are the ‚Äú‚Äùlanguages‚Äù‚Äù you often see embedded in motion controller, robots, Sterilizers, pumps, process controllers and the like. I double quoted languages because at times the implementations are often half done and full of bugs. Python could really fill a niche here. 
I recently use QML with Python, and the code looks clean for me as QML could dynamically bind the variables for states in GUI like Vue.js does.
For me, it‚Äôs Elixir because that‚Äôs the language a project I want to contribute to and then fork to use as the backend base for a silly web app idea I have is written in.
I've only considered dabbling in robotics and trying to make some cool stuff once in a while. Probably won't happen though. So that in mind, would it be worth trying to learn for my career? 
Are yoy following any designe patterns? The MVC and MVVM seem to be common ones regarding gui
Python is also object oriented. Java is just very explicit in using class/constructor, where as Python treats things like this more implicitly (but you can be as explicit as you would like in this regard with Python, whereas Java you're more or less forced to be explicit)
The DataClass Syntax is good as-is. This, on the other hand, is needlessly repetitive; see also: super. def __init__(self, model, color, company, speed_limit): self.color = color self.company = company self.speed_limit = speed_limit self.model = model super(#etc, self).__init__()
Its not about robotics. Its about fundamentals. Python has everything built in(mostly). So you won't get to know the inner concept on how things work. And specially the OOPS and data structures concept of C++ which is backbone of programming. So, i think you should go with C first and then C++. Just syntax is different in both languages but you'll gey used to it..... Hope this helpsüòÄ
Two extra lines for the main entry point for Java is hardly a good example of java's "excessive verbosity". There are far better examples than complaining about the number of lines in hello world.
requiring an import isn't worse, it gives you the option to not have that import should your program not need to print anything to stdout (ar take any input from stdin). The option to not have to load stdio.h is a *good* thing.
Hyperbole, my man
If you just want to test it and not publish it, I would just use kivylauncher for android. That way you just put your kivy apps into a kivy folder on your device and it runs automatically.
It does, i have experience with languages other than Python too, just prefer Python. Java for example is C-derived (idk if that's the right term), would what I learned there be pretty directly useful with C/C++?
I was gonna recommend Rust, but not for his use case (data analysis). If you're using Python to do system tasks, run services, etc., then Rust/Go is probably the next logical step (C/C++ couldn't hurt either, but the learning curve is a bit steeper there, particularly when you get into mallocs, but if you're getting closer to the Linux kernel, knowing C helps tons). For data analysis he's probably better served learning R
Yes as it should! After all it has been a very long time since the decisions where made. If you really want to know the whys you can go back through all of that public history. I‚Äôm not going to do it for you. The point is real debate took place with respect to the changes made in Python3. You seem to want to deny this happened and ten years later want to claim your position must be the correct one. Even if your position was correct it is way to late to be on the internet whinning about Python3s print() statement. Honestly if you can‚Äôt see how foolish this quest of yours is I‚Äôm not sure what more I can say. Just realize that nothing in Python3 was changed without sound reasoning. 
Try mypy.
Don't know much about JAVA. never liked it though but ya in general C/C++ is the base of every language. So knowing bit about it is also good....
I'm starting to write Python for the first time and figuring out all the tooling I had in other languages is part of the challenge. This helped me get up and running with local projects quickly, so thanks!
Alright, thanks for the info
AnytimeüòÅ
Any functional language for sure is good!
Learn Go lang, It's really useful in today's world, because Kubernetes is written in go
Not quite sure what these are yet, but maybe something similar? I make it so that it's perfectly usable in the console, and then add the GUI to it. There's a clear separation of concerns, and all the extra stuff is GUI-specific, but the code is still repetitive. I'll check these out later.
&gt; class Program { &gt; static void Main() { &gt; System.Console.WriteLine("Hello World!"); &gt; } &gt; } Fatal Error: Public Main() method is required in a public class compiling with .NET 4.5
I'd go with Scala, R, or Julia if you are staying in analytics. Scala will allow you to work quickly with Big Data platforms in ways that you can't with Python. R is basically tied with Python in popularity in analytics so knowing it would have a lot of value in reading others' codes. In addition, there are packages that allow you to run R/Python in the same script which can be useful in occasions where the tidyverse in R is faster than Python for a given function. R tends to be better at time series analysis also and has some really cool forecasting capabilities. Julia is more of a gamble. While it isn't used too much today, it is more efficient in analysis than Python/R in many ways and could be the language of the future. However, since it isn't widely used yet, there are still a lack of packages for certain functions and it is unlikely coworkers could read your code today. I've heard it is pretty easy to learn compared to other languages, but I haven't tried it myself. 
Would this be something that can be used with emulation? There's a ton of old fighting games that could use something like this, and they are typically played on Final Burn Alpha and MAME. I also think that Sparlab would greatly benefit if there was a way to program reversal wakeup situations, like delaying attacks long enough to happen on the first frame of wakeup, or something along those lines. 
Well I was using .NET Core 2.2 but you can just add the public keyword I guess: public class Program { public static void Main() { System.Console.WriteLine("Hello World!"); } }
Python kinda tricks you into thinking that it's object oriented, as it treats classes like any dictionary. This implies some limitations, so you can't compare java and python from this point of view, or I just did :D
Are there any languages that do it better?
Jupyter notebooks definitely have their place, especially in exploratory work. Maybe you can ask them, whether a lot of copy and paste is taking place between notebooks of different projects. This might then be a good opportunity to work out whether some of these pieces might be extracted and put into a module/package, which can then be maintained within proper VCSs. This might be able to shrink the gap between your two teams.
*I'm now pretty good at hammering. Should I now look into screwdriving or sawing?* I have the similar background as you (research engineer and mostly using python) and I learned new languages and technologies because I needed them or I had a suitable "professional excuse" to learn one. For example... - A project needed an specific android app to do special things --&gt; Java and Kotlin. - Previous colleague left and I needed to take over some of his projects --&gt; Matlab - I needed a little 3D toy/tool to do a certain graphical thingy --&gt; Unity and a bit of C# - I wanted to play around with Raspberry Pi and electronics --&gt; This way I originally learned Python. - Trying various languages and technologies just out of curioisty and for personal amusement. Is it possible to use some work related tasks as "an excuse" to play around with new languages? Do you have a task which would benefit for doing things differently? From your bullet points, I gather R, Julia and SQL might be candidates for this. Maybe even C++, but that beast is not easily approachable. Or just go for the esoteric route for the lulz (don't learn [brainfuck](https://en.wikipedia.org/wiki/Brainfuck), because that's done to death. Try [Shakespeare](https://en.wikipedia.org/wiki/Shakespeare_Programming_Language), [Piet](http://progopedia.com/language/piet/) or [Whitespace](https://en.wikipedia.org/wiki/Whitespace_(programming_language)) instead. An april's fools idea: ask your colleques to review a script you have written in Whitespace and printed on a paper.
Why is everyone all of a sudden comparing programming languages based on the number of lines required to print hello world? In a large project, with numerous components and many people working at the same time, trust me, you NEED this kind of verbosity. 
I would say don't learn a language for the sake of learning a language. Learn a language because it solves one of your problems, otherwise you won't use it much. If you are looking for something to complement your python skills, things like database technologies, web dev, etc will probably be the best as they will allow you to apply your python skills to a wider range of problems.
That's quite impressive dude!
Dabble in a bunch, follow up on the ones that pique your interest. A shallow knowledge of a bunch of things is a useful skill.
Did you just notice you have started harassing me on internet? Certainly I'll not employ you as a programmer. 
Java, you‚Äôll love it. C++ is extremely difficult and absolutely unforgiving. Java will feel very structured and natural for you, it‚Äôs really quite nice.
Two xbox 360 controller emulators are built in, but can easily scale to 4 emulators with slight modification to the code. It would be interesting to see what other emulated devices could be integrated. Regarding wakeups, a lot of feedback I've been receiving from the FGC sees Sparlab being useful for that. I could use some help with integrating a Frame Reader feature that could do these kind of things! &amp;#x200B;
I'm a senior student in computer science, and I couldn't recommend more C/C++ as your second language. It actually is a great first language to start your programming journey, as it gives you a basic idea(or rather good idea) of what is going on under the hood, and all that memory management. Once you get the hang of a language like C, everything else will come as rather easy to learn. But try different programming principles rather than programming languages. Object oriented programming and some basic design patterns are a must if you want to develop somewhat large projects with different components.
Very cool! Now it just needs a black background with green text üòâ
Languages that have struct literals, like Rust. 
I went from mostly knowing Python to using C++ (for a work project). It was a little painful at first, but once I got into the swing of C++, I really like it and I'm glad that I know it.
Another vote for SQL for basically the exact same reasons listed.
Actually I like the numbers being there, makes it easier to understand if I've run a cell after having opened a notebook
Came here to say this. Have you learned numpy and pandas really well? You talk about learning a database. Have you messed with sqlalchemy or frameworks wrapping other databases? Nosql databases like mongodb has orm apis to learn. You said you didn't care for web development but you could pretty easily stand up a flask server to display your data on graphs in the browser. Is it a command like tool? Have you learned click yet? What about context managers and decorators? I bet there's useful stuff in the standard library you have no clue exists. Have you read fluent python? Feel free to learn something new but I personally think one year of python is nothing. There's so many modules out there. You should always be checking if something exists already before inventing it yourself. 
First off I‚Äôm going to disagree with everybody here and tell you to stay away from Python as your first language. This especially if you are deep into computer engineering. Instead look for a computer science program as a minor that preferably teaches the concepts of computer science with a variety of programming languages. That might mean 2-3 semesters of C++, then some Java or even Python. In other words you want to learn the underlying concepts of programming not so much a specific language. After getting a bit of thebasics under your belt you will want to look into coursework focused on assembly and C++ programming. That is classes designed to specifically teach the details of these languages The reasons behind these suggestions are: 1; If you understand the concepts then it is pretty easy to pick up other languages. 2; Starting programming at a high level like Python often glosses over the lower level details. 3; If you expect to remain focused on computer engineering you will need a lower level understanding of programming and the languages suitable for such work. Currently that means knowing C and C++. 4; Never get hung up on one language. Simply knowing Python for example can make you life easier via scripting. However Python could be dead in ten years, no one can predict the future with certainty. That is why understanding the underlying concepts is so important as the language you invest in today might be dead tomorrow. 
Are you getting the gray value of each pixel and replacing that with a character that has a similar black/white ratio?
A lot of good suggestions here. I have only one more suggestions. It all depends on what you want to do with your new fangled language. I'll only add one new language to the list. 1) C/C++ will give you the most flexibility for future projects. It will also get you closer to the metal... err silicon. And it'll be great for doing data collection on IoT devices. This would be an excellent choice. 2) SQL Will augment your Python abilities nicely. But if you're slinging data, I suspect you're already getting pretty familiar with it. 3) A functional language will expand the way you think about programming. Something like Erlang, Elixir, Haskell, Agda, etc. Mm... Lisp/Scheme will also change your thinking on programming. 4) Julia, Go, and Rust are all hep. For what you, Julia has the most overlap and it's array there is enough of Python in it so you won't get lost. Go &amp; Rust seem fine but I've never used them in anger. 5) If you want to sling numbers on big iron maybe have a look at Fortran. There! I said it out loud. It's a niche language to be sure but it is the monarch of that niche. Modern Fortran (2003+) has some features that get you to the calculations or simulations a bit more gracefully than c/c++. It's the same bits and bytes in the end it's just that one leads you to a great solution faster with cleaner code. - It's a simpler language to learn than c++ - The libraries for number crunching are the best - Array handling and notation is just easier than c++ - In Fortran 2008+ they baked concurrency into the language. 6) Strictly, personal opinion: I'm meh about R. I think (hope really) it's waning because it's so damn ugly. The scientists do seem to like it so... I hate Java but I have to admit there may be good things to say about other JVM languages (Scala or Clojure?). I'm so prejudiced against Java itself that I don't really look at them much.
Keep promoting your github bro, maybe someone will give a shit, that you‚Äôve re-invented the wheel. 
Build an inspirational interface that gives people projects based on their input? ;-)
A cloud storage system been at it months 
Neo? Is that you?
If you need a good introduction to how and why to use asyncio : https://youtu.be/tSLDcRkgTsY
The Matrix has you...
You see that cubicle across from you?
This looks cool, can't wait for your first action movie ;-)
In your case it should not be hard to use Model View Controller (MVC) since you basically have the model part (logic) done, if you have some appropriate API. You can think about these parts as layers for separation of concerns. The short (and I hope understandable) description would be this : The view is here to basically deal with the UI of the whole thing. These would be Tkinter, Qt and other framework elements that end user sees. The controller is the part that will receive requests from your view and call the model methods and then respond by changing the view. In this part you can probably handle any domain related problems. The model part should take care of your data and logic. This part will communicate with the controller.
Does this look interesting? [https://github.com/johnward-umensch/Sparlab](https://github.com/johnward-umensch/Sparlab) I could use some help! Here's a link to a YT vid: [https://www.youtube.com/watch?v=XKNUhKUnYeE](https://www.youtube.com/watch?v=XKNUhKUnYeE)
A real compiled language.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
your coming from probably the best language, you might find c/c++ tedious compared with the speed you can solve something in python. its took me a good few hrs yesterday to get curl and json parsing going in C++. the python version took a few minutes. as someone said below something different like clojure might keep you entertained :). 
I've made many single page web tools with a python webserver (bottle is my usual choice) then a UI with JQuery and Bootstrap. They can be extremely simple, functional, look great and have a familiar web feel. Once you have a basic pattern, (the webserver, a GET method for page with a form, a POST method to handle the request) it's very simple to build on.
I used a website
Thank you! 
I've always used it with this plugin: https://github.com/pyenv/pyenv-virtualenv
The baby step to hacking the matrix . one small code base from python , a giant step to mankind
Thank you! (See my other comment about hating Matlab syntax)
Analyzing about 1tb of tweets
nice. you might want to look at [AAlib](https://en.wikipedia.org/wiki/AAlib). It's 20 years old now, but has a nice model built in that lets you do something like sub-pixel rendering by using the shapes of letters.
Rust - its has some interesting ideas for a language, and it is in the same ballpark as C when it comes to performance. It can also be called from and call Python using C bindings (rust can present as C at the library level) Forth - I don't consider this language itself useful, but it is quite interesting. I wouldn't seek to master this language; just get to know it a bit.
Neither does C 89. That isn't a good stick to measure by. 
Agreed, especially since the default implementation of python is written in C. I found a deep dive in the interpreter enlightening as to what C is capable of. There‚Äôs a great set videos on youtube which are recordings of just that. If anyone is interested I can probably dig them up again.
Looks like a way a Director would show how the Terminator or some other type of Cyborg would seen in a film
Check the docs for numpy.random.choice. You will need to specify if you want to reuse already chosen values. 
Create an AI that learns how to use the Caps Lock key.
Like others are saying, switching to py3 is easy and there are a lot of auto tools to help. A lot of us professional python engineers have made that switch on production software and are not looking back. Heres an article explaining one reason why py3's print is better https://www.google.com/amp/s/snarky.ca/why-print-became-a-function-in-python-3/amp/. Theres certainly more as reasons if you google it.
Yeah, but you can't do def foo(): print('foo'); def bar(): print('bar')
Of your list it seems that the only ones useful at the moment for you are R, MatLab, Julia, you say yourself that they would be helpful to understand articles.
There are a lot of tutorials online, choose one you like from the beginning. If you get the basics, try diving in specific libraries depending on what you want to do. Do you have an idea of what you want to do? What kind of IT projects were you managing before? 
Only if your definition of OOP is "that which is like Java". Python is more object-oriented than Java is. Remember Java's slogan "Everything is an object"? Except of course for all the things in Java that are not objects - primitives like bool and int, methods, classes, packages - not objects. Whereas in Python, *everything* the programmer can access is an object. Even NULL-value is an object in Python. 
Tk is certainly simple, but it's also rather old and primitive. I'd recommend Qt, or my personal favourite - wxPython. I know the latter has a number of tutorials and books. 
There is nothing Django specific about CSV. Their is a Python doc on the csv module.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
No programmer who reads this thread would work for you, so mission accomplished, I guess.
Security engineer here who mainly works in Python. Not having been taught C/C++ in college for my CS degree, I found Rust to be a great intro to pointers without having all the headaches of C/C++. My only problem is that it seems hard to find a good project to use as a learning exercise in Rust. 
[removed]
Well you talked me (not OP) into taking a look at it. I used to program c about 30 years ago, moved on to other lines of work, and now am enjoying playing with python. Every time I think about doing some c/c++ programming again I remember how I used to buffer overflow and destroy the space time continuum. I'm taking about freezing up my computer, requiring a hard restart. So I've just stayed with python. I'll take a look at rust. Thanks. 
Yeah this is why I am interested in this. I'd like to build a model to generate 3D mesh from 2D image of a person, this is how I was going to collect my training data lol.
this is great, thank you! 
I wasn't measuring anything, just a correction to what /u/schplat said
Check *Pillow* https://pillow.readthedocs.io/en/stable/ this is an image library that will also let your draw lines, circles, rectangles ... If you need more flexibility, animations and so on, check *PyGame*.
I think if someone really wants to know the inner concepts, Assembler is the way to go. C and C++ adds abstraction too.
C/C++ is not the base of every language. They are the base of some popular languages, but that is not the same.
You have very wrong definition for OOP. Check out Smalltalk for proper OO implementation. Also Python is far more OO than Java
You don't really have these issues in Modern C++(11 and newer) unless you want to go really low level
This is so fucking cool
https://realpython.com/python-sockets/ Man is this the website for you... I tried doing a multiclient server but I just don't quite understand this. Maybe you will.
yeah I was wondering about that too. u/Tydaljames did that but I didn't want to change it bc I wasn't sure how else to accomplish the same thing, especially since I know Python 3 a lot better than 2
Judging by the things you list I recommend that you first study SQL. It is such a useful tool as you work with data analysis it can really help you in your work. Since you don't have an immediate need for C or C++ and you want to learn a bit of Computer science I recommend that you go for Rust instead. The Qt advantage will be eaten up by the longer time to develop things in C++ compared to Python and I think Rust is an interesting path with its built in memory safe programming, it is like a bit of evolution. Julia seems pretty good since it appears to be failry similar to Python but Python has the advantage of rich libraries and huge community so I think if you really want speed it may well be better to make modules in a fast languages. For example if you learn Rust or C you can make modules you then call from Python for time critical parts of your programs. There is also another option, if you want an easy language that is compiled to native code, has garbage collection, type inference and very nice standard library, perhaps you should try out Go(lang). Learning the basic syntax is fairly easy because the language does not have so many keywords. Sure, you can't judge a language by only that, but it is neat.
Julia is an in between language. It works like python or like c++, it all depends on how you write it. If you treat it like python it will be interpreted, but if you do typing and all that nitpicky stuff, it compiles into real compiled code and runs like c++. It's new so there's not much on it, just basic documentation. Java is, to me, a dirty language. It is a bit old, runs along c and the like. My only experience is with minecraft (when it was spaghetti code) so that turned a bias. There's also lua, another python related one. I see it more in graphical applications than general scientific. As a note, if you start on one side, python or c, and go to the other, it tends to get difficult to write in the first. Write in c, move to python, can't really write in c anymore... it's good to refresh your first language on occasion. 
Lind of reminds me of the old Commodore 64 video rendering.
Thanks!
Consider all methods, pick the one best suited to the task at hand
How confident are u in your code? Confident enough to invest $
Whoa, red baron looks like a great idea turned into a solid software. This really makes me happy. 
So far I have been doing things like Udemy, Codecademy, PacktPub ebooks, etc, sampling other languages and ultimately deciding on Python for my first deep dive learning. Most of my projects that I've managed have been hardware or software related upgrades, such as camera systems, point of sales, PMS, and more, hence the "Jack of All Trades". It is great to see the variety of different technologies, but I never feel like an expert in any particular area. I have read a bit about Python related careers, like Data Science, Information Security, and Software Development, and I am trying to get a better understanding on which I should focus on. Given my later start, I want to try and avoid spending a year or more learning one path just to find out it doesn't hold my interest as much as another path could have. I realize that learning Python as a core language will benefit me on any path, and I have much more to learn in that respect, but I want to try and tie in some more hyper focused learning to expedite my readiness for a given career.
In your defense, he has beyond crossposted this, manually posting it across 14 hours on about 20 different subreddits. Although, still a bit of a rude way to phrase it.
now use more characters and add color.
There's a Ticketmaster wrapper for their API https://pypi.org/project/ticketpy/
I like Jupyter because it feels simplistic and it is easy to delegate some of my code for other people to manage as I work on newer projects. The only thing I haven‚Äôt figured out how to do is...link the base python file in Jupyter to windows task scheduled. Currently I have to save it as a .py file and then connect it up. Kinda inconvenient. 
Thank you! I will go through and add more. 
Would like to see some explanation of the predicting algorithms. You say long term but those graphs are at the same time, unless it was predicted that perfectly ahead of time? It doesn‚Äôt explain. Could you?
Look into `while` loops. Also, /r/learnpython.
It predicts the crypto prices for approximately the past 8 months without knowing anything but the precedent 4 months. You can compare the output to any graph on coinmarketcap you'll see it's pretty accurate. 
Will do, thanks!
Depends on the currency, I'd say that the ethereum predictions are really accurate. Don't you think?
That is good improvement, the next improvement you could make is to expand it so that the case of when a card's numeric value does not match its display value(ie facecards, jokers, wilds, etc) is also covered; it looks like you might have also just discovered something close to the "[premature optimization"](http://wiki.c2.com/?PrematureOptimization) trap. for value in ["A", 2, 3, 4, 5, 6, 7, 8, 9, 10, "J", "Q", "K"]: for suit in ["spades", "clubs", "hearts", "diamonds"]: # But what is value card_list.append({"suit": suit, "value": value}) Rule of thumb: Don't mix data types because every interaction with the value afterwards will likely need to type checked first for safety and can introduce some hard to find bugs. The value field in the dictionary might be an integer or a string as a result of the mixed types in the first list. The reasoning for this might be so that you can use the same field for the numeric and display value of the card, but any efficency gained by avoiding declaring separate values is lost since this bit of logic had to be added to handle data types: if card["value"] in ['J', 'Q', 'K']: cards_value += 10 elif card["value"] == 'A': cards_value += 11 elif card["value"] in range(2, 11): .... There is also a more subtle issue here that will cause other developers to throw things at you when working on a shared codebase though. Mixing data types is messy but can be handled in the code but the *functional* purpose of value field is now dependent on its value(It is what the player sees on the screen and the numeric value used to calculate the hand total except for when it isn't). As developer walking into this later on, I have to know about this dual purpose and more importantly know how to determine when the dual purpose value field turns into a single purpose and that I now shouldn't rely on the value field directly when doing calculations. So now instead of just creating some high level code documentation of the card dictionary you have create a larger doc going over all of the different cases and how to handle them(which I will promptly not read then blame you anyway). There a number of ways to handle this without dipping into the object oriented side of things(can't avoid it for much longer though), the simplest fix would be to change the first for loop to just go over a list of containers that hold the display value and the numeric values, ie: for card in [("Ace", 1, 11) ("Two", 2, 2)... for suit in ["spades", "clubs", "hearts", "diamonds"]: card_list.append({"display_value": "{0} of {1}".format(suite, card[0]), "min_value": card[1], "max_value": card[2]}) Not a huge fan of this method though. 
pythonloc is a drop in replacement for python that automatically recognizes a \_\_pypackages\_\_ directory and prefers importing packages installed in this location over user or global site-packages. This means you no longer need to use virtual environments to isolate packages. If you are familiar with node, it is similar to node\_modules. This is a pure Python implementation of the proposal laid out in PEP 582. The CPython implementation is available at [https://github.com/kushaldas/cpython/tree/pypackages](https://github.com/kushaldas/cpython/tree/pypackages).
but how do you make loops faster?
rude? how old are you, 12? maybe we should all be wearing victorian gowns and sipping some glass of tea like privileged aristocrats do eh? 
I might be displayed my ignorance here, but you know why I haven't put any effort into golang yet? I'm afraid Google will just decide to discontinue it in 5 years.
Seriously and it‚Äôs that accurate?
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Give it a try you'll judge by yourself :) Just look at the ETH Screenshot on the README
Are there *any* purposes for rockets, other than some phallic-worship? I mean, maybe we'd have used the superior siege weapon to launch satellites instead of rockets if we really put our minds to it. Also, the heavily downvoted comment clearly spells out that women can't be into rockets. [Which, as we all know, is biblical fact.](https://en.wikipedia.org/wiki/Margaret_Hamilton_(scientist)
This. Was gonna recommend something that expands your programming paradigms from a imperative perspective (C/C++, Python, Java) to a functional perspective (Scala, Haskell). The bonus of Scala is that it compiles in the JVM and has a ton of libraries where you can integrate with into the traditional big data ecosystem.
You can also watch Youtube videos directly in the terminal using a set of Linux commands. I saw this in an answer on StackOverflow. It's quite cool. You can even color the letters, so you can watch videos with color. [https://unix.stackexchange.com/questions/160212/watch-youtube-videos-in-terminal](https://unix.stackexchange.com/questions/160212/watch-youtube-videos-in-terminal)
Ah yes a glass of tea, that is what I call it because I am very normal 
I feel you with the "Jack Of All Trades" feeling. I'm kinda lucky that I could start off with some data science and lots of data wrangling from the start. I'm now a data scientist and learning about web development. I think it's better to start learning right now than to doubt about what to learn. If you don't know where to start, the whole world lies open for you. Whatever you choose, there'll be a job fit for you. 
as a brit I'm ashamed that people even think you can drink tea in a glass.
Yea but personally I would focus on C++. The first thing everyone does in C is start writing a library of functions that they can use in their projects... Why not use a magical language like C++ where there is already a library of useful functions that was built **from principles** and is compatible with everyone else's C++ **standard** library?
Yea will do. Thanks
OMG
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I already seen few blog posts about using LSTMs to predict the price of the cryptocurrencies. You have some criticisms: * you try to predict a really near-futur i.e x_{t+1} given that you have the knowledge of x_t. If i read your code correctly your sampling rate is 30 minutes. It is not really hard to predict the price. * you should probably predict the relative growth of the price: (x_{t+1} - x_t) / x_t. In this case you will see that your model is not as good as it seems, as you will end up with a model that will fail to predict an increase/decrease in price 50% of the time. If you want to try an alternative approach here is the models i try to come up with https://gist.github.com/adrz/0203d22f6d83aaf338de43481fac458d (not clean code but you got the idea)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Thanks a lot :) 
that was the joke :D
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Same here!
Unless you can show me a paper that use convnets to do structure from motion that outperforms multi view stereo, then I'll change my mind. Since sfm is an area where the math is already well understood, there aren't that many reasons to apply learning instead of simply using geometry. Sorry if I came across as snarky, but it's honestly a bit tiring that people think that learning should be the first choice of method for *everything*. 
Something low level like C and you can write extensions for python! \~oeuf
Thanks for the inspiration 
Nope, C/C++ is a much better choice 
Okay, so to avoid mixing data types, the best way is to use classes? I have briefly gone over OOP however not well enough to be comfortable using it in my code. It wasn‚Äôt even an idea I had when writing this obviously. If classes can make the code easier for other people I‚Äôll definitely start trying to go that route! Thank you again you‚Äôve been a huge help!
I was in the exact same situation. I didnt go for Go for the same reason u didnt. I went for Rust. Since then: * I have learned a lot I can also use in Python * Rust is "the new C++" with a lot of catches solved. * Rust community is awesome. * Rust is awesome lang in all the ways I had a chance to face to. * WebAssembly (wasm) ... just google it. * Feel free to start with Rust book.
Fantastic; well deserved gilding. 
Isn't there a tool made by a core dev for the sake of the meme that makes almost any Python script one-line via lambda calculus, too?
Thanks, you too! :-)
MIPS Assembly :)
So what is a normal day like in a data science role? What kinds of tasks do you tend to perform? 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
The Rust book takes you all the way from introductory material, right the way to teaching you how to write your own multi-threaded web server. I found that to be quite a useful resource for learning about program structure.
You said you want a language to complement Python. What‚Äôs your purpose with the complementary language? Once you can answer that, the answer about what language to learn will become clear to you. 
You can have both in Python ;) 
Oh great project 
thank you :)
thank you :)
thank you for the infor :)
thank you :)
Please, just no. They are TWO languages . It is absolutely true that c++ is intended to be a superset of C, but I promise you, the compiler treats the code differently. C is a lot more straightforward to learn than C++, and its everywhere - sort of like the Force. Binds the technology world together. It's not forgiving though: there are not many batteries included. C++ has so many weird and wonderful batteries you can get in to trouble from the sheer variety of ways to do things. It's a very useful language, but it has layers of complexity on it that C only dreamt of. Learn whatever you like, man, but remember C and C++ are their own beasts and should be treated as such. Source: use these languages for my daily. 
Note: &gt; Currently the project is in an early phase, and so is the documentation. 
Yes, exactly :)
thank you :)
haha thank you :P &amp;#x200B;
thank you :D
thankssss :D
really :D
a good suggestion. Thanksss
:D:D:D
thank you sir :)
thanks for compliment
thank you :P
Not a problem, brother!
First off, I think **Python** is a great if not the best choice to be someone's first programming language. IMHO anyone actually *working* with computers should learn **C/C++** at some point. I think that it's great for understanding the very basics of how computers work and also how to write good source code; also in other languages. Also I think most people forget about the importance of **Bash**, even though the majority do work on GNU/Linux systems. The language I'm planning to learn next is definitely **Julia**, because I think that it has a lot of potential to become a good tool for various tasks. 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
| already written functions which exist as part of a pdf document Using PDF here is a poor choice; can you convert the file to something that has fixed-width columns using maybe something like pdftotext or pdftohtml?
If you‚Äôre still in school, internship. Otherwise working as a software tester is a good introduction. You get to work closely with programmers and how enterprise software works. 
Thanks I appreciate that alot :)
I was doing my taxes today when I realized my cryptocurrency tracking web app of choice ([cointracking.info](https://cointracking.info)) wasn't supported for import on TurboTax Online. Whipped up a quick script to transform the cointracking tax report into a format that TurboTax understands, saving myself from tons of manual data entry! Source here: [https://github.com/niharG8/cointracking-to-turbotax-online](https://github.com/niharG8/cointracking-to-turbotax-online)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
If only all would worship the half god Hercules, 
Python can already run in the browser due to some Python interpreters in JS (albeit, extremely slow). What benchmarks are you getting so far and how do they compare to CPython?
&gt; You guys like my shitty code You're not the boss of me
Just checked a couple of (python) repositories I had in mind and here are a couple with great overall docs. &amp;#x200B; Gaffer [https://github.com/GafferHQ/gaffer](https://github.com/GafferHQ/gaffer) [http://www.gafferhq.org/documentation/0.53.0.0/index.html](http://www.gafferhq.org/documentation/0.53.0.0/index.html) &amp;#x200B; Shotgun [https://github.com/shotgunsoftware/python-api](https://github.com/shotgunsoftware/python-api) [https://developer.shotgunsoftware.com/python-api/](https://developer.shotgunsoftware.com/python-api/) &amp;#x200B; OpenTimelineIO [https://github.com/PixarAnimationStudios/OpenTimelineIO](https://github.com/PixarAnimationStudios/OpenTimelineIO) [https://opentimelineio.readthedocs.io/en/latest/](https://opentimelineio.readthedocs.io/en/latest/) &amp;#x200B; Bonus: Abide by the stay on the platform idea. Like Wikipedia and YouTube, they want you to stay on the platform. Make it so that any reference to another part of code is only one click away. If I want to check out the source code of a function, and it uses some specific utils module, I want to click on that bad boy and show me what it does. Sphinx with Jinja got you covered on this, with the right templates and configuration. &amp;#x200B; Good luck.
Making a PlayingCard class then making each card in the deck an instance of PlayingCard is probably easiest way to mess around with classes here, instead of creating a dictionary just initialize a new PlayingCard instance and set the suit and value during initialization. Most people don't seem to "get" classes at first; just write the code anyway and the concept will click with enough bruteforce. Turning player and dealer into objects would also give you some pretty straight forward usecases of the @property feature(hand value being the lowest hanging fruit). 
cool
Okay, several questions: Why a Python script? Surely a simple bash script or batch file would be better. Why a subprocess? Why not just replace the current process via some flavor of exec (in os module iirc)? If you *have* to do a subprocess, your signal handling is plain wrong and potentially dangerous. You almost never want to straight up ignore a signal. You should be spawning the subprocess in a separate process group instead, which would cause the signal to the child to be separate.
&gt; I was gonna recommend Rust, but not for his use case (data analysis). I disagree, it's the perfect language to write low-level python extensions. Combining this with the usual Python crunching tool can give you quite a bit of power.
Everyone here is just going to list off the tools and languages they used to build their favourite projects. A programming language is a tool. You don't choose a tool and then use it, you choose the right tool for the job. You don't know what to pick because you aren't defining the project or career you want to start.
I take it as a red flag when I see a list of programming languages on a resume that goes like this: &gt; Python, Javascript, C/C++, Swift... If you're listing all your languages and combining C and C++, you probably don't know *either* very well.
These always frustrate me, because I always want them to actually use characters which mirror the edges- like, a (mostly) horizontal line in the image should be made up of `-` characters, or `_` characters. `*` and `+` could mark different kinds of corners. But it should also be filled, too, based on luma. So I went to go make a vectorizer that did this, realized it was hard, and gave up. 
feeling really sad.. oops.. sed.
The language that most improved my general programming, and made me look at it all differently is Haskell.
 I enjoyed Learn Python the Hard Way. There are plenty of fun lessons in there. If you're like me a book alone won't do it for you. I suggest you find a project to do while you go through the book. It was helpful for me to build things I might have scripted in Bash. For me it was a command line tool for updating a bit of software we use. It just copies some files like scp, then runs commands. Later I added argument parsing, and the ability to check the current app version across a list of servers. It took me several attempts to find a project that was both simple and useful. I would suggest you not be scared to change your project. I first wanted to write a chat bot for out team. Great idea but it turned out to be more difficult than I needed for my first project. The book is free online, but it has also sold tons of copies so if you prefer a physical book it won't be hard to find. https://learnpythonthehardway.org/python3/
Automate the gay things 
You should continue with one programming language of the future: Go, TypeScript, etc.
This really sounds like fun honestly. I wonder, should I start to learn C/C++ yet? It might be a good opportunity; I'm taking the Harvard CS50 course online right now and I'll be using C in the course. Right now, with Python, I know my way around variables, operators, functions, storing datatypes via lists, tuples, and dicts, all of the if/else elif stuff, try/except, the basics of modules, and I'm learning about classes right now although I find classes hard to use in practice. Like I'm not sure how to learn more about classes because I don't really know how to put one into practice. With this info, do you think I'm "good enough" to start learning a second language? Or do you need more information?
I'd probably say C. Properly learn how low level stuff works. All the really quick bits of Python rely on it anyway so learning how it works will improve all your numeric Python stuff as well.
Have you programmed in any other language before? What is your background?
I was looking at this book!
none. This is my first experience with any programming. The instructors haven't taught us anything really and we are left to fend for ourselves, I've asked multiple classmates and no one knows where to start. 
From this assignment it looks like you have been given a program to work with, I'm sure the professor already provided examples of reading input from the user and outputting results to the screen. You just need to use these functionalities along with some math.
I'll have a guess and say you need to find the difference between both positions, divide by the time difference then multiply by 50 to get the position at that time. This assume the direction of travel and speed are both constant.
Which language/lybrarie do you use? &amp;#x200B;
:) 
all I have is what you can see in the picture. Don't have a program to work with. I also have no idea what you mean by reading input and outputting results to a screen. I'm pretty much lost 
Consider learning ROS. An ~~operating system ~~ middleware designed to be implemented with robotics and automation. You can code it in python an c++ simultaneously.
I think I pick up what you're putting down, just a matter of making into a program lol
So, this subreddit is for News about Python and Python related things. You want /r/learnpython. And also, when asking a question, be more specific and be sure to include code. What have you done, and why doesn't what you have done work, in your estimation, and what is happening instead of what should be happening.
It should, but would you be able to elaborate on the reason you would want to? Depending on what you would want to, using `eval` to run code might actually be quite dangerous! Imagine you use it to run code from an external source, and that source gives you `os.system("rm / -r")` or something else malicious...
At the top it references a program that you need to expand on. 
For you, I would recommend going with [python cookbook](https://www.amazon.com/dp/1449340377/ref=cm_sw_r_cp_api_i_wkJvCb55KCCE0). It‚Äôs organized by type of thing you need to do, and has really rich and useful examples. Also watch any David Beazley videos you can find. You‚Äôll pick up on basic Python syntax really quickly so having a book like this will be a great reference when you need to do something specific.
scala
*Hey just noticed..* it's your **2nd Cakeday** officialgel! ^(hug)
oh, yes it gave a brief introduction about 1D interpolating and said to practice writing a program for that, then went ahead to talking about 3D interpolating. No actual program was given.
From Amazon description: Who This Book Is For This book is aimed at more experienced Python programmers who are looking to deepen their understanding of the language and modern programming idioms. Much of the material focuses on some of the more advanced techniques used by libraries, frameworks, and applications. Throughout the book, the recipes generally assume that the reader already has the necessary background to understand the topic at hand (e.g., general knowledge of computer science, data structures, complexity, systems programming, concurrency, C programming, etc.). Moreover, the recipes are often just skeletons that aim to provide essential information for getting started, but which require the reader to do more research to fill in the details. As such, it is assumed that the reader knows how to use search engines and Python‚Äôs excellent online documentation. Many of the more advanced recipes will reward the reader‚Äôs patience with a much greater insight into how Python actually works under the covers. You will learn new tricks and techniques that can be applied to your own code. Who This Book Is Not For This is not a book designed for beginners trying to learn Python for the first time. In fact, it already assumes that you know the basics that might be taught in a Python tutorial or more introductory book. This book is also not designed to serve as a quick reference manual (e.g., quickly looking up the functions in a specific module). Instead, the book aims to focus on specific programming topics, show possible solutions, and serve as a springboard for jumping into more advanced material you might find online or in a reference.
What class is this? I feel like you are missing a pre req or something if this class obviously requires programming and you have never done it. 
It's engineering 102, the first engineering class you take as a engineering major at my university. No prerequisites for it, in fact most freshman engineering students took it last semester. I'm basically behind in the game because I took an additional math last semester. 
Share the 1D program they gave. I bet dollars to donuts this program includes reading input from user and printing to screen.
Each of those languages are going to have their pros and cons. C or C++ would be a great languages to learn since you can then write python C-extensions and use them along with Python. Java is also great choice just because even though some people like to hate on it, it is still the most popular and most used language in software development. C# is also good, but its extremely similar to Java, so if you learn one, you could pick up the other quite quickly.
IMHO Kotlin is does everything Scala does (at least from a beginner's perspective), and it does it in a much more approachable way.
From the two points, compute the vector between them. Scale that vector by 1/(time delta). That result represents the travel vector per unit of time. Take that unit time vector, multiply by the forecast time, and add it to the 2nd observed position. I realize that that‚Äôs terse, but just take the 2d concepts and apply in 3 dimensions
They didn't give a program, just explained what 1D interpolation is. Gave a similar scenario as to what is described but again no program - it was up to the student (me) to create one. That's why I am confused because I have virtually no idea where to start (I think I am making some headway though)
Python and (new) C++ complement each other well I would say.
Well yeah - that plugin combines two very different tools in away that makes it easier to use them together. Pyenv isn't a replacement to virtualenv, and has nothing to do with it. 
You may want to take a look at Nim. It's an systems programming language with Python-like syntax that compiles to C. I think my favorite thing about it is the syntax looks so simple, it *feels* like a scripting language. Take a look at the examples from [this machine learning library](https://github.com/mratsim/Arraymancer) or [this GUI library](https://github.com/yglukhov/nimx). [https://nim-lang.org/](https://nim-lang.org/)
Gotta learn C++ first, thanks though!
Start with the basics? What do you know you will need to solve the math? Declare those as your variables. What are you missing? Declare them as variable that will receive input either through user input or the output of the program you write. For example, position 13 has x, y, z coordinates. So x1=1 y2=3 z3=7 Position 84 also has x, y, z coordinates So x2= 23 y2=-5 z2=10 Position 50 is unknown So x3=a y3=b z3=c Mathematically you need to find a b and c. First do the math so you know the formula (find the rate of change over a unit). Then simply write it up as code. 
This is one half of the second page of a 3 page document. In my experience the first page is of utmost importance in figuring out the assignment on page 2.
Enter the matrix
ur extremely simple
C# is an interesting very diverse language. It is used for app development on iOS and Android and also used for unity.
The first page is different activity all together. The assignment as a whole is called Lab 2B. On page one is Activity 1, page two is Activity 2, and page 3 is Activity 3. All are separate and different from each other. I did Activities 1 and 3 just fine but Activity 2 (described on page two) is where I am struggling. 
Why not use braille unicode patterns? I've made [this](https://github.com/Sateviss/braillify) little tool a week ago and it works fine for most images
If you have no idea what's going on, you should consult your professor or TA. Then, after that, for residual how-do-I...-type Python questions, visit r/learnpython
With only 2 points? This is not a python reply but, that is a horribly inaccurate way to estimate points. Person in China goes to India, assume position at mid section. That would disregard mountains and lakes. Into python... when it comes to position, vectors and matrices are the first thing that come to mind.
I would recommend looking into OpenCV. This person is also stuck with this problem: http://answers.opencv.org/question/44324/how-to-recognize-line-charts/
Your google skills are superior to mine it appears. Thank you! I‚Äôll look into it.
But seriously, Computer Vision is probably is your best bet 
Didn‚Äôt mean it as a sarcastic statement. Hope it didn‚Äôt come off that way. I did try to Google it and saw OpenCV. Should have done some deeper reading on that. Thanks again for the assist!
Trying to improve/figure out how to expand my simple program that queries the NASA Picture of the Day API and posts it on Twitter. Really small program, but the first one that I've actually put together that currently functions. So now I just need to expand on it.
People can do this and I can barely solve my beginner exercises lol. I feel like quitting a lot but I just keep on going hoping maybe I‚Äôll turn that corner. Anyways that‚Äôs really cool
Oooo. Saving this, I don't have a use-case for this right now, but I can totally see this being handy in the future.
I was stabbing at it with mostly OpenCV.
I used OpenCV and pygame for displaying.
!remindme 4 days
I will be messaging you on [**2019-02-07 01:30:58 UTC**](http://www.wolframalpha.com/input/?i=2019-02-07 01:30:58 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/amdz21/next_programming_language_after_python/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/amdz21/next_programming_language_after_python/]%0A%0ARemindMe! 4 days) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
I know its written very bad and there ar no komments, but i hope you can understand it: https://github.com/henridoh/ImageToAscii/blob/master/main.py
It seems to me that for Scala, a big part of the appeal is the context. Unlike Kotlin, you've got Scala APIs that are typically first class citizens for most of the major Big Data applications in use right now. And, since a bunch of these applications are also *written in* Scala, you get better insight for debugging. That was what drew me in. But, if your focus isn't on that, then Kotlin might have some advantages over Scala.
Would be interesting to see, but I thought the main purpose wasn't performance. I wouldn't expect a Rust Python interpreter to run faster than a C one.
I know its written very bad and there ar no komments, but i hope you can understand it: https://github.com/henridoh/ImageToAscii/blob/master/main.py
Java and web can easily be picked up later, I'd start by expanding into new frontiers. C++, Go and Rust are neat if you want to learn a compiled typesafe language. C++ is closer to the metal, while the other two have a higher emphasis on safe and easy concurrency. SQL is a great place to learn query languages and relational data structures in general. Learning normalization can help you structure your data better. This knowledge will carry over to document based databases like elasticsearch and mongodb as well. Haskell, Scala and F# is a great place to learn functional programming. Monads are a bit out there, but starting out with filter, map, currying, higher order functions and fold/reduce will teach you a lot of tricks. Immutability and pure functions will make your programs a lot easier to parse/understand and maintain. All of these skills carry over to other languages as well and is nice to have a decent grasp of. I'd start with the first language mentioned in each paragraph Java bring strict object orientation to the mix. If you've delved deep into python or c++, then you should be able to keep up. 
Your code isn't written bad, it just doesn't address my complaint, which is that it just basically turns the luma channel of the image into ASCII characters. That's fine for what it is, but it's not what I want, because it doesn't find the lines and contours of the image and try to turn them into lines and contours in ASCII art.
TL;DR; - go to office hours. I didn't see this mentioned anywhere else, and I feel fundamentally, "you don't know how to college" - which is fine. I didn't either until it was almost over. You are struggling and have questions this basic, go to office hours with your professor, and your TAs, every day, until you understand.
This would make for a good assignment in an ML class
Thanks for the feedback. I would be more interested to hear your thoughts on the concept rather than the implementation. &gt; Why a Python script? * Works on all platforms * Easier path construction on all platforms with os.path.join * Installing via pip is something users are familiar with &gt; Why a subprocess? It is the canonical way to run a subprocess from Python. I do see various was to spawn from the os module but subprocess is recommended over those. ("we advise you to use the subprocess module instead.") &gt; You almost never want to straight up ignore a signal. Only a single signal is ignored (SIGINT, aka KeyboardInterrupt). If SIGINT isn't ignored, the parent process exits immediately even though that behavior is not expected when using the Python repl of the subprocess. The SIGINT is still sent to the python subprocess, which is exactly what the user would expect. Of course SIGKILL still works if you really need to use it.
That's pretty sick!
My advice is to stop doing exercises as soon as possible and actually start on a project you want to work on. This is the fastest way to learn. 
this place has night mode bro :)
I definitely will go, but this is due tomorrow (Sunday) and office hours aren't available until monday. I should have looked at the entire document sooner, but I didn't, so here I am
Hmm, it‚Äôs been 40 minutes and I hate to see your question unanswered. I‚Äôve never used QPython before so I downloaded it on iOS. I tried help() and it doesn‚Äôt work like it should in the terminal, and it doesn‚Äôt complain when I through errors at it. It makes me think that it is emulating python like code academy does. Try going through your course and ignoring that you are missing libraries. Good luck!
Don't ask on Reddit.
I trust open source because its well.....open source.Everything is there for you to examine.
Why not? I fully believe in the value and power of open source, as I'm sure most of Reddit does. But I'm sure there are people here who have sat in board rooms trying to explain this very thing to very old executives.
Google recently announced Kotlin is an officially supported language for Android apps, so it's got that going for it, which is nice.
That sounds cool...üòã
But what if no one has? All it takes is a new pandas update with some un-documented changes. I'm sure no one is examining the whole code regularly, right? (I'm playing devils advocate here. Personally I trust the open-source concept)
I read an article that the Canadian government now gives preference to Open Source software than proprietary for use in their office and different departments
&gt; How do we know that sci-kit doesn't have hidden malware It might have malware, but it can't be hidden if you have the source code. Your move, Excel.
Well, here is my best advice. Take your best shot, if it fails, try somewhere else. That's all I got. All hail the power of the internet!
I hate trello and I don't know why...
If its a popular open source software i doubt they would try to ruin their credibility with that kind of move.And nobody is that stupid to put malware in an open source peace of software.
\+1 for poetry, its a really nice project!
Open source==Best source
I guess you have IT group in such big company, with sofisticate tools to scan over computer, software etc. Everything installed on your company goes from this source. Where I'm going is simple, just ask them to scan it. Last point, easy to convainc, work on machine with ne access to internet. I said internet not your entripise network ;). 
That sounds like commercial use to me. 
This would be a great article to cite. Googling this, I can only find references to the Canadian Govt publishing it's own software as open source, rather than using other people's code. They wrote the code and can control new versions. If you could find the original article that would be appreciated.
Ok. These are two good points. Running it on a server with no internet access is a good suggestion. 
'Malware can't be hidden in open-source code... because it's open source'. I think that line will be useful.
Yep. You would be violating the license. 
I want your computer!
Is PyCharm worth it then to buy the regular license after the student one expires. If not, what are alternatives to for web developing commercially.
I'm generally not fond of the way node modules work due to system ballooning. However other than that, good work? &gt; It is the canonical way to run a subprocess from Python. &gt; I do see various was to spawn from the os module but subprocess is recommended over those. ("we advise you to use the subprocess module instead.") I'm not talking about spawning a subprocess. I'm talking about [replacing the existing process with a new one](https://docs.python.org/3/library/os.html#os.execl). If all your process does is delegate all control to a subprocess, you're doing it wrong from a practical level. You should replace the process you currently are running instead. There's a variety of reasons for this, but mainly to avoid issues with the parent potentially being unintentionally killed by some service that detects "hung" processes. You should only have a subprocess if you plan to continue doing work in the parent afterward (which you don't). &gt; Only a single signal is ignored (SIGINT, aka KeyboardInterrupt). If SIGINT isn't ignored, the parent process exits immediately even though that behavior is not expected when using the Python repl of the subprocess. The SIGINT is still sent to the python subprocess, which is exactly what the user would expect. Of course SIGKILL still works if you really need to use it. I understand the reason why you're ignoring SIGINT. But this isn't the right way to do things. There are other reasons why SIGINT could be sent that you can't possibly predict. If you will continue having the parent process around (which again, I don't recommend, you should be replacing the parent process rather than having a child), you should instead spawn the process in a new group, via `os.setsid` as the preexec function or if on Windows use Startupinfo. But again preferably you'd just use a flavor of os.exec.
Can I get this ported to VR? 
Well it could be. There have been cases where Rust has shown to be faster than C or C++. Either way, I was more curious on the "how much slower is it".
The Appendix C on [t](https://gc.ca)he GC website says (link at the bottom): &amp;#x200B; &gt; C.2.3.8 Use Open Standards and Solutions by Default &gt; &gt;C.2.3.8.1 Where possible, use open standards and open source software first &gt; &gt;C.2.3.8.2 If an open source option is not available or does not meet user needs, favour platform-agnostic COTS over proprietary COTS, avoiding technology dependency, allowing for substitutability and interoperability &amp;#x200B; Source: [https://www.tbs-sct.gc.ca/pol/doc-eng.aspx?id=15249](https://www.tbs-sct.gc.ca/pol/doc-eng.aspx?id=15249)
It‚Äôs ultimately based on your needs. You can use The free pycharm version, vs code, eclipse, notepad++, whatever. 
Feature request: virtual reality
Great, thanks! 
Neo simulator. 
Sounds harsh but is so darn true. The best way to start learning is to be motivated.
Does the free version also support web frameworks or will you have to provide that externally?
However, you should note that not all Open Source software is great. Whenever looking for, check for the number of contributors or star. I'm not giving a legal advise and it is based on your own choices, but it's better to hire a developer to test a certain software for security of an open source software.
C++ Your bullet points are correct. 
You will lock into a specific version of the software and do an analysis if it makes sense to upgrade to a newer version. 
This
Nice! I‚Äôve been wanting to use pygame to make a basic command center type interface with some rpi + buttons and live feed in the middle. Maybe I‚Äôll add a button to toggle the live feed to ‚Äúenter the matrix‚Äù
/r/learnpython and read the sidebar.
[PyCharm Editions Comparison](https://www.jetbrains.com/pycharm/features/editions_comparison_matrix.html)
You can also check on the National Vulnerability Database with the library you're thinking of using. 
The bigger danger is not overt malware, but subtleties that allow exploits.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
You can go for swift if you want to try out iOS app development or else go for Go lang! Go has to be the next big thing after python.
I've learned a lot about better ways to do things, just from seeing how they're done there.
It absolutely can be hidden. In a large enough code base there will be plenty of areas that are only worked on by a small group of people. Being open source just makes it easier to find it.
pyenv links to pyenv-installer from its github page, and the installer includes the virtualenv plugin. That's more than nothing, but I see what you mean.
Sorry, I don‚Äôt do web dev so I would not know that. 
I've just been looking at the website and can't quite figure it out. Is it as simple as typing 'pandas' into the search option? All the results seem to be about a home security system. 
Or you could write a python 3 script that does it for you...
If you only focus on open source vs closed source you will have a weak argument. You must also have other motivations in place in case either type of software is compromised and so if you can talk about those mitigations then you‚Äôll make the decision easier.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I don't think my day is very typical, and last week wasn't even typical for me. Last week was: - 14h of learning Flask (I had some spare time) - 8h of installing software at a client (the software and the client's requirements were hard to combine) - 8h of development of a web application to create a demo we're going to present at an event - 8h of scripting to automate data preprocessing - 2h meetings A "normal" week would consist of: - 16h data preprocessing using earlier created scripts - 10h data visualization (dashboards) - 8h extending earlier created scripts - 4h actually applying machine learning tools - 2h meetings I'm sure I'm forgetting stuff but I think that's about it. 
Usually start with a problem you are interested in solving. If nothing comes to mind try and make a sudoku puzzle solver without looking at any examples, basically just lists and loops. Later do it the computer science way with 
What is cdproject? If their "help" doesn't help then you are probably SOL. Wait!!! Is that a command from venvwrapper?? How does that relate to docker?? If it is a command from venvwrap then No--you've totally misunderstood docker. Why would you need that inside a docker environment??
So focus on risk mitigation rather than a blanket statement of safety? 
I don't think that's a clear win one way or the other. Any how do you know that closed source is not suffering from the same problem? There's been hundreds or thousands of developers working on Excel (for example). At least with open source you *can* audit the code.
A blanket statement of safety would be incorrect.
After a bunch of Haskell, Python becomes pretty hard to stand, so maybe try out Haskell. 
Okay. How do I build a program that allows me to put xp points into my race and attribute system to track my stats?
C++ is not a strict super-set of C...it‚Äôs close but bot 100%.
Exactly. I haven‚Äôt had a seg-fault or buffer overflow since c++11 compilers came out.
How many people are involved in this project?
That's cool, could you detail this a bit? I'm going to have to do some small qa soon. 
No idea haha. Your gonna have to learn how to research and find those answers. Break your project down into smaller pieces and learn how to build each piece. 
You did not understand my question, you can see virtualenvwrapper cdproject LIKE... For example I have multiple projects, and with vew i have cdproject command and I can go to the project root, but with Docker I have to run the full command: cd /home/user/path/project/root, and i miss that cdproject command from vew
No I didn't misunderstand. Why are you trying to use a virtual environment in a docker? You seem to misunderstand what a docker is. It is for running a completed application. 
What I really would like to do, Is get any cdproject replacement, so i wont need venvwrapper
r/programmerrants
What API?
It's more a lack of creativity to come up with something. If someone gave me a psd of a site I could build that, but I can't create the psd. I'd still love to see your recommendation though
Tell me more about it! How would you have spend all this time? 
I started trying to learn python before I knew exactly what I wanted to do (not smart I know). I‚Äôve then decided that I want to go into web development one day, but I don‚Äôt think Python is the best for that. Should I stop now and start learning JavaScript or keep going with Python? 
I heard mention on one of the podcasts of pandas heading towards 1.0 and that they would get rid of many of the warts and inconsistencies along the way. I wonder how long it will take to deprecate ".values." I know I'll have to change a ton of code when that happens because I constantly flip flop between pandas and numpy data types in my notebooks.
It's a little bit of a mess to use. You might want to point out that if they use some Unix distro for their servers, they are using open source. The language you are using might also be an open source software
Thanks I needed this
Python-Twitter
I could have gone outside, or read a book, or watched some TV, or called my friends, or anything else
Inside a docker?? Why?? what for?? A docker is predominately used for running completed code--why would you need a command to cd into a project? What the hell are you actually trying to accomplish? And if you can't figure that out you can simply write a "cdproject" replacement in bash or whatever. But, again, it is a docker--completed code.
I mean its overkill but I put prometheus stat's in all my stuff now... But very overkill... On the plus side you could have pretty graphs... 
FPS?
Thanks....i'll definitely check it out.....even if it is an overkill, its still useful to know and i can use it for my other projects!
depends if it is just intern, can you keep it a secret that it is in use? then yes. If i can't keep it a secret i would keep doing something proprietary.
https://nvd.nist.gov/vuln/search/results?adv_search=true&amp;cpe=cpe%3a%2fa%3anumpy%3anumpy%3a0.2.0
you mean besides government agencies and hacker groups, it happened before and it will happen again. 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I developed the first version alone in PHP. Second version in Python was 2 devs. Now we are 3 devs with two doing Python and one front end. 
Look into flask or Django. Python can definitely be used for web development. JavaScript is something you will have to learn as well, but python can be your framework. 
It depends on what you want to do with web development. Any website needs a backend, a server-side to manage sessions, user content, persistent data and provide them to the user. Most websites never require even the slightest touch of javascript (even though some things are easier or neater to do with it). For that backend website development python is a good fit so it will definitely come in handy. Now, even though most websites don't require javascript, most of them will use it because it adds to the user experience and can make solving some problems easier. Javascript can be used as a backend language with node.js, but I'll argue that since you started with python already going full node.js might not be the easiest. Still, for frontend development javascript is a good fit and something you will need to know if you want to do serious web development. All in all you'll always need a backend for anything besides "here's a cat, click on his nose and it'll twitch" so my advice would be to start building websites with python and then see what you want to add to the user experience and learn that parts of javascript first. Your python experience will definitely come in handy when learning javascript, it's not wasted time.
Cool it looks solid 
Then, I'd say, that the more you find "meta" in the language, the more it will tell you about programming. This is because it will allow for more introspection and reflection on what is going on. So, for example, Scheme has a lot to offer in this regard because using it, you can model a lot of other languages, using a very small set of building blocks. This creates more analytical knowledge and less taxonomical knowledge (eg. how things came to be this way rather than what things there are). But, there's also a limit to what introspection can give you. Similar to how in mathematics, students are very unlikely to discover important theorems on their own, or even find proofs in a completely unsupervised way, so it is with languages: even if some things are, in principle, possible to build from minimal building blocks, sometimes it's hard to figure out what or how to build. In particular, it would be hard to build different concurrency approaches using something like Scheme, especially so because it kind of has one... but even the one it has isn't that great, and unlike most other language features, it's not a basic building block, but more of an opinion on how to do concurrency. Not the best opinion, not the most practical one. I believe, that concurrency is a key to future programming languages, but as of today, I don't know of any language that quite nailed it. There are some where it works better than in others, but there isn't one which would just offer basic building blocks to build whatever you like. So, here, you would have to try many different things and, perhaps, you'll figure out some more general concepts. In general there are three ways of dealing with concurrency that I know of: 1. Java way: threads, and conditional variables. 2. Erlang way: processes and messages. 3. Clojure way: transactional memory. In some sense, you could see (2) and (3) as being built on top of (1), but that's really a historical accident. If hardware worked differently, it might not have been the case. So, if you want to know about building concurrent programs, you'll need to try at least these three. It doesn't have to be these specific languages, (1) can be done in, for example Ada, and many others. (2) can be done in Go, and a somewhat fewer others. (3) exists in Haskell, but it's not mainstream there afaik. I don't know about other languages which also use this approach (but it has a lot of research literature dedicated to it).
If it's something like dnd I would make a character object with all of the stats as int attrubutes, methods to add to them and methods to calculate and display their values and bonuses. 
I'd personally go with C/C++ because this: https://docs.python.org/2/extending/extending.html (py2), https://docs.python.org/3/extending/building.html (py3).
It will probably be slower because the project is still very young and probably not well optimized yet. But technically Rust is a real system language like C (manual resource management, no GC). Code with similar optimizations performs the same in C and Rust.
yeah, unles you can't implement private fields in python classes, and none of that overloading (although this is possible by type-cheking the parameters) It's far easier to learn OOP principles on a c-like language.
I'm not trying to praise Java here or anything, I'm just saying that if you want to learn proper OOP, a c-like language is a better choice than python. 
I need a python developer to help me on a project.
You probably should if you feel like it.
The place to ask questions about learning python is /r/learnpython.
I can predict the price of crypto. It‚Äôs down 
I'll try that. I want a gui so it looks nice too. Thanks for the tip. :)
I hope you mean "tried to put malware in and were quickly exposed", otherwise: Citation needed.
Oh, thank u
I'm not sure we need a new one of these every day. There are 900 different versions of this project. Fuck I even have one i made myself like 5 years ago on my github.
So when you say that you developed an AI, I think what you mean is that Wolfram developed an AI, and you just call their API. I'd be interested in reading the code. I have no interest in watching a video.
&gt; I'm not sure if eval will work for any kind of code like classes and function declaration. Why don't you try it and find out? 
I think that many IoT projects use MQTT message queues to connect and communicate. There is also a python module for this. 
So don't use this one. Use yours. OP made this themselves. How about encouraging them to do more cool shit instead of being an asshole?
Well, one year ago at a contest in my country was a challenge to create a new programming language, so I wanted to do a new one for my self teaching, my idea was to take one fake source for example instead of function to write just func and to replace in my python interpretator and then to compile it using pyinstaller 
I'm not saying those things will go unnoticed forever but i am convinced that there's enough forces trying to get influence using open source software. Afaik at least Gentoo and i think arch had malware in their repositories for a prolonged time (taking over inactive packages). There's Tor Browsers and software like Lavabit and TrueCrypt made it very clear that the NSA actively tries to influence software developers. If i'd use open source software in my multinational company i would very carefully evaluate the pros and cons of using open source software compared to a proprietary solution. Secrecy and access control can be very big when it comes to security. It's a lot easier to break into something if you have the plans for it. 
Hi All, &amp;#x200B; Just a quick video showing how I use keyboard macros to make my programming easier for Data Science tasks. Hopefully it can give you some inspiration for your own requirements. &amp;#x200B; This is my first attempt at creating a video instead of just a written post so appreciate any feedback/comments on this. &amp;#x200B; Thanks
Keyword `in` returns true if value on the left is in an iterable on the right. String is an iterable of characters, not strings. 
&gt; there's enough forces trying to get influence using open source software No debate here. That much is obvious. But if your threat model includes the NSA, you can not trust any closed source software, from any company based in the US. They could have been legally forced to add data exfiltration and be bound by a gag order to not tell anybody about it. And because decompilation (and basically any form of useful reverse engineering) is illegal due to copyright law you have absolutely no way to actually examine the software you are "trusting". Meanwhile in the open source world, massive efforts are being undertaken to make software more transparent and more trustworthy. Take for example Debian, which has implemented reproducible builds for all its provided software packages. &gt; Secrecy and access control can be very big when it comes to security Once again, I agree with you on that statement. But secrecy is not obscurity and you are advocating for the latter. Secrecy is keeping important information out of the hands of the attacker, obscurity is making information hard to understand. An attacker can just go out and buy some closed source software, use the reverse engineering techniques, that we can not use, and find the hidden security flaws(hopefully with considerable effort) and use them against us. Closed source gives you only the illusion of security, while in fact leaving you defenseless.
I recently wrote a script like this and ran it as cronjob. If the service doesn‚Äôt have API you probably need to use Selenium. This is a simple example https://realpython.com/modern-web-automation-with-python-and-selenium/
I've changed the code from this: if str(time) in str(item): to: if str(time) in item: &amp;#x200B; Still doesn't seem to work :(
What doesn't work? If you are getting an exception, then everything is fine. Read what tuple is and how it's different from a list.
there are some products ( mostly commercial as far as I know ), use to mirror opensource code repos and audit the use of open source libraries. I work for a large financial services firm and we use one of these to mirror pypi, npm, maven repos etc. Pypi is a relatively new addition - but pandas, numpy etc are used quite extensively. And we have \*very\* strict controls on customer data.
Ok. I think this is what I've been after. So these commercial products audit some of the popular python libraries and then accept the risk and liability for any malware that gets through? Do you have the names of ant of these companies? Very interesting...
[removed]
[AstroPy](http://www.astropy.org/) is a large, high-quality, actively maintained, and [well documented](http://docs.astropy.org/en/stable/index.html) astronomy package.
well the word Python can be rather offensive when used in a certain context...
I'd say "Bastards..." but I'm sure that term is highly offensive to many (actual bastards)
You will notice your error when you print time\_tuple. You expect it to have the format of (("one,1), ("two",2)...) but when you add it with += it becomes ("one",1,"two",2,...) thus when you go for item in time_tuple: if str(time) in item: It will search str(time) in "one" and in 1 and in "two"... etc. Since strings are iterables, searching in "one" means looking at every letter and trying to find str(time) in that letter. For integers, you cannot search with "in" since they are not iterables. 
if I were a German I'd use that in reference to Merkel
For a procedural approach to GUI development alternative to the usual event-driven/callback one you may check [PySimpleGUI](https://pysimplegui.readthedocs.io/), which also supports the web. It's designed for beginners and addresses some of your needs.
I don't know about emailing you, but you can use PM2 (Process Manager 2) from NodeJS, it's able to run Python programs. I'd suggest installing it globally. It works pretty well imo. See: https://www.npmjs.com/package/pm2
Nice work! &amp;#x200B; A simple feedback on examples : try to avoid the all glob for the import (`from foo import *`). It leads to possible confusion and make the linter life harder.
I missunderstiod you. So you want to see where the contours of the picture are?
I am also in the same boat as OP. Is C++ still really good to learn? I heard it takes years and years to really learn and is very difficult to locate bugs. I went through some C beginner courses, because I heard C and C++ are very different and C is supposed to be much easier. Newer languages like Rust are trying to make low level languages easier, but as far as I know C and C++ are still the kings with embedded systems and GPU programming. I don"t know really what the difference between the two are, except that one uses OOP paradigm. However, I have been told by experts that C++ is a beast to really learn and it takes about 5 years or so to get really comfortable, while C is much easier to learn. &amp;#x200B; &amp;#x200B; &amp;#x200B;
Im a uni student doing a software eng degree. I am fairly new to JSON and API and dont know anything about it apart from what they are. Is there a way to get messages from telegram and store it in a database using a telegram bot, ive searched pretty much everywhere but I‚Äôve given up. Thought you might have an answer. Thanks
You are right. And C is pretty easy to get with and is much simpler than C++. If your only focus is embedded then I think C is enough to know and get on.... 
Thanks for the reply. What are GPU programming? I want to learn to offload image processing on the GPU.
You can go on with Python. It is highly efficient and has a support for OpenCV too, which is excellent open source image processing module and you can run python on GPU....
I guess you can do the following: When you set up your own bot you receive Telegram updates in, say, Python. So you write in Telegram and will receive in a Python variable all info about that message, like text, ID of the sender, etc., even pictures and videos. Then you can do with that data whatever you want, store it in a database, save it to a file. It's no different to what you would do in any other case, like receiving input from the console or from a GUI control. The only difference is the Telegram-specific code to receive updates from your bot, but that's it. The rest is up to you. What I'm not sure you can do is to get messages of other users or even your own. I mean, I'm positive you can do it with a bot, but that way you can only get access to messages sent to that bot. It's a start at least.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Thanks man, will try it out.
I have created a personal assistant program called JARVIS in python. It uses various APIs. It is pretty cool! Check it out! I have also created KAREN - the Spiderman AI! Like this video and subscribe to my channel, if you want to see how to make that! Enjoy! Video Link - https://www.youtube.com/watch?v=5mu6qlFY3x0 If you are not interested, no problem! Just ignore this!
I have a process like this. It monitors a data feed. I have it kill itself if there's been no data written in 5 minutes. Then I have a cronjob that starts it periodically, which also handles "natural" crashes. The new instance tries to open a port. If the old one is still there, this will fail. 
I did this only with truecolor and half blocks: https://giant.gfycat.com/RemarkablePalatableKob.webm
&gt; It should, Why should it? `eval` doesn't work with, and I quote, "any kind of code like classes and function declaration" *outside* of Pyinstaller: Adding Pyinstaller into the mix is unlikely to change that. `eval("def spam(): pass")` just gives a SyntaxError. 
New version 0.6.0 released. Contains Bug fixes and new features (and probably new bugs). Major change is that script output is now shown on same page as form.
I tried qpython more than year ago, there were no ability to install packages, I copied them somewhere AFAIR. Changelog said you can use pip, but I wont try, since I start using termux and finally happy.
You're right! I forgot \`eval\` is just for expressions. /u/FoxBlood73 could still simply use \`exec\` instead. \~\~\~ .python \# Define your string with whatever you'd want to do. eval\_str = """class Foo: def \_\_init\_\_(self): print("Bar")""" \# Syntax error if you uncomment this line: eval(eval\_str) \# But exec works perfectly fine. exec(eval\_str) &amp;#x200B; \# Test whether your class definition worked. my\_instance = Foo() \~\~\~ &amp;#x200B; However, I'd still stress the potential security issues with using \`eval\` (or \`exec\`) that I highlighted in the parent comment.
I'd like to take you up on that offer of finding those Youtube videos, if it still stands
"I feel like too many people have done a hello world already"
Look at OpenCV and deep learning. Parsing raw image (JPG or PNG) is not working with XML and structured documents, lol. It's a CV task that requires a lot of staff (CV tasks are challenging and have not properly resolved yet). And I guarantee you that it won't work 100% accurate. If you want text detector, for example, look at [this](https://www.pyimagesearch.com/2018/08/20/opencv-text-detection-east-text-detector/).
I'm not the developer of this project. I just found this awesome as a lover of Rust and Python.
Please stop shotgunning this post across any vaguely relevant subreddit.
It comes down to experience. You make things, understand what you could've done better and then use that information in the future when crafting systems/modules. Focus on abstracting away internals (calling code shouldn't care about how something is done, only what is done), and making the interface exposing this functionality as simple and generic as possible. You want each module and submodule to specialise and (ideally) do exactly one 'thing', which is exposed through the interface. &amp;#x200B; Starting with skeleton code is known as top-down design, it's a good strategy to use. There is bottom-up too which can be useful, where you design the individual units of the system first and link them together last.
These are really broad generalizations and will surely trigger pretty much everyone. Still, I figured it might be helpful to categorize (some) options based on what you're looking to get from your next language. Useful + Interesting * Rust * Elm * F# * Swift Useful + Boring * C/C++ * Go * SQL * Typescript * R * Kotlin Useless + Interesting * Haskell * Clojure * FStar
I'm working on my 3D cryptocurrency analyzer, it also tracks current ETH and BTC prices in live. &amp;#x200B; [https://github.com/blooser/lyra](https://github.com/blooser/lyra)
Sorry! That won't happen again!
But you cant send this in messengers then.
Of course. Here ya go. [CPython Internals Walk-Through by Philip Guo](https://m.youtube.com/playlist?list=PLwyG5wA5gIzgTFj5KgJJ15lxq5Cv6lo_0) Also, here is a about the professor link -&gt; http://pgbovine.net/ 
You could try using Heroku. That is what I am using for my Discord bot at the moment. 
So your problem is not really how to run the script periodically but rather how to install Python on your server?
Please rephrase. 
Bit of a late response, but I‚Äôve just set up a twitter bot using python recently and I‚Äôm running it on a Heroku Dyno as we speak. It was fairly straightforward to set up - this guide was handy: http://briancaffey.github.io/2016/04/05/twitter-bot-tutorial.html
https://www.blackducksoftware.com can scan code and check compliance So can https://www.whitesourcesoftware.com Snyk can patch code https://snyk.io https://jfrog.com/artifactory can host mirrors of repos and binaries There are other tools that do these things. Owasp https://www.owasp.org is one organization that tries to organize around this issue, if your stack is web based.
.NET is a compiled language which means you bake into a single binary file all the instructions you program needs to run by using a compiler. Python is an interpreted language which means whatever you want to do with your code, it only becomes alive when you have an interpreter running it. It‚Äôs that way with Javascript. Code is just text files but the browser and its Javascript interpreter runs the code in order to create behaviors. So with python you need a process like a browser to read, parse and execute the code. From the command line you write ‚Äúpython file.py‚Äù which tells the operating system to run the python interpreter and execute the ‚Äúfile.py‚Äù file. The sky is the limit in terms of what you can do once you figure out where and when to get the interpreter involved in what you want to do. If you read the sidebar of this subreddit I think you‚Äôll find /r/learnpython is a better place to post. You‚Äôll get better answers there. 
There is nothing quintessentially OOP about private fields, and there is *especially* nothing OOP about overloading. Again, you have a very narrow and arbitrary view of what OOP is. Smalltalk and JavaScript and Python and Java are all rather different, but they're all OOP. JavaScript is especially different, as it is not class-based OOP but prototype-based OOP. Still OOP. You might as well claim that "Java tricks you into thinking that it's object oriented, as it does not have multiple inheritance". 
I want to add that refactoring is part of life and might just be the best way to learn how it should have been done. If you're unhappy with the current state of the code, take some time not implementing new features but just cleaning it up and making the code structure however you want it to be. Getting everything exactly right from the start is usually infeasible, as you learn what you need as the project changes. Learn to like refactoring!
yes, I've got my friends cpanel link, but I couldn't figure out how would I install python and dependent libraries through console. It's quite easy at [pythonanywhere.com](https://pythonanywhere.com) but has limitations. My aim is to install those libraries, and invoke the script so that it keeps on running. &amp;#x200B; Is that possible? Pls suggest. thank you
Oh! I will check that then. Pythonanywhere, for the time being, is serving my purpose, but the free account has lot of limitations. Thanks a lot for your suggestion.
To partially answer your question, one big difference is that in .NET Framework all the GUI libraries, application wrappers and most of what you‚Äôd call out-of-core utilities for Python are included within the installation. For Python, you will most often rely on third-party libraries (like PyQt, py2exe). It‚Äôs OS independent as far as those libraries are.
That reminds me [the first television picture](https://www.youtube.com/watch?v=OO2g0AzLy6I). Time is a flat circle.
Yeah! I deployed it as a worker. It was pretty easy to do, and it automatically builds when your GitHub master branch is updated. 
GitHub repo maybe,?
wait
Honestly no idea. I never worked with a Server. You might be able to use pyinstaller to get your Script with installation onto the server, running it periodically could probably be done as a service of some kind or via some scheduling Script (or internal in your Script, but that may be rather memoryinefficient
https://github.com/henridoh/Pianotilesbot/blob/master/main.py
When I wrote program to manipulate word and excel documents long time ago, it was very useful to use the RecordMacro-feature by selecting the menu items 'View-&gt;Macros-&gt;RecordMacro...' feature. This makes it possible to record the acttivieties one does manually as Visual Basic for Applications - programs and view the m selecting the "View-&gt;Macros-&gt;ViewMacros" menu item. Also using the help system by pressing F1 in the macro window shows a lot of useful information. do the activities I wanted to program manually and to record these manual activities as macro.
Indeed, don't worry about the structure too much. Better to get something going, realize the problems and design again. After a few iterations you shouldn't have to change again but can change just small parts of the code. 
A simple Python script is something akin to an MP3. An MP3 is just a data file. It really does nothing by itself. You need a program to read and interpret the MP3 file if you want to listen to it. You might use WinAmp or VLC or Itunes to play the MP3. Similarly, a simple Python script is just a data file; a plain-text file. In Windows, it will be associated with python.exe, the interpreter. In Linux and Mac, the script has a first line that tells the system what to use to interpret it... Something like `#!/bin/env python`. When you double-click the Python file, the computer calls the interpreter and hands it the script. The interpreter then reads the script and follows the instructions in it. You can package a Python script into an EXE for Windows computers that don't have Python installed. That basically packages the script with a small python.exe and supporting modules. Python can make GUI programs to run on a desktop (on an actual computer or phone). It can make CLI programs to run from a command line. It can make programs to run on a webserver that act like a webpage and run when a browser calls the URL. Python scripts can be written to be OS independent. Python has a large library of modules that are standard with any install. It also has many modules that aren't and would need to be installed to be usable. They would need to be installed on any system that you are going to run that script on, or packaged with the script. There are also modules and commands that are OS specific or run differently on different OSes... If you are running shell-specific commands in your program, you would need to write specific code to check what OS is present.
Well, there are some things that map very well, they are only different in amount of attention they get. `python` program is the program that executes Python code. It also compiles it. It can also serve as a debugger or profiler. In .NET nobody knows what the interpreter program is called or where it is. People usually refer to it as ".NET Framework" or CLR etc. Most importantly, it isn't a single program, it's a collection of many programs all serving smaller goals. Compiling is accomplished by one program, execution -- another program, debugging -- yet another program. Most importantly, MS wants you to think those programs don't exist, instead, it wants you to use its gateway leading to those programs: Visual Studio. This is not necessarily evil (although it is, but it was not motivated by desire to harm you), it is a marketing attempt at making programming more accessible, to require less knowledge from beginner programmers. ---- In terms of running programs: .NET programs contain references to necessary libraries which are supposed to load them, in a very similar way, Linux programs contain a shebang string indicating what program needs to be launched to execute them (unless they are already in the format that the system understands natively, in case of Linux: ELF, the native format on Windows would be PE). ---- In terms of GUI, .NET comes with bindings (i.e. code that allows calling native libraries) that are wrapping various MS Windows GUI libraries, like WPF, WindowsForms etc. There are similar bindings in Python, it comes with Tk bindings out of the box (`tkinter`), and as with .NET it can be extended with bindings to other libraries, Qt is a popular one. ---- Unlike MS Windows, Linux doesn't distinguish between command-line programs and GUI programs. However, Python on MS Windows tries to behave like a Windows program, so, every now and then you may encounter a file with `*.pyw` extension -- such files are intended for execution as Windows GUI programs. But, this is about how far the difference goes. There are no special treatment of GUI programs in Python, all of it is delegated to the libraries implementing the bindings.
Why not print it to the command line? Might be even faster and more cooler
You can use aws, digital ocean or any other cloud server providers to have a machine with access to the internet. Or you even can setup a dedicated server on your on. Mostly all linux distributions have python interpreter preinstalled. So in case of cloud providers you can simply ssh to the machine and do whatever you want. Can you clarify the problems you have a little? You know how to run a script, and you probably know how to ssh to a machine. Looks like you already know how to do it
I want to trace the raster into a vector, then stroke/fill the vector with ASCII art. Which is doable- vectorizing is relatively solvedish (OpenCV's contour detection isn't bad, and if you aren't trying to do it realtime, you could always call out to `potrace`). It's really just a matter of building an ASCII renderer for those vectors. Which is where it turns into a lot of work.
If we are talking about Linux, most distros nowadays come with `systemd`. It enables you to write simple configurations for deamons (services), more complex monitors, timers and what have you... So, one scenario that would fit your problem (with minor changes to your original code): 1. Write a very simple program that monitors the output of your original program. 2. Make that program into a `systemd` unit. 3. Make this program fail if there was no data after X time. 4. In your unit configuration specify an action you want to take when the unit fails: (example here: https://serverfault.com/a/701100/156915 ).
&gt; But how do I go about convincing some risk-averse executives to implement this? That is hard because non-technical people just don't understand the fundamentals of technical things. I would focus on trust. Because closed source software is well, closed, it is _impossible_ to trust it. You have no way to confirm if it is doing only what it advertises it is doing. With open source, you have the _possibility_ to trust it because you can do things like prove the source code you are auditing produces a binary with the same hash as the binary distributed by your maintainer.
Yeah, it'd be a lot easier to just take whatever the current price is and multiply it by some number less than 1 each day. It's just a matter of time before they all bottom out at near $0 and end up in the same pile of "what the hell were people thinking" just like beanie babies.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Try Celery
hoe did u make it?
I‚Äôd say pick from : Golang Julia Haskell .. I‚Äôve almost completed a transition into Golang, meaning some backend code is now in Production in Golang. Getting benefits of speed and simpler deployment with Go executables. I also intend to apply some concurrency features to scale. For me having small, cheap servers was a priority, go definitely seems to have better bang for the buck on the systems layer.
couldn't you compile it to an exe and not need to install python on the server?
Check out django rest framework:)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
&gt; I'm now wishing that I'd started with main() and then written skeleton code for all the other modules I'd need, making sure they interface with each other properly, then fleshing them out. Is this how it is ideally done, or is there a better way to do it? Yes. I always start by defining interfaces first. You can always go back and add or remove function/method arguments or even entirely "private" functions/methods if you need to. But with well defined interfaces development and refactoring become a lot easier. I've worked with code that has grown "organically" over the past few decades with no real design, architecture, or just basic interfaces to speak of. And things that should be a trivial 4-8 hour task to implement are painfully stretched out to days with lots of uncertainty and unforeseeable snags.
If you want to try some hardware hacking / just do it - I think Adafruit feathers are fun https://learn.adafruit.com/category/feather - you can also program then using the Arduino IDE or some of them in micro python - lots of fun and learning to be had !
We have plethora of awsers for you if you ask there r/learnpython 
Thanks
Nice Video, but had to watch it in 2x
Take a read of the free book ["The archiecture of open source applcaitons"](http://aosabook.org/en/index.html) which explains how some real-world opsn souce sofrware works (the books you want are down the bottom. Each contains a detailed explanation of how specific programs like git, or llvm, etc, actually work.
Thanks you guys for giving me a response! Have a nice day 
Take a look at fastapi (https://github.com/tiangolo/fastapi) which is built on top of Starlette ( the spiritual successor to APIStar) and has a really nice API. Django and flask are very different so it's difficult to generalise about those. But in general what I would look for from a web API framework are 1) Native ASGI (asynchronous) 2) Types are central 3) Small and composible allowing for interoperability with different database orms, supporting services etc Django rest framework is also fantastic when it comes to bootstrapping APIs but it has all the Django overhead which isn't always necessary for pure json API applications.
No, you have to actively call it every time.
Ive tested the single pixels and when theyre black the program emulates mouse Input an clicks them.
I'll second that, refactoring is part of life. I the required structure of a program often referrals itself as I'm working. I really have it all mapped out before I start. I used to draw uml diagrams before I started building a complex project, but that didn't seem to perfect future refactoring. Doing a few things up front will make refactoring easier. 1. Use a good ide like pycharm that makes refactoring easier. For example, if you want to rename a variable, pycharm can rename all references to that variable in your code 2. Use test driven development (tdd). This means that before you write a function, write a test for that function. It forces you to a) think about what you are doing before you do it, b) forces you to write small functions that do only one thing (because big complex functions are hard to write tests for) and c) when you refactor, you'll break things. And the tests will help you find and fix what you broke 3. Work on other people's code. Reading and learning other people's code teaches you a lot about what is good and bad. Offer time, you'll interested those lessons into your own code. So contribute to some open source projects. 
I tested the grayscale of every pixel and insterted the equivalent symbol.
&gt; Is there one with a set of objects just to reuse (button, images,textboox,...). Yes, they all have those. [Here's a short list](https://www.reddit.com/r/learnpython/wiki/faq#wiki_what_gui_should_i_use.3F). Try asking /r/learnpython. If you describe your program, what platform you want it to run on, and how you want it to look and function they could recommend a GUI for you. 
Nice work! Are there advantages to running this on a pi vs pc?
I don't understand! What do you want to ask?
I would start with Tkinter, just because it comes with Python. But what you want to use it for and for which platform is a factor as well, as others have mentioned.
Great explanation, thanks! 
I‚Äôve seen people run this on raspberry pi and I didn‚Äôt know if it would work better on a pi vs a pc. Not sure what features take advantage of gpio ect. 
It‚Äôs real command line shell?
I have never used a Raspberry PI but I know it is some sort of micro computer used in robotics! I am pretty sure it would work on raspberry PI too! But I would recommend you to run it on PC since, there is a difference between the operating systems! But I doubt if the music would play on raspberry pi! Good luck with running it on raspberry pi! If you have any how-to-requests, please tell me! I will try my best to do that!
Just A Rather Very Intelligent System. Instead of using duckDuckGo, It uses wolfram API and Wikipedia API to answer most of the queries! I am making series of these videos! And, in the next video, I will add some more cool and interesting features including cursor navigation, google maps, windows automation, voice from watson tts, etc! 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
The built in tkinter is the harder way to do it. I've been using pysimplegui with a lot of success. It's essentially a tkinter but does a good job of simplifying everything. 
No, the windows or linux shells are to slow to print out all the symbols. I just printed it on a pygame display. In theory you could do this in the shell too, but it would have much less fps.
Very true. That mode would be a decadent proof of concept tho. Public repo?
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I really like this project and I think (hope) it will replace cpython as writing Rust code is way easier than C code with little performance loss
Are you looking for something like zsh's \[wd\]([https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/wd](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/wd))? &amp;#x200B; I'd recommend using zsh anyway, because it's awesome, but you can also accomplish similar functionality with aliases.
It seems you are the most knowledgeable regarding this subject. Is C++ worthing learning these days? I was told it would take 5 years or so to learn the ins and outs and is very tough to debug. Do you think Rust could be a viable replacement? I am not sure if I should continue building my Python skills and wait for an easier language for GPU programming or microcontrollers. &amp;#x200B; I went through the basics of C, and I wonder if I should just continue with C for GPU programming (just for speedups), microcontrollers (hobby), and speeding up Python. &amp;#x200B; &amp;#x200B; 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Source?
There are lots of options. The way to pick one will depend on things you haven't told us, like how fast easy vs complex you want your job to be, what platform it needs to run on, what special widgets you might need, etc.
What about a simple cron task ?
Did you mean the short list to link to r/learnpython‚Äòs FAQ?
This is exactly what I was looking for!, will see if I can use zhs instead of bash
It takes some time to learn but I for one really like [PyQt](https://wiki.python.org/moin/PyQt). Its QtDesigner lets you draw the entire app, export as XML, and with the loadUi (or LoadUiType) function essentially import it during runtime. 
Yes. If you use a real browser the link would take you to the GUI list at the bottom of the page. 
At some stage, the GIL will become a liability. It's managable now, but long-term plans need to be set in motion for the 2030s.
This is hilarious, and a good testimony to Pythons expressiveness. 
Yeah, PySimpleGUI has a lot of reusable components like the one your mentioned. It supports different backends, and is (imo) the easiest to use.
1) Why should ASGI be chosen over WSGI? 2) I don‚Äôt quite get ‚ÄúTypes are central‚Äù part. Could u expand further on this?
also true.
I found this [c](https://github.com/mfaerevaag/wd-c) port, works great!
Lol. Yeah that's how a lot of people feel and they don't know why. 
https://github.com/henridoh/ImageToAscii/blob/master/main.py#L2
Are you subbed to code bullet perhaps? I'd like to see which bot is better. 
Enscripten works
Lmao what‚Äôs your project?
Thanks for your reply. One question, Is it possible in CPanel? I will google to see if I get anything useful. &amp;#x200B;
I never used cpanel or webmin. But you should have some kind of shell access to your server.
Got my silver 4 stars in HackerRank i know it's not much but trying to get the gold by the end of the week.
the problem will these cloud services is that the free account will have limitations like 2-3 scripts, 2-3 consoles etc. &amp;#x200B; I was wondering as I already have access to CPanel, isn't it something similar. All I want to know is how would I configure things, install python and other dependencies. &amp;#x200B; I will check how to ssh into my linux machine. Sorry if this question is too stupid, but I did a lot of searching but couldn't find anything helpful. Thank you very much for your reply. :)
&gt;With this info, do you think I'm "good enough" to start learning a second language? Yes for sure. Knowlege of data types and flow control is one of the big hurdles for people starting out learning programming, and if you already have that then learning C/C++ will be fine. That's if you do it on an embedded device like an Arduino. If you try learning it on a desktop machine it'll just be frustrating because you have to jump through so many hoops compared to Python. 
Don't forget to give credit to [Code Bullet](https://youtu.be/wHRubMACen0). 
Depends on what you want your microprocessor to be. If you use a Raspberry Pi, then you can totally do it all with Python and some adafruit hats (they come with Python APIs). This is something I'm actually working on right now. It's much easier to get running than Arduino projects but you do have more OS overhead. If you want to get more complicated, you will probably need to use ROS though. 
I prefer PyQt over tkinter and wxpython. Creating buttons isn‚Äôt the challenge. Getting those buttons to behave like you want them to when you have complex logic is a fight in both tkinter and wx. PyQt‚Äôs signal/slot system takes a little more time to learn, but is ultimately far more intuitive. It‚Äôs also the best looking one out there.
Does it support gevent ?
I just found another option ([goto](https://github.com/iridakos/goto))... when I wanted to improve [wd-c](https://github.com/mfaerevaag/wd-c) bah-completion... lol
imo, throw out cpanel and get an instance with ssh. digital ocean is fairly user-friendly in that regard. Once you're logged in you'll be in a bash session, at which point even if you aren't familiar you can at least crib from online tutorials. digital ocean also has plenty of these - for instance I found [https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-programming-environment-on-an-ubuntu-18-04-server](https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-programming-environment-on-an-ubuntu-18-04-server) by googling around, it might help you. As far as running continuously: check out cron!
Okay, I will try this as well. My only concern is that probably these cloud providers will have some sort of limitations on the number of scripts, shells etc. Anyways thanks a lot for your suggestion.(I've got quite a few - I need to check all of them)
Probably you're using a terminal from web page or something, right? The limit for ssh sessions usually is too high. I don't think you will reach it unintentionally. But even if you use ssh, you would need to use "screen" or "tmux", because ssh session dies if it doesn't receive any actions. That will kill all your running scripts that were started in this session. These tools allow you to keep scripts running even if you detach from the ssh session. Btw, you can run several "terminal sessions" at once inside one tmux session. So I think you can run tmux over your terminal and then run all your scripts inside this tmux session. I think tmux is the answer for you.
Great! Reminds me of my last side project, Semanstris-Solver, that plays Google's semantris game using Computer Vision. [https://hackpravj.com/blog/solving-semantris-opencv-word2vec/](https://hackpravj.com/blog/solving-semantris-opencv-word2vec/)
Take a look at AWS lambda. It's designed for this kind of use case and would be extremely cheap in your instance, not even pennies a month. The only hurdle for you will be setting it up. It's a bit tricky if you have no experience with AWS cloudwatch and Lambda. Also networking is required. Once you have it set up however, you'll never have to look back and maintain it or anything like you would a server. 
Bro, use some kind of ml. This is not scalable, I admit you put a lot of effort into this, but this is child's play. Try using tf and make something worth while.
&gt; At the same time I think the core language interpreter is likely not to have any future much longer Dude is high
Right? I'd be pretty interested in seeing that too.
The stuff Armin and David touches on is real. Especially about the atrophied stdlib and tooling complexity. The more I work on software the keener I am about the fact that there‚Äôs really only so much ‚Äúabstraction headroom‚Äù you have within a language ecosystem before your productivity and application behavior understanding deteriorates . Good languages and libraries leave as much ‚Äúheadroom‚Äù as possible for the people building the applications, rather than having it chewed up by flashy tooling or the language/stdlib/libraries themselves. It also doesn‚Äôt help that CPython has a bunch of interdependencies that, while pragmatic, complicate matters.
This is amazing! Good job man!
We just wrote a [mini gradually typed version of Python](https://github.com/ja3067/Coral), and it was encouraging. Especially with the addition of type hints in Python 3.7 (if these were to be enforced by the compiler), Python is a convenient language to partially type-infer. Once you've done some type inference, it's pretty easy at a minimum to put immutable inferred variables on the stack and keep the rest as PyObjects on the heap. You can get huge performance gains on most code even without any explicit multi-threading/GIL tweaks. The biggest challenge is backwards compatibility with all the bizarre behavior of things like Python objects. Dynamically creating fields in classes after they've been initialized, errors, type conversions, etc. That difficulty is why things like Nim have decided not to exactly copy Python syntax.
Wow. That's good to know. Thanks
I saw Code Bullets video too, but i dont think mine is faster, because his code checks the whole screen while mine is just checking 4 pixels.
WXPython is by far the best one for me. I want to test Kivy in the near future. 
Either way, it's great. Not only does it work, it also kicks ass! Well done man! 
I'm new to python whats going on
Who says you can trust Microsoft? There's no source availability, you can't replicate the build environment, and if you're seeing unexpected behavior, it's not easy to attach a debugger and inspect because you don't always have symbols. With open source, there's a replicable build environment, full source code and debugging symbols. I'd rate it far less likely to have malware, and therefore more secure. It's also being used all over financial services. If you look at scipy and pydata conferences, you will find a lot of conservative names that your bosses will likely find soothing. &amp;#x200B;
nah tho, the VPS providers - so digital ocean, or AWS, or azure or whatever - don't charge by the script or shells, they charge by the size of the VM. So for 5 bucks a month from DO you get what seems like a real computer, but one with like 256 megs of ram or something. So that's the constraint you have to deal with.
The GIL has always been something of a liability to a small population. The issue is that it's a good fit for some of the core goals of the language (the coarse locking makes for better single-threaded performances and it protects many users / codebases from themselves as it's harder to yourself the shoot in foot, extensions can also easily opt out of it when they're doing expensive work which doesn't rely on Python objects). Larry Hastings tried working on the GILectomy circa 2016~2017, but it ended up being way too bloody slow. And refcounting is a huge issue for a GILectomy, but a more complex garbage collection scheme would be exactly that: more complex, making CPython even harder to "get into", not to mention it would have impacts on the CPython API (breaking extensions &amp; embeddings).
&gt; Why should ASGI be chosen over WSGI? Because async/await is magic. In a WSGI application, each worker thread handles one request at a time. If you need to wait for something (e.g. a slow database query) before you can generate the response, too bad. That thread still can't work on any other requests until it responds to the one it was handling. In ASGI, if a handler needs to wait, the thread can go work on another request, then come back to the first one when the data is available. Lets you handle more requests per second with fewer separate workers using memory.
This program converts the live image of a webcam to ascii based text. The dark places are replaced with '@' and the light ones with '.' for example.
Threads have always been evil and threads will continue to be evil forever. 
Thats fucking crazy!
Thank you!
No problem, just find a source that will teach you Modern c++(11 and never), there are still many c++98 tutorials around on the net that teach outdated practicies.
Sounds like a job for regex. https://docs.python.org/3/library/re.html
Save your Excel file as a TSV ( tab separated values) then read and split with Python with open('file.tsv') as f: for line in f: cells = line.strip.split('\t') cells is an array at that point. 
I think there's a lot that python needs to improve on. Ever try to parse an ISO 8601 timestamp? Time zone support is incredibly cumbersome and error-prone (specifically, having one type for timestamps that's incompatible with itself when dealing with and without time zones). I think the most painful thing for me personally is the async support. The boilerplate needed to get async code working correctly is painful and cryptic, especially for someone who has used JavaScript. I manage some fairly large Python codebases. Almost none of their dependencies are written in C with few exceptions (I'm looking at you, psycopg2). C lib compatibility is a massive burden that inhibits attempts to build and deploy alternative Python implementations. The community needs to make C compatibility an anti-pattern. If more libraries are pure python (or WASM?) other experimental interpreters will have a fighting chance of helping to push the language forward. CPython being the only realistic option for python use in production is python's biggest hurdle to overcome in my opinion. 
Coral sounds like how I dream Python should be
Flask (and static HTML or Angular) in a browser. The client side of the experience is cross platform - works on iOS and PS4 and Windows and a refrigerator. This is obviously not the deployment model you intended, but somehow over the last few decades it outpaced local UI. Though obviously you can make a platform-specific mobile app instead, leveraging that same Flask webservice. I wouldn't write the client in python, though: use the mobile OS's native tools for maximum simplicity.
This is the code (here is the github - [https://github.com/sabat54i/photoboothdiy/blob/master/camera.py](https://github.com/sabat54i/photoboothdiy/blob/master/camera.py)): &amp;#x200B; I am getting an image on my computer that shows "Folder Check" and it is stuck on that. I believe the issue is with line 126. I think its supposed to make a new folder but it doesn't disappear. InitFolder(): global imagefolder global Message Message = 'Folder Check...' UpdateDisplay() Message = '' #check image folder existing, create if not exists if not os.path.isdir(imagefolder): os.makedirs(imagefolder) imagefolder2 = os.path.join(imagefolder, 'images') if not os.path.isdir(imagefolder2): os.makedirs(imagefolder2) def DisplayText(fontSize, textToDisplay): global Numeral global Message global screen global background global pygame global ImageShowed global screenPicture global backgroundPicture global CountDownPhoto if (BackgroundColor != ""): #print(BackgroundColor) 
Threads are great because they‚Äôre preemptive multitasking/async programming (due to threads not being ‚Äúreal‚Äù OS threads), they just don‚Äôt call them that. The asyncio stuff is an attempt at cooperative multitasking and suffers from issues of libraries making blocking calls without it being obvious (like printing to the console, which is technically I/O) with no proper tooling to detect/fix such things which IMO is incredibly annoying. Mix that with the fact that the library is pretty clunky and I‚Äôd venture that it‚Äôs actually asyncio that‚Äôs ‚Äúevil and will always be evil‚Äù :-P. 
Are you familiar with Pandas? It's a tool for data processing. It's a bit of an overkill, but it contains an easy excel-reader that you can use. I've written this code sample, but didn't test it. # I'm using Pandas to read the Excel file. Maybe this is an overkill, but I don't know any other excel reader. import pandas as pd # We use pandas to read the excel file into a data-frame with no header. df = pd.read_excel("your_excel_file.xlsx", header=None) # We store every cell value in parts, maybe surrounded by quote-marks. parts = [] # We look at the first column (as header=None the first column name is "0", I believe. Maybe this part is where things go wrong.) for line in df["0"].values: # If there's a space inside, we add quotes. Otherwise just add part to parts. part = line if line.find(" ") &gt;= 0: # Surround by part by " part = "\"" + part + "\"" # Add this part to the list. parts.append(part) # Now separate by "OR": write_string = " OR ".join(parts) # We're writing to output.txt with open("output.txt", "w") as file: file.write(write_string) 
Crazier things have happened. I‚Äôm pretty sure this is the guy who created Flask. I‚Äôve read a few of his blog posts and he really seems to know his shit; has crazy knowledge of the cpython internals *and* its history.
Flask, Sphinx, Pygments ... a few things of relevance you might say.
Elegant solution, sir üé©
libraries such as Tkinter or even Pygame could do this for you, would be pretty complex though [https://www.pygame.org/wiki/GettingStarted](https://www.pygame.org/wiki/GettingStarted) [https://wiki.python.org/moin/TkInter](https://wiki.python.org/moin/TkInter) Tkinter is built into python 3 directly but i suggests downloading pillow (which is PIL) to help get your graphics and images working. [https://pillow.readthedocs.io/en/3.1.x/installation.html](https://pillow.readthedocs.io/en/3.1.x/installation.html)
Flask, yes. Pygments and Sphinx are the work of Georg Brandl, AFAIK.
this is it chief
Didja google something like "python google analytics"?
They should do something like MJIT, that Ruby guys are planning to do for Ruby 3. Performance is a big concern in Python. "It is fast enough for me" arguments won't cut it, as easy to learn, write, read languages like Elixir, Kotlin and Crystal are getting there in terms of libraries and frameworks. And recently I have been noticing this trend of writing command line programs in Golang is growing rapidly, most probably because of the "single binary" feature. I hope Python doesn't become obsolete. 
His projects are now maintained by the pallets project. Sphinx and Pygments are not his but others, including click, are. https://palletsprojects.com/
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Welcome to the Refactoring Hell
https://www.google.com/search?q=python+google+Analytics
Yes, I did. I found https://github.com/debrouwere/google-analytics/ but the last commit is nearly two years old. I‚Äòm afraid it‚Äòs abandoned.
The very first hit for me is https://developers.google.com/api-client-library/python/apis/analytics/v3
Yes, but it‚Äòs Version 3 and it‚Äòs low level without all these features I‚Äòd like to use. Thanks for your help. I thought maybe someone is using what I‚Äòm looking for.
FYI, the one 3b1b uses is on github. https://github.com/3blue1brown/manim 
Sorry I'm kind of new and wanting to understand. Wouldn't checking a smaller area be faster than a whole screen? Or is it because with the whole screen it would know what is coming up as well?
This question, or some variant, gets asked very frequently. Please consider searching for all the thoughtful advice that has already been provided.
I got it to work! Had to copy and paste the folders from the zip file to the home directory. AWESOME! Wording comes up in French so just use google translate to write the translated item. Now I just have to hook up my big red arcade button and put the box together!!
Its faster, but when you just check for a small area you cant click the tiles which are on the top of the window. The programm runs faster but the result is minimal slower.
It's interesting he calls it less extreme than moving to 'Julia, Crystal or Go' but I'm pretty sure I would have to move to all of those to replace the things I currently do with Python.
I will offer a counter point to the ASGI advice you received. ‚ÄúYour‚Äù specific application may have no need for ASGI. It could be a premature optimization to try build an API to scale to tens of thousands of requests per second when the traffic you may encounter would never hit that level. WSGI also has plenty of strategies for scaling, so the scale argument doesn‚Äôt hold much weight IMHO and reasoning/debugging async code can waste a lot of time. ASGI and the async frameworks are still nascent. The APIs for async libraries, like database connectivity, may not be stable or even available. The projects or frameworks that you choose to work with, like APIStar, may be abandoned after the maintainers struggle to figure out what to do. I loved APIStar with an irrational passion and I was very involved in the forums. The maintainer however made breaking changes constantly, then abandon the project all together to go work on Starlette. Other projects are going through the same phase as the players are fighting for market share. I believe the Python Bytes podcast even went through and found that projects like Vibora which appeared to be sky rocketing in popularity have stalled. So your application may work perfectly fine with a WSGI API framework and WSGI has plenty of options for scaling. Django, Pyramid, and Flask have a lot of support from third party libraries which is the only reason I would try and use them for a smaller implementation, but seems like you have a lot of concern for the overhead that comes with trying to support Python 2.7 and Python3 and the older MVC style of web development. For a more modern API framework I have to recommend you look at [Molten](https://moltenframework.com). Molten took ideas like dependency injection and self documentation with type hints from APIStar and just committed to being a Python 3.6+ WSGI. The author is very committed to stability and he has provided a ton of examples in the repo. I also recommend you look at the [cookiecutter](https://github.com/Bogdanp/molten_cookiecutter) he has developed, which can bootstrap a project in no time and give you with a reasonable project structure when you don‚Äôt have a convention based framework like Django. The downside is that you will find few third party libraries at this time in the Molten space. As long as you learn the component system though you can easily take a generic library and wrap it into Molten. The molten.contrib modules have plenty of examples of integrations like SQLAlchemy. 
I thought they all came out of the org the two of them founded.
I recommend OBS for screen recording
Goos point.
Conference names are a good idea thanks. I don't think it's so much about trust, but about blame. No shareholders would blame a bank if Microsoft had hidden malware. 
Thanks. That's a good collection of options. 
If that's the issue, you might want to reach out to Anaconda, Inc. They provide support for analysis pipelines in science, engineering and finance using open source tools. 
Flask, Jinja, Click, werkzeug etc http://lucumr.pocoo.org/projects/
You can do every things that python do in julia. Maybe your problem is lack of library. 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
 I didn't know that. I think that is a strong point as well. https://www.anaconda.com/how-pnc-financial-services-leveraged-anaconda-to-enable-data-science-and-machine-learning-capabilities-across-the-company/ 
I went with Qt. Looks pretty pro. I started with this tutorial - http://zetcode.com/gui/pyqt5/ 
overkill
You fail to notice that I specified "male politicians", not "males", ergo, your counterargument is whack.
A huge amount of the reason for Python's popularity and recent growth has been precisely because of the VM's C API being extensible by other frameworks, from CUDA (via Numba) to Tensorflow and dozens of data processing and hardware access libraries in between.
Python's growth continues to accelerate. It's funny to read people fearing its demise (Ronacher, Eric S. Raymond, you) at the same time. Kotlin is a replacement for Java. It's not a replacement for Python. Elixir is one of those hipster functional languages and Crystal can't even run on Windows. Watch Raymond Hettinger's "Why Python Is Awesome" talk and you'll learn that one of the traits necessary for a general purpose language to succeed is that it runs on Windows. None of these are going to be replacing Python.
&gt; C lib compatibility is a massive burden C lib compatibility unlocks the world. You'd be throwing NumPy, Pandas, TensorFlow and most of the rest of the data analysis and machine learning libraries away that have contributed to making Python so popular. Python can, with greater or lesser effort, call routines from C, C++, D, Fortran, R, C#/.NET, Java/JVM, PHP, Javascript, Lua - and I'm sure I've forgotten several. It's the ultimate glue language. Throw this away and you cripple Python. And what do you gain? 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
He's a good programmer who also seems to completely disagree with most of the design decisions of Python, including the move to Python 3. History has proven him wrong on the latter. 
&gt; Time zone support is incredibly cumbersome and error-prone This is a problem with timezones, not Python.
Why not just use virtualenv, pip &amp; conda together?
Don't mind the downvotes from the morons, great work!
Threads were never meant to be for multitasking, as Guido has explained over and over ad nauseum. They're also as dangerous as a nuclear bomb. People with PhDs in computer science write papers warning about them in the same tone that Lovecraft wrote warning of Cthulhu. It's official. Computer Science has spoken. Threads are evil. https://www2.eecs.berkeley.edu/Pubs/TechRpts/2006/EECS-2006-1.pdf See? Even the SQLite web page knows this.... &gt;(6) Is SQLite threadsafe? &gt; &gt; Threads are evil. Avoid them. &gt; &gt; SQLite is threadsafe. We make this concession since many &gt;users choose to ignore the advice given in the previous &gt;paragraph. 
Not really. The interpreter is just one piece of the Python language. There's already many different Python interpreters and some *very* promising ones in the works that could very well "replace the interpreter" for a great many things *in a few years*. Here's what *I* think it's the future of the Python interpreter: https://github.com/RustPython/RustPython
Yes, they‚Äôre talking about *real* operating system threads. You can have two things literally happening simultaneously with real threads since they share a memory space and unless you‚Äôre very careful you can expose yourself to subtle (and sometimes not) race conditions that are incredibly annoying to debug and eliminate. Python‚Äôs threads are ‚Äúgreen‚Äù threads which don‚Äôt use any operating system threading capabilities provided by the kernel and each execution stack is (by default) given 100 instructions until it moves to the next one in a ring sort of fashion. It‚Äôs all contained by the same process and with the GIL it means you don‚Äôt actually have *all* the same problems as real threads. You still have issues with race conditions and deadlocks, sure, but imo they‚Äôre much more manageable. 
So, Old Guido once again made the right decisions.
When I used pyscreenshot under Linux, it was very slow. Well, the screenshot was converted to a PIL.Image. This whole process for taking a full screenshot took 0.5-0.6 seconds.
The single biggest selling point of the language Rust is to statically forbid sharing data between threads in ways that aren't thread-safe. You don't need to throw out the entire concept just because it's difficult to use correctly, when there are languages and design patterns (like message-passing) that make it safer.
Wasn't Flask originally an (Reddit?) April's Fool joke (because it relied so heavily on Werkzeug)? 
Thank you all! I have read your answers and you are right that I did not give much details about my needs, sorry. My skills developing are limited, my goal is to develop an application fast and simple. I have seen that some e.g. Tkinter you must code even the position of the objects in your Gui. I am more interested in drag and drop it on and code. Thxs again.
I mean, part of it is the consequences of having used a GIL in the first place. Who knows where we'd be had they decided to use fine locks. Maybe Python would be dead, maybe Python would be better, I'm not going to claim to have any idea.
This is mostly true, but because this is a programming forum I hope you'll forgive the pedantry üòä, cpython threads are real os threads and the next thread that executes may or may not be the next one in line as it depends on the priority given by the underlying os. But since the Gil only allows one at a time they might as well be green threads. 
If it's quick and dirty use tkinter. If you're making an internal tool it will work ok - if you suspect it will be used by more than a handful of people consider the qt stuff.
Yes, I read about out somewhere (maybe it was even his blog), it started as a joke, but became the most popular framework.
Just like for every other Turing complete language
If you copy and paste you will not have printable characters. Still very cool
I am very new to python. Can someone help me to by explaining what those integers doing? Thanks 
I thought the fps would be slow in shell but it was actually pretty good! I made this using a fork of your code: [https://www.youtube.com/watch?v=M0DnibYHUkQ](https://www.youtube.com/watch?v=M0DnibYHUkQ)
Sort of... I've come to expect an ebb and flow in programming where we as a collective all say "okay, this is a bit too much to deal with, let's throw most of it out and start over?" but the complexity grows again to fill the void left over because by throwing out the bathwater you might throw out other things as well. For example, while the api of react is incredibly simple and it's an absolute joy to work in, you'd be hard pressed to not add redux (or some variant) into the mix with all the mental baggage that those libraries can encourage (thunks, action creators, normalizr, etc). I think programming can be a good example of Parkinson's law in action. I'm over-generalizing here, but it's something I've been thinking about a lot within the past year. I'm also not disagreeing with David or Armin at all, my personal gripe that resonates with their message is the typing.NamedTuple class. 
here I made another one [https://www.youtube.com/watch?v=M0DnibYHUkQ](https://www.youtube.com/watch?v=M0DnibYHUkQ)
We worked on those together but Georg did most of the contributions and the leadership of those.
Top level plug of my version (using stdout): [https://www.youtube.com/watch?v=M0DnibYHUkQ](https://www.youtube.com/watch?v=M0DnibYHUkQ)
Questions -&gt; /r/learnpython (probably also similar subs specifically for webdev). I've only dipped my toes into this subject myself, but afaik gunicorn setup is independent of nginx, besides the question of which ports to direct traffic to. Everything that you can seperate out as static content should be served by nginx, only dynamic content should be served by gunicorn workers. Plenty of guides out there, basic is nginx &lt;-&gt; WSGI &lt;-&gt; gunicorn &lt;-&gt; flask/django/etc. Some 'gotchas', IIRC: * support for one of gevent/eventlet requires python3 version of gunicorn, which probably means building from source. * gevent/eventlet with multiple workers is a complex setup. * gevent/eventlet python packages mess around with a particular requisite packages in such a way that you cannot have both working in the same environment, and you have to fully uninstall one before installing the other.
That's awesome is what that is, keep up the great work!
Time zones are a pain, but the interface in Python is especially bad. `tzinfo` is difficult to work with. Simply having good UTC support out of the box would fix most of this, but Python falls down at even that. Basic UTC date management shouldn't be nearly as hard as it is.
Oh snap! Today I learned and thanks for the correction! I figured they used green threads and not OS threads since what‚Äôs the point of a context switch when you don‚Äôt gain the advantages of it. I guess coroutines differ in that they aren‚Äôt backed by a thread, but are instead a full userland implementation of a ‚Äúgreen thread‚Äù (even though it‚Äôs really an event loop)? Do you know why python actually backs its threads with OS threads? 
Start with PySimpleGUI which wraps Tkinter (and Qt for that matter) but makes it much simpler to approach for beginners. In the unlikely event you need more customisability, you can then easily convert it to unwrapped Tkinter.
Serious question: do you think cpython could/would get supplanted? I wonder what it would take. 
The Matlab tears will start sooner when you have to pay for it!
It's fine to have interoperability with other languages. Doing it by exposing the raw internals of the interpreter is not the way to do it. There's options: 1. Formally define a strict subset of the CPython API that other interpreters can get behind. Disallow access to other parts of the CPython internals. 2. Use CFFI 3. Use a portable format like WASM Until the details of the internals of CPython are no longer necessary for Python interpreter adoption, we'll ultimately be stuck in a boat where position can build anything better. Pypy and Pyston ultimately have been unsuccessful in gaining meaningful adoption (and in Pyston's case, for being supported) for this very reason.
Check this: [https://stackoverflow.com/questions/14688306/adding-meta-information-metadata-to-pandas-dataframe](https://stackoverflow.com/questions/14688306/adding-meta-information-metadata-to-pandas-dataframe)
Isn't pypy like mjit?
Also I know the indentation is off sorry
A lot of languages have a crappy standard library. Use something else then.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I can't find any resources that say *why*, but I could hazard a guess at practicality. Since the GIL was constructed in the 90s and threads were already expensive (at the time) to create, putting a green thread implementation on top and then dropping in a coordinator would probably slow down the execution significantly. Plus, from this source on Java's green threads, a single page fault would halt all threads since they have to share a single process https://softwareengineering.stackexchange.com/questions/120384/why-not-green-threads David Beazley (of course) has a great presentation and slides regarding the GIL and the python threading model, but I don't believe it goes into the "why" of OS threads. http://www.dabeaz.com/GIL/ 
Just redirect people to r/learnpython. Python and learnpython are both great comunities. We can't remove post of people without show them the right path. I also understand your point, me too I like to read news and interesting stuff. Get here learning python question can be annoying, but I also remember that one day I was in same position as all this newbie, and if that day someone remove my post with no clear reason I maybe will not be there to respond. 
Agree. Learning C will benefit you to understand a lot of things python does under the hood and make you become a better programmer. If you want to learn object oriented programming, you would rather go learn Java instead of C++ after C. The practical benefit of knowing C++ and C is very little meaning that there are fewer places and fields that need them or you need to be reeeeaaaaaally good at it to be even employable. Many courses online free or not and universities use Java to teach software development type courses and you can learn to develop Android app easily if you know Java very well. A lot of tools and tutorials and courses are available because of that.
Well that‚Äôs disappointing. 3 is objectively superior.
I agree about all the times it‚Äôs right to redirect people to learn python (and I read that too). It‚Äôs that we keep getting the **same question**. It‚Äôs certainly not benefiting the community and there is no reason for it every day. 
oh cool, I didn't know about that
Thank you, that works
How did you install cv2 and have you succeeded in running the program? I think you should reinstall it by pip or conda. 
We just need a more powerful bot able to catch this kind of questions and redirect people to learnpython by parsing there question to it. And then, remove the post. I hope someone will write one :) 
Kind of hacky, but you can use python to exec itself. https://stackoverflow.com/a/36018657/2714534
Haha nice just post it tomorrow this sub will love it.
Would have been nicer with less expressiveness and more readability. 
If they kept posting their hollow world on this sub I would absolutely complain.
That isn't a good reason to not improve the status quo. I already use libraries for this stuff. 
Tkinter is great for learning, but it is really showing its age. I am making a stylized GUI (think pokemon for GBA) and suffering for it. Also, some features are just stupid to implement. Good luck getting a scrollbar to work. My friend makes GUI tools for artists and he swears by QT