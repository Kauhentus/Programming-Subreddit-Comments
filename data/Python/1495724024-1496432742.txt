Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
That is good news. [Here is the bug report](https://youtrack.jetbrains.com/issue/PY-24431).
Thanks for the answer. I pretty much got the discussion out of this already so this thread doesn't really matter anymore but in the future I'll be posting in /r/learnpython 
**Here's a sneak peek of [/r/learnpython](https://np.reddit.com/r/learnpython) using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#2: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/5lveo6/blacklist/)
We should totally move this to github! ~~def get_image(self, url, nsfw = False):~~ def get_image(self, url, nsfw=False): Edit: Fixes #1 not pep8 compliant ^hopefully
You haven't provided any information at all about what is going wrong. Do you have a traceback, and can you share a description of how it's failing?
 eval('''
I also love Ruby's meta-programming and monkey patching abilities.
Thanks for doing that.
No need to yell. 
I think that 3.7's 20% faster method calls really appeals to companies like Instagram, because that's basically vertical scaling for "free" (updating the codebase). 
 4 / 0
`elements` is empty. Check your edge cases.
Did you actually read the content of the post? It was a project uses question for a major Python tool - and was in no way targeted or useful for learning Python as its primarily concerned with what established projects and experts are doing
Thanks for the work you do :) Sorry for posting in the wrong sub!
Web pages typically change pretty often, yes. In many cases the page content is generated programmatically each time you request it. You're going to have to take a close look at how the page changes from day to day to determine what is a consistent way to get the information. A better approach would be to identify an API you can use to get this info.
awk is horrible.... I never heard anyone suggest bash after using Python (not that I don't use bash, but it really feels like suggesting a step backwards).
In Vesalius https://en.wikipedia.org/wiki/InVesalius 
I don't get it either. Saying "R is best for stats" is like saying "watercolors are best for landscapes".
I am not. Didn't even know what that was until now. Thanks for the resource! Adding this to my blog as well.
You have to use external tools to do something with the type hints. They're _hints_ (for tools) and aren't used let alone enforced during runtime.
Do you want to do something like https://github.com/chaosbot/chaos? nsfw = not nsfw
 pass else: is_nuclear_lookup[countries[i]] = True silo.arm_all_nuclear(is_nuclear_lookup) 
Pull Request rejected: `Not PEP8 compliant.`
It's still fairly basic question. r/Python is for news, sharing cool projects, discussions etc.
I'm not familiar with curio, so it's possible that I'm doing this *very* wrong, but it seems to be very slow. import asks import curio from datetime import datetime import time import requests async def example(): r = await asks.get("https://reddit.com/r/python") def example2(): r = requests.get("https://reddit.com/r/python") a = datetime.now() for x in range(10): curio.run(example) b = datetime.now() print("Asks took: %s" % (b-a)) a = datetime.now() for x in range(10): example2() b = datetime.now() print("Requests took: %s" % (b-a)) yields: &gt; Asks took: 0:00:07.333423 &gt; Requests took: 0:00:01.675718 Thoughts? 
Instagram was originally written in Django. It still uses parts of Django, though they've replaced a lot of stuff with their own tooling to handle some of the operating-at-scale issues.
print('Hello World') Doesn't it require the single ' ? Serious question, I'm still new here.
Julia: Even cleaner syntax than Python for math operations. Type script's not as nice as Python, but it's not bad, and has nicer lambda syntax.
You're stopping and starting the entire curio kernel for each run. import asks import curio import datetime async def worker(): r = await asks.get("https://reddit.com/r/python") async def main(): for _ in range(10): await curio.spawn(worker) a = datetime.datetime.now() curio.run(main) b = datetime.datetime.now() print('Took {}'.format(b-a)) Results in: Took 0:00:01.570943 ~~I have yet to profile my sessions, but given some tweaking I believe they will yield a much larger improvement.~~ I am a relative noob, and my codebase is immature, so all things considered I'm ok with that result. I believe were you to crank up the number of requests you'd see the disparity grow. ~~I think I have some underlying issues with my connection pooling which I'm going to tackle right now :)~~ Edit: strikethrough stale info.
I've apparently got some reading to do. I tried it again with the semaphore example on the linked site, and it yielded similar results. Unsurprisingly (given it's async), I'm getting results back after it outputs the "time taken" statement. Mostly I'm just maybe surprised that requests held up so well with its blocking response. Do you think it's threading or caching results? 
 import os; os.remove(__file__)
So you want to make a database? Why not just use one of the databases already available for python? 
nope, it works with both, which is awesome, because you can write +/u/CompileBot Python 3 print('he said "wow this is cool"')
That is exactly what I was thinking. Never seen it before though thanks 😁
Output: he said "wow this is cool" [^source](http://ideone.com/bNvaDc) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/Python/comments/6d9e11/lets_write_a_python_program/di19v06%20Include%20your%20reason%20for%20reporting%20here.) 
I think you might be looking for something like [OpenCV](http://docs.opencv.org/master/d9/df8/tutorial_root.html)
Another question, Does py3 use things like this script I wrote the %r %s and such... Those formatters seem easier to use compared to the alternative that i do not understand in Py3... link to script below, couldn't figure out how to format it for reddit... This script was made by me in Py 2.7 Profitability script: https://pastebin.com/FkmF3RQM --
&gt; i am honestly curious: as a beginner, what exactly "does not speak" to you with py3? permalinkembedsavereportgive goldreplied As far as i know py3 dosn't use %r %s ex a = 1 + 2 print "One and Two Wil produce %r" % a
 import sys import os from datetime import datetime
C, C#, Rust.
What is a nuclear lookup?
Very good to know, thank you!
Most image parsing libraries work as (numpy) arrays of pixel values. You can use PIL or OpenCV to find the pixels with the red color value and store the points as an array to figure out where the line dips and by how much.
Output: 5 [^source](http://ideone.com/SaJlQL) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/Python/comments/6d9e11/lets_write_a_python_program/di18y5g%20Include%20your%20reason%20for%20reporting%20here.) 
Well, going to 3.6 is hardly free. They spent multiple months to make that happen. However, I am as well glad for the jump to Python 3.6 for many people. It is now demonstrably the best Python ever.
Trying to decide if I'm wasting time learning Python or a program language in general. My day time job is a CNC Machinist. At home I don't really do anything on my computer other than play a few games and do some folding here and there. I'm hoping that learning a program language I'll know what all it can do and then try and think of a problem to solve with it but as of now I can't think of a problem to solve with it since I'm not in an 'office' environment. Any input would be greet!
I recently wrote [an article about applications of model interpretation] (https://www.datascience.com/learn-data-science/fundamentals/model-interpretation-algorithms?hsCtaTracking=00c135e2-270a-472d-8fa7-745a31bb3d40%7C7d744ca6-002c-45c4-96ab-6e9e91baeb3c). A primary use case is that it helps give a common framework for looking at models, so models of different types can be compared. This is particularly important for models traditionally seen as "black boxes" like neural networks, whose internal structure can be complicated to understand.
so your _only_ issue is the print function? because this works just fine: &gt; print("One and Two Wil produce %r" % a) edit: a tip to learn about %, .format, etc (py2 and 3): https://pyformat.info
Yes, I definitely would report this. I am going to ping someone I know at PyCon and see if they can catch Andrey, as that should lead to a faster fix. But report anyway, just in case Andrey isn't there today.
I've had no issues with Jinja. http://jinja.pocoo.org/docs/2.9/
Basically almost everything.
Yeah, PRPL seems very useful for SPAs. For general, static webpages such streaming may be more useful, I believe.
Honestly that sounds really awesome. Keep up the great work!
That's actually a really clean way of explaining it! Thanks
I agree with both of you. ^whatdoido
&gt; Cython [...] makes writing C extensions for Python as easy as Python itself. Cython is used for C extensions, so basically you have two options to generate the same thing. Cython usually is easier to write extensions than pure C, but YMMV.
Django is a complete web framework which includes an html templating engine. On the other hand jinja is a standalone engine that can be used by itself but also plugs into both Django and Flask. You probably won't know the best route for your project until you've tried them out. However my vote is to with jinja first. 
Returns a bool for if the country returned by countries[I] is a nuclear power
🌸 ^Spot ^a ^problem? [^Contact ^the ^creator.](https://www.reddit.com/message/compose?to=k-a-z-e) ^Don't ^want ^me ^to ^reply ^to ^your ^comments ^anymore? [^Click ^me.](https://www.reddit.com/message/compose?to=flower_bot&amp;subject=Ignore&amp;message=!ignoreme) ^This ^function ^is ^in ^beta.
Sweet! Seems like this is exactly what I need.
Start here [Data Persistence](https://docs.python.org/3/library/persistence.html). Further note that your original:- for j in range(0,len(itemList)): is almost always a code smell in Python, it's just:- for item in itemList: 
I could definitely do that sometime this weekend. I'll get the gear from work and use my home PC for this. I don't think I could cut through all the red tape to allow you to access a work machine. I'd really appreciate any help here. Do you have a cost per hour? If you're able to help here, I know I can justify paying you for a few hours of work. 
It's probably the hash character getting interpreted as H1 in Markdown. Probably best to surround that in backticks so it will show up as code, like `this`.
Assuming you already know C++, it is the best language to write extensions. You only need a library: pybind11 is great, or boost.python. With these libraries you write the binding code in quite readable C++ instead of an obscure hybrid language like Cython. And for the most part, you don't have to deal with the error prone manual refcounting that would be required in a C extension.
I'll have to check it out, sounds great!
(these all work in python3...)
r/learnpython
I was not aware of that honestly, I think, based on the feedback I am going to start learning Python3 and just deal with the parts of syntax I don't exactly care for 
Thank you. Honestly, hearing feedback like that is what makes writing this stuff worthwhile :) I'm glad the article was helpful to you!
I am not sure if this is what you're asking about, but with Bottle (and probably Flask), if you `yield`, it will stream that. I did a quick test with: import time yield 'hello' time.sleep(1) yield 'world' and that worked.
Same... 
I've been playing around with this a lot lately and can't recommend it enough. So much easier than my many aborted attempts at using cython for anything complicated.
So, I fixed the performance issues with my sessions. Those same 10 requests (best of 3) DSession: Took 0:00:01.255931 20 requests (best of 3) DSession: Took 0:00:01.572447 Quite a bit quicker :D
Use Cython, unless you are one of the 10 people in the world who actually know C++.
1. Yours is actually less powerful as it doesn't offer name look up with brackets. It also doesn't offer an init method for each it's values, it's just a dumb wrapper around namedtuple 2. Same thing with enum.Enum 3. At the cost of behavior. Seriously, go read the docs for Enum again and see how incredibly lacking your "implementation" is against it. 
This is an optimization problem. You can use a very dumb technique such as a "hill climbing" algorithm or a slightly less dumb variant of genetic search to produce optimized solutions. You could implement this sort of thing in any language (and I've done it in both Python and Scala). Here's one way of looking at it: Your program wants to produce a bunch of 4-long word sequences (e.g. ["apple", "pear", "car", "truck"]) that have the properties you listed above. To complicate matters, we cannot say that some sequences absolutely have these properties but others absolutely don't. It's a matter of degree. Some sequences meet many criteria very well. Others do so poorly. We could quantify this: Supposing there was a function f such that: f(w0, w1, w2, w3) -&gt; number And for example: This function would allow us to say that one 4-word sequence was "better" than another. If the function gave a higher score for better word-sequences, we could easily generate a bunch of random 4-word sequences and then find the ones which give the biggest numbers. If the scoring function (or fitness function) was very efficient you could compute these very quickly, since it's just a map on a randomly generated sequence followed by a filtering operation. There's a problem with this approach which is that the search space (how much stuff we'd have to filter) could be huge if the dictionary is very big. We'd need a more efficient way to converge on a solution that does not require us to test every possible combination of 4 words. Now imagine if we had the ability to organize all of the words in our dictionary into a "graph". Let's also say that this graph is organized such that words with similar attributes are more likely to be grouped closely with each other. That means that given any word in the graph you could pick a small number of other words that had attributes that were somewhat similar to your chosen word. In other words, you have gained the ability to make a "small change" to the system. In that case, instead of simply feeding in every possible combination you could start with a single word-sequence and just evolve a better solution. The easiest way to do this is to use your word-relationship graph to mutate the word-sequence in a thousand different ways. Some of them will score well, others badly. You could discard the lowest-scoring 99% and then repeat the "evolution" process for what was left. Over time your population should increase its score - in other words, they are matching your criteria better. This whole thing is analogous to how biological evolution works. The idea is that only the "fittest" survive, but in this case, the fitness of a word sequence is defined by a function you have written. 
I've always tried to find the same thing, myself. I've used Grammarly for free before, it's not bad, but it's so limiting what actually can be done. I'll be keeping and eye out on this post for the library when someone has possibly found one.
Not the same thing, but check out proselint. 
Yes, but the syntax is a bit different: For var in ("minotaur", "horn", "dagger"): if var in choice: #do stuff break # use a break if you only want one of the vars to trigger something EDIT: fixed formatting to make the code into a code block, and typo
While it won't do all of those things out of the box, you could check out [link-grammar](https://www.abisource.com/projects/link-grammar/). With a bit of work it could be used (along with nltk) to accomplish what you're looking for.
Where did you read this? It's not true at all.
Apparently I _mis_read it somewhere. It is py*v*env that is deprecated now. :-|
As you're talking constraints how about [ Python Constraint](https://labix.org/python-constraint), [Numberjack](http://numberjack.ucc.ie/) or [Gecode Python](https://pypi.python.org/pypi/gecode-python), the last being a wrapper over a C++ library. Edit:- blast forgot [Constraint Solving](http://www.constraintsolving.com/) for some background.
from complete_bollocks import complete_cobblers
Not in python, but you might want to check out the old style and diction tools. http://www.linuxdevcenter.com/pub/a/linux/2000/05/05/LivingLinux.html https://www.gnu.org/software/diction/
Assuming that you're performing a statistical test that involves a null hypothesis...which is not obvious from the OP...
/u/kurashu89 What do you mean by an init method for each value?
diskover v1.0.13 is out! New feature includes web front-end for searching and tagging files. https://shirosaidev.github.io/diskover/
Not really hating C++, it's just a very complex language that requires a lot of effort to write and maintain resulting in many people thinking that they know it when in reality they don't.
It's not really about YouTube. VoD is used pretty generally to refer to videos of live events (streams, conferences, etc) that are available after the fact. 
Even more awesome is triple quotes print("""hello world""")
Ah ok, thanks! Yeah that's an interesting feature but it's better imo to do any computation when an enum is created.
I've been looking for this forever
While not a Python solution, this is my favourite answer. It does do what I want to do.
Yeah, there are bindings available, though last I checked, the only way to install them is to build from source.
I chose pint simply because of the simplicity. I think it's a lot easier for someone who isn't too python savvy (like op) when they just get some unit engine instead of defining everything themselves. Sympy is of course a lot more powerful so if you enjoy using it then I'd stick to it. ;) By the way consider posting a bug report on pint with the matrix inversion error - someone will probably fix it.
Modules for a CSV parser. My company pulls data from several bricks-and-mortar shops, each using their own stock management system, and sometimes the _only_ way to export their data is through a CSV file. An boy oh boy the _variants_ of exported data! So I made the "master" portion of the script to be "extendable" using a simple "import during parse" 'plugin' architecture.
 if letter == "N" or letter == "n": pass elif letter == "Y" or letter == "y": That sorts it out. Think of it like this... if (letter == "N") or (letter == "n"): elif (letter == "Y") or (letter == "y"): Your if statements are being evaluated like this. if (letter == "N") or ("n"): elif (letter == "Y") or ("y"): ("string") will always evaluate as true.
Docs: * [Google Python Style Guidelines](https://google.github.io/styleguide/pyguide.html) * [Code Like a Pythonista](http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html) Talks: * [Transforming Code into Beautiful, Idiomatic Python ](https://www.youtube.com/watch?v=OSGv2VnC0go) ([markup](https://gist.github.com/JeffPaine/6213790)) * [Refactoring Python: Why and how to restructure your code](https://www.youtube.com/watch?v=D_6ybDcU5gc) * [The Clean Architecture in Python ] (https://www.youtube.com/watch?v=DJtef410XaM) 
In future post questions like that to /r/learnpython /u/nhovar already pointed out why it's not working, just to add one more options that, that in my opinion you should use in case like this: if letter.lower() == 'n': # this will mach both 'n' and ' do_something() elif letter.lower() == 'y': do_something_else()
+1 for PyCharm! It gets so many things right and increases my productivity enough, that I forgive it for dimming the lights as it started up.
I'm familiar in with genetic search as an abstract concept. It is used to identify ideal values for some parameters for fMRI data we use for neurological study. Unfortunately, It's becoming clear to me that this will be a task that's beyond my ability. I greatly appreciate your time and feedback. It really does help put things into perspective. I think I'll have to ask around the computer science department and see if there are any undergrads who need a project to work on. Seriously, thank you for your time.
&gt; However, if I'm not mistaken such behavior is impossible under WSGI It is. There is even a paragraph in the [PEP](https://www.python.org/dev/peps/pep-0333/#buffering-and-streaming) about streaming responses. Don't assume it's only about chunked encoding only because the docs mentioned it, it works exactly as one would imagine: You give WSGI an iterator and as long as the iterator produces content those data will be sent out to the client. I know for a fact that this works because at my last job I wrote code which did exactly that (in that case I was reading streamed data from S3 and send it along to the client to avoid reading it in memory first). I am not sure if WSGI will actually flush the socket connection after each element in the iterator (I suspect it might) you will have to try it or read the code of the WSGI implementation that you are are using. Having said that I can't imagine any scenario where such a change would really matter. For Google it totally makes sense because they have optimized every _other_ part of the whole stack (remember, those guys built a browser and new transfer protocol to improve rendering speed) and they have the manpower to solve this problem in a maintainable fashion. Even something as trivial as having different `&lt;title&gt;` tags on each page become a huge hassle if you implement something like you imagine. 
It might be in alpha but people have been successfully using it for months.
I am critical of C++, but like you say, it is actually getting better recently. C++ as a language is a mess compared to Python, but it is also extremely powerful. C++ has templates which allow library authors to write code that looks very clear to the user, while compiling to efficient executed code, e.g. look at Eigen.
[sympy.physics.units](http://docs.sympy.org/latest/modules/physics/units.html) works pretty much the same way. No need to define new things. I checked some old code I had, and another annoyance I noticed was that you couldn't work directly with arrays. from pint import UnitRegistry ureg = UnitRegistry() m_123 = 60000*ureg.kg m_45 = 72000*ureg.kg mass_matrix = np.diag([m_123.magnitude]*3 + [m_45.magnitude]*2)*m_123.units # mass_matrix = np.diag([m_123]*3 + [m_45]*2) # my_array = np.array([m_123, m_145]) # Both raise ValueError: setting an array element with a sequence Meanwhile, if you used: import sympy.physics.units as ureg # usually u, but I just want to copy-paste you end up with both working without fumbling with magnitudes and units.
I could go to http://ideone.com instead of calling compileBot, but im too lazy for that +/u/CompileBot Python 3 print("""Hello world!""") edit: that is awesome. pretty usefull for long texts!
Output: Hello world! [^source](http://ideone.com/OhFY7l) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20https%3A//www.reddit.com/r/Python/comments/6d9e11/lets_write_a_python_program/di27zoj%20Include%20your%20reason%20for%20reporting%20here.) 
https://github.com/csurfer/gitsuggest/issues/1 Done.
I definitely like the idea. Will try it out sometime. 
F-strings are better. print(f'One and two will produce {1+2}')
In some applications, training and retraining times need to be kept below five seconds to be useful. Such applications are often referred to as real-time and include, but are not limited, to the IoT, sports result prediction, predictive maintenance, and health care. Algorithms that allow for fast retraining are fundamental to enabling such applications and can open up new business opportunities. One reason for retraining is that the features used in these applications can degrade, causing previously useful features to no longer be useful. Such degradation is often observed as sensors age or as information becomes out of date. LightGBM is a new open source library created by Microsoft that is set to become the new standard in decision tree algorithms. Depending on the application, it can be anything from 4 to 10 times faster than XGBoost and offers a higher accuracy. It has already been proven useful in several Kaggle competitions. This notebook was presented at Strata conference London 2017: https://conferences.oreilly.com/strata/strata-eu/public/schedule/detail/57536 Here a link to the slides: https://www.slideshare.net/MiguelFierro1/speeding-up-machinelearning-applications-with-the-lightgbm-library
Can someone explain that?
It's basically copy and paste from this subreddit's hot: this week results.
I'm quite interested in this actually, are you running this on a Windows or Unix system? Have you got a github repository for it?
I've played around with boost python recently to get a bit more performance out of my event dispatching library but I was interested and disappointed to find that there is significant overhead in the python to C++ function call. This made my library actually run slower due to the high number of function calls I need to make.
Just spitballing here, but maybe you could train some kind of classifier to identify the locations of the bumps?
What would you recommend as the first book? Automate the Boring Stuff? I'm coming from a SAS and R background, if that helps!
What would you recommend to lead into Fluent Python? I'm coming from a SAS and R background, if that helps!
Yeah, I forgot to write about that. I'm a TA and want to make sure I'm covering all "else" cases in my presentation. Thanks!
This is a good idea, although I think it would be better suited as a standalone web service. It seems a bit overkill to do it from the command line.
Awesome thanks!
I agree - jupyter notebooks give me that useful MATLAB workspace vibe.
Seconded
By the way, I would recommend this book https://highperformancedjango.com Most of it actually are case studies of Django in Instagram and how the hell they made it perform that well :) (SPOILER: numerous layers of cache at infrastructure level)
Say you have a large data file (rows and columns) and want to count the occurrences of an ID-# string in column 5. Sure you can write a python read--&gt;for loop--&gt;count+=1, etc. 8 line code maybe. Or: grep ID-* filename | awk '{print $5}' | wc -l For fast data analyses this is really powerful. 
is there any difference with ? - [Alir3z4/html2text](https://github.com/Alir3z4/html2text/) (fork of [aaronsw](https://github.com/aaronsw/html2text)) - [matthewwithanm/python-markdownify](https://github.com/matthewwithanm/python-markdownify)
Thanks! Coming from MATLAB I hear that quite a bit ;) 
Just learning python right now for automation. I'm amazed by how many things I can import!
You probably shouldn't parse HTML with regular expressions. https://stackoverflow.com/a/1732454
Interesting. Have you tried [cookiecutter](https://pypi.python.org/pypi/cookiecutter/1.5.1) out yet? 
That's one simple example, but there's a reason that a lot of people have to use [YAMLlint](http://www.yamllint.com). Sure, with TOML you have to break up each array element into it's own little block, but I would rather do that than deal with all of the significant whitespace YAML requires. I don't think YAML is bad or that people who like or use YAML are dumb, but I do think that TOML is much simpler to use.
Very valid question. The only reason password came into picture is because of rate limits. The rate limits for in authenticated call is too less and sometimes it was crossing the limit. With authenticated user the rate limit is 60 calls and that fits nicely within what is required.
Agreed. Or just show a network of GitHub repos (where edges=some similarity metric) and allow us to navigate the network ourselves.
Definitely, and it is definitely in the plans. Reason I went ahead with command line was that it was easier for me to ignore the hosting requirements and still provide a fast and clean output.
I don't understand the point of this. Can you explain a little more?
Very cool. I'll check it out!
here's an [asyncio / aiohttp gist](https://gist.github.com/Develer/c512dce08ea4485d8846) 
Thank you! Seems to be what I'm looking for. 
That interesting. Do you just have it trigger every hour or so? Then to answer your question from before, my program is written for a Unix system (I am using fedora 25). But you could use the os library and make it cross platform. Although I haven't tried it myself. I don't have a github repo for it, but I could upload to github or in the comments here (its just a simple script). 
I don't know of any package that does that specifically but there is the Python Imaging Library (PIL) which makes interacting with image data very straightforward. 
 import youtube_dl import feedparser youtube_rss_feed_list = [ "https://www.youtube.com/feeds/videos.xml?user=EXAMPLE", ] def checkFeed(youtube_rss_feed_list, num_to_dl = 2): channel_info = [''] * len(youtube_rss_feed_list) * num_to_dl index = 0 for channel in youtube_rss_feed_list: feed = feedparser.parse(channel) for i in range(num_to_dl): channel_info[index] = (feed['feed']['title'], feed['entries'][i]['link']) index += 1 return channel_info def downloadVideo(channel_info): ydl_opts = { 'outtmpl':' ' } for channel in channel_info: ydl_opts['outtmpl'] = '~/Videos/YouTube/' \ + channel[0] +'/%(title)s-%(id)s.%(ext)s' with youtube_dl.YoutubeDL(ydl_opts) as ydl: ydl.download([channel[1]]) """ Run the main program """ channel_info = checkFeed(youtube_rss_feed_list) downloadVideo(channel_info) 
import binascii binascii.hexlify('a')
It's a Turing complete language. The answer to "is there a way?" is always "Yes." After a few Google searches, I'd say you probably want the [`pylut`](https://pypi.python.org/pypi/pylut/1.4.1) package. 
Sorry for the frankenpost, I've been researching this since you posted it. Allow me to make sure i've got this architecture straight. Please bear with me, It's been at least 15 years since I've done any sort of web work. You wrote an app to control/read the instruments, then you call that app from your django app to control it, format the instrument data, and output to rest endpoints (json formatted?). From there a seperate web app, a frontend built with Vue.js (with vuematerial components) and CSS, reads from / writes to the rest endpoints. The total effect is that the user manipulates the web interface and the instruments react accordingly. Are there any examples of similar projects I can look at? This kinda makes my brain hurt
Yesterday I refactored a python loop that did something fairly simple. Read csv (rows and columns). Look at each row. If the element in column two is different than the row above, keep the row, else discard the row. Took about 4s to run. This would be a very difficult line to write as a pipe, as it requires inspecting the previous row. You'd have to pipe the same file twice, one with a single row offset, and do a comparison. Not impossible. Just really ugly. Maybe you resort to regexs. Incidentally, I refactored it to use numpy and suddenly it took 1.5ms to run. No more loop, and the number of lines of code dropped from 10 to 3.
This. You should also consider using the `html.parser` module in the Python standard library; it allows you to run functions when certain HTML objects are encountered. [Example](https://docs.python.org/3/library/html.parser.html#example-html-parser-application). Have used it before and you can use it easily for your library by having the "callbacks" write to a temporary buffer, see [io.StringIO](https://docs.python.org/3/library/io.html#io.StringIO).
It is possible but it just takes an infinite amount of time.
:)
`else` in loops should be avoided as its meaning is **completely** different than in a basic `if/elif/else` type of structure. In the simplest `if/else` case, only one of the two blocks will be executed. In the `for/else` case, both blocks of codes will be executed ... **unless** a break statement occurs while in the for loop block, in which case the else block is skipped over.
This is really cool. Are you planning to add more boilerplates?
You must mean `eval`. There is nothing in python called `enum`, unless you mean the python3 enumeration class `enum.Enum`. If there is no way for random code to make it to `eval` then it's pretty safe. Still we like to avoid it because a later change may give user access. So if at all possible, use `ast.literal_eval`, which only evaluates literals and does not allow random code execution. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Yes, I'm sorry, I was just about to edit, but couldn't edit the headline. :( Thank you for a great answer and I will make sure to post there from now. :) (I was writing the post on the fly and realized when I got the error when running the code)
Thanks for the question. I was not familiar with the 2 libraries you mentioned, so I investigated them. JSON-Schema seems like it is focused on JSON validation which seems valuable, but not our core use case. Marshmallow seems like a very comparable project in the following ways: * Nested pure python class definitions * Automatic __init__ mapping from a dictionary including the nested class fields * Inspired by Django ORM * Technology agnostic Two features that Marshmallow has that I want to add to related: * Self and Cyclical referencing of nested classes * Summary-level “validation” support. (Meaning you get a full list of errors, not just an exception on the first error.) Some features of Related different from Marshmallow: * Uses class decorators instead of inheritance to improve code quality and maintenance * Based on ‘attrs' project so get the automatic representation and comparison functionality. * Supports “dictionary” of nested children like found in the docker-compose example. (I couldn’t find a non-list/singleton child example in Marshmallow docs) * Uses single dispatch to_dict (serialization) function which allows the addition of any type of object to the object model. (Just need to register a new to_dict function for that class.) * Main design goal: YAML configuration file =&gt; immutable python objects to drive project functionality
Here's what the api should have looked like: import tomd tomd.convert('&lt;h1&gt;h1&lt;/h1&gt;')
What is "bare metal" about running an interpreter on top of a host of libraries?
Thanks for the heads-up! cookiecutter is great... perhaps I should link to it somewhere on python-boilerplate.com?
Sounds like your priceList is a list of strings not floats. priceList = [float(p) for p in priceList]
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
No problem you have mostly got it sorted out. This is how most of my python/web programs have ended up: * Django as the database minder and actually showing my interface. * Separate libraries or modules where all they do is either perform some logic or interact with a system and return a response. * User Interface (this is done in Vue.js and a few other libraries). The back end(s) (the separate libraries) are triggered by the UI emitting a ZeroMQ request to the django system and have one of the libraries or modules do something with it. I think using REST might be the better way to do it but I am new to web and comfortable in ZeroMQ so I stuck with what I knew. Hopefully that helps clear up the muddied waters, unfortunately, I cannot publish anything I have done in this method but if I ever am able to I will post it. Good luck!
No, that's not how classes work. The best you could do would be to cache the result of first call: &gt;&gt;&gt; class Planet(Enum): &gt;&gt;&gt; MERCURY = (3.303e+23, 2.4397e6) &gt;&gt;&gt; &gt;&gt;&gt; def __init__(self, mass, radius): &gt;&gt;&gt; self.mass = mass &gt;&gt;&gt; self.radius = radius &gt;&gt;&gt; self._surface_gravity = None &gt;&gt;&gt; &gt;&gt;&gt; @property &gt;&gt;&gt; def surface_gravity(self): &gt;&gt;&gt; if self._surface_gravity is None: &gt;&gt;&gt; print('uninitialized') &gt;&gt;&gt; G = 6.67300E-11 &gt;&gt;&gt; self._surface_gravity = G * self.mass / (self.radius * self.radius) &gt;&gt;&gt; return self._surface_gravity &gt;&gt;&gt; &gt;&gt;&gt; Planet.MERCURY.surface_gravity uninitialized 3.7030267229659395 &gt;&gt;&gt; Planet.MERCURY.surface_gravity 3.7030267229659395
You need two pieces. The first is a package that allows you to convert the on-disk representation of an image into a matrix that has the decoded data. This can be done with PIL, PILlow or another similar package. This will leave you with a (typically) 3 dimensional array - which is (in the common RGB case) 1 plane each for the three colors, each of which is the size of the image. Then, you need to do your lookup on each pixel in the image and either put the result back in the same array or into another arrray you can turn into an image later. Given the large number of pixels in most modern images, I'd suggest looking at a combination of numpy arrays (for the image data and lookup tables) and Cython (to make the crunching happen in a reasonable period of time). Good Luck.
Oh you mean the property. I thought you meant creating the instances. 
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [aroberge/experimental/.../**readme.md** (master → 1eaa20c)](https://github.com/aroberge/experimental/blob/1eaa20c1c357a69ca48d44ee00edf25493d7cd42/experimental/transformers/readme.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply di2xewn.)^.
Oh... It seems it didn't contribute much to speeding the script up. Too bad.
Give it a whirl :)
Before complaining I recommend to read the [Rationale of PEP 518](https://www.python.org/dev/peps/pep-0518/#id23) first. 
Dope, wish I had this when I started with Flask back in the day. When using flask with argparse you probably want to create generate your app in a function so that it is not not instantiated everytime you run --help 
Hey, like you asked, I posted the problem here, along with the code. https://www.reddit.com/r/learnpython/comments/6dixao/can_anyone_help_me_speed_up_execution_of_my_script/ Thank you very much. :)
Collision detection using Quad trees. Basically looking to randomly generate objects (point sized) that move rectilinearly in a confined region, and detect collisions using the algorithm. I'm inexperienced in python, so I'm looking to get my feet wet with graphics in python, and then move to implementing the collision detection algorithm. Would love some feedback on the idea, and possible help with which graphics library to use! :D
I cannot agree more. pybind11 has great documentation and you can use lambdas in the binding code, which is extremely useful. Furthermore it has great numpy support.
Thanks. Glad to know I'm not totally lost. If I'm following this correctly: &gt;Django as the database minder and actually showing my interface. You have the vue.js ui in your django template, are using ZeroMQ to connect your instruments to your ui, and serving the whole enchalada with the built-in django server, correct? 
Yes this pretty much sums it up! For maintainability, I break my user interface out into a Django app that I normally call "FrontEnd" but that is included as an installed application on Django. But this contains no python code only the web interface stuff (vue.js, JSMQ (ZeroMQ JS library I use) and any static resources the UI needs (fonts, images, etc...)
Good idea, will do. Thanks.
Ack, you're 100% correct I missed that. The post is updated now with the modifications required in chart.html to display the generated bar chart. Thank you badge!
This is seriously awesome. Especially since MicroPython will usually run on devices slow enough they could be properly emulated in a browser environment. Add some pluggable sensors and this is a great prototyping effort.
I think you can phrase the second part more simply as: In the `for/else` case, both blocks of code will be executed if the original loop iterates over the entire sequence.
I'm sure the presentation would have covered that? I feel like OP was just looking into very briefly mentioning that the "else" keyword could be used in other contexts
There's no way to enumerate the different uses of the `else` keyword without it being confusing for beginners.
You get things like hover out of the box with [plotly]( https://plot.ly/python/bar-charts/#basic-bar-chart).
[removed]
I'm just trying to understand how this tool works: 1. You find the starred repositories for the user, and the users they follow. 2. You extract and clean the descriptions for each, removing descriptions &gt; 300 characters. 3. The descriptions are turned into an LDA topic list. 4. You search for Github repositories using those topics as queries, and return ones the user hasn't starred. Is that about right? I'm trying to build my own recommender, but it's based on one-hot vectors e.g. | User | ProductA | ProductB | ... | ProductN | |------|----------|----------|-----|----------| | A | 1 | 1 | | 1 | | B | 0 | 0 | | 1 | | C | 1 | 1 | | 1 | | D | 1 | 1 | | 0 | | E | 0 | 1 | | 0 | | F | 1 | 0 | | 1 | | G | 1 | 1 | | 0 | | H | 0 | 0 | | 0 | | I | 0 | 1 | | 1 | If I now introduce User I and the products they've bought, I should be able to recommend products they'd like using cosine similarity or another method; LDA was on my list if I treat the user as a document and the products as words in that document.
Nice work. Just off the top of my head 1. Pick a better/more descripted name than MyBot. Maybe SpamBot? 2. Get spam phrases from a configurable json file or environmental variables instead of hard coding it.
If you could collect a large sample of users' stars you could do a recommender. I've done something similar with presenting subreddit similarity but have never extended it to making recommendations. One issue I've been grappling with lately is if a few popular objects feature in a large subset of users, they dominate any resulting graph. I'm trying to come up with a way overcome this. 
Converting some Java to Python 2, and my current Python 2 scripts to Python 3. Even making some refinements to the Python 2 while converting it.
Thanks! I just kind of named it some basic to get it uploaded, I'll probably rename it soon. And that's actually a good idea! I haven't started working with json files yets, but i'll keep that in mind and give it a shot!
Wait, I'm your friend?
No.
Just some style issues: python uses snake_case as convention. If you use an IDE like PyCharm it highlights some style issues (e.g. the case or the space count before and at the beginning of comments). It may be useful to learn to take and manage input from the cli. So instead of reading the input you could change your code so it decides based on the cli arguments if it should send a single message (and which) or if it picks a random one by itself.
I use an RSS reader to check for web site updates; does your website have an RSS or Atom feed, or something that looks like this? https://en.wikipedia.org/wiki/File:Feed-icon.svg
Interesting. Hadn't heard of splinter before. 
Isn't it better to put the `parser` object inside the `main()` function? Otherwise you can get confusing behaviour as it's in module scope. And to be super-picky, I don't like the mixture of single and double quotes around strings, nor the stray spaces at the start and end of the docstrings in the non-Flask main.py file.
"mafiaspillet.no" is the site.
Thanky you!!
Cool! Good luck. It is never too late :) 
Yup, unless you're getting wild with customizations plotly is the way to go
&gt; `endcount = eval(input('Enter the amount of messages you would like to spam: '))` Please no. Use proper conversion to int: def int_input(prompt): while True: inp = input(prompt) try: return int(inp) except ValueError: print('Insert valid integer')
ya i do actually idk how complete it is. I dont have matlab at home and library is down for semester. how can i get the file to u? 
Yup, I love it. Up and running in no time
Octave is complete for all intents and purposes. Try it out and see what you can do. I used it for four years when I couldn't be bothered to go to uni. Once you have something that works, if you feel that you still need it to be translated into Python, you can link to a gist or something.
Also: &gt; add_nums(num_list[0], num_list[1]) add_nums(*num_list)
Perhaps it is running "as the kernel" instead of "on a linux kernel". I don't really know how micropython works.
proselint and write-good linters in sublime text
 # nothing to worry about if you have nothing to hide
&gt; pandoc pandoc is for coverting markdown to html. tomd is for coverting html to markdown.
It's a Linux container
I make it with regular expressions. I have tried HTMLParser. It is not easy for coverting html to markdown for me (Tag pairing, Nested tag, etc), I need help. 
I'm currently just using the basic Python IDLE and Shell. I haven't started looking for an IDE that I'm going to primarily use yet, as I'm still new and focused on getting comfortable with Python. I'm not sure what the cli is. Command Line? 
https://github.com/Alir3z4/html2text/ The recent commit is 3 days ago 
 import tomd tomd.convert('&lt;h1&gt;h1&lt;/h1&gt;', parse_img=False) Not saying you can't have a Tomd instance under the covers. But there's no need to expose that detail to the user. Look at the `random` module for comparison.
Nice, thanks. I was also thinking I could filter edges using a chi squared test to determine the likelihood they'd occur if purchases were totally random. 
You can use the [postmessage-api](https://github.com/plotly/postMessage-API). Alternatively, what I do is use the python api to generate json for data, config, and layout for plotly, send that over a websocket with flask and then just do everything else in javascript. That lets me use numpy, pandas, and plotly in python and gives me the option to do fancier stuff in javascript. 
Do you have the option to re-calculate data based on user inputs? Or are you just manipulating data with javascript? What I ended up doing (after getting frustrated with Bokeh) was just set up a route in flask that would calculate some data based on user inputs (sent through javascript), and output processed data in json format, which javascript would 'catch' on the other end of the ajax call and then update the charts with the new data. Is that more or less what you're doing? I can't tell because I'm pretty new to web development and python.
I suggest wrapping up argument parsing in a function so that you don't pollute the global namespace and also what do you think of `sys.exit(main(args))`?
My suggestions to you: Instead of having 4 stats that are all set to exact value at the beginning, consider using `base = 10` instead. You can then have high_stat = base + randint(2,5) mid_stat = base + randint(-2,2) low_stat = base + randint(-5,-2) And then you can use dictionaries to hold the stats of the different characters. knight = { "strength": high_stat, "speed": mid_stat, "magic": low_stat, } princess = { "strength": low_stat, "speed": high_stat, "magic": mid_stat, } wizard = { "strength": mid_stat, "speed": high_stat, "magic": low_stat, } Now there is less repetition in your code! If you want to change one of the randints, you only have to change in one place, not three. It's also communicates to the reader much clearer that the only differences between the three characters are the order of the stats, and it communicates clearly the strengths and weaknesses of each character. EDIT: Also, be aware that in Python 2, print is a statement, not a function. You don't put parentheses around things that you want to print in Python 2, unless your print command spans multiple lines
Yeah look at OPs posting history.
Agree on both points! Care to make a pull request? Would be highly appreciated ;-)
Thanks, and I think it's a great idea! Would you mind making a pull request? 
Ya more or less thats the gist of it. Some points to note are: &gt; (2) You extract and clean the descriptions for each, removing descriptions &gt; 300 characters. Cleaning is not just removal of description with more than 300 characters. I also clean it with respect to emogis, symbols, numbers and also high frequency words in github like languages it supports, stop words etc etc. &gt; (3) The descriptions are turned into an LDA topic list. The topics are converted into queries of different word lengths to achieve maximum breadth. With respect to your question, the way I would go about is make the framework and algorithm to use as two very separate entities with provisions for plug and play and measure accuracy for each possible algorithm.
Is...this a real thing?
Thanks, I'll have a try
First of all, thanks for writing all this out! I really love reading all of these thoughts. (If anyone reading this has more, please feel free to message me or post them!). With regards to your points about naming, I should explain that the core developers and many contributors have backgrounds in type theory, and these names come from that. Union and Optional have specific meanings in type theory, and so the names are inherited from that. During PyCon I was discussing with Jukka about user friendliness of typing and we agreed more could be done. During the sprints at PyCon, for example, there was work on making error messages clearer and friendlier. Thank you for relaying your opinion on this. I was earlier today looking at an error message, and thought that expecting your average user to understand covariance was a bit much. One piece of advice on the logic behind optional is this: if a Python function doesn't return a value, it returns None. therefore `Optional[int]` means it _could_ return int, or if it doesn't, it defaults to None, since it is Optional to return int. As for the string forward references, [you might want to read this typing.py issue](https://github.com/python/typing/issues/400) (it also touches on TypeVar). Your `TypeOf` example is very interesting. Would you expect it to use `Union[str, int]` or just `int`/`str` depending on what it is called with? Also, I too have noted your observation on Python/C++, and before C++, C# did something similar. Thanks again for the thoughts!
I actually recently figured out how to do face detecting. I used it to create a sort of desktop virtual reality that moves cubes based on the position of a users head. Haven't figured out how to get depth yet, though, so it's not *quite* as good as I want it to be
A CLI in 5 seconds: import fire def main(your_name='The Human Torch'): print(your_name*20) fire.Fire(main) I love this library. [link](https://github.com/google/python-fire)
Hey, thanks for all your work on mypy! Last time I glanced at mypy on github it had about 600 open issues - how much help do you guys need? Is the number going down or with more and more adaption does it keep increasing? How many of those are discussion based issues and how many are bugs? 
Use a VPN then.
Tor
Each GitLab project has its own Docker registry where you can push images to / pull images from. Even for private GitLab projects, which are free. So if you have a project where you need a Docker registry for deployment, but don't want to make the Docker images public, this is a great solution, rather than paying for Docker hub.
I am not an expert myself but I think few factors: - Different Python version - Module path is wrongly linked As you may notice from my live noding videos I rely on Script node to encapsulate my many Python scripts. In reality, a proper Python script should just run inside and outside Blender without any issue. I want it to work with nodes and ensuring data input and output are working. Easier for me as beginner programmer. 
Nice work. I came across a simpler version of this earlier in the week: [dotmap](https://pypi.python.org/pypi/dotmap) Using your `data` example, dotmap provides nested, dot-based access to dict data: from dotmap import DotMap data = { ... } dm = DotMap(data) print(dm.trainers[0].hometown) print(dm.pokemons[1].name) I had searched for a "dot notation" dictionary tool to make it cleaner to use YAML configuration file data within Python (read-centric). I will keep Scalpl in mind in case I need a write-centric version of DotMap.
&gt; I have not found a satisfactory way of expressing that a function may return an object of a certain type, OR None. Optional[type] does not make sense to me semantically [-_-](https://en.wikipedia.org/wiki/Option_type) &gt; Although neat, I find the use of the word "Union" to be abstract and confusing. It doesn't matter how many times I see Union[A,B], i just don't get used to it. So I use Either: Yeah, I also do similar. I just don't get `dict` so I just assign to `map` (It reminds me HashMap). Why would I stick to standards? No one wants that.
you can try `docopt`. copy the output of `grep --help` and give it to `docopt`. `docopt` will do the rest for you, simple :) you may need to modify the ouput of `something --help` to make posix compliant . they reverse-engineered pep8 here https://www.youtube.com/watch?v=pXhcPJK5cMc
Good point, I wasn't entirely clear about my point on the lifetimes, and good catch, that I am somewhat conflating scope and lifetime. This is partly a habit that I picked up from C++, where a variable's lifetime is primarily determined by its scope, and unlike python, cannot be extended beyond the scope that owns it. In python, you are absolutely correct that local variables and global variables have the same reference counting scheme to determine their lifetime. That said, there is still a connection between scope and lifetime. An object's lifetime is the maximum of the lifetimes of any scopes that contain that object. Since the global scope starts at program initialization and ends at program close, any variable in the global scope must have an indefinite lifetime. I think that, in terms of global variables, it is both the lifetime and the scope that are issues. The unlimited scope means that you need to examine all code in order to know what could modify the variable. The unlimited lifetime means that you need to watch the running of the program from start to finish, and that the behavior may not be captured in any smaller test. You are also correct that someone may want to have some behavior customization without needing to have any state in the object itself, though I'm having difficulty as well thinking of any such cases. Perhaps if there were a series of related callbacks, all of would be implemented as methods on a single class, though that would be a rather unusual situation, and would probably be better served with a namespace or dictionary. 
Rebelious nature of Blender artists :]
Hi /u/arkster Scalpl does not aim to be a replacement for you dictionary, like Box does, it just wrap it and let you use all the methods provided by the dict API (setdefault, get, update, del, etc...) Box is really cool if you want to access your keys as attributes, but this means it has to convert your dict/list to Box objects recursively to allows you to work with the dot notation, and it has to convert it back to dict/list when you want to use it with an external library that does not handle Box objects natively (ex: the standard json library). On the opposite, Scalpl is just a wrapper around your data, it means that there no computation overhead when you wrap your data with a Cut object, or when you want to get your data back. from scalpl import Cut import json data = {...} proxy = Cut(data) proxy['do.what.you.want'] json.dumps(proxy.data) # Easy peasy Moreover, Box has to do a [conversion process](https://github.com/cdgriffith/Box#conversion-box) to be able to work with *"some keys like this one", and that adds a computation overhead. You can use Scalpl with keys that contains space :) from scalpl import Cut data = { 'a key with spaces': 'Omagad, it works'} Cut(data).get('a key with spaces') # 'Omagad, it works' 
Very cool.
Mainly since I'm waiting for my work's new servers to be set up since not all of our current ones have Python 3 installed.
Hi /u/red_simplex There is two ways to get around this: First way, you can use whatever string you want as a key separator, so if you know that your keys are going to contain a lot of dots, you can choose another separator: from scalpl import Cut data = { 'computer': { 'ip': { '127.0.0.1:8080': 'At home } } } proxy = Cut(data, sep='-&gt;') proxy['computer-&gt;ip-&gt;127.0.0.1:8080'] # 'At home' Second way, you want to keep using the dot notation, you can do the following: proxy = Cut(data) proxy['computer.ip']['127.0.0.1:8080] # 'At home' 
I've created a cookiecutter render server as a backend for something like this a couple of months ago at https://github.com/jayfk/bakery There are lots of great cookiecutter templates out there. It'd awesome to have a web interface like yours for them! :D 
Bear in mind nowadays AWS lambda may be a viable alternative for some kinds of work, recently interviewed at a place that was experimenting with it for their [scheduled](http://docs.aws.amazon.com/lambda/latest/dg/with-scheduled-events.html) job needs. It has severe [limits](http://docs.aws.amazon.com/lambda/latest/dg/with-scheduled-events.html) though, your workload may or may not fit! The server sizes surely kinda depend on your own needs? If your tasks are themselves big meaty things, you might well end up with somewhat more enthusiastically sized workers. micros aren't that micro for me having grown up with a c64 :-), but they aren't big by modern standards. May be okay to start out with micro instances and get a feel for the load though. Postgres from rds seems fine. Never tried sqs. I'd tend to favor rabbitmq, but that may be path-dependence as it's what I'm familiar with. Certainly identical images for the different node types just parameterised to start different services sounds fine. Not so sure I'd put the webserver and scheduler on the same node though, particularly in a cloud setup where it's so trivial not to do so. It is entirely possible the scheduler *has* improved in the new 1.8.x releases, btw, my experience again was of earlier and probably flakier versions, but anyway. The webserver has to work a bit too to power that slick ui, too! Again depending on your needs (is this a 24/7 thing or what), you may have to give it some more thought, as per very a recent discussion on airflow-dev turns out the scheduler component itself is not (yet) quite suitable for running concurrently, has to be a singleton, though looks like [they are working hard on it](https://lists.apache.org/thread.html/5da7589838a1f972a7f45fe8bb8737af3edbacf9ef61b06d0721fd58@%3Cdev.airflow.apache.org%3E) and it will in fact be soon enough. But that thus needs some external management for the short term to avoid a [spof](https://en.wikipedia.org/wiki/Single_point_of_failure). 
Try taking the area of the box around someone's face, or the diameter/ radius of a circle, as well as physically measuring distance. Then you can plug those values into a graphing calcuoator and graph a regression. Use the function of the regression to find distance in your program. 
What are the benefits to using Tkinter over pyqt?
Check again, pandoc converts everything to everything. &gt; It can read Markdown, CommonMark, PHP Markdown Extra, GitHub-Flavored Markdown, MultiMarkdown, and (subsets of) Textile, reStructuredText, HTML, LaTeX, MediaWiki markup, TWiki markup, Haddock markup, OPML, Emacs Org mode, DocBook, txt2tags, EPUB, ODT and Word docx; and it can write plain text, Markdown, CommonMark, PHP Markdown Extra, GitHub-Flavored Markdown, MultiMarkdown, reStructuredText, XHTML, HTML5, LaTeX (including beamer slide shows), ConTeXt, RTF, OPML, DocBook, OpenDocument, ODT, Word docx, GNU Texinfo, MediaWiki markup, DokuWiki markup, ZimWiki markup, Haddock markup, EPUB (v2 or v3), FictionBook2, Textile, groff man pages, Emacs Org mode, AsciiDoc, InDesign ICML, TEI Simple, and Slidy, Slideous, DZSlides, reveal.js or S5 HTML slide shows. It can also produce PDF output on systems where LaTeX, ConTeXt, or wkhtmltopdf is installed.
I use pdfminer3k
Neat!
When I understand correctly ... So, assuming you have a .py file/script that has a function def do_something(argument1, argument2, argument=None): # do something return something you want a tool that let's you run this function by providing arguments from the command line? E.g. python myscript.py --argument1 1 --argument2 2 ? 
If you're looking for the best way, likely www.crawlera.com. But it's not free. Second best is a VPN service, also not (likely) free.
It's already there, on essentially every platform Python runs on. You can trust that if the user can run Python they can run Tkinter without having to do much more. 
This is correct. You would however have to specify the API of the command, like: from reverseargparse import Command, Option, Argument grep = Command( Argument('pattern', type=str), Argument('file', type=str), Option('-e', '--extended', flag=True), Option('-i', '--case-insensitive', flag=True), ) grep('pattern', 'myfile.txt', extended=True, case_insensitive=True) # Just getting the command line arguments would be fine here, I can fill # in the rest myself.
Hi Reddit! I usually have little time to watch movies, and as I am between jobs and have a month off, I figured to write a little something to help optimize my movie watching experience! Movie Time is a movie recommendation system based on the GroupLens/MovieLens dataset. It uses the provided genome tags to relate movies to each other with TF-IDF vectorization, and all is presented through a django app. The django website looks like crap (I'm no frontend person at all) but it offers a homepage for aggregated recommendations of what you "like", and a "give these a chance" queue based on what you "dislike", along with basic search and a movie detail page where it lists the 40 most similar movies to it. Hope someone else likes it enough to use it too!
Thanks for sharing your knowledge, it will be very useful!
Wow, absolutely gonna use this later, thanks!
[The docs have the answers](https://docs.python.org/3/library/urllib.request.html#urllib.request.urlretrieve). Also, /r/learnpython.
Wonderful job!! Thank you 
Any modern toolkit, like gtk. Tk (and tcl) have never taught good practice. Learning them makes you stupider as a programmer and dooms your followers to awful maintenance. 
'Character' can be a class, and 'knight', 'princess', and 'wizard' can be subclasses. This would allow you to be more specific with 'Special.' 'Room' could be a class with logic deciding what room the player is in.
Is it better than pypdf2?
Yeah I want to make it like a text dungeon crawler so there's different room stlyes. Combat part is going to be tricky. I haven't decided on what to use for specials yet.
Classes used as functions are conventionally lowercase. See map sorted filter reversed ...
Those are builtin functions/classes, so they are lowercase. User defined or library defined classes are generally supposed to be TitledCased as far as I'm aware.
enki, sololearn, udemy, udacity
You might want to check out tri.declarative for a way to easily make the API look a lot nicer. 
If you do decide to make it yourself, you could probably achieve most of it with os.system calls.
sin is a noun. so is cos. as well, plot is a noun.
Good luck trying to teach students how to install qt and deploy qt apps. Kids these days can't even use folders because their tablets and phones magically find documents (ie music and video) for you. I kid you not. I've seen 16 year old geeks with no idea how a hierarchial file system works.
Thanks for the effort
&gt; Easy and readable syntax (In my opinion) That's definitely not the case. Qt in general is so much much modern. You have to write less code to achieve the same thing. The way that TKinter handles layouts for example is really terrible imo. Does it support Model/View programming except for those TKinter variables? You should really try PyQt if you ever want to do some serious GUI programming. There are actual huge apps using it with success.
It's about getting something on the ground before reaching for the stars ;)
That's cool, im just using it on a Windows system for a lot of train journeys I could use to videos for. Windows Task Scheduler has a lot of handy features that make reguar scripts like this easy, so I just have it set to run minimized whenver i login. Youtube-dl doesn't download a video if its already been downloaded, so its very minimal load.
Been meaning to tackle tkinter for a while, thanks for the resource, this may be the basis for my next project.
This is awesome, I've been looking recently at using YAML with ansible for automation projects. How could you incorporate YAML scripts in ansible playbooks into python scripts and vice versa?
What is [that](https://avatars1.githubusercontent.com/u/5203948?v=3&amp;s=400)?
Thank you very much for doing this. While it is true that PyQt is more pythonic and contains more widgets, the fact that Tkinter is included by default with many Python distributions, and that it can be used freely without worrying about licences, makes it an ideal resource for hobbyists to build their own GIU applications. This book, together with the code samples found on your Github repository is going to be helpful to very many people.
I've tried pdfminer, pypdf2, and due to the encoding issues, and text line wrapping issues, I had the absolute best results using pdftotext.exe from foolabs. It's in a package call XPDF. Just using os package to send commands to the exe. Also have linux and mac versions. The results are great. They also have pdfinfo, pdftohtml, pdfimages and pdftopng applications that all work terrific. Very useful open source package for working with pdf data. A new package was just released recently called pdfplumber, but I can't seem to get it to work properly yet. 
I also had a thought, would a data set like this be more efficient in a json or a sql database? Let's say I wanted to add another phrase set so that the user has multiple lists to choose from? 
Good to know :) 
I'm not sure if I agree with your comments regarding typevars. Honestly, I think the best approach is instead to just give the typevar a semantically appropriate name -- if you want to constrain a function so it operates on only a fixed number of types, then that must mean each of those types must be the "same" in some way, or mean something similar within the context of that function. In that case, I would just give your typevar a semantically meaningful name, which takes care of the readability issue: from typing import TypeVar UniqueId = TypeVar('UniqueId', int, str) def foo(bar: UniqueId) -&gt; UniqueId: ... I'm also a bit curious as to why you're using typevars with value restrictions so frequently. In my experience, it's relatively uncommon to want to treat a fixed and otherwise unrelated collection of types as being semantically the same -- using typevars with upper bound restrictions seems much more common (e.g. doing `T = TypeVar('T', bound=ParentClass)`) or even just plain typevars (`T = TypeVar('T')`). Of course, I can't say for certain without looking at your code, and perhaps you do legitimately need to use typevars with value restrictions frequently, but as a suggestion, if you're using them all over the place, perhaps the right solution might be to refactor your code a bit so your types are more consistent?
Damn. I wish this popped about 2 weeks ago when I was writing a ui for a preventative maintenance scheduling app. On Tuesday I may have to go back and rework the mess I made. It was the first gui program I've made.
I'm pretty sure creating it yourself is not what you want to do. It sounds like you are too much focusing on your idea rather than what you are trying to accomplish. Why can't you just use `sh`? Why do you have to have it your way? Maybe insight in this could help people point you to other resources, or you might realize you're focusing too much on the technical side? Maybe I'm completely off :)
Ouch, that really hurts, will update it tomorow
Thanks for creating and sharing. **Comments** What version of Python 2 or 3? Do you focus on core tkinter? Looks like you do. Some tutorials start using TTK which doesn't expose everything for all the widget types. I have similar rationale for pushing tkinter. * Included the with windows installer * Cross platform * One Less Dependency * Simple and Quick * Proven with TK/TCL 
Syntax is the form of what you wrote, like using the wrong indentation level or not putting a colon at the end of a if statement. Semantic is the meaning of what you wrote. So an example of what I'd call a semantic error is an off by one. I think about the in terms of the sentences of model theory. The rules that describe valid sentences are syntax. The rules that describe what a valid sentence means as semantic. The terms are not particularly well understood, in my experience, so a little more context would be nice for your particular situation. What was the context in which the words were used?
Gray + illegal can hardly ever be called "the best way".
Whats the message?
Link doesnt seem to work? The one with the message. 
how bout this: https://image.prntscr.com/image/6fb9ae86a46d40ac9ed7744495a7dfdd.png
I too have had the best results by using `pdftotext` along with its `-layout` option for the text extraction part. One can then use string methods and/or regex to then process the produced output. Here's an example *"guide"* of the process. https://kaijento.github.io/2017/03/28/pdf-scraping-tim-hortons-invoice/
If dynamic linking properly it is possible to keep your custom code private, legally. Distributing apps via some online app stores is not possible due to conflicts with the LGPL license.
This is amazing! After looking through your code, I wish this was around six months ago when I was learning Tkinter. I will definitely use this to help my friends learn to code in the future. 
.. did you fill out the client ID field ?
Syntax is about whether what you wrote is grammatically valid. Examples are things like leaving off the required colon at the top of an if/while statement, unbalanced parentheses or braces, or things related to the changes in the language's grammar (e.g. `print` was a statement in Python 2.x, but became an expression in 3.x.) But being grammatically correct is necessary but not sufficient for something to be a correct program. Even in English you can imagine countless examples of sentences that are grammatically correct but don't make any sense, for example: [Colorless green ideas sleep furiously](https://en.wikipedia.org/wiki/Colorless_green_ideas_sleep_furiously). Semantics relates to the meaning of something, for example: items = [1, 2, 3] print(items[42]) Syntactically there's nothing wrong with that, but it's trying to access an index that doesn't exist. The meaning or intent behind the expression `items[42]` is invalid, because that's not a valid operation under these circumstances. It could be perfectly fine in other circumstances, but not this one. And that gets to another difference between the two. Detecting a syntactic error is nearly trivial, in the sense that you can write a program that can reliably do it with perfect accuracy every time; that program is Python itself. If a script compiles, then it's syntactically valid. But automatically detecting every kind of semantic error is much harder, to the point of being utterly impossible in the general case. If it were possible, bugs would not exist, because you could just run every program through your checker. Certain (simple) types of semantic errors can be detected by automated means, and that's referred to as static analysis. But again, because detecting a semantic error requires knowledge of the context of the program at runtime, the capabilities of static analysis (which refers to the fact that you're just looking at the code without running it) are quickly exhausted. And due to the ramifications of the [halting problem](https://en.wikipedia.org/wiki/Halting_problem), it's impossible in the general case to write a program that can simulate the dynamic execution of an arbitrary program.
You need more tests.
This should really be in a blog post, and you could make it 50% shorter and still have all the same points. 
You can have separate keyword arguments apart from kwargs that are relevant just to your class.
I did that though
I think the effort on getting wxPython into 3 space is great. That is irrelevant to the fact that I can't get Tkinter to easily die on me. Not as true with wxPython. I'm running our ERP system with Tkinter on 3.5. It haa been rock solid. 
alright, so when i run it with the first part added, i get [this](http://prntscr.com/fcvzy8) EDIT: but when i go to the URL printed, it says "bad request"
I love bash. I prefer bash for scripting simple stuff and only prefer Python for that if either I can't use bash (build server insisted on sh even though I said otherwise) or is going to be more than a dozen lines long (not counting breaking up arguments) 
I had to give up an upvote for the muttering statement. That made my day XD
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
&gt; Easy and readable syntax (In my opinion) &gt; Comes preinstalled with python &gt; No licence issues I just started on making a GUI for an existing back end at a job I have this summer. I am using Tkinter and it is very easy to use, as long as you find a decent tutorial with images as to what certain lines do. As /u/CorrectMyBadGrammar mentioned writing more code in Tkinter, I find that to be a pretty bad argument. You can make functions that incorporate making a certain type of window, and so really if you are using proper programming techniques (if you write the same several lines of code over and over, you are programming wrong) then you can make a very generalized function that will make a window with a fairly simple syntax yet still customizable. This, and the fact that it comes with Python makes it pretty worth it for GUI development.
Doesn't seem to be any advance over [Raymond Hettinger's recipe](https://code.activestate.com/recipes/577504-compute-memory-footprint-of-an-object-and-its-cont/).
I personally have had no stability issues with wxPython in Python 3
Try /r/learnpython. But be sure to provide more information than &gt; doesn't seem to work. &gt; did not work either. Show the command you tried and the error you received, at least. 
You are AWESOME!!! Running sudo python setup.py install solved it. Thanks!
is this all just a canned message? I didn't ask a question, post homework or ask a "How do I" anything. /r/LearnPython has no link button.
I agree. All of the text should be san-serif, and the code should be san-serif and monospaced. It looks less noisy. Otherwise it's a great guide and I will be referring to it for help with some projects.
There are two ways to look at this. Either you can go through the whole oauth flow, or use your username and password in the script. In that case you can use `reddit = praw.reddit(client_id=ID, client_secret=SECRET, username=USERNAME, password=PASSWORD, user_agent="xxx")` (as it says in the praw docs ;) ) and it should work.
I find it sad how people play Tkinter down so much. If you complain about a messy and bad code, then blame the programmer and not the Tk. If a person needs a small utility program Tk is perfect for that. The fact that you can build custom classes for your project based on the tkinter classes removes the problem of gluttered and messy code. I always build up cButton, cLabel, cEntry...etc classes which inherit from base Tkinter classes to have more control and less repeating calls such as .pack() or .grid(). Only complaint i have with Tkinter is the lack of transparency support for images. Button background image with alpha etc.
Thanks very much for your feedback, I completely agree. Changing the font in Latex is hideously counter-intuitive, but I've gotten it to work. The book is now in a sans-serif font. Thanks again.
I have written in 3.6 but I believe the code should work in 2 if you rename a few of the imports. Yes, ttk styling is covered in the final chapter, the earlier ones use tkinter's widgets unless they are ttk-exclusive, such as the Notebook.
That's a cool idea, thanks for sharing.
Set the `user_agent` parameter, reddit requires it to be set. `reddit = praw.Reddit(user_agent="bee-bot by /u/coolguythatscool", ...)`
I already have that set
making a a tool that teaches blind people how to type. it involves a text editor, a keylogger, and python textt-to speech to tell the user how and which key to press, relative to thier current key.... hope it works :)
yes of is the verb placed in between the function noun and the argument noun
There are a lot of good languages to start with, however most of the ones you will read/hear about all fall into the same general family of languages (C family languages). The good thing about that is that while they are all very different, they are also very similar. That is, the specific syntax of each language is different, but they all generally do things in a similar way. In terms of ease of learning that will get you started quickly, you're here in a Python subreddit and it's a good choice. Most university first year courses include both Python and Java. Python is a cleaner syntax, though both are good choices. There is a platform based on Java called Processing 3 and it is also a good choice to start, because it is extremely easy to learn, but very powerful. I would really recommend taking this free Udacity course: https://www.udacity.com/course/intro-to-computer-science--cs101 It's python based and the style of teaching is very good. From there, there are a tonne of other courses on Udacity you can take all for free that will really get you going. Also, the best way to start in my view is not to learn programming by learning a language. Learn programming by trying to create things. The choice of language just helps you create things, but actually trying to create something is the best way. Program, program, program. Nothing really to be cautious of. Jump right in.
Another advantage is Qt Designer, a program to (as the name implies) design a user interface in a graphical way. You can save the result as an XML file, load that into your program and you'll have your window set up automatically. Unless I am very much mistaken you have to create TkInter user interfaces programmatically. Using Designer saves an enormous amount of code, and it makes it much easier to change the user interface later on. The only thing I would like to add is, if you're interested in using Qt as a user interface, look into PySide. It's an alternative Python binding for Qt that is 99% identical to PyQt, but it is a little more "pythonic", and it has a much more lenient license.
I've recently started, and I'm well on my way to becoming a beginner programmer. I highly recommend MIT 60001- Introduction to Python and computer science. Use the textbook, listen to all lectures and do the tutes. It's challenging for a beginner, but if you persist, you'll get some amazing results. 
/r/learnpython would be a good start :)
And in 2034 I will be able to use it (corporate bullshit)
Eh? What does that mean?
Depends how good your bot is. If it perfectly replicates human behaviour they have no chance. If they load just long enough for it to count, then open a session at a new IP, they'll pick it out pretty quick. They can also note the ratio of Google account views vs Anon views and detect discrepancies.
I think he means if you want to do this (which is a controversial subject on whether it is right or wrong) then you can make it yourself, other people may not be willing to help you.
You could probably do it with Selenium and a lot of IPs. However it would be a lot of work because google is notorious for denying bots and web-crawlers which is hilariously ironic.
Licensing is not a problem for me. I tried PySide in the past, but it seems unmaintained and Qt5 is not fully ported.
Heya, looks like a cool project and I appreciate the documentation effort on Readthedocs. Personally I would like to see a simple hello world use case on the GitHub Readme and not just a link. Just a little teaser to make people interested... Or something like a feature list if that's a thing. Basically why should anybody use this lib?
Looks much nicer, thanks u/Dvlv!
I updated the documentation
&gt; and it has a much more lenient license. Still requires Qt though, which has it's own licensing restrictions right? 
Good job, looks great. :) 
Messing around with PIL and Pillow. Currently creating various fractals
I would just like to say, the [PyPA](https://www.pypa.io/en/latest/) suggests that if you are installing packages via Pip on UNIX-like systems, to do so using the `--user` flag. If I remember correctly, it mostly has to do with Pip being imperfect, and the possibilty that you could make a real mess of the Python environment on your system. So, I would not suggest running Pip under `sudo`. 
It's the opposite: I avoid using TypeVar, but it seems to be the only tool (available out of the box) to express type relationships between elements of a function signature. Admittedly, these relationships exist in only a small number of cases (surely less than 5% of functions), but when they do exist, they are important. If you point out the portion of text that suggests I use TypeVar all over the place, I will edit it.
Working on how to make this https://github.com/giantas/sorter efficient and widely usable
I believe you are supposed to use 4 spaces. It seems he used 3. 
In almost all languages, numbers are immutable. This is illegal. &gt;&gt;&gt; 3 = 5 SyntaxError: can't assign to literal But variables are mutable. You can replace a variable's numeric value with another. &gt;&gt;&gt; a = 3 &gt;&gt;&gt; a = 5 # 3 is forgotten &gt;&gt;&gt; a 5 You can also use numeric variables to calculate new numbers without changing their values. &gt;&gt;&gt; a + 2 7 &gt;&gt;&gt; a # 7 is forgotten 5 No surprises there. Everything is exactly what you'd expect (I hope). Strings are the same way in Python. Can't change them. But you can make new strings based on old ones. The `.replace` method creates a new one with a substring replaced. &gt;&gt;&gt; a = 'dog' &gt;&gt;&gt; a.replace('o', 'i') # create new string 'dig' &gt;&gt;&gt; a # old string is still here 'dog' &gt;&gt;&gt; a = a.replace('d', 'fr') &gt;&gt;&gt; a # "dog" is forgotten. 'frog' Unless you save a string expression (*e.g.,* assign it to a variable), it's forgotten as soon as it's used. 
This. You only want to use a condition in a comprehension if you are checking each element against the condition
Using blender with python, to visualise nodes. This is genius man. Pure genius!!!! 
Try loading Scikit data with Sverchok and/or Animation Nodes. 
Google it: https://www.google.com/search?site=&amp;source=hp&amp;ei=X9wqWfTPNMXgmwHe9ImoDQ&amp;q=email+in+python&amp;oq=email+in+python&amp;gs_l=mobile-gws-hp.3..0j0i22i10i30k1j0i22i30k1l3.1398.5543.0.5854.22.19.3.3.3.0.181.2585.2j17.19.0....0...1.1j4.64.mobile-gws-hp..3.18.1983.0..5j0i131k1j0i10k1.wgQTgHQ0wzI
This is exactly my background, having seen this, I think I could visualise machine learning algorithms and actually data in 3D, which could be a new experience compared to matplotlib and the likes. Any links you started with for setting things up?
Snigger if we're being English 
&gt; There's no discussion, it should be like this: &gt; &gt; if condition: &gt; results = [foo(i, bar) for i, bar in enumerate(data)] &gt; Yap. This would be the equivalent of the for-loop the OP mentioned. The other solution that was initially proposed, i.e., [foo(i, bar) for i, bar in enumerate(data) if condition] would be a different for loop construct, i.e. for i, bar in enumerate(data): if condition: foo(i, bar)
This man deserves some gold.
Just tried it. The from_name variable does not work in USA. From the documentation: From A maximum of 11 characters or 12 digits, we recommend you only use letters and numbers as some handsets don’t correctly handle punctuation. If not specified, your account default will be used. If you’re sending with a text from address and your message isn’t delivered try again but change to sending from a telephone number - some international networks place restrictions on the from addresses they’ll accept. Due to US telecomunications rules you’re unable to set the from address when sending to the USA - the text will always come from 43704.
All texts show as being sent from 43704 with Verizon/Android. DAMN IT 
The best way would be to get yourself involved in a project. Work on something and cite that as an example of your self-learned Python skills. That would also show them that you are self-motivated. Good luck!
That seems intuitive and useful, having a project to point to would be a good way of demonstrating hard skill. Thanks! :)
Sorry, I am a little new to the coding community (still learning). What do you mean by white paper? I assume actionable code means my code solutions to problems I have encountered or worked on? I am currently working on code academy and then I will look into a boot camp!
Thanks for all your replies, however my purpose is to run bash and get its output from Python (while allowing me to input into it). The closest I could get is by running bash with subprocess.Popen and sending commands with subprocess.communicate, however this approach causes bash to quit after a single command. Reading stdout directly causes the program to hang, so I think I'll try threading to run in one thread and get output in the other.
I don't have an open source example, and I don't have time to come up with one, but the gist of it is that SVG is just XML, so Jinja can be used just as if it was HTML. Start building a template file with a bare skeleton SVG. Use raw or preprocessed data as context when rendering. Add some loops or whatever you need, render values where you want them. The resulting string can be saved to an .svg file, inserted into HTML, served directly...
Yep, sadly doesn't works in the US. :(
Thank goodness for that. 
people still do it... just not like this
What textbook is it?
Remindmebot! 45 days
/u/kbob wrote https://www.reddit.com/r/Python/comments/6dsu7f/comment/di5bdga recently, providing a good explanation for immutability. You're assigning a reference to the local `comments` variable, then you're assigning a new `Comments` object to the same variable, replacing the old reference. class S(object): c = 5 y = S() x = y.c x = 6 print(y.c, x) 
Thanks for the list. I wouldn't necessarily call those "huge apps", though. Dropbox as an app is largely ignored in favor of its Explorer functionality, and Spyder, while it is my personal preference, is still full of bugs, complaints, and features that are just plain *missing*. QGIS may be notable, but I've used it before, and it still feels clunky and awkward.
Tried it - put a phone number in from_name, and it displayed on my phone like it came from SMS [the same number the confirmation code came from]. Custom names worked normally. LG G5 running on Nougat. EDIT: poland for reference, +48 country code
By what means? Asking for a friend.
Well, nothing as huge as Visual Studio, but there is a legit IDE, and as far as I know Callibre has a looot of features. Anki is huge in a sense that it is an undisputed leader in its category, although admittedly it's not because of GUI.
 # TODO replace argparse with docopt
I once wrote a script that crawled a rap lyrics site and chose random lines from a random selection of top rap songs, then had it send it to my brother on a schedule. I started looking at the kind of lyrics it was sending and I had to tell him after a few messages. When you're his age with kids I think it's a little worrying to get texts like "my 44 will make sure all your kids don't grow".
Sorry, I am still learning, thank you for the sugestion! I do not want to have my code be inefficient.
24k lines? Wtf? You should consider splitting it in multiple files.
This sounds really useful. Thanks!
Both your examples work as expected (no booleans): &gt;&gt;&gt; import yaml # $ pip install pyyaml &gt;&gt;&gt; yaml.load('unit: F') {'unit': 'F'} &gt;&gt;&gt; yaml.load('unit: N') {'unit': 'N'} 
OP, your title reminds me of a line in one of the Strong Bad emails where he asks someone, "What kind of powers do you have? [Do you use them for good, or for awesome](https://www.youtube.com/watch?v=UtgDXL1V9wg)?"
Not gonna help you be evil.
Than you! I did not know about the parentheses, and I have tried python 3, and it is very similar to 2, so I will be switching (the video series that I learned it from was for 2)
This is extremely interesting!! Could you provide the link? 
Reminder. 4 hours.
In theory you could take Python code and compile it straight to WASM. I believe this is one goal for the BeeWare project. They already do something similar for Android (Python to JVM bytecode). At that point you don't need to ship the Python vm to the customer, it's just a binary blob that runs in their browser. 
I think the best option would be to code afresh because size is so critical to the web. Cross compiling to WASM would create a pretty large binary. I think the best option would be to re-write to focus on speed and size. I have started writing some C++ classes for Python types, but I am working on other projects right now.
when I started writing the application, I knew nothing about python. I just wanted to write a small programme for personal use and get work done as quickly as possible without learning anything about python. But once I started coding in python, I had so much fun that I just kept on adding features after features just for the sake of programming. Hence, In the beginning, I made some very bad design choices mainly about declaring variables. I got confused about how to apply pass by value or pass by reference concepts in python. As a quick fix, I declared many essential variables as globals (which I avoid when working with other languages). And because of these globals, the code became unmanageable mess after some time. Therefore, I don't think, it's possible to split that file easily, without completely breaking the programme. I also tried many times, but without re-arranging those globals it is difficult. And arranging those globals means complete refactoring or rewrite of very large piece of code, which will be too much time consuming. By the way it was still good experience, since working on this application gave me first hand experience of what is meant by technical debt. 
I forget the name... There used to be a service where you could put two phone numbers in, and force them to call one another, and you could listen in as well. I think it called them both, spoofed the number, then connected the calls. Still... 2012 was a lot of fun.
Data Science from Scratch. Majority of code doesn't compile, may be a previous version of Python. 
Yeah, I can attest to this as well. If you are just making a simple project, this is the simplest and cleanest way to deal with installation. It's just that it can mess things up if your project uses a dependency that wraps a library. For example, I have issues with pygobject and python-libsass when working inside virtual environments. I think the solution to it is symlinking the library files into your virtual environment, but I tend to stick to user installs in that case. 
I wouldn't say "nice things"; it is working as designed, which is to spam people with useless sms and occasionally for multifactor authentication. I'd say: This is why we keep getting shittier things.
But far less fun :(
Yeah, they should be using 2.7.13 rather than 2.7.10.
https://en.wikipedia.org/wiki/White_paper &gt;A white paper is an authoritative report or guide that informs readers concisely about a complex issue and presents the issuing body's philosophy on the matter. It is meant to help readers understand an issue, solve a problem, or make a decision.
I gave him some gold.. before I checked it for myself -_- Funny story.. this was the first time I gave someone gold. On the first time I messed up and gave myself gold.. second time he got it.
I hope your script/shell is sandboxed or runs with very low system priviliges then...
And, addendum to above: health.append(damage) health=sum(health) can be replaced with health += damage (or -= depending on how you count ;-) )
Thank you! I will take a look at this when I wake up. :-) I have plans for getting around this, seems relatively simple to get done.
I'll make my functions have single responsibilities and no side effects in the morning, thanks!
No. Hard to call Python 3 better than 2.7 until about 3.2. 3.0 had some serious IO performance issues.
Yes I was rather disappointed about that. I was hoping to see how to spoof SMS sender directly with an SMS modem.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
late for dinner
How about generating 2 random integers and hard coding a 0 into a list. Then use `random.shuffle` to randomize the order of the list. Then assign them to your variables. 
/r/learnpython
https://micropython.org/ Also, I think worrying about the GIL is silly. You have async which covers 99.9% of what would hold you up in a web app. If you need to do heavy numerical computing, why are you doing it in python in javascript in a browser? I think the need for mulithreading CPU bound code in a web application is just about zero. You'll give up Numpy, numba, and all the other awesome performant libraries, so this is already an environment where fast numerical performance has little chance.
If this is different than `sys.getsizeof` you might want to explain how in the readme
You could use randint to give you 0, 1 or 2, then use that value to determine which color to set to 0.
Oh, *that's it*. ***IT'S GOING DOWN, MOTHERFUCKER!!***
Yes both deserve a try, different flavour :) Sverchok is more advanced but I also like the vectorization. AN is not yet complete but forming nicely and very friendly for animators.
if you dont know if you hav an IDE then you dont have an IDE :) dowload pycharm for windows and then just build something - anything, doesnt have to do very much, just keep you interested. Ideally, come up with a project goal that you are pretty sure you don't know how to achieve, piece it up into small problems and deal with them one at a time.
Thank you!
Yes! I had tons of fun with this thing back in the day. 
Yes: use `getattr()`. return getattr(Album, name) --- There's a lot of other problems with your code. I suggest you ask /r/learnpython about your overall goal (not just how you think it might be solved). Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
I guess we are going into a declerative vs imperative discussion. I see your point, and it makes sense callig procedures as verbs.
I certainly won't abandon it, since I use it regularly. Only problem is that, the programme is far more stable now. I've optimized it's cpu and memory utilization in every possible way, so that it can be installed on any low powered computer. Recently, I installed it on 6-7 year old atom based netbook, and it worked flawlessly on it. Therefore, I'm little bit hesitant in making changes in stable code base, even though it's messy. But I'll try to make changes in small steps if possible.
121 lines of code for a slider. Get fucked.
Some people already gave you good hints. But I will give you mine: from multiprocessing import Pool def foo_wrapper(i_bar): return foo(*i_bar) if condition: with Pool(8) as p: results = p.map(foo_wrapper, enumerate(data)) If you data is big, you will be happy to use all your cores.
Hi everyone :) Any other feedback on this project ? (regarding the code/packaging/bugs/etc) Thanks in advance, and have a good week !
I would recommend you to try https://pyautogui.readthedocs.io/en/latest/
What exactly is the API code?
FUD? I literally linked to the part of the YAML 1.1 spec that says that Y and N should be implicitly coerced to boolean. If you need further proof, here's the [yaml.org official YAML 1.1 quick reference](http://www.yaml.org/refcard.html), which also has Y and N in its list of bool examples. On further investigation, you're right that PyYaml claims to be a YAML 1.1 parser; I have no explanation for why PyYaml doesn't conform to the spec in this regard.
I used to do this to mess with people
It works perfectly in Norway. Holy shit this is going to be fun!
Hey this reinforced some stuff I was looking at last night - thank you! You helped at least one mind. 
&gt; Python objects are basically dictionaries, so you can always add/remove/change arbitrary attributes. NB: not quite the entire story, the class could define a `__slots__` (or inherit from a namedtuple) which aside from making instances slightly smaller also restricts valid attributes to only those.
Now I know what my plans are for the next hour or so.
Updated! https://github.com/1DC/PynamicDNS Can't tell if I made it better or worse. The main thing is still yet to come. I've got some serious cleaning to do with this. **Edit**: Main check added
I think they're deep for a beginner programmer who doesn't even know what a data structure is. A beginner is someone who doesn't know what a function or a variable is, nor do they understand why you need to initialise a class or what the difference between a class and an object is. I'd say that dictionaries are definitely intermediate level in comparison. And in between dictionaries and the basics there are many other important concepts, for example that parameters are passed by assignment and therefore mutable objects are not copied in function parameters. What I'm saying is that it's a skewed perception that python is a "basic" language, it has a very rich and complex feature set that many beginners don't realise
It explains some "Oz Lotto" spam I got recently - be buggered if I could figure out the number it came from. Forwarded it to the ACCC SMS spam hotline anyway.
In memory Sqlite won't scale across multiple application servers, so you probably don't want to do that. Memcached is meant for ephemeral data, not as a data store. If you want something fast, which still offers persistence, and don't want to use a traditional rdbms for whatever reason, you might take a look at Redis. 
I have also tested pdftotext. The problem is he joins the contiguous words.
I have the same problem. How did that work for you?
It's really not weird that a float cannot be used as a key because they have a really loose idea of equality. Functions are definitely simple but they can get complicated quickly, for example higher-order functions and closures. Tuples are pretty simple, I'd probably teach them before dictionaries since again it seems to be something that beginners don't know much about. Many other stuff though like closures, generators, decorators, magic functions, iterators (everything else on my list) are definitely advanced topics in python though, and there are many more than that of course.
Instead of forall(a = slider(1,10,0.1), b = slider(1,10,0.1)).show( plot(lambda a,b: [np.arange(1,10), np.sin(np.arange(1,10)**a) + b/a])) ...something like... class SomePlot(Plot): a = Slider(range=[1, 10], step_size=0.1) b = Slider(range=[1, 10], step_size=0.1) def plot(self): a, b = self.a.value, self.b.value return [np.arange(1,10), np.sin(np.arange(1,10) ** a) + b./a])) This would be much nicer I think. Note that "a" and "b" aren't positional, but names of variables, things generally are named, it's not one huge line that is unreadable but one specification of the GUI and one of behavior.
This is pretty cool. I have a similar thing for SQL queries laying around that I will publish when I find the time for it. Is this best done as a filter though? Wouldn't it make more sense in the handler and/or formatter? When done in a filter it's not yet known how the log message will be used, and if it's even written to a color capable terminal window.
You don't need to give a number of processes; if you leave that argument empty [multiprocessing will just use the number of threads that your system has.](https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing.pool)
Interesting, thanks for sharing! What do you think would be the most interesting cookiecutter templates to start with?
Perhaps it's used in various forms, but it is also a Python thing ;) See also https://stackoverflow.com/a/6289494/5433572
Mix of single and double quotes are fixed now!
Consider the following class method class MyClass: def f(self, v): self.v = v So first we create an instance m = MyClass() When you call m.f("value") the reference to the object is inserted magically as the first arg. So you are effectively doing this MyClass.f(m, "value") Or another way to think of it is m.f(self=m, v="value") I know this can seem obtuse, if self is required why dont the methods just "know" which instance they refer to? Just one of the caveats of python.
Not really, if you leave that argument to none, multiprocess call "os.cpu_count()". It's the number of cores, not threads. I experienced case with os.cpu_count() fail to give you the number of cores, that's why I hardcode it in the example. But you are right, leaving that empty is better.
please, please, please try to avoid `from module import *`. It is almost never a good programming practice. First of all, you lose all of the great advantages that come with good namespace separation such as clear scope and self-commenting code. Second of all, you make it really hard to know where things came from. Is `randint` part of `random` or `neopixel`. What if they *both* have a `randint` function with a different API? Third of all, it is against a standard convention. There aren't rules for these, but generally, you see things like `import numpy as np` and that is a pretty standard convention. There are probably a few edge and corner cases where it makes sense to do a `*` import, but they are few and far between
I agree. I have no clue why I added this a filter at the time (it's not all that new). And I understand the different use-cases for filters and formatters. If I remember *correctly*, my thinking was that I did not want to impose a message format to the end-user (in this case a developer). If I would implement it as a formatter, the end-user would not be able to change the formatting of the message without killing the colorisation. Using a filter circumvents this. And the way it's implemented it tries to match the default Werkzeug format. If it fails to do that, it simply does nothing. Not sure if this could be achieved transparently with a formatter. It was meant to be as straight-forward and unobtrusive as possible.
I think /u/kbob was referring to brackets as open and closing of a block. Not their very existence. for ii in my_list: #{ do_stuff() #} That looks dumb in python. If you really want brackets though, you can do from __future__ import braces
I see that `deep_getsizeof` is the only real function. Does it handle situations were one object references another? For example: itemA = really_large_list dictA = {'A':itemA} `dictA` will be larger than `itemA` but not by much. Is there a way to get that difference other than subtract the two? Either way, it is worth noting that the memory footprint of my program is *not* the sum of each variable as my above example would show. 
Okay, I'll bite. Why is it called Wolowitz?
Using python to control excel to create charts is very much the wrong way round. Are you sure you can't just use openpyxl to get the data and then use one of python's many plotting libraries for the plots?
Unfortunately, yes I'm sure. I'm supposed to generate Excel files that will be used by clients as such. They might wanna take those charts and include them in other Excel documents of their own...
Boot camps and certs are garbage. That is bad advice. Just putting code on GitHub will show more than flaunting that you were dumb enough to pay hundreds of dollars for a boot camp.
I'm gonna steal your idea. Muhhhahahaha hahaha . Jk keep up the good work. 
Remember, I advertises QuickUI as a "tool for the Shell/REPL/Toplevel". And within the `&gt;&gt;&gt; ` you often want one-liners.
You might want to change win33con into win32con.
Downvoted for failing to read (or pay attention to) the note in the sidebar: "Posting code to this subreddit: Add 4 extra spaces before each line of code" And now you know better :-) (Edit: if you fix your post, and let me know, I'll upvote it instead :-)
&gt; If you really want brackets though, you can do `from __future__ import braces` You're a wicked man and I like it, have an upvote :-)
I'm using windows 7. 
I am not sure if learning this way would be feasible for me, but I did not know the site. So I wanted to at least say thank you to you for introducing the site. I will have a look at it and see, maybe I'll come back to your offer. Maybe it would also be interesting for others where you are with learning python. Absolute beginner or more advanced. Also maybe your timezone would be interesting as I can imagine having someone apart for 6+ hours would not be very useful for everyone.
I'm in a similar situation. I just quit my shitty job and am working my way through self teaching web development. So, I haven't made it yet, but I've received a lot of advice and it mostly boils down to: get as good as you can, like the fundamentals are secondhand nature, like where you think you should be to get an entry level job, then take a boot camp to solidify and advance those skills. 
I'll be downvoted but, use a real OS then. Even a inside a VM.
`print` calls the `__str__` function on objects to get a string representation. If your class does not provide one, it falls back to the default implementation in `object`. /r/learnpython for more. Also [documentation](https://docs.python.org/3/reference/datamodel.html#object.__str__)
You can write a bash script and then deploy it via registry every time you open a command line. Great technique here: https://stackoverflow.com/questions/17404165/how-to-run-a-command-on-command-prompt-startup-in-windows
RemindMe! 6 days
I've already tried to find the element _3ixn, but it doesn't show up. Forgot to add that, apologies. Thanks for the heads up on wait_for_clickable tho!
your shortcut to the anaconda environment is: ``` %windir%\system32\cmd.exe "/K" C:\Users\{user}\Anaconda3\Scripts\activate.bat C:\Users\{user}\Anaconda3 ``` you can modify as ```C:\Users\{user}\Anaconda3\envs\{name}```
Thanks for pointing this out... Now I know how to format source code in reddit....:-)
I wonder why they're trying to get Python 2 to go faster. Isn't it going to be EOL'd in 3 years?
the gain is readability ;) honestly, using the to_re function it can literally be used for everything possible with the re module.
Me starting using Linux when I started learning programming was my smartest choice, I think. It's so useful to learn in the end, and way easy to use set up, so I think *definitely* ^*lightly* ^kick some people's asses and show them what the free OS world has to offer. 
&gt;If you data is big, you will be happy to use all your cores. Not at all. Length of data makes zero difference. If the computation is expensive (like several ms) then maybe. Multiprocessing has lots of overhead. If their computation is that expensive, there's likely much better improvements they can make.
If you do not know python, or know how to simulate a cpu, I'm lost as to why you need it. However, just google python cpu simulator, and you'll find tons of stuff there. /r/learnpython is for help with learning python, not this subreddit.
I still don't get why people think regexes are hard tbh. Nice project though!
Thank you! I personally like regexes. The problem is not writing them, thats always fun. The problem is maintaining them in group projects. People often tend to set hard equal to unfamiliar, that is one of the main reasons less conventional languages, like regex languages are considered difficult.
I agree, it's not necessary. But the things you get familiar with using Linux is very relatable to the programmer mindset, in my opinion, and is therefore a valuable asset for someone not yet familiar with it. I did not mean to push buttons or be a Linux enforcer. More an evangelist (which can be just as annoying, so I'll consider that next time) I also think you may have me mistaken for someone else, and that you are reading way too much into it. No one is forcing anyone to do anything. 
I did confuse you with /u/rcaocci, so the 'you're answer is wrong' part of that is directed at him/her not at you. But then again, no one said anyone is forcing him to do that - that's a lame way to try and say someones argument makes the wrong underlying assumptions. What I'm saying is that /u/rcoacci gave not only a wrong (and somewhat hostile) answer, but an answer that makes no sense in the context. And i'm saying that even the premise of it (install a virtual machine so you can run python my way) is just completely stupid. Compare it to /u/cyberst0rm answer which deepens the OPs knowledge of both anaconda and how it's used on windows. /u/axpatito also has a nice answer that I only learned myself last night when trying to understand bugs in cmder for the new windows 10 updates. I would not dispute that linux or windows is good or bad - I work out of linux and windows in equal measure myself. But a more reasonable thing I think, is to ask what exactly is going on that he needs to start the condaenv by default. That seems wrong considering you only need to type 'activate myenv'. I would probably suggest he use something like PyCharm which will in fact associate a venv or condaenv with your project.
/r/learnpython 
Before you do that, try reading the spec for SVG. Simple vector graphics can be hand coded just like any script.
There are plenty of great resources that exists both on the internet and on this subreddit that address this question. You will do much better in developing your abilities if you learn how to formulate a question and find the answer in an existing space, then ask questions for more specific cases. Unless you have a specific use case or reason to use 2.7, go with the modern version of Python. I still use 2.7 at work due to compatibility issues, but even for us we are working on upgrading to 3.5 (and probably should have already).
It depends on the print method. `%r` calls the `__repr__`, while `%s` calls `__str__`. `__str__` defaults to `__repr__`.
Testing: [pytest](https://github.com/pytest-dev/pytest) Code coverage: [coverage](https://github.com/nedbat/coveragepy) Logging: Stdlib's [logging](https://docs.python.org/3/library/logging.html) module ([more info](http://docs.python-guide.org/en/latest/writing/logging)) IDE: [PyCharm Community Edition](https://www.jetbrains.com/pycharm) or [Visual Studio Code](https://code.visualstudio.com)
It's only the Python Software Foundation produced Python 2 interpreter that is being EOL'd. There have been numerous other organizations and people producing interpreters and transpilers for Python 2 for years. And there is nothing preventing an organizationally backed fork when PSF stops supporting Python 2 (there is little reason to do it until they do).
That's a neat idea. I like the syntax. Just a couple of comments below. Why is dot in regex language, which matches anything except possibly newline, called nospace? It doesn't seem intuitive to me. It's a minor detail, but it would be nice if slices used actual slice notation (via slice objects). The definition of `variables` in function `_re` should probably be done in module scope.
Have you considered not having sessions and instead utilize JWTs?
https://github.com/timgrossmann/InstaPy
You should review how control flow statements are in Python, this is not at all correct. If you need more explanation after research let me know and I'll get on my PC and explain, currently on phone and can't write good code example
Thank you, I went back and looked at the chapter. They have examples on the side that weren't quite making sense to me, but I'm going to keep on trying. Thank you for the reply!
Well, what can you tell us? 1. How was it to make an APK? 2. Have you tried to make iOS version? 3. How about packaging for the web or desktop? 4. What other kinds of problems did you run into? 5. How long did it take to make the UI? In my experience tweaking the UI can be a major time sink.
How to hack the system bro
Thanks 
* ~~Tweaking the UI was in fact the biggest time sink of all.~~ Actually the biggest time sink was coming up with a layout. Tweaking the UI was also time consuming. * Porting for IOS is not hard at all until you have to access tools from the native SDK. Plyer made it easy but not seamless. * Only 2.7 support for IOS for now. * Porting for desktop is relatively simple, use pyinstaller for Windows, use some other kivy tool to build a Mac OS app that contains an embedded python and you just put your code into it. * There is no packaging for web as of now. Would be extremely interesting. There are projects trying to port a python interpreter to bytecode to run in browser, but then certain implementations like text providers and window providers would have to be made. * Making APKs is by far the easiest and most supported export. * I ran into problems when starting to use kivy but once I became familiar, it was really easy to solve the minor issues that arose. I did have to invest months into getting used to it. It has a high skill floor but also a very high skill ceiling. * I loved working with kivy. It is completely pythonic, unlike QT which is using python in a C idiom. It gives you extreme freedom with customization, behaviors, anything. There are basically no restrictions with what you can put on the screen and how you want things to behave. This s great for innovative apps. Thanks for the great questions!
Any fundamental speedups or only numeric code?
&lt;nospace&gt; matches, well you guessed it, everything but \r\t \n. &lt;dot&gt; on the other hand is the direct equivalent to "." If you are confused by the [,] syntax and would recommend something like [:], remember, that this would increase the amount of special characters that have to be escaped.
That's true. However in my opinion comments don't make readable code. But comments are a feature I cam consider for future SweetRegex releases.
The side-by-side comparison table in your README is what confused me about nospace. It seems like `&lt;nospace&gt;` should pair with `[^\s]` instead of with dot. The [,] syntax doesn't confuse me, it's just that [:] is the standard Python idiom for slices so it might be more intuitive. Using the plus-one convention on the final index might not be, though. It's just an idea. Your [,] notation is more like the {,} of regexes. The colon would only ever occur as a special character inside unescaped square brackets. You might want to list all the special characters that need to be escaped (such as comma) in the README. 
But...... why? Do you want to give people an epileptic seizure?
In a world of open source, the best thing to do is emulate code that you like. If you like the Flask API, look at how other people implement libraries within that ecosystem. Then emulate their style. Different parts of the python ecosystem have evolved in different ways. For example: A lot of the numpy/matplotlib/etc. ecosystem developed with matlab compatibility in mind when naming their functions. Which is why you get shitty function names all over the place. But it is what they chose to emulate, and as a result, it's what people using that ecosystem expect when using a new library. It would look completely foreign to Flask users.
It's not very pythonic, but I can see its utility. The purist in me says 'avoid', but the pragmatist in me says 'sweet'.
Viewflow is AGPL'ed plus additional permissions to allow to link with closed source project. Django-material is BSD licensed. For me, it won't be really possible to implement and provide sustainable support for the project without PRO pricing. There are several abandoned attempts on the GitHub where people gave up too early, before even releasing something useful. Generally, I think it's the good solution to accommodate different people requirements. There is constantly blame about django is too heavyweight, so I keep open source versions simple and unopinionated and free from 3d party dependencies. Whereas PRO targeted for whom who need more functionality out of the box and sustainable support and updates.
Lol no. My friend challenged me. He is a Java fanboy (JavaFx). He thinks Java is better than Python.
Self-taught here, this is my first Python and Pygame experience. I know it's a simple project, but I share it here in the hope of knowing and confronting with other enthusiasts, I want to continue studying and to start shortly a more complex and original project :)
That looks super useful, I'll get that set up when I get home.
It does pair. Table is buggy :D
So let me further explain `&lt;nospace&gt;` and `&lt;dot&gt;`. Often, when people use `.` they want to say "matchall", but this is not the behavior of `.`. Therefore I do not name the dot `&lt;any&gt;` or `&lt;char&gt;`, because that might lead to confusion. `&lt;nospace&gt;` on the other hand is simple to understand.
One library I've used for some things is python-ivi. https://github.com/python-ivi/python-ivi
Definitely looking into it. Im good with python but I cant wrap my head around using dlls in python. 
PEP 8 
It can, it also used Ethernet and serial that bypasses pyVISA. I'm mostly used Ethernet directly to machines outside of the pyVISA framework. But I may be missing something, as it has been a couple years.
I was a sysadmin for a while, used Python daily. It's perfect for automating things that you don't want to do anymore. Keeping that in mind [I hear great things about this](https://automatetheboringstuff.com), though I haven't read it myself. 
yes, and the project is using that. this will search the youtube, add more metadata and lyric. e: there are plan to synchronize it with beet and search from musicbrainz e2: consider it as wrapper for youtube-dl with additional feature.
I've started off with pygame, and its super easy to use (though installation took a while!). Thanks for the suggestions! :D 
Uhh, golden!
+1
For us, it was the cross-platform nature of the language. We could easily use the same scripts, with a few branches to modify command sets where necessary, on both Windows and Linux servers without much hassle. 
Thanks, enjoy!
A *good* data validation system. Something that is unobtrusive. https://github.com/alecthomas/voluptuous is the best thing I have seen. I don't have many complaints but would like to see more adoption and usage in downstream libs.
learning pygame ;) 
I would disagree here. vim is a good fit for Python as well if you're proficient in it.
I'm aiming to learn how asyncio works by writing a scraper based on it. Are there any resources anyone would recommend to learn asyncio please? I've read the docs but I still do not really understand it.
One to handle using personal certificates directly from the windows certificate store. Similar to wincertstore but for personal certs. Ideally, it would play nice with the requests package.
Small advice: don't use bots to unfollow people (or to follow/like too often), that might get you banned.
I had to google him. Is there an in joke besides Reitz being very active in the Python community?
Thank you for taking a look antennen! I think you're right about changing the name. I felt uncomfortable with pysecrets but I couldn't think of an alternative at the time. What do you think about the name 'lockbox'? Ultimately, I want to make a Flask extenstion out of this for encrypting configuration files.
It's basically replaced Perl. It's impossible to say *how* to use it without knowing your specific work flow. If you have a task that is to ping certain hosts, e-mail their owner if they go down then you can script that up.
Why not contributing with existing projects? I have two projects needing contributions and improvements. http://github.com/rochacbruno/dynaconf and http://github.com/rochacbruno/manage
A very fast parallel Tsne. There is MulticoreTSNE which is great but I use a program called vizbin with java backend and the tsne is insanely fast. 
Ansible makes it trivial to write your own modules in Python as well. 
Can we get some more information on this? 
Take a RAML file and build out all the endpoints listed as a Flask project
Nah, that's really it. He makes a lot of stuff and people use it.
Did you have any trouble reducing loading screen time, and are there any optimizations you used for loading such a large app (only instantiating elements as the user navigates, etc.)?
Loading screen time was hard to reduce at first, when I didn't have much experience with Kivy. As you said, screens are initialized only when the user navigates. It now takes 2 seconds to start on my phone.
It's called config analysis because Sys Admins would (rightfully) say we don't do Sys Admin work, but we aren't doing application development either. My job is to make it so that code written by people in my company gets installed correctly on Tomcat/Apache/whatever that another group installs. So I don't install or maintain Linux, Apache, or Tomcat installs. I don't handle firewall or network stuff. It's kind of a weird specialty to be honest.
Write pastebin like app with flask and flask extensions. Think how better organize config files. 
Love the idea, and I'd love to help out. Sadly I'm just an European scum.
Where in NYC are you? I might be able to help!
For those interested here's the Project Mesa Github repository https://github.com/projectmesa/mesa
A pretty important difference I think is the fact that the in-memory database is probably not suitable for anything anyway, because &gt; The database ceases to exist as soon as the database connection is closed. Every :memory: database is distinct from every other. So, opening two database connections each with the filename ":memory:" will create two independent in-memory databases. https://sqlite.org/inmemorydb.html
And if I uploaded a pic of my shlong? What would happen?
Neural Networks with numpy and sequence analysis for university
Hot dog
Of course it is possible. The biggest hurdle to making a successful social media app isn't the technology. It's getting the users. What is your social media app going to do that no other app does or can do? Keep in mind, Facebook employs an army of bright engineers that will incorporate whatever it is your app does into facebook before you could secure round A funding. You need something truly disruptive to the social media in a way that can't be replicated to be successful. Diaspora had the right idea, they wanted to decentralize social media (and, holy shit, [they still exist](https://diasporafoundation.org/)). It's something that Facebook cannot do because Facebook's revenue model is built on holding all the data.
What are you interested in? Games, web development, desktop applications, automating office tasks?
A bit of Bootstrap can go a long way. 
A python equivelent of webtorrents.com would be neat.
Even though we both understand regexes, we also know, that they look very unfamiliar to beginners. It is not very readable without learning them first. Show them `\d\+\d` vs `&lt;digit&gt; + &lt;digit&gt;`. Anyhow discussions about syntax are pointless, everybody tends to like a different one the most. I just allow people to use a different syntax for regular exprs.
xonsh looks like a perfect shell for python scripting, have you used it?
Just a thought: https://www.meetup.com/learn-python-nyc/ Or even just screen share session would be enough, you don't actually need someone physically being in NYC.
:'(
I can probably help if you can't find anyone else, but my schedule it usually pretty tight.
Infosec, actually. I have a background in physical security and I'm learning about the computer side of things right now. I'd like to be a penetration tester some day. Python seems to be the go to for that, so I've been playing around and doing a lot of reading lately. I'm getting better at reading code, but there is so much more to everything than I could have imagined. 
Please don't. Rather merge the effort that's already in [marshmallow](https://github.com/marshmallow-code/marshmallow), [schematics](https://github.com/schematics/schematics), [voluptuous](https://github.com/alecthomas/voluptuous), [schema](https://github.com/keleshev/schema), [cerberus](https://github.com/pyeve/cerberus), et al...
Look up the free book, "Automate the boring stuff with Python". It has a lot of fun projects that might spark your imagination. Look for some open source projects to contribute to. That can be a great way to learn as well as get something to add to your resume or CV.
Sure. You can do that with any GUI library. If you are asking about Kivy because it's "cross-platform" I need to burst your bubble. Cartalk once opined 'tires that are labeled as "all season" mean that they work poorly in all seasons'. It's the same here. If you want a app that works well in all platforms you will have to write large portions in a OS native language. 
ipdb!!! An interesting question was brought up during the talk: ~~ paraphrasing: "do you know any advantages or disadvantage between pdb and IDEs like visual studion for debugging", she butchered the question -- im guessing she was nervous. I'm not one for an IDE, i like my vim + terminal + ipdb, ive always felt IDEs slow me down, small, single purpose tools are more effective than all encompassing, be all tools -- IMHO. But I would like to know who else here can convince me otherwise..
Wow, found it useful. Is it your blog? And if it is, will here appear some advanced topics?(maybe about some libs/frameworks/etc)
manhattan, preferably central or midtown or below. Figure just go to a starbucks or something, let me know.
Even better than pdb is ipdb, a third-party replacement
1. A full C-header reader that is seamless with cffi. 2. A multi-touch, gesture recognizing library for touchpads 3. A good way to create ios apps. Kivy has a lot of room for improvements. 4. A third option on par with pyqt and kivy for GUI development, but built for python with great UI development tools. 5. A smart pythonic way of leveraging distributed computing. Python is behind the game for multi-core parallel processing and extremely far behind in distributed, parallel computing. 6. Leveraging PEP 523 (JIT Hooks) and PEPs 483, 484 and 526 (Type hinting) to generate highly performant binaries compatible with cPython. 
A script that detects the eyes in a bunch of photos with openCV and aligns them so you can make a video slideshow of your face with your head in the same place in every frame.
As a beginner to programming and python in general (3 weeks), I'd like to know where you started to create this project. I'm currently in a sales role, and would like to run some reports on exported data. Any starting tips?
pudb :) Also is it just me or this talk felt very basic?
I assume you are using Scrapy? Can you provide your code and url that you want to scrape? Also, when you need to use the text content as an argument to xpath `contains()` function, [avoid](https://doc.scrapy.org/en/latest/topics/selectors.html#using-text-nodes-in-a-condition) using `text()` and use `.` instead.
Those libraries blow. In the case of marshmallow: class AlbumSchema(Schema): title = fields.Str() release_date = fields.Date() artist = fields.Nested(ArtistSchema()) Why is title of type `fields.Str()` instead of the native `str` Same goes for schematics, Seeing `from schematics.types import StringType` instantly turns me off.
Personally I can't convince you the otherwise, because I totally agree with you.
Of course man! It's pretty much done now, just need make the boys periodically scrape for new messages. Here's the repo if your still interested: https://github.com/Narbulus/GroupmeSimulator
Oh god, I will never be able to remember this name if I want to install it from pip.
I agree with you ipdb is awesome but the advantage of pdb the advantage of pdb it's in standard library.
I want a good (handles the latest specs) exif parser, the only good ones I've found are just wrappers for exiftool, which is an os package... and written in perl
Yes i agree with you, i expected more, though i did learn a couple of things: namely, `down`, ive seen it, just too scared to ever use it. `break` and `clear` look like things i would really benefit from, everything else was standard stuff i already knew. She was very nervous..
Thanks for the heads up. This subreddit is for python users. For beginners, post to r/learn_python. Although even they would probably find this insultingly pointless.
**Here's a sneak peek of [/r/learnpython](https://np.reddit.com/r/learnpython) using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#2: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/5lveo6/blacklist/)
Still working on python to rust binding, getting closer to stable api https://github.com/PyO3/PyO3
Comparing a database with an sql schema and create a diff to convert the live database to the schema. And - of course - every other way around. Compare 2 database structures and bring the first to the latter one or vice versa. You got the point. [Gerald](https://pypi.python.org/pypi/gerald/) is from 2010. 
Perl is absolutely hideous lol.
&gt; "Stone Soup Programming: Examples, Tutorials, and Professional Programming Tips" Does this mean using `str` as a Python variable name is a "professional programming tip"? 
This is a big part of why Learn Python NYC exists, so it's definitely worth checking out. The next event is tonight.
Not a sysadmin, but as a programmer I go for python as soon as a shell script gets too complicated. Bash is powerful, but the syntax is awful for anything like if statements or iteration.
I agree with this. I recently learned how to talk to Infoblox devices via it's REST API. It has made manipulating DNS and DHCP super easy. 
Or "not hotdog"
Nope, works in 2.7 but it fails in 2.6.
I'm looking for a part time job so that I can fit my schoolwork in, and just an assistant for basic stuff to get me experience.
So, that is how you manage to be so productive. Getting people to do your dirty work... /s. Regards from Berlin
So, that is how you manage to be so productive. Getting people to do your dirty work...
OP : me too started on Hacker Rank. Would love to help and learn doing problems.
But most APIs with a significant user base already have very good python clients. I don't see what you are seeking to achieve here. If an API is poorly documented, it doesn't deserve to be used. 
I wrote a server backup system around rdiff-backup. I also wrote a file synchronization system (think dropbox). I wrote a one-step server installer script. I wrote a shell around the letsencrypt stuff because I have to use DNS authentication A script that starts and stops virtual servers. A script that cleans out old quarantined emails. And just a ton of other things over the years. 
That's fair. It's just that I have to use some that are poorly documented or lack usage examples for projects that I work on (mainly bioinformatics related), and I want a way to share those. You make a great point though.
I just wanted an octopus recipe.
that's actually pretty damn amazing ! Great that you added time measurements as well. So would you suggest doing that for every reasonable computationally expensive for loop calculation, or are there any shortcomings ?
If you ever find yourself anywhere in Seattle: I'd do it for free. Personally, I think NYC is too physically large of a city for this style of reaching out to be very effective. Fun fact: you, and most, people mean Manhattan when they say NYC - but in reality NYC is now more Brooklyn (both in population and land size) then Manhattan...
A test automation suite to improve coverage and reduce risk on a rather sizeable application that our manual tests are barely scratching the surface of! 
Do you still use cron to schedule the python scripts? I've done that in the past but I've always wondered if that's what people use to automate their python scripts.
Developing a script to transfer large (i.e. ~100GB), 30-50% sparse files over the network, preserving their sparseness and saving network time by not sending the holes. Scp, rsync, tar pipe can't do this efficiently/conveniently. The version of scp we're using will not accept the "sparse=always" option that some people say it should, compression just slows things down, even at the lowest setting, but this wastes me and my colleagues a day or 2 a month, sometimes more if we have to do more snapshots. Proof of concept showed that I can get a decent time saving on a 50% sparse file, but less than 30% sparse is break-even or worse, but that was using a naive "protocol", and without trying to tweak the I/O efficiency. I'm restricted to py 2.7, and whatever libraries are already installed, which is annoying, so no async I/O for me (not that it would be likely to help here, really, tho I guess I could parallelise reads and writes somewhat). Today I worked out a better protocol and did some timings, with some surprising results: * reading in 8k chunks is noticeably faster than 8Mb chunks * using readinto rather than read is predictably faster * io.BufferedReader doesn't help * I can now more-or-less match "dd" for raw read performance (like a few 10ths of a second difference on a 20GB test file) * detecting null blocks the way I first did it is so far the fastest way - create a 1k bytearray of nulls and compare each block read with it with "==" * any(), re.match(), bytearray.count() are all slower by an order or so, tho my instinct tells me there must be something faster Sure beats writing Nagios checks.
Oh wow reading everyone's projects really makes me think *I could actually get somewhere other then little games* Either way I'm just doing 5 challenges from: https://knightlab.northwestern.edu/2014/06/05/five-mini-programming-projects-for-the-python-beginner/ 
I'm working building a video series to help demystify some web developer concepts, this week's plan is OAuth2. I really enjoy trying to educate people, so we will see if I am any good at it :)
Learning Django and trying to setup a shared movie list for my SO and I. Really loving Django after playing around with flask first.
&gt; I have been using pyvisa, but its no longer being developed. The last commit was less than a year ago... Does that really mean it's "no longer developed"? When I did use it, it seemed to Just Work for me. Or are there particular issues that you've found that aren't being addressed?
A parser for C would be worth its weight in gold. I think there's a third party library in the wild that does this and you can always make your own with Lark, but it would be even better to have it in the standard library.
Because they look like word vomit and unless you provide a paragraph worth of comments you won't have any idea what the regex is doing or how it works three months from now. (unless it's blindingly simple)
You have programmed the library to use various low level OS services and also have probably used windows DLLs in python. I want to learn that process. Given a DLL (or an SO in linux based systems) loading and using the libs in Python. 
[https://learnpythonthehardway.org](https://learnpythonthehardway.org)
Regarding #5, I would highly recommend having a look at https://ipyparallel.readthedocs.io/en/latest/ - not sure how inherently tied to IPython it is underneath the hood, but in that context it really works an absolute charm. It's even easily distributable across multiple machines: https://insights.untapt.com/how-to-setup-an-ipython-parallel-cluster-on-google-compute-engine-august-2016-b2967a018547
Ah! This project doesn't actually use anything like that. We wrap a bunch of other python projects that interface with different communication channels. A long time ago I helped with a project that interfaced with a DLL with c-bindings.
OpenCV can do this, you just need to adjust your thresholds. I can't remember where the tutorial is but there's one out there that shows how to match up points of similar objects from two different sources. This is a tutorial for facial feature detection, http://docs.opencv.org/3.0-beta/doc/py_tutorials/py_objdetect/py_face_detection/py_face_detection.html#face-detection http://docs.opencv.org/3.0-beta/doc/py_tutorials/py_feature2d/py_table_of_contents_feature2d/py_table_of_contents_feature2d.html
Trying to figure out ORM with SQLAlchemy so I can use it with Flask-Admin...still pretty new to Python so it's going slow :)
I'd be happy to help for free via skype if that interests you, but I am traveling for work (also on NY but way out on Long island). However if you need someone in person, I can't help. Either way, best luck to you!
I don't think there is an API wrapper for api.data.gov. I think that would be quite useful. It would allow you to download comment data about bills. If nothing else, it provides a significant dataset for text analysis.
lockbox it is. I'll work on changing it in the repo. To answer your question, I got the idea from sekrets, which is a Ruby gem that was incorporated into the latest version of Rails. The design doesn't provide much security except through obscurity (...which is no security at all, etc.), but it allows you to commit secrets to your repo, which means those secrets don't have to flow through secure channels for distribution, but the keys to those secrets still do. The encryption key is provided to the Flask application by either storing its path in an environment variable (e.g. LOCKBOX_KEY) or placing it in the www process owner's home directory. Additional key resolution mechanisms could be designed. Interestingly, the Hashicorp Vault program works (I believe) by deleting secrets after the www process consumes them on first run. A similar design could be implemented for flask-lockbox, although the secrets could still be uncovered in memory, which is a known limitation of cryptography.io [1] [1] https://cryptography.io/en/latest/limitations/ 
it's basically a isolated kernel
That's evil.
I am surprised that serializing that list of integers twice is faster than just computing the square. But, this is a precisely chosen example. If you increase the cost of serializing then `not_use_pool` wins. Or if you shorten the length of the list (yes, I was wrong). And of course, numpy would beat both easily. In general, "use multiprocessing first, ask questions later" is a poor piece of advice to give in my opinion. example from ipython3 In [2]: from multiprocessing import Pool ...: ...: def square(x): return {x: x**2} ...: ...: def not_use_pool(vals): ...: results = list(map(square, vals)) ...: ...: def use_pool(vals): ...: with Pool() as p: ...: results = p.map(square, vals) ...: In [3]: vals = {x:x for x in range(10**7)} In [4]: %timeit not_use_pool(vals) 5.25 s ± 8.2 ms per loop (mean ± std. dev. of 7 runs, 1 loop each) In [5]: %timeit use_pool(vals) 7.13 s ± 44.4 ms per loop (mean ± std. dev. of 7 runs, 1 loop each) 
OP just leveraged a value-add.
It's essentially venv, but for configuring your entire environment (OS included).
r/learnpython
In the spirit of /r/savedyouaclick I remember when my calculator stopped working at a young age. There wasn't even a user manual to guide me. Armed with only my wits, grit, and my late father's multimeter - I pried open the device and sought to repair it myself. I peered deep into the onyx void of reality and through sheer determination discovered logic of the first order, electricity, and numbers. Through blood, sweat, and tears I heard the mathematical whisperings of nature's divine muse and bent the device's transistors to my will. That, THAT is what it means to be a true hacker. You sad javascript kiddies with your stack overflow and your google aren't fit to trim -or even gaze at- my magnificent grey beard. 
Me too! Message eachother for help? X.X
To be honest I disliked the article about functions (only read that one). As it could be nice to show up a demonstration at the beginning, it is not so good to explain all the details *but* not how a function is defined. You do that in a follow-up section where nobody will still wondering how that works, as even a total noob has grasped it yet from the previous section. So the logical structure of the article is kinda broken! Further more the example is too artificial to underpin your primal thesis. It would be imho better to show something that safes you from DRY massively based upon an useful topic. Learn python the hard way has much better examples for this problem - perhaps you should take a look? Also you should have mentioned DRY (probably with link) in your article, as it is all about that in the end, right? I hope my critic is useful and you consider it not a dumb rant ☺
Not really brilliant as it reduces the given input to ASCII letters without a need 😉
I wrote a decent critic in the /r/java subreddit for this article: https://www.reddit.com/r/java/comments/6e7ry6/slug/di8g1ll 
AngularJS or Angular 2/4
thanks! i think this something i might take in! if anyone else is interested let me know! 
I agree with you. I didn't intent to say "use multiprocessing first, ask questions later", I wanted to point out that you can do better, a lot better in some cases by using all your cores. I see a lot of code of people doing machine learning without using parallel code, some don't even know about that. The sad thing about python is the GIL, because of that you have to use processes instead of threads. Threads can share memory, processes can't. So you have to serialize your data.
actually I set up a slack team for /r/learnpython people taking the course, there's a shared invite in this [post](https://www.reddit.com/r/learnpython/comments/6dhv6r/come_join_the_rlearnpython_slack_team_for_the/) if you want to join :)
Can anyone point me to a tutorial/book which teaches you how to deploy ML-based services in production using Flask/Django? All I have found is a bunch of blogs which don't really dive deep into the nitty gritty aspects of server side development. It gets very difficult for web-dev noobs like myself who need to move into the intermediate aspects of field after getting familiar with the algorithms.
"Micro Penis"
HIRING IN FUKUOKA - JAPAN Hi all, I am the CEO of a startup, born in Fukuoka (south of Japan). We are expending our activity and opening to new markets. So we need to upgrade our tech. Concerning the startup itself, we are providing a service helping students find jobs, from very short time gigs to internships and full time positions. We consider ourselves as a sharing economy/data aggregation company but I can get into more details privately. Concerning the tech side: We are in the process of upgrading our backend for something more custom and specific for our needs using micro services, which is our own API. Basically, we will use AWS Services (Amazon API) to create our endpoints. Those endpoints will serve as a communication way for several Frontend interface (Firstly, the Django Website and The IOS mobile application). The Django Website will be built in parallel of the API. The data are going to be stored in another AWS Service (DynamoBD). At last an AWS Lambda function is necessary for the endpoint to manipulate the database. This is in a quick summary the project, and this is what our intern/FT will be working on. Hit me up with a private message if you are interested or have further questions. Thank you 
Have you looked at /r/learnpython ? I think you should temporarily chose a path, like web development or programming micro-controllers or competition problems or data analysis or whatever, and do some tutorials or start a project there. Don't worry about switching paths, even languages, later - it's always way more about the experience in problem solving, searching information etc than a specific technology. You'll have to learn new languages, technologies and other stuff all your life anyway. 
&gt; And they use butterflies. And VIM. You can't forget the VIM. Because doing even the simplest of tasks requires the most complex, unusable tooling.
Yes, I used it on my dev machine at work. I wrote a little introduction to xonsh in my [blog](https://william-droz.com/xonsh-a-modern-shell-that-enable-python-in-your-terminal.html) But, I don't recommend to use it in prod.
I used [Pexpect](https://pexpect.readthedocs.io/en/stable/) to configure Cisco routers. Coupled with Snort, I was able to automatically shutdown Ethernet port from people scanning the network, by example. 
[Hiring] Experienced Python developer in Houthalen, Belgium Are you interested in working on the transition to a renewable energy system? At Enervalis we're looking for a Python developer with at least a couple of years of experience in industry to help us design, implement and operate our software platform for managing flexible energy assets. Interested? Visit http://www.enervalis.com/enervalis_vacancies/experienced-python-developer/
Many sites that use Js to render content can be easily scraped without `Selenium` or `Splash` just by making the direct request to a server. Can you share a url?
I stick to nginx + gunicorn. Gunicorn allows you to run multiple instances of your Flask application which makes it scalable. Nginx is useful for load-balancing and serving static files. They also give you some hints on what approach to use int the official flask documentation: http://flask.pocoo.org/docs/0.12/deploying/wsgi-standalone/ Other useful links are: * https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-14-04 * http://docs.gunicorn.org/en/latest/deploy.html and * https://realpython.com/blog/python/kickstarting-flask-on-ubuntu-setup-and-deployment/
&gt; Starting from the simplest way (calling app.run() from your script locally) Don't do it in production (this can only handle one request per time and it's blocking). Nginx+gunicorn should be good for both performance and scalability. Also, give a look at these: https://github.com/Miserlou/Zappa https://www.pythonanywhere.com/ http://flask.pocoo.org/docs/0.12/deploying/ https://www.reddit.com/r/flask
Huh the code got displayed wrong. sorry about that. ill try again This past month I been getting into python 3 as a way to pass the time, and after many hours of messing around I finally made something that I think shows my progress in how far I have come. Here it is * import time boolean = 0 num = 3 incr = 2 timer = float(input("Enter delay")) while True: if boolean == 0: num += 4/((incr)*((incr)+1)*((incr)+2)) boolean = 1 else: num -= 4/((incr)*((incr)+1)*((incr)+2)) boolean = 0 print (num) incr += 2 time.sleep(timer) 
Never mind
Use a pastebin. Here: import time boolean = 0 num = 3 incr = 2 timer = float(input("Enter delay")) while True: if boolean == 0: num += 4/((incr)((incr)+1)((incr)+2)) boolean = 1 else: num -= 4/((incr)((incr)+1)((incr)+2)) boolean = 0 print (num) incr += 2 time.sleep(timer)
It's kind of the opposite of that.
deleted ^^^^^^^^^^^^^^^^0.0244 [^^^What ^^^is ^^^this?](https://pastebin.com/FcrFs94k/76116)
You have to add 4 spaces at the beginning of every line for it to work.
Mmmm. Pie.
Haha you got it 
I agree, a defined structure to offers would be great for both parties.
I imagine interview like that: "Please, create a function that reverse a string" "hmm ok" def reverse(src_str): return src_str[::-1] "But sir, you don't even use loops!" "lol ?"
I just run my tests from the directory where my package is and it works Structure like so: project &lt;-- cwd package __init__.py module.py tests test_module.py then in test_module.py: import unittest from package.module import function class TestModule(unittest.TestCase): def test_function(self): self.assertTrue(function())
I'm in a similar role myself, didn't realise this was actually a thing and I thought it was odd that I don't get involved much in the hardware side of things/networking... Are we really doomed?
That's very cool, could work with you on it.
That's beautiful, thanks for sharing!
PageRank, the algorithm that originally powered Google, was based on building a matrix representing the links among all web pages and computing the (complex number) eigenvectors of this matrix. This has the effect of efficiently determining what pages are most and least important. 
Ok, listen. First of all go to http://codecademy.com and choose python course(it's free). Then read "Python crash course". And now start developing your own projects. Thank god python have a very large welcoming community, so you can find any information you need. Hope it was helpful :)
By *any* server, does that include apache mod-wsgi too? Because from what I heard, most devs nowadays dislike apache and prefer nginx instead.
Thanks. Is nginx better than apache mod-wsgi from a scalability viewpoint? The event-based processing approach is very similar to node and could be very performant with an event based non-blocking language like JavaScript. But will it perform equally better with a flask app that runs blocking SQL queries on the back end?
Mod-wsgi and apache is perfectly valid although I personally dislike having my runtime and my reverse proxy be the same application. Also nginx is a little less resource heavy out of the box and has a more straight forward configuration compared to apache which has helped with its adoption. 
&gt; will it perform equally better with a flask app that runs blocking SQL queries on the back end You should be reverse-proxying, so those SQL queries will block your python script, but not the Nginx layer - https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/
One question, if I have an api in Flask, do I need reverse proxy like nginx or uwsgi alone will work fine?
Fun! Consider using True and False for your Boolean values, and a descriptive variable name like "even" instead of "boolean". Consider DRYing up the identical part of the math under a variable like "delta". Parentheses around "incr" in your arithmetic aren't needed syntactically.
For some stuff using the ctypes windll module works well. I think I have an example somewhere for an fdti serial chip if you're interested.
Kelsey Keynote Kubernetes. KluKluxKlanuminati confirmed.
I started learning Python a few months ago, this book [here](https://www.amazon.com/Python-Crash-Course-Hands-Project-Based/dp/1593276036/ref=sr_1_1?ie=UTF8&amp;qid=1496242046&amp;sr=8-1&amp;keywords=python+crash+course) helped me a lot. Gave you some "projects" to work on to learn each new function, method, etc. Edit: formatting
Zappa? https://github.com/Miserlou/Zappa
I think you're missing the joke. If you like obfuscated code, c is where you go. C is also a language where you use 1/0 for boolean values, etc. I was trying to imply it's non-python in any way.
Thanks for sharing! I've always wondered what complex numbers were for. If you don't mind, could you briefly explain how they're used, in real life, and in Python? I don't quite get the application of imaginary numbers.
Well it's so that you're not SOL anytime you have a negative square root. It allows you to continue with a problem and obtain an answer even if it's not a real number. 
My first python project: Importing medical records in CSV format to parse into apache spark sql contexts against which to run clinical performance measures and export the data as enrichments to the original medical records data
Wow I have no idea whats happening there. 
Ok so it feels like i'm getting alot of hate here. ill just add the fact I know very little about python and tryed to logic my way through this. 
nginx + uwsgi + supervisor 
You can think of a repeating signal as going around and around the edge of a circle. The problem is that you can't represent a circle in real numbers. The number line is just that, a line, it only has one dimension (negative &lt;--&gt; positive). To represent a circle you need two dimensions. Using complex numbers gives you two dimensions. The real numbers are treated as the x-axis, while the imaginary numbers are treated as the y-axis. This allows you to represent a circle, and thus repeating signals, mathematically using only a single number. The most common application of this is called the "Fourier transform". This allows you to look at a signal in what is called the "frequency domain". You can break any signal into sine waves, each wave with a different frequency. In principle any signal can be represented by the sum of a (potentially infinite) number of such waves. One defining feature of sine waves is that they repeat. The period between two peaks is identical to the period between another two peaks (the distance between two peaks is the "period" of the wave). A shift of one period is exactly the same as a shift of 2 periods, 3 periods, 4 periods, etc. This means that you only need to know the shift within one period, hence the reason why a circle is useful (one loop around the circle is equal to one period). That means a sine wave can be uniquely defined by its frequency (how quickly it repeats), its position along the period (called the "phase"), and its amplitude (how high its peaks are). The position along the period can be represented as the angle on the circle, and the amplitude can be represented by size of the circle. Trigonometry rules can be used to convert these values to X/Y coordinates, which can then be converted to complex numbers. This means that a frequency-domain signal can be conveniently represented by a sequence of imaginary numbers, where each imaginary number contains the amplitude and phase of a sine wave with a particular frequency. This makes it very convenient to do things like add signals, scale them, multiply them, etc. It turns out the frequency domain is critically important to a wide variety of things. The frequency of sound is closely tied to the pitch of sounds and musical notes. "Broadband" internet refers to the width of frequency regions. "FM" radio uses changes in the frequency of a radio signal to encode sound. The "GHz" in computer processors refers to the frequency of a clock. Colors are different frequencies of light. Sound, video, and image filters are generally created based on frequency. MRI machines do their analysis based on frequency. Music visualizers are generally based on frequency-domain analysis. There are also related domains besides the frequency domain and related transforms besides the fourier transform that also make use of complex numbers in similar ways, but a discussion of these is too involved for here (and a number of them are too advanced for me). Numpy, scipy, and pyfftw all provide a lot of tools to do frequency-domain analyis. numpy's `fft` module, scipy's `fftpack` module, and the entire pyfftw package are dedicated solely to doing this sort of analysis. I personally use it for analyzing sound signals and brain activity as well as creating and applying filters, but other people use it for the various purposes I described above.
Here's an example of a crawler written using asyncio: https://github.com/aosabook/500lines/tree/master/crawler
Wow, sounds complicated. I'm assuming this is not open source.
Great! PM me your email so we can get acquainted
Depends. OP does mention scalability, but it's not like you just use docker and automatically poof, it's scalable. Plus docker takes a little while to learn. As others have said, nginx + gunicorn would work well here. Just start with that for now.
I am working on a method to forecast demand of repair parts
Not necessarily. You could expose your WSGI server directly as you don't need to serve any content. Said that, I'd still use a reverse proxy as the front layer of your deployment. A mature server like nginx or Apache can probably filter out malicious requests and have better configuration setups.
Nice, keep it up. I would suggest looking into functions next and seeing how they are useful. I would recommend getting into the free MIT computer science course, which is in Python, on edx.org. Good luck.
The biggest boon to reverse proxying would be the load balancing between uwsgi servers. Yeah a single uwsgi server can spawn instances of your application but they're all on one box. Something happens to that box, you're hosed. If you load balance across several boxes then if one box goes down your still up and running with a chance to recover that box. 
^ this is also true and worth considering
Good catch on the math. Also good python suggestions - thanks. definitely an interesting alternative. I know modulus is expensive, so I'm not sure (-1)**(i/2) is faster - and it's slightly more opaque. I'd probably say it's a matter of preference. Otherwise, your code is definitely more python than mine.
That is a little like saying "looking to hire an engineer to build an airplane for me" ... you may want to sketch out, at least in broad terms, what the application would need to do and it's scale, as you could need anything from a desktop developer to an IOS programmer to a full stack cloud developer.
Yeah I've been using Pandas, thanks! That comparison is really helpful 
definitely this, AWS Lambda is dirt cheap
I have a science degree, but no computer science degree, and I work as a scientific programmer in the space science industry. While most people working in data systems (the "group" I work in) have science backgrounds, it's not a must. We recently had someone transfer to data systems from IT, so that's always an option. We have a web team in the data systems group where your background would be way more useful than mine, and I think the people working there are more space buffs with computer science degrees than scientists. The amount of science any individual in the group will use on a day-to-day basis depends a lot on the project/mission you're working on, but in almost every case, using GIT, SQL, and for god's sake following some decent programming principals is always useful. In fact, I would say it's more useful than a science degree. You just gotta find the right opening, because the scientists with PhDs need people like you.
If you have python 3, just open up command prompt (windows key+ R, then type cmd ) and then type "pip install selenium" no quotes of course. 
Yeah I've looked at that but I've found all sorts of examples online which gave me more questions, like I tried to create an awaitable loop but it didn't work how I expected it to work so I'm looking for more examples to increase my understanding. Thanks for responding though!
Interesting choice to truncate your search space by perturbing the randomization function. Also, props for using defaultdict. It's fun seeing how everyone approached this. Here's my solution: http://www.divergentblue.com/2017/05/30/siege/ 
I am trying to implement the super-resolution algorithm in [this article](https://papers.nips.cc/paper/2315-bayesian-image-super-resolution.pdf) for my senior thesis. In this right moment I need a more computationally gentle way to handle huge sparse matrices. I would appreciate any help on that. :) 
Cool! I must try this
not to be pithy, but what about subprocess.popen? 
you're incredibly lucky that you actually enjoy something that most people find about as enjoyable as getting teeth pulled, and also can get you a job.
me too, I feel like nothing is sinking in, the instructions generally suck, the help features suck, and the examples suck. Like they will show an example for code you are supposed to write, and the example code is completely broken and doesn't run if you actually try it. 
/r/learnpython is the right place for such questions. You should learn to [read the documentation](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.filter.html). It has all the answers you need.
Really? Huh. Stackoverflow usually does a pretty good job a clarifying trouble areas for me.
There's a free online book titled Think DSP: Digital Signal Processing in Python. Haven't read it but figured I would post. Also, on mobile so I have no link but is easy to find via your favorite search engine.
Assuming you are wanting to learn how to do this yourself, you may get a better response from /r/learnpython/ 
Look into the PEX format.
I'd like to give a big Up Vote for Python Anywhere. I've had [my Flask-powered site](https://discchord.com) running there for over 6 months now. Over 500,000 monthly views (not including bots), and it has been pretty solid, with good load times across the globe. They resell managed AWS. Basically Amazon EC2 in Easy Mode. 
I would suggest learning how to make a basic web app first (both [Flask](http://flask.pocoo.org/docs/0.12/tutorial/) and [Django](https://docs.djangoproject.com/en/1.11/intro/tutorial01/) have tutorials on their websites). Then, you can play around a little; add a route that is just a form that takes in data for your machine learning tool. I haven't done this myself but I would think that you would have a pre-trained model that you plug some input data into and get a prediction that you could render for the user.
Hey this is totally doable! Going to go with two examples here: bioinformatics and particle physics Bioinformatics is an insanely understaffed field right now and many labs/companies will hire people with a CS background no questions asked. Python sees a lot of use along with R, C++, and Java. Also, there are the occasional jobs for bioinformatics web developers - bioinformaticians are very hard to come by and bioinformaticians who know web development are even rarer. (You'd be instantly hired if you can find one of these positions and show that you know anything at all about biology) Physics requires lots of really hardcore number crunching and most of the stuff there is C/C++/Fortran. However, there's still lots of opportunity for someone who knows about web development here. I had a friend who mentioned at a PhD interview that he knew Javascript, and that pretty much sealed the deal (ended up making all of the management tools and user-facing scientific software for the TRIUMF particle accelerator for the next 6 years). Take away message: go for it. My recommendation is to apply for jobs with companies and large research institutions like particle accelerators or cancer research agencies as they have more money to play with and have more need of skilled scientific programmers. In all cases knowing web development / Python is a major asset, and R/Java/C++ are also super-useful depending on the field.
wow it worked, thank you! So now I can use IntelliJ IDA to access it?
You know: "non illegitimi carborundum". (Don't let the bastards get you down.) As a newb you did a great job, keep it up! Don't sweat the folks who whine about what is, and isn't "pythonic", just keep on learning. (Those old grouches will eventually die off like all the other dinosaurs!) The most important thing to bring with you when learning a new language is enthusiasm, don't lose it.
Yes this is is indeed what I used them for recently in my little rocket lander game that uses vector graphics to draw rotatable and scalable things using a tkinter canvas
I don't know, [there was a blog post](https://www.reddit.com/r/programming/comments/6bgxia/using_python_to_find_the_longest_word_spellable/dhmmtdb/) on /r/programming about spelling words with the periodic table where the comments had a regex to solve it in one line. It wasn't a nasty looking regex either.
It's actually not that complex, just serialize your model, load it in your app and start making predictions. The rest is just standard backend web development.
Working on an algorithmic trading program to trade futures products.
That last link is incredibly useful. Thank you. 
Have you seen Lynda's Tkinter tutorial? https://www.lynda.com/Tkinter-tutorials/Python-GUI-Development-Tkinter/163607-2.html#tab 
I've been using kubernetes at work to deploy flask rest api's. Toss your flask app in a docker container along with gunicorn and you are good to go! 
I didn't get tesseract working yet, but I used subprocess.check_output to get qr codes working last week, seems like a pretty good solution to me.
* extended splat operations: `first, second, *middle, last = range(100)` * `int.to_bytes` and `int.from_bytes`. * `enum.Enum` * super simple things like `print(flush=True)` * unicode variable names: `π = math.pi` (don't use this) * using iterators for everything becomes a great habit * keyword only arguments * improved error messages and stop stupid comparisons The unicode string thing is a mixed blessing. I find it helps just as much as it hurts. However, I really miss `cmp` and unpacking inside function definitions :(. 
Basically the common practise now has shaken out to some version of webserver proxying to a wsgi server, and monitored by something. Server: Apache or nginx. They're both fine, they each have pros and cons. I like apache because I don't need high performance and like knowing that no matter what we encounter, we can do it. Others prefer nginx. You're just using it as a proxy and maybe static content server. I use modproxy on apache myself, cause it's hella flexible. YMMV WSGI: the big two are uwsgi and gunicorn. They're both fine honestly. If you don't know why you'd prefer one, then it really doesn't matter. Only people who know why they need specific options should care. For low traffic, literally any wsgi server will work. It is not at all difficult to switch later either. Supervisor: something to make sure your wsgi server stays up. Lots of options now for that. Supervisord is popular I would not recommend mod_wsgi anymore. At one point it really filled a niche, but most folks have found that proxying is a lot more convenient. It's surprisingly handy to be able to start and stop your proxying server and your wsgi server independently. Note that when I say I use Apache, it's only as a proxy, it's not in control of the wsgi process. When you use modwsgi, apache runs the wsgi process too, for better or worse, depending on what you like. These days I really like deploying to plain jane AWS. Expect to spend an evening or so figuring out how to use the control panels and stuff, but after that, it does everything (and much more) than the other options, for cheaper, with more flexibility. You can get your costs very low by not using more server than you need and pushing static content off to S3. And it's all automatable. I'm a big fan of the vagrant aws option myself. You can have one build script that builds a local vagrant, pass it a different flag and it builds on aws. For simple devops situations like mine this is a good balance of one-touch-convenience and simplicity. People with serious devops needs probably use something more industrial, but for a simple one database app with a mixture of wsgi and static content, it's plenty.
Because 3 is higher than 2
Unless you need all of the redirection, authentication, and other things provided by django, I'd probably go with something like Flask, or eve. Use pickle to serialize the model and use Flask or eve to route to a function that uses the model to predict.
checkout thumbor https://github.com/thumbor/thumbor
So something like kodi? You may want to look into something like kivy
[PyCharm](https://www.jetbrains.com/pycharm/). I like JetBrains products.
I'm liking Visual Studio 2017 Community Edition with the newly updated Python tools.
[Text editor](http://howl.io) (fun fact: Howl was one of the first editors to correctly highlight f-strings) + terminal. Fast, light, and I don't have to figure out how to run my main file instead of that random package I downloaded.
&gt; Services have huge performance gains with improved dictionaries, async functions, and other general compiler improvements. Bull. Shit. Also, if you think the CPython bytecode transpiler is a real compiler, there's a bridge I want to sell you.
disruptive
Try Docker + EC2 -&gt; http://testdriven.io/part-one-aws-deployment/
Anyone have better examples for smarter auto completion with prompt? The example was nice but I feel it has a very limited usage seeing as it continually suggests the same thing every time you put a space.
Liclipse is pretty good, its a light weight version of eclipse and has the python tools built in. I tried visual studio, but it seems to add too much bloat. Just creating a blank project was like 80mb (not that big but still) and even after setting up a good .gitignore I was still having troubles doing my first commit for subs reason. With liclipse it was like 20mb and I only had to ignore a handful of files and had no other issues. Some times it is a pain to get the python interpreter setup, but it seemed to go pretty smoothly the most recent time
Yep, PyCharm has become pretty standard for me. I still haven't run out of useful tips of the day. Used Spyder before that which was good too.
Not like kodi per se, as I have a physical movie collection instead of digital
I've worked on sth like that a while ago using scikit-learn &amp; Flask. Also wrote a short book chapter on that ~2 years ago and the code is still online if useful: https://github.com/rasbt/python-machine-learning-book/tree/master/code/ch09 (If the chapter text is useful to you, please PM, afaik I am allowed to personally share a single chapter as per copyrights by the publisher)
No love for Rodeo? I love RStudio and Rodeo feels like a clone of it, so I definitely felt right at home when I first started using it. 
Ubuntu, anaconda, and pycharm is my stack of choice. Ubuntu makes the most sense out of all Linux distributions because it's the most common, which means the best supported. Linux is much, MUCH more pleasant to develop on than windows because bash &gt;&gt; cmd, and nothing is needlessly abstracted from your control. Anaconda bundles a python distribution (I high recommend not touching your system python at all) and environment management (rather than faffing with virtualenvs, venvwrapper and so on), and has the occasional useful package on the build channels. I don't even use conda install most of the time, and stick with pip. Pycharm because it's a great IDE. Jetbrains IDEs are more or less best in class across the board and having a fairly consistent interface for all your languages, not to mention solid integration of different test runners, web frameworks, and a great debugger, is really handy. Can't write javascript in spyder.
This belongs in /r/learnpython, not here. It's an infinite loop because you don't ever modify `i`. It has nothing to do with `randint()`. If you want to do something a fixed number of times, the Pythonic way of doing that is not a `while` loop, it's: for _ in range(inp): ... Also, that dict is unnecessary. If you want to pick one of something, use `random.choice()`: outstr += random.choice('abcdefghij') This also prevents the bug where you change the dict but forget to update the "10" magic number. Magic numbers are a code smell. 
Same, been using vim + tmux for years now and it's great. The vim plugin [python-mode](https://github.com/python-mode/python-mode) is great, contains a ton of features. 
What's with the language? The proper subreddit for asking questions is r/learnpython
Have you tried googling it?
Looking on the rodeo github, it looks like development on it has pretty much halted. That, and no debugger support (that I know of) was a deal breaker for me. Been loving life with pycharm and sublime-text.
Please read the FAQ and don't spam the forum.
Recently took a course in python we found spyder by anaconda worked very well. A plus is that you can run your code right from the editor no need to use a compiler in your command line. 
PyCharm. PyCharm. Pycharm. 
Spacemacs. Vim + emacs, more or less.
I've bounced around some with my workflow but have tried: * Sublime Text * Atom * Spyder * IDLE * VS Code I noticed some others mention Emacs and thought I would mention [Spacemacs](http://spacemacs.org/). It's a pretty nicely curated version of Emacs that includes pretty good Python support. A nice runner up, which somewhat surprised even myself, is VS Code. The code completion and introspection is pretty good out of the box.
Hey, so I'm a scipy user looking to make my first web app, and I've been trying to figure out if I should go with flask or Django. People keep telling me that Django is overkill for what I want to do. Thoughts? 
Still waiting for your demonstration of awesome which, in your own words, "turns you on" and "doesn't blow". Or could it be that it's you blowing and it's just wind?
terminator + zsh + gvim + python 3.6 + pyenv + isort + pep8 + pylint
Read it as back-the-fup instead of back-the-f-up
PyCharm all the way. It's unbelievable helpful when you're newbie (like myself), small stuff like PEP 8, syntax control or refractor and that's just a tip of the iceberg. 
&gt; ... you should still explicitly use an ordereddict. If think only if you don't want to break backwards compatibility. &gt; If your code relies on a dict being ordered to be correct, ... Honestly I had never the need for this. I think I heard about this issue in one of the new pycon talks from Raymon Hettinger or Brandon Rhodes about the compact dict. But I have to rewatch them to find the part. But I could be wrong here.
Thumbs up for isort, great thing
I did what you did and then tried emacs with split screen. You can use vim keybindings and it works out of the box. What i liked the most is that you can instantly switch open files and use split screen with copypaste, that was for me enough to move to emacs.
You mean removing something you don't want ? That's kinda the point. I'm actually looking forward to a vasectomy myself.
He mentions looking at this briefly without finding anything obvious in the settings. He also notes that he has not been overly concered about that since until recently his gilectomy attempts have not been near the performance where those kind of measurement errors are going to dominate. This is all in the actual talk that is linked from the article.
Lucky you.
PyCharm here too. It's a very useful IDE for getting things done, especially for people used to eclipse or intellij.
Working on a network calculator, maybe with drawing options to Excel. 
There's a plugin available for opening terminal directly in the editor in atom (platformio ide terminal).
Wow, really useful thing, didn't see it before, thanks. 
Vim because I'm l33t. No, Emacs of course, peasant. Oh no wait, just kidding, it is 2017, let me just use a proper IDE like PyCharm.
I am bouncing between sublimetext and (g)vim, plus tmux.
Django works fine on Lambda as well, only annoyance is you still got to provision RDS so you're still not so fluidly scalable as something on DynamoDB.
supervisor + nginx + gunicorn worked well on EC2 until now, but we are moving everything to Lambda. When you think about it maintaining Linux and twiddling packages and system services is such an outdated dumb way to burn your time. It is kinda amazing the amount of management and provisioning overhead we no longer need.
AWS Lambda is EC2 easy mode.
&gt;You can also totally disable power stepping/states in your BIOS. You'd think someone working on something like this would know about these things. I actually talked to him after the talk. In answering someone else he said he did look for it in his BIOS, however did not find this setting. BIOSes are notoriously unintuitive and non-standardized, so Im not surprised. However, there were several pieces of advice given, and he seemed to be aiming to take another look. ¯\\_(ツ)_/¯ 
This is just some code that happens to be valid python syntax; what you see has nothing to do with Python.
The problem with your approach is that any change introduces bugs and these will surface in such a transition project too. And when those bugs will surface you will be the one to blame, fingers will be pointed at you and your colleagues who were opposed to the upgrade will try to politically benefit from your "failure". At least that's what I experienced in many years in corporate environments. So my advice would be to do things in a smart way. Don't advocate or push for some drastic across-the-board project. Instead, focus first on making new scripts Python3-compatible, this is something people will have a problem to oppose. Then slowly make the transition with older scripts that need maintenance. At some point the Python3-compatible scripts will outnumber the non compatible ones. It is also likely you will have scripts that cannot use Python2 because they utilize new features. You will eventually reach a point where the transition is much less painful yet makes a clear operational (and not just technical) sense. You will then be able to easily throw away Python2, and retrospectively position yourself as the visionary who foresaw the need for the transition. 
I used to code in C# &amp; Javascript using the excellent Visual Studio IDE on Windows OS. About 7 years ago I left the Microsoft .NET ship and embarked upon the seas of Linux &amp; open-source. I currently code in bash, python, rust &amp; javascript. It took sometime to get setup with an IDE as coming from Visual Studio I was quite frankly spoilt. For better or worse I eventually settled upon Sublime Text. However every 6 months or so I spend half-a-day trying out alternatives, notably IntelliJ IDEA (i.e. PyCharm et al) &amp; Visual Studio Code. Both products are professional. Soon I will be purchasing a new laptop at which point I will jump IDE ship. Initially I will try VS Code, if after 2 weeks I am content I will stick with it otherwise shell out and go all in with IDEA.
thanks
I develop directly on github, in the master branch. 
&gt; Jason is the only member of the @pypa/setuptools-developers team, so while I have the technical capability of merging a PR due to being an admin of the PyPA org on Github, I was not explicitly made a committer of the repository and I don't feel comfortable merging that change. Having a bus factor of 1 for a project being used by pretty much every piece of Python software seems problematic. Has setuptools become completely inscrutable over the years, or has the community failed in helping maintain tools that they rely upon? 
The broken release (36.0.0) has been removed from PyPi. If you have any mirrors, remove it from there as well.
I'm developing on Windows. I love PyCharm. Setup virt_env_XX inside project directory from Interpreter setup. With XX = MajorMinor, 2.7 = 27, 3.5 = 35. Using Terminal inside PyCharm gives me all I need for a command prompt with virtual environment interpreter. Inside there I do my `pip install -r requirements.txt` or other things related to modifying the virtual environment. Git integration works great. Enough that I start to forget commandline git. SSH debugging into remote computers. This is great from some automation equipment that we custom built and program in Python. Run command script from menu to do my PyInstaller builds to .exe.
109 likes and no comments before mines. this person is using bots. :/
What does refactor do?
Whenever you want to change name of variable instead of looking for all of them you can just use refractor to change them all instantly. Probably there is something else to do with that but I'm not aware as I'm still learning python. 
Can hapen to anybody
I think pip has a similar number of maintainers.
Spend some time reading about the Page Object pattern. That's a good first step to refactoring the project to be more maintainable.
In the completer class, you can check the text before the cursor. If it's a space, then don't offer any completion at all. Amjith used WordCompleter in his presentation, but you could create a custom completer class: https://python-prompt-toolkit.readthedocs.io/en/latest/pages/building_prompts.html#a-custom-completer Check "document.text_before_cursor".
Thanks for the advice
cloud. big data.
vim
One way to get your feet wet here is to get involved with, and eventually become an instructor for, [Software Carpentry](https://software-carpentry.org/).
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Here's a simple example of how to use the custom completer from ptpython. This program uses jedi library for python autocompletion. https://github.com/jonathanslenders/ptpython/blob/master/ptpython/completer.py#L108 As I mentioned in the talk, having a simpler autocomplete that suggested everything is straightforward to implement. But doing a smart completion requires you to build a completion engine for whatever you're building. It took me a couple of weeks to build a very simple SQL completion engine. You can look at pgcli/mycli for how the sql completion is implemented. https://github.com/dbcli/mycli/blob/master/mycli/sqlcompleter.py#L232
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [jonathanslenders/ptpython/.../**completer.py#L108** (master → 80ad73d)](https://github.com/jonathanslenders/ptpython/blob/80ad73d494b164ae4cea29d9e1b4c64bfe82700a/ptpython/completer.py#L108) * [dbcli/mycli/.../**sqlcompleter.py#L232** (master → 77b9904)](https://github.com/dbcli/mycli/blob/77b9904643acb31d8bbf3c8e0b5d88ad239dc4be/mycli/sqlcompleter.py#L232) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dibdxqi.)^.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Refactoring includes at least the following: * Extracting variables, methods, constants, parameters and so on * Renaming all things (as mentioned below) - across whole projects not just file-by-file basis * Converting literals to constructors and vv. * Move classes, functions et. al to different modules * Pushing and pulling members (usually methods) up and down in class hierarchy 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
1. Open the file in append mode 2. Append your data to the file 3. Close the file Remember to apply Python best practices for working with files.
You don't have an 'End' key?
This is cool but what is it used for? 
&gt; tmux with vim I prefer Vim and a tabbed terminal emulator like xfce4-terminal.
This was an interview-like challenge a while back. If you googled enough coding related queries, it would ask if you wanted to take a challenge. You'd have to write solutions to nontrivial programming challenges in 48 hours. Unfortunately it was a bit buggy and sometimes you couldn't submit answers because their server was down or something. I don't think it worked as well as they were hoping. Type `help` to see a list of the commands you can use.
Hi all, I have an intermediate to advanced level [Python task](https://www.reddit.com/r/forhire/comments/6dyzux/hiring_online_paid_task_for_experienced_python/) involving multi-threading, HTTP downloading (must be well versed with requests/urllib etc) and asynchronous programming (Twisted). You must be familiar with Twisted client and reactor - this is the only requirement. The task is small but its required to be done on an urgent basis. Anyone interested can ask details here or contact me via PM. Edit: Position has been filled now. Thanks all who applied via PM.
Fair points, thanks for the response!
Vim forget the rest....
I am just started learning, I finished SoloLearn's Python 3 course but I bought Humble Bundle's Python Bundle so I am trying to absorb as much as I can out of the Automate the Boring Stuff.
I wrote a script to automate fingerprint check in and check out at my office. Luckily I found the default telnet password of the device, then remaining work was modifying it's sqlite database. Here's the code: https://github.com/htlcnn/scripts/blob/6d0c29901337b7cde4847bf656db6aa7a9e6f9ad/zkdevice.py VPN helped me anytime, anywhere. I can even check in/out once for a month.
Scripts are made to do the same thing, over and over, for long periods of time. Years, even. If a bug is found in a library you use in your scripts, you're more likely to see an update to fix that bug in Python 3, because more and more library maintainers are deprecating Python 2 compatibility. That trend will only accelerate moving towards 2020.
I use a macbook Also note that there is a binding for beginning of line, so I assume it is a bug or oversight 
Thank you!
Working on https://github.com/MartinSahlen/cloud-functions-python, google cloud functions for python with support for using flask and django for handling http. Would be awesome with some feedback (it works on my machine).
I hope that the bots were created with Python!
Sure if you want your nuts removed.
Thank you for the feedback. I'll make a point of keeping this in mind in future posts :-)
Awesome tip!
probably someone trying to draw attention to pypi crapitude
&gt;referrer=Doodle Guessing it was a Google Doodle puzzle for something.
There is a power saving mode in PyCharm, have you​ tried that out?
Just fixed it! Thanks!
Information security awareness?
It returns the character that is at the position (iUp or iDown) in strIn. In Python you would just use string indexing: `strIn[iUp]` etc..
as in security-related issues in general with packages on pypi? 
Same here, along with iterm. I've recently tried using both VSCode and Sublime, but a couple things have been holding me back: 1. No hotkey to automatically show/hide. I love being able to bring up iterm quickly. Sure, there _might_ be some hotkey program I could download, but... I don't want to. 2. Vim bindings. Both VSCode and ST support them, but some things don't work.
OK, that makes sense. Much appreciated.
type "request" to get a new solution and start the timer.
I understand scipi is great for large data points and handles matrices well. I don't have personal experience using it for that but a little test should prove if it works for your use case. Good luck!
Meh. I hope you never have to experience any of those yourself. Just keep contemplating the connotations at your leasure.
For checking, whether it is possible to blow malware code into python package installer? Or to ask this question on Reddit? xD
yup. and the general absence of a system for dealing with package removal/name contention.
TBH I kinda thought this would be a joke....
Specifically, that PyPI is an open repository. So you can grab any name that isn't already taken and post malicious code there if you want to. With something like `requirements.txt`, you'd normally `pip install -r requirements.txt` to install a list of requirements from a file. If you forget the `-r` accidentally, you could get that package instead. Weirdly, though, those packages don't actually seem to be nefarious. They warn that they'll upload your data to that website, but I downloaded them to have a look, and they don't seem to have any code that would actually do that. Either they're just a warning, or there's some code cleverly hidden.
cheers just found out about /r/learnpython ...subscribed!
Just wondering how you make Geany virtual environment aware? Does that even make sense in your workflow? Or you rely on ipython to execute your script/application? 
This is my number 1 reason to use pycharm. I'm no longer developing on windows, just editing with windows. 
oh_god_why.jpg A minimal test would be at least one functioning test, with the assumption that continued test coverage would come shortly after. I've never seen crap stub tests like this though at my job. You have my sympathies!
I also have a strong Visual Studio / .NET background. Love using PyCharm!
Google has a lot of code in Python 2.7. A lot of YouTube is 2.7 apparently. 
We could make one.
This is a general Python forum why don't you repost your question in r/learnpython?
It's meant to scrape a stock value, get some other data, and write it to a CSV file
Or Python
Tried to do that but relative imports weren't being friendly. Had the init file, tried a bunch of things, still didn't work...
The PSF is responsible via the [Python Packaging Authority](https://www.pypa.io/en/latest/).
I'm using Vagrant to start a linux VM, which is where the python interpreter is installed. Pycharm uses the interpreter in the VM to run my code, rather than the interpreter installed in Windows. Vagrant also maps the source code directory in your host computer to /vagrant in the VM so it has access to the code as you edit it. Thus, my Windows OS is only editing files and all the actual execution and debugging is run inside the Linux VM. It's a great solution to 'works on my machine' by specifying the same dev environment for everyone regardless of their choice of computer or OS. Here's some details: https://www.jetbrains.com/help/pycharm/2017.1/vagrant.html https://www.jetbrains.com/help/pycharm/2017.1/configuring-remote-interpreters-via-vagrant.html?search=remote%20inter
That's a really clean API.
Thanks for the suggestions, the classes are more for grouping functions.
Maybe try Ctrl-e? That's the emacs keybind and it works throughout macOS. I've never used IDLE though so I can't say for sure. 
I'm using Vivaldi browser I typed: 1. request 2. cd {request folder} 3. edit solution.py 4. # exited the editor by clicking "X" or CTRL+E 5. clear A Javascript error appears and the whole thing breaks.
Pretty much all major FOSS lives on the knifes edge these days, you just usually don't know it.
The version has to have changed, as there seem to be people on that list?
Nope, still have to go through the phone screen. had that last summer.
I'm not quite sure - I went and looked at a few of the packages that site claims to be recording data from, and they're not there - e.g. [tkinter](https://pypi.python.org/pypi/tkinter). That could mean that they were there but have recently been taken down, or that the data is faked, or that it's real but those names are misleading. EDIT: It turns out they were real, but the author took them down when PyPI admins said that if s/he didn't do that, they would delete them anyway. I also looked at older versions of the two packages above, and didn't spot any released version that had code to upload data.
Why didn't you just post a playlist?
-1 for -thoroughness
A lot of Google is on 2.7.
I was thinking that these problems seem really hard really fast. But I forgot that I worked through foo.bar a couple years ago. I guess level 5 is as hard as it should be. Unfortunately, I've forgotten too much math in the combinatorics land.
I literally clicked on this thread to see if there was something I could forward his way. That's awesome.
Yup, that. I won't be developing it either. I mean, I'm pretty whimsical, but I have limits. 
Ubuntu, python 3.4+, virtualenv, virtualenvwrapper, zsh, vim.
Accidentally clicked on the wrong link - I thought this was the story about the terrorist attack in the Philippines &amp; got worried. Fortunately, this time, it looks more like he just had to get some sleep before he could finish fixing the busted release.
Idk, im new, but I am currently trying to make a password maker for the fam.
pycharm FTW (former Eclipse and vim user)
I'd be happy to turn it off, if that's what you'd like? (my point being: it's damned easy to throw stones, and not do anything to help)
These were removed by the author at the request of PyPI administrator (me, in this case).
Nothing you ask is quick, I suggest you start by reading PEP8. Python's Style Guide. It will give you an excellent start point. For the rest the Python docs are excellent 
Tutorial perhaps? https://docs.python.org/3/tutorial/index.html
But then you haven't really installed the thing. 
I mean... Is this a surprise to anyone? I am continuously surprised most FOSS tools I use ever even get updates. Who does that? People with free time?
please do, then maybe some companies would throw some money at it and set up proper governance.
 * **Variable declaration**: There is no such thing in python. Casting is just done by creating an instance of a class with the instance of another class as its arguments, such as `str(1)`. The main built-in data types include floats (64bit usually), ints (signed, arbitrary-size), complex (128 bit usually), strings (unicode), bytes, lists (1D dynamic arrays of objects), dicts (hash maps), sets (unordered collections of unique values that support set logic) and frozensets (immutable sets), booleans, tuples (sort of like immutable lists), ranges (lazy-evaluated ranges of integers), file objects (wrappers around files) any a [bunch of others](https://docs.python.org/3/library/stdtypes.html). And that is only built-in ones, the standard library has many, many more. * **Comparison statements**: Comparisons can be chained, so `0 &lt;= x &lt; 5` works. Boolean operations short-circuit and return one of the values given. So `a and b` will either return `a` or `b`. `not` is the only exception. All variables are treated as either `True` or `False`. `0` is treated as `False`, as is an empty list. Ternary expressions can be don by `x = y if foo else z`. `if` is there, as is `elif` and `else`. `while` is there also. `for` loops behave like C `foreach` loops, there is no exact equivalent of the `for` loop in `c` (loop over a `range` for that). Python has a rich system for handling loops called iterators, I suggest you read up on it. There are also things called "list comprehensions", which are one-line for loops, such as `y = [x**2 for x in foo]`, and generator expressions which are lazy-evaluated list comprehensions, like `y = (x**2 for x in foo)`. * **Input/Output:** Reading from stdin usually uses the `input` function, while writing usually uses `print`. File I/O uses one of various `file` objects, which are usually created using the `open` function. These can be looped over, which loops over the lines in the file. There are standard library modules for more advanced I/O. * **How to install and use libraries**: Install the python3 version of anaconda. This comes with matplotlib. Additional libraries can be installed with `pip install foo`, where `foo` is the name of the library (they are called "packages" in python).
There really is no best option, people have personnal preferences. If your employer uses Windows you might as well stick with Visual Studio Code, it's perfectly adequate, unless they dictate otherwise. I've used Eclipse/Pydev and Pycharm but *for my uses* they're bloated, YMMV. Basically just find something that you're comfortable with, otherwise you'll end up in analysis paralysis before you start writing code and then end up in analysis paralysis :-)
Wow, I didn't realise that PyCharm has it's own linter. How does it differ from all the other linters that are floating around?
You should die for doing that I speak for every below average student
That's not what [Editing and navigation](https://docs.python.org/3/library/idle.html#editing-and-navigation) says "Home/End go to begin/end of line".
I add features to my FOSS tool that I need to do my job, and since it makes us money the effort is justified. My FOSS users justify the extra testing effort because they find bugs before my client does and improve the quality.
Use the /r/learnpython next time. You should not use the REPL to write long code. Put the code in a . py file, then run it with python xxx.py When you do want to run experimental code in REPL, you can import module/function from python files.
My mistake, I thought I posted in that sub. Thank you for answering my question though, I really appreciate it.
I built babylex. github.com/ranman/babylex - the issue with all of these separate channels is that the richness of their response format is pretty varied. Having something that could intelligently pair up or pair down your response would be useful. I'm doing a ton of work with all of this internally at AWS and I'm happy to share any insights: randhunt@amazon.com
Ah you're probably French, walking around speaking gibberish in front of Americans, pretending it's a real language. We all know you do it just to confuse us.
Holy hell
something like reddit = praw.Reddit(client_id=cid, client_secret=cst, user_agent=agt) # get a list of 10 jokes from the 'hot' section of /r/Jokes jokes = [joke for joke in reddit.subreddit('jokes').hot(limit=10)] for joke in jokes: print(joke.title + '\n' + joke.seltext) You'll need to fill in the appropriate values for cid, cst, and agt with your user information. 
Annnnd downvoted 
&gt; 5) why del all the things in shift? Odd code imo. I avoided that issue when I commented earlier as at a quick glance I couldn't make head nor tail of it. Perhaps classic over engineering?
[This problem](https://matrix.itasoftware.com/) is actually [mind-bogglingly complex](http://www.demarcken.org/carl/papers/ITA-software-travel-complexity/ITA-software-travel-complexity.html).
Bad form with print(). Its now a keyword, not a function.
Well shoot. This gave me Zork flashbacks. Don't have time now, but will have to return and learn about the minions. 
What a twist
Would love to peruse the source code.
When you say "menu," are you talking about a numbered menu where you select an entry, or are you talking about a graphical menu rendered with ASCII elements like old DOS programs had? For the former, I don't think you'd need a separate library for it unless you plan on the levels getting very deep. For the latter, check out some of the options listed here: https://github.com/vinta/awesome-python#command-line-tools
* Strip trailing whitespace, especially trailing \^M after @staticmethod. * In general, do not write "\r" (CR). You probably want to write "\n" (LF) to start a new line. I see you using "end=''" in some print statements, so you don't need to append a "\n" to the end of strings you "print()" unless you actually want a blank line in the output. * Check out the standard csv module to see if it works for you, instead of rolling your own csv output module.
It is a function in Python 3.
You need to run it in command prompt, not in the Python shell.
Not to be an asshole or anything, but have you tried opening up numpy or scipy and looking at the code? 
&gt; oopthereitis.com this link is not working 
Just curious is Medial records in hl7 file format? I recently start learning parsing hl7 file. 
I'm more surprised someone could code in Python for 5 years and never learn how to use classes. 
Sorry, I meant command prompt &gt;This was came back: &gt;&gt;&gt;&gt; pip install pyautogui &gt; File "&lt;stdin&gt;", line 1 &gt; pip install pyautogui &gt; ^ &gt;SyntaxError: invalid syntax
I was in the same position as you, and learned from reading the source code of similar modules to the one I was writing. Also, the following tutorial really helped me (it's a bit old, but good): http://intermediate-and-advanced-software-carpentry.readthedocs.io/en/latest/idiomatic-python.html
Yup, I've definitely done that. I'm just not sure what is convention and what isn't.
&gt;I want to write a package for my research group to use, which means I need to write classes and methods. Not necessarily. OOP is a good tool sometimes but it's not a necessary foundation for modular python code. Seriously, if all they need to do is import functions and run them on data and parse results, they could do stuff like this: from yourlibrary.geo import ingest_csv, calculate_foos, guess_neural_wavelength data = ingest_csv("datafile.csv") for foo in calculate_foos(data): print('foo name: {}'.format(foo['name']) gnw = guess_neural_wavelength(foo['brain']) print('wavelength: {}'.format(gnw)) Something like that might be enough, and it could boil down to a python file in a directory. A lot of science is heavily data oriented and you just one to take one thing, ingest data, calculate stuff, output more results, calculate other stuff based on those results, and then maybe save it to a file or something. You might not need more than dictionaries and module level functions and clean organization of your python modules. OOP might make it cleaner, but it might just not be necessary. Sure, learn OOP if you want and see if you can apply it, but if it's your first time delving in you might just attack the problem how you're most comfortable. Don't think "professional python modules need classes" because they don't. Sometimes it makes things easier to read and use, sometimes all you need are python functions at the root level of modules. If you know you want OOP because you know inheritance and stuff like that will make your life easy and because your problem is highly stateful, sure. If you want it just because you think it'd make it more professional and easy to distribute, I'd reconsider. I'd look up how to write a setup.py and package python code before OOP in that case. A language like java OTOH is very focused on OOP. You'll find it very hard to escape OOP in java, but for python you can easily do a ton without ever having to use it (and it sounds like you have).
That's not the command prompt, that's the Python shell. 
Ahh. I see. So I don't have to type python before doing pip install. Thanks!
Thanks for the advice, I appreciate it. 
No problem! Best of luck
Nice! Thanks!
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [jdf/processing.py/.../**LiveCamTest.pyde** (master → 1e31b21)](https://github.com/jdf/processing.py/blob/1e31b219326c6c2cba5c90bc995eb632555774fb/mode/examples/Contributed%20Libraries%20in%20Python/OpenCV/LiveCamTest/LiveCamTest.pyde) * [jdf/processing.py/.../**examples** (master → 1e31b21)](https://github.com/jdf/processing.py/tree/1e31b219326c6c2cba5c90bc995eb632555774fb/mode/examples) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dicqzqr.)^.
You can get [TLE](https://en.wikipedia.org/wiki/Two-line_element_set) data from [Celestrak](https://celestrak.com/) or [Space-Track](https://www.space-track.org/auth/login). Also, [pyephem](http://rhodesmill.org/pyephem/) is a great python module to perform orbital propogations. The developer of pyephem also curates the [sgp4](https://pypi.python.org/pypi/sgp4/) module.
... or you could try building from a local cache of pinned, known-working dependencies ...
I meant customisable binding. My keyboard has no end key
Thank you o7
Good luck on your endeavours. Since you are based on Flask you can do AWS easy, and really easy with something like https://github.com/Miserlou/Zappa (there must be similar also for Azure).
async is great, but it is not a replacement for all that came before it. Threads and blocking calls are still going to be more performant. And async doesn't work well with games, desktop applications, drivers etc. That said, Lomond does split the IO from the functionality, so it could be integrated with async frameworks in the future.
best python training with placement
On a simple sticky note program. Anyone can find it here: https://github.com/GrgBls/Noty
learning strings!
FWIW (~~given TLE.info is down at the moment~~), [I adopted and extended a similar tool I found here](https://github.com/MartyMacGyver/satellite-data-visualizer) for seeing what satellites are in the sky overhead at a given time. Edit: I've updated my source code to work better with current libraries. Note that TLE.INFO appears to have gone IPv6-only, which may affect your ability to run this. 
Learning how to test different projects by using unittest, doctest and nosetest.
Our system translates them into a mastered format before we get to it so it's consistent across all customer input 
Yeah, while I applaud his enthusiasm I would be skeptical of reading a book by someone who had not learned about unpacking after 4 years of python programming.
While I get true anomaly looks better because you can see the rotation, using longitude as the angle would show where the most crowded orbits are much better. 
You'd still need atleast 6 characters to execute your script `exec a`.
Exec? Where we're going, we don't *need* exec.
I think OP is implying that SMS spoofing is always evil.
Did anyone actually look at the code. This is silly https://github.com/petersn/six-char-max/blob/master/max6.py
I personally learned to appreciate 80 chars, but I'd be hard pressed to find a source for the idea that it's optimal, especially as so many people ignore it by default.
Why ``gain``? This name doesn't give any hint of what the library does and doesn't sound very fancy. From the example, I see that it is possible to go from one level to another but cannot choose different callbacks, depending on the situation, which might be a requirement for more complex crawls.
Sounds like a disease java developers have
I did. And yes. Yes, it is.
1. Recursion is slow. You can replace recursion with iteration and a stack. 2. catching exceptions is slow. Try replacing them with if.. else... 3. the format almost looks like json. If the data allows it, you can transform the text (add colon, quotes and comma) and use a json parser. Might not be memory efficient, but easy to write. Nonetheless you should really post example data (like ChikubiTwist already said). Can't run or test your code without any data.
These things always skip error handling... Here is the checklist mention in the video: http://python.apichecklist.com/ 
https://stackoverflow.com/a/1732454
I'm not sure why this is getting downvoted, probably because this question is asked a lot here. But distributing Python applications is not easy, which is why there are so many posts asking for it. If you are targeting Windows only you should look at Pynsist https://github.com/takluyver/pynsist
&gt; If you are about to ask a question, please consider r/learnpython or the learn python discord.
Normally stochastic monte carlo methods are used to predict the future motion and population. It is how we do space debris prediction.
I'm using confidential data so unfortuantly cannot share it. However, ESA MASTER can give you data in the same format.
I was told by an expert that was bad for security but I don't know why. No doubt someone here can either explain or correct me.
regex101.com
In Python3, exec is a function, so you could do this: e=\ exec e(a) Just in case you need another reason to finally ditch Python 2 ;)
Ok thanks 
I tend to stick with 80 characters for simple reasons, ordered by frequency: 1. Multi-tabbed editors 2. Diffs 3. Editing with vim in a terminal With my big monitor, it's nice having multiple files, easily readable, opened side-by-side. Opening up a diff, boom, I can see everything. I fudge the 80-char rule a little bit, but rarely. Legibility first.
Wouldn't `scrapy` be fine as well? I believe that's async as well.
Actually, the more I learn about Python, the less I do with classes. Python has closures and generators, both of which can be used to encapsulate state, and inheritance is all but useless with dynamic typing.
[Treehouse](https://teamtreehouse.com/) has a pretty good OO python course for beginners. They give you a 7-day free trial too so you can have a look and see if you want to pay for a subscription or not, although you could probably finish the course in 7 days.
no it does NOT come from punch cards, the MEDIUM that brings it to us today is punch cards, but ultimately it came from somebody's reasoning
Yeah, I looked through everything on SO, none of that, strictly speaking, helps.
I've been sticking with 80 characters lately and it's not nearly as hard as I thought. Still I always get tripped up with [situations like this](https://stackoverflow.com/questions/6609956/python-function-argument-list-formatting). When I use either if the selected solutions, flake8 complains! Looks like [reading more about the relevant PEP](https://stackoverflow.com/questions/15435811/what-is-pep8s-e128-continuation-line-under-indented-for-visual-indent) showed what I was doing wrong. Have to use no arguments on the first line (just opening paren) and then you can indent however you like.
Going to be working on a coherent Bessel beam interference simulator. Basically translating from MatLab to Python. I need to figure out how to get meshgrid like structures in Python and also get better at adding sliders. I wish someone had something to just say "this variable is on a slider, do everything normally but this variable's definition is defined globally by the slider value".
Inheritance is useful in some cases. Frameworks like `unittest` come to mind, or like you said extending `UserList` and what not. But writing down a base class with `raise NotImplementedError` everywhere is just ugly. I had a phase where I did it to do "proper OOP" and then realized what people refer to as "OOP" is in many cases just a collection of static typing workarounds.
I once parsed a large ASCII mesh (10 million tetrahedron and the xyz points). I wanted the bounding bag of triangles. It took about an hour. I racked my brain and decided I didn't need to use int or float. Got it down to a few minutes. Another time I took a horrifically slow XML parser and rewrote it to change a few of the numbers, but only the keys I wanted. Sped up a parser written in C library with couple 100 lines of Python by 100x. I also fullly parse 2 GB binary files with Python in 4 seconds. Python is crazy fast. It's not always a language problem. The the trick is usually to just do less. 
Um, well, yes ... except if installing Python is too hard because old machines and out of date Windows, etc, then I'm thinking installing VirtualBox / VMWare (nevermind say Vagrant to make it easier),m -- which all require hardware support for virtualization that might not exist on said old machines -- would be even more of a pain, yeah? Or do I misunderstand you?
I just found this post. Initially I found [this](https://www.reddit.com/r/Python/comments/6enp9c/what_is_the_point_of_this_package/) one, which made me to do some research. What started as _let's kill some free time to forget about the cold_ ended with an email sent to Donald Stufft with a [Security] tag included. You might want to get in touch with him to find the details. Maybe you (_as PyPi admin_) could take some actions to mitigate the issue until a proper patch will land in the codebase.
Sorry for my ignorance, but could you leave here some info about what needs to be done or where to find such information ?
Why do you line.split('=') twice? Edit: I see, it's because of the unpacking error if there isn't an '='. Probably faster to do: items = line.split('=') if len(items) == 1: .... if len(items) == 2: .... Also, you assume that every line has something on it, but just looking through the file, I'm seeing some blank lines (e.g. #200024). You should check for these and skip. In your main loop you check for them and *break* (probably want to *continue* instead), but in the parse-bracket's loop, you don't check for these at all. Edit: Also, you could probably check for '_data' in self.data less. Just initialize it as an empty list before the loop and then you don't need to check each iteration. Will save some cycles. Also, sometimes when you parse a giant file, you encounter situations you didn't expect in their grammar that you didn't see in your small test portion. Might be useful to make your iterator use enumerate, and then print the line number every 20k lines or so. This will show you if either A) The algorithm just gets stuck at one point or B) If it tends to slow down over time (good sign you are doing something inefficient like string concatenation). 
I think Linux Mint is the best OS all around. So that's what I use for coding and everything else. TBH there is no best OS "for python". Most of python is OS agnostic; so use whatever you feel most comfortable with. If you need help with the code, come visit us on /r/learnpython . Edit: or use both OS's. There is nothing wrong with writing code in Linux one day and continuing the next day in Windows. 
Python interpreter is a VM of sorts. A virtual machine providing virtual environment to access machine resources. Unlike say C language which is static and thus can be compiled into assembly which runs on system directly. The methods and abstractions in Python don't allow easy compilation or conversion into assembly codes. There are converters to C and C++ but they all have drastic issues and loose plasticity of the language. The only one which actually worked for me was Nuitka which converts python to C++. But the product is not source code of C++ but a mix of C++ types and direct calls to libpython. So it is sort of dependent on python. However as it does this it is incredibly compatible and allows us to compile binaries for seamless distribution.
As everyone else has said the OS really doesn't matter. *BUT*... If your interests lie in areas that require packages with heavy use of C extensions (scientific packages, image manipulation packages, etc) and the package maintainers still haven't decided to provide **wheels**, then life is **much** easier on Linux or MacOS than Windows because they'll both have some sort of C-compiler, with Linux winning out because it's got an extremely easy package manager built right in. For just learning the language, they're all good ... but I'm hopelessly hobbled on Windows as a VFX developer, because more than half the libraries I need either don't compile on Windows or can only with extreme gymnastics and the consent of a fickle and vengeful god.
Same here. I use a pretty standard atom setup with the platformio-ide-terminal installed so I can have a shell in atom because I hate swtiching programs for things. 
Pasting the gradient onto an image is easy as hell. What I need is gradient mapping. Basically eli5 would be, if you have BW image (0—255 as black to white pixels) and you have your gradient, say red to blue, you kinda replace black/white pixels on the image with the corresponding colour from your gradient, interpolated to 0—255 steps using the colours of that gradient. It's not just gradient overlay. 
Truthfully, you're the only person who can recommend something to work on because none of us are sitting in your biocomputing class. Look through your notes, and see if there's a slightly harder problem than one of your practice problems. Then, extend your homework solution to solve that problem.
Either make python code and have then deal with the pain of installing python. Or a possibly more reasonable solution is to make a website that let's then do what they have to.
If you created a virtual environment (venv) and installed the twitter module inside it, make sure that you are running the script inside the virtual environment. This is the most likely reason that the script cannot find the module. 
&gt; I just want to say that I asked why it's so hard, no how to do it. This is called whining.
OP, 2 pieces of constructive advice: 1. Submit as a link, not as a text post 2. Link to the repo, not the readme markdown.
Just curious: what is your success rate with this method? 
It is 3 characters per line. The problem is the "exec" command and escaping quotes and backslashes.
I'd say 98%+ as long as you read the documentation and understand how it works. If the above does not work for you, be sure to read the [run-time information](https://pyinstaller.readthedocs.io/en/stable/runtime-information.html) and [when things go wrong](https://pyinstaller.readthedocs.io/en/stable/when-things-go-wrong.html) sections.
Just don't make the same [mistake as the max 6 linter and forget longer escape codes](https://github.com/petersn/six-char-max/issues/3)
I use it for the Mac version of my [ScreenBloom](https://github.com/kershner/screenBloom) app. It mostly works fine but there are quirks related to the version of Python installed on the system you use to do the compiling. On Windows I greatly prefer [cx_freeze](https://github.com/anthony-tuininga/cx_Freeze), but it is kinda long in the tooth. That is the main problem with Python tools for creating standalone apps, they all seem pretty old and dusty. A more modern implementation would be very welcome.
Noted, thanks.
If you allowed yourself one cheat line you could have made max3: e=\ exec e( ''' p\ r\ i\ n\ t\ (\ '\ h\ e\ l\ l\ o\ \ w\ o\ r\ l\ d\ '\ )\ ''' ) 
Just this morning I needed a quick python hack to parse a series of 24-28MB .csv files. 'import csv' and I was on my way, the script was damn fast. Not as complex as OP's file format though.
Yeah man, I understand the concept just struggling a bit with actual implementation :)
This sounds interesting and ill definately look into it!
Someone put together a PEP to change exec() to exe()
Thanks. The application I am thinking of needs to pass data between a lot of functions. That is why I think OOP is a good idea. Instead of something like `foo(bar(biz(data)))` I'd like to do something like `data.biz().bar().foo()`. 
I've used https://www.pythonanywhere.com/ before for similar things. Not sure how intuitive it will be to set up live/online plotting, but I've done it just via hosting a simple flask app and using that as my dashboard.
I have functions which return, say a remote file path and a local file path. So my local path = get_local_path()[0] That's the only way to get the value right? I tend to not like doing that too much. Currently I am using separate functions for most things. 
I've only used it in one project, but I like http://docs.python-cerberus.org/ 