I like the leanness of its test discovery. Practically no boiler plate code for meaningful tests. Next would probably the fixtures - easy to create, good ones built in and lots of plugins. Monkeypatch, mocker, faker and tmpdir have been particularly useful. But the main reason I asked is definitely the amount of “useless” classes that unittest requires you to write. I’ve been using it for about a year and am still learning. There’s a lot to explore. 
It should have hjkl Movement controls and other vim like thingies
The while loop example is infinite ... 
Not much really. Python is too slow for engine level code, and too cumbersome to interoperate with for game logic. There are some exceptions like EVE that have game logic in (Stackless) Python, but C++ or C# are generally a lot more valuable for AAA game dev.
Hard to tell without your code. 
How to make gridboxes in python? I used pygame but the reloading was difficult.
Nice. Keep on. Been thinking doing something like ff6 or breath of fire 3 I might check that out 
the code is just the solution that was provided. https://gist.github.com/MichaelSnowden/2b5ab97322b1e8d1631df59c6a71a0e1 I passed in the template path and the source path of the emoji images from that stackoverflow question. But it wasn't able to find anything. I found a smiliar solution here, but this also returns nothing. https://stackoverflow.com/questions/35658323/python-opencv-matchtemplate-is-mask-feature-implemented 
MIT developed a language called [scratch](https://scratch.mit.edu/) which is an open sourced animation based programming learn to do program. There are different flavors... but I linked to the most common one and this is an excellent aide for your 8 year. It sets your child up with the basics of programming very well. -dk
I thought about scratch but I am a worried, that it flash dependency is a problem. There is a non\-flash version in work, but it is not done yet and most of the examples still use the flash version. Correct me if I am wrong.
There's a downloadable, non-Flash version. Or there used to be. You might also look into pygame.
I'm just concatenating strings to be honest. Look for setup_strings() and print_playfield()
Onde é que está o seu código?
Looking for an experienced python developer for a full-time position in NYC. Responsibilities include supporting a critical production trading platform and building tools to automate and monitor it. Can make a big impact. Must be a good problem solver, communicator, work quickly and easy to deal with. Finance, Linux, c++, or java knowledge is a big plus. PM me if you are interested.
I have around a year to graduate and don't really feel like focusing on more languages than Python so I have been instead planning to work on multiple fields (game dev, web dev, Machine learning and desktop applications, math applications) using just Python. All seems to be fine but game development with Pygame feels kinda like an unnecessary chore when engines and stuff exist.
You can look into [Godot](https://godotengine.org/) I guess - it's an engine that allows writing game logic in Python. However, it's not really popular for large games, though it should now be capable enough to build one should you want to.
&gt;Object oriented API, with language options such as GDScript, Visual Script, C# and C++. No Python?
https://github.com/touilleMan/godot-python
You shouldn't confine yourself by the language. While it makes sense to be very proficient in one, you will need to be flexible. Focus on the concepts of software development.
I am already flexible, I worked profesionally with C#, not just with game development. Joined game jams and stuff using Unity3D. But I am at a time that I don't want to be flexible and instead focus on different fields with just one language. All other fields like web development and machine learning seems great with Python. But game development, not really.
Thanks! That should be easy enough. 
A text based simple rpg game. Maybe?
I would like to do something with graphic do something keeping the interest. I guess a point&amp;click adventure maybe doable.
You're welcome!
GDScript will take about 5 minutes to learn if you already know Python.
You can check raspberry pi's official website. Afaik there are projects and courses especially designed for kids.
Why users have to copy the code and create a virtualenv themselves and all that? You can just create the virtualenv once and have everyone read permission. Then add the source command to /etc/profile so everyone will source it automatically when logged in. Put the code in the place where everyone can read it? NFS share for example?
Human Resource Machine
There are a Python extension through the gdnative engine. It's not officially supported. But it works
I limit it to make sure that someone doesn't upload a 3gb file and block the site for others. I'm working on a version of my online converter that you can install &amp; run locally, and it won't have any kind of limitations. Check the github repo
A google search for "games developed with python" returns results. Including a wikipedia page that lists a handful of games that use python in some way. However, more likely than not python is not used much as a core language for games. Essentially it would mostly be an add-on for external interfaces. So the reality--whether you like the answer or not--is that you would likely need to know a whole lot more than just python to get into professional game development (at least with big name dev shops). Your question is sort of like asking "I'm good at golf, how do I get onto a professional cricket team?". 
I think at that age the best would be programming some turtle moving o. The screen. Nothing super fancy . Not even using a real programming language or just get Lego with automatization. 
If Flash is a problem for you then [non flash scratch wiki and links to HTML5](https://en.scratch-wiki.info/wiki/HTML5_Player) should help. Pygame is another solution (as mentioned above), though I found Scratch to be pretty good and intuitive. Here in Taiwan they have robotics with Legoes (literally legos) that are then programmable with Python and/or and Python GUI which I was forbidden to play with (I was over 12 years old!) and my son is 22 years old... but I totally wanted to play! You have choices. Scratch or Robotics with Python GUI seems to me to be best for an 8 year starting out because there is more material representation going along with the programming concepts that a child would seem to benefit from without as much life experience. Good luck and let us how it goes! -dk
Have a visit to : https://docs.python.org There you'll find : * Tutorial (the official one) * Python HOWTOs (for more specific subjects) * Beginner's Guide * Book List And IMHO, something you'll keep getting back to: * Library Reference What I can suggest is getting your hands dirty, books are great, but there's nothing like learning by doing things. Choose some easy things you would like to do, and then try, if you get stuck you'll come back with more targetted questions. You'll make mistakes, do things in awful ways, but you'll learn a lot by doing so, keep at it until you get better, then come back to your old scripts and projects read them again and improve them with your new skills. Also use source control sw, learn to use debuggers, IDEs (not needed in order to start), profiling sw, etc...
To keep him interested why don’t you do this You can code things into mine craft by yourself so try that i saw it at a gaming festival but I have no clue where you could get it 
Python is used a lot in game dev -- in tools, processing assets, scripting 3D software, but not so much in the game engine. I wouldn't discourage you from writing a games engine in Python, it would be a fantastic learning exercise. And you could make some fantastic Indie games with Python, but I'm afraid that you have almost zero chance of working on a Python games engine for a games dev studio. Source, am author of Beginning Games Development with Python and PyGame.
Agree, and spyder for scientific/interactive
I love pycharm and I've been using it for ages: vs code is also very nice though (I use VS for Unity, though Rider from jetbrains is looking better and better). I'm not familiar with Spyder unfortunately, so i can't offer an opinion there. You can also use vim bindings in pycharm if you want, which makes it pretty easy to swap back and forth (I think having at least a passing familiarity with vim's bindings is important, since almost all servers have at least vi)
[https://www.amazon.co.uk/Coding-Beginners-Using-Python/dp/1409599345](Coding For Beginners Using Python) This includes games 
My current preference is PyDev on Visual Studio Code (http://www.pydev.org/vscode/index.html)
That depends on where the installation is made. If it's a global installation, it's not only appropriate, but in most cases also needed.
Is that python?
Have a look at Turtle ( included in the std library ) it's a very fun and intuitive way of learning computer grapics. Ideal for children. https://docs.python.org/3.6/library/turtle.html 
He's not going for realism. Just destroying your self-confidence, not your filesystem AKA life.
Ooo . This looks like a run project, thanks!
Great project -- rather than a reed switch though: https://opengarage.io/
Thanks. Funny you mention that - I was actually tinkering around with using one of those cheap ultrasonic modules. Didn't know a complete product like that was available, though. I didn't think it was going to be as reliable, but maybe I should look into it again.
I've found what you need: https://nostarch.com/catalog/kids
Yeah man checked that website. It’s good to learn syntax and basic stuff, but not in depth. Found out a book called “learn python the hard way”. It got great review. Have to check it out if it’s worth. 
Awesome. I've been having fun with MicroPython. I used to use Arduino for everything like this but I got tired of the slow compile/upload times, not to mention having to write in C++.
I started this project before getting the Raspberry pi 3 so decided to finish it on the arduino but the Pi has a lot more capabilities.
Check out https://codecombat.com/ It uses python to play the game, it's free but you can get a sub if you want to unlock all challenges
It takes a while to figure that stuff out. Like all big IDEs there is a lot of capability, but a steep learning curve.
Thought of that with mine as well, you can get a proximity sensor and mount it near the bottom, probably where the safety sensors are.
Yeah, that would also work. I figure no harm in having 2 switches, they are super cheap. That way you kind of get 3 states - open, closed, and nothing (i.e. currently opening or closing or half way).
KEEP IT SIMPLE STUPID, haha but ya that way it could output if the door was stuck as well.
Yeah but how do I figure it out? I've spent two hours trying to Google stuff and I've gotten no where. Honestly I'm probably just going to go back to spyder because it's been several hours and I can't even properly execute my code.
I have a normally closed reed switch on my doors that is set so that anything other than the door being completely shut reads a open. 
[Pycharm Docs.](https://www.jetbrains.com/help/pycharm/quick-start-guide.html) [Running code.](https://www.jetbrains.com/help/pycharm/quick-start-guide.html#step8) 
Pycharm is good with big projects. If you are generally just working with single scripts or small projects it might not be worth the effort to learn.
Sorry, this is these are the [full docs](https://www.jetbrains.com/help/pycharm/meet-pycharm.html). I sent you the quick overview. [Here](https://www.jetbrains.com/help/pycharm/run-debug-configuration.html) is the section on running code.
Not sure why this got downvoted (it was at 0 at the time of writing). I used to do a lot of software development for control systems operating doors like this, and it absolutely has to be a consideration. Kids, cars, whatever - an automated door doesn’t discriminate if you don’t ensure there are physical mechanisms to prevent damage/injury. Regardless, cool project OP.
Yeah it's a good point, and my door does have an optical sensor. I will have to take that into consideration for the next version.
There are backslashes in your ASCII art string literals. Maybe you wanted raw strings?
Check out [visidata](https://github.com/saulpw/visidata), it has a really nice TUI library behind it.
If your door has Photo eyes/safety beams, you shouldn't need to necessarily program anything. The door will not close, unless your controller has a "constant action"(ie. You are able to hold your wall button down constantly to override the sensors) the door should stay open. New motors have TTC(time till close) built into them, but wont close if the sensors are obstructed. Also good to check your force setting on the operator. Sorry. I'm a garage door service technician so I figured I'd put in my 2 cents.
You could use a happy effect sensor on the chain and count duration
Thanks for the info, I appreciate it.
i just did. thanks :)
brilliant. thanks :)
Maybe tn.read_until(b”\n”)
Your project appears to be more responsive. One problem with my opengarage is that when I get home I have to wait for an IP address before opening the garage door, therefore there's a delay. 
This is cool as hell! Nice work!
CSV reading and writing is in stdlib: https://docs.python.org/3/library/csv.html For web front end I would have used [Flask](http://flask.pocoo.org/).
https://github.com/razzledazze/Turtle-Perspective
Thanks, I’ll it and let you know 
Thx
Thats pretty neat. The idea with a hypercube is that you can fit 3 cubes around a vertex in 4D space and fit the groups together to make a bounded shape in 4D. Although basically all projections I've seen show the bounded bit because there aren't any verticies that don't already have 4 connections, this is probably one of the best to show the cubes fitting around each vertex even if some of the cubes are a bit messed up.
Installs pytest, doesn’t write pytest-style tests. Wtf? 
What do you think it does? The code goes from left to right, so it it's easy to follow.
In case anyone wants to know, this app is called [MQTT Dash][1], and it deserves some recognition. It's an easily configurable control panel for MQTT. [1]: https://play.google.com/store/apps/details?id=net.routix.mqttdash&amp;hl=en
The regular old FFT knows nothing but the array it is given. indices are the natural unit of it, or "cycles per pixel."
My opener flashes the light 6 times if something is in the way. Maybe you can use that to alert thr app there is a prob? Or for nothing you can; if commandToClose = True and amountOfTimeToClose &gt; timeExpectedToClose: notifyApp() 
Probably not. My bad
Here are some pointers: * `split()` is a *method* that is probably called on a string that you left out. You read read about how it works [here](https://www.tutorialspoint.com/python/string_split.htm). * `[0]` says 'the first element of the list', referring to `split()`'s output * `[1:]` also selects things from a list but via what is known as *slicing*, a short way to write things like 'every other element starting from the third to last element backwards'. You can learn about it [here](https://stackoverflow.com/questions/509211/understanding-pythons-slice-notation#509295). 
No way to know: `split()` isn't a built-in. You need to ask whoever wrote that function.
How about this? Dunno if this works quite right, but I think it would: from pathlib import Path print(len(Path('.').glob(**/*))) 
So the output of the FFT function is the shift in terms of indices? In some cases, the shift it outputs is much larger than the arrays themselves. Does this mean it's looping past the end of the array? I pad the data with zeros, so I thought that shouldn't happen.
That one hell of an “oopsie”. The “maybe I should fix it, maybe not” is pretty bad though. I feel quite confident in asserting that the vast majority of `requests` users are under the impression that they’re getting valid HTTP response content just like `curl` does. As the Principal of Least Astonishment goes, I am astonished to learn of this behavior. 
That is incredible. I'm going to have to use that more! Unfortunately it looks like he wrote his own curses library for columns. That's not bad, but that means his vdtui library is only for that one task. I may be able to edit databases with it though!
This is really cool. I may try out a project like this
that worked but how do I pull the data. When i print worksheet one i get "None".
I am looking for a full time job as a python developer, please review my profile and let me know the further details website link :\- http://theparadoxer02.github.io
r/learnpython
It could use some media queries..
Does it take into considering any objects or material in the way so in case something or someone is under it, it wouldn’t just close and damage/hurt someone
I've never used signal.correlate. What I can tell you is that in general an FFT does not know anything about your data. The only unit length available is a sample or "pixel." So the output of FFT -- without consideration of anything else -- is from -0.5cy/px to +0.5cy/px. For even array sizes that is actually slightly less than -0.5 to exactly +0.5 or vica-versa, since the DC (0cy/px) component must always be present and one of the ends has to get dropped to have that happen. Try making two sine waves with a known phase shift in px and seeing what the output of the correlate function is.
Thanks for your response. Are there ways around this? Obfuscation perhaps?
I think your reasoning makes sense. So if each index contains one sample, then the shift is in indecises. 
Здравствуйте друг :-) how good is your English? Personally I can't advise you on a specific book to read. However, I've been working as a professional Python developer for a few years now. Ironically, I'm also learning Russian! (Trying at least), so if you need assistance or guidance, perhaps we can trade tips ;-) 
I think putting the source command in /etc/profile could interfere with tools in base RHEL/Fedora that depend on old versions of libraries. Same reason why you're discouraged from running pip as root to upgrade the packages the base OS tools depend on.
I believe the purpose of using FFT correlation is that it allows subpixel registration.
It’s for a friend, so unfortunately we can’t make the deal 😍
So much cool. Good job! 
 def print(n): #return import os exec(os._exit(-1))
Huh, I guess I should probably just test it in Python haha. Thanks for the help!
Aha shame :-) best of luck to them!
This is a good video I think: https://www.youtube.com/watch?v=sL_syMmRkoU
You misunderstand. There's no need to get around this. It's not a problem.
You could use pyrasite -- http://pyrasite.com -- to manipulate the print function in memory so the code isn't even touched. 
😊 thanks!
Hey man That's amazing progress! How long did it take for you?
Your sensor is backwards. You want it to show closed when they're together. In case there's a fault (garage door gets stuck), you want to know it's not closed.
[Here is a good place to start.](https://automatetheboringstuff.com) 
Awesome! I'll check that out for sure
Without seeing your code and the spreadsheet in question it's impossible for me to tell you that.
https://hastebin.com/jepipuvoye.py Se eu tirar a linha 365 (o comando do add hotkey) o programa funciona corretamente 
Alas, that doesn't help. The problem occurs, when your automated software pops up a lot of windows and closes them, too. In this scenario, PyAutoGUI often detects a window, but it is gone when you want to interact with it a few milliseconds later. This crashes your automation, if you don't try/catch that interaction. And in production that happened a lot. The other problem is, that unlike the Windows Autohotkey, you really need to tightly connect to the window you want to operate. To locate windows, you can print the "what is currently visible" list to the screen using: app.Properties.print_control_identifiers() But there was no way to get the identifiers into something that you could examine from code. (There may in never versions...) I ended up changing the above function to return this output as an string object I could search through to check for the existence of progress windows that kept popping up and closing. Another thing that caused great pain is that you could not really debug the application, because it meant stealing focus from the windows application you are automating. Which can change the behaviour of that application. I recently learned about web-pdb (https://github.com/romanvm/python-web-pdb) which would allow remote debugging and help automating apps a lot because you would not need to mess with windows focus to debug. 
Alright, so I ran a quick test: import pandas as pd import numpy as np from scipy import signal import matplotlib.pyplot as plt N = 1024 ix = np.arange(N) signal1 = np.sin(2*np.pi*ix/float(N/2) + 512) signal2 = np.sin(2*np.pi*ix/float(N/2)) plt.plot( signal2 ) plt.plot( signal1) plt.show() correlation_array = signal.correlate(signal1, signal2, mode='same', method='fft') best_shift = np.max(correlation_array) shift_itself = correlation_array.tolist().index(best_shift); Shift_itself is 263, which is roughly half of the actual shift of 512. But since you said the output ranges from -0.5cy/px to +0.5cy/px, is this what I should expect?
Agreed. When everything you want to do is possible in Python with acceptable levels of time investments, it is pointless to use or learn Autoit or Autohotkey. If not, it is a good, working alternative.
Youll use sql to store the data, Python can automate that. For instance write a program that generates the report and copies it on to excel and automatically send the email with only 1 command.
You be the judge: - used selenium to order a designer dress for my wife at midnight - automated crypto trading - automatically [change brightness](https://github.com/kootenpv/brightml) - create/hosting a personal TV guide for next episodes based on wikipedia API - collect my historic data for chrome (it can otherwise only save max 3 months) also saving code snippets and other metadata. Didn't find a use though - using deep learning to move the mouse based on where I look at the screen (computer vision) - email myself reddit posts on this thread when it has 30+ upvotes - [autocomplete code based on a neural network](https://github.com/kootenpv/neural_complete) This list could go on and on ;-)
Legendary
That's smart.
Try adding this: signal3 = signal1[shift_itself:] plt.plot(signal3) plt.plot(signal2) plt.show() You should see them overlap nicely. The original correlation matrix contains some subpixel/non-integer information that may or may not be useful in your application. btw, if you do `best_shift = np.argmax(correlation_array)` that will be much faster.
I don't know the english terminology for the records I am scraping for. I used a online translator, hope it is understanable: - price-earnings-ratio - dividends - performance
That makes sense to me! Good luck!
I greeted the world with a short script that only I saw. I mean, it had been done before, but this one was _mine._
I created this module to increase awareness of the English language requirement for learning programming. I'd love to see multi-language support for documentation and comments, especially as Python 3 support unicode. This module simply redirects help() calls to google translate, and although certainly not an ideal solution, hopefully illustrates what a solution could look like. 
Your Russian example sets help lang to "chinese (simplified)"
Started in September part-time. Started over in November with the kivent engine. Full time work started in mid February. Overall 3 months full time, 4 months part-time. 
Is this self paced or paced with an online class
I use python+Postgres+js for data analysis and reporting. The python part I use to process files (reading csv so I often use pandas) and to prepare and load data into the database (using regular py-postgresql which I think comes loaded in Anaconda). I of course also read results from the DB and mix it with lists, dictionaries and DataFrames (pandas). I would say Automate the Boring Stuff is exactly right. If you want a computer to do the work, use python to tell it how to do it. Write some functions. Learn about how to make and load packages before object oriented IMO. Keep things straight forward at first and your skill will grow over time. Python is a great language to invest your time in.
Sweet thanks for the feedback. 
automated my ex-coworker's job after he put in his two week notice. 
Not much really. It can maybe automate your emailing/SQL stuff. Honestly learning powerquery/powerpivot will help 1000x quicker. 
Whoops! Thank you!
The f-string is implicitly formatted, so you're attempting to format it twice. Replace the f-string with its formatted result and you are actually doing this: print('Test - Test string {'.format()) Which of course has unbalanced braces.
To escape a character you can use \. But you should use format this way instead : print(F’test -{}’.format(user_input_string)) From my usage of it, i think the only {} that matters are the one explicitly indicated. 
Neat! How do you render the staff? Is there a template that you are modifying?
And in case it's not immediately obvious, this is what you probably want instead: print(f'Test - {user_input_string}') 
Did you get paid his old salary for doing this? 
I did this project too using a different code base. It worked okay but the web page kept crashing for some reason I could not figure out. I set a timer on it so that if the door was open for X seconds it would just close the door. The main problem I had was finding a place to mount the sensors where they would not get ripped off the door. I installed everything. Cycled the door dozens of times. Everything is fine. Then a month later the switch is on the floor of the garage having been ripped off. WTH!
Having a fairly relaxed time waiting for QA to find bugs in my python service, I've been playing with [reactjs](https://reactjs.org/). I used to hate javascript but now I'm finding I can write javascript more like python and I can even use it interactively with node. Its not as productive as Python but it is getting closer.
I would automate some coworkers out of a job for free if it meant I no longer had to work with them. Well...if I had that level of skill and that amount of time. Buuut I’m not that great and pretty frequently dealing with support/fires instead of getting ahead of such things. Ah well. 
There is probably little for you to gain if your queries are simple but the more complicated things get, especially with sql queries and charting, the more likely you are to get a positive return from taking the time to learn python (and its related tools such as [sqlalchemy](http://docs.sqlalchemy.org/en/latest/orm/tutorial.html). Python has an interactive shell that is incredibly useful when 'poking around' in data and designing new ways to summarize and represent it. The hard thing is deciding if and when to take the time to learn Python. I'd wait until you get stuck or find something really tedious, then head over to [learn python](https://www.reddit.com/r/learnpython/) and start asking questions ;)
You can return a generator of 2-tuples: ```python return (("{}-{}".format(e["year"], e["month"]), e["count"]) for e in data) ```
if you want this particular piece of code to be syntactically correct, you need to wrap lists in parens to form a tuple and remove superfluous comma that said, the code doesn't seem to make much sense. you want 2 lists out of it, or a sequence of list pairs, each list being 1 item long? lets say, given this synthetic input data = [{'year':2000, 'month':1, 'count': 22}, {'year':2000, 'month':2, 'count': 33}, {'year':2000, 'month':3, 'count': 44}] what should be the outcome? 
This is pretty much what I've been doing already, but mostly for third party dependencies. I've been setting up separate virtual envs for each Python project.
thanks so much!
Consider using /r/learnpython. data = [ {'year': 2018, 'month': 04}, {'year': 2018, 'month': 03} ] generator_expression = ( ('{year}-{month}'.format(**d), count) for count, d in enumerate(data) ) return generator_expression
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/nyctech] [Looking for python developer in NYC](https://www.reddit.com/r/nyctech/comments/8e7q34/looking_for_python_developer_in_nyc/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Read this subreddit's sidebar for instructions on how to properly format your code so that it may render correctly for others to view. I don't know what tutorial you're following, but your best bet is to go through the official tutorial and getting started documentation: [Getting started](https://docs.djangoproject.com/en/2.0/intro/) There's also quite a bit of information we're missing in order to begin to help you troubleshoot your issue(s). Things like the complete stack trace (All of that text that fills your terminal window when your application errors), all source code within the context of the issue, etc. The more information you provide, the better the chances someone will be able to help you figure things out. Finally, for future reference: r/learnpython r/django
[PIL](http://pythonware.com/products/pil/)
Not his entire salary, but my manager had no idea I automated everything though. 
Thanks for your input, as stated in the post I was aiming for a better test output. By using pytest, I also was limiting any beginners from having to use `python -m test` as simply typing `pytest` is easier to grasp without a full explanation of `-m` etc. Perhaps I will follow up with a pytest-style post
Regarding your initial question ... it sounds like you already know it’s best practice to package them separately and distribute as two independent, separately versioned packages. If they really are related and the code does not make sense to split then just keep them in a single package. Dependencies should be listed as package requirements in setup.py. Your main project may list several packages in setup.py which are only available via a custom pypi index or access to the setuptools artifacts (Tarball, wheel). Do you have any specific questions on setuptools? 
Do you run/make money with the crypto bot?
https://www.codingame.com/ doesn't teach how to make a game, it has you play various minigames by writing scripts. There's a range of difficulties you can choose from. You would have to know the basics of the language first (e.g. what does importing a module mean? What are loops?).
They are two different things. Visual studio is just an ide. It makes writing python easier but does not have anything to do with python per se. Anaconda is suited for your purpose. Just do conda install tensorflow on python 3.5. ubuntu is a much better is for running this stack IMO
PIL stopped development a while ago. You probably want the actively maintained fork, [Pillow](http://python-pillow.org/)
To clarify, the staff and all the rendering is done by lilypond, so this program only really makes a series of pages, with each one looking something like [this](https://pastebin.com/HgZ3rSz6) until lilypond takes over and does the hard work. Sorry to disappoint :')
save this by replying
\&gt; *Secondly, if we throw an exception we irrevocably destroy the data we read. It becomes impossible to access. This means that situations where the user might want to ‘muddle through’, taking as much of the data as they were able to read and keeping hold of it, becomes a little bit harder.* That is simply not correct. You can store data on the exception object for later retrieval.
[removed]
Yes
Couple years ago we replaced an ancient DOS based testing equipment with a Windows one. The test engineers put in a request for a Windows disk editor (hex editor). I went to check the reason for the request and discovered they were faking test results by manually editing the output files. So I automated the faking. I was gonna make something that faked the entire testing process but they said they wanted to keep their jobs. Also this is why I don't use our own products.
&gt; [0] says 'the first element of the list' No, it doesn't. It seems like `split(x)` may return a list, but who knows, maybe not. The correct answer is that it calls `__getitem__` on whatever `split()` produced with the argument set to 0. What this will do nobody knows. The same is true for `[1:]`. For all I know, this code may be formatting your hard drive, or sending the pictures your genitals to your grandmother. There's no way to know that.
Also, just as a note, visual studio is now integrated with anaconda.
In addition to Pillow you can control [GIMP](https://www.gimp.org/) with python.
How about replacing Excel with Bokeh https://bokeh.pydata.org/en/latest/ This is what got me into using python, a need to create reports for emails. They can be interactive too. Once you start using python , you will find that if you have a problem it will often be the quickest solution to use python. For example, recently i needed set up a process to wrangle 234 different excel workbooks on a regular schedule. To produce data for a Tableau report. Usually i would have use SSIS and SQL Server. But with python , pandas and pyodbc it was far simpler , more a matter of configuration than actual coding. 
Hardest/weirdest? Well... a post-trade system that processes deals reported by more than half of world's major banks. It includes several versions of Apache Kafka, FB Cassandra, PostgreSQL, a lot of Scala/Java components, some Go components, some Python components all deployed to either Kubernetes managed cluster, or AWS or using Amazon RDS about 50-70 such components/services in total, with instrumentation that reports to ELK/Logz.io, a bunch of load balancers, proxies etc. Obviously, I didn't to this for fun. That's my job.
Indeed. After all these years, still making the mistake. Thank you for the correction.
A lot of info in two sentences :-). Will need to dive deeper into these. Thank you.
&gt;Forget everything you knew about traditional learning Seriously? Why do you think *everything* about traditional learning should be forgotten?
this worked for me. thanks!
I just added "conda install pyqt=4" and it worked. thanks a lot!
/r/learnpython per the sidebar 
The difference between VS and Anaconda is that VS uses "main" installation of python on your computer and conda uses some internal python installation. The problem I am dealing with right now is that I cannot delete tensorflow package from anaconda (i installed it with pip) Can you suggest ideas how to delete those packages? (conda and pip do not see it for uninstall or remove but I see them with conda info tensorflow) 
That's Visual Studio Code which is a nice editor but it's not the same as Visual Studio.
Ah, okay.
Text message forwarding for my first paid gig ever.
Hooking is possible in all languages as it is not really related to the language itself..
Cool! This changes things then. That means, I can keep all the modules/projects in a monolithic repository and then have the 2 main subprojects/modules install the common modules through this. I'll give this a try.
Neither hard nor weird, but my employer lacks any sort of analytics or bi, so the repetitive requests for data have found their way to my desk. The recurring requests get dropped into a directory where a script picks them up, executes the query, sniffs the results and dumps it all into an Excel file. The benefit to me it that I can quote them a several day turn around and then just run their shit on the day I promised it to them. And before you ask why I don't just run it immediately the reason is that I tried that initially and once our clinical lab realized someone could get them the data they wanted I was buried in unending requests to generate spreadsheet after spreadsheet for a week. It's not really what I signed up for
Thank you, I'll try that I knew that it was written in Python Do you have any examples how to do it?
I automated sending the same message to multiple contacts on WhatsApp using selenium and WhatsApp-web
I read few articles before about this https://github.com/kivy/python-for-android
That was my first thought too. I'd want it only to say close when it's actually closed, and not confirmed close as "open". Having it default-to-closed seems a recipe for leaving it halfopen or not-quite-closed most of the time
Some suggestions: You start with a lot of data (very long lists). To make your code less messy, you could have this data in a separate spreadsheet and load it with for instance Pandas. This will also make your data easier to read, troubleshoot, update, etc. The lilypond template could also be a separate file. Try not to use globals. If you want a look at another python-lilypond project, 4 years ago I made an automatic [piano roll transcriber](http://zulko.github.io/blog/2014/02/12/transcribing-piano-rolls/).
I am actually like you - many people do like Anaconda, but I also encountered problems with packages. Ultimately I uninstalled everything and now run vanilla python 3 from python.org and install everything with pip. All seems to work fine, although for some math packages I installed pre-compiled whl files. (I am on Win 8.1). 
In which way ? In my understanding, Heroku is just a deployment platform :o 
Glad to see requests 3.0 fixes this, at least!
We use the Pythonnet library to directly call C# code from Python (needs a few small changes on C# side, usually 10-15 minutes). The tests are triggered everynight using TeamCity (an alternative to Jenkins) , and use Pytest for the actual test running. Works like a charm
Thanks for your response ! :) I am sorry if my post was confusing, but I am not trying to replace NCrunch for the C# codebase. Instead, I am willing to find an equivalent to NCrunch for the Python codebase.
Did she get the dress?
I think kivy is the best start
When you push your changes via git it'll automatically restart with your latest changes
I did this just before! (started learning today haha) 
Not the hardest, but definitely the weirdest. I mitigated my gaming addiction by automating some tedious questing activities in a computer game I'm playing, by using python, xdotool, imagemagick and tesseract. So now I have more spare time for improving my Python skills. And for reddit.
&gt; using deep learning to move the mouse based on where I look at the screen (computer vision) awesome, I'll get on your level someday having a mouse cursor that I could move on screen with my eyes and simulate mouse clicks by blinking would be glorious
mind disclosing which country?
perhaps run a poll for people who are planning to attend and learn about their wishes?
pillow (PIL) for basic stuff and OpenCV (cv2) for advanced stuff.
The problem is that I need to keep all of the calculations specific to each window, and, using datetime objects, it's easy to select the windows I need and iterate through them. Even though dataframes support doing multiple operations at once, shouldn't there only be a set number of time windows in my data and thus iterating through them would take the same amount of time each time I run the program? 
That app looks fantastic! Gonna install a MQTT broker later and test things. Is there anything similar for iphone?
Yes, this was my first time using f-strings. Thanks for the help. 
Did you test them against numpys matrix manipulations? 
That's written in C++, I'm not seeing any relation to Python.
test in what manner. Do you mean performance?
&gt;&gt; Do not put yourself in a situation "we use X" This is clearly the best answer!
&gt; Do not put yourself in a situation "we use X" I do agree with you ! For now, it is not a critical feature for us, if it turns out to be the case, we might switch back.
At work I just started a huge project and made great progress. A co-worker sent a link last night to another app just like ours, already fully implemented, and it's free. A tough life we live. 
Kivy works, I've used it before. But it depends on what you're trying to achieve. If you want to make a regular app with buttons and stuff, kivy is fine. But if you want to make a high-end 3D Ego Shooter you have to use the standard set of tools for Android development, which don't support python iirc.
 ~/Minify master* ❯ cat test.js alert('beep beep im a sheep') ~/Minify master* ❯ python minify.py test.js test.js 30 Bytes test.min.js 25 Bytes ~/Minify master* ❯ cat test.min.js alert('beepbeepimasheep') 
Thanks for your reply! What about the modern material design components? Are they used by kivy?
Did you read the last paragraph? 
What I've used in the past is [pytest-testmon](https://pypi.org/project/pytest-testmon/) in combination with [pytest-watch](https://pypi.org/project/pytest-watch/). `pytest-testmon`will use the coverage of each test to check which tests to rerun every time where as `pytest-watch` is a utility that reruns `pytest` on every file change :)
Like django says to
Kivy** 
lcms like wordpress or a website like wix.com. i am focusing on python how can i design a website without knowing boostrap.
*constructive criticism ⇒* Why do you post on unrelated Python reddit then ? *⇐ msicitirc evitcurtsnoc*
Saving this project for another day. Thank you very much!
Thanks !
Yop ! I just want to write my own to practice with Python, I know it's not new at all and not opti neither ! This tool only work alone for now, i'm fixing bug before anything else
Thanks ! ☺
It actually says this `I am also looking for someone with expertise, interest, and time to contribute and wrap this in either Boost Python (preferred) or Cython to make it available in Python.`
Look into Docker
Might want to look into system args so that you can drag and drop the csv file onto the Python or batch script
My script read a file using regex : Can you explain how it's not "parsing" and how you can "match" keywords and replace them without regex ? I'm not familiar with the Go syntax \(your link\) and I think I'm missing something important you're trying to say @earthboundkid
Well we've used both CircleCI and Jenkins with GitHub integration. Both run all of our units tests which include pytest, Django tests, npm tests, and Cypress.io tests. If you are looking for a test framework then use the one best suited for your codebase, for executing the tests, integrate with your Jenkins instance. Pytest for python or Django tests of each using Django. 
I'm impressed with your ability to copy paste. Alright, here's my last attempt at making you understand why this thread isn't going anywhere. 1. Your "library" is not written in Python nor does it have existing Python bindings. That makes it irrelevant to 99+% of r/Python redditors. 2. The remaining &lt;1% who might be capable and interested in wrapping your project will be deterred by the complete lack of convincing arguments in your library's favor. It's apparently brand new, with no data to back up your "high performance" claim. Where are the comparisons with other libraries? There have to be hundreds already with proven stability and proper documentation. And, for that matter, where is the API documentation? The Python community has numpy, which is implemented in C and thus already offers reasonable performance. How does your implementation compare to it in terms of performance and feature completeness? That article you've linked quickly delves into implementation details (not Python) apparently mostly consists of screenshots (!) of code. Short version: This looks like a student project. It's probably a great learning experience for numerics and c++ but it has nothing to do with Python. If you actually care about help with wrapping your library up for python you should first document that library and add some convincing benchmarks to it, then create a thread which explicitly asks for help *in the title*.
Thanks for your response :) Unfortunalety, I am not looking for a tests framework as we already use Pytest and and Continuous Integration server (Jenkins) that run all our tests (for PR, develop, and master branches). I am actually looking for a continuous tests tool that is able to automatically run tests that cover a modified portion of the code, while I am coding. (Not by running pytest manually)
I'm loving it.
Take a look at pybind. You can probably make the bindings in a couple of days, if not less. https://github.com/pybind/pybind11
I think you can already do this on whatsapp 
What's your plan to reduce your reddit addiction? 
Ahh! Got it. Also, why Reddit? My poor karma ;(
Can you recommend a site or API for that? 
This is fantastic!
Added ai chat with the help of Pandora bot's aml and pyaml
That's cool. What framework/libs would you use to build the web based version of this? 
I know there is a big Russian community in data science. Perhaps run around on Kaggle forums and find their Slack channel for advice.
RemindMe! One month
I will be messaging you on [**2018-05-23 16:13:06 UTC**](http://www.wolframalpha.com/input/?i=2018-05-23 16:13:06 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/8dwocz/tutorial_for_building_a_localhost_gui_for_less/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/8dwocz/tutorial_for_building_a_localhost_gui_for_less/]%0A%0ARemindMe! One month) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Probably some javascript library with flask backend.
What happens when you do divide by zero? 
The same code in C only renders ONE read.
The Great Event
&gt; broken into smaller 4K reads. Sounds like you are looking at the sector size of your harddrive. Most filesystems divide the available space into 4K sectors, so you have to read that much at a time. https://en.wikipedia.org/wiki/Disk_sector
Thanks, will look
Actually, the sector size is 512 bytes.
I came across [this](https://wiki.python.org/moin/RussianLanguage) in a quick search, hopefully this will be of some help resource wise.
Where is this feature? I can't find it anywhere.
I have no idea about the iphone app, but I've used it on android and it's really good.
Does [this](http://rabexc.org/posts/io-performance-in-python) help?
Virtual environments is what you are looking for my friend
Get a new book. Python 2.7 is a dead end. 
You should find a different book. Python 2.7 is end-of-life. There are plenty of online tutorials, you can find links in the side bar here and at /r/learnpython
What do you mean by virtual environments?
 I thought 2.7 and 3.6 were basically the same with just minor differences? I'm a newb and not sure which one to study so I got this beginners book for programming in python and it's in version 2.7
The hardest part is learning to read. Start with the sidebar.
I'm not sure those are real worlds that go together, but I'll take your word for it! 
Wow, thank you alot! I will keep these hints in mind. As of now, I am diving into django just to get a grip of it but plan to get back quickly to the scraping stuff!
Hey, nomansland008, just a quick heads-up: **alot** is actually spelled **a lot**. You can remember it by **it is one lot, 'a lot'**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Python 2.7 is old and no longer supported. It's effectively dead. Your book is out-of-date and you should read a different one.
it happened http://blog.qt.io/blog/2018/04/13/qt-for-python-is-coming-to-a-computer-near-you/ https://download.qt.io/snapshots/ci/pyside/
Thank you for the explanation! I just wanted details on why and you provided them :). Okay so I have this other beginner book that teaches in any 3.0 python version. So if I downloaded python 3.6 and python 2.7 was factory installed on my mac that means I need to use the virtual environment to use the python 3.6?
S23NYC / Nike Location: NYC We're looking for a talented Lead Python Engineer at S23NYC, Nike's Digital Innovation Lab in NYC. We primarily work on the SNKRS app (iOS/Android) building experiences and features around AR, geolocation/geofencing, digital meets physical, and other exciting technologies. We run out of our own space in a startup-like environment on 23rd and 5th, right next to the Flatiron building. Extensive knowledge of AWS (specifically DynamoDB, Lambda, API Gateway) is a plus! If you'd like to hear more about what we're doing here at S23NYC/Nike hit me up directly: mike.luby(at)nike.com
Frameworks, libraries aren't necessary; just a bit of HTML, CSS, and JavaScript.
What kinda throughput we talking here? How big is that Cassandra cluster?
Next level: retrain the Inception image classifier to recognize Pokemon so that it works like the Pokedex on the show.
Honestly, I don’t think you need to mess with virtual environments and stuff like that. Type `python2` in Terminal to launch Python 2. Type `python3` to launch Python 3. You can also be more precise about which version you want with, for example, `python2.7` and `python3.6`. So, you don’t really need to uninstall anything. At least, Python 2.7 and Python 3.something work nicely together. 
I will look into all of this, thanks!
Almost the same, but not quite. There are differences in the standard library too, nothing new is added to Python 2.7 and it is supported for legacy reasons until the transition is over: &lt;https://pythonclock.org/&gt;.
Good find. This is the answer OP. Increase your buffer size! 
I can recommend you this free book which is really good. I used it when I first started learning python: https://python.swaroopch.com/
It should be possible to use a command line argument in a frozen program (i.e. one prepared with a tool like cx_Freeze or Pyinstaller). But if your users are likely to be comfortable with the command line, your life will be a lot easier if you distribute it as a package and ask them to `pip install` it. See https://packaging.python.org/ for more information on that. Or do you mean that you need a way of picking the file that doesn't involve the command line? If so, try the easygui library: http://easygui.readthedocs.io/en/master/
I definitely will add it to my list and read it since I have a few newbie books to read. Was python hard to learn as a language? This is my first programming language, I dont have any programming skills/computer skills whatsoever so I'm an absolute beginner. 
Is this a generic csv which needs to be read? If yes, you can package your program as command line application and accept the path of this file as an argument. For packaging you can actually use setup.py file and create a distributable package/wheel out of it
https://www.jetbrains.com/help/pycharm/rerunning-tests.html#auto 
Isn't this the problem Docker/containers are meant to solve? You do all your work in the container and then deploy that to the servers instead...? Disclaimer: I haven't used Docker and am not 100% sure I understand it fully, but from what I've read, the above sounds about right.
No, I guess I missed those when I originally looked at the logging documentation. Those look promising though, thanks!
I can't get it to work. #!/usr/bin/env python b = bytearray(262144) fi = open('/dev/rhdisk21', "rb", 262144) fi.seek(26843414528) b = fi.read(262144) fi.readinto(b) #print(i) fi.close() It fails at fi.read(262144) and readinto.
This works. Thank you. #!/usr/bin/env python import os f = open('/dev/rhdisk1', "r+b") fd = f.fileno() record = os.read(fd, 262144) 4195218: 16974597: 0.3592: kopen("/dev/rhdisk1", O_RDWR) = 3 4195218: 16974597: 0.3635: kioctl(3, 22528, 0x0000000000000000, 0x0000000000000000) Err#22 EINVAL 4195218: 16974597: 0.3636: fstatx(3, 0x0FFFFFFFFFFFEC40, 176, 0) = 0 4195218: 16974597: 0.3746: __libc_sbrk(0x0000000000050020) = 0x00000001102A5920 4195218: 16974597: 0.3748: kread(3, " É Â Ô Á\0\0\0\0\0\0\0\0".., 262144) = 262144 
The fire nation attacks.
I am familiar with pip/setuptools, and that may be all I need. I was hoping to find something that would make it even easier for the user, but given the scope of my assignment I may be overthinking it. Easygui seems like it could come in handy too. Thank you for the reply.
&gt; Cxfreeze, from my understanding, will allow you to point to a data file, but then it gets compiled into the executable, so it would be the same data file that gets used at every execution; not exactly what I am looking for. I think you're mixing up passing arguments to Cxfreeze and passing arguments to the resulting Python program. The files you'd pass to Cxfreeze are static assets that are part of the program (perhaps data tables or a default config file), not program input. 
Python is really fun to learn :) I'm a accounting and finance grad, but I picked up Python in Uni and have been using it for various things such as scraping, web development and automation of stuff at my work place.
infinity ...war
You are welcome.
I just finished a quick test of cx\_Freeze. Short version: the frozen program accepts command\-line arguments quite happily. My program, `print_args.py`: import time from sys import argv if __name__=="__main__": if len(argv) &gt; 1: print("Arguments were:") for x in argv[1:]: print(x) else: print("You did not pass any arguments") time.sleep(10) Setup script, `setup.py`: from cx_Freeze import setup, Executable setup( name = "print_args", version = "0.1", description = "Test commandline argument passing", executables = [Executable("print_args.py")] ) Freeze it: python setup.py build \(The frozen result is 216 files totaling 14.7 MB, but zips to 6.9 MB.\) Run it: print_args This "is a" test Arguments were: This is a test
Let me start working on this right away. It sounds like an amazing deal! I feel as if I wont be scammed at all! 
That's awesome! I'm really interested in the gaming aspect as well as using python with just simple things I can implement in my daily life. 
Did you get any hits from search engines?
Plenty. I’m trying to figure which are the most friendly to use, and which have the best time syncing. 
The easiest way is probably with the FFMPEG tool, which you could invoke with `subprocess.call`. It's not necessarily the purest solution (programming-wise), but definitely among the easiest.
Futures aren’t really up their alley, as they aren’t “investments” so much as they are hedges or speculating. Python is pretty big in the financial world, particularly in prop trading and market making, for analytics. I mostly do C++, Fortran, and Assembly in actual trading code. 
What would a flask backend do for a calculator?
yes, it can be done using "NEW BROADCAST" feature but it's not handy to select say 1000+ contacts to send them the same message...
Would do overengineering
I'm going to go with UnicodeDecodeError.
If you have a grasp on OOP then you can start dipping into a wide array of things but to be an "employable python developer" you should learn more advanced stuff if your classes didn't cover them (decorators, design patterns, comprehensions). It also help to know how to work with the standard library. Depending on where you work you might be asked to build something in house from scratch. Once you know Python it's not that hard to jump into other libraries. Check the side bar for some more ideas and to get familiar with what's already out there. Hope that helps.
Ffmpeg is probably the best way. You can get it do what you want from the command line without python, run it via subprocess or use one of the python wrapper libraries like ffmpeg-python. 
Build a small program that checks the weather of a given city. That'll open you up to APIs, requests and urllib Start text based and if that wasn't challenging enough for you wrap it in tkinter. The whole point is to build something that's not a completely trivial.
 import imageio import glob writer = imageio.get_writer('video.mp4', fps=0.2) for fname in glob.glob('images/*.jpg'): img = imread(fname) writer.append_data(img) writer.close()
Python's packaging story is pretty terrible at this point; there really isn't a standard way to distribute for non-programmers. This generally means that python is backend only. The way you probably could approach this is as you've already looked at: Pyinstaller. Kivy could be another choice if you want a gui, though it also uses Pyinstaller under the hood. You may want to include an additional step like Innosetup for building a windows installation file. 
Do you think this would work on aws lambda?
It says "ERROR" ;)
Apparently, I don't need to try that hard. Got my share of bans coming from butthurt mods of certain subreddits.
[https://www.systutorials.com/docs/linux/man/5\-logrotate.conf/](https://www.systutorials.com/docs/linux/man/5-logrotate.conf/)
I'm just scared at the idea of losing hands in a car crash for example. And I recently finished to read The Count of Monte Cristo yet another time.
It's like landing page on WordPress 😂
I have these two: * Selenium script that restarts my router every day * Selenium script that turns my local council public transport card website into a CLI Neither were necessary, just for fun.
Now print it in 3D.
A REST API for calculators?
It's much more beneficial to learn English and use English material . Of course it is slower at first, but that is also great way to learn two things at same time. Most of the materials are in English and the Russian ones usually lagging in time.
How will you be implementing block chain?
That numpad tho
That looks interesting but the server is windows so not sure if this is an option
First, stick with the meetups, but don't do the obvious ones. Not just Python meetups, but look for machine learning, django, and other meetups for more advanced topics where people will be more focused, and know their stuff. Frankly you will have trouble finding a true mentor outside of a school setting, or outside of an internship-type setting. It is a lot of work, and they need some motivation to mentor you. Work on a specific project and come here or to stack overflow and post about it. I actually paid someone to mentor me on a very technical, specific project, over at codementor. It was very very helpful, but I probably spent about 200 bucks total.
if ffmpeg is available on aws lambda yes. You can place a binary in a local directory on the server.
I’m not saying don’t seek a mentor, although a good one will be hard to find, but also make sure you realize that developing analytical skills (programming, math, engineering) will mostly be self-guided. Make sure you learn what helps you learn and find your motivation. Recognize that almost everyone suffers with the Imposter Syndrome (“gawd, I’m stupid) and the most significant progress I made in my professional life was adapting the mantra, “don’t worry, you’ll get it eventually.” The last thing I’ll say is that the industry is so varied and evolves so quickly almost everyone will tell you “I got lucky and one thing led to another...” everything is confusing at first but it gets better. Sorry, that’s all I’ve got. 
In Unix world the pattern is to log to stdout/stderr or to syslog, and redirect the output to some other process that implements the logic for handling the storage. In Windows world you can use the Windows event log or write your own logic for handling the storage of the log. Why not send this output to another process/service and let that service handle everything?
Sick, thanks.
I see. That is interesting, I personally have not found a tool that did not disrupt my development. I found that pycharm would run tests on modified code at every inopportune time it could and would slow down my development substantially. I prefer to manually run the tests on the code I'm modifying when I'm ready. That combined with having Jenkins run on every commit of every branch with a Jenkins.yaml had worked very well for us. 
FWIW, just released v1.1.0 which incorporated most of your suggestions. Disabling of validation by environment variable for production usage, more information-dense error handling (while retaining backwards compatibility, so inheriting from standard library exceptions), and added some additional file-handling validators/checkers. Thanks again for your suggestions!
Foda-se Hue Hue 
understanding page object design pattern and trying to apply it to my current app
good work. is it capable of calculating an expression like '2+3*5/3-(9**3)'?
You sniped your wife a designer dress. I love it. I also love the idea of "dress arbitrage". 2.5x could be an anomaly. I think you ought to explore whether your wife has a talent that the two of you can use to build a nest-egg (or business empire) on. Sell that dress to bankroll a few more purchases. :) 
Porting a large commercial project away from ruby to python... no big deal
Also at some point the dev might decide to steal your numbers on the display, but only in form of whole number so you get to keep your small change 
I know, I know. But they are trying so hard. It is almost cute it is so pathetic.
Binance api is the nicest. You can make test trades.
OOPSIE WOOPSIE!! You made a fucky wucky!! A wittle fucko boingo! 
That’s actually really easy: print(eval("2+3*5/3-(9**3)")) # -722.0
But muh jQuery! 
A calculator is as good starting point as any. Try updating the calculator from time to time. One thing you could add is order of operations for example. Then more complex calculations. And if you wish try and make a graphical calculator (I tried, but I couldn't get it to show graphics whitout opening a new window) If you succeed, please let me know how you did it. Ps: Don't worry about the mean comments, they will always exist. 
It depends on what type of gui you wan't. if it's basic interface, consider doing it as a web application using flask, bootstrap, and friends. if it's something that requires more advanced UX widgets, or access to local system resources then PyQt is definitely worth the go. If you are just targeting Windows, consider IronPython + Windows forms. Although not open source I have found it to be the least brittle when developing unique UX widgets as it doesn't have to worry about true cross platform support. At the end of the day, we would need to know your end requirements in more detail.
Excellent job, man! For reference, [this] is my shitty iOS calculator from ~6 years back. I will be joining Cisco as a software engineer in a few months. Keep up the great work :)
Yeah, I’d love to take a look and play around with it!
oh my god, my son is going to lose his mind when I show him this!
It highlights the colon and has a pop-up that literally only says “invalid syntax”
Need a second parenthesis int (input (""))
Are you missing indentations under your if?
Just to add a helpful tip for the future if you can't find the error on a line double check the one before it 
my indents were also off! thank you so much
Thanks for your reply, my next goals will be to look into that advanced stuff, and learn to work with the standard library! Thanks!
NIce one, I've always had problems with GUI in Python but maybe (only maybe) I didn't really try hard enough. Anyway, do you have suggestions of good resources for learning it? By the way, is the title Spanish or Portuguese? I'm asking because I'm from Brazil, you know...
There is also /r/learnpython. 
Indentation is very important in python
Godalmighty, dude. Read the sidebar.
First of all I’m using Reddit on my iPhone so I can’t really see a sidebar, otherwise I would’ve posted my question there and not bothered your life with the simple question so many others on this subreddit were readily willing to help me out with. Second of all, suck my dick.
 except KeyError: do stuff
First of all, google the name of your reddit app and "sidebar" Second, don't be lazy
In Perl (if I remember correctly) I could do this: ``` $team = $param[‘team] || “ALL” ``` Basically, if param was undef then the OR takes the second value. 
This gave me a good chukle. I have a friend who actually sounds like this.
r/learnpython and read the sideabar before you post.
This probably isn’t the cause of your error, but there’s some underscore inconsistencies with your variables in the code you provided. To solve your error, try changing your second line to pocreatedate = str(datetime.date.today()) This will convert the date to a string, making both your variables comparable (the reason the if statement is skipped is because variables with different types aren’t equal). Also, for questions like these I think /r/learnpython will be more helpful
Did you google it? Who cares as long as it's not Perl?
The CSV file is a data file. You could do it a number of ways, but the simplest would probably be hosting the csv file on a webserver where is can be accessed like "https://somesite.com/data/football_stats.csv" You could then either access that file from another site and read the data with javascript and present it however you wish, or use the same website that serves the csv and call it directly from your web page within a javascript block.
Handy for news, subreddits, torrents, magnet links...
Also curious about this. Almost sounds like it could be homework though.
&gt;And not, for example, `os.path.split`? Who are we? If you cannot think, don't extrapolate this on others. Please don't spin your own inability to think logically onto me. What is os.path.split's function signature? Or shlex.split's? Or re.split's? And the only stdlib non-builtin *object* that has a split() *method* is the kind returned by re.compile(), but I do believe the average learner would have learned about str.split before running into regex. &gt;If you believe OP is new to Python, then your "explanation" is even more harmful: it encourages magic thinking instead of actual understanding. Your proudly refusing to *think* about the context of OP's situation is just dumb and a million times more harmful. If they're trying to understand what this snippet does, scaring them with an irrelevant "it can do anything because `split()` and `__getitem__()` totally don't have an intended purpose!!!" does absolute squat — at the very least you could explain what split() and `__getitem__` *usually* do, but no, not even that. And this doesn't "encourage 'magic' thinking" in a harmful way, because OP is at the stage where they *do not need* to know about the internals of anything "magic"; the expectation is that they'll find out as they progress and become proficient, because to force a total beginner to learn about Python's OOP model when they're still taking baby steps is silly. Tell me you learned about dunder methods before you learned about sequence indexing and str.split?
One option would be to put it in a S3 bucket on AWS. You can link directly to files like your CSV file and for small files/limited upload you really wouldn't be paying barely anything (less than a pickle a month probably). There is also a S3 module that would allow you to directly upload to the S3 bucket after you create the CSV file.
Ah, if that's your name and college on the paper, might want to obfuscate it for privacy
 Create a singlton object that registers data sources and for each of the 60 functions add a statement to register the function. getJobManager().register(table_name) getJobManager().register(another_table_name) and then main can iterate over each job and run it. 
You could build an exception function that takes your querys and default responses as arguments. Could send them as a query dict and a default dict. Then you don't have 3 gazillion try/catch blocks and your queries/defaults are presented in an easy to read manner.
Use the dictionary `get()` method. It allows you to specify a default value if the key doesn't exist. I would do this: query_string = event.get('queryStringParameters', {}) team = str(query_string.get('team', 'ALL')) game_date = str(query_string.get('gamedate', '20180420'))
awesome ! compressed to a single .ipynb !!!
nvm, my USB is just trash
For the video writer it uses ffmpeg on the backend. For the image reader it uses either Pillow or Freeimage. I'm not sure what AWS provides, but it does have dependencies.
Mmmm those bezels, sharp.
 import time class JobManager(): def __init__(self, timestamp=None): self._timestamp = timestamp or time.time() self.jobs = set() def register(self, f): print ('Registering {}'.format(f)) self.jobs.add(f) return f def run(self): for job in self.jobs: print('Running {} for date {}'.format(job, self._timestamp)) result = job(self._timestamp) self.write_to_s3(result) def write_to_s3(self, result): print ('Writing result {} to s3'.format(result)) my_job_manager = JobManager() @my_job_manager.register def foo(timestamp): return 'Foo, Fo, F' @my_job_manager.register def bar(timestamp): return 'Bar, Ba, B' my_job_manager.run()
evnt = event[‘queryStringParameters’] for var, val in ((‘team’, ‘ALL’), (‘gamedate’, ‘20180420)): locals()[var] = val if var not in evnt else evnt[var] 
Hey. I wrote a calculator like this one 10 years ago. It was the first thing I programmed that felt real. That feeling has stuck with me for 10 years. It’s amazing. I still wake up excited that I get to write code every day. I still feel like I’ve just started and there’s the whole world to learn. I hope you feel the same way. Happy next 10 years.
Best Software Training Institute for Java,.NET, Python,Ios,Android,Php,Oracle ,Database, Matlab,VLSI&amp;ERP.We provides online&amp;classroom training classes
have a look at his profile though, the poster has done this on multiple topics. I think its for a shitty website that tries to get clicks through really banal topics like bash vs powershell
Tkinter!? Wow... Let me play some music on my Walkman and turn on my game boy color...
First chapter of upcoming 30 video lectures on python programming.
You can get a pyqt license for something like USD 500 IIRC, if you're looking to make something proprietary. For most people's purposes, if they're looking for apps to help with work, hobbies, etc. Or just for learning, keeping the GPL license is fine. You can even commercialise it if you want, just gotta follow the GPL rules.
You can find those in the official Microsoft docs: https://msdn.microsoft.com/en-us/library/wss56bz7.aspx Or in tutorials online: http://www.lazywinadmin.com/2014/03/powershell-read-excel-file-using-com.html?m=1 I'm wondering why, though. What is it you want to do, but can't do with openpyxl?
Hi. If you try and add this code print(type(po_create_date)) print(type(serv_date)) You get this output: &lt;class 'datetime.date'&gt; &lt;class 'str'&gt; So in you code you are actually trying to compare two different data formats, a datetime.date and a string. And those are not the same, and your if statement does not validate those two as the same. So the easy fix here is then to force your if statement to compare the two vars as strings like this: if serv_date == str(po_create_date): The reason that your print output made it look like it was the same values you were comparing was because the print() function implicitly converted the datetime.date variable into a string when printing to the console. Hope this helps 
Python can do something similar with ‘or’ but it will be based on the truthy-ness of the first parameter. team = param[‘team’] or ‘default’ So if param[‘team’] is False, 0, None, or ‘’ then it ‘default’ will be assigned. However as noted elsewhere that will still throw KeyError if it doesn’t exist so typical when dealing with a dictionary .get() is the better option. Another option is there are libraries specifically for deserializing input. I’ve used [Colander](https://docs.pylonsproject.org/projects/colander/en/latest/) but I think Marshmallow is similar. Colander allows you to define a schematic including which parameters are required, default values, and data type conversions then pass your dictionary through it. (I’m on my phone and can’t find backtick for formatting of inline code.)
What I usually do is record macro in excel doing something similar and then transform resulting vba code into python win32 comands. It's usually same commands and syntax. You can lookup special constant values at vba runtime and hardcode into your python script.
This seems like the best answer. Thanks!
I think it will work without the negative logic as well: locals()[var] = evnt[var] if var in evnt else val 
Hey Thank you very much for giving me the opportunity to accept your offer but I'm afraid and sad at the same time because yesterday a dev messaged me and we have talked things out and I'm not good with words so I'm not sure what should I tell you but still Thank You and Sorry :(
`ZeroDivisionError: integer division or modulo by zero`
For desktop app, tkinter, wxpython, pyqt/pyside2 can be used. For basic UI, just go for tkinter that is part of the standard python distribution on Windows (all those toolkits works on major OS). For touch screen interface (like android) go for kivy. Web interface can be used as well.
Best Software Training Institute for Java,.NET, Python,Ios,Android,Php,Oracle ,Database, Matlab,VLSI&amp;ERP.We provides online&amp;classroom training classes
Why tkinter? Not something more useful and modern, like qt? 
It is an unholy abomination that execs to Python and takes over all the functions of the container. Feedback and hints on making this less of a fragile mess is welcome.
Excellent, this could be used as a replacement for the python petname module. Possible use cases also includes getting names for video game (or novel, or film) characters.
I'm proud of you son
Bonus points if you don't use the math module.
I like XLRD https://github.com/python-excel/xlrd I use to generate stylized excel documents in some ML applications. For manipulating existing files, I've found that the best way to do it is to write the macro in excel, and then just call it using win32. If I remember I will look at some of my old code that does that tomorrow. 
Why do you have 60 functions to begin with? If I understand you correctly you could just create a generic "read from table" function, which takes in the current time stamp and a list of db tables you want to check. So something like: def read_tables(timestamp, tables): for x in tables: sql = "select * from {0} where modified_date &lt; {1}".format(x, timestamp) mn = pandas.read_sql(sql, engine) write_to_s3 Then you would call this function once and pass in all the tables you want to check as a list of strings plus the current timestamp.
Oh, thats just an example. Some of these queries include only selected fields and some of them have joins to other tables hence the functions
I do agree that this kind of tool does not fit for everybody's need, and Continuous Integretion can be plenty sufficient ! It seems to me that this can be appreciated when following some kind of Test Driven Development approach :\)
but I know there are some CMS inside django like wordpress. aren't good enough like wordpress?
Anyone know of a good commandline calculator? 
“Hi, yes please create a calculator only using the plus operator please thanks you have 25 minutes”
Cool project, just wish it was a text writeup rather than youtube videos.
Anything for soccer ? FIFA football !!
He could have a gender reassignment procedure so thus would be literally correct. 
The layout makes me nervous, but we Spanish speakers are supposed to support each other so I'm upvoting you. 
^The linked tweet was tweeted by [@chaign_c](https://twitter.com/chaign_c) on Apr 24, 2018 08:20:48 UTC (3 Retweets | 2 Favorites) ------------------------------------------------- \#Python \#Quizz Guess, don't run ! cc [@raymondh](https://twitter.com/raymondh) &amp;gt;&amp;gt;&amp;gt; a = "the" &amp;gt;&amp;gt;&amp;gt; b = "game" &amp;gt;&amp;gt;&amp;gt; "Caring is retweeting".split()[(a &amp;gt; b) \* 2 + (a \* 2 &amp;gt; b) - 42 \*\* 0] Brought to you by the best hacker [@Notfound404\_\_](https://twitter.com/Notfound404\_\_) ------------------------------------------------- ^^• Beep boop I'm a bot • Find out more about me at /r/tweettranscriberbot/ •
📅 2018-04-24 ⏰ 08:20:48 [(UTC)](https://www.timeanddate.com/worldclock/converter.html?iso=20180424T082048&amp;p1=1440) &gt;\#Python \#Quizz Guess, don't run ! cc [@raymondh](https://twitter.com/raymondh) &gt;&amp;gt;&amp;gt;&amp;gt; a = "the" &gt;&amp;gt;&amp;gt;&amp;gt; b = "game" &gt;&amp;gt;&amp;gt;&amp;gt; "Caring is retweeting".split()[(a &amp;gt; b) * 2 + (a * 2 &amp;gt; b) - 42 ** 0] &gt;Brought to you by the best hacker [@Notfound404__](https://twitter.com/Notfound404__) &gt;— chaignc ([@chaign_c](https://twitter.com/chaign_c)) &gt;🔁️ 3 💟 2 &amp;nbsp; ^(I'm a bot and this action was done automatically)
[bc](https://www.gnu.org/software/bc/manual/html_mono/bc.html) is built into most if not all shells, pretty easy to use for quick command line maths. Does this help?
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://www.gnu.org/software/bc/manual/html_mono/bc.html) - Previous text "bc" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
so no comments about &gt; This embedded content is from a site that does not comply with the Do Not Track (DNT) setting now enabled on your browser. Please note, if you click through and view it anyway, you may be tracked by the website hosting the embed. Learn More about Medium's DNT policy 
It doesn't even have a 0, that's properly shitty. Congrats on the job man
Make tools to hack peoples crypto wallets /s
As others already mentioned, those two things are two different things. Anyways, I thought i tell you about the google service that lets you run a python notebook(ipyb) file for 12 hours strait on a gpu(last time i checked). Also, I didn't check what preconditions or assumptions they may have so, you may want to read up on that. Here is the link. https://colab.research.google.com/notebooks/welcome.ipynb best of luck on the thesis.
c# programmer AND excel expert! There is clearly nowhere for you to go, you have reached the pinnacle of human knowledge and skill
should make it show ∞
Connecting an old LightwaveRF light switch system to MQTT and Alexa. I already had it kinda working hooked up to a web page, but wanted a MQTT based system for various reasons. Next step will be hooking a Broadlink RM Mini3 IR blaster. Already got the basics *(recording / sending IR)* working thanks to [this lib](https://github.com/mjg59/python-broadlink).
Well, I'm going to take what you say at face value and give you a sensible answer. Take a look at sites like jobs.stackoverflow.com. And while you're there, give my regards to messrs. Dunning and Kruger. Tell 'em I sent you.
Data analysis, specifically with a python library called pandas. You’ll see a lot of parallels between it and excel, but you’ll be able to work on datasets much larger than excel can handle. Those jobs are hot right now and the skills move nicely into AI programming and machine learning.
I've moved the content of http://pymust.watch/ to Highlight in an effort to gradually build a better ecosystem around it. Keen to hear thoughts.
Now write it with pyqt so you you can learn what a production grade GUI framework is like.
That good old unix desktop look circa 1990. 
Some examples here: http://pythonexcels.com/basic-excel-driving-with-python/ I use the macro recorder under the developer tab on the Excel ribbon to record the equivalent VBA and then convert it to the Python equivalent. Converting is not always straightforward so you will frequently have to experiment. 
https://github.com/antonioam82/Calcu/blob/master/CALCULADORA%202.py
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [antonioam82/Calcu/.../**CALCULADORA%202.py** (master → 7820826)](https://github.com/antonioam82/Calcu/blob/7820826560d219c3999de8f9180563f2e0b7e757/CALCULADORA%202.py) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dxvnvme.)
Developing a licensing system is non-trivial and depends a lot on your goals. First up, you need to consider what you're licensing, is it just the whole product or are you licensing feature flags? Imagine here that you want to sell the base product for $100 with $10 each for a bunch of different features. How do you tell the product which features are enabled? Next you want to think about where you're licensing it, is it a per-seat license? (one install per physical system). per-person? (one license can be installed on as many systems as you like but you're only allowed to run one at any one time). per-company? Why are you licensing it? Is it to ensure you have been paid for it? Is it so you know who has it? Is it so you have a regular income stream? Then how are you going to distribute the license? Does it phone-home every time you use it? Phone home on install to fetch it but cached locally? Email out a license file? What identifies where it can be installed? MAC address of an ethernet adapter in the system? Email address of the owner? What happens when it isn't licensed? Bomb out entirely? Run in some limited mode? Is it going to be a permanent license? Is it going to only work for some versions (eg, I buy v1, the license works on v1.1.19, but not v2.0.0)? Is it going to end on a particular day? (end of support contract for instance). How are you going to protect/verify the license? How are you going to protect the licensing system? How resistant do you want it to be against cracking? If you're licensing something for corporate use you can almost just make it a JSON file of `{"licensed":true}` and be done with it, as the actual protection is the license agreement and the bulk of companies out there care deeply about the legal side, if the product is worth the price, the risk of getting sued is not. As far as designing a system goes, there's lots of [good discussions](https://stackoverflow.com/questions/9156922/suggest-a-pattern-or-architecture-for-software-license-registration-and-validati) out there to read. I tend not to bother with licensing, but if I did, I'd probably go with a simple public/private asymmetric crypto solution. Generate a private key for yourself and use it to sign the license file, distribute the public key bundled in the application. Make a nice little JSON like { "product": "My big product", "licensed_date": "20180422", "license_end": "20190422", "client_phone": "+155512345678" "client_company": "Some big corp" "features": { "feature1": true, "feature2": false } "signature": "&lt;base64 encoded blob of signature of above data" } then on start just read that file, check that the signature matches using the embedded public key from your app. 
I started curating a bunch myself on http://pymust.watch/ two or so years ago. Then the community was also PR-ing new additions. The plan is to start updating it more regularly, as and when must-watch talks happen really. Thinking through a better contribution model (akin to PRs) for Highlight as well.
no.
Yeah.. result=-13.333333333333334
Awesome answer thanks a lot! I need to license the product just to get paid, because I want to allow users to first test the product they ordered, like having them see tgat they got what they asked for before paying for it, and if they don't want to pay because "i already sent them the product", I could easily disable it, (checking the *key before running), but I only thought of checking the key via a HTTP request to my webserver and check the status of it, so this can be spoofed easily by listening to the connection and seeing the received parameters. I don't tend to limit the product at all, per seat or per person, I just want to make sure I get paid for my work. Thanks again for your awesome answer!
thank you all for your answers, so glad to face such a responsive and kind community, keep it up, guys!
Does it have modding capability?
Angular 5 running against a ASP .NET Core MVC IronPython environment on Microsoft Azure?
I am using video writer rn through cv2 and it doesn’t work. But still will give it a try! Thanks
How is this going to help disabled people? I mean for what kind of disabilities could it work? Also, do you mind to share the code, I would love to play with it!
Jesus christ man.
I just started learning python and this looks great. 
its for People with visual impairments mostly. and I can not share the code here because I use a .h5 file which stores all the things the neural network has learned and I dont think there is a way to send it here. 
Arcade uses a parent window class, and games typically derive from that class overloading methods like `draw` and `on_mouse_motion`. Support for Python Decorators is being added.
You may not like it, but this is what peak performance looks like.
Do you have GitHub? I would love to check this out
Right, so the developer takes advantage of those callbacks instead of having to create a whole event loop themselves. Sort of like using Twisted's callbacks instead of coding a select loop. 
I did it by making a web app to pythonanywhere.com. They have a great Flask tutorial that uses a database which was enough for me to figure out how to make my own licencing system. Generate keys and store them to the database, then link the key to some machine identifier with http request. Pythonanywhere is great because it is extremely easy to use and the files, web app dashboards and databases are all included on the same service. In addtition you can use a limited version for FREE so you don't have to commit to anything.
I'm currently using injector because it uses type hints to determine what to inject, has minimal fuss to setup and has a nice Flask integration package that requires even less fuss to setup. I have a few complaints about it, but they are either minor or have to do with how type annotations work in Python. What are the pros/cons of using this IOC framework vs injector? I haven't looked deeply into ioc frameworks for Python since injector ticked off my important bits immediately. 
Since you already have redis you can use https://github.com/brandur/redis-cell ?
Hey, just wanted to know have you learnt this on your own or did you find any resources?
"Project must be completed using only NAND gates"
[This](https://www.youtube.com/playlist?list=PLQVvvaa0QuDfKTOs3Keq_kaG2P55YRn5v) is a really good tutorial series.
Thanks OP! Really appreciate it : )
...Are you asking us to find you a job?
Very nice! Thanks for bringing this to my attention. This looks great for what I'm trying to do.
Never use `global` for global variables; store them in self. or use the singleton pattern. Certainly you want to organize the auth tokens, logs, db connections, maybe error handling into some class.
Isn't this why we have API gateway software like 3scale and Kong?
An API for calculation would simply add overhead due to network latency. I suppose if you need to log the results it may make sense..
no I trained it and saved the weights in a separate file. 
Right okay, so is that on github or do you want to keep your code private? 
I'll take a look at those. Thanks for the suggestions! Have you used either of them?
There are children\(\) and descendants\(\) methods to list the whole subtree or immediate children as a list of wrappers. Also window specification has method .exists\(\) that doesn't raise an exception but returns True/False. The concern about focus is valid, but doing .set\_focus\(\) again shouldn't be a big pain: it's easy to re\-focus and do something by one\-liner splitted by semi\-colon. With web\-pdb you may face with more awful restrictions of remote GUI execution: RDP or VNC doesn't provide remote GUI info, you'll have to install pywinauto on the remote machine and use psexec. RDP can't be minimized/disconnected without special configuration. And these pitfalls are tool agnostic. Doesn't matter it's pywinauto or PyAutoGUI or AutoHotKey.
If you're using RaspberryPi, why do you need the ESP8266, instead of using the Pi directly? (I have done about 20% of what you've done, but only with the Pi. My Pi controls the relay, which responds to a URL request - but I like this better for phone integration.) Your documentation is really great, I'm going to crib some ideas. 
Try automating some processes you often do, Maybe incorporate web scraping using something like Selenium. "Automate the boring stuff " is a useful guide and is completely free. pyautogui is a great module for keyboard and mouse input when doing automation. 
Hi kurashu89, Well, while both \(Dependency Injector &amp; Injector\) have the same goal, Dependency Injector is slightly different from Injector. From my point of view, key differences are next: \- Injector is based on introspection and certain patching of your code, while **Dependency Injector works "upon" your code**. This approach*** does not cause you code to be "polluted" with DI framewor***k \(you don't need to use "@inject" decorators etc..\). Explicit is better than implicit. With Dependency Injector you explicitly create providers for your components and these providers do not influence your components. \- While **Dependency Injector proposes to create providers** instead of type\-hinting\-based injections, there is*** no need to create several "interfaces" when you need several instance***s of "sqlite3.Connection" for different purposes. \- **Dependency Injector** is powered by** Cytho**n. DI framework should not be a bottleneck often, but Dependency Injector is really*** super\-fas***t. \-\- I like **Dependency Injector** because it gives a chance to **keep all** application **structure in a single file**. Generally, module with DI container is something that I always keep opened when working with project. The way how I use Dependency Injector is next: 1. Make some basic design on a piece of paper :\) 2. Create DI container and describe your application structure in it. 3. Add details, implementations, tests etc... 4. Goto step 1 :\) That's an example of such single file with application structure: """Github Navigator application - DI container.""" from sanic import Sanic from jinja2 import Environment, FileSystemLoader, select_autoescape from dependency_injector import containers, providers from . import searcher, webhandlers class GithubNavigator(containers.DeclarativeContainer): """Application components container.""" config = providers.Configuration( 'config', default={ 'webapp': {'templates_dir': 'github_navigator/templates/', 'host': '0.0.0.0', 'port': 80, 'debug': False}, 'github': {'request_timeout': 10.0} }) github_searcher = providers.Factory( searcher.GithubSearcher, auth_token=config.github.auth_token, request_timeout=config.github.request_timeout) webapp = providers.Factory(Sanic, __name__) template_loader = providers.Singleton( FileSystemLoader, searchpath=config.webapp.templates_dir) template_env = providers.Singleton( Environment, loader=template_loader, autoescape=select_autoescape(['html', 'xml']), enable_async=True) navigator_webhandler = providers.Callable( webhandlers.navigator, template_env=template_env, github_searcher_factory=github_searcher.provider) Entrypoint looks like this: """Github Navigator application - entrypoint.""" from github_navigator import ConfigLoader, GithubNavigator, run_web if __name__ == '__main__': config_loader = ConfigLoader('config.yml') application = GithubNavigator(config=config_loader.load()) run_web(application) Full project \- [https://github.com/rmk135/github\-navigator\-application](https://github.com/rmk135/github-navigator-application) \-\- Thanks, Roman
Hello, as a follow up, wanted to share with you the little library i made out of this called [PySXM](https://github.com/josuebrunel/pysxm). It's available on Pypi.
https://gist.github.com/alanjcastonguay/299400ba2cff4e7b3a460c06835036c3 might be useful. (I don't know about sublime text.)
I'd suggest using tools you already have. Even kong uses redis for that or a similar approach. And seems to be simple function compared to using yet another service.
Can you use google cloud - microsoft cognitive services?
Of course it's possible - here's an existing Python+Tensorflow/Caffe project that does exactly that: https://github.com/twerkmeister/iLID
I'm currently working with Google Cloud Speech. Sadly it doesn't have speech language detection capability (yet). It 
Sorry one of the files is bigger then 100MB so I cant push it to github
Doesnt Windows have this exact feature under accessibility?
Hope this is allowed, but maybe someone can weigh in on whether my approach is the best. First, the description of my work: I have a program that calculates the extrusion of a rail vehicle from the centerline of the track. This is carried out by the program reading defined vehicle dimensions (from a .ini file) and user inputs (.py dictionary) that give wear and clearance dimensions. The program uses coordinate transformations to get positional information about vehicle body points of interest as we virtually shift the vehicle around in worst-case positions. **Discussion point:** The body points (x, y, and z) of interest are user-defined and are defined local to the vehicle. They are typically body points that are most likely to extrude the most, but the user can add as many points as they want. All of these points go through a coordinate transformation so that they are defined in a global reference frame. All (local) points are fed through a function that returns the global coordinates. Should I create a class to handle multiple inputs that are all going through the same process? My coding style is still very function-based. Repeated operations on multiple inputs of the same type are handled by for loops. A function might perform part of a task, which is then fed to another function for final output. To me, this all feels brute-force even though I keep my code clean Is this not where classes save the day? Does anyone recommend a coding style that fits this overall task? 
Your point lost all credibility at “Windows”
check xlwings
No windows have a regular on-screen keyboard. This is a handwriting recognizing keyboard and it uses AI.
https://projecteuler.net/ It's a bit math-heavy, but still good for learning the syntax of a language.
Depends if you're sick of C#, and want to move on to another work environment. Honestly nobody can answer that question for you, tou gotta weigh the pros and cons. But I don't see why it would be a mistake.
Found at work. I just switched job roles / departments, as I was getting to know everyone I looked for people that could teach me something. Not all personalities mix well but I found coworker who I get along with real well and he knows way more than I do. I also assert myself on all his code reviews so I can see how he does things and ask questions about the process. 
Windows 7 has a “tablet input” thing where you can draw on and it converts it into text, which can be used in other programs.
Thanks. Will look into it
You could just push the code while gitignoring the model weights. 
If you're constantly repeating your code, you're doing something wrong. If I read this right, you want each rail car to be it's own object. This would make a lot of sense. A rail car would have it's own set of coordinates and clearance dimensions. It would also be super easy to iterate through a list of rail car objects and implement the functions based on the idividual objects dimensions. 
but the weights are very important. Because it takes a long time to train the neural network especially if you dont have a high end graphics card.
Use API when it is available and check whether it is allowed or not before doing any web scraping. 
It's more to display what you have, and if someone wanted to create it, they could train it themselves with the code available.
/r/learnpython is the best place for questions like this :)
Some other options that aren't as math heavy could be: * [codingbat](http://codingbat.com/python) * [hacker rank](https://www.hackerrank.com/)
Thanks for the reply. It is a single rail car study, but the essential function of the program is to permute defined coordinates through twisting and shifting combinations. I am looking at max/min values of body points for each particular curve radius in a list of radii (any length), under numerous conditions that are permuted through. Each coordinate, having been transformed from local to global, is put through the same permutations as we want to know the maximum extrusion at whatever vehicle position it turns out to be. It won't be the same variable combination for all points. Final values for each variable combination are recorded. Then, the maximum value and the corresponding conditions are recorded. I create an Excel output that looks like the table below. Radius values are actual distances. Pk is a particular body point name. Each cell shows the max extrusion, or distance from track centerline. They are the max of all the permutations described above. Radius | P0 | P1 | ... | PN ------|--|--|--|-- 1 | P01 | P11 | ... | PN1 2 | P02 | P12 | ... | PN2 3 | P03 | P13 | ... | PN3 So what would be the objects? What coding method is this begging for? Let me know if you have any more questions.
Could you put it in google drive and link to the google drive in the GitHub readme?
Wouldn't people with vision impairments typically just use a keyboard and touch type (with either software to magnify parts of the screen if they have some vision, or with screen reader if they want to have the page read out loud)? I mean this is a cool application to get it working (seems like a generalization to the standard training of MNIST digits with a cool front end), but I just don't see much use in current form for disabled people. Text recognition is still quite useful -- e.g., for converting images of handwritten notes to searchable text, but as an application that lets you sketch images and then automatically convert to text, I personally can't think of any uses together (but that may be a limited imagination at my end).
Tech guru here You're gonna have to book your computer in for pip replacement surgery. Hope this helps
Just released a new version of my [python scratchpad for vscode](https://marketplace.visualstudio.com/items?itemName=almenon.arepl). The exception traceback included my internal code - now the traceback is modified to only show your code. I was unable to reproduce the [bug](https://github.com/Almenon/AREPL-vscode/issues/51) for a while untill I realized it only happens when the arepl script is inside a path with the letter n. Bugs can be so friggin wierd sometimes.
Hey, Almenon, just a quick heads-up: **untill** is actually spelled **until**. You can remember it by **one l at the end**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://github.com/Almenon/AREPL-vscode/issues/51) - Previous text "bug" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
sigh... thanks bot
you are right about the mnist thing. I use emnist which is mnist with uppercase and lowercase letters. but I think that you are wrong about that it has no use for disabled people. the keyboards for computers that exist in the market for them are just expensive and huge so no one wants to use them. also another group that would benefit from this keyboard are the elderly. they would much prefer to use handwriting to interact with a computer. look how much typos all the grandmas on facebook have ;) 
Thanks for sharing!
Reminds me of cellwriter. 
TOS does not legally protect website from being scraped if user doesn't agree to the TOS. So if websites TOS is hidden somewhere in a link on the bottom on the website and it says that by using their website you agree to their TOS, that is not a valid agreement. It is however a different story if you click on the button "I agree" when asked to agree to their TOS. So for example some website will have instant pop up on entry, where they ask you to agree to their TOS or you cant proceed. This is a much better legal protection against web scraping. But more often you will see data being gated behind login, where you will be forced to agree to TOS if you want to make an account in order to access the part of website with all the juicy data you want to extract. Interesting court case in August 2017 was LinkedIn vs hiQ Labs (scrapers), where US court decided in favor of scrapers. What hiQ Labs did was they only scraped public LinkedIn data and all the information gated behind login was left untouched. And court ruled that they scraped public information and that if LinkedIn doesn't want it being scraped they need to fully gate it behind the login. And in general, website often have this god-complex where they think they own all the data (looking at you Facebook) that touched their servers, often it turns out it is not exactly like that. Most simple case are online yellow pages. All that business/person information is not property of the website, its property of the business. However not all is black and white, so I would agree with another person that commented here, check if there is API and if there is not but you still want the information don't be a dick and scrape in moderation. There was also an interesting court case in August 2017, Craiglist vs Instamotors. Where court ruled in favor of Craiglist. Scrapers did scrape public information but they were bunch of dicks and abused that data by spamming Craiglist users with ads, sharing user's listing without their consent, etc.. So in general don't worry that much about TOS and for general recommendation what is good to scrape for start is any online store or website that interest you (sports results, weather forecast, etc.)
You tried running this with a profiler to find the code *hotspots*? People are more likely to help if you have at least tried yourself first and can demonstrate that
personally i'd go with converting your user input date into a datetime with: serv_date = datetime.strptime(input("Enter Service Date 'YYYY-MM-DD' :"), "%Y-%m-%d") and make your other date: po_create_date = datetime.now().date() then as they are the same type you can do all the comparing you want and if you want to spit them back out just do a serv_date.strftime("%Y-%m-%d") 
Continuing my reddit helper bot. It's having a difficult time identifying questions correctly, and there's a lot of posts (that follow the format, "Help my code is broken!") that is isn't currently identifying. I'm going to add it's training-wheels features to its post classifier this week, which is basically it doesn't try to classify posts which have more than 3 points when they are over an hour old. Then I need to test its 'try to find another post with an answer feature', then finally see how frequently it posts. If it's too spammy, it'll never be allowed to post. but if it only posts a moderate amount I might actually turn it on and let it start running a bit this week. While my question classifier isn't going super great, I found a good few research articles that I plan on mimicking or using to find algorithms I've never heard about. The one I'm reading right now should greatly improve my primary twitter bot too
Absolute beginner, but just completed a script to automate an email with an attachment (with Google's help obviously). I know that's easy but for me it was a big deal, now to just figure out whats next!
I actually don't mind the inject decorator too much, though I'd prefer if it wasn't needed at all and could just introspect the signature directly. To me, it's a small concession to make. I also prefer Injector's modules to DI's containers, mostly because it's easier to reason how I'd allow a plugin to override something. Instead of trying to coordinate inheritance between the app and plugins, the plugins just provide modules that are registered into the injector instance. I have some experience with Autofac and Ninject in C# land, so an object based approach rather than a class based approach appeals to me as well. 
This would be very helpful for chronic slow typers like my mom.
I haven't run it with a profiler, but I've run timing sequences on the recalculation portions of the code. It's the darned nested for loops. Python is awful about them from my understanding. I'm just not sure how else I could structure this. The 'recalculate single' def is part of my attempted workaround for this, only iterating over a small portion of the array instead of the entire thing.
That's wonderful! I did something similar for my first project too (well it was the first one I wasn't instructed to make) More than 6 years later I still use it frequently! I hope you enjoy learning python and using it for fun projects!
Thanks alot! Definitely want to find ways to make repetitive stuff easier at work, and eventually find new ways to analyze data so I can stand out on the team. Graduating next month so I feel like I'm ahead of the curve!
Hey, the\_chief\_mandate, just a quick heads-up: **alot** is actually spelled **a lot**. You can remember it by **it is one lot, 'a lot'**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Thanks. You could just use the Pi. I just figured I might use it for other things and didn't want it in a box on the ceiling of the garage. I like the idea of the esp just have 1 dedicated job.
Hey, we have just published our comparison of Sentiment Analysis API - you may check how your price compares to other APIs. https://blog.inten.to/cloud-sentiment-analysis-vendor-overview-32d4bdaaf0c3 Overall, I would say that the price per 10K requests is fine, but the entry tier is super-high. 
I used to use Kivy but after having one computer that couldn't get openGL 2 to run which is required for Kivy so I've been using eel. Really useful being able to switch from a locally run webapp to running it as a normal webpage.
I consider this my [must watch Python video](https://www.youtube.com/watch?v=RG1P8MQS1cU)
The main focus of the class (at least from what i recall) was creating classes, that really helped me to understand python and its modules and what they were basically, so, mixing what i remember and the class curriculum page: -Abstract data types, -Complexity analisys (not much). -Hash tables (not much). -Recursion -Search and order algorithms -Maps -Binary trees maybe some of these didn't translate well, sorry. 
teach me your ways senpai
once I tried to use ansible python api: it was awful (it was v2.4)
What's the threshold of getting banned by WhatsApp for doing that? I.e. not getting caught :-D
just watch [these](https://www.youtube.com/playlist?list=PLQVvvaa0QuDfKTOs3Keq_kaG2P55YRn5v) tutorials and go to [this](https://www.kaggle.com/) website and you would be able to create almost anything. 
You might want to try `sudo -H python3.6 -m pip install -U pip`
Got it :\) Thanks for sharing your thoughts, really appreciate it! BTW, in case you need to override a provider, it's done easily using ".override\(\)" method of provider: class User(object): """Example class User.""" # Users factory: users_factory = providers.Factory(User) user1 = users_factory() # Extending User: class SuperUser(User): """Example class SuperUser.""" # Overriding users factory: users_factory.override(providers.Factory(SuperUser)) # Creating some more User objects using overridden users factory: user2 = users_factory() # Making some asserts: assert isinstance(user1, User) assert isinstance(user2, SuperUser) Also you can use ".override\(\)" with context manager \(that could be useful for testing\): # Creating ApiClient and User providers: api_client = providers.Singleton(ApiClient, host='production.com', api_key='PROD_API_KEY') user_factory = providers.Factory(User, api_client=api_client) # Mock ApiClient for testing: with api_client.override(Mock(ApiClient)) as api_client_mock: user = user_factory('test') user.register() api_client_mock().call.assert_called_with('register', {'id': 'test'})
If you have a website you could provide a download link for the weights there. Or you could upload the weights to public dropbox or drive and provide the link on your repo (where you keep the code).
Yep I tired upgrading pip and it's a mistake :-/ it completely messes up pip for python on Mac. I assume you installed using homebrew?
Learning Python since 3 months and trying to devellop an american pool break \(don't know if we called it like that in english\) and its pretty hard xD I'm currently with 2 balls but I think that if I can do it with two it will not be so hard with 16 of them. 
If you're in school and taking any science or math class, make a module that contains all your math equations and formulas. Make a currency converter that uses up to date exchange rates. Make a commandline tic tac toe game. Start by watching YouTube videos and code along with them. Come up with something original that you want to do, and break it into smaller tasks that are more manageable and research how to implement them. 
This looks really awesome and could potentially be the replacement for PyGame that I had waited for for so long... can’t wait to check it out.
Very helpful
i just figured out how to make a script that understands if a number is even or uneven
Examples of how you are running this--for both a "slow" version and a "fast" version. (Maybe just tack on a __main__ in the paste with the two cases. Other than that try: import cProfile cProfile.run("my_slow_Dijkstra(10, 15)") To get an idea of where exactly stuff is going slow. Then look into [line_profiler](https://github.com/rkern/line_profiler) to get actual function runtime/call information. Also--what exactly is `map[x][y]`-- never seen the map function used like that.
No idea, why don't you try doing a bunch of them and print the time?
 import time x = 0 start = time.time() for i in range(0,10000000): x += 1 elapsed = time.time() - start print(elapsed) x=0 start = time.time() for i in range(0,10000000): x = x+1 elapsed = time.time() - start print(elapsed) The result: 1.109292984008789 1.1032791137695312 [Finished in 2.287s] 
import dis def one(): x = 1 x = x + 1 def two(): x = 1 x += 1 dis.dis(one) dis.dis(two) # ipython %timeit one() %timeit two()
well, I tried [here you go](https://github.com/idan0405/handwriting-recognition/releases)
leave this here as its kinda relevant https://github.com/buildout/buildout ;)
Premature optimization is the root of all evil. If you're worrying about such things, you're doing things wrong.
Pipenv is a must have for me. Not having to deal with virtualenv folders and using the repository root for as is for development or deployment is awesome. Running a shell in the virtualenv with $pipenv shell or one off commands $pipenv run make is very nice
Just a side note, the `x += y` is not *always* the same as `x = x + y`. The `+=` calls `__iadd__` and is customarily used to modify objects in place. Consider the following example: mylist = ['a','b'] mylist0 = mylist mylist.append('c') print(mylist is mylist0,len(mylist),len(mylist0)) # (True, 3, 3) mylist += ['d'] print(mylist is mylist0,len(mylist),len(mylist0)) # (True, 4, 4) mylist = mylist + ['e'] print(mylist is mylist0,len(mylist),len(mylist0)) # (False, 5, 4) 
Modern compilers surely should be able to optimize X += 1 into a single INC instruction, don't they?
I have yet to try get someone to try this without it breaking for them and taking 10+ minutes in the locking step of installs. Seems to quite consistently do that on windows, which is a shame. 
I'll take a look at those as soon as I get home from the office. map[x][y] is referring to an array of map tile objects. This is all part of a 2D adventure game I've been working on. 
I probably don't have children
You have quite a few options, I will just name my two preferred ones. If it's a simple API , I would explore the option to do it serverless in Amazon Lambda, since if it is a low use application it would be pretty cheap to run it this way. There are tools to make deployment in Lambda fairly automated if you are using Flask or Django (see: https://github.com/Miserlou/Zappa) If you still want to deploy it in his machine and want to do it as automatically as possible I would use Docker, since it has support on Mac and you can define the deployment process in a Dockerfile and be sure it will work well (it is also pretty simple to setup).
Looks cool !!! I'll be sure to take a look when I get home.
Maybe it's not premature optimization. Maybe he needs more performance and this is a thing that he's investigating. While it's usually accurate, people are too eager to pull out the "premature optimization is evil" card. Optimization is not necessarily premature optimization.
I think using “dis” would show a more accurate inspection of the bytecode instructions, but yes this is a negligible difference.
There doesn’t seem a way to change the default to simply —skip-lock on install commands. Locking is reddiculously slow with little feedback. I always feel like my computer is frozen. 
Is it just my system, or is Pipenv slow? On a recent Dell XPS 13 with an SSD: ``` $ time pipenv run echo Test Test real 0m1.505s user 0m1.411s sys 0m0.091s ```
Refactoring and cleaning up smelly spaghetti code... Man, I hate my two-months-prior self.
Spam, advert, product placement, scam, low quality
Bear in mind that even for websites that do not explicitly prohibit scraping you're still creating extra load for their servers. If you do scrape those sites you should do so "politely", e.g. by only sending one request at a time rather than opening lots of connections in parallel. In practice the worst thing that'll happen to you is usually your IP getting banned by some automatic spam protection. Unless you're going seriously overboard I doubt any website will bother taking legal action against you.
I don't have enough knowledge to answer that, but my understanding is that for C, the compiler probably is smart enough to treat x += 1 as if it was written x++, and to compile using the INC instruction instead of an ADD of sorts. But for Python? I have no idea. The test indicates there's no difference between the two options, so my assumption is that Python doesn't do such an optimization, probably due to the fact it's interpreted and not compiled.
What about semantic versioning?
It's true I have built two bots recently and both were shadowbanned several times before I figured out how to make them more twitter-friendly. 
Yeah i used homebrew. I just started reinstalling with homebrew. I am assuming that will fix it but it's probably not going to finish before I leave work. 
Not really helpful but I did giggle so thanks for that. 
&gt;I worried about teaching things like the event loop, which was no longer the way we code. Am I missing some trend? 
Let me know if you want pointers on the profile/line_profiler. I've used it a bit--not nearly an expert but . . . As for "map"--it isn't a reserved word, but it is a builtin. Essentially it is sort of at the same level as "list"; you can name a variable or object "list" but it may not be the best idea. (In fact probably isn't a good idea at all.) For example with no imports at all you can do . . . def squares(x): return x * x list(map(squares, range(10))) And get: `[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]` 
Gonna be honest, that override mechanism seems a hassle: it requires the overrider to know something was provided in the first place AND what it was named. With Injector, I just provide a binding. If was there, it's replaced. If it wasn't, it's added. 
Looks to me like someone didn't bother to learn setuptools/pip and and created yet another solution to do packaging. The problems mentioned on the first section of article are already solved. You provide all dependencies in setup.py's install_requires, over there you specify what dependencies are compatible with your app. I especially like using ~= as version qualifier. "package ~= 1.2.3" is essentially equivalent to "package &gt;= 1.2.3, &lt; 1.3.0" which makes sure you have latest bugfixes but no API breaking changes. This is just fine for development, but you also want to deploy your application to production. At that point you (or preferably CI/CD) install the package, and run pip freeze to generate requirements.txt file. This file contains a snapshot of your application, using that file you install application in qa, do all unit testing, integration testing, load balancing etc. that's also what you promote to production if all passes. All this seems to do is reinventing the wheel: - install_requires -&gt; Pipfile - requirements.txt -&gt; Pipfile.lock 
Why not?
Err, depends... Worked as test engineer, and at one point I was asked to compile a test for a customer who didn't want to use a static set of data, but had us test on their customers' inventories.. AKA for every single test there was different data and it was impossible to create a single test for every iteration of the system, because they didn't want to create a plain test environment. So I wrote a selenium script that would scrape the websites of their customers' for all cars in the inventory (they wrote website for car dealerships), then dump the data in an excel file and add filters to it to help sorting. It would start with going to another car site to scrape a dropdown with a list of all possible car brands because car and model were in the same span without some dividing object and I needed them both filterable... Another time my boss decided that my usage of Selenium for common tasks was useful and I should automate more. Because my expertise was Python and I knew a bit of Java, my boss decided it would be a good idea to pull me out of my comfort zone (no clue why exactly) and put me to Java, while all my other co-workers got to work with Python (which I had to learn them). In Java, I wrote code that on failing tests it would automatically take screenshots and write a log file based on errors which could then be read to file bug reports. So when my boss noticed that I was able to do that, I was tasked to write something similar in Python too, which I did. The result was a custom testrunner for the standard library's unittest, that would use a subclass of TextResult that on test failures would take screenshots with Selenium. The code was a bit sketchy because globals but hey it worked and they still use it apparently... What other weird things are there... - a script to automatically block porn blog followers on social media by checking new followers and viewing their profile and pulling pictures they post through an image recognition system and check for nudity and typical url shorteners without actual content, then score them - a spam filter for a web forum that would keep track of a rating of current amount of spam, nothing useful, just a bayesian proof of concept I guess - a twitter scraper that would compile a network graph of followers and find connections between accounts. Need a couple updates to stop it from crashing, database is at 6M accounts seen. Found quite a few algorithms on which spam accounts are created - I recreated Slack's "user groups", a function only accessible to paid users from scratch, not knowing it was a paid feature, for a free slack. Found an API bug while at it and had the slack team fix it on a Sunday afternoon :)
I have nothing against Pipenv. I'm just stating, in practice, I always added comments about the third party libraries I made use of in order to make life easier on myself later on. I always kinda hoped that was a standard practice, if not just including it in some README text.
I'm interested in learning C/C++ soon-ish, as I'm told Python is slow comparatively. For that reason, I highly recommend the David Schachter videos. On another note: given how different Python 2 is from Python 3 at this point, are you sure anything before 2012 (Python 3.3) is still relevant?
Thanks a lot for your suggestion. I think we will change our pricing policy for education organizations and startup companies in near future :))
Hoping to find some time to continue slogging through the google foobar challenges. I did the first couple challenges a couple of weeks ago, and then we moved and didn't have internet set up at the house until this week. It's only a matter of time until I'm in way over my head on these though...
Finally! We should really have a link on the right menu to the Arcade library...
Pipenv is part of the Kenneth Reitz "Python for humans" movement. It appears that there is an audience, that don't care that much about the Zen of Python, but rather want stuff done by magic as fast as possible. In fact, pipenv is just a wrapper that's built on virtualenv and pip, so it's not surprising that it seems familiar. 
Are not these things easy enough in Python? I don't suppose Poetry solves the headache-inducing edge cases like VCS dependency links or improperly packaged cythonized dependencies?
Dude, I didn't even notice when posting this. Thanks!
This the exact problem package managers are solving
https://imgur.com/a/n8xH271 Sorry, the link didn't come through.
I've stayed away so far just because it seemed to be in constant development. Is it at a point now where new releases will be backwards compatible? At least to some degree? 
&gt;It appears that there is an audience, that don't care that much about the Zen of Python, but rather want stuff done by magic as fast as possible. Reminds me of Ruby
Except they install things globally. I feel much more better/safer with virtualenv. At any time I can just delete the current virtualenv and start fresh. Also I can have multiple venvs which use different versions of same package. How do you do that if you install everything globally with the OS package manager?
It looks like you're extending Kehvarl's [Djikstra map experiments](https://github.com/Kehvarl/Dijkstra/blob/master/dijkstra_map.py). I've worked with this code in the past and also found it slow for large tilemaps / search radii. I ended up ditching the nested loops and instead using a queue-based approach, similar to what's articulated in this [red blob games](https://www.redblobgames.com/pathfinding/a-star/implementation.html) article. I'll try to dig the code out, but I'm running a bit low on time today. Oh yeah... and [map](https://docs.python.org/2/library/functions.html#map) is a dangerous name for a variable in Python.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [Kehvarl/Dijkstra/.../**dijkstra_map.py** (master → 67a0241)](https://github.com/Kehvarl/Dijkstra/blob/67a0241f2fca754b4081ca963fab300dfd44e520/dijkstra_map.py) ---- 
So you're saying people are prematurely accusing others of premature optimization?
How is it different from pip? Is this a case of [xkcd #927](https://xkcd.com/927/)?
This. Honestly the appeal of pipenv, for me at least, has always been that python doesn't have something like yarn on javascript or rubygems. Lockfiles are nice. requirements.txt are not.
Did you miss the part where he explains why your `package ~= line` isn't deterministic?
Definitely! You can get up and running in no time with this library. I wrote a simple Pong clone in a few dozen lines of code without any prior experience with the library and grew to love it in the process.
Same here, on an i7 7700k. It's really annoying because I auto load it when I open a shell. 
If you really need a frozen environment, use a docker image or a nix package. But then again... this is by the guy who wrote requests, so maybe this will turn into something down the road. 
Did you missed the part where I said requirement.txt is already doing what Pipfile.lock does which both are meant for? ~= is just a nice feature that I wanted to mention because not many people seem to not know about it.
Unfortunately, I'm still blocked by the lack of arbitrary package environments in the Pipfile format. We have one dependency, cx_Oracle, that we don't want included in our local dev environment because it's a hassle to install due to licensing restrictions. With requirements files, this is solved by just having multiple requirements files that include a common file, but that's not the model that Pipenv uses.
I would start with these: https://azure.microsoft.com/en-us/resources/samples/data-lake-analytics-python-auth-options/ https://github.com/AzureAD/azure-activedirectory-library-for-python
You will have a better result with questions like this on /r/learnpython, where you will note in the third Rule; no screenshots of code.
&gt; requirement.txt is already doing what Pipfile.lock does It actually doesn't though.
Pipfile.lock lists the hashes of all dependencies (including transitive ones), which is important for deterministic builds. 
The first questions I have are how much labeled data do you have to train with? And what is your input, is it just the 'text' field? Is there a labeled field and is that your target output? The more data you have, the less background work you *need* to do and the more you can 'throw data at the problem'. It's not an elegant solution and until you hit a certain amount of data and it has some really noticeable problems, but it gives you a baseline to improve against when you build a more specific model. More realistically you don't have a huge amount of data to play with so you're going to have to figure out how to build topic modeling systems and classifiers ([here](https://towardsdatascience.com/topic-modelling-in-python-with-nltk-and-gensim-4ef03213cd21) are a [couple](https://datascience.stackexchange.com/questions/15314/nltk-sklearn-genism-text-to-topic?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa) of links which should give you more of an idea what you'll need to build. I recommend taking a look at those.) Honestly your question is fairly specific and your solution is probably going to be more of an example of the art of data science than the science of it. Chances are, assuming 'text' is your input field, and 'category 1&amp;2' are your output fields, you will build a systems that: * tokenizes the input sentence, by sentence then by word * perform dimensionality reduction and using latent semantic analysis or latent Dirichlet Allocation (I don't know that there's much of a difference, though I'm probably wrong) and in that lower space classify the input according to your labels Alternatively after tokenizing * Classify using a sparse feature set More links (mostly just from the ones I've already shown you) * [Scikit-learn sparse feature classifier](http://scikit-learn.org/stable/auto_examples/text/document_classification_20newsgroups.html#sphx-glr-auto-examples-text-document-classification-20newsgroups-py) * [LDA Explaination](http://blog.echen.me/2011/08/22/introduction-to-latent-dirichlet-allocation/) * [The NLTK Book Ch 6](http://www.nltk.org/book/ch06.html) * [My Favorite: Non-negative Matrix Factorization](http://scikit-learn.org/stable/auto_examples/applications/plot_topics_extraction_with_nmf_lda.html#sphx-glr-auto-examples-applications-plot-topics-extraction-with-nmf-lda-py) 
Can someone please explain how this compares with pyenv + virtualenv plugin? I've used this combo for years and it works almost perfectly. What does pipenv do better?
plenty of options to share the h5 file, either git-large file storage or figshare.com
I'm just a beginner, but I'm trying to create a programme with which you can track all your weights, reps and sets that you have done at the gym, saving those stats in .txt and .csv files. Currently trying to figure out how to design a GUI, never done it before.
Do you expect a lot of lambda in your interviews? I would recommend against lambda in most situations, as we have list comprehension which is a more readable alternative. Also 'reduce' is no longer present in py3.
next step: automate your manager's job
I'm pretty sure the author does know the existing tools quite well. But still, every time I read a pipenv tutorial it does feel its features should be rolled into pip and not a separate project. I've not actually used it in a project yet so maybe it's something that grows on you.
For the record, before `pipenv`, Ruby's project-level dependency management was far ahead of Python's, with `bundler`. I say this as someone who likes Python better. 
pip-compile from pip-tools automates it nicely
I'm working on packaging [fluids](https://github.com/calebbell/fluids), a fluid dynamics library, for [Debian](https://www.debian.org/). It's interesting learning about packaging things for Debian and I have quite a few Python libraries I want to get in there to hopefully increase their userbase.
I've been needing to learn how to use numba, what tutorials did you use to figure out how to use it annnd you're the author of UMAP aren't you? No wonder you like Numba, that's where I was first introduced to it
Automating a ton of weather model evaluation routines. It's hard to code the "right way" and still meet deadlines.
&gt; Currently trying to figure out how to design a GUI, never done it before. You might want to give [PyQt5](https://pypi.org/project/PyQt5/5.9.2/) a look. It's a solid, cross-platform GUI &amp; application framework. Alternatively there is an interesting project you might like: [wger](https://github.com/wger-project/wger), a web-based workout manager written in Python (it uses Django in particular.)
I took a tutorial at SciPy last year from Gil Forsyth and Lorena Barba. I believe the tutorial is [on youtube](https://www.youtube.com/watch?v=1AwG0T4gaO0), and I think the [course notebooks are still available](https://github.com/gforsyth/numba_tutorial_scipy2017). Its definitely worth your time if you are interested in getting started with Numba.
Thank you! This will help me follow your code, as well as improve my own which needs that boost
[pyqtgraph](http://pyqtgraph.org/)
Mr. Genius needs to work on this a bit more. Right now it’s still the not-ready-for-prime-time Python package manager.
I still don't understand the problem and how pyenv is resolving it. Are you referring to example with Werkzeug? If you use install_requires like Pipfile and requirements.txt same as Pipfile.lock you should not have this kind of issues as well. 
&gt; The first questions I have are how much labeled data do you have to train with? And what is your input, is it just the 'text' field? Is there a labeled field and is that your target output? More than a hundred million and less than a billion. i have a few hudred structured attributes that can go with it as well. however, yes. All i am looking to parse and categorize is going to be a recordID and a text string. The string could be as small as text, and as large as a standard CLOB data type, i have some strings with a length of 15k. But again, as I said earlier we have a tool that we have spent the last few years using so we have the models built, some really good models that are currently being used in the enterprise. I don't really want the machine to learn itself at this point until i can reintroduce the same models that are already into another system. Once i have that rebuilt, then i could play around having the machine learn. with all that being said. my model looks something like the following. like: 'hung up' not like: 'I hung up' then category1 = 'behavior' category2 = 'poor rep behavior' ok also, i will definitely take a look at your links about building some. with all of the reading i have done you need the following, but im sure im missing something... n(gram) to tokenize (available in ASTER, SAS, NLTK, Vertica) naive bayes algo? (also available in these systems) some kind of corpus? (isnt this your dictionary per say? what to look for, how to categorize it when you hit) levenshtein distance function? (when i need to find 2 or more words within X length phrase or sentence) I havent read your first two links yet, but i plan to do a bunch more research tonight. To give more background. i work for a very large organization, we have many many options, i am performing a proof of concept on what we actually should use. So i know a little bit, but i am really rusty on the code behind it, and you don't get that in a sales call. I personally would like to keep a simple open-ish source solution that will cover me until i can get this built completely in house. Right now, we are leaning towards IBM Watson. also sorry if my response seems all over the place :) 
I get this even on running fish command-line completion, so even typing out a command can be really slow. I think I remember there being an issue on GitHub tracking it, but yeah it's super annoying.
BTW: this is also trivial to do using [extras_require](https://setuptools.readthedocs.io/en/latest/setuptools.html#declaring-extras-optional-features-with-their-own-dependencies) if you create a proper setup.py.
the only time you should be concerned with things like this is when you have a performance issue and you have used a profiler to actually track down the offending code, otherwise worrying about things like this is just a complete waste of time.
I got a basic template for a blog using Flask from [this youtube tutorial](https://www.youtube.com/watch?v=XHGpPCYmPvI&amp;t=1658s) which I found really helpful and have been building on that template. So far I've significantly changed the front-end, added login/registration functionality and done a few other things to make the site feel nicer. This week I'll try adding commenting functionality and actually hash passwords instead of being lazy and storing them in plaintext I've found that I enjoy this type of webdev with Python almost infinitely more than I enjoyed the LAMP-based webdev course I took a while back. Most of the python stuff I've done so far is more based in robotics so it was a little surprising to find that I've also enjoyed making a blog/forum using Flask as well
&gt; Lockfiles are nice. requirements.txt are not. Yes, and this is the reason because I have used pyenv+pyenv-virtualenv plugin with [pip-tools](https://github.com/jazzband/pip-tools) to manage a requirements.in file (one Pipfile equivalent) with the packages used and generate my requirements.txt with all my packages and versions with **pip-compile**, to install my exact packages and uninstall the unneded with **pip-sync**, and zero problems all this time (three years aprox)
Using pipenv?
You say one of your target audience groups is people with visual impairments... As a blind person, I haven’t the slightest idea what it is that you have done here, since the linked video appears to be a completely silent video, unless I’m missing something? :D
This is the underlying setuptools bug which impacts all setup.py entrypoints. Lots of folks are resorting to fastentrypoints which monkey patches setuptools to be dumber and thus 50-100x faster. https://github.com/pypa/setuptools/issues/510
Hadn't known about pip-tools. Will try it out next time I'm messing around in python. Wish there were support for this type of thing out of the box with python. After all, there should be one-- and preferably only one --obvious way to do it.
As I pointed out in another comment, this isn't pip's fault. A lot of other packages imported and used pip's internal, unsupported private APIs and assumed that would always be OK. Then pip rearranged its internals and all those packages broke and people blamed pip.
sounds like you haven't been using venv correctly 
requirements.txt is not a README
https://gist.github.com/jasonrdsouza/1901709 maybe
Thanks! This was a great article. I have been working on a project that analyzes Amazon reviews and this will help me. 
or setuptools or pipenv or conda...
Smells like homework.. maybe try /r/learnpython 
It's actually going the other way. At one point, PyPA put out an official recommendation to use pipenv, but have since removed it from their site.
They're for different things.
Yeah, I actually just discovered that issue today while debugging my own project's slow CLI start time. Sadly using the wheel-based version from pip (which works around that bug) instead of the Arch Linux package cuts the time by about 50% but it's still noticeably slow: ```$ time pipenv run echo Test Test real 0m0.805s user 0m0.717s sys 0m0.085s```
I am extending that, thank you for linking him! I could not remember where I had inherited the original class from. Also good to know about the map keyword.
It's because the `int` type doesn't implement `__iadd__`, so the interpreter falls back to `__add__`. `+` and `+=` are different operators in Python. `+` calls the receiving object's `__add__` method, whereas `+=` calls the receiving object's `__iadd__` method. However, if the receiving object does not implement `__iadd__`, `+=` falls back to `__add__`. Thus, for ints, they ultimately call the same method.
Just opened code academy for the first time and worked through the first two chapters in the python syntax training. :)
My understanding of keyboards and how they're used are limited, because, keyboards really anything that interacts with a human can be complex. If you want to take something complicated, and make it easier to use, start with a module that does the complex work for you and then if you need to dive into what it's doing. Here is one possible module you could use: https://github.com/boppreh/keyboard. There are probably others too.
I hope this does not catch on.
If you go on youtube and look at videos from Sentdex he has a large number of videos on learning Python Tkinter with just these types of graphs should be exactly what you are looking for. I know he also has a video series on PyQt but I don't know if he does these types of graphs in that series. GOOD LUCK.
I need a Why. For example use single quote for strings not double but I DON'T see why. I prefer double because I am more likely to have a single apostrophe in my text. I don't see it. 
I haven't had to use venv for a long time. Easy enough to just use pyenv.
That looks awesome. Is there any chance you know how to ELI5 on how to understand new libraries? Like if you were given a new library what would you do to start to understand it?
Well it's a different tool for a different thing. Pip is just a package manager. It will install a package from PyPI and it's dependencies defined in setup.py. It will not create virtual environments, lock dependency versions, resolve complicated dependencies, allow flexible version requirements, or let you pick the Python version required for the package. Also, writing a setup.py for a package is no fun at all. Python is missing a declarative layer for package specifications. Pipenv and Poetry attempt to fill the gap and provide a complete solution for the packaging problem.
I love the idea of pipenv as it falls in line with a lot of other task runners and packaging systems that are common to web development. I get folks not liking it or not seeing the utility of it. The only decision I’m not hot on is that it puts project files outside of the project. I get it can be nice not to see a `venv` folder in your project but like other similar tools in other languages I’d rather keep all project files in he project folder for easy cleanup. Super nit picky, but otherwise I love this and will give it a shot. 
I'm trying to learn how to install new packages with PIP. For some reason, I'm unable to update the version in my current path. I installed Anaconda a few months ago and never use it, but I think that's where my python code it being interpreted? Could anyone coach me through how to fix the path where my code is evaluated to the standard python3 interpreter? 
[removed]
Try this: pip3 install -U pip 
I could be wrong, but I feel like the root user (used when using sudo) has a different version of pip. Try running the same command to upgrade via sudo
I created a small program to input dogtag information for enemies you kill in the game Escape From Tarkov. I was practicing seperating code to make it neat and easier to read. If you guys wanna take a look: [Repo](https://github.com/Ryoliveira/Dogtag_Tracker_EFT)
This worked! Thank you!
You’re welcome. A Mac comes with Python 2.7 installed by default. If you install Python 3 you need to call the interpreter by using ‘python3’ and call pip via ‘pip3’. 
So in setuptools you put install_requires and list there only b and c (the requirements there supposed to be only immediate requirements of the package) - no need to worry about diamond requirements. To get snapshot of your package dependencies you call `pip freeze &gt; requirements.txt` and use that to install in production. It works exactly like Pipfile.lock, you are make a snapshot of all packages included (not just those listed in install_requires).
You may want to look into Kenneth Reitz's other projects to see what else he has done.
Can they work together?
I don't know about pipenv, just mentioned this because you said you are using two requirements.txt files. You probably wouldn't need one for the development. 
I need to know your skill level and if you will be active on our projects first.
you can specify packages you need in setup.py file, and the exact versions you are using can be easily generated by calling `pip freeze &gt; requirements.txt`
If the fortran runtime isn't doing anything dumb with its input (just using plain stdin) then `subprocess.popen()` will let you intercept its printing and filter or discard it, while supplying whatever you want to its input.
You can redirect the STD output and STD error within the bash script: myfortranexe 2&gt; stderr.log 1&gt;stdout.log Or both stdout and stderr to a single file: myfortranexe 2&gt; &amp;1 &gt; logfile 
On preemptive multitasking systems, sleep(X) basically just tells the OS "don't schedule this thread to run for at least X". There is no guarantee that the thread will resume running after exactly X.
I find it quite fascinating how casually you talk on reddit. \&gt; Hi guys what's up? \&gt; So the thing goes like this, \&gt; i'm still in the beginning of my way guy's It's like you know us, but you don't.
And I've heard that, but why does one language run slower than another? It's performing the same tasks, what makes pythons implementation slower than C or C#
Read its documentation. Do some experiments. Read the documentation again. Repeat until you understand it.
Just want to mention that this type of question is more likely to receive helpful answers over at r/learnpython.
It's more that this is something I've never really dealt with before, so now I'm considering things like using matrix operations rather than embedded for loops for 3D problems. I had no idea the gains I saw from doing this were even possible, which just gives me a deeper appreciation of people that do this for a living!
Oops, I totally meant to do it over there, thank you. 
How would that change anything that I wrote?
Based on the article linked I have some doubts.
 &gt;&gt;&gt; ipaddress.ip_network('192.168.0.0/16').netmask IPv4Address('255.255.0.0')
I've tried it a few months ago on Windows, but it was buggy and the lock time took forever. ITT: Still the same.
Coming from the Ruby world I find Python's dependency management to be downright primitive. 
Yeah I'm always surprised how few Pythonistas know about zc.buildout. Tho pipenv is more like the old buildout (which managed venvs) 
&gt; ipaddress.ip_network('192.168.0.0/16').netmask &gt; IPv4Address('255.255.0.0') Yes but I am trying to display the results as the following 192.168.0.5 255.255.255.0 reason being is it will being input as a interface ip on a cisco switch virtual interface, and unfortunatley IOS still doesn't support cidr notation.
Leading commas on lists are much better than trailing commas.
Missing windows support was always the dealbreaker for me, great news!
True. I was lazy for some projects just to tinker and just cloned a project inside the venv folder
It's sponsored by PyPA which, as far as I know, are maintaining both setuptools and pip now, so fat chance.
You need to describe more about your use case if you want clear guidance/resources suggested. What you're asking here is so rudimentary it is difficult to know what to provide. For example, do you wish to: - Capture input after execution of code? (Example, enter y/n)? - Trap input after user execution (example prevent SIGINT)? - Read input from users in the background? - Trigger actions uppn keypress once in an application? There's so many things you can do with raw input that it's difficult to understand your question.
From what I've gathered it was more of a "not ready for prime time yet" kinda decision, and mostly due to performance issues. I'm pretty sure it will be reverted if/when these issues are resolved.
The key problem with conda compared to buildout, pip, setuptools and pyenv is that it doesn't use the cheese shop.
I was contemplating on whether I should include motivations for each of the rules, but ultimately decided not to. Single quotes because it only needs one finger to type. No need to press Shift. You're also more likely to use a quote for dictionaries vs writing sentences in code with apostrophes.
I tried using pipenv for a while, converting real production projects into using it. It failed spectacularily and was riddled with bugs. Bug reports got closed on Github for no good reason. The commit log is riddled with stuff like "fixes". Pipenv itself does not define its pip dependencies, but instead includes a "vendor" directory along with a "patched" directory for libraries that pipenv needs modified for its own gains. I will never run this thing in production.
It's configurable. There's an environment variable `$PIPENV_VENV_IN_PROJECT` that you can set to 1 to put the venv folder in the actual project directory.
One of my biggest gripes, too. Luckily, not a problem with `export PIPENV_VENV_IN_PROJECT=1`. It uses `.venv/`. 
Pipenv actually uses pyenv to handle the virtual environment, so yes. 
.join ?
this explains the sleeps not being exact, but not why the difference gets higher the longer you sleep
Write for key, value in head.items(): if key == 'Date': tm = value As tm = head["Date"] Dictionaries actually have a O(1) complexity!
Anything pip-related always seemed incredibly slow to me. Running `pip --help` takes over a second on a reasonably fast desktop PC, and **over 40 seconds** on my idle Raspberry Pi (although it is an old device).
When I refer to people with visual impairments I mean people that have blurry vision. because the idea is using a handwriting Interface instead of using a physical keyboard. so its more for elderly people with blurry vision. I said eople with visual impairments and not blind people becuase (at least for now) it is a visually based interface.
My preferred "style guide": [https://github.com/ambv/black](https://github.com/ambv/black)
Or use string formatting. 
Main maintainer (kennethreitz on gh) is pretty awful. Constantly closes valid issues, responds like a jerk, etc. I've been using pipenv since October and got my work to use it shortly thereafter, so we've opened numerous issues and it's basically an office meme at this point. A lot of "that's a feature not a bug" or "we're aware that this very basic functionality is broken, closing the issue".
My experience exactly. Unfortunately, we're already using it in production and switching back would be more of a headache.
I just invested so much time in Pygame - buying books etc and it was so disappointing from a performance perspective. I actually invested time in understanding the underlying graphics libraries - and Arcade seems much more modern in that respect..
"Bug in setuptools" 😔
Looks really nice, thanks! Will give that a go! Basic pipenv didn't really do it for me yet. Hopefully services like pyup start to support pipfiles soon.
I feel you, bro. The whole of setuptools feels like a bug sometimes.
Found the following question on stackoverflow: https://stackoverflow.com/questions/1133857/how-accurate-is-pythons-time-sleep With some interesting graphs: https://i.stack.imgur.com/4MYle.png (macos) http://i.stack.imgur.com/l8L9M.png (a linux) https://i.stack.imgur.com/GeF8u.png (linux and windows)
I've tried Pipenv several times, and it never worked for me. Honestly, I find Kenneth's approach to interfaces quite confusing. Stumbled upon Poetry a few days ago, gave it a go, and it immediately felt much better than Pipenv, let alone vanilla pip. Note that Poetry uses PEP-standardized pyproject.toml files rather than Pipfiles. I think it also manages Python versions so you don't need pyup, but I haven't tested it.
I looked at poetry but it seems like it simply doesn't work if you want to use multiple Python versions does it?
The difference is higher in absolute terms but lower in relative terms. And it might be due to [timer coalescing](https://en.wikipedia.org/wiki/Timer_coalescing), we'd need to check how reliable the measurements are or of there is a lot of fuzz.
**Timer coalescing** Timer coalescing is a computer system energy-saving technique that reduces central processing unit (CPU) power consumption by reducing the precision of software timers to allow the synchronization of process wake-ups, minimizing the number of times the CPU is forced to perform the relatively power-costly operation of entering and exiting idle states. The Linux kernel gained support for deferrable timers in 2.6.22, and controllable "timer slack" for threads in 2.6.28 allowing timer coalescing. Timer coalescing has been a feature of Microsoft Windows from Windows 7 onward. Apple's XNU kernel based OS X gained support as of OS X Mavericks. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
arch
Where did you hear about its deprecation?
Just trying to be friendly, won’t happend again sorry.
Hey, shai50, just a quick heads-up: **happend** is actually spelled **happened**. You can remember it by **ends with -ened**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
&gt;Single quotes because it only needs one finger to type. *depending on your keyboard layout. it's a big world.
@dado2k did you manage to work out a reasonable Mastermind Algorithm? We have a website at aigaming.com that will let you turn your Mastermind solution into a bot and compete against other people's Mastermind solutions. We're even running a competition right now (Apr 2018) for the best Mastermind bot
Yeah I use black for python as well.
Magic functions that "just work", i.e. do a random task based on an unknown state. It's like the exact opposite of functional programming.
I got really interested in this recently and have found that Facebook's fastText library is ridiculously easy and powerful. You can learn about this by following the tutorial https://fasttext.cc/docs/en/supervised-tutorial.html
I'm working on a site that allows people to write Python game playing bots to play games like Battleships, Mastermind, Sliding Puzzle, Twist Cube and more. It's at aigaming.com and you play against other players or house bots. We've just set the Mastermind game live and this week we have launched a competition to see who can make the best Mastermind solution.
my 2 cents: * define constants outside of your function call, e.g. url (line 12) and path (line 14) are all constants. * if you want to make the path configurable, you might want to check out https://docs.python.org/3/library/argparse.html which will help you to build a command line tool * you can access the headers with a dictionary access tm = request.headers["Date"] (don't forget to do error handling, what happens if there is not "Date" inside the headers?) * use variable names that talk, `tm`, `sephead` says nothing * don't reinvent the wheel: parse the date you get from the http request using the datetime module ``` In [33]: datetime.datetime.strptime(request.headers["Date"], '%a, %d %b %Y %H:%M:%S GMT') Out[33]: datetime.datetime(2018, 4, 25, 9, 20, 42) `` and compare this to the current day ``` In [35]: datetime.datetime(2018, 4, 25, 9, 20, 42).day Out[35]: 25 In [36]: datetime.datetime(2018, 4, 25, 9, 20, 42).year Out[36]: 2018 ``` 
 # in: l = [[n for n in list_bosses()], [n for n in list_employees()]] # out: l = [ [n for n in list_bosses()], [n for n in list_employees()] ] lol
there are also some really nice courses on edx.org about python, I wished there was a curated list too so I would find the best ones more easily.
I am not fond of the [Long if statements](https://github.com/mixxorz/python#long-if-statements) because it still not very readable. I prefer to add semantic by storing the condition in a variable, and then having a really clear and simple if statement. Instead of having if ( fruit.color == 'red' and fruit.size == 'small' and fruit.climate == 'cold' and fruit.region == 'north america' ): pass I would do fruit_is_a_berry = ( fruit.color == 'red' and fruit.size == 'small' and fruit.climate == 'cold' and fruit.region == 'north america' ) if fruit_is_a_berry: pass 
It's no issue \- just fascinating. :\-\)
I'm confused. Do you actually mean pyenv here? It sounds more like you're talking about pyvenv or virtualenv.
is there a way to give an arbitrary location? "=1" seems weird.
Kenneth is an absolute legend and I love his work, but I have to agree with you. I researched pipenv for our projects at work some time ago and maintainer's attitude was one of major reasons why I didn't recommend pipenv in the end. I believe in giving young beta quality software a chance, but having your issues closed in brash, dickish way is not the treatment I enjoy as a beta tester. I put myself on the line at work, vouch for your software and risk running it in production so you can have valuable feedback early on - I deserve at least short cordial explanation why my bug won't be fixed.
I like this style guide, because it almost matches what I am already doing in my code :) Only couple exceptions: 1. I prefer double quoted strings 2. I prefer to put the value in comprehensions in a separate line, like this: ``` best_fruits = [ f for f in fruits if f.color == 'red' and f.size == 'small' and f.climate == 'cold' ] ``` The reason for it is that you often have to do something else with this value. i. e. apply function: ``` best_fruits = [ foo(f) for f in fruits if f.color == 'red' and f.size == 'small' and f.climate == 'cold' ] ``` I think that it would be more logical to keep it on a separate line.
man, nothing is stopping you from moving to a different language, just saying
Using npm as an example of a good package manager ...
From all of the negative feedback, it doesn’t seem like a good idea for us to switch from pyenv. Pyenv is great!
Right, but you have to manage the version numbers in there manually as the packages update. In Pipenv you don't.
Well, to each their own. I’m a frequent user of metasploit and “ruby gems” are a fucking enormous pain in the ass. 
&gt; implying that whitespace is actually invisible &gt; complaining about virtualenvs, when that's almost ALL Node/npm have &gt; complaining about incompatible syntax changes in Python in the age of ES6 Fuck outta here
What's up with the [broken image links](https://i.imgur.com/RmRieC6.png) and [poor english](https://i.imgur.com/SfhPTB7.png)?
Both ansible and parallel-ssh are open source. Both support Windows, though ansible requires external tools for some features.
OP or whoever wrote that article: *please* do some proofreading. There's not one paragraph without errors. Also, I'm really not a fan of these "x best Python libraries" articles. They are pointless and the library selection is often pretty arbitrary. What about Flask, Django, Pyramid, SQLAlchemy, BeautifulSoup, Click, pytest etc. etc.?
This is the latest in a series of articles explaining why enumerating anything in a title is a clear indication of low-effort link-baiting. 
Who wrote this? Is English not his first language, or is he just having a mild stroke?
&gt;Problems that Pipenv Solves It makes sure your CPU continues to overheat when you press the spacebar, even though this 'feature' was removed upstream. /s I concede that pipenv is a fitting and probably necessary tool for webdev and some other areas where it's unacceptable to "just upgrade" and where you don't care about being efficient or up to date with your packages. But I think it's pretty ridiculous to claim this is a one size fits all solution or even desirable for a majority of python users. It's disingenuous to talk about the problems it solves without mentioning the problems it can cause.
What does Married or Single have to do with Cryptos? 
He linked and used the image from the wrong project. The plotly project is described [here][(https://medium.com/@plotlygraphs/introducing-dash-5ecf7191b503) with links to github at the bottom of the article. 
If your object isn't a string, rather than trying to pick between converting it to one with str, repr, or format (3 different built in ways to do the conversion), the method forces you to choose how you want to do it. I can convert a date into any one of dozens of different formats, which is the canonical one? What about a float? How many decimal places by default should it use? What if your object doesn't make sense as a string anyway? The point of this method is to join strings together. It is not meant to do type conversion while it's at it. Yes, you could write your own join method that does, but for standard library purposes it's better to be conservative. Besides, with comprehensions it's pretty easy to do in line ','.join(str(e) for e in myiter) 
You're incorrectly assuming that the correct way to produce a str from any non-str object is always to use the str constructor. str.join correctly refuses to make this assumption, and requires that all elements be a str instance.
Don't forget the links that go straight back to the list. Wanted to check out PyFlux, but the header links straight back to the blog post.
This sounds like a good project for Flask. Simply have a function to do the scraping and then load the results in a view.
&gt; I can convert a date into any one of dozens of different formats, which is the canonical one? What about a float? How many decimal places by default should it use? Sure, then in that case you specify those formats. But if you don't want any of that, which is 99% of the times, you will do `str(e)` anyway. So why not default to this behavior? &gt; What if your object doesn't make sense as a string anyway? Then why are you even using `str.join` in the first place?
Most times you are going to use `str()`, that is why I think it should default to that. And when you don't, then is when it would make sense to be explicit.
Also: &gt; Here we highlighting the top 10 very useful and famous Python libraries. As an introduction to a post on the "best 17" libraries...
Or you've made a mistake, and the creation of a string just hides it. That's the danger of implicit behavior.
Best python library is library you need right now and that works :\)
We just have to show a basic demogaphic as part of the assessment, potentially identify any patterns such as married respondents having a higher percentage of wanting to learn more about crypto etc..
I do not understand how this submission received so many upvotes.
/u/learnpython
If you call join with an object that doesn't make sense as a str, why shouldn't join complain? Why allow invalid programs? I prefer errors over bad output when I make mistakes. 
Bots. Bots everywhere!
Why is `bash` in the middle of there? There's no need for a middleman is there? Just `fork`/`exec` it directly, using the `subprocess` API. Either send all the stdout to `subprocess.DEVNULL`, or to `.PIPE` and pick and choose what to `print`.
&gt;vex according to the docs you have to give it the name of the virtualenv, pipenv is just a smidge nicer at this in that you dont have to pass the name, it figures it out from finding the Pipfile in the current dir or \(presumably\) parent directories.
not in my experience. and the name .venv conflicts with some of the python niceties configured in spacemacs which are also equally inflexible 
Can you explain the dict comment?
\+1 for buildout. back when I did appengine development it was the only way to keep some system sanity with the sdk that got updated multiple times a month\(presumably to add yet another version of django and break webob\). 
1. Find some data (for example: real estate listings with price, area, no. rooms, no. bathrooms etc) 2. Choose a ML library (keras maybe?) 3. Train on most of the data 4. Test on the rest 5. Experiment with different type of data, different amount of layers etc This is for ML, however AI is much wider Good luck :)
- Comparing VM languages (CPython is barely that) with compiled languages. - Complaining about outdated software on macOS because Apple can't seem to ever properly ship a package manager. - Not understanding how awful is OpenSSL on macOS. - Citing arbitrary performance differences without reference or benchmark, which most likely is wholly disconnected from the real world anyway. Please try to actually understand how an operating system works…
that's been my experience recently as well. [https://github.com/pypa/pipenv/issues/2000](https://github.com/pypa/pipenv/issues/2000)
I guess that depends on how you use python, do you use it for web development? Machine learning? General purpose programing?
Mm yeah this is a point I can see.
Yeah ok, I agree with this then. Makes sense.
Oh, forgot to mention that, sorry. General purpose. Going to apply for some junior positions that don't require experience as I'm no pro.
I understand your frustration, but you have to remember that *many* if not most operators (and the methods that underly them) refuse to do things where an ambiguity exists. Well **", ".join(range(3)** is fundamentally the same thing as this: 0 + ", " + 1 + ", " + 2 And would you expect that to work? I wouldn't, because whose `__add__` method should win out? Should it attempt to convert the strings to ints because they came first? Or, since that would fail, should it convert the ints to strings? Here it's semantically obvious, but here? 0 + "1" + 3 That is why the language resists the temptation to guess. Some methods like **str.join** look a little more like the solution should be obvious, but when broken down to the underlying operations it's not necessarily as clear. 
Unfortunately that's not true. Pipenv does not handle packaging and it's not intended to be used for pypi-packages. 
Pipenv optionally uses pyenv to manage the installation of python versions. If you don't have pyenv installed, pipenv works fine, it just doesn't install python versions for you. Pyenv-virtualenv is just a pyenv plugin (albeit one installed by default using pyenv-installer) which allows you to conveniently call virtualenv functions through pyenv. &gt; I've never been clear on the use case of pyenv The use case of pyenv is that it manages python versions for you. For example, if you wanted to install the new 3.7RC, you'd probably go to the website, maybe compile some source code. Then you'd call out to `mkvirtualenv` to make an environment, and then manually activate it every time you want to use it. With pyenv, you do pyenv install 3.7rc1 # or whatever it's called pyenv virtualenv 3.7rc1 my_37_env pyenv local my_37_env `pyenv local` means that whenever I enter this directory or its children, `my_37_env` will be activated automatically. A bunch of other tools do this (including pipenv, I think) as well. You can activate multiple environments at once, which is useful for tox; all of the installed versions of python are in your userspace, so you can blow them away with no systemic issues. Pyenv can install things other than CPython, too - conda, pypy, jython, stackless, and a bunch of others are available. One of the great features, although it takes a couple of manual changes to get it to work, is that you can manage conda environments the exact same way as virtualenvs. You just do pyenv install miniconda3-latest pyenv virtualenv miniconda3-latest my_conda_env pyenv activate my_conda_env
The most confusing part about Pipenv is that it looks like a package manager similar to npm, composer, cargo, gem, etc. but it isn't. It doesn't handle packaging/publishing and you can't use it for pypi-packages. 
That's the difference between a dynamic, strong typed language like Python and a dynamic. weak typed language like javascript. Implicit casting can prevent run time errors but it can hide bad logic
I like the idea nurseries, but I am not sure that the linked article expressed why nurseries are better. Instead, this article built up an orthogonal history of how goto became go and then attempted to convince the reader that (without much depth of argument) nurseries are the same leap away from goto. Additionally, it asks the reader to simply try it to see why it's better. I think somewhere in there is a lack of evidence and vetting for the idea that would make me think I definitely should try it.
Very interesting. I rarely read an article and "cant put it down".
Are you sure kivy conrered in aesthetics? https://www.youtube.com/watch?v=GJ3f88ebDqc&amp;t=182s
Looks good! Will I be able to replace the terminal window at the bottom with this?
I just started with codewars.com for practicing python. You might find it useful also. If you try it and like it let me know. Train with Programming Challenges/Kata | Codewars https://www.codewars.com/ "Codewars is a more mature version of CodeCombat. Students aren't guided through lessons, but instead confronted with programming tasks—not unlike the homework assignments of a typical computer science class." Review: Codewars and CodeCombat | Opensource.com https://opensource.com/education/15/7/codewars-codecombat-review Codewars Review for Gaining Code Experience http://www.alychidesigns.com/codewars-review/
Have you tried it for something just for fun and useful? I mean something non workrelated. 
You should give the Arcade Library a shot. But the upper bounds in performance for any Python game or graphics libraries will always be a good deal lower than natively run code. PyGame has its applications and don't underestimate the benefits of using a popular library: myriad of documentation and tutorials floating around as well as tried and tested patterns. I'm sure the knowledge you acquired working through PyGame's inner mechanics will help you think through problems at more than one occasion in the future.
Yes I am! I meant to post this in /r/learnpython but I was mistaken. 
I just started with codewars.com for practicing python. You might find it useful also. If you try it and like it let me know. Train with Programming Challenges/Kata | Codewars https://www.codewars.com/ "Codewars is a more mature version of CodeCombat. Students aren't guided through lessons, but instead confronted with programming tasks—not unlike the homework assignments of a typical computer science class." Review: Codewars and CodeCombat | Opensource.com https://opensource.com/education/15/7/codewars-codecombat-review Codewars Review for Gaining Code Experience http://www.alychidesigns.com/codewars-review/
For practice solving problems that might be similiar to what might be asked on an interview you can try codewars. Train with Programming Challenges/Kata | Codewars https://www.codewars.com 
Here is the latest US judgment on the legality https://twitter.com/scrapehero/status/985653935993126915?s=21. It has a link to one of the blogs you can follow to keep on top of legal aspects of scraping. The interesting thing with this judgment was the First Amendment angle on scraping. 
Here are some excerpts from the judgment First, scraping plausibly falls within the ambit of the First Amendment. That plaintiffs wish to scrape data from websites rather than manually record information does not change the analysis. Scraping is merely a technological advance that makes information collection easier; it is not meaningfully different from using a tape recorder instead of taking written notes, or using the panorama function on a smartphone instead of taking a series of photos from different positions. Applying this standard, it becomes clear that most of plaintiffs’ proposed activities fall outside the CFAA’s reach. Scraping or otherwise recording data from a site that is accessible to the public is merely a particular use of information that plaintiffs are entitled to see.
Kudos for being helpful in response to an OP primarily venting (for all the wrong reasons) and not looking for help.
I started to use Pipenv very very recently and I'm not at all impress. Poetry look like a nice alternative to me. But I would like to know if it's production ready? Also I would like to have the possibility to feed it with a requirements.txt (to convert existing projects) and for the moment I need a way to also generate a requirements.txt with versions pinned (used when building docker images with built-in pip). Is this possible?
Python has alot of libraries you can choose from. You can definitely make something similar. But you will need to research alot and find the best modules for your need
If he had instead the title: `Notes on structured concurrency, or: Go statement considered harmful [or: introducing Trio: concurrency for humans]` then I think my head might have exploded with the overload of programming title memes. That said, I enjoyed the article. I am, however, left unconvinced. My primary problem with it occurs when he compares the `goto` and `go` control flow diagrams, and says 'Notice any similarities?'. Well, yes, I can see what you're getting at, but I can notice one huge difference as well - the calling code stays sequential. Really, the whole argument is against side-effects, not against the obfuscation of the control flow. The arguments presented against `go` here are no different from those presented against threading, or external file modification, or whatever. The only way to guarantee no side-effects is to use a functional language like Haskell. To say that the language breaks the black-box principle because functions may spawn a goroutine that they don't clean up is no different to saying that a language violates the black-box principle because functions may create threads, or modify files, or anything else that is persisted beyond the life of the function. So I don't really buy that `go` is as dangerous as `goto` in the same way as I don't think that any other side-effect is as dangerous as `goto`.
is there anything that isn't considered harmful in this field god damn
What do you mean? pipenv install (package) Will install from the cheese shop. Or were you talking about it missing an equivalent of `npm publish`? 
The answer to the first question depends on your definition of production ready really. It is for my needs, for example. I think there's no way to convert an existing project to Poetry and there's an open issue about it, but it shouldn't be too hard to convert requirements.txt to pyproject.toml, and you only need to do it once.
This article is hilariously bad lol
I'm somewhat convinced. I'm not really a fan of the new python concurrency syntax. I think Promises were a much better concurrency design, and those share a lot in common with nurseries.
npm is bad. However, there are things that can be borrowed from it to improve python, and that's why pipenv is the officially recommended python package manager. 
With perl that would become a string. If I remember the horrors of it guessing correctly, `1/'0' = 0`. You don't get one weak typing behavior without the other. The reason it's things aren't auto-str'd is it would be slower. Also, did you want to str those bytes or cast them? What about the tuple. Do one thing and do it well. I mean why does `int(4.0)` fail? What about 3.000000001 or 5.5?
Black does some terribly stupid shit. for example, it places a new line after continue keywords but not after for statement so you end up with things like for x in y: if some_defensive_condition: continue do_something(x) if whatever: do_stuff() 
hide the evidence
Keep quiet or else...
amazing work, lot's of improvements and great new features!!!! 
Continuing the move from a gigantic monolithic thing to using microservices, and everything that this entails.
I do not recommend anyone to use pipenv. Even the basic features are broken. For example, it's currently impossible to update a single outdated dependency. The issue has been open since October, which is completely ridiculous https://github.com/pypa/pipenv/issues/966.
I got the impression that `with nursery...` is to concurrent processes as `with open...` is to objects that require teardowns, whilst also waiting for them all to finish, so yes I think that's about right.
Thanks, that S.O. post is to the point. I am disappointed by several mentions that sleep() can't be relied in below multiple milliseconds duration. I had hoped to perform a repeated small function from 250/sec down to 4000/sec, thus delays between ~4000μsec down to ~250μsec. I can imagine a self-correcting process where after every sleep it adds the difference between requested delay and actual to the next request, but wonder if I'm wasting my time
1. Jesus this article is terrible to read. Shoving a ton of paragraphs about GOTO in between introducing this nursery idea and actually explaining it pretty much made me want to stop reading it. 2. Pretending a wrapper that basically has `pthread_create` and `pthread_join` together is the new programming jesus is some ridiculous shit. 3. `concurrent.futures` behaves very similarly (the nursery could almost literally be replaced by `with ThreadPoolExecutor as ...`) and is already in the standard library, so what new thing does this solve again? In conclusion, standard garbage reddit upvote bait article.
Maybe ethernet? But then again, I still know some people who push for token ring.
It's not *Python* that's awful at nested loops. It's that your nested loops are doing a lot of unnecessary work :-) Take a look at the fourth diagram on [my page](https://www.redblobgames.com/pathfinding/tower-defense/). The blue squares are the ones that are changing. Each time you go through the *entire* map just to change the the blue squares. Almost everything is unchanged. That's a lot of time going through things that don't change. Suppose the map is 100x100, and your maximum distance is 200. You're examining 100x100x200 = 2,000,000 tiles. Instead, if you keep a queue as /u/___ml recommends, you will only look at the blue squares each time. Each square gets visited only once (\* if the distance between tiles is always 1). That means you only go through 100x100 = 10,000 tiles. That's a big savings over 2,000,000. P.S. here's [python code to handle the queue](https://www.redblobgames.com/pathfinding/a-star/implementation.html#python-breadth-first) — see `Queue`, `breadth_first_search_2`, and `SquareGrid` 
I did like Promises, with the caveat that there needed to be a method to get their contents. That's not actually part of the A+ spec, so a lot of libraries that implemented promises didn't provide it.
This article was full of provable false statements to be honest but I won't nit every one, some have already been mentioned. &gt; Go statements break abstraction. Remember how we said that if our language allows goto, then any function might be a goto in disguise? In most concurrency frameworks, go statements cause the exact same problem: whenever you call a function, it might or might not spawn some background task. The function seemed to return, but is it still running in the background? There's no way to know without reading all its source code, transitively. When will it finish? Hard to say. If you have go statements, then functions are no longer black boxes with respect to control flow. In my first post on concurrency APIs, I called this "violating causality", and found that it was the root cause of many common, real-world issues in programs using asyncio and Twisted, like problems with backpressure, problems with shutting down properly, and so forth. I don't even know where to start, the entire paragraph is one convoluted inaccuracy. You're comparing such drastically different concurrency models mechanisms to begin concurrent execution without including any of the supporting idioms used by actual implementations. You then contrive a "problem" by omitting these features (synchronization primitives), then present them in a new abstraction as a solution to these "missing" features. The complaint is that all of the below: go myfunc(); // Golang pthread_create(&amp;thread_id, NULL, &amp;myfunc); /* C with POSIX threads */ spawn(modulename, myfuncname, []) % Erlang threading.Thread(target=myfunc).start() # Python with threads asyncio.create_task(myfunc()) # Python with asyncio Never tell you when myfunc finishes- yes, great observation. These functions begin concurrent execution, they are not suppose to interrupt the current thread of execution. They serve as a core building block for concurrent programs, allowing the program author to use different synchronization primitives provided by the languages chosen concurrency model for different problem spaces. For example [Go is based](https://golang.org/doc/faq#csp) on [communicating sequential processes (CSP)](https://en.wikipedia.org/wiki/Communicating_sequential_processes) which explicitly define a model for these concurrently executing code blocks to synchronize. In Go to know when my func returns I have many tools at my disposal, one being [sync.WaitGroup](https://golang.org/pkg/sync/#WaitGroup) which provides a method that will block the caller until it's counter reaches 0. I.E.: var wg sync.WaitGroup wg.Add(1) go func() { defer wg.Done() fmt.Println("1) On exit Done decrements the wg counter") }() wg.Wait() fmt.Println("2) The program can now continue") Which could be written in an abstraction: func Nursery(fn ...func()) { var wg sync.WaitGroup for _, f := range fn { wg.Add(1) go func(f func()) { defer wg.Done() f() }(f) } wg.Wait() } To be used as below, see the [go playground](https://play.golang.org/p/Zwy0FSONwFb): fmt.Println("[sequential]") Nursery( func() { fmt.Println(" [concurrent] a") }, func() { fmt.Println(" [concurrent] b") }, func() { fmt.Println(" [concurrent] c") }, func() { fmt.Println(" [concurrent] d") }, ) fmt.Println("[sequential]") Or what it may look like when other important considerations are taken such as [cooperative cancellation and error propagation](https://godoc.org/golang.org/x/sync/errgroup), which are just as important as the synchronization examples shown by Nursery. How do I signal Nursery when the parent request Context was no longer needed and how do I tell callers that is why I returned control flow to them? I don't know who wrote nursery or have a problem with building abstractions to make concurrency easier to reason about. I just feel it's disingenuous to present *this abstraction* as a profound new solution while making it appear as if other languages have no idiomatic solution of their own.
is just learning to use threads, mutexes, Queues, how/when to share and not share objects. like we all did in the 90's still "too hard" compared to where the async community is going? Well OK then, enjoy this is a very smart person and I like this idea but at the same time it seems a little heavy-handed for garden variety "I need a background task" kinds of use cases. 
The title makes it to much like a competition. However, I like to find new libraries that I didn't know and are useful for my usecase.
Thanks will give it a go and let you know
it is giving me the following error on aws lambda. from PIL import Image File "/var/task/PIL/Image.py", line 60, in \&lt;module\&gt; from . import \_imaging as core ImportError: cannot import name \_imaging 
Side effects are the entire point of computing. Whether you're mining bitcoins or displaying graphics on the screen, the "side effects" are the whole reason any computation is needed at all. They just need to be documented and understood.
Wow thats great. Had a weird feeling this is going to be in a chip-brain interface and we can all understand each other perfectly. Can't wait for the new future (since the future is kinda here now)
I used to love it but then I tried VS code and now can't go back.
Oh cool, thanks!
Delete
You also have to write your code manually, and have to write import statements in your code manually, with versions in install_requires you are also specifying what version ranges your code expects, and that better be manual, because no code would be smart to know what you really want. I have feeling that either you are ignoring what I am saying (in install_requires you are specifying version *ranges* that you know API didn't change and you use pip freeze to get a snapshot of versions you use, which based on my understanding provides exact same functionality as pipenv) or pipenv is doing some magic and upgrades packages whenever it feels like it, which IMO is quite bad.
Because...
I think you should re-read that article very carefully because it does do something you've think it doesn't, and it manages to do it deterministically.
I wouldn't say that you need to do any specific task, just try to do any kind of task by using as many language features/keywords/standard library calls as possible. Obviously, it shouldn't be too small but the key here is to leverage the language to solve whatever problem you will choose.
I always felt that any kind of operation that is not atomic is going to have a high risk of being harmful in some kind of way or another. When you're working with something so volatile where any small misstep could cause serious issues, it's hard to say with certainty that "this method is the safest method". Reminds me of a quote in regards to network security, and sorry if I butcher this but I'm trying to recall it from memory &gt;The only way to truly protect your computer data is to unplug it Or something like that. Basically the only way you can have multiple processes working at the same time on the same thing safely is to... not. There is always going to be a risk, we can only minimize it. And it is going to be pretty easy to point at any specific implementation and point out it's flaws. Because they are always going to have some. It's just the nature of the work they are doing.
You mean multiple versions in a single project? I haven't tried it yet but in theory it should work fine in combination with tox.
Because Python scripts tend to include other languages inside strings. And it is more often useful to reserve `"` for use inside such strings, rather than `'`, e.g. command = 'ls "file name.py"' query = 'SELECT * FROM users WHERE name like "j alan b*"' And then, if you adopt that convention, consistency implies enclosing **all** strings in `'`
I'd say that you also need to look up what new features are in the most recent Python 3.x versions so that you would be familiar with those new things in case they will be used in the code base of your future work :) 
I think the idea was to follow PEP8 as a start, and then override it in the examples he provided. Like, he didn't mention a convention for variable naming. So in that case use PEP8 spec. But he did mention a convention for calling functions with a lot of kwargs. So use that instead of PEP8.
C#?
I think the beauty of things like PEP8 is that you can read it and remember it pretty well without having to reference it all the time. It's a pretty "common sense" way to handle formatting. Obviously it's not a hard and fast rule and everyone will prefer things a little differently. For instance I refuse to use 80 char per line. All my projects are set at 100. You recommend trailing commas, which absolutely hate. Personally I don't care what style guide people use, as long as they use one. Inconsistent formatting is just inexcusable. At least if someone followed a style guide I could easily change the code to my own preferences. If it's just a random jumble/mishmash of different conventions then it's just unusable.
This: foo['bar'] = 123 Is more common than this: foo = "It's me." OP mentioned that they prefer double quotes because they are more likely to use single quotes inside strings, as in the second example. But I find that using a quote to access a dictionary value is even more common than that. So the single quote as an apostrophe thing isn't really a big issue.
I too dislike long if statements! It usually means you're doing something wrong (or you're just nested too deep [which is also a code smell]). I'm not sure the "assign the equality check to a variable" thing really fits as a rule for a style guide though. I might add something that mentions it's a code smell though.
Yes! I knew I was forgetting something when I was writing this section. I'll incorporate this.
I've never even considered having longer line lengths. But I'm going to give it a try! I feel like 88 is the longest I can go though without code overflowing horizontally when I have two vertical splits open.
only things that are 'for humans'
IMO it violates the Zen of Python in numerous ways. It's creating yet another way to do things, fixing problems that don't need to be fixed, and is too opinionated. It stinks of "npm is popular, lets copy it." Python has been way ahead of other communities with regard to packaging and distribution. Plus I guess as an old fart, I like the unix philosophy of having small simple tools that do one thing well, and chaining them together to do more complex things.
Yeah I know it's not necessary but I had already invested a lot of time writing these shell scripts as that was how I ran this code before. I'm on a short timeline for the initial results from this work I'm doing, but after that I'm going to use subprocess and get rid of bash in the middle. Thanks! 
Thanks, I will use subprocess when I rework this code in a bit.
Probably, more so if you aim at Windows platform. (tho I think you can use .NET framework with IronPython). 
I thought of this more as an extension to PEP8 rather than an override. Like for example, the suggestion regarding indentation in list declarations isn’t present in PEP8. If it is meant to be an extension, then I’d like to see such contradictions called out, and if possible, a justification for cases where PEP8 is overruled. The primary motivation behind PEP8 is enhanced readability and the form here seems pretty readable to me. If there’s a reason like difficulties with certain IDEs then that’s worth knowing. If it is indeed an override then that too seems worth calling out.
Thanks for the input, I will work on some of the suggested. The reason I did the variables 'tm' and 'sephead' tm = time sephead = separator + head
Vex places all of the virtualenvs created with it in a default directory. At least for virtualenvs created by vex then you don't need to specify any paths. It is more work for other virtualenvs though.
Django's fine for that.
I tried using curio for a bit, and I remember liking it more than asyncio ([here's a great blog post](https://vorpus.org/blog/some-thoughts-on-asynchronous-api-design-in-a-post-asyncawait-world/) from the same author about curio from before he made trio). Getting into asynchronous world was also quite painful for me, but after a week of banging my head against a wall it finally clicked and started to make sense. I'm not sure hopping between libraries will do you any good early on -- I believe you're better off figuring one out and then exploring others to see how they do things differently.
KDNuggets has to be one of the ugliest websites I have ever seen. 
pip2 is pip
It is a project for my family so there isn't a particular deadline so i invest as time as it takes and at the same time i am student so there is at all much time. I was thinking for a site not a desktop program but as you said it's better to start from command line.Also, I will need of course HTML and some research(domain and hosting) to deploy the site. Generally it help me to stick with a more advanced project than smaller ones. Thanks for the advice.
They write that they have GPU support, but as far as I can see they use CUDA, which means that they really only have Nvidia GPU support. I know CUDA has become pretty much the de facto standard, but it annoys me that people who claim to care about openness use a vendor specific environment like that.
Sure thing. You can try [Gandi.net](https://www.gandi.net/en?currency=GBP) for domains and [linode](https://welcome.linode.com/features-1gb/?gclid=EAIaIQobChMIqN6q54LW2gIVbrvtCh22ZweeEAAYASAAEgLVRfD_BwE) for hosting once you get there. In the meantime I would concentrate on getting the code working locally, and learn some source code revision like [git](https://git-scm.com/) 
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://git-scm.com/) - Previous text "git" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20dxyf0tm) 
Good bot
What a nice meatsack! ♥‿♥ We'll leave your most significant organs inside your skinbag... *** ^^^I'm&amp;#32;a&amp;#32;Bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[**T҉he̛&amp;#32;L̨is̕t**](https://np.reddit.com/r/friendlybot/wiki/index)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
This is why I have just defaulted to calling pip as a module: python3 -m pip install &lt;package&gt; This way you know exactly what version of python you are installing too.
Your all example doesn’t work, any and all only take 1 argument (an iterable). If you want to use any or all, you have to either have double parenthesis to force it into a tuple (which loses the benefit of short-circuit evaluation) or do some silly stuff with generators.
My pip is not working anyway
Nurseries appear to equivalent to (thread/greenlet/coroutine) pools that have context manager support for joining the pool on exit. So basically: @contextlib.contextmanager def nursery(): pool = Pool() try: yield pool finally: pool.join() Am I wrong?
You're not wrong, Walter, you're just an asshole.
It's not really possible. HTML5 has a limited set of GUI elements that is much smaller than what Qt offers. You'll need to rebuild your GUI using HTML5 and other javascript frameworks. 
As someone who has tried to write real world code using asyncio for half a year, I can only say to others. Don't! It is stupendously difficult to get right. There are so many pitfalls to fall into. Error propagation being the one that probably turns up most frequently. It's seemingly an endless nightmare of signaling different running tasks that something bad happened somewhere else. It's terrible. So yeah, if you have a choice, don't use asyncio I'd say. You should probably consider threads still for production code, and we need momentum behind something like curio or trio. Asyncio was broken from the beginning and should probably be deprecated asap.
what does: apt install python3-pip tell you?
Hey, author of poetry here! If you already have your virtualenvs, whenever you activate them, like you probably already do, poetry will detect them and use them. So, in this sense, you can still manage your virtualenvs without poetry if you do not want it.
&gt; apt install python3-pip python3-pip is already the newest version. 
Welcome to the monthly [cyclical every practice is considered harmful and always will be over and over again until the end of time](https://www.reddit.com/r/programming/comments/878zi2/avoid_else_return_early/dwb2e0e/) thread.
I found it a pretty convincing explanation. As he says, good evidence will probably only come from years of trying to build larger systems with it, but I agree with the point he's making, and I think it's worth trying that approach.
I've run into a few problems with 10.0.1 pip3 that I do not have with 9.0.3. Any time I update to 10.0.1, I have issues. When I revert to 9.0.3, no problem.
Please read sidebar. You are looking for /r/learningpython .
Yeah but then there ain't much value to poetry is there? Also I think I read that poetry uses the Python it's installed with which makes me wary of trying to use it in such a scenario.
It has saved my butt about 20% of the time. I don't mind a 20 character list comp when needed. 
&gt;At the very least, they won't let you jump out of one function body and into another. Unless you're working in assembly [2], the classic, unrestricted goto is gone. Dijkstra won. ... that's ... [not entirely true](http://en.cppreference.com/w/cpp/utility/program/longjmp). Such functionality doesn't advertise itself as "goto" anymore, but like the article points out earlier, it's a pretty fundamental reflection of how the hardware actually processes instructions. Almost any reasonably low-level language likely has a a way to accomplish it, if you've got your mind set on it. You can do some truly horrifying things with longjmp. It's actually a lot of fun, if you find that sort of thing fun. Anything that says "the behavior is undefined" is always a sign of good times ahead.
Theres a cool channel on youtube called socratica that'll probably cover the initial 'here's the stuff you know but in python'. Some usefull tips there for most levels IMO. There's vids are really well done too. 
slurpees
The time resolution you are looking for is not accurately attainable on standard preemptive multi-tasking OSs. The two direct options to get the timing you need are either switch to a Real Time OS, or use internal delays instead of sleep(). Internal delays are not recommended because they still may be inaccurate due to your task getting preempted by the OS anyway, and the only real way to ensure such accuracy is machine-level coding (very much *NOT* Python). A useful option in timing-sensitive Arduino projects, though. Sorry it is still a disappointing result to your question, though.
Well, poetry is not just virtualenv manager so you would still benefit from the other features. And, yes, if it does not detect a virtualenv it will automatically create one with the Python interpreter it has been installed with.
I love Neo4j. Magnificent piece of software. 
The way to retain sanity: - For system-wide package installs, use the distro package manager (apt). - Anything else goes into a virtualenv.
Writing ', '.join([elm for for elm in elements]) is totally pointless, because it does the exact same thing as ', '.join(elements) Also, the square brackets in ', '.join([str(elm) for elm in elements]) are pointless as well. Yeah, nitpicking - I know.
You're right. It's stuff like that that I never even think about because my editor handles it for me.
I also find that `any` and `all` could be used more often to make it more verbose ! But do not forget that there is a difference in the execution: 1. `and` and `or` operation are lazy (Cf: [Doc](https://docs.python.org/3/reference/expressions.html#boolean-operations)) 2. `all` and `any` are not, which means all conditions will be evaluated even if it is not needed
At least some systems ensure pip2 exists so you can be explicit and/or because they want pip to be for pip3 if it's a platrfrom on which `python` will also default to the 3 version.
I was referring more to the syntax and the default behavior. The async/await syntax forces you to make all functions asynchronous and then decide whether to execute them synchronously via await. Meaning functions that do a handful of things end up looking like value = await func() value2 = await func2(value) ... which isn't only ugly but if forces you to know whether every function you call is an async function or not, and if it isn't, it usually has a wrapped async version so there are two versions of every function just so that it can be used with the async/await syntax. def func(value): # synchronous version, do a bunch of stuff and return a value async def func_async(value): return func(value) Whereas Promises/Futures lets you create normal synchronous functions and choose to execute them asynchronously via promises *at the caller* (the same way nurseries does). It feels like nurseries are almost like a convention on top of promises where it's assumed that you will always wait for the results of all promises created within a given scope (or in this case, a with context). 
There isn't (yet?) a quick module to translate QT to http/html5. I wouldn't go too far with looking at web frameworks, though. I would serve html output through SimpleHTTPServer, possibly with JQuery and Ajax methods for commands. It doesn't need a content management system, though you will want some kind of security to protect it. I imagine that a system could be made that uses a generic htm5 page with a canvas, and uses QT as normal to draw the display local to the "server" which then gets copied ( img = widget.grab() ) to the canvas element on the client's web page display. Generic Ajax mouse and keyboard tracking would translate clicks and keystrokes from the web client to JSON, send to the application to forward those clicks and keystrokes to the QT application structure. The downside is high bandwidth use sending the full GUI with little compression, and there is no encryption or other security in the plan. And of course, it doesn't exist yet for you to drop into your current project.
You need to decode those bytes. "byte_string".decode("utf-8") 
Why do i have to do that, the example code i was following didn't mention it at all? [http://prntscr.com/ja519f](http://prntscr.com/ja519f)
Actually... what /r/quenchize said above will be your problem.
You were wrong but lead me on the right path, the solutuon was to do r"c:\\directory\\file.txt" as i learned way back and forgot... Using b got me this error [http://prntscr.com/ja535a](http://prntscr.com/ja535a)
Yeah i figured it out
Same here. I had high hopes. Problems I ran into: * it's support for indexes other than the official pypi isn't great and is buggy. * it ripped out the `update` command for a while, giving you no clear way to upgrade your dependencies to the latest version. * it is slow to do installs on projects with a lot of dependencies. Using a usual `pip install -e` takes maybe 20 seconds. Pipenv took over 8 minutes, sometimes longer. * anytime I want to do a `pipenv update` would take me a very long time, and since I work on large projects with a lot of deps that are updated frequently, I was stuck waiting a lot. At the end of the day I realized it wasn't worth the trouble and gave up on it. I love the mission/idea, but until it's rock solid and fast there's no way I'm touching pipenv again. I think the project would have benefited from a big "BETA" disclaimer.
&gt; My task-switching OS is doing tons of other things while my Python program runs, is that like GOTO? Well in all fairness, there is a process tree.. But yeah, once you background a job in a shell its return code is pretty much ignored..
This has been extensively discussed during the last weeks in python-ideas and python-dev mailing list. It seems that Python is going to adopt this new `:=` operator: https://groups.google.com/d/msg/dev-python/WhTyLfI6Ctk/BI_gdR8vBAAJ Personally, I am not as excited as Guido is about this syntactic sugar. What bothers me: * `a := 1` could be used as classic assignment and then it is hard to explain to beginners why `a = 1` should rather be used as it looks the same and (seems) to behave the same * Beginners noticing that `:=` behaves like C `=` inside `if` / `while` expressions could starts using it as classic assignments * This adds another operator to learn and to understand how to use well * Contrary to `=`, you can only assign to a name, which seems inconsistent * Contrary to `=`, you cannot use it for in-place operations (like `+=`, `-=`, etc) * This opens the question of why not having used `as` which is already well known for name binding * Expression appearing before the target name is easier to read while "scanning" code * The syntax looks **more** like C than Python On the other hand I recognize that this could be quite useful in some circumstances, but I for sure would have prefer the `if expr as name` syntax. What are your thoughts on this, fellow Pythonistas? 
Good stuff. Onwards!
&gt; `a := 1` could be used as classic assignment and then it is hard to explain to beginners why `a = 1` should rather be used as it looks the same and (seems) to behave the same Whatever happened to `There should be one-- and preferably only one --obvious way to do it.`
Most of your questions are answered on the Python ideas mailing list where this has been discussed for weeks.
I performed some further experiments. On Ubuntu (16.something) it behaves much as under OSX, except that there are occasional wild jumps where the sleep was much shorter than requested (this despite running Python 3.5 where that isn't supposed to happen). Under Windows 7 the above code reveals that the CPython implementation of sleep() on Win7 is unusable for short sleep times. 50ms (50,000μsec) seemed to be the shortest delay I could reliably get. 
I want this capability so badly, but I agree with your points about why we should not use `:=` specifically.
This serves mainly as a quick summary for people who have not read the mailing lists, so that they can weigh the pros and the cons.
Most of your summary is bullet points of "what bothers you". A quick summary can be found here: [PEP 572](https://www.python.org/dev/peps/pep-0572/).
Sorry I thought I deleted this post I think I need a github account to get help from people here.
I think that if assignment expressions are overused or misused, they are really ugly. However, used in the right situations, they simplify code and make it easier to read as in their examples: # Handle a matched regex if (match := pattern.search(data)) is not None: ... # A more explicit alternative to the 2-arg form of iter() invocation while (value := read_next_item()) is not None: ...
Or something where you can show the code in a readable format. Reddit itself is sometimes hard/time consuming to do so.
This is not just "what bothers *me*", as you said yourself, these are concerns raised by different people in the mailing list, none of which are discussed in the PEP. Anyway, should I ask you for permission next time before opening a discussion and giving my opinion? ...
dbader.org is also good
I was quoting you. You literally wrote "what bothers me" and then described your bullet points as "a quick summary". Clearly, it wasn't a quick summary; It's your disagreement with proposal, which is fine. Just say that. Also, I think it would be much more productive to post your concerns on the ideas list after reading through everything.
This module is so good. Wish it was the standard fs api, instead of all that cumbersome os.path.join() etc
Indeed, this is more "my opinion" than a "quick summary". Apologies for having misinterpreted your first comment which, I thought, blamed me for repeating the mailing-list. These problems mostly have been mentioned in the mailing list, I do not want to add more noises out there than there are already. I wanted to share that with a different Python community, see what they thought about it, see if my concerns were excessive.
Yes, it's good that you posted it here. Also, I agree with your concerns about adding yet another operator, and how it can easily be abused by advanced users or misunderstood by beginners. Your point about why `:=` and not a keyword is addressed in the PEP.
I really really don't like this idea. It brings one of the worst parts of C into Python, while making things significantly uglier.
Fuck no on the ```:=```. It's unnecessary; you can make regular assignment an expression. The justification for not doing so is that it's confusing. You'd only make that mistake once.
I see what you mean. 
bloat
:= can't be confused for == like people often do in C.
I think your income bracket isn't granular enough. Most devs are going to fall into between 50k and 200k, so that doesn't really tell you much. Probably should have done breaks every 50k.
What do you define as "standard"? It is a standard module. It is just as "native" to Python now as os.path.
I like to think of it as part of the "extended standard library". There are plenty of modules in Python that are so well tested and widely used that they might as well be part of the standard library even though they officially aren't.
Isn't there a 3rd party module that goes even further abstracting ftp and more.
Hm. Can we skip 3.7 and go straight to 3.8? I can think of a ton ways to use this. 
I started a project with friends to remake and then decrypt the german enigma code. 
This is seriously starting to look like C code rather than python. I think the "iter" function is designed for this kind of stuff: for value in iter(read_next_item, None):
Urgh. I have mixed feelings. It doesn't always play nicely with other default packages and I've gone back to using os.path. the documentation needs severe work - if you search for "delete" you won't find Pathlib.unlink() on the docs, for example (IIRC)
I will say the operator overload of "/" is very cool in Pathlib. But yeah I've gone back to os.
If you could post more code to give us more context that would be helpful. In the meantime, `Timer` objects are a subclass of `Thread` objects. [The docs](https://docs.python.org/3/library/threading.html) If you read the documentation for `start()` in 17.1.2 Threading Objects, it states that `start()` can only be called at most, once per threading object. Seeing that `Timer` is a subclass is of `Threads`, you're probably seeing your issue because of that. I'm not terribly familiar with this particular library, but the default constructor for `Thread` object sets its target object (in your case, `func`) to `None`. Combining this with the fact that `start()` can only be called once, I'm guessing that the `Thread`/`Timer` constructor is being called again on our `Timer` object `t` resulting in a `NoneType` trying to be called on your second attempt.
from the [docs](https://github.com/sashahart/vex)... vex foo python Launch a Python interpreter inside virtualenv foo. second command parameter *foo* is name of a virtualenv is it not? if instead vex worked like... vex python then it would be equivalent to pipenv
Pathlib is literally in the standard library which was their point
The syntax they've decided on is nothing less than disgusting. It should logically be `as`, because `as` has precedent as a name-binding operator and it will *not ever* clash with the `as` used in `with`, `import`, and `except` expressions. (Seriously. Think about it.) Why introduce a new operator??
It's true exactly as often as van Rossum needs it to argue for his side.
Agreed. I really wanted the break up between 'millionaires / very high income' to 'average' though.
I really dislike PEP's that don't give a variety of examples for "this is how you have to do this now" and then "here's how you'd be able do it if this PEP is approved". If you can't do that to prove the value, there probably isn't much. My first thought is this looks like lambda for variables, and just like lambda: the vast majority of places where you could use this feature it would make the code more complicated. 
Oh TIL
Maybe it should be a class and not a module. Can you say a bit more about what you're trying to do?
I don't like PEP's that can't give a variety of examples for "this is how you have to do this now" and "here's how it looks if this PEP is approved". They gave a couple that are sort of close but it's very convoluted to follow. I'm not really sure what problem this solves. My first thought is this looks like lambda for variables, and just like lambda the vast majority of places where you could use this feature it would make code significantly more complicated.
definitely this
You can avoid passing the dict in every call by accessing it through `self`, if you wrap all of your functions in a class. Standalone functions could all share the same dict by accessing it through a class static method or module scope function. It can be as simple as this: _the_dict = {} def getTheDict(): return _the_dict Although that looks alot like "global" you can still change the definition of getTheDict without having to revisit all the other functions. I kinda like the SingletonDecorator example here: https://python-3-patterns-idioms-test.readthedocs.io/en/latest/Singleton.html 
Hey, efmccurdy, just a quick heads-up: **alot** is actually spelled **a lot**. You can remember it by **it is one lot, 'a lot'**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
I often wonder if it wouldn't be worth to spend the time on fixing the issues people have with setuptools rather than re-inventing the packaging wheel the 1000st time
This seems like half-baked. I will stick with conda
Never had any issues with the `os` module, and I use `os.path` a lot. Also, I find it intuitive and readable, not sure where all the buzz regarding path lib comes from and why everyone is so hyped about it. &gt; Or cringe at the verbosity of: `&gt;&gt;&gt; os.path.isfile(os.path.join(os.path.expanduser('~'), 'realpython.txt'))` I actually like to see what is going on in a readable way and have no issue with that
People could solve the readability by importing the functions they use vs the whole module ie: from os.path import isfile, expanduser from os.path import join as pathjoin isfile(pathjoin(expanduser('~), realpython.txt))
I don't. An intrepid Python user might even make a function or two, possibly a small library, customized to how they like handling files. I have several small libraries that handle various tasks, like connecting to SQL Server/Access, or sorting and moving files from directory to directory. I use os, shutil, and fnmatch a lot throughout mine. 
You have already gotten answers on how to do this with a separate process; I would like to give you an alternative: If your system has a C compiler, you can use f2c to translate the Fortran 77 code into C, remove the calls to output and then link the code as an extension module. Do this if you call this subprogram in a loop. (And my condolences on the crappy IT department; it is hard to see any valid excuses to not install gfortran)
Not in love with it. Doubt I’d ever really use this enough to make it worth. I thought we all agreed that assignment in conditionals is bad practice. 
So I have a bunch of functions that are not dependent on each other. All I need to do when the script is run is to initialize a dict. Then when each of the functions are run, it appends a key, value to the dict for logging purposes. In order for those functions to run, I decorated all those functions with a class that basically loops over the function to run them.
I think it is overhyped, but I really enjoy using it. I never had problems with os module either, but is nicer to work with. Especially if you want your code work both on unix and windows.
I'd prefer `if expr as name` syntax as well given the examples, I found them pretty confusing. That being said I'd *love* expressions like rust's but I get why they can't be in python for the time being and I respect that. I'd rather not shoehorn in a language construct just because it's what every other language is doing just to be hip, that's how we ended up with C++ :p
There's a backport, `pathlib2`, for python 2. The only issue is that a bunch of stdlib stuff which accepts PathLikes in py3 only accept strings in py2 so you need to coerce before passing them around.
Hate to say it, but this just seems un-Pythonic.
No, you're not the only one. For myself I can add that I don't have a problem with the pathlib module.
I go the other direction and put the `in` on its own line. What I’m iterating over is much more interesting to me than the iteration variable. best_fruits = [ f for f in fruits if f.color == ‘red’ and f.size == ‘small’ and f.climate == ‘cold’ ]
The path objects are really handy. So far, there isn’t a way to resolve variables and ~ using pathlib, so if you deal with paths which include those, you’re back to using os anyway. 
I find this ridiculous on its face--I do not accept that the cost of introducing this very ugly operator is at all justified by the benefits. The most convincing case that anyone can present is that the API of `re` is bad, and therefore we must introduce a new language feature. How can that be an argument?
I found myself wishing for assignment expressions in list comprehensions a couple of times, so I was happy to read the PEP title. Unfortunately, it went downhill from there. Part of the rationale is poor: "sub-parts of a large expression can assist an interactive debugger," (break up your expression if it is too large to debug) and "easier to dictate to a student or junior programmer." (who does that?). Also the syntax examples: # Handle a matched regex if (match := pattern.search(data)) is not None: Two lines are much easier to read # Handle a matched regex match = pattern.search(data) if match is not None: And the while loop should be fine staying an iterator or generator, with read_next_item() raising StopIter: # A more explicit alternative to the 2-arg form of iter() invocation while (value := read_next_item()) is not None: for value in read_next_item() The list comprehension is a valid (and I'd say probably the only) use case: filtered_data = [y for x in data if (y := f(x)) is not None] But how can you prefer that to this: filtered_data = [y for x in data if f(x) as y is not None] The PEP rejects this because "this would create unnecessary confusion" due to `as` already being used "in except and with statements (with different semantics)." How is that more confusing than introducing a new operator which is used as an assignment operator in tons of programming languages and mirrors the functionality of Python's assignment operator in some, but not all contexts? Given that the PEP's main use case is simplifying comprehensions (none of the other use cases convince me), why not just allow assignment expressions only in comprehensions. This would also obviate the need for a new operator: `except ... as` and `with ... as` cannot be used in comprehensions, so assignement with `as` syntax wouldn't be confusing at all.
By internal delays do you mean [busy waiting / spinning](https://en.wikipedia.org/wiki/Busy_waiting)? That's probably the best approach as there is no need to context switch, but like you said the issue is moot because the OS can preempt the thread whenever it wants, regardless of priority. only a real time OS can give any sort of guarantee.
**Busy waiting** In software engineering, busy-waiting, busy-looping or spinning is a technique in which a process repeatedly checks to see if a condition is true, such as whether keyboard input or a lock is available. Spinning can also be used to generate an arbitrary time delay, a technique that was necessary on systems that lacked a method of waiting a specific length of time. Processor speeds vary greatly from computer to computer, especially as some processors are designed to dynamically adjust speed based on external factors, such as the load on the operating system. As such, spinning as a time delay technique often produces unpredictable or even inconsistent results unless code is implemented to determine how quickly the processor can execute a "do nothing" loop, or the looping code explicitly checks a real-time clock. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
As a certified life coach I recommend reducing this list to ten items. 
Why is your pip in `/usr/local`? Did you compile your own version of python or something?
1) data is a list of matrices. Each matrix a list of rows and each row a list of numbers. So data[0] is matrix 1 [[1,2], [3,4]]. Data[0][0] is matrix 1 row 1 [1,2]. Data[0][0][0] is matrix 1 row 1 element 1, which is 1. ttt takes a matrix and finds the largest number it contains. First it does for row in m. Using matrix 1, row would first be [1,2] then [3,4]. While in a row it checks each number to see if it's greater than v. If it is, it becomes the new v. So v here would be 1, then 2, then 3, then 4. 2) again, list of matrices. Python is zero index so data[1][0][0] means matrix 2 ([5,6], [7,8]), row 1 ([5,6]), element 1 (5).
First thing you should look into is enumerate(). It will iterate a list and provide the current index. Range for iterating isn't very pythonic. https://docs.python.org/3/library/functions.html#enumerate Next you need a data structure to store your numbers and their results together. I'd use a simple tuple of (number, score), maybe a namedtuple if you've advanced far enough. Does your homework require you not use the built in sorting? list.sort() will sort in place and sorted() will return a new list. Both take a "key" function as an argument that can be used for comparison. The docs have examples of sorting with a specific tuple element, so I'll leave it as an exercise to put it all together. https://docs.python.org/3/howto/sorting.html
This looks like that assign in strange places "feature" of C that screws so many people up with some Pascal for good measure. :-(
I agree except that the last case still cries out for a repeat...until loop of some type. 
I can't see `palindome()`, but I assume it does what it says, excepting the typo. Damn. Where's `niceNum()`(should be `nice_number()`), what makes a number nice? It would help to use a debugger, but without that, I'd add add some `print(numList[i])`s. WTF! `numList[i]` ? What was your previous language? Hope you were lucky enough it was a `C*`, not one of those java things. Anyway, over here we say: def main(): string = input('....') numbers = [int(s) for s in string.split()] methods = (palindrome, 2), (prime, 2), (nice_number, 3) scores = [] for number in numbers: score = 1 for method, increase in methods: if method(number): score *= increase scores.append(number, score) for number, score in scores: So, now I notice this is an assignment of some kind. Because no one else writes their own sort! The condition on the while loop is too hard to read which makes the examiners life harder too. All those icky `[j]`s. Just don't do it. Well, stop for a while anyway. So change this: for x in range(0, len(scores)): to this: for number, score in scores: NAMING!: `temp1` should be called `score` and `temp2` should be `number`. Bad names make your code harder to read, so they'll notice that too. j = x - 1 while (j &gt;= 0) ... In python we wouldn't use the brackets And in python `0`, `[]`, `False`, `{}` all count as false, and we prefer to use that wherever possible. So I would prefer to just say `while j and ...`. AFAICT you're going to shove all scores from here to `bigger (number or score), or end` back one notch then plonk in the current number and score to the gap you just made at end. So, for every letter in 'reddit', shove everything left till bigger score (i.e later in alphabet): `eddiit`, and plonk in the current letter: `eddirt`, `left`: `dddirt`, plonk: `ddeirt`, left: `ddeirt`, plonk: `ddeirt`, Looks like that'll work, I'd be dubious about `bigger (number or score)`? Shouldn't that just be `bigger score`? And, if you *must* write you python like languages, at least honour _their_ convention and call youu index `i`, not fucking `x`. CONVENTIONs are important kid. You stick with the local conventions, you'll be fine round here.
Nice and succinct
That's been steadily drifting away for the last few years. :-( I'm completely in Raymond Hettinger's camp now - he said that he believes there's a sudden rush to add new features to the language and some things are getting in there that don't seem thought through or finished. Honestly if this keeps up I'd love if Guido turned the reins over to Hettinger or someone else capable. 
Neat. I already try to use this style. Convergent evolution or some such. I find this style makes reading `diff`s much easier and it makes reformatting easier in some cases as well. E.g., if you find you want to sort the values in a list or keyword parameters alphanumerically, you just sort the lines alphanumerically (maybe with `sort`) and you’re done.
We can't have full duplex in this bitch 
Is there anywhere we can go to formally voice our opposition to this? Frankly, this just seems un-pythonic.
https://en.m.wikipedia.org/wiki/Side_effect_(computer_science) I don't think that your definition matches the domain specific one. 
Non-Mobile link: https://en.wikipedia.org/wiki/Side_effect_(computer_science) *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^175065
In operation: What to mung up? &gt; hello darkness, my old friend. ------------------------------ HelLo d4rknESs, MY OLd Fr1eNd.
i edited it in, thanks
Subscribe to the python-ideas mailing list and write a response to the "Statement-local variable bindings: take 3!" thread (or start your own new thread about the PEP). I plan to do the same.
Pardon?
Complete Python Bootcamp After Exams: Go from zero to hero in [Python!](https://plus.google.com/collection/klZjWE) Learn Python like a Professional! Start from the basics and go all the way to creating your own applications!
&gt; it will not ever clash with the as used in with, import, and except expressions. This is incorrect -- it actually does introduce a clash with `with` and `except` statements. Specifically, when you do `with foo() as bar:`, the `bar` variable is NOT being bound to the result of `foo()`. Rather, it's bound to the result of `foo().__enter__()`, which may return any arbitrary object. Similarly, doing `except EXPR as NAME:` also does not bind the result of evaluating `EXPR` into `NAME`. Instead, that statement will actually do a kind of pattern-matching thing. `EXPR` is assumed to evaluate to a type, and `NAME` will be bound to an *instance* of that type. Furthermore, there's some additional clean-up logic: `NAME` is automatically deleted once the `try/except` clause ends. The `EXPR as NAME` binding, if it were accepted, would then end up being confusing since its exact meaning could vary wildly depending on context. In particular, the conflict with `with` statements was pretty much enough to convince Guido to veto that proposed spelling. I think the "it reads backwards" thing is also a matter of opinion. After all, regular assignment already reads "NAME = EXPR", not "EXPR = NAME". For that reason, I don't think it's too unreasonable to try and design these local bindings to parallel how assignment currently works.
&gt; I find it a pain to then go figure out where expanduser came from In what context? A traceback? I feel like there are so many tools at your disposal that this is a non issue. If it's in open source code that you are extending, CMD+CLICK takes you to the definition. If it's on github, do a search for it.
I don’t know why you think “you’d only make that mistake once.” It’s a famously common mistake. So much that lint programs need to look for it.
https://groups.google.com/forum/#!topic/dev-python/2Hpu4Mi93xY Yeah, Hettinger is -1 on this proposal, and Guido is having none of the criticism of it, and totally dismisses this guy's post.
Yes why not, After my exams I have start learning python from different sources. Here I am sharing some resource related to python and I hope its help your and others those who are beginners in python programming. Complete Python Bootcamp After Exams: Go from zero to hero in [Python!](https://plus.google.com/collection/klZjWE) Learn Python like a Professional! Start from the basics and go all the way to creating your own applications! Keep sharing keep learning Stay Blessed
&gt; filtered_data = [y for x in data if (y := f(x)) is not None] `filtered_data = filter(None, f(x) for x in data)`
 total = sum(value for value in range(5)) print(f'total is {total}') Try again?
Great work PyPy team! Quick question: does anyone know if there are any speed advantage to using cffi in **ABI** mode, when compared to ctypes? 
Ask anybody who has worked with databases. Trailing commas are a terrible idea. 
Rugy gems are awesome and bundler is even more awesome. Aside from that running multiple versions of Ruby is also really awesome.
Sweet, I was hoping to hear that.
People give overloading shit but I think sometimes it's the best and most pragmatic way to do something. This library does it in an obvious way, scapy does it in a cool way with constructing packets and separating networking layers with /, and django does it with | and &amp; with querysets which just makes sense. The one thing I will say though is that in the end it's just a function call, sort of like `pathlib.Path.home() / 'scripts' / 'script.py'` could be replaced with something like `pathlib.Path.home.append('scripts').append('script.py')`. And there's a benefit to that, in that you can add keyword arguments to add more complex behavior and options, like `pathlib.Path.home().append('scripts', create_if_missing=True).append('script.py')`. For something like this it's probably best to leave that sort of craziness out, but sometimes you'll be implementing an API, think overloading is your best option, then find out it really should just be a function call with extra optional keyword arguments.
or isfile(expanduser('~/realpython.txt'))
I don't think except clauses were the main worry -- there's really not much reason to use assignment expressions there. Rather, the main worry would be 'with' statements, and how it's very easy for people to accidentally get confused by what the exact semantics are. More broadly, nobody is worried about syntactical clashes -- with enough effort, it's possible to make the parser understand unambiguously what `as` (or whatever other keyword or symbol we settle on) is supposed to mean. Rather, the issue is any potential semantic clashes: if this PEP were accepted, we'd want to make sure any code taking advantage of this feature is easy for *humans* to understand and interpret. &gt; For me, the NAME operator EXPR ordering just does not scan in any way as something that Python should parse as an expression returning a value, and the choice of := over a keyword makes it even more disagreeable to my eyes. It's unclear what the alternative would be, though. I think pretty much every single possible alternative has been debated to death on the mailing lists, and so far `:=` appears to be the least flawed of them all.
It's only one less line though: with open(path, 'rb') as f: digest = sha256(f.read()).digest()
Ok thank you
No idea, I didn't compile my own version of python. On my remote server it's not the case, it's in /usr/bin (and working fine) So I thought it was maybe a cause of the issue Any idea how I can fix this??
I'm not very convinced. Generally speaking I wouldn't mind an assignment expression but it shouldn't be this weird quirky thing that is apparently completely different from everything else (looks different, has arbitrary limitations, …). The main reason why assignment expressions are so dangerous is because most languages sadly use `=` for assignment, which is very counterintuitive considering the usual meaning of the equals sign. By using any other symbol (be that `:=` or `&lt;-` or what have you) the risk of accidentally mistyping a comparison as an assignment drops to basically zero. However consistency is key here and within one language there really shouldn't be multiple operators doing assignment (not counting implicit assignment). At the very least it should be possible to replace every existing `=` assignment with the new operator so you can chose to only use one kind.
Your list doesn't mention backwards compatibility. Just like f-strings and async declaration, which added nothing to the language that wasn't there already, but made it impossible for older interpreters or code analysis tools to work with new code are usual tool of planned obsolescence, so popular in the enterprise world, where Python seems to be rushing lately.
It's kinda of a non sequitur, but I think pattern matching should be added before anything like this.
Anyone has experience using pypy with asyncio and e.g. aiohttp? I'm thinking it could provide a nice boost when shuffling bytes compared to cpython. 
Well it provides a generic way to do reduce using comprehensions, sum is obviously just one such case. 
No, it isn't. Comprehensions are useful in a wide variety of cases, and are normally understandable. I can think of very few cases for this PEP that are both useful and readable.
takeout.google.com might be what you want.
While you're right, the list is the right place for this discussion, Guido ending up saying: &gt; I'm pretty excited myself about NAME := &lt;expression&gt; and am mostly ignoring the current crop of counter-proposal. is not inviting a discussion :/ 
An example of what this PEP makes possible: while True: old = total total += term if old == total: return total term *= mx2 / (i*(i+1)) i += 2 Can be replaced by: while total != (total := total + term): term *= mx2 / (i*(i+1)) i += 2 return total Yuck. That makes me physically ill. Rust has `if let ...` and `while let...` etc expressions, which accomplish the same thing but have somehow managed to feel like a fully incorporated and natural part of the language. This `:=` syntax, on the other hand, already feels like an unneeded add on which looks bad and adds confusion. I am also surprised by the dismissiveness of Guide on the linked thread, he barely gave the criticism any thought before telling the respondent to **** off and branded their objection "emotional" without much justification. A bit disappointing.
What a fucking mess. 
My thoughts exactly. When I saw it, I was "wow, that doesn't feel like essential right now whereas pattern matching would have so much more use".
I installed with: sudo pip install --user pipenv $ sudo pipenv install requests sudo: pipenv: command not found 
Raymond really hit the issue here on the head with this comment from the mailing list: &gt; Just distinguishing between =, :=, and == will be a forever recurring discussion, far more of a source of confusion than the occasional question of why Python doesn't have embedded assignment. &gt; Also, it is of concern that a number of prominent core dev respondents to this thread have reported difficulty scanning the posted code samples. &gt;&gt; I've used dozens of languages over the decades, most of which did have some form of embedded assignment. &gt; Python is special, in part, because it is not one of those languages. It has virtues that make it suitable even for elementary school children. We can show well-written Python code to non-computer folks and walk them through what it does without their brains melting (something I can't do with many of the other languages I've used). There is a virtue in encouraging simple statements that read like English sentences organized into English-like paragraphs, presenting itself like "executable pseudocode". &gt; Perl does it or C++ does it is unpersuasive. Its omission from Python was always something that I thought Guido had left-out on purpose, intentionally stepping away from constructs that would be of help in an obfuscated Python contest. &gt;&gt; Yes, I'm a software engineer, but I've always pitched in on "help forums" too. &gt; That's not really the same. I've taught Python to many thousands of professionals, almost every week for over six years. That's given me a keen sense of what is hard to teach. It's okay to not agree with my assessment, but I would like for fruits of my experience to not be dismissed in a single wisp of a sentence. Any one feature in isolation is usually easy to explain, but showing how to combine them into readable, expressive code is another matter. And as Yuri aptly noted, we spend more time reading code than writing code. If some fraction of our users finds the code harder to scan because the new syntax, then it would be a net loss for the language. &gt; I hesitated to join this thread because you and Guido seemed to be pushing back so hard against anyone's who design instincts didn't favor the new syntax. It would be nice to find some common ground and perhaps stipulate that the grammar would grow in complexity, that a new operator would add to the current zoo of operators, that the visual texture of the language would change (and in a way that some including me do not find pleasing), and that while simplest cases may afford a small net win, it is a certitude that the syntax will routinely be pushed beyond our comfort zone. &gt; While the regex conditional example looks like a win, it is very modest win and IMHO not worth the overall net increase language complexity. &gt; Like Yuri, I'll drop-out now. Hopefully, you all wind find some value in what I had to contribute to the conversation. Source: https://groups.google.com/d/msg/dev-python/2Hpu4Mi93xY/KUK1hypdBAAJ Completely agree with the sentiments above, defintely a -1 from me as well.
Right I get that, but I think most of the non-obscure use cases would look insanely complicated, which is why I'm asking for one. If there aren't any use cases for this other than ones that look complicated, there can't be too much of a need for the feature, to me.
it have significant boost in tornado and we use it in production 
Here is a "visualization" for the [first one](http://www.pythontutor.com/visualize.html#code=data%20%3D%20%5B%5B%5B1,%202%5D,%20%5B3,%204%5D%5D,%20%5B%5B5,%206%5D,%20%5B7,%208%5D%5D%5D%0A%0Adef%20ttt%28m%29%3A%0A%20%20%20%20v%20%3D%20m%5B0%5D%5B0%5D%0A%20%20%20%20%0A%20%20%20%20for%20row%20in%20m%3A%0A%20%20%20%20%20%20%20%20for%20element%20in%20row%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20v%20%3C%20element%3A%20v%20%3D%20element%0A%0A%20%20%20%20return%20v%0A%0A%0Aprint%28ttt%28data%5B0%5D%29%29&amp;cumulative=false&amp;curInstr=1&amp;heapPrimitives=nevernest&amp;mode=display&amp;origin=opt-frontend.js&amp;py=3&amp;rawInputLstJSON=%5B%5D&amp;textReferences=false) This is a light read to help with the [secone one](https://www.programiz.com/python-programming/matrix#access)
I meant, already available from the beginning (and python 2 times) as the only way to handle paths, that way all the example code and libraries out there would use pathlib. Also most standard library functions doing something with paths currently take only string objects, e.g. shutil.rmtree() or so doesn't take a path object
Timer does a delay, not a repeat, so it exiting after executing once is correct. It sounds like you want to call your function from inside a loop with a sleep instead of using timer. while True: func() time.sleep(5)
What makes you say that?
pypy == automatic upvote!
from [the main post](https://stackoverflow.com/questions/50037208/python-integration-using-both-scipy-and-sympy): I want to have a custom python function which: 1. Takes a mathematical expression `f(x)` , bounds of the integral `x1,x2` and desired tolerance `tol` 2. Uses `sympy.integrate(y, x)` to check if it has analytical/symbolic solution, if it does then returns the result using `sympy.integrate(y, (x,x1,x2).evalf())` 3. If it doesn't have an analytical solution out of the `sympy` then it uses `scipy.integrate.quad` or [other numerical functions](https://stackoverflow.com/questions/50033275/write-a-function-with-numpy-to-calculate-integral-with-a-specific-tolerance) to calculate the integral. The reason is that with this method it will be probably faster and more accurate as a majority of mathematical expressions I'm working with, have analytical integrals. But I have some issues - first of all `scipy.integrate.quad` and `sympy.integrate` two very different forms of functions. scipy takes python `def y(x): return f(x)` or lambda `y=lambda x: f(x)` functions. But sympy takes mathematica expressions `y=f(x)` where `x` has been symbolized by `sympy.Symbol('x')`. I need to find a way to convert a sympy symbolic mathematical expression to python/lambda function or vise versa. - my second issue is that sympy does not give any error when the expression doesn't have an analytical integral. it just prints the integral! - And last one I don't know how control the tolerance in sympy's `evalf()`. I think for `scipy.integrate.quad` one can control the tolerance with `epsabs` input? I would appreciate if you could let me know if it is possible and how to do it. 
Generally I trust Guido's judgement, but this is definitely not a good addition. An new/extra syntax like this will confuse and make people doubt when to to use normal assignment (=) and when to use this new one (:=). The benefits don't add upp to this cost IMO.
try pip3 install example
Working through our code-base and all associated libraries and getting the compatible with both Python2 and Python3- it's been arduous. Made a great deal easier with [Python-Future](http://python-future.org/)- highly recommend, it's made the job a lot easier (I've only been at it for maybe 3 days). We decided to go with Python2/3 support (rather than just go straight to Python3) to minimise on unexpected behaviours (and maximise on performance, as we use PyPy a lot and PyPy3 just isn't there yet). Our platform is made up of a lot of free-standing Python processes that communicate with each other, so through supporting Python2 and Python3 we can quickly change the Python provider for a process and spin it up in Python2 (if Python3 is showing odd behaviour).
Yes that was exactly what i needed. Thanks!
Pipenv, pip2pi, pyenv, pyvenv, venv, virtualenv, setuptools, distutils, requirements.txt, wheel, egg, .... I was a python2.7 coder few years ago and everything about Pip/pypi felt like a bad hack. Now i want to reapproach it, i hoped this stuff had settled to a kibd of standard for python3.6 ... But it's even uglier. Starting from the fucking names.