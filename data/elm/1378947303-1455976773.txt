Bah, I don't have rights to post on SO, but I am pretty sure this is not a *bug* in Elm! Perhaps there is some security setting that JS has that I am not aware of, but lets not call it a bug if this is behavior that occurs with AJAX in general.
I guess this also belongs here. ;)
1. This is not nearly enough information about your error. What were you doing when this error happened? 2. The website is maintained on this github, which is probably the proper place to report a bug: https://github.com/evancz/elm-lang.org
It is like `error 500` for some servers.
By "current time" I assume you mean the date-time, as opposed to current Unix time, which you can get with (every second), and for which there are relevant functions in the Time module. Looking at the documentation for the Date module, there seems to be no way to get the current system date ... You could use an Http request to get the current date and time from a service like http://date.jsontest.com/
This is really great! I have never seen code for Voronoi and I am shocked how short it is :) I went through the code and [did some style tweaks](https://github.com/evancz/elm-voronoi/blob/master/Voronoi_diagram.elm), nothing serious at all. It looks really good! It might be worthwhile to try to break things into more functions, but I'm not sure. I'll bring this up on [the list](https://groups.google.com/forum/#!forum/elm-discuss) to see if we can get more eyes on your code! And again, really cool project! I've been wanting to create a showcase for this kind of program for ages, and when I finally get to it, this should go in there :)
@wheatBread: Given the Haskell code, I guess the OP has some FP experience. So that explains the short code. @Shadious: I don't know Voronoi diagrams, so `region` is magic to me. I hope you can improve the algorithm so the program is more performant. Even with @wheatBreads style tweaks the `scene` function still looks kind of clunky to me though... Sadly I don't really know how to improve that when I look at it. Overall, good job! :)
There is tons of room for algorithmic improvement! I hope to apply some of the [faster algorithms](http://en.wikipedia.org/wiki/Delaunay_triangulation#Divide_and_conquer)--Apparently there's a natural bijection between Delaunay triangulations and Voronoi graphs.
I want to use Elm so badly for the same thing (with Haskell backend) but it just can't handle the game without vectors/arrays.
Like, performance wise? You could probably get similar performance with trees. 
If by similar you mean 40x slower.
I lifted this restriction. Let me know if any issues arise because of that :)
After I finished [BluePiLL](https://github.com/GoranM/bluepill), I thought it would be a good idea to make a video tutorial series, covering the development of the game, and teaching a bit of Elm in the process. I hope someone finds this useful.
I'm still working through the series (on the Spawning episode now), and I find it immensely useful. Thanks a ton!
Nice post! I usually do as much logic on a signal as I can before combining it with other signals, which I think is more or less the point of the post. But it can be hard to catch this kind of error as is so nicely described in the post. What I would change in the final code at the end of the post is add a filter. Since the example is simple and the idea of pausing is to wait for the enter key press to resume the normal update behaviour, why not keep `update t (x,y) = ((sin t)*50,y)`. Of course in more complicated scenarios where you want to do something while being paused, that `ProgramState` is part of the state of the program. But when it isn't, don't put it in. Just use it for it's task, which is only to filter the input. 
Nice to meet you Elm
As it is my first use-able project in a functional language, comments are highly appreciated!
Cheers! I will check it out later. It would be nice if you added a compiled version to check out the result. 
You can try it out here: http://xashili.github.io/laska/
It's directly based on [The Essence of ML Type Inference](http://www.cs.cmu.edu/~rwh/courses/refinements/papers/PottierRemy04/hmx.pdf) by Pottier and Remy. I made two small extensions: * Handle a limited set of "built-in" type classes (i.e. number, appendable, comparable) * Handle records based on [Daan Leijen's extensible records](http://research.microsoft.com/pubs/65409/scopedlabels.pdf) which Elm uses. This was very trivial though because the type system for his records only need a very simple field reordering rule and then normal equality works fine (no "lacks" constraints!). I did not consult additional resources to do these things, but it probably resembles stuff that's out there :) I really want to do a "Field Guide to Efficient Type Inference" which I think is a very difficult topic to find resources on (i.e. it's easy to find papers about expressiveness and notes for beginners that ignore performance) but I have not gotten to it yet :/ I would definitely like to support higher-kinded polymorphism (`map : (a -&gt; b) -&gt; container a -&gt; container b`), but I'm not sure when I'll get a chance to address this. I believe the inference algorithm can already handle it, but other parts of the codebase cannot. It may not be so hard in terms of code, but it is a mental investment that is not top priority for me. Rank-2 polymorphism is much lower priority but also on my wish list :)
There is not. Can you share your findings on [the email list](https://groups.google.com/forum/#!forum/elm-discuss) if you try to make something? I know there are minor compatibility issues with the runtime and node right now, so it'd be good to know what you run into.
I fully support the addition of type signatures, but here's some help hopefully. Main expects either a Signal Element or an Element. For the others, it's not a bad exercise to figure out the signatures by looking at the functions and arguments involved. 
*applause* I'm especially interested in Elm for mobile development. Thanks for this.
Nice post! Inspirational for a fellow imperative -&gt; (functional, imperative) programmer. I too have followed that curriculum: LYAH + RWH, and I've grown accustomed to imperative program design.
You can self-host elm-lang. I'm not aware of anything more sophisticated than that. Would be a great project!
I will try that when I have time. I'll try to make a tutorial or easy installer for it too.
It should not be too bad! :) The instructions are [here](https://github.com/evancz/elm-lang.org#elm-langorg-a-template-for-creating-websites-in-elm), but it should be something like this: git clone https://github.com/evancz/elm-lang.org.git cd elm-lang.org cabal install --bindir=. ./run-elm-website Let us know if you have success!
" You can also use this to run elm-lang.org/try locally. " Derp. Goal #2 how to save the code I'm working on easily... Some sort of autosave/backup would be nice Perhaps the JavaScript interface can help.
Oh, OS in action! I don't mean save to the server, but to the client. I'm sure someone's done something like that. Think Google docs + autosave to your documents folder every minute.
There is the canonical answer to this question: elm-lang.org is written using Elm
Alright, well, clearly I need to learn a lot more Haskell first, as your libs are definitely over my head. Nice to have a reality check now and then :) I checked Yesod out a bit; I'll keep at it. Thanks for the recommendations!
Nah, the documentation is confusing and the library is needlessly complicated. In a couple days I'll release a new version that's a lot simpler, with examples and such. 
Heh, fair enough. Seriously, though: I've never written anything in Haskell, so you don't have to worry about accommodating me. I'm reading up on Yesod like crazy though--looks pretty cool.
I'm in the process of overhauling the Graphics.Input library to make forms a lot easier, but [TodoFRP](https://github.com/evancz/TodoFRP) is a basic app using the existing library.
That's a great start--thanks!
I just pushed [a branch called `input`](https://github.com/evancz/TodoFRP/blob/input/src/Inputs.elm) that shows how TodoFRP would look with the improved Graphics.Input library (i.e. after the next release of Elm). Also, Elm's [library catalog](http://library.elm-lang.org/) is written entirely in Elm and [open source](https://github.com/evancz/elm-get/tree/master/website/src). It has text boxes on many pages. It's a cool example because FRP makes "live search" really trivial to add to an existing page, so this is an idea I'd like to explore more.
Oh awesome! Looks like I found the right chunk of gluten to talk to ;) I think I'm getting the basic gist of it now--it seems like it shouldn't be too hard to make the usual forms and whatnot. Looks like excellent work--keep it up! I'd love to see more separation between presentation and content, though--it seems like tweaking styles could be very time-consuming... 
Thank you! It felt great to get that library looking nicer :) I think separating presentation and content is totally possible. It has not *really* been a primary focus in elm-lang.org or in library.elm-lang.org which I treat more as "make it work" than teaching tools. Nonetheless, they have things like [style skeletons](https://github.com/evancz/elm-lang.org/blob/master/public/Website/Skeleton.elm) that specify the headers and footers and color schemes for all pages. This means you tweak Skeleton.elm and the styles across the whole website change! The key point is that you can abstract out *anything* so tweaking styles is a matter of finding common patterns in your code :) You can build your own abstractions to separate out color schemes, borders, fonts, etc. I would say that there are not "best practices" around this yet though.
This is a great answer. I'll probably end up writing the server in Haskell then, and handling the animations, etc, with elm on the front end. Thank you!
Joey recently released [Haskelm](https://github.com/JoeyEremondi/haskelm) which lets you write a subset of Haskell code and generate the corresponding Elm code. Be warned that it is a young project, so it may not fit your needs exactly yet. Communicating with Elm via [ports](http://elm-lang.org/learn/Ports.elm) is a pretty safe bet though.
Excellent, thank you so much for the advice!
I've made some major modifications, which I'm hoping to release soon, but if you're looking for the most up-to-date version, you can checkout `devel` from http://github.com/JoeyEremondi/haskelm/tree/devel
Here's the source and a share-elm link to play with: https://github.com/slawrence/vessel http://share-elm.com/sprout/5310d7dee4b0f7cc0dd4ddb3
That's awesome. Elm needs more geometry games. 
haha, this is awesome :) At some point in the game the tunnel starts looking like an actual path you're travelling on in stead of a string that some invisible hand is shaking at the top :)
How do you do a vsync based refresh on javascript/elm ? My computer is too fast for this game ;/
Very stylish, but also very difficult, to the point where I can't really play with the keyboard, so I hacked up "fly by mouse": http://share-elm.com/sprout/5316e5abe4b0f7cc0dd4e108 Anyway, I really like the game, so thanks for sharing!
Very cool! I will see how you implemented the mouse controls and add it. Also I didn't spend a whole lot of time optimizing the path from a game design perspective. I think I may change the path so the transition from easy to crazy difficult is not so sharp (at least that's how it is for me).
That's the weird and fascinating thing. The same thing happened to me except in the reverse order. At first it felt like I was going through a tunnel and I was going smooth. Midway my brain started perceiving that as some window curtain swaying wildly in air and it drastically affected my game play. I was easily making 800s when I was perceiving it as a tunnel while I was struggling to reach 400 when I perceived it as a curtain. Cool man! EDIT: Any one made past 1094? That's my high score!
I've just posted a greatly updated and simplified version of Haskelm: http://hackage.haskell.org/package/haskelm-0.1.12.0
Very cool! I'd be curious to hear more about the issues with signals to see what the root cause is.
The strategies and simulations are really interesting! This reminds me a lot of playing [Parcheesi](http://en.wikipedia.org/wiki/Parcheesi) with my family when I was younger :) I wonder if this game has tons of different names in different countries.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Parcheesi**](http://en.wikipedia.org/wiki/Parcheesi): [](#sfw) --- &gt;___Parcheesi___ is a brand name [American](http://en.wikipedia.org/wiki/United_States) adaptation of the Indian [Cross and Circle game](http://en.wikipedia.org/wiki/Cross_and_Circle_game) [Pachisi](http://en.wikipedia.org/wiki/Pachisi). Created in [India](http://en.wikipedia.org/wiki/India) perhaps as early as 500 [AD](http://en.wikipedia.org/wiki/Common_Era), the [board game](http://en.wikipedia.org/wiki/Board_game) is subtitled *Royal Game of India* because royalty played by using servants of the royal household adorned in colored-costumes as pieces on large outdoor boards. Such a court is preserved at [Fatehpur Sikri](http://en.wikipedia.org/wiki/Fatehpur_Sikri). The game and its variants are known worldwide; for example, a similar game called [Parchís](http://en.wikipedia.org/wiki/Parch%C3%ADs) is especially popular in [Spain](http://en.wikipedia.org/wiki/Spain), and [Parqués](http://en.wikipedia.org/wiki/Parqu%C3%A9s) is a [Colombian](http://en.wikipedia.org/wiki/Colombia) variant. A version is available in the [United Kingdom](http://en.wikipedia.org/wiki/United_Kingdom) under the name of [Ludo](http://en.wikipedia.org/wiki/Ludo_(board_game\)). &gt;==== &gt;[**Image**](http://i.imgur.com/MbXMCII.png) [^(i)](http://commons.wikimedia.org/wiki/File:Parcheesi.svg) - *Parcheesi gameboard* --- ^Interesting: [^Ozy ^and ^Millie](http://en.wikipedia.org/wiki/Ozy_and_Millie) ^| [^Pachisi](http://en.wikipedia.org/wiki/Pachisi) ^| [^Selchow ^and ^Righter](http://en.wikipedia.org/wiki/Selchow_and_Righter) ^| [^Parqués](http://en.wikipedia.org/wiki/Parqu%C3%A9s) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cgib8di) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cgib8di)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
My key complaint is, that I found it a bit hard to keep track of much less manipulate the 'presence' of signals. That is problematic when computations are stateful and/or expensive. Define, for example, the signal s as follows s = f &lt;~ a ~ b when is it present? four possible choices: * when both a and b are present * when either a or b is present, in which case the other is sampled * when a is present, in which case b is sampled at that time instant * (unlikely) when b is present, in which case a is sampled at that time instant It is telling that from the top of my head, I don't even know which Elm uses. My guess would be the second, since it seems the most user-friendly choice. But all types can be useful and allow us to control when exactly f is evaluated. We can of course force the issue using sampleOn, that I indeed abuse copiously. In any case, it is probably due to my experience with the synchronous programming language lustre and lucid synchrone that enforce explicit presence/absence of clocks using a dependent type system. In this language we would write something different for the above four cases using when to sample a signal: s = f(a,b) --NOTE: compiler will check that a and b are synchronous (present at the same time) s = f(current a, current b) --NOTE: the clock of s must be declared elsewhere s = f(a, current b) s = f(current a, b) These are not exact descriptions of the four cases because in lustre current strictly up-samples the signal, to down-sample one would use the construct when. To do both, one would need to use both current and sample. Anyway, I hope illustrates the point even if lustre has its shortcomings as well. If you've never had a look, I would really encourage you to give lucid synchrone a try to see how they solve things: http://www.di.ens.fr/~pouzet/lucid-synchrone/ I was also quite unreasonably annoyed by the requirement that signals be defined at initialization. It prevented me from postponing computations. It also made me realize I actually miss Haskell's lazyness. Note I'm not necessarily advocating change. Just my experiences.
That makes sense. `lift2` works as you describe. The value of `s` will be computed based on the current value of all inputs. Have you used [the `merge` function](http://library.elm-lang.org/catalog/evancz-Elm/0.12/Signal#merge) at all? If you tag incoming signals, you can merge a bunch of things together and differentiate between all of the input sources. We have been discussing how to lift the requirement that all have an initial value. A promising approach seems to be checking at the start of a program, so not quite static, but nearly. Not sure what will happen with that idea though. (I also think laziness is not relevant here. You can delay computation by thunking in any language with first-class functions.) [This document](https://docs.google.com/document/d/1rSVLs3fRrZbm7p9Q2ZoW4iBBqFv1NZ8ik1NAZb7En2w/edit) is a somewhat old write-up trying to present all of these things in a unified way. Overall, do you think this is a problem of documentation? Or of expressiveness? P.S. All early FRP papers mention Lustre and Lucid Synchrone, but only in passing. My understanding was that they had fairly different goals overall, but I'll take a more serious look at them to try to get a better idea of routes to go with this. 
Definitely! If you keep using Elm/Haskell you'll start to realize that getting a program to type-check is half the battle. Writing out your types explicitly is strongly encouraged: It will make it harder for you to accidentally write a function that does something you don't want it to do, and help you "line up" types however you need to through the flow of your program.
Thank you for this clarification. I haven't yet written programs complex enough to have these problems, but I'll remember.
I understand now. Thank you for the changes, they're going to be helpful indeed, at least for me. By the way, congratulations for the site. It really makes me want to practice!
Sorry to hijack your thread, but I'm new to this community: how exactly are you writing your blog with Elm? What are you using?
Nothing special: it's actually a wordpress blog with some iframes that host the elm generated html files hosted on github. For example http://stygianguest.github.io/Sierpinski/ScheduleGame.html leads directly to the game that is also in the blog. Considering that I mostly use elm's collage library to draw rather than the DOM, my elm stuff isn't a good example for building websites at all.
I think it's really well done! I did not know about this, and I suspect many others are in the same boat. It makes me want to be smarter with my for-loops :) The graphs and visualizations also look really nice! In terms of actual critique of the writing, it's really good. The only thing that confused me was the interactive diagram where you do your own traversal. It took me a bit to figure out that I could click +/- and I think I came back to it before figuring out I could click to make a traversal. It would probably fix this to add some obvious guidance right above it or even in the diagram. Otherwise, it was clear, fun, and interesting :) I think it'd be well-received on /r/programming, and I'd be very curious to know how it does with the title "Fractals for Fun and Profit - An interactive blog-post using Elm" vs "Fractals for Fun and Profit". P.S. I'm really happy to see the idea of [Elm for interactive writing](http://elm-lang.org/edit/examples/Intermediate/Physics.elm) coming to life to properly explain things :)
I recently used a diagram from your post on "mensch ärgere dich nicht" in a conference as an example of embedding Elm in an existing HTML/JS thing :)
The way to make things more tightly coupled got introduced in [version 0.11](http://elm-lang.org/blog/announce/0.11.elm) and is explained in [Embed in HTML](http://elm-lang.org/learn/Components.elm) and in [Communicate with JS](http://elm-lang.org/learn/Ports.elm). This will let you put an Elm module in any `&lt;div&gt;` and talk to it by sending events in and out.
Thanks! I've incorporated your comments and submitted it to /r/programming
You'd probably get a better response if you posted this to the mailing list, it's a lot more active. https://groups.google.com/forum/m/#!forum/elm-discuss
If you haven't already, check LightTable out. They have support for live editing javascript, so some work is already done, thus making an elm plugin shouldn't be too hard. It's not WYSIWYG though, just text editing.
Let me know if you want to talk more about the possible connection between SmallTalk and Elm, which could be relevant. In terms of motivation, one question people sometimes have is "how would our designers fit into an Elm workflow?" with the assumption that designers can only handle HTML/CSS and that HTML/CSS are actually simple to learn and use in the first place. I can imagine a WYSIWYG being a cool answer to this kind of question :)
That's odd. What exactly isn't working?
Sorry for the late response, I was busy. &gt;I’m actually thinking about both real-time visual feedback of changes in the code and the reverse: changes and additions to the code by directly manipulating things on the screen that are being produced by the code (WYSIWYG). I think that would be great, less typing and more drag drop for UI stuff. Ok, that wouldn't be hard to implement, but there will be a few problems when you add any app logic into the mix. So you've got a rectangle that rotates by 15 degrees every 3 seconds. You change a value after some time. What should happen? The rectangle starts rotating faster/slower or everything is reset from the begining? This is more of an issue with hotswap than with the GUI itself but if you plan on two way communication this will certainly be a problem. Do you plan to add a way to create custom signals using only GUI tools? --- I pointed you to light table because they have pretty good live editing for clojure code and a javascript mode, so writting a plugin for it might be a less work. Though I see why that won't work because of whole no GUI but text approach in lighttable, but lt is open source and you can use ideas from it it in your own editor, and that is why I linked it. [Here](https://www.youtube.com/watch?v=gtXpOD6jFls) is a video with live js editing in action. This might be useful to you: * [elm-lang.org Server module with the hotswap method](https://github.com/elm-lang/elm-lang.org/blob/master/server/Server.hs) And finally the most important question of them all. Do you have any mockups to share? :)
It's a more niche language, but I could see it being expanded into #4. It's fantastic for animations, games, blog posts, etc.
I'd argue that Elm is a *young* general purpose language :) The particular limitation you are getting at is embedding arbitrary effects in Elm, which is not possible yet. For now we use [ports](http://elm-lang.org/learn/Ports.elm) to do that kind of thing. You can think of this as "Elm has a DSL for scripting effects called JS" but we are thinking about what this'll look like in the future :P I would definitely not say that the goal is more niche than CoffeeScript. "A better JS" seems not so ambitious to me because it keeps the underlying ideas that make web programming hard. It's cool if your code has nicer style, but if you are still manually manipulating the DOM, I think you ignored the real problems with GUIs. So right now the emphasis is on "a better language for front-end programming" which I think is an important distinction. Anyway, 1 is already done for all Elm related sites ([for example](https://github.com/elm-lang/elm-lang.org)) and can be done in a more traditional style with [elm-d3](https://github.com/seliopou/elm-d3). 2 can possibly be done with [the WebSocket library](http://library.elm-lang.org/catalog/elm-lang-Elm/0.12.1/WebSocket), but I'd probably use ports for this. 3 is not really a high priority for me because I think ports promote a better interop style, but I'd check out [the mailing list](https://groups.google.com/forum/#!forum/elm-discuss) for news on soon-to-be-released 3D stuff ;) Elm works with node (this is how the REPL works) but I have not yet seen people using Elm for servers. I have not made an effort to make it super easy or write it up because the primary goal now is to become a great language for front-end stuff.
I.m.h.o. it's the opposite of a general purpose language (GPL). Haskell would be the GPL, and Elm a loosely related DSL. The domain seems to be browser-run applications (currently in JavaScript). Putting Elm on Node.js would totally defy it's purpose -- you probably want to use Haskell in that case. There are EDSL (embedded-DSL) in Haskell for writing JS --Fay and Haste come to mind-- but they don't fit that well on JS as Elm does. That's the benefit Elm gets from not being Haskell (mainly: not being "lazy" like Haskell is).
I was giving elm-webgl a try yesterday. It uses the library https://github.com/johnpmayer/elm-linear-algebra/ which includes matrices. It might be a good starting point for including more functionality you need.
I would like most of the functions in this [package](http://hackage.haskell.org/package/matrix-0.3.2.0/docs/Data-Matrix.html), except perhaps the decompositions. I do not intend to use it for graphics so I need it to support general m by n dimensions.
Click [Full view](http://www.share-elm.com/sprout/539cdb25e4b07afa6f981f95/stable/view) to play. Space for shooting, arrows to move. The game gets harder. I've build a little ugly RNG, made a stepping function, learned about physics, and had fun using FRP in Elm.
When I beat the first level it says "You won. Next: Round 1". Off by one error?
Nah, the assignment said to start with 0. Silly, I know. 
Better performing version [here](http://share-elm.com/sprout/53a1f7aae4b07afa6f982271), more colourful version [here](http://share-elm.com/sprout/53a098f1e4b07afa6f9821b5) and discussion [here.](https://groups.google.com/forum/#!topic/elm-discuss/tQcuhKX4ijI)
Yeah, I'm a bit curious about how much of a speedup I could get by using Array instead of Dict.
Well I'm not saying that it's your code that is slow. I mean that this particular program would be a good one to use *as a benchmark* to make improvements on the standard library.
Congrats this is great!
My guess is nothing, so far. However, are you aware of [Ports in Elm](http://elm-lang.org/learn/Ports.elm)? They're the way Elm interfaces with javascript. So you could use Elm to write your interface and take care of the reactive stuff, but offload the heavy-duty video processing stuff to existing JavaScript libraries.
Can you post the file somewhere, possibly on gist.github.com? I'm really curious what \8220 is.
Here it is on paste bin, I don't have patience to figure out github at the moment. http://pastebin.com/mV6m6VTi From the main elm page with the OSX install instructions, it's word for word what I should put. So it confuses me as to why I'm getting an error. The only thing I can think of is maybe the encoding I saved the .elm in TextEdit is the wrong one, or whatever. Maybe I'm just being a newb. I still can't figure out what the \8220 character is. 
Based on the pastebin I think the issue is that “ isn't the same as ". Check this out http://scttdvd.com/post/65242711516/how-to-get-rid-of-smart-quotes-osx-mavericks
Well no errors anymore, but now I'm just getting a blank screen in both Firefox &amp; Safari. I'm running elm-server in terminal so I don't know why it's not working, hmm...
bump. Still haven't figured out why I'm just getting a blank screen despite using different browsers to run the .elm file. 
 Yes! Elm is mainly a compile to JS language. The server is really mostly meant for development use. The only command "elm" can compile to JS or HTML. 
So, how would I do that? Every example I have seen uses pre-compiled Elm code. Which JavaScript library do I use to compile Elm code on demand, in the browser?
Sorry, I misunderstood. You have to compile it to JS beforehand, or do it server side. One day, there might be a JS compiler for Elm, but not for the time being. 
Would elm be powerful enough to write a compiler for itself?
Admittedly, I'm very new to Elm, but a partially-bootstraped Elm compiler or interpreter does seem feasible. 
For number 2: Creating dymanic interactive applications of non-trivial complexity is pretty much not possible because nesting dynamic elements is not directly supported by Elm. Basically you will end up with very complex code for nesting even 3 Signals (dynamic elements) and a interactive, modern, single page app nowadays will easily have 6+ nested dynamic elements. If you want a great reactive-ish framework for building high-performance, interactive, easily extensible applications I would recommend ReactJS. Elm cannot be used for any serious web applications in its current state.
That all sounds good but the real problem which prevents any serious development using the Elm language is the Signal type and nesting. Let's just say there's a reason all of the elm examples are very simple apps with no more than 3 nested Signal elements, and there is a reason why elm-lang.org is split into several different Elm apps. I'm sure most of the people involved with Elm know exactly what I'm talking about but for some reason you don't like to mention this glaring hole in the language.
Great work once again! 
Haha, that's my job ;) Took me a while to come to terms with this one though!
Great! 1. Is there any way to read into an HTML node so that you could style/modify it like an Element? 2. It looks now like it is a choice between all-HTML or all-Graphics. Since you cannot know the HTML height beforehand, you are being forced to pass window height to toElement, so it cannot play nicely with other Elements. Do I get it right?
 1. I'd build something around the elm-html API for that. I think it'd be faster/better if you generate a `node` at the very end. 2. I want to improve this. I think it'll be possible to just specify a width or maybe nothing at all as with markdown blocks. I also want to add a way to embed an Element in Html, which should be a lot easier.
First questions: what GHC version and what OS? If you're on Windows or Mac there are pre-built installer packages you can use. See https://github.com/elm-lang/elm-platform/blob/master/README.md#elm-platform If you're on Linux, I'd use Apt or Rpm or whatever to install libcurses, looks like it might be missing. Elm is a fairly new language, so we won't get mad if you ask lots of questions! There's probably not enough of a knowledge base for Googling to be a ton of help. But thankfully the community is supportive and there aren't problems too often! 
Got my problem solved! I had to uninstall texmath and then reinstall it using a slightly older version, cabal install texmath-0.6.6.3. I then had to install ncurses, apt-get install lib64ncurses5-dev.
Did you think about animations? The issue with them is that if you CSS animate elements going *out* you have to keep them in the DOM until the animation is done. You can check how react (experimentally) deals with them: http://facebook.github.io/react/docs/animation.html
I have. See [elm-d3](https://github.com/seliopou/elm-d3) for a proper approach to resolve this issue. The key idea is that the approach used by D3 is not just for diagrams.
That. Is. Awesome. What's even more amazing is the implementation. It is basically all math. A non programmer would understand this. Well done. 
That's encouraging, thanks :)
Yes! I beat it by reading Wikipedia and using a Python interpreter to calculate :p
Awesome! ;) Although that may also be due to the relatively low volume of posts. The community in general is very friendly though.
thanks. i enjoy FP, i use a bit of F# (and dabble in scala), but not haskell, so i like the design choices (vs haskell) in elm. i'd love to see about combining elm with python or F#. thanks for the answer!
this is my solution https://gist.github.com/gosub/6dc782c8e5847f964f00 I combined the mousePos and mouse.isDown in a single signal (down, (x,y)) and then folded it in a list of lists. When down is True, append (x,y) to the first list, otherwise create a new list, but only when there isn't already one.
You are a genius! In a way `allMoves` listens to both mouse click events and mouse move events since you're combining these two signals into one by sticking them in tuple. Seems pretty obvious now that you've spelled out and I can now recognize the pattern in many of the Elm examples on the website. Thank you very much!
Did you install with `cabal`? If so, I think the PATH you set is not quite right. I think it should be something like this: export PATH=~/.cabal/bin:$PATH Notice the added `~`. Without it you are referring to something much deeper in your directory hierarchy. Let us know if that works!
I'm just happy I finally know how to pronounce his surname.
Btw I can't help providing a snarky answer to my own question for comedic relief in typical Reddit style, lacking any guidance online: 1. Which languages *can*: any 2. Which languages *should*: all 3. Which languages *are*: none
Looking at this video I felt like looking at the future of programming. I just hope someone creates a derivate of elm that compiles to C and allows these nice concepts in classical GUIs. :) 
Haskelm looks great. I was thinking about something like that when I started using Helm.
I'll definitely need to update it for 0.13, there were a lot of syntax changes. 
Awesome work Evan..
Aww, thanks :) Wait til tomorrow though, the big part of 0.13 hasn't really been announced yet ;)
This is awesome work Evan. 
Thanks! This was Michael's project, so I'll pass the message along :)
I really like [Phoenix](https://github.com/phoenixframework/phoenix) because it has great websocket support, which plays well with FRP in general. I also really like Elixir as a language for server side programming. 
Last time I worked with Elm, I wrote everything in the browser because hot swapping made fast iteration so easy. Having to keep everything in one file and the inability to use library modules was really limiting, though. No more! This is a blast to use. I would love to see a live signal graph added to the debugger at some point. Even a static signal graph would be incredibly helpful. 
I bet /u/wheatBread is going to be a superstar guru in 10 years. Awesome talk Evan! I really liked the Prezi visualisation and I finally have at least a hunch what arrowized FRP and Automatons are about. :D You are a really good teacher, which one can already see in everything on [elm-lang.org](http://elm-lang.org). Also your stage presence has improved, I think. Definitely one of the best talks of strange loop I've watched so far. Ah, and I don't know why, but [this scene](http://i.imgur.com/8ASyIWT.jpg) reminded me of [something](http://i.imgur.com/I6EPlqb.jpg). ;)
I am starting to use elm in a project, and from first approximation, go seems like a good match. Go is geared towards web app backend code and json/http support in go is pretty good. It has an SQL interface in the standard library, and there are different drivers for it out in the wild. I was originally thinking of using Haskell, but after surveying haskells web frameworks and a little bit of coding, I decided against it.The languages are different in ways that are not always immediately obvious after a long night of stimulant abuse and programming. You can easily end up thinking in code that is a nonsensical nonexistent mixture of both, and end up writing some very subtle bugs that compile anyway. I have a similar issue with browser JavaScript and node. Sometimes surface similarity can obscure deeper dissimilarities and hamstring interoperability. Yesod also seems kind of heavy handed for what I think most elm apps need. MVC frameworks are mostly necessary when you are writing the code for the different aspects of the app in the same language. For elm, you can easily model the data as json, write the view for it in elm, and all that's left is the business logic, and presumably it would be written in a third language. So essentially a good criterion should be a straight forward http interface and json support. At least until what an elm specific framework should look like is worked out. Python and ruby (sans rails) aren't horrible options either. Big frameworks will probably just get in the way though. I know there isn't a lot of mind share between go programmers and Haskell programmers, so go and elm seems an equally odd couple. I tend to think of view logic declaratively and business logic procedurally, so it works fine for me at least.
This is really cool. I'm wondering if the ability to record event sequences along with the initial-final states could be used to make some form of tests which could be created, run and modified without touching code.
Fellow gopher, one of the reasons I started to learn elm is so that I could use go without having to learn html, css, and javascript (all of which look ugly). I'm also using it as a way to enter the realm of functional languages.
Elm uses standard communication protocols, so you can use any website backend you want with it. Django (python), Ruby on Rails (ruby), Cake (PHP), or Node.js (JavaScript) are all fairly popular choices (of which I prefer Django). That said, with elm being more or less Haskell, I'd be tempted to use Yesod. I've looked at it expecting my mind to be blown as is tradition with anything Haskell, but it looks more like "and this is how we write rails/django in Haskell." I'm not saying it won't be an improvement over rails, but it's not going to be that different either.
I just started to learn it, and I love it, very very fun language.
not bad, but the physics for the ship is implemented wrongly. 
Wow, fantastic! I had no idea implementing a barebones raytracer was so easy. Could you maybe explain some of the notation, in particular: Pixels={(x,y)∈screen|x∈[−w/2..w/2],y∈[−h/2..h/2]}, What is the a/b/c notation? Just to point out, you have some minor spelling errors ("lenght", "pithagorean").
Pixels={(x,y)∈screen|x∈[−w/2..w/2],y∈[−h/2..h/2]} is [set-builder notation](http://en.wikipedia.org/wiki/Set-builder_notation) ([here](http://www.mathsisfun.com/sets/set-builder-notation.html) is an easier explanation). So pixels is the set of all pairs (x,y) where x is an integer between -w/2 and w/2 ([a..b] means all integers a, a+1, a+2, ... b-1, b) and y is an integer between -h/2 and h/2.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Set-builder notation**](https://en.wikipedia.org/wiki/Set-builder%20notation): [](#sfw) --- &gt; &gt; &gt;In [set theory](https://en.wikipedia.org/wiki/Set_theory) and its applications to [logic](https://en.wikipedia.org/wiki/Logic), [mathematics](https://en.wikipedia.org/wiki/Mathematics), and [computer science](https://en.wikipedia.org/wiki/Computer_science), __set-builder notation__ is a [mathematical notation](https://en.wikipedia.org/wiki/Mathematical_notation) for describing a [set](https://en.wikipedia.org/wiki/Set_(mathematics\)) by stating the properties that its members must satisfy. Forming sets in this manner is also known as __set comprehension__, __set abstraction__ or as defining a set's __[intension](https://en.wikipedia.org/wiki/Intension)__. Although some simply refer to it as *set notation,* that label may be better reserved for [the broader class of means of denoting sets](https://en.wikipedia.org/wiki/Set_notation). &gt; --- ^Interesting: [^Extension ^\(predicate ^logic)](https://en.wikipedia.org/wiki/Extension_\(predicate_logic\)) ^| [^Wheel ^graph](https://en.wikipedia.org/wiki/Wheel_graph) ^| [^Abuse ^of ^notation](https://en.wikipedia.org/wiki/Abuse_of_notation) ^| [^History ^of ^mathematical ^notation](https://en.wikipedia.org/wiki/History_of_mathematical_notation) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cl9cab2) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cl9cab2)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
Ah! Thanks, for some reason I was reading `/` as some sort of range instead of division. I have no idea how I made this mistake. :)
Have you considered using http://library.elm-lang.org/catalog/elm-lang-Elm/0.13/Graphics-Element#spacer
One way to do it is with a container, like this: border : Int -&gt; Color -&gt; Element -&gt; Element border pixels clr element = color clr &lt;| container (widthOf element + 2 * pixels) (heightOf element + 2 * pixels) middle element main = border 2 red (color white (spacer 100 100))
you seem to be afraid of lists. Instead of having: beard0, beard2, ... you should have just one variable beards : [Beard] For initializing the beards, you could be more clever, something like: allBeards : [Beard] allBeards = let b h y x = beard (x, y, False, 50, h) b1 = b 50 -40 b2 = b 50 -90 b3 = b 50 -140 b4 = b 165 -247.5 xs = [-110, -60, -10, 40, 90, 140, 190] in map b1 xs ++ map b2 xs ++ map b3 xs ++ map b4 xs And then for stepping the game, you would only need to do: { game | player1 &lt;- stepPlyr userInput.mp game.player1 , beards &lt;- map (stepBeard timeDelta game.player1) game.beards } And then for display I'd make a function like: displayBeard : Beard -&gt; String -&gt; Form displayBeard beard src = move (beard.x, beard.y) (toForm (image beard.w beard.h src)) in display: [ what you had... ] ++ zipWith displayBeard state.beards allImgSrcs allImgSrcs = let mkSrc x y = show x ++ "-" show y ++ ".png" in concatMap (\x -&gt; map (mkSrc x) [0..3]) [0..6] Nothing of this has been tested, so it probably has some errors
Ah right, lists. It seems so obvious once I show the code to other people. I'm so new to Elm, I can barely think in it yet :P
That API is getting revamped, and [the new version of Inputs](https://github.com/elm-lang/core/blob/master/src/Signal.elm#L249-L306) plus [the new version of Html.Events](https://github.com/evancz/elm-html/blob/new-inputs/Html/Events.elm#L39) makes it possible to do what you are describing with a function like this: sendMany : [Message] -&gt; Message So that'll be more how things are in 0.14. Until then, you can create an input specifically for that task, and then merge it into the two things you want. data Update = Click | ... allUpdates : Signal Update allUpdates = merge normalUpdates.signal (always Click &lt;~ click.signal) port goDoSomething : Signal () port goDoSomething = click.signal Something like that. Does that clarify? For my personal benefit, what's the particular scenario you are in that you need this? Just like to have usage examples :) edit: added link to the [new Html.Events API](https://github.com/evancz/elm-html/blob/new-inputs/Html/Events.elm#L39)
Thanks for your reply, I managed to get it working. My intention was to display a loading image when the user initiates an AJAX action (in this case, via button click); my idea was to send a signal to toggle a "loading" flag in the application state, AND send the signal to initiate the AJAX request, from the same input. Your suggestion to use `always` to generate a new signal on the same input worked. Looking forward to 0.14 btw.
Nice. Perhaps it should be in the standard libraries, because [I also did it](https://github.com/Dobiasd/Multitouch-Transformation-Demo/blob/master/src/ElmLogo.elm) some time ago. ;) Here is a [video](https://www.youtube.com/watch?v=tSoesrJ59S4) of it in action.
This is really cool! :D I now see what you meant in that mailing list thread. I'll do my best over there :)
Wow, that is very cool. Edit: Oh, I just saw you are the creator of PureScript. I should not be very surprised then. ;)
In case you are still interested in the list version, I submitted a [pull request on github](https://github.com/krisc/francis/pull/1). It makes the code [shorter](https://github.com/Dobiasd/francis/commit/a05781a48ed674420c951a58eee92b40e07903c1) and easier to extend.
Thanks. I guess an additional function like `groupAndFlatten : [Form] -&gt; Form` is not what you are after, since this would make the abstraction leaky, right? Anyway, I suspect you will find a clean and more general approach, as usual. :)
That may be in the right direction. Another thing people want to do is use a `Shape` as a mask, so you could take a picture and make it shaped like a circle or [kiki](http://en.wikipedia.org/wiki/Bouba/kiki_effect) or whatever. I could imagine a solution being applicable to both cases. edit: `mask : Shape -&gt; Form -&gt; Form`
I'd check out [elm-html](http://library.elm-lang.org/catalog/evancz-elm-html/latest) which lets you work with whatever HTML you need and then embed it as an Element. Assuming you know how big you want your videos to be, this should work out well. Does that sound plausible? I'm glad to finally have an alternative to the hacks you saw (which were probably in the elm-lang.org source code :P)
This is my latest hobby project. I hope you like it, but I'm happy about any kind of feedback. :) From a programmers point of view the most interesting part was to implement the text editor. I learned a lot doing this. And with Elm it was always a breeze to refactor when I had messed up in between. ;)
I think this can be really helpful for people! I made a [Game Skeleton](https://github.com/elm-lang/elm-lang.org/blob/master/frontend/public/examples/Intermediate/GameSkeleton.elm) a while ago, so it may be smart to have a website skeleton as well. I am having trouble figuring out if people are online the same or less during the holidays, but it may be worthwhile trying this on some sites in January when everyone is back at work but not sure what to do yet :)
I have a very minimal example with using elm with highcharts. Mainly it is a combination of elm-html and ports. https://github.com/yogsototh/elm-highchart In fact the ports documentation was both simple and easy to follow. http://elm-lang.org/learn/Ports.elm Now, the ideal for me would be to find a way on how to integrate highcharts inside native elm. I didn't looked on how to do it for now. Any pointer would be welcome. 
Great example, thanks! So if I understand it right, I'd still write my JS stuff, but I can use Ports to communicate across to the Elm bits via a messaging system. This gives me a good start to begin experimenting with, thanks!
This package lets you do io : http://package.elm-lang.org/packages/maxsnew/IO/1.0.0 Or you can use HTTP to get remote files. The Http interface will be changing with the next Elm release though 
Well, for example replacing/deleting elements from document, adding new childs to element, etc. 
It sounds like the Promises feature being explored right now might also be used for javascript interop - so worth keeping an eye on that.
Thank you! Is there going to be a new release soon?
Thanks for getting back to me. I managed to get an Elm&lt;-&gt;Python program working using WebSockets (there's a Python API for MATLAB which I think I have to use because I MATLAB doesn't support websockets) but this only allows passing strings back and forth. I imagine it will be more efficient if I could send JSON data over Python to Elm since the data comprises of relatively large arrays, right?
Manipulating existing DOM sounds like a procedural program with side-effects. The Elm architecture is not very aligned to this style of coding. Instead, FRP tends to play nicely with declarative views that recomputed from values (the state of your program) that vary over time.
Yes!
/u/wheatBread is also his reddit account afaik.
Very interesting! As I have been sharing [the Elm Architecture](https://github.com/evancz/elm-architecture-tutorial) with people, one of the questions that comes up is "Is this a state machine?" or "Is this a [Moore machine](http://en.wikipedia.org/wiki/Moore_machine)?" I always feel that this does not quite capture the architecture pattern because these _ machines all focus on having state separated into silos that hopefully stay synchronized. The terms "abstract language + interpreter" are interesting to me in this regard. Are you seeing these terms as related to [abstract interpretation](http://en.wikipedia.org/wiki/Abstract_interpretation) in some way? Or is it more like we can create a domain-specific language for our particular use case and then write a simple interpreter for that DSL?
I noticed that the demo animation will jump ahead if you do queue operations too quickly. It's particularly noticeable with dequeue when you need to do a reverse. Should the animations queue up though?
/u/seriousreddit and I are TAs of this class; happy to be spreading the gospel of FRP :)
this is a fantastic resource
Alright, so there currently isn't an existing module for it.
hi, i'm a student that might be interested, but i hav a few questions: * i'm pretty much new to Elm(but i have a little experience with Haskell), is there any project needing less Elm knowledge? * i live in Europe, is that a problem? Thanks
I'd like to participate, too, but I realistically don't have the time to do much :( Is there any kind of restriction on what I have to commit to get done?
If you missed the organization deadline, maybe ask the Haskell.org folks if you can add some Elm projects under their quota. That's what I'm doing with PureScript. There is an IRC channel (#haskell-gsoc on Freenode) to discuss projects.
I think the confusion was just over whether the student apps were open or not... 
To me that is too much of an overkill for something so simple. I believe that is you want to work with Elm, at least you should know the basic of HTML, since that it what Elm is target too. 
I've made myself a [bootstrapping gist](https://gist.github.com/wiz/d914d2167b6008ee93fb) for this. It's kinda outdated, but should work in recent Elm with minimal modifications. Any server/framework that serves JSON could be a backend.
I always use the same pattern in all of my projects. I split the code into a `frontend/` directory that's all Elm, and a `backend/` directory that's all whatever-the-backend-is-written-in. The setup of the backend code is like this: 1. Compile all the relevant Elm files to HTML on startup. 2. Serve the compiled HTML as static files, just like any CSS or images you have. 3. Do any JSON endpoints or Websockets exactly as you would in any other backend. I'm not sure how this fits with your workflow, but that has worked well for me in these cases: * [The main website code](https://github.com/elm-lang/elm-lang.org/) * [The package repo code](https://github.com/elm-lang/package.elm-lang.org/) I used Haskell in both, mostly because I have my tooling and workflow set up such that it just makes sense to keep writing stuff this way, but I think the idea of this approach is totally separate from the backend language. I can see myself doing the same thing in Go or Python or Ruby or whatever it needs to be.
So, there are a few ways I know to approach this problem, but I'll share the way I'm most familiar and find easy. If you want the mouse position and you are using forms (which I'm guessing you are as you mention *collage*), then a possible solution would be one like in this [gist](https://gist.github.com/TheSeamau5/fc390c67622ce580f09f) I don't know how your grid looks like but I tried to make something that's fits your description. You may see that the code is broken up into Model, View, Input, Update and Main to help you understand what's going on. There are basically two gotchas about this problem: 1) Mouse position defines the origin (0,0) to be the top left of the screen whereas Collage defines it to be at the center of wherever that collage is placed. So, a conversion must be done at some point. In this case the following code is what does the conversion: convertToViewCoordinates : (Int, Int) -&gt; (Int, Int) convertToViewCoordinates (x,y) = (x - 200, 200 - y) This code assumes that the collage is at the top left corner and is 400 by 400. In practice, you may want to pass in a few extra parameters to this function for the size of the collage and the position of the collage with respect to the window. One common technique of doing this is to have some sort "config" field in your model with all the configuration parameters you may need. You may also want to extend the Input type from: type alias Input = { mousePosition : (Int, Int) } to: type alias Input = { mousePosition : (Int, Int) , windowDimensions : (Int, Int) } assuming that you want your collage to be full screen. 2) The second gotcha is that your cell type must store the fact that it can be hovered. This can take a myriad of forms, but in essence, there is some field which you'll want to update when the cell is hovered. The simplest way I came up with doing it is with a boolean. type alias Cell = { position : { x : Float, y : Float } , dimensions : { width : Float, height : Float } , isHoveredOver : Bool } As you can see, there's an "isHoveredOver" field. Now that we have both the converted mouse position and a field to store if the cell is being hovered over, we can actually implement how we update each cell. I did it as follows: stepCell : Input -&gt; Cell -&gt; Cell stepCell input cell = let (mouseX, mouseY) = input.mousePosition in if toFloat mouseX &gt; cell.position.x - cell.dimensions.width / 2 &amp;&amp; toFloat mouseX &lt; cell.position.x + cell.dimensions.width / 2 &amp;&amp; toFloat mouseY &gt; cell.position.y - cell.dimensions.height / 2 &amp;&amp; toFloat mouseY &lt; cell.position.y + cell.dimensions.height / 2 then { cell | isHoveredOver &lt;- True } else { cell | isHoveredOver &lt;- False } Basically, I'm testing to see if the point is in the cell (assuming rectangular cells of course). If the mouse position is in the cell (and remember, this is the converted mouse position), then we set the isHoveredOver to True, else we set it to False. I'll let you look at the rest of the code. The rest is just the details of creating grids, drawing them, etc... If you have any questions, please make sure to ask. I hope this helps. 
Lol, reminds me of [Elmer Fudd](https://www.youtube.com/watch?v=1G8Xlx7dfT8)
Unfortunately, no.
Is there a way to access the course material if one is not a student enrolled in the course? Edit: Disregard my question. I am not a clever man.
To fight circular imports you have to lay out your application hierarchically, putting "parallel" components under a "root", like [this](https://github.com/evancz/elm-architecture-tutorial). I haven't tried to interact with `document.locaion` stuff but looks like [ports](http://elm-lang.org/learn/Ports.elm) are the way to go.
Originally I was trying to stay away from actually changing the document.location. I was hoping to have a Router.elm module that would have state that keeps track of the location and would return an html object based on this state. However after further thought it might be better to use the document.location because then I can include information from view to view in the url. 
Just remember what [Signal.subscribe](http://package.elm-lang.org/packages/elm-lang/core/1.1.1/Signal#subscribe) does from a types perspective. It converts a channel to a signal. Given that your update function generally looks like this: update : Action -&gt; Model -&gt; Model You have to just get a signal of actions. actions : Signal Action And you make those actions by composing the regular signals you get like Time.fps and the ones you might get from event handlers. Say you had a button. And you wanted to capture when that button got clicked. You could set up a channel: buttonClickedChannel : Channel () buttonClickedChannel = channel () and then you could have a signal from this channel: buttonClicks : Signal () buttonClicks = subscribe buttonClickedChannel and now this is just a signal and you can combine this with Time.fps and whatever you want to form your big actions signal. You can play this trick with as many channels as you want and as many signals as you want. Just convert them to signals using subscribe and you're good.
1) Create a new `Signal` for something like `Maybe Token`. 2) Make a function from your signal to resulting signal. Invoke `Http.get` there: fetchToken : Signal (Maybe String) -&gt; Signal Token fetchToken querySource = let makeQuery q = case Debug.watch "Query" q of Nothing -&gt; Http.get "/get/my/token" Just _ -&gt; Http.get "" -- have token already, do nothing. getResult r = case Debug.watch "Result" r of _ -&gt; "extract token value from result" in getResult &lt;~ Http.send (lift makeQuery querySource) 3) Merge token signal into your application action stream for `foldp` to chew. `HTTP GET /get/my/token` will be fired right upon the start and result injected into your app state.
Yes, it works, thank you very much. I will have a closer look near the weekend.
We sometimes stay alarmingly late, so 10 or 11 is a pretty safe bet :) It's totally fine to come late if you need to. I usually do a short "here's what's going on" section at the beginning, but for the rest of the time we are working on stuff together.
There needs to be a NYC elm hackathon!! :)
If you have material elements as web components (as in custom HTML tags) then you may use them with elm-html. I haven't tried with angular, but I have tried with polymer and it seems to work. It takes a bit of tweaking at the html/css level since Elm tends to render everything in a seperate div and won't let you render directly on the body but that's just a few css styles here and there to fix. There is this function in elm-html called "node" that can allow you to create any Html node you want. Again, I only know Polymer, so sorry for using it as an example, but if you wanted, say a core-list element, you would simply do coreList = node "core-list" and you've suddenly defined your custom element. You're still in charge of manually importing the elements in the html file but this would work. For the custom attributes like "flex", you can use the "property" or "attribute" function. I forgot which of the two sometimes doesn't work with Polymer, I think it's property. But in essence you use either as follows: flex = property "flex" (Json.Encode.bool True) flex = attribute "flex" "" Link to elm-html: http://package.elm-lang.org/packages/evancz/elm-html/2.0.0
This is pretty encouraging. Any example to demonstrate?
Where can I find the results of the last hackathon?
I hope more of these will be organised in the coming months. I'll be in the SF area between April and October. 
In your example what is lift?
And is lift part of a package?
Hm.. Looks like it was renamed to `map` lately: http://package.elm-lang.org/packages/elm-lang/core/1.1.1/Signal#map
If I make it out to NYC this year I definitely want to do this! That said, anyone can start a meetup! Thinking about the health of this community, it'd be amazing to start seeing meetups like the one I run springing up in different cities. I've heard of a small one in Taiwan for example. So maybe try to find a couple people who are interested that you know, or find folks on reddit or the mailing list to see if you can get enough people together. I know functional programming is more accepted in NYC than SF, so I think this could have good results. As long as you can find a space (coffee shop, room in your company, etc.) it is pretty straightforward to run hackathons like this!
I'm glad you overexplained it for the next guy :) So it's essentially "." in Haskell! I've gotta say, I'm not crazy about the addition of left function application and composition to Elm. I think it's adds too much complexity by throwing freedom like that around willy-nilly. Now I've got function flow going left as well as right, and I never know which way it's going until I mentally parse the infix functions! But a lot of good my griping will do. I'm sure I'll get used to it. 
I find myself using `(&lt;&lt;)` and `(&gt;&gt;)` and `(&lt;|)` very rarely these days, and I'd tend towards recommending that style. /u/dpwiz showed examples of mixing `&gt;&gt;` and `|&gt;` which is possible, but I'd make sure they all became aligned `|&gt;`'s in a code review: lengthAsText : List a -&gt; String lengthAsText list = list |&gt; List.length |&gt; toString This is really easy to glance through, making modifications and additions is really simple, diffs are pleasant. So in my view, the composition operators are not terribly useful when your apply function points in the right direction :) As an aside, these operators all come from F#
I have seen this issue reported in relation to [elm-package](https://github.com/elm-lang/elm-package/issues/) before, and I think it's about the underlying Haskell library I am using to talk to http://package.elm-lang.org/ I don't have a better answer than that unfortunately!
You definitely don't need to know Haskell when starting out with Elm. I'd rather say that Elm is easier to grok and feels nicer over all (if a little less expressive) than Haskell. I'm not sure how easy it is to grasp signals (the time varying bits of Elm) for a beginner, but it should be much easier than every slightly more advanced concept in Haskell.
One of the big goals of Elm is to be a lot easier to learn and use than other languages in the same ballpark, so I'd say it's the best place to start! This is especially if you want to get something online quickly, like a game or website. Once you have a foundation in Elm, it's pretty easy to move between OCaml, SML, Haskell, etc. They are all in the same language family. OCaml and Haskell are both very interesting languages and they'll teach you a lot. Part of the trade off here is that these extra features get between you and making stuff. The learning curve can be much steeper, particularly in Haskell.
The plan is to disallow self-recursive *values* in certain circumstances, so this would throw a compile error instead of having weird runtime behavior. Recursive functions are fine. Values that refer to themselves are fine **iff** the reference is inside a lambda, delaying its evaluation. That's my current feeling at least! This is also roughly how OCaml does things.
Thank you all so much! I'm so glad I don't have to start with Haskell. Elm looks so damn cool, I want to use ASAP.
I will definitely check it out. Love watching programming talks.
Summoning /u/wheatbread. You have a fan
I have a crus...like him too!
I'm presumably qualified (see https://github.com/rtfeldman/dreamwriter) but unfortunately don't have the time...just wanted to stop by and say it's exciting to see another production Elm code base in the wild! Evan already posted on the mailing list - https://groups.google.com/forum/#!topic/elm-discuss/OJ6YltkJgf8 - about this, but it doesn't look like there are any takers yet. If there's any less hands-on way I can contribute - talking through solving particular architectural problems in Elm, etc. - I'd be more than happy to help!
Hello there, Thanks a lot for your message! 
How many people did apply? I sent an email to https://github.com/kasbah/ but I'm probably not the best fit...
2... we are starting to wonder if it was a good choice to use elm.
Unfortunately being into something and being experienced/good at it aren't necessarily always correlated :(. We have 1000 backers, chose our previous developer because he told us he'd commit some time to this project for a long while... and now we are late and having a hard time finding someone.
With relatively recent additions to browser standards, you can can use a [Storage](https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Storage) API to save all sorts of info in the users browser. Hassan is working on [elm-storage](https://github.com/TheSeamau5/elm-storage/blob/master/src/Storage.elm) which wraps these APIs up for Elm. I also know that Richard's [dreamwriter](https://github.com/rtfeldman/dreamwriter/) app is backed by dropbox (and other local storage stuff, so it has no central server at all) Is that the kind of thing you mean?
I think you would need a server side language for that. 
Yeah, as things stand with browsers, you can't have total control over that kind of stuff. That's a browser-security thing, not an Elm thing. I'm not sure what node.js + Elm can do in this regard, but it would be really cool for the Elm community to have more people exploring that avenue.
I assume "FP languages" means "Haskell" :) I hadn't seen it in OCaml or SML or anything. In any case, we took it out when we added `map2` and such because it is true that: zip = map2 (,) 
So it can be done with a php script and localhost pretty easily, right?
Of course! That's brilliant! Thank you. Maybe it'd be good to mention this in the "zip" example? That's the first place I looked for it. People familiar with FP languages would probably think of using map, but from what I understand Elm is targeting a much wider audience. I looked for zip because Python has it, maybe other Python programmers would too.
No problem :) I did not realize Python had it, that's interesting. I wonder about other imperative languages? In any case, the goal is to have a much wider audience, so I'll think about adding it back or at least augmenting the `zip` example. I am working on a website redo so I'll be going through all the examples and docs relatively soon to make improvements.
I just built one today and then saw this post. It's all pretty alpha but it's getting there. https://github.com/zimbatm/elm-gamepad EDIT: nothing for device orientation though
I'd like to use a docker image for playing around with elm 0.15. Does anyone have a good one or Dockerfile? [nacyot/elm-elm](https://registry.hub.docker.com/u/nacyot/elm-elm/) is elm 0.12.3. And looking up at the images it builds upon there are a number of zsh modifications I don't care about. I've tried to build one myself, but am running into Haskell dependency issues when trying 'cabal install elm-compiler-0.15'. rejecting: unix-2.6.0.1/installed-f12... (conflict: hashable =&gt; bytestring==0.10.6.0/installed-c76..., unix =&gt; bytestring==0.10.0.2/installed-4f9...) rejecting: unix-2.7.1.0, 2.7.0.1, 2.7.0.0, 2.6.0.1, 2.6.0.0, 2.5.1.1, 2.5.1.0,2.5.0.0, 2.4.2.0, 2.4.1.0, 2.4.0.2, 2.4.0.1, 2.4.0.0, 2.3.2.0, 2.3.1.0,2.3.0.0, 2.2.0.0, 2.0 (conflict: process =&gt; unix==2.6.0.1/installed-f12...) 
You can send the message to a single mailbox, then use the resulting signal for multiple purposes. So send one message, react in many ways. Does that make sense? Someday it may make sense to introduce something like `(bundle : [Signal.Message] -&gt; Signal.Message)` but I'm still not sold that this is "the right thing to do" over having everything come through one signal, especially since it raises questions about event co-occurrence.
Thanks for the tip. I ended up merging the signals from the two mailboxes (converting my Action to a boolean False if it matched *RenamingItem _* and True otherwise). This all became my new: keyboardControlsEnabled : Signal Bool It seems I've also fixed several related issues in the process, so that turned out quite well. Thanks again :)
I got wheatBread's solution working well, but I did try to implement this as an experiment. I couldn't quite get it to compile though. Maybe because of my lack of understanding of ports and tasks and how they relate, but the compiler kept yelling at me because it didn't like the type going through the port. I'll have to look into this stuff more at a later point.
Oh, I'm super sorry. I made a mistake with the type annotation for the ports. I meant to say that ports output Signals of Tasks as opposed to Mailboxes of Tasks. I updated the old comment. Basically, I had written port blurPort : Mailbox (Task error ()) and it should be port blurPort : Signal (Task error ()) Normally this should go through the compiler well. 
This is a possibility, but given that you need an extra port etc. I think it's fair to call this a hack. Not something I'd recommend. 
Ah, okay. That makes sense. Thanks for correcting.
I found this bash script online in a link [here](http://stackoverflow.com/questions/12048352/my-cabal-packages-are-fubar-how-can-i-purge-them-and-start-over), and I would have to run it periodically to clear out global cabal stuff: # unregister broken GHC packages. Run this a few times to resolve dependency rot in installed packages. # ghc-pkg-clean -f cabal/dev/packages*.conf also works. function ghc-pkg-clean() { for p in `ghc-pkg check $* 2&gt;&amp;1 | grep problems | awk '{print $6}' | sed -e 's/:$//'` do echo unregistering $p; ghc-pkg $* unregister $p done } # remove all installed GHC/cabal packages, leaving ~/.cabal binaries and docs in place. # When all else fails, use this to get out of dependency hell and start over. function ghc-pkg-reset() { read -p 'erasing all your user ghc and cabal packages - are you sure (y/n) ? ' ans test x$ans == xy &amp;&amp; ( \ echo 'erasing directories under ~/.ghc'; rm -rf `find ~/.ghc -maxdepth 1 -type d`; \ echo 'erasing ~/.cabal/lib'; rm -rf ~/.cabal/lib; \ # echo 'erasing ~/.cabal/packages'; rm -rf ~/.cabal/packages; \ # echo 'erasing ~/.cabal/share'; rm -rf ~/.cabal/share; \ ) } ghc-pkg-reset I name the script `fubar.sh` but since I started doing everything in sandboxes I haven't needed it in a while!
Works great! Can't wait to start playing in my Elm sandbox now :).
.NET and Java now have it, as part of their suite of collection methods in LINQ/Stream apis respectively
Awesome, glad I could help! Let us know if you run into any other issues! :)
So what is the recommended way of creating web apps? Are we supposed to use Graphics.Element and Graphics.Collage for layout and content? Or should we make apps using the html package, and use css for styling and layout?
If I was going to make a typical app, I'd use elm-html. This has the major benefit that you can use every part of HTML and CSS, so if you want an experimental or fancy feature, it's going to be there. This has the major downside that you can use every part of HTML and CSS, so vertical centering still sucks :) For that reason, *I* tend to use a mix, depending on what fits my particular goals. I know other people who are coming from a webdev background who have never looked at `Graphics.Element` and such. I know others who are coming from more backend backgrounds who want to avoid HTML and CSS so they never use elm-html. For someone new to Elm, I'd just recommend following tutorials and examples long enough to get your bearings and then you'll be able to pick the balance that is best for your goals. Does this give a good starting point?
Yes this helped quite a bit, thanks for the quick reply. As far as vertical centering or any other layout issues with CSS, I found that they are easy to fix by using flexbox. That being said I still find plenty of issues with HTML and CSS and do not understand why we cannot simply make our whole programs using a language which gives us proper ways of abstracting and reasoning about our code. This is why elm is so enticing to me. I am still new to functional languages so it is taking me a bit of time to recreate things I would have done in other languages but so far I love it. Because of this I would really like to try to make my whole app using Graphics.Element+Collage and I am happy to hear that this is a valid approach that is recommended by you. I still have some questions about the process. How would I add blur effects or shadows, or any of these other styles that are available in css such as borders or margins and paddings. Is everything simply to be treated as a absolute position and the values are to be computed using functions? So if I want something to have a "margin right of 10px" I would say its x is the width of the screen - 10? Lastly how is the performance of this? I know that when I inspect the dom tree it seems like it is using canvas behind the scenes. While I have read the blog post regarding html performance I did not see anything that talked about this method. Do you get the same benefits?
Do you mind asking about this on [the mailing list](https://groups.google.com/forum/#!forum/elm-discuss)? I'm having trouble getting to all the questions and I think folks on the list can help. The short version is that Element maps onto HTML, but is a bit behind elm-html in terms of features. Collage goes down to canvas and HTML sometimes. The same tricks can be used as with elm-html, but this stuff was all created well before that so some of the more sophisticated tricks are not added yet.
I don't know of a book-like resource that is up to date with 0.15, but there is quite a lot of info scattered around that covers quite a lot! For example, the [Learn](http://elm-lang.org/Learn.elm) page looks disorganized, but there's a lot of helpful stuff there! For getting into functional programming in general, I think these things are helpful: * [Basic Values and Types](http://elm-lang.org/learn/Understanding-Types.elm) * [Union Types](http://elm-lang.org/learn/Union-Types.elm) and [Records](http://elm-lang.org/learn/Records.elm) * [example and exercises](http://elm-lang.org/edit/examples/Functional/Tree.elm) on building binary trees For getting started with web-app-type-things: * [The Elm Architecture](https://github.com/evancz/elm-architecture-tutorial#the-elm-architecture) has some very simple examples and outlines the basic shape of every Elm program. It does HTML things, but the pattern works for games, 3D, etc. * For a deeper dive, I'd check out [elm-todomvc](https://github.com/evancz/elm-todomvc) which is a larger iteration of the Elm Architecture. Hopefully that is a reasonable starting point! It's a priority for me to improve the "get started" experience, so I am working on a website redo that'll have a much clearer "learn elm tutorial" so I would be very interested to hear your thoughts as you start to learn stuff! What was hard, what was hard to find, what was missing, etc.
Thanks for the thoughtful response! The documentation from elm-lang.org is fantastic actually, and I think it is pretty clear in its current state. :) I probably should have clarified that I was looking for resources in addition to the main website. I was hoping an elm book existed that I had overlooked, or a few in-depth elm tutorials (always nice to have the same material repeated with slightly different perspectives from different people). I look forward to working my way through the elm-todomvc!
Do you mean 'Sneak Peek'?
From what I understand, they're working on a pure CSS Material design lib. So we should be able to use that just like we use bootstrap. Yeah, sneak peek :-)
Thanks for the response. I probably should have asked a meta-question about the state of elm and the goals of the language. Something like: Is it realistic to use elm v0.15 in production? 
[Talk Schedule](http://degoesconsulting.com/lambdaconf-2015/#schedule-h1)
Yes, I think it realistic to use Elm in production right now. I have two private open source projects using it ([EditGym](https://github.com/Dobiasd/EditGym) and [RedditTimeMachine](https://github.com/Dobiasd/RedditTimeMachine)) and our company is using an inhouse tool written in Elm on a daily basis. OK, since it is not version 1.0 yet, there are some breaking changes with every Elm update. But up to now it was always quite easy to port the projects to the newer version.
I'm at a total loss why you do not simply use `elm-make` to turn your `.elm` file into an `.html` file (with inlined JS), then put that static file at the desired route on your server. If you want a menu that is used for dispatching to various Elm applications, you could write that dispatcher as a simple CGI script (in whatever language) that will serve links to the different `.html` files created by `elm-make` from your different `.elm` files.
Wow, OK. Now I feel dumb, but somehow this did not occur to me at all. All the Googling I had done turned up tutorials on how to setup Elm on a Yesod server, or how to use `elm-reactor`, so I was thinking I needed Yesod or `elm-reactor` to interpret the Elm program, like how a PHP server interprets a PHP program. Plus, all the URLs of the example programs at `elm-lang.org` have an ".elm" suffix, so again, that made me think it worked like PHP. So I got to thinking whether there might be a simple stand-alone server that just interprets the Elm in a single process and returns the result without needing Yesod or `elm-reactor`. But hey, static HTML+JavaScript with a CGI backend is absoultely perfect. Thanks!
Don't forget the link!
Woops. Edited.
You do that with [trampolines](http://package.elm-lang.org/packages/elm-lang/core/2.0.1/Trampoline) The idea is that you change a recursive function to something that looks a bit more like the body of a loop. So, you'd change your code from getTriplet : Int -&gt; Int getTriplet i = let a = i b = (i + 1) c = (i + 2) triplet = a^2 + b^2 == c^2 sum = a + b + c == 1000 product = a * b * c in if triplet &amp;&amp; sum then product else getTriplet (i + 1) to: getTriplet : Int -&gt; Int getTriplet i = trampoline (getTriplet' i) getTriplet' : Int -&gt; Trampoline Int getTriplet' i = let a = i b = i + 1 c = i + 2 triplet = a^2 + b^2 == c^2 sum = a + b + c == 1000 product = a * b * c in if triplet &amp;&amp; sum then Done product else Continue (\() -&gt; getTriplet' (i + 1)) Thing is, this will go off into an infinite loop. This is because there's something wrong with your solution. You are assuming that the pythagorean triplets are adjacent to one another. The problem only says that a &lt; b &lt; c not that b = a + 1 c = a + 2 So, one way you could do this is by generating all 3-tuples (a, b, c) such that a &lt; b &lt; c &lt; 998. From there, you could look for the one that satisfies the conditions.
Thanks for the reply! Besides trampolines are there any other useful methods for optimization that I should read about? I would really like to learn more about how to properly do things in Elm, so I thought Project Euler was a good place to give me interesting problems. As far as what you are saying about my solution, that i'm making false assumptions and all we know is that (a &lt; b &lt; c), how should I approach this type of problem? Im guessing that mapping over ever possible a, mapping that with every possible b, and again mapping this one more time with every version of c is extremely inefficient. However, I cannot figure out what other assumptions i'm allowed to make that can narrow my number of possibilities.
IIRC it was removed because the API was quite ill fitting. You can very easily recreate the old API using ports if you'd like. I find this allows much finer control as well (until a more solid API reappears in core).
We should try this once I master/get better at Elm
Already tried this, and the problem I ran into was lack of memory. Even though Espruino comes with more memory it does not seem to be enough for Elm runtime to work. I haven't done a thorough investigation. Maybe the dead code elimination project will help here bit not sure. 
Cool. Nice to see Elm used for non-games apps as well.
Ok so I was able to make a very basic version that does kind of what I wanted, but the performance seems a little bad. Can somebody please tell me what I am doing wrong, and how I can implement a better version of something like this? Here is the link: [demo](http://share-elm.com/sprout/556970e5e4b06aacf0e8a045)
Your example looks ok to me(total elm newbie). What exactly are you looking for? A more idiomatic coding style or something for the specific problem you try to solve?
&gt; arrowized frp with automatons I don't know what that mean. :) &gt; Web GL All web developers face the same dilemma about WebGL. It depends on your audience and what you are trying to do. 
Hmm, I probably should have title it, "is Elm ready for production?" I was trying to add the context of "I don't know web stuff because I'm a mobile developer" by referencing the mobile part. Thanks for your reply though. 
Someone who had made at least one previous project with elm, available full time and an hourly rate lower than 100eur.
Wow I wasn't expecting such a kind reply... Thanks a lot! We spent quite a lot of time making sure that it would be the good decision
Sounds like the right call from a product perspective. If you can't reliably secure talent for some technology, you definitely shouldn't be using it in your stack. &gt; As he initially expressed his intention to work for us in the long term we had let him program using the ELM programming language. Sucks that you learned the lesson the hard way. You have to be really defensive and anticipate what happens when contractors decide to peace out. Good luck with the remainder of your project!
Actually, in general, what if there is a combination of 'Maybe's' and 'Result String a' being returned in intermediate functions, what is the best way to handle this stuff? 
This is a job for `andThen` parseRawTime : String -&gt; Result String Int parseRawTime rawTime = let values = String.split ":" rawTime in case values of minutes :: seconds :: milliseconds :: [] -&gt; String.toInt minutes `andThen` \min -&gt; String.toInt seconds `andThen` \sec -&gt; String.toInt milliseconds `andThen` \mil -&gt; if validSecond sec &amp;&amp; validMinute min &amp;&amp; validMillisecond mil then Ok (numberOfMilliseconds min sec mil) else Err "Parse error" _ -&gt; Err "Parse error" Where, I defined the following helpers validSecond : Int -&gt; Bool validSecond s = s &gt;= 0 &amp;&amp; s &lt; 60 validMinute = validSecond validMillisecond : Int -&gt; Bool validMillisecond ms = ms &gt;= 0 &amp;&amp; ms &lt; 1000 numberOfMilliseconds : Int -&gt; Int -&gt; Int -&gt; Int numberOfMilliseconds minutes seconds milliseconds = milliseconds + (1000 * seconds) + (60 * 1000 * minutes) It's important to note that both our approaches are equivalent and that doing this error handling is important from a type point of view because it helps you make fewer mistakes. Now, that said, andThen helps a lot here because you can just chain these things
thanks a lot for this reply. I read about 'andThen' but didnt really see yet how to chain it properly, but this example gives me good insights. also: +1 for the pattern matching after the split in the case. Of course that's a way nicer way to do things, rather than looking it up in the list by index. 
That's beautiful :) 
A software renderer in Elm? Very nice! Good job!
There's [`Result.fromMaybe`](http://package.elm-lang.org/packages/elm-lang/core/2.1.0/Result#fromMaybe), where you can name the `Nothing` case: orFailWith = flip Result.fromMaybe Just 4 `orFailWith` "Nope" -- Ok 4 Nothing `orFailWith` "Whoops" -- Err "Whoops" Defining `orFailWith` as an infix operator (easier to read iff you know what the operator means): (&lt;?&gt;) = flip Result.fromMaybe Nothing &lt;?&gt; "Nope!" -- Err "Nope!" Combine this with `Result.andThen` and you are good to go! It's kind-of like exceptions.
All Elm content is static, it just consist of html, js and css. Isn't it?
Elm sources are not static. You need to run `elm make` to create the final JS and/or HTML. This buildpack takes care of installing the elm tools, and running elm-package and elm-make for you. In other words, you only need to push your app containing the relevant *.elm files (and elm-package.json, etc.), and the buildpack takes care of the rest.
At first I could not believe it does not use OpenGL. :D Looks very nice, great work.
This is my first app written in Elm. I am interested in your comments. I would like to know if there is anything else I can improve my code. Source: https://github.com/unbalancedparentheses/radioelm/blob/master/src/radio.elm Live: https://unbalancedparentheses.github.io/radioelm
I really like it. Nice and simple interface, nice colors. Edit: Btw. your blog seems offline http://blog.federicocarrone.com/
Thanks! I changed the url of my blog and I forgot to update it: https://medium.com/@unbalancedparen
Argentinian music &lt;3
I wish...
The clickable things should have `cursor: pointer`.
You may not be doing a webapp or anything, but I'd highly recommend reading [this tutorial](https://github.com/evancz/elm-architecture-tutorial/) if you haven't yet! It goes into the typical way to architect Elm programs, whether they are games or webapps or whatever. It looks like you found it, but it sounds like `Signal.merge` will help you out. My other advice would be "signals are much less important than you probably think." Lots of people think it's gonna be just like ReactiveX or Bacon.js where there are streams everywhere. It's not! You will get resistance from the signal library if you try to do that (and your code would end up bad if you did not get that resistance!)
That is a css property. Do you know if there is a way to configure Graphics.Input.clickable so that it changes the pointer?
That sounds great!
I actually suggest you read the Pong.elm code. The way it is often done is codifying your inputs into a type like Input which is a record of each underlying input. 
Wow, coming from AngularJS this feels like a breath of fresh air. I'm going to start experimenting with Elm.
Another great addition to Elm that will make debugging easier! I have a small suggestion though: when showing type errors, for the sake of clarity, it would be nice to see which type is `expected` and which one is `given`: expected: Html given: String
The short answer is: not yet. This is called higher kinded polymorphism: a is said to have a higher kind than b since it takes a parameter. There's some discussion on whether the extra complexity introduced by hkp is too much to add it to the language, but I personally think it would be a useful feature to add at some point. 
If you just want the result with a default value if it errors, you can do this: String.toInt "5" |&gt; Result.toMaybe |&gt; Maybe.withDefault 0 which is the same as (Maybe.withDefault 0 (Result.toMaybe (String.toInt "5"))) This converts the result to a Maybe (value of Nothing if it errors) and then returns either the value or a default of 0 if it errors. You can make this a function as well safeToInt = String.toInt &gt;&gt; Result.toMaybe &gt;&gt; Maybe.withDefault 0 I've just started learning elm myself, suggestions always appreciated.
Thank you!
This seems like a really nice way of doing it. Thanks!
&gt; that this looks cool! good job! Thank you :)
Thanks. This week I'm refactoring it based on ideas I have and scribbled on papers last weekend. Once it's in its new form, I'll take your advice and get myself involved in the mailing list. Your advice is appreciated :)
Thank you so much for this!
Man. I've never seen anyone give such good free advice over the internet. This really makes me want to dig even deeper into the language. Thanks a lot Seamau5... as if your contributions to the language libraries weren't enough.
Beautiful.
Beautiful results, very nice diagram based writeup. 
Hey, that is beautiful. I wonder if representing numbers this way is in any sense more efficient than a standard binary representation (if you are allowed to use only trees).
Here's a basic template (in Elm) you can work on. type alias Stack switch = -- A stack has a bunch of switches { switches : List switch , ... -- some bells and whistles here } type Action switchAction -- The actions on the stack = SwitchAction Int switchAction -- switches are id'd by index -- you can add additional actions here that are stack-related if you wish update : (switchAction -&gt; switch -&gt; switch) -&gt; Action switchAction -&gt; Stack switch -&gt; Stack switch update updateSwitch action stack = case action of SwitchAction index switchAction -&gt; -- we case split on the actions and get the index { stack | switches &lt;- List.indexedMap (\n switch -&gt; if n == index then updateSwitch switchAction switch else switch) stack.switches } -- we then only update the switch whose index matches that of the action view : (Address switchAction -&gt; switch -&gt; Html) -&gt; Address (Action switchAction) -&gt; Stack switch -&gt; Html view viewSwitch address stack = let viewN index switch = let switchAddress = -- each switch needs its own address Signal.forwardTo address (SwitchAction index) -- the index is used in the creation of the address -- which is what helps us determine which switch sent what action in viewSwitch switchAddress switch in Html.div [] ( List.indexedMap viewN stack.switches ) -- we simply use indexedMap to view all the switches This template holds from a correctness standpoint as the actions will be routed to the appropriate switch and the actions produced by the switches will be appropriately captured. Furthermore, you can notice that this template makes no assumptions on how to update switches or how to view them. This is a totally generic template that can apply to anything. This is good practice because the more generic your components are, the less likely you are to cheat and add specific flags and other nasty things that make your code more error prone. Note, the Address bit is specific to Elm, but the main idea is to use the index of the switches as an identifier which you can then use to update it. If you are worried about performance, do not save your switches in linked lists. Use persistent Arrays/Vectors. [Haskell Vectors](https://hackage.haskell.org/package/persistent-vector-0.1.0.1/docs/Data-Vector-Persistent.html). [Elm Arrays](http://package.elm-lang.org/packages/elm-lang/core/2.1.0/Array). These offer near constant time lookups and updates and that would save you from calling indexedMap. I don't know to what extent this applies, but [here's a tutorial I made a while ago](https://github.com/TheSeamau5/elm-checkerboardgrid-tutorial) that perhaps could help (seeing code never hurts in my experience).
I'll just leave this here: http://chrisdone.com/posts/path-package It builds an abstraction layer of the filepath library, I thought I'd mention it for reference. Keep it up!
Encode the differences between posix/windows in a record type. Something like { pathSeparator : String }. Parametrize all functions by this record type so they take in a record and use that for their path separators. This can be an opaque type where you ony export the type name but not constructor. Now expose two elements of this type called "posix" and "windows" that users can pass into the functions.
Now that I'm off my phone, here is what I mean: http://share-elm.com/sprout/55aa5f03e4b06aacf0e8b504 First, create a record type: type PathType = PathType { pathSeparator : String, pathSeparators : List String } This encodes the only differences between Posix and Windows in your two files. The two elements of this type that we create are: windows : PathType windows = PathType { pathSeparator="\\", pathSeparators=["\\", "/"] } posix : PathType posix = PathType { pathSeparator="/", pathSeparators=["/"] } Now we rewrite the functions to accept a `PathType` argument, which is where they get `pathSeparator` and `pathSeparators` from. For example, isPathSeparator : String -&gt; Bool isPathSeparator = flip List.member pathSeparators becomes isPathSeparator : PathType -&gt; String -&gt; Bool isPathSeparator (PathType { pathSeparators }) = flip List.member pathSeparators We can use this function like so: isPathSeparator windows "\\" isPathSeparator posix "\\" The first is `True`, and the second is `False`. I used a type (and not a type alias) for `PathType` so you can export `PathType`, `windows`, and `posix`, but _not_ export the data constructor for `PathType` (which we would do by exporting `PathType(..)`). This means users of your library can only use `windows` and `posix` as element of `PathType`, but they cannot create their own elements. This is a matter of taste, and you don't need to do this. If you want, you can use a type alias for the record instead. Then you don't need to tag the records with the `PathType` data constructor, and anyone can create a `PathType` to use in the functions. An added benefit is that users can now programmatically manipulate which standard to use, and do something like `List.map isPathSeparator [posix, windows]`.
https://www.reddit.com/3dr81e http://www.gameinformer.com/membergroups/platform/xbox_360/m/mediagallery1/7575443.aspx https://www.youtube.com/watch?v=O7KPLHaTWek http://badalislam1133.deviantart.com/art/Watch-Cork-vs-Kerry-Live-Stream-Munster-GAA-Footba-547236731
#[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[RTÉ Coverage__@! Monaghan vs Donegal live stream GAA Football 2015 Final Watch Donegal vs Monaghan on 19/07/2015](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)#
#[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)#
#[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)# #[Monaghan vs Donegal Live stream](http://soccer365liveonlinetv.blogspot.com/p/gaa.html)#
================================================ http://watch-livesoccerstreamtv.blogspot.com/ http://watch-livesoccerstreamtv.blogspot.com/ ================================================= http://watch-livesoccerstreamtv.blogspot.com/ http:/
# [**WATCH BRITISH OPEN 2015 FINAL ROUND LIVE**](http://golf.sports365.ml) # # [**WATCH BRITISH OPEN 2015 FINAL ROUND LIVE**](http://golf.sports365.ml) # # [**WATCH BRITISH OPEN 2015 FINAL ROUND LIVE**](http://golf.sports365.ml) # # [**WATCH BRITISH OPEN 2015 FINAL ROUND LIVE**](http://golf.sports365.ml) # # [**WATCH BRITISH OPEN 2015 FINAL ROUND LIVE**](http://golf.sports365.ml) # # [**WATCH BRITISH OPEN 2015 FINAL ROUND LIVE**](http://golf.sports365.ml) # # [**WATCH BRITISH OPEN 2015 FINAL ROUND LIVE**](http://golf.sports365.ml) # # [**WATCH BRITISH OPEN 2015 FINAL ROUND LIVE**](http://golf.sports365.ml) # # [**WATCH BRITISH OPEN 2015 FINAL ROUND LIVE**](http://golf.sports365.ml) # # [**WATCH BRITISH OPEN 2015 FINAL ROUND LIVE**](http://golf.sports365.ml) # # [**WATCH BRITISH OPEN 2015 FINAL ROUND LIVE**](http://golf.sports365.ml) # # [**WATCH BRITISH OPEN 2015 FINAL ROUND LIVE**](http://golf.sports365.ml) # TEE TIMES (ET) , , 2:45 a.m. -- Ryan Fox, Bernhard Langer , 2:55 a.m. -- Scott Arnold, Paul Casey , , 3:05 a.m. -- Francesco Molinari, Thomas Aiken , 3:15 a.m. -- Ross Fisher, Cameron Tringale , 3:25 a.m. -- Bernd Wieberger, Mark O'Meara , 3:35 a.m. -- Billy Horschel, Branden Grace , 3:45 a.m. -- David Howell, Jamie Donaldson , 3:55 a.m. -- Henrik Stenson, Matt Kuchar , 4:05 a.m. -- Graeme McDowell, Gary Woodlan , , 4:15 a.m. -- Brett Rumford, Richie Ramsay , 4:30 a.m. -- Thongchai Jaidee, Ernie Els , 4:40 a.m. -- Brendon Todd, Lee Westwood , 4:50 a.m. -- Russell Henley, Greg Owen , , 5:00 a.m. -- Romain Langasque (a), David Lipsky , 5:10 a.m. -- Phil Mickelson, James Morrison , , 5:20 a.m. -- Kevin Na, Oliver Schniederjans (a) , , 5:30 a.m. -- Harris English, Rafael Cabrera-Bello , 5:40 a.m. -- Graham DeLaet, John Senden , 5:50 a.m. -- Luke Donald, Geoff Ogilvy , 6:00 a.m. -- Jimmy Walker, Webb Simpson , 6:15 a.m. -- Martin Kaymer, David Lingmerth , 6:25 a.m. -- Andy Sullivan, Marcus Fraser , 6:35 a.m. -- Ben Martin, Jason Dufner , 6:45 a.m. -- Hunter Mahan, David Duval , 6:55 a.m. -- Paul Lawrie, Anirban Lahiri , 7:05 a.m. -- Matt Jones, Brooks Koepka , , 7:15 a.m. -- Greg Chalmers, Ashley Chesters (a) , , 7:25 a.m. -- Jim Furyk, Dustin Johnson , , 7:35 a.m. -- Marc Warren, Hideki Matsuyama , , 7:45 a.m. -- Anthony Wall, Stewart Cink , , 8:00 a.m. -- Patrick Reed, Ryan Palmer , , 8:10 a.m. -- Rickie Fowler, Steven Bowditch , , 8:20 a.m. -- Charl Schwartzel, Eddie Pepperell , , 8:30 a.m. -- Danny Willett, Zach Johnson , , 8:40 a.m. -- Adam Scott, Robert Streb , , 8:50 a.m. -- Retief Goosen, Justin Rose , , 9:00 a.m. -- Sergio Garcia, Jordan Niebrugge (a) , , 9:10 a.m. -- Marc Leishman, Padraig Harrington , , 9:20 a.m. -- Jordan Spieth, Jason Day , , 9:30 a.m. -- Louis Oosthuizen, Paul Dunne (a) , 
 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 To watch and download go to ===&gt;&gt;&gt; http://www.blockbusterone.com/ant-man/ To watch and download go to ===&gt;&gt;&gt; http://movies-near-you.com/m/Ant-Man-560 
this is all going to be out of date in like...3 weeks, calling it now.
I posted this in /r/rust as well since I think it is very relevant: https://www.reddit.com/r/rust/comments/3e4917/user_focused_design_in_elm/ Overall the comments about Elm were very positive, however, one complaint that resonates with me is "How do I actually make a web app?" Pasting code into Elm is cool, but there is a huge disconnect between that and running it in your own website. I have been developing using elm reactor exactly because I don't actually know how to render this code in a browser. I haven't looked too hard for the solution, as I don't need it yet. But at some point, some guides about how to make this work with the rest of a clientside web app would be great. 
✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪--------------------------------------------------------------------------- ✪--------------------------------------------------------------------------- # ➽✦» PLAY NOW!!! ◯ ➤ ➤ ➤ http://orimovie.com/index.php?movie=2096673 # ➽✦» PLAYLIST MOVIE!!! ◯ ➤ ➤ ➤ [watch full MOVIEs LIST click here!!](http://dodolanpilem.info/index.php?movie=2120120) ✪---------------------------------------------------------------------------
We try pretty hard to keep core APIs stable. There are *sometimes* minor syntax changes, but I make sure to space them out so any individual update is pretty easy. Folks who have been using Elm for a while can attest to this :) I also talked with the designer of this course a bunch to make sure he stayed within a subset of Elm that was as stable as possible. He also planned it such that he could easily rerecord things if there were any changes. So yeah, there is inherent uncertainty in a young language, but I feel like this guy is overstating things a lot, especially given how much work we put into making things as stable and gradual as possible without hurting our ability to evolve and explore.
I somehow have the impression that we could get rid of 80% of it by automatically deleting all posts which contain the word "movie". I think AutoModerator could do that.
Ah, awesome, I did not know about AutoModerator! I just put in a trial rule, so we'll see how it goes. Thanks for the tip!
Elixir with [Phoenix](http://www.phoenixframework.org/) seems nice. A functional language with the concurrency of the Erlang VM. If I was less adventurous I would probably go with Python/Flask.
I have reported a few I hope the automatic tool works
True, and not too dissimmilar from elm.
http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com http://mlblivesports.blogspot.com 
I like Elm as well, I'm quite new myself though. I noticed that sometims you write stuff that don't have to be written. An example from your article is `(\action model -&gt; update action model)` where instead you could just replace it with `update` as there is no point in wrapping a function in an anonymous function just to pass it, they are always first-class so passing any function is fine. On top of that it's always curried, so you can even pass partially filled functions and use them like alternative functions (even though that's not your situation here.)
We auto remove anything from brand new accounts with automoderator (created within the day), it works fine.
Conal is another purist snake-oil salesman who has yet to create an efficient implementation of this "amazing idea" of his and yet still has the audacity to pooh-pooh other implementations because they don't meet every point on his (impossible to implement) checklist.
*** #[Click here to Watch Teen Wolf Season 5 Episode 6](http://mixmaxlink.com/teenwolf5x6) #[Click here to Watch Teen Wolf Season 5 Episode 6](http://mixmaxlink.com/teenwolf5x6) ***
*** #[Click here to Watch Love &amp; Hip Hop Atlanta Season 4 Episode 14](http://mixmaxlink.com/atlanta4x14) #[Click here to Watch Love &amp; Hip Hop Atlanta Season 4 Episode 14](http://mixmaxlink.com/atlanta4x14) *** *** #[Click here to Watch Love &amp; Hip Hop Atlanta Season 4 Episode 14](http://mixmaxlink.com/atlanta4x14) #[Click here to Watch Love &amp; Hip Hop Atlanta Season 4 Episode 14](http://mixmaxlink.com/atlanta4x14) *** 
Wow. That's sooo much faster than webgl for me. Crazy
watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html watch it here&gt;&gt; http://livehdtvstream.net/tvseries/teenwolf-s5-ep6.html 
WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ 
WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ WATCH HERE TEEN WOLF S5E6 ONLINE FREE &gt;&gt; http://tvseriesandmovies.org/comedy/watch-teen-wolf-season-5-episode-6-required-reading/ 
▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)** ▬►**[CLICK HERE TO WATCH FULL EPISODE!!](http://trends-and-virals.info/watch-teen-wolf-season-5-episode-6-required-reading-online-stream/)**
**[CLICK HERE TO WATCH FULL EPISODE!!](https://www.youtube.com/playlist?list=PLbUABSor56yEN9eGTb6_ApKcTcgrb0-vc)** **[CLICK HERE TO WATCH FULL EPISODE!!](https://www.youtube.com/playlist?list=PLbUABSor56yEN9eGTb6_ApKcTcgrb0-vc)** **[CLICK HERE TO WATCH FULL EPISODE!!](https://www.youtube.com/playlist?list=PLbUABSor56yEN9eGTb6_ApKcTcgrb0-vc)** **[CLICK HERE TO WATCH FULL EPISODE!!](https://www.youtube.com/playlist?list=PLbUABSor56yEN9eGTb6_ApKcTcgrb0-vc)** **[CLICK HERE TO WATCH FULL EPISODE!!](https://www.youtube.com/playlist?list=PLbUABSor56yEN9eGTb6_ApKcTcgrb0-vc)** **[CLICK HERE TO WATCH FULL EPISODE!!](https://www.youtube.com/playlist?list=PLbUABSor56yEN9eGTb6_ApKcTcgrb0-vc)** **[CLICK HERE TO WATCH FULL EPISODE!!](https://www.youtube.com/playlist?list=PLbUABSor56yEN9eGTb6_ApKcTcgrb0-vc)** **[CLICK HERE TO WATCH FULL EPISODE!!](https://www.youtube.com/playlist?list=PLbUABSor56yEN9eGTb6_ApKcTcgrb0-vc)** **[CLICK HERE TO WATCH FULL EPISODE!!](https://www.youtube.com/playlist?list=PLbUABSor56yEN9eGTb6_ApKcTcgrb0-vc)**
Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html Watch here now FUll Episode Love and HIp HOp Atlanta S4E14&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html LEGIT AND WORKING LINK&gt;&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html FREE Stream Online&gt;&gt; http://looks-and-charm.blogspot.com/2015/07/watch-love-and-hip-hop-atlanta-season-4_27.html
Thanks for the detailed response! My vision at the moment is to structure it much like the way Elm renders HTML, but to have a `main` function return something else which would translate into graphical elements. It would also be nice to make some kind of direct drawing capability available, perhaps reusing what Elm can already do with a `&lt;canvas&gt;`. It's not so much that I want to avoid writing C because I don't like it; I want to provide a plugin that will let the user write (parts of) their motion graphics composition in code, and compiling C from within an application seems harder than doing the same for Elm. Really, though, I'd love to avoid running through JS altogether. At that point, am I just describing Haskell with an FRP library? Do you have a sense of how hard it would be to embed a Haskell compiler/interpreter into an application?
(Also new to Elm) Graphics is for shapes (e.g. games) if you want standard Html use: * Html * Html.Attributes * Html.Events see http://package.elm-lang.org/packages/evancz/elm-html/3.0.0/Html-Attributes#style
That's it exactly. In the simplest case, the main function would take a `t` value; in more complex cases, it might be useful to send in other values that change over time, which ports seem like a nice way to implement.
Try [this website](http://outreach.mcmaster.ca/) for the tutorials in Evan's presentation. Regarding HTML, CSS and JS... the story is a little bit more complicated. You can use the Html module to create html using helper functions OR you can use the Graphics module for Elements that get compiled to Html behind scenes. Which one is best, depends on what kind of application are you trying to do. If all you want is graphics then you might not need the Html module. If you require precise Html+CSS output, you might want to go for the Html module. 
Yeah, I'd like to do a class like that again! I don't have short term plans to do something like that though, focusing on fleshing out certain concepts to really "finish" Elm for web application work. For now you may want to look at [this course](https://pragmaticstudio.com/elm) which was made by a guy who got inspired by Elm and has been doing video tutorials for a while now.
Nothing happens if you don't follow the style guide. Certainly not on 1 person side project. Yes I think the view functions could be made more pleasant to look at but even when I tried this personally it didn't make it any easier to write and keep track of nesting and commas. I also could have broken the functions down into smaller functions which would also help, and maybe I will soon. My issues could well be due to the muscle memory I built up using Clojure/ClojureScript which makes writing nested structures very easy.
I'm pretty new at Elm, but based on the documentation I've read, I think I can provide an answer. The idea is to use the `fps` function to generate a signal for physics updates, use `foldp` over that to generate a signal for the physics state, then use `map2` to combine that state with the latest frame delta coming from another signal that updates every frame. This should produce a signal that updates every frame, but uses the physics state that has been updated at a fixed rate. You can then use this as the view update signal. The question then is how to produce the every-frame signal. I can't find a definitive source, but there is some discussion [here](https://groups.google.com/forum/#!topic/elm-discuss/ZwwivXw3w-I). It is quite old, and there may be something better that has arisen since.
Thanks! This doesn't seem to get at the root of the problem though. Rather than having a signal that provides me with a fast frame delta, I want something like a 'while (true)', so the rendering happens as quickly as permitted by the hardware, not some contrived clock signal. Maybe you could achieve something like this with a signal that is both an output and input to/from the main function? I don't know enough about the Elm runtime to know if a "continuous" or circular signal is possible.
That is what I intended - just that the frame delta signal is the result of this rendering-as-quickly-as-possible - an abstraction around it. It updates every time the loop goes round once, and is passed a frame delta (and maybe the real time as well). The main issue is figuring out how to make this play nicely with JavaScript and how Elm deals with graphics updates behind the scenes. If implemented as a library, the behind-the-scenes of this signal would be in JS. This would probably require careful use of `requestAnimationFrame`. Some experimentation is in order. Edit: also, be aware that in JS, updating the scene doesn't work in a loop - you instead register callbacks to execute every frame, and request redraws as necessary - if you request a redraw in the frame callback you get fast-as-possible rendering (I think, I'm not an expert).
You could implement the accumulator in JavaScript using requestAnimationFrame and pass the frame data into an elm port when it accumulates a whole frame. You can't render (or be notified of frames) faster than once per animation frame (capped at 60fps) in browsers as far as I know, but elm should draw the last thing output by main at the end of the animation frame. Edit: To clarify, doing while true in a browser will just lock up the tab because the browser doesn't do a buffer swap until after JavaScript finishes executing for the current frame, thus you need to use the animation frame callback, which is just called on a 16ms timer by the browser just before it draws and does a buffer swap
I'd been meaning to watch that, thanks. Yeah, very interesting... but I think Elm can go even further. I'd like to see the Elm Architecture design extended into the backend with a [Haste.App](http://haste-lang.org/haskell14.pdf) kind of approach, combined with some kind of immutable signal persistence. This way, your entire application (perhaps even your entire business domain) is modeled as a single (conceptual) program, all of your communication is type-safe, and your data is basically just implicit. 
It's possible that Elm can go further, that's certainly something I'd like to explore. I took a look at the Haste.App PDF you shared, I'd be lying if I said I absorbed it all, but I tried to get a picture about how it handled data. The general gist I'm getting is that Haste.App wants to enable listeners (the client listening for data changes server side and reacting accordingly) and requests (the client passing a JSON object as a request to the server, and receiving a JSON object in return). Is that a fair summary? I realise I'm leaving aside the other Haste.App features that were discussed, I'm mainly interested in how to get data to the client. Does Elm already implement the listener feature?
It's been a while since I read the paper. I guess I should read it again, but I think that the basic idea of *compiling twice with different libraries* is enough to take a crack at a proof of concept. I expect that implementing the basic idea in Elm will be more straightforward than fully grokking the details of the paper. This idea has been nagging at the back of my mind for months, and I've been trying to keep quiet about it until I'm strong enough with Elm to actually work on it! Now that I've slipped up and mentioned it a few times, I guess I'd better play around and see how far I can get... The other thing (like I mentioned) is persistence, and for that I think we need some kind of facility for event sourcing. Like Elm Reactor, it should save all of your events, so that when the app is rebuilt we just roll through them all again to rebuild the current state of the signal graph. But it should persist all those events forever *somewhere*. Most of it can be compressed since you only need the old events when you change the model, update, or signal graph. The rest of the time, you're just starting from the most recent snapshots. I'd like to play with this idea also, starting out with ye old humble filesystem as the system of record, where each signal gets a directory of compressed event streams. Later (if this even works), I imagine each signal getting it's own data and service containers...
&gt; "But it should persist all those events forever somewhere. Most of it can be compressed since you only need the old events when you change the model, update, or signal graph. The rest of the time, you're just starting from the most recent snapshots." So a log of diffs? Seems like the most straightforward solution. To be honest it seems like something it's best to implement including a database, do you intend to use a database? Do any Elm libraries for interfacing with databases currently exist? Guess you could use a wrapper around a suitable JS library. &gt; "Now that I've slipped up and mentioned it a few times, I guess I'd better play around and see how far I can get..." Good luck, will look out for your progress on this subreddit. Going back to the original topic, what's your opinion on the query syntax mentioned in the video? Do you also prefer the Datomic pull syntax over JSON for data queries? http://docs.datomic.com/pull.html
I can't think of a reason to implement queries. I just want my models to be magically persistent. (If you think I'm missing something, please let me know!) As for using a database... I don't know; maybe. I'm still considering [Event Store](https://geteventstore.com), [Samza](http://samza.apache.org/) ([Turn your database inside out](https://www.youtube.com/watch?v=fU9hR3kiOK0)), [Kafka](http://kafka.apache.org/)... (haven't really looked at Datomic). But I prefer the idea of building something tightly integrated with Elm. We don't need things like random reads, for instance. We only ever read sequentially through the event stream to build a materialized view. On changes, we start at the beginning and rebuild; other times, we just start from the latest snapshot, and only roll through the stream of events that have occurred since then. &gt; Good luck Thanks :) 
I do it this way: type Foo = Foo { a : Int , b : String , c : Int , d : String , e : Int , f : String , g : Int , h : String , i : Int , j : String } decodeFoo : Decoder Foo decodeFoo = ("a" := int) `Json.Decode.andThen` (\a -&gt; ("b" := string) `Json.Decode.andThen` (\b -&gt; ("c" := int) `Json.Decode.andThen` (\c -&gt; ("d" := string) `Json.Decode.andThen` (\d -&gt; ("e" := int) `Json.Decode.andThen` (\e -&gt; ("f" := string) `Json.Decode.andThen` (\f -&gt; ("g" := int) `Json.Decode.andThen` (\g -&gt; ("h" := string) `Json.Decode.andThen` (\h -&gt; ("i" := int) `Json.Decode.andThen` (\i -&gt; ("j" := string) `Json.Decode.andThen` (\j -&gt; succeed (Foo {a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h, i=i, j=j}))))))))))) 
- From my experience I can tell you that in general degrees are almost irrelevant in the tech branch. Experience and skill is the most important thing. - There are not a lot of IT jobs where your only job is to do frontend development. However if you know well enough JS+UX/UI plus some rails/django/java you can easily find a job. - Even if in general, at this moment, Argentina is having some serious economic problem (there has not been private sector job generation for the last few years), there are quite a lot IT jobs in comparison with the number of developers available in the market To sum up: I think you should not have problems finding a job as a frontend guy if you a how to create simple REST JSON apis with java, c#, python o ruby. You would not earn a lot in dollars, but you would have good enough sallary in comparison with the rest of the people working in non IT jobs.
&gt; "I can't think of a reason to implement queries. I just want my models to be magically persistent. (If you think I'm missing something, please let me know!)" First of all, thanks for the database links, I watched the whole 'Turn your database inside out' video, and took a look at the websites you linked to. They look promising, I can see potential benefits. Interestingly, Event Store, Samza and Kafka are all based on the 'log of diffs' idea I mentioned before, so it appears we have some consensus on that at least. ;-) Perhaps it's the word 'queries' that is fueling the miscommunication, let's look at it a different way. To explore the 'query' issue, let's change the terms to 'publish' and 'subscribe', which are the terms that Samza uses (Haste.App had similar ideas). In order to have an application that can interface with a database/data store, you need some way for the application to update the database (in this case, 'publish'), and you need some way for the application to receive information from the database (in this case, 'subscribe'). Agreed? The components of the application need some way of specifying what in the database it is subscribing to, and/or what it can publish to. For example, in a video editing application, the audio editing component wouldn't subscribe to the video frame feed, it would subscribe to the audio feed. There needs to be a way to specify that you want the component to subscribe to the audio feed. In Haste.App it appears that the source files are compiled twice, once for the server side service, once for the client side application. However, this kind of dual compilation doesn't negate the need to describe data sources, it just makes sure that the server provides the sources the client requires. With the 'subscribe' style updates, the client can be updated as soon as the underlying data changes, which is beneficial, but the client needs to able to describe what it's looking for in order for this to work. In short, I want to explore how the client describes the data sources it works with, and look at whether Elm would benefit from a clear, compact, composable and declarative syntax for describing the data it subscribes to and can publish to. What are your thoughts on this?
That makes sense. I just think it can (and feel like it should) look pretty much the same as it does now with the Elm Architecture. The difference would be that our signal graph now extends over the network and implicitly persists the values flowing through it. 
First of all, I'd like to know, are the values of the table of the same type? If not, I have no idea how you would do it the way you describe. On the other hand, you could be more explicit and there are multiple ways to be so explicit. My preference goes towards not having functions in the actions. I like my actions serializable (as in, raw data). This is because I can have a server send such actions if I want or store a history of actions for debugging, etc... So, basically, the idea is to find a way to use data to locate your field. You can do this in many ways but my example will be with Union Types as they are most explicit type alias Table = List { field1 : String , field2 : Int , field3 : Float } type Action = SetField1 Int String | SetField2 Int Int | SetField3 Int Float updateN : Int -&gt; (a -&gt; a) -&gt; List a -&gt; List a updateN n f list = List.indexedMap (\index x -&gt; if index == n then f x else x) list update : Action -&gt; Table -&gt; Table update action table = case action of SetField1 row value -&gt; updateN row (\r -&gt; { r | field1 &lt;- value}) table SetField2 row value -&gt; updateN row (\r -&gt; { r | field2 &lt;- value}) table SetField3 row value -&gt; updateN row (\r -&gt; { r | field3 &lt;- value}) table 
Ah, sorry you have a crushing migraine, hope it passes soon. When you're feeling better... &gt; ""the model for this module is this function foldp'd over the signal of users"." ...that's one of the things I'm interested in. Hmm, foldp looks interesting, thanks for the tip atrilumen. http://package.elm-lang.org/packages/elm-lang/core/2.1.0/Signal#foldp Whilst I'd be glad to see custom Elm-based data stores, when working with non-Elm-based databases, as long as they can feed into Elm signals we can use the same data syntax throughout. Wonder if database triggers may be useful here. Perhaps we can find inspiration from other functional languages. These two Haskell libraries caught my eye... http://www.yesodweb.com/book/persistent https://hackage.haskell.org/package/DSH DSH appears to be particularly promising, I'm not sure how well it works but 'turn idiomatic Haskell programs into SQL queries.' sounds like something worth looking into for Elm. If we can mimic Elm signal behaviour in autogenerated SQL (combined with the type safety approach of Persistent), it could be fairly useful when building Elm apps on top of existing traditional infrastructure.
Are there examples out in the open of people using Web Workers and Tasks to achieve this within an Elm application?
This is matter of where you want to push the complexity and what type of complexity do you want. If you want to reason about the `newVal` as one type of thing, you need a tagged union and you can get helper function that will unpack your value and set it in the proper position based on the field's name. [Here is a little code that show this](http://share-elm.com/sprout/55bfa4f2e4b06aacf0e8ba3f). This will allow you to say type Actions = ChangeVal String Int NewVal | NoOp You get to keep your `update` function cleaner but your types get a little more complicated. It's trade-off. 
I don't know the specific answer to your question, but folks have definitely discussed this on [the mailing list](https://groups.google.com/forum/#!forum/elm-discuss) before. My guess though would be "are you changing your attributes or your uniforms?" There's more about that distinction [here](https://github.com/johnpmayer/elm-webgl/#combining-meshes-and-shaders). You want to get your attributes set up once and for all, and then send tiny uniforms across to the GPU.
Well, apparently elm-WebGL intelligently caches vertex buffer objects (according to their github), so I think the triangle mesh is only sent once. Even so, buffering one triangle every frame shouldn't be that costly.
FYI, I'm the creator of elm-matrix :) By nature of the way that "randomness" works, you're always going to have a bit of boilerplate because everything needs to be "lifted" from working on `a -&gt; b` to working on `(a, Seed) -&gt; (b, Seed)` But I don't think yours should be that hard using [Random](http://package.elm-lang.org/packages/elm-lang/core/2.1.0/Random) and the [square](http://package.elm-lang.org/packages/chendrix/elm-matrix/3.0.0/Matrix#square) factory function. import Random exposing (list, int) import Array import Maybe import Matrix exposing (square, Matrix, row, col) import Graphics.Element exposing (show) startingSeed = Random.initialSeed 1002983 m : Int -&gt; Matrix Int m width = let pullFromArray = list (width * width) (int 1 10) |&gt; (flip Random.generate) startingSeed |&gt; fst |&gt; Array.fromList pullFrom i = Array.get i pullFromArray |&gt; Maybe.withDefault -1 valueAt location = let r = row location c = col location in if | r == c -&gt; 0 | otherwise -&gt; pullFrom ((r + 1) * (c + 1)) in square width valueAt main = show &lt;| m 5 The key is that `((r + 1) * (c + 1))` gets you a unique element in the `n^2` sized list and it also takes care of the fact that it's mirrored across the diagonal, since `((x + 1) * (y + 1)) == ((y + 1) * (x + 1))`
None that I'm aware of, but it wouldn't surprise me.
Source code: http://github.com/anicholson/elm-hangman
I'm really not sure about all of the questions, but I would like to ask you to document interesting parts of your work (or everything?) so when another person like you asks the same question we can point it to your experience. The reason for this questions and the low feedback is probably because the community is still very young. If you choose to do a port, happy Elming!
&gt; Is possible to develop the exact same website without html/css ? My guess is that you can develop something pretty similar. A pixel perfect replica might require an inordinate amount of time but something with the same functionality, layout and looks might be very doable. My advice is to give yourself a couple of days for a sprint in this direction and use the Graphics.* packages. See how far you can come and take a decision after the attempt. &gt; And what about consuming a rest api, is Elm ready for it ? Yes! You can look at the Tasks examples (e.g. [Zip Codes](http://elm-lang.org/examples/zip-codes) ) to find out more. 
Why do you use the Native now function rather than pass in the initial seed/ current time via a port as in thirk_voluntary's version?
I skimmed the code and added some small remarks below. The game itself seems to get stuck after one keystroke.. You can put the exports of a module on [separate lines](https://github.com/Apanatshka/elm-signal-extra/blob/cfd82b20c69d24b92e2fee92403134e5a337e5ab/src/Signal/Extra.elm#L1-L30). I personally prefer this to make sure I always have only a vertical scrollbar. Are you aware that you can import all tags of a tagged union using `..`? For example:`GuessedLetter(..)` Have you considered using the [style guide](http://elm-lang.org/docs/style-guide)? It takes a little getting used to, because the code becomes more sparsely distributed over a vertical space. But it's pleasant to read IMHO. 
Hey atrilumen, just saw this article, thought you might like to have a look... http://www.confluent.io/blog/apache-kafka-samza-and-the-unix-philosophy-of-distributed-data
I don't mean a perfect pixel replica, only a similar layout :P But well, thanks for the answer, nice to know.
Thanks /u/jediknight :) I like the letter structure, that's a good idea. Restarting the game is the next thing on my list!
see also: [mailing list discussion](https://groups.google.com/d/msg/elm-discuss/nEtLpSlELSA/JGWJmczdCwAJ) EDIT: oops, that's probably not WebGL specific enough :(
Does Elm play nice with Elixir and Phoenix? How exactly does Elm tag onto other server side frameworks?
toString http://package.elm-lang.org/packages/elm-lang/core/2.1.0/Basics#toString
simply toString (Basics.toString) will do import Html strOfInt = toString 10 strOfFloat = toString 3.2 main = Html.text (strOfInt ++ " " ++ strOfFloat) Try it in http://elm-lang.org/try
You've got to be shitting me. I *swear* I tried this. I must have overthought it. Thank you.
To anyone still reading this thread, this article should contain information that is potentially very useful for Elm: http://martin.kleppmann.com/2015/06/02/change-capture-at-berlin-buzzwords.html If we can use a traditional relational database like PostgreSQL and enable it to work with streams that are compatible with the publish/subscribe model, then doesn't this make a lot of sense for Elm? Especially if we'd like to improve Elm's ability to bring together full stack solutions.
This Q&amp;A is awesome :D
Sorry for the delay in response. I have finally gotten around to trying this and it worked very well. Thanks so much for the response. 
http://share-elm.com/ It's not perfect these days, but it exists! I'd be interested in there being a version that is more open source so it can be maintained more easily.
No problem, glad I could help :)
I agree. That's why I'm confused why you have to "wire up" anything in elm at all? In Racket all you have to do is dump all of the events and behaviors into the "big bang". eg. big bang on-tick do this on-key do that stop-when this happens I suppose this is similar in Elm to just Signal.fold everything into one Signal that you could just call Actions...
I just [changed the definition of Pos to (Float, Float) and the error went away](http://share-elm.com/sprout/55c600b7e4b06aacf0e8bd80). I think because when you do "sqrt (dx ^ 2 + dy ^ 2)" it is trying to reconcile an Int with a Float. As an aside, if you put your original program into this: http://elm-lang.org/try It gives you the exact line number of your error. Which helped me.
You have to use `toFloat` on your original pairs, because `sqrt` is `Float -&gt; Float`: http://share-elm.com/sprout/55c605d9e4b06aacf0e8bd85 Unsure why your changing to `0` made it work, though. Probably using `0` made the type checker infer the expressions's type as `Float`, which seems bad/unsound/buggy. Probably worth asking on the list or a GH.
Yes that must be it. I'm quite surprised that sqrt doesn't take Ints. I wonder why the signature is not `number -&gt; Float`. It also seems strange that the compiler does not tell me that sqrt is being passed an argument of an invalid type.
As of today, Elm only focuses on frontend side. In the question part of his talk at Curry On (https://youtu.be/oYk8CKH7OhE at around 48min) Evan Czaplicki mentions that there might be some option to develop backends in Elm on top of Node.js on a next release. So for the time being, I guess you could have an API backend in Elixir and let Elm handle the frontend.
Think about the `behaviors` of your module as the reactions to stimuli. The Actions are the stimuli. They get sent, one by one, to the Update function together with current state of the Model. The Update produces a new Model based on the stimulus. You do this by folding from the past or... reducing the list of all the previous states of the Model to the current state using the information from the Actions Signal (which, together with the Address is part of the Mailbox). Now this is what StartApp does. Signal.foldp update initialModel actions.signal This creates a Signal of Models that acts like a `listener` on the actions channel. Every time an action appears, a new version of the model is being created and sent to the code that connects to this Signal. This is what the final piece of the puzzle does. The View is mapped to this Signal of Models so that every time a new version of the model is sent down the wire, a new versions of the output of the view is being produced. So, the Signal of Models is transformed by the view into a Signal of Html (or Graphics.Element). This Signal of Html is what your browser displays. I've taken your code and hammer it into something minimal that kinda does what you already implemented but using what I described above. Take a look and if you have any more questions, ask. :) http://share-elm.com/sprout/55c6433ae4b06aacf0e8bdbc &gt; I could use a mentor on this haha I too could use a mentor. I've searched for one but the people who are knowledgeable are way to busy doing important stuff. 
Thanks for the in depth response! I'll meditate on it later. You've taken my code and made it work how I wanted it to, but you've also turned it into something completely incomprehensible to me hahah &gt; I've searched for one but the people who are knowledgeable are way to busy doing important stuff. Word.
I don't know if it helps but you could take a look at the code that solves the first 5 challenges from [here](https://github.com/pdamoc/elmChallenges). This is the progression of the challenges that I received when I set up to learn Elm. I was able to do them because I've spent a lot of time reading the [Elm examples](http://elm-lang.org/examples). Some of the code was lifted from there. Coming from python, there were a lot of moments of painful struggle but I believe the result is worth the trouble. 
Sweet, that's what I was thinking, everything would just work over an API. Thankyou
Thanks for the explanation! I understand signals are strongly typed functional representations of reactive streams, but this explanation made it more clear. Let me show you where the confusion is, though: main = div [] [ text plus ] -- I expect this is an error because plus is Signal Int main = div [] [ text (toString plus) ] -- to my surprise, toString outputs &lt;Signal&gt; -- ok, let me try map . main = div [] [ text (Signal.map toString plus) ] -- but this is an error! "Signal String" can't be -- passed to text. ok, let me try "show"... main = div [] [ text (Signal.map show plus) ] -- another error, because this result is Signal Element -- ok, let me try foldp since that's supposed to "resolve" it main = div [] [ text (toString (Signal.foldp (\e x -&gt; toString x) "0" plus)) ] -- (i know this is gross) -- this STILL results in &lt;Signal&gt; So in my contrived example, how am I supposed to convert or resolve or whatever `Signal N` to the latest value? Secondly, what's the "correct way" to do this in HTML and in the repl? It feels like there is a missing `Signal.last` or something... &gt; From my experience, Haskell is not required but familiarity with Haskell is a huge bonus. I think you agreed with me. :) I'm not new to functional (quite a bit of clojure and some F#) but I find that almost every Elm example, either in the docs or in blogs, expects that you already understand Haskell and leaves out important context. I think if Elm is going to succeed it has to leave behind it's heritage because I know few people who know Haskell, but a lot of people who would be excited about Elm. But this is an unimportant aside to how the heck do I simply resolve the last value of a signal?!
Thanks again. Almost there. I almost went back and edited "last" to say "latest". It sounds like that is, conceptually, what Signal.map is doing. I'll assert: `.map` isn't actually mapping every previous value of the signal, only the latest one. I still don't get it though. Outside of a contrived example, I can't get rid of the "Signal" part of whatever type I'm passing. Main can accept a Signal Html which is why our examples work, but nothing else seems to. Attempting to make it more "real world" immediately fails. lineItem2 = text &lt;| Signal.map (\x -&gt; toString x) plus displayTest = div [ ] [ lineItem2 ] main = displayTest And now that tells me that `text` won't accept a `Signal String`. So one more random out-of-the-ass attempt to make this work, lineItem3 = Signal.map (\x -&gt; text &lt;| toString x) plus displayTest = div [ ] [ lineItem3 ] main = displayTest And now I get some weird thing about `Svg.Svg` vs `Signal.Svg` and I have no idea what that's about. I tried a bunch of other things and I keep getting the `Svg.Svg` type mismatch. I really can't make any sense of this. I don't understand how to access the values of Signals in a meaningful way outside of contrived examples with show. &gt; I've learned enough to see the wisdom of Elm and to better understand why my intuition was correct about it being an amazing language (my intuition was triggered two times before, in 1998 by Java and in 2003 by Python). I know, right? That's why I'm excited about Elm. I had the same feeling with PHP and Ruby in their early days and those turned out true as well. Every frustrated reactive JS developer I know that I've mentioned Elm to is very curious. 
https://phuu.net/2014/10/29/elm-native-modules.html
Look at the types of the values you are working with. "text" does not return a Signal. It doesn't take a Signal as an argument, either. It's `Text -&gt; Form`. Signal.map's type is `(a -&gt; b) -&gt; Signal a -&gt; Signal b`. OK, so just using simple logic based on the types we know here, and the fact that `main : Signal Html`, we can deduce that to go from an Int to a div that displays the current value of an Int that may change over time (Signal Int, basically), we need to find a way to convert an Int to a Signal Html. So, filling in the `a` and `b` of Signal.map's type for our example, `a` is `Int` and `b` is `Html`. So we need to write a function that takes an Int and returns Html and pass that into Signal.map. The second argument to Signal.map is our Signal Int. With these two arguments, Signal.map returns a Signal Html, which is what we want `main` to be! In your examples where you're saying `main = div...`, you've got the types wrong. div's type is `List Attribute -&gt; List Html -&gt; Html`. `main`'s type should be `Signal Html`! You were putting the Signal.map in the wrong place, and you can tell from the types alone. By simply looking at the types and finding the functions that take the types you have and return the type you want, you can write working code without even having a detailed understanding of signals! Knowing the types can solve a lot of problems--it seems like you're not looking at them at all, which means you're getting a bit disoriented and plugging the wrong values in.
That sounds like good advice. Maybe there's a possibility for an elm-canvas that allows more general canvas manipulations, not necessarily tied to diffing/redraw (although that could be built on top as well). In my case, I would probably start by just keeping the canvas manipulation in JS behind ports, like you said. But unfortunately that would leave much of the app still in JS-land (or coffeescript...same thing sorta). So I'm not sure the benefits of Elm would be worth the investment, at least as it stands today. I guess my main concern is investing a bunch of time in a technology that has yet to achieve widespread adoption, so it's unclear if it will keep growing, or eventually fade out. It's the chicken-egg problem of new technologies. But I will dig a bit deper, just out of sheer personal interest, if nothing else :) I hope Elm succeeds. At least at first glance, it seems that it gets a lot right, and I really hope that's the direction the web and UI programming in general moves in. I definitely will be keeping a close eye on it, and playing around with it more. Thanks!
I've skimmed the Architecture Tutorial, but will go through it in more detail, as well as elm-svg. Thanks for the info :)
Latest version of Elm is `0.15.1 ` It starts with a `0`. This should answer your question. That being said, the language is getting more solid with each passing release. Complicated things collapse into simpler ones. I believe betting on Elm is a risky business but it is a high enough return bet to warrant the risk. 
Another thing to consider is the documentation. It is kinda poor. Thus it takes a lot of time to find out how certain things work. So yes, it's not really production ready. 
Also, small community.
Perhaps you've heard of Node.js. Currently on version 0.12.7. and used in production all over the place.
[**@rtfeldman**](https://twitter.com/rtfeldman/) &gt; [2015-08-04 05:13 UTC](https://twitter.com/rtfeldman/status/628433529538412544) &gt; Soon our production code base will have more @elmlang than JS! &gt;[[Attached pic]](http://pbs.twimg.com/media/CLik9xlUcAAPyQS.png) [[Imgur rehost]](http://i.imgur.com/q9Ch5WB.png) ---- [**@AppShipIt**](https://twitter.com/AppShipIt/) &gt; [2015-08-14 16:54 UTC](https://twitter.com/AppShipIt/status/632233876610412544) &gt; README for revamped @sublimehq @elmlang plugin is up! Pushing to Package Control over the weekend https://github.com/deadfoxygrandpa/Elm.tmLanguage/blob/develop/README.md ---- ^This ^message ^was ^created ^by ^a ^bot [^[Contact ^creator]](http://www.np.reddit.com/message/compose/?to=jasie3k&amp;amp;subject=TweetsInCommentsBot)[^[Source ^code]](https://github.com/janpetryk/reddit-bot) 
Node.js can get away with that for a few reasons, including that the JS community is huge (which meant that the package ecosystem could grow quickly), that it's built on an existing, well understood technology (uses the same JS engine as Chrome/Chromium IIRC), that it was backed by a company (often very important for sign off in big corporate projects). Also, development was fairly slow moving for a very long time, so the library ecosystem was fairly safe to rely on. FWIW, Node.js will be jumping up to version 4.0 relatively soon (new version will be based on code from io.js).
Cool examples! [example 5](http://evancz.github.io/elm-architecture-tutorial/examples/5.html) could easily go viral :)
Can't wait for the blog post !!
&gt; It starts with a 0. Doesn't mean anything these days. React, nodejs start with 0 too.
I agree with this and have been working on a couple of documents[0] aimed at simplifying the entry level for people to understand. I've been working closely teaching some students Elm having got a hold on it myself a few months ago, but it's only really now that it's clear to me what bits in the documentation means. If anyone would be eager to help out in this documentation process, please give me a hand and help both web developers eager to learn and Haskellers looking into it! [0] - https://github.com/eeue56/elm-for-web-developers and https://github.com/eeue56/haskell-to-elm
For reference, I've made a [simple drawing page](https://github.com/eeue56/drawea) in Elm so that you can have somewhere begin - my students will be working on it and I'll be adding stuff to it as examples for them to look at, so it may come in handy to you! See a live version of it here - http://eeue56.github.io/index.html
Here is the aforementioned blog post: https://www.reddit.com/r/elm/comments/3hfzzk/walkthrough_introducing_elm_to_a_js_web_app/
I hope more companies follow in your footsteps. \^_\^ 
Eagerly waiting for UI part, especially that you mentioned it was React which was replaced and not some less similar library. I just wish Elm had such wide reach and big community as other big JS libraries have - it is so much more concise and simple to pick up (even if it's different language than JS).
You can tuple up your arguments Suppose you have a view function of 4 args view : a -&gt; b -&gt; c -&gt; d -&gt; Html and you know that lazy goes like this lazy : (a -&gt; Html) -&gt; a -&gt; Html you can then construct your lazy view as lazyView : a -&gt; b -&gt; c -&gt; d -&gt; Html lazyView a b c d = lazy (\(a,b,c,d) -&gt; view a b c d) (a,b,c,d)
Very cool! Thanks for sharing that.
Good point, but it's nice to have different options to approach a problem.
Very nice. It still gives us all the benefits of a lazy function, right? Meaning it won't rerun unless input is changed?
I guess you can always tuple some of the arguments as a way to bypass this issue. 
Correct! This is exactly what I have done in the past when I wanted 4+ arguments.
Alternatively if you find yourself having to pass in many related arguments, then it might be time to start using records to simplify your function calls. This'll still work with using an anonymous function/tuple trick, but it will probably help your code be more readable and extensible at the same time. I think that's what jediknight is hinting at here
This is helpful!
I've taken to using a record with a Seed and a Value. Every time a random number is needed, I update the value and seed and return the record. You could also abstract your data so that all the generator calls are made within a single function, sending all the generated values to the functions as needed. It all depends on the structure of your game, though. If you have a nice clear separation between M/V/C then it should be fairly easy to wrap it. Otherwise you may have to rethink your program a bit.
Elm functions are pure. This means that if you want a random number inside a function you need to provide it from outside OR generate it inside the function based on a seed. In both cases, you need to get some kind of changing information from outside the function. You could try to generate all the needed randomness in one place and just have that place feed the randomness into your functions. You do this by piggybacking on the FPS signal and using the Time as info for the seed. Here is a simple way to [generate random Floats](http://share-elm.com/sprout/55d567a7e4b06aacf0e8c19b). Please be aware that you will get the exact numbers for the same `time` value, every time. So, if you pass around the time and generate the randomness inside functions based on that time you might end up with suboptimal randomness. But you could generate all the randomness in one place [like this](http://share-elm.com/sprout/55d569a2e4b06aacf0e8c19f). If you are using the [Elm Architecture Tutorial](https://github.com/evancz/elm-architecture-tutorial) you could use the [Tick action](https://github.com/evancz/elm-architecture-tutorial/blob/master/examples/8/SpinSquare.elm#L53) to update a structure inside de model that keeps all your randomness and either use the time as a seed every time, OR, starts with an initialSeed in the model and update that with each tick. 
I would love to be able to come up with some intelligent response to your submission, but I can't stop staring.
Using signals with time was one of the things I was thinking might work, but it still hits the problem where if I'm iterating over every game object in the model, it'll have the same time so you'll have the same seed for every call for every object. I can't really think of any good ways to get around this other than passing around a list of random numbers each update call, but that has all the problems of passing the seed around and more.
+1
I built an editor for the talk during the conference. You can find the slides and the editor here. [https://github.com/vagmi/jqconf-elm-talk](https://github.com/vagmi/jqconf-elm-talk)
I was inspired by it, but wanted to just freely write it from scratch for my game and experiment with design decisions. Feel free to add whatever you want from it to your library :).
I can imagine this is not really following the design goals of Elm, but you could as an application developer also do the random part in Javascript and provide an Elm interface for generating random numbers via a tiny native module. That's how I've done it after struggling with the same question in my own application: * [Elm Interface](https://github.com/GlenDC/trixel/blob/refactor/src/Trixel/Glue/Random.elm) * [Javascript code](https://github.com/GlenDC/trixel/blob/refactor/src/Native/GlueRandom.js) Again, I'm sure this is not the ideal way of doing it, but this was a solution I much more preferred than passing around a seed.
Why are both of them arrays of arrays? Why not a single array?
If you have new info to share, definitely do it as a separate issue. The one linked here is a "meta issue" to gather all the data in a coherent picture. I am experimenting with this idea of aggressively closing issues and organizing the crucial information into "meta issues" that folks don't comment on directly. Things can be added to it, but only through a separate issue where we ensure that it is actually relevant.
If I understand it correctly, what Html.Lazy does is that it caches rendering results for previous calls. It means that if you call it twice with the exact same arguments, it will call the actual rendering function only the first time and then it will simply return the cache, which is super fast. I think it's preferable to use it whenever possible.
I dunno, actually didn't cross my mind. It's mentally easier for me to map/transpose every time I need a column instead of a row. But what you propose is interesting, basically having a record `{ width: Int, length: Int, array: Array}`. Then, to take an *n*th row you must drop *m***n* array elements (assuming 0-indexing), to take an *m*th column you must take every *m*th element modulo *n*. It actually might simplify the implementation. But for now I'll stick to 2D arrays, after all it's implementation details, people should use the matrices through API anyway.
I am an Elm novice, so this might be wrong advice, but I think that this could be done with sampleOn and fps. fps(n) generates a signal every 1/n seconds. so if you wanted to only accept entries twice per second, you could do something like: main = map view (sampleOn (fps 2) searches.signal) 
If you copy over the implementation of `StartApp.start`, and use that, then you can modify the internals and debounce your `searches.signal` before it's fed into the model update function. 
After a lot of struggle I also had that idea yesterday - what if I try animation example :-) My code does't quite work yet though, so thank you for the example. Overall I think that currently Effects API is missing something. It is really awkward to write code like that for something that should be just one line. It would be good to have a way to insert extra signal processing. We have mailboxes, there are signals, yet the only thing we can do is to send a message, looks like a step back in some way.
Thanks for letting me know. I fixed the code. They changed something to StartApp, so I had to change the import of StartApp to StartApp.Simple, that's all.
Thanks! :)
Oh nice, the "non-Simple" StartApp now allows external signals! Good for letting async stuff affect rendering in a clean way. 
Thanks! Got it working.
I think you missed some explanations because I still don't get it. - What does 'alias' do? - are model/update/view keywords? - what is foldr - what is (::) - are Action and Status keywords? - Signal.Address Action ?
is "prodirect" a word you've coined? demo is really cool
This is really cool! If I had to give one criticism, it would be that the interactions with the shapes seemed entirely inconsistent between every example - some seems to transform or move points, others moved the shapes, some did sheers, others seemed to do sheers on every item drawn. I'd maybe consider introducing tooling instead of having a mouse click do everything by default - almost every design tool lets you pick how you want to interact with the design by switching between tools. But maybe I haven't read enough of the tutorial yet, I'll read more! Edit: I see now it's intentionally inconsistent, as it's changing the parameters being passed to the functions. That makes a lot more sense - though, perhaps adding some way of representing the places where you can click to the values would be handy. I see sometimes the pointer changes, but quite often the interaction implied by the cursor isn't the same as what actually happens - the best example of this is perhaps the Elm logo one, where the "pointer" represents sheers/transforms
The elm install page specifically says that npm is for debian users. It happened to work for me on Fedora as well, but I think its stated that the Windows binaries are the best.
The in part is the "result" of the expression. Since Elm is functional, we don't deal with statements or the notion of "doing" stuff most of the time, but instead we deal with constructing values. What you've given is an expression, whose value is 25. The let allows you to name things to simplify your final expression, define local helper functions, or compute a value to be used multiple times, then it returns the result of whatever is in the "in" part. 
Yeah, this is cool. It makes sense what it means and when you would use it. Thanks.
This is called currying. Basically, both interpretations are right. Map turns a function a -&gt; b and gives a function List a -&gt; List b back. But, this means you can pass a function and a list and get a list out. That is, map f vs map f ls.
So, map could be map : (a -&gt; b) -&gt; List a -&gt; List b or map: (a -&gt; b) List a -&gt; List b 
Ok, I think I'm beating the horse to death here, but view : Signal.Address Action -&gt; Model -&gt; Html Isn't this saying that 'view' takes a **Signal.Address** and an **Action**? i.e. Two parameters? I don't think that is right either, but I don't have a different interpretation if a function can't have more than one parameter.
Signal.Address is a parametrized type. Just like List, it's not "an Address to a mailbox", but "an Address for an Action mailbox".
Cool, got it.
I think it's worth reading [this](http://learnyouahaskell.com/higher-order-functions#curried-functions) chapter in Learn You a Haskell For Great Good. It explains why type definitions are the way they are pretty well.
I enjoyed your talk. Thank you for posting it.
You could write either of these: update : Action -&gt; Model -&gt; Model update action model = ... update : (Action, Model) -&gt; Model update (action, model) = ... Where the `...` is the same in both cases. Both are totally valid Elm code. The second one is probably more like what you have seen. You would call it giving all the arguments at once like `update (Increment, 0)`. What's happening here though is that we are putting all the arguments in a "tuple" and giving them all at once. In the first one, the more typical one in Elm, we are doing exactly what you say. It takes an `Action` and gives a function `Model -&gt; Model`. That takes a `Model` and gives back a `Model`. So the fully parenthesized version of the type is: update : Action -&gt; (Model -&gt; Model) And the fully parenthesized version of calling it would be: (update Increment) 0 Under the hood all this gets optimized to pretty similar things, you will not be calling tons of intermediate functions if all the arguments are available. The point of all this is so that "partial application" works. That means we could write things like this: map (update Increment) [0,3,7] Where we partially specify how to `update` and then give a bunch of models. The result of this would be: [1,4,8] This is also crucial to the [forward pipe](http://package.elm-lang.org/packages/elm-lang/core/2.1.0/Basics#|&gt;) operator `(|&gt;)` which can make things very nice once you are used to it. Hopefully that clarifies things a bit. I am going to try to write this info into the "Complete Guide" when I get a chance!
That would be update = \action -&gt; \model -&gt; or update = \action model -&gt; I actually prefer the (latter) lambda syntax over update action model = because I think it's more readable, but I'm trying to let it go in favor of writing more idiomatic Elm.
I'm not an expert, but I think you're mixing your model and your view. What you want is an update function that is aware of the current time. In your model, you need to store the current slide, and the time it started. Your update function will look at the current time and see if the slide needs to be changed. Then, you just foldp over your input, combined with a timer (see the fps function) which goes every second, or less if you want more exact timings. It's late at night, so I apologize if this doesn't make sense. 
Just use a Tick and check to see if the time of the slide is done. You don't need to check every few milliseconds, half a second should be precise enough (I think). Here is [an implementation using the Elm Architecture](https://gist.github.com/pdamoc/0aac77e1919bd725bcc7) which should qualify as the "Elm way". Just copy &amp; paste the code in [Try Elm Page](http://elm-lang.org/try) to see it working. 
Ah, so I need some form of ticker after all. That's kind of a bummer since it seems a little silly / costly to keep a constant ticker running for the few occasions throughout the slideshow it may be needed. Sure, a tick happening every half second isn't that expensive, but there is definitely some precision loss without higher tick rates, even if in this scenario it is negligible. I guess that's just a compromise that needs to be made given Elm's use of static signal graphs -- no spontaneously appearing / disappearing timers. Anyway, thanks for the answer / code sample! I think I know how I'm going to proceed with this. Note: The timer in the code sample doesn't quite work consistently -- duration depends on when you progress to slide 2 after starting the app so it's not always 2 seconds. Might want to fix this for others viewing your answer.
Yeah, I was hoping to get around the constant timer issue, but it seems rather unavoidable without porting this out to JS.
I first fixed the silly bug caused by the fact that I was not updating the lastClick when an actual click occurred but then I though a little bit more and I just simplified everything by creating a delayed effect and getting rid of the Ticker. Here is the [new version](https://gist.github.com/pdamoc/0aac77e1919bd725bcc7). Implementing this new version showed me how silly I was with the previous one. Thanks for helping me get better (this is the first time I wrote delayed actions). ;) 
Does it help if rewritten as follows? numberOfMoves n = if n == 1 then 1 -- special case, that tower 1 needs 1 move else 2 * (numberOfMoves (n - 1)) + 1 -- moving to the middle
Well, there is a warning quite at the top of the page you link to that tells you that you are looking at an outdated version of the package. It also provides you with a link to the latest version. I suggest you follow that link and use example code that you find in the latest version. It should work in the online editor.
About further resources, try: http://www.gilmi.xyz/post/2015/07/04/starting-elm
 List.partition (\n -&gt; n % 2 == 0) myList
Tangentially related but there's a book called Functional Programming for Object Oriented Programmers ( sorry for the lack of link. I'm on mobile) that I found pretty helpful. Edit: https://leanpub.com/fp-oo
http://www.goodreads.com/book/show/15752713-functional-programming-for-the-object-oriented-programmer it is a mindset change, it'll take a bit for it to "click". hope the above book helps.
a little bit on how to read that function signature: &gt; List.partition &lt;function&gt; : (a -&gt; Bool) -&gt; List a -&gt; ( List a, List a ) `List.partition` is a function that takes as its first arg a function that takes a thing of type `a` and yields a boolean. the second arg is the list to partition, a list of type `a`. this then yields a two tuple of two lists of type `a`. /u/0x48656e7279 showed a lambda (an anonymous function) as the first arg but that could have easily been a complicated, named function. from this you get two lists. there's no need to create two empty lists (e.g. `evens` and `odds`) and then fill them, you'll get them created as a result of the function call. hope that helps. 
again, you don't actually `draw` the shapes, you convert the list of integers into shapes. So, you need a function that takes an integer and returns a shape. Then you map that function on the list of integers and you get the list of shapes. You can use this list of shape with something like a [Graphics Collage](http://package.elm-lang.org/packages/elm-lang/core/2.1.0/Graphics-Collage#collage) to turn that list of shapes (Forms) into an Element that can be displayed by the runtime. The main switch from imperative (OOP) to functional is a switch from `**how** to do` TO `**what** to do`. So, you instruct the system with details about what you want NOT what to do. If you want ten circles you do not tell the system to `draw` a circle ten time you just tell it you want a `list` of ten circles on the screen. 
What error does it throw? Elm type errors are usually quite descriptive and should give you a good hint about what is unexpected. Can you use [share-elm.com](http://share-elm.com/) to cook up a small example that shows your error? 
http://share-elm.com/sprout/55f585efe4b0ff56ab759dbc type conflict between Form List Form
[working form](http://share-elm.com/sprout/55f5878be4b0ff56ab759dc0) I do admit that the error is a little bit strange to me (in it being attached to List.map). Here is also [a version that avoids the parentheses](http://share-elm.com/sprout/55f587dbe4b0ff56ab759dc1). 
is it possible to filter a list of lists using a list?
You would almost never use the port directly, it's to much of a hassle. Instead use "log" from the [Debug](http://package.elm-lang.org/packages/elm-lang/core/2.1.0/Debug) module. If you use the value x somewhere in your program just use log like so: log "arbitrary message: " x.
:( this kind of inconsistency about interop is currently my only major beef with Elm. Are we embracing ports and functional purity, or sticking with side-effectful native modules? Both approaches seem to be encouraged for the same use case.
&gt; What does type' mean? Why does it have the single quote at the end when other functions do not? That's because `type` is a reserved keyword. It's used in `type alias Model = ...`.
Generally, you import things without exposing clauses. The idea is that you qualify things by the module name when you use them. More typing, but it's easier to read, since you don't need to wonder where a value comes from. And it avoids name conflicts. 
[**@rtfeldman**](https://twitter.com/rtfeldman/) &gt; [2015-09-22 14:43 UTC](https://twitter.com/rtfeldman/status/646333975556853760) &gt; Happy Tuesday! Here's an @elmlang tutorial for building a live-validated signup form that assumes only JS knowledge. http://noredinktech.tumblr.com/post/129641182738/building-a-live-validated-signup-form-in-elm ---- ^This ^message ^was ^created ^by ^a ^bot [^[Contact ^creator]](http://np.reddit.com/message/compose/?to=jasie3k&amp;amp;subject=TweetsInCommentsBot)[^[Source ^code]](https://github.com/janpetryk/reddit-bot) 
The ' can be used in a variable name as long as it is not the first character. It is supposed to look like a "prime" so you can have `x` and `x'` or something. Some folks want to get rid of it exactly because of this question, and I am sympathetic to that view. Not sure what will happen though. In "professional" code, you want to stay away from `exposing` as much as possible. Saying `List.map` becomes quite helpful when you have 20 imports in a single module. Even when we have tooling so you can hover over something and see where it is from, this is a worse workflow than being able to read that information immediately. That said, when there is a file *just* about HTML, often it's nice to use unqualified things because the "view" code will read a bit nicer.
Makes sense. Let's keep an eye on things though. I just realized that "backtracking" could make a learning curve less steep. I've never really thought of it this way, but maybe it is useful. By analogy, if you are climbing a mountain, the least steep route from A up to B may not be the most direct. It could go off the trail and *above* B for a bit. That midpoint is "safe" if the only viable place to go afterwards is B, otherwise you might climb to crazy places. Things are "pretty safe" if you have to explore a bit before ending up at B. With this analogy it seems reasonable to me that this is a natural thing that is not too dangerous considering the particular midpoint in question probably doesn't lead many places.
elm version is much faster btw.
Elm has an [interop](http://elm-lang.org/guide/interop) mechanism. In theory you should be able to do whatever you like in Elm and push the result through a port back into JS. In practice, I imagine that working in any field you need libraries and I'm not aware of AI libraries in Elm... but hey... as the shoes salesman story said it.... glorious opportunity! \^_\^ 
Elm is very well suited to AI. There aren't many existing AI libraries, but that means if you write them, you will probably be know in the community for them! 
No, sorry. You wouldn't want to go *porting* a big blob of generated JavaScript over to UnityScript. That would not be a worthwhile experience. Maybe take a look at F#. It's not officially supported by Unity Technologies, but last I checked (years ago) it was doable. I haven't been following F#, but I'd be surprised if nobody had taken a crack at an Elm-style FRP library by now. (Whether that could map very well to Unity's entity-component architecture is a longer discussion.) But I have to ask... Have you thought about targeting the web? It has far broader reach, and far less friction. Instead of trying to get people to download your game... they click on a link (on any device) and BANG they're immersed your experience. My sincere advice is to let go of Unity, embrace Elm, and build cool stuff on the web... the web... the web... the web...
I would /love/ to use Elm at work, but it's seen as too high risk. We're using Angular atm. Am I wrong in assuming that it'd still be possible to make "elm like" applications in pure JavaScript by respecting the Elm Architecture? It would seem that stacks such as React / Flux come close, no?
&gt; Am I wrong in assuming that it'd still be possible to make "elm like" applications in pure JavaScript by respecting the Elm Architecture? The mechanics of FRP can be mimicked but I don't think that's were Elm's power lies. Elm creates constrains on what you can do and these constrains, although highly annoying at first (without a FP background), end up enabling some amazing code. I can still vividly remember when I **understood** this. I ended up getting some code to pass the compiler and do what I wanted it to do and then, since it was already working, I shifted the code a little bit. I extracted a function here, renamed another there and in a very short period of time, my code condensed into something amazingly short and expressive. I could fearlessly plug and play with different implementations as long as I had a safe point created by the signature of a function. If I would have used python (or JS) this would have not been as easy to do. Less code is less places for bugs to hide. The best Elm code I've seen is an example of "Simplicity is the ultimate sophistication". 
Elm needs more stories like this one. Live from the trenches. :) 
Could you maybe provide a little bit of code via [share-elm](http://www.share-elm.com/)? 
Awesome ~_~
Richard always recommends a gradual approach to getting to Elm, that's what he has done on every project he's moved to Elm. Start with jQuery, go to React, go to Elm. He talks about it [here](http://www.ustream.tv/recorded/64191291). The benefit of this approach is that you only have one hard problem to solve at a time. In the first step, you redo your architecture. This is hard on its own. In the second step, you revamp your code to be nicer to use. This is also lower risk. You are going to be getting benefits at each step no matter what. So whether or not other things come close to being as nice is not really the right question in my opinion. These other things are useful because they get you closer to it being nice.
I'll just throw in another variant. I'm using recursion instead of folding http://www.share-elm.com/sprout/560a5b5de4b0966c193dc979 EDIT: This version only returns the segments between every number in the list, but it doesn't "loop around" to the first element again. See my answer below for an update version.
Keep in mind, the version of /u/jediknight not just calculates the same result differently, it calculates something different. For example, if you use `someAngles = [1,3]` your version produces `[(0,1),(3,6)]` while his ones give `[(0,1),(1,4)]`
Ah thanks for pointing that out! Definitely going with /u/jediknight (or perhaps the recursive version provided by /u/teppix as they produce the intended result.
Check my second version. It produces the same results as both of the jedi versions. I made an incorrect assumption in my first version. I guess all three of these are correct (counting my second attempt, not the first), we just used slightly different approaches.
Ah OK, I see. Now I can sleep well again. ;)
Interesting take, and I agree with the map vs fold part...since IIRC map/filter are just special and simple cases of fold (reduce)?
Yes, `map` and `filter` can be implemented as a `fold`(called `reduce` in other languages). So I will add another version, following my suggestion: http://www.share-elm.com/sprout/560ae6cde4b0966c193dca9b
And here are the slides: http://krisajenkins.github.io/elm-for-real-work/
The airconsole integration makes it really fun. Well done. Do you know of any other tech that enables this kind of realtime smartphone-desktop browser integration? (I vaguely remember seeing a "Chrome Experiment" using something similar about two years ago...?)
&gt; TL;DR: If it compiles, it works It's a shame people still say that... great talk otherwise.
because it is not true. you can still have plenty of bugs in runtime. just to name some: infinite loops and arithmetic errors.
Yes, it's perfectly possible. Have a look at this project for a simple getting-started case: https://github.com/krisajenkins/uri-encode Specifically you need to look at `src/Uri.elm` and `src/Native/Uri.js`. You'll see a straight-through connection from Elm to the JavaScript encodeUri functions. Once you've understood that, you'll find more interesting, more complicated examples just by looking in your project's `elm-stuff/**/Native/*.js`. (Don't use that project by the way - it's reinventing the wheel from `Http`. But it's an easy example so I'll keep it around.)
The reason this is not well documented online is that it is not a public API. This is like looking at the details of code generated by Rust or C++ and thinking "oh look, an FFI for assembly!" It's true that there is a reliable format there, but you are still doing sneaky dangerous stuff. Making a legitimate way to do this and documenting it is a very very high priority for me though.
I should have added a note about that. (I didn't know it wasn't public, but I knew it was slated for replacement.) &lt;slaps own wrists/&gt; I'm looking forward to a more official route. And in the meantime, I'm using native where I need to, in the knowledge that I'll have some rewriting to do down the line. (Which is fine - I keep the JS I use to minimum!)
I ll look into it, thanks!
Right now there is no "use Elm from JS directly" as you describe. It is technically possible to do this, since the generated code is in JS, so it could be done some day. I decided to deprioritize this usage scenario for now though. I expect the majority of new users will be wanting to do more UI things with Elm, whether that is business-logic-in-Elm-connected-to-a-React-UI or doing a small UI piece entirely in Elm. So I am focusing on those kinds of scenarios for now. Longer term, I can imagine exposing something like this, but I'd be more interested if it can be used more as an onboarding ramp than "let's reuse the `Dict` library in JS" What is your particular scenario? Often if you squint a bit you can find a better way to sneak Elm into a project :) Or maybe you have a great usage scenario that I haven't come across yet that'd change the prioritization.
Doh! Total mis-read. Thanks. :-o
Thanks for the response! I have a single file that does a bit of simple data processing of sorts. I have a 'results' object that mostly had ids for data and then a 'definitions' object that has the information I want stored against the ids. So I basically want to extract the information I want given the ids I have and fail gracefully when various lookups fail. I've been using 'ramda' and 'ramda-fantasy' for basic Maybe &amp; Either handling but I'd like something type checked and in a language where it is more natural. I'm doing the look ups on a single result by result basis in React render functions so with the current approach synchronous is kind of a must. However I might be able to reorganise so that when I first get the 'results' object with all the results I dispatch that to elm and get back a fully processed object in a async fashion which is fine as that part of the code is async anyway.
Disclaimer: Somewhat new to Elm as well... So forgive me if I steer you incorrectly. Bullet #1 - A good lead would be to consider [foldp](http://package.elm-lang.org/packages/elm-lang/core/2.1.0/Signal#foldp) -- It's a way to advance the state overtime. Bullet #2 - That is a great idea. I believe what you need is what you see here [Tagged Unions](http://elm-lang.org/guide/model-the-problem) (Ctrl/CMD F)
Hey, I read a little on the links you posted and already fixed Problem #2. Thanks! [Here's the diff to the fixed version.](https://gist.github.com/wkoch/678d68490a63257acb1a/revisions) I'll need some more thinking/reading to solve problem #1 though.
I installed with npm and managed to get it in my path and the tools seem to be working. Am I missing pieces?
I'm not sure who claimed that, and I don't know of any strong evidence either way of such a claim. But let's say we want to know: can Elm be "faster" than JS? Now one thing to keep in mind here is: what does "faster" mean? Faster at what? Erlang is probably "slower" than Java at business logic, but can probably serve results faster with less code complexity. JavaScript can be fast on certain benchmarks, but pretty slow on webpages that use features like "delete a property from a field". So saying "is language X faster than language Y?" is kind of too vague a question to be super useful. Questions like "Is language X fast enough for what I want to do?" is probably more useful for making real decisions, and is one of many considerations I would take into account when making comparisons between languages. But let's think about "fast at business logic". I think it is *possible* that Elm is already faster here, but I have not figured out a way to test this in a fair way yet. Here's the theory: &gt; Browsers have JIT compilers that will take slow terrible code with lots of runtime type checks and try to turn it into nicer code where all those runtime type checks are moved up as far as possible, so you can have big lines with no checks. (This is how asm.js can be fast. It is able to skip *all* these checks.) One very bad thing is when this optimized code gets "deoptimized" because a value comes in that does not work with the big line of optimized code. Now because Elm is statically typed, this should not be possible. If deoptimization does not happen, we should be able to get to fast code and stay there forever. Again, I do not know how that theory plays out in practice, but I think it is plausible. Okay, but that's just thinking about compiling Elm to JS. There's no fundamental reason we have to compile to JS, so if/when we start to have other backends, we can produce code that just does not have any of these runtime checks scattered around. My understanding is that languages like OCaml and SML are already "faster" than JS. There are a bunch of other things you'd want to consider when talking about "faster" though, so this is just one angle focused on "business logic".
My guess is maybe that you're asking how the Elm rendering infrastructure manages to sometimes be faster than native JS solutions like React. Is that what you're looking for? :)
&gt; There's no fundamental reason we have to compile to JS In your opinion, will another backend be implemented before or after the bootstrap? 
My npm install on ubuntu didn't install the last version `0.15.1`, but maybe it worked for you?
I also think this is what OP should have asked, e.g. **how can elm be faster than react?** The answer to that has to do with immutability, the full answer can be found [here](http://elm-lang.org/blog/blazing-fast-html)
Thanks for this, I think this might be what I was looking for. 
In [this talk](https://www.youtube.com/watch?v=oYk8CKH7OhE&amp;feature=youtu.be&amp;t=47m56s) Evan (Elm's creator) answers that question. Basically Elm will run on Node in a near future and later on (maybe) compile to assembly, as a binary executable I guess.
Maybe those JS frameworks are not "minimal". They probably have a lot of cruft, things that you're not even using in your project but may impact performance. I agree that theoretically, a well written program in pure JavaScript with just the necessary stuff and a good design, could be optimized to have the best performance possible. But that is not happening in the real world, which leads me to think that one or more of the above is not true. People use a lot of libraries, frameworks and stuff in JavaScript, any of those might have a bad design, be poorly written, have bugs and so on, and all of those things will have an impact on performance. You can see in the same benchmark that even between the JS frameworks there's a lot of difference in performance. Evan says that the design of Elm+ Virtual DOM is what makes this optimization possible, by being sure the data is immutable Elm can avoid rewriting the DOM unnecessarily. Read more about it here: http://elm-lang.org/blog/blazing-fast-html
Basically, because Elm uses stateless functions, there's a bunch of optimization that can happen with html and making minimal updates. You could write the same code yourself, but Elm does it for you in a library, and the language guarantees that it's a valid optimization. 
I know that other backends are possible and likely to happen but I was wondering if there is a plan to do a bootstrap **before** implementing another backend. A bootstrap would free Elm from Haskell and **might** encourage more people to start hacking at the core. 
This makes alot of sense. The Js created by elm when simply outputting hello world looked extremely messy and long winded, but I think I understand now how what I'm seeing is optimized Js, not a slow but pretty human created file 
&gt; how does the DonutChartExample know where to go find the DonutChart module? Well... if you started the elm-reactor in the root of the repository, it has the elm-package.json to tell it where to get the modules needed. 
Yes...so then does forwardTo tack on the Remove at the beginning of the address or at the end? I guess maybe I'm thinking about it wrong, because I'm thinking of the address like a URL, where the Remove action is tacked on at the end, and as update actions descend into sub-components, actions get tacked on--at least that's what the docs seem to say (http://package.elm-lang.org/packages/elm-lang/core/2.1.0/Signal#forwardTo) So does that mean when we want to call `view`, we always need to use forwardTo and an action that exists within that component?
&gt; Yes...so then does forwardTo tack on the Remove at the beginning of the address or at the end? I thinks that looking at the way this is implemented in Signal.elm from the Core package might help you understand better what's happening. Most functions there are one-liners. &gt; So does that mean when we want to call view, we always need to use forwardTo and an action that exists within that component? To my understanding yes. If you have hierarchy of components you will also have a hierarchy of tags that convert component's Action into its parent Action. Of course, "always" is a very strong word. You can have alternative strategies but... most of the time you will be creating hierarchies of models and compose functions that will work on those hierarchies, just like the Elm Architecture Tutorial shows. 
I had a feeling that something like this might be the case. Your response really clears it up. Thanks!
Hey everyone, this is my first "real" Elm app. I chose Elm for the frontend because it's an amazing tool for building visualizations in the HTML5 canvas element. I'd be happy to answer any questions. The code for this project is on [github](https://github.com/fbonetti/arduino_radar).
Wow!!! This is really cool. Do you have code available on Github?
Fascinating experiment and a nice promo for the language! Thanks for posting.
I haven't been using Elm for very long but based on that blog post I can tell you that the import syntax has changed. For example: &gt; import List (map) is now &gt; import List exposing (map) http://elm-lang.org/docs/syntax#modules
Thanks, I'd also noticed this one. 
I actually solved my own problem, looking through the changelogs [here](https://github.com/elm-lang/elm-compiler/blob/master/changelog.md) and [here](https://github.com/elm-lang/core/blob/master/changelog.md) I found all the information I was after. This leaves just one small question. To use &lt;~ and ~ now, do I need to do `import Signal exposing (..)` or `import Signal exposing ((&lt;~),(~))`? This works, but I am not sure if there is a better way. 
Yeah, you'll need to import Signal. The preference is against implicit imports, to make clearer code. 
`(&lt;~)` and `(~)` are removed in the imminent 0.16 release. Use `Signal.mapN` instead. I liked those functions, but fully support our BDFL's intentions of making Elm exceptionally clean, clear, and approachable. 
I do. Collections is a sub-component. I'm pretty sure I'm forwarding the signal correctly? At the top, I have: view : Signal.Address Action -&gt; Model -&gt; Html view address model = div [ class "app" ] [ div [ class "sidebar" ] [ Query.view (Signal.forwardTo address Update) model.query ] , div [ class "results" ] [ div [ class "graphical" ] [ h2 [] [ text "Graphical" ] ] , div [ class "tabular" ] [ h2 [] [ text "Tabular" ] ] ] ] And then in Query.elm, I have: type Action = None Collection.Action | Add view : Signal.Address Action -&gt; Model -&gt; Html view address model = div [ class "query" ] [ Collection.view (Signal.forwardTo address None) model.collection ]
Great, makes sense! I see now how I should be able to cut out a lot of fluff in the my library and also use |&gt; more liberally.
In a case like this, your best bet is to use let expressions for the arguments. They'll be the best for readability, and long and clear is better than short and confusing.
Yeah, it's pretty common to break it up like that. 
Really amazing stuff.
The conjunction of my two favorite langurs, can't wait to watch this.
Should also note that benchmark is _very_ out of date, numbers could be entirely different.
I was there, but I think that they say that the communication between channels and Elm wasn't quite ready for prime-time, and that they'd be updating the example shown there on github (I should be watching that repo ... too many things happening in our world right now :)).
You can view the code on Github: https://github.com/fbonetti/elm-bf https://github.com/fbonetti/elm-bf/blob/master/bf/interpreter.elm
Does this mean we're a real language now? 
&gt; is it possible to create self-contained components that manage their own signals and state? Yes, you can do that but you might not need do it. You could just use the tags and propagate the event from outside all the way to your component. Instead of requiring the mouse information in the view, you could save it in the model via the update by having an Action like `MouseMove (Int, Int)`. You will then require the parent of that component to also react to mouse movements and when they do, just pass the information down. Your way is also possible. You might do it by defining a components hierarchy taking inspiration from the StartApp source code and just have each component feed into the inputs of its parent via some kind of `UpdateChild ID Html` Action. 
Really enjoyed this talk, I especially liked "I put this down to better tooling, and great hair". I found your solution of using Makefiles to wrap elm-make interesting and started doing that myself. Thanks.
Mapping over the Signal Html is an interesting approach - thanks! Edit: I think the signal coming out of the ColorPicker would have to be a `Signal (Html, Color)`, that way the parent can render the component AND have access to the currently selected Color.
Your documentation is wrong, for ']' it should say "if the current byte is nonzero, rewind to the matching bracket".
Too legit.
&gt; That being said, I think one of the big advantages React has over Elm is the wealth of packages and components. Need a datepicker? React has a dozen libraries to choose from. WYSIWIG editor? It's already been done. Interactive table with sorting and filtering? It's available. On the dark side, some those libraries I try (top results on google/github) are shitty (for my needs) and seems abandoned. That why I prefer to build my own. Just saying :)
I'd wrap that logic in a lambda, which I'd pass to ThemePicker from App at some point. Thus all ThemePicker would be aware of would be the lambda's interface. Consider it a handler or continuation passing style.
&gt; The child component needs to set some state on the parent. For example the child is a theme-picker widget and the parent is the containing HTML app. The theme picker needs to set the theme of the whole app and its components. One could argue that the child needs not change anything. The only thing a ThemePicker needs to do is pick a theme. It is the responsibility of the parent to monitor the ThemePicker's current theme and decide what to do about a change in value. If you let the ThemePicker know about it's parent Actions you've just created a circular dependency. Those are not nice. It is much nicer to just intercept the relevant ThemePicker Action in the parent's `update`. 
In most cases this makes sense but when the child control gets more complex than a simple form control, the parent needs to know more about the child's implementation than I would like. This approach would also let the model representation affect the user interface design - what if you wanted ten theme-pickers scattered around the page...?
&gt; what if you wanted ten theme-pickers scattered around the page...? Actually [Elm Architecture Tutorial](https://github.com/evancz/elm-architecture-tutorial/) example 3 models something like this very nicely (A list of counters). You can modify only the CounterList.elm file and have the app display which of the counters was triggered and what is its current value, which would be the equivalent of having those theme-pickers. :) Anyway, please join the [elm-discuss Google group](https://groups.google.com/forum/#!forum/elm-discuss). Maybe someone there can suggest a better strategy. 
Example 3 is slightly different in that the Action is generated directly by an element in the view. I want to put some logic in update to control sending the Action. Anyway, I'll ask on elm-discuss as you suggest. Thanks.
&gt; What is did not figure out yet is how i would wire Keyboard and Time signals to Messages. You convert the input signals to Action signals using Signal.map and then you Signal.mergeMany all of them (mailbox.signal and the rest of the inputs) into a single signal that is the input of the Signal.foldp. 
&gt; It works now because share-elm has a very old version of elm (0.15) Very old version? The current version of Elm is 0.15.1. &gt; In the new versions that code will not compile. That's actually not true. The code will compile but you will get a runtime error if an unmatched pattern slips through the case statement. It's one of the few ways that you can generate a runtime error in Elm, so it's important to always put an "otherwise" (`_ -&gt; `) pattern at the end of a case statement. Here's an example of what the error looks like: Uncaught Error: Runtime error in module Main (between lines 4 and 6) Non-exhaustive pattern match in case-expression. Make sure your patterns cover every case! 
&gt;I have read the elm architecture guide as well, but it doesn't show how to use ports. The easiest way to use ports I can think of is to create them in the Main.elm and just connect a mailbox to them. Pass the address of that mailbox inside your model via an init function and then use that address to send the messages to that port (via its mailbox) directly or using the some helper functions to wrap a Signal.send in and Effect :) I've put some code to demonstrate this into [this gist](https://gist.github.com/pdamoc/97ca5e1ad605f7e5ebcb). 
&gt; I'm still not clear on how my JSAction Tasks end up being executed. The JSAction is not a task but an Action. The Task is the actual sending of this action to the JSMailbox. The mailbox signal is connected to the port and... this informs the runtime that information flows though there. In JS land you can subscribe to that port. Have you seen Evan's videos on youtube? Like [this one](https://www.youtube.com/watch?v=Agu6jipKfYw)... &gt; Does `()` mean "anything"? `()` is a tuple with no elements, the empty set if you will. It is the equivalent of None. The reason I put `()` in my code is because I like to have `Task.map NoOp` rather than the function like you have. It is a personal preference, your version is just as better. &gt; How does Task.map NoOp not "throw away" or "mask" the original action? The answer lies in the signature of Task.map: `map : (a -&gt; b) -&gt; Task.Task x a -&gt; Task.Task x b`. You can think about that like this: To have `b` you first need to have `a`. So, the execution that produced `a` will always happen first and then the runtime know how to produce the `b` because you just provided a function that does the conversion `a -&gt; b`. So yeah, you intuition that *"the task will be executed, and the success type will be coerced to NoOp to satisfy the type of my 'update' function"* is spot on. 
I did read the architecture guide and the source code for both StartApp and Effects before coming here, but the guide and StartApp never answered my big questions of "how and when are tasks executed" (which you just did hopefully), and what all this stuff to do with the Effects library is for (a union type with a vague introductory paragraph) when we just want to create a Task (obviously like a JS promise). I just found it VERY hard to follow the flow of values in StartApp when they may alternately be types, functions, or values, as my functional background is mostly just transforming and reducing arrays in Ruby. My brain will catch up eventually, but for now curried functions and such give me a massive headache.
Kind of... I settled on exporting the ColorPicker's current color as a signal. I haven't actually tried it but I think this approach would work: module ColorPicker (signal, view) where signal : Signal Color signal = ... view : Color -&gt; Html view color = ... 
Also, I guess in that case the "()" in [Signal.Address ()](https://github.com/evancz/elm-architecture-tutorial/blob/master/examples/4/Counter.elm#L42) means that a function should be sent? How does that syntax work?
"()" means nothing. It's the unit type. It's not sending a function, it's simply sending a heartbeat (represented by the unit type) saying that the button was clicked. Many times, you'll override the value of a unit signal with a constant like so: oneButton : Signal () twoButton : Signal () -- Add every type of action a user can take into one neat type type Action = OneButtonWasClicked | TwoButtonWasClicked -- Override the oneButton signal with our own custom value oneButtonClicked : Signal Action oneButtonClicked = Signal.map (always OneButtonWasClicked) oneButton twoButtonClicked : Signal Action twoButtonClicked = Signal.map (always TwoButtonWasClicked) twoButton -- Use this signal with a foldp to react actions : Signal Action actions = Signal.merge oneButtonClicked twoButtonClicked -- applyActionToState &amp; initialState left as exercise for reader update : Signal ProgramState update = Signal.foldp applyActionToState initialState actions
[Here](http://package.elm-lang.org/packages/elm-lang/core/2.1.0) Then type in the name of the function in the search box.
`always` is part of the [Basics](http://package.elm-lang.org/packages/elm-lang/core/2.1.0/Basics). If a function is not explicitly imported... there is a good chance to find that function in Basics. 
Good to know!
**Higher-Order Helpers**, the section where `always` lives, is a very good investment to read. Those helpers are spread all over the examples and sample code. I remember looking at definitions where functions were defined without arguments just by combining other functions with `&gt;&gt;` or `&lt;&lt;` and it looked like magic at first. Even the ubiquitous `|&gt;` and `&lt;|` seamed strange at first. 
You can think of `()` as `void` in languages like Java or C or C++. It's what you say when the value is totally uninteresting. You can also think of it as a tuple with 0 entries. The most boring kind of tuple :)
&gt; So what's it purpose? It makes certain things easier. You don't have to manually manage addresses when you execute the tasks (in order to send the results to the proper place). You don't have to manually manage animation events. 
Use the `fst` function from the `Basics` module. http://package.elm-lang.org/packages/elm-lang/core/2.1.0/Basics#tuples
Folds are accumulator functions. They take a set of values and produce a single result. Here, foldr is taking an initial state, [], and a list of x's, combining each "x" with the currently accumulated state by applying the function "f". The significance of the "r" in "foldr" means to start at the right-hand side of the input list and walk through to the left-hand side (the convention "foldl" would mean "start from the left-hand side of the list"). If we were to call "mystery [1,2,3]", we could step through it like so: foldr f [] [1,2,3] -- substitute [1,2,3] for xs -&gt; f 3 [] = [] ++ [3] -- apply f to [] and 3 -&gt; f 3 [] = [3] -- apply (++) foldr f [3] [1,2] -- next step of foldr -&gt; f 2 [3] = [3] ++ [2] -- apply f to [3] and 2 -&gt; f 2 [3] = [3,2] -- apply (++) foldr f [3,2] [1] -- next step of foldr -&gt; f 1 [3,2] = [3,2] ++ [1] -- apply f to [3,2] and 1 -&gt; f 1 [3,2] = [3,2,1] -- apply (++) foldr f [3,2,1] [] -- next step of foldr; empty [] means we're done! foldr f [] [1,2,3] = [3,2,1] -- "mystery" is the function "reverse a list" So, "mystery [1,2,3]" will yield [3,2,1]; it reverses the list it is given. "fold" is also known under other names, such as "reduce", as in Google's "MapReduce".
This piece of code reverses a list. `foldr` means 'fold right'. It traverses a sequence from right to left combining elements with the supplied function. The functions supplied to foldr takes two parameters: `next`, the current element and `soFar`, the accumulator. The result of an application of `f` becomes the accumulator for the next application of `f`. The next sequence element becomes the `next` value. Suppose we start with the list [1, 2, 3, 4, 5] Fold starts at the very right of the sequence and applies `f` to the rightmost element (`5`). At this point we do not have any accumulator yet, because this is the first time we run `f`. This is why we need to supply a starting value (`[]` in your case). So `foldr` calls `f` with `[]` and the first element `1`computes the result (`[] ++ [5] =&gt; [5]`). Then it applies `f` to the second element `4` with `[5]` now as the new accumulator (`[5] ++ [4] =&gt; [5, 4]`). Then to the third element with `[4, 5]` as accumulator (`[3] ++ [5,4] =&gt; [5,4,3]`) and so on until lastly `f 1 [5,4,3,2] = [5,4,3,2] ++ [1] = [5,4,3,2,1]`. I hope this gives you a little bit of insight into how folds work.
Thanks! Makes sense now.
Wow, this is absolutely amazing. Awesome job! I'm usually a sublime text user, but seeing this, I'm giving light table.
This is amazing! Great work!
Thank you for your thorough response. I should have been more clear in my OP. My question is why do I get a runtime error and not a type checking error when comparing functions for equality.
Canvas API is an imperative API. A full 1:1 Canvas API would be an imperative API. If what you want is to program imperatively in Elm, you might not have a good time. If you played extensively with the Graphics.* API and there is something you feel is lacking, please open a discussion about that. Maybe the API could be extended to allow the kind of functionality you seek. Alternatively, if what you want is just graphics on the screen, you could forego the Canvas and focus on SVG. The SVG API is a declarative API and it fits way better with Elm functional nature. 
The elm-html package let's you build up `Html`, and put it as a child node of another `Html` tag. So if you run startapp, get your `Signal Html` representation of the component, then you can `Signal.map`a function over it of type `Html -&gt; Html`, that takes the `Html` of the component and wraps it in some other `Html`. Done :)
My problem is that the value doesn't get to the model unless I explicitly send it after the app starts. I can't find a way to sample the initial value of the signal.
The port in my example is not of type `Signal String` but of type `String`. You can use its value like any other regular value as I've shown with the `text` function . 
Awesome, I didn't know you could do that! I thought ports had to be signals.
Thanks, where would the best place be to open the discussion about extending the Graphics API? It's really excellent, but missing a few things like masking, drop shadows and and blend modes that I will need to use in an upcoming project.
I'm new to elm as well, but this should help a bit: Notice that in foldp, the first argument is expected to be a function which takes a and a state and returns a state: (a -&gt; state -&gt; state) a means just any type...not sure if I said that right but it means a is just a value of any type. So the problem at first is that the moveTo function only looks like it's taking one value... change it to something like: moveTo click (x1,y1) = and then the function makes sense for what foldp expects. There are probably other improvements you could make etc but for just getting around the foldp problem that's it :).
Awesome, thank you!
Hey friend, thanks for the response. I guess I should've been a bit more specific. The professor gave us this code: import Html exposing (Html, Attribute, text, toElement, fromElement, div, input) import Html.Attributes exposing (..) import Graphics.Collage exposing (..) import Graphics.Element exposing (..) import Html.Events exposing (on, targetValue) import Signal exposing (Address) import StartApp.Simple as StartApp import Dict as Dict import List as List import Regex as Regex import Maybe exposing (Maybe) import String {- -------------------------------------------------------------------------------------- - Draw Histogram - - TODO: - Right now drawHistoGraph just prints the dictionary of word frequencies to the screen - Change the code to use the wordFreqs dictionary to create a Histogram - (just create a list of filled color (rect size1 size2) and call collage) - Reference http://package.elm-lang.org/packages/elm-lang/core/2.1.0/Dict - -------------------------------------------------------------------------------------- -} drawHistoGraph : String -&gt; Element drawHistoGraph par = let words = Dict.keys wordFreqs wordFreqs = updateWordDict (parseWords par) in show wordFreqs -- change to collage ..... {---------------------------------------------------------------- - Update Word Histogram - -------------------------------------------------------------------------------------- -} worthCounting : String -&gt; Bool worthCounting word = case word of "the" -&gt; False "or" -&gt; False "to" -&gt; False "and" -&gt; False "a" -&gt; False "in" -&gt; False "is" -&gt; False "it" -&gt; False "that" -&gt; False "was" -&gt; False "for" -&gt; False "of" -&gt; False "on" -&gt; False "are" -&gt; False "with" -&gt; False "as" -&gt; False "be" -&gt; False "at" -&gt; False "have" -&gt; False "had" -&gt; False "or" -&gt; False "" -&gt; False otherwise -&gt; True updateWordDict : List String -&gt; Dict.Dict String Int updateWordDict words = List.foldr (\w d -&gt; Dict.update w addWord d) Dict.empty words addWord : Maybe Int -&gt; Maybe Int addWord w = case w of Just x -&gt; Just (x+1) Nothing -&gt; Just 1 parseWords : String -&gt; List String parseWords par = List.filter worthCounting &lt;| Regex.split Regex.All (Regex.regex " ") (removeSpecialChars par) removeSpecialChars : String -&gt; String removeSpecialChars par = let special = "[,.]" in Regex.replace Regex.All (Regex.regex special) (\_ -&gt; "") par {- -------------------------------------------------------------------------------------- - HTML Code - -------------------------------------------------------------------------------------- -} main = StartApp.start { model = "", view = view, update = update } update newStr oldStr = newStr view : Address String -&gt; String -&gt; Html view address string = div [] [ input [ placeholder "Enter Text" , value string , on "input" targetValue (Signal.message address) , myStyle ] [] , div [ myStyle ] [ fromElement (drawHistoGraph string) ] ] myStyle : Attribute myStyle = style [ ("width", "100%") , ("height", "40px") , ("padding", "10px 0") , ("font-size", "2em") , ("text-align", "center") ] To start with. Then, we basically have to replace the "show word freqs" with the collage of rectangles relating to the word frequencies. Your post would probably be an absolute lifesaver if we hadn't already been given a basic template. The thing I'm having more of a problem with is turning the text-based word frequencies into a graphical representation.
Elm already does its magic when it desugars `record.value` to `.value record` (I imagine). It would be interesting to have a language where record creation already comes with the corresponding lens. The fact that elm allows you to have records with same internal value names complicates this, no?
Thanks for that. It looks like other people have run into the same issue, and it looks like my prediction that the syntax will change is likely. Putting on my programming language designer hat, I completely understand why people want to approach this sort of thing cautiously. I do not condone the wanton addition of new features to a language without careful consideration. On the other hand, putting my web developer hat on, I really want this to get changed sooner rather than later so I can simplify my code considerably! ;)
1jc3? ( ͡° ͜ʖ ͡°)
I personally have found Haskell to be a better place to learn functional paradigms from mainly because of the abundance of documentation, and because it isn't as shoehorned - Elm has a strong bias towards creating UI's, whereas while learning Haskell, you can focus on the logic of a program without worrying about display html/javascript constraints.
Thanks.
That new book looks great, I'll likely buy it soon.
I use Vim with [elm-vim](https://github.com/ElmCast/elm-vim) and it's [fairly nice](https://vimeo.com/132107269).
I use Elm package for Sublime. It doesn't give much: highlight, symbol search.
The minesweeper blog post that was submitted recently mentions a lighttable plugin for elm that looks pretty nice too. 
That's 11:00 AM Wednesday in San Francisco, CA
The YouTube live stream exploded 10 minutes in :(
Looks like the recording is up and working.
&gt; it doesn't work with jquery or jquery UI at all... Does it not? That's a shame since as I've said I'm using split-pane which uses jQuery, so I guess that rules out Elm. Which is sad because I was hoping that it's functional approach would remove a lot of the faffing around that web client development seems to involve. It's not even as if jQuery is something obscure. 
&gt; I would recommend choosing a part of the application that would work well with Elm and just focus on that That makes sense, and I may do that. Is it possible to: 1. call an Elm function from JavaScript? 2. call a JavaScript function from Elm? 3. write a web page in html and get Elm to manipulate the DOM?
That's an excellent use case for Elm How "easy" it will be depends on how much you want to commit to Elm. It's overkill if that's all you're using it for, and you don't want to invest in it as a tool to use more widely in your projects. I would highly recommend taking the Pragmatic Studio course on Elm. It'll show you just this sort of thing.
I think this is a very nice example of where Elm is great! Here is [a working version](http://pastebin.com/pw6skMkV) of what you asked for. Just paste it into [the online editor](http://elm-lang.org/try) and try it out! If you go through [the Elm Architecture Tutorial](https://github.com/evancz/elm-architecture-tutorial), it will tell you a lot about what is going on here. Why the code is structured this way, etc.
Still confused a bit though I think. `Signal.map2` takes two Signals as inputs... does this mean that in Elm you can pass a two-item tuple to a function as two arguments? Otherwise, wouldn't the tuple created from `(,)` be passed as a single argument input to `Signal.map2`
Is there anyway I could go about doing it though to get the results I want? considering I need the values to stack for my program to work right.
[This link might help.](https://groups.google.com/forum/?fromgroups#!topic/elm-discuss/OlzLOPixsYg)
Keep reading; you'll get there. *Model, Update, View.* Your update function will take an action, and a model, and return a new model. If I say `thing = {foo=0, bar=0}`, then `thing` will **always** be `{foo=0, bar=0}`. And if I say `thing2 = {thing | foo &lt;- thing.foo + 1}`, then `thing2` will **always** be `{foo=1, bar=0}`. Keep reading, and keep playing; it's worth the effort.
Thanks for the responses. So I made a Model based off the tutorials and it contains a String and an Array that contains the Programmer record with other records. in update I try to update jobscore for the programmer but have no idea how to access the array from the model than the programmer and than update than increment jobscore. Trying to use more than one line of code breaks everything, Could you please help? the code im using in update is: --Inside is the action the causes this to happen and --careers is the array in my model and programInc is the same as the code I have above because Idk how to specifically edit the models programmer record. Inside -&gt; {model | careers &lt;- fromList[programInc, constructionDec, athleteDec, truckInc, writerInc]}
Anyone have the code for the first demo? Been trying to build something similar but can't seem to figure out destructuring to get the value from toInt. 
* [Learn how to build reactive web apps using Elm in this practical, step-by-step tutorial.](https://pragmaticstudio.com/elm) * [Create more reactive Elm apps by mastering signals in this in-depth tutorial!](https://pragmaticstudio.com/elm-signals) * [Walkthrough: Introducing Elm to a JS Web App](http://tech.noredink.com/post/126978281075/walkthrough-introducing-elm-to-a-js-web-app) * [Building a Live-Validated Signup Form in Elm](http://tech.noredink.com/post/129641182738/building-a-live-validated-signup-form-in-elm)
After trying out vim, Lighttable, Sublime Text and Atom I found that Atom by far has the best support (specifically when you install goto). Thanks.
Yep, that's what I wanted! Thanks!
Thanks for the reply! The problem is that using time signal alone is easier, but I don't know how could I join this signal with the StartApp module. Take a look at this project I've made to practice. https://github.com/G4BB3R/jokenpo-elm/blob/master/jokenpo.elm How can I create a event on update method fired by time signal ?
I would love to be corrected on this, but I don't believe this is possible to achieve with the StartApp module as its purpose is to hide away most internal plumbing of signals. However, [I have supplied a patch](https://github.com/narrative/jokenpo-elm/blob/patch-1/jokenpo.elm) to your code which adds an example of the functionality I believe you're after (again, just a simple counter that increments every second). Key things you want to look at are this use of Signal.mergeMany function. Signal.mergeMany [ inbox.signal , Signal.map (always ActIncrement) (Time.fps 1)] This is combines the signal generated from the html events and a Time signal to produce a signal 'Actions' (using Signal.map to basically convert the Time signal into an 'ActIncrement' that occurs once per second). This signal of Actions is then handled the same way as if it were a signal of only Html events as seen here: currentModel = Signal.foldp update model events The rest of the additions/modifications to your code were the addition of the counter value and necessary changes to the state, the view function for displaying the value of the counter, and the update function for incrementing the counter value on the 'ActIncrement' action. Again if you have any other questions please feel free to ask. And if I have presented any incorrect information, I apologize and hope someone corrects me. 
Have a look at https://github.com/camspiers/elm-redchaser/blob/master/Main.elm
Can you give a short explanation?
Thanks for the answer! 
When in doubt, remove the elm-stuff folder. Can you give the exact failing command and it's output? 
Failing command is elm package install and output is Error: Unable to find a set of packages that will work with your constraints. This is in a brand new directory. Thanks for the help!
Thanks for the explanation!
I wrote an application that calls out to jQuery a lot, and gets data sent to it from jQuery. You have to give the Elm application complete control over the portion of the page in which you embed it, but you can still send it data, and respond to events within it in jQuery by attaching the handlers to the application container. I created my own "JSAction" type, and a Mailbox to receive JSActions. Then I created several outgoing ports that use filterMap to split up the JSAction signal by type. Debugging in the reactor is a huge pain though (I never figured out how), because there are a lot of ports to initialize, and data to send in. Some things I used jQuery or raw JS for that I couldn't do in Elm (or figure out how to do in time to ship): * Call .focus() on an input field * Use jQuery UI effects (really needed the highlight effect; you can do this in Elm, but I had no interest in reinventing the wheel when it is a one-liner in jQuery) * Submit a form via XHR (Elm doesn't have a form serialization library yet; you have to create HTTP requests manually) * Respond to keydown/keyup events, but only if certain keys were pressed, otherwise cancel the event. (You can do this, but the solution I saw was so roundabout as to be more complicated than sending the keydown event from jQuery via a port.) * Send the JSON response from submitting a form back to Elm so it can update the UI. This all uses the more complicated form of StartApp, so you will have to understand that separately. It took me a lot of googling and posting here to do so.
Congratulations and thanks for the hard work!
Hooray for Elm!
Loved it &lt;3
Ah. Worked for me there, too. Odd.
I don't know enough to answer your question directly – whether or not it's intentional. But proportions (in the real world) can't ever be negative – what would it look like to have negative twice as many apples as you do now? Are you trying to make it smaller? If so, treat 1 as the present size. Half of 1 is 0.5, so that scale factor would make it half the present size.
Works fine for me in the online editor
Christmas came early this year boys. And looks like Santa brought presents. Thanks to /u/wheatBread and other contributors for all the hard work that's gone into what looks to be a great release.
I'm getting the same error with the elm try editor, too. 
Answered my own question. Sorry to trouble you. The code is well documented, so just: git clone https://github.com/elm-lang/core
If you take a vector and multiply it with 0.5 you get a vector that is half the length of the original. If you multiply it with -1 you get a vector that is the same length as the original but points to the opposite direction. 
You need to upgrade to using StartApp (not the simple version). It takes "inputs" parameter which you can use for signals. It does the mergemany behind the scenes. EDIT: since I couldn't find a good example and there are a few gotchas I created a gist trying to keep it as simple as possible but illustrate the use of signals with StartApp https://gist.github.com/savuori/d09a8e67e42e169ff5f1
Oh cool. For other Mac OS users who didn't know (like me): Dash is for Mac OS (and iOS, apparently, but I haven't tried).
You getting lag on input or something? Or do you mean it has a low frame rate?
I think at this point it's better to use elm-html — Elements are not there yet
The frame rate is low and very inconstent.
What browser are you using? I tested your game in Chrome and it works great, both at 35fps and at 60fps. No noticeable lag at all. I've had problems with framerate consistency and stutter in Firefox, but it runs buttery smooth in Chrome. Had these issues since at least version 0.12 when I used Elm to write a game for Ludum Dare, so it's not a new thing.
Same. [My Ludum Dare game](https://github.com/soupi/ld32) also suffered from lower frame rate on Firefox but was ok on chrome after loading the assets.
The problem you might be having might be related to the fact that Graphics.Element is too high level to be used as a low-lever renderer in and ad-hoc game engine. If you can create some kind of scene-graph that you can manipulate in Elm but send to JS through a port for rendering in a proper game engine, you might see an improvement in performance. 
Warning: elm noob here :D I think it's because you are not actually drawing/rendering? the yellow text. I used "text" to draw the yellow text and then "outlinedText" to draw the outline separately. You could probably combine those two in one function: import Graphics.Collage exposing (text, outlinedText, solid, Form, collage) import Graphics.Element exposing (..) import Text import Color exposing (..) textForm : Text.Text textForm = Text.fromString "Hello World" |&gt; Text.height 70 |&gt; Text.color yellow outline : Text.Text -&gt; Form outline = outlinedText (solid black) main : Element main = collage 400 200 [ (text textForm) , (outline textForm) ] http://share-elm.com/sprout/56506554e4b05f0d6cc4a105 
Thanks for your answer! Might be a small difference, but a function that's creating just the outline should be called textOutline as opposed to outlinedText... From the [outlinedText](http://package.elm-lang.org/packages/elm-lang/core/3.0.0/Graphics-Collage#outlinedText) description I would expect it creates an outlined text form: "Create some outlined text. Since we are just outlining the text, the color is taken from the LineStyle attribute instead of the Text." Btw, that's what I ended up doing for now:)
Tested is firefox,chrome and safari. Can you share an example of game that has no lag?
Yes, doing the rendering through port looks like a good solution.
Doing rendering through ports sounds doable, but I would try [elm-html](http://package.elm-lang.org/packages/evancz/elm-html/latest/) first, because it was fast when it [came out](http://elm-lang.org/blog/blazing-fast-html), but apparently with 0.16 it got even faster. Also, here's the discussion on Elements vs elm-html: https://groups.google.com/d/msg/elm-discuss/zj4-4b0j8_I/rSx8E13_9H4J
No problem. Returned to 15.1, in a few weeks I don't need elm anymore :) just for a school project now :) 
Yeah, it feels a bit unintuitive although if one reads the description it actually does what it says: "...just outlining the text". At least in in hindsight. Glad I could help!
Thanks for the tip, I'll give those a try
I'd actually really like to get Elm's hot swapping working with the above set up instead of using an IDE plugin. Since I'm using elm reactor to serve the content it SHOULD just work, but I must be missing something... That way the code would live update based on code changes (not IDE save events) and would push to all localhost:8000 sessions, which would allow live-reloading on multiple/external browsers (e.g., different PC or iPad, etc - anything pointed at localhost:8000). You'd also get the amazing benefit of code changes without losing state, which of course you lose with a page refresh.
Could you use a JS Web-GL scene graph like Pixi or Three.js? Would this be fairly easy to implement? 
Yes, a fixed tilmestep with variable rendering loop would certainly be possible. As long as you have an event loop of any kind, you can do it. I've adapted this algorithm for use in canvas games very successfully: http://gameprogrammingpatterns.com/game-loop.html However, does anyone out there know if Elm's internal update loop uses setInterval or requestAnimationFrame for its event loop? And, how does it clamp the frame rate? Ideally, the event loop should be using requestAnmationFrame, unclamped, for maximum flexibility to create a custom game loop using smooth position interpolation. 
If you want to use redux-style "reducer composition", just create a small update function for each field in your model record: type Action = Increment | Decrement | AddTodo String type alias Model = { counter : Int , todos : List String } counterUpdate : Action -&gt; Int -&gt; Int counterUpdate action state = case action of Increment -&gt; state + 1 Decrement -&gt; state - 1 _ -&gt; state todosUpdate : Action -&gt; List String -&gt; List String todosUpdate action state = case action of AddTodo text -&gt; state `List.append` [text] _ -&gt; state update : Action -&gt; Model -&gt; Model update action model = { counter = counterUpdate action model.counter , todos = todosUpdate action model.todos } From what I can tell about `applyMiddleware` (I haven't used redux that much), it seems to allow the developer to insert side effects before the `update` function is called. Elm is pure language, so you're going to have a very hard time emulating that functionality exactly, although you can do some impure actions like writing to the console with the `Debug` module. If you want to perform asynchronous tasks, take a look at the [Task library](http://package.elm-lang.org/packages/elm-lang/core/2.1.0/Task) http://elm-lang.org/guide/reactivity#http-tasks 
The update/reducer composition part makes sense. Thanks. As for the middleware, technically yes a developer could insert side effects before update but I'm not aware of anyone who would recommend doing that. The most common examples of middleware that I'm aware of are performing asynchronous actions, logging, error handling, and recording actions for the purposes of time travel (undo/redo) and reproducing bugs. It looks like that Task library will take care of async actions and the Elm debugger handles time travel. Thanks for the help!
I was getting the same message: the reason is that 0.16 doesn't allow having upper-case names / URLs inside of elm-package.json. Go to your home folder and remove `elm-package.json` and the `elm-stuff`folder, restart the REPL and type 1+1.
I apologize I can't answer your question! All my attempts resulted in the following: Uncaught TypeError: Cannot read property 'kids' of undefined I believe this was due to the introduction of a circular dependency, but I'm at a loss as to how one might go about accomplishing this *without* doing that. Would be fascinated to see an answer to this.
I see now. I guess the best way to do this is to create a vocabulary that allows you to implement the game and to implement that vocabulary in JS and expose it to Elm via Native. This vocabulary should be a functional one so that you can use it optimally in Elm. 
In theory yes, you could use Pixi.js or Three.js. In practice, it depends on how you manage to map the API. Elm is still not friendly enough to create bindings and, because it is not an imperative language, I doubt it will ever be easy to bind to JS unless the API is designed to be used in a functional way. 
Two recommendations: 1. **Use the official Time intervals.** You have `second`, you have `millisecond` and you can do all kinds of operations on them like multiplication `500*millisecond`. 2. **Use the official Elm Architecture Tutorial.** [Example 8](https://github.com/evancz/elm-architecture-tutorial/blob/master/examples/8/SpinSquare.elm) shows the use of a Tick to do custom stuff. Now, please note that the Tick in the example is different from your Tick but it can be used to implement what you want. If I were to do it, I would just replace your Tick with a Beat and in the Tick handler I would check against an accumulator if enough time has passed (tickInterval) to generate the next Beat. If enough time has passed I would reset the accumulator to the difference between the accumulator and the tickInterval and generate a Beat. In the Beat handler I would do the tickCounter increment. 
I got the autorefresh on multiple external browsers working with [browsersync.io](http://www.browsersync.io/#install) and the command: browser-sync start --proxy "localhost:8000" --files "*.elm" Of course you still lose state. According to the elm-reactor [site](https://github.com/elm-lang/elm-reactor) you have to refresh the browser yourself to see changes of your code &gt; If you modify the file, you can just refresh that page and see the new version! AFAIK hot-swapping only works in the [browser editor](http://elm-lang.org/try). I hope I'm wrong :)
There is a lot more activity in the Google usergroup which you can find here: https://groups.google.com/forum/#!forum/elm-discuss
To my understanding React is trying to be functional in a language that does not enforces functional programming. This means that in order to properly program in a functional way in React, you need to use self-discipline (take no shortcuts). This is not sustainable in the long run. People will take shortcuts and code quality will suffer. As for popularity, React has the resources of FB behind it and that matters. So far, Elm had less resources thrown at it. [The Pragmatic Studio videos](https://pragmaticstudio.com/elm) have been helpful for some people. I would also recommend these two videos: ["Controlling Time and Space: understanding the many formulations of FRP" by Evan Czaplicki](https://www.youtube.com/watch?v=Agu6jipKfYw) and [Let's be mainstream! User focused design in Elm](https://www.youtube.com/watch?v=oYk8CKH7OhE) 
That is technically not the same as what redux is doing when you combine reducers. If you look at the documentation, each reducer is a tied to a specific key in the state. The counter reducer, for example, updates the `counter` key on the state object. `combineReducers` does not take a list - it actually takes an object (or a record, in Elm terms). combineReducers({ todos: todosReducer, counter: counterReducer }) 
Ooopsies... my bad. I've looked too superficially. :) 
I think per default, elm uses setTimeout, but there is a library for animationFrame: http://package.elm-lang.org/packages/jwmerrill/elm-animation-frame/1.0.4/ With that it might be possible to create such a game loop.
Yeah, I think the benefits of the fully declarative nature are easy to grasp at a high level, but the declarative nature also seems to be the hardest part as a beginner. I've been learning Elm for half a week and daily I'd often kill for a `console.log` just to see what's happening ... yet my concrete understanding of what's going on is so weak (like in a pipeline of `andThen` tasks) that I'm not even sure how to hack in a Debug.log. Anyways I refactored my original example to use StartApp, `Model -&gt; (Model, Effects Action)`, and got it working. - Code: https://gist.github.com/danneu/663c723d16412af615a9 - Screenshot: https://dl.dropboxusercontent.com/spa/quq37nq1583x0lf/szw0cgu4.png
Thank you, I've been wondering about that. I suppose it would be better to write a native Elm 3D/2D scene graph from scratch. That's a good long-term project for me :) 
What you're describing is a binary tree. It's a data structure that's commonly used to sort elements, where the left branch is less than the node's value and the right branch is greater than the node's value. https://en.wikipedia.org/wiki/Binary_tree Here's a hint: to find the total number of elements in the tree, you'll need to recursively traverse through each branch.
That's what I figured, so something along the lines of this should work: size tree = case tree of Empty —&gt; 0 Branch value SortedTreeL SortedTreeG —&gt; (size(SortedTreeL))+(size(SortedTreeG))+1
https://github.com/rgrempel/csrs-elm I got this while browsing Elm's packages. It might useful for you :)
I can empathize. I've been burned myself by the Task code and the only solution I found was to keep it so simple that I don't need to debug it. I use Debug.log only in the resulting Actions from the Tasks. Your code looks nice. Maybe the Beat part could use an `if`: Beat now -&gt; let timeSincePrev = now - (Maybe.withDefault 0 model.prevBeat) newModel = if model.isRunning &amp;&amp; (timeSincePrev &gt;= model.interval) then { model | beatCount = model.beatCount + 1 , prevBeat = (Just now) } else model in (newModel, Effects.tick Beat) Also, I don't know if this is important or not but with the current model you will have a drift caused by the fact that you are losing some milliseconds each time timeSincePrev is greater than model.interval. You can prevent this by using something like `prevBeat = Just (now-timeSincePrev+model.interval)` or, more explicit: prevBeat = case model.prevBeat of Nothing -&gt; Just now Just prev -&gt; Just (prev+model.interval) Of course, this too will create a drift if timeSincePrev &gt;= 2*model.interval :) 
+1 for pragmatic studio videos. Highly recommended and well worth the money
Which isn't tail recursive and may be problematic for deep trees. I believe this is a depth-first tail-recursive size implementation: size tree = size' [tree] 0 size' nodes n = case nodes of [] -&gt; n (Empty::nodes) -&gt; size' nodes n (Branch _ left right::nodes) -&gt; size' (left::(right::nodes)) n
Anyways to leave comments on the posts?
Composition in Elm Architecture can be a little bit tricky. It basically rests on composing types into more complex types (the model or the state) and then setting up delegation for the `view` and `update`. You're not composing the result of the triad (init, update, view) but you are composing each part of the triad in the proper place of the parent. I know this feel complicated but it actually presents a lot of flexibility allowing you to plug and play with different update functions or with different views. I know I haven't given you much but, you have given me an idea. I will try to implement something similar to what you are describing in order to figure out how to best explain this. 
I'll put some stuff up as soon as I figured out how to get Github pages to make an Rss feed of just my Elm posts. 
While the Pragmatic Studio videos might be very useful for people learning Elm, wouldn't it be a hard sell for the OP to get his teammates to watch them? "Hey, we should switch to Elm. Go ahead and spend $20 to find out why" isn't something that would persuade me if I knew nothing about Elm yet. Are there any more *free* videos that would help demonstrate Elm's advantages to people who've never heard of it? The "free" part is important, in my experience. (To clarify: I've watched the "Let's be mainstream!" video, and it's good -- can't speak to the "Controlling Time and Space" video since I haven't watched it yet. But I'd love to know of five, or fifty, or five hundred such videos, not just two.)
You, of course, are right. I too wish there were more resources for Elm. 
I once had a similar scenario. I wanted to be able to switch between four different languages of the same page. I solved it using an url parameter (link?lang=fr). At the time there was no way to read out this parameter with elm, so I used JS and a constant port on the elm side. This worked very well. If there is a way to do that only using elm now, I don't know, but if there isn't, then a port is a very nice and easy solution.
Use ports. In your index.html: &lt;script type="text/javascript"&gt; Elm.embed(Elm.MyApp, {config: "test", externalUrl: "http://www.google.com"}) &lt;/script&gt; In your elm code `MyApp.elm` port config : String port externalUrl : String
Elm taught me that it is better to be explicit about what you do. If you have two configurations you should use something that encapsulates this. So, I would put a variable names DEBUG = True and I would conditionally load a record with information. I would then use that record where custom information is needed by doing pattern matching. i.e.: in Config.elm I would write: DEBUG = True cfg = if DEBUG then { externalUrl = "https://google.com" , noOfFoo = 42 , noOfBars = 1 } else { externalUrl = "https://wonderCo.com" , noOfFoo = 1 , noOfBars = 0 } in Main.elm I would `import Config exposing (cfg)` and then I would use cfg: `someComponent cfg` and someComponent defined as: someComponent {externalUrl} = ... 
I made a port to pass in a config object / record in the Elm.Embed call. Makes elm-reactor hard to use though, unless there is a way I don't know about.
&gt; However, code should not need to contain details of the environment it is operating in, and should not require recompilation whenever that environment changes. If you prefer to keep the information outside of the code, you could simply encapsulate that information within a record and provide the record as configuration to the code at runtime. in Elm you could have port config : Configuration cfg = if DEBUG then defaultConfiguration else config init : Model init = { url = cfg.externalUrl ... and have in html something like var configuration = retrieve_configuration() Elm.fullscreen(Elm.Main, {config: configuration}); This setup will allow you to develop with a default configuration while in debug phase and once you package and deploy, use whatever means of providing the configuration you choose. You can get the configuration from a configuration server or you can hardcode it in the Html or you can have some external script generate the html with the environment specific configuration. Later edit: On second thought, if you chose to go with ports you might actually want to move the defaultConfiguration in JS land too and just use `config` where `cfg` is in the above example. 
You could put the config data in a separate json file which you serve statically in the same way as the generated javascript.
Unimpossibilitiation confirmed
It's not really a meaningful concept. In a language like Elm with immutable data, any two lists with the same elements are conceptually the same list. Reference equality tests are just a performance optimisation based on the fact that Elm compiles to JavaScript, which is a realm which has those concepts and in which they mean something. Obviously one prefers if the compiler is able to ensure as much as possible that duplicates of the same values don't actually exist in memory, but sometimes that's going to be more expensive for performance than just letting a copy sit around.
Maybe use a custom style that prevents user selection. :) import Html exposing (..) import Html.Attributes exposing (..) noSelectionStyle : Attribute noSelectionStyle = style [ ("-webkit-user-select", "none") , ("-moz-user-select", "none") , ("-khtml-user-select", "none") , ("-ms-user-select", "none") ] main = div [noSelectionStyle] [text "Try to select me"]
I can't give technical feedback because I myself am also learning Elm, but I wanted to say well done. This is a cool idea. 
At least here, changing the chunk size changes the speed, while the chunk size is always at 3.
Thanks, I must've just broken it while cleaning it up for the push. Edit: Should be fixed now ([patch](https://github.com/danneu/elm-speed-reader/commit/a8e07558409813c1520721cbb9b114aae26b1bed)). I originally was re-chunking the text on every loop and recently added `model.chunks = Array (List String)` to avoid that recalculation. But forgot to ever update the chunks when changing chunkSize. One of the pain points of this repo is how much state I'm tracking. Lots of it can be derived from other state instead of explicitly being tracked which would spare me from out-of-sync issues like this. Not sure if the speed issue is still an issue.
You were probably downvoted because there isn't enough context to answer your question.
The code looks clean and idiomatic to me. For the next version, I would suggest to split the code that handles the core functionality of the speed-reader into a different component. In my view, this component is displaying just the text and is able to receive Actions that would be change its behavior. The UI that controls everything (what you have now bellow the text) could be in a component that uses the above component and controls it by forwarding it the appropriate actions. Maybe the core component has no idea about time and all it knows is how move to the next group of words. Maybe you can construct another component that has an idea of time by extending the first component with relevant time related state. 
Excellent! Exactly what I was looking for. Thanks!
Livereload? Here's what I use with Gulp (maybe you'll have to change some paths): https://gist.github.com/Janiczek/34a0953ee31d273f56f9 Here's the Chrome extension I use (there is more of them): https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei?hl=en
From what I've read, your solution seems to be the correct one: http://package.elm-lang.org/packages/evancz/elm-html/4.0.0/Html-Events#onWithOptions Regarding implementing your solution: Can I now just use your new custom version of `onClick` as a drop-in replacement for Elm's?
It is used to concatenate lists and strings ```[1, 2, 3] ++ [4, 5, 6]``` ```(++) [1, 2, 3] [4, 5, 6]``` Both way returns [1, 2, 3, 4, 5, 6]
My guess is that you've hit an issues that plagues many: The signals have an initial value but there is no event triggered for this initial value. The preferred solution is almost always to use [foldp'](http://package.elm-lang.org/packages/Apanatshka/elm-signal-extra/5.7.0/Signal-Extra#foldp') Bellow you will find a piece of code that will demonstrate this. Please note that I've put there both the "regular" version with Signal.foldp (sig1) and the version that uses the initial value of that signal (sig2). If you use sig1, the value will remain at (0,0) until you resize the window. If you use sig2, the value will be correct from the beginning import Html exposing (..) import Window import Signal.Extra exposing (..) view m = text &lt;| toString m update new old = new sig1 = Signal.foldp update (0,0) Window.dimensions sig2 = Signal.Extra.foldp' update identity Window.dimensions main = Signal.map view sig2 
Thanks for the summary below the video, after reading this part: &gt; untyped == more errors And others of the same kind, I decided not to watch it. Really helpful, more people should do that.
Makes sense :) I wonder if the net effect would be that no one ever watches talks anymore :P
But the question is, why do you think that "untyped == more errors" is false ?
Is not about what I think is false or not, is about how useful was the summary in letting me have an idea about the quality of the content in the video which given the language that I saw in the summary, gave me the impression that it was very low and didn't worth my time. Again, people should put descriptive summary more often.
I think of Signals as simply a sequence like a list so any of the traditional operations you might do with a list, you can also do with a signal: map, reduce (fold), zip (merge), filter, etc. I find they are very similar to "Observables" so you may find a useful example at the [ReactiveX](http://reactivex.io/) site. (Note: if you find their explanation confusing, try looking at a code sample in one of the languages that you're familiar with, they have implementations in a _lot_ of languages, so there will hopefully be something you're familiar with already). Foldp is exactly the same as the fold operations available on a list except there's only one because we aren't Merlin :P. For using foldp to update state, imagine you have the sequence of all of the users actions during their use of your program. Using fold on that sequence with an initial state and a state transition function gives you the final state of your app except since this is `Signal.foldp` you create a signal which outputs your app's _current_ state based on the inputs up to now. As an example, imagine that your program takes integers from the user and provides to them the sum of all the numbers they have entered so far. Suppose the user enters the numbers from 1 to 5 so that the input stream looks like this: [1, 2, 3, 4, 5] Your program's state at any given moment is the sum of all integers entered so far, so your initial state is simply 0, and your update function takes the current state and adds it with the new input: update currentSum input = currentSum + input If you ran `List.foldl update 0` on the list above, you'd get back the value 15 since that's the sum of 0+1+2+3+4+5. In much the same way, the signal produced by `Signal.foldp update 0 inputSignal` would produce the values [0, 1, 3, 6, 10, 15] as the user entered their values.
Signals are, like **lists**, *things that you can map over*. But instead of mapping over values laid out in space, you are mapping over values that occur over time. To `fold` over such values is to gather them into a single value. The sum of a list of integers. The accumulation of so many updates.
["Controlling Time and Space: understanding the many formulations of FRP" by Evan Czaplicki](https://www.youtube.com/watch?v=Agu6jipKfYw) might help you understand those concepts better. As for my own understanding, it all boils down to "behavior". **Behavior is a series of states** that the program goes through: `s1`-^a1 -&gt;`s2`-^a2 -&gt;`s3` .. etc. In order to implement that you start from an initial state `init` and you use a function that takes the previous value and some form of input and returns the `next`value of the state. In Elm, the `Signal.foldp`is the wiring function that takes the above described function (`update`), the initial state (`init`) and the `input` (a Signal) and implements the `behavior`. It acts like a regular fold evaluated in a loop over an ever growing list containing all the values of an input. Time -&gt; input -&gt; evaluate to t0 -&gt; [] -&gt; init t1 -&gt; [a1] -&gt; update a1 init t2 -&gt; [a1, a2] -&gt; update a2 (update a1 init) t3 -&gt; [a1, a2, a3] -&gt; update a3 (update a2 (update a1 init)) ... The understanding of this mental model was cemented in my mind after I've seen Leslie Lamport's videos on TLA+. [Here is one of them.](https://www.youtube.com/watch?v=-4Yp3j_jk8Q) 
I'm not a big fan of analogies for these things. I would first check out: * all the "Signals" examples on [the examples page](http://elm-lang.org/examples) To get deeper into "what is really happening" I would check out either of these: * ["Controlling Time and Space" talk](https://www.youtube.com/watch?v=Agu6jipKfYw) * [My thesis](http://elm-lang.org/papers/concurrent-frp.pdf) which is kind of a more in-depth version of the talk. Don't be scared off by the thesis! I tried really hard to make it fun and easy to read. I have heard folks say that having an understanding of what signals actually turn into under the hood is helpful. I'd be curious to know if you find it useful. I often hear that [this course](https://pragmaticstudio.com/elm-signals) is great. Here's [a review](https://twitter.com/elburabure/status/666702458756980736) ;) I can hopefully get the materials on the website in better shape so you don't have to go through this hodge-podge in the future though!
It does help, thank you! Can anyone explain why in that example `Signal.map` needs to be used to show the result of `countClick`? I understand that `countClick` returns a Signal (which is like an array of values?) but I'm not sure why it does that. Could it just not return the latest value as a single integer? And I'm not sure why `main` needs to be type `Signal Element` Does that mean it's like an array of elements that have changed over time based on the changing value of `countClick`, and that `Signal.map` is somehow pulling out the latest one?
I just looked at [RxMarbles](http://rxmarbles.com/). Really cool stuff.
Oops, meant to link to that one. I'll update my comment!
So, you can use `map` the same as you used to use `&lt;~`. For `~`, the name we usually give is `andMap`. I'm surprised it's not in the standard library, but you can define it like this: andMap : Signal (a -&gt; b) -&gt; Signal a -&gt; Signal b andMap = map2 (\f x -&gt; f x) Then, you can use them in infix form just like you'd use the fancy operators: myVal = f `map` arg1 `andMap` arg2 `andMap`... argn Great to hear that you're learning Elm!
Thanks for the quick reply! (And welcoming newcomers) I figured there would be a way to define them myself, but I'm pretty far from that level of understanding just yet. So I appreciate your help in getting me there.
eml-package --version had the awnser. Thank you very much! It seems that for some reason my install of git was not present in my environment variables, so elm package assumed it was not installed. It works now. Thanks for the tip! What an incredible reaction time as well! I couldn't be more grateful
Yeah I can open a issue if you want me to. Not sure what additional info you would like me to provide however. This is how I see it: Setup: * Had git installed (ticking the option in the git installer to not add git to the default windows command prompt) * Installed elm 0.16 using windows installer * Made hello.elm file containing: import Html exposing (span, text) import Html.Attributes exposing (class) main = span [class "welcome-message"] [text "Hello, World!"] * Opened default windows command prompt at file location * executed 'elm-make hello.elm' * accepted the core language install prompt * executed 'elm-package install evancz/elm-html' * Nothing happens, no messages, no regaining control over prompt, it's just stuck * **executing 'elm-package --version' DOES show there is no installation of git detected and requests me to download it** How I fixed it: * Downloaded git again * Ticked the options to use the default windows shell for git * Retried 'elm-package install evancz/elm-html' * Problem was gone Would you like me to post this to the issue tracker? PS: to take you up on your offer about asking questions: Could you explain to me why (Signal.filter ((==) True) False) Keyboard.space and (Signal.filter ((==) True) True) Keyboard.space both only pass an event when the spacebar goes down? What is the use of the second argument to filter?
Yeah, open an issue titled "Missing git not detected in certain scenarios on Windows" with this information. I'd ask that last question as a separate thread or on elm-discuss. The short version is that "all signals have an initial value" and if you filter with something like `Signal.filter (\_ -&gt; False) 0 Mouse.x` you need to provide the zero so that the resulting signal is well-defined.
https://prezi.com/qaklogolc1qz/why-prezi-is-investing-in-frp-elm/
share-elm.com acted as this. It hasn't been update to 0.16 last time I checked. 
I miss is the Elm REPL version of tryhaskell.org
Unfortunately no, because the compiler can only check on types, not on values. There's no way for the compiler to know what value a function will return at runtime, so it can't guarantee that a value will be within a range. Your best alternative would be to do a check at the start of the function for values outside of the range, and Debug.crash with a special message, but it won't get caught at compile time like a typecheck does :/.
You could also have your function return a `Maybe`. If the argument is out of range, return `Nothing`, otherwise return `Just a`. myFunc : Float -&gt; Maybe Float myFunc num = if num &gt;= 0 &amp;&amp; num &lt;= 1 then Just 3 else Nothing
[Random.int](http://package.elm-lang.org/packages/elm-lang/core/3.0.0/Random#int) `int : Int -&gt; Int -&gt; Generator Int` &gt; Generate 32-bit integers in a given range. int 0 10 -- an integer between zero and ten int -5 5 -- an integer between -5 and 5 int minInt maxInt -- an integer in the widest range feasible 
https://prezi.com/qaklogolc1qz/why-prezi-is-investing-in-frp-elm/
Perhaps I should use Time.every, and then in Signal.map's lambda call Random.int, thus making a Signal of Ints Still, why was Random.range removed...
I'm not aware of a way to use a gradient for a line. There is a [package to expose lower-level canvas operations in Elm](https://github.com/igagen/elm-canvas), but it's not finished and published yet. Maybe you can fork it and use it in your project though. 
The author of the vim plugin started on [elm-oracle](https://github.com/ElmCast/elm-oracle) for this kind of thing, but I think it currently only uses the compiler's exposed information for it. 
 import Random range lo hi sig = let gen = Random.int lo hi seed0 = Random.initialSeed 31415 val = Random.generate gen seed0 update = always (\(_,seed) -&gt; Random.generate gen seed) in Signal.map fst &lt;| Signal.foldp update val sig Or just use a helper from [Random.Signal](http://package.elm-lang.org/packages/NoRedInk/elm-random-extra/2.1.0/Random-Signal)
Same URL because I'm an idiot? I'm just not hearing/seeing any options for audio there. It seems to be just a slideshow.
Awesome! Thank you
I have only just started Elm, so I can only relate to what I'd do in Scala. Seeing as Elm seems to have similar abstractions maybe this would help. I would separate the validation from your function. Your function *probably* shouldn't be responsible for validating it's inputs. Here comes some psuedocode, that doesnt compile probably. So maybe something like type MyDataType Int CreateNew :: x -&gt; Maybe MyDataType CreateNew x = // your logic to validate which returns Maybe MyDataType or Nothing Map on the result maybeDataType map yourFunc Finally pattern match to set a default if it's invalid (or whatever!)
[Elm Architecture Tutorial example 4](https://github.com/evancz/elm-architecture-tutorial/tree/master/examples/4) is a good example of CRUD. You can create a counter (add), read it (display it), update it (increment decrement) and delete it. If you need persistence, you can serialize the model to the local DB as demonstrated by [Elm ToDoMVC](https://github.com/evancz/elm-todomvc). If you're looking for a "full-stack web devel" option, you might find the useful information in [this discussion](https://groups.google.com/forum/#!search/fullstack/elm-discuss/JXklF6WWtt0/MrTroz9fCQAJ). 
Thanks, I'll take a look.
No, because *I'm* an idiot. :) This is the URL I meant to paste: http://forwardjs.com/university/why-prezi-is-betting-on-frp
This sounds pretty awesome and it would be amazing to have something like this in Elm too. For clarity, I have no experience with hoogle and I only suggested the above setup more as a "poor man's hoogle". 
1. Regarding code highlighting in the browser, [Code Mirror has Elm support](http://codemirror.net/mode/elm/index.html) 2. For a live demo, you need a compilation server. The code for elm-lang.org is open source, so... if you have some Haskell knowledge maybe you can reuse the bits that power http://elm-lang.org/try 
To show highlighted Elm code from within an Elm app, you can use http://package.elm-lang.org/packages/evancz/elm-markdown/latest/
Some great explanations here already, but what made it click for me was learning reduce in a language I already knew, like JS. That's the principle behind it, so do that and then maybe it'll click for you! Sum example in JS: [0, 1, 1, 6].reduce( (previous, current) =&gt; { return previous + current; }, 0); The above would return 8, where the 0 after the function definition is just the initial value. Additionally, note that you don't HAVE to end up with a "smaller" thing at the end...reduce can be used as a flexible tool. For example, you can implement map in terms of reduce as well! let map = (array, fnToMap) =&gt; { let mapped = array.reduce( (previous, current) =&gt; { return previous.concat([fnToMap(current)]); }, []); return mapped; }; let test = map([1,2], ((item) =&gt; item * 2)); console.log(test); //[2,4] So here, you get back an array of the same size as the one you're reducing. Reduce or fold is kind of the most flexible of map/filter, so if there's not a straightforward way to transform a list with map/filter, reduce (fold) is the way to go!
Not codepen, but http://share-elm.com/ is basically the same but for elm.
What you have to do is to wrap you types: type Value = I Int | S String And you will be able to use them: list : List Value list = [I 1, S "hello", I 3]
[Check the "Removing Syntax" section](http://elm-lang.org/blog/compilers-as-assistants)
Looking your example I realized that I don't need a port to map each input signal and then redirect it as an Action to the mailbox Much easier to use merge/mergeMany, mapping each input signal to respective Action :D thanks
You're welcome! I came accross ports when trying to fix this problem, but they seemed rather confusing, so I'm happy I got it to work like this.
&gt; so that I can apply different filters on the same data and not get a subset of the first subset. I'm not completely sure if I get what you are trying to do but you could have your model contain a field for the original list and a field for the filtered lists in the form of a list of lists: So: type alias model = {originalList : List a ,filteredLists : List (List a)} and then in a function do something like: let filteredList1 = List.filter filterFunction1 model.originalList filteredList2 = List.filter filterFunction2 model.originalList in {model | filteredLists = [filteredList1 , filteredList2] }
Looking at code is really what I wanted to do, I just didn't know where to find anything big or complex enough. This looks more helpful than the architecture tutorial when it comes to larger pieces of code, thanks.
See http://www.cultivatehq.com/posts/phoenix-elm-1/ Very thorough list of posts about how to build an Elm frontend on top of a backend (phoenix). They even discuss different ways to connect backend and frontend.
Evan's talk ["Controlling Time and Space" ](https://www.youtube.com/watch?v=Agu6jipKfYw) will help you better understand FRP which is the underlying model for what's happening in Elm. Have you read [The Reactivity Guide](http://elm-lang.org/guide/reactivity)? 
The way I imagine signals is a never ending list. foldp folds from the left, just like a normal fold function with a normal list. When a new event is added to the signal, it gets appended to the end of the list. foldp then runs again; you could even imagine it starting from the beginning, though likely that's not what actually happens for optimization. Every foldp output is stored into another list.
I haven't had a reason to do this myself, but I would assume it's possible. Think about how you run an Elm app: var container = document.getElementById('container'); var yourModule = Elm.embed(Elm.YourModule, container); I'd imagine you can just do this with two modules, like: var container1 = document.getElementById('container1'); var yourModule1 = Elm.embed(Elm.YourModule1, container1); var container2 = document.getElementById('container2'); var yourModule2 = Elm.embed(Elm.YourModule2, container2); That said, I don't think you'd want to import Elm twice since that may create two copies of the global Elm variable. Or rather, it would probably overwrite the first one. All of your Elm should presumably be in one import. 
Right. How would one do that though? I haven't experimented much with elm-make but so far all my projects tend make use of all the modules they import if that makes sense. If I make two components (say a drop down and an input form) and connect them with startapp, will Elm.embedding them in separate places be fine? Seems odd to me as the "main" module is the one that wires them together with start app...
You might be interested in Tacks source code, it's a full SPA Elm app with a Scala/Play backend: https://github.com/etaque/tacks/tree/master/client/src (master is v2 of the game, not released)
Or just use a lambda expression. There is nothing wrong with taking a bit more characters to make it more explicit. I prefer both: (\x -&gt; 5/x) (\x -&gt; x/5) over ((\) 5) (flip (\) 5) ^^^The ^^^Haskell ^^^version ^^^beats ^^^both ^^^in ^^^my ^^^opinion.
I'm not sure what /u/jediknight makes total sense. `elm-make` is able to compile multiple modules into a single chunk of JS. So I think if you have two modules `A` and `B` you want to do this: elm-make A.elm B.elm --output elm.js The resulting file will have no duplicate modules and you will be able to instantiate `Elm.A` and `Elm.B` however you want, however many times you want, wherever you want.
Awesome! Thanks. I've been thinking I can maybe learn more about Elm/capture some attention from JS people by publishing really tiny UI components here and there that I've done in React and port them to Elm, so this is great to know. Cheers!
I really like the conciseness of the Haskell version - I wish it were available in Elm. This is as close as you'll get: (flip (/) 5) 10 =&gt; 2 Edit: Here's a side-by-side comparison of the haskell and elm versions: haskell | elm | output --------|-----------------|------- (/5) 10 | (flip (/) 5) 10 | 2 (5/) 10 | ((/) 5) 10 | 0.5 
The syntax you are talking about are named 'operator sections' by the way. They are somewhat controversial, I think. That's probably also why we don't have them in Elm.
Interesting. Thanks, nikita-volkov. And just to prove it to myself (and to leave a record for posterity), I wanted to see why the pattern matching wasn't working. I realized I was doing the pattern matching wrong. So, while Haskell records match thusly, ghci&gt; let getYear Car{year=y} = y the Elm language does not carry the equals sign over (I should have read the docs closer). elm&gt; getYear (Car{year=y}) = y --- DOES NOT WORK (what I wrote above) elm&gt; getYear (Car { year }) = year -- WORKS !! and, further confirmation, elm&gt; getYear (Car a) = a.year --- WORKS TOO Thanks again. 
Yes. Sorry, I was being imprecise with the terminology. You are absolutely correct. And, I am assuming, in Elm, like Haskell, all functions are automatically curried (i.e. take one argument only)?
Use `onMouseEnter` for On and `onMouseLeave` for Off on the same div. div [ navButtonStyle model, onMouseEnter address On, onMouseLeave address Off ] [ text model.content ]
No worries, that's a feature that pretty much no one knows about :) I guess it's not too common in compilers? In any case, it can come in handy once you know!
I think it should be documented with examples for people who want to experiment with adding Elm to their webpages in stages like NoRedInk did. Asking to entrust only a small component to Elm might be just the kind of "small risk - high payout" that could lower the entry line for some people. :) 
Agreed! I think this would be a good writeup or something. I think the transition from a React App to a React app with a few small Elm components is natural.
There is an identity function that is called `identity`. I suspect this would work: geToken = "token" := Json.string
Awesome! Literally just edited to say I noticed it's Signal Action :P. I'll go give it a go! Thanks a bunch, good to know I wasn't off the mark.
Here's a series of blog posts about how to use Elm with Phoenix: http://www.cultivatehq.com/posts/phoenix-elm-1/
the struggle ¯\_(ツ)_/¯
Yeah, there's only so much you can get from reading the docs and looking at examples. Seeing someone code live and explain it helps expose the theory you miss from written tutorials.
For the most part, I think you can definitely start using elm without knowing JS. And if at any point of time you start to feel like you are missing out because you don't know JS, just learn JS :)
I know and hate JS, wish I started with elm. 
&gt; it seems silly to learn a language so many experienced developers try to avoid Some developers may try to avoid working with Javascript, but it's a mistake to avoid learning it. The bottom line is that Javascript is the browser's native language and that's not changing anytime soon. I avoided learning Javascript for a long time, and all it did was limit my knowledge and ability as a web developer. You can learn Elm without a deep understanding of Javascript. But you'll be working with Javascript any time you want to write/understand a native wrapper (e.g. https://github.com/mgold/elm-socketio), any time you deal with ports, and any time you need to understand what's actually going on in your app beneath the Elm abstraction. I don't think you can really avoid Javascript in a serious Elm project, and you'll ultimately realize that you were overdramatizing the effort involved to learn it. Learning it will do nothing but help you.
If I understand correctly, this is similar to [elm-webpack-loader](https://github.com/rtfeldman/elm-webpack-loader) in that it helps you compile Elm code in your existing build process. If that is true, can you put "meteor" in the name? [elm-compiler](https://github.com/elm-lang/elm-compiler) is definitely already a thing, and this is not a new compiler as far as I can tell. So for the sake of clarity, I think the name should be changed.
Use [List.indexedMap](http://package.elm-lang.org/packages/elm-lang/core/3.0.0/List#indexedMap). The example given in the documentation does exactly what you want to do. 
You need to install packages separately in each project you're working on. There are no globally installed packages in Elm. When starting a new project you should run a bare elm package install in it's root directory. It will * install the standard library (after politely asking wheter you'd want it to) * create the `elm-stuff` directory that will hold the installed libraries * create the `elm-package.json` manifest file that 
You're welcome. Glad to help.
Share-elm is backed by Github Gist, so if you know the url from Share-elm we can probably find the gist from that and get your code. 
I was thinking of creating some course if there would be interest... what parts of elm / reactive programming would be of most use ?
I think you would want the clock to be something like `every (5 * Time.second)` Then, I think I would make an action over the clock like: periodicGet = Signal.map GetReading clock Then you'd have a case in your update that would fetch readings: GetReading _ -&gt; ( model , httpGet ) I hope that helps. I'm kind of new myself :)
There are 3 issues I can quickly identify: 1. you use Http.get that needs a Json.Decoder in order to convert whatever it comes into an usable Elm structure ("I've changed it to getString for simplicity sake) 2. In `Signal.map httpGet clock` You try to map a value over a signal. You need a function in order to do that, in this case a function like (Time -&gt; Effect Action) 3. You try to push effects through the inputs of the app but those were created mainly for data. I've changed the structure of your code a little bit in order to push only the trigger and generate the effects upon trigger. -- clock = Time.fps 2 httpGet = Http.getString "http://localhost/" |&gt; Task.toMaybe |&gt; Task.map LoadReadings |&gt; Effects.task update action model = case action of TriggerGet t -&gt; (model, httpGet) LoadReadings m -&gt; case m of Nothing (model, Effects.none) Just someString -&gt; periodicGet = Signal.map TriggerGet clock app = StartApp.start { init = init "funny cats" , update = update , view = view , inputs = [periodicGet] } if you really want to push Effects through the inputs... I think this is the way to do it: clock = Time.fps 2 httpGet t = Http.getString "http://localhost/" |&gt; Task.toMaybe |&gt; Task.map LoadReadings |&gt; Effects.task update action model = case action of TriggerGet effect -&gt; (model, effect) LoadReadings m -&gt; case m of Nothing (model, Effects.none) Just someString -&gt; periodicGet = Signal.map httpGet clock |&gt; Signal.map TriggerGet app = StartApp.start { init = init "funny cats" , update = update , view = view , inputs = [periodicGet] } 
Take a look at the documentation for [forwardTo](http://package.elm-lang.org/packages/elm-lang/core/3.0.0/Signal#forwardTo). In example 3 viewCounter, you have an address that receives the CounterList.Action and a function that takes an Counter.Action and turns it into a CounterList.Action. This function is the `(a-&gt;b)` from the documentation and in this case it is (Modify id). (Modify id) is a function obtained by partially evaluating Modify with the id value. The partial evaluation produce a function that takes a Counter.Action and produces a CounterList.Action. (Modify id counterAction) is not a function but a value of type CounterList.Action. For the Signal.forwardTo you need a function that would take a type of the resulting address and will produce a type of the source address where that type needs to be forwarded to. 
"partial evaluation" is the wrong term though, it's partial *application* (if you're not applying a function to all its parameters, you get a new functions expecting the "remaining" parameters)
What have you tried? Where did you get stuck? Are you stuck on the Algorithms, or on Elm specific questions? 
If you want helpful response you'll have to put in more effort than just posting your homework. Have you tried anything yet or do you just expect other people to do it for you?
Try use List Box, or Array Box for the types. I'm not sure elm supports [Box] for the type
Really old Elm code used [] syntax, but now you just say List foo 
Yeah that is what I thought, but I couldn't find a reference for when it changed.
That fixed it. Thanks. That must've only worked with older versions of Elm. I still don't understand the compiler error however. Maybe it hit the first square bracket and threw a generic error at that point?
Yeah this should be reported. 
The function you're looking for is [List.indexedMap](http://package.elm-lang.org/packages/elm-lang/core/3.0.0/List#indexedMap)
You could combine two lists, the list of your A records plus a list of ids using List.map2. For example: &gt; List.map2 (\id value -&gt; (id, value)) [1..5] ["one", "two", "three"] [(1,"one"),(2,"two"),(3,"three")] : List ( number, String ) List.map2 is also known as 'zip' in other languages. All I am doing here is using a lambda to combine the two values into a tuple. Note also that the first list of ids is longer than the second list. You can modify this so that the range is the same length as your input.
Easiest is probably to just use StartApp. But other than that, check your init parameter on the foldp. make sure it matches the output type of your update function(in this case `(Model, Effects.Effects Action)`). You also need to fix your update(or wrap it in a lambda `(\a m -&gt; update a &lt;| fst m)`) Then to execute the effect, you will need create a port for the tasks and then have a signal.map on your model signal that takes the effect, turns it into a task and assign that resulting signal to the port. port tasks : Signal (Task Effects.Never ()) port tasks = Signal.map (\m -&gt; Effects.toTask address &lt;| snd m) model Also look at the StartApp source to see how it works because that does exactly what you want.
indexedMap calls the function with 2 parameters instead of 1. The first is the index and the second is the item. So you will have enough information there to insert the index into the record.
Oh damn I see now, I didn't read the example very well. I managed to fix it in the meantime by using a recursive function, seems to work well enough. Thank you for the answer!
Adding on to this great answer, if you don't want to create a dummy "default" you can handle the Maybe value in a case statement: let foundModel = List.head (List.filter (\m -&gt; m.value == True) models) in case foundModel of Just trueModel -&gt; trueModel Nothing -&gt; --handle the error If it shouldn't be possible for the list to be empty, you can just call Debug.crash in the Nothing case. If the list MIGHT be empty, consider returning type Maybe Model instead.
&gt; I don't understand WHEN setStorage is actually being called. Every event in the action signal gets transformed into a new model. Every time this happens, the value of the model is sent through the port to the subscribers in the JS land. The subscribers in JS land do the actual writing to localstorage. 
Very cool, thanks
The dependency graph is available in the just released 0.3.1 version of https://github.com/rundis/elm-light btw.
Thanks so much! I didn't fully understand how Maybe's work, but it makes perfect sense now.
I'm just starting to learn Elm and I really appreciate that the elm-light plugin is making that process easier and more fun. Thanks!
Why not convert xml to json in javascript land and just use Json.Decode? 
I'd love to see some sort of editor agnostic lib for doing refactoring. Maybe the parser bits in elm-format could be leveraged somehow to expose an editor friendly api for refactoring (and more) ? This is one of the things I've been pondering a lot about for the elm-light plugin for Light Table. 
Congrats to Evan. Lively discussion on [HackerNews](https://news.ycombinator.com/item?id=10837278) 
Very good work. Looks nice and clean to me. In case you get complaints about stuttering of the game, consider using [elm-animation-frame](https://github.com/jwmerrill/elm-animation-frame). It really [can make a difference](https://github.com/Dobiasd/Breakout/issues/1#issuecomment-168602051).
To the extent that you get any recommendations, unless they come from someone who has done both extensively enough to understand the strengths and weaknesses of each, you'll need to take them with the proverbial gram of salt. If you're serious about it, you should try both. Pick a reasonable sized project and code it in both. Having done this, and while I can recommend both highly, they both have warts that aren't immediately obvious. As far as picking up a new language. Only you would be able to judge, but I think it's always valuable to add to your tool set. 
CS is probably a bit more mature than Elm in terms of library support. The big reason to choose Elm over CS is types. Elm makes it really hard to write code that crashes, and it makes refactoring really easy, because the type checker helps you and shows where changes need to propagate to. Also, Elm is immutable, so there's no way to have state mutation accidentally hidden deep in your code. CS makes no such guarantees. 
You can't. case-matches rely on data constructors or literals hence case string of "hello" -&gt; someresult "goodbye" -&gt; other result works but regex doesn't. There used to be what is called mule-way-if in Haskell in elm where you could write something like if | contains regex string -&gt; ... | contains otherRegex string -&gt; ... | contains yetAnotherRegex string -&gt; ... But that feature has been removed with the last release of the compiler. Of course you could define your own datatype and have a helper function which matches the string and returns an ADT depending on the result of the match type MatchResult = OneResult inner data | AnotherResult inner data | LastResult inner data | NoMatch regex1 = regex "..." regex2 = regex "..." regex3 = regex "..." matchHelper : String -&gt; MatchResult matchHelper s = if contains regex1 s then OneResult ... else if contains regex2 s then AnotherResult ... else if contains regex3 s then LastResult ... else NoMatch f : String -&gt; ... f string = case matchHelper string of OneResult _ _ -&gt; ... AnotherResult _ _ -&gt; ... LastResult _ _ -&gt; ... NoMatch -&gt; error ... This is basically the same thing and very reusable. You can use `inner data` as a container for any data recovered from the regex. **Edit** if you really need inner data the `matchHelper` is a bit more involved, because you'll need to use `find` rather than `contains` and test for empty list. This is just a basic outline.
both are great choices. any answer you get beyond that is likely to be biased depending on where you ask, so i'll leave it at that :)
Thanks a lot for your response. Really encouraging and down to earth :)
I don't believe that elm-animation-frame locks the frame rate or uses interpolation to smoothe out jittery browser rendering, so you may still experience stuttering. I recall reading on a thread in elm-discuss that Elm (the current version?) is actually using requestAnimationFrame under the hood for its update loop. Can anyone clarify this?
&gt; Is it even worth picking up a new language to stop writing imperative code? I know I could simply stick with JavaScript and have some self-discipline. I've had a lot of frustrating time with Elm coming from python. This frustration might be necessary for a person without pure functional background. It has made me better and I'm grateful for those difficult moments. &gt; As you can see I'm kind of overwhelmed with the options right now so any help will be much appreciated. Think about it like this: In the long run, what you do in a week or two is of no consequence. Take a month to decide and implement two similar apps in both. Give them 2 weeks each and focus on solving your challenge. These 2 weeks will show you a big enough chunk of the ecosystem. You will get past the syntax unfamiliarity and you will have enough troubles to get a feel about how it is to interact with both communities over reddit/stackoverflow/mailinglists/irc. In the end, my guess is that you will find some things that you like more in one language and other things that you like more in the other. Then you will have to adapt to your class of problems and ask which language made for a better experience. You might end up keeping both. \^_\^ 
Beware that Elm breaks backward compatibility almost every release. Not dramatic thought, but updating a really big project would take time.
The json parser should in theory just work for XML as well. If you fetch those files with the correct type in Http.get you should get an XML object to "parse" with Json.Decode.
Maybe that's because there's no "stable" release yet (as in things are still constantly changing)
Wow, that's pretty harsh review but I can agree with some points and know what you are coming from. &gt; It all boils down to dynamic typing producing a massively inferior tool. In my experience testing with the repl, figwheel and devs-cards is workflow which I enjoy which is not eclipse by runtime errors. I find them anything but inferior. &gt; On top of all, the libraries and tools for Cljs seem to often be authored by JS refugees, which implies the low quality. I didn't know that some Elm developers were so entitle. I think those can't be missed in any language. &gt; Even the most centric libraries like Om or Reagent have quite questionable design decisions at their hearts. That's totally subjective, I even have my opinions about some libraries and Elm's design decisions but overall it can't be consider as a negative point. This reduce down to preference, and nothing here point out that Elm is somehow superior to other alternatives, in my opinion both are amazing. 
&gt; I could give you even more options, but that would probably be rude of me :) Be rude with me, show me what you got :)
OK... :) There is [PureScript](http://purescript.org) which I like very much :) And there is also [OCaml](http://ocsigen.org/js_of_ocaml/) which I keep hearing many good things about, but I don't really know or use. The other Haskell alternatives ([GHCJS](https://github.com/ghcjs/ghcjs), [Haste](http://haste-lang.org)) are not very mature from my impression.
Cool. I see you are accustom with ML family languages, fair enough. I like Purescript approach none the less.
That is not a smell. And you can use the elm-make to watch for errors and that is essentially what you want. How are these posts getting this many upvotes?
That is a cool idea. I'll start with achievments. For example for playing couple of days in a row. Learning requires spaced repetition :) Thanks!
You're absolutely correct. Changing the handling code to do reqBody &lt;- readRequestBody 1000 liftIO $ print reqBody prints the expected body: "------WebKitFormBoundaryD7cBzUA1G5BLlBsz\r\nContent-Disposition: form-data; name=\"user\"\r\n\r\nabc\r\n------WebKitFormBoundaryD7cBzUA1G5BLlBsz\r\nContent-Disposition: form-data; name=\"password\"\r\n\r\nd\r\n------WebKitFormBoundaryD7cBzUA1G5BLlBsz--\r\n" "------WebKitFormBoundaryE8AAbA9Utir2SiOD\r\nContent-Disposition: form-data; name=\"user\"\r\n\r\nabc\r\n------WebKitFormBoundaryE8AAbA9Utir2SiOD\r\nContent-Disposition: form-data; name=\"password\"\r\n\r\nd\r\n------WebKitFormBoundaryE8AAbA9Utir2SiOD--\r\n" Reading a bit further into Snap documentation, apparently there's no auto decode of multiform/data POST messages, it has to be requested, which explains why it wasn't finding the user and password parameters.
fwiw, an easy way to debug/inspect what's being sent by the client is otherwise to use netcat: `nc -l &lt;port&gt;`
&gt; On top of all, the libraries and tools for Cljs seem to often be authored by JS refugees, which implies the low quality. Who are you, again?
I'm obviously implying that you better have one hell of an impressive resume as an engineer to make a sweeping, ridiculous statement like that. Talk about pompous. I just came here looking for info on Elm and your statement single-handedly soured me on the entire community.
Hey! Elm is perfect for this. An adult with programming knowledge can get started by going through this. http://elm-lang.org/get-started especially 1-7 at the bottom. Evan has a talk where he shows cool stuff kids made with Elm. Check this out! https://youtu.be/oYk8CKH7OhE?t=17m38s
I mean that the blinking can't be self-contained with your component if you go with the elm architecture.
If you already have python materials and python background, why not use a web python like [brython](http://www.brython.info/)? That being said, I would encourage the use of Elm for the clarity that it brings once you get it. It take going through a couple of weeks of adjustment but after that, it encourages clearer thinking (IMHO). 
I'd really encourage you to use Jupyter notebooks for this -- everything runs in the browser and you can use the full SciPy stack and do interactive visualizations as well with matplotlib, Bokeh, and D3.
 someMailbox = mailbox "" port redirect : Signal String port redirect = someMailbox.signal update action model = case action of Redirect string -&gt; ( model, Effects.task &lt;| send someMailbox.address string )
I use and produce jupyter notebooks a lot and can assure you that almost nothing runs on the browser. It is a client-server architecture. You need a server where the code runs.
I'd just use raw js with d3 for sci comp honestly.
Awesome this helps me too. I have only been learning for the last month between work.
I was trying to find a more elegant solution, even if at a cost of performance (teaching purposes). I think I will go with brython. But I would still think the discussion about the suitability of a language without mutable structures for scientific computing is interesting. It seems that clojure strikes a good balance there
It might make sense to use the [JavaScript FFI](http://elm-lang.org/docs/syntax#javascript-ffi) in such cases. From my (limited) understanding of Elm, it seems to me that you can't selectively introduce local state without subverting the whole architecture.
The return type of that is `Signal Html.Html`. But what if I definitely needed the return type to be `String` –– for example, when I need to use the height as the value of a style attribute?
The return type of main must be one of: * Element * Html * Signal Element * Signal Html In the first two cases, your application would never change. You would only be able to display a static web page and it would be exactly the same every time. When you return a Signal of Element or Html you are saying that I expect the Html of the page to change over time. To implement what you want, take a look at the [resizing yogi example](http://elm-lang.org/examples/resize-yogi). Here we have an input signal (Mouse.position) and we're assigning it to an html attribute (img width / height). See if you can adapt that to use the Window height instead and change the attribute or element you want to use to represent the window height in html.
Hello! We should've used the canvas, but we had just 5 days, so we decided to render it to DOM to use an onclick event. It is fast, because [elm-html](https://github.com/evancz/elm-html) and [elm-svg](https://github.com/evancz/elm-svg) (that we use to display the path) are rendered with virtual-dom, that has a diff algorithm that only updates DOM elements that have changed. A game loop is happening in the update function. It takes an action and a previous model, and returns a new model and a side effect, that will eventually call another action. Returning "Effects.tick Tick" will request animation frame for a Tick action. You can read more about [Elm Architecture here](https://github.com/evancz/elm-architecture-tutorial/) 
Good article. I have a couple of points: * I have not written a huge amount of Elm, but I have written a lot of Haskell and PureScript. Neither of these stop you from writing terrible code (although they do make it easier not to), so I'm very skeptical about the claim that Elm stops you from writing bad code. * PureScript does not 'resort' to non-persistent data structures. It just has a type and some functions defined for homogeneous JS arrays. There are plenty of persistent data structure implementations available too: maps, sets, sequences, lists (strict and lazy variants), and more.
Completely agreed. I'm really talking about statements like this though: &gt; Elm restricts the way you program, resulting in maintainable code no matter what. This kind of evangelism does more harm than good, in my opinion.
Looks like this is a problem of application design and not Elm's fault. Can you share a code snippet?
Careful. This response sounds a lot like "elm is perfect, so you must be at fault."
This is just your opinion. From my experience this sounded like an application design problem, not a problem with the language itself (doesn't matter if it's Elm or not, really). As you can see from the author's response he has no past experience with FRP which validated my initial thoughts. Also, I even asked for a code snippet in order to contribute with an example. I'm just trying to learn here as everyone else. Be careful when you assume emotions by reading a piece of text on the internet.
So, it's not perfectly maintainable, but no matter what you have type-safety. So even if you choose terrible variables names and structure, you can make changes boldly with confidence the typechecker will help you prevent accidental breakage.
I've been making a little 'control panel' program with a Rust backend and Elm frontend, called [oscpad](https://github.com/bburdette/oscpad). Might be worth a look for you. Right now its pretty simple with just buttons, sliders and labels. Its made to be used as a touchscreen interface, or with the mouse. 
very cool! are there any good canvas libraries for elm?
I certainly didn't mean to assume emotions, and for that I'm sorry. I just wanted to point out that it's possible for your comment to read in that way. Your diagnosis just rubbed me up the wrong way a little, considering the amount of information there was at the time (even if it did seem to turn out to be accurate).
Ok then - but with that definition, suppose you then write a program which never uses any of its own ADTs; instead, only Strings, and Ints, and Maps of these, or Maps of Maps of these, and so on... You might not get a runtime error due to a value being the wrong type, so it's type-safe (by your definition), but at this point, I don't think that means all that much. The types won't adequately represent the data they're supposed to, and this makes it easy to accidentally introduce bugs whenever you make changes. In such an application, I would not feel that I could make changes with confidence. (Even so, it's probably still a step up from JS, as you say :)) You might say this is an absurd example, and it probably is, but I have caught myself drifting dangerously close to this style in the past.
updates every 250ms is _nothing_. You can easily use Elm for this purpose.
Have you tried to simply split it up into smaller functions? For example the following update : Action -&gt; Model -&gt; (Model, Effects Action) update action model = case action of NoOp -&gt; (model, Effects.none) LoadData -&gt; (model, loadData model.dataUrl) DataLoaded json -&gt; let result json = Json.decodeString (decoder model) json in case json of Nothing -&gt; (model, Effects.none) Just s -&gt; case result s of Ok updatedModel -&gt; (updatedModel, Effects.none) Err error -&gt; (snd (log error json, model), Effects.none) .... could be written as update : Action -&gt; Model -&gt; (Model, Effects Action) update action model = case action of NoOp -&gt; (model, Effects.none) LoadData -&gt; (model, loadData model.dataUrl) DataLoaded json -&gt; updateDataLoaded model json .... updateDataLoaded : Model -&gt; String -&gt; (Model, Effects Action) updateDataLoaded model json = let result json = Json.decodeString (decoder model) json in case json of Nothing -&gt; (model, Effects.none) Just s -&gt; case result s of Ok updatedModel -&gt; (updatedModel, Effects.none) Err error -&gt; (snd (log error json, model), Effects.none) `updateDataLoaded` could even reside in a different model. If your Action type is some kind of nested data structure, you could even outsource whole families of actions to other functions/modules.
Here's some feedback on style. The problem you have here is excessively deep nesting of pattern matches. So I would split the body of the CellAction case off into another function for sure. There's another thing I'm seeing that I don't like. You're not making Maybe and Result work for you. RowDeleted index -&gt; case index of Nothing -&gt; (model, Effects.none) Just index -&gt; (,) { model | cells &lt;- Array2D.deleteRow index model.cells , rows &lt;- splice index (index + 1) model.rows } Effects.none First, why is this nothing action happening? That's something to look at. If the index is just a number and not a maybe number, this case is dramatically simplified. Okay, let's take it as a given that this action is the way it is for good reasons. You could write it thusly (forgive stupid errors, I don't have your model definitions and I'm just writing this right here on reddit rather than compiling, don't have the pleasure of writing as much elm as I would like etc etc): RowDeleted index -&gt; Maybe.map index (deleteRow model) |&gt; Maybe.withDefault model |&gt; \model -&gt; (model, Effects.none) -------- deleteRow model index = { model | cells = Array2D.deleteRow index model.cells , rows = splice index (index + 1) model.rows } See how nice deleteRow can be if you handle the Maybe bits this way? Maybe.map will return Nothing if index is nothing, then Maybe.withDefault will swap in the original model to the lambda function on the end. If index is Just, then deleteRow gets to go ahead and do its work, and Maybe.map will put it back into a Just value. Maybe.withDefault accepts that value and the lambda function again does not have to deal with Nothing values. DataLoaded json -&gt; let result json = Json.decodeString (decoder model) json in case json of Nothing -&gt; (model, Effects.none) Just s -&gt; case result s of Ok updatedModel -&gt; (updatedModel, Effects.none) Err error -&gt; (snd (log error json, model), Effects.none) I admit I've done some awkward things like this in my sadly short time with Elm: (snd (log error json, model), Effects.none) However, log is really only meant to be used for debugging. It's a convenient way for you to see what a given value is in functions that otherwise can't report things. It's not a way to report an error to the user. If you're writing awkward things like that, you're probably not using it for its intended purpose. Again with the Nothing action? Okay whatever. Let's try to do this better. This is gross because you're dealing with both Maybe and Result types the hard way. DataLoaded json -&gt; let decode json = Result.fromMaybe "No json?" json `Result.andThen` Json.decodeString (decoder model) in case decode json of Ok updatedModel -&gt; (updatedModel, Effects.none) Err error -&gt; ({ model | error = error }, Effects.none) The view function can display this error. I think that's probably nicer for the user and for the code. Here we upgrade the possibly nonexistent json to being a Result with an error message, andThen we give the json value to Json.decodeString. Since we do actually care about doing something with error Results, we will still need to pattern match on that. The general strategy when dealing with Maybes and Results is to write functions that don't deal with them, and use various combinations of functions like fromMaybe, withDefault, map, and andThen to wire things up. If something returns Nothing or Err, you don't have to match and handle that immediately. Use these functions to defer that match as long as possible and you'll probably find yourself dealing with those cases in a place in the code that makes more sense anyway. It's kind of like exceptions in other languages. Don't catch exceptions in a function unless that function is the right place to deal with the exception... Hope you find what you're looking for
Ah, then you should look around here http://package.elm-lang.org/packages/elm-lang/core/3.0.0/ Since you were originally talking about nested components, you might find this useful. It shows how to reuse update and view functions in larger components. https://github.com/evancz/elm-architecture-tutorial/
I would assume that anything like PhoneGap would work, but I have not tried it. You may have to wire up some API functions yourself
Well... since Appointments, Room and Person are tightly couple, they should be updated as a unit. Using a personID protects you from some inconsistencies but not from all. Just imagine that you have an Appointment and you delete the Person through some interface. What would requesting the information for that personId should bring? In any case, you could have something like type alias ThinAppointment = { personId : Int , roomId : Int ... } type alias Appointment = { person : Person , room : Room ... } toAppointment thinAppointment model = let person = getPersonFromId thinAppointment.personId model.persons room = getPersonFromId thinAppointment.roomId model.rooms ... in { person = person, room = room, ...} These helper functions should come in hand when you need data in the view. You basically create a FatAppointment on the fly based on the thin one and the model holding the information about Persons and Rooms. But, now that I've thought more about it... I think you're right, this needs more thinking. Maybe post the the question on elm-discuss. 
Also where can I get support for a feature like the angular ui tree (https://angular-ui-tree.github.io/angular-ui-tree/#/basic-example)?
Why are you so concerned with mutability? Rich Hickey gave examples where math involving immutable data structures outperforms mutable ones in some cases. Even if that is not the case, operations on the immutable ones have the same Big O complexity as the mutable. I admit to not knowing your field at all.. I am just very curious as to your concern especially when you stated that speed wasn't a factor.
I've been working on some [hierarchical controls](https://github.com/bburdette/oscpad) that seem kind of similar from the standpoint of making controls from a simple json spec. Not really targeted at the same use case and no doubt missing lots of features that the angular tree has, but maybe useful as a starting point if you decide to roll your own solution.
&gt; by enforcing [an architecture](https://github.com/evancz/elm-architecture-tutorial#the-elm-architecture) Is the architecture really enforced? If it is the only way to do things, isn't this super dangerous since if you hit any architecture problem you would be tied?
Sorry for the hugely delayed reply, couldn't go back to Elm until this week. Your proposed solution works perfectly, but you seemed to have reservations on the method of passing the Effects through the inputs. What would be a cleaner way to get the same periodic trigger?
They are not native, but Ionic or Meteor might work for you.
Sweet and to the point. Thank you for sharing! If you are the author, what are your thoughts on PureScript compared to Elm? They are targeting a very similar audience. 
I'm using plain emacs, not spacemacs. I have elm-mode+flycheck-elm and elm-oracle, so I've got indentation, auto-complete and compile on save + showing errors and warnings. I wrote up how to setup all of that [here](http://www.lambdacat.com/post-modern-emacs-setup-for-elm/). It's quite pleasant to work with :)
Nice! How did you do the compile on save? (I didn't find that in your guide.)
Thanks :) In `elm-mode` `C-c C-n` or `C-c C-m` trigger launching elm-reactor. So after doing that once, elm-reactor is compiling the elm code every time you save. With `C-c ! l` you can open a frame with a list of warnings and errors, you get them from the elm-reactor process.
Ah, toJsMailbox is a sort of global variable. There's no need to pass it around. This should work fine. focusSelector : String -&gt; Effects Grid.Action focusSelector selector = Signal.send toJsMailbox.address (Focus selector) |&gt; Task.map (\_ -&gt; Grid.NoOp) |&gt; Effects.task But yes, there needs to be a way to focus on an element without Javascript and there isn't right now.
I am the author, and I had not heard of purescript when I started this project, plus I had Even C help me get things setup which helped a lot. I don't know enough about PureScript to really comment but I am very happy with elm so far
That's great to hear! I've been getting pretty fed up with JavaScript and everything that's required to make it usable. 
You have to compose since `Change` is a function that takes a string and produces an action and only that action you want used to create a message. Target value is a decoder that outputs a string and that's the string you want passed to `Change`
This is a something I've been working on, my second full project written in Elm (the first a small puzzle game a while back), and it's been interesting. Elm has definitely improved since the last time I used it, and I've enjoyed working in it. [A screenshot.](http://builtwithelm.co/data/images/massive-decks.png) For those unfamiliar, [Cards against Humanity](https://cardsagainsthumanity.com/) is a party game normally played with physical cards, where the aim is to play the most amusing responses to fill the blank spaces in a prompt. Contributions, both of code and issues (bug reports/feature requests) are welcome, as are comments on the project as a whole - I'm not a seasoned Elm user, nor do I write a lot of pure functional code, so while hopefully it's reasonable, I'm sure there are many ways in which it could be improved.
After generation the debug view of reactor gives me this error message : node.kids is undefined under Firefox and this one under Chrome: Cannot read property 'forEach' of undefined
I appreciate that greatly. Thank you for the info!
So, under Deepin: node: v4.2.4 npm: 1.4.21
Also, `NewGif` as a tag in the `Action` type is a function from `Maybe String` to the `Action` type itself. `Task.map NewGif` effectively unwraps the result of `Task.toMaybe`, wraps the enclosed `Maybe String` value with the `NewGif` tag, then wraps the value back up as a Task. 
I made a Vagrant config with the latest stable (aka 4) version from the official Joyent repo. It doesn't work either, gives this error: Installing npm dependencies... npm WARN package.json Dependency 'babel-core' exists in both dependencies and devDependencies, using 'babel-core@^6.3.26' from dependencies npm WARN deprecated lodash@1.0.2: lodash@&lt;2.0.0 is no longer maintained. Upgrade to lodash@^3.0.0 npm WARN optional dep failed, continuing fsevents@1.0.6 events.js:141 throw er; // Unhandled 'error' event ^ Error: Command failed: npm install npm WARN package.json Dependency 'babel-core' exists in both dependencies and devDependencies, using 'babel-core@^6.3.26' from dependencies npm WARN deprecated lodash@1.0.2: lodash@&lt;2.0.0 is no longer maintained. Upgrade to lodash@^3.0.0 npm WARN optional dep failed, continuing fsevents@1.0.6 at checkExecSyncError (child_process.js:464:13) at execSync (child_process.js:504:13) at module.exports.yeoman.generators.Base.extend.install (/usr/lib/node_modules/generator-elm-spa/generators/app/index.js:88:9) at /usr/lib/node_modules/generator-elm-spa/node_modules/yeoman-generator/lib/base.js:430:16 at processImmediate [as _immediateCallback] (timers.js:383:17) vagrant@debiancontrib-jessie:~$ node --version v4.2.4 vagrant@debiancontrib-jessie:~$ npm --version 2.14.12 [You can try it out if you want](http://demo.ovh.eu/download/6f034e792f6f2ca4b8e473688598c9ce/vagrant-elm-spa.xz). It'll install all the deps and node packages on its own when you do `vagrant up`. I didn't try out the bleeding edge version of node yet.
Thanks for that excellent explanation!
Hi, I'm also getting the `forEach` error under chrome. Installed node 5.4.1 npm 3.3.12 for this generator so I didn't initially have gulp installed for this node version. The generated code looks great though and I can't wait to use this further! The app structure is something I've been looking for. Hopefully you can get us on to the next stage because i'm really looking forward to using this :) Thanks EDIT: OSX 10.11.2, Chrome 47
Richard mentions one of his projects called [elm-css](https://github.com/rtfeldman/elm-css) which I'm pretty excited for. Writing CSS sucks and if the compiler could help me out that'd be great.
&gt; If it compiles, it will run without errors. 100% guarantee! I think we should be careful about statements like this one because it's not a 100% guarantee. You can still have stack overflows. You can still divide by 0. Or maybe the [native implementation of arrays](https://github.com/elm-lang/core/issues/474) is faulty. It's true to say that Elm eliminates most runtime errors, but I'm wary of setting false expectations for those who don't know Elm yet. On testing you may want to take a look at [elm-check](https://github.com/NoRedInk/elm-check). I haven't used it yet but that package seems to further demonstrate the benefits of testing pure functions.
Scss? IHMO I think writing css should be a more interactive and visual experience and given the syntax of this package no front-end dev/designer is gonna write thousands LOC with it. Until it supports most of the critical features of Scss I wouldn't use it. My view.
Maintainability. Refactorability.
I am not sure yet whether your intent is to load one Monster only or many, but as far as decoding the JSON file goes I can offer some help. First of all, your type signature is wrong. A `Decoder a`'s inner type is the type of the decoded object, which in your case seems to be `Model`. Thus you need the following decoder: import Json.Decoder as Json exposing ((:=)) type alias Model = { name : String , image : String , description : String , hp: Int } decodeModel : Json.Decoder Model decodeModel = Json.object4 Model ("name":= Json.string) ("image" := Json.string) ("description" := Json.string) ("hp" := Json.int) However your data file contains more than just one Model, hence to decode the data file you'll need another decoder: decodeDataFile : Json.Decoder (List Model) decodeDataFile = "data" := Json.list decodeModel This'll result in a list of Models from which you may select one and use it. You should also know that the JSON you postet is incorrect and the list of monsters lacks the square brackets surrounding it, like so (I reformatted slightly to highlight where the list is): { "data" : [ { "name" : "dragon" , "description" : "It's small, and bites." , "image" : "dragon.png" , "hp" : "1" } , { "name" : "octojelly" , "description" : "A quivering plate of poisonous jelly." , "image" : "octojelly.png" , "hp" : "2" } , { "name" : "cosmic full bubbtle" , "description" : "Don't scuccumb to its hypno-ray!" , "image" : "fluffBubble.png" , "hp" : "3" } ] }
Depends on what you'd want to do with the application. But if you create new posters in the UI they don't necessarily have to be JSON encoded, you can just create them directly. So probably when the app starts. What could be interesting is requesting more (random?) monsters from the server which come in JSON format, decoding them and then displaying them.
Yes, my next iteration of this project will be to have a random monster selected. I suppose I would need to use `List.filter` on the return value of `decodeDataFile` to select the data that matches a supplied random `name`? 
Unfortunately I am not very familiar with Elm's handling of random number generation, but I know it depends on seed propagation, because strictly deterministic functions have to yield deterministic results, hence no random. I'd wager you need to hook it up to a task. Beyond that the resulting value from the random functions depends on the supplied seed, I am not sure how to generate random seeds. You don't necessarily need to use the `filter` functions,. The `circuit hub/elm-list-extra` package has some useful functions for working with lists, such as `getAt` or the equivalent `!!` operator which will retrieve the element at a specified index.
...to add, nor solve logic errors.
here you go: The model is a simple string; at init an effect is created, which fetches a json from a server and parses the "name" property of the answer. Since the ajax call can fail, it has to be wrapped in a Maybe, which sets the model to "error", in case of an error and otherwise the fetched name. module Main where import Html exposing (Html, text, p) import Signal exposing (Address) import Effects exposing (Effects, Never) import Json.Decode as Json exposing ((:=)) import StartApp exposing (start) import Task import Http -- MAIN app = start { init = init , update = update , view = view , inputs = [] } main = app.html port tasks : Signal (Task.Task Never ()) port tasks = app.tasks -- MODEL type alias Model = String init : (Model, Effects Action) init = ("...", getName) decodeName : Json.Decoder String decodeName = "name" := Json.string userUrl : String userUrl = "http://jsonplaceholder.typicode.com/users/1" -- ACTION type Action = NewUser (Maybe String) -- EFFECTS getName : Effects Action getName = Http.get decodeName userUrl |&gt; Task.toMaybe |&gt; Task.map NewUser |&gt; Effects.task -- VIEW view : Address Action -&gt; Model -&gt; Html view address model = p [] [ text model ] -- UPDATE update : Action -&gt; Model -&gt; (Model, Effects Action) update action model = let name maybeName = Maybe.withDefault "error" maybeName in case action of NewUser maybeName -&gt; (name maybeName, Effects.none) https://gist.github.com/mkulke/8907fb2c9f03b45fd78d
This is incredible, thanks so much!!! Your sample code has solved the missing pieces I was not understanding about how Effects and Tasks work with the Json decoder. It's also a fantastic example of how to build a simple program using StartApp. I hope the Elm dev team adds this to the official examples!
One useful perspective I found is to think about your program as a series of states, or... a series of values for your model. If you need something on the screen, either is static and it is only in the view, OR, it is dynamic (it changes) and it should be in the model. Once you look at things like this, all you need is a way to change the model. You do this with Actions (following the Elm Architecture). So, a Signal of some sort that needs to affect the program, should be converted into Actions and fed into the `inputs` of the StartApp (again, assuming you are using standard Elm Architecture). If you follow Elm Architecture, you will have only one address per module. pauseButton: Html pauseButton = div [] [ button [ class "pauseButton", onClick address TogglePauseResume ] [text &lt;| if model.running then "Pause" else "Resume"] ] update action model = case action of TogglePauseResume -&gt; ({model | running = not model.running}, Effects.none) ... 
I did it by saving the value of the input on the model on change, and then on button click just grab the value from the model
Thanks for the tip, it worked!! My input Html now looks like this: , input [ placeholder "Enter a number..." , on "input" targetValue (Signal.message address &lt;&lt; EnterText) ] Whenever anything is typed into the text field, the `EnterText` actions runs. As you suggested, I set `EnterText` up so that it copies the input value into a new field in the model called `inputValue`. EnterText inputValue -&gt; ( { model | inputValue = inputValue } , Effects.none ) It's now easy to grab `model.inputValue` anywhere else if I want to find out what the user typed. One snag I ran into was that later in my code I needed to convert the `model.inputValue` from a String to an Int. After a web search, this seemed like the best solution: String.toInt model.inputValue |&gt; Result.toMaybe |&gt; Maybe.withDefault 0 
&gt; Any thoughts? Give it a try. Take a non-trivial example and implement it both ways. I think that this is one of those cases where we have an intuition and that intuition seams OK when we think about it BUT, when we actually try to put it in practice might prove to be incorrect. One way I view this being handled is by being explicit about this split between pure and effectful (Pure actions are a subset of Effectful actions where the effect is none): type PureAction = PureOne | PureTwo type Action = Pure PureAction | EffectfulOne EffectfulTwo update : Action -&gt; Model -&gt; (Model, Effects Action) update action model = case action of Pure pureAction -&gt; (update' pureAction model, Effects.none) EffectfulOne -&gt; ... EffectfulTwo -&gt; ... update' : PureAction -&gt; Model -&gt; Model update' action model = case action of PureOne -&gt; ... PureTwo -&gt; ... You handle the effectful actions directly in `update` but you delegate the handling of pure actions to another function. Your `update` is `update'` in the above code. Of course, you can also add a type for the effectful actions and handle those separately if you feel that this will improve your code. 
That makes sense. The paradigm shift from RoR to Elm is something I'm still struggling with. Thanks for taking the time to explain this :)
it doesn't matter
I've used it talking JSON to a Perl backend (with Dancer). I think the best fit is either going to be Elm-on-Node (can we do that yet?) or Haskell though.
This is really impressive. Nice work!
I'd been writing backends in rust. I came here to study elm for using it on my front-ends.
There is a project that attempts to use Elm for both backend and frontend: [take home](https://github.com/NoRedInk/take-home). The project is by one of the companies that bet a lot on Elm. They currently employ Evan (Elm's creator). That being said, this is a very young project and it will be some times until it is proven in battle. In the mean time, any JSON API provider will do. 
X-Post referenced from /r/programming by /u/Reactor5 [State of Elm 2016](https://www.reddit.com/r/programming/comments/42ti4u/state_of_elm_2016/) ***** ^^I ^^am ^^a ^^bot ^^made ^^for ^^your ^^convenience ^^\(Especially ^^for ^^mobile ^^users). ^^[Contact](https://www.reddit.com/message/compose/?to=OriginalPostSearcher) ^^| ^^[Code](https://github.com/papernotes/Reddit-OriginalPostSearcher) ^^| ^^[FAQ](https://github.com/papernotes/Reddit-OriginalPostSearcher#faq)
OK, thanks for the suggestions!
Check out example 8 on elm architecture, you'll need to do something very similar. Basically you need to use 'Effects' and have a Tick action.
With Elm Architecture, your `Model` and `update` are used to create a behaviour (a series of states). The next state of the behaviour is created when you send an action to the behaviour. So, when you send `TogglePause` you produce the next state. Same for `Reset`. Now, you want a counter to increment every second (if the stopwatch is running). You do this by providing to the behaviour an Action every second via the `inputs` field of StartApp and holding the value you want changed in the Model. Here is a minimal but fully type annotated example for this stopwatch import Html exposing (Html, text, div, button) import Html.Events exposing (onClick) import Time exposing (every, second) import StartApp import Effects import Signal exposing (Address) type alias Model = { value : Int , isRunning : Bool } type Action = Increment | PauseResume | Reset init : Model init = Model 0 True update: Action -&gt; Model -&gt; Model update action model = case action of Increment -&gt; if model.isRunning then { model | value = model.value+1 } else model PauseResume -&gt; { model | isRunning = not model.isRunning } Reset -&gt; { model | value = 0 } view : Address Action -&gt; Model -&gt; Html view address model = div [ ] [ (text &lt;&lt; toString) model.value , button [ onClick address PauseResume ] [ text &lt;| if model.isRunning then "Pause" else "Resume" ] , button [onClick address Reset ] [ text "Reset" ] ] app : StartApp.App Model app = StartApp.start { init = (init, Effects.none) , update = (\a m -&gt; (update a m, Effects.none)) , view = view , inputs = [Signal.map (\_ -&gt; Increment) (every second)]} main : Signal Html main = app.html Few notes: I've used a shortcut form for initialising the `Model` and, since you don't have side-effects in your app, I've added an anonymous function in the config to convert the simpler `update` so that it conforms to the needed signature. 
&gt; I realize in Elm you would actually keep the model updated and serialize it somehow. I also realize it is not a hard bit of code to write, but the values need to be properly escaped, and I am still rubbish at writing functional code. This is the best approach. You have explicit serialization. If you need the information escaped, you just create a helper function like: sanitizedString = Json.Encode.string&lt;&lt;sanitize and just use that instead of Json.Encode.string. You would then use the `post` function from Http package or the stuff from Http.Extra if you need custom headers and such. 
Where is `sanitize` defined, and why is it needed? Shouldn't the Json.Encode stuff take care of that for you already?
There are some really great little nuggets in there! I've recently found that I've needed to use inputs without effects, so your StartApp configuration is really helpful! While I have your ear, do you mind if I ask you some questions? - How could this configuration be set up with more than one input? - If I'm building a complex application with many modules, should each module run its own StartApp, or is it usually best to have one global StartApp running in the root parent module? 
I have a 2nd main file that includes the bits I care about for any test, then run them in phantomjs 
Thanks! This really helped. 
There's [elm-test](http://package.elm-lang.org/packages/deadfoxygrandpa/elm-test/3.0.1/) for organizing your unit tests, and also [elm-console](http://package.elm-lang.org/packages/laszlopandy/elm-console/1.1.0/) for running them from Node. I managed to make this work quite nicely by putting the test code in a separate Elm package, you can check out [this example](https://github.com/blacktaxi/elm-random-secure/tree/d6d7af15a831d9527d1325ba16c372307e7a73cb/tests). Although there's still the question how do you run Tasks in this setup? Haven't figured that one out yet.
I use it all the time now. It uses too much vertical whitespace for my taste, but it's worthwhile overall.
This helped me greatly. I couldn't figure out for the life of me what this "implicit currying" thing was, or if it was in fact even currying. But now if I use the REPL it all makes sense. &gt; twoArgs a b =\ | a + b &lt;function&gt; : number -&gt; number -&gt; number &gt; twoArgs 1 2 3 : number 
/u/rtfeldman had [a great blog post](http://tech.noredink.com/post/126978281075/walkthrough-introducing-elm-to-a-js-web-app) about this topic that presents a sort of incremental approach to porting an application. May be of some use to you.
Elm definitely doesn't explain type aliases or tagged unions though, and leans on prior exposure to Haskell or something similar. I had to build up my own intuition by guessing about, say, when to use `type` vs `type alias` until I read Haskell intro materials. Elm doesn't explain the concepts, just offers example syntax.
As an Elm Beginner, I will respectfully offer a differing opinion :) I found that the only thing that has helped me learn Elm, was actually just to learn Elm. And, to do dozens of little mini test programs as I go. I found the many Functional Programming (FP) resources and videos people were pointing to unintelligible and confusing. Elm is an extremely simple language - simpler than JavaScript. And Elm in practise is infinitely easier to understand than the theory behind it.
where is Effects defined? it is not listed as core library in 3.0.0
IIRC things are slightly more complicated: `type alias` creates a transparent alias to an existing type, that is when you `type alias Foo Bar`, `Foo` and `Bar` are completely interchangeable at a type level. `type` however creates a new type which may or may not be a union, `type Foo = Foo { a: String }` is a perfectly good type to write, it's not a tagged union and it is an "opaque" record type from outside the module (unless the constructor is exported)
Thanks! Could you explain the meaning of "opaque"? I hear this term a lot but don't know what it means.
You can compose decoders like `targetValue` to automatically give you an int or fail decoding. Check out `on "input" (Json.Decode.customDecoder targetValue String.toInt) &lt;| Signal.message address &lt;&lt; EnterText`. This way you can directly store ints in your model.
Thanks, that's really useful!
Arguably `type Foo = Foo { a : String }` is a tagged union of exactly one type: `{ a : String }`.
Arguably, but that leads to different behaviours in some cases e.g. Elm functions allow pattern-matching but only of irrefutable patterns. "singleton" unions are irrefutable patterns so you can match them in a function argument, without needing a case..of
Set out to write this post to see how Elm's ports worked in terms of allowing interopability with existing JS libraries (in our case, PusherJS). Was pleasantly surprised at how straight forward it was - and also got a chance to play with Tasks and elm-http for the first time too. Regardless of if you care about PusherJS this should hopefully help when it comes to combining Elm with some existing 3rd party JS lib. PS: longer term we're hoping to build a Pusher-Elm lib.
It's example syntax, really. Doesn't even show `type alias`. Shows `type` as an enumeration of arbitrary words and then again with tagged types. It's enough to follow along and be dangerous, but that's a far cry from an introduction. You have to fill in the understanding yourself to learn what it actually entails and what the limitations are. Possibly a distinction that's hard to spot if you already understand the concepts. For example, it's not obvious that you can't / why you can't `type StringOrInteger = String | Integer` nor why you'd have to wrap that abstraction as an enum of your own tags.
Elm can definitely play music (via html's audio tag), but I don't believe there's any audio analysis libraries. For this, I'd stick to javascript (or a sane language that compiles to javascript). Elm does have some interop ability with JS libraries, but it's a bit of a pain.
If you want to do some fancy stuff with audio analysis you might want to write a custom backend in Haskell. Have Haskell do the audio analysis and have elm request the analysis details. Or do an offline analysis and preprogram it into the elm program. This is totally doable
As far as I know there are no Elm packages (yet?) that expose the WebAudio API, which is what you'd need.
I am saving the model into a db and was trying to think of a way around saving the display state in the DB. G4BB3R is right about adding the Bool to the model as it makes changing the display state pretty trivial. But it also strikes me as an unnecessary complication to the db model. But perhaps it is necessary
Hey there, I found the "Pragmatic Studio" Videos quite nice... Maybe take a look at this series of articles: https://dennisreimann.de/articles/elm-functions.html Those should be very up to date.
The [random int generator does just that](http://package.elm-lang.org/packages/elm-lang/core/3.0.0/Random#int): provides a way to generate an int within the provided minimum and maximum. Please note that the numbers generated include both the min and the max. In Elm, random numbers are generated using a generator (like the above Random.int generator) and a seed. [Every run](http://package.elm-lang.org/packages/elm-lang/core/3.0.0/Random#generate) of the generator returns a value and the next seed which should be used in the next call. Here is a minimal but full application following Elm Architecture that demonstrates this. You can copy&amp;paste-it into [elm-lang.org/try](http://elm-lang.org/try). Please note that I've used the tick mechanism to get the current time to use as a seed for the random number generator. import Html exposing (..) import Html.Events exposing (onClick) import Random exposing (int, initialSeed, generate) import Time exposing (Time) import StartApp import Effects exposing (Effects, Never) import Task exposing (Task) import Signal exposing (Signal) type alias Model = { seed : Random.Seed, value : Int } type Action = NewRandom | FirstSeed Time init : (Model, Effects Action) init = ({ seed = initialSeed 42, value = 0 }, Effects.tick FirstSeed) randInt = int 1 100 update : Action -&gt; Model -&gt; (Model, Effects Action) update action model = case action of FirstSeed time -&gt; let (value', seed') = generate randInt (initialSeed (truncate time)) in ({model| value=value', seed = seed' }, Effects.none) NewRandom -&gt; let (value', seed') = generate randInt model.seed in ({model | value = value', seed = seed'}, Effects.none) view address model = div [] [ text &lt;| toString model.value , br [] [] , button [onClick address NewRandom][ text "Push for new random"] ] app = StartApp.start { init = init, update = update, view = view, inputs = []} main = app.html port tasks : Signal (Task Never ()) port tasks = app.tasks 
I take your point and now that you have raised the question, it had not occurred to me that there should be a difference between db &amp; application models.
Very helpful to hear, "Elm has no way to hide local state, it has to go together with the rest." I don't recall hearing/reading this up till now. Rethinking my models
Thank you, sir, I would never have been able to figure this out on my own! I have a general Elm programming question. I've noticed the use of a backtick character in a lot of Elm code, like this: (value', seed') But I haven't been able to figure out why it's needed. Could you explain this? 
Just a few tips from another new Elm learner: A pitfall I ran into was getting stuck for a few weeks in a quagmire of Signals and `foldp`. It's a clever system, but it can be quite confusing for beginners. You'll find a good explanation here: https://www.reddit.com/r/elm/comments/3v2zdj/beginners_brain_melt/ However, it turns out that StartApp and The Elm Architecture is the de-facto standard way to build both tiny programs and huge apps. StartApp does all the low-level boilerplate wiring for you, so you don't have to even have think about Signals or `foldp` at all to start being very productive with Elm. But, because most of the examples and tutorials you'll come across don't use StartApp, programming with Elm might seem a lot more complex that it really is. (Also, I didn't realize as a beginner that there's a standard version of StartApp, and a simple version: StartApp.Simple) I found that after working through basic Elm syntax, the next best step is to gradually work through the Elm Architecture examples, and build your own small test applications based on those examples. This was really when I understood how much fun and easy programming with Elm is. Another pitfall: `elm-html` seems to be the standard current way to handle rendering.`Graphics.Element` and `Graphics.Collage` are really cool alternative rendering systems, but although they're used all over the official examples, nobody seems to use them anymore. I've even heard them referred to as "unofficially deprecated" in threads at elm-discuss. (Would anyone else like to comment on this?) After the basics, here are some more advanced resources I found useful: Basic syntax: https://learnxinyminutes.com/docs/elm/ Sending data through a port: https://groups.google.com/forum/#!topic/elm-discuss/oKh6Ld6dCI8 Elm for JavaScript developers: https://github.com/elm-guides/elm-for-js What are ports, tasks and Effects?: https://groups.google.com/forum/#!msg/elm-discuss/oKh6Ld6dCI8/VrrnEKAeDAAJ Richard Feldman's great tutorial: http://tech.noredink.com/post/129641182738/building-a-live-validated-signup-form-in-elm There are some really nice YouTube videos too, including my current favourite by Murphy Randle: https://www.youtube.com/watch?v=-JlC2Q89yg4&amp;list=PL1tcF9wlS-k3SQcHkcZ9h44nVzRQcnkbC And don't be afraid just to ask as many dumb questions as you can think of, both here and at elm-discuss. That's what I do :) I've discovered that this is the smartest and friendliest user community on the internet!
It seems as though the Elm lang site provides nice examples but does not explain in much detail how the syntax works, or the documentation describes how a feature works but no example is provided. It would be helpful if there were examples in the module documentation. I guess that is what I am struggling with the most. When I see something I want to use in the model documentation, I want to know how to use it. 
i just imagined you say that with a donald trump voice. in all seriousness, though, it's not that bad.
I really enjoyed the screencast series from Pragmatic Studios. I had read a couple introductory articles, but these screencasts really made it click for me. Totally worth the $20. https://pragmaticstudio.com/elm
Interesting. I hadn't thought about it like that. So the only time you can pattern match (without using case..of) is when a tagged union only contains one type? Are there any other examples of irrefutable patterns and tagged unions?
Refactored models so 1) displayed model is separated from db model; therefore 2) giving up trying to hide local state per jediknight's comment. back on track &amp; making progress Thanks all for help
FTFY: * [Basic syntax](https://learnxinyminutes.com/docs/elm/) * [Sending data through a port](https://groups.google.com/forum/#!topic/elm-discuss/oKh6Ld6dCI8) * [Elm for JavaScript developers](https://github.com/elm-guides/elm-for-js) * [What are ports, tasks and Effects?](https://groups.google.com/forum/#!msg/elm-discuss/oKh6Ld6dCI8/VrrnEKAeDAAJ) * [Richard Feldman's great tutorial](http://tech.noredink.com/post/129641182738/building-a-live-validated-signup-form-in-elm) * There are some really nice YouTube videos too, including [my current favourite by Murphy Randle](https://www.youtube.com/watch?v=-JlC2Q89yg4&amp;list=PL1tcF9wlS-k3SQcHkcZ9h44nVzRQcnkbC)
What if you want to rotate, move, center and align stuff easily? Graphics.Element helps so much. How do you do that with elm-html?
Wow...that's incredibly lame. And that's being written by evan himself! Does he have such little faith in his own language? Whatever happened to dogfooding? I thought that Graphics was such a good idea...why not improve it rather than abandon it?
Thanks again, I will study that carefully!
Not sure if it is better, but I might have done something like this: diffBy : (a -&gt; a -&gt; b) -&gt; a -&gt; b -&gt; Signal a -&gt; Signal b diffBy op a0 b0 s = Signal.foldp (\ a2 (_, a1) -&gt; (a2 `op` a1, a2)) (b0, a0) s |&gt; Signal.map fst when : Bool -&gt; a -&gt; Maybe a when p a = if p then Just a else Nothing clickTimes = Time.timestamp Mouse.clicks |&gt; Signal.map fst doubleClicks : Time.Time -&gt; Signal () doubleClicks thresh = diffBy (-) 0 0 clickTimes |&gt; Signal.filterMap (\ t -&gt; when (t &lt;= thresh) ()) I like this because `diffBy` seems like it would be generally useful. But you'd have to add some kind of counting if you wanted to detect triple clicks.
Couldn't agree more. I just finished the first series and they were excellent! Well worth the money. I have already paid for the second series and can't wait to get into it.
To quote Evan (emphasis mine): &gt; And I'm with you that a lot of things are bad about HTML and CSS, but it is also true that "just make something better" is **a very hard project**. I did not succeed in my first attempt, but I think **we will be able to do it eventually**. I view this as an expression of faith in Elm and a humble acknowledgment that the first attempt failed. 
Hey, I create a group you can join here https://telegram.me/joinchat/BcH0az0XFzOVAPgnB0SWTw
Well the client being open source seems like a marketing thing. You can't really run it on your own infrastructure without implementing a server. Having no history in IRC really bugs me too. That's why I proposed to sign the channel up at [botbot.me](https://botbot.me). Botbot has a better search-feature than Telegram. File transfer over IRC can be done easily through FOSS software like [youtransfer](http://www.youtransfer.io/). Telegram might be a bit easier to use than [the freenode webchat thingy](https://webchat.freenode.net/?channels=elm). Pasting code in Telegram is also pretty nice, but most IRC clients use monospaced fonts anyway. Anyway I feel fundamentally wrong to me, to use non-free Software like Slack or Telegram for FOSS projects.
people should just use irccloud and use irc, I feel. It solves all the problems, like history and file sharing. botbot.me is not really taking up more channels at the moment. I have a botbot running on a small server, which I use for another channel, but deployment was pretty complex.
Maybe we should have a gitter.im room as uses one's GitHub profile ?
Thank you, it help me a lot !
&gt; gitter.im It's still a proprietary service.
My hope would be that you have the best experience possible, so do not be afraid to gradually introduce Elm to reduce the overall risk! A lot of companies that use Elm now went through React precisely because they knew they'd have a more broadly used fallback if anything went wrong. Also, try to find a guy named Sean Hess on elm-discuss and maybe ask him about this kind of thing. I know he has done some Elm consulting work already :)
Here is a quick example based on [this](http://www.w3schools.com/html/tryit.asp?filename=tryhtml_input_number): import Html exposing (..) import Html.Attributes as Attr main : Html main = body [] [ note , myForm , ieWarning ] note : Html note = p [] [ text "Depending on browser support:" , br [] [] , text "Numeric restrictions will apply in the input field." ] myForm : Html myForm = form [ Attr.action "action_page.php" ] [ numberInput , submit , text "Quantity (between 1 and 5)" ] numberInput : Html numberInput = input [ Attr.type' "number" , Attr.name "quantity" , Attr.min "1" , Attr.max "5" ] [] submit : Html submit = input [ Attr.type' "submit" ] [] ieWarning : Html ieWarning = p [] [ b [] [text "Note: "] , text "type=\"number\" is not supported in IE9 and earlier." ] 
&gt; Thanks, that's just what I was looking for! :) 
I think it's because the timestamp is the same in a really short time. But I'm not sure
When I test it, the solution is always 50. Bug ?
In the example I gave the argument to initialSeed is the timestamp mod 80000. That value varies from 0 to 79999. So I don't think that the timestamp is the same and neither is the argument to initialSeed. 
I haven't yet figured out how add a random number generator.
The key to remember is that a type alias is literally just a synonym, just substitution, which is why you can't have recursion. If you have type alias Foo = (Int, Foo) then the compiler tries to expand this to 1 `(Int, (Int, Foo))`, then `(Int, (Int, (Int, Foo)))`, and so on forever. If it can't be dealt with using simple substitution, then you need a `type`, instead of an alias. A `type` is actually creating a new type, and the only ways to construct values of that type are with the constructors (tags) that you define. Use `type` when you need: * Recursive types * A type that might have multiple forms or variants, such as leaf vs internal node, Null vs Non-null, etc. Use `type alias` when: * You want to give a short name to a longer type * You want to give a name to a Record type. 
I have made a few changes to your code. You can find the new version in this [gist](https://gist.github.com/pdamoc/3c4a4c9564d6235f504c). I've implemented a way to get randomInts into your program. Basically, I've created a mailbox that can receive unit type. The signal of this mailbox is then converted to a signal of Action where you have one new action that updates the mystery number. There is also an Effect that just sends a message to the above mailbox and thus generate the action that updates the Mystery. I then changes a little bit of your code to demonstrate possible improvements. Some of these can be seen as personal preferences. I'm not claiming that they are better than what you had. One is to extract the Effects.none return into a function (`noFx`) that just receives the new model . Another one is to extract the conversion of the string to a meaningful int outside of `update` so that in `update` the code is cleaner. Another is to use pattern matching on a tuple for updating the gameState. Last is to use an external library for string interpolation. 
read the readme of this package. http://package.elm-lang.org/packages/mgold/elm-random-pcg/1.1.0/ It explains a bit about the limitations of the core random.
Yeah, that is tricky in an immutable language :) I build some little toy recently which uses randomness, maybe that helps: https://github.com/MrMovl/curry-generator 
I can confirm that you understood my code correctly. Now for a few comments: &gt; The first random number is generated when the model is initialized, by calling the newIntEffect Effect. This is a little bit trickier. The newIntEffect is basically a task that will be run eventually by the runtime. It does not actually do anything in the code, it is only defined or described. As I said, this is tricky, especially if the primary experience is with an imperative language where you call things one after the other. In Elm you just declare things. You can play with the app and see it stop working once you comment out the `port tasks` lines. Those two lines are essential for the routing of the Tasks to the runtime. Only there do they have a chance to be executed. &gt; I do have one specific question about this: is always (EnterText "") the default action? This is a little bit tricky too. The task produced by Signal.send need to get to the runtime and be executed. With current Effects library, this means that the result of the task needs to be of type Action. After the task is executed in the runtime, this resulting action is sent back into the program BUT in the context of the `send` we are not interested in the result of that task. So, the main pattern I've seen so far is to just add an `NoOp`action for such cases BUT, in your case, I just repurposed `EnterText`. It doesn't really matter if `EnterText` arrives before or after `NewMystery`, the state of the model would be the same. &gt; If I had more than just 3 cases, could I still use the same pattern? If I had 5, could I use something like (_, _, True, _, )? It should be possible to use a tuple of any size but after a certain size I think code readability would suffer. &gt; The Elm language designers should perhaps consider adding this to the standard library. There are [talks about string interpolation](https://github.com/elm-lang/elm-compiler/issues/905). I love the fact that important features are not thrown randomly into the language but are carefully considered and discussed. 
Great, I'm going to update my code with these new modifications and do a write-up of all this in the README.
The shapes (I suppose you are referring to `ScatterData`, `Logdata` and so on) are nothing but labels you put on the data itself. You can then use these names to determine e.g. which drawing function should be used for presenting the data, by using `case x of ...` I think you might read too much into the meaning of the names in the example. Take a look at this example from the docs: `type User = Anonymous | LoggedIn String` The user can either be an anonymous user, or a logged in user. If the user is logged in, the data type also holds the name of the user. There is no meaning attached to this definition other than that. All the names are made up on the spot, except for `type` (which is a keyword) and `String` (another type, defined elsewhere). When we use the value we have to check wether the user has the state `LoggedIn` user to be able to read the name. This is done using pattern matching. One important thing to realize is that an instance of type User can only hold *one* of the states at a time. A user can never be `Anonymous` and `LoggedIn` at the same time. Take a look under the *State Machines* heading on [this page](http://elm-lang.org/guide/model-the-problem) for a more complete example.
I would have gone farther with the types e.g type MainIngredient = Chicken | Lamb | Cauliflower | Aubergine type alias Model = { ... mainIngredient: MainIngredient, ... }
Very nice, thanks for putting it together.
Tried the generator as soon as I got home and got bit by the same bug :( Considering what /u/redalastor said, is there a way to pull bleeding edge elm from master? I'm in way over my head with all this tooling. Edit: Chrome 48.0.2564.109 (64-bit), OSX 10.11.3, node v5.5.0, npm v3.7.2
I just swapped into my Bootcamp partition and get the same error. I typically use Windows and don't experience this issue with the reactor. My tests on Mac OS: Version | Working ---------|---------- dev/index.html | No dist/index.html | Yes src/elm/spa/App/App.elm (debug) | No src/elm/spa/App/App.elm | Yes The only difference between the dev and dist versions are loading the elm reactor debug script and bootstrapping the app with Elm in debug mode. However, the compiled script from the boilerplate is identical. I tried a handful of things, like removing all usages of the debugger, but that solved nothing. I'll poke around the reactor issue tracker and see if anyone ran into something similar.
From the bug reports I read, it's the ports. They cause issues with the reactor which should be fixed in 0.17. Ports come from Hop.
Thank you for that info /u/redalastor!
Nice! I was looking for something like this. Thanks!
"How do I wire this up with sass, minification, and everything" was the biggest missing piece of all the elm documentation to date! Thank you very much.
It looks nice, but is there any programming language that implement this?
No problem! I wrote a bunch of OCaml in college so I got used to it, but I remember being so completely lost at first. It's definitely one of those things that clicks at some point, and then you get frustrated when you have to go back to "the old way."
really eager for for 5.8 fetching data... Any ETA?
Are you accepting translations ? I would like to translate to portuguese :D
I played a little and looked at the source very fast. 1. I loved the game! Well done! :D 2. I would like to play alone, with only 1 snake 3. I don't know if it is a coding style, but I prefer to transform lambdas in function composition: ```(\p -&gt; p.alive)``` to ```.alive``` ```(\p -&gt; p.id /= player.id)``` to ```(.id &gt;&gt; (/=) player.id)``` ```(\p acc -&gt; append p.path acc)``` to ```(.path &gt;&gt; flip append)``` ```(\p -&gt; isVisible p)``` to ```isVisible``` ```(\p -&gt; let (x,y) = asXY p in Hidden (x,y))``` to ```(asXY &gt;&gt; Hidden)``` ```(\pts -&gt; map asXY pts)``` to ```(map asXY)``` ```(\pts -&gt; traced lineStyle (path pts))``` to ```(path &gt;&gt; traced lineStyle)``` 
I think that is disallowed in Elm, because there are no second-order signals. This means you cannot turn signals on and off for example, and I guess it also means you cannot change them based on another signal in any way.
You have two options: 1. you move to classic Elm Architecture and use the Tick mechanism for animation with all the information needed saved in the model. 2. you create a faster signal and you compute the needed update signal using another signal that provides you with the interval. [Here is some code](https://gist.github.com/pdamoc/b09a1ee250e200dc72d8) showing the two options. Either download the zip and run elm-reactor in the unpacked folder OR copy each of the two elm files in http://elm-lang.org/try My advice is to switch to classical Elm Architecture. It will make your life way easier moving forward. 
I thought it would be very easy, but the only way I found: http://www.share-elm.com/sprout/56c081aee4b070fd20da9cea (Elm 0.15 in example, replace every &lt;- to = to use in 0.16)
I know this has been done a million times but I thought you all would find this interesting. The code is less than 100 lines long: https://github.com/fbonetti/elm-game-of-life/blob/master/Main.elm The board is seeded with `Date.now()` via a port. You'll get a new board every time you refresh.
Very cool! Is there Elm-fornat support? 
I've added a singe player mode now. Enjoy :D
Thank you, those suggestions are just what I was looking for! The only change I had to make was, instead of `Effects.succeed`, I had to use: Default -&gt; ( { model | ... } , Effects.task (Task.succeed YourOtherAction) ) 
Cool little game. I can't believe how easy that source code was to read. I think that shows the power of elm, that I can read your entire 750 lines of source in 2 minutes, understand it all and pick up some ideas. 
I agree, I prefer strings to a type for this example. The list could easily come from a database and may not be fixed.
Looks good. I am new to Elm too. I live this as an example of how to deal with Random, I will keep an eye on it next time I want to do something Random. I have done Haskell before. Although Haskell is more powerful with type classes, higher kinded types etc, I do like the simplicity of elm and knowing I won't have to deal with overcomplicated libraries is a nice feeling.
I would suggest investing the energy in creating something at least moderately complex in Elm. My bet is that you will learn more from this than from reading some book or some tutorial. I've been in a place similar to your place and I tried to do something very similar to what you say you're thinking of doing. In my case it was not a book but an [edX course on introduction to functional programming](https://www.edx.org/course/introduction-functional-programming-delftx-fp101x-0). I switched strategies and ended up writing [5 elm files](https://github.com/pdamoc/elmChallenges) as my main learning experience. 
You don't have to learn other programming languages if all you want to do is learn and use Elm. But just in case you do want to learn more about purely functional programming, I recommend using the book [Haskell Programming From First Principles](http://haskellbook.com/) (although early access, it is already 80% complete and has over 1000 pages. It also already have a lot of great reviews).
Yup! 
Yes, this is amazing. Next up: [viskell](https://github.com/viskell/viskell)-like editor with values flowing through it!
Here is the example code I am working on: module AddAccountView where import Html exposing (..) import Html.Attributes exposing (style, value) import Html.Events exposing (onClick, on, targetValue) import Maybe exposing (withDefault) import Date exposing (..) import Validation exposing (..) -- Types type AccountType = Check | Savings | Credit | Cash | Other -- Model type alias Model = { name : String, balance : Float, date : Date, accountType : AccountType, inBudget : Bool, nameError : InputError, balanceError : InputError } initModel : Model initModel = { name = "", balance = 0, date = fromTime 0, accountType = Check, inBudget = False, nameError = Nothing, balanceError = Nothing } -- update type Action = Submit | Cancel | SetName String update : Action -&gt; Model -&gt; Model update a m = case a of Submit -&gt; m Cancel -&gt; m SetName s -&gt; { m | name = s } view : Signal.Address Action -&gt; Model -&gt; Html view address model = div [] [ text ("Account Name"), input [ value model.name, on "input" targetValue (Signal.message address &lt;&lt; SetName) ] [], button [ onClick address Submit ] [ text "Save" ] ] 
Elm used to rest more on the Graphics.* libraries back when that phrase was coined. Creating UIs back then was a very distinct experience from HTML. elm-html took over and it is less something new that compiles to HTML and CSS as it is another way to write HTML and CSS. It is worth mentioning that you can use these building blocks to create more complex elements. So, in a way, you still get something that compiles to HTML, CSS and Javascript. The experience is not as different as it was when Graphics.* was in vogue but it is still a very distinct experience. 
I have a small app using elm/phoenix/elixir. I'm not using the elm buildpack. I'm building my elm app through webpack. I'm using these two buildpacks: 1. https://github.com/HashNuke/heroku-buildpack-elixir.git 2. https://github.com/gjaldon/heroku-buildpack-phoenix-static.git I then have elm included in my package.json. My ./compile script is as follows: info "Building Phoenix static assets" npm run compile mix phoenix.digest and my package.json compile script simply does "webpack -p". I'm not sure if this applies to you if you aren't using webpack. Hopefully it will be of some help.
Thank you - I'll give it a go. 
Brilliant! Up and running - much thanks 