If your sensor samples at 500kHz than that defines your sampling frequency. The highest frequency you will be able to detect is 250kHz. If your application/signal contains signals/dynamics above 250kHz, these will fold back and appear somewhere in your result. This is called aliasing. So in order to choose the right sampling frequency or in your case choose the right sensor, you need some insight/knowledge of what you are going to measure. If higher dynamics fold onto your 0-250 range, you might get a 'peak' in your spectrum which isnt really there. 
I remember from my signals course that to avoid having aliasing the sampling frequency should be at least half of the sensor frequency. It was also written in the book that in the industry one tenth of the sensor's frequency is used in order to do that. Should I go down to 50 kHz or will this be too much ? I can also go to 100 kHz but I just want to know what to expect
Sounds very intricate! But is MATLAB the only software you use for this job? Meaning can it handle these tasks entirely or do you have to use extensions?
Wow, may I ask where did you work previously to analyze flight data, what company? And is the basic MATLAB version with the Simulink and aerosapce toolbox enough to carry out this analyses?
Depending on what you need to do, WSL (windows subsystem for linux) might be able to handle 99.999% of your needs. ubuntu is the "original" linux flavor, but there are many options now. Most dev tools work just like they do in "real" linux...you have full fledged access to ssh (and pubkey authentication), vim, gedit, gcc, cmake, various linux python distributions (and pip), the apt package manager (on ubuntu, different package managers for different distros). It admittedly falls short a few places. A few that immediately come to mind are: 1. certain low level filesystem tasks that require a native filesystem other than NTFS, 2. certain low-level system tasks that require an actual linux kernal, and 3. dealing with mounted filesystems. This admittedly needs some work (things like fstab arent supported), but seems to be something the devs are actively working on 4. Some operations seem much slower, especially with regards to I/O. This seems largely due to windows defender being far too nosy for its own good, but it still isnt quite as fast as real linux. The cool part is this doesnt use virtualization, and there are no virtual machines to setup and prepare. Rather, it transcribes linux system calls into system calls the windows NT kernal can understand, meaning from the perspective of the windows OS it is "just another program". It also means you can manage WSL using windows tools like the task manager, you can easily read/write files in the windows filesystem, and you can easily call bash scripts (or whatever your favorite scripting language is) from within windows AND can easily make CMD calls from within WSL.
*I remember from my signals course that to avoid having aliasing the sampling frequency should be at least half of the sensor frequency.* Not exactly. You keep talking about sensor frequency, but this isn't usually a defining component. Normally you decide on a samplnig frequency and select an adequate sensor. In your case you are handed a sensor and must assume that it will do the job. To clarify, this would be 'normal' procedure: 1. analyze/model/get some a priori knowledge about the signal you are going to analyze and determine the highest frequency component you will likely encounter in your signal. 2. Set sampling freq accordingly, minimum is 2x the highest freq component but usually a factor 10 is better. 3. open a catalogue and order a sensor that can deliver at that sampling frequency. You are already at step 3, so from that we can work our way back and deduce the (maximum achievable) sampling freq. *Should I go down to 50 kHz or will this be too much ?* No, just run it at 500. If your analysis shows peaks close to the nyquist frequency (e.g. 240kHz) you know that you have not achieved your factor 10, and some of what you see might even be aliased since you're so close to the nyquist frequency. If your analysis shows that the highest peak occurs at say 40kHz, there is a good chance that the sensor you used is adequate.
Your points make perfect sense and I would love if this was my case but sadly we are looking at a welding process through a photodiode sensor hence we cannot really predict the maximum frequency that we might encounter. As my professor said to me before taking up this thesis "this is a shot in the dark". I will take all of your points into consideration for sure. Thanks a lot for your responses ! I really enjoyed your answers and they gave me a lot of knowledge about stuff that I didn't even know I need !
Glad to help, I enjoy explaining this stuff :) *hence we cannot really predict the maximum frequency that we might encounter.* In that case you might wanna try using an anti-aliasing (AA) filter. This is basically just a lowpass filter (you can use some very simple first or second order filter, or a more advanced one [https://en.wikipedia.org/wiki/Chebyshev\_filter](https://en.wikipedia.org/wiki/Chebyshev_filter) or [https://en.wikipedia.org/wiki/Butterworth\_filter](https://en.wikipedia.org/wiki/Butterworth_filter) ) that you apply to your signal before feeding it to fft.m. Set the cut-off frequency of the filter to 250kHz, and then you're pretty much sure that what you see in the 0-250khz range is actually there and is not aliased. Drawback: you're completely in the dark about what happens above the 250kHz. (but if you try with and without the AA filter and the results deviate significantly, you know for sure that there is something happening above the 250kHz)
Thanks for that, I'm fairly new here.
Thanks for replying. But if I try to add what you suggest for the for-loop "d + [1:length(fmOut)]" then I get an error message saying: "Index exceeds matrix dimensions" for i=d+[1:length(fmOut1)] y(i) = fmOut1(i) + alpha*fmOut1(i-d); end 
Could making you x values in miliseconds for the plot but make the xticks a categorical object of the time you want displayed as strings. x = [t1,t2,t3....] ; %times in milliseconds for plotting purposes plot(x,y); my_times = categorical( {'57.874', '58.546','59.253'....}) ; xticks(my_times); 
I've actually used WSL for many tasks, but I never could get a GUI to work with WSL from Xming. I don't think I understood the process enough. 
I'm in grad school, so a lot of what I do is more exploratory and poking at a problem with different sticks than the hardcore analytics you'd see in industry. I use it for the good machine learning interface (decision trees, neural nets, etc), mostly because I haven't sat down to learn lower-level tools like tensorflow or scikit yet.
Ocean circulation research. Atmospheric climate research. Weather data.
I worked on the [NSROC contract](https://sites.wff.nasa.gov/code810/nsroc.html) as a sub-contractor.
Not anymore, but at my previous job we used Matlab for number crunching and subsequent data visualization, for test data in medical device development. We had to hack out a lot of different analyses and tests day to day, and Matlab made it easy to customize things every time while still being relatively efficient in dealing with enormous data sets (up to 4gB)
I havent tried xming, but can confirm that VcXsrv works beautifully. If you want, you are welcome to steal some/all of [this code](https://pastebin.com/mRUw5eCH) that I wrote to automate starting/stopping VcXsrv whenever a`ssh -Y` or `ssh -X` command was called. This includes commands that let you start and stop VcXsrv from directly within WSL by simply running `startX11` and/or `stopX11`
&gt; [(1+d):(length(fmOut)+d)] Looks like I was wrong. I ran a test and it seems that it is actually i = [(d+1):length(fmOut)] Sorry about that. I thought the vector always got evaluated first, but I gues it is just standard left to right operation precedence. Side note: this is why it is good practice to group things with parenthesis, since it avoids any confusion of what the command is trying to implement.
I used a module called DSpace for the exoskeleton controllers and robotic environment simulations (basically anything that required near real-time closed-loop control). DSpace is basically a combination control board, CPU, and GUI making software that allows you to compile Simulink and change parameters on the fly. This thing is super pricey (somewhere in the 10-20k range), but very convenient. I have built similar systems without MATLAB + DSpace, but it required modifying the kernel on a Linux box to interface with a national instruments control board in real time (OpenSUSE was the Linux Flavor of choice for that RT Linux project), and writing all controllers in C. This was much harder than just the MATLAB+DSpace combo, but also 1/10 the price. In my current job I use standard libraries in MATLAB (I currently have standard license + data acquisition, optimization, and signal processing toolboxes), but most of what I use are custom libraries that I wrote myself. Lost of printing to files, automated data processing, databasing, generating unique filenames, etc. Everything I described could be done in python or C/C++, but that would slow down the development process and make a lot of the automation I have done pretty inaccessible to my coworkers (most of whom freak out at the sight of a command line). I ran the #'s, and basically me spending an extra day developing software costs the same as a year long MATLAB license. In my mind, that totally justifies using it over open source languages for the types of applications I am working on (highly customized, unlikely to ever be used outside of my current company). 
check out polyfit(). Might be what you need. 
&gt; You're adding data that you haven't measured and this will alter your results. With fft's you are *always* adding data you havent measured, since a fundamental assumption is that the fft signal is infinitely repeating. If you add zeros you force unmeasured data to be zeros, if you dont then you force it to the wrapped around data from the other end of the signal. Depending on what you think the data would look like in that section if you had collected any there, one of these is likely to be a better assumption than the other. I dont think one can be considered universally better than the other.
&gt; Is this correct ? Yes. The important distinction is not so much "is this a power of 2" as it is "what are the largest prime factors. It is my understanding that something like, say `360 = 2 * 2 * 2 * 3 * 3 * 5` would be nearly as fast as `256` or `512`, but that something like `411 = 3 * 137` would be considerably slower.
Hi again! Now I had the time to read through it all and most of it makes perfect sense to me :) &gt; It says exactly that! But think about what your signal should exist of for the first 0.6 seconds. You want the first 0.6 seconds of your original signal + that same signal but then shifted back in time for 0.6 seconds. Does that exist? Does that exist? Ehm... no? But if you work with a running average, then you also don't have something before it. But maybe that was the point you were trying to make? Sorry, my head is dead right now, so I hardly understand what is going on anymore xD &gt; Yes, To be really honest: why is your input signal called fmOut? I would put your delay code in a function with an input (fmIn or signalIn) and change y into fmOut or signalOut. Oh, it might make more sense as to why I've done that if I show you more of my code: %bell sound fs = 44100; % sampling rate fc = 400; % carrier frequency fm = fc*1.4; % frequency modulation seconds = 15; % entire length of signal t = [0:1/fs:seconds]; %outputs an array of values ranging from 0 to seconds, with 1/fs increments i = exp(-2*t+1); %exponential decay of modulation index env = exp(-2*t); %exponential decay of amplitude fmOut = sin(2*pi*fc*t+(sin(2*pi*fm*t)).*i).*env; % output figure plot(t, fmOut) ylabel('Amplitude'), grid on, title('Bell sound'), xlabel('Seconds') figure spectrogram(fmOut,hanning(1024),512); soundsc(fmOut, fs); % plays the sound %% %echo for bell sound delay = 0.6; % 0.6 second delay &lt;- time in seconds alpha = 0.1; % echo strength d = delay*fs; % delay samples y = zeros(size(fmOut)); y(1:d) = fmOut(1:d); for i=d+1:length(fmOut) y(i) = fmOut(i) + alpha*fmOut(i-d); end figure subplot(2,1,1) plot(fmOut) ylabel('Amplitude'), grid on, title('Bell sound'), xlabel('Seconds') subplot(2,1,2) plot(y) ylabel('Amplitude'), grid on, title('Bell sound w/ Echo'), xlabel('Seconds') soundsc(y, fs); I hope it makes more sense now as to why fmOut is named like that. I'm just appling the bell sound made previously using frequency modulation and envelope. &gt; Don't sell yourself short, because you are correct :). If you are still in doubt. Do the "loop by hand" exercise. It's silly but it really helps with comprehension. You mean this? A = [1,2,3;4,5,6]; % a 2x3 matrix print(size(A)); % what is the output? print(zeroes(size(A))); print(zeroes([2,3])); %is there any difference with the previous line? Which line is more convenient to use? print(ones(size(A))); print(nan(size(A))); print(eye(size(A))); I'm tired, so sorry if I'm saying dumb stuff. I'm going to bed after this post. So I hope I'll be more clear in the head if we get to talk again tomorrow. &gt; Not multiplied but added. If the original signal had an amplitude of 1 at the start, and it faded to about 0.35 before the delayed signal starts (check it!). The delayed signal amplitude is equal to: 0.7. So if you calculate the amplitude by hand: &gt; Signal amplitude (at index d) = fmOut(at index d+1) + alpha*fmOut(at index 1) ~= 0.35 + 0.7*1 = 1.05. &gt; Which is more or less what you see in your image! Yeah, of course not multiplied. I guess I forgot that there is a thing called 'additive synthesis'. Which seems to fit with what is happening there. Or at least something sort of like it. Not sure about the math part, I actually don't know what 'additive synthesis' looks like besides: aSignal+anotherSignal &gt; Let me know if you have any more questions! Well... I'm not sure how well versed you are in audio 'stuff', because I'm rather confused about how to interpret/analyse a spectrogram and what I can say by looking at such a graph. And I'm having an issue with figuring out what a fundamental frequency actually is. I thought it would always be the most prominent first partials, but I've a case where there are 1 or 2 fairly prominent partials, but the 3rd one is huge compared to those first ones. So now I'm confused as to if the fundamental frequency is the biggest partial, or the first prominent one on a spectrogram. If you know something about this, then I would like to redirect you to this other thread that I made: https://www.reddit.com/r/audio/comments/8rretx/questions_about_fundamental_frequencies_and_how/ it would be really helpful for me if you could answer some of those questions, because I still haven't figured them out yet, and I feel like it's something that I need to know for the exam at Wednesday :( I might have some other questions that I'll ask tomorrow (if I can make it in time), because right now I can't think of any besides what I've posted.
in case you are interested, matlab uses [fftw library](http://fftw.org/) for fft's
I think Python is definitely worth learning, and I use it pretty frequently. That said, if you are not a particularly strong coder, the barrier to entry with Python is higher. If you are a grad student I assume you have access to MATLAB for free, and would recommend starting there. The documentation is better, examples are generally more concise, and MATLAB is just more user friendly in general for the entry level programmer. For writing raw data, i would recommend checking out fopen(), fgetl(), fprintf(), fclose(), etc. They are the main functions you are going to use for reading and writing raw data. Also check out the dir() command for batch processing.
&gt; Set the cut-off frequency of the filter to 250kHz, and then you're pretty much sure that what you see in the 0-250khz range is actually there and is not aliased. Drawback: you're completely in the dark about what happens above the 250kHz. It, unfortunately, doesnt work like this. At least not for digital filters. Many devices will have an anti alias filter to remove frequencies above the nyquist, but either 1. the device is internally sampling at a much higher rate, then applying the anti-alias filter, then downsampling and outputting the downsampled data, OR 2. there is an analog filter that physically removes high frequencies by utilizing some physical mechanism. This will typically come before the signal is digitized (i.e., immediately after the sensor records the analoug signal, and before the computer sees any of it). Once you have 500 KHz sampled data though, anything above 250 KHz is already aliased into the data and cant be (easily) removed. Treating it like an inverse problem to identify what is aliased energy and what is actual signal might work for some specific situations, but it is a crapshoot at best for most general usage. If you say, applied a low pass filter with a high cut of 100 KHz you would be getting some anti-alias protection (assuming the strongest aliased frequencies are those closest to the nyquist), since by removing info from 100-250 KHz you also remove aliases from 250-400 KHz. You would still have any frequencies from 400-600 Hz, 900-1100 Hz, and (in general) `(500*n-100) &lt;--&gt; (500*n+100) KHz, for n=1,2,3,...` present as aliased frequencies between -100 and +100 KHz, but if, for example, most aliases energy was between 250-350 KHz then you are good to go.
Ill add one tip i didn't see elsewhere: Use a taper anytime you have data that suddenly ends at the data edge. Otherwise you add in (often significant) Fourier noise. Personally, I use cosine / Tukey windows for this purpose. I'm including a little code to generate this and a small example showing why they are useful. In the example, the signal has only a single frequency (i.e., is purely sinusodial) meaning that, ideally, the fft should produce 2 spikes, one at `+f` and one at `-f` (where `f` if the frequency of the sinusoid). One example tapers the data edges before doing the fft, the other doesnt. Which looks more like the correct "2 spikes" result? function [tukeyWin1D] = makeTukeyWin1D(N,r) %% makes a 1D cosine (tukey) window that is identical to the output of "tukeywin(N,r)" % N: number of points for the FULL window % r: fraction of the window that the transition zones should occupy. % The transition at each end will be half this much. % DEFAULT is 0.2 --&gt; window takes up 1/10 of total data width at each end % ensure we have size input if ~exist('N','var') || isempty(N) || ~isnumeric(N) tukeyWin1D = []; return else N = round(double(real(N(1)))); end % ensure transition zone width is valid if ~exist('r','var') || isempty(r) || ~isnumeric(r) r = 0.2; else r = double(real(r(1))); r = max([0, min([1, double(real(r(1)))])]); end % get period of transition zone and corresponding # of samples cosPeriod = (N-1)*r; numPts = floor(cosPeriod/2 + eps(cosPeriod)^(2/3)) + 1; % generate cosine transition, then flip to get the distance to 1 instead of to 0 cosTransition = cos(([0:1:numPts-1])*((2*pi)/cosPeriod)); cosTransition = 1 - ([(cosTransition+1)/2,0]); % build 1D tukey window tukeyWin1D = cat(1,(cosTransition(:)),ones(N-2*numPts-2,1),flipud(cosTransition(:))); end % % % % % EXAMPLE % % % % % N=1000; xx=cos([1:N]/120); freq=[-(N-1)/2:(N-1)/2]; figure hold on plot(freq,abs(fftshift(fft(xx(:).*makeTukeyWin1D(N)))),'b','linewidth',2) plot(freq,abs(fftshift(fft(xx(:)))),'r','linewidth',2) plot(freq,abs(fftshift(fft(xx(:).*makeTukeyWin1D(N)))),'b--','linewidth',1.5) legend('WITH TUKEY WINDOW','WITHOUT TUKEY WINDOW') hold off xlim([-40 40]) xlabel('Frequency') ylabel('Power') title('Calculated Power Sprectum of Signal Made Up of a Single Frequency')
You need to represent this as a matrix operation. Ill give you a hint: you want `d = G * m` form. you have a + b*xi + c*xi^2 + ... + m * xi^n = yi you want `a, b, c, ...` --&gt; `m` the `xi` are used to create `G` the `yi` are used to create `d` Once its in matrix form it is easy to solve with a "standard" least squares matrix solution of your choice. 
With floating point numbers, you should never test for equality. AKA, if `a` and `b` are both normal floating point, then `if a == b` is never a good idea. Instead, you should always use something like `if abs(a - b) &lt; eps` where you define `eps` to be your tolerance. 
Right. So I tried it like this, function [value, isterminal, direction] = myEvent(t, y) eps = 0.2; value = (abs(y(:,1)-pi) &lt; eps); % stop at theta ~ pi? isterminal = 1; % stop the process direction = 0; end Is there something I've misinterpreted here? These are my errors Undefined function 'sign' for input arguments of type 'logical'. Error in odezero (line 46) indzc = find((sign(vL) ~= sign(vR)) &amp; (direction .* (vR - vL) &gt;= 0)); Error in ode45 (line 353) odezero(@ntrp45,eventFcn,eventArgs,valt,t,y,tnew,ynew,t0,h,f,idxNonNegative); Error in Untitled4 (line 28) [t, y] = ode45(@odefun, [0 pi], [O P J K], Opt); 
I feel like I cant adequately express just how happy I am that this exists. Honestly, I had been considering trying to fix the old depreciated `sharedmatrix` function (which Im guessing this is at least partially based on) myself, but havent had the time to dedicate into a project like that. I have sooo many potential uses for this, which in general come down to "there is a HUGE benefit to having the ability to control parallel (and in particular asynchronous) execution without relying on the parallel computing toolbox" (both in terms of using a computer that has a toolbox license and being reliant on the often slow functions in the toolbox. For example: In my own testing Ive found that using individual matlab instances and controlling data access using a few on-disk flags was twice as fast as using a parallel pool and `parfor`). In particular, since I process ridiculously large data sets, im hugely excited to be able to assign one thread to asynchronously read a data block, one to asynchronously write a data block, and assign the rest to implementing some processing workflow. `fread` and `fwrite` are both single threaded but I really dont have a better alternative, which often means that I end up spending a decent chunk of the total execution time (1/3 is not entirely uncommon) waiting on I/O. This is compounded by the fact that the systems that process these huge datasets typically use high core count low clock speed xeons, which makes everything faster except for I/O, which gets even slower. As long as I have a sufficiently complicated processing workflow, I should be able to entirely hide reads and writes by asyncronously doing I/O as the main processing workflow is carried out on a different data block, and since I only lose 2 cores there will barely be a difference in the speed of the main processing workflow.Completely hiding I/O when you only have single threaded I/O functions and have terabytes of data to work through could literally save days off of the total execution time for my use case.
Check out http://www.free-thesis.com
I had a class for matlab. But I’ve had to teach myself other languages, and I’ve found that the best way to learn is to start with a specific problem that you would like to solve, e.g. simulate some physics or create a script to let you plate tic tac toe against a friend. Once you have a problem to work towards, you can solve each sub problem by looking up how others have solved that particular sub problem. If you have no programming experience, then it may be beneficial to look at some tutorials first
Classes and self study more of self study tbh , feeling lost is normal just work past through it 
I was able to get to work by doing this: function [value, isterminal, direction] = myEvent(t, y) value = double((any(y(1,1:end) &gt;= pi))); % stop at theta ~ pi? isterminal = 1; % stop the process direction = 0; end Would you happen to know tell MatLab to then use that value (and the values of the other variables at that point) that made it stop evaluating in a new equation?
 thanks, yeah that's helpful. it's good to know it's normal
yeah, i'm working w/ a professor who's assigning me problems every week. a big part of my problem lays in me not really knowing what i'm being asked to do.
Honestly, just use the help browser, google, and the Mathworks website. We can help to an extent, but when people here get the impression that you want someone to do your homework, we tend to get sassy. Look for a ‘Matlab for beginners’ guide and build from there. At first it may seem overwhelming but you will get the hang of it if you persist.
It's a war of attrition while you first learn, hang in there and you will persevere. I'm very very comfortable with MATLAB now, but even at this moment I have 9 browser tabs open to MATLAB-related questions. The best advice would be to work on a PERSONAL project, since you will be invested in it. The best way to start a personal project is to simply ask yourself what it is that you want to automate? When I first started out, it was trying to background subtract some images that had non-uniform background scattering and it literally started from googling "How to load an image MATLAB".
What kind of stuff did you do for self study?
The quick hack I've been using is to loop through your iterations and plot one frame, use draw now, and then clear frame. I know there's a better way using the animation object, but I haven't used it enough to be familiar with it.
MIT has classes available at their open courseware site. They have all homeworks and slides available that will walk you through the basics. I highly recommend! 
I’ve used this strategy too, exporting each frame and then sticking it all in imagemagick (sp) to make a gif. Works alright!
Yeah good idea, and if you want faster animation/no focus stealing you can use the `set` function with `XData`, `YData`, or `ZData`. Here's a quick example that you can run as a script total_frames = 1000; del = 20; num_pts = 30; x = linspace(0, 2*pi, num_pts); y = sin(x); plt = plot(x,y); xlim([0, 2*pi]); for i = 1:total_frames set(plt, 'ydata', sin(x + i*del/total_frames)); drawnow; end
[removed]
There is a native way to make AVI and MPEGs (if you have the codec) using exactly this. You instantiate a videowriter object (or something like that, can’t remember off the top of my head). You then make a fig and send the fig handle to the object and it registers it as a frame. Looping through different digs you make the video. It’s somewhat crude but it works decently. 
Jump head first into a problem , Google anything u don't know , and if it's a big gap in knowledge watch a YouTube video on it there are good tutorials out there
There is a good [style guide](https://nl.mathworks.com/matlabcentral/fileexchange/46056-matlab-style-guidelines-2-0) on the mathworks. I recommend you read that.
The documentation (and code inside matlab) vary between TitleCase, camelCase, and lower_case_with_underscores, mainly by field. The important thing is to pick one of them (preferably consistant with what others in your field use) and then stick with it. Personally I prefer camelCase for all variables and functions, and that's what my company style guide advocate as well. We use TitleCase for class names and properties. 
I already did read that some time ago. However, it doesn't provide any insight on my specific question other than generally recommending camelCase.
so you mean I have to define a new variable for each boundary? 
how do you pre-allocate and where do you put it? Well i tried **&amp;&amp;** but then I get this :/ : Operands to the || and &amp;&amp; operators must be convertible to logical scalar values.
I taught myself Matlab by looking at documentation, MATLAB answers, and some techniques taught by seniors. Yet I am still learning everyday and refer to steps online since many question u may think of has been solved long time ago. Imo Matlab is a great tool for engineers ( yes I am a undergrad in BME) to step into realm of programming due to it much well comprehensible language and syntax. 
me personally, I use camelCase for variables and under_scoring for script names and function names. However, as long as you are internally consistent is what matters. One thing no-one else has added though, is use *meaningful names*. x, a, b ,j etc are not good names. mainMatrix is barely better. This is particularly prominent when people use counters in loops and I hate reading long loop sections, or loops within loops, trying to figure out i, j or ii as variable names. Iteration? *participantI* or something. wait for?? *responseK*. But you'll save yourself so much heartache with meaningful names :)
If you are currently a student, ask your professors which classes use Matlab heavily, take Andrew Ng's Machi g Learning Ng. Ours
Ok, so I'm taking a closer look at the code. It seems you're subindexing a new vector `By`, which is the same size as `x`, and using regions `x&lt;=-d/2-delta`, `-d/2-delta &lt; x &lt;= -d/2`, ..., etc. Preallocate: Before starting to index By, you declare it as a zero vector with the size of x. `By = zeros(size(x));` Now you can index: `By(x &lt;= -d/2-delta) = 0;` However, the line `By(x &gt;= -d/2 -delta &amp; x &lt;= -d/2 ) = (x+(d/2)+delta)*B0/delta;` should index on the right hand side as well: `By(x &gt;= -d/2 -delta &amp; x &lt;= -d/2 ) = (x(x &gt;= -d/2 -delta &amp; x &lt;= -d/2 )+(d/2)+delta)*B0/delta;` It would be easier to define indexes beforehand: `region1 = find(x &lt;= -d/2-delta); region2 = find(x &gt; -d/2-delta &amp; x &lt;= -d/2);` And then use `By(region1) = (x(region1) + d/2 + delta)*B0 / delta;` And so on. I stand corrected on mentioning the use of `&amp;&amp;`: you need to use single `&amp;` for this. We use `&amp;&amp;` for conditions for an `if` statement (as they are logical/boolean values). I hope this helps.
I always copy my figures, then paste them in PowerPoint and ungroup them. Then you will have a vector object instead of a rastered object. Once you have the vector object in PowerPoint, you can change the font size to whatever you like.
Have you tried going to preference, and in the figure submenu and using the presenting button. It works at least fore for ecp files. 
Thank you.
We had a small intro-course covering the basics. Then we were expected to solve the problems and learn as the year went on. Honestly trying to solve it with people and maybe foremost internet was the way to go for me. Also don't start with harder problems, common mistake I believe.
The work sounded NASA-like. How do you get into one of these contracts?
The way I'm doing it is just buying old MATLAB books (since they are cheaper than new ones) and working through them one by one. The code so far is still good for current versions of MATLAB, not too much has changed in the language itself. 
Its not something you should know innately. Don't feel bad. Everyone starts at zero with the "I have no idea what I'm doing" frustration. I had a few classes in engineering school for Matlab. As other say, the best way to learn without formal teaching is to identify a pretty specific problem, find an example that is similar, and work through the same logic to identify the workflow and functions that you need. Good luck!
You are probably new to programming in general. Once you learn the basics of programming for one language, others make more sense. MATLAB is just like any other programming language, with some superficial differences. Keep practicing till it makes sense
I'm addicted to camelCase, even though I think it's not great. I hate super abbreviated variable names. It was the convention in the very old days when storage and memory were at a premium, but it's impossible to make sense of code where the variable names are all likely pibc, pilc, nvo, etc. Variables should have descriptive names, like pointsInBaseCoords, pointsInLocalCoords, normalVectorsOrthogonal. That way you can read code and generally make sense of things. i and j should never be loop indices, because i = j = sqrt(-1). That looks, in Matlab, as silly as using pi as a loop index. In simple loops, especially non-nested or when tge outer or inner of a nested loop is very brief, n, m, and k make good indices and are also commonly used for indexing in mathematical notation. For more complex or long loops, indices should have descriptive names, like vectorIDX (which might index a variable like vectorList), or imgID (which might index something like imgFilenameList{imgID} or imgStack(:, :, imgID)), so it's easy to know what it indexes. Equals signs should have spaces before and after. Arguments to functions should have spaces after commas. Indexes to arrays should not have spaces after commas if they're trivial, but should have spaces if they're complex, so arrayName(:,:) or arrayName(n,m) is okay for simple indexing, and arrayName(rowFunction(arg1), colIDX, :) is fine for complex indexing. Binary operations in long mathematical expressions should be formatted to make the form of the expression visible. So simple sub-expressions can be done without spaces, especially if they're repeated. Larger expressions should be spaced out, like (n-1) * (exp(-i*pi*theta) - phaseOffset(theta, x)) Indenting should use the automated pattern the editor promotes. Hit ctrl-a ctrl-i to be sure. Editor warnings should be resolved unless you have a **very** good reason not to. 
Use it for stuff. 
Mechanical engineer. In grad school, I used MATLAB for image processing footage of droplet size over time. At work, my particular job doesn't involve MATLAB but I know we have people who use it for various things. Modeling and simulation, shock and vibe, FEA, and more.
Follow the neighborhood of pixels and count number of them - if it is long enough that is your line. 
Gruezi wohl
I agree with you, my good friend. Mathworks team really dropped the ball on that one... 
Best answer. I learned by using it for things I could have use excel or just out of curiosity
I would give [edge detection](https://www.mathworks.com/discovery/edge-detection.html) a shot. Either that or a custom script where you trace a line by dragging the cursor across, and then snap to the nearest high *y* value at each *x*.
I haven't found a presenting button there.
In the posted image, P is a function of v_p^2 . This LMI seems to derive from the maximum singular value of P (which can be converted into this form through the Schur Complement) and is a convex objective function. I'm wondering how I solve this optimization problem in matlab. All the guidance is leaning towards LMI toolbox (which seems to have been wrapped up in the Robust Control Toolbox). Is this solved using gevp? 
I liked camelCase but it started to grate on me when I tried to include acronyms into the variable name. testACTScore and beginSATTest for example. test_ACT_score and begin_SAT_test look more readable to me.
Yeah, the core functions of Matlab haven't changed. It's mostly added bells and whistles in the toolboxes and gui interface.
thanks it worked!!! 
Underscores take a lot longer to type I find. I use camel case because I hate typing underscores. 
And effort. way off the home row. I should remap a fast "jkl" to create an underscore.
single letter variables can be okay if they have a specific meaning in a certain context. For example, if you are doing something in dynamical systems and using a state space representation, A,B,C,D all have very specific meanings. That being said, labeling them would probably be better. I use lowercase i followed by a descriptor for iteration counters (e.g. iUser)
Yeah that’s what I meant. I despise them!
Yes you are correct, it would only work if the signal is filtered before sampling :)
I broke both my hands this year as well and still recovering so I feel that stretch. Maybe I'll roll back to camelCase
I'll say, I'm reading a book right now from 2000 and almost everything works just fine. 
I'm away from my computer, but it should be in preferences, figure fonts/layout and there should be settings in there. 
My hands aren’t broken and I still feel the stretch. The underscore key is just really far from home row. Going to be more effort no matter what!
Yeah I imagined you meant this one but I tried it before. Doesn't work. Again the letters, x-axis, label etc are too small when I insert the emf to a two-column doc.
what's the problem?
Often that pops up, can change the language (incorrectly, just because I’m in a country doesn’t mean I speak the language), and takes you away from the page you wanted to the homepage.
You can either use python to obtain the file or code up a new method in matlab to do it directly. Up to you
Assuming there is come `${command}` you use to run the pythod module from the command line and have it return the json file, id thnk theres a decent chance you could just do something like [status,jsonOut] = system('${command}');
Hey /u/Idiot__Engineer So, I *almost* have it working, but theres something not quite right and I cant figure it out. Basically, I have a test setup that tries the `A * B * A.'` operation with various sizes for `A` and `B` and different sparsity levels. Id say 70% of the time I get an identical result (within tolerance of what you would expect based on the machine epsilon). The other 30% of the time, certain values (sometimes all of them, sometimes just a few) are silently incorrect. There is also a memory leak somewhere. Id say theres a good chance these 2 things are inter-related, but I think ive allocated everything that needs it using `mxMalloc` and if I try and call `mxFree` on just about anything running the mex file makes things crash. If you happen to have a moment to take a look at it and see anything that is missing, id be extremely grateful. Side note: it is SOOOO much faster than using the builtin matlab sparse array multiplication. Admittedly, this is in part because with matlab i have to either use dense complex single arrays or sparse complex double arrays and with MKL I can directly use csparse complex singles, and in large part because my new computer has a monster of a cpu :) but still...Im seeing: * An average speedup of ~19x versus using sparse complex doubles (by looking aqt total execution tie in profiler) * An average of ~12x versus using dense complex singles (plus a huge memory savings, that would make the difference much bigger in my "real world" applications). * A speedup of 100-200x for extremely sparse arrays (thing 1 in 10,000 or fewer points have data ). [HERE IS THE C CODE](https://pastebin.com/eMi4jZWx) [HERE IS A WINDOWS MATLAB FILE (*.m) THAT WILL COMPILE IT AND RUN A SUITE OF TEST CASES](https://pastebin.com/WsggBAnW-). Note: this requires Microsoft Visual Studio (default is 2017, though 2013/15 can work also) and Intel Parallel Studio XE 2018. These should be installed in their default locations, and MKL shoul be the version provided by Parellel Studio XE, not a standalone install. [THIS BASH FUNCTION SHOULD COMPILE IT USING GCC](https://pastebin.com/UxCCz6i5). This was designed for an earlier version of the code, and I havent tested it with the version posted above, but it *should* work. Note: there is an option in the function to use a local `gcc` install instead of the system-wide one. Thanks in advance. Feel free to use the function (should it ever actually work right....). It really is dramatically faster. Im actually kind of pissed at TMW for letting a core feature like "sparse matrix multiplication" get so laughably out of date when there are MUCH better libraries available...
Thnx so much for the positivity &amp; help :-) 
That's really helpful!!! Thank you for that
Thnx for the pep talk. Yeah, i feel a lot better after posting this &amp; hearing everyone's responses that they can relate
Yeah! I have n e v e r done programming and haven't had a math class in 7 years. It's good to know that once I am able to pick up on the general situation that's going on I will have a much easier time 
Thank you guys allll so much for responding. Super helpful feedback. Mostly, it's just good to know that I'm not alone, and that it's possible for me to move past the desperation 🐢🐢🐢
Check out www.mathworks.com/help/matlab/http-interface.html
Physicist - I use it to model potential EM scatterer designs to support research/development and otherwise use it as a heavy number cruncher - calculating the results of models based on raw data input. 
They post the positions through the contractors website. Folks like Northrop Grumman or General Dynamics or Raytheon always seem to be hiring because they all continually roll these contracts or 'win' them from someone else.
Matlab is interpreting `zfin` as a double, not as a symbolic expression. Can’t say why without seeing your code. 
Thank you for actually responding as opposed to downvoting. Here, of all places... I gave everything that I had, as I'm just running command line prompts. But here's what it all looks like from the command line: &gt;&gt; sym t ans = t &gt;&gt; z1 = 6*cos(10*pi*t - pi/2); &gt;&gt; z2 = 4*cos(10*pi*t + pi/6); &gt;&gt; z3 = 2*sin(24*pi*t); &gt;&gt; z4 = 8*sin(24*pi*t - pi/2); &gt;&gt; zfin = z1 + z2 + z3 + z4 zfin = -4.5359 &gt;&gt; simplify(zfin) Undefined function 'simplify' for input arguments of type 'double'. Maybe I'm missing a step, or I haven't defined something properly?
I work at MathWorks and have reported this to our usability team. Thanks for the feedback.
No worries! Everyone felt the way you do at some point. You can definitely learn it, just suffer through the initial fog. And you can ask questions here, just try to give sufficient background on the problem, what you have tried, and a narrow question. Happy coding!
Thanks, let me try it out.
Thanks for the advice, let me try it out.
Always bugged me that it's missing an entire continent. 
you are able to create app on matlab
I see the research fields rely heavily on MATLAB.
You can create web app and standalone apps using MATLAB but along with that a production server (if web app) or run time environment has also be attached. Check out this [https://in.mathworks.com/solutions/desktop-web-deployment.html](https://in.mathworks.com/solutions/desktop-web-deployment.html) With Regards http://www.free-thesis.com
Download padcat from the file exchange: https://www.mathworks.com/matlabcentral/fileexchange/22909-padcat-varargin-
Underscore is really far from home row? What? Do you add things in Matlab? The plus symbol is further from home row than underscore is. I don't know about you, but I use plus all the time. 
Thanks so much!! 
Yes but why increase effort unnecessarily? I type variable names a lot more frequently than plus signs, namely in basically every line of code. 
I know right, keeps saying I'm from Sweden when I'm really from Denmark. That shit hurts.
I think there will be an effect, just to answer the question. What I came here to say is that this is easily testable, isn't it? Just insert a print with some string in the sub-script and change the string after it's running. 
Ah true I’ll give it a run and get back to y’all.
of course!
I’m not sure about a regular script, but I have updated parameters in a GUI ‘on the fly’. Maybe [Live Scripts](https://www.mathworks.com/help/matlab/matlab_prog/create-live-scripts.html) could help?
I think that operates differently because the GUI pauses the script to update parameters, similar to drawnow(). 
It looks like it doesn't have an effect at least for my simple case: test1.m: while true test2() pause(); end test2.m (at start): disp('original') % disp('modified') test2.m (changed during pause) % disp('original') disp('modified') It continues to display "original" even after modifying and saving `test2.m` in another MATLAB instance.
Very limited MATLAB experience but on the graphics side "subplottitle" and "xline/yline" look like nice quality of life additions.
+ Thank you for running that! I’ll come back with the results of my scripts as well for another data point.
You could try fminsearch and express it as a set of nonlinear equations. I don’t think MATLAB has a built in symbolic nonlinear equation solver.
Not sure where my original comment went, apologize if it gets posted twice. I am new to both simulink and reddit, so I apologize if i am violating any community rules. If so please let me know or instruct me to where the rules are posted. I am attempting to create a shunt resistor battery balancer circuit. However, this isn't the full design. Trying to build it up piece by piece and currently am attempting to control a gate with V1&gt;V2 to switch on the bleed resistor for B1 and vise versa to drain excess energy through the bleeder and equalize the cells. However, I did not see the expected results and upon applying a current meter, I see that no current is running through either bleeder circuit (regardless of whether the switch is active of not). Any help would be GREATLY appreciated.
Thanks for the link, I'll try to understand how it works. Is there any other way that doesn't involve re-using code? Copyright is an issue that I have to keep in mind with my project 
&gt; Simulink - Buses: [...] retain nonvirtual buses within virtual buses Awesome! I wonder if this means I can also places a vector of non-virtual buses into a virtual bus. &gt; Simulink - Variable Name Autocomplete: Improve speed and accuracy of editing block parameters by selecting from a list of suggested variable names Finally. This is a common sense feature for the command window. I hope it works well in the Simulink environment with huge data dictionaries/workspaces. 
I like to do everything in Simulink because it automatically can compare vectors of different lengths and resample them somehow. You could write a Live Script that reads in all your data into the workspace, call a Simulink model that does all your data heavy lifting and then write it back to the workspace: https://www.mathworks.com/help/simulink/ug/using-the-sim-command.html
You could subtract all three equations from each other so you have a single line with rhs=0, then using a series of for-loops, grid search through all possible values for your three coefficients to get the lowest possible absolute value for your LHS. It might not get you the exact solution, but it will get you very close.
This one is a pretty insideous bug waiting to happen. Matlab will cache code that it's previously opened, but you have no way to guarantee it. To get the new code you can run 'rehash' or 'clear [filename]'. You shouldn't really rely on Matlab to cache the result though. One day it'll turn into a hard-to-find bug.
+Hey I figured it out. It wasnt a bug or anything. A few lines up(not shown in my pic) I had written L_lr=L_lr+L_rsc/n^2 My intention was to replace the L_lr with this. But instead Matlab took it as L_lr being equal to it. I shouldve used "subs". I used subs now and everything works perfectly :)
Yup the subplottitle is really helpful. I still remember last time I have to rely on the suptitle in bioinformatics toolbox to achieve this
+ Fortunately I'm not relying on this method, I just needed results last night and when running 5+ hour scripts I can get lazy with waiting for multiple sets of results. Interesting to hear about rehash and the clearing of a filename.
Not too sure what you mean by connecting to servers. That said, if you are completely new to doing work on remote servers, learn to use the `ssh` protocol (it is the most common). Based on your description, it is also likely that you might have a cluster that crunches the numbers for whatever simulations you perform. Matlab has its own scheduler, but there are many of them out there (I personally use slurm). Given that you don't have a lot of information on what you will be specifically working with, I wouldn't worry about learning how to connect to servers and configuring job schedulers (they are mostly designed for you not to worry about them). Learning to use Matlab however is something I can help you with. First of all, its expensive, so make sure you get a copy from the University (most of them purchase Matlab licenses) for free if you can. The Matlab application is (among other things) an IDE (Integrated Development Environment) which means you should be able to do just about everything from that one application (editor, debugging, documentation). The language itself and syntax is extremely beginner friendly and I highly recommend learning using the `doc &lt;some-confusing-function-or-object&gt;` functionality to better understand the language. Take on some small but easy programming tasks and implement them in Matlab. TL;DR * You might to find out a bit more about how you will utilize servers in your research. That said, I wouldn't worry too much about learning to use them. * Try to get Matlab for free from the University. * Matlab is a beginner friendly language with excellent documentation (`doc` is a lifesaver). Start by learning the syntax (find small but easy programming tasks and create a Matlab script perform it). ASIDE: Which university are you from? (We have a large shake table that the civil students like to drool over too)
Dude thank you so much for the indepth and extensive help. I'm at San Francisco State.
to me it seems like first you'd want to try to solve the general form of the differential equation and substitute in later. In particular, I'd try to combine as many parameters as I could from the differential equation to see if I could solve it. For example, set s0=1, b=1, and you end up with y'=m/(1+s1 exp(-k x))+w y. Throw that at wolfram alpha and you get....well it's ugly to say the least. From there you can try to curve fit but tbh I don't know how you'll be able to.
Pretty sure all posts here start at 0 karma. As for your issue, a couple of things to try: 1. Initialize your variables with `syms` 2. Declare them as functions of `t` 3. (bonus) You can use 4 spaces before text on a blank line to display as code here. So, try something like this: syms t z1(t) z2(t) z3(t) z4(t) zfin(t) z1 = 6*cos(10*pi*t - pi/2); z2 = 4*cos(10*pi*t + pi/6); z3 = 2*sin(24*pi*t); z4 = 8*sin(24*pi*t - pi/2); zfin = z1 + z2 + z3 + z4; simplify(zfin) Also, the more you do with MATLAB, the better off you are doing it with scripts. That way you don't have to retype (or press up, up, up, up... etc.) every time you want to try something again or modify it just a little. Hope that helps! PS: Thanks for alerting me to the fact that the most recent W10 Creator's update borked MATLAB symbolic toolbox for me!
I work for a hospital and university and both have computing clusters that can run MATLAB jobs in parallel. They are plain linux nodes with MATLAB installs and a queuing system. MathWorks also offers [cloud solutions](https://nl.mathworks.com/products/parallel-computing/parallel-computing-on-the-cloud.html), but I don't know anything about those.
&gt; L_lr=L_lr+L_rsc/n^2 Yep...this would do it. Glad you figured it out. A couple other quick suggestions: 1. If you routinely do stuff like this that legitimately requires symbolic math rather than numerical computation, Id strongly recommend picking up a copy of mathematics. Mathematica has its fair share of annoying quirks, but on the whole is far superior to Matlab when it comes to symbolic math. 2. When you are substituting `a + b = c + d`, doing something along the lines of `simplify(subs(foo,'a','c+d-b'))` tends to work better than `subs(foo,'a+b','c+d')`. Perhaps Matlab has gotten smarter about this, since it seems to not matter for trivially simple use cases, but in more advanced use cases I imagine there will be times that Matlab wont recognize `a+b` as existing in the current function, but is able to recognize and substitute either `a` or `b` and then simplify out the other one after the substitution. 
Can you remote into the MATLAB PC in question?
“Starting the application should be faster.” 
Looks good to me, you are missing the K factor but since it is equal 1 then it makes no difference.
It looks like what you've done is thresholding the signal in the frequency domain to remove all elements of the signal below a certain power. That's fine- it depends on what you're looking for in a signal. In my field, the raw signal isn't contained over a single discrete peak, but rather spread out over a certain bandwidth, and the noise is over a similar region. Therefore, when we use filters, we apply them the traditional way, convolving a boxcar in the frequency domain with the amplitude spectrum. If you believe your signal corresponds to those three sinusoids at 200, 25, and 3 Hz (approximately), then you've done your filtering the right way- good job!
Did you just upload a photo of a photo of your screen? That's amazing. The filtering looks OK, is the peak frequencies plausible? If so you probably did correctly. 
The only thing I can maybe think of without getting in to the math is, have you created all the necessary symbolic variables?
Thank you for helping out! The code that you see is what we my group and I think should work. We’re tried different variations such as adding ‘a’ as a symbolic variable but it doesn’t end up changing anything or it just adds more error outputs. 
Thanks for the response! I just finished my second year as an ee and only had one signals class. I'm an intern and I'm trying to prepare for an upcoming project where we are trying to analyze vibrations of a gearbox so we can detect faults. I'd assume keeping the spikes are good cause it might be the gear frequencies?? Also do you have more resources on the boxcar method I haven't heard of it
Yeah I did, it was the lazy way to do it. 
Instead of asking for validation, maybe a better question would be how to validate the results of your own work? How would you confirm that your model works accurately?
I think you should define a as variable 
I'm not too familiar with the symbolic toolbox, so I don't know exactly how to troubleshoot things, but I think the problem is stemming from the singularity at the lower bound. When x=1, g(x) goes to infinity. Even if the integral actually converges, the "int" function won't (*I think*). I tried typing up your code, but used a lower integration bound of 1.1, and then 1.01, and then 1.001,... and found that in those cases Matlab was able to solve for *a*, and that the value it was finding seemed to be converging. This doesn't actually give you a solution to your problem, but hopefully it'll give you some clues to get you going in NBA the right directions. 
This helps a lot! I’ll send what you told me to my group and we’ll try to mess around with the code again to replicate what you did and go from there. Thank you so much! 
We’ve defined ‘a’ as a variable multiple times in our different variations of the code, but my other group member pointed out that ‘a’ is just a constant that we are solving for so it shouldn’t be a symbolic variable. But, we’ll keep messing around and trying different things. Thanks for the advice! 
I dont think you can change it programatically. As of 2018a you can change *some* settings programatically using s = settings; s.matlab.&lt;catagory&gt;.&lt;setting&gt; = NewSettingValue; But max array size isnt one that can seemingly be accessed from there. The default is 100%, so if no one changed it then that is what it is. Realistically, unless someone turned it down to a redicuously low #, you will be running deep into swap space before you hit the limit for the "max array size". This is the limit for 1 single array, but matlab will happily generate 1000 arrays, each of which are 99% of the limit, so long as none are over the limit. You can check the setting if you connect to the machine using `ssh -Y` and have an X server running. You may need to run export "DISPLAY=localhost:$DISPLAY" or export "DISPLAY=localhost:0.0" or something similar. Pro tip: if you connect with `ssh -Y` and start matlab with the `-nodisplay` flag, you will get the terminal version of Matlab but still be able to generate figures and open things that require X11. I find this is a good tradeoff between being able to use X11 and not having it slow down your entire session unless you are actually using it.
Boxcar is a name for just taking a moving window average of the signal. As in: at each point, take the average of n points on either side. It can be applied by convolving an array of ones with your original time series. You have to normalize the array of ones like: boxcar = ones(n,1)/sum(ones(n,1)).
Work on making your x- and y- axes scaled the same for before/after filtering.
Any real-world data that you collect will not be as clean as the signal you've constructed here (3 pure tones plus white noise). When you show the old-timers that you work with the data from a vibe test, just show them a plot of the raw unfiltered Fourier transform and let them argue about what's causing all the various peaks in the frequency domain.
when will the final version be out? approx?
these accelerometer data are they synthetic or real?
Digging out your phone is lazier than file-save as?
Could try to define is as a=[zeros] or something like that? 
It's synthetic, wanted to see if this was a good process before using real data
With real data those frequency peaks are not going to be very clear, but your way to filter the signal is good. time ago I did something similar.
windows key, type "snipping", press enter.
FYI, it doesn't really matter here but you'd be a bit better off making two changes: 1. As of R2014b, you can directly edit ydata with plt.YData = ... 2. pre-computing your sin(x+i*del/total_frames) and using it in a single vectorized call, e.g.: ... y = sin(x + (1:total_frames).*del./total_frames)); for i = 1:total_frames plt.YData = y(i); drawnow(); end
Deceptive title and basically an advert. This is a $500 third party toolbox.
&gt; My assumption is that at run-time MATLAB "compiles" everything such that any changes made after that point make no effect but I am not certain. As I understand it, this is correct, but not the whole story. MATLAB uses a "just-in-time" (JIT) compiler, which (as the name suggests) compiles code on the fly as needed. It isnt compiled in the same way that, say, C/C==/fortran code is (where the entire code is compiled before runtime). This means: 1. You could have a function that is already running but not fully compiled, and as such changing a value might still have an effect. I could imagine it resulting is different parts of the code using different values for the same variable depending on if the code was compiled before of after the variable value changed 2. Theres no guarantee that, just because code has already been compiled, it wont get re-compiled later, even during the same run. If you have a code segment that only gets run evextremely infrequently and the rest of the code is long and demanding, I could imagine MATLAB removing the compiled code from memory. Maybe it puts it in swap, maybe it decided that recompiling later is better than spending time dealing with swap space. I believe you could also force this to happen by doing something like save allVarsTemp.mat -v7.3 clear all load allVarsTemp.mat delete allVarsTemp.mat *usually* changing values after the function has started running wont matter, but I have absolutely encountered a few experiences where changing the variable did effect an already-running function
&gt; This one is a pretty insideous bug waiting to happen. This has gotten me a few times. Not on anything really important, but there have been a few times where I would quit a function, change a value, re-run the function from the beginning, and it would still use the cached function instead of the newly saved one.
It is much more complicated and uncertain than that. There are multiple types of compiling and multiple types of just-in-time compiling. The one used by compiled languages like C and Fortran is compiling to machine code. Machine code is instructions that directly tell the processor what to do. But this requires knowing exactly what the data you will be working with looks like so you know what sort of low-level operations the computer needs to do, how to allocate memory and CPU cache, etc. For highly dynamic languages this sort of stuff isn't known until that part of the code is actually read, so it is impossible to compile to machine code in a general sense. The one used by most highly dynamic languages like MATLAB is called bytecode compiling. It takes the text-based script and converts it to bytes representing general high-level operations. This compiled code is not run directly by the computer, instead the interpeter reads through the sequence and figures out what to do based on the current situation. This makes it much slower than machine code. As far as I have been able to find there is no official statement on how and even if MATLAB uses bytecode compiling, but the existence and structure of p-files strongly suggests that MATLAB is able to generate bytecode, and if it has access to bytecode this is a better approach than using the text files directly. Just-in-time compiling is a type of machine code compiling. Although MATLAB doesn't know ahead of time what sort of data types it will encounter, it does get that information when the program is run. And often a certain bit of code will do the same sorts of operations on the same type of data most of the time. So if you figure out what sort of operations are being done you can get machine code for that particular case. One way to do this is to create a new set of machine code for every combination of value types it encounters. This gives high-speed code for every situation, but compiling to machine code is slow compared to compiling to byte code and requires keeping track of every combination encountered. If I recall correctly, this is what Julia does. The other way is to wait until the code hits a particular slow area that it runs into a lot and that can be sped up with machine code. This has the advantage that only areas of the code that actually need it will be compiled, but has some spin-up time where the slow code paths need to be run for a while to be identified. This is called a tracing JIT and is what pypy uses. The problem is that, as far as I know, MATLAB's JIT is completely undocumented. I have not been able to find any information on what sort of JIT it uses, what situations it compiled code under, what parts of the code are optimized, or really anything besides the occasional hint from changelogs saying particular cases have been optimized in the JIT.
Each year the "a" release comes out in March, and the "b" release comes out in September.
How about Heuristic technique to find the "likely" values of the variables?
thanks didnt know.
Yes
The reason I set those to 1 was that they are configurable up to a scale factor without changing anything with the other variables. They are "free" parameters
I don't have access to Matlab right now, but if you snip the first and last brackets you could split up the vectors via regexp and work with the cell-array that returns. If there are definitely no security concerns you could also just eval(['myvector = ' tMHA])...
Maube you could use find to find the position of each semicolumn and then use those to extract the data with str2num
Besides all the str2num or scanf options, if your string is formated like that, just as a regular Matlab input, simply using eval could be a quick way (albeit not ideal) of making it work. Do it like eval(['A = ' yourString]); There are some downsides of using eval, but depending on what you are doing, this could be a quick workaround.
I think the code below does what you want! The stars of the show are ["strsplit"](https://www.mathworks.com/help/matlab/ref/strsplit.html) and logical indexing for the remaining strings Hope it helps! s = '[[0 0 0 0 0 0 0];[0 0 0 0 0 0 0]; [0 0 0 0 0 0 0];]'; %dummy data sp = strsplit(s,';'); %strsplit breaks up the string 's' into cells everywhere there is a ';' for ii = 1:length(sp) %you could probably avoid doing this in a loop using cellfun or something clever like that deleteThese = (sp{ii} == '[' | sp{ii} == ']'); %a vector of bools showing 'true' everywhere this string is a '[' or a ']' sp{ii}(deleteThese) = []; %delete the parts of the string implicated by the bool if ~isempty(sp{ii}) num(ii,:) = str2num(sp{ii}); %convert the surviving strings to numbers. You'd probably want to preallocate this guy if you're going to be dealing with large numbers of datums end end 
Very interesting...thanks for the info. I knew the situation was more complicated than my (intentionally) simple explanation directly implied, but I didnt know a lot of the specifics of JIT compiling that you mention. I had sort of been assuming that things worked like an "optimized version of the Julia-like JIT compiling, combined with a little bit of tracing JIT". i.e., machine code is always compiled, but at different levels of generality, where * values might be known (hardcoded), a list of knows (loop), or unknown * data class might be known or unknown * array size might be known, have known # dimension but unknown sizes, or be completely unknown. Unknown sizes might have an upper bound or be completely unbounded. My thought was that MATLAB did some preliminary analysis on the code to make a best guess of how general to make the machine code corresponding to each code segment, and then optimized that on the fly (since the more general machine code will be slower but will require less compiling, so there is an optimal tradeoff that is situation dependent) note: Im not sure if a few of the more general ones, in particular unknown data class and unknown number of array dimensions, are possible, in terms of generating generalized machine code, but these seems like they could probably be determined at run time rather than on the fly. I know some of these can cases can be compiled to machine code though based on the abilities of matlab coder, which (for example) allows for fixed array sizes, upper bounds on array size, or unbounded sizes. I believe coder requires the number of dimensions to be fixed though. I hadnt considered the possibility that it wasnt compiling machine code at all and was using an interpreter. Out of curiosity, how does this work? I assume machine code is involved somewhere, since Im pretty sure that is the only way to get a cpu to do anything. Does the interpreter have pre-compiled machine code "libraries" corresponding to higher level functions that are designed for maximum generality (often resulting in being not optimized for speed), and then the interpreter assigns one of these to a particular segment of code rather than compiling? (Presumably it would still compile if there was an unusual case in a code segment that it couldn't match)
 eval(['A = ' yourString],';'); This would be my recommendation as well. If the number of values within each set of brackets isnt constant though, you could instead do eval(['A = {',yourString(2:end-1),'};']);
&gt;This is the simplest answer and will definitely work. You don't even need to put the variable assignment inside the eval function, you can just do &gt; &gt;A = eval(yourString)
As an FYI: this is a simpler way to implement what you propose: eval(['sp = {',s(2:end-2),'};']); NOTE: The `(2:end-2)` needs to be modified to whatever is required to make sure the string starts with `[` (not `[[`) and ends with `]` (not `]]` or `];` or `];]`). `(2:end-2)` works for your example data, but for OP's example data it would be `(2:end-1)`. . Side Note Parsing strings into text is....tricky. What you propose works here, but say you replace one of the groups with `[someArray([1:7])]`....then what? The best solution ive found (that I think will always work, but I still would hesitate using in any super important applications) is: 1. Starting from the leftmost character in the string (`str(1)`), go character by character and record "nesting depth" 2. "nesting depth" starts at 0, gets `+1` anytime you hit a `(`, `{`, or `[`, and gets `-1` anytime you hit a `)`, `}`, or `]`. 3. Whenever you hit a `,` or `;`, check the nesting depth. If you are at a nesting depth of 0 it means this represents a legit boundary between groups. Otherwise, it is part of one of the arguments within a group. 4. Depending on your needs, recursively apply this on each group until things cant be split up any more, or call have matlab parse it for you by calling `groupBoundary=[0,groupBoundary,numel(str)+1];` followed by `eval(str(groupBoundary(nn)+1:groupBoundary(nn+1)-1));`, where `nn` is the index of the group you want to access. The 1st command sets the boundaries scorrectly, so that `groupBoundary(1)+1 == 1` and `groupBoundary(end)-1 = numel(str)`. 
I suspect this will work, but Im not positive as Ive never actually tried. One thing to note though: it definitely wont work if you make any OS-specific system calls as a part of the code. For example, if you were getting the total and free system memory using something like [~,memInfo] = system('cat /proc/meminfo | grep ''Mem'' | sed -E s/''^[^0-9]*([0-9]*).*$''/''\1''/'); memInfo = str2num(memInfo) It wouldnt work since (not counting WSL) those system calls dont exist on windows. The same would apply to any Matlab commands that make system calls like this for ypu. I chose getting available memory because windows matlab has a function (`memory`) that gets this info for you, but that functiion only works on windows. I get around this using if ispc &lt;some pc-specific command&gt; elseif ifmac &lt;some macOS specific command&gt; elseif islunix &lt; some unix/linux/gnu specfic coimmand&gt; else warning('Unknown OS') end Note that Mac's return `true` for both `ismac` and `isunix`
I work with datasets of a similar size, and have a few suggestions that might help First, I would avoid using cloud based computing. Looking at [amazons EC2 pricing](https://aws.amazon.com/ec2/pricing/on-demand/), a system with 48 vCPU's (which might be 24 cores + hyperthreading, im not sure), + 173 GB memory + dual SSD's for data storage will cost you roughly $2.70 per hour, or $65 / day, or just under $24k / year (admittedly if you are willing to committ to a year you get a discount, maybe 1/3 off, but that still isnt cheap). CVloud coimputing is (imo) good for 2 use cases: 1. Occasional burst usage: you have the occasional need for "burst" capacity, but most of the tie you need much less power, and it doesnt make sense to build a high power system that only uses a fraction of its potential 99% of the time, or 2. temporary full time usage: you legitimately cant afford the capital to build a sufficiently powerful system, and whatever computing in being done will make you enough money to cover the amazon server costs + more so that you can build up the needed capital. If you are routinely in need of l"high power / high memory computing" that will be in use a large percent of the time, the cost of cloud computing will very quickly outweight the cost of locally setting things up.I imagine this is especially true for those in academia, since most of the costs other than the upfront cost (electricity, tech support) are (probably?) covered by the institution (I would think this is the case anyhow,but am not 100% sure). Some tips for matlab usage: 1. In general, I feel it is best to "explicitly parallelize between different NUMA nodes, but to use functions with built-in parallelization (matrix operations, fft's, convolution, etc) for everything that is run on a particular NUMA node. In general, I found performance from using multiple NUMA nodes at the same time in things like matrix operations to be barely (if at all) better than a single NUMA node's performance. I usually did this by starting up a given instance using `numactl`. This requires implementing some system to manage different instances, but also bypasses the 12-worker limit of the parallel computing toolbox. It also tends to be much more memory efficient, since there is no "sending a copy of the data to each worker" that can happen with explicit parallelization if you arent careful about variable splicing. * Note: The documentation for the parallel computing toolbox says "up to 1024 cores", but fails to mention that for anything over 12 you need a distributed computing license, which scales in cost based on how many workers you are using. IDK exactly how much the high end prices are. [this](http://inside.mines.edu/UserFiles/File/ccit/software/Matlab%20price%20list.pdf) (see page 3) is literally the only reference I could find, that shows (in 2013, at the colorado school of mines) that a 400-worker license was $23,500. 2. Take the time to create a fast I/O function for your specific data type if it doesnt already exist. I deal with SEG-Y data, and the best data loading tool (part of the open-source SeisLab 3.02) was loading data (plus implementing an IBM float --&gt; ieee float conversion) at 30-50 MB/s. It took me over a year of on-and-off work, and it still isnt 100% done, but i have an I/O function that runs 4-5x for loading+converting the data. * something else that is still a work in progress, but that I thik will help a lot, is asyncronous data loading / writing. `fread` and `fwrite` run pretty fast in Matlab, but are inherently single threaded, and so if you have to wait for them you are not using a large percent of the comopute potential of the system especially true for xeon based systems like the one you are probably using to process terabyte- sized data). The idea is that, assuming you can split data into "blocks" and dont need all 5 terabytes for every computation (if you do then good luck with that...) then you can siumultaniously dedicate 1 thread to loading the next block to be processed, one thread to writing the data that finished being processed to disk, and all the rest working on the actual processing. If you are careful, you can probably get away with this requiring 2x the raw data storage (+ whatever is needed to actually run computations without going into swap): one for the data being processed, and one for the combined reading/writing, where one instance writes data and the other then overwrites those exact memory addresses with new data (youll have to be very careful with syncing these up). 3. dont overdue vectorization. Vectorizing something into a matrix operation is (almost) always good, since BLAS is rather good at efficient memory management. Vectorizing with `bsxfun`, on the other hand, uses up a lot of memory, and you will be far better breaking up the operations a little bit then trying to run a `bsxfun` operation on a huge segment of data. Vectorize as much as you can without causing operations to dip into swap space, but as soon as you pass that point your speed will almost immediately slow to a crawl. Hopefully these will be somewhat useful. PS using tall arrays and data stores is another possibility. These probably work quite well, but tie you down to Matlab. If you are using matlab as an environment to test and work out the bugs for something, and perhaps use it in practice a few times, but ultimately the code may be redone in another language that offers better performance and portability, then I would avoid these.
These look like nice additions(some more than others), but im a bit dissapointed to see that, yet again, "new features" seems to greatly outweight "improvements to performance and core functionality". A few of the features do, admittedly, look nice, but personally I'd have traded damn near every one for "sparse matrix operations than are multi-threaded and that support more than just doubles". Thats just me though.
for doing part 1, i'd suggest using "unique" to get the Particle IDs from your data set, then do a for loop over the unique IDs that first pulls the rows of data for the current ID, sorts those rows according to time, then plotting it. before the plot you can do your Trajectory Length check. for part 2, yes. See the below code as a start: uniqueIDs = unique(data(:,3)); % animation loop for endTime = 10:100 cla hold on for k = 1:numUniqueIDs currentIdRows = data(:,3) == uniqueIDs(k); currentX = data(currentIdRows,1); currentY = data(currentIdRows,2); % assuming the rows are sorted by time already plot(currentX(1:endTime), currentY(1:endTime),'LineColor', currentColor) end drawnow end One slightly tricky part is determining the color to use. It can be a 3x1 vector of RGB values (either 0-1 doubles or 0-255 integers); also, check that i have the right property for setting the line color. this animation is going to "build up" the lines, but you could instead use a moving window: lookBackTime = 10 .... plot(currentX(endTime-lookBackTime:endTime), currentY(endTime-lookBackTime:endTime),'LineColor', currentColor) not sure what you're trying to do for 3.
I don't have the capability to test any of this, but I looked over your code and I do see some memory leaks. I don't think they're related to the strange correctness issues you're seeing though. My suspicion would be that the issue is a bug in your translation between Matlab's JC array format and what MKL expects, mainly because that's where the complexity is in this function. I'm not sure if that's likely, because you'd expect it to break pretty badly for all cases. I didn't fully wrap my head around the sparse representations because I got bored first, but is it possible that you have it correct for some special case such as all columns have no more than 1 nonzero entry? How far off of machine epsilon are the values? As for your memory leaks, you leak all of the arrays you allocate in lines 116-125. The assignments in the `if` block starting at line 140 **don't** move data from the location that `pntrXN` points to to the location that `pntrXNm` points to, they just make `pntrXNm` point to the same location as `pntrXN`. The logic is the same for `rowIndNm`, `A`, and `B`. An easy rule is that if you `XXalloc` something and don`t `free` it, it's a leak. I'm not 100% sure pointer layout is correct the way you're assigning them, but you can just get rid of all of these allocations to fix the (or, at least, some of the) memory leak and implement the same thing.
I want to use the trajectory plot in step 1 above, and colorize the line based off velocity. Slowest = blue, fastest = red. I was not sure if that is the best way to play velocities along trajectories. There are so many overlapping paths that I dont know how to make use of this data to the best of my ability. 
if youre using real-time UDP with SLRT you need to use some kind of ethernet card. you can either use a pci(-express) based one, or a usb one, doc here: https://www.mathworks.com/help/xpc/gs/usb-to-ethernet-adapter-setup.html in this use case I recommend using usb-to-ethernet
Have you tried writing expanding this out to simplify the equations? You have 3 equations and 3 unknowns. I'm not saying it can be done analytically but it can be simplified by the looks of it. Make use of trig identities as well. Substitute these large numbers with constants for now as well to keep it clean. I know this is posted in matlab, but is this a problem specifically designed to be solved using Matlab? Homework?
Hi everyone. I figured it out, and I am flabbergasted and embarrassed how easy it was. There are two strategies I used. Again, this is where I started: The first strategy used regexp to extract all spaces, semi-colons, and digits, and then a num2str to turn it into a manageable matrix. gains = zeros(42,3); rows = size(gains,2); tMHA = '['; for i = 1:size(gains,1) tMHA = [tMHA '[' num2str(gains(i,1:rows)) '];']; end tMHA = [tMHA(1:end-1) ']']; tMHA will consist of values sent to an external application. In the future, a separate program will be generate that zeroes in the tMHA. string template, and I need to convert into a matrix before converting it back to the tMHA format. The first strategy to get from tMHA &gt; matrix was using regexp to extract all spaces, semi-colons, and digits, and then a num2str to turn it into a manageable matrix. temp=tMHA(regexp(tMHA,'[\d\s;]')); n_gains = str2num(temp); The second strategy was to play dumb and str2num the tMHA. Turns out str2num respects the role of semi-colons and brackets, and delivers the matrix I want perfectly formatted... n_gains = str2num(tMHA); So for all of you who want the sanity check, run this command and see what you get... ? = gains == n_gains Thanks for all your help. Sometimes us MATLABers make the problem out to be more complicated than it is. At least I learned how to use regexp for the first time! Always adding to our language!
Try using this. % time series data with some points the same and some not. All cells are column vectors t={[1:30]',[sort(randn(1,20))*25]',[pi:pi/2:10*pi]',[2:2:43]',[1:1.5:25]'}; % random data (also cell array) of same size as t. Here each t value gets 1 x value. x=cell(size(t)); for nn=1:numel(x) x{nn}=randn(size(t{nn})); end % combine times and get unique points and corresponding indicies [tAll,~,tInd]=unique(cat(1,t{:})); % get cutoffs cutoffs=cellfun(@numel,t); cutoffs=cumsum(cutoffs); cutoffs=[[1,cutoffs(1:end-1)+1];[cutoffs]]; % preallocate output arrays for the times and the data tCombined=zeros(numel(tAll),numel(t)); xCombined=zeros(numel(tAll),numel(t)); % assign times and data values to the appropriate indices for nn=1:numel(t) tCombined(tInd(cutoffs(1,nn):cutoffs(2,nn)),nn)=t{nn}; xCombined(tInd(cutoffs(1,nn):cutoffs(2,nn)),nn)=x{nn}; end That should generate the appropriately ordered arrays for the times and the data. Ill let you figure out the actual excel write command, since I dont know off the top of my head, but it should be pretty straightforward.
Thanks for the suggestion. It was not designed for matlab and not homework. I sort of solved it though. Thanks again 
Awesome!!! 
Regular expressions: https://stackoverflow.com/questions/25156483/sort-string-according-to-first-characters-matlab
Thanks! I actually figured out a separate way by going back to my original data, dropping the first letter, then sorting from there. I can post the actual script section, if you're interested. Pseudo code: DDDD={D1, D2,D10...}; for i=1:length(DDDD) Temp=DDDD{i}; DDDD_NoLetters{i}=Temp(2:end); end 
AKiss20 makes a good point - best way to share photos would be File -&gt; Save As, and change the file type to PNG - that should provide a good image!
Just ignoring the first letter won't actually help--the cells are still populated by strings, which are sorted lexically rather than numerically. You can use a regex to extract the numbers (e.g., `regexp(DDD, '\d+$')`, 'match'), then use `str2double` on the resulting cellstr; then `sort`, capturing the second return value to sort your original array. 
 &gt;&gt; DDD={'D1','D2','D10','D3','D11'}; &gt;&gt; temp = extractAfter(DDD,1); &gt;&gt; [~,idx] = sort(double(string(temp))); &gt;&gt; DDD(idx) ans = 1×5 cell array {'D1'} {'D2'} {'D3'} {'D10'} {'D11'}
I vaguely remember only being able to compile applications for the OS you're running, which would prevent this. This may just be for OSX, and I couldn't find it with a quick google search so it's possible this isn't a real requirement.
though image registration is not meant for different sized images yet using imresize don't add noises but reduces the image quality. the simplest way is to resize the 1200X1600 pixels into 300X334. Padding also will not give the good results as key points in both will be different. With Regards http://www.free-thesis.com
Try padding in Fourier space. Take the `fft` of the small image, `fftshift` to center the zero frequency, pad to the size you want, then `ifft` to get back an image. You’ll need an `ifftshift` in there somewhere, if I recall... I can check later if you want
MATLAB padding function is also based on ifftshift and have the option either to process globally or local
Just as a clarification, are the objects in the two images at different scales, or are there just less pixels in one image than the other but the objects in both images are at common scale? If the first case, you can either resize prior to calling imregtform, or you can pass the knowledge you have of scale as an initial condition for the initial transformation that will be optimized. This is important when scale differences are large, it can be particularly hard for registration algorithms to resolve large differences in scale. Imregtform is using an optimization based technique where the tform is being optimized, resulting in a new resampled estimate of the moving image to compute the similarity metric each iteration. So, your concern about imresize isn’t something to worry about because a resampled estimate of moving with the current tform is already being computed each iteration.
I dont quite clearly understand your first question. So the 1200×1600 is an image of the object taken from a camera. The 300×334 image is a simulated image (dicom of the same object) which has the physical pixel size of 1.4970 mm in both x and y. So i guess they're at different scales? 
Yes, different scales.
Alright so I'll try your method. I was just worried that the aspect ratio is not the same for the images so imresize might give me weird results?
Use the InitialTransformation option. Specify a non-homogeneous scale transformation.
+ alright I'm gonna try this out and let you know. Thanks a lot!!! 
hey can I dm you? 
Remove the two brackets on the end using trim(). Then use eval() to render the remaining string into a matrix. I think that would work, unless those brackets are going to change the matrix structure... try and see?
If you need the opposite of logspace with respect to index you can simply reverse the numbers you choose eg instead of logspace(1,10), use logspace(10,1)
Sure.
You can use `linspace` then take the log of your answers: x = linspace(1,100, 100); y = log(x);
1/logspace() would give you a vector biased towards larger numbers, and could be multiplied by a scalar to produce the desired vector.
Hey, howtocleanyourpots thank you for your help. Your tip solved my problem. 
You must define an objective function, I.e a function that gives you a value indicative of similarity. The simplest would be to take the difference at each sample, square it then sum it. You’ll get two values, one will be smaller and that will be the closest fit. Determining what closest means is the hard part.
hi really thanks for the input. now i have an idea how to do it. =)
Good luck :) [This wikipedia page may help](https://en.wikipedia.org/wiki/Residual_sum_of_squares) or just the term sum square error.
You can simply define a 5D results matrix (presuming your function is scalar) and then iterate through 5 vectors of parameter values using 5 nested for loops. Your real problem is how the heck you are going to visualise a 5D matrix. It may be easier to break it down into pairs of parameters and plot as a set of surfaces, or fix parameters in one place and sweep one at a time. Another solution would be to scatter plot the results with respect to one parameter sweep akin to some form of sensitivity analysis.
You need to do spline interpolation for this purpose. [https://in.mathworks.com/help/matlab/ref/spline.html](https://in.mathworks.com/help/matlab/ref/spline.html) With Regards htttp://free-thesis.com
Maybe, I'm not sure; but really Matlab is meant for numerical calculations. For symbolic calculations, Mathematica is much better.
Not sure if it is called a formula. Anyway, unless you have 2 variables and 1 response, where you can get a f(x,y), I would say there is better software to accomplish this.
Your question doesn't really make sense. Do you need to fit an equation to your data? 
Decide on a model BEFORE fitting data. That is, use your domain knowledge to think about how the variables you've measured will interact Alternatively, build a neural network.
Lol fitting is one of the things Matlab is very good at. 
You can fit parameters of an equation to your data, but you cannot have the data tell you what equation to fit. This is not a Matlab limitation, this is a fundamental mathematical fact. You must have some reason to expect your data to follow a particular functional form for a fit to have any meaning. 
While that's true, there are general function approximators that can fit any data (neural networks for example).
I wouldn't really call that fitting in the same sense. A fit gives you fitted parameters with meaningful values. A NN may be able to interpolate or predict new values, but the network coefficients don't have any meaning, really. (well to be fair interpretability is an open topic in machine learning research right now, but this is still true in practical terms.) If all you're after is interpolation or smoothing, you could just as easily use a spline interpolation or a polynomial fit. 
Here's a way. uses a meshgrid and a bunch of points to visualise your object. You can use isosurface to improve the visualisation if you really want. d = 0.01; [X,Y,Z] = meshgrid(-1:d:1,-1:d:1,-1:d:1); M = zeros(size(X)); M(rssq([X(:),Y(:)],2)&lt;1 &amp; rssq([Y(:),Z(:)],2)&lt;1 &amp; rssq([Z(:),X(:)],2)&lt;1) = 1 ; figure(1) plot3(X(M(:)==1),Y(M(:)==1),Z(M(:)==1),'.') ; axis equal Got to love matlab
I used it to visualize simulations of missile engagement scenarios back when I worked in industry. Now I teach it! Lots of people I know use it for the curve fitting and plotting capabilities. I’ve also seen entire simulations created in Simulink. MATLAB is awesome! 
Yes 
As the other have said you cannot just magically get the equation for whatever you are looking at by putting it in matlab. You need to have an idea of what variables it depends on and what kind of dependence you are talking about. You can start by looking at the `fit` command. 
One thing to keep in mind is that the MATLAB JIT is a new addition. MATLAB worked just fine for decades without a JIT, and without needed a separate compilation step. So it must have been doing something else at some point. I doubt they would just throw that away, since JIT compilers don't always make things faster. Compiling is slow, so if the compiling is slower than the task it can actually hurt performance. Also keep in mind that Julia was largely built around its JIT. It is much harder to take an existing language, well-established language and add a JIT to it. The more flexible the language, the harder it is. &gt; I had sort of been assuming that things worked like an "optimized version of the Julia-like JIT compiling, combined with a little bit of tracing JIT". i.e., machine code is always compiled, but at different levels of generality We can be pretty confident this is not the case simply because certain code paths, in particular certain sorts of loops, are still really slow in MATLAB, while a JIT should make them much faster. &gt; My thought was that MATLAB did some preliminary analysis on the code to make a best guess of how general to make the machine code corresponding to each code segment, and then optimized that on the fly That is not really how machine code works. It convert a block of code to specific, low-level instructions that the CPU executes on blocks of memeroy. These instructions are extremely low-level compared to the sorts of things MATLAB has. You can't "guess" with machine code, either the instruction has the right result, the wrong result, or it fails outright. &gt; Im not sure if a few of the more general ones, in particular unknown data class and unknown number of array dimensions, are possible, in terms of generating generalized machine code, but these seems like they could probably be determined at run time rather than on the fly. That is exactly what an interpreter does. It looks at the current combination of values and what you want to do with them at run-time and determines what machine code to execute to carry out that task. The problem is that this is much, much, much slower than doing it at compile-time, for a variety of reasons. &gt; the interpreter have pre-compiled machine code "libraries" corresponding to higher level functions that are designed for maximum generality Yes, exactly. MATLAB, in particular, uses a bunch of existing libraries to do various things. The MKL library is used for linear algebra, FFTW is used for fourier analysis, etc. These are extremely highly-optimized general-purpose libraries used by a lot of other languages as well. Then there is MATLAB's own compiled code that ties that all together, looking through MATLAB text code or byte code and either executing its own machine code, executing third-party libraries, or in some unknown (to me) cases JIT compiling it to machine code and running that. &gt; Presumably it would still compile if there was an unusual case in a code segment that it couldn't match What is and is not valid MATLAB code is determined by the interpeter. So if the interpreter cannot handle a given situation, *by definition* it is not valid MATLAB and can never be executed. For example try adding two integers of different types. The MATLAB interpeter hasn't been programmed to handle that situation, so it simply throws and error if you try to do that. : &gt;&gt; int32(1)+int64(2) Error using + Integers can only be combined with integers of the same class, or scalar doubles. It is inherently unsafe for MATLAB to try to off-load operations it doesn't understand to other libraries. The compiled languages MATLAB uses are much stricter and more brittle than MATLAB is. When they fail, they fail hard, crashing the entire MATLAB application with no warning or usable output. It is possible to crash MATLAB this way under certain situations, and the result isn't pretty. So if there is code that MATLAB hands off to the libraries it uses without properly understanding and checking it, that is a huge bug.
This is what it \[looks like in AutoCAD.\] ([https://imgur.com/v8gbruv](https://imgur.com/v8gbruv)) The answer is \[Spoiler\] (/s "1.5\*pi"). If you wanted to check your work.
Here are your three cylinders. I think you'll see it's not what you're looking for, but it may give you an idea about generating some sexy plots. Copy and paste this. N = 50; % number of points around each cylinder. Increase this for smoother results. transparency = 1; % decrease this to make the object transparent dt = 2*pi/N; t = 0:dt:2*pi-dt; brightness = 0.4; % so we don't have to keep computing this cos_t = cos(t); sin_t = sin(t); fig = figure('Units','normalized','Position',[.2 .2 .6 .6]); ax = axes('Parent',fig,'Position',[0 .05 1 .9],'NextPlot','add','XGrid','on','YGrid','on','ZGrid','on','Box','on'); cap_top = [cos_t; cos_t]'; cap_bottom = [sin_t; sin_t]'; cap_long = [zeros(1,N)-1; zeros(1,N)+1]'; [body_top, body_bottom, body_long] = cylinder(1,N); body_long = 2*body_long-1; % center at origin % cylinder along z-axis patch(ax,'XData',cap_top,'YData',cap_bottom,'ZData',cap_long,'FaceColor','r','EdgeColor','none','FaceAlpha',transparency,'AmbientStrength',brightness); surf(ax,'XData',body_top,'Ydata',body_bottom,'ZData',body_long,'FaceColor','r','EdgeColor','none','FaceAlpha',transparency,'AmbientStrength',brightness); % cylinder along x-axis patch(ax,'XData',cap_long,'YData',cap_top,'ZData',cap_bottom,'FaceColor','g','EdgeColor','none','FaceAlpha',transparency,'AmbientStrength',brightness); surf(ax,'XData',body_long,'Ydata',body_top,'ZData',body_bottom,'FaceColor','g','EdgeColor','none','FaceAlpha',transparency,'AmbientStrength',brightness); % cylinder along y-axis patch(ax,'XData',cap_top,'YData',cap_long,'ZData',cap_bottom,'FaceColor','b','EdgeColor','none','FaceAlpha',transparency,'AmbientStrength',brightness); surf(ax,'XData',body_top,'Ydata',body_long,'ZData',body_bottom,'FaceColor','b','EdgeColor','none','FaceAlpha',transparency,'AmbientStrength',brightness); camlight(ax,'right'); lighting(ax,'gouraud'); axis(ax,'equal','square'); axis(ax,[-1 1 -1 1 -1 1]*2); view(ax, [25 30]);
lmao
Matlab is hard for many students. I teach matlab to 350+ students per year. Some get it right away, some don’t. It gets easier with practice so don’t get discouraged. If you are interested I posted some matlab lectures to YouTube a couple of days ago. I go over the basics like matrices, plotting, if statements, user defined functions and looping. It’s basically 5 chapters of material from my 9 chapter course that I sell on my website. The YouTube lectures are free though so maybe check them out. They just might help! Just search for ‘stem course prep’. Good luck!!
Symbolic toolbox is an afterthought, can you stick to Mathematica or perhaps Maple?
Sometimes you can land on some fresh ideas by just using different words in your Google searches. Try borrowing some terms from the machine learning world like "features" and "clustering". In your case, you can imagine taking each audio sample and representing it by a series of "features". Some ideas could be "duration" or "average Frequency" or "number of seconds spent where 5 kHz was louder than -20 dB" or "volume level of 200Hz at the start minus volume level of 500Hz at the end" or "number of seconds elapsed between the two loudest parts". Once you've identified a bunch of "features" (or dimensions) to your signals, you can process them and represent them in a tabular format. Each clip is a row, each feature is a column. Now you're set up to perform and number of "distance" or "clustering" techniques to find out which clips are similar or different. This paradigm I describe above is (albeit oversimplified) essentially how Spotify knows what sogs to recommend to you
The question asked sounds a lot like the general question of "How does speech processing work?". I would suggest you you look into mel cepstrum coefficients for converting the time signals into robust features. Then start using some of the less complex built in classification tools Matlab has to offer.
Is the explanation I provided with this picture able to be seen? I can't seem to view what I typed up, only see the picture.
Im currently working on a research project regarding battery balancing topologies. I am new to matlab/simulink and any help would be **greatly** appreciated. I've been working on this for a couple weeks now and my research is dependent on this model for a basis to compare other topologies to. Unfortunately I can't get this circuit to operate as intended and cannot progress to my research until I can get an appropriate simulation. Description: This circuit operates by sensing the SOC and operating switches based on the inputs fed into the matlab function. Ideally, when the SOC is greater than the arbitrary threshold (1.8&amp;#37;) it should open the controlled current switch (second from top) and close bleeder 1 or bleeder 2's respective switch/switches. i.e. if B1 SOC is greater than B2's by 1.8&amp;#37; or more, the current switch will open and the top switch and top far right switch will both close, allowing the excess voltage to be burned off by bleeder 1. Same for B2 except that bleeder 2's switch will be closed. Problems: 1. My initial conditions for SOC for B1 and B2 are 60&amp;#37; and 40&amp;#37; respectively, which should indicate to my system that the controlled current switch should open at t=0 and I expected to see the voltage decrease in B1's scope (shown in top left) at the start of the simulation....clearly this is not what happens. 2. The current through my controlled switch remains at a constant 17.5A throughout the simulation...so this switch obviously never receives a signal to open. 3. The nominal voltage for each battery is 36V, however the initial voltage for both B1 and B2 begins at 40V and approaches 80V as the simulation progresses. If the SOC and voltage are proportional, shouldn't B1's initial voltage be roughly 22 volts? (36\*.6) . Seriously, any help would be a blessing, I've wasted far too much time trying to get this circuit to function as intended. 
Omg! That's so helpful. I'll definitely check it out. It truly seems that with each new problem I am assigned, I am learning a little bit more. So that's at least helpful with not feeling hopeless. Plus everyone on Reddit is super helpful! Thanks a lot for the positivity and for the YouTube link. I'll msg back if I can't find it
You’ll figure it out. Just don’t get frustrated. 😁 
I'm going to assume it is in my control function. What you see in this picture is about the extent of my programming experience as well. Will the control analyze all three if statements instantaneously? or will it terminate after the first is met? So after analyzing the first if, my switches for bleeder one would close, however it doesn't evaluate the function that states the current controlled switch needs to open..causing the mismatch in expected results vs what the system is actually doing
yes its possible to do simulaiton of such kind in matlab. You can design that using simulink 3D toolbox in MATLAB. Look at this example [https://in.mathworks.com/videos/fly-a-747-with-matlab-68730.html](https://in.mathworks.com/videos/fly-a-747-with-matlab-68730.html) With Regards http://free-thesis.com
Try searching for Music Information Retrieval.
Start here: https://au.mathworks.com/academia/student-competitions/racing-lounge.html There is a lot of work on vehicle simulation, your exact needs will be determined by how the vehicle is driven (normally, racing, etc) and what you are interested in modelling (and to what fidelity)
Thanks :) Congrats on solving it, I’m still struggling.
Thank you
Thank you
Just use IPG Carmaker.
I suppose you can use the low-passed derivative for segmentation dx(k) = k * (x(k) - x(k-1)) where x(k) = abs(acc(k))
Steady state vibration? It sounds like you want to [filter](https://www.mathworks.com/help/matlab/ref/filter.html) the signal which should be able to absorb the majority of the overshoot shown in your plot. Assuming the sampling rates and amplitudes can be process (please try to label your plots to make it easier for folks to understand your problem). A low-pass filter set just above the acceptable range of vibration should mitigate the peaks allowing you to analyze non-zero values as being 'valid'. It won't be perfect, but it is a start. OR you could take the [Fourier transform](https://www.mathworks.com/help/matlab/ref/fft.html). This would show you all the frequencies and then you can ignore the ones associated with the overshoot (likely to be higher frequencies) than those that you are interested in capturing.
Why don't you just ignore the data that occurs within SOME_TIME_RANGE of the start and stop of the motor? 
MATLAB's largest native data type is uin64 - 64 bits. You can implement your own custom data type for larger types if you'd like.
Sounds like you need better indexing. If you have the time values Ind1 = find(t&gt; timeVal, 1, ‘first’) Av=mean(amps(1:ind1)) That is not working code but should give you an idea.
Perfect! Thanks, that worked perfectly. 
That's kind of what I'm trying now. I was able to find the edges of each RPM segment using the variance increase, then use those reference points to select the ROI.
The one issue with filtering is that I'm stepping through RPM values at increasingly higher velocities. The accelerometer data is then itself at higher frequency as the time location in the signal increases, which makes it hard to fit a filter over the whole signal without attenuating the higher frequencies of interest. Ultimately I think I've figured a way to do this, however its not the most elegant/robust. Using the variance of the data, I was able to detect the index of the start / stop of each RPM cycle. From there, I crop out n data points to extract data from the middle of each RPM region. Not the best solution, but it'll do for now.
Te toolbox [gramm](https://github.com/piermorel/gramm) will do that kind of thing for you (averaging for unique x values, plotting the average with confidence interval). To do it by hand unique() seems to be the way if your x values are exactly the same within groups... Otherwise uniquetol() allows to set tolerances.
At work, and it's been a while since I've worked with FFT, so just taking an educated guess... I may be wrong but... what do you expect to see? Do you expect to see a different FFT when using sin vs. cos but the same frequency? (I certainly don't...) Do you expect to "see" a different FFT when using a different sin frequency but not plotting vs. frequency? (You may need to review how to generate the frequency axis when using an FFT. You may want to plot the summation of the two sin functions albeit with a frequency axis.) Similarly for the summation... you may want to look into the discrete interval you're using for time (2*pi) vs. the difference in your two frequency components (1 vs 2). For example, if I just do the following, the resultant FFT is *visually* different, but could be more pronounced if the x axis was generated with more points OR the frequency difference was significantly larger than '1': &gt;&gt; y=cos(x); &gt;&gt; y_fft = fft(y); &gt;&gt; plot(x,fftshift(y_fft)) &gt;&gt; y = 0.5 * sin(x) + 0.5 * cos(2 * x); &gt;&gt; y_fft = fft(y); &gt;&gt; plot(x,fftshift(y_fft)) Oh, you may also want to look into "fftshift".
Ive decided to just deal with each digit as an integer in an array and define my own mathematical functions to handle them based on grade school algorithms
I have both R2017a and R2018a installed on openSUSE! I can confirm, this bug occurs on R2017a but not R2018a. I have older versions as well but haven't tried.
Thanks for the link to gramm! Uniquetol can’t do specific tolerances AND indices, so I just wrote a function that takes care of what I’m looking for. The for loop slows it down a bit but things could be worse. 
Thanks a lot! I'll see if I can upgrade that computer. Or even do downgrade, for that matter. I'm the meantime, I'll try running my code in octave, but I'm not sure how compatible it is.
Unless your code is very basic, I have serious doubts. I have not had any luck with Octave running my programs in the past. It doesn't seem like a critical bug, just don't modify the size of the terminal window?
I remember trying some early stages of that code in Octave and it ran done with just some minor fixes, but I'm not sure if that is the case anymore. The system function calls a Fortran code that runs for days, even weeks, and we ssh in to monitor it. The problem is that if I ssh from a window that is a different size from my previous one, the code crashes. And there will be multiple users once I finish it, I'd prefer not having to explain it to every single one. I'll check what is easier. Making it run in octave or upgrading/downgrading my Matlab. I'll try octave tomorrow. One workaround I can try it's overloading the system function from a previous version into mine, although I don't know if that's possible.
Doesn't this work? [C,IA,IC] = uniquetol(___) returns index vectors IA and IC
Have you tried a console multiplixer like tmux, that way it would run in the background? Then I would setup some sort of progress monitor by outputting files. For example you can just look in the folder and see that you have made it to checkpoint #42 of 1000, then you can estimate how much time is remaining. Even better, if your algorithm allows partial results then you can start collecting those so in case something else happens, you don't lose 1 week of results. I know that's not always possible as the algorithm may be adaptive in some way.
You shouldn’t be getting values of infinity when using the symbolic toolbox. How are you initializing the symbolic variables?
I believe that you can not make a vector of functions, but a function can return a vector, so you have to figure out how to stack your equations before using matlabFunction. MATLAB can definitely do matrices of symbols, I suppose it's about how you've formed the problem. As for Coder, it requires very specific limitations to ensure that things can build. Recently I discovered a work around for Coder when it throws up errors about matrices having an undefined size: coder.varsize('Ac',[100 100]); This tells coder that a matrix Ac can take any size up to 100x100. Further you want to allocate as much as you can explicitly, especially if you work with cells.
sym('1232344353453443534543'), except a lot bigger numbers.
We have been using screen for that. Partial results are saved every few minutes, so we can monitor progress by looking at the folder. There are some warnings and error margins that are usually only printed to the screen, I might have to output then to a file as well, that should help. Thanks again!
There should be no difference in output between calling a separate function file from inside a script and nesting the functions code at the bottom of your script. If there is, I suspect something went wrong during the process of adding the functions code to your script file (eg accidentally deleted or overwrote some code) Otherwise, make use of break points (click the little dashes right next to the line numbers in your script window to add one - now when you click run the script will pause at that line and you can see intermediate results to spot where a calc is going wrong)
Does it make a difference if the script file is a function file? The whole script vs function file having the same extension confuses me. Basically it is a function file that called another function file. I have tried debugging and I can’t seem to figure out where it goes wrong. It will draw the plot correctly before suddenly changing to an incorrect output. I tried putting breakpoints but I don’t know if I am putting them in the right spot. I tried putting them where the plot is drawn but it didn’t seem to show me anything. I suspect because one of the values for a plot was calculated from the external function, something with making it local is causing it to either calculate it wrong or do some sort of extra incorrect step to produce the wrong output. 
I think the advantage is that you can keep more code in one place, making it easier to ensure that if you send it to someone, they have everything they need. The disadvantage is that it might be harder to have multiple people work on his and pieces and put it together? With git that actually wouldn't be terribly hard, but the real disadvantage would be if you have multiple things that require the same function, it would probably be best to only have each part of code in one place. This way when you fix it, it fixes for every script that uses that function rather than only for the one that you had it as a local function. 
Well the way our source control server is set up, i could easily add the external function to it so who ever works on it can have both function files. I am just afraid to speak up to my boss about keeping the files separate due to my inexperience. It’s making my hair fall out. I don’t get how when the functions were separate everything worked fine, now that they are one it produces the wrong output with no errors or warnings even giving me a hint as to what is going wrong.
Hmmmm... I wonder if you might have a bit of a variable scope problem? I don't remember how scope and functions work in matlab will enough to remember though. 
It’s possible. One of the values for a plot required the external function to calculate a variable, however after moving it I fear it’s calculating the variable wrong or using the wrong variable in the loop. A lot of l plots and subplots are generated and it seems that once I made the function local half the plots don’t output right
Are you able to unit test this at all? That might be a good way to narrow down where the problem is. Also, as the other guy mentioned, break points might help. 
I probably could unit test it BUT and this is the embarrassing part, while I learned about unit testing and test driven development, I don’t know how to do a proper unit test. As for the break points, I think I am putting them in the wrong place or at least an ineffective place. My break points(set where the plot is drawn) just goes through the drawing steps. It doesn’t tell me why it is drawing wrong. Just to add I duly to I jury, it will actually draw the plot correctly and then suddenly change. I tried putting breakpoints where the change occurred but because the function used to draw is a common script, it’s used multiple times throughout the function. 
TDD is good to learn, but I'm in the same boat as you, I don't think it's taught well, until you need to use it and figure it out on the job. You should be able to put break points inside the function and hopefully see where the variable makes the sudden change that causes the plot to change. 
I guess my question would be, how do I keep my debugging focused on where the issue is? When I step in it sends me to the function file where it draws the plot. Basically when it draws, as far as I can tell it’s not using the same variables I am worried about(this making it harder to debug). Something is happening(in the code I am worried about) in it to cause it to draw again(incorrectly). 
If it is a variable scope problem, what would be the best way to fix that? I feel if that’s the issue then I shouldn’t be worried about where the plot is drawn(because so far that is gotten me nowhere)
I would put one of those stop light circles in the first line of every function (or at least the suspicious ones) And see if the variables in the list all make sense
Ok I think I will try that. Should I compare to an older version where the two functions are separate? 
You should be able to do it in a local function, unless there's a particular reason you want to do it that way. 
And I feel like an idiot. So apparently I made a last minute change during one of the previous versions and that last minute change caused it to calculate wrong. Basically the last minute change was using a MATLAB autofix. The way the previous person wrote the array was sloppy and MATLAB didn’t like it, me being inexperienced let MATLAB auto fix it using “zeros(a, b)” I think you can see where this is going. So all I had to do was delete the zeroes and write the arrays with the proper syntax and viola it fixed everything. Both the external function call and local function call work. 
😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂 Such is the life of everyone who programs anything. 
I just wanted to update you and say you were right about the outputs being the same. I figured out my mistake and now it works as expected 
Glad to hear it! Also re: function vs script file - it's not too tricky once you have a handle on it. 'function files' start with a function declaration eg MyOutput = MyFunction(MyInputs) 'Script files' just have code on them without being wrapped in a function declaration. You can copy the contents of a function file to the END of your script file to create a so-called 'Local Function', but it's still a 'script file' since it doesn't START with a function declaration.
Haha glad you figured it out. You should probably make an edit at the top to your post to let people know. Execution wise there is no difference between loading a function from a separate file vs locally within a script. The only real solutions are: copy-paste error, you changed some other code, or *maybe* some naming issue (I have no idea what happens if a local function has the same name as an external, I'd assume local takes precedence).
Take a look at how to efficiently count how many values of each UniqueID occurs ([https://www.mathworks.com/help/matlab/ref/unique.html#mw\_42eea7c7-dde5-45e9-8434-133a1dfe4b6a](https://www.mathworks.com/help/matlab/ref/unique.html#mw_42eea7c7-dde5-45e9-8434-133a1dfe4b6a)) For example, [C,ia,ic] = unique(PVID(3,:)); % it looks like the 3rd row is your UniqueID a_counts = accumarray(ic,1); value_counts = [C, a_counts]; % I'm keeping some variables the same as the documentation example. UniqueIDs_Over50Pts = value_counts(find(value_counts(:,2)&gt;=50),:); Then your for-loop can be something like hf = figure; hold on; for ix=1:size(UniqueIDs_Over50Pts,1) PlotArray = PVID(:,find(PVID(:,3)==UniqueIDs_Over50Pts(ix,1)); plot(PlotArray(:,1),PlotArray(:,2)); end That should be one way to do it. There are many other, and probably more efficient, ways to do it as well.
This seems to be a network issue, not MATLAB or ROS related. For your first error: &gt; Cannot connect to ROS master at http://10.0.0.1:11311 This is telling you that it's failing to establish a TCP connection on port 11311 at the host 10.0.0.1 using the HTTP protocol as the data layer. Why it's failing could be a whole slew of reasons, but I am going to guess that the firewall is blocking incoming TCP connections on port 11311 on PC1. First we should validate that there is an application (in this case ROS) actually listening on port 11311 for TCP connections using the HTTP protocol on the PC that is running ROS. To do that we can type this into a browser on the PC that is running ROS: http://localhost:11311 If ANYTHING shows up, that means that ROS is definitely waiting for a connection, and most likely there is a firewall rule blocking incoming TCP connections on this port. If nothing shows up and the page times out, you will have to see why ROS is not accepting incoming connections. The second error is expected as most likely the second PC has no idea that the hostname "Deepcam" should translate to IP "10.0.0.1". You can define this in the hosts file on the second PC so that you can do rosinit('Deepcam'); However, without figuring out the reason for your first error, doing this will simply cause rosinit('Deepcam'); to return the same error as your first error. Try exploring the firewall option first, then we can try something else depending on where that route takes you.
You should look into using `accumarray` for this sort of thing. Assuming you have a column vector `X` and a column vector `Y` storing the (x,y) values, I'd recommend the following steps: 1. Round your x values to 2 decimal places: &gt; X2 = round(X,2); 2. Use `unique()` to give each unique value an index (so that all values that are the same have the same index): &gt; [unique_X2,~,group_index] = unique(X2); 3. Use 'accumarray()` to get the average of each group: &gt; Y_mean = accumarray(group_index,Y,[],@mean); Now you can plot your results: fig = figure('Units','normalized','Position',[.1 .1 .8 .8]); ax = axes('Parent',fig,'Position',[.05 .05 .93 .93],'Box','on','XGrid','on','YGrid','on','NextPlot','add'); plot(X,Y,'.','Color',[.5 .5 .5]); plot(unique_X2,Y_mean,'k.-','MarkerSize',20);
I'm curious, 2^100 bits means you're dealing with integers up to 10^30. What are you doing that requires you to use such large numbers?
The easiest way is to compute the distance between the curves. A typical one is the [Euclidean distance](https://en.wikipedia.org/wiki/Euclidean_distance). Take the square root of the sum of the squared differences between the curves: d = sqrt((A-B).^2); Then pick the curve with the smallest d.
using your code, UniqueIDs_Over50Pts == SortedPosIDS which is in picture 3. I'm not sure what is going on in the plotting loop. &amp;nbsp; we loop until ix=size(UniqueIDs_Over50pts,1) &amp;nbsp; &amp;nbsp; Then we put values into PlotArray which come from PVID &amp;nbsp; Does --&gt; PlotArray = PVID(:,find(PVID(:,3)==UniqueIDs_Over50Pts(ix,1)); &amp;nbsp; -&gt; Place PVID values gathered from every row, FIND values in the 3rd column of PVID which are equal to the (ix) postiion in the UniqueIDs_Over50pts() vector --&gt; into PlotArray. &amp;nbsp; Now PlotArray should have the shape ( n x 3 ) where PlotArray has all the rows necessary to hold the PVID values in the two columns above. Then we 'plot' using Columns 1 and 2 of the PlotArray.
Also i don't know how to tag a post on reddit yet lmao, otherwise i would have tagged as homework help 
OmGggGGggG! You guys. I think I just figured out what my problem was (stumble across a new tutorial). Link to the new code here: [https://pastebin.com/ibZ74nha](https://pastebin.com/ibZ74nha) If I am correct - when doing a for loop you must create a vector (in this case 1 thru 100) and when writing the equation in the body of the loop, it must read (variable.\*value on vector). Did I actually get this right?????
Looking at your code, everything seems fine, but in your case p is just a value that you overwrite in each iteration of the loop. Instead you may want p to be a vector of length n and populate one entry during each iteration of the loop. Since this is a homework question I’m not supposed to just write down the answer, but check again the equation you posted here (not on pastebin), because you kinda did it correctly here. Just take care that if you want t to be non-natural numbers that you introduced a placeholder vector of natural numbers that you can use to call the indices of your p vector. Does that make sense? 
I think I made a mistake with the plot command, I believe you want to plots rows 1 &amp; 2, not columns.
hey! did you see my last comment? i think i spotted the same problem *right* after posting this Q and i believe i fixed it correctly
https://pastebin.com/ibZ74nha
Nope, I guess it took me too long to type up my reply and ended up posting after your reply. So, i see now, that your code works, however, I have no clue why this works that way. What I had in mind was still quite different. Anyways, congrats on getting that fixed!
Well, as I mentioned above, I do not quite get how your solution can work at all. Since you have solved your homework issue, I guess I can put down some code now? Anyways, I have pasted a script executing two other versions that you wanna do: [https://pastebin.com/sU6wNXy3](https://pastebin.com/sU6wNXy3) Hope that helps/inspires
Ohhhhh, I see what you're saying now. Can I just clarify? \[ p=zeros(1,length(V)); \] In other words, this is creating a matrix (vector in this case) from 1 to V (which is defined by 100) that is just filled with zeros by coding the for loop this way \[ for t = 1:1:length(V) \] you're effectively doing the V\*t thing to run the equation for all t-values btween 1:100. And because you wrote the equation in the body of the loop as p(t) instead of y=, the answers for each t value will be place in the corresponding location on the matrix/vector created in step 1 I mentioned above. Do I have that right??
Playing around with prime things during my lunch break. 
Hi, thanks for the response! I tried your search and it returned a google search, not a time out screen. The immediate solution I was able to find knowing this was: &gt;linux computer: $sudo ufw allow from 10.0.0.2 &gt;Matlab computer $ sudo ufw allow from 10.0.0.1 starting the master again and running rosinit('10.0.0.1') seems to have the trick, yielding the initialized global node. Thanks for your help!
&gt; the MATLAB JIT is a new addition. Out of curiosity, do you know what version (approximately) JIT was first introduced? I know it is regularly updated with new versions of MATLAB, but im curious when it was introduced (Ive been using MATLAB for ~6 years, so I wonder if ive ever used a JIT-less MATLAB?) &gt; That is not really how machine code works. It convert a block of code to specific, low-level instructions that the CPU executes on blocks of memory. These instructions are extremely low-level compared to the sorts of things MATLAB has. You can't "guess" with machine code, either the instruction has the right result, the wrong result, or it fails outright. By "level of generality", I meant more like "how many possible code paths it pre-compiles". Any given run would only take 1 path, but having more paths available would mean different situations could be run off of the same compiled code and/or that more situations could use an accelerated library instead of a slower but more generalized one. i.e, something perhaps a bit like this: // OPTION 1 if (condition1) { &lt;Call High Performance Function 1&gt; } else { &lt;Call Slower But More General Function&gt; } // OPTION 2 if (condition1) { &lt;Call High Performance Function 1&gt; } else if (condition2) { &lt;Call High Performance Function 2&gt; } else if (condition3) { &lt;Call High Performance Function 3&gt; } else if (condition4) { &lt;Call High Performance Function 4&gt; } else if (condition5) { &lt;Call High Performance Function 5&gt; } else if (condition6) { &lt;Call High Performance Function 6&gt; } else &lt;Call Slower But More General Function&gt; } &gt; MATLAB, in particular, uses a bunch of existing libraries to do various things... So, I think something just "clicked" for me. At some point I realized that is you press `pause` to go into debugging mode and look at the function stack, the bottom-most function in the stack is always a call to some pre-compiled library (either an open-source and perhaps external library like MKL/FFTW, or something closed-source and written by a dev at The Mathworks). So, I started thinking about Matlab as executing code in 2 parts: a part that is "run in MATLAB" that sets up the call to the pre-compiled library, and a part that is "run outside of MATLAB" while the code is being run through the pre-compiled library. My own personal design goal for writing fast matlab code is usually to spend as little time on "the part run in MATLAB" and as much time on "the part run outside of MATLAB using pre-compiled libraries" as I can. On the whole this works rather well, so much so that I have yet to see a speedup from using `MATLAB coder` to convert my code to C code (usually it is quite a bit slower actually). At any rate, the part that "clicked" is that what I had been thinking of as "the part run in MATLAB" is, in fact, the interpreter you're talking about. Now that Ive realized this it seems super obvious, it just took a minute for me to put 2 and 2 together... This also makes it clear why operations the interpreter doesnt understand are, by definition, not valid MATLAB operations. Thanks again for the good info. Ive always wanted to learn more about the lower level intricacies of how the high-level code we write gets compiled (or interpreted) into machine code, and how exactly the cpu uses that machine code. Unfortunately I'm curious about waaayyyy too much shit, and there is only 1 of me and only 24 hours in a day, and I haven't gotten around to indulging that particular curiosity.
&gt; [ p=zeros(1,length(V)); ] In other words, this is creating a matrix (vector in this case) from 1 to V (which is defined by 100) that is just filled with zeros yes, although technically, not exactly. the “zeroes” function will create a matrix of zeroes. The input arguments to this function should be the dimensions of this matrix. So in this case you span a matrix of zeros with dimensions 1x100, which is - as you correctly say - a vector. &gt; by coding the for loop this way [ for t = 1:1:length(V) ] you're effectively doing the V*t thing to run the equation for all t-values btween 1:100. Yes, but again it’s not exactly what happens. The for loop steps now through a new vector which is defined as starting at 1 and stepping in increments of 1 through to the length of vector V which is 100. You could have it step through V directly, but then you’re limited in ways how you can define V, namely it cannot contain negative or real or complex numbers. So in principle you’re right, but here comes the difference to your code. With t=1:V and the V*t thing you are stepping t from 1 to V (a vector), and at each iteration multiply it with t, which in my opinion does not compute, because st some point you should be multiplying some vectors with each other, but that is not what appears to happen. I tested a couple of things with your code and I’m honestly baffled why it does what it does. Anyhow, moving on. &gt; And because you wrote the equation in the body of the loop as p(t) instead of y=, the answers for each t value will be place in the corresponding location on the matrix/vector created in step 1 I mentioned above. Absolutely right. Now you can use t as an indexer, meaning if - for instance - if t is 5, V(t) will call the 5th value stored in V, compute your equation with that value and overwrites the 5th value stores in p (which was a 0). 
I don't think try catch blocks are the way to go here. Since you're trying to catch user error, you have the user input in some variable before you run some code. I would suggest checking the user data for mistakes using either if statments to recognise the errors, and then correct them inside the if statement, OR do the user input in a loop which you only exit if all input passes the tests (the loop is used to re-request user input when it's bad). I think you should avoid try catch blocks as much as possible, and try to solve the problems with regular flow control. The only times i used try/catch block was when some function charshed sometime due to some weird harddrive error, or when the licence server is bitchin', just so I could retry when it failed,
Well a loop sounds like a good idea and it would be cleaner. So the way the code is setup, it’s essentially just a list of functions. Would it be best to nest the loop in the main function or make a local function that I call? 
Probably make a `getUserInput` function with that loop and checking code, that way the main function stays clean.
[removed]
One way to abstract try-catch blocks so that they are not messy is to put all of your work that you want to catch exceptions for in a function, and then just call that function in the try portion: try CheckUserInput(); catch ME % Do something with ME to warn the user of the specific problem end 
I would do it like this: `cellfun(@(b)(Q.*b),B,'un',0)` Basically, for each cell `b` in `B`, apply the multiplication.
You could stack the B matrices in the 3rd dimension and skip using cell arrays altogether
You could do something like this. I'm not too sure I understand the pixel size part. `H = 61;` `W = 48;` `[yy,xx] = meshgrid(1:W,1:H);` `pt0 = [17, 0]; % two points on the line` `pt1 = [0, 14];` `a = (pt1(1) - pt0(1)) / (pt1(2) - pt0(2));` `b = pt0(1);` `shapeOverlay = a .* yy + b &lt; xx;` `figure(1)` `imshow(shapeOverlay);` `title('the overlay shape');` `% overlay to a test image` `f = imresize(imread('cameraman.tif'),[H,W]);` `figure(2)` `imshow(f .* uint8(shapeOverlay),[])` `title('the overlay shape applied to an image');`
A binary format will be faster than a text format. There is no mixed precision array, so just store the columns with different data types as separate arrays in the same file.
do i need better pictures?
Thanks. So what would that look like? I thought about something like this, supposing that `A` is a Nx2 integer array and `B` is a Nx1 double array. fileID = fopen(filename); fwrite(fileID,A,'uint16'); fseek(fileID,bytes'bof'); % What is the right number of bytes? Is it 2xNx2? fwrite(fileID,B,'double'); Aoutput = fread(fileID,[N,2],'uint16'); Boutput = fread(fileID,[N,1],'double'); fclose(fileID); I don't know if that's on the right track.
Hi! Sorry the so pixel size part is only to convert to mm as there is reference. Thanks for this, I’ll give it a crack!!! :)
Just use [save](https://www.mathworks.com/help/matlab/ref/save.html).
&gt; code right now (sorry!) But I would recommend searching for John D Anderson's fundamentals of aerodynamics. He has a whole section outlining the vortex panel method which I used to create my code for an arrodynamics class. It should step you right woah.. could you send me the info on the lifting line theory? [crsgln@gmail.com](mailto:crsgln@gmail.com)
\&gt; Do you expect to see a different FFT when using sin vs. cos but the same frequency? (I certainly don't...) I would expect their phases (imaginary component) to be different, but that was not what I was looking for here. You were right in thinking my misunderstanding was about the frequency axis scale. With the frequencies I tried, there was no big difference, but I thought that all frequencies where translated and scaled into (-pi, pi). That's not the case, and if I try with a much greater frequency the result looks like what I expected! Thanks for taking the time to answer!
You might be able to cobble something together via [introspection](https://www.mathworks.com/help/matlab/get-information-about-classes-and-objects.html). I've not done this in MATLAB, but I wrote [a recursive function in Node.JS](https://github.com/angrmgmt/objectTree/blob/master/objectTree.js) to do something similar. You'd have to roll your own filter for sub/superclasses, of course. This is assuming you didn't find the Google results or those at MathWorks' FileExchange to be useful.
solved it now using reshape. But is there no command that sees the array has dimension 1x1xn and converts it to a vector of n elements?
Can't you just extract the vector and assign it to a new variable?
squeeze does that. 
Use squeeze to remove singleton dimensions and permute to swap dimaensions. 
I think i tried that but the new variable will still be a 1x1xn
Interesting. I haven't use MATLAB in some time, much less MATLAB's cells
Very nice! I also make some tutorial videos about programming (take a look if you like to compare). I'm curious if the double translated videos are worth it. I think sub titles let you do something similar with one video for example. 
Please don't use reshape. While it will work when the first and second dimension are size one, it will mess with the sequence of values in the third dimension when the first two dimensions have a size &gt; 1. As already mentioned use permute or squeeze or use a new variable: NewVec = oldVec[1,1,:];
Thank you! I am just taking a look at your YouTube channel, good work! I am still not sure whether double translated videos are a good idea or not: as you have written subtitles let you do a similar thing and it is probably simpler and faster. I'll try with that method for the next videos, let's see :)
This is pretty close to what I did but the acumarray thing is cool!
What exactly is it that you need, what kind of outcome are you looking for? 
Through microphone. I am looking to show that if you lubricate or not lubricate the disk then it will have an effect on the wear. Stuff like that. So far to average this data out I converted it to SPL from Pa. Now I have an average for each second. I don't know what to do with that moving forward. Or if it was even the right step.
Can you post a picture of the signal? You don't need to post all of it. Use the plot(signal) command. Then do grid on. Also after that, tell us what your sampling rate is. Lubricated vs unlubricated should be straightforward to ascertain. 
First, if want to look at the average SPl over time you should be using Leq. ([https://www.bksv.com/media/doc/bo0051.pdf](https://www.bksv.com/media/doc/bo0051.pdf)) Second, wear on rotating machinery is usually analysed using the spectrum of the signal. I good indicator would be at looking at the harmonics of the rpm of the rotating disk. 
Quick glance - it looks like you are starting your array in the first function at zero. MATLAB starts at 1.
You're mixing a function and a script, as the first step. You can make an m-file (saved in the path) just for the MTangentes function. Then you can run the rest as a script (but you'll see a next crop of errors to work on there :)).
So, I shouldn't have the function MTangentes and the Script01 in the same file? 
&gt; Second, wear on rotating machinery is usually analysed using the spectrum of the signal. I good indicator would be at looking at the harmonics of the rpm of the rotating disk. &gt; If both lubricated and unlubricated are in the same time domain signal you can use a spectrogram. and how would i got about doing that? I am so sorry. this is the first time I am using matlab. This is what I used to average data out. Is this correct? &gt; n = 32000; &gt; spl_db = 20*log10(y/2*10^-5); &gt; y1=abs(spl_db); &gt; y2=y1/10; &gt; y3=10.^y2; &gt; y4=sum(reshape(y2(1:end-mod(length(y2),n)),n,[]),1); &gt; y5=y4/n; &gt; y6=10*log(y5); &gt; y7=transpose(y6);
hey. I have 4 different cases of conditions. i have posted a sample of the cases here: [https://imgur.com/a/vsG6WIf](https://imgur.com/a/vsG6WIf) if by sampling rate you mean rpm, then its 250rpm
no no i mean the sampling rate of your acoustic signal. Not the RPM of the disk.
When you declare a function, MATLAB has to be able to figure out which of the variables that get calculated inside your function is the right one(s) for output. It does this by using the name you specify when you declare the function, so eg a function declared as "myOuput = myFunction(myInputs)" will return the variable inside the function code called "myOutput". You can specify a different name for the output when you call the function (eg "Differential_Vector = myFunction(myInputs)") will work fine, but crucially MATLAB is still returning the variable called "myOutput" inside the function code. Your function never declares your output variable, X, and so your function is never able to return anything.
its between 30k to 32k.
Yup. Note the function never ends and just runs over into the script. But if you do end the function and keep it all in the same file, you'll get an error message.
&gt;spl\_db = 20\**log10(y/(2\**10-5)); &gt; &gt;~~y1=abs(spl\_db);~~ You shouldnt need to take the abs as 20\*log10(y/yref) = 10\*log10(y\^2/yref\^2). And no this is how you would do it. You need to average to the amount of time. For instance, say you have 1 second of data. then the Leq for that one second is 20\*log10((1/1second)\*sum(y/yref)), just as shown in the pdf i have sent you. You can get the running Leq with a for loop, something like temp = 1:fs:length(y) for i = 1:length(temp) leq(i) = 20\*log10(sum(y(i:i+fs)/yref)); end And just look up spectrogram on matlab. It tells you everything. But you have to know that exact sampling frequency. If you are importing from a wav file than \[y ,fs\] = audioread('file.wav'); will give you the fs.
But my cell-array is two-dimensional, so would I need the 3d and 4th dimensions? how would I do that?
This worked, thanks :) any clues on why 'un' must be set to 0?
i'll try that. and no i dont have the .wav file. i just have data recorded as a tdms file
Okay thats fine, when you use spectrogram, just use a a sampling frequency of 1 which gives normalizes sampling frequency. It will go from 0 to .5 in the spectrum, just make sure to label it as normalized frequency . You should still be able to see the effects of the added noise from the unlubricated case. 
Thank you so much. I'll try that soon.
un is short for uniformOutput. If it's set to true, which is the default, cellfun expects the function to output a single scalar when applied to the cell, then all scalars would be concatenated in an array. In your case, the output is a whole matrix. Setting un to 0, or false, tells cellfun to store each output in it's own cell instead of trying to concatenate them.
They can be in the same file, but I think the function definitions need to be at the end of the script. The function will only work in that script, but you can have a function within a script. https://www.mathworks.com/help/matlab/matlab_prog/local-functions-in-scripts.html 
Looking for an answer too Comment to learn 
maybe this helps: [https://www.mathworks.com/company/newsletters/articles/deep-learning-for-computer-vision-with-matlab.html](https://www.mathworks.com/company/newsletters/articles/deep-learning-for-computer-vision-with-matlab.html)
will take a look.
Yes it is. You can start here https://blogs.mathworks.com/deep-learning/2017/09/21/jumping-into-the-deep-end
yes I did this in grad school nearly 10 years ago
Nice. Anything to keep in mind or know about before I try? 
I'm not sure if this is the best way, but I often use fgetl to strip off lines of header when I know that the file will be formatted in a specific way. For instance, if I know there will be exactly 20 lines of header before my data, I might do something like: fid = fopen('myfile.txt'); for i=1:20 fgetl(fid); end % header now stripped, use preferred command to read data
Theres a ton of ways to read files in matlab. If you just want a cheap and dirty method, try the ui loader: uiimport
Thanks! It worked!
[removed]
Oh right, I see - thanks!
alright so i tried this: `n = 32000;` `spl_db = 20*log10(y/(2*10^-5));` `temp = 1:n:length(y1)` `for i = 1:length(temp)` `leq(i) = 20*log10(sum(y(temp(i):temp(i)+n)./2*10^-5));` `end;` i get this error message: **Index exceeds matrix dimensions.** is there a way to equally divide these into 360 seconds automatically? also my Leq values are coming in the negative with an imaginary value for some. should i get an absolute of that? Is that even correct? for reference: \[original signal\]([https://i.imgur.com/DIpwKYy.jpg](https://i.imgur.com/DIpwKYy.jpg)); \[signal after running the above code\]([https://i.imgur.com/SgHjLkj.jpg](https://i.imgur.com/SgHjLkj.jpg)) and \[signal when i get the absolute value of the above code\]([https://i.imgur.com/3dZIGMd.jpg](https://i.imgur.com/3dZIGMd.jpg)) But i don't see how this will help me show a trend in wear
`fs = 32000;` `temp = 1:fs:length(y);` `for i = 1:length(temp)` `leq(i) = 20.*log10(sum(y(temp(i):temp(i)+n)./(.00002)));` `end` You may also need to preallocate leq but make sure that `20.*log10(sum(y(temp(i):temp(i)+n)./(.00002)));` is giving one single value. try by using 1 for i. Second if you read spectrogram, you would notice that fs (sampling frequency) is the last input. spectrogram(y,\[\],\[\],\[\],1) Spectrogram has nothing to do with the leq values, it has to do with the raw input. Though if you think your fs is 32000 than you can just use spectrogram(y,\[\],\[\],\[\],fs). Play around with the window size to get the right frequency resolution. start with 2\^10 and just change the exponent. spectrogram(y,2\^10,\[\],\[\],fs). The code i wrote works if you know the sampling fs and is taking the equivalent SPL over one second. Do you know the exact duration of the signals in seconds?
&gt; You may also need to preallocate leq but make sure that &gt; &gt; 20.*log10(sum(y(temp(i):temp(i+1)./(.00002))); &gt; &gt; is giving one single value. why do i need one single value for Leq? from my data I need 355-360 values depending on the data fluctuation. &gt;The code i wrote works if you know the sampling fs and is taking the equivalent SPL over one second. Do you know the exact duration of the signals in seconds? yep. its 6minutes for each sample. and sampling frequency is 32000hz
You absolutely can, and if you have the toolboxes, it's pretty easy. I've seen it done with a few hundred lines of code at most.
This is great. If you don’t know specifically which line the header ends at, or it changes between files, you can use this same solution except keep using fgetl until the line it retrieves contains no letters. 
Think of it as all of the matrices layered on top of each other. You'll get some performance improvements using matrix-only multiplication and dropping the cells. Here's an example. First, some setup to replicate your input: N = 50; Q = randn(N,N); B = squeeze(num2cell(randn(N,N,25),[1 2]))'; So now we have `Q`, an `N-by-N` matrix, and B, a `1-by-25` array of `N-by-N` matrices. First, concatenate `B` along the 3rd dimension: B2 = cat(3,B{:}); `B2` is now an `N-by-N-by-25` matrix. Next, replicate `Q` along the 3rd dimension to make it the same size as `B2`: Q2 = repmat(Q,[1 1 25]); `Q2` is now also `N-by-N-by-25`. Now we can just multiply the two with a single multiplication: result = Q2.*B2; `result` is now an `N-by-N-by-25` matrix. Think of it as 25 slices of `N-by-N` matrices. You can, for example, extract the 14th slice with: slice = result(:,:,14);
 plot(squeeze(X(1,1,:)));
Save to an uncompressed .mat file: A = uint32(randn(1000,2)); B = randn(1000,1); save('filename.mat','A','B','-nocompression'); Later if you want to retrieve these: load('filename.mat','A','B'); % this will load into the workspace
For the first part, for a single value i. So for instance, if i equals 1, then 20.\*log10(sum(y(temp(1):temp(1+1)./(.00002))); will give one value that corresponds to the average over one second. You are taking the sum from y for the values y(1) all the way to y(fs). Which gives all the samples in one second. And if you know the fs, then just use that for the spectrum of y. 
yea. i already fixed all that and its all good. except the whole contouring thing. its taking forever to run because of the sheer amount of data present. my laptop has been at it for almost 1.5 hours now. i'll learn matlab once this report is submitted. sorry bout all the questions. i am just on too short a time right now to look into it in too much detail.
Contouring? You mean for the spectrum? It really shouldn't take that long at all even with a huge data set. 
Must be my old laptop then cause i tried both octave and matlab. Still taking ages.
I checked and it seems that I have the Image Processing Toolbox, Instrument control Toolbox, and Parallel Computing Toolbox. I do have the student license of MATLAB so I don't think I would be able to add more toolboxes without purchasing.
function elevation(long); close all %long is the geographical longitude of the position measured in degrees %Finds the elevation angle of the Sun and defines time t = [0:1439]; eangle = 0.24725*t - 86.289 + 4*long; %Applies limits to the data for n = 1:1440; if eangle(n) &gt; 180; eangle(n) = 180; elseif eangle(n) &lt; 0 ; eangle(n) = 0; end %Plotting the Results plot(eangle,'r-.'); hold on title('Elevation angle of the sun throughout the day') xlabel('Time of day (minutes)') ylabel('Elevation angle (degrees)') xlim([0 1439]) ylim([-10 200]) grid on end end
I'm answering from my phone and haven't tested this, but for loops in matlab tend to be slow. You should vectorize your code. Try: 
Yeah now it's instant, i'll look into vectorising.
You need to preallocate eangle: every time you grow the array, matlab needs to find another (contiguous?) chunk of memory.
I know Airbus use simulink alot.
Hey, HotWingsOnsale, just a quick heads-up: **alot** is actually spelled **a lot**. You can remember it by **it is one lot, 'a lot'**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Yeah, the other comment solves my problem but I still can't see why it took so long to do that many loops. It's really bugging me, but I assume it's something to do with the way I have written the code.
If you take out the piece of code that plots the function, does the numerical part run fast?
Yeah, I used tic toc to time the for loop.
You're missing an 'end' to close the for loop. I wonder if it's making your figure 1440 times.
Of course vector code is faster, but I'm still wondering why a loop of 1400 iterations takes so long.
Yeah, there is an extra one at the bottom too...
Due to the way matlab is interpreted, it cannot (or at least appears not to) perform common compiler time operations like loop unrolling. The for loops adds MANY assembly commands outside of the intended operations. When it is vectorize, matlab calls a linear algebra library under the hood (I think it's the fortran BLAS library) which is compiled and runs significantly faster. 
You don't mean to plot 1440 times, correct? If you put an end to close the for loop before the plot section, it should restore the speed of the code to what you'd normally expect.
Once the data is in a matrix, and are numbers (not ‘char’), then you can take the [mean](https://www.mathworks.com/help/matlab/ref/mean.html).
Yes, taking the average of a matrix is ok for me, my question is more how to put it in a new matrix that would contain all the means.
MeanMatrix=mean(....); NewMatrix(1,:) = MeanMatrix; The only caveat is the dimensions of the MeanMatrix and the NewMatrix. It may be clearer to assign them one at a time: NewMatrix(1,1) = MeanMatrix(1,1); 
The biggest issue is getting my file uploaded within the code. I don't know where to put it. I've tried file = '/path/' right before the add function but that doesn't seem to work. 
Assuming windows (if linux change the vlc path accordingly) (the windows path might not be right either....Im not at a computer that has VLC installed ATM), try this: !C:\Program Files\VideoLAN\vlc.exe &lt;pathToVideoFile&gt; --fullscreen Many more command line options can be found [here](https://wiki.videolan.org/Command-line_help/)
That's great, I'll try that. Thank you!
Wow! Where do you teach? I am just learning MATLAB and would love to work towards something. Without a goal, I feel, there's no point in learning the tool no matter how much I like it.
It takes 20 seconds because you're doing the entire plot portion 1400 times. The vectorized version u/nerto is better, but if you comment out the plotting stuff even the looping version should be fairly quick.
This is actually the correct answer. I couldn't see the code formatting from my phone, but it is the plotting function that is taking a long time. Vectorizing the bounds check coincidentally fixed the problem because you deleted the for loop. 
I actually should have realized this when I coped the code into my matlab console. It took forever to run, and I ctrl-c'd out of it ... but it wasn't running at all, it was waiting for an end statement!
I know why vectorizing is faster. I just think 20 seconds is outrageously long for a loop of 1440 iterations of an if statement.
I teach at a university in Texas! I also give projects in an aerospace class where we use matlab to predict orbits of satellites. There are lots of uses for matlab you just have to find the ones that interest you. 
Perhaps [this](https://stackoverflow.com/questions/9127160/plot-a-disc-in-matlab-color-varying-with-angle) could help?
This is the right answer. Use bang (!) to envoke your system shell. 
hacky solution I used... I put my fminsearch inside another fminsearch to see effects of starting input... 
Do you know your parameter ranges?
You can loop over a grid of starting values and choose the parameter combination that gives the lowest objective function value.
Thanks all!
You have the variable n inside the quotes. You need to move it outside the quotes. I think k you will also need to use a num2string operation on it
Use: title(['IMF ' num2str(n)]) Instead of the title command you used
Thank you, I changed it. You made my day! Yay!
For gradient descent, you need to re-run the function with different initial conditions. I’d recommend at least 5-10 runs. You then can use the run that has the best objective function. An easy way to randomize the initial conditions is something like unifrnd(lb, ub). This is slow — you can try to speed it up by writing a concise likelihood function, and parallelizing wherever possible (e.g., I think fmincon will take a parallel argument).
Lower/upper bounds? Yeah I have them.
If I'm sure, the global optimization toolbox utilize this method. How do you determine the starting points you put in?
You can then determine a set of initial parameters. Either a grid or using a uniform distribution over your range. This is a DIY multi-start method.
Ok, thanks!
I've only ever done this with some level of prior about what it should be. If you have parameter ranges, you could just put them in a for loop and let it run through all iterations and see how answers change. But I think it's a perennial problem with fitting is that you rarely know 100% if you are getting local or global minima. But I mean, what are you trying to minimise error with? If it's like, seeing how close a model fits to data...you could always feed the output of your minimisation, back into the function and see how accurate it is... you might not even need to do worry about minima. Alternatively, run it 1000 times with random inputs and plot the outputs to see how much it varies.
The combined X and Y grids from mesh represent unique coordinate points your grid. For example: X: 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 Y: 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5 You can put these into a function with element-by-element operations to get your function f(x,y) = z. For example, try sin(x+y) (after you normalize the coordinate to 2pi).
+ Ah yes duh... make the mesh before the function and use those grids to dictate the output... Not trying to jam it around after the fact. Thank you!
+
:)
Try consulting surf contour imagesc
the randn function will give a random number from a random normal distribution where mean = 0 and SD = 1. you can use that and one or 2 more calculations to find out where that fits into your distribution. hope that helps!
It’s a plane. Columns and rows are the tabletop, the value of the entries are the stuff sticking out from it. 
This seems to be almost exactly what you want. If you have your fem element data structure you can import it and make something similar. https://www.featool.com/tutorial/2017/05/08/advanced-matlab-command-line-postprocessing-and-visualization
There’s a whale sound that comes preloaded with MATLAB. Really funny to put that in scripts for unsuspecting users. That, and playing Bon Jovi’s, “Livin’ on a Prayer” when your program is halfway done is pretty great...
Take a look at the "random" function example on the MathWorks website - the argument is your probability distribution object, with the output being a randomly-generated sample from that distribution. Example: r = random(density_ndist); For 100 elements, pre-allocate an array and populate each cell using a call to that function in a for-loop! If it's a normal distribution though, take a look at the "randn" function instead. You can easily get everything you need in a single line of code.
Do you have a screenshot of your data. Also this a topic in active research and very hard problem. 
mp3 files and the `audioread()` function are your friends :)
Assuming you're not working with mouse music, a hard lowpass filter probably won't hurt. I would recommend looking into transforming your frequency space logarithmically into something where your "bins" correspond to every magnitude increase by 2\^(1/12) (a chromatic step), and then you should try constructing a matrix from logical vectors corresponding to different keys, and subject your data to that transformation. At that point, you could simply find the max entry, and that would likely give a good estimate of key. If you have questions about how to implement this more precisely or want any more explanation, feel free to message me. This is a topic I've worked with a fair amount in the past.
MATLAB does now automatically vectorize code for you. You get very little speed increase from removing simple for-loops
I assume you should point to the folder, not the binary
Every other resource decribes those paths... No idea! Haha I'll try the folder router. Cheers :) 
So you want to divide the sum of the first \*n\* elements by \*n\*. Matlab makes it easy to find the sum of the first \*n\* elements for all \*n\* (\`cumsum\`). Then you just need to do the division. You can make a vector that contains \*n\* for all \*n\* very easily with the colon notation, and then you just use vectorized division: cumsum(data)./(1:length(data));
Not quite. I need all of the sums of all consecutive elements of a certain length, then find the maximum of all of those sums and then average it through the length. I need to repeat this for every possible interval length (1s, ..., 10000s). Example for a 2s interval in pseudo matlab: data = [3 2 0 5 2]; sumsOf2Elements = [5 2 5 7]; maxOfSums = 7; avgOfMax = 7/2 = 3.5; For 3s: data = [3 2 0 5 2]; sumsOf2Elements = [5 7 7]; maxOfSums = 7; avgOfMax = 7/3 = 2.33;
Have you tried lsqnonlin or fsolve? The former which actually solve the system not just get stuck in a local minimum. What algorithm are you using? Since you bounds I would recommend trust region reflective.
&gt; e.g. in a timeseries (3, 5, 1, 3) I'd be looking for 1s: 5, 2s: (3+5)/2=4, 3s: (3+5+1)/3=3, 4s: 3. Well, mine does implement this.
You can actually run matlab code from VScode? I did't know that's possible.
What maps from one to the next? If they're different sizes they're not 1:1?
&gt; e.g. in a timeseries (3, 5, 1, 3) I'd be looking for 1s: 5, 2s: (3+5)/2=4, 3s: (3+5+1)/3=3, 4s: 3 I just looked at the example. Because of the one you chose, it looks like 1s=5 is a typo and the rest are the result of the `cumsum` version I posted. I guess that's not a typo, though. ***** Yours appears to be optimal in terms of counting FLOPs. I can't come up with a loop-free way to do it. There might be a tweak of Matlab to get it faster (the kind of optimization that might even depend on Matlab release), but algorithmically I don't think you can improve on what you have.
Probably on Mac/Linux, but not on Windows. I've struggled with this in my Windows environment for a long time. There's a key difference, where in Linux (and I assume Mac as well) the command-line version of MATLAB is actually a command line program, where as in Windows it's still a GUI but just stripped down. Therefore, the \*actual\* command line program you get in Mac/Linux can be embedded into terminals that run in other programs, like VSCode, Vim, etc.
Thank you! I'll give it a try!!
What can I say.... I'm ambitious!
I am using fmincon() for the optimization.
Yes but the other functions I mentioned may work as well? And what algorithm are you using with fmincon because there may be more than one option.
Wait are you telling me I can run python, c++, and Matlab from one IDE..... What a time to be alive. 
Yes... Mostly haha just need to correct packages installed :) 
&gt; Yours appears to be optimal in terms of counting FLOPs. I can't come up with a loop-free way to do it. That's what I thought. I hoped there was maybe some vectorization magic to compute it all at once. I guess I have to reduce my data amount by trading off precision to get faster. Thanks for taking the time to reply.
Tell Mathworks you'd like a trial. Tell them you licensed it in 2015 but were disappointed and you'd like to try it again now and see what's changed. They're really awesome about granting trials. 
Well the arrays don't have the same size and therefore you cannot store them in one **array** **However**, you can store them in one cell array You can go with something like: T{1,1}=IDs; T{2,1}=numIDs; T{3,1}=numGroups; Also if there is a value for each other value: &gt;so I can see which IDs match up to which numerical group Why aren't the arrays matching ? Is there is more than one ID to every numerical group ? More info about your task would make solving this much easier
I've been using it happily since at least 2014. Are you trying to make code to integrate into other hand written C? I use it to quickly make mex files for bottlenecks in matlab itself and it has really been incredible for that. Especially if you have the parallel toolbox, parfor loops get threaded in the c-mex which can lead to incredible speedups overall.
Hey sorry for the late response. Can you post a small segment of the signal? Maybe like 2 seconds? So I can see the structure? An easy thing to do would be to take the first differential of the absolute of the Hilbert transform (instantaneous amplitude) and sum it. Lubricated would have a far higher sum than non lubricated. 
FYI, use the meshgrid or ndgrid functions to generate the gridded points. If the point spacing doesn't matter you can also use the 1-input syntax mesh(Z), which uses a unit spaced grid for X and Y so you only lose a scaling factor.
If you’re only trying to draw a black box around the selected area, you could use imrect and rectangle. Something like: h = imrect(); % Select an area with the mouse and double click inside selected area when done. pos = wait(h); delete(h) rectangle(‘Position’, pos, ‘EdgeColor’, ‘k’) I personally prefer red or green edge colors on an intensity image since they’re a bit easier to see.
Thanks 
I think it's easier if you extract your region of interest (let's put it in 'a') and then outline that array with zeros a=I(min_y:max_y,min_x:max_x); a(1,:)=0; a(end,:)=0; a(:,1)=0; a(:,end)=0; img_grey_bw_box = a; The outline is only 1 pixel, but you can add a value 1+n and end-n to increase that
You can find part of Handel's "Hallelujah Chorus" and gong's data series as part of MATLAB's inbuilt sounds. You can also be able to load and use train and laughter files. The question was answered on MATLAB central: [https://www.mathworks.com/matlabcentral/answers/166454-how-do-i-find-built-in-sounds](https://www.mathworks.com/matlabcentral/answers/166454-how-do-i-find-built-in-sounds)
Many thanks, I'm a little late but I'll give it a try
I'm not sure what exactly you're trying to do? You want do create a third set of data with values between the first 2? If yes, create a loop from 1 to the last element and just take the mean value for each cell: for i=1:numberElements T_new=0.5*(T1+T2) end Or did I misunderstood your question? 
That's correct, only that the data is tied to a temperature value. So say, I have a plot for 100 degrees and one for 60 and I want to generate the line for say 90 degrees.
What are your x values and what are your y values ? Is T the third dimension here ? &gt; (Tnew-Tlower)/(Thigher-Tlower) Formula seems correct More info would be nice 
Fit a line, or equation, or whatever between the two data sets. They should be the same type of equation. Then find the "hallway" point in your parameterization of those lines. For instance, if you did a linear regression on each, and got two slopes, then use the slope smack dab in the middle. Same with intercepts, though intercept value choices can be way more impactful statistically speaking (need to make sure values are realistic and make sense). 
Thanks it helped 
Nope, what are the specs of your machine(s)?
Are your Mac and Linux systems on the same machine? You might have a bad RAM stick or something similar. I had this happen to me once a long time ago and had similar symptoms - random crashes that happened to particular programs/games. For what it's worth, I've been using Matlab on a near-daily basis for about eight years now and have never noticed any problems like you're describing, but I've also only ever used it on Windows machines. Also, FYI, there was an update several years ago now that caused all the graphics/figures to stack up if you were drawing them in a loop. The workaround is/was to invoke the `drawnow` command. That doesn't sound like your problem, though. Again, I'd try [memtest](https://en.wikipedia.org/wiki/Memtest86) or something similar to verify your RAM is correct. 
Two different machines. There still might be a problem with the Mac - in fact I would assume so if it weren't for the other computer with a different OS now having trouble as well.
Perhaps you can track it to a JAVA update? If suddenly things started to change, and you didn't change anything in MATLAB, see if JAVA updated recently. On my work machine, my MATLAB figures all started to crash. It was traced to a JAVA update which was incompatible with my graphics card driver. 
Looks like the website has been updated :
What have you tried? This is a pretty broad question that doesn't really have much to do with Matlab. You need to figure out a method for estimating MC runs given a measure of variance of your sample mean.
Build a loop and keep doing simulations until the output asymptotes within 95%
What kind of input are you using? The igamma function is sensitive to the data type you're using, namely the DIGITS environment variable. I'm guessing if your result is outside the precision range, that's why MATLAB may be crashing. Sticking with gamma(arg)(1 - gammainc(x,arg)) may be best
They couldn't have thought to remove that pop-up, unfortunately :(
Your graphics are terrible. Did you look at them after you posted them? I can't even see what your numbers are. Nothing's labeled in your "3d rendering" of the system, so I can't tell what is what. You've linked PICTURES of blocks that are masked, so I can't tell what your blocks are even doing. How are your sphercial joints set? In what frame is your output reporting, local or global? Did you notice your z-forces sum to maybe 100-ish (I can't actually read any of the numbers in your graphic), but you've applied a z-force of 1000? What does the system do when you run the simulation? Does it just fall over? It looks like this is part of a bigger system; I don't see a base/world reference frame anywhere, which would mean either you haven't shown it or your simulation doesn't run. If you need help, you need to post all the information. Without more specifics, everything's a guess. 
Thanks for your help. I had 0&lt; arg&lt;1 and maybe that was the issue.
Can you post your whole code?
I bet you're using degrees instead of radians
Hey, I apologize, that was pretty stupid, I am new to reddit . It's part of a bigger system (attached below) where i used rigid transform blocks to displace the joint blocks in the desired coordinates in reference to the world frame. The masked blocks just represent the suspension arms (represented as cylinder of 1cm radius and desired length, example attached). As for the joints, they report the force between the base and the follower so the wheel hub to the suspension arm. I hadn't actuated the system, which is why the z forces dont add up, but upon doing so they do add up to about 1000. The system doesn't noticeably move but when adding a frame transfer sensor you can observe some slight fluctuations (as it should). I am adding the extra graphics you discussed, if you have time to help I greatly appreciate it!
Hey @shtpst, I apologize, that was pretty stupid, I am new to reddit . It's part of a bigger system (attached below) where i used rigid transform blocks to displace the joint blocks in the desired coordinates in reference to the world frame. The masked blocks just represent the suspension arms (represented as cylinder of 1cm radius and desired length, example attached). As for the joints, they report the force between the base and the follower so the wheel hub to the suspension arm. I hadn't actuated the system, which is why the z forces dont add up, but upon doing so they do add up to about 1000. The system doesn't noticeably move but when adding a frame transfer sensor you can observe some slight fluctuations (as it should). I am adding the extra graphics you discussed, if you have time to help I greatly appreciate it! [https://imgur.com/gallery/wKpGjcP](https://imgur.com/gallery/wKpGjcP)
Hey, sorry for the late reply, I just wanted to thank you for this suggestion. I've found some resources and have been experimenting with different types of feature extraction using MIR techniques, and it looks like this is exactly what I was looking for, thanks!
Glad to hear it, have fun!
That’s what I did. It took me longer than I care to admit to get it to work(I was calling the function in the wrong place), but it works. It’s nice because I have been able to easily extend it to include other checks 
It's really hard to me to understand what you're after, but checking the size() of arrays or isempty() and such before processing can allow special cases to be handled differently.
Yeah I actually use audioread/write as a quick and dirty file converter when I wanna switch between audio files! Shame there's no mp3 support for write though
Indexing is when you call specific sections of a matrix/vector. ie: a = [10 15 20 25 30] a(1,2) returns *15*. You index with a(*x*,*y*). Where *x* = which row, and *y* = which column. If you where to index the above *a* with *a(1,8)* it will return that error message as the matrix dimensions of *a* are only 1x5, but you've called on a 1X8 index.
isempty() is how I check and utilize the try/catch block. What I am having trouble is figuring out what to do to handle it. The data doesn’t exist for this case so I am unsure what I should do to resolve the error for this specific case. Would I make the array equal to 1 or do I do something else? 
Make a fake dataset of the correct size using zeros or something. 
This would depend equally on your 3D printer software. Can it send triggers, and what form do they take? This kind of thing can almost always be done, but it's almost always a hassle. I'm not brilliant at this stuff, but I would write a third script which makes use of the Windows API to run both the 3d printer program and the matlab script. How important is timing? Does it have to be millisecond-accurate?
use cell2mat(cellArrayHere)
does each cell contain a 1x1 double?
Why does cell2mat not work for converting a 1298x1 cell to a 1298x1 matrix?
I imagine that the errors come from empty cells: the conversion can't happen because the dimensions don't coincide in the end for all the rows and columns. I would convert the empty cells into NaN, using cellfun, and then convert using cellmat
Well that is the thing it really doesn't have to be perfectly timed. I just want them to run at the same time for fanciness sake. 
I think so. For example, I have a cell A1 which is listed as 1298x1 cell. If I open it, I have a column of data in 1298 rows. If I click on an individual value within this list, it opens A1{1,1} showing that one number.
No joy. No empty cells found. Not sure what's going on here.
Great question-- not a clue. For some of these cells, if I use cell2mat I end up with a 1298x10 char. Otherwise I get: Error using cat Dimensions of matrices being concatenated are not consistent. Error in cell2mat (line 83) m{n} = cat(1,c{:,n}); Each individual 1298x1 cell is just filled with numeric data, I can't tell why some cells are behaving differently from others to begin with, let alone why cell2mat is having problems. 
Could they be cells of character arrays rather than numbers?
For one of the cell arrays, call it `A`, try doing this and giving us the result: disp(A(1:10))
Did you use the function below? cellfun(@isempty, yourcells)
I think he would want `any(cellfun(@isempty, yourcells))`
Okay, if I do this, I get a string of data that looks like: disp(A1(1:10)) '432.135' '432.136' '432.137' '432.138' etc Which is what this data should look like, just numerical columns. But the cell2mat works differently on different cells that should only contain different numbers, i.e. For some of these cells, if I use cell2mat I end up with a 1298x10 char. Otherwise I get: Error using cat Dimensions of matrices being concatenated are not consistent. Error in cell2mat (line 83) m{n} = cat(1,c{:,n}); :/ I'm on R2017a, which is probably part of my problem-- I'm used to &lt;=2015, so I think some of my syntax is odd. But this puzzle is new for me. 
It's possible-- I'm just pulling numbers straight out of a text file, so maybe there's a conversion error hidden here?
I agree, this does seem possible.
Correct, it gives you only a value.
So they are not numbers, they are character arrays, text. So it is a cell array of characer arrays, which MATLAB calls a cellstr. That text happens to contains numbers, but MATLAB doesn't know that. You can tell this because the numbers are in quotes. If they were really numbers they would look like this: &gt;&gt; disp(A(:)) [1.1000] [2.2000] [3.3000] The easiest way to convert them in recent versions of MATLAB is to use a string. So this should work: A1 = double(string(A)); This first converts the cellstr into a string array, then converts each of those to actual number.
I did-- I get: &gt;&gt; any(cellfun(@isempty, A1)) ans = logical 0 &gt;&gt; any(cellfun(@isempty, Int1)) ans = logical 0 :/
Oh! Okay, I didn't even catch the quotes, just was happy seeing my numbers coming up. Trying this now.
How are you pulling the numbers out, and how are they structured in the file?
I agree, probably a transpose issue. Another possibility is a function returning an empty array due to a bug. I've been bit by that before.
i'm confused.. cell2mat(cellArray) should work fine. can you upload your array as a .mat file somewhere so I can check?
Maybe with a listener of some kind?
Maybe with a listener of some kind?
Did you check also if they were all numeric? all(cellfun(@isnumeric, yourcells))
Looking at Intrinsic Mode Functions?
Yeap, try to extract human vital signs. I suppose you are also working. Empirical Mode decomposition, huh! 
Indeed! Finishing a publication and working on my thesis that utilizes EMD! Computationally expensive little bugger. Are you readily interpolating the vitals? Need a good 8 times the Nyquist rate for proper sifting and decomposition.
I didn't go through your code, but if you have a two vectors x and y in a plot of y vs. x: [val ind]=max(y); This returns the maximum value of y in "val", and the index at which it occurs in "ind". So the corresponding x value at y=val is x(ind).
What's a symprod?
Hımmm, in my algorithm, it doesnt take so much time to calculate. Are you talking about stoppage criteria? Or, am i misundertood? In my analysis, ı set the sampling period using my measurement time length. I do not need to apply 8 times of nyquist rate. 
It’s the product of a series. So, in the case of the example it’s $prod_{k = 1}^{n} 1/k*someArray(k) 
I just meant in regards to the cubic splining operation and time required to meet the stoppage criteria, in comparison to say a simple FIR filter - just a lot of resource use! And in regards to the measurement time length, take a look at this paper: G. Rilling and P. Flandrin, “On the influence of sampling on the empirical mode decomposition,” presented at the IEEE Int. Conf. Acoustics, Speech Signal Processing, Toulouse, France, vol. 3, May 2006 This iterates some of the importance as to why EMD requires oversampling. Definitely a good read!
Does this have to be in the plot? I'm not 100% sure I understand what you mean
Oh, thank you for good read. I guess, i am appliying very old version of EMD. There are many updates and need to catch up. Therotically, ı read Huang's famous paper that introduces hht. In my research, ı focus radar papers which uses hht as localization algorithm. Why do you apply EMD in your thesis? Again vital signs? 
Using it for similar biomedical anaylsis, yes! Matlab R2018a, the most recent edition, actually includes their own rendition of emd surprisingly! Take a look at the ASTRES toolbox as well, Flandrin et al. developed a project that contains multiple EMD flavors, including Ensemble EMD (EEMD). EEMD provides a solution to the mode mixing problem
Really? I uses 2017a. Need to use torrent skills😅. I guess, ı look at one of the flandrins paper. Do they have time frequency toolbox? Are you mentioning about that? I have a question for you. HT basically is for real signals, right? How can we obtain phase information in HT? The answer seems hidden in analitic representation of signals. Have any idea? Second question is, we assume first IMFs tend to higher frequencies. And, at vital signs analysis heartbeat has to be show up before breathing right? 
That function takes a range, so you should be doing 1:100, or what ever. But yeah, it will also not render if it is touching the edges, iirc. So either pad it or extend the range that you pass to the voxelise function 
Use a surface plot surf() with data in the spherical format using the command sph2cart() Use the help command to get the correct syntax. Yiu can nest the functions, surf(sph2cart()) I dont know that you can get any more direct than that.
[X,Y,Z]=sphere(20); surf(X(1:10,:),Y(1:10,:),Z(1:10,:))
Vertical not horizontal, in a way that it's only including the positive x values..
Make your index not exceed your matrix dimensions
How do you want the operation "indexing an array with a symbolic expression" to behave? 
You need to think about this problem a bit more. If you have an object that doesn’t match your desired orientation then you need to rotate that object. If you need to rotate things by 90 degrees about the global axes then this can be achieved by swapping the order of the (x,y,z) data and multiplying things by -1. Again, this depends on what orientation you need. Otherwise, look at rotation matrices. This is quite a simple problem once you think about it which is why no-one has spelt it out for you yet. 
Well the context is that the symprod is inside a for loop (which I know is really inefficient and probably bad practice...?) which increases n. But in each factor, I need to access a different element of my array. So basically I want Prod1 = prod_k=1^1 f(k)* someArray(k) Prod2 = f(1) someArray(1) f(2) someArray(2) ... ProdN = f(1)*someArray(1) f(2) someArray(2) ... f(n) someArray(n). Where f is my function of k. Honestly though, I’m not sure I understand symbolic expressions correctly.. I was operating under the assumption they were more or less similar to a mutable variable, like an int in java but not a string (if I remember correctly.. it’s been a while since I programmed aside from this). 
Or in one line: x(find(y==max(y),1,’first’))
So basically what you want to do is to take the vector, check the maximum value in it and then generate a 2-D cell array that has vectors of all the possible permutations between 1 and max ? Is that it ? A little more clarification would be better, also I don't see anything that has to do with factorials here ? Where does the factorial come into play ? Also there might be something wrong with what you wrote: \&gt; generate a k by n matrix \&gt; where each k'th column Did you mean k'th row ? 
It is similar to a full factorial of treatments in design of experiments. As a simple case, say I had the three vectors C{1}=[2,3,4], C{2}=[1,2,3], C{3}=[1,3], C{4}=[1,2,3,4] What I would expect out is [2 1 3 4 2 3 1 4 3 2 1 4 4 1 3 2 4 2 1 3 4 2 3 1 4 3 1 2] I think that covers it. To state it another way, I want the exhaustive list of rows that satisfy the following: If I have 10 lists, then the numbers that those lists can contain is 1:10. If I have x lists, then the numbers that those lists can contain is 1:x. Each row in my result must contain all numbers 1:x, and thus, because the length of each row is x, it must only contain each number once and only once. For an entry in my result, the values in a particular column, say 'k' MUST come from that list C{k}. So in the above example, the first Column can only contain the values 2,3 or 4. But each ROW must contain the values 1,2,3 and 4. I am looking for ALL possible ways that can happen in my result. Trying to come up with an algorithm that will hold regardless of the number of cells in C that contain my lists. 
`””` create [`string` arrays](https://www.mathworks.com/help/matlab/matlab_prog/create-string-arrays.html), which are indexed differently than `char` arrays.
What about the order of the column tho, why \[2;2;3;4;4;4;4\] and not any other combination ? Or do you just want it to be random like that ?
Try creating X = 'G1 F1500 X79.399 Y45.601 E18.21920'; instead of X = "G1 F1500 X79.399 Y45.601 E18.21920"; 
happy to see that the problem in the end was about the variable type. On this matter matlab can be really an issue 
You could try and reach out to MathWorks. There is a focus on MATLAB in primary and secondary education. https://www.mathworks.com/academia/highschool.html There are a few schools cited on that page that you may be able to contact too. Full disclosure, I work for MathWorks, but not in this area. Also not in sales :-), hope this doesn't come across as a pitch. 
Start with the scholarpedia article on spike sorting. Then look for a spike sorting package. I think KiloSort would perhaps be appropriate to your data. This is not likely to be an easy task, seek help.
I went to a fairly science heavy high school and we only had C++ and maybe a few other general programming classes to learn fundamentals. I think most engineering that you would do in Matlab is too sophisticated for anything before undergrad. There's really no need to use it as a tool to learn programming, since it's designed to bypass that and get you engineering results faster. Curious to hear what people say though.
I had a teacher in high school who used it in conjunction with Lego mindstorm sets for a class our junior year. I'll PM you his email if I can find it.
Sorry for the late reply - IMFs are actually meant for pre-processing the HT. They provide a different means of time-frequency analysis, namely for nonlinear and nonstationary signals. I've been using EMD as a pre-processing tool for separate reasons, away from the Hilbert Transform - I'm afraid I'm not well versed with the HT (yet!) The first IMF does indeed provide high frequencies, assuming the input signal contains high frequency content. Since EMD is empirical, the frequencies observed in the IMFs are data driven. For vitals, since breathing is a lower frequency than say an ECG, (tending to be closer to 40-60 Hz, whereas breathing is lower), viewing the FFT of each IMF may provide insight on which frequency range the breathing may be in. Note that because of the sifting process, the FFT amplitudes will be altered, due to the envelope extraction.
 I'm not a teacher. I'm a grad student. Having learnt multiple programming, languages, I won't be inclined to have kids learn matlab. Disadvantages Matlab: 1. The matrix handling is much more intuitive in python than in matlab [https://www.scipy.org/](scipy) removes restriction of the default 2 dimension behaviour of matrices found in matlab. The Scipy website summarizes scipy as &gt; ... a Python-based ecosystem of open-source software for mathematics, science, and engineering. Scipy seems to be inspired from matlab. Their graph plotting module is named matplotlib. 2. Matlab is paid software. Students may not be able to try it on their own at home unless the school gets an agreement to have 100% discount for personal computers of students. You can choose GNU Octave as a software with same syntax and functions as matlab that provides freedom to use it the way you want to without any stringent restrictions that come with academic licenses. 3. Literate programming essential to teaching new programming languages has its own limitations in matlab which isn't present in other free software alternatives like python due to the wide range of interest of users of python. 4. Matlab libraries (including ones that programmers write) can behave slightly differently in windows and unix due to the way the operating systems handle files with regards to case-sensitivity. 5. The IDE uses Java which is seems to be resource hungry. Advantages of Matlab: 1. Matlab documentation is very easy to understand, with detailed examples. 2. Matlab IDE has everything that a beginner would need. 3. Extensive help is avialable from peers. 4. The langauge has become so mature, that it has been borrowed in other languages or modules of other programming languages.
. The place I work offers education from 16 and above and I work in the engineering team. I’m a teacher and I do deliver some matlab sessions but most of those don’t fall with any students under 18. 
To elaborate further: If the data you're working with is in the format you say it is (data from each channel is the same size), what you have is data that has not gone through spike detection. Now, this is all assuming that what you're trying to do is detect and measure the activity of individual neurons. Doing so requires finding spikes (action potentials) in the signals for each channel, and then sorting them into groups representing different neurons (hopefully). Again, the Scholarpedia spike sorting article explains this in some detail. That article also explains how some kind of filtering step usually comes before spike detection.. I don't know if your data are already filtered or not, but if not you may need to filter each channel before going further. Anyway, the process of spike detection and sorting is fairly complex, and teaching yourself to do it via MatLab would take months at the very least (it took me the best part of a year). That's why I recommend using a pre-existing package like KiloSort. KiloSort is designed for data like yours, which comes from MEAs. KiloSort will make use of data from multiple channels at once, whereas many more traditional methods will do the sorting process to each channel individually, or at most in groups of four, which isn't as effective. Now, if your objective isn't to isolate individual neurons, then nothing I've said applies. But I rather suspect that's what you want to do, in which case everything you're doing so far is quite useless. I have no idea why you want to make a sparse matrix. I'm afraid it really sounds like you're chasing your tail. Incidentally, what is your background in neuroscience? Do you have a firm understanding of the basics of action potentials, etc.?
Software Maintenance Service is not available for the student version. The only way to upgrade the student version is to buy a new one.
Thanks, I hadn't found that yet and will have to reach out. I do like Matlab, but I don't want to just be pushing it like a sales guy, of course, either, so I'm just trying to see who I can find that might not be directly cited by MathWorks, too.
Right -- I agree that there are certainly other/better options for teaching programming. But I could see it used for kids messing with matrices, graphing, or covering certain basic math/engineering topics. I also know a lot of university engineers would find it nice if college freshmen knew some Matlab/Octave, so that's why I'm seeking the teachers out who might already use it successfully (or who tried it and it didn't work). Could be a dead end that I'm following, but I do want to investigate it at least.
I use it to analyze data from the FEL at Desy and reconstruct certain parameters of the xray Laser beam
Thank you very much for your reply. Would I have to buy all of the toolboxes again?
So I've got a student version of MATLAB and just got an email about renewing my software maintenance. It looks like it's $29 for MATLAB and $17 for any add-ons you might have.
Perfect. Thank you very much!
You could create a contour around the object in the image and redraw it into another image. Not entirely sure what you are trying to accomplish.
I'm just trying to get the mean rgb values of the object in the image which I plan to use for machine learning in the future. The white values just mess the computations up.
Just thought of a solution. I just multiplied the segmented image with each of the separate matrix for the RGB values since the segmented image contained only 1 and 0. Letting me get only the rgb values for the object.
Could be super useful for plot annotations, thanks!
I hope you enjoyed the post! This is part of a long running series on astrodynamics on my website. I don't always write about astrodynamics. Sometimes I write about the design behind everyday things, other times about the math behind the best way to pump a swing. Aka stuff that isn't a astrodynamics, but if you find this post cool, you'll probably also find cool. I have a subreddit where I post everything at [r/Gereshes](https://www.reddit.com/r/Gereshes) so you never miss a post! 
Will you be covering the fmm in your series?
It's on the list of topics I want to cover, but it's gonna be a while before I get to it. I try to sprinkle in a numerical methods posts with every few analytical n-body posts, but fmm is below RK and adaptive time step RK methods on my numerical methods list.
Great, I’ll be on the lookout for it!
Matlab typically accepts colors as either `uint8` in the range 0-255 or as `double` in the range 0-1. Make sure you're not mixing up these types and ranges.
Trials are definitely helpful to try out the new features. You can also use the[ What's new ](https://www.mathworks.com/products/matlab-coder/whatsnew.html) section on the website to see if the features you are looking for are available in the latest update.
Let me give you an answet that not only helps you with your question, but also with your matlab skill: read the [doc on min](https://nl.mathworks.com/help/matlab/ref/min.html)
Thank you!
I obtained time-frequency analysis with HT. Also, I applied FFT to each IMF to get frequencies. I am really happy to meet somebody who works at same topic with me! Felt lucky! Thank you for all remarks :) 
x = zeros(5, N, T);
Write a while loop- while true 'ask for input' 'convert input' end
[`ismember`](https://www.mathworks.com/help/matlab/ref/ismember.html)
Thank you!
So I just throw that inside my function?
No, that is psuedo code. If you put that in a script I am pretty sure it will just print 'ask for input' and 'convert input' until you hit ctrl+c. You should look into the inputdlg function (that would be the 'ask for input' portion of the code). I would suggest defining an escape answer that sets whatever your loop variable is from true to false, or that has a 'break' statement (e.g. 'Enter FPS or type 'q' to quite' as your prompt in your dialogue box). 
"string arrays" are different than 'character vectors'. In that first sentence, there is a 1x1 string scalar, and a 1x17 character vector. String arrays are relatively new. They are a lot like other arrays in MATLAB. When you have multiple strings, instead of having a cell array of character vectors (or a cellstr), which are awful to work with, the string array just has more than one element. Just use extractAfter() to operate on the string scalar and get everything after G. I also recommend you read a bunch of the topics in the doc: http://www.mathworks.com/help/matlab/characters-and-strings.html 
You shouldn't name variables the same name as your functions. Since variables are indexed using the same method as function arguments are passed, when MATLAB sees `xp(1,2)` for instance, it doesn't know if you are handing in 1 and 2 into the function `xp` or are grabbing the first row and second column of the variable `xp`. If you fix that problem, you might fix the `t` problem. Also, your function definition implies you are handing in `t` but at no point do you use it, it's just being assigned by the `ode` function. Are you actually handing in `t`? If so, are you hoping to use it somewhere? And if you're not, you're going to get an error because you defined your function to take it. 
Aha. Thank you!!
Think about what the error message is telling you. What are the sizes of y and z?
Matlab Cody is nice to get syntax down initially. After that I tended to have projects I was working on and would use Matlab Exchange and Stack overflow when I hit a problem. 
In the coursera website you can find a very nice course that will help enter and learning matlab
&gt;Also, your function definition implies you are handing in `t` but at no point do you use it, it's just being assigned by the `ode` function. Are you actually handing in `t`? If so, are you hoping to use it somewhere? And if you're not, you're going to get an error because you defined your function to take it. He has to follow the function prototype expected by the ode solver. This is just how it looks when a system of DEs has no explicit time dependence. 
If you are just getting started try MathWorks [free online tutorials](https://www.mathworks.com/support/learn-with-matlab-tutorials.html?s_tid=hp_learn_tutorials) 
translation\_vector are values -1,-2, -10 and similar negatives one. Is it correct the way I apply translation\_vector to translate images? If not how else can I apply that vector? I assume that it gets nasty with those values that's why images are capped at either 0 or 255. How else can I apply translation\_vector?
It's a bit hard to say without seeing the actual values. I also don't know what function you're using to display the images. `image()` and `imagesc()` both by default interpret the values in your array as indexes into the current colormap (`imagesc` scales the data to fit in the colormap).
From my experience you won’t reach continuous capture unless your DSO has onboard memory to capture the entirety of an experiment, and then offload the data afterward. If you can sample once every, say 20s, then it may be possible to sample-download-sample indefinitely.
I use imshow() to display images. I write it in my post. The txt file containing the displacement values why you need it? As I said, it's all values of negatives and zeros or positives like 1,2 but mostly negatives. It seems I cannot attach it to send it through here. Why reddit doesn't give that option?
Reddit doesn't have a file attachment option. You can head over to [pastebin.com](pastebin.com) if you'd like and I can take a look later. It's blocked at work so I won't be able to help until later this evening. Alternatively if you want to PM me I can give you my email address; I'll be happy to help.
&gt; pastebin.com Yes of course. Although, I copied and paste the txt content to my last comment here so I don't have anything else to send you. You can pm at stefanistas@gmail.com. Waiting to your mail then
Seconded. I found the MATLAB Onramp very helpful. After that I did some [ProjectEuler](https://projecteuler.net/) to put it to use, and then started just looking up things I needed as I needed them.
Your function definition seems a little off. ode45 expects a function as the first input, you can't just define a function as: `xp(1)= x(2);` `xp(2)= x(1)+(0.2 * (x(1))^3);` These lines would simply compute the value of xp for a given value of x. If I understood right, what you should do is first define the function xp(t,x). Then, you use ode45 to solve it. Something like this: Put this in the xp\_func.m file. (I changed the name as a function cannot have the same name as a variable) `function xp_func = xp(t,x)` `xp=zeros(2,1);` `xp(1)= x(2);` `xp(2)= x(1)+(0.2 * (x(1))^3);` `end` Now that your function is defined, you can call ode45 like this (either from a separate script file or directly from the command line) `[t,x]= ode45(@xp_func, [0,20], [0,1]);` Finally, you can plot the results with: `plot(t,x(:,1));` For more information and some other examples, check the documentation on ode45: [www.mathworks.com/help/matlab/ref/ode45.html](https://www.mathworks.com/help/matlab/ref/ode45.html)
data (k) is an array What you want to do to loop it into the matrix d is to use d{i}=data(k); When you do that, each vector in d will be an array of the data you wanted to record if you want them as rows go with &gt;d{i,:}=data(k); if you want them as columns go with &gt;d{:,i}=data(k); I hope this helps, if not then please explain the problem more to me 
This I've tried numerous times, however when I run it, it only gives me the data from the last file read rather than the whole set of ten files in a combined array. To give you insight on my project I have ten .xlsx files with numerous sheets and I'm trying to get one specific data point (cell) out of each spreadsheet in each file. So I need to get all these individual data points written into one array to plot. I feel like your method should work, but MATLAB is being finicky with what I'm trying to command it to do. Thanks for the help thought, and any future help.
Ah mate sorry I didn't see the loop inside the loop ! It's nested you should increment for better visibility In any case, I think there could be something wrong with your looping, is data (k) a vector or a certain value ? If it's a value then storing it in d(i) should be fine. If it's a vector then you should store it in a cell array d{i} where each element will represent the stuff in data(k) Check when the exit happens in the nested loop, and then check if you are only recording the last value. Also if you can pre-allocate the size of d and data that would be better for speed ;) 
I believe data(k) is a value, while k is a vector; what happens when the script exits the nested for-loop is the first set will save to d(i), then the for-loop will repeat with the next file and when that exits, it takes over what's within d(i) rather than merging with the present data. And sorry if my script and "slang" is somewhat hard to understand, I just picked up MATLAB a few weeks ago and practically self taught myself through Mathworks
Thank you for your help!
Aweweeewwwwssome! Thanks for the detailed help. Sorry for delay in response, temporarily forgot about the internet.
You are concatenating arrays: [nocyc' meansyx]
Ok, yeah I guess you are right. I am trying to write a file with the dlmwrite command. dlmwrite ('shstrsaver.dat',\[nocyc' meansxy\],',') The file saved will be "shstrsaver.dat" The arrays in this file will be "nocyc" and "meansxy" The elements in this array will be seperated by the following deliminator: "," nocyc is a horizontal array --&gt; \[1x521 double\] meansyx is a vertical array --&gt; \[2880041x1 double\] I want to transpose nocyc to be horizontal and next to meansyx Do you know why this error showed up?
Can I also have your email address? Thank you
Do the two variables have different number of rows? If so, that is your problem. I would concatenate variables first, and then call the write function. Then you can manage errors better.
If you do a horizontal cat, the row dimensions has to be the same. You're joining a M x N array with a M x O array.
if `nocyc` is [1x521] (1 row, 521 columns) then `nocyc'` is [521x1] (521 rows, 1 column). You can't concatenate a [521x1] with a [2880041x1]. If you want them all to be in one column, then you want to join them with a `;` not a `,`. If you want them all to be one row, then you need to leave `nocyc` alone and transpose `meansxy`
When you out the vecotor k inside data, you are referencing the points inside data by **index**. So for sure data(k) should not be a value it should be vector, this is given that you know what you are doing about k. What did you mean by takes over what's within d(i)? No problem about the English buddy, am not a native also And all of us were beginners !
Try [export_fig](https://github.com/altmany/export_fig)?
Basically, d(i) will change what its end value will be since the function won't stack every sequence of data(k).
&gt;Currently I have only been able to collect all the data from the last file read; since the d(i) keeps getting overwritten So when you try to see d(i) it's only giving you one value which is the one at the end ? 
It's turning out to be only the last set of values or the last vector read of data(k)
And you want only one specific point from data(k) or the whole vector to be stored in d(i) If you want the whole **vector** data to be stored in ** one element of d**, you need to go like this: d{i}= data; Then when the loop comes back in it will change **data** and all the **vector data** will be stored in one of **the cells** in the **cell array d{i}**. As a **vector** If you want only one particular value of data to be stored in d(i) then: d(i)=data(k); **However** make sure that k is the index of the element that you want to store it in d(i), so k cannot be a vector in this case like you said in another comment: &gt;k is a vector (this is two comments above) If not then find a way to get which element you want and store it in d(i), you can also go by specifying the element if it has a label and so on and so forth DM me if you want it's much faster
Sounds like a windows region/ keyboard layout issue. If you press (') and then (spacebar) it should give you a single quote.
Thanks for your reply, but I can't seem to find keyboards and languages when I go to intl.cpl. There only is information about country/region and nothing about keyboards.
Oh and if I type a quote and hit the spacebar it does not give me a single quote
If you want precise control of the axis location there's a nice add on I've used called [tight subplot](https://www.mathworks.com/matlabcentral/fileexchange/27991-tight-subplot-nh--nw--gap--marg-h--marg-w-). Additionally I usually use the export figure tool, make the background of the figure white and set the doing to 600 before saving the figure as a Tiff file. Then you can just crop it in word or Photoshop if need be. The only issue is when you need to use multiple axes on the plot you really want something like the tight subplot tool to keep figures sized exactly the same. 
Hey, since I'm at work I can't do email, so let's just do this here. I need a few things to help diagnose: 1. the values in `im2` (can you upload them somewhere as a .zip file?) 2. Is your translation vector the 15-by-2 matrix you posted above, where the first column is all zeros? I'm a bit confused because your code seems to access this as an array. How is your translation vector computed?
oops keyboard layout in windows 10 is in "windows settings" &gt; "Time &amp; Language" &gt; "Region &amp; language"
Just type `sphere` into the command prompt, and you'll get a 3D plot of a sphere. Alternatively, you can do: [X,Y,Z] = sphere; s = surf(X,Y,Z); If you want to alter the `X`, `Y`, and `Z` coordinates.
Yes my fault I should have said I was using Windows 10 However, I can't seem to change the keyboard anywhere
Ok I changed my keyboard settings to US, restarted my computer and now don't have the double quotes anymore. I do need to hit the (spacebar) every time I want to get a ('), where first I could just type a quote right away. Anyway, the biggest annoyance is resolved. Thanks Shippolo!
I don't know if this is the best way of doing it, but how I solved a similar problem was defining each face of the cube as a plane (normal and offset) and found where the line intersected the plane (unless they are parallel, they will intersect somewhere on the infinite plane, checking for it being parallel is trivial). Once I had the intersection, I just checked if that point was inside the bounding edges of the face by using a raycast algorithm
You can use the rotate tool in the figure toolbar after you've plotted the surface. 3D plotting has never been a strong suit of Matlab but it is possible.
https://www.mathworks.com/discovery/raspberry-pi-programming-matlab-simulink.html
Are you using LaTeX? In that case you can crop via `\includegraphics`: \includegraphics\[clip,trim=2cm 7.5cm 2cm 7cm\]{figures/plot.pdf}
Something that is also an option is running Octave on a raspberry pi - it can run MATLAB code (with a couple tweaks here and there). But yeah, it can be confusing. MATLAB itself I don't think runs on a raspberry pi, but MATLAB can compile programs for use on a raspberry pi.
https://www.mathworks.com/help/matlab/structures.html Just refer to the proper field to get the data you loaded.
Si, there is a compiled version of octave for raspberry pi? Can it also show figures with plots and all the rings and bells?
I would start by looking at what the fields of the structure are. You can look at the contents of each field by typing [structure name].[field name]
https://wiki.octave.org/Rasperry_Pi You can install it using sudo apt-get. As far as all the plots and rings and bells, *probably*. I can't give a 100% answer. 
Good news: MATLAB can almost assuredly solve this for you. Bad news: we don't have near enough information to help you. Are you hoping for a numeric or symbolic solution? Are the equations linear, polynomial, transcendental? Etc. Without more info, we can't really help 
If your equations are linear, here's a good place to start: [https://www.mathworks.com/help/matlab/ref/mldivide.html](https://www.mathworks.com/help/matlab/ref/mldivide.html)
By saying this, are you saying you want to learn to better harness the innate power of MATLAB? Or are you suggesting that you would like to analyze the development of the algorithms and code that make MATLAB work? In the first case, I suggest, depending on your interests, you look into a few things: * Object oriented programming in MATLAB * Construction of graphical user interfaces and dynamic programs * If you are familiar with C, look into MEX programming In the other case, I suggest considering a list of your favorite MATLAB functions, reading the documentation, and if its not precompiled, opening the function files in MATLAB to see if you can understand what its doing. If you want to understand the functions you can't open... some additional investigation may be required. If you are currently at the point where you are just finishing an introductory course in MATLAB, I imagine that you would still have a great amount to learn from simply reading the MATLAB documentation. Its truly standout as far as documentation goes! 
What could be the benefits of using MEX programing? Is it a lower level programming language?
Both, I am excited to learn everything, I always read the documentations in Matlab, they are really great. But for now I seek some sort of problem solving website or app in Matlab, to see if my skills are adequate to continue into deeper understanding.
Full disclosure--my experience with regard to MEX files is very limited. Per my understanding, MEX allows you to take C, C++, and Fortran functions that you've written, modify them to suit the MEX standard, and call them as if they were native MATLAB functions. If you're super adamant about using MATLAB for an application that implements a particularly frequent or demanding algorithm, you can gain some speed by opting to implement them in well-written MEX files. That said, it does require a good knowledge of aforementioned programming languages to do anything particularly useful.
The [MATLAB Cody Challenge](https://www.mathworks.com/matlabcentral/cody/problems) sounds about right. Complete all 96 katas and you will be ready, grasshopper.
Matlab is great as a prototyping language. However, it is not very portable, in that it can be clunky to try and get it to work on platforms such as the raspberry pi. I would recommend having a look at Python and the Python interface for OpenCV. There will be much more Raspberry Pi computer vision examples and documentation ouh there that you could make use of. 
I just sent you an email with everything you need in order to evaluate my programe. Waiting to your reply. Thank you so much. 
Hey thanks, I'll take a look tonight.
Oohh hey! Their site is filled with such goodies? Thanks! I am off to exploring.
[cd](https://nl.mathworks.com/help/matlab/ref/cd.html) already does what you want, and [addpath](https://nl.mathworks.com/help/matlab/ref/addpath.html) can be used to use functions in other folder. 
Thanks a lot! addpath worked perfectly.
You're welcome. Enjoy!
What are you trying to do? This post is vague. imfuse works with 2D images, either greyscale or RGB from what I can tell. If you have 3D images, you have a sequence of images. You can take two slices of that and imfuse them. TO buld on that, you can take an ordered amount two different slices (each individually), imfuse them, to create a 3D stack, or slice by slice from two different 3D stacks imfuse them slice by slice. You may see where I'm going from here, but 4D images typically have a forth dimensional component besides spatial location. You can imfuse all you like, but if you want a multidimensional stack (it looks like) you may have to reduce it down to a 2D image, imfuse it with another of your choosing, then build the multidimensional image slice by slice. So yeah you can do it, it probably isn't even that hard, but the way you do it may have to be slice by slice, and you're going to have to make sure what you're doing makes sense.
Sooo, I didn’t look too in detail into the code but some line saving tips in general would be to find ways to use vectorization where possible and take advantage of base matlab functions that can take vectors and matrices. I think a lot of your if statements in the loops can be done with logical indexing as well. Documentation for vectorization and linear indexing is generally pretty good. Also, you could take a look at the string datatype (assuming you’re using a more recent version of matlab). It’s possible your prof didn’t intend for it but I general would say to try using strings over characters where possible. Was just a cursory, here’s what first comes to mind with this type of question. Hope it helps. 
Are you new to matlab? If you are already familiar with matlab and would like to take things to the next level, I recommend undocumentedmatlab.com This guy knows more about matlab than some of the folks who work at MathWorks. He’s real fun to follow although be careful with his tips as they can sometimes get you into trouble. If you’re newer to matlab and looking for a way to get started, google “matlab on ramp” to get the free two hr tutorial. It’s a decent start to get your feet wet right away. I think others have mentioned already, but the matlab central pages are great places to get tips and tricks, especially the blogs: https://blogs.mathworks.com/ Good luck!
How do you mean when you say portable to platforms like raspi? I’ve used the matlab support packages for raspi for both matlab and simulink and they both seem to work very easily. Was there a different path you had in mind for getting matlab onto your pi?
The add on is free so if you already have matlab, you can download and use it right away. 
How is cloes stored? What kind of file is it? What is contained inside it? Matlab creates the struct by default as a way of protecting existing variables in the workspace in case the variables your loading overwrite them. The documentation shows a couple different options for loading in data that won’t auto create a struct. If you’re loading a .mat file, try: &gt;&gt; load(‘cloes’) Without assigning an output variable. If you’re loading a different file format, consider a different function (ie. for tabular data, try the function readtable)
I am going by OPs question and Matlabs own documentation. OP was looking to create an SVM on a raspberry pi. Mathworks hardware page specifies that you cannot execute MATLAB code locally on a Raspberry Pi. With python you can run a SVM locally, bypassing the need a host computer. 
it does work like that, thanks
&gt; with 2D images, either greyscale or RGB from what I can tell. If you have 3D images, you have a sequence of images. You can take two slices of that and imfuse them. TO buld on that, you can take an ordered amount two different slices (each individually), imfuse them, to create a 3D stack, or slice by slice from two different 3D stacks imfuse them slice by slice. Very interesting explanation. Actually yes. There are two 4D stacks and I need to imfuse them slice by slice and build one 4D stack that is the product of two stacks. Can you please give me code examples? Thank you.
Hmm... my experience with raspi’s are pretty limited, although I am definitely curious to learn more in this respect. It makes sense to me that you cannot run matlab code on a pi since the matlab engine is way too big. I thought they got around that by using code generation and packaging it up in the hardware support package so you can program in the matlab environment and then deploy directly to the pi? Or perhaps I’m remembering what I did with simulink and the process is different with the matlab workflow...
Great! Like I mentioned, be careful about what you’re loading in if you aren’t assigning it to a variable. I’ve lost variables in my workspace by accidentally overwriting them when loading in mat files...
Try out Onramp: https://www.mathworks.com/training-schedule/matlab-onramp.html
Nice tutorial. But definitely not unique to matlab. Numpy for python does the same thing.
Good video! Like really good video. We’ve all seen programming videos with a terrible mic, confusing examples, or poor speaking skills. But you knocked this out of the park! I could follow along well, somehow I never knew this existed. It will help me out in the future. Thanks!
sorry for such a late reply. busy with work. here is a sample: https://www4.zippyshare.com/v/S8zuytaJ/file.html
Try replacing the 2nd for loop with something like this. a = '31232.43241 ; 43143.43213; 4324.3241'; b = strsplit(a,';'); c = str2double(b);
Thank you! Unfortunately, I am running 2010 Matlab so strsplit is unavailable. However, I just requested 2017 from the company store as it seems that the newest functionality might really help me!
Fair point! I personally like to draw a distinction between numpy and python, whereas logical indexing is in the core of matlab rather than a toolbox or module, but indeed the functionality is certainly present if you go looking for it. In fairness though, that is true of all expansive APIs systems - there is more or less nothing python CAN'T do, just a question of whether it is well integrated into the language or you need to go hunting. Thanks for the feedback.
Glad to help :)
Logical indexing, array concatenation (or matrix replication), and doing basic operations on characters are going to be your friend here. Off the top of my head, you could make this much shorter by doing something like this: 1. use repmat to make the key as long as the message, or if it's not an easy fraction, concatenate the last pieces of the key on to the end, 2. make the message all lower case, but figure out where the upper case letters or special characters are (using isstrprop as you already are), 3. literally add the key to the message but modulo-ly, (play around with 'a' + 'b', or mod('a' + 'b', 'a')), 4. Use logical indexing to make the upper case letters upper case again, e.g.: index = isstrprop(mes, 'upper'); key(index) = upper(key(index)); You'd have to make special consideration for the spaces and punctuation, figuring out how to insert them into your key (everything would be much better if you could just ignore them though, again using logical indexing).
This is what the `load` command does implicitly. There are two ways to use `load`: &gt;&gt; load('cloes.mat'); will import all of the variables into the current workspace. &gt;&gt; C = load('cloes.mat'); will import all of the variables into a struct C, whose field names are equal to the original variable names. For example, if you had previously saved the variable `x` into `cloes.mat`, you can access it with `C.x`. Note that, because Matlab uses [copy on write](https://en.wikipedia.org/wiki/Copy-on-write), you won't really see a performance hit by doing the following sequence of commands: &gt;&gt; C = load('cloes.mat'); &gt;&gt; x = C.x; &gt;&gt; clear C; It's recommended to call the `clear C` command immediately, otherwise any modifications to `x` will result in the value `x` being copied before the operation is performed. An alternative is to use a `matfile` object: &gt;&gt; mat = matfile('cloes.mat'); &gt;&gt; x = mat.x;
**Copy-on-write** Copy-on-write (CoW or COW), sometimes referred to as implicit sharing or shadowing, is a resource-management technique used in computer programming to efficiently implement a "duplicate" or "copy" operation on modifiable resources. If a resource is duplicated but not modified, it is not necessary to create a new resource; the resource can be shared between the copy and the original. Modifications must still create a copy, hence the technique: the copy operation is deferred to the first write. By sharing resources in this way, it is possible to significantly reduce the resource consumption of unmodified copies, while adding a small overhead to resource-modifying operations. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
As an explanation to the other comment: think of the path as a list of places to look for a file or command. For example, if you have folders A, B, C, and D on your path, then any function located in any of those folders can be called directly using the function name. The current directory is *always* searched for. So if there is a file called "changeDir.m" that's located in folder C, then if you set your current directory to C, you can call `changeDir` without issue. However, if you set your current directory to D, then directory C is no longer visible--*unless it's in your path*.
This is a pretty non-trivial question: I'd recommend starting at https://en.wikipedia.org/wiki/Collision_detection.
**Collision detection** Collision detection is the computational problem of detecting the intersection of two or more objects. While collision detection is most often associated with its use in video games and other physical simulations, it also has applications in robotics. In addition to determining whether two objects have collided, collision detection systems may also calculate time of impact (TOI), and report a contact manifold (the set of intersecting points). Collision response deals with simulating what happens when a collision is detected (see physics engine, ragdoll physics). *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Trying using “hold on” right after a figure command in combination with subplots. The layout of the code would be something like: figure; hold on for i = 1:(# of times u want to update plots) subplot(1,3,1) plot stuff subplot(1,3,2) plot other stuff subplot(1,3,3) plot last stuff end This will keep the already existing plot images in each subplot present when adding the next plot. If this doesn’t work, i would try doing each subplot in its own for loop where right before the loop starts you call the subplot command and “hold on” and when the loop ends do “hold off”, then do the next loop. 
Can you describe what you want more? Are you looking for a subplot-like solution--separate axes in a single window, all visible at once? Or do you want each plot in its own figure, but with the figures positioned nicely so they don't overlap with other matlab components? Or would a tabbed solution work better? Or a solution that updates the figure based on elapsed time or keypresses? Matlab's gui architecture supports any of the above solutions (and more); some with very little extra work (subplots/different figure positions), some with a bit more work (uitab or the windowkeypress function). But it's not clear to me what you actually want. 
are these plots supposed to update, like an animation, or are you just trying to update specific figure windows, and you want three figures, and only three figures, with a new rendering each loop run?? For the second case, this might help: If you assign a handle to a figure, (i.e. figure(1)), you can address it and bring it to front/render to it. One way to do this is call your figures, pause the program, move them around manually, and resume. If you're calling specific figure handles their position should stay the same. *Or* you can change the figure's position when you call it the first time. https://www.mathworks.com/help/matlab/ref/figure.html (see the position property) 
When you do have &gt;= 2016b, consider using string for your text processing operations. There are new text functions that work with all text types but are especially fast for string: function profFunc a_char = '31232.43241 ; 43143.43213; 4324.3241'; a_str = string(a_char); n = 1E5; tic; for i = 1:n b = strsplit(a_char,';'); c = str2double(b); end disp("Old way:" + toc); tic; for i = 1:n b = split(a_str,';'); c = double(b); end disp("New way:" + toc); end &gt;&gt; profFunc Old way:21.7043 New way:0.83579 
You can try changing the plot data directly through the returned handle, hp = plot(1:10, rand(1,10)); %% for k = 1:100 set(hp, 'ydata', rand(1,10)); drawnow; end
s = struct; s.myfield = 5; x = 'myfield'; s.(x)
I think the solution you're describing is applied to my problem like this: x = data.(str(struct\_field)).X.Data; but that still gives me an error: Undefined function or variable 'str'. it's like MATLAB doesn't evaluate it before trying to get to the structure you tell it...
try this: data.(fieldname)(index).x.data
but fieldname isn't an array, it gets rewritten every time you go through the loop with the new name of the struct field
They are supposed to update like an animation. I have tried messing with the figure's position, but really the key is that i want to be able to keep working while the program runs. I can no longer type in the matlab editor or the command window
nevermind, I got it... I needed to use char() too to make it a character array from a string. thank you :)
then I would look at /u/bug_eyed_earl's comment regarding the drawnow command https://www.reddit.com/r/matlab/comments/8ym8q7/how_can_i_plot_multiple_figures_in_a_single_loop/e2cf5iy/
Your problem is likely to have no solution. Probably your look to solve constraints that have an empty solution set. For instance, if you want to solve x&gt;3 and x&lt;0 simultaneously, the solver will answer infeasible. So either you have a programming error (some constraint are not well written), a numerical problem(some values are not correct), or the problem may have no solution. 
For this kind of problem, I create manually blank figures and arrange them as necessary. Then I select each figure and get their position using get(gcf, 'position'). Note the 4 numbers vector on a paper sheet. You will need to do that only once. In the program, when you create a figure, you should use this code figure set(gcf, 'position', [xx xx xx xx]) ; And replace xx by the numbers saved on your paper sheet. Repeat for each figure. In the code, use plot or any graphical instruction to draw data, but do not close the figure (you may use clf instruction to clear a figure if needed). At the end of your main iteration, or when you want to display data, add a drawnow instruction to force Matlab refreshing the figure. Hope this will help. 
Briefly, what @seb59 said is true. I recommend to download this book: [Convex Optimization](http://web.stanford.edu/~boyd/cvxbook/) . It is free and is written by the author of cvx. I also recommend to check if you've written your feasibility problem correctly, as it stated in this book, see p.128. If that is your case, when the solution is INF, then the problem has no feasible solution, ie. it is infeasible.
you explained it better than what I've seen in many forums, thanks
If I understand your question correctly, then you are misunderstanding elseif statements. By design a following elseif statement will be skipped if any of the previous if/elseif statements have been met. In this case the line "if st&lt;=ks" is true, so matlab will execute that statement and skip the rest.
I would suggest talking yourself through your logic flow and seeing if what you have written makes sense. If the `if` statement is met then it's not going to then also continue to the `elseif` statement, that's the point of the `else` in `elseif`. If `ks &gt;= kb` then you're never going to get to the `elseif` statement as currently written.
That's what I thought, thanks for letting me know.
Oh, I didn't know that, and it seems this issue was bugging me for a while, and I was thinking that I am doing something wrong with the code but it turned out that I really need to go back to the basics, Do you have any suggestions on how to do this without the if , elseif statment, like if I can do another while loop for example? or simply put if statement and close it with end, and then put another one and so on? 
&gt; Do you have any suggestions Without knowing what you're trying to do, no. &gt; how to do this without the if , elseif statment Since they're a fundamental programming construct, you probably *don't* need to do this without them. Again, take a step back, [pull out your favorite rubber duck](https://en.wikipedia.org/wiki/Rubber_duck_debugging), and walk yourself through the control flow of what you want to do. The code will follow.
You should be able to use [MATLAB online](https://matlab.mathworks.com/) if you have a MathWorks account.
I have an account. But... Is this OK to run massive things? (I. E. A non parallelizable process that constantly access 1GB of data and runs for 2h on a dedicated xeon?) 
According to pages on the website [(here)](https://www.mathworks.com/products/matlab-online/limitations.html) there is a 256GBytes limit on files, so probably not. Another method should be to ask the IT department of your university to ask them if they can give you remote access to your computer or some computer with matlab on it.
https://www.mathworks.com/products/parallel-computing/parallel-computing-on-the-cloud.html provides parallel computing on the cloud. You can also explore https://www.mathworks.com/cloud.html
You might have access to a cluster computer; in the Netherlands there's LISA for instance. You can TTL in and run scripts, if they offer Matlab.
Does Simulink count? Cause nothing grinds my gears like bad Simulink.
Wanting to do something that requires an add on. Wish it was free :/
Lousy Unix (Linux) support, like issues with Java compatibility and video buffer.
If Simulink counts, I spent all of last semester trying to build and develop a test rig. The Simulink real-time kernel was apparently bugged because I couldn't get through one set of trials without the code bugging out and requiring a hard reset. Come to find that it was a known bug with no known solution for windows 10. we had to move to the windows 7 machine that we originally shy'd away from because it had a similar issue. The windows 7 issue was fixed with 2018a revision, apparently. TL;DR: I spent a whole semester getting shitty results on the machine I figured would avoid the real issue, just to have it actually fixed on the computer we avoided.
i fixed it using while loops, thanks
Worst experiences were due to bugs in the language, including some that result in memory corruption, or seemingly random results from calculations That said, I've always reported them and generally found tech support to be very good.
Really seems like they are trying to push you onto one of the dedicated real-time target machines like speedgoat or dspace. Sadly even those can have kernel bugs as well. 
The time I left inappropriate language in a comment in an important project...
You would be surprised how much stuff is available on the FEX. I needed something recently that someone had even C-compiled for speed. 
I haven’t done anything super advanced, but the worst is when I tried to preallocate a matrix so big my machine ran out of RAM, caused the music I was listening to to lag, and I had to hard reset the computer. I was trying to test the limits of my algorithm I’ve been working on...and let’s just say I found them.
I try to use a function. MATLAB website says it's okay. Coffee won't compile. Check for resources again. I found out the website offers the functions for 2017 My university uses 2016 so the function isn't valid yet. The archaic page on the matlab site for the older version seems summarized as they deleted many small parts out just to screw with me Also, screw the filter function. I had to make my own, more crude, way
Comment blocks in my EE lab reports tended to get sarcastic as my frustration grew. I don't swear, so instead I write detailed way of torturing myself and the computer I was working on. I forgot to delete those on none but one, and thank goodness the T.A. put off grading all the reports until the end of the year... 
Lol well sounds like that worked out for you. I got disqualified from a national design competition for dropping an F-bomb in my code. It was just some comment I wrote in the middle of the night while frustrated and sleep deprived and I totally forgot about it. When I pasted the code into page 56 of my report appendix, didn't bother reading through every single line again. Maybe I shouldn't write comments at all.
The code above replaces the R and P values at each iteration. You need to store these values at each loop. Something like this would work &gt;`Rk(k) = R;` &gt; &gt;`Pk(k) = P;` &gt; &gt;`clear vars R P` Matlab will also recomment you initialize them before the loop begins, such as &gt;`Rk = zeros(size(A,1),1); Pk = Rk;`
I learned C by learning MEX by reading the documentation for MEX... #sobcrysob
Several functions can't decide whether the order is x, y or y, x (i.e. row, column). Just have to memorize which prefers which.
Learning about the commercial price. After seeing the shittiness of some more "propietary" languages, I'm a little less incensed. The documentation, GUI, FEX, etc. are much better than some other languages.
Awesome. Thanks for your videos
When the new graphics backend ruined contourf. It made what was an efficient tool that generated small pdf friendly files into an ugly monstrosity. It forced me to switch to matplotlib. 
You're very welcome :)
Updating a GUI, created with a MATLAB GUIDE version some years ago, with a recent one. Utterly broken. In general, backward and forward compatibility is horrible with matlab, there was a good blog documenting it "AbdandonMatlab" which was shut down it seems which is a loss. (someone has a mirror of it?)
What happens is that your OS (windows probably) starts to do memory swapping, that is, pretend that a part of your hard drive is your working memory, and shit gets real real REAL slow. I "solved" this by limiting the maximum size of my swap file, so matlab just throws an out of memory exception in stead of lagging everything out to the point when restarting is the quickest option
handle.addlistener is funny in that regard. If you correctly call it on a property with "Set observable = true" set, but you call the listener with the {@function, argument3,argument4} notation, Matlab will ask for the "Data aquisition toolbox". Calling via @(x,y)function(..) will work though. If you write addListener, with a capital L, it will ask for the "Trading Toolbox".
Fascinating. That’s quite helpful 
When you buy the compiler toolbox, it only compiles binaries for the platform your MATLAB license is for. Want to compile for Linux? You need to buy a new set of MATLAB licenses.
There's a couple of ways. You can either convert it by hand or use the builtin [coder](https://www.mathworks.com/products/matlab-coder.html) tool. 
Armadillo is a C++ library that we've been using at work to convert our MATLAB code to C++ http://arma.sourceforge.net/
in my limited experience with Xeons, on a per-core basis they aren't all that great. obviously depends on what kind of servers you are used to, and what your laptop is using, but where they really shine is in parallel processing. i'd test your code on your laptop as you may be surprised by the results.
Can I pay someone to convert [IPDM](https://www.mathworks.com/matlabcentral/fileexchange/18937-ipdm-inter-point-distance-matrix)? Still the most useful distance function I've used over the years. And superbly fast on large matrices.
I don't remember the model (I'm not in the office on sunday :D ) but at the time we bought specifically processors optimized for non-parallelizable cores. They have few cores and very high clock. My notebook, instead, is not a laptop but a true notebook. One of those hybrids that's like 90% tablet and 10% laptop. It's really *really* slow (but battery time is like 9 hours)
I believe you can write to the index of an array as the output of a function. But I definitely recommend preallocating before the loop as you suggest.
why is matlab not offering directly that, that I have to limit this system wide? I had the same problem, and I'm frustrated that I have to castrate my whole system due to matlab... :(
MATLAB shouldn't ever cost *you* much money at all. If you're buying it for personal use, it's only like $99. If you're a student, it's even cheaper (or your school pays for it). The only time it's expensive is for business use, and then your company should pay. 
Just curious, what was the issue? 
Yeah like the other comment says, it’s cheap to get and for most people how need to use it, it’s already been paid for. 
This is why a lot of people are transitioning to python. It requires more initial start up, but better in the long run IMO. 
You are correct. The support packages work by leveraging code generation (MATLAB Coder and Simulink Coder) so that you can program in MATLAB/Simulink and then deploy to the pi or arduino or something else. 
I'm not entirely sure to be honest. The program would soft lock routinely within 5 minutes of a ~15 minute automated run of trials. I could still navigate windows but task manager wouldn't boot up to close Matlab/Simulink manually. I read online that people reporting similar issues with the real-time kernel were thinking that it was a bug in how Simulink handled CPU throttling for real-time systems. To my knowledge it hasn't been resolved on 2017b w/windows 10, but the related issue was solved on 2018a w/windows 7.
Hardly. Hey look my python solution does exactly what you’re doing. .... Proceeds to fuck around for roughly a thousand years and kinda produces a plot that looks usable. I love python, use it a lot, but it’s not matlab. 
+1. I mostly agree with that what your saying. I’m in the quant finance, algo trading / HFT field we use neither python nor matlab for research. (There’s a bit of freedom with respect to the choice of language but for the most part most use the same language). And that language is [R](https://www.r-project.org/). There also exists a very cool [R C++ Package ](https://github.com/Rcpp11/Rcpp11) that makes integration with real-time system architecture easy (or at least easier haha). Neither Python, R or matlab are fast enough for production level C++ HFT execution. [QuantMod](https://cran.r-project.org/web/packages/quantmod/index.html) [Caret](http://topepo.github.io/caret/index.html) [Zoo](https://cran.r-project.org/web/packages/zoo/zoo.pdf) [XTS](https://cran.r-project.org/web/packages/xts/xts.pdf) [ highfrequency: tools for high frequency data analysis](https://cran.r-project.org/web/packages/highfrequency/index.html) The popular [QuantLib](https://quantlib.org] library also has [an R version ](http://dirk.eddelbuettel.com/code/rquantlib.html). 
I do not know why you're being downvoted, this is 100&amp;#37; accurate in my opinion. MATLAB is a fantastic tool, but lets not pretend that its not by FAR more expensive to use in a commercial setting, and there are numerous Python libraries--numpy, scipy, and matplotlib being the most well known/standard--that, unless you are using some of the much more advanced features of MATLAB, make Python much more friendly to the independent user/open-source professional. Not to mention, libraries like [PANDAS](https://pandas.pydata.org/) make Python objectively superior for publication-friendly data visualization.
Oh, so in this situation was the real time computer the same as the windows computer? (Were you using Simulink Desktop RealTime?)
What's your target? if it's arduino or raspi, you could get the support packages ([https://www.mathworks.com/hardware-support.html?q=&amp;fq=hardware-support-vendor:raspberrypi&amp;page=1](https://www.mathworks.com/hardware-support.html?q=&amp;fq=hardware-support-vendor:raspberrypi&amp;page=1)). I believe the generated deployable program is not editable though. If you're looking for editable ASCII C++ code, MATLAB coder is probably the way to go: [https://www.mathworks.com/videos/generating-c-code-from-matlab-code-68964.html](https://www.mathworks.com/videos/generating-c-code-from-matlab-code-68964.html) Support packages are free, the Coder products need to be purchased. 
were you using an individual license? with an individual license, you should be able to install matlab on up to 4 machines. could have installed on a linux for all the products you were using and compile there. I think you probably didn't need to purchase a whole new set of matlab licenses in order to compile on a different platform
There has been an attempt to address this in the [Preference ](https://www.mathworks.com/help/matlab/matlab_env/set-workspace-and-variable-preferences.html)options in MATLAB (I think starting in R2015a?). in the matlab version i'm running (R2018a), you can set MATLAB array size limit to a percentage of RAM. I'm not sure if this helps in the use cases you encounter. If you're getting into severe out of memory situations, it may be time to consider some of the big data features in MATLAB like [Tall Arrays](https://www.mathworks.com/help/matlab/tall-arrays.html) or [Datastore](https://www.mathworks.com/help/matlab/datastore.html). 
have you come across the MathWorks page for academia? It's a good resource for educators teaching with MATLAB: [https://www.mathworks.com/academia/educators.html?s\_tid=acb\_edup](https://www.mathworks.com/academia/educators.html?s_tid=acb_edup)
Why R? I found the language very clunky, slow, and the tapply/sapply/lapply commands nonsense ...
what's your experience with parallel computing in MATLAB and creating and sending batch jobs? I'm not sure how it works from the payment aspect (i think you can just enter a credit card number) but you can try out the MATLAB cloud center: [https://cloudcenter.mathworks.com/login](https://cloudcenter.mathworks.com/login) its a pay by use, on demand service. I've sent a bunch of batch jobs particularly for deep learning applications since I don't have a good GPU at home. has worked pretty seamlessly for me. You'll need a license of the parallel computing toolbox (type &gt;&gt; ver in your command window, shows a list of your installed toolboxes) and a mathworks account (should already have one if you have a license). here's a link to [doc ](https://www.mathworks.com/help/cloudcenter/ug/getting-started-with-cloud-center-for-matlab-distributed-computing-server-mdcs-for-amazon-ec2.html)for getting started with the cloud center. you can always call tech support if you need help getting up and running with it. Hope this helps!
kind of hard to diagnose from just this. have you contacted support? they're pretty quick and helpful.
Don’t you guys use FPGAs for the actual trading?
How were they nonesense? apply family functions are very powerful. If you don’t know vectorization then they won’t make sense. In that case you’d likely be using a for-loop. 
dunno what you mean exactly by "actual trading"... but yes. FPGAs are popular however they are not fully adopted actually, and never will be. There is a great deal of pressure from larger companies such as Intel and Nvidia, to be either CPU heavy (Intel) or to build a system that is more GPU oriented (Nvidia, duh). For this reason these larger companies will cater to these financial firms to get them everything the need. Plus, FPGA developers are hard to come by and code maintenance is an utter shitfest, and debugging is worse (although I guess they are similar). Currently I am working on an extensive answer on StackOverflow regarding the current state of HFT FPGA systems, and also working on an open source stack for a complete high frequency FPGA-implemented trading application. I'll let you know when they are ready (if interested). 
Not everything is high frequency trading.
The time I studied python for one year before university, this was 7 years ago since I read the cost of Matlab. Then I came to uni. and they had it for free so I had to learn it anyhow.. Bummed out. PS. And then I started working as an engineer and my company realized how much it costed and are now running all computations of python code. 
Beacuse a personal licence is like 100 quid
I had the potential misconception that the algorithm was proven out in a language like R or Matlab but the implementation was ported to an FPGA. I am interested thank you. I work with many well disciplined FPGA developers...
Right but ... you can’t use that for commercial work. If all your doing is futzing around on your own time, then by all means pick what you like the best. 
If you use it for commercial it's still like 1 k which is very cheap for commercial software.
It's unnecessary syntactic sugar for a function that should be vectorized in the first place.
True. But if you're in a position where you are deciding whether or not to use MathWorks software for part of your project's development workflow and you have to review quotes and make the PO, it can still make you second guess your life choices. Like, do we _really_ need this stuff or should we just go the c++ / Python route like other people are doing?
With no toolboxes and no simulink. 
Yep, totally agree. Even when it is free in academia for personal use, there are hidden costs, i.e. the department need to pay to install them on workstations. And $99 maybe for the base package alone, if you need more toolboxes the cost start escalating quickly. Also it is impossible to develop scalable parallelized applications in MATLAB, for which one require [a license per user per node](https://wiki.hpcc.msu.edu/display/hpccdocs/MATLAB+Licenses).
Its 1-2k per seat, now imagine if you have a floor of 50 engineers/scientists... It can add up fast. 
You get discount volume license and if you think 1-10 k is alot for an employee tool you probably don't need MATLAB. It's cheap in the industry.
Hey, OpticalViewer, just a quick heads-up: **alot** is actually spelled **a lot**. You can remember it by **it is one lot, 'a lot'**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Dam you bot.
Still almost always less than 10k per seat.
I use Python to produce publication-quality plots every day. It would be a lie to say that Matlab isn't easier to use initially, but *after the initial learning curve* (which is a bit steep) of Matplotlib, it is no slower to use and arguably creates better images. I'm sure there are niche needs which one or the other is clearly superior in, but for general use I would agree with the person to whom you replied. It's not really a question of software capabilities, just learning curve (and maybe workflow preferences).
Python actually has access to libraries that reproduce Matlab plotting functionality. It's even called matplotlib.
I've got the parallel toolbox license (as an academic user I've got everything!). Until now I've seldom used the parallel toolbox. Generally by writing batches that run my programs (i.e.: inputList ={'file1.dat','file2.dat',...}; parfor i=1:20 veryLongProgram(inputList{i}); end ) But I could also make the longest step of my program parallel. I've tried connecting to that link but it tells me that I don't have the right kind of license and that I'd need to setup an account, and tell them what I'd want and many other things. It seems quite complicated
Trying to overload indexing in a MATLAB class I was working on. All I wanted to do was make a property in my class where the nth item in the property would be the corresponding property of the nth button in a matrix of buttons. So `obj.Value(1)` would be `obj.Value(1).prop`. It should be trivially easy, but it ended up being an absolute nightmare and I giving up after a couple days. The documentation and examples I could find was no help at all. MATLAB's oop is a mess in general, but handling indexing is a nightmare for anything non-trivial.
On one hand, I get it. On my team of 12 people, we spend $2000 a year per person simply maintaining licenses. When a new person joins, we have to drop a lot more than that getting them a new license. That is, in a way, ridiculously expensive. But on the other hand, labor is even more expensive. The average billing rate for the team I'm on is ~$200/hour, which means if MATLAB saves us 10 hours a year, it has paid for itself. For the great tech support alone I feed like I save more than 10 hours a year. 
Worse yet, they often (but not always) change behavior in certain special cases. One time someone came to me because his plots weren't making sense. After hours of stepping through the code I finally figured out that a small fraction of his results only had one trial in them. This led a function to wrongly re-interpret those trials as vectors, which was leading it the code silently doing the completely wrong math on those results. 
Hey, OpticalViewer, just a quick heads-up: Dam is actually spelled damn. You can remember it by it is one dam, 'damn'. Have a nice day!
Lots of open source C++/python devotees around here. None of them come close to being able to turn around a new idea with associated beautiful plots or animations as fast as I can. Not even close. I could just be that much better than them, but I doubt it. Maybe you can sit in a debugger and crank out scatter plots colored by data values to see WTF is going on with Matlplotlib, but I haven't seen people doing it (for example). I think Matlab cheapness is a penny wise, pound foolish thing. Besides the arguments made here already, people here also argue that the Python or Python/C++ is deliverable in a pinch, but with a Matlab prototype you've got nothing. True as far as it goes, but I can still beat you in total time to a C++ executable by getting my algorithms straight in Matlab first, then just porting to C++, instead of debugging algorithms in C++, which is a nightmare.
/u/half_a_lime for k = 1:size(A,1) vec = A(k,:); &amp;#37; each row of mat into vec \[R,P\] = corrcoef(vec, B) Pk(k) = R; Pk(k) = P; clear vars R P end I get this error : “In an assignment A(:) = B, the number of elements in A and B must be the same.” and R only has one R value and P only has one P value rather than all of them that should be returned by the loop
R and P will actually be 2x2 matrices for two input vectors. R will contain the correlation coefficients for (A,A A,B; B,A, B,B) so you will need to specify which value to store. Rk(K) = R(2,1);
Any luck? I'm running to the same problem myself (ssh to remote server, create tmux session, run matlab script that makes a system() call, crashes if I log back into the tmux session and resize)
Most of the research is done in R, you cannot write execution code in R (or python). For the purposes of running *backtests*, that’s where Python comes in handy as you can run back tests, market impact measures, etc. in a higher level language, and then once *that* is done, the algos are written down into C++, FPGA assembly, VHDL, etc. 
I actually mod /r/highfreqtrading in case you have any questions, feel free to reply here or post something there. 
However don’t take what I’m saying to be universal; all firms do their own thing but what I’ve mentioned is the basis for how stuff is carried out. 
/u/half_a_lime How do I get each one of the R values from each one of the comparisons saved in the same matrix? Not just one R value but all of the R values that are returned from the for loop.
I'm a bit rusty with symbolics in Matlab, but maybe try this: syms x y k syms s(x,y) w(x,y) f(x,y) s(x,y)=y/x; w(x,y)=x\*y; f(x,y)=s(x,y)\^2+w(x,y)\^2+k; dfx=diff(f,x);
Thanks everyone for your thoughts! Just don't fight, we are a big Matlab familiy around here!
 Thanks everyone for your thoughts! Just don't fight, we are a big Matlab familiy around here!
By the way, I’m working on a project that will help young engineer professionals and students to learn Matlab, and would love to get your opinion as a Matlab experts/learners. Here’s a link to the survey ([https://francisco458.typeform.com/to/TA6Ozm](https://francisco458.typeform.com/to/TA6Ozm)), it should only take a couple of minutes to complete and you can provide all your frustrations when using and learning Matlab. Really appreciate your feedback, thank you!
You only need one R value, since 2,1 and 1,2 should be the same, and 1,1 and 2,2 are just 1 since they're the correlation of a vector with itself. If you wanted to store the entire 2x2 matrix for whatever reason, you could do so with a cell array which can store objects (whereas an array can only store numbers). The code would be as follows `Rk{k} = R;`
I have managed to get that server upgraded from 2017a to 2018a, which does not have this bug. It seems to be specific to 2017a, so even a downgrade could solve the issue. One workaround I have found is that if you call system() again, it reattaches to the previous call. But it's very buggy and must be used very carefully as all future calls will actually run the command given by the previous call until you restart Matlab.
I will take you up on that. Thank you. Fascinating area...
Ah thanks! This seems to work! 
If you have the Statistics and Machine Learning Toolbox, you can do this in one line with the `corr` function: R_squared = corr(A','B).^2; If you don't, you're probably best off just grabbing the upper-left corner of each call to `corrcoef` within a loop: [N_rows, N_cols] = size(A); R_squared = zeros(N_rows,1); for i = 1:N_rows r = corrcoef(A(i,:),B); R_squared(i) = r(1); end
I think it's just called smooth in 2015, https://www.mathworks.com/help/curvefit/smooth.html
So "smoothdata" is both a pretty simple function, and kind of a complex function. It has a lot of optional inputs, and if you have to support them all it would be a big undertaking. But if you just need one smoother, it wouldn't be hard at all to implement. A moving mean filter is pretty straight forward [and you can see the equations here](https://en.wikipedia.org/wiki/Moving_average). 
Yes, if you have the curve fitting toolbox, this is the best way to go about it. 
If your matrix A is non-singular (that is, it's determinant is not zero), then you cannot enforce this. Only one matrix M satisfies this equation. Generally, it may or may not be symmetric - unless you know anything about matrices B and A. Is A or B symmetric? 
Thanks for your answer. Sorry, I just edited my question to add that I know that M is symmetric. A and B are not symmetric, and A is non-singular. So, if I understand right, there is no way that M can be symmetric in those conditions... That is strange... I'll edit my question above to add more detail because I rushed it a bit and more info could be useful...
If I remember well, backslash is actually very efficient and does several checks to see if there is some standard condition that simplifies the inversion.
If A and B are both matrices, then this is an under-determined system (there are n equations and n^2 unknowns), and thus the `/` is coming up with a solution where the sum of the norm of the vectors is minimized. You should be able to force MATLAB to give you a symmetric solution, but even so I don't think it will be a unique symmetric solution (say n = 3, then if you force your solution to be symmetric you still have 3 equations but still have 6 unknowns). To force a symmetric solution, I'd try something like using fminsearch. In this case, you would allow fminsearch to vary the (say) upper triangular part of your M matrix, and then force the bottom part to be symmetric, and iterate until the absolute value of M\*A - B is minimized. But really, looking at this, I'd ask how to get a deterministic system. Since your system is under-determined, any answer you find might not be correct. 
I see, thanks for your input. I'll see what I can do. Thank you
Not sure, but this could be of some help https://www.mathworks.com/matlabcentral/answers/86904-anovan-returns-nan-p-values
Have you checked what your index is?
Do you mean in terms of size?
In terms of its value.
1
This error is so clear that it's difficult to clarify it without repeating it. Indexes have to be positive real integers. What are you using to index Prices? Is it a real positive integer? 
There is no guarantee, in general, that solution will be symmetric. But I think that you might pose the problem the wrong way. Where do A and B come from? And why do you think you can get a mass matrix this way? I presume that you are solving and ODE M*(dx/dt) = A*x, then is your aim to recover M? 
okay so I think I need to use triangulation and then plug that into trimesh. [https://www.mathworks.com/help/matlab/ref/triangulation.html](https://www.mathworks.com/help/matlab/ref/triangulation.html)
I was effectively trying to recover M from an ODE. We use a proprietary simulation software which can give us the mass matrix but our dynamic results were inconsistent with the one of this software. We wanted to confirm that it was using a different matrix than the one it claimed to use. Effectively, in the end, it turns out it is doing some weird lumping.
okay I figured it out. np. now I am having some issues with the connectivity map, but no worries I will sort it out :) 
okay all is well now thanks if you looked 
How about creating an auxiliary 10x3 matrix containing RGB values that you want? Then just use the row number as the color index.
SVM can't be done on raspi? :( What if I created the svm on a pc and just passed the trained model to the raspi? I just learned how to make a simple svm on matlab earlier with \[this\]([https://www.youtube.com/watch?v=lbNrlwV6Lj4](https://www.youtube.com/watch?v=lbNrlwV6Lj4)).
Quiver3
You can call most of the colormaps as a function. For example, C=jet(5) Returns C= [0 0.5000 1.0000; 0 1.0000 1.0000; 0.5000 1.0000 0.5000; 1.0000 1.0000 0; 1.0000 0.5000 0]
While ... drawnowb... End 
I honestly do not see how you can recover M this way. Is x a true state of your ODE? Are you sure the system is linear? How do you know A and not M? Remember that if M is invertible, then inv(M)*A with unity mass matrix would result in a completely equivalent system.
This was kind of a fucked up issue. I had assumptions based on the documentation and the help support of the software but those pieces of information were just not right. This secrecy and obfuscation are really making us lose a lot of time. To answer your question, we have A, we have B, and we have M. And we know it's is a linear system. The issue is that those terms are not matching at all and the editor is just trying to make us think we don't understand the system. I'm not a master in numerical simulation but when I multiply M by A and don't get B while the documentation says `MA=B`, I just feel something is wrong and that they try to obfuscate their shitty code... This is the reason while I was trying to get back M which was supposed, based on the doc, be symmetric. Sorry for the monologue, I'm a bit bitter because we lost quite a lot of time with this... (arguing with the support, not even on the problem)
perfect, thanks!
Make sure non of them are doubles and/or less than one. That simple.
Try hitting space instead of enter? 
I was skeptical, but that does work. Thanks!
tic help toc help ginput help inputm help waitforbuttonpress help use an if statement and it seems like it should be pretty manageable, albeit i didn't write any scripts to try it Good luck!
what are you trying to do? 
only import data?
Import EEG data, and eventually analyze using EEGLab.
Yes, there are a lot of ways. You could start a timer when the first click happens. See documentation for Timer object. You could record the wall clock time of the first click and second click and then subtract them. See functions etime and clock.
Usually B refers to input matrix: M*dx/dt = A*x + B*u, Where u is an input signal to the system.
Thanks for your response. My data is a list of stock prices, several of which are less than one....would I need to tweak the code to allow for 0 (when stock prices are unavailable) and values less than 1?
Thanks for your response. My data is a list of stock prices, several of which are less than one....would I need to tweak the code to allow for 0 (when stock prices are unavailable) and values less than 1?. The Map value for SD is just the number 1. 
Thanks for your response. My data is a list of stock prices, several of which are less than one....would I need to tweak the code to allow for 0 (when stock prices are unavailable) and values less than 1?. The Map value for SD is just the number 1. 
Ok but isn't tic and toc only used to measure the performance of the code, not an actual action? I need to time how long it takes a user to perform an action themselves...
Try downloading the second most recent version of eeglab. That worked for me once when I discovered some bugs in the most recent update at the time.
tic and toc are used to measure the execution *time*; all they do are record the current time (tic) and subtract that from some later time (toc). If you use an argument with tic, e.g. A = tic; then you can even record that start time yourself in "A".
Did this and no error messages! Still crashed importing data though. Trying to import a .easy file from a NeuroElectrics system.
How big is the data file?
Yes the index has to be an integer value more than zero.
You could try using ginput, which prompts the user to click on a figure, then put a toxic statement after the ginput so that it returns the time that the user clicks.
Ok. Can you explain what a toxic statement is?
Sry, I meant to say “toc” but it was autocorrected
Ok thanks!
What would it mean to chose the 0.5th element from a list? 
thanks.. that is exactly what I want. But how can I use it in conjugation with trimesh? 
MyCell(MyIndices,:) = []; I reccomend reading the MATLAB docs on indexing and working with cell arrays.
CellArray{row}=[];
[removed]
sprintf
take a look through these; inputdlg, fopen, fprintf, fclose. It should only be about 10 lines if that.
 for i=1: interval:n plot(x(1:i,1),y(1:i,1)) hold on scatter(x(i,1),y(i,1)) % highlighting most recent point end If you want a comet tail highlighting the most recent X number of points, that's also possible but requires an if statement or min/max.
uisave
So this first bit works ok? You just want to select the same row from second matrix?
&gt;So this first bit works ok? Yes &gt;You just want to select the same row from second matrix? That is correct.
D=SecondMatrix (Temp, :)
This works, thank you!
no prob
Sounds like you have a dependency in your Matlab code that can only be found in your local working directory. 
Well then if that’s the case I know exactly where to look. I must not have moved the external function to internal as successfully as I thought. Thank you so much! I know where to look and will report back with any additional questions. 
That’s what it was. Needless to say though while I knew where to look, fixing it was only solved by testing it in a place without source control.
I'm not sure then :/
Sounds like you have never heard of being self employed?
Sweet. Most version control solutions will have some built-in functionality for updating dependencies residing in places other than the working directory 
`lsqnonlin` and `fsolve` are made for different purposes, but in the case where your data is "perfect" (that is, it is simply a set of equations), then they will essentially do the same thing. `fsolve` is for solving a set of equations, like what you have. It's what I'd expect you to use in this situation. `lsqnonlin` is a numerical solver used to fit data. It is designed to work with noisy data. If your data had noise in it, `fsolve` wouldn't work because you couldn't actually drive the solution to zero. That's why `lsqnonlin` minimizes the square of the error, so that it gets the error as close to zero as possible. If you don't have any noise, the least square error is zero, thus the same as `fsolve`
Incredible! I also have a noisy set so I will try it with that.
Add the baudrate to the fopen arguments instead of using set. Also try adding a pause(3) after you open so that you give time for the arduino to connect. 
Downvote right off the bat? Geez
[It sounds like you want to use the text() function.](https://www.mathworks.com/help/matlab/ref/text.html)
Thank you, but I'm dealing with very large number of values and I dont know offhand what the differences are (in the order of 100s to 1000s), so i can't just type them in. The difference has been calculated by matlab, but I don't know how to display it.
You can use the differences your script calculates as input to text(). For a specific step, k, you can use text() such as: text(x_val,diff(k),num2str(diff(k))); where k is the index of the diff you want to display where x_val is the x position you want to display the difference at. Unfortunately, I don't have access to your specific data, so this is the most advice I can give. Your steps may be different width, continuous, etc. You'll have to come up with your own method of determining when a different step occurs. This should dictate what x value the text should start at. For a fixed width case, you can use the condition: abs(diff(k)-diff(k-1)) &gt; eps to determine when you have a next 'step' and then use that index (k) to reference your x axis at that point. You'll have to determine the value of eps for your application.
This is a good start, thanks! I'll do my best.
Good luck! I think I may have given you some wrong advice in thinking that 'diff' was your own variable as opposed to the diff() function. I don't quite know your level of MATLAB (or programming) experience so I'll add where I'd start with this using your code: diffs = diff(x); % Save the differences in a variable 'diffs' plot(x) grid on hold on plot(diffs); % Plot the saved diffs plot (a, x(1,a), 'go') % lower bound, or t1, of difference between t1 and t2 plot (b, x(1,b), 'ro') %upper bound, or t2, of difference between t1 and t2 eps = 1e-5; % Change this value accordingly. It should be smaller than your expected step differences, but larger than any 'noise' for i=1:length(diffs) if(abs(diff(k)-diff(k-1)) &gt; eps text(i,diffs(i),num2str(diffs(i))); end end hold off Note I did not test this, so there may be a formatting error or two.
Your X ranges from 0 to 40, and you have n equal to 20 or 40. In your function, it needs to calculate the following: * factorial(n) * factorial(X) * factorial(n-X) * pi\^X * (1-pi)\^(n-X) Most of those are fine, so long as n and X are positive integers. However, \`factorial(n-X)\` requires n to be greater than X. When you call X=0:40 and n=20, then n-X will be negative for half the X values. Try plotting X=0:20. For the third plot, you may need to change X=0:40. A more elaborate function would check for X&gt;n, and assign some appropriate error value to Y.
I thought about the first solution, but the assignment asks me to put all three plots in a same graph.. how should I check that? I added that for X=0:n but it’s not working... thanks a lot!!
You can change X between the plot commands: ... plot(X, my\_bionomialpdf(X, 0.5, 20), 'b') hold on plot(X, my\_bionomialpdf(X, 0.7, 20), 'g') X=0:40; hold on plot(X, my\_bionomialpdf(X, 0.5, 40), 'r')
A good way to check on dependencies is described here: https://www.mathworks.com/help/matlab/matlab_prog/identify-dependencies.html There is a nifty function for listing dependencies too: https://www.mathworks.com/help/matlab/ref/matlab.codetools.requiredfilesandproducts.html
Thanks! upgrade to 2018a solved it for me too 
Thank you！
Check out the fminsearch function. Basically you need to find those values of your three parameters that minimise the least squared error between your evaluated function and your data. 
I came across fminsearch in my quest to do this, but I still don't really understand how to use it.
This sounds like you need to be precise, and tic toc is inaccurate. Download psychtoolbox, use GetSecs
When you plot something you want to delete later, keep the handle for that object e.g ‘h=plot(...)’ - most Matlab plotting commands will return a handle sub as plot, scatter, patch etc. Then later on, just do ‘delete(h)’ to remove just that object. More generally though, for animations you might want to update the data associated with the handle rather than deleting it and making a new object - for instance, you might update a scatter’s XData and YData to move the points around. This approach tends to be much faster and thus animations are displayed much more smoothly 
Can you explain what you mean that tic toc is inaccurate? 
Here you go - https://www.ini.uzh.ch/~ppyk/BasicsOfInstrumentation/matlab_help/math/example-curve-fitting-via-optimization.html This is a tutorial. Try this, and post your code here. And then I can help you by going through it.
Too variable if you need ms precision. If you need a rough estimate it's fine
You'll need to add a call to uiwait() at the end of your opening function (and a call to uiresume() in your Closed_Callback())
I agree most of the examples of using `fminsearch` aren't very clear- especially when you want to use it to fit noisy data. I'll try to give you the basics: Using `fminsearch` is a two step process. The first is you write a function that calculates the error of a fit given parameters. This function has nothing directly related to using `fminsearch` it is just "using these parameters, what is the sum of the squares of the error between the fit and the data?" So this function you write will take in your raw data, your fit parameters and return the error. The second step is calling `fminsearch` and telling it which parameters it is allowed to change in order to improve the fit. Since it can only be one variable, you have to put all of your parameters into a single vector, and then tell `fminsearch` "change these parameters as much as you want to minimize the error." It then takes care of the rest, and finds the best values of the parameters for your problem.
Thanks! This makes a lot more sense. How would I write a function that calculates the error though?
Here's a simple on. Say your data is a collection of x's and y's in an nx2 array, and you want to fit it to the function of the type `y = a*x.^2 + b`. So in this case, 'a' and 'b' are your parameters you want fminsearch to change. So, you would put them both into one vector, say `parab_params` and then your code would look something like this: function error = calc_parab_error(data, parab_params) a = parab_params(1); b = parab_params(2); y_parab = a*data(:,1) + b; dy = data(:,2) - y_parab; error = sum(dy.^2);
Thanks! Adding in uiwait() and uiresume() got me partly there. However, i had to get rid of my *close all force* command, because that was force closing the gui before the output function could re-evaluate. How can I make that button close the gui? I've tried delete(hObject) but that deletes the close button itself instead of the whole gui window. 
I don't really have much experience with simulink, but see this link which may help: [https://undocumentedmatlab.com/blog/serializing-deserializing-matlab-data](https://undocumentedmatlab.com/blog/serializing-deserializing-matlab-data)
&gt; I have tried using a PID controller and mat labs' own predictive longitudinal driver block set, but both have problems where the driver overshoots the corner, and essentially doesn't brake in time That sounds to me like your loop isn't tuned correctly. Did you tweak the parameters or [tune it automatically](https://www.mathworks.com/help/slcontrol/automatic-pid-tuning.html)?
i used the PID tuner but was never able to get it to work in a manner that i thought was acceptable, had a lot of error, ie undershoot and overshoot. One thing i forgot to mention was that the track has a lot of tight turns that transition to straightaways, ie the max speed goes from high( 100+ mph), to quite slow(30 or under) in a fast span of time. That is why I was looking to apply some sort of "look ahead" function, as I don't think the PID even tuned properly would be able to handle the various changes in speed, but correct me if im wrong 
i used the PID tuner but was never able to get it to work in a manner that i thought was acceptable, had a lot of error, ie undershoot and overshoot. One thing i forgot to mention was that the track has a lot of tight turns that transition to straightaways, ie the max speed goes from high( 100+ mph), to quite slow(30 or under) in a fast span of time. That is why I was looking to apply some sort of "look ahead" function, as I don't think the PID even tuned properly would be able to handle the various changes in speed, but correct me if im wrong 
https://www.mathworks.com/matlabcentral/fileexchange/6649-byteview
First off, if you put 4 spaces in front of your lines of code they look like this and is much easier to read. But, to try to help. You seem to be hung up on the `handle = @curve` part. That is describing how to make an [anonymous function](https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html) in matlab. Say, for instance, your curve was y = x^2 + 1, then in matlab you could create that function by saying y = @(x) x.^2 + 1; Now you can pass `y` around like it is a variable. And then any array of `x`s you pass into it, it will evaluate. Does that help you understand? Is there somewhere else you're stuck?
Try downloading and installing drivers directly from nvidia if you have not already done that. Also, first use the software ”display driver uninstaller (DDU)” to remove the old ones. 
My drivers are downloaded directly from NVDIA。Even thougn,I should uninstall my drivers?
 My drivers are downloaded directly from NVIDIA。Even thougn,I should uninstall my drivers? 
If this is a driver related problem it can help to reinstall them. Just make sure to use DDU rather than the built in uninstaller since it will do a more thorough clean-up of anything that could cause the trouble.
Based upon what you're describing, I assume that your initial track map has x position,y position, local radius, target local speed, and time steps between each point as its parameters in a matrix. I'll refer to this as a "track map matrix". As the car approaches a new x/y position, it uses that local speed as a set point to determine whether it should be accelerating or braking. I'm not sure about how complex your vehicle dynamics model is, so I'll simplify and call the limit of your vehicle's acceleration as "available traction force". The maximum discrete acceleration or acceleration in a straight line is (available traction force)*(time step). I'll call this the "speed delta". In most racing series (damn you formula D) a driver must brake on a straight prior to corner entry so they don't exceed the maximum speed prior to sliding. Drivers will know where these braking zones are ahead of time rather than try to predict them on the fly. You can do something similar by adding braking zones prior to corners within your track map matrix. Try to run a loop that compares your local speed to the previous local speed in your matrix. If the delta between your two speeds is too high then your vehicle will overshoot and that previous local speed needs to be reduced so that it is equal or lesser than the speed delta. Run this loop over your entire track map matrix and you've now created braking zones. I hope this helps. TLDR; add braking zones into your original matrix of speed setpoints.
Sorry for the confusion! Not only am I new to matlab, but I'm also new to reddit. Your suggestion helped me a lot, so I thank you for that. My last question for this assignment is trying to plot the x and y values. With my code, I keep getting an error. I've tried moving things around, but I've gotten nowhere. Could you help me find the problem please (I hope this is allowed. If not, I'm sorry)? `function [AreaSim]=A61(Curve,Range,NOP)` `x=1.5:5;` `y=@(x)(3-4*x.^1.2+x.^1.5);` `Range=1.5:5; %range professor gave us` `x=0; x=x+1;` `AreaSim=(Range)*(Curve/NOP)` `%x=1.5:5;` `plot(x,y)` `end`
As a rule, when you get an error in MALTAB, tell us what the error is. Also, read the error, it is normally very descriptive. That being said, your error is caused by you redefining `x`. So when you plot x and y, x is just a number while y is a vector. So, two other things I've noticed: Since `curve` is an input to your function, I think you're supposed to use that as your anonymous function, not re-define it inside as `y`. Also, are you sure your range isn't supposed to be `1:0.5:5` ? Also, I don't think your `AreaSim` equation is correct 
Oh good memes. Everybody likes memes
Congrats on figuring it out!
Whoops sorry again. Thank you so much for helping! I was able to get it to plot something and I literally cried tears of joy once I saw it. Now in terms of my equation, my professor never specifically gave us one, so I kind of manipulated an equation he used in a lecture video. I'll go back and rewatch the video to fix it. Thank you so much!!! :)
If your for loop said i=1:10 it would loop from 1 to 10 inclusive. You're asking it to run from 1 to imax, yet you have not defined imax.
Thanks for the response! I see what you are saying; naturally I should run it from 1:6 if I only have six rows. How do I get it to run for as many rows there could be? I intend there to be hundreds when I have the complete data set.
That said you're changing ridgesdata as you loop through it, so you'll likely end up reading the data you've already changed. I know it's not helpful but I really think you need to read a basic introduction to programming so you understand the basics, this kind of stuff is common to all languages really, not just MATLAB. 
I now have this error: Subscript indices must either be real positive integers or logicals. Error in lar\_test (line 13) ridgesdata(i,2) = ridgesdata(2i-1, 1)
i=1:size(ridgesdata,1)
Heh, I very much agree with you! My professor, however, doesn't see it that way; he insists he has already provided me enough information to understand the problem, but it is obvious I do not (hence my frustration, and enormous gratitude that you folks here are willing to help me out). Should I change the new "ridgesdata" I am trying to make into another variable like "ridgesdata\_2" ?
Thanks! What does the "1" indicate in the (ridgesdata,1) ?
Which dimension you want the size of. You can type “help size” in the matlab terminal to get function help. 
Look at ridgesdata in your workspace. Is it an array like you expect or a file object? What is returned from size(ridgesdata)?
Yes you should use a different variable. But it's not the understanding of the problem at hand that is the issue here, it's basic programming concepts!
Consider the value of 2i-1 when i=size(ridgesdata,1). Again, I really think you need to take a step back and teach yourself the basics of variables, arrays and loops for general programming. You say you're on a PhD program, presumably you've done some kind of coding in the past? After that you'll need learn the very basics of MATLAB, e.g. how to look up help/documentation on a function, whether MATLAB array indexing starts at 0 or 1, and how to find the size of an array, etc. Google "MATLAB introduction", looks like there are loads of documents, web pages and videos available.
Not first party support, but [we're trying to work it out now](https://github.com/StackOverflowMATLABchat/mlapptools/pull/20#issuecomment-406880955) if you're interested.
Professors tend to be horrifically bad at programming. Shamefully so. I say this having worked through a year long independent study during my physics undergraduate, writing code that ended up in the trigger logic of one of the detectors at CERN; then working with various scientists during my masters in optics with a concentration in computational imaging; then spending 10 years in industry, working with, hiring, and training the graduates of PhD programs advised by these professors. Certainly there are exceptions, but the archetype professor of hard science is worse at programming than most high school students, and arrogant about their skill. 
You can do whatever you can imagine, so long as you can represent the animation with code. Just iterate through the points sequentially after plotting the encapsulating sphere in 3D
Use the sphere function to draw a sphere to your liking. Use scatter3 or whatever plotting function you prefer to draw your data. 
It is nearly always much faster to avoid loops in Matlab. Try this: % load with test data ridgesdata = [ 1.1, 1.2; 2.1, 2.2; 3.1, 3.2; 4.1, 4.2 ]; % reshape the data into an array with an index ridgesdata = [ (1:size(ridgesdata,1)/2)' reshape(permute(ridgesdata, [2, 1]), 4, size(ridgesdata,1)/2)' ]; Carefully unpack that last line. Make sure you understand what it is doing before showing it to your prof.
The meat of the script should be placed in a function that can then use `return` if conditions are met. https://www.mathworks.com/help/matlab/ref/return.html
Cheers - but do you know how I would actually make it so the script is constantly looking for the escape key being pressed?
You'd have to either map the esc key to act as a Ctrl-C macro, or set up some sort of listener (overkill, Matlab isn't really designed for that). You're better off programmatically detecting conditions which indicate the script should be ended, then ending it. You could place things in a while-true loop, or a for-loop, or follow the advice as in my first comment
2i is an imaginary number of norm 2. Said otherwise, 2i == 2 * sqrt(-1). (It’s a language think, ni with n integer means n times the imaginary unit) You probably want two times the value of your variable i, you have to write that 2*i, with the multiplication operator * 
This seems to have done the trick, thanks!
Most of my PTB files have a for or while loop that flips at close to the screen refresh rate. I usually include a keyboard check for a specific key (like esc) and either set a flag and use that as one of the loop conditions (e.g., ```run_loop = true; while ~run_loop; run_loop = false; end;```) or ```break;``` and after the loop have some graceful cleanup.
Do you have a presentation loop? Just throw a [KbCheck](https://en.wikibooks.org/wiki/MATLAB_Programming/Psychtoolbox/KbCheck) (I would link to (docs.psychtoolbox.org)[docs.psychtoolbox.org] but it doesn't seem to be responding) into it to loop for the specific key. Avoid Ctrl-C if you can, IMHO.
Hi, thanks for your reply. I am afraid I am at the real rookie level here so maybe I have misunderstood but doesn't KbCheck just check whether any key is down at that very moment? Being new to this all I don't 100% understand your second suggestion. To give a better picture here is a (very) rough outline of my script: % start experiment Open screen and get participant number etc Wait for a key press to begin task for i =1:n \[x,y,z\] = presentTask (a,b,c) end Write x y and z to results file Where would the while loop go/what would it actually look like? Sorry about the basic questions its just that I am new to this and finding it pretty confusing!
Or if you have an example you could share that would be great, thanks
Mathworks could decide that isn't a valid use-case and prevent it any time, for example by including some invalid HTML that their embedded version of Chromium is patched to deal with. It wouldn't be the first time they have broken undocumented features people rely on because they didn't want people using them.
This is one of the few instances where `eval` is rather useful. Let MATLAB parse the string for you a='(0.0, -5.0, 0.0)' % remove bounding parenthesis and replace them with brackets a = ['[', a(1+double(a(1)=='('):end-double(a(end)==')')), ']'] % convert to row vector a = eval(a)
Actually, this is the first I've ever done any real coding (aside from utterly rudimentary html for web design, but that hardly compares with the complexity and power of true programming like in MATLAB); my B.S. an M.S. are in geological sciences, concentration in field geology. My PhD program is in planetary sciences, and I am analyzing topographical data from the planet Mars (which is a dream come true!) to understand certain tectonic processes there. Other than working on this project with my professor with the guidance for coding he has so far given me (which he insists in sufficient for my ability to work the problem, but I disagree as you also righly do!), the only training I have done is this MATLAB Onramp tutorial: [https://matlabacademy.mathworks.com/R2018a/portal.html?course=gettingstarted](https://matlabacademy.mathworks.com/R2018a/portal.html?course=gettingstarted) Based on your recommendation, I have gone through most of this tutorial again today for a second time, and it makes a lot more sense this time. I now have a much clearer handle on some of the basic terminology and operations (can you believe my professor has repeatedly dissuaded from doing any tutorials at all, and cajoled me just to "play with the code" in order to learn? — I am certain this advice will become fruitful when I have more experience, but experience I sorely lack!). Would you recommend any other such courses in particular given my current level of ignorance? I appear to have access to all these tutorials: [https://matlabacademy.mathworks.com](https://matlabacademy.mathworks.com)
Ah! I understand what you mean. size(ridgesdata) returns "6 2," meaning 6 rows and 2 columns. It is an array. Thanks for the guidance with these terms!
Thanks for your help. Using your tips, I was able to create a script that fits the function and does what I need it to do for the most part. However I still am a little confused because it is not always reliable. For example, it works well when my fminsearch parameters are as such: [https://cdn.pbrd.co/images/HvKxpeWM.png](https://cdn.pbrd.co/images/HvKxpeWM.png) However if I change the 3rd element in the array in the arguments (what I understand to be where it starts testing out parameters from) to 2 instead of 1 it produces this: [https://pasteboard.co/HvKyUgB.png](https://pasteboard.co/HvKyUgB.png) In the first instance, the optimized parameter is around 138, whereas in the second instance, the parameter is optimized to be around 2. Which doesn't make sense to me. If it starts at one and goes up, shouldn't it encounter 2 along the way? What makes it stop when I change the parameter like that? Changing it to other values produces different results with different R\^2 values, for some reason. Also my script plain just doesn't work for some data sets. This for example: [https://pasteboard.co/HvKA6bG.png](https://pasteboard.co/HvKA6bG.png) It seems to me it should at least produce some kind of curve. Here is my driving script: %% TransmissionFit.m %% clear; clf; set (0, "defaultaxesfontname", "Calibri") flip = "No"; [fname, fpath] = uigetfile(); % Reads in Y-Data Ydata = dlmread(sprintf("%s//%s", fpath, fname),','); knife_edge_fit(Ydata); flip = questdlg("Flip Data?", "Flip Query", "Yes", "No", "No"); if (strcmp(flip, "Yes")); Y = max(Ydata) - Ydata; knife_edge_fit(Y); end And the function script: %% knife_edge_fit.m %% function knife_edge_fit(Y); % FIXME: X will have to be an actual mm measurement from LabView X = 1:length(Y); % The transmission equation with 3 parameters y_calc = @(b,x) (b(1)/2)*(1 + erf( (sqrt(2)*(x - b(2))) / b(3))); % Calculates the Sum of Squares due to Error. SSE SSE_fnc = @(b) sum((Y - y_calc(b,X)).^2); % Uses the fminsearch function with specified starting points to find the % parameters for the transmission equation that produce the least error. params = fminsearch(SSE_fnc, [0, 0, 1]) % Generating fitted curve with optimized parameters yfit = y_calc(params, X); % Calculating R^2 SSE = SSE_fnc(params); SST = sum((Y - mean(Y)).^2); Rsq = (1 - SSE/SST); % Taking derivative of the fit sigmoid. dy = diff(yfit)./diff(X); dx = X(1:end - 1); % Graphing original data figure(1) plot(X, Y, '--', 'color', [0.13 0.55 0.13], 'linewidth', 2); hold on % Graph Labels and Legends [ax, h1, h2] = plotyy(X, yfit, dx, dy); xlabel('Step #', 'fontsize', 14, 'fontweight', 'bold'); ylabel(ax(1), 'S21 Transmission', 'fontsize', 14, 'fontweight', 'bold', 'color', 'k'); ylabel(ax(2), 'Intensity', 'color', 'k', 'fontsize', 14, 'fontweight', 'bold'); [hleg, hobj] = legend('Fitted Transmission', 'Raw Data', 'Intensity', 'Location', 'East'); grid off set(hleg, 'position', [0.68, 0.5, 0.2, 0.1], 'color', 'w'); title('Transmission Fit', 'FontWeight', 'Bold', 'FontSize', 20); set(ax(1), 'ycolor', 'b', 'fontsize', 14); set(ax(2), 'ycolor', 'r', 'fontsize', 14); set(h2, 'color', 'r', 'linewidth', 3); hold off text((max(X)*0.70), max(Y)*(0.25), sprintf("R^2: %f\nWaist: %.2f steps", Rsq, params(3))); end
Thanks for your response, TFJ! Let me see if I understand this code: ridgesdata = [ 1.1, 1.2; 2.1, 2.2; 3.1, 3.2; 4.1, 4.2 ]; You mean these just to be example numbers, right? Please pardon my naive question, I want to make sure I get everything going on at this early stage. 😅 ridgesdata = [ (1:size(ridgesdata,1)/2)' reshape(permute(ridgesdata, [2, 1]), 4, size(ridgesdata,1)/2)' ]; This command gives exactly the desired result! But, as you recommend, let me see if I can unpack it. The square brackets indicate that this will be some kind of an array, specifically a row vector instead of the matrix I had before. (1:size(ridgesdata,1)/2)' I recognize that the apostrophe is transposing the vector. The colon operator specifies the start and end points. When I put size(ridgesdata,1) into the command window, the result (now that I have used this code you recommended) "3 5," which I understand to be three rows and five columns. Therefore, if I have perceived what has happened, the (1:size(ridgesdata,1)/2)' part is giving us our first column, numbering from one to as big as the data set will be, and then using the apostrophe transposes the default row vector this would otherwise make into a column vector. Neat! Does the number 1 in (ridgesdata,1) indicate that we mean to isolate the rows and exclude the columns? Okay, next part: reshape(permute(ridgesdata, [2, 1]), 4, size(ridgesdata,1)/2)' When I clear the command window and enter just permute(ridgesdata, \[2, 1\]), I get the original first column in row 1, and the second column in row 2. As for reshape, I understand a reshape function like A = 1:10 B = reshape(A,[5,2]) will change the array identified by variable A from the 1 to 10 row vector with default spacing of 1 into a 5-by-2 matrix named variable B. So the above reshape command is saying, let's reshape this thing, and here is how we will do it: and it will have dimensions of 4 rows and a number of columns defined by the size(ridgedata,1), which means the maximum number of rows there will be, and that number divided by 2; and instead of this being a row vector, the apostrophe makes in a column vector. So this means that we divide the number of rows in half, I think. Have I mostly understood this? I am a little fuzzy on the end; I might need to find a way to rephrase it to see if I really comprehend what is going on. Thanks again!
You are absolutely right, CL! As I wrote below, redoing the basic tutorials per your recommendation has helped profoundly to crysallize certain terms and concepts. Thanks to your advice and that of the other friendly folks here, I have finally got something that nearly works: for i = 1:size(endpoints,1) ridgesdata_new(i,1) = i ridgesdata_new(i,2) = endpoints(2*i-1, 1) ridgesdata_new(i,3) = endpoints(2*i-1, 2) ridgesdata_new(i,4) = endpoints(2*i, 1) ridgesdata_new(i,5) = endpoints(2*i, 2) end The endpoints variable was previously defined above and already has the data I needed. I have allowed the "ridges\_new" variable to print to the command window, giving me this for just two profiles across the map: ridgesdata_new = 1.0000 21.9009 143.2255 145.5507 42.4781 2.0000 56.7765 214.1219 278.7120 31.2839 3.0000 0 0 0 0 Index exceeds matrix dimensions. Error in lar_test (line 14) ridgesdata_new(i,2) = endpoints(2*i-1, 1) So, it's almost there! But for some reason I have an extra 3rd row (I always get an extra row no matter how many profiles I take). I am trying to figure out how to get rid of it; adding a " -1 " to the " for i = 1:size(endpoints,1) " doesn't seem to be doing it.
What about creating a 3 dimensional array? You could put all data into a 59,000 x 40 x 18 array. And if you need a variable to contain your conditions, measurements and (main or secondary) you can create a 18x3 cell where the first column contains the conditions (a string probably), the 2nd column contains the measurement Nr and the third column contains "main" or "secondary". This 18 can of course be variable.
yeah this is my current approach and I was hoping there may be a slightly nicer way. Im wondering if maybe my lack of experience with data sets of 42 million elements is just making me over worry lol
Why are you worrying? :) This is a genuine question, I'm interested!
I might be misunderstanding, but why couldn't you just create a nested struct? Something like `s.main.measure1.cond1 = x1` etc. In total 18 of those matrices will only be about 300 MB so it isn't too bad.
mostly I live by the mantra of "simple is key" when it comes to anywork in matlab. The more I stray away from simple collations of data the more I start to get nervous. Luckily, past this stage of analysis I will be back to simple vectors of single numbers, rather than this time series analysis. But I'm just making sure I future proof this code as much as possible as I will definitely be using it agin for different data sets 
The "simple is key" mantra is indeed a beautiful one :) If you come across any other idea, let me know. I love to learn new stuff! Have a nice day and good luck with the rest of your project!!
Having a big array stored in a structure is fine. Think of it like cells. Having a 59,000 x 40 x 18 cell where each cell is a 1 x 1 array is no good, but having 18 cells each with a 59,000 x 40 array is completely fine.
I don't quite understand the description of your problem, but in almost all cases, the proper replacement for eval is either a cell array or a struct (or struct array). In a cell array you can have an indexed list of other data, so instead of using eval to create var1, var2, var3, etc. you have a cell array var{1}, var{2}, var{3} . Structs are more complex but very powerful. Read the documentation on them. 
mean(A(A(:,3)&lt;0.5, 3))
thats it! thank you
awesome thankyou
Instead of structs, consider using a table. Slightly less obnoxious to index, and you can do nice things like "sortrows" on a table.
You might need to use a Shift modifier with VK_MINUS
You got the code that works. If you're interested on how to do this, [this article](https://blogs.mathworks.com/loren/2013/02/20/logical-indexing-multiple-conditions/) is excellent. 
42 million is really a tiny amount of memory. Until you hit a billion (about 1 gb), use the solution that is the easiest for you. If you want to label your variables, consider organizing the data so you can use [tables](https://www.mathworks.com/help/matlab/tables.html)
Try removing hold on?
You should use a nonlinear optimizer. https://www.mathworks.com/help/optim/ug/unconstrained-nonlinear-optimization-algorithms.html
Try something like addpointsObj = .... . . . delete (addpointsObj)
~~This is not possible directly as far as I know.~~ Solution 1: grab the data via cmd out (look in the matlab documentation, link below) which works for e.g. some numbers (smaller sets of data) [https://www.mathworks.com/help/matlab/ref/system.html](https://www.mathworks.com/help/matlab/ref/system.html) Solution 2: write the data from python into a file and load these in matlab (e.g. "load"-function, depending on the given data) Solution 3: use python out of matlab [https://www.mathworks.com/help/matlab/call-python-libraries.html](https://www.mathworks.com/help/matlab/call-python-libraries.html)
To run Matlab programs with the Matlab runtime on your server without a license requires you to compile your program with the Matlab compiler which costs extra. I'm not sure if there's a foreign function interface for pi-matlab but you could get away with calling your Matlab program from cmd line and formatting std out as your web response.
I tried removing it, and it didn't allow the animation to loop, it just created a new figure for the animated line.
matlab won't allow me to have a variable equal to addpoints. I did add = addpoints(h,0,0,v) and it threw an error saying that the method does not exist.
Thank you!
Thank you for the suggestion...it worked. I ended up developing this into a bit of a more advanced function - I think all the special keys are dealt with properly, as are capital letters. You can also execute batches of commands and/or multi-line commands with a single function call by splitting up the commands using char/string/cellstr arrays. As a small token of my gratitude, you are welcome to use it if you would like. the code is bellow. function myJavaRobot(commandStr) %% uses the java.awt.Robot class to type the char/string in commandStr % commandStr can be a char vector/array, a (u)int vector/array representing a char vector/array, a cellstr array, or a string array. It should be 2D only. % The different lines of text will each be entered, followed by pressing the enter key to execute each line sequentially % Multiple lines of text can be entered withoutt pressing enter inbetween (instead shift+enter is pressed) by excapsulating an array of strings or cellstr's within a cell array. % % % For these, the outermost cell dimensions will correspond to 'enter' (i.e., execute command), and the inner cell/array dimensions within each cell will correspond to 'shift+enter' (i.e., multi-line command) if ~exist('commandStr','var') || isempty('commandStr') || ~(ischar(commandStr) || isstring(commandStr) || iscellstr(commandStr) || isa(commandStr,'integer') || (iscell(commandStr) &amp;&amp; (all(cellfun(@iscellstr,commandStr)) || all(cellfun(@iscellstr,commandStr{:})) || all(cellfun(@isstring,commandStr{:})) || all(cellfun(@isstring,commandStr))))) % commandStr is missing or invalid. Return without doing anything return end if ~usejava('awt') % dont have java awt. Return without doing anything return end % get type of input if ischar(commandStr) inputType = 1; % char elseif isa(commandStr,'integer') inputType = 2; % integer representation of char elseif isstring(commandStr) inputType = 3; % string elseif iscellstr(commandStr) inputType = 4; % cellstr elseif iscell(commandStr) &amp;&amp; (all(cellfun(@iscellstr,commandStr)) || all(cellfun(@iscellstr,commandStr{:})) || all(cellfun(@isstring,commandStr{:})) || all(cellfun(@isstring,commandStr))) inputType = 5; % cell array containing string or cellstr arrays else % something strange happened return end % import/create a java robot to automatically keep shift focus by executing the command(s) in 'commandStr' import java.awt.* try myRobot = java.awt.Robot(); catch return end % check caps lock. If it is enabled, temporairly disable it if Toolkit.getDefaultToolkit().getLockingKeyState(java.awt.event.KeyEvent.VK_CAPS_LOCK) % Toggle caps lock myRobot.keyPress(java.awt.event.KeyEvent.VK_CAPS_LOCK); myRobot.keyRelease(java.awt.event.KeyEvent.VK_CAPS_LOCK); capsLockToggleFlag = true; else capsLockToggleFlag = false; end % ensure commandStr is not more than 2D if any(inputType &gt;= 3) % input is string or cellstr. Convert to column vector, since every element of a string/cellstr array is a line of text (or possibly a char array for cellstr's) commandStr = commandStr(:); elseif numel(size(commandStr)) &gt; 2 % treat all dimensions other than dimension #2 as indicators of an enter symbol. Permute/Reshape the array to put all these into dimension #1 commandStr = reshape(permute(commandStr,[1,3:numel(size(commandStr)),2]),[],size(commandStr,2)); end % get number of individual commands to execute numCmd = size(commandStr,1); % setup replacement keys for characters that need the 'shift' key cmdStrLowerMod = '~!@#$%^&amp;*()_+{}|:"&lt;&gt;?'; cmdStrLowerMod_rep = '`1234567890-=[]\;'',./'; % Clear any text in the current line by commenting out the current line and then pressing enter % shift focus to the command window commandwindow % move to start of current line myRobot.keyPress(java.awt.event.KeyEvent.VK_HOME); myRobot.keyRelease(java.awt.event.KeyEvent.VK_HOME); % add comment symbol (% --&gt; shift+5) myRobot.keyPress(java.awt.event.KeyEvent.VK_SHIFT); myRobot.keyPress(java.awt.event.KeyEvent.VK_5); myRobot.keyRelease(java.awt.event.KeyEvent.VK_5); myRobot.keyRelease(java.awt.event.KeyEvent.VK_SHIFT); % clear commented line by pressing enter myRobot.keyPress(java.awt.event.KeyEvent.VK_ENTER); myRobot.keyRelease(java.awt.event.KeyEvent.VK_ENTER); for nc = [1:numCmd] % get current command to execute if inputType == 1 % char commandStrCur = commandStr(nc,:); elseif inputType == 2 % integer representation of char if isempty(regexp(class(commandStr),'^u.*$', 'once')) % input is 'int__' --&gt; convert to 'uint__' commandStrCur = typecast(commandStr(nc,:)',['u',class(commandStr)])'; else commandStrCur = commandStr(nc,:); end elseif inputType == 3 % string commandStrCur = commandStr(nc); elseif inputType == 4 % cellstr commandStrCur = commandStr{nc}; elseif inputType == 5 % cell array of strings or cellstr's commandStrCur = cellfun(@char,commandStr{nc}(:),'UniformOutput',false); end % convert to char commandStrCur = char(commandStrCur); if numel(size(commandStr)) &gt; 2 % treat all dimensions other than dimension #2 as indicators of an shift+enter symbol. Permute/Reshape the array to put all these into dimension #1 commandStrCur = reshape(permute(commandStrCur,[1,3:numel(size(commandStrCur)),2]),[],size(commandStrCur,2)); end %convert commands to column vectors so that multi-line commands execute correctly commandStrCur = commandStrCur'; % move to the next line in the display fprintf('\n') % shift focus to the command window commandwindow % loop through each char in the command string. % First get the key code corresponding to the character, % Then press/release the key associated with the character. for nn=1:numel(commandStrCur) % get keycode and set shift behavior if any(commandStrCur(nn) == cmdStrLowerMod) % Get keycode for char with shift held keyCodeCur = java.awt.event.KeyEvent.getExtendedKeyCodeForChar(uint32(cmdStrLowerMod_rep(commandStrCur(nn) == cmdStrLowerMod))); % indicate shift should be used useShiftFlag = true; else % Get keycode for char keyCodeCur = java.awt.event.KeyEvent.getExtendedKeyCodeForChar(uint32(commandStrCur(nn))); % use shift if typing a caapitol letter useShiftFlag = ~(commandStrCur(nn) == lower(commandStrCur(nn))); end % shift focus to the command window commandwindow % Press the key if ~useShiftFlag % press and release the corresponding key as-is myRobot.keyPress(keyCodeCur) myRobot.keyRelease(keyCodeCur) else % We need to input a capital letter. Press shift first. myRobot.keyPress(java.awt.event.KeyEvent.VK_SHIFT); myRobot.keyPress(keyCodeCur) myRobot.keyRelease(keyCodeCur) myRobot.keyRelease(java.awt.event.KeyEvent.VK_SHIFT); end % if we are at the end of a line that isnt the last line, press shift+enter if mod(nn,size(commandStrCur,1)) == 0 &amp;&amp; nn &lt; numel(commandStrCur) myRobot.keyPress(java.awt.event.KeyEvent.VK_SHIFT); myRobot.keyPress(java.awt.event.KeyEvent.VK_ENTER); myRobot.keyRelease(java.awt.event.KeyEvent.VK_ENTER); myRobot.keyRelease(java.awt.event.KeyEvent.VK_SHIFT); end end % execute current command by pressing enter myRobot.keyPress(java.awt.event.KeyEvent.VK_ENTER); myRobot.keyRelease(java.awt.event.KeyEvent.VK_ENTER); end % if caps lock was initially set to 'on', turn it back on if capsLockToggleFlag % Re-Toggle caps lock myRobot.keyPress(java.awt.event.KeyEvent.VK_CAPS_LOCK); myRobot.keyRelease(java.awt.event.KeyEvent.VK_CAPS_LOCK); end end 
&gt; data sets of 42 million elements This sounds like a lot, but is really pretty easy for modern computers to deal with. Think about how much data that actually is in terms of 1s and 0s...8 bytes per value (assuming doubles) means that is about 300 MB of data. Thats like....3 minutes of decent-to-high quality 4k video, or 10-15 minutes of decent-to-high quality 1080p video. Your internet browser is probably using more than 300 MB of memory (if you are using chrome anyhow). Unless you are running on a potato, I wouldnt worry much about data size until you get quite a bit bigger.
Solution 3 is what you want. No need to do system calls to run python any more. You can invoke it directly using py.function() after adding your python code to the path. 
Levenberg-Marquardt works on underdetermined systems - you can use it in a variety of functions such as lsqnonlin or fsolve. That's going to depend on how your data is setup. You cannot use bounds however.
That very well may be! I think I will be successful now that I know I can reach out to this lovely community for advice. As kind as my professor is, many helpful voices are better than one.
There's an extra cost involved no matter what. Either you need a Matlab license for the server, or you need Matlab compiler to make a command line program, or you need Matlab compiler SDK to make the python package. The compilers are cheaper than a Matlab license for the server. 
Not too well versed with this but I wrote a program that included finding differences between peaks. I used [peaks,locs]=findpeaks(...) to get peak values and their locations. I then found the average difference between these locations using the mean() and diff() functions.
I have access to a Matlab version at work that I believe has the SDK so my idea was to compile the programs there to make the Python packages and then just transfer them to the server where I install the runtime. From my understanding I would only have to do this once, right? 
Thanks. This is just a pet project so I'm not looking to buy licenses. I might be able to have access to a Matlab version with the SDK and create the Python packages there, then just transfer them to the server.
First you need to define what you mean by pulse width, FWHM, 1/e^2 etc
pls
I mean lenght of the pwm signal. But I solved the problem. The way to solve is that divide the integral of the pwm signal by period and time passed. This is the solution I thought.
managed to sort it myself by putting the .png files into an array and calling upon that when using VideoWriter: myFolder = 'C:\Users\Authorised User\Documents\MATLAB\OilDropForceImages'; if ~isdir(myFolder) errorMessage = sprintf('Error: The following folder does not exist:\n%s', myFolder); uiwait(warndlg(errorMessage)); return; end filePattern = fullfile(myFolder, '*.png'); pngFiles = dir(filePattern); for k = 1:length(pngFiles) baseFileName = pngFiles(k).name; fullFileName = fullfile(myFolder, baseFileName); fprintf(1, 'Now reading %s\n', fullFileName); imageArray = imread(fullFileName); imshow(imageArray, 'InitialMagnification', 85); % Display image. drawnow; % Force display to update immediately. end A = imageArray; vid0bj = VideoWriter('OilDropForceMovie.avi'); vid0bj.FrameRate=5; open(vid0bj); writeVideo(vid0bj,A) close(vid0bj) 
Is your matlab program compatible with octave? If so you could use subprocess to call octave 
Some of it may be compatible. Although in some programs I use Matlab functions that I don't think are available in Octave (some PDE solvers for instance). Thanks. I'll look further into it.
Can you post your code?
I believe (haven't tried with newer versions of Matlab) there is a limit to the number of elements in a csv file that dlmread could handle. Somewhere &gt; 1e5 - probably that ~2.8e5 number is the max. You may have to use sscanf. Or importdata, but that is slow. 
That sounds correct. The way I attacked it was to first create the test dataset so it would be obvious when the order was correct. Then I began with a simple reshape command, noted the incorrect results, and used transpose and permute to correct the output. It took maybe a few minutes, most of which involved starting up matlab. This code will not work if the number of rows is odd or if there is missing data. You'll have to check for that before reshaping the matrix.
Can't you specify with csvread what like to read? Maybe that way you can read the problematic line. 
Alternatively zero cross detection might also work. 
Perhaps you can tidy up the data and remove whatever strange character before processing? If that doesn't slow things down too much. Maybe run it through a command line file editor like the "sed" command in Linux to replace the character with something palatable to MATLAB. As for parfor, I'm a newb on MATLAB so I can't help you with what parfor may be doing. 
It would make more sense in your example for Shape to be the superclass and Square and Triangle to be the subclasses. If you do it that way, you shouldn't need to call the Square and Triangle superclass constructors from the Shape constructor. If you want to be able to construct them from the Shape class, then a static method in the Shape class would be the way to go, and then inside your switch statement construct the Square and Triangle directly based on the user input.
Im not familiar with superclass constructors, but perhaps you could use something like this? classTypes={'Triangle','Square','Circle'}; userInput=input('Please Enter Class Type: '); while nnz(~cellfun(@isempty,regexpi(classTypes,['^',userInput,'.*$']))) ~= 1 % Ask again for user input, since the class cannot be uniquely determined warning('The selected class could not be determined based on the provided input. Please provide a more complete class name as input.') userInput=input('Please Enter Class Type: '); end classSelected = char(classTypes(~cellfun(@isempty,regexpi(classTypes,['^',userInput,'.*$'])))) 
If things start looking to confusing, break it down into functions. Aka modularity. https://www.youtube.com/watch?v=j_XyeWg_3EE 
Doing it yourself using a for loop might be a great exercise for you to learn about programming and what is going on behind the scenes. Or MATLAB has a built in function -&gt; https://www.mathworks.com/help/matlab/ref/transpose.html
Nested for loops are kind of like the hands on a clock. * Every time the hour hand (outermost loop) advances by 1, the minute hand (middle loop) has to go all the way around the circle (go through all of its iterations) * Every time the minute hand (middle loop) advances by 1, the second hand (innermost loop) has to go all the way around the circle (go through all of its iterations) So in 1 day: * the Hour hand goes through 24 iterations * the minute hand goes through 24 * 60 = 1440 iterations * the second hand goes through 24 * 60 * 60 = 86400 iterations Written in a nested loop, for a digital clock (where the numbers dont change until you are at the end of the hour/minute/second) this would look like: for hour=1:24 for minute=1:60 for second=1:60 advanceSecond end advanceMinute end advanceHour end
Try adding `pause(1)` immediately before `clearpoints(h)`
How many characters are in each line? I did a bit of quick math and,for 2 bytes/char and 4 parallel workers, if lines (on average) have &gt;~1886 characters you are exceeding 2^32 bytes total being read, which seems like it could be a good place for a limiting factor to be in. Do you have any files that have more than `284585 * numParallelWorkers` lines (and the same or higher average characters per line)? If my guess is correct, Id imagine that the single threaded `csvread` will fail for that too, it just takes more lines before hitting 2^32 bytes read.
Hi, I'd recommend checking out the sidebar ("Places to learn Matlab" and "Matlab Resources") for some introduction lessons. I'd also recommend taking a class if you're totally new to coding, as it really helps to have someone experienced to explain things in-person, such as functions, arrays, cells, scripts, strings, etc. Most institutions that do research with Matlab should offer a course or two for the basics of computational science and technical computing. There are a couple websites around the internet to interactively practice simple coding but because Matlab is proprietary (i.e., not free, not open-source) there's less out there than say C++, Python, or Java (hence why I recommended a class -- by far the best way to learn Matlab). One last word is that learning coding, especially for the first time, can be a very arduous and frustrating task. But keep in mind that every single thing you learn now will snowball on itself in the future. So even though it will seem hard, eventually (if you practice and really invest yourself in the work) you'll reach a point where things you've learned start to complement each other and you'll feel a lot more comfortable coding. That's when the real fun starts!
I'm going to state the obvious and say that if you are truly brand new to coding, you would be ideally suited to learn from a MATLAB textbook, which there are many of. I'm certain **someone** will be able to recommend a good one ^(wink wink nudge nudge other people reading this). That said, it is also very doable to just teach yourself from the documentation, which is what I did, but to mature to my current MATLAB proficiency took several years and a lot of trial and error. I'm sure if I had just picked up a good textbook and seen it through then I would have seen the same results. If you're looking for a more tailored approach, perhaps seek out a programming-based cognitive science textbook. A quick search yields [this](https://www.abebooks.com/MATLAB-Brain-Cognitive-Scientists-Press-Mike/22913592584/bd?cm_mmc=gmc-_-used-_-PLA-_-v01), which may be worth looking in to.
Thank you for the advice. I know that the best way to learn is from another experienced user. We have some coding courses but they focus on R and Matlab the courses focus in stimulink and not much on data analysis this is why I try to learn on my own. I will work a bit hard and in time I will learn probably but thank you again for your response :)
Thank you very much for your response. Your suggestions were helpful and I will make sure to check it out.
Believe me, I was learning matlab for few years and still I'm not perfect at it. Hell, I even chose matlab instead of the MILF I was visiting one saturday night because I was so involved in some tutorials. Never regret it... Because after you learn it, you'll love it, even if it's slow as hell compared with C/C++
Well I hope I get to that point also at a moment. I am ready to take the time and not expect to master it in the near future.
The more you pay attention to your error messages, the less you will need to ask questions on reddit ;)
My lines are relatively short with only 40-50 characters but you are right in that I'm exceeding 2³2 bytes in total. Where did you get this number from so can search in this direction? I'll see if I can generate some bigger files and see what happen.
That can be my last chance solution but I'll try to avoid that. This code will have to be run on multiple computers, both Linux and windows, by different persons. Managing the different version is already painful, adding another software will be hell. Thanks for the suggestion
My files have 5 fields per line so, it sums at a bit more than 2.5e6. But apparently, Matlab can read them since, when I'm not using a parallel loop it's working. Concerning your edit, I have no issue on this side. Each file is read only once.
There is honestly not much to see. Everything above and below this simple line is kind of unrelated to the issue. Data = csvread(FileName); Before is basically setting some variable and building the filename and after that are operating on `Data`.
A good starting place: http://www.antoniahamilton.com/matlab_for_psychologists.pdf
&gt; Where did you get this number from so can search in this direction? 2^32 bytes is the total amount of addressable memory in 32-bit programs. It is a fairly common memory limit in computer programs, especially older ones. For example - the matlab `save` function is limited to saving variables that are 2^32 bytes or less unless you use the `-v7.3` flag.
Also, idk if this is possible or not, but if you can get the data in binary instead of csv format it will read MUCH faster, and i know for a fact `fread` doesnt have a 2^32 bytes read limitation.
Thanks for the details. Sadly, I don't have a choice over the format of my data... The "good" new is that it ended up working. While trying to reproduce the error, I noticed I was getting different value in the error message and after multiple try, it finally worked. So I guess the issue is not due to some sort of limit.
Thank you for explaining so clearly!