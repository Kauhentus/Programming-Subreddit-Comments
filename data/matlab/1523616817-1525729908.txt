You're vectorising so not sure there'll be a much faster approach (though I'm probably wrong). The other 90% of computation time is probably what you should be looking at. Dependent on how big your (I assume) binary file is, it could be worth splitting the fread and conversion into smaller chunks and running a parfor loop on it, then concatenate the data afterwards. It could take some time to implement but that will probably pay off if you're going to be using the script/function multiple times. 
Copy/paste your question here if you want help here. What is the problem you're having? You gave a description of what you want to do. You did not give a description of what the problem is that is stopping you. 
It would help if you said what you have tried so far. 
Obviously i haven't tried anything because i asked if it was even possible
Not sure what the downvotes are for, this is one of the rare questions we get that's actually completely reasonable. 
Cart2pol is for transforming coordinates. Have you read the documentation for it? I don't seem to have polarscatter on my 2014 installation. What does it's documentation say about this? I don't know why you'd need to convert to RGB to distort an image. 
I tried without the 'analyticConstraints',true, and now it just gives me an error message that matlab cannot find an explicit solution, I'm starting to think it's simply that since it's a non linear system of equations matlab doesn't do great for me right now
there I tried a different way to call the sym / syms function, they're all put in comments so they don't have an impact. I think matlab just isn't cooperating because I have a nonlinear system of equations.
Do you require a symbolic solution or are you ultimately going to look for a numerical result? Matlab is much better an numerical calculations than symbolic. If you can use a numerical solution just solve your system numerically and ignore the goofy symbolic toolkit. 
sadly I need the symbolic solution, otherwise I would simply solve it with eval() :/
Definitely don't use eval. I mean really you shouldn't use it ever, but certainly it has no application to numerical solutions to systems of equations. That's what fsolve and related functions are for. 
you're right! I got mixed up in my function names because I had to use eval for another project not long ago, nevertheless, I think I'm pooped for this... thanks anyways! :)
I'm just doing a contained test where I'm essentially querying whats in the array and adding elements in a loop. I'm expecting to have on the order of 100,000 structs in this array which has several other fields. a=[dat.a] This particular line makes up most (&gt;90%) of the run-time which is called once per loop. I'm doing quite some other stuff behind the scenes which I would think would be more computationally expensive which is why I'm a little confused this line of all of them is causing issues. I've tried pre-allocating *a* but that didn't seem to help and Matlab even spits out a warning that it isn't recommended in this case.
Would you think pre-allocating the whole structure would help? I could refactor the code to use a single struct but store multiple values in *dat.a* which I assume would be the recommended solution. 
Just a note that if you want more than one assumption, you have to use assumeAlso because assume overwrites any existing assumptions. Looks like there's only one ('positive'), but just in case. In the case of one assumption for many variables, the syms line should be enough. Now as for why it's not working... The only error I get with your code in its current state is that it can't find an explicit solution. Your symbolic variables are not being defined due to some other problem (or perhaps after updating code it's not defining those as 0x1 syms anymore?). The useful portion of your code (i.e. not redundant, overwritten, or commented) is presented below: syms T Hmb xbs xbl R Tmb Hma Tma positive syms omegas omegal eq4 = (Hmb-(omegas*(1-xbs)^2)+(omegal*(1-xbl)^2))/((R*log(xbs/xbl))+(Hmb/Tmb)) == (Hma-(omegas*(xbs)^2)+(omegal*(xbl)^2))/((R*log((1-xbs)/(1-xbl)))+(Hma/Tma)); X = solve(eq4,xbs,'IgnoreAnalyticConstraints',1); disp(X) Can you rewrite eq4? Are there any other constraints you can add, such as placing any of the variables in the reals?
Yes, but we're using the colour parameter within polarscatter to have the data points displayed in the original grey scale colour, the function can handle several types of colour input, one of them is the RGB-triplet. The documentation is exactly what we've been looking at trying to get this to work. imtransform/imwarp looks very interesting, we're at the pub now but definitely giving that a shot later. Thanks!
Do you know the mathematical formula to compute a triangle's altitude, given the coordinates of its vertices? Triangles don't have one altitude, they have three. One for the distance from each vertex to the opposing edge.
I'm calling `[dat.a]` in a loop to both query whats inside and to append new data to it. In any case, another comment raised the issue that a struct array like I have are stored in different memory locations which slows down the code when you have to extract data from each. I've since refactored a bit to just avoid struct arrays and instead just have one struct which contains vectors of the values I want. This pretty much removed the bottleneck altogether.
[Each field is stored in contiguous memory](https://www.mathworks.com/help/matlab/matlab_prog/memory-requirements-for-a-structure-array.html), so that's actually not true. I'm glad you were able to solve your problem, though.
This is incorrect. The different fields can be stored in different locations, but every element in [dat.a] [is stored contiguously](https://www.mathworks.com/help/matlab/matlab_prog/memory-requirements-for-a-structure-array.html).
Please see [our rules for submitting homework](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/). I know sometimes it seems like you don't even know where to start, but showing that you've done at least something will allow people to help you much more easily and willingly
you are doing it wrong: http://www.catb.org/esr/faqs/smart-questions.html 
 this might help u https://www.wikihow.com/Use-Deductive-Reasoning
You sure it's not you? Seems ok to me. 
I created something to help you out. I fully admit front up that it is very poorly optimized, and it also requires that n can minimum be 5 because I don't have an understanding of what pentadiagonal matrices are... That being said, this code should put you on the right track. It computes "x" for any given n &gt;= 5 and dumps the result into cell array variable "x" Like I said, this code is poorly optimized so doing n = 5:8000 takes a long time... https://www.pastiebin.com/5ad144c36bcb0
on line line 26 there is supposed to be a backslash "\" between Ab... A\b is what it should be. Paste bin thinks it's a formatting thing and removes it. 
Could be accomplished with nested if statements, but I feel like there is a more elegant solution
Looks like it is [just you](https://downforeveryoneorjustme.com/mathworks.com).
&gt; Matlab stores the data of a given structure/field sequentially in memory, but stores data from different fields / different structures (including different structure elements in a struct array) if different locations. Im fairly sure the page you linked is trying to say what I said in my comment, and just did a piss poor job of making it clear. To be specific, I am referring to: &gt; Matlab stores the data of a given structure/field sequentially in memory, but stores data from different fields / different structures (including different structure elements in a struct array) if different locations. If you look through the documentation of structure arrays, youll see that it wouldnt make sense to require the same field from different structures in the struct array to be contiguous in memory. For example: in the [documentation for creating struct arrays](https://www.mathworks.com/help/matlab/matlab_prog/create-a-structure-array.html), it says: &gt; Each patient record in the array is a structure of class struct. An array of structures is often referred to as a struct array. ... A struct array has the following properties: ... Fields of the same name in different structs can contain different types or sizes of data. Since the data from a given field of different structures in a struct array dont need to be the same size nor the same data type, there is no reason to store the data they contain sequentially in memory. If you look at the documentation for [memory allocation](https://www.mathworks.com/help/matlab/matlab_prog/memory-allocation.html#brh72ex-20) and go to the `structures` subsection, they talk about the a struct array having some memory for the data structure itself and some memory for the data each structure in it contains. The data structure itself probably needs a continuous memory block, as does the data in each individual field of each individual substructure, but everything else can be seperate. If youre not convinced try making a structure with randn(1,5e8) versus a structure array o size [1 5e8] where each structure has a single randn(1,1) value. If it were continuous then accessing and using these two things should be the same, and I can guarantee you they wont (unless structures got a MAJOR overhaul in 2018a, but as of 2017a or 2017b I know this is the case).
You could add another if condition? ‘if I&lt;=365 &amp;&amp; spc(i)...’
Check [status.mathworks.com](http://status.mathworks.com/) to get the official word on whether they are down or not
Hmm. I'll start with a spitball - are you evaluating the function at pathological points?
varargin is what you are looking for. MATLAB has a lot of convenient ways to have multi-variable inputs and programmers can be pretty creative with how they want to handle these. https://www.mathworks.com/help/matlab/ref/varargin.html
I think you want to use [logical indexing](https://blogs.mathworks.com/loren/2013/02/20/logical-indexing-multiple-conditions/)
Also, [inputparser](https://blogs.mathworks.com/community/2012/02/13/parsing-inputs/) might be helpful
In another commented it sounded like you tweaked things to not use struct arrays at all (which would have been the "reccomended solution" if I had responded sooner), and that doing this solved things (im glad). Though, just in case , I found a code i wrote a little while back (when I ran into this same problem) that automates the process of converting between scalar struct arrays and a single structure containing the data. It also automates generating either a single structure or a scalar struct array from a numeric array. It also allows you to define a masking operator for both the field names and the values in the function input. [Here is the code](https://pastebin.com/ESkgmURg). Maybe you will find it useful. Its not terribly well commented (sorry), and if you are wondering what a given section of code does and it isny clear theres a good chance that it is related to making things work when converting from a structure to a scalar struct array with an input structure that has non-uniform sized fields. In this case it finds the largest of each dimension from each of the inputs, and empty-pads all the fields out to that size. Converting 100,000 elements takes ~1.1 or 1.5 seconds on my computer, depending on what direction you are going. So this isnt something youd want to use every iteration of a loop, but you can have a struct array and convert it immediately before and after a loop that changes its values and you only lose ~2.6 seconds (less probably if you have a newer cpu).
Try adding the following line syms T Hmb xbs xbl R Tmb Hma Tma omegas omegal eq4(T, Hmb, xbs, xbl, R, Tmb, Hma, Tma, omegas, omegal) I almost never use matlabs symbolic functions (I do enough symbolic stuff to justify the cost of Mathematica, which really is much better for this kind of stuff). However, i do seem to remember that it Matlab sometimes doesnt work right unless you pre-define the equation with the inputs as a symfunction before you generate it. Maybe itll help, maybe not, but its worth a shot.
&gt; shouldn't you be working in C or something Eventually that will probably happen (though getting really good with openCL and/or CUDA would probably be more effective). This said, im in the last year of a PhD program and as it is now there arent enough hours in the day to get stuff done, and that is without making increasing the dev time and (initially) the compute time considerably (since i know with my current skillset I can write faster executing code in Matlab than I can in any other language, at least for compute-focused tasks. At the same time I deal with terabyte+ sized datasets, so i dont really have much of a choice but to write efficient code. &gt; you're always so pressed about saving computation time at the simplest levels, When i try and save time with something like this, its because ive already tried and implemented every "standard" trick in the book and a few that arent too. And honestly, what else am I suppposed to do? Say "well, I guess ive already learned all of the speed tricks im gunna learn, no point in trying anything that isnt a standard approach"? If that was my outlook I wouldnt have made it through grad school, thats for damn sure.So instead I sometimes try and optimize things other people would take for granted. A lot of times it doesnt work, but every now and then i figure out something really useful from it.
Those are good ideas, but ive already throw literally everything I can think of at the other 90%. Of the other 90%, ~89% is split roughly 50/50 between `fread` calls and the data conversion. This includes * a 2-stage blocking analysis before the `fread` call, which first groups selected samples into continuous blocks, and then groups those blocks into groups that can be read with a single `fread` call using the `skip` parameter. * It also does things like check for duplicate indicies, and if any are found the code only reads that sample once and then duplicates it after the fact. * almost all the required info is read from the data headers on disk, the only user-provided items are the filename, and optionally selected indicies to read (if not reading the whole file) a a few flags that govern what conversions are done. * Things like data headers are read as a continuous binary blob and then get typecast to their correct values after the fact. Out of the ~1.5% of the execution time not accounted for by `fread`, the data conversion, and the splitting operation, this makes up ~1.4%. Everything else (like the trace blocking analysis) makes up just ~0.1% of the execution time. * parts that tend to have high memory usage when run as vectorized operations are automatically split up based on the current amount of available system memory, and are roughly tuned to use stay as vectorized as possible without going into swap/pagefile space. * The data conversion code is, despite only being 3-4 lines of code ignoring the automatic memory-based splitting, undoubtedly the best 3-4 lines of code ive ever written. It is 5-6x faster than the absolute best replacement I could find, and is several hundred times faster than the not-so-good replacements. This is because the conversion doesnt require any casting operations whatsoever. The entire operation in implemented through bit reordering (mainly `bitand` `bitor` and `bitshift`) followed by a typecast operation, and gives a bit-identical result to the "standard" approaches. The *only* other thing (beside this splitting operation) I can think of is, like i mention in the original post, to make the `fread` and data conversion occur asynchronously. Using something like `parfor` has way too much overhead. The best idea i have to implement this is to run 2 seperate matlab instances and set up memory sharing so that each has access to the same data in memory (like memory mapping, but for data in memory instead of data on disk). This avoids the inefficient parallelization engine in matlab, but i just havent gotten around to making this work. Its on the to-do list. Literally, the only thing left thats worth thinking about optimize is this splitting operation. Even saving a couple percent would be time well spent imo, considering ive probably spent hundreds of hours writing (and re-writing, sometimes multiple times) this function and the subfunctions it depends on.
Maybe this: - the first graph is realized with this coordinates: y1 = [0 2 4 6 8] x1 = [0 1 2 3 4] - the second instead: y2 = [0 5 10 15 20] x2 = [0 1 2 3 4] The new coordinates of the combined function will be: yc = [y1 y2] xc = [x1 x2] I'm not sure because anyway we are joining two functions as one that has a different meaning. 
I'm not sure what you mean by a "combined" linear line here. But you could use a function mapping to complex numbers and put one function in the real part and one in the imaginary part. Or just map a function to a two-dimensional space. Then x -&gt; (2x, 5x), in that sense you have the 2x and the 5x at the same time.
https://www.mathworks.com/help/matlab/creating_plots/combine-multiple-plots.html
If I rearrange it, you can see that your `zdz` is defined as: zdz = @(x) (0.5*pi*pi/2) + (0.5*pi*pi/2)*x Which I'll call: A = 0.5*pi*pi/2; zdz = @(x) A + A*x; If you integrate it, you get z = A*x + (1/2)*A*(x^2); That's the integral. Plug in your limits: z(pi) = A*pi + (1/2)*A*(pi^2) z(0) = 0; z(pi) - z(0) = z(pi) = 19.9277 And that's you're answer. That's what you're getting because that's what you're asking Matlab to do. You say: &gt; Trying to calculate integral using 3pt Gauss quadrature for the function e^-x * sin(2x) from 0 to pi. And you define `y` to be that function, but that's not what you're asking Matlab to solve. I don't know where you came up with `z`, or `zdz`, or what any of that is. You define `y` to be what your problem tells you to do, and then you go off in the woods to solve a different problem.
Eval is expecting a character vector of code to execute - eg eval(2+2) will error but I think eval('2+2') should work, although looking at your code is the use of eval strictly necessary?
Im not sure how else to execute the typed out command in the text field I tried using num2str first but that doesn't fix it either
In the regular matlab command prompt it also works fine
We're going to need a lot more to go on. What kind of sensor is this, and what are you measuring? What are you actually looking to do with this sensor data? What's causing the noise? Why aren't the results from the methods you listed helpful?
Is `app.Results.Value` a character vector or string? Or something else (e.g., cellstr)? You can find out by running in the debugger and checking in the variable explorer, or by adding `disp(class(app.Results.Value));` before you call `eval`. Regardless, you should avoid the use of `eval` for a variety of reasons, particularly if you plan to accept raw user input (e.g., from an inputdlg or text field), as the user could execute arbitrary commands (not just the ones you would expect from a calculator). You can work around this by using `str2double` to convert numeric values. If you need to allow single button pushes (e.g., push `9`, then `6` to enter `96`), you can build up an operand string--then convert to double whenever an operator button (e.g., `*`, `/`, `=`) is pressed (and execute the appropriate operation). If you want to build the whole operation as a single string (e.g., to enable the user to enter "1+2*4+7", see the whole string of operands and potentially edit them), you can do that too--build it as a single string like you've been doing, but use `regexp` to split into operands and operators, use `str2double` on the operands and interpret the operators (e.g., use an Nx2 cell array of `{'+', @add; '-', @subtract; ...}` and use the operator string to find the appropriate function handle). 
It's a Photodiode that's supposed to take data from a welding process to distinguish when it is being stable and when not. I'm looking to distinguish a stable process vs a non stable process and change the process parameters after that The cause of the noise is the very sharp spark at the beginning of re-ignition The results are coming up to be all around the place so all I see when I do the plot is a blue screen even though the axis limits are fine .... 
You have a photodiode recording at 500kHz? Impressive. When you say you just get a blue screen on plotting, you mean your line is just filling up the whole plot space? Can you post a picture?
Yep, the photodiode is quite nice. but the data is very compressed and tbh so far useless here is a link https://imgur.com/drSqR2Y 
Thanks for the detailed response! I did what you told me and apparently it was of the type 'cell' Changing it to app.Results.Value{1} in eval made it work the way I wanted it to.
Ah, all right. First thing you want to do is limit your x axis to a tiny chunk of this, maybe 0.2 to 0.4s, and see what's going on at a better scale. This isn't necessarily noisy data, there may be some DC component going on as well.
I tried to plot the data with a moving x axis, each time between TIME(n) and TIME (n+1000). Which totals at about 0.1 sec, and the same appeared just a blue strip. After I did the fourier transform I filtered the data and removed the dc components and went backwards with ifft, but not much happened now it's just sharper....
Keep zooming in on the x axis until you get some real idea of what the signal does locally. Your sampling rate be enormously too high.
I'll try to do it, my laptop is gonna scream in agony though ... Thanks for the help !
I tried to use the function find, but as a I said, I can't stablish a mathematical condition such as target is greater than or equal or less because the numbers in the density array are very similar and for example a similar density can be found at 1000 feet or 7000, that's why I need to only select the density values that correspond to the depth that I want
You know, I hadn't thought to interpret it that way. I'm not convinced, but I'm less certain. I still disagree with this: &gt; If you look through the documentation of structure arrays, youll see that it wouldnt make sense to require the same field from different structures in the struct array to be contiguous in memory. It would make sense if MathWorks had made a large push for vectorization, which they most certainly have. Considering the relatively recent introduction of structfun() et al., it's not easy to dismiss the possibility. While the links you provided demonstrate that struct arrays use *more* memory than structs containing arrays, they don't give us any information about *how they are arranged* in said memory. There are more headers, due to each struct in the array having its own; the difference in speed of access in your example could just as easily come from a missed opportunity for optimization in addressing (e.g. headers pointing to headers pointing to data) as it could from actual memory location. OP mentioned that (s)he is also trying to add structures to the array, which even for standard arrays (of very large size) can be a chore in terms of memory management. I think this is the more likely culprit of any slowdown.
That's why I would use logical indexing. Say your density values are held in an array `p` and your depth values in an array `d` then you could say: ind_p = p &lt; max &amp; p &gt; min % get the indices where p is between your min and max d_p = d(ind_p) % get the depths p_p = p(ind_p) % get the densities 
Try using this to remove the 50Hz noise. it works pretty well in a simple synthetic test I threw together. % synthetic data with signals at 10000, 800, and 50 Hz + random gaussian noise. data=randn(1,L)+5*sin(2*pi*(1:L)/10000)+8*cos(2*pi*(1:L)/800)+sin(2*pi*(1:L)/50)+cos(2*pi*(1:L)/50); fs=500000; % sampling frequency T=1/fs; L=numel(data); freq=(fs*linspace(0,1,L+1)); freq(end)=[]; freq=[freq(freq&gt;=fs/2-sqrt(eps(fs)))-fs,freq(freq&lt;fs/2-sqrt(eps(fs)))]; fRm=50; % frequency to remove fRmInd=[find(abs(freq+fRm)==min(abs(freq+fRm)),1,'last'),find(abs(freq-fRm)==min(abs(freq-fRm)),1,'first')]; twTransition1=0.25; % normalized notch thickness for the inner half of the notch tukeyWin1=tukeywin(fRmInd(2)-fRmInd(1)+1,twTransition1); twTransition2=(twTransition1*(numel(tukeyWin1)-1))/(L-numel(tukeyWin1)+1); tukeyWin2=tukeywin(L-(fRmInd(2)-fRmInd(1))+1,twTransition2); tukeyNotchWin=[tukeyWin2(ceil(numel(tukeyWin2)/2+sqrt(eps(numel(tukeyWin2)))):end-1);tukeyWin1;tukeyWin2(2:floor(numel(tukeyWin2)/2+sqrt(eps(numel(tukeyWin2)))))]; dataFilt=reshape(ifft(ifftshift(tukeyNotchWin.*fftshift(fft(data(:)))),'symmetric'),[size(data)]); figure; plot(data); title('data'); figure; plot(dataFilt); title('filtered data'); figure; plot(data); title('data'); xlim([1 10000]) figure; plot(dataFilt); title('filtered data'); xlim([1 10000]) figure; plot(freq,fftshift(abs(fft(data)))); title('data fft'); xlim([-100 100]) figure; plot(freq,fftshift(abs(fft(dataFilt)))); title('filtered data fft'); xlim([-100 100]) figure; plot(freq,tukeyNotchWin); title('tukey window notch'); xlim([-100 100]) 
I'm gonna try to do it as you are saying it might work, thank you
&gt; Considering the relatively recent introduction of structfun() et al., From the structfun documentation, 1st line: &gt; A = structfun(func,S) applies the function func to each field of scalar structure S, one field at a time. This works on a single field of a single structure at a time. `cellfun` does the same thing, except with cells. The only part which would need to be contiguous in memory is the data that it is currently working on, which is the data from a single field of a single scalar structure (and each element of a struct array is a single scalar structure). &gt; the difference in speed of access in your example could just as easily come from a missed opportunity for optimization in addressing I posted [this code i wrote](https://pastebin.com/ESkgmURg) for OP for converting structures to/from struct arrays and converting numeric data to either. I encourage you to try running the following test (or, if you prefer, make one of your own design): clear all for nn=1:10 % create 2 different sets of synthetic data, each with 1 million points L=1e6; data_x=randn(1,L)+5*sin(2*pi*(1:L)/10000)+8*cos(2*pi*(1:L)/800)+sin(2*pi*(1:L)/50)+cos(2*pi*(1:L)/50); data_y=randn(1,L)+5*sin(2*pi*(1:L)/10000)+8*cos(2*pi*(1:L)/800)+sin(2*pi*(1:L)/50)+cos(2*pi*(1:L)/50); % convert one data vector into a [1 x 1 million] struct array with scalar values in its field, % and the other into a single structure with a [1 x 1 million] vector in its field x=convertStructArray(data_x,false); y=convertStructArray(data_y,true); % time how long it takes to access the data in each tic; x1=[x.Field_1]+1; t1=toc; tic; y1=[y.Field_1]+1; t2=toc; % print out relative difference in access time fprintf('\nRelative Difference in memory access time is: %.3fx\n',t1/t2) clear x y data_x data_y end On my machine, running R2018a, the above code outputs: Relative Difference in memory access time is: 317.687x Relative Difference in memory access time is: 407.064x Relative Difference in memory access time is: 507.992x Relative Difference in memory access time is: 475.031x Relative Difference in memory access time is: 345.217x Relative Difference in memory access time is: 486.804x Relative Difference in memory access time is: 496.325x Relative Difference in memory access time is: 497.212x Relative Difference in memory access time is: 529.647x Relative Difference in memory access time is: 481.200x This is strictly memory access, no progressive building of the structures or anything like that, and the difference in access time is, on average, more than 400x. Assuming the Matlab devs arent utterly incompetent programmers, which in general doesnt seem to be the case, I really dont see any way that you get a 400x difference unless each value is in a different memory location all together. As a side note - the raw access time for the struct array is 0.6-0.7 seconds. I have ddr3 memory running at 800 MHz and has latencies of 11-11-11-28. If you assume that completely independent memory locations means you get hit with all 4 latencies for every read, youd expect something like 0.08 seconds. considering what actually happens is much more complicated than just "adding the latencies" and that there are other things that also need to happen beyond just the raw memory access (such as the JIT compilation of the code, among many others), read times of 0.6-0.7 seconds seem like about what I might expect for reading 1 million data values that are scattered in memory.
does this work with GUI?
you need to call it with two outputs where you use it [root, iters] = secant(func, x0, x1); disp(sprintf('%g, %u', root, iters));
Yes, of course. Basically what you do is the function is declared in the input line as having `varargin` instead of any other input variables. So you can do like... function foo = myFooBar( varargin ) firstVar = varargin{1}; secondVar = varargin{2}; end It stores any amount of variables passed into the function call into the `varargin` variable name as a cell array, and you index it as a cell array. what @wee_O_Whirler above me posted is a tutorial on how you can utilize varargin to detect ANY type of input coming in based on rules you setup. 
Yes that is how you address's the indexes of cell arrays. Cell arrays are pretty powerful. they allow for the indexes to hold any data type, where as an array requires all indexes are the same data type. So a cell array can hold integers, other arrays, structures, string's etc....
Wow. that's nice to know. Thanks!
I'm testing out the varargin function with what you said, but im getting index exceeds matrix. What did i do wrong? function varagout = myFooBar( varargin ) first= varargin{1}; second = varargin{2}; varagout{1} = 'hi' + first; varagout{2} = 'bye' + second; end 
The length that i am inputting for varargin is length of 2 though
+ Thanks! that does help and make it faster! Im not sure how vectorization works but ill play with it to try and figure it out.
+ How do I go from that 2x1 string array to a 2x1 cell array without loops? If I use {string(blah)} i get a 1x1 cell instead of a nx1 cell array
&gt; Assuming the Matlab devs arent utterly incompetent programmers, which in general doesnt seem to be the case, I really dont see any way that you get a 400x difference unless each value is in a different memory location all together. A simple oversight would explain it without incompetence. My point about the structure and cell array versions of map() was that they hadn't designed for them from the beginning. The shift to vectorization and to the array-based methods is still relatively new, and structures existed prior to their introduction, in essentially their current form (sans dot notation, which only changed get/set behavior). We could just as easily explain it with the need for jump-and-link from the structure array header to the nested structure header to its data offset, back to the structure header, data offset, etc. This artifact of the structure's original design does not necessitate first-available, or random memory assignment. Either way, it's interesting to read your opinion, as like I said, I hadn't ever considered the other interpretation (aka which words to read between the lines): From the original link: &gt; each field [in the array] requires contiguous memory vs. &gt; each field [in each structure in the array] requires contiguous memory
This is really a math question, not a matlab question. Use the definition of superposition to do this. For linear systems, if the two functions you described are H(x) and G(x), then: `F(a*x+b*x) = a*G(x) + b*H(x)` Just add the results of the two equations together: `y1 = 2*x` `y2 = 5*x` `y3 = y1+y2` `plot(x,y3)`
So this wont give the benefit of vectorization, but it is an easy fix. first, type open cellstr then copy/paste all the code into a new function and change the name to samething (`mycellstr` is what i usually go with in these situations). Then, in your new `mycellstr` function, remove the line that says deblank(c); It should now work exactly the same except that it wont remove the empty character spaces.
1. Don't use eval. Don't do it. 2. Don't create a field called app.result on a struct that already has a field app.Results. That's just horrible variable naming that's going to confuse somebody. 3. What the heck are you doing calling eval on something, then calling num2str on it and overwriting the original value? If it's a number you don't need eval. If it's a string you don't need to convert it to a string. 4. Think about what you're doing, don't just write random senseless code.
&gt; We could just as easily explain it with the need for jump-and-link from the structure array header to the nested structure header to its data offset, back to the structure header, data offset, etc. This artifact of the structure's original design does not necessitate first-available, or random memory assignment. Fair point, I suppose something like this is possible. Though, this is quickly getting into the territory of "does it *really* matter if the values are sequentially stored when you can only read 1 (or a few) before jumping back to a different memory location???" Either way, from a reading data perspective, you basically have a random read, though this also imposes the limits of continuous memory (including the potential need to transplant the entire structure to new addresses every time its size increases). Perhaps "incompetent" was a bit harsh, but choosing a design that has the downsides of both random and continuous memory assignment and the good sides of neither AND using that design for years on endyou seem to suggest either incompetence or not having nearly as many devs as they probably should have / need. Either way, I still recommend avoiding struct arrays entirely, except perhaps for very small datasets. The read speed issue is enough to make them almost useless for larger datasets, regardless of whether or not you also have continuous memory requirements on top of the read speed problems.
Try using ode45 instead of having a lengthy while statement. 
I'm not entirely sure how developers create their code, but I know MATLAB has the capability to do exactly as you describe. For instance, I use functions a lot where you have an example call as such the default plot function in MATLAB You could have a function call like this for example..... plot(x,y,'--gs',... 'LineWidth',2,... 'MarkerSize',10,... 'MarkerEdgeColor','b',... 'MarkerFaceColor',[0.5,0.5,0.5]) Where the text is the "Option" being fed in, and the following number is the value. The options can be arranged in any order, or not included at all. So I BELIEVE what the inputParse utility mentioned earlier is supposed to help you achieve that capability easier. I'd help a little more but I've never had to develop that logic myself. You're welcome to ask other questions though.
&gt; Perhaps "incompetent" was a bit harsh, but choosing a design that has the downsides of both random and continuous memory assignment and the good sides of neither AND using that design for years on end would seem to suggest either incompetence or not having nearly as many devs as they probably should have / need. And how long have we gone without functionals like map, filter, reduce, etc.? Or 'for each' on-the-fly object enumeration? I think it's a matter of focus; I wonder how many users try this kind of thing in MATLAB. I agree that it's better to avoid using them for anything too large. There's usually a more advantageous way to reshape the data. Certainly, accessing/modifying one that way in a loop will significantly impact OP's performance.
As I said in my post, I'm new to programming apps in matlab and this is literally my first attempt, I am actually thinking about it. I suppose the variable naming could be better though, yeah. The idea with eval and num2str was to take a text out of a display in the app, run it as a command and then convert the resulting number into a string to display it again inside said text display, which works fine now. And concerning eval, I thought the problem with it was that users can input senseless commands that cause errors, but in this case the only input is pre-defined number buttons
Agreed. If your problem is a ordinary differential equation of the form dy/dt = f(t,y) then Matlab's ODE solvers will help you.
Looks like you're on the right track, assuming your formulae are correct, after the end of the loop it would be very straightforward to plot the temperatures over time. I find it curious that you're directly calculating the values at select points... are you certain you're not supposed to calculate at every point (all 150 nodes), and then extract the 9 points from the full solution? That would be more typical for a problem like this. For that, I would recommend thinking about how to structure the formula so you can loop over the points and apply the same formula to each, rather than writing a hardcoded formula derived one at a time. Remember, with programming, most of the time if you find yourself copying and pasting nearly the same code, you can combine it into a loop. Secondly, you could quickly run into a storage problem if you try to keep the entire time history in memory. Think about having one 150-node array representing the solution at j, and a second representing j+1, then at the end of the iteration put the j+1 solution into the j array and grab the 9 points you need and put them in their own array for analysis later. I would not mind handing you a bunch of code for this, as I think I get the equations you're deriving, but I'd like to help empower you to figure it out on your own. Just let me know how far you get and if there's anything you struggle with!
[Relevant xkcd](https://xkcd.com/208/). [Relevant documentation](https://www.mathworks.com/help/matlab/ref/regexp.html). [Supplementary Documentation 1](https://www.mathworks.com/help/matlab/ref/fileread.html). [Supplementary Documentation 2](https://www.mathworks.com/help/matlab/ref/fprintf.html). Enjoy!
hahahahahah I love the xkcd. Thanks :)
You're most welcome.
Thanks for the detailed reply. It is supposed to be across all 150 nodes, we just derived the equations from scratch using those 9 boundary ones. We need it to loop through all 150, not the 9. I'm not entirely certain how that fits into the code though, since I've hardly done coding at all. I know we're supposed to have 9 loops using our 9 equations, doing so should somehow give us the temperature across all 150 nodes. But I don't have much of a reference to go off for that so I've just been spinning in cricles pretty much
You could use the graphics handle object to get the plot data from the new figure and send it to your UI and then close the new window. It’s a bit of a hack tho. 
Ugh it's infuriating to put so much effort into a post and then to not even get an acknowledgement. I upvoted your post as soon as I saw it, and now... a day later... I'm still the only upvote :( **I** appreciate your effort. Good job.
Thank you!!! I knew there was something like this! This is precisely what I needed, now I can work with this stuff far more easier now.
+ Thank you for the advice; I've done a little java and python so those anonymous functions are way closer to home than using ```syms``` (they remind me of lambdas). 
How well do you understand what finite-difference approximations? An important aspect of them is that the smaller the spacing between nodes, the more accurate an approximation you get for the calculated derivatives. In heat transfer problems, you want each node to be calculated based on the neighboring points, not from points further out. So for example, instead of updating node 2 from the values at 1, 5, 3, and the boundary, you would update it from the nodes on each side of it and the boundary. [Side note: Standard notation uses i for the x direction, j for the y direction, and n for time index] So first, I would forget about those 9 numbered nodes and only think about the entire set of 150 nodes. Make two arrays of size 6 x 25 to hold all of them, one at time "n", Tn(1:6,1:25) = 1.0; and one at time n+1, Tnp = Tn; For each time step, you want to update Tnp based on the values in Tn. Up to this point, you can use most of the code you already have, just get rid of the "j" time counter. Now, inside the time loop, you want to update all 150 nodes. So quick check, how would you structure a set of loops which touches each node? I'll give you a hint, you need fewer than nine!
To be honest I don't understand it very well, I completely get the math around deriving the equations, it's very straightforward for me. I get what you're saying about having a shorter distance help get better results. But our professor was pretty adamant on us using all 9 equations in this. Like if we don't he'll mark us down. Is there a way to use all nine formulas and still update the 150 nodes using their closet nodes within the rectangle? I'm going to update this with new code in a second
So are you saying that you want to carry on calculating new dimensions of this vector following the same pattern? Or that you want to recalculate new 4 dimension vectors using different different inputs. I am really struggling to follow what you are trying to do or asking for but then again I often get lost on problems without context
Yes, you're given the vectors Q and P, they have the same length, and you want to calculate a new vector U, same length as Q and P. I'll add a little context to the post to hopefully make it a little bit more clear.
I might have an idea, I'll try it tomorrow and get back to you! To give you a hint : I would look at the relation that exists between the indices of the P and U terms that are subtracted. Something like U(i) = (Q(i) - P(i) U(smth)) Where smth depends on i. Hope it's kinda clear but I'm just typing this in bed on mah phone. Good luck till tomorrow! 
Why do you want to loop then? I don't understand why you would use a while loop? I think you could write a function for this pretty easily as the new vector is just calculated using the formulas supplied and values from the other 2 vectors (is this right?). You could then put the function in a loop if you want to cycle through input vectors and store the solutions?
Is there a maximum number of dimensions for the vectors?
No, but all 3 vectors will always end up having the same length. There's often quite a few 0 values though, because the streamflow response (Q) tends to lag behind the rain (P), so you'll have a lot of P-values but U and Q will keep going up. [Here's a graph](https://i.gyazo.com/35a2e0cc629e66c2a4ea89cb8cce58d5.png)
Where you say they dont line up nicely so you cant do P (i)Q (i). Just checking that you know you can do things like P (i-1)Q (i+1) to shift the index?
Well you realise you can evaluate the size of any vector you may have by using the "length" or "size" command. You could then use this info to help you?
So for instance your loop could be initialised saying something like For i =1:length (U) Some logic stuff i dont fully comprehend here End
Hey, I've sent you my code if it is okay. I know what i want the code to do for the inputs. But, i keep getting matrix dimension errors in code.
Yes, yes it is, and I had absolutely no idea that MATLAB had built-in commands for that. Thank you!!
The first one looks like `Q = P(1:N).*U(N:-1:1)`, as in: for currentMax = 1:numel(P) Q(currentMax) = P(1:currentMax).*U(currentMax:-1:1); end The second one looks like U = Q(1:end); for currentMax = 2:numel(P) U(currentMax) = U(currentMax) - P(currentMax:-1:2).*U(1:currentMax-1); end U = U/P(1); You might need to `repmat` the `P(1)` at the end there, or might not. I can never seem to tell when it's required and when it'll just accept the operation as though it's a scalar value.
Must you absolutely have to do it in matlab? Why not just use regex in a bash/perl/python/etc script or if it’s a one time thing, search and replace with sublime or atom?
Ok so I gave it a go because apparently Matlab is better than sleep. Try something like this : N = length(P) ; U = Q ; % initialize vector U as Q for i = 2:N for j = i-1:-1:1 f = i - j + 1 ; % make some loopy magic U(i) = U(i) - P(f) * U(j) ; % subtract product to ith element of U % the following is just to illustrate what is being done by % the line above (i.e. outputs formula to command winow) fprintf('U(%.0g) = U(%.0g) - P(%.0g) * U(%.0g) \n', i, i, f, j) end end U = U/P(1) ; % finally divide by that P(1) value 
I think that this is essentially correct, though I am curious why there are 100 iterations (for it=1:100) thrown in which literally seem to do nothing at all? What I was trying to get at is that there aren't really nine equations at play, here. There is one equation for the interior, with special boundary conditions applied at four surfaces (and the extra four seem to come from interactions between two boundary conditions, at the corners). This seems to have been properly implemented, albeit with some unnecessarily complex code. Since there are only 150 nodes, I'm sure this runs in a reasonable time frame and doesn't take up too much space, but in general you should consider what needs to be stored. Here, having the entire time history of the entire domain means this will run waaaaaay slower than it needs to, and if you had a finer resolution (more nodes) you could even run out of RAM entirely!
Lol, appreciated. Though admittedly it wasnt *that* much effort simply because I do a fair amount of data processing and do this type of filtering quite often (generating the notch using a symmetric tukey window was new code and took a couple tries to get right, but I figured ill end up utilizing it myself sometime, since it should be better than a "standard" triangular notch). Im kind of curious if it worked for OP (I mean, I know it works as a notch filter, but it could be OP's data is screwy). I also kind of wonder from looking at the image OP posted in another comment if OP is actually trying to remove the event that seems to be occurring at 10Hz or so and just assumed it was 50 Hz noise from power lines. PS in case anyone wants to use this, I ended up making this notch filtering code a [more robust function](https://pastebin.com/0dS9yekt) for my own personal use. I think it is fully debugged, but make no promises.
https://uk.mathworks.com/help/matlab/matlab_prog/regular-expressions.html
Yeah this was built off of code from something a bit more complex. If I changed the it=1:100 to just it=1:1 would it do the same thing? Or hell could I just delete it? And I get what you mean now, I didn't really think of it like that at first. That sounds much simpler then trying to make 9 equations fit, I was just going off how the professor was describing vaguely describing it in class. I didn't realize that just a little extra code can really use up so much space. I'd say this will help in the future but I honestly don't think we'll ever touch this stuff again. It's a bit out there for our class honestly, most of us have used Matlab like maybe once or twice before this class. And this is the first time our class is touching Matlab this semester.
The problem is, when you use `a_A(c - A_s)` I believe you mean to say `a_A` times `(c - A_s)` but it MATLAB (actually, and programming language) you have to explicitly write the `*`. Without the `*` MATLAB thinks `a_A` is an array, you're attempting to find the `c - A_s` index
Alright I'll remove it. I've heard a lot about CFD it's definitely a very interesting subject. It seems very difficult from the outside, that's probably due to my limited knowledge of coding. Maybe I'll look into to it more during some free time just in case. It can't hurt. Matlab does seem extremely useful when it comes to testing things. But once again we've hardly touched the damn thing in my classes. The only time we touched it before this was for a systems class and calc 2. Both time we were handed 99% of the code. While it has helpful features, having a lack of coding knowledge in the first place makes it all look a bit overwhelming. Thank you for all your help with this, it has definitely made everything easier to understand. 
use .* and .\/ instead of \* and .\/ when you want to do per element multiplication and division. your line vv1= (...) calculates two vectors then smashes them into each other to make a scalar.
Thank you so much!! Completely fixed the problem! Have a great night!!
&gt; Can anyone confirm this bug Its probably intended as a feature to make it easier to distinguish between the individual lines in the plot. &gt; provide a solution for it Whenever a plot isnt doing something you want, `gcf` and `gca` will almost certainly solve it. In this case, you want something like axCur=gca; axCur.Children % this shows everything plotted in the current axis. You can select things using axCur.Children(n). axCur.children(1).&lt;property&gt;=&lt;newVal&gt; `axCur.Children(n)` will show everything that is settable. You can change the line width, marker type, alpha value, etc.
Here's my thoughts. It's not bad to use Matlab on an Apple computer. I would instead ask why do you want an Apple computer? The hardware isn't necessarily anything special, and it's got quite a price premium attached to it. I don't know if you are intending to buy used, new, or refurbished. But I would recommend going with a used or refurbished laptop. I use a Lenovo Thinkpad T440. I bought it in June of 2016. It's still my daily driver laptop. The biggest thing for me about this laptop is that it has pretty good specs (i5-4300, 8Gb Ram) and I use matlab on it regularly. More importantly, its price point is something that isn't going to hurt me a lot financially in the event it gets stolen and I need to replace it. (It was &lt;$400) tl;dr Get something that is robust enough to do your work on and satisfy your needs, but also inexpensive enough so that if it needs to replaced due to theft or damage it won't hurt your wallet. 
Places to be careful with hardware selection: - if you depend on a toolbox that only works on one platform due to a dependency like hardware drivers that only exist on certain platforms. This can show up with certain instruments and sensors. - if you are going to be doing work that requires more hardware resources than you can get on the platform you choose. On Windows and Linux if you need truly heavy duty hardware with lots of memory, disk, or processors there are vendors who can provide it (with a huge P.O. attached, of course). With Apple you have one vendor and that's it. For student work you are only likely to encounter the first problem if you are going to be doing that kind of stuff, and then you can dual boot. But that's not properly a MATLAB problem, but a hardware support one. Otherwise, MATLAB is a OSX application. The syntax is the same as it is on Windows or Linux, with the only concessions being to OS specific stuff where it needs to be.
I second this recommendation. My T440 has served me very well.
Yeah I'm starting to understand that the more I work through this. He literally didn't tell us the time step max until a day ago. We basically had to work this from the ground up, I spent days deriving the equations using a book example as a guide. I still had zero clue how to stabilize them though, our book didn't touch 2D transient problems that couldn't use Fourier's stability. I'll probably try and find something interesting to code once this semester finally ends. And again thank you for everything
You're the best &lt;3 
Also taught Matlab and I agree, but, there were some minor issues with various toolboxes not functioning on a Mac. The bigger issue though is using other software such as Solidworks. For that, you need to have boot camp or parallels.
check out the documentation: https://www.mathworks.com/help/matlab/ref/fopen.html fopen opens the file but does not read it. try fgetl (or another function) try: fid = fopen('convergence.dat','r'); tline = fgetl(fid) 
[filename directory_name] = uigetfile('*.dat', 'Select a file'); fullname = fullfile(directory_name, filename); data = load(fullname);
You can make use of textscan()
but but but... https://www.xkcd.com/1171/
From [the documentation](https://www.mathworks.com/help/matlab/ref/input.html): &gt; If the user presses the Return key without entering anything, then input returns an empty matrix. Using isempty doesn't make varargin pointless; the point of varargin is to make the function more flexible. You can call it differently under different conditions.
Read the documentation 
Check if you need any specific toolboxes for your course. They're not allowed universal and some are pc/Mac/Linux only. Like wise for other software. I've not heard of many/any engineering departments using Mac...
It worked fine for me. On the other hand you are likely to find engineers to be quite anti-Mac. I think it goes with the general engineering attitude that low price and maximum functionality is more important than aesthetics or a good UI. Certain important pieces of software may require Windows, depending upon your field: in my case it was Solidworks, Atmel Studio and whatever Altera's package is. Bootcamp or VMs will get you by, providing you have the storage space for another OS.
Not clear what are you looking for. Trt this. close all; Xdom = [-2*pi:pi/400:2*pi] Ydom = [-1:.01:1] [XX, YY] = meshgrid(Xdom,Ydom); fx = XX; fy = sin(XX); StartY = [ones(1,30),-ones(1,30)]; StartX = -1:2/59:1; streamline(XX,YY,fx,fy,StartX,StartY) xlabel('x'); 
 StartX = [2*ones(1,30),-ones(1,30)]; StartY = -1:2/59:1;
That’s basically what I was looking for. I just did not realize StartX and StartY has to be vectors. Thank you
No Problem
Most undergraduate coursework doesn't require any special hardware/toolboxes. If you prefer OS X over Windows or Linux, you will be fine. My MBP 17' runs simulations about 20% slower than my 8-core Xeon Linux worstation, while being far more convenient to use.
Okay, I think I understand what you mean about it being more distinguishable. However, what confused me was that I did explicitly specify the line style (without any markers) but they were somehow included after. Thank you for your feedback, which helped me find the error. If anyone else experiences this weird behavior, the solution was to include: 'Marker','none' in the line specification, so each plotting command reads something like: plot(t,S,'Color','red','Linestyle',':','Marker','none'); See the nice final plot here: https://imgur.com/a/maohl 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/3Ao9Zep.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dxfytky) 
&gt; However, what confused me was that I did explicitly specify the line style (without any markers) but they were somehow included after. It would appear that Matlab is basically just doing what it does for normal plots. Typically, if you dont set a line color and plot multiple things matlab will automatically choose a new color for each line. Using `yyaxis` though the color indicates if you are on the left or right axis, so this behavior is instead applied to both `LineStyle` and `Marker` - if they arent explicitly set Matlab will automatically vary them to try and distinguish the lines.
doesn't work sadly... thanks though! :)
You could write your own function to take the average of surrounding pixels, or look into [downsampling](https://www.quora.com/How-do-I-downsample-an-image-by-taking-the-average-in-MATLAB)
You can resample, or just do it the easy way and discard every nth sample; if your original is dense enough, this should work fine.
Thanks for the response but they are not images rather 2D matrices that depend on time and length. Could downsampling still work?
Thanks for the insight. I tried the resample but it gave me negative numbers in return. For example I tried: y=(x,1,2) meaning I wanted 1/2 times the original sample rate but came back with bogus output. For the nth sample is there an easy function/way to do this? Would I just have to do: x(n:n:end,:) = []; x is the matrix. 
You can fit a grid with griddedInterpolant and then interpolate a coarser grid that is re-fitted with griddedInterpolant. Then use this second fit for your data purposes. If your data is not gridded, used the scattered version for the first interpolation.
Sounds like you want to compress your data. I wasn't sure if you want to reduce your data set forever or just for storage. For storage purposes you could try a loseless compression method, like the one below. I'm sure there are lossy methods mathworks supports as well. Seems like mathworks supports a bunch of data reduction for wavelets as well. Maybe something like that is useful. https://www.mathworks.com/matlabcentral/fileexchange/8899-rapid-lossless-data-compression-of-numerical-or-string-variables
Personally, for an n-vertex graph, I might start by creating a random (1, 0, 0) adjacency matrix (or at least the upper triangular portion). This can also be used as an input to graph().
I do think that ``randperm``is a good starting point. What you need to do is to filter out those repeating connections. Something like nodes = [randperm(10,10) randperm(10,10)]; filtered = unique(sort(nodes,2),'rows'); Here you first generate the node network, then you use ``sort``to arrange each row the same way. Now you can use the ``unique`` function to simply remove the only use the unique rows. You can also use second output of the ``unique`` function to get what rows the function wants to keep, i.e, something like: [~,unq_rows]=unique(sort(nodes,2),'rows'); filtered=A(:,sort(unq_rows)); Now the ``unq_rows`` contains the information on what rows are unique and by sorting that you get the exact same sequence as in the original array but with the repeating rows removed.
What's the data? How much precision do you need? Can you store as singles instead?
Have you tried swapping the xdot inputs around? If I'm not mistaken ode45 calls @dxdt(t,x), so that might lead to the matrix dimensions being inverted.
&gt; For example I tried: y=(x,1,2) What are you hoping this does? This is not valid MATLAB syntax
There is nothing stopping you from using `interp2` to decrease the density of your data, just hand in sparser data, and it will still work just fine. 
I did happen to try this just before seeing your comment and I got past this error! Thanks! Sadly...there is now another one... In an assignment A(:) = B, the number of elements in A and B must be the same. Error in func (line 17) xdot(2) = -inv(Mass_Matrix_one)*Stiffness_Matrix_one*x(1)+inv(Mass_Matrix_one)*Coupling_Matrix_one.*x(3)+inv(Mass_Matrix_one)*(- A*omega^2*sin(omega*t))*m_per_length*RHS_int; Error in odearguments (line 90) f0 = feval(ode,t0,y0,args{:}); % ODE15I sets args{1} to yp0. Error in ode45 (line 115) odearguments(FcnHandlesUsed, solver_name, ode, tspan, y0, options, varargin); Error in Project_ODE45script (line 21) [t,x] = ode45(@func,[0 20], [0 ; 0 ; 0]); Any ideas on this? It looks like it's telling me that the dimensions of xdot don't match the dimensions x , but I'm not sure how I can change the dimensions of xdot...
The error is telling you that the result of the equation: -inv(Mass_Matrix_one)*Stiffness_Matrix_one*x(1)+inv(Mass_Matrix_one)*Coupling_Matrix_one.*x(3)+inv(Mass_Matrix_one)*(- A*omega^2*sin(omega*t))*m_per_length*RHS_int is not one dimensional (which it should be since you're assigning the result to a single element). What are the dimensions of the mass matrix etc. in func? 
Hey I updated the post. Perhaps it gives you more insight of what I would liked to do. 
Hey I updated the post. Perhaps it gives you more insight of what I would liked to do. 
So, not to be rude, but did you try `doc interp2`? It will tell you how to use the function. The documentation and help in MATLAB is top notch, the doc for every function has a handful of examples showing you how to use the function. Specifically, use the default version of `interp2` by using Vq = interp2(X,Y,V,Xq,Yq) And define `Xp` and `Yp` to be as dense (or in your case, sparse) as you want. 
Are you allowed to use simulink?
What do you mean by random network? Network of nodes? You can generate edges pretty easily using matrices. Random networks are tricky, because of how they can be structured. If you want erdös-renyl random network; `C = rand(n) &gt; dens` works. Check albert barabasi for scale-free k=3 power law algorithms. If you need it, PM me and ill send you a function.
You want to use `subplot` https://www.mathworks.com/help/matlab/ref/subplot.html Subplot will allow you to display any [m x n] amount of plots on a single figure, allowing you to put your 3 plots side by side in quadrants and you can label them all separately. 
I have the xlim and ylim set for the desired range, but i still need the axis lines that pass through the origin 
You'll find the answer in here - https://ch.mathworks.com/help/releases/R2015b/matlab/ref/axes-properties.html Remember to name your axes as something so you can call *variableName.variableProperty*
Just do something like this v_down_scale = 2; h_down_scale = 2; downsampled = orig_data(1:v_down_scale:end, 1:h_down_scale:end,:); This will downsample your data by whatever amount you plug into those values. This will half the amount of data by doing 2, so from 900000x2000 -&gt; 450000x1000 You can choose to downsample more in one direction or the other with this method. 
separate your two columns into separate arrays, then use the `plot` function. x = col1; y = col2; plot(x,y); 
So I know for your test practice you want to do it "by hand" (which is good!) but the nice thing is, you can check your work just using MATLAB's built in `polyfit` function. You put in your x's and y's and degree fit, and it pops out the right answer. If you do that for the data you provided you'll find that your answer is correct. I have no insight into where they got their answer. 
Generate the data and then use `polyfit` to compute the best fit at increasing degree polynomials 
im confused as to why t is ranged from 0 to 1 because wont that mean we're only looking at the positive part of the sin(x) curve? (i hope u understood me) this is what ive tried but im not getting anything that makes sense from my plot: t=linspace(0,1,10); y=sin(t*pi); new_t=linspace(0,4*pi,10); n=1; p1=polyfit(t,y,n) new_y1=polyval(p1,new_t); y1=polyval(p1,t); error1=sum((y-y1).^2) n=2; p2=polyfit(t,y,n) new_y2=polyval(p2,new_t); y2=polyval(p2,t); error2=sum((y-y2).^2) n=3; p3=polyfit(t,y,n) new_y3=polyval(p3,new_t); y3=polyval(p3,t); error2=sum((y-y3).^2) plot(t,y,'o',new_t,new_y1,new_t,new_y2,new_t,new_y3) 
thats what i did but i get a weird looking graph :(
ohh okay makes sense. can i pm u my code because im a noob who doesnt know how to paste codes properly here :) 
https://pastebin.com/SPd19Rea 
How did u get on op?
Downsampling is the opposite of interpolation. Well, decimation is, but for your situation all you want to do is Downsample your data which is a totally valid approach I think. When you remove information from any system, there is no way to ensure that you are preventing data loss, because that is literally what you're doing...tossing data out. By downsampling half of your data out, you should still be holding the general form of your data
 doc plot 
You gave up on the entire approach after one failed attempt? This does not bode well for a future in what appears to be graduate level solid state physics. 
That’s because you haven’t defined C...maybe try C = contour(....); etc
Thanks for your reply I did what you suggested but when I use clabel(C,T) I get Error using clabel (line 119) Text list values must be a vector or a scalar. Error in filename (line 120) clabel(C,T);
Try: [c,h] = contour(...); clabel(c,h); If you want to label specific contour levels I would suggest looking up clabel in MATLAB’s documentation.
Since 2015 you can set origin actually! 
This could also be ‘intro to computing’ or something, where the data only matters because it is non-ideal. 
😂😂😂
Your question doesn't make too much sense, but don't think about it too much. A break; call literally just breaks the loop (whether it be a for, while, switch) exactly where the break is placed and whatever is calculated before it within the loop stays, anything that comes after doesn't happen 
The slides are wrong (assuming they are meant to be standard least squares). The answer you got is correct. Also, do yourself a favor and completely ignore the method shown in the slides and use this instead: % make x and y column vectors x=x(:); y=y(:); N=2; % set to any polynomial order you want % construct forward operator matrix G=bsxfun(@power,x(:),[0:N]); % get model paramaters m_est=(G'*G)\G'*y; % estimate data y_est=G*m_est; The slides are trying to tell you to manually construct each element in `G'*G` and `G'*y` and then put it all together. Not only is this significantly more error prone, but it is slower. (both in how long it takes to write the code and in execution time...there is a 0% chance that you can generate `G'*G` faster than your BLAS library can). 
Oh, it was a multiple choice for a practice exam, where you were told to determine the number of iterations a specific while loop would make, and I was unsure whether to count the incomplete iteration or not.
Okay, so you've been told that you need to use the Runga-Kutta method. Think about what the Runga-Kutta method is actually used for: solving ODE's. Does the problem have an ODE that you can identify? If not, Matlab isn't going to make one for you, so you'll need to do some math by hand first. You're trying to simulate orbits, which are what? The movement of the planets, i.e. the position of the planets as a function of time. How could you form an equation for that from the information you have? What variables relate to the position? What variables relate to time? Matlab isn't some magic tool that can just give you all the info from nothing. It's essentially a really fancy calculator. It can do more complex things than a lot of other calculators, but what is going to do is tell you the answer to a math question. When you're doing a simulation or trying to set up a model or something like that in matlab, there are three basic steps: 1. Figure out what you're trying to accomplish and turn your question into a math question 2. Program it into Matlab and ask if to solve the equation/system 3. Interpret the results. It might seem daunting to get started, but you have the tools at your disposal to get this done. Start with step 1: try to work out the equations you want to solve. You don't need to find the solutions - that's what Matlab is for - but you do need to find the questions. Based on your response above it's clear that you're not past this step yet. 
You put a space, so Matlab treated `max` like character inputs. `[109 97 120]` are the ASCII codes for `m a x` (char-&gt;real conversion).
What was the argument?
Cool, I worked that out once I tried a couple different functions and realised the length of the list was suspiciously the length of the function name. This is exactly why I hate MATLAB though. Any other real programming language would complain about trying to pass a function as an argument expecting a complex number, but nope MATLAB converts it to a string *just because*. Eugh. People complain about JavaScript but this is awful.
No, a real language that has *polymorphism* can be allowed to *overload* a function of a given name such that the method(s) appropriate to the supplied input type(s) and quantity(s) are used. Did you notice how, when you typed `real max`, that `max` wasn't black? Did you see that it turned purple? Try `real('max')`. Notice that `'max'` is *also* purple. *Matlab is telling you they're character inputs.* The function `real` is overloaded. `diff` is overloaded. Heck `abs` is overloaded - `abs(x)` returns the absolute value of `x`, OR it returns the complex magnitude of `x`. If `x` is a singular complex value, then `abs(x) == norm(x)`. Every modern language does this. Try `string1 + string2` in C++ or Python. Does that give you an error because you're trying to "pass a string as an argument expecting a number?" No, absolutely not lol. It doesn't even give you a *warning*, because it's working exactly the way it's supposed to. Don't hate Matlab because you got a result you weren't expecting. *Read the documentation* and try to learn what it's doing. You're just new to the language, which isn't a bad thing; you just need to take time to familiarize yourself with how to use it. 
So, one thing- I'd put that in a loop of sorts. The only thing changing is `n`, so instead of copy and pasting the same code over and over, put it in a for loop, it's what they're for. But other than that, you are doing what they asked (although, I'm not sure why you're plotting from 0 to 1.5, but maybe that's what they homework says to do?). I'm assuming your code runs? What are you asking me to do?
So think about what an ODE solver will do- you write a function of variables you want (for you, probably position and velocity?), and then you write an equation that expresses those variables as derivatives of themselves (so, you have a force, but once you cancel out little m, you'll have an acceleration), plug in an "initial state" (aka- where the planet is at t = 0 and it's velocity at t = 0), and then once you've done that, you're done. MATLAB's ODE solver will do the rest. 
Others are saying it depends on how you count it, but no, it does. If you hit a `break` statement, then you: 1. Entered an iteration in your `while` loop, 2. Completed all the logic/branching inside your loop, 3. Hit the `break` statement and exited the current iteration. Yes, it completely counts as an iteration. Whether or not you increment a loop counter depends on the logic itself, but it absolutely is an iteration. You started the iteration, followed all the logic and decision trees in the iteration, and then exited the iteration. 
Are you solving Ax = 0? Solutions are det(A) = 0, i.e. singular matrix, and are obtained with null
It didn't turn a function name in to a string. You passed it a string. Didn't have to be a function name. The command syntax is well documented and exists in plenty of "real" languages, typically ones that can be run interactively. 
What I'm complaining about is the fact that it's so context sensitive. Why should `max` refer to a function in one context, but become a string in another? To me that's bad design. Inconsistent behaviour leads to bugs. I have no issue that `real` will happily take a character and give the ASCII representation of it . But the fact that MATLAB just decides that in this context, `max` will be a string? That's what I think is wrong.
Can you bin-average the data? 
Have you tried `pinv(A)*b`? That usually works. otherwise, try s = svd(A); A = A + speye(size(A))*exp((log(max(s))+2*log(min(s)))/3)
You're giving it to it as *characters*. The `thing` `space` `otherThing` means you want `otherThing` to be *characters.* It's purple. It's showing you it's a character input. You put a space in there. This is your doing. It's not "overly sensitive," it's responding to your decision to put a space in there **and** it's showing you it's assuming your input is characters by changing the colors for you. It's doing everything it can to show you how it's interpreting what you're doing. I'm not sure what else you want it to do.
Did you google it? I found example code when I googled it.
I don't have any actual experience with simulink, but being an expert in GPS, I'm curious as to what sort of model you're trying to make. Can you describe it?
If it were me, id probably do something like this % example data data=bsxfun(@plus,sin(0:1/(10*pi):8*pi),cos(0:1/(10*pi):8*pi)'); data=data+randn(size(data)); % define what you want your new dataSize to be %Nnew=[90000x1000]; Nnew=round(size(data)./4); % make new size even Nnew=2*round(Nnew./2); % fft data in both dimensions dataMod=fftshift(fft2(data)); % crop data in freq domain dataMod=dataMod(round(size(dataMod,1)-Nnew(1))/2+1:end-round(size(dataMod,1)-Nnew(1))/2, round(size(dataMod,2)-Nnew(2))/2+1:end-round(size(dataMod,2)-Nnew(2))/2); % apply tukey window to edges dataMod=bsxfun(@times,bsxfun(@times,dataMod,reshape(tukeywin(size(dataMod,1),0.2),[],1)),reshape(tukeywin(size(dataMod,2),0.2),1,[])); % ifft data %dataMod=ifft2(ifftshift(dataMod),'symmetric').*(numel(dataMod)/numel(data)); dataMod=ifft2(ifftshift(dataMod),'symmetric'); % correct amplitudes dataMod=dataMod.*((sum(sum(bsxfun(@times,bsxfun(@times,double(logical(dataMod)),reshape(tukeywin(size(dataMod,1),0.2),[],1)),reshape(tukeywin(size(dataMod,2),0.2),1,[])))))/nnz(data)); %dataMod=dataMod..*(numel(dataMod)/numel(data)); % setup plotting dm=mean(data(:)); ds=std(data(:)); clim=[dm-2*ds,dm+2*ds]; % plot figure subplot(1,2,1) imagesc(data) colorbar caxis([clim]) title('ORIGINAL DATA') subplot(1,2,2) imagesc(dataMod) colorbar caxis([clim]) title('NEW DATA') 
Because I state one thing what makes you assume it was one attempt? I've been working on this for more than a week bud. And It is grad level but I'm not grad level. I'm a research assistant in bachelor.
True but seeing the sample of rows above, do you think it would still be viable to take some rows out even though they themselves are not dense to one another?
Great reply, basically I have to couple them into a system of ODEs, but I'm not sure how I'm supposed to go about this, either all values in one column matrix or different column matrices for x y z. I've come up with this: %[ x = dy/dt-ay;x = (dz/dt - b - zc)/z;dx/dt = -y-z] xval = [y_prim-a*y;(z_prim-b-z*c)/z;-y-z]; %[ y = -dx/dt -z; y = (dy/dt-x)/a; dy/dt = x+ay] yval = [-x_prim -z;(y_prim-x)/a;x+a*y]; %[ z = -dx/dt -y; z = (dz/dt-b)/(x-c); dz/dt = b+z(x-c)] zval = [-x_prim -y;(z_prim-b)/(x-c);b+z*(x-c)]; Let me know if I'm on the right path or not because I'm really not too sure
Sorry what does the (1, 0, 0) mean in the context of the adjacency matrix? Anyway, I decided to implement the network generating with adjacency matrices, and it works great. However, my new issue is that sometimes it is possible to create multiple networks. for example: https://i.imgur.com/vulpAjv.png Do you know if there's a way to prevent this? By the way, thanks for your help so far! 
This is really helpful, thank you! 
Nearly all languages have a small list of keywords, protected from being used as an identifier. Everything else is context specific, like max or real. I do agree that it's interpretation of grammar is odd but can be useful in the command terminal. real max Is interpreted as real('max') 
Oh okay, thank you very much!
Solved it. Had some faults in my matrice
What do you mean you can’t enter it as a new transfer function? This seems to be the easiest approach rather than trying to find the relationship between K, a and P,I,D.
It says it's improper, the numerator cannot be larger than the denominator. I made a=0.3 and ignored K as I don't know how to enter variables either.
Thank you for the comment. You've helped me realize (sort of) my mistake... I basically just realized that the input x(3) actually needs to be a 2x1 vector in order for the dimensions to workout, and also the output xdot(3) needs to be a 2x1 vector. I'm trying to think of how to implement this but I'm not sure how... Any hints?
It’s improper because the power of s in the numerator is larger than the power of s in the denominator. You can not implement that controller directly in Simulink. One idea is to feedback the derivative of what’s currently being fed back, and then add an integrator (1/s) to the controller. This will make the order of the control 2nd/2nd, instead of 2nd/1st. 
You're going to have to do a little algebra, but it's *just* algebra. Expand the numerator to get `&lt;something&gt;s^2 + &lt;something&gt;s + &lt;something&gt;`. Then, split everything out so you get `&lt;something&gt;s^2/s + &lt;something&gt;s/s + &lt;something&gt;/s`. Then, if you have any `s` terms in the numerator, multiply the numerator and denominator of that term by `1/s`. You should wind up with a set of terms that looks like `&lt;something&gt;/s + &lt;something&gt; + &lt;something&gt;/(1/s)`, which is then *exactly* what you plug into the PID page. Don't forget to distribute `K`!
An (i, j, k) adjacency matrix has i's for edges, j's for non-edges, and k's along the diagonal. As for your connectivity issue, your random walk is actually one common way to test this. If your graph is *truly* random, an unconnected graph is always possible (could even be zero edges!). An alternative: A sufficient condition for a connected graph is that the UT portion of the adjacency matrix has: * A'\***1** &gt;= **1** * or **1**^(T)\*A' &gt;= **1**^(T), where A' is the UT portion of A without its diagonal row or column (e.g. the first column or last row, depending on which you use, resulting in an n x (n-1) or (n-1) x n matrix), and **1** is an n x 1 vector of ones. For the graph you presented, this test would fail on column 2 of A (column 1 of A'), or row 5 of A and A'. This is not a necessary condition, however, as in your example you could add edge 3-6 to solve the problem as well. In other words, if you pass this test you can say for certain that the graph is connected, but if you fail it, it may still be connected. Another alternative: [conncomp](https://www.mathworks.com/help/matlab/ref/graph.conncomp.html).
Let me preface this by saying I've never programmed in Java. It looks like you're "disposing" the Matlab function `BigTesting`; do you need to also "dispose" the MWStructArrays? There is a dispose method. You have four data structs; does your function actually return four outputs? It looks like `BigTesting` is a class; do you actually have a `disposeAllInstances` method written for that class? Is there a glaring bug in there? You wrapped your *function* in a `try ... catch` block; did you try wrapping your disposal in the same? Lastly, if all else fails - the bottom of your crash log says to contact Mathworks if you can reproduce the crash. Have you tried contacting them?
If you're having trouble with the PID block, I recommend using the built in PID tuner app. doc pidTuner 
Assuming you're on windows: try fclose(instrfind); % Closes the COM ports if you left them open catch end clear baudrate = 115200; % Change baud rate to what you need s = serial('COM3','BaudRate',baudrate); % change the COM Port number as needed fopen(s); pause(5) %DO STUFF% fclose(s) delete(s) clear(s) 
Thanks for the help! I'm disposing all objects associating with the BigTesting class so I don't think there is a need to dispose the MWStructArrays. Yes, the function does return exactly 4 structs. I created a case at the Matlab support a couple of days ago and waiting for a response but I'm curious about finding the issue and try to solve it. 
 doc max [M,I] = max(___) "Index to maximum values of A, returned as a scalar, vector, matrix, or multidimensional array. I is the same size as M. If the largest element occurs more than once, then I contains the index to the first occurrence of the value"
Yes, there is a way. M = T(1:n_i,1:n_j,1:k); %Builds the 101 matrices for the temperature profile [T_max, Indx] = max(M(:)); %Returns the maximum value throughout all matrices M(Indx) % This is the index in 1D Vector form that is the max value % This will give you the indexes for each dimension for that max value [Indx1, Indx2, Indx3] = ind2sub(size(M), Indx);
Thank you so much!
Ok, so I think I might have confused you even more, I'm sorry. The original derivatives you have up there are already a system of three, coupled, 1st-order ODEs. Since this is already sufficient for the RK4, I don't think trying to change them is a worthwhile endeavor (unless your prof. is *specifically* asking you to do this but I doubt it). As to my last question, I had hoped you'd see that you can't get *all* the values of the derivatives without actually going through the RK4 since you need the new x,y, and z values from the previous RK4 iteration, right? My point is, you can store the values of these derivatives *after the fact* or you can update your matrix with the previous new value at each iteration step as you go along but you can't build the **entire** matrix and then use it for the RK4 (to find the k1, k2, etc.) like your initial question implies. My guess is you might need to carefully think about your assumptions when reading the question prompt (999/1000 times this was the issue when I'd get stuck on a problem!). If the goal of the problem is to solve the IVP for the Rössler attractor using RK4 and then plotting the resulting matrix of spatial values, then the problem is straightforward and you have a lot of wiggle room in how to do it. If you are *explicitly required* to do it a certain way, then that is an altogether different question and you will need to specify more clearly what you are explicitly required to do. For the straightforward method, here's one possible way of how to go about this (I split everything into vectors rather than 3D matrices to make it easier to see what is happening): In your main program: %% Initialize your variables/matrices and parameters t0 = 0; x0 = something; dx0 = something; etc. ... h = something; t = t0:h:some size; nsteps = length(t); etc. ... dxdt = zeros(1,nsteps); % Initializes a vector, nsteps long, with zeros. dydt = zeros(1,nsteps); etc. ... x = zeros(1,nsteps); etc. ... x(1) = x0; % Updates the value of your first entry with whatever you initialized x0 to. dxdt(1) = dx0; etc. ... %% Create loop(s) necessary to use RK4 and update your vectors/matrices for n = 1:(nsteps-1) x(n+1) = RK4(t, x(n), dxdt(n)); y(n+1) = etc. ...; dxdt(n+1) = something; etc. ... end %% Plot or write values to file as necessary plot or whatever; So you see, in the above example, I update each vector (for x, y, dxdt, etc.) at each step of the RK4 and I use the previous value to calculate the new one. Note that the way I wrote the code won't work without you implementing the RK4 function correctly (for this kind of code), telling the main program how it should update the value of dxdt in loop, etc.. That is up to you but I think this should be enough to go on. You have a lot of room to work with here. You can choose to write a new function to update the derivatives by calling it; you can keep things in their own separate vectors and have the RK4 work on scalar inputs; you can lump all similar vectors into one matrix that contains all three and have the RK4 work on vectors; you can keep your code as is and try figure out how to create the final matrices instead, etc.. As to how to do a certain task in MATLAB (e.g. call a function, index an array, etc.) the help documentation is pretty robust, if a bit convoluted at times. I honestly don't know what else to write for this without seeing the question specifically (or giving the answer away) but I hope this gets you on the right track! Good luck.
First, I believe you just need to do func = ilaplace(F) since the default return is a function of t. If you want to specify a different variable, you'll need to define it as a syms, like syms s t One alternative is to create a function from the symbolic variable func, like so syms s t L = 1/s^3 F = ilaplace(L,t) func = symfun(F,t) Then you can call func for any value you want to evaluate it at. 
As long as the variables are linear the you can set it up as an augmented matrix and just use rref (A) to make your last column the answers. 
So my F function is actually being changed frequently and there are multiple of them, so copy and pasting doesn't really work for me unfortunately. But looks like "sub" will work either way...so thank you!! 
Nvm, it worked. Thanks!
do you want to plot the 16th row after each iteration? I'm not sure what you're asking for here.
&gt; but to no avail When you tried to plot that, it didn't just "not work." It gave you a very specific error message. That error message was Error using plot Data cannot have more than 2 dimensions. Look at what you're handing into `plot`. How many dimensions does it have?
Sorry. To be more clear, Each matrix index refers to a temperature on a grid. The temperature is calculated 101 different times. I need to plot the change along the 16th row of indices versus the 101 iterations. Sorry, I apologize if my question was not clear enough.
It would have 3 dimensions, but I am not very familiar with plotting in matlab. Would my plot then just be..? plot(A(16,k)); I don't know how to focus on one row of an array 
So a couple of things. I recommend typing `doc plot` into your command window, as I don't think `plot` works the way you think it does (aka, to plot col1 of an array vs col2 of an array, you don't say `plot(a)` you type `plot(a(:,1), a(:,2))` Second, if you have a 3D array, but one of the dimensions is length 1, you can use the `squeeze` function to make it a 2D array. 
Yea, I figured if there was a way to do it for certain formats it should be doable for GIF's too. I tried researching it but results come up pretty dry. 
Ih good. Glad u got it sorted
Your problem is this part: x|y&gt;19 I suspect what you want is: (x&gt;19)|(y&gt;19) What Matlab is doing instead is: (x)|(y&gt;19) While the second part is false, x is 4, which is being interpreted as true since it is nonzero. This means your expression evaluates as follows: Z = (y&gt;2) &amp; ( x | y&gt;19) Z = (true) &amp; ( 4 | false) Z = (true) &amp; (true|false) Z = (true) &amp; (true) Z = true Regarding vectors, the single ampersand \(&amp;\) is an element\-wise vector operation, so it will work for vectors and matrices but the vectors or matrices must have the same dimensions. The double ampersand \(&amp;&amp;\) is a scalar operation and will only work with single values. Similarly, the operator | works on vectors while the operator || only works on scalars. In general, you can always use the vector operations of &amp; and |, although it's worth noting that the scalar operators can be faster, since they will shortcut your boolean operations. This means that A&amp;&amp;B will only evaluate B if A is true, whereas A&amp;B will always evaluate both A and B. If B is a large, slow expression to evaluate, and it creates a scalar, then A&amp;&amp;B will be faster when A is false.
It would be super handy if you *posted an example* so we could try to achieve your functionality. 
Not sure what kind of example you want, I explained in the body already that the 3rd argout when doing an imread on a PNG file type is the alpha channel that controls the transparency, I want to know if you can get the alpha channels for .GIF formatted files for every frame of a GIF that contains transparency because the 3rd argout is an empty array for .GIF images
Eh thought it was a scenario where some gifs would return a transparency layer and some wouldn't. Tried to find an example where I could do it and found I also couldn't export the transparency map. *So I read the documentation* to find out how to, and I read: &gt; [A,map,transparency] = imread(___) additionally returns the image transparency. **This syntax applies only to PNG, CUR, and ICO files.** For PNG files, transparency is the alpha channel, if one is present. For CUR and ICO files, it is the AND (opacity) mask. Emphasis added. You can't do it with `imread`. So, that said, I decided I go ahead and try to figure out a workaround. You can make your own transparency map as follows: [A, map, ~] = imread('C:\yourImage.gif'); transparentColor = [1 1 1]; [~, transparentIdx] = ismember(transparentColor, map, 'rows'); transparentIdx = transparentIdx - 1; transparency = ~(A==transparentIdx); Essentially, one of the "colors" in your color map *actually* maps to transparency. On the gif I used, the "transparent color" was `[1 1 1]`. Yours might be different, so that's something to check, but otherwise this makes you a transparency map by finding all the locations in `A` that reference the transparent color. If A references the transparent color, then set that value in transparency to zero, otherwise set it to one. If you have partial transparency, then you'll need to find some other method. 
&gt; I want to compute "holes" or "valleys" in this beta ... what I want to do is to find a set of *continuous* time-points. Please clarify: 1. What a beta is (the red line or the other red line), 2. What you are calling a "hole" or "valley," 3. What you mean when you say you want to find "continuous time points." If you're making these plots in Matlab, try using `plot(yourX, yourY, '-.')` or some other marker option to distinguish between the two lines. Or a different color. Or a different width. Anything. 
Aren’t GIF transparencies tied to a color? GIF images have a fixed pallet and one of the colors can be assigned to be transparent. 
Hey thanks, So here is an updated image - https://i.imgur.com/U884E1z.png The "beta" activity is the higher-frequency activity you see in the dashed-line. The lower-frequency is activity is the solid line. What I mean by a hole or a valley is that if you for e.g. look at the bottom-right plot with the black dashed and solid lines, you will see that the amplitude of this activity goes down between -0.15 to +0.02 seconds. Before and after you see high amplitude "bursting". I want to detect such continuous portions which I call a "hole" i.e. the absence of high-amplitude bursting. So I will get, for this particular trace, continuous time-points from -0.15 to +0.02. 
Depending on what you want to do with this data, there are different options. If this is for a visual, just so you can look at all of the data, you could create cell arrays for each table index (with the three values included), and look at it that way. If you want this to remain functional, you'll need to loop through any later operations for each set of cells, which will slow down your code, but should still be usable. If you could give an idea of what you want out of this table, that'd help inform my advice.
I do chronic rat ephys, both LFP and single unit. So, the traces in these graphs are the amplitude? As in the result of applying `abs` to the output of `hilbert`? One thing I am noticing is that there are oscillations in the 'beta amplitude' that look suspiciously close to beta frequency themselves. I suspect that you might be seeing an effect that occurs when the instantaneous frequency of a signal is variable and falls near the edges of the filter's frequency response
I honestly have no idea. I found a gif that was primarily transparent, then used `mode(mode(A))` to find what the mapping was. I would imagine that, for a particular gif, it would be consistent throughout, but I'm no gif expert. 
I think Matlab is allround applicable, but you'll often see that for specific applications specialised software exists (cq. DIANA). 
Yea after some research that seemed to be the answer. Thanks :)
The only thing that runs in parallel in Matlab are functions that are designed specifically to run in parallel, like `parfor`. Try the [Parallel Computing Toolbox](https://www.mathworks.com/help/distcomp/index.html) for more information. For general functions, though, it's always sequential. 
I found out that using function `iminfo` that if a GIF contains transparency, the output will contain a field called `TransparentColor`, which is just a single uint8 value. I'm assuming this is the index of the map that the transparent color maps to, and you can pull this for every frame. Neat :)
Nice!
The plot commands still happen sequentially, but they do wait either to be *told* to finish, with "drawnow," or they'll wait for "down time" to plot, like during a `pause()`. In fact, before I found out about `drawnow;`, I used to use `pause(0.0001)` to get graphics to update in a loop. 
In almost all cases, the rest of the results of `function1` will depend on the outputs of `function2` (otherwise, why is `function2` inside of `function1`?). Thus, it couldn't continue running until `function2` completes. 
it will wait. that's how most programming languages work, not just matlab.
&gt; The result I get is 1. Although the first operand is true, shouldn't it be 0 since the second operand should be 0? By default logical operations operate on a term-by-term basis. Inputting a scalar is just using a 1 element vector. to check multiple conditions simultaniously, use functions `any` and `all`.
You're plotting the activation weights. Have a look here for the explained variance: https://www.mathworks.com/help/stats/pca.html#bti6r20-1
Adding to the above discussion, if you really want to call functions asynchronously, spmd might be what you are looking for.
&gt;[Xq,Yq] = meshgrid(900:2:9.5e-14) That call to mesh grid doesn't make sense. You need to pass in two non-empty vectors x and y that represent the values you want to sample. Try the following, then adapt it to your problem: x = 1:4 y = 5:2:10 [X, Y] = meshgrid(x, y) Note that above you only attempted to pass in one vector AND that vector is empty because your first value is greater than the last value and your stide is positive. If I were you I'd review the Matlab documentation for creating vectors (https://www.mathworks.com/help/matlab/ref/colon.html) 
Calling people bud is condescending. Prob should avoid that if you're asking for help.
&gt;For the nth sample is there an easy function/way to do this? Would I just have to do: &gt; &gt;x(n:n:end,:) = []; x is the matrix. Your slice is wrong again (see my other comment about creating matrices using the semicolon operator) I would keep every, say, tenth row is: x = x(1:10:end, :); 
 function [ names ] = getEXT( input_args ) %GETTIFF Return list of names of all the filetypes that match the input. %Pass plain text of file type as string, i.e. 'jpeg', the *. is appended. % input the extension, text only. no punctuation. %% Okay, start handling files % Retrieve all the files in a directory names = dir(['*.', input_args]); names = {names.name}; %Look, a Cell Array with names as a string...I think. Yes, just the names. %Get the number of elements in the names struct. end
You have either made egregious syntax errors, or the poor formatting of your code is making it impossible to read. Either way, can't do anything with that mess. Try adding 4 spaces before each line of code, like this: if isUglyCode solution = format(it, 'better'); editPostCode; help = onTheWay; else solution = 'https://www.google.com/search?q=Assignment+between+unlike+types+is+not+allowed' end 
Thank you for your comment. I can't use the tuner as I am given a range for `a` and a range for `K` to use and specifically find the best values within said range. Maybe if I were to understand how to translate `P`, `I`, `D`and `N` to `K` and `a` the tuner would be helpful to me.
Thank you for your reply. I admit that I do not fully understand what you mean but this is my attempt: https://imgur.com/HZNmMfY is that correct? I simplified the equation to s^2 + 2as + a^2 -------------- s and made `a=0.1` and `K=3`, I put `K` as a gain block.
Your code is so mangled I can't tell what you're inputting at the command line. Try a `clear`? I copy/pasted as best as I could, what you wrote, and I got `ans = 3.9848`. I definitely did not get an error. 
++ Wow. I need to pay you. I didn't expect a reply so soon and you're much clearer than my lecturers. I'm going into uni later today so I will definitely apply what you said. THANK YOU shtpst!
I second using dir
A little late but hopefully this is still helpful since all the information is sorta scattered throughout all the above posts... even if you already submitted your homework :\) Like a lot of other people said, the root locus plot shows you what happens as you adjust your gain K from zero to infinity. Basically, as K approaches 0, your closed loop poles will approach your open loop poles, and as K approaches infinity, your closed loop poles will approach your open loop zeros \(there are some wrinkles to this, but that's the gist of it\). So, the lines of the root locus are tracing out the trajectory of where your closed loop poles will be located as you vary K. MATLAB makes plotting root loci really easy with rlocus\(\). Check the documentation [here](https://www.mathworks.com/help/control/ref/rlocus.html) but again, everyone above was correct in saying that you should just do rlocus\(G\) and ignore K. That's how MATLAB wants it \(see the first video below\). Here's how I did it: numerator = [1 3] * 3; denominator = conv([1 5], [1 3 0 0]); system = tf(numerator, denominator); rlocus(system); and looks like your problem has only one point of conditional stability \(AKA system is metastable\) at K = 0, at which your closed loop transfer function is unity, and your output is always equal to your input. So in direct answer to your question that I'm replying to: what you are doing is giving rlocus\(\) your open loop system G, and it is showing you what all of the possible \(unity feedback\) closed loop systems could be if you can vary your gain K to whatever value you want. Here are two Brian Douglas videos that should really help clear your MATLAB questions up with some visuals: [https://youtu.be/eTVddYCeiKI?t=3m20s](https://youtu.be/eTVddYCeiKI?t=3m20s) \(watch 3:20 til 4:45\) [https://youtu.be/pG3\_b7wuweQ](https://youtu.be/pG3_b7wuweQ) \(whole video is great, but first half is most relevant\)
Haha thanks, glad to help. 
You have a 3 dimensional data set. Imagine it like a cube of data. You can take a "slice" of the data set. You choose ONE of the third dimensions, and then look at all data on the first two dimensions. However, if you visualized the entire data set as a cube, *now* you have a sheet of paper. You can't show it as a line because it's a *plane* of data. You need to use something like `mesh` to display your plane of data. I can't tell what you're intending this data to *mean*, or what your indexing variables should be, but try this: mesh(squeeze(T(1:n_i, 1:n_j, 1))); That's one "slice" or plane of your 3D data set. The x/y axis values are incrementing by 1, because again I can't tell what you're intending for those to be. You can make a `meshgrid` on your own with your own x/y values and then lay the mesh on those grids. But hopefully, you see that you can't really plot all of these values all at once. Your data set is a cube, so you can plot it, as a mesh, one layer at a time. However, this is like having a ream of paper - can you see what's drawn on a sheet in the middle? If you had a novel, and all the pages were transparent, would you actually be able to read anything?? You need to think about how you're imagining this plot is going to turn out, given the data set you've generated. 
tangentially related... Why does dir, when called normally, return 2 blank 'files', does anyone know?
Other people have solves your problem adequately, but i'de like to answer the literal question in the title with a fact about matlab that might help you understand stuff. In matlab a [scalar is just a 1x1 matrix](https://nl.mathworks.com/help/matlab/math/empty-matrices-scalars-and-vectors.html). That could've answered the question you thought you had and gotten you one step closer (by elimination) to the solution of the problem you wanted to solve. While i'm typing, i also have a worse solution (because less readable) for your problem than other people have given, but it uses some matrix operations which you might want to study to learn more matlab Z = (y &gt; 2 ) &amp; any([x,y]&gt;19) here I construct an array of length 2 using ` [ ] `, then i compare all the values to 19 (with the &gt;) , and subsequently i do a or operation using ` any ` in stead of `| `, because we now have an array of logicals for which one has to be true, and not two seperate variables. 
Hey, EatMyPossum, just a quick heads-up: **seperate** is actually spelled **separate**. You can remember it by **-par- in the middle**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
so if you just call dir on it's own, or with only a file path... the first two results are &gt;. &gt;.. It's fine to work around, I've just never understood why it exists.
-par- in the middle.. gosh bot, it's soo much easier to remember now all of a suddon. 
The single period is the current folder, the double period is the parent folder. If you run a command prompt you can type `dir/w/p` and see the same thing. Then you can **c**hange **d**irectory with `cd .` or `cd ..`. The `cd .` command takes you to the current folder. Not super useful, but the `cd ..` command takes you "up" one folder level. It's easier than typing the full path name. It's a system file directory thing. 
ah okie doke, fair enough! Thank you.
You're right :). Changed it. 
This is not a MATLAB thing, this is how every modern operating system handles relative file paths. 
This. Resizing with a scale factor &lt; 1 still involves interpolation, it’s just that the set of the query points is smaller. If you have a recent version of MATLAB, imresize has been moved to base MATLAB. Just use that. It will also manage anti-aliasing for you.
If this is your temp definition: temp = 283.15:1:95; Then it's defined incorrectly. (i.e. returning an empty array) If you change the middle number (the increment parameter) to a -1, it will create a non-empty array.
oh wow, that simple? Sorry and thank you!
 &gt;Is there a way to read it as different blocks but with one program? P.S. the zeros after the number of stations is because i use the command 'load' ideally i wouldn't write these zeros. If you know your data will only be in three columns (and that no station will be at an x,0,0 coordinate, you can check that the column values at indexes 2 and 3 are zero, and if they are, traverse the number of rows at index 1. &gt; P.S.2 the number of stations and the coordinates don't necessarily need to be in the same .txt file That's no big deal, you can process multiple files and save them to a common variable/array (or not, your choice)
And how would i check this?
Here you go. This assumes you'll drop the `N 0 0` notation to indicate the number of stations and just go with `N` instead: 
Wait, when you say 2nd grade, you don't mean you're in elementary school, do you? If so, super impressed. Anyway, I'd just assign a probability for a bit flip, say 0.1% (seems high, but you know). Then, if your message you're sending is n bits long, you can create a 1xn vector with `rand(1,n)` then you could flip the bit for every time that your random number is greater than 0.999. 
I realized this, and fixed it, yet still not correct run. 
You're going to need to be a little more specific here. MATLAB functions are able to accept strings as inputs, so if you elaborate on your issue we can help. Otherwise, you're right that MATLAB can accept string inputs.
You can have passed = length (sv) before your while statement. And that "scores = sv" is not needed and might be causing some trouble. and in your elseif statement you can also have "passed = passed -1 ;" after your fprintf which just uses your while statement to remove failures and you wouldn't need that sum thing you're doing at the end. 
fitcsvm works only for binary classification. You are trying to do multiclass classification, you must use the function [fitecoc](https://www.mathworks.com/help/stats/fitcecoc.html)
thank you very much! does this work only for these two events or can i use it for n-events?
Thank you very much! it's so much better not having to write the zeros :D
...weird. If you put sv(i) on the first line after the while statement, does it print out the entries of sv?
Just one more thing, my program uses the information of each 'group', then how would i retrieve this information since when i input 'stationMatrix' the code only gives me the matrix of the last group
Just one more thing, my program uses the information of each 'group', then how would i retrieve this information since when i input 'stationMatrix' the code only gives me the matrix of the last group
What do you mean it uses the information of each group? You could put everything in a cell array, if you wanted, but you have to either dynamically resize the array (which is not the end of the world, but kind of poor practice to get in the habit of), or you would loop through once to see how many cells you need. In the example I gave, after you open the file, you could do something like: stationGroups = cell(0,1); This initializes it and lets Matlab know it's supposed to be a cell array. Then, after the `for` loop that creates the `stationMatrix`, you could just do: stationGroups{end+1} = stationMatrix; Then, if you want to find out how many `stationGroups` you have, you could do `nGroups = length(stationGroups)`. If you wanted to get the stations for, say, group 2, then you could do `myStation = stationGroups{2}`. The handy thing about cell arrays is that you can put anything in them, so you could make a second column to have statistics about them, or a column for region codes or countries, phone numbers, dates - whatever you want. 
I used my program only for one event, so i used the information from the matrix of the x,y,z-data to run it, with more than one event i will have to run each event through the program. I will try what you wrote now, thanks very much again!
No problem, glad to help!
Hey thanks! I will try the moving average idea! I can definitely give you some traces, I just need to upload them!
Hey, no these are not Hilberted. I have plots for the Hilberted traces too.
There are online and offline apps that take in images of graphs and spit out data points. It's kind of manual (sometimes you have to trace the line) but usually just inputting axis info. I'm on phone or I'd link, but shouldn't be hard to find
This bug intrigued me so I ran it myself. clear, clc sv = [83, 95, 65, 55, 100, 66, 82, 87, 96, 89, 75, 93, ... 99, 82, 67, 88, 66, 57, 77, 92]; i = 1; score = sv; while i &lt;= 20 if sv(i) &gt;= 90 fprintf('"Excellent!" \n'); elseif sv(i) &lt;= 60 fprintf('"You can do better!" \n') end i = i+ 1; end This is your code? Exactly this? Because it's working absolutely fine on my machine. 
This user isn't asking for help, they're linking to a blog on mathworks.com
Oh. I'm dumb. How embarrassing.
Usually when I make a moving object I do a for loop for the length of the vector being plotted and plot each part of it in that increment with hold on and at the end I have pause (.0000001); clf So essentially T=0:.01:10 for ii=length (vector) plot (T (ii),vector (ii,1)) hold on pause (.00000001); clf; end
Okay thats similar to what I currently have. My exact set up right now is X= (the list of numbers given to me) Sum=0 For ii= 1:2:length(X) Sum=sum+ii End Is it something simple I’m messing up?
Error using xlswrite (line 226) Invoke error, dispatch exception: Source: Microsoft excel Description: document not saved Help file: xlmainll.chm Help context ID: 0
So `ii` is 1 then 3 then 5... etc. Is that what you want to add onto your sum?
So the problem is then that I don’t how to set it up for every other number to be added to my sum. I thought it would be 1:2:length(X). But I see what you mean about it just starting with one and adding 2 each time. I don’t know how to get it so it’s every other item starting with the first item 
So you don't want to add `ii` to your sum, you want to add the `ii`th term of X to your sum. You can get the `ii`th index of X by saying `X(ii)`
Leave a blank line before your code. If you put 4 spaces at the beginning of each line, its formatted as code.
Would I need to define ii differently? I don’t understand how defining X=(ii) pulls out every other number?
Would I need to redefine ii? How does it know to add every other number? 
Because you already defined `ii` to be every other number. Say `X = [32,18,1,-3,9,10,11,40]` Then you say: for ii = 1:2:length(X) You are really saying for ii = [1,3,5,7]; So the first time through the loop, `ii` = 1, then the next time through the loop `ii` = 3, then 5 then 7. So then, you say `X(ii)` the first time that equals 32, then the next time (since `ii` is 3) `X(ii)` is 1, then 9 then 11. 
Yep, I figured it out. I got mixed up and switched the statement after while before switching sv(1) back to sv(i). Once I switched it back it ran fine
Webplotdigitizer
I tried a vector X input with a matrix Y input to plot() and it worked. You may need ti meds with the settings of plot a bit, but on the surface, it seems to do exactly what you want. 
Can you scan the image left to right, and count the pixels between the axis and figure (two black dots)?
what's a "standard random sequence"? it's not very clear what you're trying to do here.
I phrased it poorly. The previous question asked for a randomly generated sequence without the added probabilities. I'm trying here to create a randomly generated sequence where the smaller values are more common than larger values. The question I'm working on insinuates that there is a way to alter the code above to accomplish this.
it's still not clear what you're trying to do. are you trying to make a sequence of coin flips such that 40% it's tails and 60% it's heads?
You'll want to call *binornd()* for that first part. Look at the help file for that to see what inputs are needed.
I know loops are bad in matlab, but sometimes you just need a quick solution, and milliseconds of run time dont matter. I would just loop and 'hold on' for the plots. 
I mean, a checksum checks a sum. Take whatever message you have, one byte at a time, and add them together. The checksum byte is typically the last byte of a message. The transmitting party calculates a checksum, then the receiving party also calculates the checksum. They should be the same. If they're not, some portion of the message got corrupted. Some protocols have different version of the checksum, some will [escape](https://en.wikipedia.org/wiki/Escape_character) a checksum to ensure [control characters](https://en.wikipedia.org/wiki/Control_character) stay reserved, etc., but again - at its most basic form, you just add all the bytes of the message together. You need a protocol that transmits a message in the form of a chain of bytes, and that's about it. 
 rand(1,X) &gt; .6; Can't really help you with the last step, but this is the biased coin toss case.
I actually did not know this, than you for pointing it out. 
Here you go - https://owncloud.tuebingen.mpg.de/index.php/s/kNZ6toY4C8LcnfG This .mat file has the traces. "low" are filtered between 1-9 Hz and "beta" are filtered between 20-40 Hz. PA and BR are the two experimental conditions that need to be compared. Pre and Post is right now immaterial. Thanks!
Type them as int. I don't know if you can do matrix inversion with int matrices though. Alternatively you can use round to round off the errors.
&gt;I don't know if you can do matrix inversion with int matrices though. You cant. You cant even do matrix multiplication with integers \(unless one of the arrays is a scalar\). Unfortunately, integer matrix operations are virtually nonexistant.
What's with the fisheye effect? 
What?
Your code looks like it has been distorted with a fisheye lense. But to the question, why would the results be integers? Generally when you invert an integer matrix you get a non-integer matrix
Generate a uniform sequence say from 0 to 1. If a generated value is 0 to .6 call it tails. Otherwise heads.
PS - The sampling rate is 500Hz and so the time axis goes from -0.25s to +0.25s
Before consulting reddit, have you consulted the Oracle? (Google) Search how to prompt input values. Search how to do the dot product. Search how to solve a 3x3 matrix. Search reduced row echelon by using an augmented matrix. 
In addition to what the other user said, I also love going directly to the Matlab documentation website. It's usually super useful for explaining built-in functions in Matlab, as well as providing examples. For example, if you have no idea how to create your own function, there's even a help page for that: https://www.mathworks.com/help/matlab/ref/function.html?s_tid=doc_ta
post your code: https://stackoverflow.com/help/mcve 
I don't know about matlab but there's probably an answer. An easier solution may be saving the plots you want as png without tags. Load them into PowerPoint and edit to your hearts content. 
Use hgsave()
You can use file -&gt; save as -&gt; choose .fig file extension from the figure you've plotted, or you can use a command, depending on what's easier at the moment
Could you post maybe a simple example of the code you used to create var? I'm just trying to better understand what are you trying to replace.
Sure: syms t a(t) b(t) var=[a*b;diff(b,t);diff(a,t)*b]; So now if you ask MATLAB for var, it'll print: var(t)= a(t)*b(t) D(b)(t) D(a)(t)*b(t) But in r2014b if you instead input to console subs(var, {'a(t)','b(t)','D(a)(t)','D(b)(t)'}, {'a','b','a_d','b_d'}) you get this output: a*b b_d a_d*b So it's basically just a string substitution. 
&gt; I really need the expressions to be as simple as possible because they're already hundreds of characters long What? It sounds like you're doing it wrong. &gt; for some reason my uni's decided multiple choice was the best way to go I don't understand. What is multiple choice? &gt; I've been using 2014b for a while, I guess so, it's four years old at this point. &gt; This no longer works Yeah, they've been warning for years that they were going to discontinue that usage. &gt; str2sym doesn't work for this purpose either. Why not? &gt; Any alternatives, or will I have to paste into notepad and replace manually? I think, more than anywhere else in your question, this is where you lose me. What is it that notepad is going to do to fix your problem? Are you using Matlab to build a test or something? You seem like you're making the needlessly hard. Just do `sums a(t) ` before you use it, then leave the quotes off when you reference it in the subs command. 
The reason the expressions are so long is because they involve derivatives in 4 dof systems. What I mean by multiple choice is that we’re given a question about the system and four options for the answer, but each option is absurdly long. It’s basically a game of spot the difference. What I mean by notepad is to run the MATLAB script, copy the results to notepad, and use the find/replace function. As for str2sym and your other solution, could you give an example? I’m not sure what you mean.
Seems like he is making exams for students to take. This explains multiple choice and resorting to notepad.
&gt; As for str2sym and your other solution, could you give an example? I’m not sure what you mean. Sure! Consider this short example: &gt;&gt; syms a(t) b c d &gt;&gt; var = b*a + c*diff(a) var(t) = c*diff(a(t), t) + b*a(t) &gt;&gt; subs(var, {a, diff(a)}, {1, 2}) ans(t) = b + 2*c So, like I mention in the previous comment, first define `a(t)` before you use it. I also include some other dummy variables, `b`, `c`, and `d` - though I'm realizing now I never actually used `d`. Anyways, you can always take a derivative with respect to anything in Matlab by instructing it what to you, as in `diff(p, q)`, which is the derivative of `p` with respect to `q`. In this example, I called `syms a(t)`, which just lets Matlab know that `a` is "some function of `t`." This means that, later, when I call `diff(a)`, Matlab knows that there should be *some* derivative, even if it can't calculate it right now. It keeps the symbolic derivative in the result below the line. Then, I run a `subs` command like you do. I want to replace `a` with a value of one, and I want to replace the derivative of `a` with a value of two, so I do that the same way you do: subs(var, {a, diff(a)}, {1, 2}) Hopefully this is a clear enough example to help you out. Basically, with the new symbolic variable rules, the only change is that you're not allowed to wrap the symbolic terms or expressions in the character quotes. There is a symbolic data type - just define your variables to be symbolic and then you don't *need* the quotes any more. 
what about using on demand computing resources a la amazon web services?
Gpus are built for matrix math. The "medium" is the wild card because there's overhead I'm going to/from the gpu 
Unfortunately we don't really have the budget to use such services. As far as I know, the money we may get is exclusively for buying equipment. And this computer will still be used by other people after my project is done, so buying instead of renting may actually be better in the long run.
I don't intend to keep transferring data back and forth a lot, I would either keep everything in the GPU or everything outside, so I have less overhead. And I agree that GPUs are built for matrix operations, unfortunately I can't afford to buy a GPU system if I'm not sure it will beat a CPU system performance wise in our case.
It looks like \r\shtpst gave you some pretty good explanations while I was away, but maybe this will help too (I used `myEq` instead of `var` since `var()` is a built-in MATLAB function for variance): syms t a(t) b(t) myEq = [a*b;diff(b,t);diff(a,t)*b]; myEq=subs(myEq,{a(t),b(t),diff(a(t),t),diff(b(t),t)},{'a','b','a_d','b_d'}) which should give you what you aiming for: myEq(t) = a*b b_d a_d*b
Thanks! I was thinking about what you said, I may actually take a look if they have some sort of free/cheap trial so I can test my code in a different hardware. If it's sufficiently better and cost effective, we may try to direct any future budgets into that.
&gt; By the way, I would be really grateful if someone had a larger GPU and could run my test code for me and post the results. It is in https://pastebin.com/fUKKkeRR You can have Tesla K80s for free for 12 hours at a time with google colab right now. I don't think you can install Matlab into it, but Octave should be possible given that it is basically a linux shell. If you just want to test some basic matrix operations that should do the trick for you.
Ah I somehow missed that at the bottom. Thanks
You've probably thought of this already, but could you get access to cluster through your uni? For example [westgrid](https://www.computecanada.ca/ar/en/2-8-4.html) is an option at many Canadian universities. Your problem is embarrassingly parallel
If you can cast your matrix into a specific structure then you might be better off going with a specific solver. It might also be possible, though a pain in the ass, to symbolically compute the inverse of the large matrix, then simply do the multiplication. That is, the symbolic multiplication is done once off-line, then you can (painfully) copy this matrix into a variable in Matlab. I only suggest this because a 10^3 x 10^3 matrix is not that big.
Is this a question about Matlab? Even if it's not, FYI, the dot/apostrophe notation is ambiguous for multivariable systems. Dot is almost always a temporal derivative - with respect to time, but the apostrophe/"prime" could be temporal or spatial. You're saying `f` is a function of time and distance `f(t, y)`, so `f'(t,y)` is ambiguous. Regardless, you don't appear to have a `t` anywhere in your `f(t, y)` definition, which means that `f` isn't really a function of time. Unless you mean that `y` is a function of time? The problem is generally easier to solve if you expand it - `f(t, y) = kA - ky`. Is `k` or `A` a function of `t` or `y`? If not, then the derivative of that term is zero, regardless of whether you do `d/dt` or `d/dy`. Then you're just left to figure out `d/dt(-ky)`, which should be pretty straightforward.
Thanks for the reply, I think the fact that I don't understand most of what you're saying is very indicative of my eventual failure in this course. k and A are things that I have been given values for, and I thought in the context of the problem I've been given that it is a function of t, but I honestly don't know. 
Apologies for the late response, but thank you for the help, I've made a few adjustments based on your advice. I think I'm gonna make a post asking a simplified, general technical question of what I want to do with my code and then try to apply any knowledge gleaned to my assignment; asking overly specific/complex questions as I have here isn't too helpful I don't reckon.
I still can't tell if this is a Matlab question, or just a general math question, or even what level class this is. If you're given values for `k` and `A`, and those values don't include a `t` or a `y`, then `d/dt(k*A) = 0`. If again, `k` is a constant, then you can rewrite the remainder as `-k*(d/d?(y))`. I use a question mark there because, as I mentioned in the original comment, I can't tell if you're taking a derivative with respect to *time* or *y*. `d/dy(y) = 1`, but `d/dt(y) = 0`, **unless y is a function of time**. If `y` is a function of time, and you know what that function is, then you need to substitute that definition in. In any event, this would be a lot easier to help you with if you would post the whole question.
MXB103 QUT GP?
d/dt means you're deriving in order of "t", don't you mean d/dy?
Here are some great resources for you: * [Paul's Derivatives Notes](http://tutorial.math.lamar.edu/Classes/CalcI/DerivativeIntro.aspx) * [Patrick JMT's Derivatives Help](http://patrickjmt.com/topic/derivatives/) * [Derivatives at Wolfram|Alpha](http://www.wolframalpha.com/calculators/derivative-calculator/) * [MATLAB Derivatives](https://www.mathworks.com/help/symbolic/differentiation.html) AKA the "Undergrad Calculus Starter Pack".
Thanks! I was not aware of that! I have also looked into Octave and it appears to have some GPU capabilities as well, so it might be worth a try.
My university does have some clusters, we didn't look into them before because our previous code \(in Fortran\) was not parallel enough to take advantage of it as our local workstations are faster in a core\-to\-core basis. But if I can get my code parallel enough, it may be worth a try again. I'm not sure if they have Matlab installed though, I may have to use Octave. Still worth a try.
I know but let's say I want to change the linewidth of the plotted data in matlab later without having to redraw all the lines and text boxes.
I would say move over to FORTRAN or C++ and use PEtsc for solving those equations
Code the distance formula from high school algebra into your code. For x1 and x2 and y1 and y2 you just input specific members of your array and it should give you their distances. 
Just a quick review of the sequence: value at N: 1 1 2 3 5 Index of N: 1 2 3 4 5 Your function returns 2 when N=2, it should be returning 1. So when you are currently passing N = 2, the else statement gets run and executes 1+1 = 2.
This might help: https://www.mathworks.com/help/matlab/ref/ginput.html
For the first question, I would do soe interpolation. I'm not sure if it can be done directly from the plot. For example: lest say your data vectors are X and Y. I would do something like: X\_int = linspace\(X\(1\),X\(end\),100\); &amp;#37; Create 100 points in the same span X covers Y\_int = interp1\(X,Y,X\_int,'linear'\); &amp;#37; Interpolate Y for those points. Change 'linear' for 'spline' or 'pchip' for smoother curves plot\(X\_int,Y\_int\) This way, you'll have more points across your span to choose from when looking at the plot. You can always use more than 100 points if more resolution is needed. To check the distances between points, you'd need to select both points. Something like ginput might be useful here. Then the distance would be sqrt\(\(x1\-x2\)\^2 \+ \(y1\-y2\)\^2\).
Right, it was just my lack of proper understanding of the sequence, I got it now, thank you!
Thanks, this works
\&gt; As Matlab cannot solve linear systems in parallel in the GPU Are you sure about this? According to [The documentation on GPU supported functions](https://www.mathworks.com/help/distcomp/run-built-in-functions-on-a-gpu.html) `mldivide` is supported on gpu's \(in 2018a, though i think it has been supported few at least a few matlab versions\). At any rate, for the matrix size your dealing with I dont think GPU's will be the best option, unless you are typically much closer to \[1000x1000\] than \[10x10\]. I [ran some tests](https://i.imgur.com/xaTmd7G.jpg) on my system \(the CPU and GPU arent comparable to what your looking at, but this can still offer some insight. In particular this is a Ivy Bridge i7 @ 3.08 GHz vs a gtx 660m. Note the CPU doesnt have AVX2 or AVX\-512, which would give a \~2x / \~3x improvement, respectively\). I tested 5 cases: using full/sparse cases on the CPU/GPU, and using singles on the GPU. I didnt test singles on the CPU, since 1\) they usually arent that much faster in matlab, and 2\) running on a CPU youd almost certainly want to use sparse arrays, and matlab unfortunately doesnt support sparse single arrays. * For anything less than \~80x80, I/O to/from the GPU takes up almost 100&amp;#37; of the time. To get to where I/O is relatively small compared to compute time, you probably need to be at least \[500x500\]. * GPU's fare better if you can settle with single precision. If you need double precision then \(consumer\) gpu's are severely limited....you really need quadro/firepro cards for that, and those are pricy. * Your problem can utilize sparsity for the tri/penta\-diagonal arrays, but on CPU's for `A \ B` both` `A and` `B can be sparse, whereas on GPU's only` `B can be sparse. This doesnt matter much for arrays smaller than \~200x200, but quickly becomes important. For 1000x1000 arrays, you get a \~5x improvement of CPU's vs a \~2\-2.5x improvement on GPU's \(vs the analogous full CPU/GPU operation\). Unfortunately you need arrays in this size range to make GPU's viable, so this makes it a bit harder. * My GPU wasnt showing 100&amp;#37; utilization until \[600\-800 x 600\-800\], and it is a childs toy compared to something like a titan V. \[1000x1000\] wont saturate a titan V's compute ability, and probably wont even be close. Granted these are very different that the CPU/GPU youd be getting, but i dont think the situation will be all that different...I just dont think the problem is big enough to really benefit from GPU's, and if you see an improvement at all itll probably be less than if you had spent more on the CPU or to add a xeon phi co\-processor or something like that. In case you find someone with a beefier GPU and want to run this test, heres the code: `clear all; clc` `if ispc` `slsh='\';` `else` `slsh='/';` `end` `diary off` `delete([userpath,slsh,'matrixLinSolveCPUvsGPU.txt']);` `diary([userpath,slsh,'matrixLinSolveCPUvsGPU.txt']);` `niter=100;` `msize=round(logspace(1,3,21));` `sparseStr={'(SPARSE)','(NOT SPARSE)','(NOT SPARSE, GPU SINGLES)'};` `tAll=zeros(5,numel(msize));` `for mm=1:numel(msize)` `[t1, t2, t3, t4, t5]=deal(0, 0, 0, 0, 0);` `fprintf('\n\nSTARTING TEST FOR MATRIX SIZE = [%i x %i] ',msize(mm),msize(mm))` `nitercur=min(niter,round(niter*500/msize(mm)));` `mask3=sparse(logical(conv2(eye(msize(mm)),[1 1 1],'same')));` `mask5=sparse(logical(conv2(eye(msize(mm)),[1 1 1 1 1],'same')));` `nChar=0;` `for nn=1:nitercur` `clear a a1 b b1 c xm` `pause(0.05)` `a=randn(msize(mm)); b=randn(msize(mm)); c=randn(msize(mm));` `a=a.*mask3;` `b=b.*mask5;` `af=full(a);` `bf=full(b);` `clear x1` `pause(0.05)` `tic; x1=(a\(b*c)); t1=t1+toc;` `clear x2` `pause(0.05)` `tic; x2=(af\(bf*c)); t2=t2+toc;` `clear x3 ag bg cg` `pause(0.05)` `tic; ag=gpuArray(af); bg=gpuArray(b); cg=gpuArray(c); x3=(ag\(bg*cg)); x3=gather(x3); t3=t3+toc;` `clear x4 ag bg cg` `pause(0.05)` `tic; ag=gpuArray(af); bg=gpuArray(bf); cg=gpuArray(c); x4=(ag\(bg*cg)); x4=gather(x4); t4=t4+toc;` `af=single(full(af));` `bf=single(full(bf));` `c=single(c);` `clear x5 ag bg cg` `pause(0.05)` `tic; ag=gpuArray(af); bg=gpuArray(bf); cg=gpuArray(c); x5=(ag\(bg*cg)); x5=gather(x5); t5=t5+toc;` `xm=x1+x2+x3+x4+x5;` `fprintf(repmat('\b',[1 nChar]))` `nChar=fprintf('(%.1f%% Complete)',100*nn/nitercur);` `end` `tAll(:,mm)=(([t1;t2;t3;t4;t5])/nitercur);` `fprintf('\n\nRESULTS FOR MATRIX SIZE = [%i x %i]: \n\nAverage time per iteration on CPU (sparse): %.4e Seconds \nAverage time per iteration on CPU (full): %.4e Seconds \nAverage time per iteration on GPU (sparse): %.4e Seconds\nAverage time per iteration on GPU (full): %.4e Seconds\nAverage time per iteration on GPU (single): %.4e Seconds \n\n\n',msize(mm),msize(mm),tAll(:,mm)./nitercur)` `end` `diary off` `figure('units','normalized','outerposition',[0 0 1 1],'color',[1 1 1])` `loglog(msize,tAll(1,:),'b*-','LineWidth',3)` `hold on` `loglog(msize,tAll(2,:),'c*-','LineWidth',3)` `loglog(msize,tAll(3,:),'r*-','LineWidth',3)` `loglog(msize,tAll(4,:),'m*-','LineWidth',3)` `loglog(msize,tAll(5,:),'g*-','LineWidth',3)` `hold off` `legend('CPU (sparse)','CPU','GPU (sparse)','GPU','GPU (single)','location','northwest')` `xlabel('Matrix Size ( sqrt(number of elements) )')` `ylabel('Average Time Taken')` `title(['Comparison of Execution Times (Lower is Better)'])` `ylim([min(tAll(:)) max(tAll(:))])`
&gt; we haven't even learned what an impulse response is yet An impulse response gives the response of the system to an instantaneous pulse at some point. In otherwords, at some (x,y) (or x if the problem is 1D): * at any given point, the recorded amplitude is the source amplitude + response of the system * source amplitude is 0 at all times and all locations, except for at (x=x0,y=y0,t=0) where it has a a value of 1. Since youre asking here and not in a math subreddit, im guessing this is supposed to be computer numerically. To do this: * 1) choose x0 (and y0, if problem is 2D) * 2) set the amplitude at (x=x0,y=y0,t=0) to 1 * 3) move forward in time by some "dt" value. compute amplitudes at t=dt by solving the space/time dependent derivitives. The solutions can be analytic or numerical (e.g., using finite difference) * 4) move forward another time step (to t=2*dt) and repeat. Keep going until you modeled as much time as you need.
Well, it's the easiest way if you convert your equation to a state space model or a transfer function. You were trying to do this in your code already, but it did not really work out since you defined the "right side" incorrectly. Also, you would want to use the `impulse` function, not the `impz` function. But I don't know if you should do it like this if you did not yet cover transfer functions. You could also use the regular `ode45` solver to solve the differential equation. But to being able to do this, you would need to convert the equation to a state space model. This is very easy, but since I think you did not cover this either, I'm afraid, this is not possible with your current skillset.
I have used octave very little, so take this with a grain of salt. But, from what I understand, with Matlab you get: * More advanced UI * More advanced functions and features * less bugs / faster bug-fixes Octave's open-source nature means that you can do these yourself, but it also means that you wont be developing your software. Ultimately it depends on what specifically your audio processing requires. If octave has everything you need for that and you dont mind the UI then go for it. Otherwise, try and estimate how much time it will take you to implement any thing you need that matlab has but octave doesnt, and then compare that to how much Matlab would cost and how much your time is worth. &gt; Mathematica's closed-source policy has made that product far less useful to me, as I often need proof of an answer's correctness in addition to Mathematica's bare assertions that answers are correct. This is less of an issue in Matlab, since you can check answers numerically. Maybe you have to recreate some audio filter using a basic FFT/IFFT workflow instead of using `filter`, but you only need to do this for the finished product....stuff you are doing while testing/developing you can pretty safely assume is working correctly, and then just prove it when you need to and not worry about how efficient the proving code is. Ex: to can prove `conv The Matlab documentation is also better at saying what methods/algorithm a particular function uses than mathematica is. For many functions (m-file functions, not builtins) you actually can see the code by typing `open &lt;function name&gt;`
I'm assuming h(dX^2) is supposed to indicate h * (dX^2). Without the asterisk, MatLab thinks dX^2 is the index value of h, similar to how A(m,m) is using m to index A. Since dX^2 is not a valid index because it is neither a boolean array nor a positive integer, it throws an error. Add the asterisk in to indicate that h is multiplied by (dX^2) and it should work. 
Stuck...where...how? In understanding what the assignment is, or how to approach it?
So, I understand the assignment but not how to code this. I'm trying to use the linsolve(A,b) function but I'm not sure how to define M(i,j) in this question, or whether that is necessary
On paper I would be required to solve for the coefficients by making the augmented matrix RREF depending on the values in V, W and U. But idk what to do in code 
Ah fair enough. I figured if it was for a one time presentation it might be easier to do PowerPoint
Try to make a general outline of the steps you would take on paper, then try to implement that. you can address arrays by row/column index, or just row / just column index. i.e. let bort be a 3x6 matrix. bort(row, column), passing a colon will give all values in the defined area. so bort(1,:) will return the complete first row from bort. defining another matrix bjork = [bort(1,:) ; bort(2,i)] would return a new matrix of dimension 2x6 Throw in a transpose where needed, do the rref. 
Thanks, but what would the transpose be for? 
Yeah, I agree with the other poster. If what you are trying to find is just the max of the function (zeros of the derivative), you should use MATLABs numerical capabilities. define the function. Many ways to do this, probably the easiest is in a script: x= 30 a=3 b=4 c=5 Cxt = @(t) c/(a*sqrt(t)).*exp ((b-xt)2/t); You've now defined the function Cxt(t). If you can't do the derivative analytically, you can find the approximate derivative using the diff function (https://www.mathworks.com/help/matlab/ref/diff.html). Then use the fzero function to find where that line crosses zero. (https://www.mathworks.com/help/matlab/ref/fzero.html) You can also find the maximum of the original function using fminbnd. Just flip your original function (throw a negative in front of the function) and search for the min using fminbnd. Boom, got your maximum. 
&gt; Thanks, but what would the transpose be for? Mostly to change the row vectors into column vectors. 
Got something running here. Not sure if I got your equation right, or your bounds, but at least this can be a skeleton for you to work with. x= 30; a=3; b=4; c=5; Cxt = @(t) - (c./(a*sqrt(t)).*exp((b-x*t).^(2./t))); MYxmax=fminbnd(Cxt,1,3000)
Thanks! I'll see what I can get to work.
I think I may have been able to get a solution using Dummy=matlabFunction (N) plot(Dummy, t) Just weird I couldn't convert N using double () or vpa () but it worked converted t from a string to numerous using vpa (t).
Ive always been weak on using the @variable approach to functions. I should probably look at improving those skills!
Typically, at the bottom of the documentation for a function, they'll list the source algorithms and/or papers they're basing the functions on. It's a section called "references."
Is your question about the algorithm or the Matlab implementation? How would you do this by hand?
About the Matlab implementation. I can't figure out the right model and method to use to achieve those forecasts and benchmark results. So you have any idea?
How would you do it by hand? 
Thanks.
prompt = 'Enter Value for A1' ; A1 = input (prompt) prompt = 'Enter Value for A2' ; A2 = input (prompt) prompt = 'Enter Value for A3' ; A3 = input (prompt) prompt = 'Enter Value for B1' ; B1 = input (prompt) prompt = 'Enter Value for B2' ; B2 = input (prompt) prompt = 'Enter Value for B3' ; B3 = input (prompt) prompt = 'Enter Value for C1' ; C1 = input (prompt) prompt = 'Enter Value for C2' ; C2 = input (prompt) prompt = 'Enter Value for C3' ; C3 = input (prompt) prompt = 'Enter Value for K1' ; K1 = input (prompt) prompt = 'Enter Value for K2' ; K2 = input (prompt) prompt = 'Enter Value for K3' ; K3 = input (prompt) D = [A1 B1 C1; A2 B2 C2; A3 B3 C3;] Dx = [K1 B1 C1; K2 B2 C2; K3 B3 C3;] Dy = [A1 K1 C1; A2 K2 C2; A3 K3 C3;] Dz = [A1 B1 K1; A2 B2 K2; A3 B3 K3;] X = det(Dx)/det(D) Y = det(Dy)/det(D) Z = det(Dz)/det(D) here's what I've done so far and trying to understand how to round off the answers on https://www.mathworks.com/help/matlab/ref/round.html#buftps_-1 
what is the exit condition of your function? It sounds like you can use recursion for this (calling your function r again with the new value of h), but you need a defined way to exit the function (otherwise it will run forever) You might compare the old and new values of h and if they're sufficiently close together, return the last value of h.
By exit condition do you mean when I want the function to stop looping? If that's the case, then the function loop needs to stop when another output variable reaches a certain value. Within the function, there are a series of calculations that calculate the temperature of different points on a steel cube as it cools in air. The function loop needs to stop when the average temperature of this cube \(mat\_temp\_average\) reaches a certain temperature, so I guess that will be the exit condition?
It hopefully shouldn't be a problem. and you don't necessarily have to use recursion. (in fact recursion can be...troublesome if you're needing to track how variables are changing) &gt; The properties of the cube change with temperature, so they'll also need to change with each loop cycle given that temperature is changing with each cycle. Find the temperature, update the cube, do stuff, repeat. :)
Honestly, Ive found these to be not so useful most of the time. Problem is that they are usually old enough to be irrelevant (from a computational point of view). For example, the documentation about the internal layout of `sparse` arrays all point to [this paper](https://www.mathworks.com/help/pdf_doc/otherdocs/simax.pdf). Now this paper really does a pretty good job of describing the internal layout Matlab uses for sparse matricies....in 1992. Some of this might still be valid, but all of it definitely isnt, and you cant know which parts are and arent valid unless you have the matlab source code. The references for optimization are even worse...you get a 20 year old paper on Nelder-Meade simplex and 3-4 least squares papers from the 70's. On the other hand, is a function has an `algorithms` section, those tend to by quite useful imo. The [mldivide algorithms section](https://www.mathworks.com/help/matlab/ref/mldivide.html?searchHighlight=mldivide&amp;s_tid=doc_srchtitle#bt4jslc-6) is one of my personal favorites.
What? You link to the round function. What are you confused about?
I assume you've already read the documentation for those functions, so why don't you just tell us what about them isn't clear? 
Thanks a lot for this! &gt; Are you sure about this? According to [The documentation on GPU supported functions](https://www.mathworks.com/help/distcomp/run-built-in-functions-on-a-gpu.html) &gt; &gt;mldivide &gt; &gt;is supported on gpu's \(in 2018a, though i think it has been supported few at least a few matlab versions\). You're right, mldivide does support matrices in the RHS, I was trying to use a sparse A, that is why I couldn't get it to work before. From my testing, making a D = A\\B matrix still seems to yield better results. &gt; At any rate, for the matrix size your dealing with I dont think GPU's will be the best option, unless you are typically much closer to \[1000x1000\] than \[10x10\]. My systems will usually be around the hundreds in size \(500x300 was a very common size when using the old code\) so I am right in the region we are not sure which solution is best. &gt; I [ran some tests](https://i.imgur.com/xaTmd7G.jpg) on my system \(the CPU and GPU arent comparable to what your looking at, but this can still offer some insight. In particular this is a Ivy Bridge i7 @ 3.08 GHz vs a gtx 660m. Note the CPU doesnt have AVX2 or AVX\-512, which would give a \~2x / \~3x improvement, respectively\). &gt; &gt;I tested 5 cases: using full/sparse cases on the CPU/GPU, and using singles on the GPU. I didnt test singles on the CPU, since 1\) they usually arent that much faster in matlab, and 2\) running on a CPU youd almost certainly want to use sparse arrays, and matlab unfortunately doesnt support sparse single arrays. Double precision is a must for what I'm doing, but I am running this in a \(old\) Quadro, so that's not much of a problem. I also running in Xeon processors, so there should be a reasonable performance boost in the CPU side there. I was not aware of this different in the AVX for i7s. I have run your code here. The CPUs still win by some 5x margin or more, even disregarding the transfer time to the GPU. But again, its a very nice pair of CPUs against the smallest Quadro that supports GPU operations in Matlab. I'm still curious to test this in a beefier GPU if I can find any, but going the Xeon ou Xeon Phi way seems to be a good choice. Apparently [Microway](https://www.microway.com/hpc-tech-tips/benchmark-matlab-gpu-acceleration-nvidia-tesla-k40-gpus/) may let people borrow a computer for benchmarking, I'll give it a try. I have just found out about the new [decomposition](https://www.mathworks.com/help/matlab/ref/decomposition.html) function from 2017b, I may get some good results from that. And I think it is CPU only.
I do have some experience in Fortran \(our old code is fully written in it\) but I was hoping to move to Matlab to improve code accessibility. Do you think that if I compile a Fortran code to a mex routine I can get a better performance out of it that what I get from the standard Matlab routine?
If you mean passing variables, to your function, then yes. At the command line, type your function name, then separate the inputs with spaces. They will be passed as character vectors to the function, as explain [here](http://www.mathworks.com/help/matlab/ref/syntax.html#f76-1098266).
&gt; Thanks a lot for this! Glad to help. This is a question I am also interested in, so if you are eventually able to run some tests on a more powerful gpu id definitely appreciate if you share what you find out. &gt; My systems will usually be around the hundreds in size yeah, its a bit tough to say for this without actually testing. I can say with certainty that wont *fully* utalize the GPU, but gou's have such an advantage in the raw compute that it still might pull ahead. Hard to say. &gt; I was not aware of this different in the AVX for i7s. Its not the i7 part, its the ivy bridge part. AVX2 (and support for FMA) was included in haswell, which is 1 generation later than mine. FMA lets you simultaniously do 1 addition and 1 mulitplication per operation, which for things like matrix operations should allow for nearly a 2x improvement in speed. &gt; Xeon Phi way seems to be a good choice. Based on your use case and not having the ability to run any tests, this is probably the way id go. An alternate (probably cheaper) method that still gives you AVX-512 access would be skylake-x/skylake-xeon's, which all have AVX-512. Granted thats not the only benefit xeon phi gives, but it should give another 50-60% (depending on how good your cooling is) on matrix ops. For bigger problems the GPU wins hands down, but for things near 300x500 id be almost certain this would be the better way to go (especially using MATLAb's built-in gpu support rather than optimized custom cuda code).
Are your existing tests using the matlab unit tests? You can define classes and use them to drive test cases. https://www.mathworks.com/help/matlab/matlab-unit-test-framework.html
1. Use unit tests. 2. Write code to be clear, encapsulated, and easily testable. 3. Stick to a set of standard coding practices so that you don't have to worry about silly things like variable types and sizes. 
&gt; , Thank you for your answer! Actually I should have specified that I need to use the "scatter" function, and it does not seem to work in this case :/ I does work with the plot function though, I didnt know that, that's good to know
Yeah that's what I did, I just went for hold on for i = 1:N scatter(C,Attracteur(i,:),'.') end hold off But the plot is sooo long to process, its crazy
Thank you for your feedbacks guys, however do you know how I could deal with this issue using a scatter plot ? 
Actually I found the solution for the scatter : plot(C,Attracteur,'Marker','.','LineStyle','none') Thank you so much :)) 
Yep, Python (and Keras) is definitely the tool for the ML job imo. If you have some experience programming C or even Matlab the learning curve isn't too bad either.
MATLAB's "roots" function can only solve polynomials in the form ax^n + bx^n-1 + ... + cx^1 + d = 0. As such, with a little algebra, your equation can be put into this form. Multiply both sides by the denominator of the fraction (your coefficients will be very large!), then subtract the 4x^3 from both sides of the equation. Finally, the actual call to "roots" uses a single argument, a vector of the coefficients: results = roots([-25600000,128000000,-256000004,25600000,-128000000,25600000]) Which gives: results = 1.0356 + 0.0267i 1.0356 - 0.0267i 0.9856 + 0.0407i 0.9856 - 0.0407i 0.9576 + 0.0000i Finally, we only want the real solutions, which we can find by logical indexing: solns = results(imag(results) == 0) Giving: solns = 0.9576
Thank you!
No, I've just checked. It appears that if *any* of the roots are complex, they're all stored as a complex double vector. Since isreal() checks the *type*, all solutions would return 0.
Yeah that actually surprised me too. I thought the function would just return a logical 1 or 0 for each element. But apparently it just gives a single results for the entire input. Today I learned I guess
is this what you're looking to do? https://i.gyazo.com/a6f7b08bbcc58eb1a2e47dc7be14d27b.png
It's got everything. Truly a masterpiece
Ciao Lisa, I'm David. I think your code is good up to "produce the bivariate histogram." (By the way, to include code in this subreddit, do a blank line first, and then uses four spaces at the beginning of each line. Then it will look like code and respect indents and newlines, and be much more legible.) So the next thing you're supposed to do is to overlay the theoretic distribution. I would try "hold on" followed by a surf plot of the theoretical distribution. So you'd need to make a grid of r1,r2 values, and calculate the probability mass at each, and then surf it. Maybe something like this: [r1,r2] = meshgrid(0:40); probmass = poisspdf(r1,Lambda1) .* poisspdf(r2,Lambda2); hold on surf(r1,r2,100*probmass) Do you think that's what they have in mind?
thank you, my college calc professor insists on us using matlab to graph when we are turning in homework.
Hey shtpst, Thanks for the feedback. A very literal answer to your question is "I didn't notice I clicked the wrong icon until I had already half recorded the work", but I also didn't change it because with the exception of date time loading it has no impact. I'm a bit unsure on which version to target truthfully though - at my organisation we haven't upgraded to 2018 yet, and I can't find new statistics on this but it looks common. But like I said, it was an accident, so I can try to target 2018 a bit more carefully :p 
`h` must be the actual spacing of the `x` vector. The best way to ensure consistency would be to actually *use* `h` when you create `x`.
Thanks, I see it now. So I would have x be 2,6,10.
Type in command line help csvread 
Just use csvread to read the whole file and then save different variables by calling certain columns/rows from the vector it creates. 
MATLAB has the symbolic toolkit (though it costs a little extra) but Octave doesn't have nearly as much functionality with symbolic stuff. I've found that to be extremely useful. I have an extremely powerful GPU so I've also found MATLAB's parallelization package to be useful. So MATLAB is more polished and has more features than Scilab and Octave but if you don't need anything beyond the basic numerical stuff then you're probably fine. The same goes with comparing Mathematica to Sage. 
&gt; Are your existing tests using the matlab unit tests? No, but this seems to be the way to do what I am trying to do. The "main" functions are for fast I/O of a non-standard data type, and these are setup to work with a few different types of inputs and on how many outputs are present. (ex: the input that selects which sample groups to read/write can be empty --&gt; read/write everything, or a vector --&gt; individual indicies to use, or a cell array with 1-4 elements --&gt; describes starting index and (optionally) stopping index, a /"skip" parameter, and a "block read" parameter). My initial test tested (most) combinations of supported input/output arguments, and then repeatedly read/write the same file/data to disk and looked if a) any particular input/output argument combination caused an error to be thrown, or b) if the current data being read/written didnt match the original data (or the original data run through the appropriate data conversion function). It passed all these (the differences were always less than `sqrt(eps(vals))`, which strongly suggests things are working like they should (its possible both reading and writing are wrong in a way that exactly cancel each other out, but this seems unlikely). My main concern is that these functions have a lot of logic baked into them to smartly choose stuff in the absence of user input and to automatically correct invalid user input, and a lot of these (particularly in subfunctions) didnt get tested in any of the tests I ran. These should mostly work, but id also bet at least one has a typo or some faulty logic.
The trick here is to actually think about what you're doing instead of just repeating stuff you saw in an example. What do you think `trapz(y)` does? Do you think it's aware of the spacing? What happens when you multiply `trapz(y)` by `h`? Would you expect it to give you the right answer? 
[No, not really possible.](https://stackoverflow.com/questions/46667883/how-to-determine-if-an-output-is-being-ignored-with/46668364) That said, if you're the architect of the program in question, then you could consider rearranging the order of the outputs. If you put the optional outputs last, then you would wind up with: [x, z, ~] = foo(a, b, c); instead. If you did have your code that way, then you could *omit* the last argument and be left with: [x, z] = foo(a, b, c); and that *is* detectable, with `nargout`. 
Architect your code so that horrible stuff like this isn't required. 
Check out Coursera class with the one and only Andrew Ng on ML. It is based on octave/matlab.
You find the so called pseudo inverse matrix https://www.mathworks.com/help/matlab/ref/pinv.html 
will look into that thanks!
I guess you don't care about the explanation in linear algebra terms. Just the command for matlab
Or, optimistically, knowing the name for it provided op the necessary information to learn on their own. 
I was pretty shocked though he didn't know that non square matrices can't be inverted. At least conventionally. 
Let’s have G be your matrix. The pseudo inverse: inv(G’*G)*G’
&gt; That said, if you're the architect of the program in question, then you could consider rearranging the order of the outputs. It is my code, but this wont work for the simple reason that I *already* do exactly what you are describing.\ The code is a custom data loading code and outputs correspond to raw data, local data headers, and a global file header. They are in that order since I feel that is the "typical" priority of what I/others will want to load, but I want *all* the outputs to be optional. The code already optimizes the `fread` calls depending on what outputs you request, it just needs to have this info. unfortunately, making all the outputs optional there is always the situation where using `nargout` in the way you describe doesnt work. Right now, I have a 3-tiered approach to ID empty outputs * 1: use `nargout` to determine if any outputs definitely arent there * 2: check for (up to) 2 user-defined flags that are tacked on the the end of the input list, and will force inputs 1 and 2 to be treated as either empty or non-empty * 3: determine if other inputs are empty or not using the method in my original post. If one of the checks during this process fails the `emptyOutputFlag` variable is set to empty, and the code assumes any outputs not manually selected to be empty are non-empty. Side note: I also modified the first regex filter to % Filter command down to function outputs funcOutputs0 = funcOutputs; funcOutputs = regexprep(funcOutputs0,['^( *function)? *(\[?.*\]?) *= *',mfilename,'[a-zA-Z0-9_]*\(.*\).*$'],'$2'); funcOutputs = regexprep(char(funcOutputs*(~strcmp(funcOutputs,funcOutputs0))),'^ *$',''); clear funcOutputs0 % if function name is a match, run parser code and analyze function outputs if isempty(funcOutputs) emptyOutputFlag=[]; else &lt;...&gt; &lt;...&gt; end This makes sure calls to functions other than `foo` return an empty array except the added `[a-zA-Z0-9_]*` allows matches for functions named `foo_mod` (or any function starting with `foo`), so long as `foo_mod` is the call made on the command line and it has the same number of outputs as `foo`. As an example, I have a code `foo_multiIn` that has the exact same syntax `foo` except the `filename` input is a cellstr array containing multiple individual file names. This code calls `foo` to load each file, then concatenates each output and returns the combined outputs from each file that was loaded. This *should* make it so this check still works for calls made to `foo_multiIn`. It also means that outputs specified as empty on the command line still are recorded as empty, snce even though `foo_multiIn` doesnt mark the empty outputs as `~` the history call fetches the last typed command. (I also dont know how to fetch the literal function call for the current function if that function wasnt called from the command line. If you happen to know a way though that would be quite useful.) 
So people are telling you to use `pinv` which is probably close to the correct thing. But the fact is, we don't have enough information to know what you want to do. The inverse of a non-square matrix is not defined. The psuedo-inverse shares some traits with the inverse, but not all. The question is: what are you hoping to do with this "inverse"? 
 I think you're referring to a "stack trace," which would give you the history of "layers" of functions that got you to where you are. Matlab does have this - [dbstack](https://www.mathworks.com/help/matlab/ref/dbstack.html). I haven't played with it much, but it looks like you can call it `st = dbstack`, and then the first element of the returned struct is the function/file that called `dbstack`. Subsequent entries are the hierarchy of calls. Your example is a bit too abstract for me to follow along with, but let's suppose you call `foo_mod`, which itself will call `foo`. In this case, inside `foo`, you can check: st = dbstack; Now, inside `foo`, you want to see if `foo_mod` called you, to see if you should calculate output 2. You know that `st(1).file` will return `foo.m`, because that's the function you're currently in. So, you check: calculateOutput2 = true; if numel(st)&gt;1 if ~isempty(strfind(st(2).file, 'foo')) calculateOutput2 = false; end end ... if calculateOutput2 &lt;calculate output 2&gt; end Just check that there's more than one layer in the stack that got you to where you wound up calling `dbstack`, because `foo_mod` couldn't have called `foo` - there couldn't be two items on the stack - if the size of your stack is equal to one. Then, if there is two or more functions on the stack, see if you can find `foo` in the name of the function that called `foo` - note this is how you said your function works. Then, if you can, flag your function to do something special; in this case the special act is to not calculate output 2. 
&gt; inverse problems you probably want `Ginv = (G' * G) \ G'`. This is the 'inverse' of G in the sense that it solves `Ginv * G = I`, and corresponds to the standard least squares solution of `m = (G' * G) \ G' * d`
I actually already have that. I didn't explain well, i have what you call Ginv, and then i use the singular value decomposition on it to obtain U,S and V, afterwards i Calculate my G using what i said above G=V*S^-1*U', finally i obtain my m using m=d*G where d is my data vector 
 ['Simulation', num2str(x)] Should do the trick.
You are probably better off using `\` than `pinv` `pinv`, as im sure you know from reading the section on the moore-penrose pseudoinverse, basically drops any singular values under some threshold and does a SVD based inversion. This prevents small singular values from blowing up when you take `1 / Value` of them to invert matrix `S` in [U, S, V] = svd(...)` in a way that doesnt make much difference, since the contribution from these extremely small singular values is, unsurprisingly, extremely small. However, im 99% sure that for non-square matrices using `pinv` will drop the `N` smallest singular values, where `N = max(size(x)) - min(size(x))` in order to make the `U` and `V` matricies in the `svd` square. It will do this even if the smallest singular values are big enough to have a non-negligible effect on the inverse. (again, 99% sure this is the case. if anyone knows for sure and this is incorrect please let me know). `\` will actually solve the under/over-determined linear system that the matricies represent (in a `d = G * m` configuration), and (if possible) does so without approximating or even explicitly conputing the inverse of `G`. This will almost be faster and more accurate than using `pinv`, unless G has enough singular values that dropping them to make it effectively square has a negligible effect.
You can try some suggestions in this link: https://tex.stackexchange.com/questions/3415/what-is-the-correct-way-of-embedding-text-into-math-mode
Well in doing actual latex youd keep the dollar signs on the outside of your whole statement and youd do $$f=1000 \text { Hz}$$
Thank you so much!
Sorry, part of what I initially said was wrong (i edited the post to have correct info). The "extra" rows/cols effectively have singular values of 0, so dropping them doesnt actually matter. You can test this using x=randn(3,4) xInvPINV=pinv(x) [u,s,v]=svd(x); xInvSVD=v*[diag(1./diag(s));[0,0,0]]*u' note that `[diag(1./diag(s));[0,0,0]]` is the same as `(s * s') \ s'` where the row of NaNs is dropped. Still though, the basic use case for `pinv` is to drop singular values that are small enough to cause numerical instability. IF you dont have any very small singular values, the `\` algorithm is faster and more accurate and more stable. For reference, [this](https://www.mathworks.com/help/matlab/ref/mldivide.html#bt4jslc-6) describes what `\` actually does.
'100 {\mu}m{^3} ' for example works fine for me
Not sure about adding packages to the environment, really. I tried using title(['$f=1000\, \textrm{Hz}$'],'Interpreter','latex'), though, which looks about perfect! Thanks for the idea. 
I actually *almost* went with this exact approach, but didnt in order to facilitate the scenario I (poorly) described in my previous comment. My `foo_mod` function basically has the following form: function [a,b,c] = foo_mod(x) N=numel(x); aTemp=cell(N,1); bTemp=cell(N,1); cTemp=cell(N,1); for nn=1:N [aTemp{nn},bTemp{nn},cTemp{nn}] = foo(x{nn}); end a=cat(1,aTemp{:}); b=cat(1,bTemp{:}); c=cat(1,cTemp{:}); end Basically, it automates calling `foo` for multiple files and combining the inputs. So, I want to be able to call `[~,~,c] = foo_mod(x)` from the command line and still have `foo` know it doesnt need to load `a` and `b`. This doesnt work if your condition to check if the history entry is valid is `numel(dbstack) == 1)`, and I dont really want to hardcode which calling functions will and wont trigger the check since then I (or others who might be using this) would have to go change the source code every time I/they wanted to enable/disable this functionality. The "cost" is that if i call `[d,~,f] = foo_mod2(...)` and `foo_mod2` calls `[~,b,c] = foo(...)` then the 2nd output of `foo`is returned as empty when it shouldnt. However, this requires: * 1) that the name of the function called on the command line starts with 'foo' (where "foo" is the actual function name of the main data loading function), * 2) that the function called on the command line in turn calls `foo`, * 3) that the command line call and the `foo` call request the same number of outputs, * 4) that these outputs dont represent the same things, and * 5) that the command line call has 1+ empty outputs that are non-empty outputs in the `foo` call. This scenario never accidentally occurs in my functions, since the only other one named `foo*` uses the same outputs as `foo`, and seems like it would be extremely unlikely in almost any subsequent use case, so its a cost im willing to pay to get this functionality. I see it as a "hey, to get this functionaity in a function calling `foo` make sure the function name starts with `foo`, just dont accidentally set this up when you dont want the check implemented. That said, id drop all this nonsense in a second if there was a good way to just directly check if a function output was defined as `~`, but you work with what you have... side note: I suppose I could also use `dbstack` and then implement the empty output check in `foo_mod`, and then setup 6 different possible function calls to `foo` (9 in you count cases where the last output defined in `~`), but I dont really care much for this approach. Its a pain in the ass and seems rather...inelegant. 
My comment chain with /u/shtpst goes into the details of how im using this a bit more. If you have a solution that accomplishes what I am trying to do and doesnt involve "horrible stuff" like this then I would love to hear it. Figuring out a better solution is literally the reason this post was created. If you dont have a better solution though, I will absolutely take a dirty hack that works over nothing.
Im confused. Do you have both `G` and `Ginv` and want to do a svd-based inversion to get back to `G`? because that would give the same `G` you already have (unless you are saying you werent given `G` and needed to find it from `Ginv`??). In (overdetermined) problems, the solution you get from the SVD inversion is the same as you get from using least squares. % d = m * G x=randn(3,4) xInvPINV=pinv(x) [u,s,v]=svd(x); xInvSVD=v*[diag(1./diag(s));[0,0,0]]*u' xInvLS=x'/(x*x') % d = G * m x=randn(4,3) xInvPINV=pinv(x) [u,s,v]=svd(x); xInvSVD=v*[diag(1./diag(s)),[0,0,0]']*u' xInvLS=(x'*x)\x' 
I have G and use it to calculate Ginv to then find 'm'
It's difficult to say - what kind of research is typically carried out by this lab? In general you want to make sure you're very comfortable with inferential statistics in matlab. 'Cogent' is a toolbox commonly used in psych research; it's worth looking into.
Yeah no. We've had this discussion before. You refuse to architect code properly, which is the source of most of the problems you post here. That is *the* solution to absurd problems like this. Fix it or don't, I don't care. 
I wouldn't use figure(1) twice. that replaces the figure, I believe. if that doesn't fix it, then also check into the hold on command. 
Gotcha. So either you are saying that it is "improper code articheture" to avoid loading/computing function outputs that you dont need, or you are just bitching for the hell of it and have literally no idea how else to implement this.
Using \mathrm{Hz} is what I usually do
Sure, you can read up [on all the options here](https://www.mathworks.com/help/matlab/creating_plots/animation-techniques-1.html). But basically you create a loop (in your case, iterating through time steps), plot the data, command it to draw (using `drawnow`), then command a pause (using `pause`) to set how quickly your animation changes. 
It's due to poor architecture that you *need to deal with this problem in the first place*. 
Awesome, thanks!
Calling `figure(1)` a second time simply brings it to the front. 
Your code looks like it's plotting both the Heun result and the polycurve on both subplots on the same figure. What exactly are you hoping to plot? 
If you want to avoid making/computing an output that is not assigned, there is literally no possible way to do this unless you can get the information on what outputs are and arent actually assigned. I feel a little silly needing to say this, but you cant choose whether or not to make `A` if you dont know whether or not you need `A`. Since, afaik, there is no builtin way to do this, there are 3 choices: * 1) make `A` regardless of whether or not you need it. This is fine if `A` is quick and easy to generate. This is not the case for my use case, making this an example of what **I** would consider "bad code articheture". 2) Have the user define whether or not to make an output twice - once in the output list, and once again as an additional input. I dont like relying on a user to define something properly once, let alone twice. This is also another example of what **I** consider "bad code articheture", though I do have inputs that do exactly this that are intended to be used as an "emergency override" in case the automated method fails. * 3) what im using. Im using the method I am because I literally dont know of another way to do this, and of the 3 options I have this (plus a manual override) is easily the best. Perhaps you disagree, but youll be hard pressed for anyone else with even a little programming experience that doesnt know of another way to do this and thinks that one of the other options I have are better.
Well since we have no clue what you did, how do you expect us to help you?
I am not aware of a `Heun()` function, but this code should do the trick: clc;clear;close all; lower = 1;upper = 5; dx = 0.1; x = [lower:dx:upper]; % for Huen / Predictor Corrector Method tol = 1; % #1 func = inline('x - 2x.y','x','y'); % For function 1: icy = -2; %% Huen / Predictor Corrector Method [heun, x] = Heun(func,dx,x,icy,tol); %% Curve Fitting (Polycurve) y = heun; %% Sixth Order Polycurve (For Function 1) j=6; [fx, a] = polycurve(x,y,j); %% Plots function 1 figure hold on subplot(2,1,1); plot(x,heun,'bo') hold on grid on plot(x,fx,'k','linewidth',2') xlabel('x-values') ylabel('y-values') title('Equation 1') legend('Heun','Curve Fit','location','southeast') % #2 % func = inline('(y - (y.\^2./x))./x','x','y'); % % For function 2: icy = 1; %% Huen / Predictor Corrector Method [heun, x] = Heun(func,dx,x,icy,tol); %% Curve Fitting (Polycurve) y = heun; %% First Order / Linear Polycurve (For Function 2) j=1; [fx, a] = polycurve(x,y,j) subplot(2,1,2) plot(x,heun,'bo') hold on grid on plot(x,fx,'k','linewidth',2') xlabel('x-values') ylabel('y-values') title('Equation 2') legend('Heun','Curve Fit','location','southeast')
Also, your comment reminded me of a short little function I wrote not too long ago to get the name of the calling function. Admittedly doing `d=dbstack; d=d(2).name` isnt all that hard, but this way theres no syntax to remember. function [callerFunc] = getCallerName(fullStackFlag) %% Return the name of the calling function. % % 'fullStackFlag': instead return a cellstr array with the name of every function in the stack. DEFAULT: false. % % IF the function that called 'getCallerName' called from the base workspace, 'base' is returned. % IF this function is called directly from the base workspace, an empty char vector (or empty cell array) is returned. % % NOTE: This returns the name of whatever called the function that called 'getCallerName', not the immediate caller. % To get the name of the immediate caller (i.e., the current function, not the calling function), use 'mfilename' instead. d=dbstack; if ~exist('fullStackFlag','var') || isempty(fullStackFlag) || ~(islogical(fullStackFlag) || isnumeric(fullStackFlag)) || fullStackFlag == 0 if numel(d) == 1 callerFunc=''; elseif numel(d) == 2 callerFunc='base'; else callerFunc=d(3).name; end else callerFunc=cell(numel(d)-1,1); [callerFunc{:}] = deal(d(2:end).name); end end
The pixel valus are just the data values of the grayscale image, assuming these are integers between 0-255. If these are values between 0-1 do `ceil((256-eps)*(data+eps))-1` to convert them to 0-255.
Define what you want. It is possible on all those, with varying degrees of complexity. 
Each pixel has both an x and a y index, thinking of the image as a matrix of values between 0 and 255. You could select each row (or, alternatively, each column) and consider that a string or vector of values to pass to whatever fitting or differentiating function you want.
Thanks.
Another way to differentiate an image along the horizontal or vertical directions is the Sobel operator (https://en.wikipedia.org/wiki/Sobel_operator). To use it in MATLAB, first get the operator kernel using ~k = fspecial(‘sobel’);~. Then convolve it with the image using ~Ifilt = imfilter(I,k,’replicate’)~ where ~I~ is the image matrix. Note that ‘replicate’ changes how it pads the image at the edges, and there are other options that may suit your situation better. Also, the Sobel kernel that’s returned by default is for the horizontal derivative. Transpose it to get the vertical. 
Another way to differentiate an image along the horizontal or vertical directions is the Sobel operator (https://en.wikipedia.org/wiki/Sobel_operator). To use it in MATLAB, first get the operator kernel using `k = fspecial(‘sobel’);`. Then convolve it with the image using `Ifilt = imfilter(I,k,’replicate’)` where `I` is the image matrix. Note that ‘replicate’ changes how it pads the image at the edges, and there are other options that may suit your situation better. Also, the Sobel kernel that’s returned by default is for the horizontal derivative. Transpose it to get the vertical. 
**Sobel operator** The Sobel operator, sometimes called the Sobel–Feldman operator or Sobel filter, is used in image processing and computer vision, particularly within edge detection algorithms where it creates an image emphasising edges. It is named after Irwin Sobel and Gary Feldman, colleagues at the Stanford Artificial Intelligence Laboratory (SAIL). Sobel and Feldman presented the idea of an "Isotropic 3x3 Image Gradient Operator" at a talk at SAIL in 1968. Technically, it is a discrete differentiation operator, computing an approximation of the gradient of the image intensity function. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
You could iterate through all the elements in the array. for i = 1:length(x) 
I don't understand what to do with your code? It would put the correct results successively in the variable *i*, but how would I then make an array out of those correct results?
I don't have a solution, but I've struggled with the same problem in the past. If someone is going to chime in with a quality solution for you, maybe it can be tailored to a related problem I've seen with this same thing. I have a function which is similar to yours. The function at it simplest form is [ output ] = function Func(P1, P2, K1, K2) if otherFunc1(P1, P2) &gt; otherFunc2(P1) intervar = otherFunc3(P1); else intervar = otherFunc4(P1, P2, K1, K2) end output = otherFunc5(P2, K1, intervar) end P1, P2, K1, and K2 could all be vectors, but sometimes I would like to use a scalar for some, like K1 and K2. Creating a vector for K1 and K2 usually causes the if-else statement to only be evaluated once. The only solution I have found that works so far is to do what /u/wensul suggests and write a loop. I feel like there should be something better, but it may require me to refactor my function. 
Sorry, looks like /u/silverbluephoenix beat me to it while I was typing this reply up. His reply is better and more elegant to boot.
Good, clever replies to the question I asked, but I may have asked the wrong question. I tried to simplify the real problem I'm facing so I could ask a simple question on Reddit. But I don't see how to apply your answer to [the actual problem I'm working on](https://www.reddit.com/r/matlab/comments/8epzb1/how_to_make_my_function_operate_elementwise_on/dxx8wu8/).
I do have an idea on how to do this without a for loop, but I'm off to bed shortly. But the logic I would use would be to use the fact that comparing like &lt;= or == on vectors or matrices gives you the same size vector or matrix with 1s and 0s. You can then multiply or add with that to get the result you want. val=n.*((n&gt;=1) &amp; (n&lt;=length(x)) You may need to cast the logicals as doubles. 
Thank you.
I think you ought to be able to do something similar to what I mentioned above, assuming otherFunc1 2 3 and 4 operate on intervar=
I think you ought to be able to do something similar to what I mentioned above, assuming otherFunc1 2 3 and 4 operate on their input appropriately to work with this mask=otherFunc1(P1,P2)&gt;otherFunc2(P1); intervar= otherFunc3(P1).*double(mask)+ otherFunc4(...).*double(~mask); output=otherFunc5(...,intervar); I think that would do it. 
See? You didn't get it last time either. Have fun. 
Have you thought about what that error is telling you? It's extremely clear, to the point that I'm having difficulty not simply repeating the error message here. 
Optical imaging is usually done with lenses and mirrors. Matlab would probably not make a good lens, because it's a computer program and lenses are made of glass (usually). Source: MS optics w/ specialty in computational imaging. 
Recursion is most often a bad idea. There are some situations where it can make things really elegant, but this is not one of them. 
I'll do you one more - here's a handy trick: plotHandle = plot(x(1,:), f(1,:)); tic; while true elapsedTime = toc; displayIndex = find(elapsedTime&lt;=youTimeVector, 1); if isempty(displayIndex) break; end set(plotHandle,'XData',x(displayIndex,:), 'YData', f(displayIndex,:)) drawnow; end This looks at how much time has elapsed since you started the animation sequence, and then either drops or repeats frames from your data as required to get the animation to play in realtime. Protip - you can add a "fastForwardModifier" to the code to, as in: elapsedTime = fastForwardModifier*toc; If you do this, then you can set `fastForwardModifier` to 2 and the animation will play at double speed, or you can set it to 0.5 and it will play at half speed, etc. 
If I give you a list of 3 numbers and ask you to read me the 4th number on the list, what would you do? 
I couldn't read it because the 4th doesn't exist but where would I go to fix that. 
What answer are you expecting? It looks to me like the answer should be `c/e`
Is that something that **can** be fixed? Would it be more reasonable to: A) make it possible to read the 4th element of a 3 element list (by, I guess, creating a new universe with different rules or something), or B) to tell me to stop asking for impossible things ? 
That's not what I meant lol. If I reduce the 4 to a 3 and 3 to a 2 then 2 to a 1 in lines 3-5 then the graph appears but one of the lines doesn't appear. I wasn't sure if that's what I needed to do.
Look there's only two solutions here. Make the list have 4+ elements, or stop asking for the 4th element. Which of those makes sense depends on your situation. Is there *supposed to be* a 4th element which is necessary for your work? Well you'd better add it to the data then, right? Is there only 3 pieces of data that should be in the list? Okay, then quit asking for the 4th element. There's no magic in programming. There's no cheat code to make errors stop happening. The error is telling you that you're asking for something impossible. The answer is always: stop doing that. 
Alright. Sorry for continually asking dumb questions. I'm running on very low sleep so my cognitive skills are very low at the moment. I do appreciate the help Have a good night.
Yeah I understand that. I only need to graph 3 things but when I changed the numbers it is only giving me 2 lines graphed.
You mean c/(f*g*h)
Nope. That's not as simple a form as `c/e`. 
Honestly, my gut reaction was the same as /u/FrickinLazerBeams, but I recognize you as a regular here so I figured you know enough that, if that's the road you want to go down, I'll help you the best I can. That said, especially based on your [most recent comment to me](https://www.reddit.com/r/matlab/comments/8ei6fm/identifying_empty_function_outputs_from_within_a/dxwf7t9/), I sincerely think the best way to get the behavior you want is to do like FrickinLazerBeams said and declare the outputs you want to use up front. It doesn't have to be complicated, just a logical vector. Make it the first input to your function. You can make it empty if you want to use all the outputs. Consider: function [varagout] = foo(outputFlags, a, b, c) if ~isempty(outputFlags) &lt;if outputFlags(1), make output1, etc.&gt; end Then, when you call the function, you can do `[aOut, bOut, cOut] = foo([], a, b, c)`. Or, you could do, `[aOut, ~, cOut] = foo([0 1 0], a, b, c)`. In the end, the specific functionality you're looking for - determining whether the function was called with a particular output suppressed - doesn't exist. Anything you do to work around it is really a side project. I've been there. I've done a master's thesis. For me personally, I did as much as I could to "fix" things that didn't really need fixing to avoid actually working on the thesis. That's actually what I'm doing right now :( Consider this - how much time have you spent on the helper function to do the stack trace, how much time have you spent reading M files to see how the function was called, how much time have you spent parsing command prompt histories, and then... how much time would it take to just accept the output flags as an input. Don't get sidetracked. Get your work done. That said, now I'm going to get MY work done :P
I skimmed over your code to see the relevant bits, so correct me if I’m wrong. Assumptions. 1) You have a vector of input parameters 2) On each execution of the for-loop you increase one parameter by 5 percent and test it while holding the others constant. You also do this for decreasing the base parameter by 5 percent. Goals. 1) You want to add and subtract 5 percent from all the parameters outside the for-loop Logistics. 1) You cannot add or subtract 5 percent all at once because you require the other parameters to remain constant. 2) This means we need multiple iterations of the parameter vector. Specifically N-many iterations where N is the number of parameters. 3) One way we can store all those iterations is an NxN matrix constructed from rows of the param vector, look into **repmat**. We need to store this matrix 2 times (paramPlus and paramNeg) 4) There is now an easily accessible list of values that we need to change, specifically the main diagonal of our matrix, on which each parameter appears once, look into **diag**. If we can change the values on the main diagonal, then each row of our matrix will be the same except for the value in the (i,i)-th position. 5) We need to change the way you index into these arrays in the for-loop. Now i represents the row in the matrix rather than the specific element, which means that you’re going to need to convert from linear indexing to row-column indexing when you grab param values
Unrelated, but helpful if you could do it, would be to modify Gprotein_ODEs to accept your param vector instead of having to separately give it each value
Of course... *facepalm*
[removed]
+ Perfect! Cheers
Glad to help :) 
perhaps simplify wasn't the right command, I wanted (a/bd)/(fgh)
Please format your code correctly - offset the block with a newline above and below, then put four spaces in front of each line. OR, in a Matlab script- Ctrl+A to select all, Tab, Ctrl+A again, then copy/paste. Please also explain your situation better. You seem to have a scenario where you're... trying to measure the time difference between a stimulus and a response? You can't run processes in parallel with Matlab, but you can monitor for input while you're doing other things. I would suggest you look at opening a figure and using figure callbacks to watch for responses. 
oh sorry, the figures are empty. Just typing figure() into the command line.
So no doubt I am (on occasion) absolutely guilty of this, though I treating this code a bit differently since ill be releasing this one out into the world (with an open source license and my real name attached to it). I think there is a good chance a lot of people end up using it too. The "standard" datasets in my field range from a few GB (for test cases) to a few TB (for current industry projects), so I/O speed ends up actually mattering. The best Matlab code I could find (after a rather exhaustive search) could read data at 30-50 MB/s, mine can do 150-200 MB/s. Since theres a good chance that quite a few people will use this, Im pulling out all the stops and using every trick in the book (and a few that arent) to both make it fast and automated and simple to use. For this particular issue, I want toavoid the use case where someone calls `[~,~,fileHeader]=myDataRead(filename)` and expects it to quickly read, parse, and return the file header that makes up the first 3600 bytes of the file. Without an automated check for empty outputs, the function would read and parse the ENTIRE file (potentially freezing Matlab and or the entire system, depending on available ram and the data size. This will also use a single `fread` call which the user wouldnt be able to cancel unless they force-quit matlab all together. Personally, if I used a function and endeter in the "straightforward syntax" for what I wanted to do, and instead of fetching 3600 bytes it crashed a system with a half terabyte of memory since it started an unstoppable full-file read, I'd never use that code (or probably anything else from the package) again. *I* know not to do this, but im not going to release something where avoiding potentially catastrophic issues relies on users carefully reading help files and not using what you would intuitively assume the command would be. There is/was some actual reasoning for my wanting to do this, not just to save a few keystrokes. It isnt some 1 in a million chance either...If more than a few people use it id almost guarantee someone tries running `[~,~,fileHeader]=myDataRead(filename)` to grab headers on a dataset that is just small enough to not throw an error but big enough to cause major issues. &gt; how much time have you spent on... a few hours to get it (seemingly) 100% working, which is nothing compared to the cumulative amount of time ive spent writing this (I doubt its even 1% of the total time).
Hi thanks for your fast reply! ok, so... within a block i want to play 110 sounds (freq. 500Hz, duration 100ms, each block has a different ISI (300ms, 450ms...)but thats not really important here). while playing those sounds i want to get a keyresponse to every single sound (like tapping to a metronome). I tried with KbCheck and timeout within a for loop, but then i can only measure reaction times after stimulus onset, but i can't measure a response ahead of the stim-onset. Basically it's called a finger-tapping-task in the literature but i can't find any help or code to this anywhere I thought of opening a Queue with KbQueueStart and then record every Buttonpress while the for-loop is running but i guess it won't work that way? Code again (thanks for the info): %Basic Setup InitializePsychSound(1); nChans = 2; Fs = 44100; %Stimulus Stuff beepLength = 0.1; startWhen = 1; waitForDeviceStart = 1; repTimes = 1; nSeq = 10; Vol = 0.9; %Do threshold stuff before? fBeep = 500; all_isi = [0.300 0.450 0.600 0.900 1.200 1.800 2.400 3.600 4.800]; pahandle = PsychPortAudio('Open', [], 1, 1, Fs, nChans); PsychPortAudio('Volume', pahandle, Vol); beep = MakeBeep(fBeep, beepLength, Fs); %create rand vector with integers for isis, we have 9 isi_order = randperm(length(all_isi)); results = []; keys=[32];%%all keys on right hand plus trigger, can be found by running kbdemo keylist=zeros(1,256);%%create a list of 256 zeros keylist(keys)=1;%%set keys you interested in to 1 KbQueueCreate(0,keylist);%%make cue %Loop for all isis for isi = 1:length(all_isi) cur_isi = all_isi(isi_order(isi)) for n = 1:3 %Do 3 sequences of each isi KbQueueFlush(0); KbQueueStart(0); start_resp_time = GetSecs; [pressed, firstpress] = KbQueueCheck(0); if firstpress(32)&gt;0 data(:,n) = GetSecs-start_resp_time; end for i = 1:nSeq PsychPortAudio('FillBuffer', pahandle, [beep; beep]); startTime = PsychPortAudio('Start', pahandle, repTimes, startWhen, waitForDeviceStart); %or do all that shit with startTime(i)? stim_onset(i,1) = startTime - start_resp_time; WaitSecs(cur_isi) end PsychPortAudio('Stop', pahandle); end end PsychPortAudio('Close', pahandle); 
sorry i answered my own comment..little too long infront of the monitor^^
https://pastebin.com/MX1N1SJx Although already tried the commonly cited opengl method.
OK, that's new information that you didn't tell us before. Are you on a laptop? Does this problem happen with any other program?
your fprintf is only in the "in" case. put it at the bottom.
A few more things to consider: replace your error case that calls "disp" with a call to error() instead. The error function is for throwing errors, and I think that's what you want to do there. In your switch, use lower(inputUnit). This way, if the user specifys capitals, it still works. Define your conversion factors as variables at the top of your file, so they're not repeated everywhere.
Try this. There are 2 options. It depends on the size of the outputs of the sub-functions, but something like this should work. [output] = function foo(P1, P2, K1, K2) % get indicies that meet condition ii = (foo_1(P1, P2) &gt; foo_2(P1)); % option 1: intervar = ii.*otherFunc3(P1) + (~ii).*otherFunc4(P1, P2, K1, K2); % option 2: intervar = zeros(size(ii)); invervar(ii) = otherfunc(P1(ii)); intervar(~ii) = otherFunc4(P1(~ii), P2(~ii), K1, K2); output = otherFunc5(P2, K1, intervar); end
Please format your code so that it is readable by placing 4 spaces in front of each line
A slightly more general version of what /u/kaybobnelson posted: ii = (condition based on x) xNew = ii.*valIfCondTrue + (~ii).*valIfCondFalse `ii` tells you what indicies do and dont meet the condition, and then you evaluate x both ways and zero out all the "wrong" responses. If not meeting the contision means you cant evaluate x, then you can do ii = (condition based on x) xNew = zeros(size(ii)); xNew(ii) = valIfCondTrue(x(ii)); xNew(~ii) = valIfCondFalse(x(ii)); this splits building `xNew` into 2 steps, and at each step only uses the valid indicies.
Check you `tempdir` and make sure it isn't ungodly huge. If it is, clear it out and see if that helps. Then you could whip out [Process Monitor](https://docs.microsoft.com/en-us/sysinternals/downloads/procmon) and see if anything unusual is going on when you perform a slow operation in MATLAB... or just call support at that point.
+ Ok... I have about 4 billion entries of "Write File" for the matlab preferences file... The investigation deepens.
Ah okay then. I'll try my best to cook something up!
You can use substitution, and you can solve for particular variables, but if you want it to state the answer in a very specific way, you're pretty much required to write it that way by yourself. 
That doesn't really narrow it down at all. You started out asking if you could use a pencil to do something with a car. We asked what you want to do with a car and you told us it's going to be a red car. I still have no idea what you want to do. 
Thank you.
Okay, here are two files. The first is the tester file I wrote to test the `DetectOutputs` function, and then the second is the `DetectOutputs` function itself. Essentially, `DetectOutputs` tries to find the command that called the function that called `DetectOutputs`. It does this by either looking at the stack, as I had mentioned previously, or by looking through the command history. Once it finds the command, it tries to intelligently parse the command structure. First I split the command on the function name. If the left portion is empty, there was nothing to the left of the function name, so there were no outputs requested. If there was something to the left of the command name, I check if there were square brackets. If there were, then I split on commas. Finally, I look through the split up outputs and see if there is a `~`, which would indicate the output is ignored (`~` is a reserved character and you can't use it as part of a variable name.) The output of `DetectOutputs` is a logical array, so you could do something like: function varargout = foo(a, b, c) outputFlags = DetectOutputs; if outputFlags(1) &lt;make output 1&gt; end Etc. You can check the number of outputs with either the built-in `nargout` command, or by `numel(outputFlags)`. Again, there is one `outputFlag` slot for each output, and that flag is `true` if the output is going to be used or `false` if the output is being ignored. It looks like there is a bug with `dbstack`, unfortunately, that causes the line number to be returned as zero if you called the function with multiple outputs. I'm not sure why this is, but I'm excited to file a genuine, reproducible bug with Mathworks. Maybe it'll make the 2018b or 2019a changelog! Bug, that means it's at least that long until it gets fixed. Give it a try and see how you like it! First, the helper function. This lets you specify an arbitrary number of outputs. function varargout = aaa outputFlags = DetectOutputs; varargout = cell(numel(outputFlags),1); for i = 1:numel(outputFlags) if ~outputFlags(i) varargout{i} = []; else varargout{i} = i; end end end Then, the `DetectOutputs` function itself! Enjoy! Oh yeah - there's a `verbose` command in there that will print out the command it found and which outputs its assuming are suppressed and which ones aren't. function outputFlags = DetectOutputs % DetectOutputs % % This is a function written by /u/shtpst for /u/jkool702. This function % detects the number of outputs that were requested and whether or not % those outputs are suppressed. Call % % outputFlags = DetectOutputs; % % from inside your function to see which outputs are requested (TRUE) and % which outputs are ignored (FALSE). outputFlags = []; % First, find out who called DetectOutputs st = dbstack('-completenames'); % The first item on the stack is DetectOutputs, so if it's the *only* item % on the stack, then DetectOutputs must have been called from the command % line. % If there are only two items on the stack, then the function that is % calling DetectOutputs must itself have been called from the command line. % In either case, numel(st)==1 or numel(st)==2, the caller was the command % prompt, so get the last command entered there. Note that this will get % DetectOutput's own function call if it was called from the command line, % and will return how many outputs were requested and whether or not they % were ignored. verbose = true; if numel(st)&lt;=2 historypath = ... com.mathworks.mlservices.MLCommandHistoryServices.getSessionHistory; lastexpression = char(historypath(end)); if numel(st)==1 % If DetectOutputs was called from the command line expressionParts = strsplit(lastexpression, '='); if numel(expressionParts)==1 if verbose fprintf('Called from the command line, with no outputs!'); end return; end else expressionParts = strsplit(lastexpression,st(2).name); end outputFlags = ParseOutputs(expressionParts{1}); else if st(3).line == 0 error(['Sorry - dbstack is bugged and not returning the correct'... ' line number to complete this call :(']); end fileID = fopen(st(3).file); for currentLine = 1:st(3).line lastexpression = fgets(fileID); end fclose(fileID); expressionParts = strsplit(lastexpression,st(2).name); outputFlags = ParseOutputs(expressionParts{1}); end if verbose fprintf('Called as\n%s\nWith the following detected:\n',lastexpression); if isempty(outputFlags) fprintf('&lt;no outputs&gt;\n'); else fprintf('['); if outputFlags(1) fprintf('use'); else fprintf('suppress'); end for i = 2:numel(outputFlags) fprintf(', '); if outputFlags(i) fprintf('use'); else fprintf('suppress'); end end fprintf(']\n'); end end end function flags = ParseOutputs(expressionParts) flags = []; expressionParts = strrep(expressionParts,' ',''); % Remove whitespace if isempty(expressionParts) return; end outputArgs = strsplit(expressionParts,']'); if numel(outputArgs)==1 flags = true; return; end outputArgs = strsplit(outputArgs{1},','); flags = true(1,numel(outputArgs)); for currentArg = 1:numel(outputArgs) if any(outputArgs{currentArg}=='~') flags(currentArg) = false; end end end 
Is it trying to do something to a folder it has no permissions in?
&gt;The command line is a large part of any Matlab user’s workflow. Is it? Everyone I know (myself included) use scripts for nearly everything beyond a one-off type of calculation or check. 
You should look into using a "high pass filter"
ya that fixed all my troubles hahaha...got too hung up on preprocessing and detrending didn't think the filter would solve my issues...but it did
I don't think so, will hear back from support but all the write file attempts where success... Just every time I do anything in Matlab, it rewrites the preference doc 8,000 times... Very strange.
In some places, like help text, all caps is turned into bold. Try edit('num2str') to see the raw text and then run help('num2str') to see the caps interpreted as bold. Not sure why this error message is using all caps though. What release are you using?
'version' returns: &gt; 9.3.0.713579 (R2017b) Using the help function does render the bold text just fine, and the error text seems to turn some things bold. In what I posted first, the 'zeros' in &gt; Error using zeros shows up as bold and underlined. I know I've definitely seen other error messages suggesting functions as all caps, so it's not just this one.
Has anyone else tried? Took awhile but not impossible. [Proof](https://imgur.com/a/34yyh3i)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/mv33g6O.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
Half the time it gives a possible solution half the time it doesn’t, I looked at the code and all it does is randomly generate 16 numbers and then removes the 16, not every combination is possible to be solved 
P.S. Now I've taken time to study your reply, and read matlab docs on the functions you used, and this looks like it solves the problem I've been up against, though I haven't tested it yet. &gt; If not meeting the condition means you cant evaluate x That was the particular problem I've been up against, though I failed to relay it well.
I know if you type in why? It gives you a random response. Great way to waste 10 minutes
because the tired and bald and bossy and tired and bossy engineer told him to
What do you mean when you say "charging characteristic?" C rate, absolute current, voltage, power, temperature? Are you looking for efficiency? Etc.
It looks like you're not writing the updated figure handle back to your `hObject`. Here's what I think is happening: 1. Your visible/invisible buttons get a valid figure handle, so they're able to make that figure visible or invisible. Changing visibility doesn't alter the figure handle, so you can do this as much as you want. 2. When you go to the slider, you opt to make a NEW plot, with `handles.graph1 = plot(tempd1(:,1), tempd1(:,2), 'b*');`, instead of UPDATING the plot, as in `set(handles.graph1, 'XData', tempd1(:,1), 'YData', tempd1(:,2));`. 3. When you make a new plot on the same axes, you make the OLD plot handle, `handles.graph1`, **invalid**. You're "collecting" the *new* plot handle, but then 4. You're not *saving* the new plot handle. The `handles` struct is an **input** to `slider_Callback`. Matlab doesn't have pointers; when you update a value inside a function, you are updating the **local copy** of that variable/struct. In your case, when you say `handles.graph1 = ...`, you are saving the new plot handle to the **local** `handles` struct. The last line of the code you posted is the solution - `guidata(hObject, handles)`. The `handles` variable is just a big struct that you can use to save anything you want. I've used it to store minimum and maximum values, color schemes, etc. I typically mock up my GUIs on graph paper to get the layout I want, then I can get the proportions and sizes in terms of grid squares. I save those values in the handles struct. The handles struct, in turn, gets stored to the *figure*. This gives every child object in the figure access to the handles struct. So, tl;dr - Update the `handles` struct stored in the parent figure by putting `guidata(hObject, handles);` at the end of every callback and function. If you don't do this, any changes you make to `handles` are lost when the function finishes execution. 
Sorry for not being specific. I meant I want the charging characteristic graph as shown in the link in my original post. I can get the discharge graph by clicking on the battery and then plot on the discharge tab. 
so there is no way to get (a/bd)/(fgh) as the result unless it was manually done?
Loading a tool box and a stupid bit of script to make Matlab say hello to me when I open it! :p
My apologies, I'm unsure how to present it on as it's a 600 x 7 matrix, the first column being the timepoint the columns 2-7 indicating the trials. How would i loop through each of the trial columns and specify that I wanted to select the corresponding timepoint for the first value above zero? 
You can loop over columns like this: for column_index = 2:7 v = M(:, column_index); You can use elements_over_zero = find(v &gt; 0) to get a vector of indices for which v has values above zero, and then use the first of those as the index in the timepoint-vector. 
Thank you! Very helpful!
This is a pretty broad question. Matlab, in general, can send/receive data from a lot of hardware types. One of its strong suits. General answer: look through the data acquisition toolbox methods. With a little googling, I found links like these that might get you started: https://www.mathworks.com/help/supportpkg/legomindstormsev3io/ug/ir-sensors.html https://www.mathworks.com/help/supportpkg/legomindstormsev3io/ir-sensors.html
The prompt is rather general, but it sounds like you wish to produce [ROC Curves](https://en.wikipedia.org/wiki/Receiver_operating_characteristic). How you implement such a system is entirely dependent on what you classify an adequate detection. If you provide more information you may receive better and more detailed helped.
**Receiver operating characteristic** In statistics, a receiver operating characteristic curve, i.e. ROC curve, is a graphical plot that illustrates the diagnostic ability of a binary classifier system as its discrimination threshold is varied. The Total Operating Characteristic (TOC) expands on the idea of ROC by showing the total information in the two-by-two contingency table for each threshold. ROC gives only two bits of relative information for each threshold, thus the TOC gives strictly more information than the ROC. The ROC curve is created by plotting the true positive rate (TPR) against the false positive rate (FPR) at various threshold settings. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
This is a pretty niche question. People will be able to contribute more if it's a bit more directed to specific matlab errors. First, what is the algorithm, and what inputs does it take for detecting a brain tumor? Are you running this throuhg SPM or CAT12/Datel? When you say you want to test how accurate it is, define accuracy? Just see if it is present, or do you want to detect location and size? I assume you are giving it images where you already know if it has a tumor or not and want to teach an algorithm to recognise them right? 
Thanks so much! Program works now. Very clear answer and very informative. Definitely know a bit more about GUIs now as I am pretty new to it. 
Updated the question.
Yeah the worst for me getting started was that it was all pretty much presented without explanation. "Use GUIDE" was the answer I got pretty much everywhere, but GUIDE doesn't give me as granular control as I would like, and it also corrupted all of my work several times, to an unrecoverable state. I've been making my own ever since and trying to help others out when the opportunity presents itself :) 
From where are you sourcing these images? Surely you already know whether a tumor is present or not in each scan? If you genuinely don't know whether a tumor is present, you'd probably need a neurologist to offer their opinion. Sometimes a tumor is very obvious, but in order to be sure, you need an expert's opinion. Presumably you're particularly interested in edge cases - when a tumor is neither obviously present or obviously absent. Edge cases are the best way to evaluate your code, but are also the most difficult to judge. Are your MRI images T1-weighted or T2-weighted? You will need to take this into account. It looks like you're taking a single image file as input, rather than a DICOM or stack of images. So you need to ensure that the input image is a slice which actually contains the tumor - once again, this relies on you *already knowing* whether a tumor is present, and where it is. And this single-slice approach will not allow you to detect the full extent of the tumor in 3D space. 
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://www.mathworks.com/matlabcentral/fileexchange/2529-matlab-programming-style-guidelines) - Previous text "v1" [Here is link number 2](https://www.mathworks.com/matlabcentral/fileexchange/46056-matlab-style-guidelines-2-0) - Previous text "v2" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
That's adorable.
I apologise for that. I am a beginner here. This is my first script written in MATLAB for image processing. &gt; What is the algorithm that you use to define whether a tumor is present, and what criteria do you define accuracy as? I would define accuracy as whether my script has detected the tumor or not. So basically a 0 or 1. Detected or not. In my script, the detected tumor is highlighted in the last step. Should I include some decision making too? That would be better I think.
Use functions, not scripts.
I'll take a look, thank you. Is there a way to return values from a function? 
I know for me, I am constantly jumping between m-files and the REPL command window to debug and check things while I'm working on code. For me, that interaction is the reason I like developing in MATLAB over anything else (i.e., The C: edit, compile, run loop). (However, my students just slap it all in an m-file and hit GO and then throw their hands in the air when something doesn't work right away.)
the variable called 'a' is returned in the example on the doc page i sent you.
I ran MATLAB entirely in emacs for a really long time. Then being forced to a Windows machine broke that link for me. I was using a lot of julia for quick plots, but opening up the java hog for most other stuff (ick). However, a colleague sent me this yesterday morning, and I'm pretty excited to get it going. Pedagogically, the jupyter notebook model is pretty interesting. You can easily share code and work through pieces with students. Said colleague uses jupyter with a python kernel for a lot of his courses.
&gt; Should I include some decision making too? I think this is your actual question: How do I determine if an image has a tumor or not? Once we know how you plan to perform that task, we could help with other aspects of it. For example, if you know the contents of files there are many ways to go about producing classifications. As you only care about a binary classification it may be possible to simply take an intensity measurement of an image if the tumors occupy a large portion of the image. These intensities could be compared to split the files into tumor and no tumor, from which you could determine sensitivity and specificity.
This can be done simply by including the name of the secondary .m file within your primary script. Remove the .m This has benefits over functions. Namely, all variables declared in either script are recognized and accessible in the working directory. Where as variables defined in functions are temporary. Be sure to name your variables uniquely! 
I appreciate you taking the time to code this up. Ill have to compare it to the final version of my function and see if there are any situations where one works and the other doesnt. The code for mine is at the bottom of this comment, in case you (or whoever) is interested. It basically works on the following 2 premises: 1) if you have a comma in the output list that is not bounded by 1+ set of `(...)` or `[...]` or `{...}` characters it is a variable separator. 2) After isolating a variable, if it ONLY has ` ` and one `~` character, it is an empty variable. Otherwise, it is an actual output. I *think* this is always valid. For example, if I give it f=true; g=false; e=true; d=randn(1,3); % dummy values [ a(d(~~~[f,g,e])) ,~ , c(~[true true false])] = myDataRead The call to `getEmptyOutputs` inside of `myDataRead` still produces `[false true false]`, and if it can handle *that* twisted mess of a function call I think it should handle just about anything (though more rigorous testing is still on my to do list). Note: the commented out "sanity test" doesnt work since `evalin('caller','nargout')` rather annoyingly returns the current function's `nargout` and not the caller function's `nargout`. If I had to guess, I'd guess that "under the hood" matlab sets `nargout` as a global variable using metadata from whatever function is currently "active" in the function stack, and only changes it when the stack shifts to a new function, which is an event that is NOT triggered by `evalin('caller',...)`. At any rate though, it doesnt work. You can copy/paste this check into the function you are calling `getEmptyOutputs` in though (just replace `callerNargout` with `nargout`). Speaking of global variables, one of the (very few) global variables I use is one called `VERBOSE_LEVEL`. This serves the same purpose as `verbose` in your function, except you have `global VERBOSE_LEVEL` at the top (obviously) and then all the checks are if ~isempty(VERBOSE_LEVEL) &amp;&amp; VERBOSE_LEVEL &gt;= minRequiredVerboseLevel You may do something similiar, but if not ive found it to be one of the (very few) good uses of global variables. CODE FOR `getEmptyOutputs` function [emptyOutputFlag] = getEmptyOutputs %% reads and parses the history to determine if any outputs were defined as empty. % check function outputs for empty/skipped outputs identified with '~' emptyOutputFlag = false(0,0); % Fetch last command from history funcOutputs0 = com.mathworks.mlservices.MLCommandHistoryServices.getSessionHistory; funcOutputs0 = char(funcOutputs0(end)); % Filter command down to function outputs. Only accept function calls that start with '${callerName}_[a-zA-Z0-9_]+' % callerNargout = evalin('caller','nargout'); % this doesnt work :( callerName = getCallerName; funcOutputs = regexprep(funcOutputs0,['^( *function )? *(\[?.*\]?) *= *',callerName,'(_[a-zA-Z0-9_]+)?(\(.*\))? *$'],'$2'); funcOutputs = regexprep(char(funcOutputs*(~strcmp(funcOutputs,funcOutputs0))),['^',char(0),'*$'],''); % if function name is a match, run parser code and analyze function outputs if ~isempty(funcOutputs) % remove bounding '[' and ']', if they exist funcOutputs = regexprep(funcOutputs,'^ *(.*[^ ]) *$','$1'); % remove leading/trailing spaces funcOutputs(funcOutputs(1) == '[') = []; funcOutputs([false(1,numel(funcOutputs)-1),funcOutputs(end) == ']']) = []; % Parse output list into individual outputs, and check each for being '~' startCur = 1; depthCur = 0; for nnfout=1:numel(funcOutputs) if (depthCur == 0 &amp;&amp; (funcOutputs(nnfout) == ',' || nnfout == numel(funcOutputs))) || (nnfout == numel(funcOutputs) &amp;&amp; depthCur == 1 &amp;&amp; any(funcOutputs(nnfout) == ']})')) % decrease nesting level if last char of last output is a closing bracket ']})' depthCur = 0; % We hit a comma that is a variable seperator or are at the end of the input list. Evaluate the variable for being equal to '~'. if ~isempty(regexp(funcOutputs(startCur:nnfout-double(funcOutputs(nnfout) == ',')),'^ *~ *$','once')) emptyOutputFlag = [emptyOutputFlag, true]; else emptyOutputFlag = [emptyOutputFlag, false]; end if nnfout &lt; numel(funcOutputs) startCur = nnfout+1; end elseif any(funcOutputs(nnfout) == '[{(') % Increase variable nesting level depthCur = depthCur+1; elseif any(funcOutputs(nnfout) == ']})') % Decrease variable nesting level depthCur = depthCur-1; end end % Sanity check to ensure we have the right number of outputs % if all([numel(emptyOutputFlag),find(~emptyOutputFlag,1,'last')] ~= callerNargout) % fprintf('\n\nNOTICE: The empty function output check either did not parse correctly, --OR-- \nthe desired outputs for this function were not in the last command entered into the MATLAB terminal. \n\nAll provided function outputs will be assumed to be non-empty. \n\n') % emptyOutputFlag = false(0,0); % end end end CODE FOR `getCallerName` (this is the same as the other comment I left, but ill include it here so its all in the same place) function [callerFunc] = getCallerName(fullStackFlag) %% Return the name of the calling function. % % 'fullStackFlag': instead return a cellstr array with the name of every function in the stack. DEFAULT: false. % % IF the function that called 'getCallerName' called from the base workspace, 'base' is returned. % IF this function is called directly from the base workspace, an empty char vector (or empty cell array) is returned. % % NOTE: This returns the name of whatever called the function that called 'getCallerName', not the immediate caller. % To get the name of the immediate caller (i.e., the current function, not the calling function), use 'mfilename' instead. d=dbstack; if ~exist('fullStackFlag','var') || isempty(fullStackFlag) || ~(islogical(fullStackFlag) || isnumeric(fullStackFlag)) || fullStackFlag == 0 if numel(d) == 1 callerFunc=''; elseif numel(d) == 2 callerFunc='base'; else callerFunc=d(3).name; end else callerFunc=cell(numel(d)-1,1); [callerFunc{:}] = deal(d(2:end).name); end end
You want to use fprintf https://www.mathworks.com/help/matlab/ref/fprintf.html
I got it by doing it like this if k==7 disp(m0) end but i don't know how i would save these variables
Not sure of the class of c. If it a double you can append the solution to c each iteration. One way of doing this. Define c as an empty array, then append the solutions to it. Example: c=[]; for iter ... for k ... d = a+b; c = [c;d]; end end
As far as I can tell that method only works with lego ev3 hardware.
This post illustrates my biggest beef with matlab. The matlab language/ecosystem intentionally makes creating functions --- the bastion of readable and reusable code --- difficult to create and work with. You either make a script with no functions, or create a function (which messes with breakpoints and tracking down errors since variables are in the called space and get wiped after an error when you return to the calling space). Or you make a billion files. (or go down the path of anonymous functions, which is its own can of worms)
c is a data vector, like c=[1;2;3;4];
A great resource to find out more about the capabilities of a certain matlab function is either the online documentation (https://de.mathworks.com/help/matlab/ref/uigetfile.html) or the help function (type 'help uigetfile' without '' in your matlab console). In this case the online documentary actually shows an example of exactly what you want to do (load multiple *.dat files at once). As far as i know this only works, if the files are located in the same directory. In your case 'filename' would be a cell array with as many elements as files you select. You still need to use 'load' on each file separately.
Oh ok. I missed that in your code. You allocated c with zeros. Must c have length 4? I would think c must be length iter*k. You can store the solution by array indexing.
MATLAB handles functions the way every language handles functions. You want functions to have their own, local workspace. it's the whole basis of a function. And for debugging, you can always set "break on error" so you go straight into debugging mode if you have a problem, and you can have sub-functions in scripts. 
c always has length 4 because a and b are also length 4, i could use the following out = cell(1,2); &lt;...&gt; %rest of code out{k} = c; but that will only give me for the last iteration, i wanted for both of them
If you don't want to use functions (deffo the best way btw) then just create another script and type the name of your script you want to run. If it is in the same directory it will run. In terms of growing variables Clear variable1 variable2 variable 3
Because c is always the same dimension you do not need a cell array. Simple enough... Allocate c to be zeros(4,14) and index c like so. c(:, k + (k*iter-1)) =a+b;
I actually can't use c as you said because i use it to calculate for different variables such as dtz = -(D(3,:)-c(4))./(v.*dn); D is a 4x4 matrix, and v and dn are variables, im sorry i didn't put the entire code here, wanted to save some space xD 
So chose a different variable let’s call it d. Because you really want the d. And allocate d = zeros(4,14); and d(:,k+(k*iter-1) = c.
Oh ok, will try!
Split your dataset in a training set and a testing set and use [Cross\-validation](https://en.wikipedia.org/wiki/Cross-validation_(statistics))
But they don't. Sure, they handle the mechanics just fine with address space and all that. However, from a programming perspective, I'm forced to start dropping files all across my folder just to support a script. C let's me drop functions all over a file. Python let's me drop functions all over a file. Matlab only does, if my file is a function that's the exact same name as my first function. MATLAB is at its core a scripting language. However, they don't want you to write functions that are compatible with a script. It's just a messy way to deal with code. (I've had this debate with others in my dept. They just say do it matlab's way, and its fine. I just have fundamental disagreements with "matlab's way") In reality, I do exactly as you say with breakpoints. However, I cannot tell you how many times in the middle of a loop inspecting some variables, doing some analysis and plotting, and then hit "continue" by accident, and then the function completes, and all my intermediate variables are gone.
Replying to myself. Looking into it, my beef was fixed sometime ago. You can have sub functions in a script since R2016B Well, paint me silver, and call me a tinman. I'll be. This changes everything for me! (Next you'll tell me, MATLAB actually supports a string class. Heh &lt;snark&gt;) Seriously, I'm pumped about actually having sub-functions in a script!
Thank you for the pointer!
Yes you can. There is no rule stopping you. However as you already felt, tuning them simultaneously is not an easy task. You can however use a parametric pid controller and let "systune" tune it for you. It is quite not user friendly but for such small systems it would give you an acceptable solution. One way to do it manually is to draw the MIMO Bode plots and see the shape of the open loop to get an idea what the controller roughly should look like then try to match that via playing with the gains. Note that PID works on error signals but LQR works via measuring all states so some modifications are necessary. 
i didn't quite understood what happens here &gt;d(:,k+(k*iter-1) = c because it would exceed the matrix dimensions, like for k=7 it would be d(:,20)=c 
Your resistance matrix has.... *negative resistances??* You have a 3x3 matrix of resistances, but a 3x1 vector of voltages. Which goes to what? If it's V = IR, your matrix math doesn't work out. Middle dimensions annihilate, leaving your result to be (something)x3. More fundamentally - are your resistors in series or parallel?? You just give a bunch of random numbers (negative resistances?? really?) and then ask how to calculate parameters. Generally speaking, 1. Find the Thevenin equivalent of your resistor network, 2. Find the current flow through that equivalent, 3. Find the voltage drop in each resistor with Ohm's law, and 4. Find the power dissipated in each resistor with P=IV. But again, the key to the whole problem is resolving your resistor network down to a singular equivalent resistance. Without a diagram showing the arrangement, nobody can give you any help.
Write a mex file. If you really want such granular control of timing and sequencing, move to something that has those capabilities. 
&gt;My group project Are you sure you don't have access to an academic license? Most universities have academic licenses of Matlab. If you're worried about what you need, contact Mathworks and ask for a trial of all the stuff you think you want. Try it, then buy it if you wind up using it. Their support is awesome and they've always been super supportive when I've requested toolbox licenses. 
I got it by using out = cell(1,2); &lt;...&gt; %rest of code out{iter} = c; %changing the 'k' for 'tier' but thanks for the help!
It sounds like you're asking for a second algorithm, that can also detect tumors, that is better than the algorithm you made, that can determine if the algorithm you made did its job correctly or not. Is that right? I think training is a common issue in machine learning, but I'm not a machine learning expert. Essentially, I think you need to have a known data set you can use to train the algorithm, and then a known-to-you (but unknown to the algorithm) data set that you can use to critique the algorithm. 
What are your `px` and `pz` matrices? Are those *trajectory* matrices or are those *position* matrices? Also, you're indexing those matrices `1:final_frame(i)`. This means you're getting every element of `px`, from the first to the `final_frame(i)`th and plotting those values. You are *NOT* getting `final_frame(1:i)`, you're getting `1:final_frame(i)`. I don't know what any of your variables are, though. My guess is that `final_frame` is a vector of indices. That's the only thing that makes sense to me the way you've called `px(1:final_frame(i))`. If `px` and `py` are positions, and by "trajectories" you mean the direction the robots *just* took, you might consider looking back one frame to "now," as in: cFrame = final_frame(i); % currentFrame pFrame = final_frame(i-1); %previousFrame line(px(pFrame:cFrame), pz(pFrame:cFrame), 'Color', 'blue'); But again, that's my best guess at a fix for you. If it doesn't work, you need to post *specifics* about what terms you're calling and what those terms mean.
Here's a nice [FileExchange project](https://www.mathworks.com/matlabcentral/fileexchange/21206-view-class-inheritance-hierarchy?focused=5103471) you can use to test (check the GitHub link in the comments for an updated version). It looks like the [answer](https://www.mathworks.com/help/matlab/matlab_oop/hierarchies-of-classes-concepts.html) is yes, as it should be.
If the IR receiver can't interact with the system running Matlab, then Matlab can't interact with that system. Is the receiver USB? Bluetooth? Serial? Ethernet? Analog? etc. 
Okay yeah, technically OP can tune PID controllers for a very specific set of conditions, but any deviation from those specific conditions would quickly degrade control. 
I just found out (I think I was using some 'MATLAB online') stuff, and saw that you can double-quite characters to form strings. This was a pleasant surprise. I used R2012 for a looong time, and didn't realize all the changes that have happened recently. The timetable is also a reeaaaly nice data structure that's in newer versions. In all seriousness, the sub-function in a script is a game-changer for me.
As the guy who wrote the post, I had in mind what ThwompThowmp describes: using the command line in tandem with m-files
I'm programming an arduino through Matlab. I have done it in arduino IDE, but can't seem to figure it out in Matlab, and can't use Arduino IDE because it's for school.
I know this is the "real" answer to this (and quite a few other issues I run into), but for the moment my C is iffy at best and I dont want this to be sloppy code.
Definitely contact sales and ask for trial. Also you can call their tech support and ask them for more advice based in your specific requirements. They handle such requests all the time. Source: worked for MathWorks tech support. 
Yes. If the superclass is a handle class then the subclass will also be a handle class. 
Good bot
You want x'(0) = 0? There's a heel of a lot of ways to do this depending on what you're actually trying to accomplish. 
Built in fcns For x(0)=0 it is just x(0)==0
I might be wrong, but I think ode45 and/or contour are what you're looking for...
you need to start over and describe what problem you're trying to solve. your question is meaningless.
I have 3 differential equations z’’ y’’ x’’ they are all related and I’m using them together to solve each one I am given the initial conditions and I just do not know how to put in the initial conditions 
Yes, just as if someone subclasses your Node class, the resulting subclass isa Node.
That's very fair!
Wouldn't this all be relatively trivial arithmetic using the information you already have? I'm assuming you mean by "area fraction of the image covered" you mean the area of the blobs divided by the area of the image, right? That's pretty simple division. Likewise, you can easily do your other tasks with `max()`, `min()`, and `mean()`. That question about nodes doesn't really have an answer. If you can't precisely define what you're trying to measure, you cannot measure it. 
I'm trying to be explicit here and show you *how to use* the documentation because you seem pretty new to Matlab. There is definitely a lot to learn, but it will become second nature after a while. You need to get comfortable searching for topics online to find the correct Matlab function to use, and then you also need to get comfortable reading the documentation to understand *how* to use those functions. If you [search "solve a differential equation matlab,"](https://www.google.com/search?q=solve+a+differential+equation+matlab) probably the top result is the same as it is for me - [The documentation page titled "Solve Differential Equation"](https://www.mathworks.com/help/symbolic/solve-a-single-differential-equation.html). At the top of the page, there's a list of page contents. The third option is ["Nonlinear Differential Equation with Initial Condition."](https://www.mathworks.com/help/symbolic/solve-a-single-differential-equation.html#f1-7567) These page contents are always *examples*. If an example sounds like something you're interested in, give it a look. For this example, syms y(t) ode = (diff(y,t)+y)^2 == 1; cond = y(0) == 0; ySol(t) = dsolve(ode,cond) That's the code to solve a nonlinear differential equation with an initial condition. Right below that is ["Second-Order ODE with Initial Conditions"](https://www.mathworks.com/help/symbolic/solve-a-single-differential-equation.html#f1-11214), and again the code is given right there as: syms y(x) Dy = diff(y); ode = diff(y,x,2) == cos(2*x)-y; cond1 = y(0) == 1; cond2 = Dy(0) == 0; conds = [cond1 cond2]; ySol(x) = dsolve(ode,conds); ySol = simplify(ySol) 
Optimization is very useful. Also symbolic toolbox.
If you could, please post some minimal script that could recreate the problem. Maybe it's just you, because if `close all` doesn't get it, and Windows can't close it, then probably there isn't anything you're going to do in Matlab to close it. 
try: close all force if that doesn't work, try to get the handle to the figure: findall\(0,'type','figure'\) then call close or delete directly on the handle.
You essentially need the SPL measured by a measurement mic at certain degree intervals, in this case 20°. You'd then have a 1x20 array of SPL values you could use as the data set for polar plot. 
If you're going to use lsqnonlin with your function, you need to [pass it as a handle](https://www.mathworks.com/help/optim/ug/lsqnonlin.html#buuhch7-fun) by prepending a '@': x = lsqnonlin(@newfun,x0,lb)
Thank you very much for your back reply! As it is, my university only has MATLAB available for students for home use by using Citrix Online plug in, which isn’t the most reliable for working on large projects. I’ll definitely give sales a call though and talk to them! Thanks again!
There are several ways to call it depending on your data, but it's not really any different than a normal plot... either pass it the vector of complex values, the vector of radii to plot at fixed-step values between 0 and 2π, or a vector of angles and a vector of radii. &gt; polarplot(theta,rho) plots a line in polar coordinates, with theta indicating the angle in radians and rho indicating the radius value for each point. The inputs must be vectors with equal length or matrices with equal size. If the inputs are matrices, then polarplot plots columns of rho versus columns of theta. Alternatively, one of the inputs can be a vector and the other a matrix as long as the vector is the same length as one dimension of the matrix. &gt; polarplot(rho) plots the radius values in rho at evenly spaced angles between 0 and 2π. &gt; polarplot(Z) plots the complex values in Z. So for a vector of sound pressure levels, 'myMeasurements', you would use: polarplot(myMeasurements) Which is the second form. You said you read the [documentation](https://www.mathworks.com/help/matlab/ref/polarplot.html#d119e875286), but...
With 5 equations and 5 unknowns you have a completely determined systems (assuming all of your equations are independent). There is no method to "force all the solutions to be positive." There is only one answer. 
Much appreciated! Our university doesn’t seem to have full licenses for students, but I’ll get in touch with sales today! I appreciate the help!
Thanks for the suggestion! I’ll look out for the Optimization toolbox!
No student license available from my school, unfortunately. I’ll definitely check out the trial versions though and see. Thank you’s!
Yes this is perfect ! Thank you so much this is very helpful
set(0,'showhiddenhandles','on'); close all
Use abs to make all values positive?
I may not have explained my problem clearly enough, sorry about that. What I'd really like to get out of this is an explanation in plain english of what the outputs of the bwconncomp are, and how I can go about manipulating them. Specifically, I'd like to learn more about the meaning of "connectivity" and what the "pixelIdxList" is.
Iirc it is the son of a developer. There are actually like 5 or 6 images embedded in that image if you know how to look: https://blogs.mathworks.com/steve/2006/10/17/the-story-behind-the-matlab-default-image/ 
From the documentation topic [Modify Properties of Charts with Two y-Axes](https://www.mathworks.com/help/matlab/creating_plots/customize-graph-with-two-y-axes.html): &gt; Use ax.YAxis(1) to refer to the ruler for the left side and ax.YAxis(2) to refer to the ruler for the right side. [YAxisLocation](https://www.mathworks.com/help/matlab/ref/yyaxis.html#buofqx8-4) just tells you which of the two is currently active.
You're very welcome.
One follow-up question: I want to assign the max value as the upperlimit to each axis. To calculate the maximum, I do this and it works: `y1max = max(cell2mat(arrayfun(@(x) x.YAxis(1).Limits, ax, 'uni', 0)));` However, when I try to use that value to assign to YAxis(1), I'm running into an error: `arrayfun(@(x) x.YAxis(1).Limits = [0 y1max], ax, 'uni', 0);` It tells me `Error: The expression to the left of the equals sign is not a valid target for an assignment.` Do you know what I'm doing wrong here with this object? Thanks again!
To add on: if all equations are not independent then he/she can add another F where the sum of absolute values would be positive 
What is the meaning of the scalar given for Connectivity? All that the documentation provides is "Connectivity of the connected components (objects)" And for the PixelIdxList, it says "1-by-NumObjects cell array where the k-th element in the cell array is a vector containing the linear indices of the pixels in the k-th object." I simply don't understand what that means, and I'm hoping somebody here can explain it.
It's possible that the object is no longer in context when you're in the inner function - try setting a breakpoint at that line, then use "[Step In](https://www.mathworks.com/help/matlab/matlab_prog/debugging-process-and-features.html#buvyxwy)" and inspect ax. Edit: anonymous -&gt; inner (used to anon functions in arrayfun et al.)
I agree, this does seem possible.
a license plate reader.
Floating garbage recognition and position locating for use in an autonomous boat that can recognize and remove large plastic items from bodies of water 
You're gonna need to build your angle vectors. Something like this should do theta=linspace(0,pi,N); Where N is your number of points. Then you just use polar(theta,measured_pressures) BOOM! Directivity plot. 
I did this just today. plotObj = rectangle (); delete(plotObj);
This kinda works, but only if I put it inside the loop itself and all that does is renders each object individually. I need them to all be rendered and displayed at the same time, then all of them stop being shown. If I put the delete outside the loop, my program breaks for some reason. 
what type of graduation, which level of image or audio processing?
this would take 1 person multiple years to develop, working full-time on it
Can you share your code?
Here is a very similar circuit. I'm not sure what you mean by the middle dimensions not working out. I appreciate your feedback. [https://imgur.com/a/YcjLlTh](https://imgur.com/a/YcjLlTh) 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/1qEKNvA.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
Here is all I have left after deleting my attempts. It became a real mess, so I closed it down without saving anything other than this. Also, I've attached a circuit very similar to mine. I appreciate any help. \[Imgur\]\([https://i.imgur.com/YhSsNJg.png](https://i.imgur.com/YhSsNJg.png)\) \[Imgur\]\([https://i.imgur.com/uf8vauG.png](https://i.imgur.com/uf8vauG.png)\)
https://www.mathworks.com/help/images/ref/conndef.html https://en.wikipedia.org/wiki/Connected-component_labeling#Overview
Matlab doesn't repeat variables. Matlab does exactly what you tell it to do. 
Avoiding objects for a robot. 
Would defining the value you want to keep as the value you wish to be rid of work for you? This is my usual strategy. 
You can try Machine Learning, that's a good trick. 
you get the student license from mathworks, not your university. go here: https://www.mathworks.com/store/link/products/student/new?s_tid=ac_buy_sv_cta the $99 probably has everything you need.
Implement a convolution reverb algorithm of something novel.
Much appreciated. I figured I should get it while I’m a student, rather than later when I’m not.
plot?
Hubble space telescope releases all its photos to the public. Of course the images are not coloured but you can do some fun stuff to create beautiful false colour images of the galaxies and space clouds it observes. This requires detection of light intensity, cropping and combining of images (as the telescope uses several pictures which are then combined together). 
Graphing the solution curves can be done with the fplot function. Assuming you've found the solution function you can plot the curves for varying values of C like so: sol(x,C) = dsolve(eqn, cond) Cval = -2:2 fplot(sol(x,Cval), [-2, 2]) You can also use the plot function to do this but you would need to define a vector x as you've done and create a matrix y to contain the solutions for various C values. It'll be a bit more complicated as you have to do more data wrangling but it offers more control over the data, in my opinion.
E.g. x = 2; x = x * (x^3); At first x will be 2 but after the second line it is redefined to 16. x = 2 no longer exists. Keep checking the values in your workspace while you run one line at a time (highlight and F9). You should observed the changes. 
Google is your friend for Matlab, the documentation is pretty fantastic. uigetfile is what you are looking for
&gt; I can then save the elements to a variable A with the following code: Okay, about that code. On every iteration of your loop, you take the stuff that is in `C{k}`, and you put it into `A`. You never **append** the data, you *overwrite* the data. On the first iteration, `A = C{1}`. On the second iteration, you throw all of that away and set `A = C{2}`. It's not clear what you mean when you say that you want "all 600x3 sets to be saved to individual variables." You have 6 `.dat` files... each one is a single 600x3 data set? So you have six 600x3 matrices? What variables did you want these saved in? What if the person doesn't pick all six `.dat` files? What if the person picked seven? If you could provide a clearer explanation of what you're trying to do then I could try to help, but I'm a bit confused trying to understand your expected end result. 
Yes, I read it but I just done understand how to use it. The code ive got is below. It runs and shows the correct scale for my results but all the points to mark the value are on one line. [https://imgur.com/a/OPQDPkB](https://imgur.com/a/OPQDPkB) theta = 3.14159; SPL=\[78, 77.8, 79.5, 76.9, 70.8, 70.6, 67.2, 81, 77.8, 83.6, 76.2, 81.5, 74.8, 70.9, 74, 72.1, 76.4, 74.5, 73.8\]; rho = SPL; LineSpec = '\-or'; polarplot\(theta, rho, LineSpec\)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/47AR3AW.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dy4e2xf) 
Just use a counter. Something like this: nDisplayFrames = 10; frameCount = 0; for o = 1:size(xmin, 2) frameCount = frameCount + 1; if frameCount &gt; nDisplayFrames break; end &lt;your rectangle command&gt; end If, alternatively, you would like to do other stuff in there, you could just check the count and only show those rectangles during the criteria: for o = &lt;stuff&gt; frameCount = frameCount + 1; if frameCount &lt;= nDisplayFrames &lt;rectangleCommand&gt; end &lt;other things you'd like to do in the for loop&gt; end You could also do conditionals, where the rectangles are drawn *after* some frame count but before another: minFrameCt = 5; maxFrameCt = 10; frameCount = 0; for &lt;stuff&gt; frameCount = frameCount + 1; if (frameCount &gt;= minFrameCt) &amp; (frameCount &lt; maxFrameCt) &lt;plot things&gt; end end Really, whatever you want to do. Keep a tally of where you are and then you can use that to determine what you should do at any particular point. 
**Polar coordinate system** In mathematics, the polar coordinate system is a two-dimensional coordinate system in which each point on a plane is determined by a distance from a reference point and an angle from a reference direction. The reference point (analogous to the origin of a Cartesian coordinate system) is called the pole, and the ray from the pole in the reference direction is the polar axis. The distance from the pole is called the radial coordinate or radius, and the angle is called the angular coordinate, polar angle, or azimuth. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
You definitely don't need to do this, and it's a terrible idea. 
Hey, CommonMispellingBot, just a quick heads-up: **noticeable** is actually spelled **go eat a dick**. You can remember it by **remember the middle a**. Have a nice day! ^^^(The parent commenter can reply with 'delete', but it wont do a damn thing.)
If you just want a solution, use `fmincon` If you want to actually learn *how* to solve these types of problems, "constrained least squares" and "lagrange multipliers" are good keywords to search for to get you started.
i actually can create it by clicking but i need to get the code for assignment. [http://prntscr.com/jbcon1](http://prntscr.com/jbcon1)
what is the length of vector a?
there's your problem. add the line t=t'; and run it again. polyfit can't compare row vectors and column vectors, they need to be the same. 
Lol, glad to help. And that damn bot has gotten me enough times that that really seemed like the only appropriate response.
I appreciate you taking the time to respond. First: its worth quickly noting the purpose of this function. * It is a data loading function for a primary data format used in my field (which matlab doesnt have "standard" or "built in" functions for). The 3 outputs represent the raw data (effectively a matrix of 1D time series at N sampling locations), a set of data headers for each sample location, and a global file header. * I will be getting distributed as open source software when I finish testing / working out bugs / finish adding one or two final features, since it is significantly faster than the next best option in matlab. This means I am trying to make things as automated and straightforward as possible. I want someone to be able to run it without ever looking at the help (since some people will inevitably do this) and have it work, and certainly have it not cause any major issues. I also have several more "advanced" user inputs so that you *can* override any automated analysis and get fine-grained control, but I dont want to require any more info from the end-user than I absolutely need to. Now, to respond to your points: (1) I already do this, and in the case of no outputs given at all I open a timed UI popup asking the user to select what they want to load. But, I want this code to be able to load everything or just headers or just data, meaning that there is always a situation where there would be an empty output defined. I dont want to make the file header the 1st output, since this is a data loading code and the primary output should be the data. That said, without an "empty output check", if someone calls `[~,~,fileHeader] = foo(...)` instead of quickly reading, parsing, and returning the first 3600 bytes of a file, it will start an unstoppable `fread` call of the *entire* dataset, which in my case can be up to **several terabytes** of data, which will then be thrown away since it isnt assigned to an output. This is especially bad is the data is small enough to fit into ram+swap but too big for ram alone, since this will cripple the entire system unless you stop it before you run out of ram. (2) I just counted, and the entire package has 52 functions (including nested functions) to support 2 "main" functions - one for reading and one for writing. Theres also just shy of 5000 lines of executable code, according to `slocDir` (which doesnt count white space or comments - with these it is probably 10k+ lines).Everything is very well optimized, but there just isnt a way to not load (and optionally convert using a data conversion workflow) a big chunk of data unless you can determine that you dont need it. (3) I admit I havent used classes very much as all in Matlab, so Ill have to look into this more. As i mentioned though making things easy for the end user who just tries to run something without looking much at help files is one priority - is using classes the type of thing that could be setup entirely transparent to the user, such that (as long as the package is on their path) they can just run `[~,~,x]=foo(filename)` without any other setup and it will know not to load the first 2 outputs? If so id take that in a heartbeat...I never liked the idea of loading and manually parsing the command history, I just didnt have a better option. Its really a shame that TWM hasnt built this feature into Matlab, but you work with what you have.
I think I've figured everything out, thanks for your help!
Best practice is to use column vectors whenever possible. A neat trick I recently learned is : a=a(:) ; It makes it so a becomes a column vector, no matter its former shape. So you never have to think when to use the transpose on vectors! 
As an alternate to polyfit that it faster and does some corrections (like removing the NaN's and reshaping everything to column vectors), you can use the following: N = 9; ii = (~isnan(t(:)) &amp; ~isnan(a(:))); G = bsxfun(@power,reshape(t(ii),[],1),[N:-1:0]); m = G \ reshape(a(ii),[],1); f = G * m; 
&gt; you’d need to make multiple passes over the data, once for the data, once for the headers, is this correct? not in this case, though a decent chunk of those 5000 lines exist to deal with this issue. Theres 2 parts to this: note: this assumes that each 1D time series has the same number of samples, which is *almost* always true. Though, even if this werent, I would use a very similiar strategy. 1) There is an automated 2-step blocking analysis. This first groups the `fread` calls into blocks of sequential sample locations. Then, * IF only reading data or data headers, the `skip` parameter in the `fread` call is set to skip over the appropriate amount of bytes so that each primary blocked group is read together in a single fread call. * IF reading the data headers and the data, it implements a 2nd pass to block sets with the same `#read` and `# skip` together, and everything is read as a "binary blob". ex: reading from locations [1 2 6 7 11 12 16 17 21 22] gets translated to 1 fread call starting at sample #1 that does `dataCur = fread(fid,[ns 10],[num2str(ns*2),'*uint32=&gt;uint32'], 4*ns*3);`, where `ns = #data samples + # header samples` at each location. In otherwords, it reads 2 data locations (which is `2*ns` samples), then skips 3 data locations (which is `4*ns*3` bytes), and repeats until it fills up a `[ns x 10]` array, which is all the requested data. 2) To separate the data from the headers (if they were read together), the array is split and the binary blob of data headers is sent to another function that uses `typecast` to separate them into their actual values (in this case splitting 60*uint32 into 91 different individual values at each data location). The overall function sort of goes like so: % analyse inputs, set defaults, grab required info from a few select byte locations in the file header if readFileHeaderFlag % load and parse the file header, which makes up the first 3600 bytes of the file if ~readDataFlag &amp;&amp; ~readDataHeadersFlag % NOTE: this is the check that is crucial to trigger when the function is called as [~,~,x]=foo(...) return end end % implement blocking analysis on selected data locations. If not defined, determine file size and set this to read ALL the data in the file. % read data and/or data headers if readDataHeadersFlag % strip headers from data (if needed) and call conversion function to get actual values, unless the user defined one of the function input flags that specified not to do this. end if readDataFlag &amp;&amp; convert2ieeeFlag data=convert2ieee(data); end 
Clear your coefficient values each time. Alternately, run this in a function so they don't stick around in the workspace. Test this by adding: clear coeffvalues in the line before your fit for sine. Best choice: run this in a function AND name the variable you're storing the coefficient values in as something else (`coeffvals` like in the documentation, perhaps); it's generally bad practice to shadow existing functions with variables.
&gt; What I was proposing was effectively just separate functions for: Metadata = readHeaders(filename); Data = readData(filename) This would have been the other option had I not been able to get a (seemingly) fully working (though still very hacky) solution by fetching and parsing the command history. As it is though, this "hacky" solution seems to work well enough that id rather have everything in a single simple to use "main" function than split having it split between 1 (or more) sub-functions. I suppose this is just design priorities. &gt; So, within the language, I think the most reasonable thing would be to make it an optional input argument to declare Whether you want the optional data while reading, as I believe you are doing. yeah, these exist, I just dont like the idea of requiring people to use an optional input to avoid potentially system crashing issues. The data files are just too big to risk accidentally initializing a un-stoppable full file read. As such, I indeed these as "emergency override" incase there is a usage case I havent thought of where the automated parsing doesnt work right. &gt; The change I’d make is I’d make your LHS argument a struct or class.... The 2 header outputs do get output as a struct and a cell array (which contains a struct and a char array describing the "textual" part of the file header). The structs are used since they can retain the different integer formats off the individual headers. The data is a standard array though since most processing that you might want to do on the loaded data (well, what *I* tend to do anyways) is easiest/fastest with the data as a numeric array. A lot of spets wont require the headers either after you initially grab a few required quantities. This would, I suppose, sort of solve the problem in the sense that you take away the ability to define empty outputs in the output arguments directly, though Id rather give people the option to do either, even if one is supported by hacky (though reliable) code. Again, this may just be a matter of personal design preference.
Using dblquad I get this answer: &gt;&gt; I=dblquad(@(x,y) 2*x.*y+2.*x-x.^2-2*y.^2+72, 0,8,0,6) I = 2816
Didn't get a chance to reply to your other comment before you caught your mistake. Good catch. ;) As for this error, you're trying to multiply two vectors. There are 2 ways to do this: 1. Element-wise x.*y 2. Vector-wise x'*y Which is appropriate here? Hint: in your other comment you got it right, ignoring your missing '-'.
Just typing. No biggie, you're one keystroke away from being done.
relevant xkcd https://xkcd.com/1425/
thanks for the help!
If you dont care which value gets chosen: use your existing method, but for one of the inputs (say, `x`) use `x+randn(size(x)).*sqrt(eps(min(nonzeros(x))))` This should randomly perturb values just enough so that they arent exact matches but not enough to have an effect on any other matches.
Yeah. I could do that. Let me try
Also, I just realized you could also do x1=double(x &gt; 0.25); which (based on the image you posted) should do a good job of giviina `1` everywhere you have signal and `0` everywhere you have a hole, and then use that (either using fft or just by counting how many 1's and 0's there are in each block. e.g., something like xd = x(2:end)-x(1:end-1); stardInd = find(xd == 1) + 1; % start indicies of each block of 0's endInd = find(xd == -1); % end indicies of each block of 0's.
Okay, Thanks!!
ahhh, unless it MUST be a 1-1 relationship for the entire vector. Then this would fail. If so, then u/jkool702's method would be the best heuristically. 
Having optional arguments or Name/Value pairs doesn’t imply which way the default should be with respect to the more or less memory intensive codepath. You could have it not return additional header metadata by default unless requested. Honestly, I think that the design challenges in your file reader aren’t so different from those in existing built in file I/o interfaces in MATLAB, and the use of structs/classes for optional metadata and or separating the header reading from actual data reading would make your interface much more similar to more in model designs in MATLAB. I think what you are presenting as a “design preference” is really more of an implementation preference (you already have code that works). From a design perspective, there are several ways to improve your interface with existing language features. Up to you though.
One other possible design alternative, though I don't think you're likely to want to do it. If your files are really arbitrarily large, have you considered using a Datastore in MATLAB as the means that a user would traverse the data: https://www.mathworks.com/help/matlab/datastore.html https://www.mathworks.com/help/matlab/import_export/develop-custom-datastore.html Phrasing things in terms of a datastore would remove the concern of out of memory since it would phrase the file i/o in terms of an iterator pattern where you would request more samples as you are ready for them: ds = myDatastore(filename); while hasdata(ds) [data,info] = read(ds); % Do stuff with data samples in data and metadata in info end This might be better for your problem if you are really concerned about out of memory. You'd allow the user to iterate through the dataset a bit at a time rather than doing the full read in memory. Just a thought. 
These may be of use to you: * [Getting started](https://www.mathworks.com/help/matlab/getting-started-with-matlab.html) (keep this handy throughout) * [How to solve a differential equation](https://www.mathworks.com/help/symbolic/solve-a-single-differential-equation.html) * [Curve plotting](https://www.mathworks.com/help/matlab/line-plots.html) * [Function plotting](https://www.mathworks.com/help/matlab/ref/fplot.html) * [Quiver](https://www.mathworks.com/help/matlab/ref/quiver.html) * [Bonus - Anonymous Functions](https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html) &gt; Can I use quiver to draw a plot phase of this equation? I believe in you! &gt; So does quiver plot it as a function of time? [Not so much.](http://tutorial.math.lamar.edu/Classes/DE/PhasePlane.aspx) &gt; It tells me r1 is an unidentified symbol. You don't say. Did you [define r1](https://www.mathworks.com/help/matlab/matlab_env/create-and-edit-variables.html)? The [pseudocode](https://en.wikipedia.org/wiki/Pseudocode) you posted does not. Take those links, make an attempt, and come on back if you get stuck. Be sure to bring your code and any errors you're getting.
**Pseudocode** Pseudocode is an informal high-level description of the operating principle of a computer program or other algorithm. It uses the structural conventions of a normal programming language, but is intended for human reading rather than machine reading. Pseudocode typically omits details that are essential for machine understanding of the algorithm, such as variable declarations, system-specific code and some subroutines. The programming language is augmented with natural language description details, where convenient, or with compact mathematical notation. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
&gt; Having optional arguments or Name/Value pairs doesn’t imply which way the default should be with respect to the more or less memory intensive codepath. You could have it not return additional header metadata by default unless requested. Sorry, maybe I wasnt clear. I was attempting to refer to say that I could forcibly break up the `fread` call so that you could press `ctrl+c` to exit out without waiting for the entire file to read in, but this leads to more `fread` calls which tends to negatively impact performance. If I already need to use multiple `fread` calls it wont make much of a difference, but in cases where Id have to break up a single call Id go from data = fread(...) to data=zeros(...) for nn=1:numBlocks data(:,[f(nn)]) = fread(...); end which could make a non-negligible difference. Is it a huge difference? No. Is it more of a price than I want to pay to slap a band-aid on a potential problem when I have another solution that avoids it entirely? Yes. &gt; I think what you are presenting as a “design preference” is really more of an implementation preference (you already have code that works). From a design perspective, there are several ways to improve your interface with existing language features. I really am trying to design this based on both my own usage and based on the other few "good" programs for I/O of this particular data do (2 in particular, both of which all use the same output scheme). Now a part of this is probably "I think this design is best because thats what I know because the only options I had did this", but at the same time most other people that use matlab for this are probably in the same boat since there arent many "good" I/O options available in Matlab. The amount of time it would take to group things into a structure would be trivial compared to the amount of time ive put into this code, i really am trying to go for what I think will make it easiest to use while maintaining efficiency. Regarding using custom datastores: i didnt go this route because when I started writing this code (and wrote the bulk of the base functionality) R2017a was the newest Matlab version, and I *couldnt* use a datastore. In particular, on everything before 2017b, using a customDatastore required being able to hold the entire dataset in memory in order to actually load it as a datastore. idk if this was just temporairly until it was "loaded" as a datastore or if this was permanent, but in either case it made the datastore pointless, since if you had the memory for it youd just use it. I know this works now, but I just havent taken the time to set this up. Using custom datastores is a good idea and is/has been on my to-do list, and at some point I will get around to it, but thats another project. (hopefully m sure parts of this loading code will come in handy for building the custom I/O function in the datastore). Plus that only works on 2017b and up, and that excludes a lot of people, so I figure theres still a lot of utility in having a good function that doesnt require custom datastores.
Thanks for the reply. I must be doing something wrong (still) because all I'm getting is a line of x=1 when using fplot. I'll post my code: syms y(x) C eqn=-3*y.*x.^-1+2*x.^4==Dy; cond=y(2)==1; sol(x,C)=dsolve('Dy',cond); fplot(sol(x,Cval), [-2,2])
Is the header always the same? If so you can use an if statement. Pseudocode: if x[1:1]=='Time' then remove(1:)
Alrighty. Thanks for your help.
Could use an if even if the header isn't always the same; just as long as it's [different](https://www.mathworks.com/help/matlab/ref/ischar.html) from the [data](https://www.mathworks.com/help/matlab/ref/isnumeric.html?searchHighlight=isnumeric&amp;s_tid=doc_srchtitle).
Datatypes, you rascals! :D
Have a look at the function “textscan”. It has an option for defining the number of header lines.
If you know the data structure beforehand, you can import the n-th row and check if it follows said structure. If not, consider it as a header line and repeat as long as necessary 
Yeah i've tried this before but without filtering the data it won't be possible since when the process gets a bit unstable, the values may start to dip in the short circuit values without the cycle being finished. Nevertheless thanks a lot for your thoughts, it's really nice of you to keep thinking about this :D 
Consider something like fgetl to read the first line and then use a regular expression or string comparison to see if a header is present or not. Then use textscan with the determined number of header lines to skip as needed. 
Glad to help. I find problems like this interesting, plus its good practice. &gt; when the process gets a bit unstable, the values may start to dip in the short circuit values without the cycle being finished. So, I had an idea for this that seems to work decently well. % generate synthetic data x=sin(0:pi/100:10*pi)+3*randn(1,1001)+3; x(x&lt;0)=0; x1=x; x1(reshape(bsxfun(@plus,[30:70]',[0:100:900]),1,[]))=0; % % % % % USER SET PARAMETERS % % % % % N=10; % number of windows to use maxWidth=20; % max width of largest window (in #samples) cutMax=1; % cutoff for width=maxWidth cutMin=0.001; % cutoff for width=1 % build cutoffs cutAll=logspace(log10(cutMin),log10(cutMax),N); % build widths NAll=round(([1:N]+logspace(0,log10(2*maxWidth-N),N))./2); while any(NAll(2:end) == NAll(1:end-1)) NAll([false,(NAll(2:end) == NAll(1:end-1))])=NAll([false,(NAll(2:end) == NAll(1:end-1))])+1; end % preallocate xCmp=false(N,numel(x1)); % loop through all window widths for nn=1:N % make gaussian weighting kernal ker=exp(-linspace(-3,3,NAll(nn)).^2/2); ker=ker./sum(ker); % get local average localAvg=(conv(x1,ker,'same')); xCmp(nn,:)=(localAvg &lt; cutAll(nn)); end % average results xCmpMean=mean(double(xCmp),1); Basically, this uses multiple cutoffs instead of just 1, and for each computes a local average of the signal and compares that instead of the original signal. The window for the local average gets bigger the higher the cutoff is. The idea is that if it really isnt actually a dead zone just a few live samples that dip below the cutoff then it will probably have a high local average when averaged across many points. As you reduce the number of points used in the local average the false positives will have lower values, so you need a lower cutoff to compensate. You can then look at the overall "score" of how many tests a particular point "passed" and set a cutoff based on that. In the above code the "true" dead zones tend to have a final score between 0.8-1.0, and the false positives tend to have a score between 0.1-0.3. There are a few parameters you can tweak too to adjust it to your data size and (approximate) deadzone width (this uses a maximum width of 20 samples for a 40-sample-wide dead zone). 
It seems I've gotten confused on what your question is. Did you want to solve the following differential equation y'(x) = (1/4)x^5 + Cx^(-3) given the condition y(2) = 1? 
I'm on mobile right now, but if someone doesn't reply in a couple hours, I think I can help out. 
which is valid for any control method
That's the thing I don't know . We may or may not have a header (we aren't really allowed to know) in our actual graded file, however the header structure should all be similar.
When debugging code, one must be able to break down the problem into smaller components and test those individual components to narrow down what part is broken. I can ask you some questions that might lead you to figuring out where it is broken: - The initial conditions x(0) and y(0) are defined and stored in variables cond1 and cond2. However, cond1 and cond2 are not used anywhere in the provided code. - Can you confirm that the Laplace transform equations are correct (you can compare it with your hand calculations or with WolframAlpha) - Can you confirm that the substitutions you made is correct? That is to say, did you really mean to replace terms such as s*X(s) and s*Y(s) with dX_LT and dY_LT (where X(s) and Y(s) are the Laplace transforms of x(t) and y(t))? - When solving the system of equations, why did you choose to solve for sX(s) and sY(s) instead of solving for X(s) and Y(s)? Did you not want to find the inverse Laplace transform of X(s) and Y(s) to get x(t) and y(t) respectively?
If ischar(x[row:col]) remove [row:]
So can I still use the UI function to make it a ui, then add this afterwards to scan the data for header, then split into x and y arrays? 
Exactly
The flow is: import file 1-&gt;store in array-&gt;check for header-&gt;clean first row(eventually)-subsplit(if needed)-&gt;rinse and repeat for file 2
website me work in matlab. website: [انجام پروژه متلب](https://www.matlabi.ir/%D8%A7%D9%86%D8%AC%D8%A7%D9%85-%D9%BE%D8%B1%D9%88%DA%98%D9%87-%D9%85%D8%AA%D9%84%D8%A8/)
Perhaps I was unclear. The given differential equation is : x (dy/dx) + 3y = 2x^5 The given general solution is : y(x) = (1/4) * x^5 + C * x^-3 ; with y(2)=1 as the init. cond. I need to graph the slope fields and "several typical solutions" to the given differential equation. Then highlight the one that satisfies the given initial condition. I've been working on this one problem all weekend and I still can't figure it out. This is the answer given in the book: https://imgur.com/a/QgZ85uq Whenever I try to graph the solution y(x), I just get horizontal lines that do not follow the slope fields. My graph looks nothing like the one in the book.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/6Y6567x.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
See `man fallocate` on Linux. From a quick Google, there appear to be NTFS and/or Windoze compatible utilities that people have made.
Have you stored 2 txt in the same array?
I think you're generating your sweeping frequency function wrong. If you change things around so that you're generating a chirped signal \([https://en.wikipedia.org/wiki/Chirp](https://en.wikipedia.org/wiki/Chirp)\), the spectrum comes out right. Check out the equation for a chirped signal with a linear chirp.
**Chirp** A chirp is a signal in which the frequency increases (up-chirp) or decreases (down-chirp) with time. In some sources, the term chirp is used interchangeably with sweep signal. It is commonly used in sonar and radar, but has other applications, such as in spread-spectrum communications. In spread-spectrum usage, surface acoustic wave (SAW) devices such as reflective array compressors (RACs) are often used to generate and demodulate the chirped signals. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Fantastic, this is exactly what I was looking for. It alsogave me a good keyword to search for. So far I have 5 of 6 use cases figured out. The last one is uncommon enough that I could live with just doing standard zero writing, though if you have any ideas please do share:) thanks again. . CREATE file from scratch Linux: `fallocate` Windows: `fsutil file createnew` Mac: `mkfile -n` . EXTEND a current file Linux: `fallocate` Windows `fsutil file seteof` and/or `fsutil file setvaliddata` Mac: ???
Yep that fixed it! Thanks so much, I had no idea you couldn't just increment the frequency slowly. 
You should doing a read write and be opening the file beforehand(this makes the file) and closing it afterwards. Check on mathworks about reead and writing a file and using the open and close commands. I hope this helps you get closer to completion. 
&gt;the only thing I saw that might actually work required root level access to the entire drive, which I think ill pass on. You misunderstand; the `dd` command you pasted does the same thing. You should keep in mind that not every filesystem supports this kind of preallocation, especially more modern, advanced filesystems.
This might help. https://stackoverflow.com/questions/18246650/modifying-pdf-file-with-matlab-by-fopen
Are you talking about putting to plots side by side on the same figure? If so you'll want to use the [axes](https://www.mathworks.com/help/matlab/ref/axes.html) command prior to calling each plot function. This will enable you to control where the plot appears within the figure.
You'll be looking for [fopen](https://www.mathworks.com/help/matlab/ref/fopen.html) and [fwrite](https://www.mathworks.com/help/matlab/ref/fwrite.html). [Pass extra parameters](https://www.mathworks.com/help/optim/ug/passing-extra-parameters.html) to dynamics if you'd like.
The surf plots would show the amplitudes in the XY plane. The Contour plot would simply show a line in the XZ plane. I will see if the axes command can help me with my illustration. Thank you
ahhhh, embarrassing. thanks for your help :) 
Will look into it; thanks very much!
angrmgmt00's solution has a problem that your dynamics function is called multiple times per time step. If you want to output data every time a time step is taken, look into output functions and event functions: https://www.mathworks.com/help/matlab/math/summary-of-ode-options.html
You're welcome.
You're very welcome.
Thanks to /u/Idiot__Engineer mentioning `fallocate` I was able to figure out how to accomplish write\-less preallocation on linux \(`fallocate ...`\), windows` (fsutil file .`..\) and ma`c (mkfile -n `...\), but the method I was reffering to was not the same` a`s dd. In particular it was based on [this](https://msdn.microsoft.com/en-us/library/windows/desktop/aa365544%28v=vs.85%29.aspx), which is basically equivalent to running `sudo chmod 777 **` before calling your pre\-allocation function, since it requires the user to have the **SE\_MANAGE\_VOLUME\_NAME** privilege to work. If you gave `dd` root access then it could access all data on the drive, but im almost 100&amp;#37; certain that when you run it from a standard \(non\-root\) shell it doesnt ignore file permissions and read/write data it doesnt have access to. You \*can\* give it this type of access, but you arent \*required\* to, which is the big difference.
First off, have you run `help imfindcircles` and tried playing around with the inputs that deal with "Sensitivity" and the "EdgeThreshold"? If so, you can get the actual code with `open imfindcircles` and try and re-write parts of it yourself to be more sensitive.
The problem is that variable step size solvers will evaluate the values at unpredictable times, and it will also be messy because some interpolation might be used depending on the arguments you pass into ode45. It’s not the best for performance, but the ‘proper’ solution IMO is to first do the integration to solve for X, and then evaluate f(X) afterwards using the output of ode45
To offer an alternate view point - I really dont like either the optimization or symbolic toolboxes. Theres nothing "wrong" with the symbolic toolbox per se, but if you need to do enough symbolic math to justify paying for it you are better off imo putting that money towards a mathematica license. The optimization toolbox, imo, just inst good enough for real world problems. It works for simple problems that you might get assigned as HW in a university class on inversion, but literally every time Ive tried using it on a real problem i end up wasting a bunch of time and ultimately writing my own inversion function.That said, I spend more of my life thinking about inverse problems that any sane person would, so take that with a grain of salt. For my own personal usage Ive probably gotten the most utility out of the signal processing toolbox and the parallel computing toolbox, though a good amount of what I do biold down to "time series analysis of huge data sets", where those toolboxes are very useful. For what you are doing idk of any "must have" toolboxes, though im not intimately familiar with all of them.
Your input is definitely appreciated! I don't think I've ever had to use mathematica during my undergraduate career, but I'll remember it as a possible option. I'm definitely not as experienced in writing MATLAB code as many of the people on this subreddit are, but I think I'll watch more videos on the toolboxes that people mention here and try some of them out.
You overwrite `T` and `Qb` on every iteration. You're making those values, then discarding them. The values in `T` and `Qb` at the end of your loop are the last values calculated. It looks like they're supposed to be 3x3 matrices, so you could do: T = zeros(3, 3, length(la)); Qb = zeros(3, 3, length(la)); loopCt = 0; for i = la loopCt = loopCt + 1; T(:, :, loopCt) = &lt;your calculation&gt; Qb(:, :, loopCt) = &lt;your calculation&gt; end You could also use cell arrays: T = cell(1, length(la)); Qb = cell(1, length(la)); loopCt = 0; for i = la loopCt = loopCt + 1; T{loopCt} = &lt;calc&gt; Qb{loopCt} = &lt;calc&gt; end I prefer matrices to cell arrays whenever possible, but figured I'd give you options.
That's not a function or anything, it's just a loop counter. The "typical" `for` loop uses the loop variable as a loop counter, as in for i = 1:10 Then you could just use `i` to know which iteration of the loop you're on. *You* use the actual variables you want to pass to the `sin` and `cos` functions, as in `i = [0 pi/4 pi/2 3*pi/4 pi]`, etc. In that case, if you tried to stash your results in `T(:, :, i)`, you'd get an error that you have to use real positive integers for subscripting, because the actual value of `i` at that point might be `0` or `pi/4`, etc. On the first iteration, you want to store the data on the first "page" of your 3D matrix `T` and `Qb`. On the second iteration, store the data on the second "page," etc. The alternative way to write this would be something like: for i = 1:length(code) sinI = sin(code(i)); cosI = cos(code(i)); T(:, :, i) = &lt;function of sinI and cosI&gt; end or to use a different loop counter from the start, as in: for loopCt = 1:length(la) i = la(loopCt); T(:, :, loopCt) = &lt;function of sin(i) and cos(i)&gt;; end etc. Lots of ways to skin the cat, so don't worry about any particular implementation. Just know that you need to keep the results from each loop iteration *somewhere*, and you need to address that *somewhere* with a real, positive, integer value. 
No problem, glad to help! Good luck :) 
How are you solving the ODE system? Manually using Euler or RK4 or with an inbuilt ODE solver like ode45 or ode23 etc.? Perhaps supply some code so we can see what you're working with. If you've got a solution stored as a vector in Matlab, the plot function should work fine if you're handing it the right information. For example if your time vector is x = [0:100] and your solution vector is y (also with 100 entries), plot(x, y) should work to give a plotted solution. Where you talk about 'hold on' is when you want to plot several curves on the same figure. So like I say, provide some more details and your code so we know what you're trying to do and how you've solved your system. 
Sure, add a parameter or two to the function signature: function y = func(x, n, p) or function y = func(x, [n, p]) I also suggest you look into [persistent](https://www.mathworks.com/help/matlab/ref/persistent.html).
Have you tried counting the number of columns in row 1, then in row 2, then looking at your error message?
Error seems pretty descriptive, doesn't it? 6 columns on your first line, 5 on the rest.
my eyes are bleeding sorry for it guys. Thank you.
C++ Mex function.
Any specific suggestions of a good mex-based replacement for `fwrite`? In my experience you have to *really* know what you are doing to make a mex function that is faster than a builtin, since ithas to be more efficient that whatever the builtin is using and it has to make up for the extra overhead of calling something via mex (this will never be as efficient as the way matlab calls builtins, though it might not be too much worse). Beating a m-file is easy since you dont have to compile on the fly, but builtin's are pre-compiled and more tightly integrated into Matlab than mex binaries are. I doubt my C/C++ is good enough to make a wrapper for the C version of fwrite that is both reliable in all scenarios and is faster than Matlab's built-in `fwrite`.
As a general rule: dont use global variables. I see the appeal in using them, but they tend to be more throuble than they are worth outside of a few specific use cases. When you want a global variable, use a [nested function](https://www.mathworks.com/help/matlab/matlab_prog/nested-functions.html) instead. I think you can also replicate a global variables functionality using classes and methods, but I dont know specifically how off the top of my head.
I figured it out. Thanks for the help again!
Look into the [parallel computing toolbox](https://www.mathworks.com/help/distcomp/functionlist.html#graphics-processing-unit-gpu-computing). specifically these functions: gpuArray() bsxfun() arrayfun() gather() 
&gt; because MATLAB's file I/O routines are horribly, horribly slow. In general id agree, though Ive always been under the impression that `fread` and `fwrite` were the exception to the rule and were pretty close to as fast as their C counterparts. I wrote a test and, for sequential writes anyways, this seems to be mostly true. clear all; close all force; clc; delete('test1.bin'); delete('test2.bin'); nBytes=2^32; d1=zeros(round(nBytes/4),1,'uint32'); d2=typecast(randn(round(nBytes/4),1,'single'),'uint32'); tic fid=fopen('test1.bin','w'); fwrite(fid,d1,'uint32'); fclose(fid); t1a=toc; tic fid=fopen('test1.bin','w'); fwrite(fid,d1,'uint32'); fclose(fid); t1b=toc; tic fid=fopen('test2.bin','w'); fwrite(fid,d2,'uint32'); fclose(fid); t2a=toc; tic fid=fopen('test2.bin','w'); fwrite(fid,d2,'uint32'); fclose(fid); t2b=toc; fprintf('\n\nfwrite wrote 0''s to new file at %.4g MB/s \nfwrite wrote 0''s to existing file at %.4g MB/s \nfwrite wrote random integers to new file at %.4g MB/s \nfwrite wrote random integers to existing file at %.4g MB/s \n\n',(nBytes/2^20)./([t1a t1b t2a t2b])) This gives fwrite wrote 0's to new file at 834.2 MB/s fwrite wrote 0's to existing file at 397.8 MB/s fwrite wrote random integers to new file at 247.4 MB/s fwrite wrote random integers to existing file at 483.9 MB/s for reference, running `dd if=/dev/urandom of=test3.bin bs=4K count=1000000` gives 4096000000 bytes (4.1 GB, 3.8 GiB) copied, 20.9152 s, 196 MB/s (to new file) 4096000000 bytes (4.1 GB, 3.8 GiB) copied, 17.4148 s, 235 MB/s (to existing file) Side note: this is a win10 pc. the `dd` call is using WSL. At any rate, the issue seems related eithger to using the `skip` parameter or to the number of `fwrite` calls, neigh of which I can improve any more from within Matlab. IO hate asking others to write code for me, but if you happened to feel like putting something together Id certainly try it out and (assuming it helps) use it. The `fwrite` calls are all of the form for nn=1:&lt;...&gt; fwrite(fid,data(:,foo(nn)),'uint32',skip(nn)); end
Welcome back! Still trying that conversion from string to string via num2str? Let's not do that anymore, yeah? Just go ahead and delete those two lines and never look back. We'll all try to forget about it. :) I see you didn't replace your `dX` and `dY` variables in substitution with the variables you actually want to solve for, `x` and `y` as I suggested. You got halfway there by changing the substitution variables to `x_LT` and `y_LT`, but you missed the variables in the functions being substituted *for*. You may not know the syntax of MATLAB yet, but you do understand why that's important, mathematically, right? Remember what I said about what you're given in the problem? We don't need to solve for our givens, do we? Once you do that, you can use [fplot](https://www.mathworks.com/help/matlab/ref/fplot.html) to plot your results directly from `dXsol` and `dYsol` (though those names don't make too much sense anymore, do they?)
You can do it fairly simply with just a function and a persistent variable: function outVal = proxyVal(inVal) persistent insideVal if nargin &gt; 0 insideVal = inVal; end outVal = insideVal; end Makes `proxyVal` act like a global variable in the scope in which the function exists, and allows you to set it at will for different subproblems, as well. Credit to Richard Johnson, "The Elements of MATLAB Style". Lots of cool stuff in there.
Sorry I'm having a little trouble understanding this \(*very* much a Matlab novice here!\). Will just adding n and p as inputs into the function tell Matlab to choose the next element down in the second column \(in the example above\) with each subsequent function operation?
No. What it will do is give you the latitude to select which row and column you'd like to use in `x - A(p, n)`. You can leave that expression general in your function, and pass the values you'd like to examine. You could even do something like give it a starting pair of values, declare them as persistent inside the function, and have the function update them if you don't pass them using a check against the number of arguments passed, via [nargin](https://www.mathworks.com/help/matlab/ref/nargin.html). For example: function y = func(x, n, p) persistent nFunc pFunc A if nargin == 1 % increment nFunc = nFunc + 1; pFunc = pFunc + 1; else % define nFunc = n; pFunc = p; end ... % define A, do your work, whatever else When you call it the first time you provide values for n and p. Subsequently you do not, and it just increments them. The presence of nargin allows the function to take a variable number of arguments, even without a matching [varargin](https://www.mathworks.com/help/matlab/ref/varargin.html) in the signature. Without nargin in the function body OR varargin in the argument list, you would get an error telling you that you hadn't passed enough input arguments if you tried to do it this way. A completely different way to do this would be to only pass the element of A that you'd like to use in `x - A(p, n)`. Change the function signature to accept both x and a single value from A and compute your value that way. If that's not possible for whatever reason, so be it, just another option to consider if your mystery code can handle it. Make sense?
Thanks for the response, Would you be willing to take a look at the whole system? Its not too large, and another set of eyes always helps
I would be up for it, sure. I don't get to do model reviews very often. Sounds fun!
I believe [these](https://i.imgur.com/3WnLeIX.png) are all the requirements, and [here](https://www.dropbox.com/s/ui2ub0m0rmsen9f/try_2.slx?dl=0) is the progress I have. I don't believe that the outputs are correct, but if the code checks out I guess I'll roll with the results.
/u/MatlabGuy's comment describes *how* to do this, but doesnt touch on *whether or not you should*. In patricular, there are 2 things to consider: 1) Solving small systems is always faster on a (modern) CPU than on a (modern) GPU, since a) you arent coming close to utalizing the GPU's potential, and b) although the raw computation runs faster, the data transfer to/from the GPU dominates execution time. As a rough ballpark estimate, depending on the CPU and GPU you need somewhere between [200 x 200] and [1000 x 1000] (at minimum, larger is better) to make it worthwhile. Idk if your problems are actually [40 x 40] like your example image shows. but if they are anywhere near that size youll never overcome the I/O to/from the GPU. 2) When solving the system `A * B = C` using `B = A \ C` on GPU's, A MUST be a dense (i.e., not sparse) array. If the blocked diagonal array represents `A` in this example, it might be faster on CPU's regardless of size, since by the time you hit the size where it would normally go faster on a GPU the effect of having to fill in and compute all the `0`'s might be the more dominent factor, and this will get worse the bigger that `A` is.
 Have you tried [memory mapped files](https://www.mathworks.com/help/matlab/ref/memmapfile.html)? I never tested them for writing but for reading those can make a considerable difference. They are very straightforward to use so it’s an easy try. If that is an option, trying to write to HDF5 files could also be an idea... but this would require more work if you want to use the low level functions.
 kron
But what if the matrices are non-square? for example if i have a 4x4 and a 5x4
and i tested it, the function just repeats the last matrix
 a = [1 0; 0 0]; kron(a,rand(5))
I'm not understanding what i'm supposed to do here. How am i supposed to implement this in my code? Because i don't see how i would fit the matrix for each iteration in it
You might enjoy using [contour](https://www.mathworks.com/help/matlab/ref/contour.html) for this problem
What is contour and how can I use it? My skills in MATLAB are very basic. This code took me more than a week to write.
I showed you an example to do the first matrix. How would you make the second matrix? Study the definition of the kroneckor product.
Did you see the link I sent you? Do you have a specific question? 
[removed]
And if you just want entries on the diagonal, use `diag`
it's been a while, but if i remember correctly subplots don't work very nicely within a GUI. i *think* it's due to the distinction between the axes and the figure. when you use "subplot", it's actually creating axis objects within the figure you are specifying, in this case your GUI. if you want two plots, create two axes either programmatically or within GUIDE, then when it comes time to make the plots specify which axes you want with axes(handles.axes1) and axes(handles.axes2). if you want there to be conditional behavior (like two plots showing sometimes and one plot showing other times), within the callback of the thing that's specifying the difference include a portion that hides/resizes the two different axes. 
*Riveting* amounts of detail.../s.
i can email it to you if you provide email
onlycreateforhelp@gmail.com
If you look at your two methods, while they do things in a slightly different order, they end up doing the exact same thing at every step. 
Sure then I think I'll just put one more axis and do the plot there, thanks for the help
Could you go into more detail on why you can't run sparse matrix calculations on a GPU, please? I'm very curious. 
Yes that does make more sense thank you. So my matrix A from which I'm looking to use individual elements from with each function call has to be defined within the function itself? It will then be usable in other functions as long as I've declared it persistent in those too \(and defined exactly what it is in at least one of them\)? The appeal of designating A a global variable in my 'main' Matlab file is that I can simply declare it a global in my various functions \(it's used quite a bit in different functions in my actual code\) and use it as and when. However every mention of global variables online seems to be accompanied with 'don't use global variables', so it seems like a good idea to avoid them. Another complication is that my matrix A is fairly large and is read in from a separate file, which currently is being done in my main Matlab file, before having it declared as a global. I don't want my function to be doing this \(reading it in \+ manipulate the relevant data into the matrix A\) with each function call, as it's going to be used hundreds of times with each run.
Looking at your model and your equations, everything seems to be in order. I ran the model to look at the response. The response is oscillatory, but also asymptotically stable. I don't know much about aircraft, but this appears to be a shape you would expect from a stable aircraft with no control inputs and no thrust. The velocity slope seems to make sense. The vehicle gains altitude, so it exchanges kinetic energy for gravitational, stalls and begins to loose altitude due to low speed, exchanges gravitational for kinetic, and repeats. 
https://drive.google.com/file/d/1R1-HacYZmjhtNWoXpkJcdQoyvNh9HArR/view?usp=drivesdk
https://imgur.com/a/BtULqQ5 I tried it without expanding the equations and the output is zero, meaning they are not equal.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/pf9ryYB.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dy9mck7) 
No, you definitely only want to read it once. The fact that you need `A` in other functions is missing from the OP. Declaring a variable as persistent makes its value stick between runs of functions, as described in the documentation I linked you. It's stored along with the function in memory; this does not give other functions access to it. I usually just pass `A` anywhere it's needed in cases like this. The pattern would go something like this: 1. In main(), read data into `A` 2. Call `newThing = doSomeStuff(x, y, z, A, options)`, and return 3. Use/modify the result, then move on to `newerThing = doSomeOtherStuff(A, ...)`, return 4. So on... Do I need to modify A as the result of one of these? [A, ...] = doThingsToA(A, ...) MATLAB only makes a copy in memory if you modify `A` once you've passed it in. If you're only reading it, then it acts like a "pass by reference" variable, looking to the original location in memory to get the data. Loren Shure has some [great stuff](https://blogs.mathworks.com/loren/2006/05/10/memory-management-for-functions-and-variables/) to say about this. If `A` is very large, and you *do* need to modify it throughout your code, you might have a candidate for a global variable. There's no need to twist yourself into a pretzel to avoid it. The reason you typically don't want to use a global is that you might modify it somewhere by mistake, and the next time you call it you'll get an unexpected result. Not that you're not smart enough to keep track, but it's easier than you'd think to have it end up on the LHS of an assignment after a long enough time and with a large enough codebase. Further, if anyone else ever has to maintain your code, they might completely botch it without realizing it! It's not an absolute no-no, it's just better practice for peace of mind. In the other comment I replied to, you can see how to get pseudo-global behavior out of a variable by defining it as a function. You can then pass the function handle for `A` like: result = superSlickFunctionOfMaximumCoolness(@A, ...) And use it however you'd like, i.e. `A(val)` sets it, and `A` gets it, with the same behavior as Loren describes above.
You need to use [cell array of character vectors](https://www.mathworks.com/help/matlab/matlab_prog/cell-arrays-of-strings.html): fileNames = {'fileName1.jpg', 'fileName2.jpg', ...}; Then index in using, for example: myImage = imread(fileNames{1}); Note the use of curly braces in each instance.
Same here.
Yep I've had the same problem today. 
Thanks a lot for taking the time to look at it. I see now how the aircraft could have a restoring moment causing the pitch to oscillate. I'm new to simulink so another set of eyes makes me feel a lot better
/r/matlab is the wrong sub for this. There's a /r/latex sub that would be better suited. However, I would recommend this example using tikz http://www.texample.net/tikz/examples/simple-flow-chart/ or an overleaf example https://www.overleaf.com/latex/examples/tikz-flowchart-of-an-epidemiology-study/hdpqksvwkqdm#.WuibeZ-YXRY
You're welcome.
Sure. That will be about $500/hr, plus 1.5x rate if I go over 10 hrs/day, and there's no guarantee of completion on time. Minimum fee of $10,000.
**Dijkstra's algorithm** Dijkstra's algorithm is an algorithm for finding the shortest paths between nodes in a graph, which may represent, for example, road networks. It was conceived by computer scientist Edsger W. Dijkstra in 1956 and published three years later. The algorithm exists in many variants; Dijkstra's original variant found the shortest path between two nodes, but a more common variant fixes a single node as the "source" node and finds shortest paths from the source to all other nodes in the graph, producing a shortest-path tree. For a given source node in the graph, the algorithm finds the shortest path between that node and every other. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Cool ok that all makes sense, and no fortunately A doesn't change in anyway throughout the process. Thank you very much for the help!
Thanks.
Im not familiar enough with GPU coding to really say, though if I had to guess: in general, GPU code requires problems that are "embarrassingly parallel" (and yes, that is actually what they are called). This means that you can repeat the same task over and over and over again and spread it out among a bunch of individual cuda cores. When you add in sparsity things become not so uniform, so accomplishing this would s(seemingly) be harder. Also, just to clarify: *some* sparse matrix operations are supported, but not all of them. For this problem (i.e., `C = A \ B`) - `B` can be sparse but `A` cant (which is almost equivalent to saying it can do standard matrix multiplication with sparse arrays but it cant invert them).
Got it, thanks. That makes sense! 
 [https://downforeveryoneorjustme.com/](https://downforeveryoneorjustme.com/)
Just solve the Traveling Salesman Problem. NBD. Look into linear optimization problems as well. 
Are you allowed to backtrack? A naive solution would be, at each point to select the furthest remaining valid point, and construct the path that way. If this is the solution a more robust method decided on, would that amount of zig zagging be acceptable, or do you want a path that seems reasonable despite its length?
Thanks for the reply. I wont be able to do backtracking, the path is (hopefully) to be used to plot the path for soldering a circuit. So once a point has been passed/soldered there is no need to return.
8! is "only" 40,320 possibilities, so you could just do a brute force search of all of them. besides that, with most optimization (minimization or maximization) functions a decision is typically made based on the "fitness" of the solution, which in this case is total distance for the candidate path. if you find an algorithm you like somewhere that minimizes, just introduce a *-1 factor to turn it into a maximization algorithm.
`doc fit`
Nice, yeah lots of gems like this in [that book](https://www.reddit.com/r/matlab/comments/8f2bg1/pycharmlike_style_guide_enforcement_for_matlab/dy024lj/), happy to share. There's a PDF version on FileExchange, but I sprung for the paperback. Private pastebin, tho. ;[
But doesn't the traveling salesman problem calculate the direct routes instead of being constrained by road directions which in my case are only moving laterally or vertically? Could I create nodes at intersections so that the program can only create paths within the grid? (For context the grid as of right not is only 3x3 designating 12 roads) 
It's an interesting idea, are the current circuit design programs inadequate for your goals? Some of them have auto routing.
I dont remember exactly what this technique is called, but it should work pretty well. It goes something like this: 1\) compute the travel times for each individual road segment 2\) start at the destination point, and "take" every route leaving it and record how long it takes. 3\) everytime you reach a branching point \(e.g., an intersection where there is a new road you can take\) record the lowest time out of every path attempted that lead you there. The idea is to backtrack the route from where you want to end up, and to only keep track of the shortest time from any given point to the destination. If you "update" a intersection with a lower time \(better route\), you need to adjust the times of everything that spawns directly from that intersection. 4\) keep going until you have the lowest time at every branching point / every intersection. 5\) Go to your starting point, and everytime you reach a branching point / intersection, choose the branch that had the lowest recorded time from the backtracking computation. This should give the route which, at every point, has the lowest possible time to get to the destination, which is \(pretty much by definition\) the "best" one.
Be carful with the brute force method! The method my partner and I created for ours could calculate 10 cities. But the issue with this was that it created 32 gb of data. It could have been the fact that we were converting distances from actual latitude and longitude coordinates from the haversine function but still 32 gigs is 32 gigs. Good luck and have fun!
If you can make the graph acyclic, you can flip all of the distances/edge weights to negative. Then find the shortest path. Otherwise the best you can do is exponential time, and the brute force solution is factorial. But with only 8 nodes/vertices/coordinate, that's not too bad. The brute force method is to generate the list of all hamiltonian paths (basically depth-first search looking for paths that touch every node). Then pick the longest one.
First of all, if the shortest path is the minimization of function *f(x)*, the longest is the maximization of (the same) function *-f(x)*; and vice-versa. Furthermore, I have seen plenty Matlab related solutions of TSP with Genetica Algorithms. You could try and build your own problem through Matlab GA toolbox (recommended) or you could try and find an implemented minimization and convert it to maximization.
Many route finding algorithms exist - Dijkstra for simplicity - A* for performance
That's Impressive! Thanks for the heads up, will do
I have had a look around (maybe not well enough) and not had too much luck yet, but the aim of our challenge is to minimise the maximum heat in the board
Select any loop and keep going in circles
I'll preface this with, I've only done a little PCB design for a few months in college for a club I was in, so i'm not an expert, and it's been a few days since I've done this. What I was told was a good practice by the EE majors then was to deliberately use a thick trace or leave large blocks of copper on the PCB where we thought hot parts to be. Specifically, a lot of electronics will already have large heat sinks that ate connected to their grounding lead, so that they can connect to the large amount of copper that people usually leave as their ground on the board. This may or may not help given your specific situation, and if it sounds a little helpful, I would probably have to do a similar amount od kresearch as you in order to refresh myself. 
Thanks for the help, the paths can cross
Thanks a lot for the offer man but it's cool. I'm also ME but this project we've picked up is pretty much EE as well. We've already done testing for an initial soldering path, now we're trying to create a paths that are faster, or lower peak temperature, only problem for me is it means coming back to matlab which I haven't used for a little while. 
Fair enough. Thicker traces should, in theory, mean both lower resistance and higher heat capacity, so it might still be worth considering in addition to what you're trying. For what you're trying to do it might be worth looking into path finding algorithms (like A* as an example (I have not checked if that one would be easy to adapt for this purpose or not)) and make it easy to mess with the "cost" part of the equation, until it looks like you're creating the types of paths that you're looking for. 
or just delete previous iterations that are shorter to save memory. do checks every x intervals to save data
This worked for me: https://ww2.mathworks.cn/matlabcentral/answers/102220-how-do-i-place-errorbars-on-my-grouped-bar-graph-using-function-errorbar-in-matlab (Towards the end of the first answer)
Thank you, this works. Now ill just figure out why it does!
What have you done to debug the problem? Have you tried feeding test inputs to your equations to see if they're giving proper output? 
One note, you can include code when putting a blank line before and after and then indenting each line with four spaces FS=44100; %set sampling rate t=[0:(4*FS)-1]./FS; % 4s long time line So, from the picture and your title, it looks like you want to add two different sinusoids of different frequencies and different amplitudes. You set up your `t` and `FS` in a proper way, so that should be good. Where I think you might be getting lost is your understanding of sinusoids and amplitudes and frequencies. It looks like you're establishing A1 and f1 for one sinusoid, and then A2 and f2 for a second sinusoid. You then create the first sinusoid but you're not creating the second sinusoid. You are also not adding the sinusoids together. It looks like you're trying to choose your amplitudes and frequencies from the plot you're trying to recreate but there seems to be some misunderstanding there too. A1 is about the same as the max value, which could make sense, but A2 is zero, which won't be a sinusoid but rather just a flat line at 0. The plot starts near 1.0525, but I don't know why you chose that as the period for f1. Your logic for f2 appears correct, as it appears you're calculating the period from two points where it plot appears to start repeating and then calculating the frequency from that. Hopefully you can make your own corrections from that feedback. Regarding the frequency domain, have you learned about the Fourier transform? Are you expected to already know about those in your class? As far as what it's called when you add two signals (or two sinusoids), I am not aware of any special terms beyond just saying "the sum of two sinusoids". Amplitude modulation is when have a constant frequency but you change (i.e. modulate) the amplitude over time to encode information. Frequency modulation is when you change the frequency over time to encode information. That's super simplified, but I think going any deeper might not be helpful for you right now. Without knowing more, I'm not sure what else to explain. You may benefit from watching [3blue1brown's video on the Fourier Transform](http://www.3blue1brown.com/videos/2018/1/26/but-what-is-the-fourier-transform-a-visual-introduction) to help wrap you mind around combining signals of different frequencies and how that can be represented in the frequency domain.
Thanks your advice really helped out in the end &amp; I got it to work.
I tried with cell array and indexing but it would mean i would have to do everything manually and that would just take to long 
Will look into it, thanks! 
I am not the one who downvoted you, but I think I can guess why someone did. You say you want to compare to audio signals and are asking for advice on how to proceed. But obviously there's a bajillion ways that two different sound signals could differ from each other. You're going to need a much clearer idea of what kind of comparison you want to do, i.e., what kind of question you're trying to answer about the signals. I can recommend this book: https://www.amazon.com/Music-Data-Analysis-Foundations-Applications/dp/1498719562. There, or perhaps elsewhere, you should be able to find helpful perspectives and ideas.
Do you know the [gramm](https://github.com/piermorel/gramm) toolbox? Try it out and never worry about that again \(and yes, it will also compute the errobars from the raw values using whatever technique you specify\). It's like R's ggplot2 but for Matlab.
While its certainly true that brute force solutions will quickly become untenable, with only 10 possible destinations you *should* be able to save the result for *every* possible path with about 36 MB of data. There are 10 factorial paths --&gt; ~3.6 million. You can record the path by bit-encoding the first 10 bits in a uint16 value, and record the total distance with a double, meaning 10 bits of information is required per path --&gt; ~36 million bits --&gt; ~36 MB.
What code? Why does it have to be simultaneous? Can it be sequential instead?
yeah, we really need more information. Compare how? 
Is it possible to put this into the code? I've got a code but it will take too much memory to run.
I've got the same problem, is it possible to put something in the code to save space?
I understand. It's my fault for not explaining more. Thank you for the book. What I was trying to say was two notes have different frequencies. So to compare them I thought the best way will be to take their Fourier transformation and find out which frequencies produce a strong magnitude. The problem I was trying to say was I did not find a suitable block to isolate the frequency plot. When I asked alternatives it was referring to that. 
Musical notes. I thought the best way to find out which is which is by comparing the frequencies present in them. Which is by taking the signal's Fourier transformation. So that's where my problem was. In finding a way to separate only the frequency spectrum of the signals.
Nvm i changed it to be sequential, it was easier,:D
What are you trying to do ? You can always input the matrices inside a code but what do you mean with simultaneous ?
Happy to help.
So the problem isn't MATLAB- I ran your code and the answer `fsolve` comes up with makes all of your equations equal to zero (just feed `A` back into `homework` and see what happens). So, the problem has to be in your equation definition. However, I can't help you with that. 
I think I see what the problem is, because I couldn't find it at first either. Set a breakpoint in your script, then run it. After this the debug section on the editor toolstrip should show up and you'll see the function call stack. Also if the workspace has disappeared, [reset the layout](https://www.mathworks.com/matlabcentral/answers/307167-how-do-i-reset-the-layout-of-matlab) because sometimes that can be a real pain. 
Also useful: dbstop for breakpoints on error conditions. E.g. dbstop if error dbclear if error
Ohh. God damn. If I literally took an extra second to read the first sentence of the documentation, I would have realized that. But many thanks dude! 
 assignin('workspace','variable',g) variable cannot be vector because **assignin()** don't support subscript as variable(k). 
Why would you assign them one at a time? Assign the entire vector after the loop is complete and all values are in place. [It most certainly supports that](https://www.mathworks.com/help/matlab/ref/assignin.html#d119e48306).
Not trying to be rude, but the error message seems pretty self-explanatory, no? `Xss` has 9 columns, and `x` has 8 columns. So you're trying to say "put these 8 variables in these 9 slots" and MATLAB is saying "I can't" because, really how would it know what you want it to do. If `x` is always going to be difference sizes, you might be interested in using [cell arrays](https://www.mathworks.com/help/matlab/cell-arrays.html). 
Like I said in the title, complete beginner here. Was given this template by my professor and had to sub my own information in, so I don't really know how to fix it. 
How is Xss defined?
I am now trying to use xlswrite('file.xlsx',g) It seems to work but new value of g replaces older value. Any idea on how to wirte next value in next cell of xls file?
In fact, did you try something as simple as clearing Xss? It may already have been previously defined and is the wrong size for your script. 
Use the [`xlRange`](https://www.mathworks.com/help/matlab/ref/xlswrite.html#btmdr27-1-xlRange) parameter to select the range of cells to write to, as in the [documentation](https://www.mathworks.com/help/matlab/ref/xlswrite.html).
Have it your way I guess, but this is not a hard problem to solve. `g` will be the same size as `g1` and `g2`. It's inside the loop and can also be indexed by the iteration counter, and can still be compared against `gopt`.
I’m not familiar with that algorithm, but for a given speed across all distances, it’s just the minimum over the set of all possible road distance x speed because that equals time. So if you already know the path with the shortest distance, and there is no constraint on maximum speed, then speed is irrelevant. The answer is just the one with the shortest distance. If you still want to do this as an optimization problem with speed constraints (min and max), then fmincon is your go to. In contrast, if you want to create a pseudo agent that learns this, value iteration thru dynamic programming would do the trick (I think). 
Djikstra's is guaranteed to find the known path but it might be too slow if your grid is large. Look into the A* algorithm, its a faster variant of A*. You'll also have to choose an appropriate heuristic based on how the cars can move. If you want a simple implementation then octile would be a good start, it includes 45° diagonal movement. If you can move in any direction then you'd need Theta* to find the exact shortest path.
Or even better, `strcmp`. 
As a rule, you shouldn't use `=` to compare strings, but in your case it should work. But remember, when checking for equality you need to use `==` since `=` is for assignment. But you should use `strcmp` to compare strings. 
 strcmp(metal,'aluminum'); ? Also, should I put the temperature comparison and the metal comparison in the same line? 
We have some rules on asking for homework help. Specifically, you have to help us help you. You aren't providing the dataset that your homework is supplying, so how are we supposed to see what's wrong? On top of that, it seems like the instructions are pretty clear. Are you new to programming? If so I can understand this being a challenge for you. But since you have access to MATLAB, read on the documentation for how the `textread` function works, and see if you can get it to work for the data set you are provided https://www.mathworks.com/help/matlab/ref/textread.html
Typing 'help textread' in the console will tell you more about the function. Though depending on the format of the file, there are a whole bunch of ways to import data into matlab. Like dlmread, readtable, xlsread etc. Just depends on the formatting of the data you want to bring in. Do some reading. Keep trying stuff. Read the error messages and google what they mean. You'll get it eventually. 
The only thing that is being manipulated for each road is the speed. Im keeping distance constant. There is multiple roads so the program will then have to identify all the possible routes that can be taken to get from a set point a to a set point b. And then add up all the times of each of the roads for each route. And then finally the program will identify the route with the lowest time. 
As you said, I indexed all variables and everyting seems to work ( checked it in debugging) but at the end of function execution everything is deleted. I guess all these things work in normal matlab function and not in Matlab-Function block in simulink. By the way Thankyou so much
Please see [our rules for submitting homework](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/). You haven't given us near enough information to help you
Sorry about that just updated the information.
So, what have you tried so far?
I am not even sure where to start. I have very little knowledge with matlab because my professor was not helpful.
You can also add "keyboard" to your code to force the debugger prompt
I am new to programming. This is a stat class and we haven’t gone over any matlab coding in class. This is all we get. I’ve tried for hours to try to get it work but I keep getting all sorts of errors. I’ve tried the matlab examples to try to guide me, but they haven’t helped. The dataset it available through the link listed on the page. 
Can't blame you if you are new to programming and MATLAB. Trying to use textread as a first course with using MATLAB can be challenging because it requires you understand how... 1. File opening/writing works 2. Conversion Specifiers work 3. Delimiters work I'll write up some code for you, and you can take a look at it and ask me some questions if you like, give me some time. 
google is your lord and savior , use it well and you will flourish
Yup. A* algorithm is an algorithm like any other. Totally implementable without built-in toolboxes
So, doing a simple 2x2 might give you an example: Nodes = zeros(2,2); w = -2; x = 1; y = 3; z = 9; Nodes(1,1) = w; Nodes(1,2) = x; Nodes(2,1) = y; Nodes(2,2) = z; Is that what you had in mind? 
FYI, you can’t actually copy that link from mobile (never knew that before now) so you may want to make it a hyperlink for a better shot of getting help. 
Your pastebin link doesn't work. 
See [our rules for submitting homework](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/). 
Ohh haha sorry, I'll try to fix that
[https://pastebin.com/NHrnY31n](https://pastebin.com/NHrnY31n)
Do you only care about the path with the lowest traveltime? If so, this should use effectively 0 memory. I havent actually tested it to do the traveling salesman problem, but i think it should work as is. function \[order, time\] = foo\(n,N\) &amp;#37;&amp;#37; this is a function that, based on positive integer \`n\`, determines which route is the next in the list of possible paths to travel between \`N\` different destinations. It should work so that: &amp;#37; 1\) it doesnt require generating the full list indexes of all possible paths \( \(or, in general, of any paths other than one one associated with index \`n\`\) \(i.e., dont use \`nchoosek\` or similiar before you start and then take a row from there\) &amp;#37; 2\) it doesnt repeat previously attempted paths. Each new path should be unique &amp;#37; 3\) it should return \[order\] which describes the order cities were visited in \(e.g., \[1 5 4 7 6 2 3\] would be an example if you had 7 cities\) &amp;#37; 4\) it should return \[time\], which is how long that path took order = cell\(1,N\); \[order{:}\] = ind2sub\(\[N:\-1:1\], n\); order = cat\(2,order{:}\); for nn = \[1:N\] vals = \[1:N\]; vals\(order\(1:nn\-1\)\) = \[\]; order\(nn\) = vals\(C\(nn\)\); end time = getTravelTimeFunc\(order\); end &amp;#37; &amp;#37; &amp;#37; &amp;#37; &amp;#37; MAIN SCRIPT &amp;#37; &amp;#37; &amp;#37; &amp;#37; &amp;#37; minTime = Inf; numCities = N; for nn=1:factorial\(numCities\) \[orderCur, timeCur\] = foo\(n\); if timeCur \&lt; minTime minTime = timeCur; bestPath = orderCur; end end 
So I just tried your sample code and it works. I'm not sure what you're hoping to do different. Sample code: A = magic(5); max(A(:)) % this shows the max is 25 untitled(A) % this returns 24 
I was gonna write some code, but actually it's easier to just use 'readtable' my_data = readtable('DarlingtoniaData2.txt'); 
If you have "Node" class you can create a cell-array to store a node in each element of the 3x3 matrix. Otherwise, it will depend in what context you are defining 'nodes.'
Change: `E = zeros(1,2);` to `E = cell(1,2);` `C = zeros(1,2);` to `C = cell(1,2);` `E(k) = &lt;...&gt;` to `E{k} = &lt;...&gt;` `C(k) = &lt;...&gt;` to `C{k} = &lt;...&gt;` each char vector counts as a different value when indexing stuff, and numeric arrays dont really work with different data types. Also, FYI, in matlab `strings` are defined as `"..."` whereas `chars` are defined `'...'`. Calling a char vector a string is the most intuitive way to describe it, but can lead to some confusion since, by Matlab's definition, they arent actually strings.
&gt; Also, I believe using '==' to compare strings in a condition produces an error ('==' was suggested elsewhere). I would only use 'strcmp' to compare strings. You *can* use `==`, but you need to call it like so if (numel(str1) == numel(str2) &amp;&amp; all(str1 == str2)) The first condition makes sure they are the same number of characters (otherwise `str1 == str2` throws an error), and the 2nd condition compares all the characters and returns true only if they all match. all-in-all though it is just easier to use `strcmp`... 
omg it works, i just had to change all consequent (blabla) to {blabla}. you're my favorite person ever thank you so much &lt;3
&gt; If I literally took an extra second to read the first sentence of the documentation, I would have realized that. That would solve 90% of the problems here lol. Don't feel bad - it keeps us employed :P
Make a matrix. If you have N points/nodes, then you make it N by N. The value in a particular location in the matrix tells the algorithm what the "cost" is to traverse between the two nodes. This implies that your matrix should be symmetric about the main diagonal, but this isn't necessary. For example, it might be impossible to get from the ground to the top of a 10 story building directly, but it is absolutely possible to get to the ground from the top of a 10 story building (not fun, though). If you are using a 3x3 grid of nodes, you have 9 nodes. Make a 9x9 matrix: `myMap = Inf*ones(9x9);`. Using the `Inf*ones(&lt;yourSize&gt;)` sets the default value for all connections to be infinite. Then you go through and update the passable distances. If nodes 1 and 2 connection with a "cost" of 1, for example, then `myMap(1,2) = 1;` and also `myMap(2,1) = 1;`. Do this for all of the connections. Then you run Dijkstra's algorithm, or A*, or whatever. 
Format your code to be code. Also, the code looks more like instructions than code.
Just ran your code, and it works properly for me. Maybe the issue is how you call it? What does A look like? I feel a duty to point you to a more “Matlab” implementation, which would replace your code with two lines: vals=sort(A(:)); f=vals(end-1); One thing to keep in mind is that if A’s highest value occurs twice, f will equal that. Using the unique function in my code would help. Good luck!
Could you post a screenshot of a frame with the particles? That would be very helpful!
In general, cells are a really, really nice thing in Matlab.
I don't have access to the footage of particle right now but [here](https://imgur.com/a/vU6NLyF) is a jet of fuel that I need to do the same thing to has the same problem. Sorry about the bad resolution. It was taken at 1 million fps so the quality had to be reduced. When I apply graythresh and use im2bw some of the fainter parts of the jet become white but in the video you can clearly see the jet is continuous. The same thing happens with the particles. The surrounding pixels sometimes make the pixels appear white in the frame.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/Tpt8wEx.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
Yes, I'm using that :) I used this link also, but my problem that I don't understand the working of it. When I ran the code I got this answer: s = 58×1 struct array with fields: Area And I would like to know the areas of the bricks one by one to make the threshold. I thought that probably, I didn't use the code properly, or something is missing because how is it possible to determine the bricks one by one if it's not in the regionprops. Maybe with some for cycle? I don't know is it clear, because I tried to explain it right, and sorry for the mistakes! :)
Happy to hear it!
for k = 1 : numel(s) this_s = s(k); % do something with this_s here end
[From the link above](https://www.mathworks.com/help/images/ref/regionprops.html#buoixjn-1-stats): &gt; Measurement values, returned as an array of structs or a table. The number of structs in the array, or the number of rows in the table, corresponds to the number of objects in BW, CC.NumObjects, or max(L(:)). The fields of each struct, or the variables in each row, denote the properties calculated for each region, as specified by properties. Also [from that same documentation](https://www.mathworks.com/help/images/ref/regionprops.html#buoixjn-1-properties), the output of property `Area` is described as: &gt; Actual number of pixels in the region, returned as a scalar. (This value might differ slightly from the value returned by bwarea, which weights different patterns of pixels differently.) Do you not know how to [access data in a structure array](https://www.mathworks.com/help/matlab/matlab_prog/access-data-in-a-structure-array.html?searchHighlight=structure%20array&amp;s_tid=doc_srchtitle)? MATLAB's documentation is excellent, and you can usually find what you're looking for within.
This isn't the type of assignment that would typically be given as a first step to leaning Matlab. You were probably given other practice codes, examples, or previous assignments to help build up your skills. Or you were expected to have some level of Matlab/programming experience from a previous class. If the former, try to build off those ideas to start and then come back when you get stuck. However, if you're in the latter situation where the prof assumes that you took a course that would give you Matlab proficiency and you actually didn't, then you should talk to him/her about it first. 
Glad I've contribute to the worldwide r/matlab economy!
This is definitely the issue. I'm pretty new to MATLAB (someone else wrote me most of my code) and not a super math inclined person. I didn't even realize this was actually part of the equation. Would you be able to point me in the direction of learning what this means/how to calculate the normalized x and y?
When doing fits, MATLAB likes to "center and scale." (You'll see them doing this a lot with `polyfit` as well). What that means is they find the mean and standard deviation of `x` (and `y` and all other input variables), and then say: `x_scaled = (x - mean_x)/std_x`. You can read up polynomial fitting to see why this helps (basically, if you have 1 variable that goes from 0 to 1,000,000 and another which goes from 0 to 0.001 then the large disparity of values will make your fit worse). So, you'll want to center and scale all of your data before plugging it into the fit as well. 
Thanks! Going to give this a try when I'm working tomorrow!
If T(n) is the time for the nth frame: title(sprintf(‘The time is %.2f’, T(n))) This will update the title with the time.
This. Create a graph and then use the shortestpath or distance functions with Method='positive' (the Dijkstra algorithm). 
Try: + decrementing the end condition by your error tolerance. + Compare the end condition to the actual computed values. + Instantiate the values before entering the while loop. + Increment n within the while loop.
I would recommend learning about debugging in Matlab, particularly on how to use breakpoints to help you understand how the program flows and to make it easier to identify errors. Provided tutorial by MathWorks: [Debug a MATLAB Program](https://www.mathworks.com/help/matlab/matlab_prog/debugging-process-and-features.html). Onto the subject at hand. A while loop checks if the provided condition (n &lt;= 1:exp(1) in your case) is true or false and enters the loop only if the statement is true. You'll likely notice that the while loop does not increment the counter variable 'n'. You'll need to increment that variable yourself inside the while loop. Finally, I'm not sure what your condition 'n &lt;= 1:exp(1)' means here. You stated that you wanted to continue looping until your answer is within 0.01 of exp(1). Why not just say something like 'abs(euler1 - euler) &lt;= 0.01'? Of course this doesn't work for checking if euler2 and euler3 are correct and you'll need to add more code to make it work. Let me know if I read your goal correctly so we can fine tune this.
I don't know how to decrement end condition. Is that another statement I add at the end of the loop? I only started using MATLAB very recently, so I'm not sure what these terms mean lol
How could I say ‘Fao=con.Fao’ where ‘Fao=‘ is text and con.Fao is a variable pulled from a data structure while using the text command? 
I’ll try this thank you. 
(exp(1) - 0.01) would be decrementing the end condition. It just lowers the limit for when the loop should end. Declare your euler1,2,3 variables to zero before entering the while loop, and within the loop add your formulas to the existing variables. since it's a while loop, you'll need to change what n is with n = n + 1; I would recommend comparing your end condition (exp(1)-0.01) with one or more of the formulas, *not n*. you might want to do separate while loops for each formula to get a different kind of comparison.
I feel like I'm missing something fundamental, I barely understood what you said lol. Okay, can you explain to me what condition I should declare for while loops? If I were to use your proposed condition, would I have to make multiple while loops for the other functions?
I made a slight error the previous condition I provided and corrected it. For the first case you want to keep iterating if the error between exp(1) and euler1 is greater than 0.01. The loop will stop when the error is less than or equal to 0.01. In math terms, abs(euler1 - euler) &gt; 0.01. You can do something similar for the other two cases. If what I understand your goal correctly, making three while loops would be easiest. The only thing that's confusing me a bit is your self-check output is a lot more precise than I expected. Can you describe what you mean by "sum all this to within 0.01 of exp(1)" in more detail?
My goal is to approximate exp(1) given the series euler1, euler2, and euler3, as well as determining how many iterations it takes to get that value within 0.01 of the real exp(1). So according to my HW prompt, it'll take about between 10,000 to 19,999 iterations of n for euler1 to reach 2.718181832191 (where exp(1) is 2.718281828459). I need to know the exact number of iterations it takes for euler1 to keep summing and reach 2.718181832191.
Looking at the precision of the provided output it seems that they wanted you to get within 0.01% of exp(1) or, in other words, within 0.0001. Let's focus on the first method for now as it's the easiest to implement. What you showed me is okay, but you're still not updating the counter variable n within the loop. To do this simply add the following statement n = n + 1; If you have time, I would recommend debugging using breakpoints to see what happens when the computer runs this line. Counters are fundamental in programming algorithms and understanding it might help for future Matlab assignments.
I've tried, and: while abs(euler1 - euler) &gt; 0.01 the loop still goes on infinitely. when i have: while abs(euler1 - euler) &lt;= 0.01 n = n+1 doesnt increment the loop, euler1 is still 0 and all that changes is the final value of n in the workspace. I've tried adding it before, within, and after the first while loop. It doesn't change anything :/
Can you post the full code for when you tried abs(euler1 - euler) &gt; 0.01 and had the n = n + 1 statement inside the while loop? 
clear; clc; n = 1; euler1 = 0; euler = exp(1); while abs(euler1 - euler) &gt; 0.01 n=n+1; euler1 = (1+1/n)^n; end fprintf('My e version (1+1/n)^n: %0.12f, MATLAB e: %0.12f\n n is %0.0f\n', euler1, euler, n); --------- My e version (1+1/n)^n: 2.708281999071, MATLAB e: 2.718281828459 n is 135 &gt;&gt; It kinda worked so I don't know what I did wrong the first time, I think I forgot to clear and clf or something. I'm getting close, but the desired value is supposed to be 2.718181832191
Yeah, as I mentioned it seems they wanted it to be within 0.01% or 0.0001 within exp(1) so just change the condition to 1e-4 (this is the same as saying 10^(-4))
OKAY so I tried so all I had to do was change 0.01 to 0.0001 and I get the desired result for euler1. However, euler2 and euler3 isn't behaving the same as euler1, and the loop goes on infinitely.
Except for their gargantuan memory requirements. Always allocate!
Also turn on stop on error, in the same menu, rather than the default quit on error. Gives you the workspace variables at the time of error, super useful debug feature.
['Fao = ' num2str(con.Fao)] Also check the sprintf command.
its worth noting that in my above comment `str1` and `str2` should really be `str1(:)` and `str2(:)`. Alternately, if you wanted it to only match for char arrays that had the exact same size (instead of "only" requiring identical data values) you could do: if numel(size(str1)) == numel(size(str2)) &amp;&amp; all(size(str1) == size(str2)) &amp;&amp; all(str1 == str2)
My guess is one of your w values is 0. Put a breakpoint and step through the code to see if any of the division operations has a zero in the denominator.
This was what we were missing! It seems to work how I was expecting now that I scaled the x and y values, Thanks!!
Use indexing. see especially what happends at the example [here](https://www.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html) when they do A(2:4,1:2)
You should post links as hyperlinks and not code. Also when you write code, leave two blank lines after the last text and put 4 spaces before the start of each line for it to be formatted properly. I am on mobile and can't see anything. Take a look at markdown formatting of reddit. Besides that check your divisor variables to see if they contain any zeros. 
I think that the problem comes from this line: numeratorTotal = numeratorTotal^2; According to your formula, you're supposed to square the sum, not square it after adding something. I think the square should be *outside* the for loop. I think what you want is: (a + b + c ... + abc)^2 What you're doing is: (((a + b)^2 + c) ^2) ... + abc )^2
You want to read up on [matrix indexing](https://www.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html)
You can use subscripts or linear indices. Either one.
I’d recommend looking at imageDatastore, it makes most workflows that involve a directory of images much cleaner: https://www.mathworks.com/help/matlab/ref/matlab.io.datastore.imagedatastore.html
I realize the ambiguity, and I'm not exactly sure how to address it, but I will try to provide some context to help narrow down possible solutions. I want to use the track curve to visualize things like velocity, x/y acceleration, DRS activation, etc. as a function of position (or possibly time) on the track. Another use would be to use an input circuit into the lap time simulator. I'm having trouble turning input data into a complex curve. As a professional motorsports enginner (very cool btw) I assume you have different ways of defining track curves, but I am at a loss of the way to turn input pictures or radii/length into a useable curve. I thought about defining the track using a parametrized function, but don't really have any experience using input data of my type to create this. I am really open to suggestion, I assume you might have better methods/ideas for this, and would definitely be open to that. Thanks for your advice, and if you don't mind my asking, who do your work for/and what specifically do you do. Sounds like a great gig!
Can that image processing be done inside of MATLAB? Or is that done externally? By create a curve, I meant a parametrized function that represents that circuit.
It's typically limited to however much memory your computer has, but you can use tall arrays to work around physical memory limits. According to [the documentation](https://www.mathworks.com/help/matlab/matlab_prog/memory-allocation.html#brh72ex-14), Matlab will use up to 8 bytes per element in a matrix, so if you had, say, a 1024x768x500 matrix, then you'd be looking at (1024x786x500x8) = about 3GB of memory. If your computer only has 4GB of memory, you might get an error that you don't have sufficient memory, in which case again you would need to take a look at tall arrays. 
Happy Cake Day! ^You ^can ^participate ^in ^r/HappyCakeDayClub ^for ^24 ^hours!
Bad bot
Thank you, shtpst, for voting on HappyCakeDayBot1. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
&gt; I meant a parametrized function that represents that circuit. Why?! Unless the goal of the exercise is *to parametrize the circuit curve* -- which is quite the feat in its own right -- you'll be wasting a lot of precious time on something that (as others pointed out) can be done in many different (and easier) ways. Here's what I would have done in this situation: * Import the image of the track into a vector drawing program (InkScape is FOSS) * Use the Line Drawing Tool to **manually** recreate the track by adding a vertex at the apex of every curve. Zoom in to the image so that you add the vertex as close to the center line of the track as possible. * You should now have the track traced out in straight lines. Use the Vertex/Edge Edit Tool to reposition wayward vertices, then select all of the vertices and turn all edges into curves, and make all corners smooth. (All vector drawing programs have this functionality) * Again, using the Vertex/Edge Edit Tool, zoom in and correct minor mistakes by dragging the curves to correct shapes so that they fit the tack image tightly. * Finally, export your drawing in SVG format. The benefit here is that SVG contains the **cartesian coordinates** of every vertex, as well as the parameters for the Bezier curves. This is what you're after. Once you have those numbers, there are a number of different ways that can be brought in to MATLAB...you're going to have to decide which is best. 
You need to assign that matrix somewhere, as in `myMatrix = &lt;your wall of text&gt;`. Then, to get the first three columns, you need to specify *from where* you are taking the columns. You can't just enter `=(:, 1:3)`, you need to do `myMatrix(:, 1:3)`. Or, if you just put in `[ &lt;your wall of text&gt;]`, Matlab should return `ans = &lt;wall of text&gt;`, and then you could get the first three columns as `ans(:, 1:3)`. BEWARE, though, because the output of *that* will also be referred to as `ans` - it will *overwrite* the previous `ans` and the 5x25 matrix stored within it. 
When assigning a sub-matrix, you have to indicate the variable from which you want pull the sub-matrix: Assuming you have a 5×25 matrix called "mat": sub = mat(:,1:3); Will create the 5×3 matrix "sub" which will be the first three columns of "mat". 
You're getting an indexing error because you're using the *values* of time as indices. The values of time step in increments of 0.01, so you're asking Matlab to return the 0.01th value of your matrix. You want to *index* the time entries. You can just flip the entire vector: `v = fliplr(x)`.
well.. i have thought i could have a symbolic till the end, and then add the numbers, solving it. My problem is understand how to make it solve that easy system
&gt; I'm having trouble turning input data into a complex curve. What "input data" do you have, specifically? If you have x/y points that define the trajectory, that's all you need and is often how this sort of stuff is done. It's used as discrete data points rather than trying to turn it into a continuous function. Trying to turn a track map into a continuous function is not going to happen - short of a spline, which is doable. If all you have is that PDF image, there are a few things you could do: * Ask SAE if they have raw x/y data available they can share * Ask other teams if they've digitized this already and would be willing to share * As /u/arristotelis mentions, do some sort of image processing to come up with points * Like /u/asking_science mentions, you could do something like manually pick out points and create a spline or something out of it to then create x/y data * If you have specific corner radii and distances etc, you could construct a rough x/y trace from that To the last point, you could honestly even use something that's not even the exact 2018 layout, just representative of it, for learning some stuff with setup etc. &gt; Another use would be to use an input circuit into the lap time simulator. In this case you would of course need to know what the expected input format is of the simulation tool you're using. But if it's an off-the-shelf product I imagine it's just all x/y data. &gt; if you don't mind my asking, who do your work for/and what specifically do you do Vehicle dynamics engineer for a NASCAR Cup team - simulation development, data analysis, tires and performance recommendations, things like that. Been doing this sort of thing for going on a decade.
&gt; No sleep 'till Brooklyn! Now there's a name I haven't heard in a long time
Why would I need to create a matrix with with inf*ones? 
I don't have the mapping tool or antenna toolbox to use that function. Is there any way around this?
I don't have the mapping tool or antenna toolbox to use that function. Is there any way around this?
graph is in base MATLAB, you don’t need any toolboxes.
It’s in MATLAB R2015b and later versions. Is your version older than that?
No it’s in core MATLAB. Type “help graph” and see if it comes up.
"To use 'distance', at least one of the following products must be licensed, installed, and enabled: Antenna Toolbox Mapping Toolbox" 
"To use 'distance', at least one of the following products must be licensed, installed, and enabled: Antenna Toolbox Mapping Toolbox" 
Try “help graph/distance” instead
can i graph these myMap values?
Using 'Distance' was my my problem. I defined all my nodes using: myMap = Inf*ones(9,9); myMap(1,2)=.5 %S1 myMap(1,4)=1 %Ave 1 myMap(2,3)=1 %S2 myMap(2,5)=1 %Ave 3 myMap(3,6)=1 %Ave 5 myMap(4,5)=1 %S3 myMap(4,7)=1 %Ave 2 myMap(5,6)=1 %S4 myMap(5,8)=1 %Ave 4 myMap(6,9)=1 %Ave 6 myMap(7,8)=1 %S5 myMap(8,9)=1 %S6 Is there a way to graph this? The matrix isn't symmetric when I tried doing graph(myMap). Is there any way for me graph it so I can find distances between distances between nodes? Such as graphing each node with a relationship weight between each other and assigning a variable name to each since the relationship between each node is either a avenue or a street?
Pretty sure the student version is a full install. Graph was introduced in 15b.
That's funny, just earlier today as I was driving and taking a pretty different curve around a weird corner compared to the car in front of me, I was thinking that there must be some serious simulations done in e.g. Formula 1. It sounds like a super interesting job.
How do i create the matrix for my map? Would it create it so the nodes are positioned according to where they are located on the 3x3 road map?
I mean, it's just a matrix. You fill it out how you see fit. Personally, I would do it in as organized manner as possible. I would do something like `reshape([1:9],3,3)`. Enter that command and you'll see Matlab's preferred numbering scheme. I would use that numbering scheme as my map, but again it's *totally arbitrary* - I would use that scheme because Matlab has a particular preference for it, not because I do. The distance matrix just relates any point to any other point. You could create the map the Matlab did, as `myMap = [1,4,7; 2,5,8; 3,6,9]`, or you could do with any arbitrary ordering, as in `myMap = [3,9,2; 1,4,7; 8,5,6]`. It's up to you to keep the numbering straight. Then, with the distance matrix, you just update the paths. Again, for example, if you wanted top left to connect to top center with a cost of 1.5, you could do `mapDistances(1,4) = 1.5;` and `mapDistances(4,1) = 1.5` for the Matlab-based numbering scheme, or you could do `mapDistances(3,9) = 1.5` and `mapDistances(9,3) = 1.5` for the arbitrary example I gave. Both mean the same thing - top left to top center, but it just depends on how you choose to number the map. Hope this helps!
Can you explain your question a bit better?
I guess you could use table2cell and cellstr, can you show us your code?
Matlab doesn't understand the association you have between `y` and `Y`. With the code you posted, you use `Y` without defining it. You need to write the function body in terms of the arguments. The way the ODE solvers work, the second argument will be what you have defined as "Y". Matlab doesn't care if you call it `Y` or `y`, it's putting values that correspond to what you're calling "Y" in the second argument. You can call it `Bob` for all Matlab cares, it will still really be "Y". 
Can you look under mask? 
Thank you. I shall look into it!
Yes, but that’s not what I’m looking for. If I understand correctly, looking under the mask just shows you the blocks that make up the bigger block... err mask. I’m looking to somehow get these values in the drop down list: https://i.imgur.com/XsVRt9j.png
This can be solved in 3 lines: You could do a simple connected component labeling (bwlabel, region props or other). And then measure the sides and the area of each shape. Finally, count the ones that are rectangular i.e. area = width * height f = rgb2gray(imread('auK6FT8.png')) &gt; 128; regions = regionprops(f,'Area','BoundingBox'); sum(cellfun(@(x)prod(x(3:4)),{regions.BoundingBox}) == [regions.Area]) 
What have you tried? Do you understand the math behind method of moments? Can you work it out by hand with a given set of moments? Are you looking for matlab to solve the moments? The general idea is for a distribution with N free parameters, you need to solve the first N moments of the distribution and set them equal to the sample’s moments. Then, you need to solve for those parameters. The list goes on!
Arrays can be any size. This is a 6D array: A = zeros(10,10,10,10,10,10);
If you want just those 3 blocks, the best way is to hard code the coordinates of the blocks you need to process. If you need a solution that generalizes to all the blocks in the image, you can either do it manually: A = zeros(512,512); BLOCK_SIZE = 32; for blockX = 1:BLOCK_SIZE:size(A,1)-1 for blockY = 1:BLOCK_SIZE:size(A,2)-1 rangeX = blockX:min(blockX+BLOCK_SIZE-1,size(A,1)); rangeY = blockY:min(blockX+BLOCK_SIZE-1,size(A,2)); block = A(rangeX,rangeY,:); % apply processing on block... end end Or you can use MATLAB's blockproc function which does exactly the same as above without the burden of manipulating indexes yourself.
Wow, it seems to work well, thank you! The only thing I don't really understand here is the cellfun function, could you ELI5 if you don't mind?
I've added a little smoothing step that will make the processing robust to noise and texture. You can then extract statistics on the bricks. Median is probably a good place to start: brick = imread ('brickwall.jpg'); brick = imfilter(brick,ones(15)/15^2); I = rgb2gray(brick); bw = I &lt; graythresh(I) * 255; % I don't have imbinarize segmented = imopen(bw, strel ('disk', 3)); s = regionprops(segmented,'Area') mean([s.Area]) median([s.Area]) std([s.Area])
That doesn't flip it about the y-axis, that flips it about the x-axis. To be fair, `fliplr(x)` doesn't necessarily flip it about the y-axis either; that would only work if your time values were symmetric about the y-axis. They were, though, which is why I suggested it. 
Awesome! Did you use an equation? Would you mind sharing that?
 axis square
I'm not sure why /u/shtpst's reply refers to the `perms` function (enumerating arrangements of elements of a set), since it is not relevant to the problem you are trying to solve (enumerating elements of a cartesian product). You have a few options: [combvec](https://www.mathworks.com/help/nnet/ref/combvec.html) if you have the NN toolbox, [allcomb](https://www.mathworks.com/matlabcentral/fileexchange/10064-allcomb-varargin-) from the CFE if you don't, or you can use [ndgrid](https://www.mathworks.com/help/matlab/ref/ndgrid.html) directly. 
+ shtpst You are correct! I fixed it as you suggested.
Probably r=N*sin(10*theta)
cellfun applies a custom logic to each element of the cell array, and returns one value per array element. In this case, I use it simply to extract the product of the last to components of the BoundingBox (width and height). The reason for all this is that regionprops returns a strange structure-array type that isn't easy to manipulate.
You should use [int](https://www.mathworks.com/help/symbolic/int.html) instead.
Like this? FT = @(w)(2./(w.^2+1)) .* exp(i.*w.*t); answer = 1/(2*pi) * int(FT,t,-2,2) I get an output: answer =(5734161139222659*sin(2*w))/(9007199254740992*w*(w^2 + 1)) 
That's because you integrated over `t`. You want to integrate over frequency to get a function of time, right?
Yes, but when I integrate over frequency, I get this output: answer = (5734161139222659*int((2*exp(t*w*1i))/(w^2 + 1), w, -2, 2))/36028797018963968 All I changed was int(FT, w, -2, 2) 
Glad to hear it.
Yep!
Thanks! The equation is in the thread. 
https://www.mathworks.com/help/simulink/slref/pidcontroller.html
you're code isn't formatted very nicely, but what you have looks to be a good start. if you are interested in "vectorizing" your code to make it run faster and easier to read, you can do the "for j = 1:m ..." loop in one line of code by doing vector operations (b-c, .^2, and sum()).
I'd appreciate any constructive help.....
thanks @MattdoesMath. But, i have gone through this help section. i just need a document or thesis which uses PID to control the braking power of the train. So please suggest some documents and .mdl file is appreciated. 
But is each eigenvalue not associated with a different mode?
I think what you are looking for is something like this: % you have to find the good idx, and replace gcb with the subsystem path, it may be more convenient mask = Simulink.Mask.get(gcb); mask.Parameters(idx).TypeOptions I think it's only working if you can look under the mask (or at least it does not work with some blocks from the original SL library for some reason), so it may be why there was the other question about it.
Overkill but related to your problem when there are several fish, check out this article. http://drexel.edu/now/archive/2017/May/3D-Organelles-Nature/
With the power of math! I was taught that you should never fit exponential functions to data, but fit simple (e.g. linear) functions to the log of the data, and then use the power of math(!) to find the corresponding function. For you're application i'de suggest just take the log of the X and Y data, and plot those using plot i.s.o. loglog, and go through your regular fitting routine. alternatively you could plot everything using plot, and subsequently change the axes to log-scale using ha = axes ; set(axes,'XScale','log','YScale','log')
Ahh I understand now. I am able to look under the mask, so I’ll definitely try this out later. I appreciate you taking the time to reply! I’ll update the post once I try it out, thanks again.
Thanks a lot! I have tried fitting the log of the data and it gave me what I wanted
Can you plot the concentration profile over time to check that results make intuitive sense?
You must pass in a struct in which the `WindowStyle` field has value `normal`, as opposed to the default of `modal`: answer = inputdlg('Question','Title',1,{'default text'},struct('WindowStyle','normal')); This might not be available on such an old version of Matlab (are you sure you meant 2006?). Please references the documentation for inputdlg via `doc inputdlg`--you can find answers to questions like these fairly easily just by reading the documentation.
The n-Body problem is when you’re in a relationship with one or more other people who are all simultaneously on the academic job market.
Unfortunately yes :-/ 
Have you looked at the [documentation for PCA](https://www.mathworks.com/help/stats/pca.html#bttvehk-2)? One of the examples is (unsurprisingly) how to recover (missing) data using the PCA coefficients and means. dataOrig = bsxfun(@plus,data*PCAcoeffs',PCAmeans);
I skimmed it. The closest that I found there was related to recovering missing data was using ALS. However, my objective is to use excel directly.
Run this code to determine how many elements you can have of each data type: userview = memory; max_array_bytes = userview.MaxPossibleArrayBytes; fprintf('Data type Array size\n_________ __________\nlogical %d\n[u]int8 %d\n[u]int16 %d\n[u]int32 %d\n[u]int64 %d\nsingle %d\ndouble %d\n',max_array_bytes./[8 8 16 32 64 16 32]);
Run this code to determine how many elements you can have of each data type: userview = memory; max_array_bytes = userview.MaxPossibleArrayBytes; fprintf('Data type Array size\n_________ __________\nlogical %d\n[u]int8 %d\n[u]int16 %d\n[u]int32 %d\n[u]int64 %d\nsingle %d\ndouble %d\n',max_array_bytes./[8 8 16 32 64 16 32]);
Additionally, size(data)=[1 12] size(PCACoeffs)=[12 9] size(PCACenters)=[1 12] So if I try to do data*PCACoeffs' ".+" PCAMeans It will give me naturally a dimensions error on the multiplication, if, on the other hand, I try data*PCACoeffs + PCAMeans I get another dimensions error this on the sum since I get [1 12]*[12 9] = [1 9] size(PCAMeans) = [1 12] Am I missing something?
&gt;size\(data\)=\[1 12\] This shouldnt be the case. You \*should\* have N data points with 9 components per point. If you dont you need to figure out where your 9 data components went. size\( data \) = \[N x 9\] size\( data \* PCAcoeffs \) = {\[N x 9\]}\*{\[9 x 12\]} = \[N x 12\] = size of original data with full 12 components size\( PCAmeans \) = \[1 x 12\] size\( bsxfun\( @plus, {\[N x 12\]}, {\[1 x 12\]} \) \) = \[N x 12\] \(PCAmeans gets replicated over the 1st dimension. This is a more efficient way to implement the \`repmat\` operation the documentation uses\).
Command history is saved in `fullfile(prefdir,'History.xml')` (`fullfile(prefdir,'history.m')` pre-R2014a). The [`HxSearch` fex](https://www.mathworks.com/matlabcentral/fileexchange/50551-hxsearch) shows an example of parsing this file for commands. Since you're just looking for the most recent one, I imagine you'd be able to parse it more simply. I don't have Matlab in front of me to check, but indications in the fex point to these command history files being updated with information from the current session.
That animation doesn't look right to me. There are some extreme jumps that just seem off. Have you done any kinds of correctness checks on the simulation?
I'm pretty sure it's a perspective effect \(the motion towards/away from the camera is minimized\) as I first wrote the main body of the code for the 2\-D case and in that case there was no sharp jumps. I did everything with vector equations so moving from 2 element vectors to 3 element vectors shouldn't have messed anything up.