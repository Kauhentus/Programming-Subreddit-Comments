I installed mex compiler add-on and when I try to compile the .c file I get this error: *Error using mex C:\Users\Jack\Desktop\PhD\04_courses\JPEG\JPEG_fcts\jpeg_read.c:52:20: fatal error: jerror.h: No such file or directory compilation terminated.* why? It's an include of jerror.h in the .c file which I suppose it can't find it to compile... 
Have a look [here](https://github.com/MKLab-ITI/image-forensics/tree/master/matlab_toolbox/Util/jpegtbx_1.4). There is a compiled version, you can probably use. the jerror.h seems to come from the libjpeg, but I'm not going to guide you through using that with Matlab to compile yourself. An advise for future questions. Try some stuff yourself and don't ask for every step. You're not going to break stuff and it's not exactly rocket science you're doing. I googled that link on my phone in the kitchen while cooking. I guess you can do it too. If you don't show enough effort to solve your problems yourself, you're not going to get lots of help. I just stayed with you, because I usually finish, once I started to help somebody. Just google the error messages you get or some Keywords of what you're trying to accomplish.
Read the documentation for the functions in question. 
Well you might have to need to use mathematics... If your exponential function has two parameters, it's likely that the same exponential function needs only one parameter once you constraint it to go trough a given point. So you should solve for that and give the new equation to the fitting tool.
The voronoi generates a series of polygons based you your input points. Use these to segment the image. 
In general Simulink will handle timing aspects of your simulation if possible. Look into the integrator block to generate a T from your dT.
This is the right way to do this. If you are fitting a model and you know that the model should obey certain constraints, the best solution is to construct a model that can only express feasible results. 
This example is doing exactly what you are asking about: https://www.mathworks.com/help/images/ref/superpixels.html
Assuming you are on Windows. Uninstall every last thing that says "nVidia" from your machine. Drivers, toolkits, SDKs, PhysX, etc. Then look on the system and user paths. Clean up any turds left behind there from nvidia. Look also for environment variables that may have been left around pointing somewhere. Download the latest driver. Not the CUDA toolkit, just the driver. Install using a custom install and install graphics driver only, no extra baggage. Verify the driver is working using the nvidia-smi utility from command line. It's in in c:\program files\nvidia corporation\nvsmi. This should report that the card is present and working. Start MATLAB. Run "gpuDevice". If it's going to need to recompile it's going to do it here. It should take minutes at most. 
Why does no one ever explicitly teach about scripts, especially in intros like this one. It takes 2secs and is pretty damn important. 
Sorry, I don't know how to get the code to show correctly.
I think because in some courses most of computations can be performed through the Command Window rather than a script. I prepared this manual for my students in the course of Automatic Control, and scripting was not needed at all. You may visit the following e-books page which includes more items about MATLAB: https://www.mechtutor.com/e-publications/
[removed]
This is a good opportunity to learn how to use the debugger. Put a breakpoint somewhere, maybe where you assign to x(i), and see what's happening. Also by the way i = j = sqrt(-1).
Your x matrix should be the same size as your b matrix. Gauss Seidel is used to solve [A][x]=[b], so they need to be dimensionally consistent. This won't only do 10 iterations, it will run until x_iter is less than your limit. You should rewrite the top section before the loop, that is where the problem lies. Hint, you need to read the documentation for the size function. size(x,10) will return the length of x in dimension 10.
You want it to go through the point (x_0, y_0)? Solve your expression for a (or b) with x = x_0 and y = y_0. Then a = f(b) (or b = f(a)). Make sense?
Did you check the [preferences](https://www.mathworks.com/help/matlab/matlab_prog/specifying-output-preferences-for-publishing.html) to make sure you hadn't inadvertently set a strange size or checked to create thumbnail? You can edit the default *user* settings, but not the *factory* default. You say you're using the default, but which? It's entirely possible to have made a wild click and saved the user default.
did you change the size of the figure? pretty sure when you publish to a PDF, it will use some of the properties of the figure to determine the size within the page. if you changed the size of the figure, then ran the code for publishing, it may pull the size properties on the resized one. 
You could do something like: Y=zeros(m,n); Y(a:b,c)=X(a+k:b+k,c); Where a,b,c,k,m,n are constants (or variables).
you can probably do this in one like this: y = x(k:end,:); then maybe flipud (flip up-down) or fliplr (flip left-right) if you need to change the order.
The explicit section of this Crank-Nicolson formula I can do, as it is a fairly straightforward matter of reiterating a solution. However, the implicit part (on the far right) is murdering me. I get that I need to solve a tridiagonal system, but how to set that up and iterate it just seems beyond me. I've gone through every google result from 1-200 but I just cannot make the necessary synaptic leaps. Help!
Rewrite the CN scheme so that all of the unknown quantities (n+1 superscripts) are on the LHS and all the other known quantities are on the RHS. This will then allow you to write it as a tridiagonal matrix equation. The coefficient matrix is constant so can be precalculated and inverted before looping through time so a simple matrix multiplication is required to calculate the updated values of u. Although I’ve often found that using the Thomas algorithm at each time step is faster for large systems since calculating the inverse matrix can take a while. 
Ir have a look at FINDPEAKS for a little more fine tuning possibilities 
That sounds right, but maybe you need to fiddle with `findpeaks` parameters? Have you tried plotting `c` and the supposed peaks? Do they line up where you think they should be?
Better do plot(c); hold on Before
For the first part of your question, you can do the plotting inside of your function, at each time step, and keep checking for for your stopping condition. For example, your function would read as function dydt=myfun(t,y) If y&lt;.5 % or what ever your threshold is Figure(1) Hold on Plot(t,y) end dydt=-y; % or what ever your func is end Keep in mind that continuously plotting will increase your solution time. As for your second question, I don't know if you can dynamically change the step time. One (kind of sloppy) solution would be to store the value of your function in a global variable. For example: function dydt=myfun(t,y) global yList yList=[yList,y]; dydt=-y; % or what ever your func is end Then, once you have run ode45, find the yList point just before it crossed the threshold that you are interested in, and use that as the starting point to run ode45 again, this time with smaller time steps. You can then repeat this process, where you keep decreasing the timesteps until you get close enough to your target.
Sorry for the formatting. Wrote this on my phone
is it possible to something like (values are arbitrary) h = [1:0.01:0.01] % time step while for i = n n = length(h) t= [0:h(i):100] [t, y] = ode45(@function, t,initial) if y(1,2;1) ~= 0 % those are first two components of the solution which I am plotting plot() elseif i = n+1 end end end for instance does this code make any sense or nonsensical? so that if the condition is not met, than the value for the step is modified? i quickly typed it out, but is it something that is possible or not? 
After this you probably want to do a diff() and look for +1 transitions.
Try having findpeaks display its output on your graph. findpeaks(c,’annotate’,’extents’) With no output assigned to the function Are your data noisy? Findpeaks with no additional inputs will look for **any** local maxima and call them peaks. Try adding a minimum peak prominence x = findpeaks(c,‘minpeakprominence’,[number])
I'm not 100% sure what you're trying to do here. The syntax is off a bit. Why are you checking whether or not the first components of y are equal to 0? Quick note: you can access the first 2 cols in the first row using y(1:2,1). The first components will be the initial conditions, so you set them before running ode45. Instead, you should find the final y values before you cross the threshold. For example, if your starting pt is y&gt;0, and your threshold is y=0, then you can find the point right before it crosses 0 using: Index=find(y&lt;0,1,'first'); % the first point after crossing 0. index=index-1; % the first point before crossing 0 As for the plot statement, you would want to do something like plot(t(y&gt;0),y(y&gt;0)) to only plot the points before y crosses the threshold. Note that I wrote this as if y(t) is a scalar function of t. If it is a vector func of t, then your thresholding will become a bit more complicated, but it's still doable.
the conditions to break plotting are arbitrary, just for example, what I am actually trying to do in the code is so that the difference between two lines is zero, hence the code stops, (perhaps should use &gt;=0 come to think about it) there are two curves, one is a circle another is whatever the function gives me, if it crosses the circle boundary, then the plotting function should cease. the problem with your method, it has to be done manually each time for a new set of initial conditions, and considering I am analyzing a set of curves, all of which with different initial conditions, this is a lot of extra work which i want to automatize. how would it look like if it is a vector function of t, which it is?
Mine can easily be automated. Each time you find the index (see earlier reply) you then set the initial conditions of the next iteration to be y0=y(index,:) and rerun ode45 (within a for/while loop). As for the vector thresholding, assuming that you just have a set of points for each curve (rather than an explicit function), you can iterate along each curve, where at each iteration you have a pair of points on each curve that make up a line segment on each curve. You can then check to see if the two line segments intersect one another. Check out this stack overflow for determining if two segments intersect: https://stackoverflow.com/questions/563198/whats-the-most-efficent-way-to-calculate-where-two-line-segments-intersect If you do have an explicit formula for one of the lines, then you can likely simplify this intersection process. 
Untested code, but maybe something like `y(k+1:end) = x` 
Thanks for pointing me to implicit expansion. It is Indeed. A couple of articles about it here: [MATLAB arithmetic expands in R2016b](https://blogs.mathworks.com/loren/2016/10/24/matlab-arithmetic-expands-in-r2016b/) [More thoughts about implicit expansion] (https://blogs.mathworks.com/loren/2016/11/10/more_thoughts_about_implicit_expansion/) 
Yep. 
The reason you are getting that error is because you 'Participant' variable is a character. It should be a number. Somewhere along the line these characters are being converted to a number, I am guessing it is being done with the str2double, which returns NaN for non-numeric characters. Try changing P_Name to something like the following: P_Name = [1 2 3 4]'; That will give you a different error message. The second error message occurs because the value paired with 'WithinModel' is meant to be a string of some sort, and you are passing it a table. If I run the command without that last name-value pair it executes just fine.
Yeah you can make shortcuts. There's a shortcuts bar up by the directory navigation bar. Just click the little "add" button. 
Thank you!!
+ Wow, thanks! Changing P_Name to numbers fixed it! I'm a bit confused about the first point though, as an example in the [fitrm Matlab documentation](https://www.mathworks.com/help/stats/fitrm.html#bt9i229) shows a character string for that column. The result of running ranova(rm) on this looks sensible too. Thanks again!
&gt; T = table(X,Y,'VariableNames',{'Var1','Var2'}) Thanks! But how to print/show the table?? 
If you execute that command without a semicolon the table will display right in the command window.
Why are you using cell arrays for numeric data? Also doc fprintf
Hey thanks.. so basically I have a 'system', and it gives me spike train output, when I give some input. But if input is zero it might not give output! ( great advice I think that's how i need to go!) So I'm thinking.. I have some S vectors ( spike trains) I need to plot, but now some of them might be zero as input might be zero( input is some logical combinations of binary digits). How do I achieve this? Edit: Yea so I did plot only which I needed for, which was like 64 plots,and I realized that I could probably show for which values my spike train occurs rather than plotting all these. ( all plots look same...) Anyways thanks for the 'inception' :)
Why are you using symbolic functions if you want to solve your ODE numerically? Use functions like ODE45
%%Hope this helps Outputs=zeros(256,1);%outputs a series of true or false (1 or 0) so you could see if the condition was met for i=1:256 if (condition is met) figure(i) Filename=['My file ',num2str(i)];% this might be screwed up. Change 'My file' to whatever plot(X,Y) title(Filename); saveas(gcf,Filename,'fig')% you could add as many output image types as you want. saveas(gcf,Filename,'jpeg') Outputs(i)=1;% did this If statement activate? close all end end
Maybe take a look at `surfc`? It creates a combined surface and contour plot.
Firstly thanks for this excellent answer! I'm going to spend some time working through this tomorrow, I'm not 100% sure this will solve all my problems as I'm fairly certain there is parameters depending on sampletime, but it's certainly a step in the right direction. Thanks. 
&gt; surfc i get the error &gt;The surface Z must contain more than one row or column.
The image processing toolbox has [`regionprops`](https://www.mathworks.com/help/images/ref/regionprops.html), which will compute properties of black and white images like the matrix you have. One of those properties is `'Perimeter'`, which you should be able to use to get what you want.
Good catch! I guess I fired this one off half-cocked.
if you are looking only at the relationships between the rows, something like this should work: leftPart = matrix(:,1:end-1); rightPart = matrix(:,2:end); equalCheck = leftPart == rightPart; countAlternates = sum(~equalCheck(:)) 
Let's say M is your current grayscale frame with a static background. Sign(dM)*255 is your movement 
https://www.mathworks.com/discovery/matlab-gpu.html [There are a collection of built-in functions that can accept `gpuArray`'s as input arguments by default.](https://www.mathworks.com/help/distcomp/run-built-in-functions-on-a-gpu.html)
https://www.mathworks.com/support/learn-with-matlab-tutorials.html
Do you get your problem solved? I also have same issues. If you do, could you please share how to build model with existing data? 
Awesome, tried the matrix one and it worked perfectly. A follow up question, if I were to have the same matrix, but this time with some elements being 2s, and I only want to count the borders of 1s and 0s? so the matrix could look like: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 1 2 2 1 0 0 0 0 ; 0 0 0 0 1 1 2 2 2 1 1 0 0 0 ; 0 0 0 0 0 0 1 2 1 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 1 0 0 0 0 0 ]
 &gt; and am trying to make a 3x3 matrix ... Assuming that you meant 3x27 P=[ 1 2 3]; F=[ 4 5 6]; V=[ 7 8 9]; P=combvec(a,b,c); https://it.mathworks.com/help/nnet/ref/combvec.html
Perhaps I should elaborate more into what I'm doing and I'll throw this in the edit as well. So I'm testing an aliasing system with an input signal of f(t)=cos(2π*135000*t). My frequency range is [100kHZ,140kHz] and I have a sampling frequency of 1200kHz. So basically I have a downsampling factor of 30. So I should be able to plot the original and then the downsampled signal and they should relatively look the same. Perhaps plotting at every 30th point is not the answer I need.
Yes... [cell arrays](https://www.mathworks.com/help/matlab/matlab_prog/create-a-cell-array.html) can hold whatever datatype you'd like.
Some component of your model is producing complex numbers. You'll need to debug your model. I'm not sure what else you can expect from the internet -- you've posted an error, but have given nobody any way of helping you.
Solution: I will probably use a microphone that will react to my alarm instead. :) 
BigStructure.LittleStructure = LittleStructure
So obviously the original code won’t work for your follow-up question. I have thought up of two ways, one involves writing a couple lines of logic statements which I believe can achieve the solution you want without the use of any loops. The second is a simpler solution which involves converting your matrix into a string and just using count = sum([strfind(matrixString,’01’) strfind(matrixString,’10’)]);
BigStructure.LittleStructure = LittleStructure;
Checkout imresize
Your code at the end that checks for an invalid car will return Invalid if the car is electric and fuelorcharge is &gt; 100 but no check for &lt;0 or for non-electric cars. You're also using different conditions in your invalid check (second if statement) than in your valid check (first if statement where you create the structure if the car passes) which is bound to create inconsistencies. You also use the same limits for electric and non-electric cars in terms of the max/min allowable values of fuelorcharge in the first block of code that creates the car structure although not sure if that's whats causing you to fail. I would spend some time thinking more about your validation checks. Also it may be better to structure your code such that the validation check is performed once (instead of twice like you have) and if it passes the structure is created and if not the string is returned. Something like: if (condition) then [structure] else 'Invalid', instead of: if (condition) then [structure]. If (different conditions) then 'Invalid'
It’s a way of storing structures in a structure, which can be treated as arrays. Sorry. 
One case falls through. I painstakingly typed your code into MATLAB and ran it with the random tests suggested about 30 times until I finally saw it. N-tuple check your second if statement's condition very carefully to ensure that it meets the validity criteria.
You spoiled all the fun! This is a homework question. ;[
It looks like an iterative algorithm. You can't parallelize an iterative algorithm.
lmaaooo this sub
Thank you for your response, I really appreciate it. I think I am more on the right track now? peoplearray = randperm(10); %Array of each person's preference of seat StateOfSeat = [0,0,0,0,0,0,0,0,0,0]; % State of seat; 0 is empty, 1 is occupied; 2 is occupied and in preferred seat RandSeat; % is a placeholder value for the choice of a random seat Spoopy; for i= 1:10 StateofSeat[i] =0 end for j =1:10 if (StateofSeat[peoplearray(j)] == 0 ) StateofSeat[peoplearray(j)] = 2; else RandSeat = randi([1,10],1); spoopy = false; %Defining boolean variable while (spoopy == false) if (StateofSeat(RandSeat) == 0) %Checking to see if seat is empty StateofSeat(RandSeat) = 1; spoopy = true; end RandSeat= randi([1,10],1); end end end
doc linspace doc plot doc sin doc asin
Spikes = a*(sin(2*pi*f*(t + phi)) &gt;= thres) Where a is the desired amplitude of the spikes f is their frequency t is your time phi is your offset controlling the occurrence of the spikes thres is the threshold controlling the width of the spikes (e. g. Use 1 for single-sample spikes) 
So for instance I would like: p1f1v1 to be the first comb, Then p1f1v2, p1f1v3 P1,f2,v1 P1,f2,v2 etc etc I’m not sure on the possibilities of MatLab but my preference would be a matrix filled with vectors. Or anything that can present the values to make it look nice. 
Closer yet. I would write out pseudo-code first. You need to define variables to store results, then loop through 10,000 trials. then loop through each trial. then define variables to store single trial results, and define variables for that trial. such as how to assign preferences for that trial, who gets on the in what order for that that trial.... 
There was a bug like this that could be worked around with software rendering. It will be slower for 3D visualizations and stuff, but it will work
Check out which java it’s pulling and your graphics setup. 
&gt; If the x,y coordinates are in a 2 column list and integer values, how do I find the whole x,y values of the each point in the cluster. Can you explain what you mean by this? I took a look at the code, but as you said it does things in some unintuitive (for a MATLAB person) roundabout ways, so it's pretty hard to get an idea of what it's trying to do. If you could add some comments to the code about what the variables mean and what individual steps are trying to do, and then post that pastebin link, that'll make it easier to understand and make it more efficient. 
You're right, I just don't know how to explain it. It's a closed loop system, when I open the loop the error goes away. However it shouldn't produce any complex number. I debug the model but it doesn't help at all because it doesn't say where is the error.
It sounds like you might want to know the fractional mass density? Or, in other words, the exponential value that corresponds to total covered area as a function of farthest point from your central 'seed'? For example, a disk has fractional mass density of 2 since, as it expands outward, the area it covers is proportional to its radius squared. A classical DLA cluster (generated using a purely random walker, [here](https://imgur.com/ZB0gy) is one I made a while back) should have a fractional mass density of ~1.7. Also, as a side not, you can generate these much faster using Gauss-Seidel relaxation methods. Random walkers take forever (or they did when I was working with these sorts of models)
I more want to be able to quickly get the coordinates of the cluster (cluster being all the pixels that are contiguous with the seed point) surrounding the random seed (this is any randomly chosen point in the cluster) , this way I can move the whole cluster instead of just single particles. In this simulation there will be many clusters at once that i want to move and grow instead of the normal DLA programs where the growth occurs with no movement. I just used DLA as an example of the kind of branched assemblies that are going to be generated The paper I'm basing this simulation off of describes assembly occurring by a random walk process, so that's why I've been sticking with that method.
Matlab can essentially do whatever you can come up with. But I'll be honest, you're going to have a steep learning curve if you've never used Matlab. Do you have any coding experience in other languages? Matlab has a rich library of functions that can help you do what you desire. *After you do the tutorials in the sidebar to get started*, you should look at the following functions: * [plot3](https://www.mathworks.com/help/matlab/ref/plot3.html) * [scatter3](https://www.mathworks.com/help/matlab/ref/scatter3.html) * [griddata](https://www.mathworks.com/help/matlab/ref/griddata.html) 
Ah. Well, your sample image was binary (or very easily could be), so I would suggest using [bwconncomp](https://www.mathworks.com/help/images/ref/bwconncomp.html). The output from this can also easily be used to find centroids using the regionprops command as well (which wil likely come in handy if you have multiple clusters). 
try the [square](https://www.mathworks.com/help/signal/ref/square.html) function. Allows you to set frequency and duty. For generating spike trains of a given frequency and duty for a time vector T, the following code works great: pulse_train = square(2*pi*stim_freq,stim_duty); pulse_train(pulse_train &lt; 0) = 0; That second line is necessary to get a square wave with only positive peaks (square outputs a square wave with values ranging from +/-1).
I'll look into using bwconncomp, looks much easier to operate than the mess I made lol
Use the [gramm](https://github.com/piermorel/gramm) toolbox (https://mathworks.com/matlabcentral/fileexchange/54465)). It's exactly designed for this kind of thing while keeping everything in 2D which makes it way more legible: 3D plots are not easy to "get" once they are printed and can't be rotated anymore. You won't have the 2-parameter fit though (rather 6 1-parameter fits)... but the plotting issue is different from the fitting one.
My level is too low, and the Department knows how to solve it.
I don't understand what you mean.
if the formula itself is not of importance, then there is no reason to use excel (black box approach). what you would do is this: assume data is a matrix that contains your data. the columns are temperature, humidity and conductivity. the rows are each measurement triplet. now assume q is a matrix containing the points you want to predict. column 1 is the temperature, column 2 is the humidity. obviously you would like to predict the conductivity for each temperature and humidity pair. you would do the following: for index = 1:size(q,1) interpolation(index,1) = griddata(data(:,1),data(:,2),data(:,3),q(index,1),q(index,2)); end the output of this code is going to be the column vector called interpolation. this column vector is as long as your q matrix, and contains the predicted value for all of your q pairs. i will explain the code now. you should know what a for loop does, if not, just look it up, it just repeats whatever code is in the loop while changing a certain variable every step. in our case, the variable it changes is "index". i tell the loop to vary "index" from 1 to whatever the size is of your data matrix, in the first dimension. the first dimension is the "vertical" dimension. so the index will change from 1 to how many pairs you have in your q matrix. now, interpolation(index,1) means that the loop will add the output of griddata to a column vector called interpolation. remember index changes from 1 to the length of q, so we get a column vector that is exactly as long as q. the griddata command is self explanatory. data(:,1) means that i want to feed in the first column of the matrix data. the : sign basically means "whatever", so (:,1) refers to the first column of the matrix, and whichever rows - so basically refers to the first column. same applies to data(:,2) and data(:,3). So now we fed in all of our data into griddata. we also want to feed in all of our q pairs. so with q(index,1), i refer to the index'th row in q, and the first column. if the index is 1, i will refer to q(1,1). on the second iteration of the loop, the index will be 2, so i refer to q(2,1) and so on until we've reached the end of q (because we told matlab to go that far when we wrote the previous line). this is very basic matlab. once you know for loops and how to refer to arrays efficiently, you can do anything with matlab, provided you know the right function. in this case it's very easy to find the right function, just by googling "interpolate 3D matlab" we already found this function. so matlab just takes data, runs it through a function, and then gives you the output. you can then use matlab to graph the data to. now... if the function itself is important to you, you need to use system identification theory. there is a toolbox called the system identification toolbox, it works quite well and even has a GUI i believe. but you'll have to figure out how to use that yourself, it's pretty easy
Thank you for answering. I was afraid I wouldn't be able to, would you be able to suggest a way in which I could speed up the computation of an iterative algorithm, through hardware or otherwise?
I think it sounds like if this suggestion works, then the formula itself wont be necessary! I'm definitely going to be looking into it now, as the column of predicted values for my q pairs seems to be exactly what I was trying to get out of excel in the end. Between the hours of videos I watched today and your explanation I think I should be able to figure this out! Thanks so much! 
Wow this looks great! 
also if you have 5000 entries in an excel file, maybe you could somehow import that data into a matrix using some magic command *wink*
What's your linux distro?
Call tech support
The error "Too many parameters" means you are passing too many parameters into some function you're running or evaluating. Without seeing your code, we can't tell which. You could at least post the line of code for which the error occurs. The error "Unbalanced/unexpected parentheses" means you've opened or closed too many parentheses. Something like: ydata = kw*(1 + S2*xdata)^2*exp((-S1*xdata)/(1 + S2*xdata))) You can set up [lsqnonlin](https://www.mathworks.com/help/optim/ug/lsqnonlin.html) to find a solution to vector equations of multiple variables for multiple parameters. For example, the Steinmetz equation: f = csvread('frequencyData.csv') B = csvread('fluxDensityData.csv') Pv = csvread('specificLossData.csv') P = @(k, alpha, beta) k*f^alpha*B^beta; params0 = [10, 1.3, 2]; params = lsqnonlin(P - Pv, params0); f, B, and Pv are data extracted from a datasheet, and P is an [anonymous function](https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html). If you post code, you can get more specific answers. Otherwise just make sure you count parentheses properly and pass your functions the right number of parameters.
I would probably cheat and use imresize on the vector to make it the same size. If this is homework then that should be marked incorrectly, but it's pretty easy and convenient. For example to get a nice gradual rainbow image: A = randn(5,1); figure, imagesc(A) B = imresize(A, [100 1]); figure, imagesc(B) 
I'm sorry I'm not sure how that would help. Wouldn't that cut off data on one or add data to the other?
It would interpolate the temperature vector to one which has the same size as the other vector. It is only useful if the points start and end at the same times. Also, it doesn't necessarily preserve the original values 
Then why should I use this if it doesn't preserve the values
&gt; I am trying to keep it broad and have already tried What didn't work with that method? We can be a lot more help if you help us with the specifics. Did you get an error? Also, `interp1` is already vectorized, you can hand in a whole vector you want interpolated to at once. 
I cannot pull up the code at the moment, but after running for roughly 500 iterations, the results become NaN. Note the VDC vector is roughly 2000+ and the ChartVal is only ~280. 
If you're getting NaN, most likely you are asking for interpolated values outside of the range of your input vectors. You haven't defined an extrapolation technique, so it will return NaNs. 
I requested linear in hopes that if the voltage (VDC) falls between two values on the ChartVal, a linear average will be taken by a value above and below that point. 
That's what it does. But if VDC is larger than the largest value in ChartVal or smaller than then smallest value in ChartVal, instead of interpolating, it needs to extrapolate. You haven't defined an extrapolation technique, so MATLAB simply returns NaN in that case. 
Check out the documentation for trapz. 
You want to integrate the area between the top curve and the bottom curve. [MATLAB Answers post with similar question and relevant functions.](https://www.mathworks.com/matlabcentral/answers/15550-how-to-create-a-matlab-program-computing-area-between-2-curves) The core function for this integration is [trapz](https://www.mathworks.com/help/matlab/ref/trapz.html), which computes the area under a curve (in your case, the curve would be `Y = top_data - bottom_data`. If you have no Matlab experience, please visit some tutorials in the sidebar. Generally, this sub will not act as a tutor to get you set up. Familiarize yourself with the syntax and workflow, then the implementation with your data and [trapz](https://www.mathworks.com/help/matlab/ref/trapz.html) should be relatively straightforward.
Do you know matrix notation for systems of equations?
I'm not sure. What's the documentation say on this topic? 
&gt; matrix notation for systems of equations Yes
&gt; Delay before displaying next image, in seconds, specified as the comma-separated pair consisting of 'DelayTime' and a scalar value in the range [0,655]. A value of 0 displays images as fast as your hardware allows. So I guess default is 2fps. But what I don't get is how running a saved gif, independent of whether you are running Matlab or, can vary in its duration
One of the most important things you can learn in school is self reliance and how to figure things out on your own. I know you’re new to Matlab but this is something that you can easily find on the internet. Here are some hints that might help you. You’re going to need the plot() function. Don’t mess with ezplot. If you were going to plot this function by hand, what would you do? Probably take a set of points and input them into the function and plot the results, right? Do the same thing in Matlab. Define a set of points using x=linspace(). Then just evaluate your function y at those points and plot(x,y). For example, if I needed to plot y=e^x, Id do x=linspace(0,10,10) y =exp(x) and then plot(x,y). 
thank you for this, it started me off on the right path. but I think my biggest struggle is trying to understand the second aspect of that problem: "t ≥ 0 along with the two lines defining the region |y| &lt; 0.1" would y still be my function ? and the to plot it would I need the abs() that is my biggest pit fall with this homework thank you for the help 
Deleted within 1 hour... That's depressing...
&gt;what I don't get is how running a saved gif, depending on what computer you are using, can vary in its duration This is the first time you mentioned that issue. Could it have anything to do with this: &gt;A value of 0 displays images as fast as your hardware allows.
I think you're trying to make the problem more complicated than it is. &gt;the two lines defining the region |y| &lt; 0.1 Forget about Matlab for a second. You know what part of the plot is inside the region where |y| &lt; 0.1, right? What is the boundary of this region? What equation(s) would you plot to show the boundary of the region? 
Looks like it's using some fancy rendering library on the Mac. No surprise, macs emphasize lots of flashy display features like that. If you want to create typesetting like that I think there's a way to have Matlab generate LaTeX. Really though, ascii printing is pretty much the norm for that sort of thing. 
One point of clarification. When you say 'preserve' the values. Do you mean that you actually want Nearest Neighbor interpolation where you want the intepolated value to be the value nearest a query point, or are you allowed to blend values (e.g. linear interpolation)?
I mean the nearest value neighbor not necessarily a whole linear approximate of the entire data set. Because the relationship is likely not linear as it is however I would like the interpolation to be it's two nearest neighbors and simply average them. 
tl;dr - The good news is it looks like you probably can make it parallel, the okay news is that I don't think you'll need to run it in parallel now, and the bad news is that I don't think your algorithm works. I could be wrong, though. The code I would use is at the bottom of this wall of text. Okay, I'm looking at your (original) code in more detail now, trying to find some way to give a suggestion, but I simply can't see what exactly it is that your code is supposed to do. I'll post it here in its entirety first, then break it down line-by-line. while (n&lt;=kt) &amp;&amp; (error_bound&gt;1e-9) residual=v; rphi=abs(theta'*residual); [val,index]=max(rphi); lambda=[lambda,theta(:,index)]; theta(:,index)=zeros(d,1); xt=pinv(lambda)*v; residual=v-lambda*xt; error_bound=norm(residual)/norm(v); non_z_locations(n)=index; n=n+1; end Okay, so it starts out as a `for` loop that will `break` if `error_bound &lt;= 1e-9`. That is, you could rewrite this as: for n = 1:kt &lt;do stuff&gt; if error_bound&lt;=1e-9 break; end end So first, that error check is where you have competing goals - you want to be able to run this loop in parallel, but that means you need to run *all* of the iterations at once. You also want to stop when your error is "small enough," presumably so you don't waste time performing unnecessary calculations. If you run the loop in parallel, you do *all* the iterations, including the ones beyond what you need. You can't run the loop in parallel *and* stop early. Now I'll go through the algorithm. Spoiler alert: I have no experience with your algorithm and haven't done any reading on it. This is just my reading of what's written. residual=v; This seems like an unnecessary assignment. I would use a temp variable if I needed to modify something, but you never modify `residual`, you just use it as a function input and then overwrite the value. The next four lines maybe give some hints where you could do some optimizing - rphi=abs(theta'*residual); [val,index]=max(rphi); lambda=[lambda,theta(:,index)]; theta(:,index)=zeros(d,1); In looking at this, it looks like you're creating a variable `rphi` as a function of `(theta, v)`, and you want to take the value of `theta` that gives you the peak value in `rphi` and slap that `theta` on the end of your `lambda` variable. You're doing this in a slow, looping method, though. You calculate `rphi` in every loop, then you find the max value in every loop, then you *dynamically* resize `lambda` in every loop, then you write zeros to the peak index in `theta` every loop. **The dynamic resizing of lambda is probably the biggest bottleneck in your loop.** Preallocating lambda would probably save you a ton of time. At a glance, it looked like the rest of your code was straightforward enough, in that it looks like you're "trying" the lambda values to generate some kind of an offset or similar, and then you check the relative size of the residual between the original signal and your signal after it's modified with the `lambda` values. **Here's the problem** - It doesn't look like you're actually *using* the `lambda` matrix. You do the following: xt=pinv(lambda)*v; residual=v-lambda*xt; Took me a few minutes to see the problem - you can rewrite this as: residual = v - lambda*pinv(lambda)*v; **A matrix times its inverse is the identity matrix.** You're using a pseudo inverse here, but you're basically going through all these loops to find some `lambda` values, and then you *throw those values away* and check basically if `v - Iv` is small enough. The end result here - your `error_bound` value, just seems to depend on Matlab's ability to calculate a good enough pseudo inverse. I'll take this moment to reiterate that I don't have any experience with your algorithm or signal reconstruction, etc. (which is kinda what it sounds like you're trying to do.) Regardless, it *looks* like your algorithm isn't actually doing anything. That said, here are a few pro tips I would use if I were you, and I wanted to speed this code up (I'm assuming you'll fix the residual calculations on your own.) 1. You don't ever modify `v`, so instead of looping across `rphi`, modifying `theta`, and building `lambda` one step at a time, **vectorize** your code by doing it all at the same time: [~, indices] = sort(abs(theta'*v), 'descend'); lambda = theta(:,indices); I'm assuming that, in your code, you set `theta(:, index)` to zeros because you don't want to use the index value again. The above two lines will sort what you're calling `rphi`, from biggest to smallest (with the 'descend' option in `sort()`). You don't actually care about `rphi`, you just want the *indices* so you can pick the `theta` values that correspond to the biggest values in `rphi`. The `sort()` function outputs `[B, I]`, where `B` is the sorted matrix (a sorted `rphi`, in this case), and where `I` are the index locations of the sorted values. Since you don't actually care about the sorted `rphi`, you can ignore that output by using the `~` value in the `sort()` output. Instead, keep just the indices and -boom- you get the *entire* `lambda` built in two steps. This eliminates the repeated `max` command and allocates `lambda` all in one step. Now you can use `lambda(:, 1:n)` anywhere that you *would* have called `lambda` earlier. Finally, I would rewrite your code as follows, keeping in mind that I don't think it actually does anything (that's for you to find/fix): [~, indices] = sort(abs(theta'*residual)); lambda = theta(:,indices); error_bound = nan(1,kt); normV = norm(v); for n = 1:kt xt = pinv(lambda(1:n))*v; residual = v - lambda(1:n)*xt; error_bound(n) = norm(residual)/normV; non_z_locations(n)=indices(n); % Optional break - remove this if you convert to parfor if error_bound(n) &lt;= 1e-9 break; end % end I used `normV = norm(v)` because, again, you don't ever change `v` in the loop, so there's no need to re-calculate the norm every time. I also changed it from a `while` loop to a `for` loop, because there's no `parwhile` lol. And again, you can't break if you use a `parfor` loop, you have to run all the iterations. But, here everything is preallocated, `lambda` is fully precalculated, and now `theta` isn't used at all, so you *should* be able to use this in a `parfor` loop now. I don't know if you have a big enough signal to see an advantage from using a `parfor` loop now though, using the sort + vectorized lambda. Hope this helps! And remember to resolve your `lambda * pinv(lambda) = I` problem. 
Here's a neat trick. Transform your points to planes in dual space. Compute the bounding polytope of these planes. Un-dual your planes. You will now have the inner Convex points. A similar technique is used in the Wulff construction for finding the interior Convex planes, for a nanoparticle morphology, but backwards. In this case, transform planes to points, compute external convex hull, then un-dual.
Hi Reddit! I converted the best MATLAB snippets on Stack Overflow Documentation to create this free MATLAB PDF book, any suggestions for improvements are appreciated as it will help me improve the PDF book; which will then benefit everyone :)
Saving
Hi, and thank you for the responses. I was using factory default, and no, the figure size was unchanged. It turns out some other code I was running changed my graphics root object's units to 'inches'. Somehow, the publish function is getting the image size in inches but assumes the values are pixels. Hence the 6x4 pixel images in my browser or PDF, but the figures that pop up as the publish function runs are the expected size, and the saved images are also the expected size. My code to plot figures was using figure(...,'units', 'normalized'), but the default plot(x,y) also gets scaled down. For anyone else experiencing this problem: - Check your [groot](https://www.mathworks.com/help/matlab/ref/groot.html) settings &gt;&gt; get(0) &gt;&gt; % or &gt;&gt; get(0, 'units') - If Units: 'inches' , then change it to 'pixels' &gt;&gt; set(0, 'units', 'pixels') Hope this helps. 
Check the documentation for "fit". 
I was able to run your code without any error, and I played with some of the parameters such as frequency and amplitude; I was able to add an amplitude taper to the function and animate it. Make sure that anything you are multiplying by the E-field with the cosine function is the same size as the array r in that line. What that line does is calculate E-field magnitude based on a phase which is determined by r, which is the distance of each coordinate from the origin. Also, consider disabling your zlim function, in case your alteration of the E-field function causes it to exceed the +/- 1 limit. The axes should autoscale so you can see what you have. You might also try increasing your increment in your for-loop vector to something like 5e-9, so that it runs a little faster and can be easily observed. I'll check back on this sometime tonight. If you have more trouble, post whatever it is you're trying to modify and I'll suggest what you can do to fix it.
So how exactly did you get the amplitude to taper? I tried this: E=(cos((w.*t) - (b.*r))); wave = E.*exp(a.*r); And it still doesn't seem to taper after removing the zlim. Thanks a lot for your help, I really appreciate it.
Try running that with "a" set to -2. I see a pretty nice taper using your air case for that. If you are trying the "Wood" case, I think your relative permativitty and permeability are probably off since they're the same as air. I don't really see what the function for "a" in that section should correspond to physically, but you're getting a very small value for everything in "a" from it - it might as well all just be 0, and exp(0) is of course 1, so that's why you don't see a taper. Also, you value for u0 (vaccum permeability) is incorrect- it should be much smaller than that, look it up. If you change it to the correct value, you will want to change the Y and Z bounds of your plot from -1 to 1 to something like -wav to wav instead; otherwise you will only see a small fraction of the wave. Recall that a wavelength is v/f, where v is velocity of propagation. Hope that helps. I'll check back one more time before I go to bed.
This looks awesome. I need to learn Furrier transforms and image processing . Thanks a lot! 
I think we'll need a better explanation about what you're hoping for, and maybe a simple example
I’m surprised to see you haven’t tried anything. % A is some matrix indices = repmat(1:1:size(A,2), size(A, 1), 1); product = A.*indices; There’s probably a much better way of doing it. 
Tic tells matlab where t=0, each time you use it. There might be a way to have more than one simultaneously, but to be honest I'm too lazy to read the documentation right now. Toc on the other hand just returns the number cushioning to the time passed since tic. you can store it in a variable just by booing the normal way to assign a variable. `Var_name = toc`
And if you do need relative time, subtracting the tocs could work, depending on exactly what you're measuring. 
that's also good to know, but the only issue I had was displaying the time after the results (because the results can range from 10 lines to 10^3+, so a lot of scrolling would have been necessary otherwise to fish them) which is solved by having them saved in variables. Thanks again :)
So the graph doesn't really play into this (nor, the fact that your multiplied two functions together)? You just want to know where the functions are zero? You want to use [logical indexing](https://blogs.mathworks.com/loren/2013/02/20/logical-indexing-multiple-conditions/). It's MATLAB's best feature (in my mind). Let's say you have your x's and y's and you want to get the ones where y is not zero, then you just say: x_not_zero = x(y ~= 0); y_not_zero = y(y ~= 0);
From a quick glance at your link: If you want to run MATLAB code, you have to do it on a computer connected to your raspberry pi. You can run standalone simulink code on the pi.
https://www.mathworks.com/help/matlab/ref/profile.html
Using the MATLAB and Simulink Support Packages for Raspberry Pi (there is one for MATLAB and another for Simulink) you can generate C code that is compiled and downloaded onto the Raspberry Pi target. Essentially this is leveraging the C code generation that comes with MATLAB Coder and Simulink Coder, but you get it for free. The external toolbox would be supported as long as the functions they are leveraging are supported by code generation (see [Functions and Objects Supported for C/C++ Code Generation](https://www.mathworks.com/help/simulink/ug/functions-supported-for-code-generation-alphabetical-list.html)
Thank you very much for your extremely detailed reply. I will have a crack at this over the weekend and let you know how it goes. A quick double-checking of my algorithm of my code based on your corrections suggests that I made a mistake re-initialising the residual each loop, it should be different every iteration. If you are at all interested in the algorithm itself: http://www.stat.yale.edu/~snn7/courses/stat679fa13/references/omptrogil.pdf (pp 3-4) https://uk.mathworks.com/help/wavelet/ug/matching-pursuit-algorithms.html#bs9vw2p Thank you again for your time. 
THANK YOU VEY MUCH. This is exactly the answer I needed. May Lady luck smile upon you and your days be filled with less strife. 
I have to second the endorsement of the profiler. While tic and toc are very useful, the profiler is a great way to identify exactly what and where your problems are.
That’s amazing, thank you!
Line-by-line, you program does the following: 1. Declare a start position outside the loop (why?) 1. Begin iterating over 100 random walks 1. Define a random distance for one step in walk 'j' (the jth walk) 1. Calculate the new position after a single step by generating a NEW step distance for some reason instead of using the step distance you already calculated 1. Set a value for the absolute distance to the fence (in a peculiar place, and in every single iteration of the loop, the same value) 1. Set a value for a new variable 'steps' equal to the current position after j steps plus the 2-vector containing the fence distance (every iteration, a pair of values, 20 apart from one another) 1. Iterate over 3-6 100 times 1. After all iterations provide the last value for steps calculated (the total distance of the 100th step +/- 10) 1. Compute the average of the two values in the vector, aka just the position of the last step The for loop for j = 1:100 should be 100 zombies, but right now it's 1 zombie taking 100 steps. Furthermore, it does not calculate the *number of steps*, but the *distance to each fence* of the zombie after 100 steps. Each of those 100 walks should contain the code necessary to compute the number of steps for *one* zombie. Hint: how many times did you need to make that zombie take a step? You also need a way to find out if the zombie hit the fence or not. Hint: The fence has a distance from zero, B. What condition would be necessary for the zombie to hit the fence? Finally, you can post clean-looking code by inserting 4 spaces before each line. This can easily be done in MATLAB by selecting the code you'd like to share in the editor, pressing tab (to insert the spaces), and then copy/pasting in the post/comment field. If formatted properly, your code should look like: x(1) = 0; for j = 1:100 s=randn(1,1); x(j+1) = x(j) + randn(1,1); B=10; steps=x(j+1)+[B -B]; end steps average_steps=mean(steps) That should hopefully be enough to get you moving in the right direction, and should help us help you if you get stuck again.
You can use something like this : mytic=tic; ...your code... mytoc=toc(mytic); Hopefully it should work 
`var = tic;` stores the particular `tic` to `var`. You can then call `toc(var)` to get the time since that particular `tic` was started. This allows you to have as many `tic`ers running at the same time as you want.
In the end I used Tic Time=Toc and put Time as output of the function. Thanks anyway :)
awesome, might need it somewhere else! thanks a lot :)
There's a graphical interface that will handle the most common things, just type `profile viewer`. The window that opens can be used to directly call a function for profiling, or the profiler can be manually started and stopped.
You have to read up on [array indexing](https://www.mathworks.com/help/matlab/learn_matlab/array-indexing.html). Your `f` starts as a vector, but then you write over it every loop, to either be 1 or 0, when in fact you want to write over a single element of `f`. 
When you say steps, do you mean absolute distance between the zombie's current position (what you seem to be calculating now), or rather number of walks (adding or substracting each time s from the current position, until the barrier is hit?). Btw, there's an error in how you defined the variable 'steps'. Now it's a scalar and your calculation of the average will not work. You need to initialize it as ca vector of length j, and then assign to each of the steps(j) the value you calculated. Then you can get average(steps). Nice problem, good luck! 
If your array is of length 5, can you just multiply with an array 1:5? Like this : X = [1:5] 
Of course instead of putting the size in manually, you can just use size (A). 
You can use [map containers] (https://nl.mathworks.com/help/matlab/map-containers.html?s_tid=gn_loc_drop), they work exactly like a dictionary, and you can put matrices in the valueset. 
alw = 0.75; % AxesLineWidth fsz = 11; % Fontsize lw = 1.0; % LineWidth msz = 10; % MarkerSize x=[-2:.001:2]; y=(sqrt(cos(x)).*cos(200*x)+sqrt(abs(x))-0.7).*(4-x.*x).^0.01; figure(37); hFig = figure(37); set(gcf,'PaperPositionMode','auto') set(gca, 'FontSize', fsz, 'LineWidth', alw) set(hFig, 'Position', [0 0 500 400]) plot(x,y,'r','LineWidth',lw,'MarkerSize',msz); xlabel('\it Time, ms','Fontsize',12); ylabel('\it Heart rate','Fontsize',12); title(strcat('Happy Valentines day Everyone!'),'Fontsize',17); print('Val0214', '-dpng', '-r300'); %&lt;-Save as PNG with 300 DPI
The dual of a plane with equation ax + by + cz = d is a point vector with direction a,b,c and magnitude equal to the inverse distance of the plane from the origin. And vice versa. Can easily be Generalized to any dimension.
The code is generated from the Simulink model, packaged up with packNGo (which also grabs any library dependencies), transferred to the Pi, and compiled into the target executable there. At least that's how it worked a few years ago... entirely possible they've moved to cross compiling on the host machine instead. But yeah MW support is probably worth a call to get you going.
&gt;I have a field with 2 struct objects No. You have two structs with one field. You are passing them both to isempty, but isempty only takes one argument. 
This is exactly what the profiler is for. But to answer your question, I'd suggest using =
Is there a way to check if the structs exist without knowing how many there are?
Well you definitely know how many there are, because you're indexing the struct array, so you can see how many indices are in there. To see if a variable exists you'd use the exist() function. To see if a struct has a particular field you'd use the isfield function. 
I'm not sure I follow. annolist(imgidx).annorect.annopoints could have 1 or more entries inside and I don't know how many without checking; I just need to check if there is anything at all. exist() doesn't work for non-string arguments and isfield() only takes one argument and I run into the same problem &gt;&gt; isfield(annolist(imgidx).annorect.annopoints,'point') Error using isfield Too many input arguments. 
Nope. Isfield takes two arguments. You're providing 3 because imgidx has 2 elements (or its a logical array with 2 true values). Exist doesn't need to take anything but string arguments. That's how it works. How else would you check for the existence of a variable that may or may not exist? If you want to know if a variable "x" is defined, you'd call exist('x'). 
Right, so I don't see how either would help me in this situation.
Stop passing 3 arguments to functions that only take 2? You said you don't know how many elements you have. That's incorrect. You have numel(imgidx) elements. Or, if it's a logical index, you have sum(imgidx). You can only pass one at a time into isempty. Or you could use bracket comprehension to concatenate the lists (although I'd have to test to make sure it works on a nested field reference like that). 
Use isfield(struct, "field")
thanks, much appreciated. 
I'm sorry, using..?
In theory that should work, but in practice you might be noise limited. Also, I'd make two changes to your code. In most cases you should use a 2D fft for image processing. Second, you probably want element wise division ("./",) rather than matrix division ("/"). orig = imread('orig.png'); blur = imread('blur.png'); fftorig = fft2(orig); fftblur = fft2(blur); div = fftblur./fftorig; conv = ifft2(div); 
=
Ah , didn't read the whole way through; alas it was over a brief midnight poo.
Actually, my mistake, he tried isfield(double array, double array, 'field') 
I tried it right now, it's very useful and easy to use. Thanks again, have a nice day :)
&gt; numel(imgidx) elements This is what I was looking for. Thank you
Much as I might like to, I don't really have the time to read papers at the moment. I probably don't have time to look at other people's Matlab code either, but it's a nice break to switch off of my own Matlab stuff for a little bit so I can come back to it with fresh(er) eyes. I probably won't reply in as much detail over the weekend as I don't bring my laptop home, but if you're still having trouble and/or the code still isn't running fast enough, then feel free to post where you're at and everyone here could take another look. Related to the comment about no time - I browse /r/matlab occasionally, but usually not often enough or in enough detail to follow every post. If you want my help specifically, then just ping me, either by a reply here or a PM or something. Good luck! Hope I helped :) 
You have to put four spaces before each line to get the code to show up as code. Go to your Matlab script, Ctrl+A, then hit tab, Ctrl+A again, then copy/paste (ctrl+C, ctrl+v). You said you're having trouble including drift and bias into your script, but you give the equations for it in your problem statement, so I'm not sure why the script you made doesn't include *those* equations. I would personally probably address the correct/incorrect trial segregation by way of logical indexing. For example, you could assume that crossing the "correct" barrier is a one and crossing the "incorrect" barrier is a zero. That means you could do something like: correctTrial = false(Walk, 1); Then, when you cross the correct barrier, you could do: correctTrial(walker) = true; This is the easy/simplistic way to do it, but now you need to make multiple checks - check which barrier was crossed, then check which barrier is the "correct" barrier to cross, where correct is the barrier that has the same sign as the bias. Instead, what you could do is to *assume* that the right barrier is always the correct barrier and *toggle* the `correctTrial` when you cross the right barrier. Now you can do something like: correctTrial = false(Walk, 1); if bias&lt;0 correctTrial = ~correctTrial; end &lt;in your for loop&gt; if abs(x) &gt; B if x &gt; B correctTrial(walker) = ~correctTrial(walker); end break; end Here's what's happening. In the default case: 1. If you are *supposed* to cross the right barrier, then `correctTrial` is initialized to all `false`. 2. If you cross the right barrier, you toggle that bit, and `correctTrial` becomes a `true` for that trial. All good? In the "invert" case, where a successful case is when you cross the *left* barrier: 1. If `bias&lt;0` (a correct trial crosses the *left* barrier), then `correctTrial` is initialized to all `true`. 2. If you cross the right barrier, you toggle that bit, and `correctTrial` becomes a `false` for that trial, because that was *not* a correct trial. Hopefully this is pretty straightforward. Also, I check `abs(x)&gt;B` because it eliminates the `if...elseif` checking on +/- B. Both cases break, and it will toggle the `correctTrial` bit if you crossed the right barrier. Once all your trials are done, you can do something like: correctSteps = allsteps(correctTrial, :); incorrectSteps = allsteps(~correctTrial, :); correctNstep = Nstep(correctTrial); incorrectNstep = Nstep(~correctTrial); etc. Then you can just repeat whatever histogram code you've written for the original trial code with the correct/incorrect trial data.
Thank you!! I’m checking your post rn. But for the laspt part I was thinking along these lines: if drift &gt; 0 if x &gt; B correct (nthwalk) = 1 else incorrect(nthwalk) = 1 end else if x &lt;-B correct (nthwalk) = 1 else incorrect(nthwalk) = 1 end end But honestly I’m not sure about this part 
Formatting, come on. Four spaces. Highlight your code and hit tab and it auto-inserts the spaces for you. You can shift+tab to remove the spaces you insert. Also, you have to reply for me to get notified. You can absolutely do it the way you have written there, but again that's the multi-case checking I mentioned in my post that I tried to avoid in the code I posted.
My apologies! One second I’ll post. Thanks for relying!!
My apologies! Posting rn
using `fft2` gets rid of the NaN values. However, when I use `imshow` on the result of `conv`, it still shows a pure black image. All the values of `conv` are between +.05 and -.05. Why are these values so small? My `orig` is 500x500 and `blur` is 500x500 and the actual filter is 20x20. However, `conv` turns out to be 500x500 instead of 20x20. How can I get it to be the same size as the actual filter? 
I mean, do you see what your post looks like? You can edit your own posts. What are the correct/incorrect things? What is the problem you are having? 
Sorry about the format. I did the indent thing but it still came out like this 
I know I have to use correct and incorrect trials bec that’s what the problem says to do. Below is the exact question I’m trying to answer if that helps: Extend your random walk program from Problem 1 to include drift and bias. Since we are no longer guessing, and there is information presented in (for example) a physical stimulus, there is a correct trial (when the walk crosses the barrier in the same direction or sign as the drift) and an incorrect trial (when the walk crosses the opposite barrier). Thus, your program should now make a histogram plot that shows the distribution and mean lifetime for correct and incorrect decisions in different color bars with a legend. Hint: When testing this script, start with very small values of drift (e.g., 0.1), and when manipulating bias, remember that the value of bias must always be less than the value of B.
Might happen if you didn't select all after you tab. When you tab after selecting all, the first tab on the first line isn't selected. You have to Ctrl+A, Tab, Ctrl+A again before copy/paste. Your code looks fine, you just need to use your `correct` and `incorrect` vectors to index the `numb_steps` - correct_numb_steps = numb_steps(correct); incorrect_numb_steps = numb_steps(incorrect); Then do the same histogram stuff you're doing, but use `correct_numb_steps` instead of `numb_steps` for the correct cases and likewise for the incorrect cases. You can find the number of correct walkers by summing the number of correct walkers: nCorrect = sum(correct); nIncorrect = sum(incorrect); And then you can use `nCorrect` and `nIncorrect` if you need a total number of correct or incorrect walkers. 
if x &gt; B correct (walker) = 1; else incorrect(walker) = 1; end else if x &lt;-B correct (walker) = 1; else incorrect(walker) = 1; end
Ok so this is what I have now but still not sure what to do with the correct drift = 0.1 bias = 1 for walker=1:1000; steps=1; x=bias; while x(steps)&lt;10 &amp; x(steps)&gt;-10; x(steps+1)= x(steps)+ drift+ randn ; steps=steps+1; if drift &gt; 0 if x &gt; B correct(walker) = 1; else incorrect(walker) = 1; end else if x &lt;-B correct (walker) = 1; else incorrect(walker) = 1; end end end numb_steps(walker)=steps; end correct_numb_steps = numb_steps(correct); incorrect_numb_steps=numb_steps(incorrect); meansteps= mean(numb_steps); figure(1) hist(numb_steps); hold on line ([Nwalk, Nwalk], ylim, 'LineWidth', 3, 'Color', 'r'); xlabel('# of Steps', 'Fontsize', 15) ylabel('# of Random Walkers', 'Fontsize' , 15) title('Distribution of Lifetimes', 'Fontsize', 17) legend('Distribution','Mean Lifetime')
Do you have any hardware you can use? That would be really helpful.
You have your histogram stuff - hist(numb_steps); Just use hist(correct_numb_steps); or hist(incorrect_numb_steps); instead. Regarding the preallocation, you could try putting the following above your first loop: correct = false(Walk, 1); incorrect = false(Walk, 1); This is a less efficient way of doing it, but should make that warning go away. The warning isn't the end of the world, either. It's consider a poor coding practice not to preallocate, but it's not required. The example I gave here (`correct = false(Walk, 1);`) is a sub-optimal way to preallocate, but I'm not sure you're following the examples I gave earlier. What's posted in this comment should be enough (and again, even that's optional). 
https://www.mathworks.com/discovery/matlab-opencv.html
Thank you! I think I’ll try to use this. 
I'm working with someone else's data - http://human-pose.mpi-inf.mpg.de/#download and troubleshooting one of their scripts from the evaluation tookit http://human-pose.mpi-inf.mpg.de/#evaluation
 sumOfTRUEvals = sum(arr(ReplicatedVec),2) or sum_of_true = sum(arr(:,vec), 2)
&gt; sum_of_true = sum(arr(:,vec), 2) Thanks for the reply, but im not sure what you did here with putting the `vec` and the index of `arr`. It returns: `Subscript indices must either be real positive integers or logicals.`. _______________________________________________ Here is the sample code I ran: vec = [1, 0, 0, 1, 1]; arr = [ 1 1 0 1 1; 1 1 1 1 1; 0 1 1 1 1; 1 1 1 1 0; 1 1 1 0 1]; RepVec = repmat(vec,size(arr,1),1); sumOfTRUEvals = sum((arr &amp; RepVec),2) sum_of_true = sum(arr(:,vec), 2)
Is it actually working faster than the `&amp;` operator? I was surprised to hear that it’s slow
So, if you have the hardware, then you need to translate what the hardware is reading into something human readable. I have done this with LIDAR systems and it can be tedious but it was quite exciting. You need to first figure out the format of the datastream. When I was working with my LIDAR we used an 8 bit configuration, with 6 of those 8 bits relaying position and orientation information as obtained from the laser. I wrote a program using fread in a while loop to read individual bits, then reconstruct the data packet to obtain individual point measurements. This will only obtain for you specific points, you then need to do something with this data, such as find a wall. To do that you can use clustering. That is basically an application of real-time statistics. There are probably ready-made codes you can use. I highly doubt your professor wants you to write your own clustering algorithm. 
Thanks for your input, I don’t think our prof wants us to write this ourselves either. I think we’ll be able to do something with opencv at least for the calibration of the cameras. I don’t know if it will work to locate the point in space though. 
Thanks for your input, I don’t think our prof wants us to write this ourselves either. I think we’ll be able to do something with opencv at least for the calibration of the cameras. I don’t know if it will work to locate the point in space though. 
Use [logical indexing](https://www.mathworks.com/help/matlab/math/matrix-indexing.html#bq7egb6-1): % A and n are defined % A is a matrix with the off-diagonal elements you want. Now, you want to set the entire diagonal to 1s A(logical(eye(n)) = 1;
% Manipulate eye function - changing the zeros on the non-diagonal a = eye(5); % Find the row and column indices containing the zero values [rows, cols] = find(a == 0); % For loop to index eachof the 0 values and replace it with an arbitrary % value for ii = 1:length(rows) a(rows(ii),cols(ii)) = 2; end
This wouldn’t exactly work. You’re using the row and column both with index ii, which will end up changing the diagonal values. Also, what if there are more than one zero in one row? Your code only changes one per row. Finally, using for loops for this type of thing is very slow. Use logical indexing instead: A = eye(5); A(A==0) = 2;
What do you mean by weights? Do you mean nodes? Because the number of weights is not something you set directly. For any given layer, the number of weights is equal to the number of nodes in the layer (i.e. the size of the layer) multiplied by the size of the input (which, if it isn't an input layer, would be the size of the preceding layer). You probably don't want to use the function 'network' to create your network. It leaves a lot of parameters unset. It's much better to create your network using one of the purpose-specific network constructor functions, such as 'patternnet' for classification networks, or 'feedforwardnet' for regression networks.
Often, avoiding repmat can be a source of a lot of savings in time. Using vec(ones(size(array),1), 1), :) can be a ton faster. But in the solution above, I think it avoids creating the matrix out of vec and instead does lookup in the array. 
This is extremely involved, especially without being allowed to use existing libraries. How many years do you have to work on it? 
Screen shots are an easy solution
Try `doc publish`. I believe there's an option to keep going even if it encounters an error. 
Thanks to all👍🏾
 A = eye(10); A( A(:) == 0 ) = 0.1;
If you just do arr &amp; vec it should automatically repeat the missing dimensions. Or you can use the fact that boolean and is the same as multiplying, so you can write it as a matrix sum. arr * ( vec' ) Should give you the answer.
Well the only one we’re explicitly told not to use is Image Processing Toolbox, but CVTB uses it so by extension we can’t use that one either. We have until the end of february to have a somewhat working prototype. Everything is working properly so far, all that’s left is the computer vision part. 
The second link you provided is what I always use. Ensure all the files are in the path and use TDMS_getStruct. This will return a structure with everything in. 
which path does it have to be? maybe I have it in the wrong place?
 addpath(genpath(&lt;path-to-tdms-reader&gt;))( Something like that where obviously you need to substitute in the right path to the TDMS reader files, wherever you downloaded them to. 
You can use bsxfun() to avoid repmat (it's even by default on Matlab now)
It looks like a dickbutt. 
OK, I think I see your confusion. Until you tell MatLab what the sizes of the inputs are (using the 'configure' or 'init' functions), it doesn't know how big the inputs are, so they have size 0. So there aren't any input weights yet. There will be once you use configure/init to set the sizes of the inputs. Then, for each of the 5 inputs, there will be a 5xN matrix of weights (where 5 is the size of the first layer, and N is the size of that particular input). So if all 5 inputs each have size 2, then there will be 5 different 2x5 weight matrices, which you will be able to access via the 'IW{inputNum}' property of the network object. Note that for each layer-to-layer or input-to-layer connection, there are two separate chunks of information stored in the network object. One contains information/settings about that connection, and is called net.layerWeights{i,j} (for layer to layer connections) or net.inputWeights{i,j} (for input-to-layer connections). The other contains the actual weights themselves, and is called net.LW{i,j} or net.IW{i,j}, respectively.
Lol, somebody elses pointed me to opencv for matlab, if I can make it work I’ll be fine
If the matlab Toolbox is off limits, I don't think you'll get away with using opencv. That's ridiculous. 
Thanks for the reply. &gt;If you just do arr &amp; vec it should automatically repeat the missing dimensions. I thought this at first also. But unfortunately not. &gt;arr * ( vec' ) This is a much better implimentation than I have in my post. But the indexing approach offered by /u/123abc-123xyz is much faster since it reduces the total number of operations significantly. I haven't tested it tho
The second one is pretty good. There is also the NI TDMS DLL which will give you the most functionally, but there is bit off a learning curve
I'm guessing it has to do with sensitivity of the solution with exactly one intersection that is tangent to the other line. If you are off that solution by even a very small amount, it will numerically appear there are two intersections that aren't tangent. The numerical solver thus uses complex numbers to converge the solution in a stable manner, which isn't giving the solution you seek. This is mostly spitballing, but I think something like this might be going on in some way. Do you need to use symbolic variables? Can you use [fzero](https://www.mathworks.com/help/matlab/ref/fzero.html) to solve your equation instead?
I am working on some homework and am just trying to make sure that i have written out the equations properly! Any help is appreciated https://pastebin.com/xEy8S9Bn
I am working on some homework and am just trying to make sure that i have written out the equations properly! Any help is appreciated https://pastebin.com/xEy8S9Bn
This is a mathematical problem, not a homework. I try to understand what the image of the equation looks like, but I don't know how to do it.
This is one of the formulas I got when I explored the math problem, and I'd like to know what the image is. Is this a homework?
I concert my TDMS filed into excel the import them to Matlab. This is an extra step but I do like having my raw data in excel files so others can use the raw data them need be. There’s a TDMS excel importer offered by NI. 
So, solve didn't fail. If you check the answers it gives you, they're right, as in, they both solve your conditions. This means your problem is under-defined, so there are multiple solutions, and MATLAB is simply returning some of them. I think you need to find another constraint. 
Problem is, I have more than 100k data points on the tdms file, which excel cant handle. i tried making a simple .txt file. That came up to 600MB in size
Just set maxstep and minstep to the same thing using odeset
Errorbars in matlab are pretty crappy, I've found a good workaround is to use area instead, it's much more flexible, relatively easy to integrate and looks a bit better (IMO).
If your matrix is 4000 datapoints, each of which is 5 dimensional, then you need to apply dimensionality reduction if you want to view this in a 3-d space (scatter3). To do that, you should look at techniques like pca. Reduce to 3-d, then scatter3.
I actually read about this one time. The money in gambling is serious, and they take their prediction seriously. In the article I read, one of the guys' models included things like weather conditions, because different players perform differently in different conditions.
fminunc for unconstrained optimization is made for what you are looking for. It minimizes the function by changing the variables and checking the objective function. fmincon if you have constrained optimization. It's also possible to parallelize some tasks within those functions to benefit from multi core processors to speed things up. If your optimization is not convex, you may need the global optimization toolbox.
Thank you so much! I will have a read at each one of these and understand the process. I appreciate all the help. I am new to this sub and hopefully ill be able to give something back! 
If you want to modify only specific entries in your P vector at different parts of the loop youll need to index into that vector to specify which entries should be modified at each stage. 
It looks like you're missing indexing on your your p assignment lines. p = 3*T This will assign every p to 3 time every T. You need index using h to assign only the current p to a multiple of the current T. 
Ive tried indexing it myself and got errors. ex: p(T)=3*T(h) 
could you show me how it would look like, cus i keep getting errors. Appreciate the help:) 
https://i.imgur.com/aceuPfI.png will give you an idea of the sort of thing you need to do
You need to index with your **loop** variable. You're indexing with another vector (T), which means MATLAB is going to look inside your vector T and for every value in T, take that index of p (e.g. if T is a vector of [3 5 10], p(T) will return the 3rd, 5th, and 10th entry in p. Similarly you're indexing into T with your loop variable (h) which is confusing your code (and I suspect you) even further.
not answering your question, but use the ode suite rather than your own integrator unless you have a really special use case
Ok. I opened the csv file itself and realized that the [columns are actually labled](https://i.imgur.com/kMZlDc3.png). Looking at this and the circuit model woul I have to subtract (CB-V) - (CV-A) to get the voltage across the diode? And for current I could just use CBI? 
What should it do with the string, if the side length is the integer?
So playing around with this here is what I got. [This is the code and the csv file that I used](https://i.imgur.com/W7s76eq.png) [This is a picture of the plot of \(CVA - CVB\) vs CVA ](https://i.imgur.com/LlKVuSl.png) The reason I shared that plot specifically is beacause that plot seems to give me what I am looking for which is Vfwd of the diode. The problem is I have no clue why. I am supposed to be plotting Id and Vdiode, but when plotting those I get a huge mess of scrambled points. Plotting what I mentioned in the plot above (which i stumbled opon by accident) seems to get me the correct answer. Can you explain what is going on here? I am lost... 
The string is supposed to be what makes the square like if the integer is 2 and the string is * it would look like this ** **
How do you think this might be done? 
How do you think you would do this? How do you assign a value to an array? 
Possibly. V_DIODE in this case could refer to the "forward voltage" (or "built-in" voltage) due to the [p-n junction](https://en.wikipedia.org/wiki/P%E2%80%93n_junction), or the voltage drop across the diode due to its internal impedance under the [passive sign convention](https://en.wikipedia.org/wiki/Passive_sign_convention). You'll have to check the lab objective to determine which you need. As for the current, looking at the given schematic I might recommend taking the measurement at point A, since it does not share a node with other branches. In other words, the current at point A must certainly flow through the diode, as it is in series with the source and does not offer any other path.
CVA - CVB is the drop across the diode. This is a good choice for your independent variable. Assuming the labels are to be believed, CVA is simply the source voltage. This is not likely to be correct, even if it looks that way (unless the internal source impedance is exactly 1 Ohm). When you plot the voltage difference vs. either current, you say it gives you a jumble? Is this true for both current measurements?
[Here is the voltage difference \(CVA - CVB\) vs CAI \(current at A\) ](https://i.imgur.com/PJyWFlA.png) [Here is the voltage difference \(CVA - CVB\) vs CAB \(current at B\)](https://i.imgur.com/WhKNFXa.png) So it looks like plotting the voltage difference across the diode vs I and node CH-A also gives me what I am looking for. A bit messy with randompoints out there, but I believe this is correct now.
just save the output of your first loop in an array, and make the second look call to that array.
Engineering, I see
Engineering, I see thx
a=zeros (initially before for loop) In the loop, a(i)=1; But Idk syntax for, a(i,j)= and I need to store one value in i and not j. Hope it makes sense
I think so too. Glad you got it sorted out.
 &gt;But Idk syntax for, a(i,j)= That's it right there. &gt;and I need to store one value in i and not j. You can store one value in each position of an array. If that array has two dimensions, you need two numbers to specify each element. 
For your very specific case, check out the function reshape(). Because you're taking entire columns, this is a good solution. If you want very specific row/column pairings, that gets trickier. Say you have your matrix 'X'. And you want columns 2-4 into a single array. Here's what that code looks like: newX = reshape(X(:,2:4),[numel(X(:,2:4)),1]) X(:,2:4) -- from matrix X, take all values (:) from columns 2-4 (2:4) numel(X(:,2:4)) -- then turn that into a single column with the length equal to the total number of elements in that section of the matrix that we're taking from. Hope that helps!
Oh sorry I was unclear: bsxfun() *is* a core function, it's that now you don't need to use bsxfun() anymore, there is implicit expansion. 
I'm sorry, but that is incomprehensible
Do some research, try and solve it first before you ask others to do it for you.
You are welcome... I see the post below is on area() It's how gramm represents errors by default. Errorbars are an option though! For learning gramm, go through examples.m and look at the results section by section. The most important thing to figure out is how to format the data (look at the 'cars' structure).
&gt; *A little time with pencil and paper working through the problem can often save a lot of time while trying to debug simulations.* QFT Also, under the "Naive Approach" heading, you have the same case (&lt;0) for standing and squatting. [Here's a Matlab Answers post](https://www.mathworks.com/matlabcentral/answers/59582-ode45-errer-input-argument-y-is-undefined#answer_72047) that says, in part: &gt; Btw., the function to be integrated must be smooth, otherwise the step-size control of ODE45 can lead to unexpected effects: &gt; &gt; 1. ODE45 integrates right over the discontinuity without noticing this. Then the result has a poor accuracy only. &gt; 2. ODE45 finds the discontinuity and stops with a warning message "Unable to meet integration tolerances without reducing the step size below the smallest value allowed". &gt; 3. ODE45 reduces the step size to such a tiny value, that the integration takes hours to run and the accumulated rounding error dominates the solution. This is exactly what the step size control should avoid. 
 meanAngle = mean(wingAngles); threeSigma = 3*std(wingAngles); nAngles = numel(wingAngles); plot(1:nAngles, wingAngles, 'Color', [0 0 0]); hold on; plot([1, nAngles], [meanAngle, meanAngle], '-.', 'Color', [0 0 1]); plot([1, nAngles], [meanAngle, meanAngle]+threeSigma, '-.', Color', [0 1 0]); plot([1, nAngles], [meanAngle, meanAngle]-threeSigma, '-.', 'Color', [0 1 0]);
Ah I see! Thank you! The link in your first reply gives a pretty good tutorial. I might cheat with excel for now because I’m on a deadline but will certainly try to use gramm for my thesis :)
I see! That’s a pretty good idea actually! Thank you!! 
I don't think you replied to the comment that you meant to reply to. 
I don't think you replied to the comment that you meant to reply to. 
From the image, you'll likely want an [anonymous function](https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html) and [integral](https://www.mathworks.com/help/matlab/ref/integral.html) (or [integral2](https://www.mathworks.com/help/matlab/ref/integral2.html)).
are you trying to get a distribution on the wing angles, or a confidence interval on the average wing angle? the +-3 sigma stuff is usually associated with Confidence Intervals on a specific metric, like the mean. if that's what you're looking for, look at /u/shtpst 's post as it's pretty much what you want. if you want the bounds to come from the actual distribution of the data, look at pulling percentiles (like the 5th, 10th, or 25th from the top and bottom). wingAngles = sort(wingAngles); numAngles = length(wingAngles); bottom = wingAngles(round(.05*numAngles)); % 5th percentile top = wingAngles(round(.95*numAngles)); % 95th if you go with the percentiles, i'd recommend bumping up your Monte Carlo runs a bit more. 
That really helps thanks! But let's say I wanted to convert it to a single row instead. I tried same command but I switched the placement (:,2:4) --&gt;(2:4, :) however Matlab said "index exceeds matrix". You said numel would turn it to a single column, so does that mean there's another command for turning it to a single row, or am I using numel wrong or is it just reshape?
Yeah, I'm not really sure what OP is after, either. To me, it sounds like OP is the one setting the wing angles: &gt; I am running a Monte Carlo sim that creates 100 runs of a wing being deployed from 90 to 45 degrees. That reads, to me at least, like OP is using wingAngles = linspace(90, 45, 100); in which case there isn't really any point to doing any of the other math. I think the hint here is: &gt; I want to take the mean of the wing angle **with respect to time** but there isn't any other information given regarding what that actually means. OP goes on to state, &gt; I would like the 3 sigma bounds to be created from the actual data. But again, no information here regarding what an input is, what an output is, what the "data" is, etc. If I had to guess, I would imagine OP has some other criteria, like flight duration, that's a function of wing angle, and OP is wanting to "score" wing angles by flight time, or something like that, as in: wingAngles = linspace(90, 45, 100); flightTimes = FlyPlane(wingAngles); That's a guess, though. I tried to give as much as I could in my post, as directly as I could, based on strictly what was given. I was hoping that, if OP wanted something else, OP would reply with, "Well that's not exactly what I wanted. I was hoping for ____" and clarify the problem statement. 
The part that determines if it turns into a row or column is actually the second part of the function -- [numel(X(:,2:4)),1] swap to [1, numel(X(:,2:4))] The part of the code that you changed was telling Matlab that you wanted all columns from rows 2-4; but your matrix doesn't have 4 rows. Matlab also has a fast way to transpose (rotate rows/columns). Simply add an apostrophe to the variable. (e.g. newX'). With code that I gave earlier, type newX and newX' to see the difference. keep in mind that you have to use something like newX = newX' to save the change. But be careful with how you use it; it's super useful when you're messing around with data, but if you're not keeping track of it in your script it can cause some frustrating errors as you accidentally flipped stuff around that you didn't mean to. 
The rectangular pulse response for an integrator should be a ramp up to a new constant value. This might work: y=[0 0 9.56*2.5 9.56*2.5];t=[0 .5 3 10];plot(t,y)
Your images lol - "Actual PSF - The actual PSF isn't like this..." "Actual Original Image and Actual Blurred image - The actual original and blurred images are not like this..." &gt; I'm having a problem, but am unwilling to actually show you what the problem is. Okay, so we can guess about what your problem is. My guess is you're aliasing because your sizes are mismatched. Have you tried to generate the blurred image with your known filter? [Here's a post](http://matlabgeeks.com/tips-tutorials/how-to-blur-an-image-with-a-fourier-transform-in-matlab-part-i/) that shows the aliasing when your image and filter aren't the same size, and how to pad. If this doesn't work, please post something more specific.
yeah. I imagine he's going to want to look at something like "wing displacement across multiple angles" where the wing is extending out across the 45 to 90 range, and there is some amount of external influence that could be altering the displacement (like the difference between the set point and the actual value in a control theory type class, or an external wind that is randomly generated in a modeling class).
/u/shtpst your response covered most of my issue. So thank you for the response. What I am struggling with is the time variance throughout the monte carlo data: wingAngles = [90 90 90 90 90 90 85 80 75 75 75 75 75 75 70 65 60 55 50 45 45 45; 90 90 90 85 80 75 75 75 75 65 60 55 50 45 45 45 45 45 45 45 45 45; 90 90 90 90 90 90 90 90 85 80 75 75 75 75 70 65 60 55 50 45 45 45;]; times = [0:0.1:2.1; 0.1:0.1:2.2; 0.4:0.1:2.5]; As you can see all though the data has the same length of time the first data point in each time array varies (0, 0.1, 0.4). The angles themselves also vary in duration at each angle stage (90, 75, and 45) because of this if I simply take the mean of each array I get a straight line with a relatively constant slope rather than a mean that should will show the mean time the wings are at 90 constant slope to 75 mean time at 75 and a constant slope to 45. I hope this makes sense. It is difficult to explain. 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/YYIMQBe.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dui7m4v) 
Huh.. that's really strange but it makes sense. And yeah I've learned my lesson about flipping it. I was playing around with it last night and eventually got so lost in my homework I had to scrap it and start over haha. But thanks for all your help I really appreciate it. 
I can think of a few reasons this might not work: 1) is everything converted to doubles before you fft? are you extracting a single brightness value from each pixel, or are 3 values (from rgb triplets) present? 2) deconvolution is often an unstable operation. I wouldnt necessarily expect the deconvolved filter and the true filter to match unless the problem is very simple. 3) Im fairly sure that fft-based uses circular convolution, which isnt the same as standard convolution. This is the same effect that causes "wrap around" in any fft-&gt;processing-&gt;ifft workflow. This can typically be minimized by applying tapering at the edges of the data before fft/ifft. Ive found a Tukey window (cosine taper) works pretty well.
For both the code and images in the OP, and in that link, the values are uint8 and grayscale Shouldn't I at least get the correct computed kernel for the images in that link?
First off, you didn't ask a question. Secondly, please [see our rules for asking questions](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/). 
It doesn't really make sense, sorry. It's probably difficult to explain because you're not starting at the beginning. What are you trying to do? Why are you trying to do this? What useful information are you trying to get? ***What does your data represent?*** &gt; What I am struggling with is the time variance... As you can see, although the data has the same length of time, the first data point in each time array varies (0, 0.1, 0.4). Okay, but **what is the time array for?** What are you timing?? &gt; The angles themselves also vary in duration at each angle stage (90, 75, and 45) Again, not sure what this is supposed to mean. Are you trying to time how long a wing stays at a particular orientation? *Without some explanation of what you're doing, it's hard to make sense of your data.* &gt; if I simply take the mean of each array I get a straight line with a relatively constant slope rather If you take a mean, you get one number. That's it. Not a line, just a number. What you do with that number is up to you. &gt; rather than a mean that should will show the mean time the wings are at 90 constant slope to 75 mean time at 75 and a constant slope to 45. I hope this makes sense. It is difficult to explain. If that's what you want to do, you need to do it a different way. `mean` takes the mean of whatever you give it. If you want to find the mean of various subsets of data, then you need to split the data up yourself first before passing off to `mean` or `std` or anything else. Since you posted some numbers, I figured I'd take a look at them, just to play around with it. First, I'll re-post your data in a bit of a neater format (**put four spaces in front of each line of code you want to post to get code formatting.**) wingAngles = [... 90 90 90 90 90 90 85 80 75 75 75 75 75 75 70 65 60 55 50 45 45 45; ... 90 90 90 85 80 75 75 75 75 65 60 55 50 45 45 45 45 45 45 45 45 45; ... 90 90 90 90 90 90 90 90 85 80 75 75 75 75 70 65 60 55 50 45 45 45]; times = [... 0.0:0.1:2.1; ... 0.1:0.1:2.2; ... 0.4:0.1:2.5]; Okay, so let's take a look at the data: figure(1); clf; for currentRow = 1:size(wingAngles,1) plot(times(currentRow,:),wingAngles(currentRow,:)) hold on; end Right away, it's not very good to look at, because the wing angle data is so coarse; a 5 degree increment is huge. The next bit is where you really lose me, though - &gt; a mean that should will show the mean time the wings are at 90 constant slope to 75 mean time at 75 and a constant slope to 45 The mean time the wings are *between* 75 and 90? The mean time the wings are at 90? I'm not sure, so I'll give you some template code that is hopefully straightforward enough for you to modify yourself: nTrials = size(wingAngles,1); binLimits = [45, 55, 65, 75, 85, 90]; % &lt;--- You setup the bins to be whatever you want. nBins = numel(binLimits)-1; angleTimes = zeros(nTrials, nBins); for currentRow = 1:nTrials timeInterval = mean(diff(times(currentRow,:))); for currentBin = 1:nBins validAngles = ... (wingAngles(currentRow,:) &gt;= binLimits(currentBin)) ... &amp; (wingAngles(currentRow,:) &lt; binLimits(currentBin + 1)); angleTimes(currentRow, currentBin) = timeInterval*sum(validAngles); end end binColors = [... % &lt;--- You can make these colors whatever you want. They're [RED GREEN BLUE] scaled 0 to 1. 0.9 0.9 0.9; ... 0.8 0.8 0.8]; for currentBin = 1:nBins colorSelect = mod(currentBin,2)+1; % &lt;-- Simple even/odd color selector currentColor = binColors(colorSelect,:); left = binLimits(currentBin); right = binLimits(currentBin+1); bottom = 0; top = max(angleTimes(:,currentBin)); xData = [left, right, right, left, left]; yData = [bottom, bottom, top, top, bottom]; patch(xData, yData, currentColor) hold on; end binCenters = binLimits(1:end-1) + diff(binLimits)/2; for currentRow = 1:nTrials plot(binCenters,angleTimes(currentRow,:),'LineWidth',2) end meanTimes = mean(angleTimes); meanTimesPlotHandle = ... plot(binCenters,meanTimes,'-.','Color',[0 0 0]); sigmas = std(angleTimes); threeSigmaPlotHandle = ... plot(binCenters,meanTimes+3*sigmas,'-.','Color',[0 0.7 0]); plot(binCenters,meanTimes-3*sigmas,'-.','Color',[0 0.7 0]); legend([meanTimesPlotHandle, threeSigmaPlotHandle], ... 'Mean Time', '+/- 3 Std Dev', ... 'Location', 'northwest'); title('Wing Angle Flight Data') set(gca,'XDir','reverse') xlabel('Wing Angle (deg)'); ylabel('Time Spent at Angle (s)') This is probably a bit overboard, but I think this is what you're going for. I could explain in more detail what the code is doing at any particular point, but I think it's relatively straightforward as it stands and it's not worth explaining if this doesn't give you the results you're after. By all means, though - if you have any questions, please feel free to ask. 
I inherited a large function library that uses an in-house numerical integrator, and making changes to it getting harder and harder. This comment has inspired me to see if I can replace parts with matlab's ODE
Maybe he wants us to applaud him?
It's not for class. It's for a research lab. 
Struggled a lot with this one myself. It is critical to set up your boundary conditions outside the range of your matrix. They should only interact at either end. Start small, do your algorithm by hand, and then try to do it with different boundary conditions. Lots of LU decomposition examples on GitHub. This one is critical for learning some of thinking that goes on once you move to 2D.
Yep, you just have to use the “eig” function. For instance e=eig(A) returns the eigenvalues and [v,d]=eig(A) returns “v” as the matrix of eigenvectors as columns and “d” as a matrix whose diagonal elements are the eigenvalues. 
This worked really well thanks! 
how stupid are you?
I haven't (won't) tried to actually use the files, but this would be my understanding from *reading the comments* in the files: 1. There is a field for an image called `source.sourceAnnotation`. (line 35 in `LMquery.m`) 2. You can query that field (line 30 in 'LMquery.m'). 3. Some annotations have a field called `'imagesize'` (line 15 in `getaproximagesize`) 4. If that field exists, it gives you the image size as `source.sourceAnnotation.imagesize.ncols` and `source.sourceAnnontation.imagesize.nrows` (lines 16 and 17 in `getaproximagesize`). So, that would be my suggestion if you're trying to get image sizes. If you're trying to build yourself a database of large images, try modifying the example on line 245 of `demo.m`. That gives the command for creating a new database with a *maximum* image size, but I would (just a guess) try using the line `'minimagesize'` instead of `'maximagesize'` in the same command and see if you can set a *lower* bound on how *small* the images can be. Read the documentation. Look at the demo. I think that nearly every programmer got their start by finding examples that were close to what they want to do, and then methodically modifying those examples until they got the desired behavior. That, or just contact the people that maintain the database and ask for an API or user guide. The API link is broken for me. 
I will read and then try to implement this "eig" function, thanks for the tipp!
If you understand the steps, I'm not sure where your trouble is. Maybe in setting it up in Matlab? If you want an equation in 'x', or any other variable, you have to make it *symbolic*: syms x; det(A - x*eye(size(A))) That should be the polynomial you want (assuming you can take the determinant - as /u/AlexanderHBlum mentioned, you can't take the determinant of a non-square matrix. Then, if you want to solve, you could do something like: eigenValues = solve(det(A - x*eye(size(A)) == 0, x) Then, if you wanted to plug those values in, you could loop through each value and substitute each solution in for `x` and reduce the augmented matrix: nRows = size(A, 1); nEigenvalues = numel(eigenvalues); eigenvectors = zeros(nRows, nEigenvalues); augmentedA = [A, zeros(size(A, 1), 1)]; for currentEigenvalue = 1:nEigenvalues eigenvector(:,currentEigenvalue) = rref(augmentedA - eigenvalues(currentEigenvalue)*eye(size(augmentedA))); end 
Doesn't the mldivide (\) already have the thomas algorithm implemented? I'm pretty sure I saw it in one of the flow charts.
Whenever I have done something similar I have had to find a way to have the executable run the input files from the command line. There may be a command line option to specify the input file so you could do from Matlab: !program.exe -i file.txt In the unix world, you can often use a pipe. I think it would be something like: !cat file.text | program.exe 
Download Octave. It's the same thing, but it's free software. 
For everyone telling you to download Octave and that it's the same they're wrong and stupid. They don't know what you need and barring some very edge cases if Octave were the same as MATLAB then MATLAB wouldn't exist or even have such a high price tag. MATLAB's power comes from the various toolboxes available to it and without *knowing your specific use case* telling you to use Octave is stupid. For instance, doing any type of proper statistical analysis without the stats toolbox is a fucking nightmare and that's exactly the situation you'd face if you were to use Octave. As for your problem - your university either has a license for MATLAB (with the most relevant toolboxes) or does not. If it doesn't then I wouldn't bother learning MATLAB and go for something like python.
I have no idea what the original object looks like. How are you choosing your threshold? What happens if you use a different threshold? 
help im2bw Vary the "level" parameter. Without knowing what your input image looks like that's the best I'm willing to do for now.
https://imgur.com/a/BG9aB Here is what the image is. I tried playing with the threshold level before I posted and it didn't seem to make any difference it just sort of filters out more of the object or less and then. From the examples online I would have thought just turning this image to only show the important part would be simple. All I am trying to do is calculate the dimensions of the object and I think the best way I could do that would be able to have the program identify where the corners are and then make calculations from those points. I would think the best way to approach that would be to remove the background till only the object was left through b/w but I have no idea. Right now I am looking into maybe just running through the entire thing and removing everything that has an R rating &gt; 200 and that (should) only leave me with the object. Then all I would need to do is figure out how to tell it to find the best corner it can find on each segment of the part. Problem is that I have tried the find corners function and it goes all over the place even onto the little jags on the surface of the metal. So it isn't really helpful. 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/ajhk1na.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dukhjsj) 
For more clarification https://imgur.com/a/wXhEo As I alter the level either A the part loses components of itself, or B more snow shows up everywhere and there seems to be a huge jump from .5 to .6 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/jI2AP4M.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
What are you thresholding? That's a color image. What do you think would best distinguish the foreground from the object? 
You must have missed it when you read the documentation about image processing. Check out rgb2hsv. 
You could look at the documentation for im2bw to see what it's using for its threshold and whether it has any options. 
Got it to work BTW you rock sexy beast. 
Yeah this is a pretty common and straightforward task. You've read the documentation for regionprops, right? 
I thought Simulink comes bundled with the student edition. For that $90 price point and low cost of the toolboxes , it is definetly worth it. To add on, take advantage of being a student and see if you can use that university license. Once you know Matlab, if you decide to go the free, open source route working in octave should come easy.It is more or less the same, with some quirks and stability issues.
Which channel are you operating on? Getting rid of red light be a place to start. Maybe then have a look at what a sobel filter is.
Just as an addition: if you go for toolboxes with the student edition, they *must* be purchased at the time you buy the student edition to get the discounted price. You *cannot* get the special pricing after the fact.
You'll want to get handy with good ol' [Dirac](https://www.mathworks.com/help/symbolic/dirac.html).
You can type a string variable input for the function (IE file path) into cmd when you are calling/running the exe
As others said, check if your school has a license and even better if you can access the school computers remotely. The version installed at your school probably includes more toolboxes (libraries) than the student edition, which you may or may not need. If you want to get those toolboxes on the student edition you'd have to pay extra for each. Octave and SciPy may also do the job, but depending on the level of complexity of your simulations, they may not have an equivalent toolbox compared to Matlab (unless you code it yourself, which may be too time consuming or out of your scope).
if you have the spare cash, it's worth it. you may or may not ever use simulink, though, depending on where your area of concentration lies.
Element-by-element multiplication means, when multiplying two arrays of equal dimensionality, the individual entries are multiplied and the resulting array is the same dimension. It can be executed as follows: [1 2 3].*[1 2 3] = [1 4 9] This differs from vector/matrix multiplication which is a linear algebra operation and is executed as follows: [1 2 3]*[1 2 3]' = 13 [1 2 3]'*[1 2 3] = [1 2 3; 2 4 6; 3 6 9]
By looking at the raw image, I can think of several ways of doing object extraction. You can extract 3 color planes individual and doing thresholding from one of them( probably green or blue). Or you can do an edge detection, considering your object have a very good vertical and horizontal edges, and the signal/background ratio is fantastic. To tell the dimension is a little bit harder, you need to know the distance between camera and object then get a conversion. Find the edge and calculate how many pixels.
Add a "hold on" after the plot command. I assume you are only seeing a point corresponding to the last result right now and want to look at the solution for each i value.
The specific question is to plot the approximate launch angle (rr) versus the iteration number. So I'm assuming that they are asking me to plot the approximation vs. the iteration number 1-n, n being the number of iterations the program runs until it meets the specs I set in the while loop. so from 0.001 for theta to 24.47 (the number I got from using an fprintf command that showed me the answer, also R = 10000, H = 3000, and Vt = 250 for the first instance). I'm not even seeing a single point. It's just a blank plot. could my axes be messed up? Also I have very little idea what I'm doing at the moment. I'm astounded that my code gave me an answer that makes sense for the cases they gave me to solve.
Do you only have this image to work with? I'm not sure how you could use the data you want from the pixel locations on this. Shouldn't there be some reference points in the picture to compare to and deduce the part's size?
OK. I see. So if I understood that correctly, you can simply use the following command if you want to print a bunch of points: plot(n-1,rr,'ro'); hold on; The 'ro' will plot circles (o) of red color and help you visualize better. Alternatively, you can store the value rr in a vector say ans(i)=rr; and plot the vecot after the for loop. You can get a line that way for the vector. plot(ans); Does this make sense? 
This is one of those things where, if you think you need it, you should stop and figure out what you are actually trying to achieve and what led you to a situation where you think you need this. You should then back up to the point where you went down this path, and fix that problem, which is ultimately the root issue. This is not a thing you should need. Whatever you're trying to do, there is 99.99% likely a much better solution. 
I'm not sure that video formats will support that. I suppose you could just use a high framerate and duplicate frames where nothing is changing. Did you read the documentation for drawnow? I'm not sure how it would help here. 
By size 100, I'm guessing you mean a 100x100 matrix. If the conditions for generating matrix elements is the same for all the 25 matrices, you could simply have a 3-D matrix of 100x100x25 size instead of 25 2D matrices. This way you can put a for loop which increments the third dimension and you won't have to write your code 25 times. I'm sure there will be more to it than this but without knowing about your conditions and the inputs to them, this is all I can tell you. PM me if you have any more questions. Cheers!
Basically have a set of algorithms that can analyze models to produce outputs of interest. The code was initially written to solve a model, and changes to the model would mostly be effectuated through changing the input parameters. The point that has led me down this path is that now I am finding that changing input parameters is no longer sufficient. i.e., the problem definitions differ substantially enough that the models themselves need to be modified. Nonetheless much of the algorithm code that analyzes the model doesn't need to change. So I am looking for a simple way to input different models without needing to change the surrounding algorithm, but without a user needing to delve too far into the code. Ideally, a user could define the set of models, and the surrounding algorithm code could then run it, without that user needing to change any surrounding code.
Look into Python as a free alternative to Matlab as well. But your uni probably have a license.
Try this: 1. Replace figure(1) in line 17 with figure() 2. Before the while loop in line 19 add the line rr_plot = []; 3. After rr in line 28 add rr_plot = [rr_plot;rr]; 4. Replace plot(rr) in line 30 with plot(1:length(rr_plot),rr_plot). Does this do what you want? If it does I can explain further how it works.
Yeah, I'd strongly recommend finding ways to do this with a bit of functional programming (using maybe structures and switches where needed), the template-based autogenerated code method leads to a *whole* lot of pain and maintenance nightmare. If you still find it necessary (after giving it some thought), your best bet is probably one of the simpler templating engines from Perl, Python or Ruby. If it's as direct a substitution as the post text describes though, and if you have access to cygwin or other Unix command lines, it can be just a `cp` on the folder containing the model m files, a `qmv` or equivalent to change filenames, and then a `perl -ipe` command to change the contents. 
Hey, while the beginners are learning MATLAB from you, some of the rest of us are learning how to guide someone at just the right balance, between being frustratingly vague and the other extreme of overenthusiastic spoonfeeding. Mad props to the way you manage that consistently. 
It looks like it takes a 9x9 array of the unsolved puzzle. Any unsolved squares should be zero. X = [0 2 0 0 3 0 0 4 0; 0 ... 0];
I was wrong, the matrix is square, before this step i do a multiplication of a transpose of the matrix with itself
The matrix is square, i forgot that before this step i do a multiplication of the transpose of the matrix with itself
I managed to use the eig function and it worked out pretty fine thanks for the help!
I would do exactly what /u/FrickinLazerBeams said: find a time step that is an integer divisor of all of your time steps and use that as the base. You may have to have multiple frames for every image, but you should be able to represent at least the relative timing precisely this way. I have used [VideoWriter](https://www.mathworks.com/help/matlab/ref/videowriter.html) in the past successfully to make cool demo videos for classes to get other students excited about MATLAB (hard task).
**Double pendulum** In physics and mathematics, in the area of dynamical systems, a double pendulum is a pendulum with another pendulum attached to its end, and is a simple physical system that exhibits rich dynamic behavior with a strong sensitivity to initial conditions. The motion of a double pendulum is governed by a set of coupled ordinary differential equations and is chaotic. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
So, I would try to do a project in MATLAB which MATLAB is actually useful for. No one uses MATLAB to try to write fast sort functions. It's an engineering prototyping language. Used to do quick analysis of simulations, etc. I would try to find a project that uses MATLAB's strengths. When I think of MATLAB, the biggest strength I think of is it's ODE solvers. They are optimized to kingdom come and have features that allow you to write in a handful of lines which would take hundreds in other languages. Then when I think of an intro level ODE to solve, I think of a ballistic propagator, with a little air resistance/wind/maybe even a rotating Earth. Even cooler, you could hand in a "grid" which represented the height of the ground at different places, and show how MATLAB's ODE event detection makes it really easy to have a projectile run "to the ground" instead of just for a certain amount of time. Or if you model Coriolis force, you could show how slowing or speeding up the rotation of the Earth changes the projectile path. 
Nice code. One question and then one comment you might like: First, this code seems odd to me: rotation =pi/2-acos(cosrotation); % rotation angle R = [sin(rotation) cos(rotation); ... -cos(rotation) sin(rotation)]; % create a rotation matrix Normally rotation matrices are [cos -sin;sin, cos] which yours effectively is, but after a change of variable where you shift by pi/2. Is there a reason you did it that way? Now for a comment. Calculating the eigenvalues/vectors and then building an ellipse directly is the correct way of doing this for computational speed, but you can actually do it directly using one of my favorite formulas, the [Mohalanobis distance](https://en.wikipedia.org/wiki/Mahalanobis_distance). This gives you the length, in sigma space, of any vector you hand in. Thus, you can simply choose unit vectors that span your center, then scale them to the confidence sigma you're interested in. It's more computationally intense than your way, but it's kind of neat. 
Are you running in MATLAB, MATLAB Online, or on a doc page? Are you clicking the run button to run the script? If so you will need to either enter the matrix in place of the X from the drop-down, or create a variable X in your workspace. In general it is easiest to run a function with inputs from the command line: &gt;&gt; X = [0 2 0 ... ; ... ; ... ; ... ; ... ; ... ; ... ; ... ; ...]; &gt;&gt; sudokusolver(X);
I will try it once I get home
A Ballistic propagator sounds like a lot of fun. I agree about it being silly to do a project on sort functions. That's something I could do in an afternoon and I'm by no means a seasoned programmer. Thank you so much for the idea.
Let me know if you have questions, I have a propagator which I'm sure is of higher fidelity then you'll need, so I should be able to help
My matrix is defined by as M, an 80x80 matrix with z values.
One more thing though, the eigenvalues i get are in a increscent order, is there a possibility to change that and get a matrix in which the values are decrescent through the main diagonal?
Don't know for sure, but I'm guessing that it reached the maximum number of function evaluations (10,000) because it had not reached the convergence criteria. After the 10,000 evaluations, even though it had not reached convergence criteria, the function did meet some sort of global error test, so the result is still passed on just with a warning. A warning isn't an error.
Okay thanks. I think I have found the suspicious part of the function as well, at least if I remove that part the warning disappears. It's of the form: something exponentially small as x grows / something exponentially large as x grows So it vanishes for large x but is important at small x. Is it possible that this gives problems for MATLAB integration?
Yep, if your function is "stiff" it will require more evaluations to reach convergence of the integral. See the docs for [integral2](https://www.mathworks.com/help/matlab/ref/integral2.html), specifically the parts about tolerance.
Thanks, I read it. Any tips how to fix it? 
https://se.mathworks.com/help/matlab/ref/cylinder.html ?
Worked perfectly. All it needed was dirac(10). Much appreciated!
I actually fixed it! Thank you though. If anyone is struggling i basically made two vectors of length Nradius and Ntheta with the values i wanted, made a meshgrid using these and used pol2cart. Then all i had to do was map my z value matrix and it worked! Just need to fix boundary conditions
Take a look at the Simscape-Toolbox. Maybe it can help you. If you don't have the toolbox you could calculate the transfer function th_out/m_c.
Happy to help. :)
First, why do you need more than 15 significant figures for an answer? I'd be shocked if you actually needed that. Second, a 64 bit double only holds 15 significant figures. Using VPA after you've solved a problem can't add more digits to the problem. 
The professor asked directly for 40 decimal places. Context: I had to make a function file that contains a bisection algorithm. and then apply the bisection algorithm to a separate function to find its roots. This is the question verbatim: "The analytical root for this function is: 1.023059729842508553500507094526745528731 (to 40 decimal places). What change, if any, to bisect is necessary to achieve greater number of significant digits?" So I assume the answer may be you just can't?
Hello! It's been a while since I looked at heat and mass transfer stuff, but I *am* a mechanical engineer. Side note - put the ` symbol around equations to get them formatted as code. It's the same key as tilde ~. If you don't, then `A*B*\DeltaT` comes out as A*B*\DeltaT. So, I'm assuming that you have: 1. Thermal power out of hydrogen = thermal power into water, 2. Inlet *temperatures* for water and hydrogen are fixed, 3. Inlet *mass flow rate* for hydrogen is fixed, and finally 4. You want to vary the mass flow rate of the water to control the outlet temperature of the hydrogen. You seemed to toggle between `m_w` (mass of water, I'm assuming) and `m_c` (mass of "cold," I'm assuming), but I think they both mean the same thing. You have water and hydrogen, so I'll just use `_w` and `_h`, respectively. You have to figure out the heat exchanger parameters, first. The formula for a heat exchanger (`_hx`) is: Qdot_hx = U_hx * A_hx * DeltaT_lm where `U_hx` is the heat exchanger heat transfer coefficient, `A_hx` is the surface area of the heat exchanger, and `DeltaT_lm` is the "log mean temperature difference," given by: DeltaT_lm = ((T_h_in - T_w_out) - (T_h_out - T_w_in)) / ... log( (T_h_in - T_w_out) / (T_h_out - T_w_in)); where here `T_h_in` is hydrogen inlet temperature, `T_w_in` is water inlet temperature, etc. Recognize that: Qdot_h = mdot_h * c_h * (T_h_out - T_h_in); Qdot_w = mdot_w * c_w * (T_w_out - T_w_in); Assuming no loss of power anywhere, then Qdot_h + Qdot_w = 0; Or Qdot_h = -Qdot_w; which can be restated as: mdot_h * c_h * (T_h_out - T_h_in) = mdot_w * c_w * (T_w_out - T_w_in); The problem is, you know *everything* about what you want the hydrogen to be, but you don't know the mass flow rate of the water **and** you don't know its outlet temperature. This is where the heat exchanger equation comes into play. You have to pick something somewhere. You can either pick a target water mass flow rate, and find out what the required outlet temperature is from the thermal power equation, or you can use heat exchanger data for the heat exchanger you're using and find out what the outlet temperature of the water needs to be from the heat exchanger formula and then find the mass flow rate. Whichever your route, you have two equations - conservation of thermal power and the heat exchanger power, and (at least) three unknowns - water mass flow rate, water outlet temperature, and heat exchanger thermal transfer capacity (`U_hx *A_hx`). Once you pick one unknown to be *something*, then you can figure out what your *steady state* values are for everything else. You could, of course, just use the conservation of thermal power and have two unknowns and one equation - you still have to pick one, but utilizing the heat exchanger equation gives you some bounds on how "reasonable" the output temperature equation is. You could pick heat exchanger material thickness and material to calculate a `U_hx`, pick an approximate surface area based on tube diameter, number of tubes, and overall length, then get an *engineering basis* for your other numbers (mass flow of water and water outlet temperature). The tricky bit comes when it's time to simulate how the fluids respond to fluctuations in flow, and this is where the heat exchanger equation really shines. If you don't want an engineering basis for your heat exchanger numbers, you still really need this to get your simulation running. Imagine the instant you start up the heat exchanger - inlet and outlet temperatures are equal for one side because the fluid hasn't been admitted by the other side yet. According to the thermal power equation, thermal power is zero, because the temperature delta is zero, so you wind up with no good way of getting your simulation running. The log mean temperature delta only compares one fluid to the other, never a fluid to itself, so you never wind up with the zero values that you do with the thermal power equation. So, if you choose not to use the physical heat exchanger parameters, you still need to calculate the `U_hx * A_hx` term as a bulk "heat exchanger coefficient" to use the heat exchanger equation to get the thermal power exchanged between fluids. The last step here is to accrue the thermal power by multiplying thermal power by the time step, such that `Q_added = Q_added + Qdot*dT`, where `dT` is whatever time sample size that you have for your system. If you're doing this in Simulink, then I think you can just integrate `Qdot`, but I'm not a Simulink guy so I couldn't really say for sure. Anyways, once you have your Q term, now look at the mass of fluid in the heat exchanger and solve for the temperature difference required to achieve the total heat in the working fluid. You'll find that, the more mass in the heat exchanger, the slower the system is to respond to fluctuations. Mass will depend on *volume* in the heat exchanger (and operating pressure, for the hydrogen), so again it's a good practice to try to put some bounding limitations on how the thing is physically arranged. Probably a wall of text, but hope that it helps :) 
Well, if you can work with symbolic variables from the beginning then you can have higher precision. 
I would use a [parameterized equation for the ellipse](https://www.mathopenref.com/coordparamellipse.html), which is easier to draw in the axis-aligned case and also much more straightforward for the tilted case.
That's a classic numerical instability. You could try working in log space. 
What didn't make sense when you looked up fprintf in the documentation?
i dont know what a floating pint number is we didnt learn it in class
What didn't make sense to you when you googled floating point number?
Code doesn't run. No sample data to compare the model and data with... here's the best I can do: &gt;If I wanted to minimize the least squares distance between the model and the data that I have, how would I go about doing this? You would minimize the least squares distance between the model and the data you have. &gt;I know that I need to use the fminsearch function. How / why do you know that? Does it do least-square minimization? Is your problem non-linear? (I'm not familiar with SIR epidemic models) If it is, why not use [lsqnonlin](https://www.mathworks.com/help/optim/ug/lsqnonlin.html)? &gt; but I'm not sure how to implement it. From the [documentation](https://www.mathworks.com/help/matlab/ref/fminsearch.html): [x,fval,exitflag,output] = fminsearch(fun,x0,options) Minimizes with the optimization options specified in the structure options. Use optimset to set these options. 
Drop out 
Yea I’ve read all about this. And i can’t get it to work. 
thank you
Do you have the image processing toolbox? https://www.mathworks.com/help/images/ref/colorthresholder-app.html?s_tid=gn_loc_drop This tool will do what you need and will also generate a function that you can use.
Minimize the distance with respect to what? The parameters of the model? The initial conditions?
The first lesson to learn is to make the most of any feedback. The other first lesson is to learn to learn by yourself, or at least make an effort. Glad you got an answer at least.
Lifting the Absolute Tolerance a bit seems to fix it. 
Glad to help! 
Thank you! 
Thank you! A much better response than I was ever hoping to get (this was my first ever reddit post)! I have begun designing the control system having set the outlet temperature of water to an arbitrary value to begin with and then once it's working I'll use some actual engineering to validate it. This all makes great sense! Thanks again.
I'm going to check out the toolbox now! Thanks for the reply.
You could try a For loop with horzcat and vertcat. So k=1 -&gt;[x] K=2-&gt; [0 or space,x; x,x]. If you'd like help, I could probably mock something up this evening.
It is a requirement that I use a recursive function. It would be appreciated if you can try something, i'm really stuck in this one. 
Edit: formatting is weird. It should be a triangle with a right angle aligned on the right
Without looking at your code, the error means youre trying to search for a value outside of the matrix.
To answer your question on why you're getting only one output... What do you want your output to look like? Do you want to print your triangles to the screen? Do you want a char matrix containing '*' and ' '? I'm going to assume you want to print to the screen just for example. None of your statements print, so what happens when you call it as `triangle(5)`? n = 5 if 5 &gt; 0 % yes tr = repmat('*', 1, 5); % tr = '*****' triangle(4); end Notice that you aren't assigning tr in your recursive call. the `tr` that is returned is only ever the one from the top function. To fix the printing version, you could do something like this: function print_left_triangle(n) if n &gt; 0 disp(repmat('*', 1, n)); print_left_triangle(n-1); end end This yields: &gt;&gt; print_left_triangle(4) **** *** ** * So I didn't really solve your problem, but hopefully illustrated why you're only getting one line with your current solution.
This is probably the most common error to run into. It means that somewhere in your code you are trying to perform an operation outside of the indicies of an array. A simple general example of when this error could occur would be trying to access x(5) in the vector x=1:4 But without knowing what your data looks like its hard to be more specific. Try to figure out in which code line the problem occurs and go from there.
First, when you get an error message, you don't just get an error, you get a line the error occurs at. That tells you exactly which line is a problem. Second, debugging in MATLAB is really easy, and something everyone should learn. In the editor, click on the down arrow for "breakpoints" and click "stop on errors." Then, it will run your code until the exact time that the problem occurs and you can see what exactly is causing the problem. 
By recursion, what do you mean? Are you required to use a While loop or any other requirements?
I second this
Thanks a lot I will try this out!
&gt; However, I keep getting the error: "Index exceeds matrix dimensions". That's not the error you're getting. Post the *whole* error. You didn't post the data set, nobody here is going to download your data set even if you posted it, so nobody's going to run your script. The error tells you where the error is. Nobody here is going to read your whole script to try to figure out where your error is. 
do you need to record it directly into Matlab? I think this would be easier to record in something like audacity and then just import the wav file into matlab using audioread. 
I understand what you did and the mistakes I made. Unfortunately, this is getting harder if you want n number of stars being at the bottom of the output and 1 star at the top. It would be something with a print_left_triangle(n-1) at the same time increasing the number of stars in the repmat. I'm trying to think how to do this. If you have any clue feel free to post. Thanks again for everything! 
If you have a Creative card, its driver installs a recording device called "What U Hear", which I believe you can select from the list of devices returned by [audiodevinfo](https://www.mathworks.com/help/matlab/ref/audiodevinfo.html), via the "ID" parameter passed to audiorecorder. You may be able to find a similar software solution, but as I've been a SoundBlaster fanboy since age 9, I wouldn't know because I've never had to look.
Insert 4 spaces before each line: **** *** ** *
First and foremost, let's be clear that you're trying to minimize |Ax - b| where Ax is your model including input, and b is your output data. Whatever form this takes (in terms of parameters or multiple variables) is less important than understanding this formulation. Second, for optimization over parameters, when you call sir, you need to pass them with the call. There is no way for fminsearch to be aware of them otherwise, especially now, as they are defined inside the function itself.
Why would you expect any Matlab function to be as fast as directly accessing a C library? And why would you use bsxfun for this? I bet if you compared BLAS with the built-in Matlab multiplication operator, they'd be pretty close, considering Matlab uses BLAS or similar, under the hood. 
They do mean the built in operator when they say BLAS.
Oh. Well that's super confusing. 
you might want to reformate you code a bit. It is pretty difficult to read that stuff. 
Probably you have to replace an „^“ by „.^“. However these were clipped by reddits formatting....
 Some netizens say it should be changed in this way: (sin(alpha)).^2 ).^0.5 
Looks like your initial value isn't set properly. From what I'm reading, at t=0, y=1 should be your initial condition. For ode45() in matlab, the syntax is: sol = ode45(ODEFUN, [T0 TFinal], Y0,OPTIONS) So T0 should be 0, where you wrote 0.3. TFinal should probably be 0.31 or 0.36. With those values things will look closer to what you expect, although you may find that ode45 still doesn't like going to infinity. You can use `OPTIONS=odeset(...)` to change the tolerances of ode45 to get a more accurate result. (Use `help odeset` to get a list of allowable options - AbsTol, RelTol, and Refine may be particularly useful, but feel free to play with the other options too). You may notice that I specified an output variable for the ode45 function. You may find this helpful when trying to analyze the results.
The initial condition you're programming in is (incorrectly): y(0.3) =1 Instead, you should run ode45 with the bounds [0, 0.5]. Conceptually you definitely understand this problem. It's just a small mistake in your Matlab implementation. When I run it with the bounds corrected, I get an expected value for t*.
Probably you need R to be a matrix the same length of alpha. 
The fun thing about MATLAB is you can treat character arrays the same as you would any other array / vector / matrix, which lets you get away with neat logical indexing or vectorization tricks. But since you need to keep track of what's happening each time you call the triangle function, you'll also need to pass along the work done so far. This is similar but kinda different to the approach taken with the standard intro to recursion problems like factorial or Fibonacci. You can then add in some logic to initialize things to make the use of the function simpler for the end user. I'd try: function tri = triangle(n, tri) if nargin &lt; 2 tri = zeros(n); end if n == 1 tri(n, end - n + 1:end) = '*'; tri = char(tri); else tri(n, end - n + 1:end) = '*'; tri = triangle(n - 1, tri); end
That's still not the correct code. For example: (sin(alpha))2 )0.5 would error.
Ah okay. Thanks so much. I don't know why I assumed matlab would guess t0 should be 0 by default. You're the best &lt;3 
I can't get anything useful from this. Can you post the code you used to generate the plots? I've got a lot of questions, including how big the matrices are, how many times you repeated a trial, and how you handled (re-)initializing matrices.
Hey dude, thank you so much for your help. &lt;3 &lt;3 
Did you just ignore everybody telling you to fix your formatting? Nobody has any idea what you just said. 
Did you read the documentation for fprintf? There's a clearly documented feature for this. As you'd expect, it's in the section about "formatSpec". 
I'm not specifically familiar with the psych Toolbox, but I can tell you that there's fundamentally no way to create 12 bit data from 8 bit data. I mean you could scale it by 2^4, but that's not adding any new information. 
 beta= atan((sin(alpha)+0.5*(1-0.5^2 + (sin(alpha))^2 )^0.5 )/(1-0.5^2 )); Is the line containing your problem. Look on the documentation for the difference between .^ and ^
Have you learned about "if" and "else" statements in your class yet? Also, if you look at this piecewise function, you'll notice that it simply uses the values +3 and -3 as switch points. The function exists from negative infinity to positive infinity. You're simply expected to plot the value of the function from -5 to positive 5. That range will demonstrate that your implementation of the function correctly handles each case correctly.
The simplest way for most learners to do something like this is usually with 'if', 'elseif', and 'else' statements, but if you anticipate that you will need to do a lot of MATLAB, then you should read up on [logical indexing](https://www.mathworks.com/help/matlab/math/matrix-indexing.html#bq7egb6-1). As for the math, look up [piecewise functions](https://en.wikipedia.org/wiki/Piecewise)
OK
Sorry, it has been modified
OK
Some netizens say it should be changed in this way: (sin(alpha)).^2 ).^0.5 
Given the type of class this is probably for, I doubt that logical indexing is the intended (or desired) approach for this problem.
I'll still help if you need it and can't figure out the rest (after learning about piecewise functions of course).
Oh, yes sorry, I simply put some line breaks in his code to illustrate what good Reddit formatting would look like. I didn't attempt to resolve his issue.
I would do it like this; ( since the denumerator is constant, and the 3 on the top only gets a +6 when x is in [-3, 3] y = ( x &lt; -3 ) .* ( 3 ./ ( x.^2 - 9 ) ) + ... ( x == -3 ) .* ( 9 ) + ... ( ( x &gt; -3 ) &amp; ( x &lt; 3 ) ) .* ( 9 ./ ( x.^2 - 9 ) ) + ... ( x == 3 ) .* ( 9 ) + ... ( x &gt; -3 ) .* ( 3 ./ ( x.^2 - 9 ) ); The conditionals give you the same array format as x, but with 0's when conditions are not met and 1 when they are met. The dotted operators tell the program to do element-wise operations. Then plot and put axes labels. Run `help plot` for axis labels;
you just have to write it like that if N&gt;0 Triangle2(N-1); b=repmat('*',1,N); disp(b); end but I did not find, how to put it right
&gt; Why would you expect any Matlab function to be as fast as directly accessing a C library? As /u/silverbluephoenix said, I was referring to the built-in matrix multiplication (the function that actually implements this is called 'mtimes'). Though, this wouldnt matter when comparing to something like bsxfun, since bsxfun is a built-in. A built-in calls a pre-compiled library (probably in C, though it could be other non-matlab languages), and actually probably is faster then trying to manually call the same library from within Matlab (since calling a specific library natively in the binary is almost certainly faster than calling a function designed to handle general calls to external libraries). Note: I am using 'built-in' as it is defined by the [MATLAB documentation](https://www.mathworks.com/help/matlab/ref/builtin.html#bthvewb-5). Not all functions that ship with Matlab are built-ins. This is why I refer to it as BLAS, since Matlab is really just acting as a wrapper for BLAS (in particular, Intel's MKL). Fun fact: you can get the BLAS library name and version using an undocumented option for the 'version' command. This works with a few of the external libraries called by Matlab. version -blas version -lapack version -fftw 2017b on windows uses MKL v11.3.1 / LaPACK v3.5.0 / FFTW v3.3.3 &gt; I bet if you compared BLAS with the built-in Matlab multiplication operator, they'd be pretty close Id be interested to see an actual comparison, but I can make an educated guess: * if you call the same BLAS library that Matlab natively uses, using Matlab's builtin 'mtimes' function will be slightly faster, since it is a pre-compiled built-in BLAS wrapper which almost certainly has less overhead than what you could do in Matlab. The difference is probably between 'very small' and 'negligible' though. * if you use a different/newer, it will depend how well the BLAS package you use runs on your hardware. The cases that immediately come to mind where this might actually make a big difference are: a) switching to OpenBLAS/BLIS/ACML for AMD CPU's, and b) switching to a newer version of MKL for AVX-512 enabled CPU's. &gt; And why would you use bsxfun for this? The operation I was actually interested can be done by: z=sum(bsxfun(@times,X,Yt),2); where X and Yt are both matricies. This is problematic to do with matrix operations, since you end up needing diag(X*Y) % Y = Yt.' You could do this by looping over rows of X and columns of Y, e.g. for nn=1:N Z(nn,1)=X(nn,:)*Y(:,nn); end I wanted to see how much faster the equivalent BLAS operation would be, and testing a matrix-vector product with the 3 scenarios I used seemed to be the closest analog that actually had a BLAS operation.
You should use trig to fit a triangle to both sections of the arm, so you can calculate the location of the ‘joint’ and then the final location of the second section.
What do you mean with method? My problem with this is with plotting. How do you plot something with 2 inputs (2 angles) and 2 outputs (2 coordinates)? Using a 3d plot you can take x and y as your angle inputs. But then you can only plot one more value (x_out for example).don't know how to get y in there too Edit: The function will be looking like this (pseudo code for you to think and for me bc on mobile :D) Function [x y] = calcCoordniatesRobot(rho_1, rho_2) l_1 =...; l_2 =... ; x= l_1*cos(rho_1) + l_2*cos(rho_1 - rho_2); % for y accordingly end
I added the code to the original post. The original results were for a large long complex-valued matrix (1000 x 250000), but things seem pretty similar for anything larger than roughly [1000 x 1000]. I set up the code to make it very easy to change the size, and I posted some new images showing both real- and complex-valued square arrays between size [100x100] and [6000x6000]. Each individual sparsity uses 1 trial. The same arrays are used for all 12 tests at a given sparsity level. The matrices are cleared and randomly generated at the start of each sparsity level iteration, and then converted in-place between sparse and dense matrices as needed.
I added some new images to the original post showing both real- and complex-valued square arrays between size [100x100] and [6000x6000]. I also posted the code, which is setup to very easily change sizes (just input the desired size and number of sparsity levels to try, and it will automatically run everything and generate/save the output image). So, if you are curious about a specific range you can run more trials and see what things look like on your hardware instead of mine.
&gt; I can tell you that there's fundamentally no way to create 12 bit data from 8 bit data This isnt quite true. Consider an analagous problem where you srat out with a 12-bit image, downsample to 8-bit, and then try to get the 12-bit image back. Its true you will never *exact;y* recover the 12-bit image. But, by using information about what the image should look like you can compute an educated guess of what the 12-bit image lookeds like. Much like upconverting a video to a higher resolution - the up-converted image will never look quite as good as one that is natively generated at a higher resolution, BUT it will still typically look better than if you didnt attempt to upconvert it at all. Conceptually, you are replacing some of the lost information with general a priori information about what you think the true 12-bit image *should* look like. I.e., you are taking an educated guess at what information you lost when the image was downconverted. This isnt really my area of expertise, but a simple-ish idea for workflow that might work is: 1) scale RBG values by ( x * 2^(4) ) + 2^(3) 2) run an edge detection filter. 3) For each pixel, compute finite-difference directional derivatives up to some order N using only directions that do not cross an edge. Color should be varying smoothly here, meaning the derivatives should be small. Adjust the pixel's value by up to -8/+7 such that the derivitives in all non-edge-crossing directions are minimized. This should help smooth out any color blocking, which is one of the main benefits of using &gt;8-bit color to begin with. That said, this is untested and literally off the top of my head, so yymv.
This might not be the most elegant solution, but 1) execute the program either a) from outside of matlab, or b) from matlab but run it in the background by calling it with 'system' and adding '&amp;' 2) have matlab periodically (say, every 0.1 seconds) check a binary file with a pre-set name. Initialize this binary file with a single uint8(0) value. 3) when the program is ready to ask for input, have it write uint8(1) to the file and pause execution except to periodically re-read the specified binary file. 4) when matlab seen the value hanged to 1, request user input 5) after receiving user input, write the inputted characters to an ascii file with some pre-set name. After the write is finished, go back to the binary file aand overwirte with uint8(0) 6) when the program sees the binary file change back to uint8(0), read in the newly-written text from the ascii file. This should allow matlab and you program to run independently in completely separate shells while still being able to communicate, so long as the file names of the binary and ascii files as well as what the different binary file states indicate is hard-coded or read-into into the program without needing Matlab's direct intervention. That said I havent used Matlab for things like this much, so this is a bit of a guess. I think it should work though...
In the Matlab documentation there is a [tutorial for recording and playing audio](https://www.mathworks.com/help/matlab/import_export/record-and-play-audio.html) that would seem to do what you want, assuming you have a microphone. If you are trying to directly record the signal sent to the speaker idk if this will work, but this is probably still a good place to start.
For the record: literally 4 lines from the top of the original post I wrote Method 1: BLAS (standard matrix multiply) z=X*y; It shouldnt have been all that confusing...
I'm not sure if you are asking or telling. If that was meant as a question, then yes you're mostly correct. 
That notation is not unique to Matlab. That's just how matrix multiplication is written. 
well,All are numbers that I arrange them in tables.
Tables are incredibly useful. Their (relatively) recent addition has eliminated a lot of weaknesses in the language. Of course they'll cause trouble if you try to treat them like matrices. 
Maybe if you know what you are doing. Dont ever start with tables. This is what all my non prigrammer students want to do because excel . Just no .
Oh, yeah I can see that being a common beginners error. Students find all kinds of ways to be stupid though. It's not necessarily the languages fault. Like another common tendency - using symbolic variables for absolutely no reason. The symbolic toolbox is handy on occasion, just not when you use it for no reason. 
Do you find how to put it right?
thanks for replying (and reading my code apparently!) I think I wanted to define that y is a matrix and provide comments for the people that would be grading my work. y(1) %position y(2) %velocity ^think it was meant to be something like that,. 
first off, add 4 spaces to every line to format it as code. It makes it much easier to read and to copy/paste into matlab to actually run. This is super easy to do in matlab by selecting all the code (ctrl+a) and indenting everything by 1 tab (which defaults to 4 spaces). As far as how to fix the error: to me this seems *really* obvious... but, I have a lot of experience with Matlab and remember once upon a time stuff that seems really simple now wasnt so simple. So, since learning how to troubleshoot errorsa on your own is arguably the single most important matlab skill you can have, this is how I figured it out: 1) you have an error at the first call to "countour" 2) the error has to do with not being able to convert a table to a double 3) you have 2 tables in the 'contour' function call that is throwing the error: 'p' and 't' 4) you are instructed that you can perform the table--&gt; double conversion manually using 'table2array' proposed solution: use table2array to convert the tables so Matlab doesnt try to (and fail). [c,h]=contour(table2array(t),table2array(p),z,1.01,'-b','LineWidth',2); I ran a test with random data for 'z' and this seems to work on 2017b/windows10. 
Yeah, it would have if you didn't explicitly refer to the name of a C library. If you'd said you were using IMSL for image processing, I'd assume you were using IMSL in C, not the python wrapper in python. I took you at your word instead of assuming that you were referring to the library Matlab uses internally in order to sound more knowledgeable. 
I havent tried it, but it seems like [this](https://www.vb-audio.com/Cable/index.htm#DownloadCable) might do the trick. If you dont need this to work in real-time (i.e., dont mind recording direct from speakers, saving to a file, then loading the file in Matlab) -- [Audacity](http://www.audacityteam.org/) will definitely work. I suspect its possible to make this work for real-time asd well, but it doesant seem straightforward.
the best function of them all!
No joke, I saw the name once and had to look up what it did. Hilarious name and useful function.
Fixed: I didn't have another file saved in my directory called "Importfile." None of the stuff I posted was relevant at all.
This is how I'd start building the function. _____ clc i=1; n=0; while n&lt;1 n=round(input('How many rows do you want? -&gt;')); end while i&lt;=n if i==1 TriangleOutput=1; else Triangles=ones(1,i); TriangleOutput=vertcat(horzcat(zeros(i-1,1),TriangleOutput),Triangles); end i=i+1; end TriangleOutput
Code: %code by u/ansariddle function Simulation F = netir(); %Net Irradiance due to to Dust function F % F ( optical depth , Zenith Angle , Albedo ) % Ranges 0.1 - 6.0, 0-85, 0.1 - 0.4. Data: (Crisp, 2003) figure(1) [X,Y,Z] = meshgrid(linspace(0.1,6,100),linspace(0,90,100),.1); netIR = F(X, Y, Z); contourf(X,Y,netIR,100,'linestyle','none') xlabel('Optical Depth');ylabel('Zenith Angle');title('Atmospheric Loss') colorbar figure(2) nL = 0; Latr = -90:90; for L = Latr nL = nL + 1; for n = 1:669 D = 227883110400*(1+0.0934*cosd(360*(n-150)/669)); Isol = 3.846e26/(4*pi*D^2); decl = 25*sind(360*n/669); t = -3600:20:3600;t = t * 88775/3600/2; h = 2*pi*t/88775*180/pi; mu = sind(L)*sind(decl)+cosd(L)*cosd(decl)*cosd(h); mu(mu&lt;0) = 0; Sproj = Isol*mu; opticalDepth = 1-0.5*sind(360*n/669); zenith = acosd(mu); albedo = 0.25; S_t = F(repmat(opticalDepth,1,length(mu)) ,zenith ,repmat(albedo,1,length(mu)))/(1-albedo).*Sproj; if L == 30 &amp;&amp; (n==155 || n==334 || n == 500) plot(t/3600,S_t); axis([88775/3600/2*[-1 1] -50 500]); hold on end energy(n,nL) = trapz(t,S_t)*2.77778e-7; %kWh/m^2 end end title('Surface Irradiance Projection on ground at Latitude 30N') legend('Summer Solstice','Equinox','Winter Solsrice'); xlabel('Hours from Noon'); ylabel('W/m^2'); grid on hold off figure(3) E_gen = energy*28*0.2467; %kWh/m^2/day*28m^2*24.67% Efficiency [X,Y] = meshgrid(1:669,Latr); imagesc(1:669,Latr,E_gen'); set(gca,'Ydir','normal'); grid on; hold on [C, ch] = contour(X,Y,E_gen',[5:5:25],'color','k'); clabel(C,ch,'LabelSpacing',200) plot([354 397],[33 -4],'k.--'); text(354,33,' Start');text(397, -4, ' Destination') hold off colormap(hot(1024)); ch = colorbar; set(get(ch,'title'),'string','kWh') xlabel('Sols') ylabel('Latitude') title('Total Power Generated per Sol') figure(4) P_J = interp2(X,Y,E_gen',linspace(354,397,44),linspace(33,-4,44)); plot(1:44,P_J,'.-',1:44,0*(1:44)+18,'.-','linewidth',2) legend('Maximum Energy Generated per Sol','Maximum Energy Stored per Sol') axis([0 45 0 52]) title('Expected Power Generated on Each Journey Day') xlabel('Jouney Day'); ylabel('Total kWh produced per sol'); grid on; function F = netir() %Net irradiance due to dust Subroutine alb01 = [0.100 0.883 0.883 0.881 0.879 0.875 0.868 0.855 0.830 0.757 0.640 0.200 0.866 0.865 0.862 0.857 0.850 0.836 0.813 0.768 0.651 0.508 0.300 0.848 0.847 0.842 0.835 0.826 0.806 0.773 0.712 0.571 0.433 0.400 0.830 0.829 0.823 0.814 0.801 0.776 0.736 0.663 0.510 0.385 0.500 0.813 0.811 0.804 0.793 0.778 0.748 0.701 0.619 0.462 0.351 0.600 0.796 0.793 0.785 0.772 0.755 0.721 0.668 0.579 0.422 0.325 0.700 0.778 0.775 0.766 0.752 0.732 0.695 0.638 0.546 0.393 0.306 0.800 0.761 0.758 0.748 0.732 0.711 0.670 0.609 0.514 0.366 0.288 0.900 0.744 0.741 0.730 0.713 0.690 0.646 0.583 0.486 0.345 0.274 1.000 0.728 0.724 0.712 0.694 0.669 0.623 0.557 0.459 0.324 0.261 1.100 0.712 0.708 0.696 0.676 0.649 0.602 0.535 0.438 0.309 0.250 1.200 0.695 0.691 0.679 0.658 0.630 0.581 0.513 0.416 0.295 0.240 1.300 0.679 0.675 0.662 0.640 0.611 0.560 0.491 0.395 0.280 0.230 1.400 0.664 0.660 0.646 0.624 0.594 0.542 0.473 0.379 0.270 0.222 1.500 0.649 0.644 0.630 0.607 0.576 0.524 0.455 0.364 0.260 0.215 1.600 0.634 0.629 0.615 0.591 0.559 0.506 0.437 0.348 0.249 0.207 1.700 0.619 0.614 0.599 0.575 0.542 0.489 0.420 0.333 0.240 0.200 1.800 0.605 0.600 0.585 0.561 0.527 0.475 0.460 0.321 0.232 0.194 1.900 0.591 0.586 0.571 0.546 0.513 0.460 0.392 0.310 0.225 0.188 2.000 0.578 0.572 0.557 0.532 0.498 0.445 0.377 0.298 0.217 0.182 2.250 0.544 0.539 0.523 0.498 0.463 0.411 0.346 0.272 0.200 0.168 2.500 0.514 0.509 0.493 0.467 0.432 0.381 0.319 0.252 0.187 0.157 2.750 0.483 0.478 0.462 0.436 0.401 0.352 0.293 0.231 0.173 0.146 3.000 0.457 0.452 0.436 0.411 0.376 0.329 0.273 0.216 0.162 0.137 3.250 0.431 0.426 0.411 0.386 0.352 0.307 0.254 0.202 0.152 0.129 3.500 0.405 0.400 0.385 0.361 0.328 0.285 0.236 0.187 0.142 0.120 4.000 0.363 0.358 0.344 0.321 0.290 0.251 0.208 0.166 0.127 0.107 5.000 0.289 0.285 0.273 0.253 0.227 0.196 0.162 0.131 0.101 0.086 6.000 0.229 0.226 0.216 0.200 0.178 0.154 0.128 0.104 0.081 0.069]; alb02 = [0.100 0.594 0.593 0.592 0.591 0.588 0.583 0.575 0.558 0.509 0.430 0.200 0.586 0.585 0.583 0.580 0.576 0.566 0.551 0.520 0.441 0.344 0.300 0.578 0.577 0.574 0.569 0.562 0.549 0.527 0.485 0.389 0.295 0.400 0.569 0.567 0.564 0.557 0.549 0.532 0.504 0.454 0.350 0.264 0.500 0.560 0.558 0.553 0.546 0.535 0.515 0.483 0.426 0.318 0.242 0.600 0.550 0.548 0.543 0.534 0.522 0.498 0.462 0.401 0.292 0.225 0.700 0.540 0.538 0.532 0.522 0.509 0.483 0.443 0.379 0.273 0.213 0.800 0.531 0.528 0.522 0.511 0.496 0.467 0.425 0.358 0.256 0.202 0.900 0.521 0.518 0.511 0.499 0.483 0.452 0.408 0.341 0.242 0.193 1.000 0.511 0.509 0.501 0.488 0.470 0.438 0.392 0.323 0.228 0.184 1.100 0.501 0.499 0.490 0.476 0.458 0.424 0.377 0.309 0.219 0.177 1.200 0.492 0.489 0.480 0.465 0.446 0.411 0.363 0.295 0.209 0.171 1.300 0.482 0.479 0.469 0.454 0.433 0.398 0.349 0.281 0.200 0.164 1.400 0.472 0.469 0.459 0.444 0.422 0.386 0.337 0.271 0.193 0.159 1.500 0.463 0.460 0.450 0.433 0.411 0.374 0.325 0.260 0.186 0.154 1.600 0.453 0.450 0.440 0.423 0.400 0.363 0.313 0.250 0.180 0.149 1.700 0.444 0.440 0.430 0.413 0.389 0.352 0.302 0.240 0.173 0.144 1.800 0.435 0.431 0.421 0.403 0.379 0.342 0.292 0.232 0.168 0.140 1.900 0.426 0.422 0.411 0.394 0.370 0.332 0.283 0.224 0.163 0.136 2.000 0.417 0.413 0.402 0.384 0.360 0.322 0.273 0.217 0.158 0.133 2.250 0.395 0.391 0.380 0.362 0.336 0.299 0.252 0.199 0.147 0.124 2.500 0.375 0.371 0.360 0.341 0.316 0.279 0.234 0.185 0.138 0.116 2.750 0.354 0.350 0.339 0.320 0.295 0.259 0.216 0.171 0.128 0.108 3.000 0.336 0.332 0.321 0.303 0.277 0.243 0.202 0.161 0.121 0.102 3.250 0.319 0.315 0.304 0.285 0.261 0.288 0.189 0.151 0.114 0.096 3.500 0.301 0.297 0.286 0.268 0.244 0.212 0.176 0.141 0.107 0.091 4.000 0.271 0.267 0.257 0.240 0.217 0.189 0.157 0.125 0.096 0.082 5.000 0.219 0.216 0.207 0.192 0.173 0.149 0.124 0.101 0.078 0.066 6.000 0.176 0.173 0.166 0.154 0.137 0.119 0.099 0.081 0.063 0.054 ]; alb01 = reshape(alb01,[11 29]); alb02 = reshape(alb02,[11 29]); tau = repmat(alb01(1,:),10,1,2); zen = repmat([0:10:80 85]',1,29,2); irr = zen; irr(:,:,1) = alb01(2:end,:); irr(:,:,2) = alb02(2:end,:); alb = repmat(permute([.1 .4],[3 1 2]),10,29); P = [2 1 3]; X = permute(tau, P); Y = permute(zen, P); Z = permute(alb, P); V = permute(irr, P); F = griddedInterpolant(X,Y,Z,V); end end 
Would this be useful? https://www.mathworks.com/matlabcentral/fileexchange/5105-making-surface-plots-from-scatter-data You might want to take a look at the function the linked script uses (`delaunay`).
You need to extract their colormap and associate that with an appropriate range
Wait is this from the book of the movie? Because in the book there was a sandstorm and in the movie there wasn’t.
I have to ask, are you doing this because you want to practice extracting that information from an image? Or because you need the elevation data... because there are a hell of a lot easier ways to get that elevation data. 
I just need to make it into a surface with 3 dimensions to show the height, whatever gets me to that point lol
Yeah that’s pretty much what I needed, I appreciate it 
thanks. that works, kind of. It imports the Y axis data but not the X axis one. Am I doing something wrong here? another question, how i do seperate the vector inside the structure? or how do i call the vector within the structure to do analysis?
Book. Optical Depth is an approximation of average expected sandstorm throughout the day. Linear Profile is Assumed despite terrain becoming tougher later in journey.
You can't plot infinity. I'm actually not sure what happens in Matlab when you try to do this, but a blank graph sounds correct. Infinity is so big that no matter what number you try to plot relative to it, a finite number is always contained within the pixel at zero. And it's also so big that no matter how far on the negative X axis you were going, that fits within the first pixel too (unless you went to -infinity). You will need to substitute "a really big number" for infinity.
it should all be done in Pirate Ninjas..
Think about what you are trying to do. Matlab isn't magical. It can only do what you tell it to do. It cannot bend the rules of the universe to do something you could never do by hand. How would you do this by hand? How would you plot a function by hand out to x=infinity? Is that possible? 
I have never come across a function like this, but I agree with you that it seems very straightforward to recreate. Let us know if you get stuck, OP.
I can't give you a full answer at the moment, but remind me tomorrow. Have a look into multiplexers https://shop.pimoroni.com/products/sparkfun-multiplexer-breakout-8-channel-74hc4051 as I think they may be more suitable than shift registers. 
It would be easier to help if you could post your code. In lieu of that, have you vectorized your code? Preallocated arrays? Also, do you really need to do this routine one billion times? Cuz honestly, it’s a little unrealistic to expect to perform 1,000,000,000 runs of a code that itself has 10,000,000 loop iterations — that means you’re doing *something* at least 10,000,000,000,000,000 times... of course that’s gonna take a long time!
I suspect it might. I ran into a similar issue in which changing the axes and turning on and off hold didn’t change them back correctly
I'd normally expect vectorising this kind of calculation to make a big difference. You might like to try something like this: [m,n]=meshgrid(1:2:30, 1:30); m=m(:)'; n=n(:)'; % every combination of m &amp; n, as rows (since Q11 &amp;c. are columns) qmn = (8*q./(pi*b*m)).*sin(n*pi/2); dmn = ((pi^4).*(h.^3)./(12*b^4)).*((s^4)*Q11*(m.^4)+2*(s^2)*(Q12+2.*Q66)*((m.^2).*(n.^2))+Q22*(n.^4)); Sigxx_i = (qmn./dmn).*((s^2)*Q11*(m.^2)+Q12*(n.^2)).*sin(m*pi*0.5).*sin(n*pi*0.5); % et cetera. Some of this may be slightly wrong because it's not immediately clear what's a scalar &amp; what's a vector. % But I think your vectors are are columns, so we can multiply by the m &amp; n rows to get matrices, before adding. Sigxx = h*pi^2/(2*b^2) * sum(Sigxx_i(:)); Sigyy = h*pi^2/(2*b^2) * sum(Sigyy_i(:)); Sigzz = sum(Sigzz_i(:)); 
The way to solve this is to address the numerical instability in your merit function, not to try to invent complicated workarounds to well tested optimization algorithms. There are different solutions to numerical issues like this depending on their exact cause. For example, a common scenario is that you're multiplying a very large number by a very very small number, such that the outcome is itself very small. Such as exp(x) * erf(-x). The solution in this case is to apply logarithms so you transform the problem to exp(x + log(erf(-x))), thus avoiding the problematic multiplication. Note, I'm abusing notation here. In Matlab the error function ranges from -1 to positive 1. I'm using the definition that ranges from 0 to 1 to simplify my expressions. 
&gt;I thought about that, but the issue is that I don't *think* I'm doing anything inherently unstable. I'm basically summing a bunch of terms of the form trace(Q_k \ A_k) + log(det(Q_k)), where Q and A are 2x2 and there are roughly 10,000 terms. I can't say much about that from that description alone. This is the kind of thing you need to spend time with in the debugger to see where instabilities appear. &gt;I think the error is coming more from the fact that there are a lot of terms of disparate sizes. After all, I'm not losing that much precision: only about 20*eps. I could be mistaken, though. That alone shouldn't cause instability, unless there's something you left out. Summing large and small values doesn't cause trouble. Although subtracting a pair of large values to give a small value can cause problems. So can ill-conditioned matrix inversions. &gt;There is also another related issue: in certain regions the cost function doesn't vary at all because the gradient is smaller than eps (although nonzero). That's for sure not something that can be fixed by reconstructing the function. That can be solved by scaling. 
&gt;That alone shouldn't cause instability, unless there's something you left out. Summing large and small values doesn't cause trouble. Although subtracting a pair of large values to give a small value can cause problems. So can ill-conditioned matrix inversions. No ill-conditioned inversions, but those thousands of terms all have different signs, which means that the magnitude of the final result is much smaller than magnitude of the terms—similar to subtracting a pair of large values. I'm not sure what the alternative would be, though. &gt;That can be solved by scaling. Maybe I'm missing something, but how? I've already scaled my variable to be about size 1, but I don't see how pure scaling would solve this. AFAIK, no amount of scaling would allow a function like 1+(x/1e8)^2 to be well-scaled, because in addition to scaling you would have to subtract off the 1.
 &gt;No ill-conditioned inversions, but those thousands of terms all have different signs, which means that the magnitude of the final result is much smaller than magnitude of the terms—similar to subtracting a pair of large values. That's a classic numerical instability. I don't know the solution off the top of my head but some googling should help. &gt;I'm not sure what the alternative would be, though. **My cost function is what it is.** Mathematically? Yes. Computationally? Not necessarily. Is exp(x + log(erf(-x))) mathematically equal to exp(x) * erf(-x)? Yes, but computationally they are different expressions. One is unstable, the other is not. &gt;&gt;That can be solved by scaling. &gt; &gt;Maybe I'm missing something, but how? I've already scaled my variable to be about size 1, but I don't see how pure scaling would solve this. AFAIK, no amount of scaling would allow a function like 1+(x/1e8)^2 to be well-scaled, because in addition to scaling you would have to subtract off the 1. It depends. But I don't think it's relevant anymore. You identified your problem and it's not this. Although, scaling doesn't have to be multiplicative in this context. It only has to preserve the location of the minima. So, for example, you could minimize sqrt(1+(x/1e8)^2) and get the same value of x that minimizes 1+(x/1e8)^2. In practice it would be best implemented by completing the square to avoid ever calculating the term of order 1^-16 . 
Perhaps you forgot to close a set of parentheses on a line before the line in question? 
Here is a picture of the window, sorry for lowish quality https://imgur.com/gallery/4oir4
Right okay, where you say 3.13(2r/D) is the problem. In standard maths notation, you can multiply two numbers together by juxtaposition, i.e., ab means a times b. But in Matlab (and most computing environments) you need an asterisk. Fairly cryptic error message, I guess.
Look at the squiggly lines. They're not just decorative. 
Is this just a linear scaling? That's pretty trivial to do yourself. Arduino may implement it as a built-in function because A) it's often used in hardware programming, and B) there may be particularly efficient ways to implement it on the Arduino hardware that wouldn't be obtained by writing it in the obvious way and letting the compiler do its thing.
Yep, that worked. Thanks a lot. 
what exactly does this have to do in matlab? The order of operations in d could be wrong depending on the formatting. Your assignment of d contains an unbalanced parentheses.
interp1([fromLow, fromHigh],[toLow, toHigh], value)
+ Thanks, it turns out that the sum was indeed the problem. I had driven myself crazy looking at the multiplications/inverse/log, when it was a simple sum! Basically, it comes down to the fact that the precision can depend on what order Matlab decides to add things up, for example, sum([1e-16,1,-1])=0 while sum([1,-1,1e-16])=1e-16. There's a toolbox on the file exchange called [XSum](https://www.mathworks.com/matlabcentral/fileexchange/26800-xsum) that can do it more accurately using error compensation, at the cost of a little speed. I still have the problem with shallow minima, but that seems a little easier to solve.
That's fine, though you could instead say if abs(startingpoint) &gt; wall and not need to use the ||.
 Thank you! 
The math field you should look into is called (surprise) optimization. The typical process is to define a cost function that you want to optimize, take its derivative with rest to your design variables, set the derivative equal to zero, and finally solve for the design variables.
[Optimal Control](https://en.wikipedia.org/wiki/Optimal_control)
Consider implementing a form of the [Euler-Lagrange equation](https://en.wikipedia.org/wiki/Euler%E2%80%93Lagrange_equation).
The order of operations is definitely wrong. This is what OP coded: (X+7)^4/((X+1)*sqrt(X)) This is what s/he should have coded: (X+7)^(4/((X+1)*sqrt(X)))
As someone who did a master's thesis in trajectory optimization, I want to tell you that finding a truly "optimal" solution is doable, but difficult and requires some real research. Instead of going the 'fmincon' route with this problem, I would recommend studying real race lines. Make a heuristic solution. Find something that's close to optimal (i.e. not perfect), but good enough. As for the governing equations, if you're in 2D, here is what I recommend: Each trajectory must be discretized. This means that you will represent your continuous solution as a set of points. Use a point mass model. Each point along the trajectory will have 4 states: x position, y position, speed, and heading angle. You can enforce a constraint on heading angle rate using the centripetal force equation and geometry: `F = m*g*mu = (m*v^2)/r` `Omega_max = v/r` At a conceptual level, you want to minimize the time required to travel from point A to point B. `t = d/v` You'll generally want to travel at the highest speed possible while still having enough side force to allow your turns. 
For true optimization using fmincon, this would be my first thought on how to solve the problem: Assume fixed time step State: [x_1, y_1, v_1, psi_1, ..... x_n, y_n, v_n, psi_n] Control: v_i, psi_i Equality constraints: Enforce relationship between x_i, y_i, psi_i, and v_i `x_(i+1) = x_i + v_i * cos(psi_i)*t_step` `y_(i+1) = y_i + v_i * sin(psi_i)*t_step` Enforce initial and final position `x_1-x_a = 0` `y_1-y_a = 0` `v_1-v_a = 0` `psi_1-psi_a = 0` `x_n-x_b = 0` `y_n-y_b = 0` `v_n-v_b = 0` `psi_n-psi_b = 0` Inequality constraints: Enforce turn rate and acceleration limits v_(i+1) - v(i) &lt; max_accel `(psi_(i+1) - psi_i) / t_step &lt; omega_max_i` Cost function: sum up the total time required to travel between every point. `f = sum(d_i/v_i)` Where `d_i = sqrt((x_i-x_(i-1))^2 + (y_i-y_(i-1))^2)`
I think so...is that just where I convert it to linear form? 
There are many choices for finding optimal paths. If you have global knowledge of your system (which you do), then typically calculus of variations is applied in such a way that a minimal path is computed. This is classical optimal control as u/redditusername58 stated. A good book on this is Stengel's "Optimal Control". In particular you want to look at Chapter 3 and look up the Hamilton Jacobi Bellman equation. Some other methods include DLQR (this is a novel method Ive researched), Bezier curves, minimum snap/jerk/etc, polynomials, splines, and many many more! Here is a paper by Vijay Kumar that might interest you: http://www-personal.acfr.usyd.edu.au/spns/cdm/papers/Mellinger.pdf Since you are new to this topic I recommend something simple. I would assume the vehicle follows the Unicycle kinematics model with the constraint that the orientation of the car is tangent to its velocity. I would do a simple application of the HJB equation. These slides may also help: https://see.stanford.edu/materials/aiircs223a/handout6_Trajectory.pdf
That's pretty cool! I've never even thought about ways of modeling fireflies/oscillators all syncing up. Thanks for sharing!
There is a difference between "errors" and "warnings." Errors stop your program from running. They are indicated by red lines in the editor, and when you run your program, it produces red ink in the command window. Warnings are indicated by yellow lines in the editors, or yellow words when you run your program. They are not things which stop your program from running, but a guess from MATLAB that you're doing something inefficiently or have a mistake. Let's look at your warning: &gt; the variable “xxxxx” appears to change size for every loop iteration It also continues to say "consider pre-allocating your array." This means exactly what it says: the size of your variable (take, position for instance) changes every time you run your program. The first time through your loop position is length 1, then the next time it's length 2, etc. Every time you step through your loop, MATLAB has to destroy the variable and build a new, bigger variable to hold your data. What it tells you to do is pre-allocate your array. With `for` loops this is very easy- you know exactly how many steps you're going to take (`Nwalk` in your case). So, you can say: position = zeros(1,Nwalk); and now you have made `position` a `1xNwalk` array of zeros, and then you can just fill in each new value. This will run much, much faster (you might not notice on a program like this, as I bet it runs really fast anyway, but once you start doing bigger computations, this change will make very noticeable improvements. I once inherited code that didn't do this, and it took 3-4 minutes to execute. After pre-allocating my arrays, it changed to 5-6 seconds to execute). 
Thanks!
What is i equal too right before you call that function, because it is not defined in your function.
it is in the declared variable list, i=1
thats very helpful, thank you very much for your reply, ill give it a go and let you know how it turns oyut
thanks, the function seems to be running now, it is my understanding that the output variable of the function should be appearing in the base workspace? For some reason they are not perhaps im doing something wrong? my function is: function Y = lp2f(H2) %Dependent Variables M= 850; %Starting Parameters H(1)= 100000; %height T(1)= 0; %Time G(1)= (40*10^7)/(6371+H(1))^2 ; %Gravity U(1)= 49.2985140544473; %velocity i = 1; dT = 0.1; %Timestep ARs = 5; %Area Spacecraft %Drag Force for 0&lt;H&lt;100Km C = 0.7; %Drag Coefficient P(1)= (-H/71000)+1.4; %air density Fd(1) = 0.5*C*P*ARs*U^2; %Drag Force A(1) = ((M*G(i)) - (Fd(i)))/M; %acceleration with respect to gravity while H &gt;= H2 T(i+1) = T(i) + dT; G(i+1) =(40*10^7)/((6371+H(i))^2); P(i+1) = (-H(i)/71000)+1.4; %Air Density Fd(i+1) = 0.5*P(i)*ARs*U(i)^2; %Drag Force A(i+1) = ((M*G(i)) - (Fd(i)))/M; U(i+1)= U(i)+(A(i)*dT); S(i+1) = U(i)*dT+0.5*A(i)*dT^2; H(i+1)=H(i)-S(i); i=i+1; end end and my script is: clear lp2f(3000)
You're returning the variable `Y` which (unless I'm missing something) is never used in your function. 
This is a recently introduced feature, I don't know of any flag. If you want to make it safe you should use other functions that do the same thing (like bsxfun or repmat then addition).
that would be it haha, thank you very much for your help
Thanks for explaining that! I didn’t notice the yellow and red line differences. But makes sense. I ended up preallocating all of the one that gave me warnings. 
For the other warning, can I just ignore it since I’m just using the script to show I can call the function 
That's not inside your function. Also, i = j = sqrt(-1).
i think were talking about two different things here, i could be wrong but im assuming by 'i' you think i am referring to the complex number 'i'. But i am just using Euller's method where 'i' represents each iteration step
i is a predefined constant in Matlab. It's very bad practice to redefine it as a variable. 
The easiest method is is to use `parfor` and just write a function that manually slices your array. Say you wanted to divide it up in a 10x10 submatrix, then you could do something like this: [m,n] = size(A); Q = zeros(m,n); R = zeros(m,n); parfor ii = 1:m for jj = 1:n Aij = A(m*(i-1)/10 + 1, n(i-1)/10 + 1); [Qij, Rij] = qr(Aij); Q(m*(i-1)/10 + 1, n(i-1)/10 + 1) = Qij; R(m*(i-1)/10 + 1, n(i-1)/10 + 1) = Rij; end end (no promise I actually have my index slicing function working, but something like that). Just as a heads up, I'm not sure how big of an A matrix you have, but it will have to be a lot bigger for this to be much improvement. The overhead of setting up the parallel pool is pretty high. 
So you need an error vector, errors = zeros(1,size(AND_In,2)); And then you just assign the error appropriately inside the for loop, errors(i) = Output == AND_Out(i); And then you can just tally up the errors sumErrors = sum(errors); You need to explicate the logic you need to implement the XOR gate. Write it down in pseudocode or just sketch it out, and then let us know where you're getting stuck.
I'm not sure what the problem is here, getting the new/different file, or publishing the file, or making a standalone program? If you're having trouble getting the file, try `uigetfile`. If you're having trouble exporting to PDF, try the [FileExchange file "export_fig"](https://www.mathworks.com/matlabcentral/fileexchange/23629-export-fig), or you could [send commands to Excel to export as PDF](https://www.mathworks.com/matlabcentral/answers/52668-how-to-save-an-excel-sheet-as-pdf-through-matlab), or you could use a "PDF printer" as a print service and "print" your data that way. If you're having trouble making a standalone program, I think you need the ["Matlab Compiler"](https://www.mathworks.com/products/compiler.html) and the people running the program will need the Matlab runtime libraries. Not all Matlab functions are supported with the compiler, but [according to the site](https://www.mathworks.com/products/compiler/supported/compiler_support.html) it looks like "Most command line functionality [of the MATLAB Report Generator is support], including: **Report generation through `report`, Document conversion through `rptconvert`.** Again, it's not clear to me where your problem is, but hopefully this helps. 
breath of fresh air from all the questions
Thanks for all the replies everyone! I was able to complete my code.
Essentially I have 3 programs. One that is a GUI that stores info on a text doc. Second one runs the actual report on the Excel doc. Third one publishes that report to .pdf and emails it. However, as edited in the OP, I found that publishing to .pdf can't be used in the standalone applications, so I will need to rethink my strategy. 
First, you have an array of x y data given to you. You need to get that into MATLAB somehow. Second, you are given a function, and you can visualise that as some kind of curve in the xy plane. Using the given data, recreate that curve in a MATLAB plot. Third, do you understand the trapezoidal rule? You need to approximate the area under the curve you've made with a bunch of shapes that have a sloping top edge. There are plenty of resources the help with the execution of the trapezoidal rule so I won't go into it here. Update with your results!
If it helps, you can replace y and X with n and L. (Not sure which one with which, but if you are integrated wrt L, I think L will be the x axis. You just need to figure out what L is!
No problem! When you make some good progress, keep my updated. I am curious how controlling IO pins with matlab and shift registers will turn out.
Which aspect are you stuck on? The calculations you need to do, or how to write it in matlab? My general advice is to approach it like this: write a for loop that iterates through the vector of X values, calculates a t value for each X (gotta use good ol' Pythagorean theorem), and creates a t vector to store each t value corresponding to each X value.
Looks like your main problem is your equation for D(X). It should be D = sqrt((10000 - X)\^2 + (3000\^2)) Do you see why? 
mwahaha! I do see why. I knew I had to have the two distances increasing and decreasing simultaneously but just was running into a mental block. Figured it all out, thank you!
I think that the [t' J'] and ['t a'] are meant to be time varying constants. They should not be represented as 18x2 matrices, but rather as interpolated single values. This can for example be achieved using a lookup table.
You need to index your vector. For instance, if you wanted to subtract 1 from the first element you could write `H(1) = H(1) - 1`. A nice thing about MATLAB is you don't need to know the length of a vector to operate on the end, you can use the index `end`: `H(end) = H(end) - 1`
great thank you so much, thats exactly what i was looking for
&gt; I found that publishing to .pdf can't be used in the standalone applications Where did you read this? I gave you a number of ways to publish to PDF.
You might be interested in the [curve fitting toolbox](https://www.mathworks.com/products/curvefitting.html).
As the error suggests, your input argument, 'tspan', should contain the two endpoints. You're only providing 1 point. If you'd like to solve it incrementally, try it with t0 = [t, t + h] instead. See the [documentation](https://www.mathworks.com/help/matlab/ref/ode45.html#inputarg_tspan) for all requirements for 'tspan'.
That is what I've been using and is what sparked the idea of using a custom equation, however, I'm looking to find this custom equation from the set of coordinates.
how can there be two end points for t though?
Exactly. A start and an end. That's two numbers. How many endpoints does a line segment have? 
My program currently uses the “publish” function, which runs a .m file and then publishes the output to .pdf. The link in my edit specifically and explicitly says “publish” is not supported for standalone applications. So I will have to redo my programs and use the methods you posted. Thanks.
yeah obviously, but what I am trying to achieve with this code is for the time step to auto adjust to be lower then in the previous iteration, while still being in the time zone between 0 and a 100. This is the reason for a nested for loop. If my start point is t and endpoint is t+h but the conditions aren't met then the code will keep on being calculated to infinity, which is not the goal here. Plus by your logic I already had two end points. Bare in mind if the loops are removed then it works sans the error and plots the line. Not the one I need, but a line nonetheless.
Have you read the documentation ode45? What makes you think your code would do what you're expecting? 
You want to use the transpose command
In each iteration of your loop over t, you are providing a single t value (from the sequence t = {0, h, 2h, 3h, ..., 100}) to ode45. This is not an acceptable input to ode45, as the documentation I linked tells you, and as your error message indicates. If you'd like to test this, modify your inner loop code to: count = 0; for t = [0:h:100] count = count + 1; fprintf('t value %d = %g\n', count, t) %[t,y] = ode45(@my_function, t, y0); %if norm(y(t,1:2) - r1) &gt;= rad1 &amp;&amp; norm(y(t,1:2) - r2) &gt;= rad2; %plot(y(t,1), y(t,2)) %hold on %else %k = k + 0.001; %end end This will print out each iteration's t value to the command window to demonstrate that it's a single, scalar number. This is not even getting into the absurdity of defining a loop over a single h value... You need to brush up on [loops](https://www.mathworks.com/help/matlab/matlab_prog/loop-control-statements.html) and the [colon operator](https://www.mathworks.com/help/matlab/ref/colon.html), and take a long hard look at the ode45 documentation I linked you. There is most definitely a way to do what you're trying to do, but you'll never get there without improving your current understanding, which /u/FrickinLazerBeams and I are trying to help you do.
Did you look at the documentation? Transpose, reshape, or (:) 
You can fit parameters to make an equation match your data. You cannot have the data tell you the form of the function to use. That is fundamentally impossible, not some limitation of Matlab. If all you're looking for is something that visually looks like your data, you can use whatever sort of equation you like. A large number of sinusoids, or a high order polynomial fit, will be able to represent pretty much any surface. Otherwise, fitting is normally done to obtain fit parameters with some meaning. For example, you can fit some data from a process that you know has an exponential decay behavior, in order to find the time constant of the decay. In this case you have some pre-existing knowledge of the sort of function that you should fit. If you don't have some prior expectation of the form of the solution, then you're in the domain of research science, like trying to guess at the way gravitational attraction falls off with distance before Newton published his theory of gravitation. In other words, all you can do is guess and hope. 
&gt; When you write [1 2 0 5] == 0 you don't just get "true" or "false" you get "[false false true false]" right? And that's the desired behavior. So by the same logic [ ] == 0 isn't asking "is the empty set equal to zero" but "is each element in this set equal to zero?" and since there are no elements in the set, you get no elements returned. Framed this way it makes sense, thanks. It's also what the documentation states, which I haven't actually bothered to look at until now. I was just assuming that a test for equality will always return a logical, and I still think that would be somewhat useful. But I guess that would lead to undesired behaviour in some cases. Now for the other one I actually did read the documentation and knew it behaves as stated, hence I was just saying it's unintuitive (not that my intuition should be important to anyone else ;)). Kinda funny that after years of programming in Matlab something so basic threw me off. Learning never stops, I suppose. 
Then perhaps I misunderstood you, I do know how for loop works, whether I implemented it wrong is a different question. I have never worked in MATLAB before to a such level. I just wanted my mistakes pointed out and explained. 
Well I have since modified the code, is it better? h=0.01; c1=0; t0 = 0; tf = 10; while tf&lt;100 t=[t0, tf]; n=length(t); [t,y] = ode45(@my_function, t, y0); c1= c1+1 for i=1:n if (norm(y(i,1:2) - r1) &gt;= rad1) &amp;&amp; (norm(y(i,1:2) - r2) &gt;= rad2) plot(y(i,1), y(i,2)) t0 = tf+h; tf = tf + 10; i = i + 1; elseif (norm(y(i,1:2) - r1) - rad1)&lt;1e-5 break elseif (norm(y(i,1:2) - r2) - rad2)&lt;1e-5 break else h = h - 0.001; end end end
Hiya there &amp; thanks for the reply it really helped in calculating the error. I took a shot at implementing the XOR gate &amp; I'm not sure that I'm correct. If you have any suggestions then it will be much appreciated: XOR_In = [ [0;0], [1;0] , [0;1], [1;1]] XOR_Out = [0 1 1 0]; Weight = randn(1,2) Weight2 = randn(1,2) bias = 0.65 for i = 1:4 for j = 1:4 vec = XOR_In(1:2,j); B = Weight*vec+bias end C = B*Weight2+bias if(C &gt; 0.5) Output = 1 else Output = 0 end end
We didn't learn about how to do this in class. The documentation says to load the handel sound file and then add 1khz, 2 khz, and 3 khz frequencies to it to cause a distortion and then from there use a notch filter to filter out those frequencies and get the original sound back. As for the last question? No idea, I get the error when I write the code like this: load handel; y = y + cos(1khz) + cos(2khz) + cos(3khz); sound(y, Fs); 
&gt; I was just assuming that a test for equality will always return a logical I mean, it kind of does. The return is a 0x0 empty logical. If you say `x = [] == 0` and then `islogical(x)` you get true back. 
It's pretty easy in Matlab to inspect your variables after an error to see what went wrong. You should try it. You don't appear to understand for loops at all. Again, have you read the documentation which has been linked for you? You seem to be ignoring it. 
2.....so then how do I make it work?
Let's say you stored all those data points in a matrix A. B = A' would convert rows (in A) into columns and store it in B. 
I would use input(sprintf('Enter row... %d', i));
Yes, you have removed the "iteration" over a single h value, and you have given proper tspan input to the ode45 solver. I would consider that better in those two regards. Now let's look at the logic of this thing. I will point out what your program is doing, and you can hopefully see what is different from what you'd expect. 1. Define initialization of time variables (assuming the r's and y0 are still above, which is fine) 2. Start iterating for as many iterations as it takes to get tf to 100 or beyond (I assume you're trying to plot the resulting function 'y' piecewise for t &lt; 100?) 3. Set t to a vector containing a start and end point 4. Store the [length](https://www.mathworks.com/help/matlab/ref/length.html) of this vector (which will forever and always be 2) 5. Solve the ODE for the given interval of time and initial condition 6. Begin two (and always two) iterations... starts to get muddy here 7. Determine if both of your two conditions are met: 1. If yes, plot, then update start and end times (asymmetrically for some reason, introducing discontinuity, and ONLY in this case), but *leave y0 alone*... then increase iteration count, which will skip the second loop... why?? 2. If only one of the two conditions is met, break the **innermost** loop with no change to your time vector... why?? 3. If neither condition is met, decrement h by 0.001, but do not use it to update anything... why?? 8. Repeat from 7 but only if neither condition was met, and only one more try at most, which since nothing was updated, will not produce any different result than the first time... why?? 9. Repeat from 3, with potentially no changes in the failing case... why?? It can be handy sometimes to diagram this stuff on paper to help you see how the flow goes. You can also insert [breakpoints](https://www.mathworks.com/help/matlab/matlab_prog/set-breakpoints.html), and view the workspace variables to see how your indices are updating, or even use that handy [fprintf command](https://www.mathworks.com/help/matlab/ref/fprintf.html) to have it output things to the command window (think console.log in other C-like languages).
Nobody will do your work for you. The way to get the results you want is to understand what the code does and how to do what you want. What do you want the value of n to be? 
Thanks, that does seem like a nice work around but I don't think it will work for my script. I've created a choice reaction time test where I reading in a analog signal that a person can control. Basically, I have a loop that starts: tic while toc &lt; 300 %%BUNCH OF STUFF%% end In this script I display annotations so I the subject knows if they have to squeeze the left or right force transducer. I want to pause the timer if after each display the subject doesn't let go of the force transducer. Once their display is '0' then I want to commence the script. If I did it the way you both suggested I wouldn't be able to assign tic the sum value to that he script starts where it left off. Hope that makes sense. 
Tic/toc is really the wrong tool for this. You would be better off using now(). 
So I looked into it and I'm still not sure how to use it. Basically, I have a script that is in a while loop for 300 seconds. During that 300 seconds I have subjects responding to objects - i'm capturing the time the object display and the time the subject reaches a target. The object is display at pseudo random times (pre-defined random). How can I encapsulate now() in order to capture the timing of everything as well as be able to pause when then subject is not in a ready state (defined when subject input is not '0').
I think they're suggesting you write your own custom function or class. One that gets the time and subtracts at the appropriate time to see how much time has passed. This shouldn't be too hard, but it's gonna be kinda verbose. 
Get rid of the inner for loop and use i to index. You only need to loop across examples once (it's also not doing what you want it to). Other than that, you also need a nonlinearity after the first layer (e.g. a threshold); if not it's just the same your previous example. &gt; "Implement a random training regime to adjust the weights in a randomly initialised network, such that it can be taught any one of the linearly separable logical operations." I don't know what a random training regime is in this case (presumably covered in your course), but basically it's telling you to build a training regime that allows you to adjust weights in a one-layer network so that it can learn AND and OR operations. 
You can't pause it exactly, but you can run multiple timers, so you could start a second stopwatch while you want it to be paused and use the time on the second stopwatch as a correction to the first. Say, for example, you want to loop through a bunch of tests, but you need to clear/initialize variables between loops, and you don't want that time to count against your trial times: timerCorrection = 0; outerTimer = tic; while &lt;your test condition&gt; innerTimer = tic; &lt;setup your variables&gt; timerCorrection = timerCorrection + toc(innerTimer); &lt;do your loop stuff&gt; end fprintf('Loop stuff took %.2f seconds\n', toc(outerTimer)-timerCorrection); 
Do you have access to and/or are allowed to use Matlab's partial differential equation toolbox? For a novice coder, working through some of those examples MAY be the best place to start (assuming some knowledge of Matlab): https://www.mathworks.com/products/pde.html Though I think they mostly use explicit methods when actually solving the equations so your instructor might be unimpressed... However, if you check for stability and make your time step small enough, brute-forcing things shouldn't create any issues. For implicit methods, if you look at Euler's Backward or Implicit method, Crank-Nicholson, or Douglas-Rachford ADI, you can find ways to set up a system of equations to solve directly using Matlab. With implicit methods since you're effectively solving giant linear algebra problems, you can either code this completely yourself, or even better, take a look at the documentation for sparse vs. full matrices and the mldivide (\) function.
Anything between ' ' is a character array, and the first input to input is text, like in a character array. What you're sending is three parameters, a character array, another one, and another one. If you put [ ] around your ' ' to make it one whole array instead of three input parameters, it should work.
You want to do &lt;thing&gt; in Matlab, and don't provide any information about what steps are involved in doing &lt;thing&gt;. You linked six years of data, and a bunch of tables and plots that have zero context. If you want to do &lt;thing&gt; in Matlab, you have to have a list of steps or whatever required to do &lt;thing&gt;. This is a *Matlab* sub, not an *econometrics* sub. If you don't know what steps are required to do &lt;thing&gt; then try an econometrics sub. If you *do* know what steps are required, then wow please post that instead of a the images because those images are next to useless. Also, if you know what steps are required, the try just typing those steps in Matlab and see what you get. *Then*, if you have a problem, come here and **tell us what the problem you're having is** and we can help.
wLeft, wLeftMag, wRight, wRightMag are vectors, right?
hehe, the input to line (and plot) is (X,Y), which you do correctly for all but the last line. I could give you the answer but its homework. 
Shit.
haha, feel bad so that you may remember, but not to bad. What you're experiencing now is part of the normal learning curve and we've all done shit like this. 
I don't think any such flag exists, because the implicit expansion is deeply coupled in internal MATLAB code for basic operations - so having such a flag and checking it every time will probably have performance issues. It would be great if we could disable it or at least get a warning that it's being done, but mathworks seems to be set in its decision to favour performance over debuggability or compatibility (their argument is that the issue doesn't really crop up as often as to be worth the slowdown). I don't think any simple solution exists against unintentionally doing such an operation in your code. You *could* create a debug-time-object that redefines the operators to do a dimensions check before doing the operation, and define all your matrices to be objects of this class... but that's probably too much effort for what in this case is too little gain. 
I don't know how to do this in Matlab so that is why I posted here. I need to import my excel data in the Matlab, select Garch model I want to use and it should show me results similar to those in the pictures I provided. I asked here because I wanted to know if anyone have experience with Garch models in Matlab. My guess would be that those guys would know how to help me.
&gt; Garch models in Matlab Did you try looking at the documentation? The first result in Google for me when I search [](https://www.google.com/search?q=Garch+models+in+Matlab) is: https://www.mathworks.com/discovery/garch-models.html That page has "Examples and How To" about Garch models in general, then also [links to the documentation for the `garch` model](https://www.mathworks.com/help/econ/garch-model.html), which has *even more* examples. 
After implementing your advice I ran into a roadblock that was pretty stupid (didn't realize the power rail didn't connect all the way through my breadboard). After fixing that it worked! I had to make sure to add resistors to the outputs to avoid burning out anything and I tweaked the for loop so it ran backwards so that my first array element matched the first output in the shift register. Also I converted the dataArray to logical type data before entering it but not sure if this would have made a difference. It works though!
Of course I tried that, but since I'm not very proficient in MatLab I posted here hoping for a more precise answer.
You need to use [array operations](https://www.mathworks.com/help/matlab/matlab_prog/array-vs-matrix-operations.html) (component-wise) on any multiplications or divisions between vectors, otherwise it will perform vector multiplication. There is exactly one place where this is necessary but omitted in your expression. I see you're familiar with it already from the array exponentiation! :)
You know there is built-in fft code that is extremely efficient, right? 
So, what part are you having trouble with? Specifically? *What are you trying to* ***do***? &gt; I have to use M-GARCH-DCC model To do *what*? Again - [here is the documentation.](https://www.mathworks.com/help/econ/garch-model.html) Look under "**Functions**" - * Create Model * Fit Model to Data * Generate Monte Carlo Simulations * Generate Minimum Mean Square Error Forecasts Those give you links to the functions to do each of those tasks. Under the "**Functions**" section is "**Examples and How To**," which gives multiple examples for each bullet point above. *What have you tried so far, and what didn't work?* 
Used transpose and the then (:) Worked perfectly for what I needed. The documentation is very helpful. Thanks for responding.
Anyone have any help?
Regarding exceeding the maximum array size, I think something's gone wrong. With 300, this is my command and the resulting array size: K&gt;&gt; [m_Strike497,n_Strike497]=meshgrid(1:2:300, 1:300); K&gt;&gt; size(m_Strike497) ans = 300 150 If you've run out of memory, I wonder whether somehow you've accidentally asked for a 300 dimensional array? Regarding the other issue, that's fine if it's working quickly enough. You could certainly vectorise over q as well, via [m,n,q]=meshgrid(1:2:30, 1:30, 0:0.00003:0.0035); m=m(:)'; n=n(:)'; q=q(:)'; (or, for that matter, use higher dimensional arrays, but this way it's a simpler change to the code you have). I can't promise it'll be much faster, but it might be. Vectorising is definitely the Right Way™ to do these sorts of calculations in Matlab.
picking out the squares is probably going to be the hard part. i'd recommend googling "matlab identify object image" to see if anything comes up in the Image Processing or Neural Network toolboxes/areas. assuming you have the squares identified, i can think of a few approaches that may work assuming you process the image to be a matrix of 0s and 1s: -edge detection algorithm/something similar that looks at the pixel values and counts the number of groupings of 1 -using k-means on the (row,column) values with a 1. The number of clusters you input should be really high, but the intent would be that the return of k-means would be the centers of each polka dot. This is probably not an efficient way of doing it, but it should work...
what dont you get. the problem is laid out for you. you need to compute V over a grid of r and theta. just plug in the values (with correct units) into the equations and you're there. then use whatever contour plotting function you desire.
the dimensions don't agree for r and theta so they are not converting to x,y 
use 'datevec' on the first column to ID the year and month of each row, then comb through the unique year-month combos and pull the daily rates. once that's done, do the appropriate math to convert the daily rates to a monthly one if they are changing every day. if not, just keep one of the values. 
I kind of already cleared that round. From what I could gather, this would be a more technical round, with the actual team managers speaking to me. So I was wondering what kind of programming questions I could expect. 
Great! I'll try this, thank you very much
Just curious, what salary are they offering?
I just interviewed at Mathworks last week. I gave a 35-minute presentation to open the day and then had 4 individual interviews. For preparation, they provided guidance on what to do for the presentation. From there, it was all drawing on my recent corporate experience. They are polite, but rigorous!
How to change dynamic range of image
If I'm understanding your question correctly, if you reach your hit condition, you want to start over from the last point you were safe? If so, I might suggest wrapping the entire thing in a while loop and setting a flag, using a [logical condition](https://www.mathworks.com/help/matlab/ref/not.html): flag = false; &lt;------- add this while ~flag &lt;------- add this for time = t0:dT:tf &lt;your existing time loop code&gt; end if ihit == 0 plot(y(:,1), y(:,2)); yold = y(end,:); else t0 = tcol1(i-1); tf = tcol2(i) dT = dT - 0.001 break &lt;------- add this end end &lt;------- add this Do you see why? I have left one important step out for you to think on. Note that this may not be the most elegant solution, but it's relatively simple and achieves what I think you've asked for. I notice that you're still giving the ode45 solver the same two static values... why?? You have the variable 'time'... why not use it?? Also, something to think about: how much of the plot (time-wise) do you want to see at the successful completion of the program? Everyone starts at zero and goes from there. Being new is not a problem. Being lazy is. Keep working at it, asking questions, and reading the documentation, and you will be competent before you know it. :)
Bring up their documentation and show them how awful it is and how you would make it better.
It’s correct, are you familiar with scientific notation?
Not really, I'm a programmer type guy. And I need it for my Homework.
Look up the Wikipedia article for Scientific Notation and read the section on E-notation.
Look up the Wikipedia article for Scientific Notation and read the section on E-notation.
Matlab isn't the ideal tool for this, but you should be able to do it with strrep. Then fprintf to write to a new file. 
You're using the `fprintf` formatting spec `%d`, when you probably want `%f`. Honestly, I'm surprised that `%d` gives you that much - per their [documentation](https://www.mathworks.com/help/matlab/ref/fprintf.html#inputarg_formatSpec), `%d` and `%i` are supposed to be *integer* outputs. For scientific notation, which is what you're getting, it's `%e`, and for *fixed point notation*, which is probably what you want, you use `%f`. 
Yeah I see what I got wrong... Thatnks for the help.
1; I didn't noticed it 2; Because the last time I had to read this notation was ~1 - 1.5 years ago.
Look up the fopen and fread commands.
First off, you didn't tell us what you tried. How do we know what you did wrong unless we know what you tried? Also, there is a bunch of text in your csv. Did you tell MATLAB how you want it to handle text? Because if not, what do you expect it to do? Honestly, as small as your data set is, you'd do ok just copy and pasting it into MALTAB's variable editor. Define an empty variable A = []; Then, open up `A` and copy and paste from Excel the data you want. 
Thank you for your answer. I tried the csvread function and readtable, I also tried to create a function but I always get "NaN". I did the matlab recommendations for the readtable function when I got the error but it says that there is an error around the line 650 (where a new table starts) and I don't know how to import this file up to the line 650
Hi, thanks for the reply and I appreciate the time you took to answer. However, the masked image just comes up with a blue border now. I have attached the images to this reply. Original: https://i.stack.imgur.com/Y1a6O.jpg Binary mask: https://i.stack.imgur.com/4Oitn.png maskedImage: https://imgur.com/a/Ci3i4 Thanks in advance
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/CX8XbMh.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dv1j9vw) 
Why don't you just ask your question here? Show us the question and what you have so far, and you can get help from lots of people instead of just one. 
Or the [discord](https://discord.gg/bBMbNCT) channel in the sidebar!
Good question, I'd like to know the answer to this as well. 
 Same, keep us posted on your findings s please
I'm with /u/Weed_O_Whirler. A little more information would be helpful. Do you just need the first table? Just the second? do you need both? In any event, the third example [here](https://www.mathworks.com/help/matlab/ref/csvread.html#btrbcf4-1) is a really good place to start. If that doesn't work, come back with more information about what you're trying to do.
I solved it after editing your code a bit, (removing double from original), thank you!
&gt;1. I know how to plot one function of y, with a set of x, but I don't know how to add two functions into one graph! doc hold &gt;2. How do I check two specific points on the graph using matlab? Not sure what you mean. You can use the "flag" tool to click on points in a plot to see their position, if that's what you mean. It's in the toolbar above the plot. &gt;3. How to use matlab to determine phase relations for i(t) and v(t) using matlab, (I can solve this by hand but I am told to do this using matlab) I can express "w" as 2&lt;w&lt;6. &gt; &gt;Example : v(t) = 12sin(wt+60°) &gt; &gt;I(t)=30sin(wt-35°) &gt; &gt;I know I have to change the degrees to radians since matlab doesn't read degrees but "wt" is where I have a problem with, do I make wt=x ? It's very unclear what you're asking. What does it mean to "determine phase relations"? Matlab works just fine with degrees. You can set wt to x if you like, it doesn't really make a difference. Are you trying to plot as a function of t? 
1.Doc hold? Is that a command? So would I do something like this? X=linspace(-3,3,200) Y1=x.^2 Y2=x.^3 Plot(x,y1,y2) 2.flag tool ? Awesome I'll try that 3. Think they want me to compare their phase angle 
That's exactly what I'd expect. You're trying to extract everything between the second and second to last elements of a single-element vector. What's the second item on a list with one item? 
Ah that does appear to be one number. Definitely just tired then. Thank you for helping me realize that was a single number!
boundary is basically a convenience function for alphaShape: https://www.mathworks.com/help/matlab/ref/alphashape.html I believe alphaShape uses a delaunay triangulation of the points, and the shrink factor effectively specifies a threshold that allows some outer triangles to be discarded, tightening the boundary.
couldn't agree more
MATLAB can only use one GPU at a time (which you can select using the [gpuDevice](https://www.mathworks.com/help/distcomp/gpudevice.html?s_tid=gn_loc_drop) function. If you get a GPU with more memory than your current one, then it could help. Otherwise, getting a 2nd GPU with the same amount of memory as your current one will not help.
Prepare to eat bad cafe food if you get the job. ಠ_ಠ
Are you logged in? When I click the link, theres some dialog on the bottom right that allows for me to fill in some details and when I submit, presumably I will be given a download link.
Contrary to what's posted below, you can use more than one GPU and they are "stackable". You can start a parallel pool accessing all your GPU's by parpool('local', gpuDeviceCount);
Beautiful image and data from http://www.geotraces.org/ Not entirely sure it's originally matlab, but I feel like there's a way of doing this with the slice function? 
Simulink confuses me, any idea on how to go about this? Help would be appreciated.
Hi, Thank you for your help and sorry for the lack of information. I only want the first table. Actually I managed to solve the issue using csvread and import the first table (row 4 to row 654) using: Data = csvread('F-F_Research_Data_5_Factors_2x3.CSV',4,0,[4,0,654,6]) But i'm curious, is there a way to import it using readtable? maybe by modifying the import functions The error is with the change in table: https://ibb.co/bXnhNn 
Nice! I've used ODV a few times, but wasn't aware of any feature where you can add cross sections to bathymetry. Was it an add-on? Cheers
I don't think I'm entirely clear on your subject material, and I rarely use Simulink, so I'm afraid I can't help directly. However, I can definitely point you at some resources I've encountered over the years: * MathWorks has a [series of videos](https://www.mathworks.com/products/simulink/getting-started.html) introducing Simulink to help you get up to speed * University of Michigan has an [absolutely incredible website](http://ctms.engin.umich.edu/CTMS/index.php?aux=Basics_Simulink) for helping students with Simulink * Swarthmore College has a [site containing info on modeling systems](http://lpsa.swarthmore.edu/), and some very good fundamentals review I suggest using some or all of the above to get started, then come back if you get stuck. It's much easier to help with a specific issue than something so general.
Just throwing in some ideas: * try removing the tablet. part of the URL (so that that part of the URL becomes trial.html) and pressing enter. If you're already logged in, it should hopefully use those cookies and load the right page. * Check if you have browser extensions like NoScript or adblockers, which could be overenthusiastically blocking the Download button based on some internal heuristic. * if neither of those work, you can try a 'View Source' on the page and try to see what the download link is supposed to be. Mathworks' pages don't usually use those jazzy new JavaScript frameworks that obscure everything, so it *might* turn out to be a quick find in the source.
Hi Guys, I work at LabJack but unfortunately am not an engineer. We have a great team of engineers willing and ready to provide support. https://labjack.com/support We also have 15 years of forums https://labjack.com/forums answering all types of questions. We have hundreds of example scripts in may languages and free software. We also just INCREASED our warranty to 5 years! Use promocode Rockies for 10% off your next order! Thanks for discussing our products!
Screenshots that cover the whole page: http://www.mediafire.com/view/ynyl3bogidll64i/Screenshot%20%28327%29.png http://www.mediafire.com/file/6se29u84bobj1fo/Screenshot%20%28326%29.png
To be honest, unless this was given as a Matlab problem specifically, I don't know why you would want to use Matlab's symbolic differentiation. It is literally faster to solve by hand.
Fitting surfaces to point clouds is a tricky problem, in general. I'd suggest not trying to find a general solution. If your part is shaped such that you can treat it as a single valued function of (x, y) for some appropriately oriented coordinate system, you can treat the cmm points as scattered data and create a triangulated surf from it. Then volume calculations are straightforward. Alternatively you could construct the convex hull or a nonconvex boundary using boundary() and compute the volume of the resulting polyhedron. 
I am unaware of a way to make figures like this in Matlab. Close to sure it’s not possible. This would need to be done in Fledermaus or something similar. 
I think it also counts the white dots in dices dots... Use imfill to fill the holes (black dots)
If the data set *only* contains 1's or 0's... sum the elements across the data set. or walk over the array and add to a counter every time there is an event. 
You can just ask your question here and people will probably help you for free. How advanced is it?
not very advanced. Just lengthy. Here is the Q:
I mean, maybe, but if csvread works, why bother?
I already summed the 1's and multiplied by 10 to get the total time spent in alarm status but idk how to "walk over the array and add to a counter every time there is an event" in terms of code
never mind, I got it! thank you!
Why not examine the change in status with if x(i) != x(i-1), then the status changed.
Please see [our rules for submitting homework](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/). Show us what you've tried. Ask a pointed question. 
come on broski just think about it for a second
Since the data set is so small, you don't really need to worry about having the most efficient, vectorized solution. I would just do a for loop to look at every element of the data set. You can use a **flag** to track if an event is happening or not. I often will use if/else structures for this. You could use a **counter** to track how many events happen. You generally would initialize both the flag and counter before starting your loop. Both of these concepts are very common for datasets like these. Finally, I would recommend making another array to store the lengths of each event. alarmFlag = 0; eventCounter = 0; events = []; for i=1:length(datasetname) % logic goes here end Using if/else logic, you can flip the alarm flag to 1 (true) or 0 (false). Each time you detect that the alarm state changes, you can increase the eventCounter value. You can use the "eventCounter" variable as the index of your "events" array. For the sake of learning, you really need to figure out what to do with these tools (flags, counters, and using counters as indexes/iterators) on your own. 
I've been working on this for over 10 hours, I'm a complete noob at matlab due to transferring schools (this is the second of a class that introduced matlab that I never took) and this is a test grade due at midnight. I'm willing to pay someone $100 to help me via voice chat
why can't homework have hyperlinks in them like Cramer's rule, Gauss Elimination Method
Trying to do 2c. Got through A and B just fine, and results check out when I plug them into the given equations. However, the results for part C are NOT THE SAME, and do not work when plugged in (just to check). I can't tell if inverse divide is *supposed* to fail, or if I'm just doing it wrong. I got from B that w = 2.3588, x = 9.0467, y = -0.9356, z= = -5.9193, which is what I'm aiming to get again here. This is what I was thinking: Ax = C A' Ax = A'C 1x = A'C So, I set up a 4x4 matrix A for the coefficients, and 1x4 C for the solutions. I did ans = A' * C, and I get w= -2.4000, x= 45.6000, y = 35.2000, z = 55.3200. Thoughts? Where am I going wrong, or is the "compare your results" supposed to be that inverse dividing gave completely different results?
Ax=b x=b\A Done
Sorry for delay. I've had good success on UpWork. Took couple of small jobs to get started and achieve good references. Now get regular invitations, and have some ongoing clients at good hourly rate. Your milage may differ.
When I do this, I get: A = 9.0000 2.0000 3.0000 6.0000 -8.0000 0 3.0000 -4.0000 -7.0000 6.0000 11.0000 4.0000 6.0000 4.0000 -3.0000 8.1000 C = 1.0000 2.0000 3.8000 5.2000 x = -0.0516 0.9811 0.7573 1.1902 When I check these as w, x, y, z, they do not work :(
My bad. Ax=b x=A\b That works.
+ How do you access the 10th element in a vector/array (your data set is a one dimensional array, hence the 1x1900 size)? the 99th? the 1900th? the nth, where n is an integer? + How do you want to define a distinct alarm? How many distinct alarms do you think a segment of data like [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0] contains? + How long did each distinct alarm in the above data last? (hint: you've stated in your data each entry covers a time interval of 10 seconds) Once you know/understand what you're *trying* to do, then you can work on implementing it.
+ Aha, thank you!!
in the past I made a 3D surface plot with a 2D image below it in the same plot. Assuming you can specify where the image goes in the (x,y,z), I could see how you could use that to plot the colored slices...although it looks like those aren't planes and are actually "ribbons" going through the domain. the gray surface part could be a surface plot with no edge colors and a user-defined color gradient.
Inverse divide should always work unless your matrix is sparse (maybe)? Worth looking into the limitations briefly, since it's the method you're the most likely to use in the future if you need to solve a linear system with matlab.
I don't do much image manipulation, but I gave this a shot &amp; it seemed to work for me. I downloaded this image (https://d3p157427w54jq.cloudfront.net/uploads/2017/08/rick-astley-636x397.jpg) and then ran imfull = imread("RA.jpg"); imquant = uint8(floor(imfull/128)*128); image(imquant); The result was certainly very quantised—I've only got two levels per colour dimension—but mostly recognisable. Can you describe more specifically what doesn't seem to work?
this might be easier using PCL which is in C++. There's a function called pointcloud to mesh. you can interface matlab to C++ using mex but it might be easier just to use PCL directly in C++
Have you made sure the thresholds are the same?
So I used this code as a point of reference for my quantizations: Onlevels = 4; K4 = linspace(0,255,Onlevels+1); K4(1) = []; [C1_quantR2] = imquantize(OredChannel,K4); [C1_quantG2] = imquantize(OgreenChannel,K4); [C1_quantB2] = imquantize(OblueChannel,K4); CE2 = cat(3,uint8(K4(C1_quantR2)),uint8(K4(C1_quantG2)),uint8(K4(C1_quantB2))); No10 = figure; imshow(CE2);
Not familiar with the ternary phase diagram, so I [googled it](https://www.google.com/search?q=matlab+ternary+phase+diagram&amp;source=lnms&amp;sa=X&amp;ved=0ahUKEwjDzbP7udDZAhUmjlQKHRwTAeQQ_AUICSgA&amp;biw=2050&amp;bih=1046&amp;dpr=1.25). There are multiple answered instances of this question on the first page of results (from MathWorks and from Stack Overflow), along with several FileExchange solutions. A general tip: when searching, use the name of the software and the task you'd like to accomplish with it. For example, I searched "matlab ternary phase diagram".
UPDATE: I managed to recreate something pretty darn similar using the slice function for the transects and the surface function for the bathymetry. If anybody's interested, here's the code: sl=salinity; sl2=fliplr(salinity(1:150,1:150,:)); lat=latitude(1:150); lati=fliplr(lat); loni=longitude(1:150); yslice=[1 8 20 28 35 48]; xslice=[-32 -25 -47]; zslice=[2001]; %out of sight [x,y,z]=meshgrid(lati,loni,pres); %latitude, longitude and pressure/depth s=slice(x,y,z,sl2,xslice,yslice,zslice) set(gca,'zdir','reverse') set(gca,'ydir','reverse') set(s,'EdgeColor','none') hold on plot(coast.lat,coast.long) xlim([-60 -20]) ylim([0 60]) colorbar caxis([33.5 36.5]) cmocean('curl') %cmocean colormaps from fileexchange hold on sur=surf(yy,xx,-bath); zlim([-2000 6000]) set(sur,'EdgeColor','none') set(sur,'FaceAlpha',0.8) 
They can if you use latex.
Yep ... I’ve used slice and surf quite a bit. Of course, something similar is possible with those tools, but can you post an image of your result? I don’t have your data. Never seen slices stitched together in such a complicated fashion. 
[`semilogx`](https://www.mathworks.com/help/matlab/ref/semilogx.html)
Thanks
Look up for-loop syntax in Matlab. ‘for n=N’ isn’t doing what you think it is. 
Thanks for the reply. Just looked it up and I understand why that is not working. Though I'm still not sure on what the range of values should be in this case. Do I set it up for as for n=N:k with k being the desired outcome, or do I use a different command/approach?
Have you tried cross correlating the 2 logical vectors (the command is *xcor*). You may have to replace the nan's before using it (with *isnan*). 
Yeah I think that worked. While inhsve you here I'm having a problem with logarithmic quantization. While I'm doing the log I figured 255/max value of the band\image would be the right concept but my code doesnt show an image. 
Can you show me the code?
OredChannel = uint8(double(C1(:,:,1))); OgreenChannel = uint8(double(C1(:,:,2))); OblueChannel = uint8(double(C1(:,:,3))); MaxR = 255 / max(OredChannel(:)); NatImgR = uint8(double(MaxR) * log(double(OredChannel))); MaxG = 255 / max(double(OgreenChannel(:))); NatImgG = uint8(double(MaxG) *log(double(OgreenChannel))); MaxB = 255 / max(double(OblueChannel(:))); NatImgB = uint8(double(MaxB) * log(double(OblueChannel))); Clog1 = cat(3,NatImgR,NatImgG,NatImgB); imshow(Clog1); No11 = figure; title('Part F: Natural Logarithm');
This is a root finding problem. The function [fzero](https://www.mathworks.com/help/matlab/ref/fzero.html) can do this.
I'm away from my office computer so will upload a photo in the week. I found this page useful to work out slices that aren't parallel to a plane. http://what-when-how.com/graphics-and-guis-with-matlab/volume-visualization-plotting-in-three-dimensions-matlab-part-1/
Wait is the 255\7 stuff before or after you removed the uint8? I thought the constant I picked was right. Why 7 I wonder. Ill test those changes in about an hour. 
You were right, thanks for the answer.
This is not a matlab thing, this is a floating point number thing. Equality tests should be done with a tolerance when working with floating point numbers, like `abs(x - y) &lt;= tol`. It applies to any programming language where you use a floating point number.
I tried replacing the max function with 7 and that didnt work. Did you multiply the function itself with 255\7? That's really strange
This was exactly what I was looking for. Thanks!
Yes, this is a better solution than round().
If you use the hold all, semilogx won’t work for whatever reason but you can still force the x-axis to be in log scale by: set(gca,’Xscale’,’log’)
^(yaaaaaaaay floating pooiiiiinnnt)
From your question, I assume you are brand new to MATLAB, but you're familiar with the mathematics. In that case, you will want to learn about: * [Scripts](https://www.mathworks.com/help/matlab/learn_matlab/scripts.html) * [Storing Variables](https://www.mathworks.com/help/matlab/matlab_env/create-and-edit-variables.html) * [Loops](https://www.mathworks.com/help/matlab/matlab_prog/loop-control-statements.html) * [Conditional Statements](https://www.mathworks.com/help/matlab/matlab_prog/conditional-statements.html) * [Anonymous Functions](https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html) * [Matrix and Vector Operations](https://www.mathworks.com/help/matlab/examples/basic-matrix-operations.html) * [Array Operations](https://www.mathworks.com/help/matlab/matlab_prog/array-vs-matrix-operations.html) * [The Colon Operator](https://www.mathworks.com/help/matlab/ref/colon.html) * [2D and 3D Plots](https://www.mathworks.com/help/matlab/2-and-3d-plots.html) * and some handy debugging tools like [disp](https://www.mathworks.com/help/matlab/ref/disp.html), [fprintf](https://www.mathworks.com/help/matlab/ref/fprintf.html), and how to use the [Workspace](https://www.mathworks.com/help/matlab/workspace.html) The documentation in MATLAB is excellent, and if you want to find out how to do something specific (like plot in polar coordinates, or calculate a Hessian, or find eigenvalues, etc.), you usually only need to google "matlab &lt;thing you want to do&gt;" and you will end up with both [MATLAB Documentation](https://www.mathworks.com/help/matlab/) pages, and answers from the [MATLAB Answers](https://www.mathworks.com/matlabcentral/answers/) community site. Try to get started with this info and if you get stuck on a particular problem, come on back and we'll help you find sources of errors, or suggest alternatives to your approach.
I see. I just got used to C# and C++ where if there is a really small value in a float like: 0.00000001 it either shorten with e notation or prints the whole value no matter how long it is if I doesn't specify a mask length.
There's a difference between how the program prints a variable to the screen or a file and how it stores a variable in memory. You can use the command `format long` to have matlab print more digits.
https://www.mathworks.com/help/matlab/ref/max.html
First, find the ones which have no imaginary part using [imag](https://www.mathworks.com/help/matlab/ref/imag.html), and then you can just use `max`. 
Look up roipoly: https://se.mathworks.com/help/images/ref/roipoly.html
Use imagesc to plot the image and check whether the rows and columns specified correspond to the eyes. 
And avoid the equality test imag(root_list) == 0 because the 0.0000i means there is some (presumably) round off error, and Matlab believes they are complex roots. The equality will return false for all four numbers. Instead use a tolerance abs(imag(root_list)) &lt; Tol where Tol is something appropriately tiny, say 1e-6, or even just 1e-3 given your numbers.
INteresting method, see this the assignment I'm trying to do with that code: Quantize the original three-band color image C1(x,y) into a color image CL(x,y)= (R'(x,y), G'(x,y), B'(x,y)) (with a logarithmic function) , and display it. You may choose a function I' =C ln (I+1) ( for each band), where I is the original value (0~255) , I' is the quantized value, and C is a constant to scale I' into (0~255), and ln is the natural logarithm. Please describe how you find the best C value so for an input in the range of 0-255, the output range is still 0 - 255. Note that when I = 0, I' = 0 too. I was really sure my code would've worked, and I'm not certain that utilizing thresholds would get the code in the correct manner.
Well, actually, to clarify, if what you pasted above was from an array of roots, that array is complex even if not all the elements are, and Matlab might display real numbers as having (actually) zero imaginary parts. So in this example, the equality test may or may not work. But in general tests with tolerance are more robust.
Sry, autocorrect capitalized the i index.
Four spaces before each line of code to fix formatting. What is `A` for? What trouble are you having that you need to improve? What do you mean when you say you want to hide the z axis? Something like zticks([]) ? 
To fix your code formatting, put 4 spaces before each line of code: This is formatted as code. More code formatting, indented now. Here's some more just for fun. 1. What improvements would you like to make? I can suggest not using 'i' for indexing, and instead naming it properly (like 'contourNumber', or 'loopIndex', or at least 'idx'), since 'i' is the imaginary number. You could also get rid of 'A', since it's unused. 2. To hide the z-axis, you're looking for [Axes Properties](https://www.mathworks.com/help/matlab/ref/matlab.graphics.axis.axes-properties.html).
`zeros` takes two inputs, the first is the number of rows and the second is the number of columns. So, if you type A = zeros(2,3) It would make [ 0 0 0; 0 0 0];
I’m so sorry I’m totally a novice with matlab. What do you mean “IM”. What I understand is I have 2 sets of 36 pics. When I import them they are in my workspace as variables and clicking them shows me a bunch of numbers in an array. One set is called “smilingimages” and the other is “nonsmiling”. Also, I tried the command you have me but it said it was unbalanced. Thanks for the help!! 
I was giving your arrays an example name. So you'll use "smilingimages" and "nonsmiling" in place of "IM". I'm not sure what you mean by unbalanced. Can you post the error message verbatim?
Yes it is vectorisation, loops are slow in matlab.
The issue here is that Matlab on its own is a pretty slow language. You generally want to do as little as possible in actual matlab code and this means you should not use loops for performance critical applications if you can avoid it. Vectorizing is good because it allows matlab to delegate execution to optimized C code instead of having to process it on its own. Generally it means that instead of having a loop that processes each element of a vector with some function you take the entire vector and pass it to the function in one chunk. Instead of: for i = 1:length(x) z(i)=sin(x(i)) * cos(y(i)) end You would write z=sin(x).*cos(y) Instead of having to to the loop in pure matlab, this passes the vector x to a vectorized sin function that loops over the elements in C where it is fast and does the elementwise sin there. Then it passes the y vector to the cos function that also does the fast c loop over its elements. Then the two result vectors are similarly multiplied element wise. The dot in front of the multiplication sign is to indicate that this is supposed to be an element wise multiplication, not a matrix multiplication. You can see how that array focused vectorized style can be quite convenient to write concise code for many situations. The thing you need to understand is that in Matlab it’s not just good for readability but critical for performance. 
like what kind of advice would you give to make the code more readable
In this type of problem, not really. Since you're directly using coordinate system values, the variable names are fine. As a matter of personal stylistic choice, I prefer to add spaces around addition and subtraction operators, and not around multiplication or division operators: f = @(x, y) 2*x^2 + 2*x - 1 + x.*y; Comments can make otherwise confusing code more readable, but only if they're necessary. Otherwise, they just get in the way. A very nice [style guide](https://www.mathworks.com/matlabcentral/fileexchange/46056-matlab-style-guidelines-2-0) was published on the MathWorks FileExchange years ago by a gentleman named Richard Johnson (with a [paperback edition](https://www.amazon.com/Elements-MATLAB-Style-Richard-Johnson/dp/0521732581) available for purchase, if you're so inclined). I also have to apologize and amend my earlier comment; hiding the z-axis is definitely under Axes Properties, but it's one more level down under the properties for [NumericRuler](https://www.mathworks.com/help/matlab/ref/matlab.graphics.axis.decorator.numericruler-properties.html). I believe you're specifically looking for the 'Visible' property.
&gt;How are dimensions of a zero matrix chosen? Exactly as specified in the documentation.
Try to test the size of your image arrays ("smilingimages” and “nonsmiling”) by using size(). I.e. type size(smilingimages). That will tell you which dimensions are image resolution (50 and 50) and which one is picture index (36). Next, view the desired picture as suggested by /u/Lysol3435. So if the first two dimensions are image dimensions and the last one is picture index, you should use imagesc(squeeze(smilingimages(:,:,1))) if you want to view the first image in that series (":" means all entries in a dimension by the way, so this way you are viewing all entries in the image dimensions and only one of the images specified by the index). The unbalanced error that you encounter could be that your command: imagesc(squeeze(IM(I,:,:))) has an unbalanced parenthesis. I.e. if you by error typed imagesc(squeeze(IM(I,:,:)) instead.
If this is the code then Matlab do not use the zero index for the first element in a vector.
MATLAB cannot handle “0” indexing, all of the index values must start from “1”. To fix your error, do t(1) = 0.
Change line 7 to t(1) = 0 In Matlab, all indexes for matrices start at 1 and not 0.
thak you so much for your help and no worries 
So I don't mean this as rude, but as advice moving forward. The error says &gt; Subscript indices must either be real positive integers or logicals. The error messages in MATLAB are very verbose, and written clearly. You have `t(0) = 0` and then it says your index must be a real, positive integer. 0 is not a real, positive integer. 
Happy to help. :)
np :) 
[Pop quiz, hotshot](https://www.youtube.com/watch?v=Ug2hLQv6WeY) - 1. `rand()` generates a random number between (0,1). 2. You want a random number between (-1,1). Questions: 1. What if you multiplied or "scaled" the output of `rand` by a number? What range would you get? 2. What if you added an offset or "bias" after you scaled the output?
What do you mean with the second question? I can multiply it by -1 but everything would be negative.. (I'm new to matlab)
Do you mean like -1*rand(5)+rand(5) ?
This is not uniformly distributed between -1 and 1 (although it is between -1 and 1). This will have a lot more values close to zero. In general, you want to shift and scale. I'm going to show you the code to generate uniform random numbers between 5 and 10, and let you work out your case: dx = 10 - 5; x_start = 5; rand_x = x_start + dx*rand(5); 
You're looking for an XY plot: https://www.mathworks.com/help/simulink/slref/xygraph.html
Thanks dawg. 
I have a solution to this problem on my work computer. I'll try to look it up this week and get back to you.
I would use the function [perms](https://www.mathworks.com/help/matlab/ref/perms.html). 
Hmm, I'm not seeing how that would work for me. Maybe I'm just being thick, haha. If for example my matrix was [1 0 0; 0 1 0; 0 1 1]- well, I will try to illustrate what I am trying to accomplish. I want to literally manipulate the matrix so that I can test the matrices [0 0 0; 0 1 0; 0 1 1], [0 0 0; 0 0 0; 0 1 1], [1 0 0; 0 0 0; 0 1 0] and so on. I.e. I don't necessarily want all permutations because I don't want to set the values that are initially 0 to 1 and so forth if that makes sense. So, unless I'm missing something, I think I would need to either use perms in another function that I define, or I would need to find another function to use altogether. Maybe I explained my intent poorly in my initial post, please tell me if it is still unclear. And thanks for the suggestion, I'll look into it some more :)
Excellent explanation
You have defined all your equations as strings. Take out the single quotes around each equation and define the variables with syms.
Do the first question first. 1\. What if you multiplied the output of `rand()` by a number? - If you multiply `rand()` by, say, `x`, then your range goes from (0,1) to `x*(0,1)`. Distribute, and you find that, when you multiply by `x`, you get a new range of (0,x). You want a range of 1-(-1) = 2. However, if all you do is multiply by 2, then you get a range of (0, 2). This leads to the second question: 2\. What if you added an offset after you scaled the output? * You see above that you can go (0,2) if you multiply `rand()` by 2. However, you want the output to be `(-1,1)`. This means you should subtract 1 from the lower end of the range and also subtract 1 from the upper end of the range. In fact, it looks like you could just subtract one from the output of `2*rand()` and get the output you're looking for. 
You posted an image, not text, so I'm not going to bother to type out your problem by hand. 1. Use `syms &lt;var&gt;` for every variable you don't have numbers for. 2. Be careful when passing **expressions** to the solver. Those *are* expressions because an *equation* has an *equal* sign in it. The `solve` function will assume `expression == 0`, which may or may not be what you want. 3. I would bet that you have your `eq1`, etc. defined in character arrays `'&lt;stuff&gt;'` because it errors out if you don't, because you didn't define the ancillary things (a, E, I, etc.). Refer to point 1 - make them symbolic. Then you can just write your *expression* like anything else. 4. If you're going to make a system of equations to pass to solve, you need *one variable* that has all your equations, and *one variable* that has all the terms for which you'd like to solve. The easy way to do this is to say `eq(1) = ...` and `eq(2) = ...`, etc. Then, when you call `solve`, pass `solve(eq, [c1, c2, c1R, c2R])`. There you have `eq` as a vector of *expressions* and the second input to `solve` is a vector of things for which you'd like to solve. 5. I'll point out that you don't actually have an error here, you have a warning. Again, you didn't provide text and I'm too lazy to type your problem, but you *did* get something. You can see that with `ans = c1: [1x1 sym]`, etc. The output of `solve` is a structure that has all of your variables. The problem you're having is that you just call `solve()` without assigning the output anywhere, so Matlab stashes it in a temporary variable called `ans`. You can still see what's in it if you call `ans.c1`, but then it's likely to overwrite `ans` when it displays what's in `ans.c1`. You would typically do something like `eqnSoln = solve(&lt;stuff&gt;)` and then you could check the results with `eqnSoln.c1`, `eqnSoln.c2`, etc. 
&gt; He wants me to... *read the documentation?* &gt; &gt; Downvote.
Matlab is a scripted language. It doesn't compile, so it has to wait for the OS between every step. If you loop, then you have at least as many steps as there are loops (more, if you have more than one line of code in the loop), which means you have to wait for the OS however many times there are loops. Matlab has its own functions behind the scenes that *are* compiled, but you have to give it everything all at once to make use of the compiled functions. They've done a lot of work in the last couple releases to "optimize loops," which *has* made a big difference in how a lot of stuff runs. This was done by implementing a compiler ([just-in-time compiler](https://www.mathworks.com/products/matlab/matlab-execution-engine.html)), which removes most or all of the OS wait time between steps. Matlab still has an army of mathematicians working for them, though, and there is still a lot of work that they've done to optimize matrix operations with tricks (black magic) to bypass the typical long-division-style drawn out way of doing things you were taught in school. For example, Matlab probably doesn't calculate a [matrix determinant the way you were taught](https://www.mathworks.com/help/matlab/ref/det.html#bubft79-5), so if you tried a looping version of a determinant calculation (or again, most any other matrix operation), then Matlab's method is going to win because they had a bunch of PhDs optimize their matrix operations, again using black magic. You can utilize their black magic and get some pretty significant speed advantages if you can "rephrase" your problem, loop, etc. to be a matrix operation. This what people mean when they refer to "vectorization," because typically they have a bunch of &lt;things&gt; they want to do &lt;stuff&gt; with, and when you append &lt;things&gt; together into a "list" then that's called a *vector*, and you can then do vector-matrix math and reap the advantages of the optimized matrix operations. The easiest example I can think of immediately is coordinate transforms. You might 10,000 points you want to transform. You could loop through all 10,000 points, or you could just do the `[transform matrix]*[points vector]` operation and be done in one step. 
Not bad actually. When you say Gmsh for 3D, is that a 2D surface in 3D space (i.e. the surface of a cylinder), or the surface and volume including tetrahedra/surface triangles?
42
YOU HAVEN'T EVEN TRIED!!! HOW CAN WE HELP YOU IF YOU DON'T HELP YOURSELF FIRST!???! 
The answer is "Brussels". 
Okay. 
Which argument should I be looking at specifically in the documentation in order to do so? I'm a bit confused on what to use to specify the x-location by scalar.
How are you doing it by hand? It looks like you have `sin(omega*t + phi1)` and `sin(omega*t + phi2)`, so why wouldn't you just use `phi2 - phi1`? Unless your problem isn't actually what you described?
Look at the first section. You're currently using `plot(Y)`. You need to be using `plot(X,Y)`. 
Is that the correct way? V is lagging behind I by 5 degrees correct? Also I need to do this by matlab..
What is `engdemo.c`? What do you get when you try `mex -setup`? 
You're the one that can do it by hand. It's been a while since I took a circuits class. Again, *how are you doing it by hand*? 
Exactly how you said it, 35 -30, but I'm not sure that is correct , so that is one of my question, is this correct by hand. And how can I use matlab to prove that 
It’s a demo file to show how the MATLAB engine can be used from C. I already have mex setup.
What do you get when you try mex -setup
Plot the two. Set the x-axis to degrees (a function of omega) and see what the difference is when both functions cross going in the same direction. I believe the lead/lag relationship *is* just the difference in phase angles `phi`. 
Awesome - thank you!
Try typing help break into Matlab!
https://www.mathworks.com/help/matlab/ref/break.html?requestedDomain=true or type "doc break" in the console. In the future, Google is a great and faster reference than Reddit :) Good luck!
"break loop matlab" in google gives plenty of results
In this case it is a 3D tetrahedral volume mesh (suitable for FEM calculations). Gmsh does both though (as it first creates as 3D surface mesh, and then a volume mesh from it).
In this case it is a 3D tetrahedral volume mesh (suitable for FEM calculations). Gmsh does both though (as it first creates as 3D surface mesh, and then a volume mesh from it).
Crap feel like an idiot. The values are a = -.125, b = 0, c = 15.25, d = 13.1, e = 2.6, f = -1.5, x = -3, 3, 1.2, -1.8, and .36. 
What is this? Is there an explanation of what you're trying to do, or how you arrived at the equations you've got? I'm not sure why you're taking derivatives for a double integral problem. You have `%c = @(v) ???;` and `%d = @(v) ???;`, which are really frustrating to look at because *you don't explain what they're supposed to be* and I want to help, but I'm not going to guess at what problem you're trying to solve. Have you tried symbolic integration to get the answer? It would be much easier to read if u and v were symbolic. Then you could just do r = [x, y, z]; dru = diff(r, u); Etc. 
1. I don't have your data set. 2. I'm not doing (or even looking at) all of your homework assignment. What is a representative problem that illustrates the trouble you're having? 
Nobody is going to read all that and dig through that unformatted code. Try to simplify this question to only what is causing you trouble, and show us what you've already tried. 
I can't tell if you actually have a Matlab question. This sounds like a math question, and I don't happen to know anything about eliptic toruses off the top of my head. 
Yes but I didn't get any answer , I just want to put those 2 equation and get matlab to say "the phase relationship is 5 degrees"
Seriously dude, we are not mind readers. Try to read what you posted and see if there's any way of knowing what you want (and what you have).
On further inspection of this subreddit I now realize you guys are not the nicest but thanks for the unconstructive criticism! Have a good night guys!
You realize that "whacked" is a pretty poor description, right? You realize you haven't posted a picture of a graph? You realize that the graph layout depends on your setup? You realize you haven't posted what you want to have? You realize that there are no comments in your code, so it's not possible to know what your intentions are? You realize that asking for help without putting in any effort to help yourself is lazy and spoiled?
Okay! See now I know what I did wrong. Thank you! Although the attributing laziness and being spoiled is pretty mean. You gotta understand I am brand new to programming. If it makes me ornery like you guys idk if I want to learn it lol! Thanks though buddy! 
All I've seen from this sub lately is "help with homework" posts, and I feel there's rarely effort put into solving it themselves. Not trying to bust OPs balls, but I would use the term "rampant".
I'm sorry I hurt your feelings
It's okay they will grow back! 
your hint is pretty clear num_students = sum(Grades_A&gt;avgA);
This is very complicated, and shouldn't be necessary. Import data as a variable, lets say: Grades_1=[...] take the average Avg_1=mean(Grades_1) then find all values greater than average AboveAvg_1=(Grades_1&gt;Avg_1) should work This returns a boolean matrix (all ones and 0) sum the resulting matrix sum(AboveAvg_1)
Yeah, just use masking. It’s a way to create logical arrays with 1 and 0’s. I would look this up and learn it as it’s very useful in MATLAB 
Hi thanks for the feedback! Yes I realised people actually wont understand what im thinking, so I actually labelled everything already. Do take a look at the code again with all the labels, and I will explain to you the reason why I did everything in this manner. The code actually works, but for a set of limited numbers. https://pastebin.com/zTmK5Etu With regards to the variables, I have already named them. For e f and sum(g), it was just my thought process to ensure that it flows, so they are used for me to store the correct/desired values. Yes, I think there are some pointless or unused values in the code, such as variable q, and the columns in a, but it's because I am planning to use them in the future as I improve the code. I do require some clarification for what you mean by the i = i + 1. Because I require the loop to run 10000, I thought that I have to increase the value of i such that it loops. Or is it unnecessary? Will i just increase after each round? As for why I loop it 10000 times, its just a random number, to ensure that the random integer will come up with all the possible permutations of the menu (with the inputted Dollar), and eventually churn out the desired answer. As of now, when I input menu(10,0), where 10 is p (the dollars) and 0 is q (an empty variable), it will give me 200, which is 200 calories, since the menu is $1 for 20 calories, $3 for 40 calories, and $5 for 60 calories. So the output f, is 10 0 0, sum(g) is 200 calories, and e is the amount of money spent. I hope what I am saying explains some things to you, and I hopeyou are able to help me improve it. I believe there are many ways to simplify my code, I was simply working by using $10 as an example to write out the code, which led to this very multi-step code with perhaps many unnecessary lines
You never said that, and you never addressed the issues that were brought up. We don't do your homework for you, and we can't read your mind. We're also not experts on your class material. You have to understand the mathematical issues. We can only help you with Matlab issues. If you won't tell us what you mean by phase difference, or how you'd calculate it by hand, we can't help you. If you won't make the effort to try solving your homework problems on your own, we won't help you. 
What have you done in class as far as determining phase relationships? Why are you using Matlab at all if you can solve this with simple subtraction? What would it mean for Matlab to "prove" this relationship? Are you expecting to do this via a graphical demonstration? A fit? Fourier analysis? 
I think this can be solved by combining a hough transform with (edge detection)(https://nl.mathworks.com/help/images/edge-detection.html#buh9ylp-13)
One of my profs also gave me this Hough example to play with my image but it also doesn't seem to work as it gives me errors with both E and H. I copied his code 1 for 1 but it don't even know what is going on to try and debug. We are in his 2nd module and this code is from the 7th end of semester stuff so it's really confusing to me. https://imgur.com/a/ZSWIr
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/8U04LJ2.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dvbf005) 
Thank you for the reply! I mean the explicit method that I've used seems to work perfectly well, but yeah he's fairly set on us using the implicit method, which isn't nearly as intuitive to me. Anyway, I'll look into the things you suggested and hopefully I can get something going.
I'm not looking for an answer, you can provide another example , I just need to learn how matlab can spit out the results. Give me codes or a way to do it. What's wrong with asking that ? All I know is how to plot these two function in one graph and find their intersection but that doesn't tell me that they are 5 degrees phase shift 
I am forced to use matlab to prove it. Just like last week I was suppose to prove simple functions like what is sin x at -pi to pi. I know this by heart but I need to show it in matlab, the fuck wrong with you 
Yahoo, Google and Quandl are all free
Well it kind of does. I was under the impression you guys would just run my code and see what I was seeing. I have a graph that pops up when you run it.
Better lighting would help too
It's quite a lot to ask that everybody who is willing to help is also willing to run code on their machine from a stranger on the internet, or to spend the necessary time inspecting it line by line. It's also an unnecessarily indirect way of expressing your problem. Tell us what you did, what the results were, and what you wanted/expected. **You're asking the question, you do the work to make your question clear and understandable. ** Besides, I rarely actually have Matlab in front of me when I'm able to look at reddit. I'm able to help because I know Matlab well enough to know what some code will do in 99% of cases. I assume the same is true of many here. Still I don't know what a "whacked" graph looks like. You gave no description of the problem. 
&gt;I'm not looking for an answer, you can provide another example , I just need to learn how matlab can spit out the results. Give me codes or a way to do it. What's wrong with asking that ? It's cheating, first of all. You're expected to do your own homework. Be careful trying to cheat on the internet. You'll find a lot of people helping here are engineering professionals at places you'd probably like to work one day. I guarantee I would not hire you if I knew you were cheating on your homework here. Second, it's not our job to write code for you. It's your problem, not mine. I'm under no obligation to help you, so you're nuts if you think I'm doing the work for you. Be grateful there are people willing to help you understand the problem at all. &gt;All I know is how to plot these two function in one graph and find their intersection but that doesn't tell me that they are 5 degrees phase shift Okay. How would you determine the phase shift? Are you expected to do it from the graph of the function? Or from some operations performed on the function? It's hard to help when you keep the details of your assignment secret. 
It's probably best not to curse at the people trying to help you. Solve you're own problems kid, I'm done helping. 
&gt; I know this by heart but I need to show it in matlab, the fuck wrong with you Currently, you posted this 3 hours ago /u/8ean. 17 hours before you posted that (20 hours ago now), I said: &gt; Plot the two. Set the x-axis to degrees (a function of omega) and see what the difference is when both functions cross going in the same direction. But that attitude though. It's like you don't pay any attention in class, and then come to the internet and expect complete strangers to do your homework for you. In response to /u/FrickinLazerBeams, you said: &gt; I can do this on maple program Oh really? Because [you told me](https://www.reddit.com/r/matlab/comments/82i34m/phase_relationship/dva8p9b/): &gt; I'm not sure that is correct , so that is one of my question, is this correct by hand. /u/FrickinLazerBeams and I are both trying to ask you *leading questions* to help you figure this out on your own. Teach a man to fish, etc. You go on to say: &gt; I am new to matlab, this program. So I don't know their language to set up this problem to spit out the answer And yet, moments later, you say: &gt; I know how to graph it and I see phi with a 5 degree difference , but how do I make matlab say That? *Show us by hand what it is you think you're trying to do.* I just straight up told you to look where the functions cross the x-axis. What are you looking for? If you can see the answer, what else do you need? *What are you trying to do*? That's the question we are (were lol) trying to help with.
You can just type 30-35 to get the resulting 5 degree phase difference. If that's not what you're trying to do, I suppose you should have been more forthcoming when we asked you what you're actually trying to do. 
But is there a way that I can write it so that matlab will solve it for me? Because if I did that it's like I'm just typing it on the wordpad..
the data has been read into matlab just fine, you're using incorrect syntax to access it
&gt;This is my matlab commands : &gt;X=linspace(2,6,100) &gt;Y1=100sin(x+pi/6) &gt;Y2=60sin(x+7pi/36) &gt;(What do I put to make this say, these two function will have a phase relationship of pi/36) &gt;If I want to plot I put, plot(x,y1,x,y2) pi/6 - 7pi/36
#what would that mean? 
Okay. How would you do that by hand?
Actually, nevermind, I don't care to help you. 
That s fine, you don't need to, but I understand the point you trying to make, I only ask for a simple problem. This is different if I asked I(t) = -30cos(wt+30°) V(t)=30sin (wt+35°) By hand I would change i(t) = 30sin(wt+300°) And degree difference would be 265 degrees But I can't type that I need matlab to solve it for me 
bruh you are straight up cheating. i know people ask for homework help because sometimes they are stuck on one part, but this homework is extremely straightforward; it's impossible to give you help without writing the code for you.
Have you even tried this? Not to shame a new student or anything but this is all fairly simple. I'm no master of MATLAB myself and could bust this out in under 10 minutes. Try looking at the reference materials for vectors, rand(), and plot to get started. 
&gt; What do I put to make this say, these two function will have a phase relationship of pi/36 That depends on how you're trying to show the phase relationship, and whether or not you're looking for an automated way of doing it. This is what we keep asking for - how would you do it by hand? What method are you trying to implement? You could compare x-values where the functions cross zero and are increasing, or you could compare peaks, or minimums, or you could try curve fitting. What are your inputs? Is the project to write a function that accepts y1/y2 and generates a phase difference without knowing how those functions are declared? How advanced is the class? Are you just expected to plot the functions and you can use the plot editors and/or paint or something to highlight the reference locations or are you supposed to be using Hilbert transforms or similar to find the results? You seem to simultaneously act like you know how to do it all by hand and you just "need the commands" to get the output, but you seem to be ignoring repeated requests to actually state how you would (are supposed) to be doing this. 
You don't have to 'suspect', you can know! In the command window, where you read the error message, what line did it say the error came from? That's the line where it's trying to look at (or write a value to) a spot in the matrix or vector that doesn't exist. For example, since you have a 3x4 matrix, if you tried to read A(4, 4) you would get that error. If you want to see which index it is that's failing, you can use [disp](https://www.mathworks.com/help/matlab/ref/disp.html) or [fprintf](https://www.mathworks.com/help/matlab/ref/fprintf.html) to output j or k (or both) to the command window. Alternately, just as you have for 'A' at the end, simply write 'j' or 'k' to its own line to have it spit out to the command window.
So, this is my solution: a=rand(50,1); f1=20*log10(a.^2+pi);f2=30*log10(a.^3+pi) f1=20*log10(a.^2+pi);f2=30*log10(a.^3+pi); plot(a,f1,'or',a,f2,'sb'); xlabel('X');ylabel('Y'); title('Graph of f vs a'); axis([0 1 8 20]); legend('f1=20log10(a^2+pi)','f1=30log10(a^3+pi)') - for question no1. I'm having trouble writing in script(m-file)
Just open a new script file in MATLAB, or copy all of that into a text file and save it as nameOfScript.m
Alright got it. Thank you for your assistance!
Matlab is the having trouble reading the data. It told you that. It said "Struct contents reference from a non-struct array object." So I'd assume you're trying to reference something as if it were a struct, when it's not a struct. 
Yeah sorry i've not explained this brilliantly. The problem i'm having is that qi is on both sides but due to the qi term on the right hand side being raised to a power i cannot rearrange the equation with respect to qi. I can solve the problem iteratively by hand but cannot do so in matlab.
Sounds like a candidate for solving by intersection. Find where qi and qi_max * a_i * Ki *(1-(qi /qi_max))a_i intersect when you vary the values of qi. This can be done programatically with some work.
I'm not really sure how to respond to this, so I'm going to do a bit more hand-holding than I normally would. I'll go bit-by-bit through your response above quoting a section and then responding in turn: &gt; The code actually works, but for a set of limited numbers. I disagree, as I hope to show you later. If it ever gives you the correct result, it's complete chance. &gt; With regards to the variables, I have already named them. For e f and sum(g), it was just my thought process to ensure that it flows, so they are used for me to store the correct/desired values. No. Single letters are not names. Names should have *meaning*, and a single letter (generally) can't do that. Certainly not in this context. &gt; Yes, I think there are some pointless or unused values in the code, such as variable q, and the columns in a, but it's because I am planning to use them in the future as I improve the code. Don't keep extraneous stuff around for "future work." Leave it out, and then add it later if/when you decide you need it. Random operations, or worse - getting into the habit that it's *okay to ignore portions of your code* because "I don't need that yet" is how you learn to overlook bugs. &gt; As for why I loop it 10000 times, its just a random number, to ensure that the random integer will come up with all the possible permutations of the menu (with the inputted Dollar), and eventually churn out the desired answer. This is the killer part for me. You're relying on chance. What if the menu had 10,000 items on it? You run through the menu once? Pro tip - if you ever feel like you're reinventing the wheel, you probably are. If you want all the possible permutations, try the `perms()` command. If you ever want to read more about how to use a function, type `doc &lt;function name&gt;` to the Matlab console. `doc perms` will bring up the documentation on the `perms` function. I'll point out here (this is where the extra hand-holding comes in) that you want a little more than "just" all the possible permutations, because it's conceivable/likely that the correct answer has more than one of the same entry in the final answer. I'll also point out that you seem to be using "permutations" to mean "combinations" and not its mathematical meaning (and what the `perms` function gives), which is all possible *orderings*. Even with your meaning of "combinations," consider a hamburger, costing $1 and having 100 calories, and a singular french fry, costing $0.01 and having 1.25 calories. If you have $1.01, then you get the most calories not for one hamburger and a singular french fry, but from having a hundred and one french fries. The possible combinations are hamburger, hamburger + fry, or fry. Again to reiterate, the possible *mathematical permutations* are hamburger + fry, or fry+hamburger. What you're looking for are all the combinations that are possible, including repeats, up to some "costing" limit. This is also where the extra hand-holding comes in, because I'm really reluctant to "give" too much of the answer, but you seem pretty far off course and I'd like to help you succeed. You should consider *writing out* (by hand) what the program is supposed to be doing. You should always try to start coding with a plan. Write a flowchart or list of actions for the program to do. Hopefully (generally), when you do this, you'll find some pattern repeats over and over. Those can be implemented as loops. So, for this project, if I were you, I'd probably start doing it something like: 1\. Get a cost limit 2\. Find a scoring category (calories, carbs, etc.) 3\. Find the best scoring combination: 3a\. Set your "total spent" to zero and set your "highest total calories" to zero (carbs, whatever). 3b\. Set your "dollars remaining" to your cost limit less your "total spent." 3c\. Check if the cost of the current menu item is less than or equal to your "dollars remaining." 3d\. If the cost IS less than what you have available, then add that menu item to your list of "purchased items," add its cost to your "total spent" amount, then go to 3b. 3e\. If the cost is NOT less than what you have available, then IF there's another menu item on the list, advance to the next menu item and go to 3b. 3f\. If there are no more menu items, then tally the total calories (carbs, whatever) and compare that to your "highest total calories" amount. If the current calorie count is higher than your "highest total calories," then "highest total calories" is now whatever the current count is, and you should keep that list of food items. 3g.\ After checking current/"highest" calorie counts, backtrack and advance to the next food item. So, for the hamburger/fry example, let's say you have $2. You should get 2 hamburgers, then 1 hamburger 100 fries, then 1 fry, 1 hamburger, 99 fries, then 200 fries. I'll just leave the help at this for now and hopefully this gets you going in the right direction.
Happy to help. :)
That's what fzero is for. 
He can also put a debugger breakpoint on that line, or enable "break on error". 
 realTalk = dlmread('true.dat')
Two possibilities: I either completely misunderstand everything (fair chance - it's late, I am tired), or you lack even a basic understanding of what you are trying to do. What you have in continuous form should be a stochastic differential equation with Wiener noise, where the solution is a stochastic process. In discretized form it's a first order Markov chain. That has nothing to do with fitting parameters of a Normal distribution, which Matlab's help tells me mle is all about.
I understand that it's an SDE and I understand it's a Wiener process. But if I'm working in discrete time than what I'm using as an approximation will converge to the true SDE as dt -&gt; 0. I also understand that it's a markov chain. That's why I said r(i+1) is only dependent on r(i). Still as W(t+dt) - W(t) is a normal with mean zero and variance dt using a Gaussian distribution in discrete time I didn't think such a bad assumption. These mean parameters are from the drift parameters. Again this isn't exact as ideally you would be doing integrals but as I only have daily data I'm working in discrete intervals I don't see what the problem is.
You have `qi = &lt;some function of qi&gt;`. You could rearrange that as `0 = &lt;some function of qi&gt; - qi`. Plug that in to a solver. 
It was not a criticism of how you are discretizing the problem. And of course a Wiener driven process becomes sqrt(dt)*N(0,1). Still, from my point of view, it's entirely obscure what you are doing. Again, maybe I misunderstand what you are trying to do. You only posted a snippet of your code. If you want to evaluate the likelihood of your data r (presumably given to you) conditional on your unknown parameters, this sure as all hell is not a closed form Gaussian distribution. It's not a closed form distribution of any kind. It's not that simple. If you want to evaluate the likelihood of your data r_observed given your parameters, you need to run the Markov Chain with those parameters and look what kind of r it gives you. You can evaluate the likelihood for that. But you'll need to do that many times, since this is just a sample of the joint distribution p(r, parameters). Try to leave out the sqrt(dt) * N(0,1) term. Then this is a discretization of a simple ODE. Then you can evaluate the likelihood in closed form, but still not the way you are trying to do. You would need to solve the ODE. As a very rough sketch, ignoring the stochastic term and pretending it to be an ODE % ---------------------- r_data = [8.4, 2.3, 1.7]; r_sol = zeros(1,3); r = r0 for t=1:3 r = r + a*(b-r) r_sol(t) = r end % of course sigma genreally speaking might also not be known likelihood = normpdf(r_data, r_sol, sigma) % ---------------------- Despite your assertion of being familiar with those concepts, from what you posted you seem to have the understanding that there is a closed form distribution which is a Gaussian. From my point of view this looks as though you were trying to solve this problem before actually understanding the basic theoretical notion behind it. 
All of these parameters are unknown. The point is I'm trying to find the parameter values that maximize the likelihood. I'm not claiming to have any understanding of the mle function in MatLab. But in principal you should be able to do a maximum likelihood with these parameters and then the first order conditions of the log likelihood would give the values. I just don't know how to do this exactly in MatLab.
I think we've reached an impasse. I don't think what you are trying to do is possible the way you want it to do. See e.g. http://docs.pymc.io/notebooks/stochastic_volatility.html
i'm assuming a "particle swarm" algorithm is used a bit in here. there are some really good videos on YouTube describing the algorithm. it's been my experience that people writing toolboxes like this (or even MathWork's own code) has a bunch of "extra" code for doing things like error checking, making an algorithm that can be 50-100 lines go to 200+. if you're just trying to learn the algorithm itself, Wikipedia or YouTube are usually great starting points.
if you have the Diff Eq's for your model, why not use simulink to model them? 
I don't know if I could do a better job than the documentation. 
 function AT = temp(T, H, W) AT = &lt;your stuff&gt; end Jesus fucking Christ try Googling "how to make a function in Matlab" first next time. 
Matlab and finite element analysis are tools used to solve problems. They are not the focus of a master's degree / thesis. What are the problems that each is being used for?
Matlab and finite element analysis are tools used to solve problems. They are not the focus of a master's degree / thesis. What are the problems that each is being used for?
Both are for biomedical solid modeling. Matlab will be for cardiovascular mechanics, and LS Dyna fea is for studying orthopedic mechanics. I'm wondering which tool is more valuable to learn?
I currently work for a medical device company in an R&amp;D group. More specifically, I am part of product development and have seen the use of FEA much more than MatLab due to our interest in stress analysis of plastics. For MatLab I have used it simply sort and parse through large data sets from sensors with a high sampling rate. 
I don't have much familiarity with BME, but my gut response is to go for the one you have a preference for, if you have one. I'd also recommend looking for a more BME focused forum for advice specific to that career path. Aside from that, I can say that matlab is a more general tool (some people have written fea programs in matlab), used across many engineering disciplines. FEA is still widely used though, primarily for civil, mechanical, and aerospace applications.
This question is concerning in that these are not comparable. MATLAB can be used to perform FEA but FEA is just a method for solving PDE’s
Sorry I should have clarified but I meant which "tool" is more commonly used and useful to know. I realize MATLAB has many application (like also for image processing) and my question includes all of its possible common uses, and whether the value of knowing this language gives more return than knowing how to use fea software. By fea i meant commercial packages like LS Dyna.
I've also been told software such as comsol can be a much more friendly gui for people who can't really get the hang of programming.
Sorry im really lost in what youre trying to tell me
Is there something you are trying to understand? Should there be something attached to this?
There's already a lot of well written documentation about what a struct is, just like there is loads of great documentation for everything in Matlab. I'm not able to do a better job of describing what a struct is than the documentation, without essentially copy/pasting the documentation. I assume you've already read the documentation, because who wouldn't do that right away when they have a problem? So why don't you just tell me what part of it didn't make sense to you? 
I've been trying to use those commands to get some kind of inside view but I haven't been able yet. Whatever I do I am always looking at my figure from outside it. To get a simpler shape I used a cube but the results were still the same, It doesn't matter the point I feed *campos* is inside the cube, the camera view is still from outside it. d = [-1 1]; [x,y,z] = meshgrid(d,d,d); % a cube x = [x(:);0]; y = [y(:);0]; z = [z(:);0]; DT = delaunayTriangulation(x,y,z); tetramesh(DT); campos('manual') campos([.5 .5 .5]) This prints a 1 sized cube centered on the axis and asks for a camera view from inside it, with no results... Am I using it wrong?
I'll try to run your code and see what happens
I commented above that you should choose based on the topic of research, not the software being used. But if you HAD to make a choice based on the software/language. Then, I think you just answered your own question. Matlab can do tons of things, including the FEA like that which is done by LS Dyna. For that reason, I would say that Matlab is much more versatile and will provide you with the ability to do more and approach a greater variety of problems. Having said that, once you learn one language, you can relatively easily pick up another. I started with Matlab, and not mostly do Python. 
&gt; wtfamireading Okay, so first this "headline" is about "data compression." Biggest problem for me is that I don't see how anything is compressed. The author "reconstructs" the data with some variable called `x_syn`. How is this data reconstructed? Let's expand the definition for `x_syn`: x_syn = E(:,idx) * (x*E(:,idx)).'; Okay, cool. What's `x`? *The original data.* Am I missing something? Where's the "data compression?" I've got lots of issues with the article, too, but my main gripe is wtf is the point of this? What does this achieve? Why not just use the original data?
I am not the author of the article but PCA helps with eliminating the collinearity in the data and the new vector is meant to be a lower-dimension, “compressed” representation of the original. This allows to perform complex operations with the data quicker.
Hello, if you know how to obtain a discretized expression for your continuous process, and the process assumes a known distribution for the errors, then max likelihood is feasible. It is not super hard though. Step 1: Write a matlab function that takes a vector of parameters (a,b,g,sigma) as its first input (important for optimization routines o nthe function) and the observed data as the second input. In the function, compute the implied epsilons (your normally distributed variable) given the variable vector. E.g. if your model is b0+b1*x+e = y then compute a vector of y-b0-b1*x where b0 and b1 reference the inputs in your parameter vector. You now have a vector with the errors implied by your parameters. To do MLE, you must assume that they follow a particular likelihood (here you assume standard normal.) Next step is to compute a vector of the likelihoods of each observation. Last part of the function is to take the sum of the likelihoods (and put a minus sign in front of it, because matlabs built in optimization only minimizes. Minimizing the negative function is equivalent to maximizing the original function.) Step 2: Use the fmincon function to minimize the negative likelihood function by changing the input parameters. By numerical optimization, it tries different values for the parameter vector and returns the one that minimizes the negative likelihood (= chooses that parameters that yield the highest probability of drawing your sample.) 
&gt; and the new vector is meant to be a lower-dimension, “compressed” representation of the original. It's not. I don't see how any of the math in there would make it lower dimension. Again, the `U` matrix is an (element-wise) scaled version of `x`, the original data set. There are the same number of entries, and the matrix is (apart from being transposed) the same size. I'm not a stats guy, but this looks to me like it's a fancy data-fudging tool. The statement "helps [eliminate] the collinearity in the data" makes it sound like there is some correlation in the data, but you don't think there should be, so you're going to use this method to fudge the data until there isn't correlation. Again, I'm not sure what the *point* is. If you want the data to be a certain way, why not just make it up to begin with? Beyond that, I'm not sure that I believe *this particular method,* as presented, does anything meaningful. Consider: (cov(x(:,1),x(:,2)) - cov(x_syn(1,:),x_syn(2,:)))./cov(x(:,1),x(:,2)) You can see that the covariances changed by 1.2 to 7.6%. So, does this method even eliminate collinearity? 
Yes, you're using it wrong (just a bit). DT = stuff..... figure; ax = gca; tetramesh(DT); campos(ax, [0.3, 0.3, 0.3])
You shouldn’t combine the terms into one like that. That’s like complaining something like gzip(data) does not compress because hey, it still has the original data as an input. The U term is part of the compression. The important part is the sliced E matrix. That’s where information is cut off. It’s not easy to spot because they also do the E slice during the synthesis part. The true elements you need to save for the synthesis is U and the Slice of E. The article isn’t the best introduction to PCA but the picture with the scatterplot gives a good overview. You create a new orthogonal basis for your data that is ranked by explained variance in the data. This is represented by the red coordinate system. The idea now is to project you data onto a limited set of those basis functions only. In this case just the first one. So now instead of two dimensional data in the original coordinates you have projected onto a one dimensional new coordinate. PCA related methods have a lot applications in reduced order modeling, they are usually called proper orthogonal decomposition POD in that context. In some cases the variance even has a physical meaning. When decomposing flow fields it represents the energy in the flow. That means the generated basis functions are energy optimal. This allows you to cut away modes that contain little energy. Lets say you take t two-dimensional velocity snapshots of a flowfield with size x times y. This gives you a matrix of size (x,y,t) Lets say you only need the first three modes to represent most of the energy in the flow. The matrix of the modes then has size (x,y,3) Projecting the data onto these modes results in a temporal matrix of size (t,3) So instead of a matrix (x,y,z) you only have two matrices (x,y,3) and (t,3) which can be a huge difference 
Hey could anyone say why I'm being downvoted so I can rephrase my question? 
There is a [list of all the toolboxes here.](https://www.mathworks.com/help/index.html) I'm betting that the ones you will be most interested in are the "Math, Statistics, and Optimization" ones. 
Matlab doesn't really use packages
bruh. you can get different solutions from different numerical function implementations.
Learn by doing, train on the job :)
Real word scenario is that you do not have pristine image, just noised ones that you want to clear. That "non-sense" operation is just for explanation and comparison how successful de-noising operation was...
The benefit of PCA are hard to visualize because the biggest benefit comes when you have a large set of highly correlated series. For illustration this article only used two dimensions. You can represent the the original data as a single eigenvector (the one with the largest eigenvalue) and the covariance matrix. The final graph shows the data loss by using only one eigenvector instead of both. You can quantify your data loss and prioritize your eigenvectors using the eigenvalues. Let's say for example you want to forecast f temperatures for a few thousand locations but all the locations you are forecasting are really close together and highly correlated. You could forecast each individually but computation is expensive. Instead you can forecast a single "compressed" principle component and use the covariance matrix to "imply" (expand out the principle component) the other locations. The method is really useful and I've used it in few real world applications. Hope this helps.
Oh that makes sense! Thank you very much!
you could look at the Release Notes for the versions between 2013 (a or b?) and 2017 (a or b?) to see if they made any changes to optimset.
it also allows you to get an idea on the error. the Neural Net will output a denoised image, so to determine how well it did, you want to compare it to a denoised image. 
https://www.mathworks.com/help/symbolic/simplify-symbolic-expressions.html Google is your friend
But he's also really difficult to get information out of. Trust me, I've searched for what I'm asking and couldn't find a solution that worked for me. I don't have any symbolic variables in my answer, so simplify() doesn't work for this. 
Why are you working in symbolic variables to begin with?
I need to solve for the roots of an equation. Is there a better way to do it? 
Ok, just saw that you updated your post with a link to the code. Let's talk this through, because something fucky is definitely going on. You have two sets of 1 equation: (1)CharEqn1 = gamma^2 + B*gamma + C1; (2)CharEqn2 = gamma^2 + B*gamma + C2; and two sets of two variables: (1)CharEqn1 gamma (2)CharEqn2 gamma yet you are getting out a numerical value. My guess would be that solve() assumes the left side is 0? so it's setting CharEqn1, CharEqn2 to 0 and solving? Either way, I'd say ditch that and go with the roots() command. 
roots() takes the coefficients and outputs roots. No symbolic variable needed.
Oh man, I completely forgot about that command, thanks!
The reason it didn't work before is because the symbolic variable, even after reducing, gives you back a string of text. It doesn't matter that that string is pi/8-(pi-...) is all numbers, it may as well have been a Shakespearean sonnet. The computer doesn't see it as a numerical value anymore. 
vpa(), variable precision accuracy. It will give your answer with as many decimals as you choose.
yup, it works for pretty much any size polynomial, too. Just have to remember to use 0's for skipped terms when necessary. :) Cheers!
Analyze the correlation between ice cream consumption and drownings.
Hmm interesting, I typed in “Ice cream consumption a” and the first one was what you mentioned. Now I’m curious 🤔
Decline in piracy and global warming are strongly correlated.
No. That's the point of offering the toolboxes and IPs in general.
learn how to use the erase tool in paint
I don't know what fnplot does, I've never used it, but plot3, scatter3, surf, and mesh should all have popped up when you searched the documentation. 
Isn't fnplt you're looking for ? From the curve fitting toolbox ?
Yours is the closest explanation that's gotten me anywhere close to understanding what's going on, so thanks for that. You mention gzip(data) as still having the original data as an input, but would you say that gzip(data) was compressing anything if the output file size were identical to the input file size? This is where I feel like I'm missing something, or maybe "compression" means something different in this field. I can kind of follow along with the snapshot example, but there also I *can* see that there is compression. The article linked in the OP, despite being titled, "A visual *introduction* to *data compression*...," gave very little explanation and the result of their example gave no compression that I could see. `U` and `x` in the example are the same size. In your example, for say (10,10,1000), I could see that you can compress 100k samples down to 3.3k - that *does* seem like a huge advantage. 
My gzip comment probably wasn’t that helpful, just ignore that. What they call compression in the post is just the dimensionality reduction that also happens in my snapshot example. They start with their data vector x of size (a,2) From that they generate the covariance matrix S and it’s eigenvectors of size (2,2). The eigenvectors represent the rotated orthogonal basis that is shown as the red lines on that figure. They now chose to use only the first eigenvector by creating the slice E(:,idx), I’ll call this Es from now on. (Their searching for the largest eigenvalue and using that for idx isn’t really necessary since the eigenvectors returned by eig are already sorted) Now they project the original data onto Es to get U. This is what my gzip comment was referring to. Yes you use the original data here but this is still part of the „compression“ algorithm. The finished output is just U and Es. U has the size (a,1) and Es has the size (2,1) So in this example they store a plus 2 values instead of a times 2
Aaaaah I see. I screwed up the math in my mind reading through. You are correct, `x` is 31 x 2 = 62 terms. `U` is, in fact, 31 x 1 (and not 31 x 2 like I kept thinking), and the slice of `E` is 2 x 1, giving 33 terms total vs. 62. 47% reduction. The whole method seems to be a way to determine which data is "negligible," in the same way that you might choose to assume some aspects of a model are negligible. Neat stuff, I just wish the "introduction" could explain the method as well as you can :)
That does sound promising. I was going to use ggplot2 for some of the more complicated data visualization, but I really need to stay in Matlab. Thanks!
Well if you are used to ggplot2 you should feel right at home. It doesn't work *entirely* the same of course, look at examples.m to see. It even has some additional features compared to ggplot2 that might be useful for your setting (I'm the developer, and a neuroscientist).
Thanks! I'm in genetics and evolution and pure math, which has turned into stats for a behavior project. 
&gt; other than Mathworks’ documentation... When you say "other than...", etc... i mean... the doc/tutorials/examples are pretty extensive. what exactly are you looking for?
Go to the documentation for a function, then look at the "References" section, then go read those references.
More advanced tutorials that go beyond just teaching how to use the toolboxes.
Thank you, this helps!
I use plot. To plot more then one function you need to use ' hold on' Ex: x = 1 : 1 : 10; f = x . 2 + 1 ; plot( x, y, 'ro-') g = x . 2; hold on plot( x, y_Abl, 'b:');
The only time I got an error was after eating a bunch of food and then smashing into the wall. Given that the fundamental error (the one at the bottom), talks about a destroyed object, I'd say the event object passed to keyPress is getting destroyed somehow. Are there other ways to trigger keyPress after a game over? I'll keep poking around... Error using matlab.ui.Figure/set Invalid or deleted object. Error in Snake/gameOver (line 142) set(fig,'KeyPressFcn',@doNothing); Error in Snake/Movement (line 70) gameOver(); Error in Snake/Move (line 42) Movement(mov); Error in Snake/keyPress (line 36) Move(evt.Key); Error using Snake/keyPress (line 35) Error while evaluating DestroyedObject KeyPressFcn.
Good question, containing explanation, code, AND errors. Kudos! The problem lies in nested callback resolution and the resulting multiple calls to gameOver(), which includes a set command to a deleted figure. This part you'll have to track down yourself... good luck. However, you can very easily fix it by wrapping the code inside gameOver() in an if to test if 'fig' is still a valid handle: function gameOver() if isvalid(fig) set(fig,'KeyPressFcn',@doNothing); grid(:,:) = 0.2; set(fig,'CurrentObject',imagesc(grid)); pause(1); close (fig); disp('You lose!'); gameover = 1; end end Works 100% of the time after that change. Happy coding!
Agreed it only happens after eating. If you just smash into the wall first thing, the problem never happens. Pretty sure it's the callback resolution chain; there's some dangling call to gameOver() that happens in there. Glad that's not my headache today. :)
This is more a math thing as opposed to a MATLAB thing, but my favourite book for learning this stuff is: https://books.google.ca/books/about/Numerical_Methods_for_Partial_Differenti.html?id=XQFMrgEACAAJ It is 100% focused on the heat equation too. There are no code examples in there, and the pseudo-code isn't that useful, but if you can wrap your head around the math parts you can write the code directly into MATLAB from there. Also, for 1D PDEs there are surprisingly good references out on Google in the finance literature that use Crank-Nicholson.
I was able to identify the problem. Thank you so much!
I was able to identify the problem. Thank you so much!
Couldn't help it, got curious, took another look. If you delete the first call to Move(evt.Key) in keyPress, you won't get the errors anymore, i.e.: function keyPress (~,evt) while(~gameover) Move(evt.Key); pause(0.075); end end I THINK that since every time you hit a key, it goes into Move, checks for gameOver(), then goes into a loop, at any given moment the program is stuck in multiple layers of loops. Once a gameOver() is hit, the figure is deleted and the loops unravel, more calls to Move (i.e. checking for gameOver()) can occur, causing the error cascade. I'm not 100% sure what the hell is going on; callbacks are weird.
Happy to help. :)
Explain what? How to plug it into matlab? How to find eigen values by hand? https://www.mathworks.com/help/matlab/ref/eig.html?s_tid=gn_loc_drop#btifddh-1 Not the "example" hyperlink to the right of the description of each of the eig related functions you listed. 
How would you do it on paper? If i'm understanding your problem correctly you'd like to draw a 2d vector 'A' from a Table 2 starting coordinate to a Table 2 ending coordinate, construct a second 2d vector 'B' with a start point of [table 1 point] and a slope such that it will intersect the Table 2 vector orthogonally, and measure/sort the lengths of the second vector. Why not just do that? I'm sure there's a more elegant way to do it with fancier math but if you're just doing it once it shouldn't be too bad to do it that way. 
Do you know how to calculate the distance between two points? That would be a good start.
Hi, I looked at the Wikipedia page for the model and I noticed that the Wikipedia page had an extra N in the equation. Using the Wikipedia equation I seem to get the convergence to 0 for N0 &lt; T as you said. The equation described by Wikipedia was dN/dt=rN((N/T)-1)(1-N/K) Can you confirm that the Wikipedia equation describing the model is right?
&gt; Since the error function is odd, I do not want to use even powers in the approximation. what? Why? I don't understand how the inclusion of an even power could make the error function even... Wouldn't it be that a polynomial with only even powers would be even, but the inclusion of even a single odd power would make it odd? I guess I just don't understand the reasoning for the constraint of "No even powers, ever" for this case.
YES!! Thats the correct equation. Sorry, I didn't notice the missing N, I was being an idiot. 
Take y=x^2 + 8x. The function has both even and odd powers but is neither even nor odd. Perhaps you're thinking of different definitions of even and odd function but the definitions are: If y(-x)=y(x) then y is even. If -y(-x)=y(x) then y is odd. In my case, erf(x) evaluated along [-10,10] is a very clearly odd function. Adding in even powers for the polyfit command produces a function which is neither even nor odd.
That's good to hear :) As for the question regarding how to plot on the same graph you can use the hold on command. For example, [t,N]=ode45(Allee,[0,10],15); plot(t,N) hold on [t,N]=ode45(Allee,[0,10],9); plot(t,N) If you want you can use a for-loop as well.
I think [fit](https://nl.mathworks.com/help/curvefit/fit.html) and [fittype](https://nl.mathworks.com/help/curvefit/fittype.html) do the things you want. 
You're correct. I was getting confused and erroneously equating "not-even" with being "odd", when the actual definition is just a little more stringent. 
You'll have to use a custom fit function for this, not polyfit() 
Code is below. The solution I want is, c=-1.035 d=-2.290. syms x d c c = solve(int((((x^2+d)/c)^2-1)^(-0.5),x,0,(c-d)^(0.5))==1,c) d = solve(int(((x^2+d)/c)/(((x^2+d)/c)^2-1),x,0,(c-d)^0.5)==3,d)
&gt; If there's any way you could explain with words and not just code You can think about eigenvalues and eigenvectors as kind of analogous to the coordinate axes on a graph. For a simple 2D case, the "standard" euclidean axes (`x` and `y`) correspond to eigenvectors [0 1] and [1 0]. But, you can tilt one of the axis and/or change the spacing and still be able to reach any point in the 2D plane with your new axes (say, `n` and `m`), but a given point will have different coordinates in `(x,y)` space than in `(n,m)` space. Eigenvectors are analogous to the "tilt" of the axes and describe what direction you need to travel in such that only `var1` or `var2` is changing in value and the other is not (i.e., one is independent of the other). zthe eigenvalues are related to how "wide" a difference of '1 unit' is on the two axes. Eigenvalue decomposition ends up being handy in a lot of problems for much the same reason that axes and handy in plots - knowing what direction to travel in such that only one variable is changing (or, in this case, understanding what the orthogonal basis vectors are) and knowing how quickly the variable is changing in that direction are very useful pieces of information.
FYI - the `pca` function in matlab will also do principle component analysis, works with more than 2 data columns, and has a number of advanced options built in. Dont get me wrongg - understanding something well enough to code it yourself is very useful, and on more advanced functions (particarly minimization problems) I find I can write a code that is much better than anything Matlaab has, but for something like pca id probably just stick with the matlab version (though it isnt a builtin, meaning you can type `open pca` and copy/modify their code. Its also recommended to use `svd` instead of `eig`, since it is a bit more stable (though `eig` is faster, so for large problems that are still small enough for the full eigen/singlar decomposition to be practical using `eig` might make more sense).
You can do this 2 ways 1) Set the unknows as symbolic variables using `sym` before you use `solve`. This is easy to implement, but in general not reccomended. Using symbolic math in matlab is slow, and the general consensus is "only use it when you absolutely need to and dont have mathematica available to use". For big problems, it can literally be 3-4 orders of magnitude slower (meaning the difference in run time is minutes vs days). 2) numerically solve it. Example: you want to solve [x, 3*y; 5*x, 2]=[3;7] Convert to standard equation system and group variables on one side. Add in 0 coefficients for any missing variables. 1*x + 3*y = 3 5*x + 0*y = 7-2 = 5 rebuild as matrix system and pull out the unknowns A = [1, 3; 5, 0]; b = [3; 5]; A * [x; y] = b Solve the matrix system [x; y] = A \ b; This is the "right" way, but requires a little more initial setup.
&gt; The function is highly numerically unstable, so I imagine even the slightest difference in defintion of the algorithms or definitions of how TolX is used could cause this. Does this sound possible? Yes, but it might not even require this, depending on hjow numerically unstable the problem is and how many local minima their are. Even if the algorithm is exactly the same the JIT compiler got a major overhaul between 2016a and 2016b (i think - i might be off by a half version year). This means that there is almost a zero percent chance that a given peice of code results in the same exact computations being done. If you had imfinite precision it wouldnt matter at all, and most of the time it only matters up to the machine epsilon (1e-16 or so for doubles), but for a really numerically unstable problem and a bit of luck its not too hard to imagine these errors being large enough that somewhere in the early iterations the solver gets shifted enough to trend to a solution that is one local minima away from the original solution. That said, the algorithms likely have changed a little bit too. PS personally ive found the fmin____ functions to be slow and inaccurate compared to writing my own inversion code. Depending on how knowledgeable you are about inverse methods it might be worth while.
For a numerical solution use fsolve. Then you would need to define a function that takes a 2x1 vector with your unknowns and outputs the error as a 2x1 vector, one entry per equation. The function should use numerical integration to evaluate the integral. A trapezoidal scheme is available as the trapz-function
I don't know about WSL, but it looks like you can [use gcc on Windoze through MinGW](https://www.mathworks.com/matlabcentral/fileexchange/52848-matlab-support-for-mingw-w64-c-c++-compiler). A quick search turned up [evidence that openMP support works](https://www.mathworks.com/matlabcentral/answers/279171-using-mingw-compiler-and-open-mp), too. That said, if you're compiling code that is already using natively parellelized builtins, I wouldn't expect Coder to speed it up much. Allowing it to parallelize those same functions will probably only recover your performance in those places, and the performance increase in other places will be negligible. What might actually make the code faster in C is doing as much as you can with one element (group of elements) before moving on to the next. That's in contrast to the Matlab way of doing a calculation for all elements before moving on to the next calculation. I think Coder will do this to a small degree sometimes, but from what (very small sample) I've seen, this doesn't appear to be very deliberate. The main thing you're trying to do with this is to be more memory efficient. No sense loading everything from memory multiple times if you can avoid it.
I thought about doing this but how would I convert them into differential equations? I appreciate the help, thanks! 
Ok thankyou. Thats what I thought.
I’d also love to see the code for this
&gt; Matlab coder makes the **function** run slower I'm not sure I understand. Are you compiling a whole script and then running it as a process, or are you compiling a function and making repeated calls to the function? Is there a stripped-down example you could give where the compiled function is slower than the Matlab function? Do you have the same problem with mex files? 
dude... you didn't feed any x-locations into `plot`... so the default x-locations are the array indicies 
Okay. I (mistakenly) thought that I did that when I entered x = -5:0.01:5. How should I have done it?
So I was really talking about the generated mex files being slower when called from matlab than the original matlab script. Heres an example from a function that uses bitwise operations to convert data. This example doesnt actually convert te data properly, but the real code is very much like this but with a few extra steps. FUNCTION: function x = coderTest_dataConversion(b) %% Uses bitwise operations to convert data % b is uint32 % x is float32 (IEEE single) % Fix binary bit ordering b = bitand(b,uint32(2147483648)) + bitshift(bitand(b,uint32(1056964608)),1) + bitand(bitshift(b,bitshift(bitand(b,uint32(15728640)),-20)),uint32(8388607)); % Typecast result to IEEE single now that bit ordering has been corrected x = reshape(typecast(b(:),'single'),[size(b)]); end TEST CODE: b=1e12*randn(2000,10000,'single'); b=reshape(typecast(b(:),'uint32'),[size(b)]); tic Xm=coderTest_dataConversion(b); fprintf('\nMATLAB Code took %.3f Seconds',toc) tic Xc=coderTest_dataConversion_mex(b); fprintf('\nGenerated C Code took %.3f Seconds',toc) Xdiff=abs(Xm-Xc); if any(Xdiff &gt; sqrt(eps((Xm+Xc)/2))) warning([num2str(nnz(Xdiff &gt; sqrt(eps((Xm+Xc)/2)))),' Points do not match!!!']) end OUTPUT: MATLAB Code took 0.319 Seconds Generated C Code took 1.085 Seconds 
https://stackoverflow.com/questions/1719048/plotting-4-curves-in-a-single-plot-with-3-y-axes My personal opinion is that your example figure looks pretty crappy. It's too messy! Stacked subplots would be cleaner and help a reader see the data/trends better. 
Thanks - I've seen this exact link, but I'm not sure I understand the syntax where all the hs are defined. Is all the red text stuff that I define myself, or stuff that's optional? Are all those parameters seriously required just to define one variable? And where can I find an explanation for each of them? I agree the figures are crappy looking, but unfortunately we need to be able to see how everything is co-varying at once, and it's not for any sort of professional presentation, just our own reference at the moment.
Just copy paste that whole section into Matlab and it'll make the figure. 
Don't think he ever got back and updated us, unfortunately.
Ah, okay. I did that and it's definitely given me a few things to play with. The biggest issue now is that I technically have two different x-axes to work with - they are both over the same period of time, but one is high frequency sampling, and one is low frequency sampling, so they should be interpolated onto one another (so ultimately it looks like the same x-axis). It looks like maybe I just need to define that second x-axis at the top, but then I'm not sure how to handle it where the hs are defined - do I just need to create additional h axes? Also, the plot that it spits out is really small and does not automatically resize when I stretch the window - I'm not sure how to fix this.
Using Coder, I thought the Matlab code gets converted over to C/.Net/etc., whereas obfuscating the algorithms is more associated with "p-code" and the Compiler toolbox.
Have you tried playing around with the syntax in the command window? Just punch in some numbers in there and make sure the syntax functions in general. then run your code one line at a time and see if there is an error showing up somewhere else?
That's not capable of introducing any incompatibility issues. Any old code that did that would throw an error, so none of your old code (assuming it works) will be doing that. 
Ah, ok, you’re right. I was confusing with compiler. I don’t have much experience with coder.
&gt; I don't know about WSL, but it looks like you can use gcc on Windoze through MinGW. A quick search turned up evidence that openMP support works, too. I think the minGW that yo can download for use with matlab *can* implement openMP, but not in a way that worked with matlab coder. For one I can confirm it wont let me and I have that minGW already installed, but on the [list of compilers supported by coder](https://www.mathworks.com/support/compilers.html) if you look at minGW and go to [footnote 6](https://www.mathworks.com/support/compilers.html#n6) it shows it as unsupported too. The same is true of lcc-win64. The only way to use openMP and compile it on windows is to install microsoft visual studio. &gt; That said, if you're compiling code that is already using natively parellelized builtins, I wouldn't expect Coder to speed it up much. Allowing it to parallelize those same functions will probably only recover your performance in those places, and the performance increase in other places will be negligible. This might be the case, but even so id like to test it, which requires generating C code that also runs the native parallelized builtins as multi-threaded instead of single-threaded. If it cant do this then coder is completely worthless to me, since literally *any* function that I need fast enough to consider using coder on is pretty much guaranteed to already heavily rely on these. &gt; What might actually make the code faster in C is doing as much as you can with one element (group of elements) before moving on to the next. Ill have to experiment with this. I know that some of the matlab parallelized functions (bsxfun especially) cause huge spikes in memory usage.
&gt; how would I convert them into differential equations In general, you take the derivative of both sides
&gt; This seems straightforward enough, except that it is categorically wrong. &gt; 1297612424*3 values * 8 bytes / value = ~3.1 GB Are you sure? Wolfram Alpha seems to think it's more like 31.14 GB : https://www.wolframalpha.com/input/?i=1297612424x3x8+bytes+in+gb
Yep, that was it. I saw Matlab using 3gb of memory and that the memory requirement was 31&lt;numbers&gt; and naturally assumed that these were the same. Turns out Matlab decided to page 30gb of data when it was stored in a cell array. I really need to figure out a good way to limit Matlabs TOTAL memory usage. The built in "largest single array limit" doesnt work in waayy too many situations. 
Well, sort of. The error thing you're saying is true, but this does not mean it can't cause incompatibility issues. Maybe some code depends on such an error being caught using a try-catch block. in such cases not generating an error changes what code is executed, and thus introduces an incompatibility. Code shouldn't work like that, but that doesn't mean it doesn't.
That's true, if OP is doing terrible things in his code he might have problems. I'd say he should fix those things anyway, though. Even if he doesn't upgrade. We're having a similar issue. Some old code did evil things and is now being broken by the handle graphics changes. We're systematically finding the evil things and fixing them. 
I remember an old tip about using the underlying Java virtual machine to do that, using command line arguments like `-Xmem` or something. I don't remember the details, but maybe that could give you a starting point. 
What debugging efforts have you already made? Did you look at the values of the variables in the code you wrote and considered how they got that way? Have you looked at the documentation for the functions you're using to make sure you're using them appropriately? 
ok since I have posted this, I made a few more changes to the image processing part and I got this https://imgur.com/a/YL9yn This is still not what I want, since I am getting extra boxes. I do not know what I'm doing wrong since I'm basically a beginner to matlab and image processing. I've been using the boundingbox command without knowing how it actually works. Should I probably make a neural network to find the right rectangle? (I'm really a beginner here as well) Thanks for replying :)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/hkcz7R1.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
I think it's a little unreasonable to make a neural net rather than read the documentation for the tools you're already using. That's like building a 747 because you don't want to look in the owners manual to see what kind of gasoline your car needs. 
I did read the documentation, but maybe I'm missing something. Here's what I'm working on. It is a lung scan with a tumor. The white portion is the tumor. This isnt going to be the only lung scan I am going to work with, so I was looking for something that would always choose the tumors that is inside the black region which is why I thought maybe a neural net would work, but knowing matlab, there's probably some function that I do not know. 
A neural net for object identification is not unheard-of, but if you're just trying to find an object in a binary image you shouldn't need to get that fancy. I don't know what functions you are using or what debugging steps you have already taken, so it's impossible to be specific about the problem. However, I can say that it might be an issue that the region you're looking for is connected to the outer region, so it won't be considered a distinct object. 
The latter, I have 2 sets of data on one graph and I would like to plot each of their respective trend lines on the same graph for comparison.. I'm very new to MatLab so sorry for the basic question 
I got a clue; Try to work out the exact meaning of the error message. What are the "subscript indices" in this case?
Just write a short script and use polyfit, no need for cftool. If your datasets are [x1,y1] and [x2,y2]: [p1]=polyfit(x1,y1,1); [p2]=polyfit(x2,y2,1); y1_fit = polyval(p1,x1); y2_fit = polyval(p2,x2); plot(x1,y1,x1,y1_fit); hold on; plot(x2,y2,x2,y2_fit); hold off;
thanks
This hasn't seemed to produce what I want sadly. When I do the above for my variables I get a linear line coming from each data point rather than 2 overall trend lines :/
Try doing this: x = zeros(1,3); x(1/3) = 10;
You can but generally dumping a bunch of code isn't that helpful. Snippets and small examples are better, or you can use pastebin for larger chunks code. More important is knowing what function you used to try closing the gap. 
As a few people have already pointed out... have a look at your iterating number (i) and then what you index with it in the loop (x3(i) and y3(i)) in relation to your error.
That's because your subscript indices need to be either real positive integers, or logicals. Yours are neither, do you know what they are?
Thanks for the advice, found the problem in the code after using your example.
Thanks for the tip...Ill have to look into it. On a related note, I had been wondering how I managed to rack up nearly 50 TB of writes to my ssd in less than 2 years (which comes out to ~75 GB per day, every day). I suspect Matlab is responsible for a good part of that...
https://www.mathworks.com/help/matlab/ref/repelem.html
There's probably a function that does this natively, but otherwise, if v is a **row** vector, w = repmat(v,3,1); % Make an array with all rows equal to v w = w(:)'; % Convert to vector reading columnwise, transpose back to row Did you mean a 15 element vector? Did you want the extra 4 on the end? You could also use an interpolation function with nearest neighbor turned on, which I would lean towards with large vectors. Why do you want to do this? There may be a more efficient way to get the same effect without having to use up more memory.
They are just numbers. I tried the exact same function on octave and it worked but not on my computer matlab
I tried, the error is from the roots part. Octave ran it fine but not my matlab
I used deltaGCalc(5,0.01,1)
Let's Write the least-squares fit to a line ourselves! % Pose the Linear Problem Gm = d % Where G is our linear model with x as a vector of the dependent variable (say time steps), m is the parameter vector of intercept and slope, and d is the data vector G = [ones(length(d),1);x]; % The Model m = (G'*G)\d; % The Lease-squares Solution Parameters % Create A vector of Test Points for the Regression line. pts = 1:100; % Scale this to your data fit = m(1).*pts + m(2); To create a second fit repeat the least-squares problem with your second data set. Use hold on; to plot both the data and the fit. Happy Cake Day. This lesson in linear algebra will serve you many slices. 
I tried to use imdilate by considering disk elements. I'm already using imdilate by considering lines. I used regionprops to get bounding boxes. It did recognise the part I wanted, but it also considered a few others. So I got 4 boxes out of which 3 were unnecessary. I'll post the code once I get back from uni today 
The function kron will do this if you want the same number of each item. For instance, if you have A=[1,2,3]; kron(A,ones(1,3)) will return the array [1,1,1,2,2,2,3,3,3]
Well no, they don’t. One just removes the samples, the other filters the signal with a low pass filter to prevent aliasing and then removes the samples. Pro tip, use resample. 
Use the definition of convolution. You have two sequences,, lets say a(n) and b(n), then y(n) as convolution of x(n) and y(n) will be: y(n) = sum_k (a(k) * b(n-k)) If you want to implement it using for loop: y_n =0 for m=1:k if ((n-m) &lt;= 0) y_n = y_n + a(m) y(n-m) end end 
Looks like it gave you exactly what you said you wanted. 
This is a function. You don't have to "pull a figure forward using figure()", you just call the function with the arguments it expects. If you're interested in learning what it's doing and how it works, the normal approach should work: read the documentation about the functions it's calling. The documentation for the figure() function is quite straightforward. 
You're not going to get much help for your question for a couple reasons. 1) You haven't tried anything (seemingly) and haven't posted any code. Even if we tried to help you, you'd likely come back in 10 minutes with a syntax error 2) You haven't been clear about what you don't understand/where you are stuck 3) What you're trying to do is relatively trivial in Matlab (loading data is easy, calculating distance between two X-Y points is easy) 4) It seems like you haven't yet internalized how coding really works; i.e., the code is a just a sequence of commands that should parallel how you'd solve the problem using pencil-and-paper (albeit much faster) 5) The precise methodology you are trying to employ is unclear
This should do what you are asking for, although the structure of your output variable will be hard to follow. You don't need the temporary assignment to Re though. And you're changing the size of Reynolds on every iteration. I know that the editor window is telling you not to do this. It's not lying to you - you actually shouldn't do that. Also, i = j = sqrt(-1). Stop redefining built in variables. It would be much better to have a list of the values you want to evaluate, like this: dList = 1:5; Qlist = 10:15; Reynolds = zeros(numel(dList), numel(Qlist)); for n = 1:numel(dList) for m = 1:numel(Qlist) Reynolds(n, m) = Reynold(dList(n), Qlist(m)); end end
If I understand what you're asking, you have a matrix \`Reynold\`, and you want to return the elements within the provided ranges of \`d\` and \`Q\` into the variable \`Reynolds\`. If that's what you're trying to do, you don't need loops at all. This works because you can call a matrix with a vector of indices and it will return the corresponding elements. You can so this for each index of the matrix. dRange = 1:1:5; QRange = 10:1:15; Reynolds = Reynold\(dRange,QRange\); If for some reason you need the results in a vector, as your original code suggests, then you can add the following line to turn a matrix into a vector: Reynolds = reshape\(Reynolds,\[\],1\);
xlim([-1 1]) ylim([-1 1])
xlim(*target*,[x1 x2]) where *target* is the handle for the axes you want to alter check out the documentation for xlim/ylim for more details: https://www.mathworks.com/help/matlab/ref/xlim.html
It might be a good idea to give a variable name to the frequency, and run the simulink model from matlab, where the frequency is defined?
Thanks a lot, this is exactly what I was looking for. Now I get the solution I was expecting. But Ive got one more question. I get the following warning: Warning: The solutions are valid under the following conditions: in(conj(Vgd(t)) + l_g*conj(diff(Igd(t), t)) + r_g*conj(Igd(t)) - l_g*w0*conj(Igq(t)), 'real') &amp; in(conj(Vgq(t)) + l_g*conj(diff(Igq(t), t)) + r_g*conj(Igq(t)) + l_g*w0*conj(Igd(t)), 'real') &amp; in(conj(Vg0(t)) + l_g*conj(diff(Ig0(t), t)) + r_g*conj(Ig0(t)), 'real'). To include parameters and conditions in the solution, specify the 'ReturnConditions' option.
Here is a [great resource](https://www.mathworks.com/products/simulink/getting-started.html) for getting started with Simulink. It may also be helpful to brush up on [state space representation](https://en.wikipedia.org/wiki/State-space_representation) of a dynamical system.
You might already know this, but the error specifically means that you are trying to multiply two matrices with incompatible dimensions. The error also tells you what line it occurs on, this is important information. You can figure out exactly where this is happening by using the debugger. 1. Set break point on the line of code in your for loop where the error occurs. 2. Copy and paste chunks of the code on that line into the command window. Are they doing what you expect them to?
I entered a new function date(x,y) and still the same problem. 100 is 1000. 
I was not aware of this. Thanks for the information.
I'll give this a try now, thanks!
Read my comment again. I think you’re retarded. 
I did, fuckhead.
Then why aren’t you using `plot(x,test(x))`? I literally linked the documentation and explained how the arguments should look. 
I read that article and it was very convoluted. Your comment just now was more helpful as I did not see you mention plot(x,test(x)) earlier. Now, it works, but it requires that I specify x in the *command* window rather than the *editor* window (for example, x = 0:0.1:100), otherwise it says "undefined function or variable x". Is this normal?
Alright, so let's see if we can get this working. I was just trying to get PJ working in C++ the other day, so I had most of the idea on hand. So, let's say you have a matrix that represents your solution. We shall call it φ (because that's what my notes use), and we are driven by a PDE we will call f(x,y). (From here on, I'm gonna try to use a lot of white space to make this kinda clean. I'm gonna be trying to get this to work in C++ next, so this will help me as much as you.)(Also, I've decided to use square brackets for mathematical parenthesis, and parenthesis for indicies) f(x,y)=(∂^2 φ)/(∂x^2)+(∂^2 φ)/(∂y^2). Let's break this up into finite difference scheme using a first order central scheme. f(i,j)≈ [φ(i+1,j)-2φ(i,j)+φ(i-1,j)]/2Δx^2 + [φ(i,j+1)-2φ(i,j)+φ(i,j-1)]/2Δy^2 Now, assume Δx=Δy=Δ then solve for φ(i,j). φ(i,j)=[1/4][φ(i+1,j)+φ(i-1,j)+φ(i,j+1)+φ(i,j-1)]-[Δ^2 /4][f(i,j)] Now, my notes are all in 2D, so you'll need to figure out the 1D yourself. You'll also need to derive boundry conditions of your own (or maybe they are given to you? Assuming you've been given a 2nd derivative, you'll need 2), but as you can see, all you need to perform Gauss-Seidel is a loop and your solution matrix (or, in your case, vector)
See second comment for derivation. Good luck, if you need any help, feel free to ask :)
"The code is running right now so I dont have an exact number for "what percent of the run time is taken up by generating the required sparse matricies", but im guessing it is well over 90%." i'd recommend using the profiler or tic-toc statements to check on the time since it may not be the part that's taking so long. i've only used sparse matrices a little bit, but your approach seems reasonable to me.
If you do it in the Fourier domain you get vectorization AND a significant algorithmic speedup
Ahh, clever! Thanks for the idea
This is how correlation already works in matlab, you don't need to implement that manually.
From your description I assume you have two matricies, and what you're doing now is looping over rows. doc xcorr2 is what you need, combine it with gpuArrays for a large potential speedup.
Except I would have to loop over many time series if I used xcorr. This could let me feed in a matrix of all of my time series at once.
I have an nxm matrix composed of n time series vectors of length m. If I used xcorr2, I guess I would only be interested in the very middle row of the output?
The 3rd is a logical statement that is replacing any indices in distances that is equal to zero to be another result.
It looks like you should focus on the trigonometry before considering the code. For one thing, there will (almost always) be two solutions to your problem; just reflect one solution about the line through A and R.Which one do you want Matlab to find? My first thought would be to analytically derive the coordinates of point L by considering the two right triangles formed by AL, RL, and the line from L to AR. Regardless of programming environment, you will most likely get the best results by using analytic expressions when available (then you just code your formula as a Matlab expression).
Thanks man will look at them
No problem. I'd suggest following along with the video series, then trying to make a simple (read: ideal) model of your Stirling engine. If you get stuck and aren't able to get it running, or it doesn't work the way you expect, come back with: * An image of your model's block diagram * Block definitions (transfer functions or state space) * Errors or erroneous results (vs. what you expect) With this info, we're much more likely to be able to help you find out what's gone wrong and get you back on track.
The image is use an array, so just plot the grayscale plots and use that to represent the difference between dark and light. 
Functions in MATLAB can be programmed as recursive just like any other c-like: A = f(2, 7); function a = f(b, k) a = 0; if k &gt; 1 a = a + f(b, k - 1)*b; else a = b*k; end end This example is a very silly power implementation, where a = b^k.
It would probably not charge the conclusion but I do believe it is bad practice not using the same cell count for the polygon test case for all languages
Wouldn't there be wrap-around effects if done in the Fourier domain? For example, at every lag the non-overlapping portions of each signal effectively 'wrap around' and figure into the calculation. This is what happens with convolutions, but maybe I don't understand a key difference with cross correlations. 
The specified mesh size was the same, but oddly enough in contrast to the Circle the Polygon test case did not result in the same number of triangles in the resulting mesh.
The specified mesh size was the same, but oddly enough in contrast to the Circle the Polygon test case did not result in the same number of triangles in the resulting mesh.
Have you uploaded the test cases anywhere? A comparison of a Python version would be interesting. [https://github.com/bfroehle/pydistmesh](https://github.com/bfroehle/pydistmesh) seems like an old code, but might work.
Vl is my input where I will be guessing input values and analyzing the output values. I then need to use Vl and Vv as input to fB and fq. How do I get these values to be output?
You could use a for loop or a vector input to the function, depending on what exactly you want to happen. (You may need to add a few "." To make the operations element wise instead of vector math, depending on what is supposed to happen. ) If I were you, I would also consider making your code more readable, because I have no idea what you're trying to do here, so it's difficult to suggest if a different approach might work better 
My final goal is a graph of B on y axis and V on x axis which will look like an upside down parabola with points (Vl, B) and (Vv, B). I have the 3 equations shown and know values for s and e, so I want to input values for Vl to fV and solve for the corresponding Vv. Then I will take that Vl or Vv value and plug in to fB to find the corresponding B value. These points will then be plotted on a single graph. fq is for another unrelated aspect. my range for V has to be &gt;0 but I have no idea what order of magnitude so I was first going to set it up with singular guess values but once the range is narrowed I plan to write in a for loop to create a full plot iteratively. Is that a more clear explanation? 
i think you are looking for the symbolic toolbox, which you have to have as an add-on 
dsolve()
if I understand it correctly, you have e, s, and fV as known parameters. Then first get the value of Vl, and use Vv, Vl to find fB. Am I right? In this way, in your first function, you will put Vl as output, Vv, fV, e, and s as input. then in the second function, fB is your output, Vv, Vl(calculated from 1st function), e, and s are your inputs. Here below are some sample codes: clear; clc; %define variables e = 0; s = 1; Vv = 0; %input Vl = 0; %input B = 0; q = 0; %call your function to get fB fB = something(Vv,Vl,s,e); %define functions function fB = something(Vv, Vl, e, s) fB = ((1/(Vv-1))-(((Vl+e)*(Vl+s))/((Vv-1)*(Vl-1)*((Vl+Vv)+ (s+e))))); end
Below I commented a more well explanation of the problem. When I input Vl, how do I get Vv out of "fV function" where it is more of a relation equal to 0 as opposed to fV(Vl)=........
The initiation button callback function should work for this, assuming that you don't have to manipulate the figure while data is being collected, as you might not be able to pause and resume the data collection depending on how the callback function and arduino is coded. One of the nicer features of figures or guis in matlab is that all of the data is accessible if you can find the proper figure or object handles. For instance, using the axes handle of each plot (found by checking hObject.children or hObject.parent.children(n) or something, just look for the axes handles), you can get the plotted data (i.e. hAxes.XData or from the line object within the plot). For a real time update, it is possible to use this in order to only update the necessary data, instead of replotting the entire figure. What I would do is loop through or hardcode the handles of each set of axes (or plot) in a cell or struct array, and select only the new data from the arduino to add to the x and y data of each plot, then if the axes limits are set to auto it should readjust, otherwise you'll need to determine the limits based on the data range or a predefined variable. This limits the amount of plotting MATLAB is doing, and should make realtime updates much more efficient. As this might be a little confusing, here are a couple examples of how figure data can be accessed and updated. Let me know if you have any questions. https://stackoverflow.com/questions/13102654/how-should-i-update-the-data-of-a-plot-in-matlab https://www.mathworks.com/matlabcentral/answers/156810-finding-and-saving-gui-axes-xdata-ydata-as-userdata 
similarly, define another function to get Vv, where your input arguments are e,s,fV and Vl function Vv = another_function(Vl, fV, e, s) %now put your equation here... end and you can call your function to get Vv. By the way, have you used MATLAB before?
Minimal use before but wanting to learn and being forced to by a professor.
Did do replace the file after it was moved the first time before trying it again?
Yes, (a/b)*(c/d)=(a*c)/(b*d) In MATLAB you can use isequal to verifying
Yes, the file was replaced. I didn't at first and the error said could not find said file. Once replaced, it keeps trying to rename, rather than move.
I'm not sure what you mean. In unix (it looks like you're on a Mac OS) moving and renaming are synonymous. Did you verify that the source file and destination directory both exist? 
I'm not going to read your whole homework assignment. Why don't you just tell us what is it about a recursive function that's giving you trouble? 
Does the destination folder exist?
Are there any particular channels or specific buzzwords that would be relevant and helpful to me here?
Of course, you don't. Last month: F(i)=min (0,5(i+x-d)+T Other months: F(i)=min(0,5(i+x-d)+T + F t+1(i+x-d) The main problem is the last month should be defined apart from other months so that it can be used in calling the other months. That is the part I couldn't figure out. I guess I can explain clearly.
I assume you're getting errors for unbalanced parentheses? And not providing enough input arguments to functions? 
Have been using struct for data collections. Now table seems to be a better option
What did you try? 
What are q and g? Are they functions of time? What is Kv2? Was that supposed to be Kv^2 ? *How did you do it by hand*? From my perspective, you have a first order linear differential equation, which is trivially easy to solve using [dsolve](https://www.mathworks.com/help/symbolic/dsolve.html). As for putting it in the form desired, you could use one of the [simplification tools](https://www.mathworks.com/help/symbolic/choose-function-to-rearrange-expression.html) offered by the symbolic toolbox. Starting here: syms m v(t) t K u q beta g v(t) = dsolve(m*diff(v, t) + K*v^2 == u*q - beta*g, v(0) == 0); Gives me: v(t) = -(tan((t*(K*beta*g - K*q*u)^(1/2))/m)*(K*beta*g - K*q*u)^(1/2))/K Now if I remember correctly, the tangent function is a ratio of two things... and there is a way to rewrite and factor those things such that they are some constant times 1 +/- some other thing... if you don't follow, re-check your trig and Euler identities. I'm assuming though, that this is the answer to my last question in the first paragraph. If any of my assumptions about your problem are incorrect (as I had to make a number of them), then this may be more difficult to solve, but I only have what you typed to go on.
This is the formatted functions that were typed into matlab. As I said I need to iterate Vl and solve for corresponding Vv in the top equation. Then plug those values in to the B equation and get its corresponding B. https://imgur.com/a/yHD3X
In the line where you're getting the error: Vv = fsolve(fV(Vv, Vl(i + 1), e, s), Vv0) You're passing parameters to the function handle, making it a function evaluation instead. In other words, MATLAB is telling you that it needs to look like: Vv = fsolve(fV, Vv0) If you need to pass extra parameters, you can use [this information](https://www.mathworks.com/help/optim/ug/passing-extra-parameters.html).
thanks for the feedback, i don't know matlab at all, i know the theory of what i am doing and trying to implement that in a language that suits me as easy as possible. Because i have almost to no knowledge things trivial as loading files and calculating distances are difficult, but thanks for the response, will work on that.
the thing is, I had a '.txt' file with a matrix on it and had to use the data from the columns and rows to calculate the variables, my question was exactly how to use those values, but i learned it online. After i loaded the file i calculated the distance between stations referencing the variables with the numbers on the .txt file
Sorry for the late reply, but it took me a while to understand it hahaha. Thank you so much!
Sorry, Ive trying to get this project finished before I leave town for the weekend and didn't update. Profile results seem to show that the performance is very dependent on exactly how big the sparse arrays are (but don't seem to care as much about how spare they are, as long as it is a difference between 'really spare' and 'really really really sparse'. Below a certain point all the `sparse` calls takes up at most a few percent of the execution time. At some point though it quickly jumps up to each taking anywhere from taking anywhere from 3x-10x as long as the main loop. I think it may be related to the `sparse ` call it allocating a ton of memory, much more than it needs. According to the output from `profile -memory on`, it had a peak usage of just over 3 GB but allocated around 16GB. I suspect that the point where things begin to really slow down is where I start needing to access swap space on disk when generating the array. As a side note: this is about a 50x slowdown (relative to the rest of the code). This is about the same speed difference between RAM and my SD, if I recall correctly (my ssd can do around 300-400 MB/s, RAM is around 18 GB/s). 
Sorry for the late reply. It was bedtime where I'm living. You've got figured it out exactly! I must have manoeuvred into the disruptive directory when I got that one trial to actually work. Thank you, pwnersaurus!