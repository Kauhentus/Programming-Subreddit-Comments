Either interpolation or curve fitting.
Polyfit()
vq = interp1(x,v,xq)
pp = spline(x,y)
I don’t think so, you probably have to start from the most basic stuff, know how it works.
&gt; is there a way to turn this to a curve ? Define "curve." Your first three points look like they fall on a line - 0.3 increase in x gets a 2 increase in y. The fourth pair is the outlier... if you're plotting a line. Do you care if the curve passes *exactly* through the points you gave? Does this have to be a curve defined by one equation, or can it be a curve "by parts?" I'm asking all these questions because, without plotting myself, the data looks *almost* like a line so I'm having a hard time imagining what the curve you're asking for would look like. Can you plot the points in Matlab and then sketch over the plot in paint or something to illustrate what your expected end result would look like? 
Just a QOL note: you may want to start using more descriptive variable names. It's easy to get lost in your own code when you're trying to debug and you've got lots of similar looking variables (fV, Vv, V1, etc.) flying around that don't have names you can quickly identify. 
If the files all have the same extension you could use the **dir()** command to produce a listing of the files you wish to plot. Then you can loop over each file and open it using the code you have posted. matching_files = findMatchingFiles(folder,query); n_files = numel(matching_files); for f:1:n_files old code here end You would need to sort out the **findMatchingFiles()** function on your own however.
Seconding this. OP is using really sloppy notation and/or hasn't presented the entire problem. It looks like `m` is not a function of time, then later in the post it *is* a function of time, etc. What is `M0`? The actual, *complete* problem statement would be super useful if OP wants actual help.
 function foundFiles = findMatchingFiles(folder, query) if ~exist(folder, 'dir') error('Folder %s not found!', folder); end foundFiles = []; for currentQuery = 1:numel(query) foundFiles = [foundFiles; ... dir([basePath, query{currentQuery}])]; end end The `folder` would be something like `D:\Image Folder\`, and then `query` is a *cell array* of search terms. If you want to search for all .PNG files in the current folder, then `'*.png'` is the term to use. If you want to search for all .JPG files in the current folder AND in all subfolders, then `**\*.jpg` is the term to use. Add as many queries as you want: query = {'*.png', '**\*.jpg', '*.tiff'}; etc. You'll have to re-build the path when you want to use it - for currentIm = 1:numel(foundFiles) I = imread([foundFiles(currentIm).folder, '\', foundFiles(currentIm).name]); &lt;rest of your stuff&gt; end 
As far as the code and syntax go, they are very similar. I've found [this page](https://en.wikibooks.org/wiki/MATLAB_Programming/Differences_between_Octave_and_MATLAB) to be a pretty good summary of the differences. In general you'll probably find there's only a few functions that behave slightly differently. The biggest difference may be the interface, although even that may not be much different, depending how you used Octave. My relatively brief experience with Octave was run from a command line window with functions written in a text editor, but there are graphical interfaces for Octave that are similar to the Matlab IDE.
Take out the line "return" and your for loop is commented out. 
Thank you. I'm real bad at this stuff. Thank you so much!
Are you basically asking for the signal processing toolbox for free? Or what?
You can use **csvwrite(filename,data)** to produce a csv file once you've loaded the .mat file back into Matlab.
.mat files don't map into CSV files. You need to load the .mat file into matlab and then write whatever variables you want into a csv, in a well-defined manner.
what do you have so far?
Please see our [rules for submitting homework questions](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/). 
yes but what code do you have in matlab?
OK I am sorry, here is my code so far https://pastebin.com/3hu4BQXW
why you deleted ?
just edit the file name and change the end tag.
I did this in my [Power Quality Tool](https://www.mathworks.com/matlabcentral/fileexchange/65140-powerqualitytool). The source is available under the Functions section.
You have a problem in the for-loop syntax. You are using a semicolon in the wrong place. Do you see where? It should read `for cntr=1:number`.
They are the same. Don't get bogged down into one language and IDE, or else's you'll just become MathWorks' bitch. Learn several languages and IDEs. 
Thank you so much! I'm so dumb. You're a life saver.
https://memecrunch.com/meme/BGUNZ/thats-whats-up
your function is returning the whole array, make it return only the last element. fibb3=fibb3(end)
You requested the value of the last element in fibb3. You didn't do anything with it. You didn't alter fibb3 in any way. You still returned all of fibb3. If you want to assign a new value to fibb3, you need to use the assignment symbol (=). 
And what's going wrong? 
Thanks! Got it working :) 
... you can pass array(end) to access the last element...? I did not know that...
Well I figured it out: export_fig -native Whether that was working before and I missed it, or I had some other options messing with it, idk. [You'll need the fantastic export_fig library if you don't already have it.](https://github.com/altmany/export_fig/blob/master/README.md) 
You need [assumptions](https://www.mathworks.com/help/symbolic/assumptions-for-symbolic-objects.html#brvhirb-1). When you declare your symbols, use the 'real' assumption: syms a(t) b c d e f g real Or, use the '[assume](https://www.mathworks.com/help/symbolic/assume.html)' and/or '[assumeAlso](https://www.mathworks.com/help/symbolic/assumealso.html)' function: assume(a(t) &gt;= 0); assumeAlso(a(t), 'real');
I'd already done the first thing which didn't work but the assume/assumeAlso functions did. Thanks for the help!
If you're using a recent version, you can do that quite easily in the App Builder.
Does R.' work? With a dot before the apostrophe?
Glad to be of service. :)
To extend my answer a bit: https://se.mathworks.com/help/symbolic/transpose.html?s_tid=doc_ta
One feature that has been added since 2016a is [implicit expansion](https://blogs.mathworks.com/loren/2016/10/24/matlab-arithmetic-expands-in-r2016b/). Some people are very unhappy that things that used to cause an error now produce a result. Generally, backwards compatibility is very good. I wouldn't even consider the above a break in compatibility, but it's the closest thing I know of. I haven't reviewed the changes for 2018a though.
My guess is yes, you will have issues. I used to have 2014 and 2016 because I needed to check that programs would work on customer machines. They were different. That said, if you - or those around you - plan to stay current on versions, you’ll need to update eventually anyway.
Thanks for the advice! Another related question: I was planning to use Create a stand-alone Matlab app from this project. How does this relate to the Matlab version you use? If someone downloads the Matlab runtime environment to run the project, will it run as 2016 Matlab or 2018 Matlab?
You can either package it with the standalone application, or it will instruct them to download it from MathWorks. They will need to get the runtime environment that the application was created in.
Use the publish function. It's a built in function that creates a PDF of the script and the associated output.
I upgraded from 2014a to 2017b and saw some improvements in terms of speed and visual quality. There will be issues in your case, as there were in mine, but they could be solved under an hour in my case. Good luck.
Thanks for the reply! I think I’ll give it a go 
I’m usually lazy and just copy and paste the code into a word document
People tend to get cranky about a 1GB install for a calculator, just sayin.
I would recommend using the publish or save command to generate a PDF or txt file of what you want to print. I don't know of any built-in Matlab function that can manage print jobs directly. On Windows (server?), you can supposedly [run a print job from the command line](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/print). Perhaps there is a method that you could call a shell script from within Matlab to print the PDF you just generated. It sounds like a pain to me to be honest.
Huh, that's a much simpler solution than the assume function. Thanks, I'll be sure to use that in the future instead
...da fuck is this project? ...Oooh, that's neat. ...I can't give an informed answer to your question. Sorry. NEAT PROJECT THOUGH.
I'm not sure you can do that. You might want to look using a tall array.
I think the best solution to your problem should be to modify the maximum array size setting which I think you are able to do. If you try to create truly large arrays Matlab will throw an error. It should be possible to set that threshold to a lower value that works for you
Haha thanks! So the project is investigating ways to use machine learning techniques to make it easier to control synthesisers. The UI is all make in Matlab, and sends OSC messages to control a synthesiser I make in Supercollider. 
f(i,:) = m will assign the value in m to every column in the i'th row of f. Why f? If you've just defined f(X) as a symbolic variable I could see MATLAB having trouble interpreting you indexing into it. Since you prompt the user for all the relevant parameters there's no reason you can't preallocate an array to store your results in and put them in there. Also you're going to run into troubles since arrays start at 1 in MATLAB and your loop variable will be 0 on the last iteration which will cause an error (subscript out of bounds). Also important to remember your results will be stored in reverse order (ie bottom to top) in your output array since your index variable is decreasing. Also i and j are predefined constants in MATLAB both equal to sqrt(-1) so it's best practice to use something else for your loop variable. I usually do something like ii or jj since using i or j can lead to some unexpected behaviour on occassion so best to avoid.
I need some serious help regarding this work, optimising, learning more about all this, I'm starting off work on this topic and I can't find a lot of resources on this that properly explains it all.
Meaning?
the big thing i noticed when upgrading from ~2013a to 2016a was the default colormap for "image" changed away from "jet" (or something like that). not that hard of a fix as you can easily specify it, but you may run into some similar issues.
I haven’t looked properly, but I don’t think you can have a function at the bottom of a script. Either save it as a separate file, or make the script a function also (for this, just writing “function runfile()” on the top line and “end” before the other function) Hopefully that’ll solve it!
There is one amongst the examples on MATLABs documentation page for fminunc that shows the exact thing you're trying to do.
Ah I must have missed it. Thanks 
As of R2016b [scripts can include function definitions](https://www.mathworks.com/help/matlab/matlab_prog/local-functions-in-scripts.html)
No worries. Not to be snarky or anything, but it's also on the link you put above to the Northwestern site in the 'outputs' section
Interesting. AFAIK Matlab isn't really used for deep learning and heavier ML algorithms because it's kind of slow and is proprietary. What machine did you use and how long did the training took?
Not sure the source of this error, since I don't see /u anywhere at all. Often when using sprintf if I get these errors to fix I'll use //u or maybe \\u I forget which. The other thing that could work is restarting MATLAB or even your computer
What is the dimension of your array? Are all columns datatime? Arrays will fail if any of the table col values are non-datetime. Check the types in the table list as well - is it datetime already? If so you can just grab the entire column. If all else fails, copy the entries of the column one at a time in a for loop, using horzcat to grow the array - it will fail on the badly formatted entry.
Without knowing the data you trying to convert, I can't answer fully, but you can follow the tutorial I wrote below. Specifically, load the data using the load() command and csvwrite() or writetable() commands. For example: temp = load('filename.mat'); csvwrite( 'filename.csv', temp.dataToWrite ); Or, option 2: temp = load('filename.mat'); tempTable = table(); tempTable.x = temp.xData; tempTable.y = temp.yData; writetable( tempTable, 'filename.csv' ); I go into more depth here: https://youtu.be/GQtYAT36CZ4
For me, a common cause of this type of error is hidden characters, when I have moved data between operating systems. I suggest opening the file in a more general text browser like notepad++, and checking that there are no extra characters visible. Additional type - you can usually delete these characters even if you can't see them, so delete half the code, and try to run it. If it runs, undelete and try again with 25% removed. If it fails, delete more lines. Repeat until you have isolated the line with the error. Hope that helps!
Might just have to clear the workspace.
Hehe it's ok I ran the code and works perfectly. All I need is the end effector to "draw" the curve while it moves 
Sure. I'll do this today evening
My machine is Intel i7 quad-core with 32g ram and windows 10. Since the dataset is small compared to deep learning datasets and it took around 4 epochs each with 3700 mini-batches each of size 100 for training, it took less than 5 mins.
Just that one column is datetime. The other 4 are numerical.
This is a recursive function, meaning that the function calls itself. Have a google for a recursive algorithms to understand the theory of what’s going on. Here’s a similar example for calculating the factorial of a number http://planetmath.org/recursivealgorithmforfactorialfunction Make sure you understand what the mod() and fix() functions in Matlab do, then try apply the reasoning from the example above to your problem 
This is homework, it's homework for a reason.. If you're uncertain as to how certain built in functions work in matlab, give the help button a press. Matlab documentation is excellent and should provide you with tools for understanding the script.
Lets say you have 30 observations of Y, and 30 observations of each of the 5 variables. First of all: Put your Y variables into column format. You can do this simply by Y = Y'; Secondly, you want your x-matrix to have 6 columns with 30 rows in each. The idea is that each row of the X matrix belongs are attached to the corresponding row in y. The reason you need 6 columns is that you need to include a column containing only 1's to X. The beta coefficient output for these 1s will be your intercept in the equation y = c + b1*x1 + b2*x2.... + epsilon Assuming that X is already correctly formatted with the 5 existing variables, add the column of ones by: X = [ones(length(y),1) , X] Instead of length(y) you can just type your number of observations.
As an aside, look at lines 4-6, then look at line 10. It seems to be a needless (but harmless) redundancy.
I'm not sure how best to approach this, because your question appears to be using an econometrics toolbox. I'm not sure how familiar you are with state space models in general or whether you have access to the Control System Toolbox and the `lsim` command. As a (control) engineer, `lsim` is the tool I would use to simulate state space systems. I'm not sure of your application, and your terminology is not naturally familiar to me and it's not defined in your question, so I'm not sure what exactly it's supposed to be. You have a `B`, `c`, and `C`, and none of those are in the equations you gave for your models. So, I'll try to give you some feedback as a control engineer and how I "phrase" state space problems. First, the state variable equation is `xDot = Ax + Bu`. The derivative of your state(s), `xDot`, is the result of the states themselves, `x`, as modified by the "state matrix" `A`, combined with some input, `u`, modified by the "input matrix" `B`. In your case, you have "error terms in the state-equation," but I don't know what that means. **What are "error terms?"** Traditionally, at least in the controls field, an "error term" as *I* know it is the difference between some target/reference and a measurement. If you want to be going 60mph, and you are actually going 55mph, you have a *speed error* of +5mph, which is the reference minus the feedback. For you, I think the "error terms" are one of two things: 1. An actual error term, in that there is a reference and a feedback, or 2. An "exogenous input," in that it's just some random term that gets incorporated into your state equation but is actually not dependent on any state. If it's an actual error term, then you should rephrase it as such. If, for example, you have a reference input that I'll call `r`, and your error term `e` is `r - y`, then you can use the definition of `y` you gave in your question (`y = Jx`) and come up with `e = r - Jx`. Now you can substitute that into your state equation `xDot = Ax + Bu`, or in your case `xDot = Ax + e`, and get `xDot = Ax + (r - Jx)`. You can rearrange to get `xDot = (A - J)x + r`, which would be the more traditional way of expressing this. This method of `(A - J)x` should be immediately familiar to anyone that has studied state feedback controls (compare with `(A - BG)x`. This is how control poles are moved. You say that there is a "correlation" between the error terms, but again, you haven't stated what the error terms actually are, so it's hard to give help beyond what I've stated above. Are the error terms just random inputs? Are they random but dependent on states? *You need to be able to give an expression for the error terms.* If you can't (mathematically) explain what the error terms are, then you're not going to be able to put those terms into state space form and simulate it with a built-in tool. I'll add too that it looks like you're initializing the random number generator. If there is noise in your system, you need to determine where that noise is occurring so you can model it correctly. Disturbance inputs, process noise, measurement noise - these all happen at different points in the system and affect the system differently. I'll just leave this post as is, because there isn't much more I can do to help without understanding more of what you're actually trying to simulate. 
&gt; How can I solve my problem in Matlab? I don't know, how would you solve it by hand? &gt; I don't know. What are the equations? What? lol, this is your problem to solve, not mine. 
Another question. Regarding the embeddings, did you use a pre-existing set or did you trained it too?
No it was not transfer learning, no pre-trained embedding set was there, the embedding matrix was trained from the data.
rekt
I understand the basic theory of recursion. However i don't understand how this recursive function breaks down the problem into smaller problem and then returns the corresponding value. 
Yo should try with R. This is a classic MLR, so, in first place you need to study Statistics. I think it's easier in that way. You must study Hypothesis tests too. If you are looking for and advice, took Wapole's book and study, then download R and browse the internet about MLR in R. 
Well, kind of, yes, I'm early in the study and I haven't seen the full behavior of the function. I just know it'll come at some point and kinda wish there was a simple "get the trend of the curve" just like in excel and most programs I've seen, except with 3 variables. Thanks for the advice anyway.
Yep. R its free and better for these kind of things but Matlab it's a super good math suit. I'm almost bound that you can do MLR in Matlab but I don't know how it could be. 
So, for a decimal number n, mod(n,10) is the remainder after n is divided by 10, I.e the last digit. So for the number 34, mod(34, 10) = 4. Fix(n/10) takes n, divides it by 10, then rounds down to the nearest whole number. So Fix(34/10) = Fix(3.4) = 3. This is the second smallest digit of n Therefore The “sum = sum + ...” line takes a cumulative sum of each digit 
Hi, yep, I've had something interfering with the Matlab script. I had earlier made a file called error.m and so whenever I ran my script, Matlab was calling in that file as error is a function built within Matlab. All sorted now! Thanks for the help.
Hi, thanks for the help. I had a file called error.m in my working directory that Matlab was calling in when I ran the script. Lesson learnt, don't call scripts anything too generic!
I really gotta wonder about a generation that grew up after Google exists, and yet none of them use it. Why post on Reddit when one simple Google search will give you &gt;Open the Statistics Toolbox section, select "Regression and Classification" and then "Parametric Regression". Start at the bottom with the Concepts section and work your way thru to the Linear Models which is probably all you need.
Hi, thank you so much for the detailed answer. I am currently at the airport so I can't explain my problem in great detail. However, I'll try to clarify my post by tomorrow. But you are right, I am an economist which is probably why the post is so confusing (I have had no formal training in control theory yet). &gt;I'll add too that it looks like you're initializing the random number generator This is essentially it. But I'll provide a full description of my model tomorrow evening. Thank you once again for the help, it is really appreciated. 
Roughly how many points are you looking at? And how many dimensions? Are there any patterns in your data that you can take advantage of? (Such as "any points in the (+,+,-) octant are ignorable"?) Maybe you could do a running comparison (if paired distance is less than X, ignore both points in later calculations) or break the data into sections (octant (+,+,+) alone then octant (+,+,-), etc.?
At some point, matlab ceases to be the best tool. You may have no choice but to port your search to either C or python
Generally, if you are close to a deadline, ship date, big demo, major milestone, etc it's bad practice to upgrade anything. So if you are showing your project off next week, hold off in case something goes horribly wrong. This isn't a matlab thing, it's a computing thing. 
Save the file and copy it? This isn't really a Matlab question. 
As prosperosmile says, need a bit more information about the data. But a general comment on strategies for improving performance is that sorting is O(n log n), so sometimes it’s possible to make algorithmic gains by doing a sort step and then using an algorithm that requires sorted data eg. if the general problem is O(n^3) and if the data is sorted it can be done in O(n^2), then depending on the problem size, O(n log n)+O(n^2) could be faster than O(n^3)
It doesn’t work like that. Anything I copy in the emulator only pastes in the emulator but doesn’t paste on my Mac.
If I’m understanding correctly, you are using MathLab in a virtualized Windows environment. Are you using Bootcamp or a program such as Parallels? You should be able to save tour code in a text file within the Windows VM and then copy to a shared folder (shared by windows and Mac), or even drag/drop from Windows to Mac. You want the code and not generated data, correct? 
Yea I want the code, but idk the program I’m using the emulator just showed up inside a website window. I’ll try the shared folder but I didn’t see that as an option.
No it’s a web based simulator. I’ll try the usb tho 
Neat! Care to share code?
Are you using MINGW?
Here is another test of speedup with randomly located variables: N = 2^10; K = sprand(N^2,N^2,5/(N^2)); u = randn(N^2,1);disp('start') tic; d = u + K*u; b = toc;disp('end') K1 = gpuArray(K); u1 = gpuArray(u); disp('start') tic; d1 = u1 + K1*u1; c = toc;disp('end') d1 = gather(d1); norm(d-d1) disp(b/c) I'm Getting a speed up of 36x
 &gt;&gt; mex -setup Error using mex No supported compiler or SDK was found. You can install the freely available MinGW-w64 C/C++ compiler; see Install MinGW-w64 Compiler. For more options, visit http://www.mathworks.com/support/compilers/R2017a/. Remember getting this option. Just start with the first link
Right sorry, I already did "sudo apt-get install mingw-w64" in the terminal, and it installed someplace. So....how do I use it ? 
ARE you on linux? I assumed windows.
Linux yes.
I'm useless in that case. What do you get when you type mex ~setup on your command window
just write a loop incrementally increasing the size of a test array...
Hi anonanonetc, I made a youtube tutorial covering this exact case, inspired directly by your question. From the tutorial, you can extract the col's of the table seperatly in order to generate the required vectors(for a 5 col' table with a datetime col, 3 numeric cols, and 1 string col): myDates = data.Date myFeelings = data.feeling tempTable = data(:,[2,3,4]) rawData = table2array(tempTable); If you want to checkout the tutorial, you can find it at: https://www.youtube.com/watch?v=SbR5_i4UY0w The section which describes the code above is 11 minutes in. Feedback is welcome :) 
Does your VM have web access? If so, just save the code in a text file and upload it to your Dropbox or send it to yourself via mail/Facebook etc.
You need to modify your timing measurements. Before the final toc, the gpu neets to be instructed to finish all computations. Otherwise, results are misleading. gd = gpuDevice(); tic(); code to be benchmarked here... wait(gd); t = toc(); More details here: [](https://de.mathworks.com/help/distcomp/measure-and-improve-gpu-performance.html)
I get pretty much the same thing: Error using mex No supported compiler or SDK was found. For options, visit http://www.mathworks.com/support/compilers/R2017a/ 
Im assuming you mean the Matlab command line, I put in 'gcc -v' and got "undefined function or variable 'gcc' " :/ 
I didn't. I meant the shell command line in the Linux environment. 
Ah...ok, it says its not installed and to install it using "sudo apt install gcc"....on it now, will report back
Ok, since its G++ I want to compile what im compling, I did "sudo apt install g++" but it installed 5.4 and not 4.9. I had installed 4.9 manually before, but thats when Matlab didnt recognize it at all....so im still stuck
You'll probably want to check with your professor if the assignment is unclear to you. On my read your expressions for 'a' and 'b' seem fine, but I haven't attended the lectures or read the textbook, so I may be missing critical information. I suggest you take a look at the documentation for [exp](https://www.mathworks.com/help/matlab/ref/exp.html) and for [plot](https://www.mathworks.com/help/matlab/ref/plot.html). The first will help you write neater code, and the second will help you plot your functions as you wish (you may discover [something of interest](http://www.wolframalpha.com/input/?i=1+-+exp\(-t\)+for+0%3C%3Dt%3C%3D0.8) to you about your plot here). MATLAB should also be giving you a bunch of red marks in your editor window, and if you mouse over them, it will suggest that you terminate lines with a semicolon to suppress the output in the command window. Up to you, but for larger sets of data, you'll almost certainly want to follow that advice. For part (d), similar to what you've done in (c), I suggest that you use [linspace](https://www.mathworks.com/help/matlab/ref/linspace.html) to define TE, and then use the equation given to you in the prompt for Mxy. My suggestion comes from my read of the text above the questions. I believe you're on the right track, you just need to work to understand what you've done and what you have yet to do!
I think you found the root of your issue. You manually installed GCC v4.9 but your Linux environment couldn't find it. My suggestion would be to manually install GCC v4.9 again, then add it into the Linux environment path so that it shows up when you type 'gcc -v' at the Linux command line. 
Hmm..so I re-instaled it. Typing gcc-v, it says "gcc version 4.9.3"...but Matlab still says that im using 5.4. I dont get it....how do I remove 5.4? 
Faces are indices to vertices. when you append vertices like you do, the vertex indices of the second part changes. do something like this to correct the second face list: totalfaces = [Cyl2faces;Cyl1faces + size(Cyl1Vertices,1)] Also, for future reference; put code in a paragraph with empty lines before and after, and with 4 spaces at the start of of each line to make it show up readable. 
My guess would be close and reopen Matlab. Than look at matlab's search path to figure out why it isnt finding the desired compiler. 
I followed the instructions here...but still no luck. Matlab still cant find the compiler. Weird.
And Thats what I get in Command window after runing code: ySol(t) = 0 -1/(C2 + int(36/(50*Cs(t) + 31), t, 'IgnoreSpecialCases', true, 'IgnoreAnalyticConstraints', true)) Warning: Unable to find explicit solution. &gt; In dsolve (line 201) In DrugieElizowe (line 12) xSol(t) = [ empty sym ] zSol(t) = C8 + int((3*Cx(t))/20 + (9*Cx(t)^2)/(5*(50*Cs(t) + 31)), t, 'IgnoreSpecialCases', true, 'IgnoreAnalyticConstraints', true) Error using fplot&gt;singleFplot (line 227) Input must be a function or functions of a single variable. Error in fplot&gt;@(f)singleFplot(cax,{f},limits,extraOpts,args) (line 191) hObj = cellfun(@(f) singleFplot(cax, {f},limits,extraOpts,args),fn{1},'UniformOutput',false); Error in fplot&gt;vectorizeFplot (line 191) hObj = cellfun(@(f) singleFplot(cax, {f},limits,extraOpts,args),fn{1},'UniformOutput',false); Error in fplot (line 161) hObj = vectorizeFplot(cax,fn,limits,extraOpts,args); Error in DrugieElizowe (line 14) fplot(zSol) 
* are lacking cuz of copying btw, please dont beat me up
Here's my result, done with a GTX 1080. https://abload.de/img/speedup4pqfx.png
Sounds like you might want to look at 3-variable numerical methods perhaps? If such a thing even exists. 
That's the problem I'm having. On paper I know what my IC and BC's are, and so far I have done: c=4 h=0.1 k=0.005 a=0:h:1 b=0:k:0.05 [x,t]=meshgrid(a,b) - I feel like I need to get the nodes from the mesh, but I don't know how to do this or even if that makes sense? Once I have got the nodes in my specified limits, then I was going to specify the nodes at t=0 relate to IC1... etc. again, not sure how to do this. Finally Id use the CN equation on the remaining unknowns (unsure how to do this) and solve the matrix (finally something I can do). - Just looking for any tips or guidance on how to go about these (because I genuinely want to learn how to do it). I'm not looking for someone to do it for me.
I must have known it was too good to be true.
Unfortunately tic toc doesn't worst as straightforwards as i thought.
It looks like start is a function that A(u) is being passed to and the returned array is assigned to variable start. I'm not sure but I believe the sum is returning the sum of all values less than T. The period means "for each" basically. Matlab does everything as an array so when multiplying for example if you want to do each value in a matrix you need to include the period. Do you have an output example? 
you could use `bsxfun` with a custom designed function that has the form `foo(StartEnd,pathNum)` where `StartEnd` is an array with size [3 start positions by # end positions], and then do something like `bsxfun(foo,StartEnd,reshape([1:numPaths],1,1,[]))`. You could then do a straightforward search for the shortest path. IF you can make this work it would give a [m x m x n] array, for m start/end points and m paths. Though tbh, using a loop is probably easier and just as fast. The one exceptiion is if you can get the path distance using builtin operations with bsxfun (e.g., `bsxfun(@times,...,...)` or `bsxfun(@minus,...,...)`) - these will be faster. Unfortunately, using bsxfun with a custom function makes it much slower.
 start = [start A(u)] appends the value A[u] to the end of start. The brackets are for horizontal concatenation. sum( A &lt; T ) counts the number of values in A that are less than T. A &lt; T is a logical vector with a 1 where T &gt; A and 0 where its not. The period in the middle indicates element-wise multiplication versus matrix multiplication.
I forgot this one `for v=2:k` Thank you so much for your help!
your first two points are way off, the `start` code is just appending A(u) to the end of start, and `sum(A&lt;T)` tells you how many elements in T are greater than A
As a first note, its typically easier to just try stuff like this than to ask online about it (assuming you have access to matlab) start = 1 A=[1:10] A = 1 2 3 4 5 6 7 8 9 10 u=[3,4,5] u = 3 4 5 A(u) ans = 3 4 5 start=[start A(u)] start = 1 3 4 5 This should make it decently obvious when is going on. In general, `[a b]` and `[a, b]` are the same as `cat(2,a,b)`, which concatenates `a` and `b` along the second dimension. Similiarly, `[a; b]` is the same as `cat(1,a,b)`, which concatenates `a` and `b` along the first dimension. 
I dont have MatLab, its code from the textbook. I could install it but then there goes my hard drive. 
Could you provide a revised version of your code?
Yep...this seems about right. From what I understand,. to make using GPU's worthwhile you need to really either 1) have a LOT of computations to do for a given dataset, or 2) carefully choreograph the I/O with the computations you need done so that you are constantly receiving data, processing it, and re-sending it all at about the same rate. The secoond, to my knowledge, isnt possible in Matlab (with the possible exception of writing custom CUDA or OpenCL code and then using matlab to run it). One note: I really should have used the `gd = gpuDevice(); ...; wait(gd);` method another commenter suggested. I modified the code. on my machine, this increases the gpu compute time to ~9.7% and decreases the final `gather` command to ~2.5%, though both pale in comparrison to the ~87.7% taken by the initial data transfer. I also modified the timing code to repeat the loop multiple times. On my machine, the break even point between running on my CPU vs my GPU is at about `nRep = 4`. clear all % Define Values N = 2^10; K = sprand(N^2,N^2,5/(N^2)); u0 = randn(N^2,1); d=u0; nRep=1; % CPU Speedtest fprintf('\n\nSTARTING CPU TIMING \n') tic; for nn=1:nRep u = d./mean(d); d = u + K*u; end t_cpu = toc; fprintf('\nCPU took %.5f seconds\n',t_cpu) % CPU Speedtest fprintf('\n\nSTARTING GPU TIMING \n') tic; K1 = gpuArray(K); u1 = gpuArray(u0); d1 = gpuArray(u0); gd=gpuDevice(); t_gpu1=toc; for nn=1:nRep u1 = d1./mean(d1); d1 = u1 + K1*u1; end wait(gd); t_gpu2=toc; d1 = gather(d1); t_gpu = toc; fprintf('\nGPU took %.5f seconds\n---&gt; The initial data tranfser to GPU took %.5f Seconds (%.3f%%)\n---&gt; The computation on the GPU took %.5f seconds (%.3f%%) \n---&gt; Gathering the results from the GPU took %.5f seconds (%.3f%%) \n',t_gpu,t_gpu1,100*t_gpu1/t_gpu,t_gpu2-t_gpu1,100*(t_gpu2-t_gpu1)/t_gpu,t_gpu-t_gpu2,100*(t_gpu-t_gpu2)/t_gpu) % check for errors and compare timings L2Error = norm(d-d1); % Error fprintf('\nRelative Speed Difference From Using GPU''s is: %.5fx \nRelative Speed Difference (Ignoring Data Transfer Time) is: %.5fx \nL2 Norm of Difference in Results is: %.10f \n\n',t_cpu/t_gpu,t_cpu/(t_gpu2-t_gpu1),L2Error)
What you're asking for in your side question is *utterly* unreasonable. `bsxfun` is a function that takes 3 arguments. To expect Matlab to deduce that the result is the same if you change the arguments and apply an operation to the result is nonsense. Binary operations are internally represented similarly. If you have a simple rule that will allow you to preserve sparsity, implement it when you write code. Don't expect the compiler/interpreter to re-arrange your arithmetic.
&gt; but then there goes my hard drive ??? Octave has identical syntax to Matlab, you can install that for free. If you search "octave online" I bet you can find an in-browser REPL for it. Hell, you can find an in-browser C++ REPL if you search for it. There are many comparisons of Matlab and Python syntax online. Most of them are written as introductions to Python for Matlab users, but the comparison should still be there. I found this with a quick search that might help you:
&gt; If you have a simple rule that will allow you to preserve sparsity, implement it when you write code. The problem I am working on right now involves taking various slices of a 9-dimensional problem and using sparse arrays is *essential*, since otherwise I get errors like `you have requested a 8923 gb array. This is above the maximum array size limit, and may cause matlab or your computer to slow down` and im like `no shit`. I was able to figure out how to build the sparse arrays relatively efficiently using a couple of loops and by manually breaking up the vectorized operations into results that I knew would always be sparse, but it was a pain in the ass and took literally days of nonstop work to get right. &gt; Don't expect the compiler/interpreter to re-arrange your arithmetic. Your not giving compilers anywhere near enough credit. Compilers already are capable of a HUGE number of automatic optimizations, and already do quite a bit or rearranging of our arithmetic (e.g., auto-vectorizing loops). Compared to what compilers already do, something like this seems trivial, at least for the built-in operators supported by bsxfun. I mean, you have 3 classes: * things like `times` `plus` `eq` `ne` `and` `or` are interchangable, * things like `minus` and `rdivide` and `ldivide` can be temporarily transformed to be interchangeable by doing -1*input or 1/input, transforming them to `times` and `plus` (perhaps in the case of divde make this temporairy, and revert back to the divide operation after reordering is done) * things like `power` and `xor` arent interchangable, and thus dont apply to my original criteria of "operations that can be implemented in any order" Sure, creating a system that can intelligently deduce whether or not *any* operation is interchangable would be one hell of a project, but the solution to this is the same as it is for more other times this problem comes up in computing: individually pre-program the answer for a limited number of cases that make up the majority of common usage, and have the rest fall back to a slower but more general method. `bsxfun` works with 22 built-ins (according to the list in the documentation). making a list of which work, which dont, and which can be made to work with a simple change is easy. Now, I would believe that for an "typical" operation these checks usually do more harm than good, especially considering the "Just-In-Time" nature of Matlab's JIT compiler (but ideally could be enabled by user-set parameter or flag somewhere). Id also believe that no one at MathWorks thought of implementing something like this, or did but it is low on the priority list and hasnt been implemented yet. I dont believe for a second though that this is too difficult. If things like this were major problems we would still probably be writing code in assembly.
&gt; • things like _times_ _plus_ _eq_ _ne_ _and_ _or_ are interchangable, &gt; things like _minus_ and _rdivide_ and _ldivide_ can be temporarily transformed to be interchangeable by doing -1*input or 1/input, transforming them to _times_ and _plus_ (perhaps in the case of divde make this temporairy, and revert back to the divide operation after reordering is done) Actually no, they are not. _plus_ for example may be interchangeable if you are working in R, but if you are working in floating point world, you cannot swap terms. For example 1.8+0.2-2 is 0 while 1.8-2+0.2 is not 0. And as you speak about compilers, to get this kind of reordering, you must usually pass them a flag to allow them to do illegal (With respect with nominal fp operations as defined in the standards) reordering, for example -funsafe-math-optimizations for gcc. 
Im on mobile at the moment so I cant check it, but you need a space between 'function' and '[PathLength...' in the first line.
oh nice! just edited it now, but still getting the same error message :s
how does the error occur? is the function saved to its own file with the corresponding filename? are you calling the function from a script?
I actually tend to give compilers far too much credit. Auto-vectorization has taken off a little bit in recent years, but it's still a *very* delicate process. You need to be pretty deliberate about the way you code your loop in order to get the compiler to actually recognize the vector optimization. Seemingly innocuous changes can break it. I'm not arguing that what you're asking for is impossible. In a compiled language with native sparse data types this could be done. To do it for an explicit function call (`bsxfun`) would require the function to first be inlined before the optimization could be done, and (in every language I know) there's no way to force inlining (`inline` in C++ is simply a suggestion). I'd be shocked if a C++ compiler would be able to perform the type of optimization you are talking about. You're discussing the optimization at the AST level which would require the compiler to have semantic information about the types and operations on those types in order to make the optimization. A C++ sparse implementation would not be able to provide that information to the compiler. Optimizations would have to occur on the individual operations, of which there would be billions (which is the whole point). The compiler is not going to search for optimizations over sets of operations that large. To do so would be computationally suicidal. Now, the Matlab JIT, in principle, has access to the required information. But we're talking about a JIT that only recently started giving us decent performance on tight loops. I would *never* expect even a very mature version of the JIT to do this across function calls. I could see it across simple arithmetic, but I suspect the JIT is aimed at the types of operations that Matlab is typically bad at, so not these vectorized arithmetic calls.
Figured it out. Here is the solution: https://codeyarns.com/2015/02/26/how-to-switch-gcc-version-using-update-alternatives/ For anyone that runs into the same issue. 
Figure it out, here is the solution: https://codeyarns.com/2015/02/26/how-to-switch-gcc-version-using-update-alternatives/ 
Compilers are not magical and they don't understand your personal use case. It's the programmers job to write efficient code. 
This line sets v to an array of numbers between 2 and k. v=[2 3 4 ... k] 
It seems like it would be better for you to write out separate lines of arithmetic to keep everything sparse, rather than try to be clever with bsxfun or rolling lots of commands together. Since you are already working with sparsity, you have made an intractable problem into a tractable one, which is a huge zeroth order speed up. Unless you already have the code, remember that 'premature optimization is the root of all evil.'
&gt; For example 1.8+0.2-2 is 0 while 1.8-2+0.2 is not 0. It isnt zero, but it is less than the machine epsilon of the largest inputs. It seems like most fp precision issues could be largely fixed by saying "if it is within machine epsilon of an integer, round to that integer". Personally im not sure I have *ever* been in a situation where i needed a value within epsilon of an integer to be recognized as a non-integer (though ive needed it recognized as an integer enough times that I almost exclusively use `abs(a-round(a)) &gt; sqrt(eps(a))` instead of `a == round(a)` to check for integers. Id also imagine something like this would not be default behavior, but something that a user specified they wanted active. I have to imagine that anyone who writes a code that relies on floating point quirks like "a set of numbers added in this order will give a nonzero value, even though in "normal" math they give zero" should probably check that any changes they implement that actively change compiler behavior and operation ordering dont screw up their code.
move the assignment for V into the while loop.
You change the value of V outside of the while loop so it stays constant while the loop iterates. Move the line V= to after the line month=month+1.
 surf imagesc
Thank you for the help I did it and now it says undefined function of variable 'V'. How should I define V at the beginning?
Thank you, it worked!
&gt; It seems like most fp precision issues could be largely fixed by saying "if it is within machine epsilon of an integer, round to that integer". [Dr. Edward Lorenz and is system of ODE's](https://en.m.wikipedia.org/wiki/Lorenz_system) would like a word about small changes to state variables and their impact on the solutions to equations represented with floating point numbers!
Non-Mobile link: https://en.wikipedia.org/wiki/Lorenz_system *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^162130
**Lorenz system** The Lorenz system is a system of ordinary differential equations first studied by Edward Lorenz. It is notable for having chaotic solutions for certain parameter values and initial conditions. In particular, the Lorenz attractor is a set of chaotic solutions of the Lorenz system which, when plotted, resemble a butterfly or figure eight. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Remember, matlab does things sequentially, and if something isn't defined in matlab's workspace when it tries to evaluate something (in this case, V &lt;= (whatever), it complains. :)
Im not saying that there is *never* a situation where rounding to nearest integers within machine epsilon would be bad. I am saying that is you write a code that has its operations carefully ordered such that *every* operation that should produce an integer doesnt have any fp roundoff error and *every* operation that should produce a non-integer does so, even when the difference from the nearest integer is less than machine epsilon, then you dont just go around and say "oh look, something that reorders my operations to help preserve sparsity better. Let me turn that on without giving it a second thought". If you cant guarantee that every sup-epsilon perturbation is real, then it seems like its all a crapshoot anyways. Maybe rounding produces the right behavoir, maybe you had the right behavior and it changes it. In those situations a responsible programmer would figure out an alternate way to confirm if small perturbations were real. I see very few situations where tjihis would cause an otherwise corrrct program to run incorrectly, and in virtually all of those I have to imagine that the person who wrote it doesnt enable changes to reorder operations whilly nilly. 
At this point the immediate issues I had have been figured out and re-written. This isnt a "help how do I do this" post, but rather a "in the future Id rather not take the extra few hours/days and do something more enjoyable, like catching up on sleep". It is also a matter or dealing with the cases that dont throw errors but quietly go into swap space and make the code / your computer run more slowly. Figuring out exactly which part of a function call is responsible for this (and sometimes catching it at all) is rather tricky. Its also not really optimization as much as "oh hey, that function just requested a 9TB array. Guess it lost its sparsity.". The code is already absurdely optimized (a quapruple nested loop is replaced by a single matrix * matrix * matrix operation. The speedup is something like 5000x, which for my problem means running in minutes/hours instead of days/weeks/months.
Read the code you posted and tell me where you think the value of V is going to change during each loop iteration. 
Nice work, and thanks for the solution! 👍
Matlab can get picky about function definitions. My experience is that LOCAL FUNCTIONS DEFINED WITHIN A SCRIPT (as opposed to a separate function file within the same directory) should be defined at the end of a file (and the script file must then be run as a script) Now, within that, You don't necessarily need to declare the function myprogram (because it's a script that's running once and not necessarily being referenced by anything else) Any variables used in an logical statement (if, while, etc) must be initialized somewhere or else the compiler is going to throw a shit-fit. (This happens referencing z, y, auxErro) Most of it looks to be (without delving into it too much) trying to reference variables that aren't initialized. I don't know how your program is ~supposed to run~, but doing this: %a=input('Digite o 1º valor do intervalo: '); %b=input('Digite o 2º valor do intervalo: '); %precisao=input('Insira o valor para o erro: '); a=1; b=2; precisao=0.01; z = 0; %INITIALIZE Z SO THE WHILE STATEMENT RUNS y = 0; %INITIALIZE FOR SHITFITS auxErro = 0; %LAWLS LETS JUST INIT FOR GIGGLEs while z == 0, if a == b b=input('Os valores devem ser diferentes, digite novamente: '); elseif a &gt; b aux = a; a = b; b = aux; else Xn = (a+b) / 2; fXn = funcao(Xn); if y == 0 erro = 0; y = 1; else erro = abs(Xn - auxErro) if erro &lt; precisao z = 1; end end end fprintf('%-5d %-5d %-5d %-5d %-5d', a, b, Xn, fXn, erro); end %end %COMMENTING THIS OUT function f = funcao(Xn) f = Xn^2 - 3; end Causes it to execute, but be in an infinite loop. Of note, auxErro is never changed or defined in the code given (I set it to zero) and within matlab I *must* run the script as a script. matlab is funky sometimes. I hope I was able to help.
+Hey, thanks for the quick reply. My code is supposed to get a&amp;b and an precision value, calculate *Xn(average)* of a&amp;b, apply to *f(x)*, set *error=0* on first loop. If f(x) = negative &gt; *a = avarageValue*, if positive &gt; *b = averageValue*. *auxError gets Xn* value to calculate error on the next loop. *error = Xn - auxError* on the next loop. The loop shall stop when *error &lt; precision*. &gt;You don't necessarily need to declare the function myprogram I did that because at first, it wasn't running because of "this statement is not inside any function", so I found that solution on stackoverflow. &amp;nbsp; My c++ code: https://pastebin.com/jrRCAtDj &gt;c++ code output the information you need to generate the graphs within matlab Would you have any information or start guidance so I can learn more about it? Your help is really appreciated, thank you! I literally started today on matlab, dunno any basics so far, but since I know c, c++ I thought I could work this out, turns out I can't, but I'm interested enough to sit and learn, seems a really helpful tool.
https://www.mathworks.com/help/matlab/ref/colormap.html Create custom colormap as suggested below on this article 
To learn the basics of MATLAB - check out the free training here: https://matlabacademy.mathworks.com Once you get programming in MATLAB, the bisection algorithm should be pretty straightforward. Good luck. 
There are many other techniques you could use like: relay, approx model, or mathematical model.
There's no plant! At least, not one that I can see. What is it exactly that you think your PID controller is *doing*? What is `SetMPD`? What is `F_RP404`? Also, if `Clock` is `&lt;=30`, then your control error, the input to `PID Controller`, is `F_RP404` - `F_RP404`, or zero. Post your whole system if you want help.
&gt; plot a graph that I have no clue yet Matlab uses vectors to plot values, so if you want to graph you'll need to put the stuff you need into a vector. The placement is up to you, but here's a quick and dirty way to put sequentially generated values into an array. You might want to do this in a separate vector for every value you wish to graph. (This seems easiest to do at the moment) a_plot_vector = []; %This initializes aplot as an empty array/vector. Place with other variable definitions. a_plot_vector = [a_plot_vector, variable_to_add]; %This just takes the value of variable_to_add, concatenates/appends it to a_plot_vector. the plot command is useful for making a graph. typing "doc plot" will bring up a documentation window for the command. "help plot" will print out help text into the console.
+ Hi, thank you for replying. I am pretty new to Matlab/Simulink, and I think this is more a situation where I don't fully understand the system, so forgive me for that. What I have, is a choke valve which operates between Fully closed (0%) and Fully open (100%). I have a vertical pipe with water flowing through it, and I want this choke to regulate the pressure at the bottom of the pipe. This pressure is what I have as a set point (green block). I also have a pressure sensor at the bottom of the pipe (F_RP404). The clock is input to have a delay before regulating to the set point. SetMPD give us how big the the valve opening has to be to have a pressure equal to the set point. The PID controller has Initial Integrator condition of 100 (Fully open), with Upper Saturation limit 100, and lower limit 0. [HERE](https://www.dropbox.com/s/wbcyjd5d3a7macs/MPD2.slx?dl=0) is the Simulink file. Please ignore the lower part in Simulink, as this is another PID controller for another component I'm working on.
I got only 9.1, how come?
For this one I got: STARTING CPU TIMING CPU took 3.30968 seconds STARTING GPU TIMING GPU took 1.03762 seconds ---&gt; The initial data tranfser to GPU took 0.07643 Seconds (7.366%) ---&gt; The computation on the GPU took 0.95725 seconds (92.255%) ---&gt; Gathering the results from the GPU took 0.00394 seconds (0.379%) Relative Speed Difference From Using GPU's is: 3.18970x Relative Speed Difference (Ignoring Data Transfer Time) is: 3.45749x L2 Norm of Difference in Results is: 0.0000000000 
[Why do the stars glow above?](https://www.youtube.com/watch?v=MijW2PqR0S0) Seriously though, what are you talking about? What icon? What community? Is this in Matlab, or on some website?
This video explains it well https://www.youtube.com/watch?v=RXJKdh1KZ0w
Did you look at your time scale? It looks like the entire graph you provided was 1ms. Is this a problem for you? What is your model?
[The position of arrow 1 is gray, and the position of arrow 2 is color. Why?](https://qita.quora.com/The-1-is-grey-The-2-is-color?share=7b36ce74&amp;srid=5i3fQ) 
What isn't working? Are you getting an error? Are you just getting a bad answer? Does it run in an infinite loop?
It gives me ans = 1, which I know is wrong. If I use a «for loop» with fixed amount of iteration it gives me ans = 1.1142 and an accuracy down to 2.2204*10^-16. That is why I think a while loop is more suited. I can tell it to stop whenever the accuracy exceed 10^-5. 
One thing I always find helpful when debugging is breakpoints. Since it seems to work with a for loop instead of a while I would put a breakpoint before that. Then check your while loop exit conditions.
If the goal is to count how many iterations it takes - you have nothing counting any iterations.
Yeah I know, it was lazy of me not to include that when I asked the question. Right now it seems that my problem is to make the while loop stop when it reaches the accuracy decimal.
Those are different colors for different subreddits. Maybe it means something, maybe it doesn't. What program is that? I don't have/use anything that shows those icons at all.
When working with saving data in Matlab, it usually is way easier to save your data to a .mat file. https://uk.mathworks.com/help/matlab/ref/save.html If you are using the text file with some other program, and it must be a text file, then go ahead and try to solve your current problem, but if your just saving and loading within Matlab, .mat files do all of the heavy lifting, and mean you don’t need to spend lots of time and effort parsing text files. 
The PID block can't tune physical systems, only models which can be linearized as the error suggests. There are plenty of heuristic methods out there for finding optimal PID gains for physical systems. The [Ziegler-Nichols](https://en.wikipedia.org/wiki/Ziegler%E2%80%93Nichols_method) method is fairly well-known.
different gpu
There's quite a few ways you can do that. option 1 (I don't like this one since it's not exactly nice looking and adds unnecessary complexity): add the following code to the loop if i = 2 a2 = [i+1 1 1; 1 1 1; 1 1 1] end option 2: Save every iteration into a new page of the array a. for i = 1:3 a(:,:,i) = [i+1 1 1; 1 1 1; 1 1 1]; end there are probably better ways to do it. I like the second one more just because it makes the for loop smaller but if you have a lot of iterations and really just want output from ONE of the iterations other than the last one it might be more effective to use option 1 and not deal with 3d arrays which will slow down your program noticeably if you have thousands of iterations for example.
Yes that is the correct syntax for functions. The reason why you have errors on lines 2 and 4 is your syntax for logical statements is wrong. Basically you are missing an and statement. If you want multiple logical expressions for the same conditional statement then you need to link them with 'and' or 'or' statements. 'and' is done with '&amp;&amp;' and 'or' with '||'. of (0.11 &lt;= d) &amp;&amp; (d &lt; 2.0) Would be satisfied if d is between 0.11 and 2.0.
On formatting: you should put four spaces at the start of a line of code of the interpreter knows what to do, then your asterix and carrot won't get munched: kb = 0.879*d^-0.097 Your double inequality in the if should be broken up into two tests (did you come from a python background?): if (0.11&lt;=d) &amp;&amp; (d&lt;2.0) Your line with else won't work; else doesn't take any comparison tests. Maybe you mean elseif? 
Oh okay I saw that as a recommendation, also it’s returning ans = blah instead of Kb = blah is that how it usually goes or is there something wrong there? 
Inside a function all the variables are "dummy" variables which are only used inside the function and are not returned to the workspace. This is why kb is not set when you call this function (it also goes for d which you could call anything when you call). When you call the function from the command window (or from a script) you can either do it with no assignment statement or with. This is the same with your user made function as with any other matlab function. To assign the return value of your function to an actual variable rather than the default "ans" you simply do the following: kb = ksize(d) rather than what you are currently running which is ksize(d) There is no reason you need to use those names either, it would work equally well with. X=ksize(Y) 
But I am calling d from another function that defined it, and I want to send Kb to another function that will use it.
Yes I came from python background and don’t know much matlab at all :(. I’m learning slowly lol. Okay the teacher wrote else so I was just mimicking his example, and apparently he doesn’t know much mathlab either.
Doesn't matter, the variable names inside a function are only ever used inside that function. The output variable name(s) and input variable(s) are always defined in the call to that function. This is something called variable scope. e.g.: function x1=function1(y1) x1=y1^2 end function x2=function2(y2) x2=function1(y2) end function x3=function3(y3) x3=function2(y3) end test=2; output=function3(test) would return: output=4 Hopefully that makes the ideas clear. Have a read on matlab variable scope if you want to know more, understanding it will make writing nested functions significantly easier. 
This only works in nested functions right? Not functions in separate files right?
This only works in nested functions right? Not functions in seperate files?
All functions no.matter their location.
Awesome. Thanks for everything bro!
Well, it depends on what you want to do if a&lt;2 disp('a is less than two') else disp('a is at least two') end is valid, and exactly one of the two phrases will be displayed. if a&lt;2 disp('a is less than two') elseif a&lt;3 disp('a is at least two but less than 3') end is valid, and *at most* one of the two phrases will be displayed. If a happens to be bigger than 3, nothing will be output. if a&lt;2 disp('a is less than two') elseif a&lt;3 disp('a is at least two but less than 3') else disp('a is at least 3') end is valid, and again will display exactly one phrase. This conditional syntax is pretty common across programming languages.
No problem. Good luck.
The nyquist theorem says that if you want to sample a signal properly, the sampling time has to be at least 2 times the original signal length. Knowing that, there are 3 possibilites: The signal can be poorly sampled (if you are not following the nyquist rates) and lose a lot of its original harmonics. The signal can be critically sampled, just to close to the nyquist rate, that way you have few losses. And finally the signal can be super sampled, that is, you put the sampling time above the nyquist time and you have the signal sampled perfectly. There' no right or wrong sampling time, it just needs to fit your necessities, but its always recommended to work above nyquist rates and time. Source: B.P Lathi, Signals and systems 
I'll start by saying that I am currently running Matlab 2014a, so it might have changed more recently, but print is literally the function to send the current figure's contents to a physical printer. All you need to do is setup the current figure with whatever you want to send to paper and then call print. (Easier said than done.) If you want to get fancy, you can verify that you have a default printer installed with system_dependent('GetDefaultPrinter'). The help for print goes into more detail with specifying a specific printer.
They don't have to be the same size (although it's nice if they are). https://se.mathworks.com/help/matlab/math/matrix-indexing.html#bq7ekiy-1
I don't really see how a figure has anything to do with an occupancy grid. A figure is an abstraction for displaying data or graphics on your screen. Occupancy grids are meshes of binary variables indicating whether a location contains an obstruction to the motion of a robot. They're totally unrelated. 
Using, essentially, screenshots as a data analysis tool is a bit ugly. Why not calculate the resulting polygons mathematically and use that? It's a shame you don't have access to a flexible numerical analysis programming language... Oh wait. Check out the documentation for inpolygon() or inpoly(), I forget which is the correct name. Also check out the documentation about convex hulls and boundaries. 
Thanks for your reply! I know it's a very short time scale but I wasn't sure whether that oscillation is normal and would happen on start-up or if there's something wrong. https://imgur.com/a/oHqJE
I actually need to save it with a '.txt' file :/ . 
For example, i would like it to stay in the .txt file like tat 1 2 2 tbt 1 2 3 or tat 1 2 2 tbt 1 2 3 just really managing how i save those different variables in the file
 fileID = fopen('C:\YourPath\YourFilename.txt', 'w'); fprintf(fileID, 'tat\n'); for i = 1:numel(tat) fprintf(fileID, '%f\n', tat(i)); end fprintf(fileID, 'tbt\n'); fprintf(fileID, '%f\n', tbt(i)); end fclose(fileID); As others have said, this is a pain to write and an pain to load. If you're just using it for Matlab, then just save to a .mat file, which I think you can do with just `save('C:\YourPath\YourFilename.mat', 'tat', 'tbt');`. 
For an actual usable amount, it's likely just under half or a quarter of the GPU available memory, depending on operations you perform on the matrix. Some operations need to make copies and that takes space. Since the GPU is likely driving your screen, that consumes resources too. You can also use the nvidia-smi utility to watch GPU memory. It's in program files/nvidia corporation on Windows and should be on the path on Linux. FWIW, the K600 is a pretty low powered GPU. You can use it for learning and simple examples but it's likely going to be inadequate for much else.
Knowing the simulation parameters is essential to the solution and its implementation. You've got to describe your problem more: how is the room defined, is it static? What is the sensory input of the roomba? Is the problem just the planning phase, or also execution?
In your first set of images it looks like something is being rounded or binarized somehow. I'm guessing you've got something strange happening with datatype. Matlab does convolution just fine. Your issues inspecting the kernel values is likely due to data orientation. Matlab is column major and C is row major (or the other way around, I can't remember). Also Matlab indexing of 2D arrays is (row, column). This isn't necessarily the same in C. 
&gt; In your first set of images it looks like something is being rounded or binarized somehow After I use `imread` in Matlab, the values of the pixels are `uint8` in Matlab. Apparently they are not `uint8` after using `imread` in OpenCV in Python? How do I fix this? &gt;Your issues inspecting the kernel values is likely due to data orientation The kernel I'm using is 15x15. Even if the data orientation for Matlab is different than OpenCV in Python, then if I try `kernel(7:9,8)` in Matlab, the values are 235, 255, 235, which doesn't match the 231, 235, 231 in OpenCV 
Yes I am still in the planning phase of the project, the issue im having is trying to think of a way for my roomba to be able to 'see' walls using sensors. Similar to the question [this guy](https://stackoverflow.com/questions/44647722/wall-detection-in-matlab-slam-sensor-simulation?rq=1) is asking. The room its self would be static and simple even just 4 walls forming a square to start out with. The sensor input would just be 'eyes' that tell the roomba how far away it is from the wall would communicate to the motors on the roomba where it should move to and how much by. I guess what I'm really asking is how to make the wall recognizable by the sensor without just giving it there is a wall here avoid it, in essence make the roomba detect the wall on its own (think for itself without being given location of the wall). I realize this is probably a pretty specific thing but was wondering if anyone knew some good resources that dealt with animat simulations.
What's an "animat"? Google doesn't seem to know that word either, maybe that's why you aren't having a lot of success with it. A good strategy for any first time you implement anything really is to start from the simplest possible version of what you're trying to achieve. When you have that running perfectly, then you can consider increasing the complexity. For your project that would look something like: * Roomba goes from point A to point B (this is what you have now) * Roomba goes from point A to point B while avoiding point C between A and B * Roomba goes from point A to point B while avoiding a wall between A and B, knowing perfectly where the wall is * Roomba goes from point A to point B while avoiding multiple walls, knowing perfectly where the walls are (similar to the link you posted) * Roomba goes from point A to point B while avoiding multiple walls, with wall detection being done through a sensor that's providing limited or noisy data You can worry about the sensor after you're done with the first four versions, and, with this being your first time, you have a lot of work to do before you hit that level.
Look up the 4x4 homogeneous transform. 
What happens if you convert 0.4 to an integer? (try it) 
Thank you for the response and taking the time to detail out a list of steps. I'm going to use this for sure, it really helps me to rationalize the problem. I think you are right about the animat thing its too specific of a search term. But essentially an animat is a model of how body biomechanics and nervous system interact dynamically in a virtual physical world where all the relevant neural and biomechanical parameters can be observed and manipulated ( from http://animatlab.com/).
It probably reads the thumbnail or something like that. Maybe try command line dcraw in order to convert to tiff without demosaicing ?
This is correct. The proprietary RAW format can’t be directly imported, and Matlab is loading an embedded thumbnail. Luckily, previous users have developed tools (such as *dcraw*) to help! https://photo.stackexchange.com/questions/75872/dcraw-command-for-14-bit-raw-image
Its a statistical uncertainty, look into filtering and identification e.g. Kalman filter if youre interested as control engineer. 
Can you make the axis of the cylinder the z axis?
Hey thanks, been looking at transformations all day and it's driving me mad. So there is an n x 2 matrix for each x y and z. I've tried multiplying x and y by the 2d rotation matrix with no good resultm wondering how I could do anything with a 4x4 matrix when I've only got n x 2 matrices. Thanks a lot, any help is much appreciated ☺. 
I'm trying to rotate a few cylinders rotate round to make the spokes of a wheel, I did it perfectly with rotate but that doesn't give me a matrix that i need for an stl file. I'm just trying to pattern them round by rotating them by a set angle So making their axis the z axis doesn't really help I don't think. Thanks though ☺
No problem :)!
I want to know if the two point cloud data files are georeferenced, if they are georeferenced, you can try the volume statistics function in LiDAR360. First, you can generate two surface models from point cloud, then, the volume statistics can be used to obtain the filling amount (Fill), excavation amount (Cut ) and total fill volume (Total) by subtracting the lower surface from the upper surface. 30 days free trial version of LiDAR360 download link is: http://www.greenvalleyintl.com/software/software-downloads/
Doesn't this include the last 11 results? I think OP wants R(end-9:end)
The strategy sounds good. Thanks!!
Just start using it. 
Yes, you're correct. 
It's going to be incredibly hard to become an expert if you have no projects to use it on. I use it just about everyday and I still have to look stuff up that I have forgotten. Definitely do the tutorials as those will help you understand the capability of Matlab. Then maybe going through different questions on the sub and try to do what someone else asking about. Usually the best way to learn is to do a project then go until you get stuck. Then use Google to try to figure it out. 
I got it 
You are right. My bad
MATLAB has a tutorial course called Onramp. I’m not sure what your level of general coding is, but Onramp starts you at the very beginning. https://www.mathworks.com/training-schedule/matlab-onramp.html
Type this at the command prompt: &gt;&gt; doc
I will try that, thanks! 
I got Amos Gilat's book called "MATLAB: An Introduction With Applications" and worked through it (read a chapter, do about 10 of the problems at the end of said chapter, read next chapter, etc.)
Did you mean to say that to OP? 
Just backing up your comment. Matlab’s strength is its documentation. 
If your code should finish in 5 min, but never does in at least 6 times that time, then parfor or similar won't help you. Something else must be wrong. But what, is not possible to guess as your only description, of what you have done is that you have got it going...
As far as running the profiler, type `profile viewer`. This will bring up the profiler GUI. You can then click `start profiling` before running whatever code you are running, then click `stop profiling` when you are done. 
Early Christmas lol - [xOld, yOld, zOld] = cylinder(1,100); oldSize = size(xOld); nPts = numel(xOld); x = reshape(xOld,1,nPts); y = reshape(yOld,1,nPts); z = reshape(zOld,1,nPts); xRot = rx(35*(pi/180)); yRot = ry(0*(pi/180)); zRot = rz(0*(pi/180)); R = zRot*yRot*xRot; dS = [0; ... 0; ... 0]; T = [R, dS; 0, 0, 0, 1]; xfmPts = T*[x;y;z;ones(1,nPts)]; xNew = reshape(xfmPts(1,:), oldSize); yNew = reshape(xfmPts(2,:), oldSize); zNew = reshape(xfmPts(3,:), oldSize); figure(1); clf; mesh(xOld,yOld,zOld); %or surf(xOld, yOld, zOld); hold on; mesh(xNew,yNew,zNew); axis equal; function E = rx( theta ) % rx 3x3 coordinate rotation (X-axis) % rx(theta) calculates the 3x3 rotational coordinate transform matrix from % A to B coordinates, where coordinate frame B is rotated by an angle theta % (radians) relative to frame A about their common X axis. c = cos(theta); s = sin(theta); E = [ 1 0 0; 0 c s; 0 -s c ]; end function E = ry( theta ) % ry 3x3 coordinate rotation (Y-axis) % ry(theta) calculates the 3x3 rotational coordinate transform matrix from % A to B coordinates, where coordinate frame B is rotated by an angle theta % (radians) relative to frame A about their common Y axis. c = cos(theta); s = sin(theta); E = [ c 0 -s; 0 1 0; s 0 c ]; end function E = rz( theta ) % rz 3x3 coordinate rotation (Z-axis) % rz(theta) calculates the 3x3 rotational coordinate transform matrix from % A to B coordinates, where coordinate frame B is rotated by an angle theta % (radians) relative to frame A about their common Z axis. c = cos(theta); s = sin(theta); E = [ c s 0; -s c 0; 0 0 1 ]; end
Ok, I clicked start profiling, ran the code, then clicked stopped profiling and nothing came up....not sure what im doing wrong here
Wow! Thanks so much, really appreciated. This makes so much more sense. If you ever need help from a lowly engineering undergrad send me a message :)
Thanks for the advice, didnt know the inpolygon function existed, made my life so much easier :') - Thanks 
follow these steps: 1) type `profile on` or `profile -memory on`. Unsurprisingly, the 2nd gives extra info about memory usage. 2) run the code 3) wait for the code to finish or hit `pause` from the editor tab in the menu on the top of the screen 4) type `profview` to view profiler results 5) type `profile off` to turn off profiling. You will need to do this before profiling anything else. This can be combined with the previous step by typing `profview; profile off;`
Is there a way to (without manually lin spacing each individual point) to generated say 4 more points between each given vertex in 'Oa' 'Ob' 'Oc' 'Od' 'Oe' ?
You could use interp1 https://www.mathworks.com/help/matlab/ref/interp1.html
&gt; interp1 :D thanks, this is super helpful 
Unless you need the table to generate values and instead have the values already, you might consider using the table() function. Type help table in the command window for syntax 
You should be able to identify the maximum value in each row of the coefficient matrix using the built-in max() function, ie [x k] = max(A) yields x, the maximum values, and k, their location in the matrix using the single digit identification system
The textbook I use as a TA for an undergraduate "introduction to programming in MATLAB" course is entitled A Concise Introduction to MATLAB by William J. Palm. It's a great introductory problem book to get you familiar with the ins and outs. If you want something a little more advanced, try Kharab and Guenther's An Introduction to Numerical Methods using MATLAB. The latter's focus assumes a familiarity with MATLAB but has tons of example functions to help one to see how functions are written and how to apply them and develop your own.
You can multiply the eigenvectors by any constant. The LCM of the denominator of the components can be used as this constant.
is there any way i can change this so i can still see the arrow heads? 
This could possibly be due to the fact that (0,0) creates an undefined number (ie 1/0). But idk how to fix this
How will I use the lcm function since it needs two arguments? lcm(V) will give me an error
This line is **not** valid. Elementwise addition is not a valid operation. The only 3 iterations permitted are multiplication, division, and exponents. Addition and subtraction can be done directly if the matrices are the same size.
Thank you... Could you maybe suggest a way I can work around this? Im funding vectorisation a bit hard..
Assuming I understand what you are trying to do, all you need to do is rearrange the original formula slightly and ensure all of your inputs (V, dt, A, B, R, input, and T) are the same size (1, x) row vectors if you are doing element-wise operations. #Revised equation V_=V+ dt .* ( -(A-B) + (R .* input) ./ T); #Original equation V_=V .+ dt* . ( -(A-B) .+ (R.*input)./T); 
Thanks a lot!!! :) 
Try replacing the Inf with a NaN. See if that helps.
pdist2
I'm not sure the origin is an issue, since it appears in both, but FYI quick and dirty fix is to replace your denominators with (x.^2 + y.^2 + eps) I assume you had the element-wise exponents in your original code, though the dots don't show up above. eps is a Matlab defined number, the smallest representable floating point. By adding it to your denominator, you (almost certainly) prevent division by zero, while causing a negligible loss in precision for most points on your mesh. Of course, the one place where eps would matter is where x and y are zero, and now you'll get a very large (but still "ordinary") number, instead of an Inf or a NaN. Whether the trick works depends on the rest of your code; the alternative is to separately handle the cases of divide by zero. Also I suspect you may have a problem with atan, since that form doesn't know the difference between quadrants (is defined only up to pi radians). Try atan2(x,y) instead. 
... So is the problem resolved then? Do you still need help?
Problem solved! I don't still need help. It is still rather curious that the index variables are shown in the workspace as empty arrays, but I will leave that mystery for another day.
Keep testing as frequently as possible in the command window
I don't know how the Youtube video code is running, because they have the same mistake you have. Note - the squiggly lines mean something is wrong! Pay attention to them! In this case, the semicolon in the middle of line 6 should be a colon.
&gt; V_=V + dt .* ( -(A-B) + (R .* input) ./ T); Hey actually some of these are just numbers like T, and value A-B. Does it still work? 
thanks I did not think of that 
Yep it does thanks ! 
If you know that always T will be a number, I recommend not using dot division but just a regular old forward slash / That tells your reader that indeed T is a scalar size 1.
To answer this, we'd have to look inside notch.m, which looks like something your class has provided you. We can't see it, but that's okay because it would be better if you took a look yourself so you can learn how to troubleshoot. 
It's not uncommon to have a script define some input parameters at the beginning, and use them in the following calculations. I do it all the time when I don't need to make something pretty and polished for an end user. If he doesn't say otherwise I'd consider that totally fine for an assignment like this. 
So the Find function is a good start. But you need to tell it what to find. So I would use logic statements such as matrix &gt; 0 | matrix &lt; 0.
not familiar with the find function myself, but I would use a for loop with an if statement inside of it Array(M,N) val = [] for i = 1:M for j = 1:N if Array(i,j) ~= 0 val(n) = Array(i,j) elseif Array(i,j) = 0 end end end You can index it however you want obviously, the val was just an easy way to write it 
you look to be on the right track. some other resources that may be helpful: http://www.columbia.edu/~ks20/4703-Sigman/4703-07-Notes-ARM.pdf https://en.wikipedia.org/wiki/Rejection_sampling coding it in Matlab should be real easy once you get the algorithm down. 
[n,m] = size(yourMatrix) YourLastNonZeros = zeros(1,m) for i = 1:m nonZeroIndex= yourMatrix(:,i) ~= 0; nonZeroCol = yourMatrix(nonZeroIndex,i); YourLastNonZeros = nonZeroCol(end); end You’d need to add logic to account for when there are no non zero numbers in a column but you get the idea. 
Find automatically finds non zero elements by default. We usually give logical arguments so that when logic is 'not false' or not zero, it is qualified for find.
Dont use a for loop for this, use a while loop. while difference &lt;= 1e-10 math... difference = something end 
We're not just going to give you the answer. Show us what you've tried, and what specifically is causing you trouble. 
Got an answer on Matlab Forums, if anybody cares in the future: tmp_values = xlsread(file, sheet, 'O9:O12'); values=zeros(1,4); values(1:numel(tmp_values))=tmp_values; https://de.mathworks.com/matlabcentral/answers/390709-stop-xlsread-from-trimming-last-empty-cells
I don’t fully understand your question, but it sounds quite specific. My guess would be that you have to mathematically find a solution to the problem, which can then be input into Matlab relatively easily. 
[I used to be one](https://www.youtube.com/watch?v=0frHCgSEko4) lol
Sorry for the crappy explanation. Yes, like a Venn diagram. Here are two pictures which will hopefully clarify what I am attempting to do. https://drive.google.com/file/d/16wZPU7F8tHJge-ykLU7rUYRZ9B7lDu5R/view?usp=sharing https://drive.google.com/open?id=1QlPQCptAQaacqV7fKmrHYSKk-6G36diA
Please see our [rules for submitting homework](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/) and make the necessary changes to this post. 
I've literally done this for a class if they do it right it goes for about 2 mins.
Please format your code so it is readable. If you put 4 spaces in front of your code it looks like this And most importantly, \* doesn't make italics and \^ doesn't make superscripts
Ok so do your data consist of images like that or do you have the central point, diameters etc. of the ellipses? If the latter is true then this is straight forward, if the former then this is a computer vision problem which makes things much harder.
It says not enough input arguments. You're calling a function, `vel`, with no arguments.
That isn't solving your problem, it's just a workaround. If you want to read the NaNs, use [impordata](https://www.mathworks.com/help/matlab/ref/importdata.html), not xlsread.
Well, it seems like he has questions about breaking, and loops in general... So I thought it couldn't help. I mean, if you are certain that there will be a point where the conditions triggers, sure leave out the break condition. But I find it comforting when one exists ... 
Does your code run?
Thanks for the help!
May I ask what the two problems are? I actually dont know anything about it as the TA just dropped a bomb on me
You do this a lot with finite difference approximations.
You can use the monte carlo method, something like this: -Draw Ellipses #1 -Draw Ellipses #2 -check for each point in x and y (e.g. 1000x1000 points) if they are part of #1 and #2 -calculate the area, based on the number of points which are part of both -repeat this for all ellipsis That's the brute force method, it will take some calculation time but should be easy to implement and maybe to extend
What are you trying to do here? plot(tspan,vel(tspan,g,T,m,gamma0,ht,littlegam,t)); Is `vel` a function? Because up above, it's a variable, but here you're using it like a function. 
Okay ill change it, thanks for the help
This is a very simple function to code up in a few lines. Where are you struggling? You shouldn't need to see the solution for this before coding it up yourself.
that's not a very specific description of the issue you're having.
Please see [our rules for submitting homework](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/). 
That's awesome. Sadly, I have no idea how to write that script. The only time I've used MATLAB was an intro programming class 6 years ago and it was very basic stuff.
Right...actually i didnt read homework rules.So now i'll try describing my problem more specificly.
Step one: Generate the data for each curve. Step two: Plot the data on one axis. If you're having trouble on the first step, you need to familiarize yourself with the mathematical expressions/equations that build the theory, then generate the curves you want across a range of values. As of now, you have been very unclear about where you are struggling. Please post what code you have thus far, and we can assist in debugging or clearing up any doubts about how Matlab works.
No you didn't do it right.
Google it? It doesn't look like it is a thing created by Mathworks. I found [this file](https://www.mathworks.com/matlabcentral/fileexchange/56573-semiconductor-diode-with-feedback) on the File Exchange. If you can link to some official documentation that describes the component you're looking for, then maybe we could help.
It said there was a problem with the second 'end' there
I am wondering how to plot the magnitude of the gain for the general second order system response. The sort of plot as shown in the link and the one I want is something of the following in pseudo-Matlab: ω_n = 1; %an arbitrary natural frequency zeta = [0 0.2 0.5 1 2 5]; for k = 1 to 6 G = 1/(1-(ω/ω_n)^2 + 2*zeta(k)*iω/ω_n); %G(iω) end for m = 1 to 6 plot(ω, abs(G)) hold on end
Check the syntax for [input](https://www.mathworks.com/help/matlab/ref/input.html). If you've not made a mistake there, you can investigate [str2num](https://www.mathworks.com/help/matlab/ref/str2num.html). Best I can do for you, based on what you've asked and how you've asked it.
Use str2num which will return an empty matrix if it can't parse the string. Then you can just check if the result is empty or not, knowing that if it is not empty it was in fact a valid number.
That's basically the code right there, you just need to change the code such that the curve for each `k` is saved for each iteration instead of overwriting G each time you change `k`.
Awesome, thanks!
Okay, I got it, but to solve it I instead worked with individual elements of 2*100 arrays rather than vectors. w_n = 1; %an arbitrary natural frequency zeta = [0 0.2 0.5 1 2 5]; w = linspace(0,3,100); %Frequency (x-axis) for k = 1:6 for m = 1:100 G(k, m) = abs(1./(1-(w(m)./w_n).^2 + 2*zeta(k)*i*w(m)/w_n)); %G(iω) end end for k = 1:6 plot(w, G(k,:)) hold on end 
Looks like 3-phase currents might help you here. Are you aware of them? I had a quick idea while looking at your last two images: if you take the minimum of the absolute values of three phase currents you may find the signal you're looking for. You can try it in the command window or editor first: x = linspace(0, 2*pi, 1024); plot(x, min(min(abs(sin(x)), abs(sin(x - 2*pi/3))), abs(sin(x + 2*pi/3)))) I'll leave it to you to implement that in your Simulink model if you like how it looks.
So I have this 32% homework (I know, crazy) for my numerical methods class and we’d never done any MATLAB prior to this engineering class so they’ve kinda just thrown us into the deep end at once There’s another problem to do with Jansen’s Mechanical Linkages and to create a simulation of that and use the Newton-Raphson method to find out the lengths or coordinates of the bars or something idk, but if anyone can help with that one let me know! QUESTION: Anyway for this problem I’ve pretty much figured out the values for mechanical properties etc., but I’m stuck on how to present the truss in MATLAB, I have a basic understanding of using arrays and matrices and I know you need to use them to create a “drawing” of this truss, but I have no idea where to start. If anyone can help pls let me know!
Is the class with Big Dick Ableson?
You want to look up finite element method particularly the matrix with c's and s'srepreaenting sin and cos. Labels the node and elements and make each local matrix then concentrate them to a global matrix
I see 12 degrees of freedom so I'd create a 12x12 zeros and add each local matrix seperatly
Thanks for the replies, could u elaborate a little more on this? Is the finite element method the way of creating an illustration of the truss in MATLAB? Also, if that is the case, being a complete beginner in MATLAB, what kind of tutorial would I have to be looking for to understand fully what ur explaining, is it finite element method?
Not sure but won’t be surprised if it is
Erm Google matlab: zeros, matrix indexing and solving matricies. Finite element is how computers in general solve mechanics the truss version is a simplified version using only 1d bar elements. Is also very important to learn the basics of, I'd Google the derivation of it and watch then see how it goes. Let me know how you get on
Thanks I’ll update as soon I’ve done it 
So, I ended up figuring out something that works well, though it is by no means a general solution. This only works because I need to generate a bunch of sparse arrays with the same sparsity pattern but different values in the nonzero elements. Matlab has a few reordering functions I am using `amd`, though I havent reallly thoroughly tested any other ones). These can compress all the nonzero elements into a very small subset of the array, and the all zero rows and columns can be droppeed. In my case, the array size went from ~[270,000 x 270,000] to ~[2,700 x 2,700]. I generate the full sized array once, then do the reordering, then re compute the X and Y indexing vectors with the all-zero rows/cols removed and then directly generate the smaller matrix all the other times I need one with that particular sparsity pattern. Like i said it isnt a general solution, but maybe it will be of use to you too.
You might want to display your plot in log-log scale, that's usually how these diagrams are made. You should also have a look at the `bode` function in Matlab to automatically generate it from the transfer function 
Plot the arrows as directions only (all magnitudes set to 1) and use a contour plot of the log-magnitude underneath the arrows to present how the magnitude changes.
Unfortunately I need the arrow lengths to be different to represent different magnitudes. Perhaps there is a way to set max arrow length so that values much higher than the rest do not throw off the scaling?
That’s strange. Why do they need to be that way? Given your data, it doesn’t make sense. Are you sure the 10^11 isn’t dude to a numerical issue? You could arbitrarily set a threshold for the arrows, sure. 
Yes, I believe it is not a mathematical error as the values that are very high and out of the ordinary seem to only occur because the limits of the functions defining u and v approach high values close to (or as they approach) x,y = 0,0 which is the area I am getting the very high values. I may be able to use a contour method if I cannot get the arrows to scale correctly with quiver. How does one set a threshold for the arrows? I have looked all over and can't figure that one out.
There isn’t a built in option for a threshold, you’ll need to scale the data yourself by setting whatever is above a certain threshold to that threshold (taking into account the direction)
Is the part you're having trouble with being the input and result and animating them, or is it developing the mathematical model required to solve the problem?
 Per = 60; abs(sind(mod(angle + Per/2, Per) - Per/2))
You say you haven't been exposed to Matlab before, which is fine; but you also seem to be unclear on the mathematical approach to this problem. I'm a little surprised that hasn't been covered in class. If you don't know how to do a calculation, Matlab won't be able to help you. 
+ Thanks a lot, it works great! [Simulink model] (https://imgur.com/a/QQXfp). I have one additional question of you don't mind. As I'm using a powergui block for a power electronic device I must specify a Sample Time in this block (e.g. 1e-8). Should I do the same for the [Sine Wave blocks](https://imgur.com/3c34en3) that also asks for Sample Time?
great work!
I have it installed. How can I send it to you?
So you're having an error that says "matrix dimensions must agree". The obvious next step is to look at the dimensions of the matrices involved and see if they agree, and if not, figure out why. What did you find when you did that? 
You might, but it's generally bad practice. Real world code should have a clear guarantee that it will complete in finite time. At the least, it should require specific inputs to allow unbounded runtime operations, such as an iteration limit being set to inf, such that the infinite runtime will not be unexpected. 
Contact us for free help
I'm not too sure, It works just fine when I remove C from the equation. There are values for A B and C in a separate code as well. A= 2, B= 4 and C= 3.75.
I am able to do the calculations of the truss and forces acting on each joint outside of matlab, just unsure of how to translate this analysis into terms of matlab and create a relevant animation
How have you got on?
https://imgur.com/a/jMkLQ
I had a look at a video on YouTube of a similar truss problem being solved by finite element method but I’m not sure it’s what the lecturer is asking us to do if you get me, I think he wants us to take an approach more to do with numerical methods we learned in class (Newton-Raphson, Euler, Gaussian Elimination, etc) and create a function file using those I was supposed to meet with him this morning but he want there so will see what he says 
Ah i see; Gaussian elimination is used in finite element method; it is used to solve the final created global matrix. Those are methods of solving only, useless on their own without an accompanying problem to solve. This is all very odd though in the order you're getting taught though i must say; taught Gaussian in a lecture format but expected to research FEA on your own? so odd. 
Is FEA the only way of doing the problem? He has an explanation of the matrices used to show forces on each joint in a similar problem in the notes, but thats as far as it goes
It's probably not the only way to solve the problem their are older methods that i'm not fully up to date on but it's unlikely. FEA is whats used in industry and the most common by a such a large margin i couldn't tell you what the second most common method would be. If you send me a picture of the method he uses i'd be happy to have a look and see.
Follow FrickinLazerBeams's advice and have your code spit out the dimensions as you go: disp(size(t&gt;=t0-C)) and so on. Either you're debugging, or you're just thinking about debugging. The former requires choosing interventions with the greatest chance at being informative. In this case I suspect the indices on the LHS and RHS of your s3 line are not the same size, because your inequalities are not returning the same number of true elements. This is either a bug proper, like prosperosmile suggests, or an edge case you haven't considered, e.g. what happens at the beginning of your arrays, say when t0-C is negative but t1-C is positive?
Ah i see that method is just resolving forces then putting it in a similar form as FEA. Watch https://www.youtube.com/watch?v=01bHcbJekp0 And try to replicate the method he use, you should use the matrix shown at the 4 min mark on the top right.
Video linked by /u/Alexanderphd: Title|Channel|Published|Duration|Likes|Total Views :----------:|:----------:|:----------:|:----------:|:----------:|:----------: [Calculate Nodal Displacements using Local and Global Stiffness Matrix EXAMPLE (Part 1 of 2)](https://youtube.com/watch?v=01bHcbJekp0)|Gluten-Free Learning|2017-02-11|0:14:42|78+ (100%)|12,141 $quote In this video I use the local stiffness matrices of each... --- [^Info](https://np.reddit.com/r/youtubot/wiki/index) ^| [^/u/Alexanderphd ^can ^delete](https://np.reddit.com/message/compose/?to=_youtubot_&amp;subject=delete\%20comment&amp;message=$comment_id\%0A\%0AReason\%3A\%20\%2A\%2Aplease+help+us+improve\%2A\%2A) ^| ^v2.0.0
&gt; [I'm] not sure how to translate the analysis on paper to them if that makes sense! Show us the analysis on paper.
Yeah I just checked and the C was also on the wrong side. It's working now.
Are you familiar with how to represent a system of linear equations as a matrix? This is usually taught in a linear algebra class around the same time as engineering statics. Animating the solution graphically is a completely different issue. Are you really expected to do that? It's a lot of effort without much benefit to learning the relevant engineering principles. 
Try using inline equations
&gt; Is there a way to limit arrow length on the plot? This would be the ideal solution. Sure, convert your u and v into polar coordinates, then for all of the 'r's larger than your max, set them equal to max (one line with [logical indexing](https://de.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html), then convert back to Cartesian. 
Extend the method you have already used: [concatenation](https://www.mathworks.com/help/matlab/ref/strcat.html#btwmmkd-5). You can concatenate the string on iterations after the first using a conditional statement to check 'i', OR (and this is my preference) you can simply create 'text1' as an empty matrix, and begin concatenation in the first iteration. Example: x = []; for idx = 1:10 num = idx*10; x = [x, num]; end disp(x) This works for strings as well, and in the [uicontrol 'String' property](https://www.mathworks.com/help/matlab/ref/matlab.ui.control.uicontrol-properties.html#bt6ck7c-1-String), concatenation is the method by which you create multiline text. If you need to use cell arrays instead (depends on your UI, which is invisible to us), you can concatenate by just [indexing into a new spot](https://www.mathworks.com/help/matlab/matlab_prog/add-cells-to-a-cell-array.html): cellGuy = {'thing1', 'thing2'}; cellGuy{3} = 'thing3'; cellGuy cellGuy{:} MATLAB's documentation is quite thorough, and very instructive. Since you say you are new, the best advice I can give you is to become intimately familiar with it!
%%Define variables k=.84; a=3.9*10^-7; edot=25; T0=-3; hi=6; ho=20; dy=.001; dx=.0002; t=(0:60:100*60); dt=t; p=2.4*10^3; cp=0.18; T=zeros(9,length(t)); syms T1 T2 T3 T4 T5 T6 T7 T8 T9 for i=1:length(t) eq1=a*dy*(T0-T1)+a*dy*(T2-T1)/dx+a*dx*(T7-T1)/dy+a*(T4-T1)/dy == dx*dy*((T1(i+1)-T1(i))/dt); eq2=a*dy*(T1-T2)/dx+a*dy*(T3-T2)/dx+a*dx*(T8-T2)/dy+a*dx(T5-T2)/dy == dx*dy*((T2(i+1)-T2(i))/dt); eq3=a*dy*(T3-T2)/dx+h0*dy*(T0-T3)+a*dx*(T9-T3)/dy+a*dx*(T6-T3)/dy == dx*dy*((T3(i+1)-T3(i))/dt); eq4=hi*dy*(T0-T4)+a*dy*(T5-T4)/dx+a*dx*(T1-T4)/dy+a*dx*(T7-T4)/dy+edot*dx*dy == dx*dy*((T4(i+1)-T4(i))/dt); eq5=a*dy*(T4-T5)/dx+a*dy*(T6-T5)/dx+a*dx*(T2-T5)/dy+a*dx*(T8-T5)/dy == dx*dy*((T5(i+1)-T5(i))/dt); eq6=a*dy*(T5-T6)/dx+ho*dy*(T0-T6)+a*dx*(T3-T6)/dy+a*dx*(T9-T6)/dy == dx*dy*((T6(i+1)-T6(i))/dt); eq7=hi*dy*(T0-T7)+a*dy*(T8-T7)/dx+a*dx*(T4-T7)/dy+a*dx*(T1-T7)/dy == dx*dy*((T7(i+1)-T7(i))/dt); eq8=a*dy*(T7-T8)+a*dy*(T9-T8)/dx+a*dx*(T5-T8)/dy+a*dx*(T2-T8)/dy == dx*dy*((T8(i+1)-T8(i))/dt); eq9=a*dy*(T8-T9)/dx+ho*dy*(T0-T9)+a*dx*(T6-T9)/dy+a*dx*(T3-T9)/dy == dx*dy*((T9(i+1)-T9(i))/dt); [A,B] = equationsToMatrix(eq1,eq2,eq3,eq4,eq5,eq6,eq7,eq8,eq9,T1,T2,T3,T4,T5,T6,T7,T8,T9); T(:,i) = A/B; end 
Since you got an error message, you know where the problem is, and you've already looked at that line to see what matrix is having its dimensions exceeded, right? So tell us. It doesn't help us if you keep it secret. 
it says its in eq 1 
You can't reference elements of a symbolic variable. You call `syms T1` but then call `T1(i)` and `T1(i+1)`. `T1` is not a vector or matrix, it's a symbolic variable to Matlab.
*You can't add anything to a Simulink project unless you have the Simulink file.* Just because a &lt;thing&gt; exists in real life doesn't mean that &lt;thing&gt; exists in Simulink. If it's not a standard part that was implemented by Mathworks and offered as part of a Simulink package, then *you have to make the part yourself or find a part that someone else made.*
Okay do you know where can I find something like that? I mean a part that someone else made. 
2 core vs. 8 core should not be about whether it runs or not, but only about how fast it runs. What could make the program not run at all is if you have for example too little ram. Upgrading laptops is more difficult than for desktops and you have to see on a case by case basis how available and expensive new parts are, whether you feel confident exchanging them yourself etc. How often do you plan on doing this kind of work in the future, it might be easier to rent computation time on the cloud if this doesn't happen too often.
Some matlab functions are internally parallelized, they automatically run faster on multi-core computers.using `find` on a big array will be faster on an i7 than i3 with the same processor speed i.e. but shouldnt be much of an issue tbh.
I want to create a figure like [this one](https://imgur.com/a/mFFFA) I found in a colleague's thesis. I know she used MATLAB primarily for data crunching, but I am unsure if she used MATLAB for this figure in particular or if she used Python. I'm waiting to hear back from her about it, but figured I would ask here in the meantime. Does anyone know if MATLAB has a plotting function that can make a figure like this with relative ease? TIA!
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/gwOngDo.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dwdolxh) 
It's definitely a Matlab figure. It looks like a simple scatter plot with manual xtick labels, and two dashed lines. There's no single function that will do it all for you. You need to construct the figure yourself. Shouldn't be more than a couple lines, given that you already have the data.
use a variable to save the name as a string and then concatenate the string to the file extension as needed when you call imwrite
This is pretty easy in MATLAB. There isn't a single command to do everything, but you can plot three data series with points (so format code '.' instead of '-'). Then plot two dashed lines (format code '--'). Then use `xticklabels` [to specify axis tick values](https://www.mathworks.com/help/matlab/creating_plots/change-tick-marks-and-tick-labels-of-graph-1.html). Add a legend. And you're done. 
Could an egpu work for this case. You keep your laptop and have a desktop graphics card for computations. 
Thanks for the response. Pretty often. Apparently I have 4GB of RAM currently. The guy who wrote the first program said to me "GPU would not help. Its a CPU cores thing. I guess multiple cores CPU would help." 
I tried this but ran into issues when I changed other parameters in the plot as the max (the limit of the arrow length) would be out of proportion as all the arrows might be above that value for different parameters. Ended up logarithmically scaling it; I must have made a mistake when I tried to do so earlier, but it worked this time.
I was thinking about an egpu...its a cost effective solution for me as well. Just what kind, I dont really know. Its these two specific programs that I need to run.
Hmm...if it shouldnt be much of a problem, I wonder what my problem is then.? It really wont complete the first one, and takes way way too long for the second one (which uses a neural network) 
You really should try it on a computer where you have access to a graphics card that can become the parallel pool and see how it goes from there.
Ah good idea. It doesnt crash...it just never completes the task. That would be nice if this was the problem. It should be able to take in more. Ill run it and find out now.
When I run the task manager while the script is running it says 800,000 K (and climbing) and 25 CPU
Like your Mac’s terminal our can edit the path. So you need to edit the Matlab Path which you can do from the UI via the horrendous ribbon abomination or from Matlab’s command line. Look up setpath in the documentation. Essentially you can simply move or remove that directory and add any other directory and add that new directory to Matlab’s path. 
Thanks! I’ll try it out tomorrow. 
Try scatter3 ?
Scatter plot gives me a vertical line along the diagonal in the three dimensional coordinate. I am looking for a way to plot this value for all combinations of x, y and z. Let’s say if x=y=z=-5:5, then I would want to calculate and plot the value of c for all the combinations of (x,y,z) coordinates in that range.
Look into meshgrid
I agree. Also, there were probably 15 versions of this plot at her/his advisors request. ‘Can we make the font bold?’
Nope. Looks like Hold on; Scatterplot(x,y,'b'); Scatterplot(x2,y2,'k'); Scatterplot(x3,y3,'r'); Legend(... %I give up matlab on mobile % have a nice day
Oh my coworker recently had to deal with this issue. I'm sorry I can't help because I don't know what the solution was, but I do know one exists, so don't give up. If my coworker is around tomorrow I'll ask him. The video interface stuff has been a real pain for a while. 
Note that the term 4×6 simply means that the matrix called A has 4 rows and 6 columns in it. When you execute the code provided in the link: nrows = 4; ncols = 6; A = ones(nrows,ncols); for c = 1:ncols for r = 1:nrows if r == c A(r,c) = 2; elseif abs(r-c) == 1 A(r,c) = -1; else A(r,c) = 0; end end end A Note that the code calls the name of the variable A without a semicolon. This essentially prints out what you saw. In your case, if you named the variable mofo then you need to make sure that you store the values into your mofo variable. I don't have access to your code so I'm not 100% sure but the issue with not seeing anything could be that when coding the if-statements you forgot to store the numbers 2, -1, 0 into your 'mofo' variable. If you can show us your current code we can discuss what exactly you're having trouble with.
Search on xticklabels in the google. Maybe a look up table to index your entries and you’re there. Maybe 5 or 6 commands.
Thanks mate. I'm still grinding away hoping to trip over a solution to this problem lol
just remember to use the hold command to keep everything on the plot.
IMO, the answer key is right but for the wrong reason. Im assuming the question is talking about floating point precision. Whether or not a floating point operation causes precision loss depends on whether or not the dynamic range of the output result is smaller than the dynamic range of both inputs. For subtraction, this equates to: As long as the output is smaller then both inputs (e.g., `300.xxxxx - 299.xxxxx`) then the outut doesnt lose precision. Something like `300.xxxxx - 1.xxxxx` would lose precision, since the output (`299.xxxxx` or so) wont have enough bits to represent the least significant digits in the `1.xxxxx` input. Method 1 produces a bunch of subtractions with no precision loss, and then adds them (this last operation could lose precision, but this is unavoidable). Method 2 produces a larger number `sum(y(i).^2)` that does lose quite a bit of precision compared to each individual `y(i)`and then subtracts `n*y^2`, which also has less precision than `y` (this is easy to imagine for `abs(y) &gt; 1` and `abs(y(i)) &gt; 1`, though looking at the dynamic range of the inputs vs outputs im 99% sure method 2 still loses more precision even `y` and `y(i)` have magnitudes less than 1).
Plot3k from the Matlab file exchange 
Did you slap a ; at the end of it? That'll surpress outputs to the command line. Try taking it out. 
N=10; data_analysis = data(1:end-mod(length(data),N)); data_rms = rms(reshape(data_analysis,N,[]),1);
good
If you look at task manager, does it show utilization of all CPU cores separately? Is one core running while the others are almost totally idle? 
Seems like this would be a good fit for a function that loops slowly, but perhaps would add overhead to a fast loop?
The if statement thing was just an ideia, i don't really know how to create something that would solve my problem. I will take a look at arrays, thanks 
420 lines?? What?? updateTime = 5; %seconds nUpdates = 1; loopTimer = tic; for i = 1:bigNumber elapsedTime = toc(loopTimer); if elapsedTime&gt;nUpdates*updateTime totalEstimate = elapsedTime*(bigNumber/i); fprintf('%.2f seconds elapsed\n', elapsedTime); fprintf('%.2f seconds remaining\n', totalEstimate - elapsedTime); nUpdates = nUpdates + 1; end &lt;do your stuff&gt; end Is your program bugged? I looked briefly at it, and I noticed that you clear the persistent variables... then never redefine them. I would imagine then that nothing else from that call is retained. You might be able to get by with something like, &lt;logic that gets you to clearing the variables&gt; clear &lt;your persistent variables&gt; myLoopTimer(varargin) return; This just clears the persistent variables then retries the `myLoopTimer` function with the same inputs that were originally passed. I'm not running this on my box right now, so you might need `myLoopTimer(varargin{:})` instead, but hopefully you see my point. Then the original instance just returns after the child instance completes. Also, you set the persistent variables to empty `= []`, which is redundant if you're going to clear them. In your "recommended syntax," you have a comment that says you can use `'iname=&lt;...&gt;')`; should that be `'-iname=&lt;...&gt;')` instead? With a minus in front? The timer function gets called every time the loop iterates, and there is a bunch of cell and string/char operations on every call. How much time does the loop timer itself take to run?
I don't understand how you're using `programm.exe`. Are you using results in the Matlab code or is it just doing something external? By which, I'm asking whether or not Matlab hangs while waiting on the `programm.exe` to complete or be killed. Regardless, I think my approach would be to spawn a shell that manages everything. Have Matlab spawn a shell with inputs. The shell then starts `programm.exe` and forwards the inputs it received. The shell starts the process and then starts essentially a [watchdog timer](https://en.wikipedia.org/wiki/Watchdog_timer). If &lt;watchdog timer&gt; seconds have elapsed but the process hasn't exited, then kill the process. If the process did exit, then terminate the shell. Now Matlab can spawn as many shells as it wants. Each shell is only responsible for one process and Matlab doesn't need to track anything. Except maybe you might want to track how many shells are open and wait until it's below some limit before you spawn a new process, just to stop Matlab from flooding your computer. [~, tasklist] = system(&lt;stuff&gt;); while numel(tasklist) &gt; nTasksMax pause(0.25); [~, tasklist] = system(&lt;stuff&gt;); end Or something similar. 
Where's the question about *Matlab*? This is /r/Matlab. Did you try the [walkthrough for using the sensor](https://learn.adafruit.com/dht/using-a-dhtxx-sensor)?
Hey. Im not sure what you mean....heres what it looks like on my end with the program "running": https://imgur.com/a/RwRWr 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/rHzHrYd.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
So would i need to build an array that depending on the number i insert it calls the values? or how i would i do it?
Ok, how do i store this data in an array? i am familiar with arrays and how to call upon them to calculate other variables but i don't know how to store them.
+ Thanks for your help! I kind of get what's going on, but I'm still a bit fuzzy on why the TA wrote literally "Method 1 has 3 terms -&gt; more terms than method 2 leads to less error" Maybe he's just wrong about the reason
Ah. If the sensor is passing "digital output" for data, then it's using some kind of a protocol, like I2C or SPI or similar. You'll need to check the datasheet to what the protocol is and how it's implemented. You can check the [implementation provided by Adafruit](https://github.com/adafruit/DHT-sensor-library) and see if you can re-implement the same in Matlab. 
Thank you! I did not know about the I2C and SPI until today. I will look into those. 
I understand what it's supposed to be, I'm just pointing out that we don't have enough to be able to reproduce your error. I'm not sure how you're getting an indexing problem on just what you wrote.
If you want df to be equal to `subs(df,x,(1/2)*(1-cos(x)));`, then you need to make that declaration. That is, you need to have df = subs(df,x,(1/2)*(1-cos(x))); As it stands, your two `subs` commands have their output suppressed (semicolon at the end prevents printing the value to the prompt) and the results are not assigned anywhere. Your commands: subs(df,x,(1/2)*(1-cos(x))); subs(dg,x,(1/2)*(1-cos(x))); don't **do** anything.
That's a good Idea. The Programm is doing some calculation and saving it to a text file on my hdd. After it's finished I read the saved File and process the data That even helps with your suggestion: I could not read the Data immediatelly but spawn as many shells as my computer can handle until all parameter combinations are calculated. Then I could start the postprocessing where I read all generated result files and process them further. I will try this setup but I need to change quite a lot in my Functions, that can take a while. I'll update you on the results.
First you create an array, such as A = zeros(5,1). Then you can change individual elements, such as A(1,1) = 6. See [here](https://www.mathworks.com/help/matlab/learn_matlab/matrices-and-arrays.html)
Ah ok that makes sense. I appreciate it!
Technically this is true, though on almost any loop where this would cause a significant amount of overhead (relatively speaking the loop is running fast enough that getting status updates would be silly. After all, the point of this isnt just to print text to the display for the hell of it, it is to make sure that a long running loop doesnt get stuck and give you an estimate of how long it will take to finish. The only situation that this would cause a significant delay is if you had a loop with many (minimum several thousand) extremely quick iterations. In that case you can do something like numStatusUpdates=1000; updateEvery=floor(nIter/numStatusUpdates); myLoopTimer('start',nIter/updateEvery) for nn=1:nIter foo(nn); if mod(nn,updateEvery) == 0 myLoopTimer end end setting `nIter = 120 million` and comparing this to a loop that just consisted of for nn=1:nIter foo(nn); end The timing function added about 6 seconds. On any function that is worth timing a delay of 6 seconds is negligible. 
Apologies, it looked fine in the post preview, have added spaces now. the unbalanced parenthesis is in the line "[t,y] = ode45(@(t,y) odefcn1(t,y(1),y(2),y(3),y(4)), tspan, y0);" As far as i can see there isn't an unbalance, though I might just be too close to it to notice. 
I was referring to the "performance" tab in that display, which will show you current CPU / RAM utilization.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/1fYWCe5.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dwfmjt2) 
Yes
I was wondering about your CPU usage.. In that screenshot I can't see the entire time window of the CPU usage trace. Can't say more without seeing that.
You can use *repmat(A,row,col)* build out a matrix using your initial matrix. The tricky part is that *row* and *col* specify how many times to repeat *A*, so you need to solve for the proper value based upon *L* and the size of A.
Which window is that? Is it the one that pops open after clicking on "CPU usage" ?
Instead of: var1 = 4 var2 = 8 var3 = 9 You would do var{1} = 4 var{2} = 8 var{3} = 9 So you're making an array instead of abusing variable names. 
I believe I understand your task. Matlab allows you to make diagonal matrices with the command **eye(L)**. However, you wish for the elements (end-2:end,end-2:end) to be something else? If that is the case: blk_diag_mat = eye(L); offset = 2; blk_diag_mat(end-(offset-1):end,end-(offset-1):end) = 0;
I think it's not updating because you're not measuring it relative to anything. Try taking a "Transform Sensor" and attaching the "B" (base) input to your reference point and the "F" (follower) to the position output of your object. You can then double-click the Transform Sensor and select what output you're looking for; you can get angular position (Rotation), linear translation, etc. PS - Is that the new rope stuff in R2018A? I haven't seen blocks that look like that. 
Thanks for the reply !. Im not that familiar with simulink but im using R2018b though.Btw the "Transform Sensor" doesnt seem to attach to any of the circuits and it looks it only works on 3D systems? 
 kron
[this one](https://i1.wp.com/mintywhite.com/wp-content/uploads/2012/03/windows-task-manager-explained.png?resize=608%2C484)
There is a much easier way that will introduce you to the wonderful world of tensor products. The function `kron` is what you’re grasping for. For the 2x2 matrix `A` and length `L` you can easily construct this block diagonal matrix. kron(eye(L),A) I highly encourage you to read the (documentation for the kron function)[https://www.mathworks.com/help/matlab/ref/kron.html?s_tid=gn_loc_drop ] as well as the Wikipedia page for the [kronecker product](https://en.wikipedia.org/wiki/Kronecker_product). 
here is one example, I found on internet. % Demo to extract frames and get frame means from a movie and save individual frames to separate image files. % Then rebuilds a new movie by recalling the saved images from disk. % Also computes the mean gray value of the color channels % And detects the difference between a frame and the previous frame. % Illustrates the use of the VideoReader and VideoWriter classes. % A Mathworks demo (different than mine) is located here http://www.mathworks.com/help/matlab/examples/convert-between-image-sequences-and-video.html clc; % Clear the command window. close all; % Close all figures (except those of imtool.) imtool close all; % Close all imtool figures. clear; % Erase all existing variables. workspace; % Make sure the workspace panel is showing. fontSize = 22; % Open the rhino.avi demo movie that ships with MATLAB. % First get the folder that it lives in. folder = fileparts(which('rhinos.avi')); % Determine where demo folder is (works with all versions). % Pick one of the two demo movies shipped with the Image Processing Toolbox. % Comment out the other one. movieFullFileName = fullfile(folder, 'rhinos.avi'); % movieFullFileName = fullfile(folder, 'traffic.avi'); % Check to see that it exists. if ~exist(movieFullFileName, 'file') strErrorMessage = sprintf('File not found:\n%s\nYou can choose a new one, or cancel', movieFullFileName); response = questdlg(strErrorMessage, 'File not found', 'OK - choose a new movie.', 'Cancel', 'OK - choose a new movie.'); if strcmpi(response, 'OK - choose a new movie.') [baseFileName, folderName, FilterIndex] = uigetfile('*.avi'); if ~isequal(baseFileName, 0) movieFullFileName = fullfile(folderName, baseFileName); else return; end else return; end end try videoObject = VideoReader(movieFullFileName) % Determine how many frames there are. numberOfFrames = videoObject.NumberOfFrames; vidHeight = videoObject.Height; vidWidth = videoObject.Width; numberOfFramesWritten = 0; % Prepare a figure to show the images in the upper half of the screen. figure; % screenSize = get(0, 'ScreenSize'); % Enlarge figure to full screen. set(gcf, 'units','normalized','outerposition',[0 0 1 1]); % Ask user if they want to write the individual frames out to disk. promptMessage = sprintf('Do you want to save the individual frames out to individual disk files?'); button = questdlg(promptMessage, 'Save individual frames?', 'Yes', 'No', 'Yes'); if strcmp(button, 'Yes') writeToDisk = true; % Extract out the various parts of the filename. [folder, baseFileName, extentions] = fileparts(movieFullFileName); % Make up a special new output subfolder for all the separate % movie frames that we're going to extract and save to disk. % (Don't worry - windows can handle forward slashes in the folder name.) folder = pwd; % Make it a subfolder of the folder where this m-file lives. outputFolder = sprintf('%s/Movie Frames from %s', folder, baseFileName); % Create the folder if it doesn't exist already. if ~exist(outputFolder, 'dir') mkdir(outputFolder); end else writeToDisk = false; end % Loop through the movie, writing all frames out. % Each frame will be in a separate file with unique name. meanGrayLevels = zeros(numberOfFrames, 1); meanRedLevels = zeros(numberOfFrames, 1); meanGreenLevels = zeros(numberOfFrames, 1); meanBlueLevels = zeros(numberOfFrames, 1); for frame = 1 : numberOfFrames % Extract the frame from the movie structure. thisFrame = read(videoObject, frame); % Display it hImage = subplot(2, 2, 1); image(thisFrame); caption = sprintf('Frame %4d of %d.', frame, numberOfFrames); title(caption, 'FontSize', fontSize); drawnow; % Force it to refresh the window. % Write the image array to the output file, if requested. if writeToDisk % Construct an output image file name. outputBaseFileName = sprintf('Frame %4.4d.png', frame); outputFullFileName = fullfile(outputFolder, outputBaseFileName); % Stamp the name and frame number onto the image. % At this point it's just going into the overlay, % not actually getting written into the pixel values. text(5, 15, outputBaseFileName, 'FontSize', 20); % Extract the image with the text "burned into" it. frameWithText = getframe(gca); % frameWithText.cdata is the image with the text % actually written into the pixel values. % Write it out to disk. imwrite(frameWithText.cdata, outputFullFileName, 'png'); end % Calculate the mean gray level. grayImage = rgb2gray(thisFrame); meanGrayLevels(frame) = mean(grayImage(:)); % Calculate the mean R, G, and B levels. meanRedLevels(frame) = mean(mean(thisFrame(:, :, 1))); meanGreenLevels(frame) = mean(mean(thisFrame(:, :, 2))); meanBlueLevels(frame) = mean(mean(thisFrame(:, :, 3))); % Plot the mean gray levels. hPlot = subplot(2, 2, 2); hold off; plot(meanGrayLevels, 'k-', 'LineWidth', 2); hold on; plot(meanRedLevels, 'r-'); plot(meanGreenLevels, 'g-'); plot(meanBlueLevels, 'b-'); grid on; % Put title back because plot() erases the existing title. title('Mean Gray Levels', 'FontSize', fontSize); if frame == 1 xlabel('Frame Number'); ylabel('Gray Level'); % Get size data later for preallocation if we read % the movie back in from disk. [rows, columns, numberOfColorChannels] = size(thisFrame); end % Update user with the progress. Display in the command window. if writeToDisk progressIndication = sprintf('Wrote frame %4d of %d.', frame, numberOfFrames); else progressIndication = sprintf('Processed frame %4d of %d.', frame, numberOfFrames); end disp(progressIndication); % Increment frame count (should eventually = numberOfFrames % unless an error happens). numberOfFramesWritten = numberOfFramesWritten + 1; % Now let's do the differencing alpha = 0.5; if frame == 1 Background = thisFrame; else % Change background slightly at each frame % Background(t+1)=(1-alpha)*I+alpha*Background Background = (1-alpha)* thisFrame + alpha * Background; end % Display the changing/adapting background. subplot(2, 2, 3); imshow(Background); title('Adaptive Background', 'FontSize', fontSize); % Calculate a difference between this frame and the background. differenceImage = thisFrame - uint8(Background); % Threshold with Otsu method. grayImage = rgb2gray(differenceImage); % Convert to gray level thresholdLevel = graythresh(grayImage); % Get threshold. binaryImage = im2bw( grayImage, thresholdLevel); % Do the binarization % Plot the binary image. subplot(2, 2, 4); imshow(binaryImage); title('Binarized Difference Image', 'FontSize', fontSize); end % Alert user that we're done. if writeToDisk finishedMessage = sprintf('Done! It wrote %d frames to folder\n"%s"', numberOfFramesWritten, outputFolder); else finishedMessage = sprintf('Done! It processed %d frames of\n"%s"', numberOfFramesWritten, movieFullFileName); end disp(finishedMessage); % Write to command window. uiwait(msgbox(finishedMessage)); % Also pop up a message box. % Exit if they didn't write any individual frames out to disk. if ~writeToDisk return; end % Ask user if they want to read the individual frames from the disk, % that they just wrote out, back into a movie and display it. promptMessage = sprintf('Do you want to recall the individual frames\nback from disk into a movie?\n(This will take several seconds.)'); button = questdlg(promptMessage, 'Recall Movie?', 'Yes', 'No', 'Yes'); if strcmp(button, 'No') return; end % Create a VideoWriter object to write the video out to a new, different file. writerObj = VideoWriter('NewRhinos.avi'); open(writerObj); % Read the frames back in from disk, and convert them to a movie. % Preallocate recalledMovie, which will be an array of structures. % First get a cell array with all the frames. allTheFrames = cell(numberOfFrames,1); allTheFrames(:) = {zeros(vidHeight, vidWidth, 3, 'uint8')}; % Next get a cell array with all the colormaps. allTheColorMaps = cell(numberOfFrames,1); allTheColorMaps(:) = {zeros(256, 3)}; % Now combine these to make the array of structures. recalledMovie = struct('cdata', allTheFrames, 'colormap', allTheColorMaps) for frame = 1 : numberOfFrames % Construct an output image file name. outputBaseFileName = sprintf('Frame %4.4d.png', frame); outputFullFileName = fullfile(outputFolder, outputBaseFileName); % Read the image in from disk. thisFrame = imread(outputFullFileName); % Convert the image into a "movie frame" structure. recalledMovie(frame) = im2frame(thisFrame); % Write this frame out to a new video file. writeVideo(writerObj, thisFrame); end close(writerObj); % Get rid of old image and plot. delete(hImage); delete(hPlot); % Create new axes for our movie. subplot(1, 3, 2); axis off; % Turn off axes numbers. title('Movie recalled from disk', 'FontSize', fontSize); % Play the movie in the axes. movie(recalledMovie); % Note: if you want to display graphics or text in the overlay % as the movie plays back then you need to do it like I did at first % (at the top of this file where you extract and imshow a frame at a time.) msgbox('Done with this demo!'); catch ME % Some error happened if you get here. strErrorMessage = sprintf('Error extracting movie frames from:\n\n%s\n\nError: %s\n\n)', movieFullFileName, ME.message); uiwait(msgbox(strErrorMessage)); end 
Right, but you can't see the whole thing. Being able to see the whole thing is important.
I have worked on this. Try changing the version option in MATLAB.. Then you don't have to worry about version atall.
I assume you mean zoomed in: https://imgur.com/a/XyBWn And a before/after in the resource manager: https://imgur.com/a/sEFmr 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/ZgBzOLO.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
MATLAB error codes "roll up." So, when you call ode45 in your "main" function, the error occurs. But if you keep going up, you'll see that the error occurs in `odefnc1` 
Btw i figured it out! I just screwed up the order of where the different ports should be connected, thanks either way ! 
 function dydt = odefcn1(t , y(1), y(2), y(3), y(4)) should be function dydt = odefcn1(t , y) y is a 4 component vector so you shouldn't index into it in the function definition
You can use the [MATLAB Parallel Cloud](https://www.mathworks.com/products/parallel-computing/matlab-parallel-cloud.html) and rent a machine on the cloud for a few dollars.
it's been quite a while since i've done this, but it would seem feasible to run some tests using "inf" and "eps" with some example numbers to see the errors get introduced.
This is not right.
thank you for your input, but my problem was that matlab wasnt importing the whole vector as I wanted, with this workaround - it does, and my problem is solved. And i dont want to read the NaNs, i want them as zero, but as I said in the post, this is not the issue. 
What an absolutely brilliant response, thank you! Ok, I'm gonna have play around and see what I can come up with.
In every timestep ode45 calls the function 'dynamics' at least 9 times to find X at the next timestep. Therefore the output of X(1) will contain a lot more values than you will find in the result of ode45, however the output of ode45 should be in those values. 
This is exactly the information I was looking for but hadn't found it stated explicitly anywhere, thank you so much!
Ah my mistake. I assumed you were using Simscape Multibody with the pulley/rope stuff that was recently introduced. They've only released up to R2018a so far, and that's when the new stuff I'm referring to was added. I can't link to the post directly, but the pulley stuff I'm referring to is the first tab on the [Simscape Multibody release notes page](https://www.mathworks.com/help/physmod/sm/release-notes.html). I've been busy with other work so haven't had a chance to upgrade yet, but I'm very keen to try out the new equipment - I had thought you were using the [spool](https://www.mathworks.com/help/physmod/sm/ref/beltcablespool.html) and [cable end](https://www.mathworks.com/help/physmod/sm/ref/beltcableend.html) components. If it's "vanilla" simscape (not multibody) then I can't really help you there, but it seems like you resolved the problem so congrats! :)
If you're transitioning from academia to Mathworks, you should really consider contacting the career services department at your university. They should be able to put you through some mock interviews. Of course this won't cover the technical questions you've been asked, but those super frustrating "tell me about your biggest weakness" HR-type questions will be asked, so you'll get experience answering them and experience just being in an interview-style setting. The experience should help you be more comfortable during the interview process, which in turn should help you focus more on the content of the interview.
On that note, it appears there is some deviation between the closest values in X(1) and the output of ode45, and I was also wondering - if X(1) depends upon X (the output of ode45, if I'm not mistaken), why should it matter that ode45 calls the function multiple times ; should X(1) not depend only on ode45's output?
Yeah I'll try it out. Perhaps I can even utilize all of my virtual cores, not only the physical ones Matlab can use.
Oh, alright!
I see, thanks!
This is actually really good advice, I am going to get in touch with our career center. Thanks so much!
In very simplified terms, ode45 does the following when finding (X(t+dt): h = dt/5; for i = 1:5 Y = Y + dynamics(X, T) * h; T = T+h; end X(t+dt) = Y; As you can see, the value of X in dynamics() is updated every time and therefore the output X(1) changes as well. Now obviously I simplified the logic a lot, if you want to see the actual code you can always type open ode45 in the command window. 
 doc scatter3
Sounds like an issue on your end. Typing doc before any function should open the Matlab documentation for that function (similar to how typing help before any function will print some relevant details in the command line). In this case, the scatter3 function is exactly what you want. You can read the documentations [online](https://www.mathworks.com/help/matlab/ref/scatter3.html) if your computer is having trouble with doc. Note that before calling scatter3 you'll need to use 'hold on' so the existing figure is retained. 
Thanks, I was looking at the scatter3 help page before, but when I type in scatter3(X1,Y1,ZI), hold on or scatter3(X,Y,Z), hold on I keep getting an error telling me my vectors are not the same length. I think my issue is with how I am addressing the datapoints in the code which is what I am unsure of. Am I doing this right?
If the determinant is zero, then the inverse does not exist, which means something in your code is slightly off. Typically when labeling local element coordinates we obey the counter-clockwise labeling rule. Changing your element coordinates so that the are listed in counter-clockwise order makes your Jacobian determinate for all j.
Lol, your comments made me chuckle. Thank you!
EDIT: I was able to get it to work. Thanks for the help everyone!
I understand the concept, but I'm not exactly sure how to do it. Regardless, I realized I can just manually plot each point, and at this point its probably faster for me to do that than figure out the "easy" way. 
Read the instructions carefully, give the assessment a shot, post your work so far and tell us where you're getting stuck. People here are happy to help, but you need to pretend to give a shit.
Try scatter3( X(:), Y(:), ZI(:) ). scatter3 take in vectors of X, Y, Z, not meshes. So doing X(:) vectorizes it.
Can you help me out here? I've linked a closer version
I meant the opposite of zoomed in. I meant a shot where you can see the entire display. It's cut off on the righthand side in your screenshot.
Ah...here ya go: https://imgur.com/a/0ejxK 
Matlab is widely used in academia for basic technical computing training as well as for engineering research projects. It's also used in industry, but less frequently than academia, in my experience. One of the biggest markets for Matlab is signal processing. C, C++, Python, and Java are all used here and there. Because Python is free, open-source, and has a huge breadth of libraries, it seems to really be catching on.
OK. So, what I can see from that is that one CPU core is definitely doing most of the work. Your CPU utilization thingy may say 25%, but what that actually means in this case is close to 100% of one core, and nearly 0% of the other three. So it definitely does not seem to be running in parallel. If it were running in parallel, all CPU cores should be equally engaged. It also looks like you have relatively little RAM. It looks like under 4 GB? That is probably not helping.
Not sure why you're getting downvoted, but whatever. MATLAB is a great programming language for beginner engineers to learn, it has a simple and intuitive syntax, everything is mostly based on vectors which is great for us (civil.engineer here) and the 3D plots are great to get a better view of information. All this said, in your future it really depends on your preferences, we're not going to deep in any programming so matlab/python are more than enough, my colleagues tend to use matlab more but that doesn't really mean anything. Sorry for the English, it isn't my native language
I was wondering the same question myself. Mind if I ask what industry you use programming for?
Signal processing and machine learning 
I think a lot depends on who you work for, and what you are doing. I use MATLAB occasionally, and have seen people in my company use MATLAB. But the main one we use is Perl. I've only touched MATLAB, and another language that is basically an specialized language for a particular software we use (don't know if I'm allowed to elaborate on it, sorry). So from my experience it really depends on who you work for, and what you do for work. I know this answer isn't super helpful and did not answer your question fully. Just wanted to give you my scenario. My recommendation is to do one of two things: 1) Continue learning scripting languages. Since you know MATLAB, other scripting languages should make some sense start out. 2) Start learning object based code (I think that is what is called). It is a different style of coding, and one I'm about to learn for myself for fun.
Matlab is used a lot for basic programs and prototypes. However, recently python seems to be catching up, mostly due to the libraries and, in my opinion, to the similarities with Matlab. I am not sure if this answers your question.
Yes! I'm a data scientist and 100% of our machine learning code is in python. Lots of great libraries to work with 
Nice. I wanted to brush up in Matlab again to write some simple arduino projects or something, but I was considering python after that.
So we do sdr and machine learning, we do the fpga code in simulink and vivado, the arm code in python, any post arm dsp in MATLAB then hand back to python for the tensor flow work, it's actually fairly easy to daisy chain everything together.
Maybe forgot to write up that i actually love using matlab, but meh.... If i may ask, do you generally use Matlab for finite differencing/element methods?
May i ask what you do in general, if possible? Also how hard would you say it is to transition from procedural method to object oriented? Ive tried my hand on Python (if its called as OO?), was quite fun but felt a bit weird at first.
Yeah, of course! I mostly work on documents (procedures, manuals, etc.), basically systems engineering. I've been fortunate enough though to write scripts for the software we use (the specialized language, perl, and MATLAB for personal things to help with my job). I can't answer the question on switching to object oriented, as I have yet to start. Waiting for my current project at work to settle down so I'll have some time to dabble with it. What I can say is switching between scripting languages isn't too bad. The logic stays about the same, the syntax is what changes (I admittedly spent way to long getting frustrated wondering why the perl form of if statements were not working in a matlab file lol). I can't imagine an object oriented language being all that different logically. But it would be better to ask someone who is into computer science or any type of computer field to get a better idea. Sorry I couldn't be of more help.
Why do you reckon that would be the case? When I use "matlabpool open local" I get "connected to 2 workers" meaning 2 cores I assume. How can I equally engage all of them? And I guess I should upgrade my RAM to 8gb?
I use it in aerospace. 
I used it in a CFD course. It was really simple stuff though. I think most CFDers either use commercial software or write in C or Fortran. I have a friend using Matlab for her PhD dissertation. She solved the mean flow using commercial CFD software and is doing stability analysis using Matlab. 
any good resources/tutorials on that? i've just done some really simple Python function calls from Matlab, but i'd love to be able to have TensorFlow "looking" at some of my Matlab code. 
MATLAB is used a ton in industry, especially bigger companies that can afford to have lots of licenses. The other languages such as R and Python are used too, but in my experience as a MechE, here’s never been much of a reason to learn them because at my company we have MATLAB and everyone already uses it. MATLAB is amazing for processing data, automating time consuming tasks, as well as writing custom analysis programs for just about any engineering problem you want to tackle. I do a ton of all three of those things with it at work. Smaller companies may be more likely to use open source solutions. Also as a MechE, I haven’t seen a lot of use cases for learning any of the C languages because I don’t do EE or Software/Embedded Systems work. By the way MATLAB can also generate C code from Simulink models so...🤷🏼‍♂️. By all means learn other languages if you have a strong desire in a particular area such as advanced analytics/machine learning (Python, R) or embedded systems and programming (C). It will never hurt to learn more. I just think MATLAB can be more useful than it appears. 
/u/figure--it--out - you might be interested in this as well. A better way to test this is using `vpa`, which lets you set the precision high enough that errors are well under floating point precision. I wrote up a code for this and can confidently say that either method 1 and 2 are equal in terms of precision lost, or method 1 is better. The code is below, but basically it ru8ns a bunch of trials for both method 1 and 2 using random values with different magnitudes (ranging from well under 1 to well over 1). Method 1 is solved 2 ways - the "straightforward" way and by using `(y-yMean)*(y-yMean)'/(n-1)`, which accomplishes the same thing using a vector-vector multiplication. The results show the "straightforward method 1 approach" is equal to method 2 in terms of precision lost, but the vector-vector multiplication method is (on average) about 64x more accurate. Thyis could be due to, well, quite a few things. The way CPU's actually process info is complicated and yhighly optimized, so things like precision lost could be guarded against somewhere long the way. I also believe that a cpu can/does use more than 4 bits internally for floating point double computations, and then the extra bits are dropped, so im guessing the vector-vector multiply method is taking better advantage of that than the other 2, but im not 100% sure. clear all; close all; clc N=4096; % numer of values to sum per trial run Nd=128; % number of digits to use with vpa for "exact" computation S=logspace(-3,5,64); % different scaling factors to try (values to be summed are generated with 's*randn') numRep=8; % number of repeated runs for each scaling factor. Total # trials = 'numRep*numel(S)'. useSlowLoopFlag=true; % flag to enable direct loop computation for methods 1 and 2 (otherwise the vectorized 'sum' function is used) Ns=numel(S); v012=zeros(3,numRep,Ns); v012a=vpa(zeros(3,numRep,Ns),Nd); if ~exist('useSlowLoopFlag','var') || isempty(useSlowLoopFlag) || ~(islogical(useSlowLoopFlag) || isnumeric(useSlowLoopFlag)) useSlowLoopFlag=false; else useSlowLoopFlag=logical(useSlowLoopFlag); end fprintf('\n\n') nChar=fprintf('0%% done'); t0=0; t1=0; t2=0; tStart=now; for ns=1:Ns for nRep=1:numRep a=vpa(S(ns)*randn(1,N),Nd); aMean=mean(a); b=double(a); bMean=double(aMean); % MATRIX METHOD (METHOD 0) tic v0=((b-bMean)*(b-bMean)')/(N-1); v0a=((a-aMean)*(a-aMean)')/vpa((N-1),Nd); t0=t0+toc; if useSlowLoopFlag % METHOD 1 tic v1=0; for nn=1:N v1=v1+(b(nn)-bMean)^2; end v1=v1/(N-1); v1a=sum((a-aMean).^2)/vpa((N-1),Nd); t1=t1+toc; % METHOD 2 tic v2=0; for nn=1:N v2=v2+b(nn)^2; end v2=(v2-N*(bMean^2))/(N-1); v2a=(sum(a.^2)-vpa(N,Nd)*(aMean^2))/vpa((N-1),Nd); t2=t2+toc; else % METHOD 1 tic v1=sum((b-bMean).^2)/(N-1); v1a=sum((a-aMean).^2)/vpa((N-1),Nd); t1=t1+toc; % METHOD 2 tic v2=(sum(b.^2)-N*(bMean^2))/(N-1); v2a=(sum(a.^2)-vpa(N,Nd)*(aMean^2))/vpa((N-1),Nd); t2=t2+toc; end v012(:,nRep,ns)=[v0;v1;v2]; v012a(:,nRep,ns)=[v0a;v1a;v2a]; clear a b aMean bMean v0 v0a v1 v1a v2 v2a fracDone=(numRep*(ns-1)+nRep)/(Ns*numRep); tCur=(now-tStart)*86400; fprintf(repmat('\b',[1 nChar])); nChar=fprintf('%.3f%% done | %.3f Seconds Elapsed (%.3f + %.3f + %.3f + overhead) | %.3f Seconds Remaining',100*fracDone,tCur,t0,t1,t2,tCur*(1-fracDone)/fracDone); end end v012=permute(v012,[2 3 1]); v012a=permute(v012a,[2 3 1]); v012a_Mean=(v012a(:,:,1)+v012a(:,:,2)+v012a(:,:,3))/3; v012aDiff=(cat(3,v012a(:,:,1)-v012a_Mean,v012a(:,:,2)-v012a_Mean,v012a(:,:,3)-v012a_Mean)); maxExactDiff=max(abs(reshape(permute(v012aDiff,[1 3 2]),[],Ns)),[],1); fprintf('\n\nMAX difference between ''exact'' methods was %.6e \n',max(maxExactDiff)) if any(double(maxExactDiff) &gt; eps(min(S(:)))/10) warning(['WARNING: the ''exact'' (vpa) method potentially has errors within a factor of 10 of the machine epsilon!!! Reccomend you increase the number of vpa bits and re-run the test.']) end e00=double(v012a(:,:,1))-v012(:,:,1); e00a=v012a(:,:,1)-vpa(v012(:,:,1),Nd); e11=double(v012(:,:,2))-v012(:,:,2); e11a=v012(:,:,2)-vpa(v012(:,:,2),Nd); e22=double(v012(:,:,3))-v012(:,:,3); e22a=v012(:,:,3)-vpa(v012(:,:,3),Nd); e10=v012(:,:,2)-v012(:,:,1); e10a=v012a(:,:,2)-v012a(:,:,1); e20=v012(:,:,3)-v012(:,:,1); e20a=v012a(:,:,3)-v012a(:,:,1); e21=v012(:,:,3)-v012(:,:,2); e21a=v012a(:,:,3)-v012a(:,:,2); e0m=abs(v012a_Mean-vpa(v012(:,:,1),Nd)); e1m=abs(v012a_Mean-vpa(v012(:,:,2),Nd)); e2m=abs(v012a_Mean-vpa(v012(:,:,3),Nd)); e0m_Mean=mean(e0m,1); e1m_Mean=mean(e1m,1); e2m_Mean=mean(e2m,1); figure loglog(S,e0m_Mean,'b','LineWidth',2.5) hold on loglog(S,e1m_Mean,'g','LineWidth',2.5) loglog(S,e2m_Mean,'r','LineWidth',2.5) loglog(S,e1m_Mean,'g:','LineWidth',1.5) hold off legend('Matrix Method','Method 1','Method 2','location','northwest') xlabel('Scale Factor for normal random values') ylabel('Average Error') %{ save([userpath,'\fpErrorData.mat'],'S','numRep','N','Nd','v012','v012a','v012a_Mean','e00','e11','e22','e10','e20','e21','e00a','e11a','e22a','e10a','e20a','e21a','e0_Mean','e1_Mean','e2_Mean','t0','t1','t2','-v7.3') cat(1,log10(S),double(mean(abs(e20),1)./mean(abs(e10),1))) double(double(mean(mean(abs(e20),1),2)./mean(mean(abs(e10),1),2))) figure loglog(S,double(mean(abs(e20),1)./mean(abs(e10),1))) xlabel('Scale Factor for normal random values') ylabel('Ratio of Method 2 error to Method 1 error') %}
Cool. I've done some design work on aircraft, do you use it on structures or aerodynamics?
I’ve used it on a number of things. It’s great for analysis of test data. I know people who also use it for blast/debris analysis.
I’ve tried a bunch of different functions and can’t figure it out. I don’t have anything except just uploading the folder itself to the directory and making it a part of the path. I honestly have no idea what I’m doing
I can't speak for all industries, but in Aerospace companies, MATLAB is used extensively
The matlab license is very expensive. So where I work, we use python. Free and open-sourc. Lots of libraries and very similar to matlab. 
&gt; One of the biggest markets for Matlab is signal processing. This is what we bought it for. Of course we got the DSP and Telecom toolboxes, but it gave us a shorter development cycle w/ the premade algorithms.
https://uk.mathworks.com/help/matlab/matlab_external/call-matlab-functions-from-python.html https://uk.mathworks.com/help/matlab/matlab_external/call-user-script-and-function-from-python.html
Pretty useful in some specific EE applications, but not all. At work we use Matlab to implement and test DSP algorithms, we then bring them into software (C) or hardware (Verilog). At my previous job (hardware design, embedded) nobody ever needed it.
Hello, PhD student in fluid mechanics here! My research is purely experimental, but some image processing must be done to obtain results. In my lab, half of the team uses Matlab, half of the team uses python (me included). So it really depends who are you working with and what has already been done. That said, I learned python because I have personal raspberry projects beside, which are best suited with python ^^
Mechanical engineer, automotive &amp; racing industry. From what I've seen over a decade: * Matlab used fairly extensively * C++ used a bit here and there, performance critical applications, realtime simulation, solver add-ons, etc. * Fortran you'll bump into here and there. If you were writing your own CFD solver code I would say for sure it would be in C or Fortran * C# / .NET I've been using more than anything * Modelica / Dymola used quite a bit as well for modeling and simulation * Python shows up here and there but I haven't had any pressing need or interest in it Reality is, if you're going to be a developer, you're going to eventually have to be proficient in several different development environments and styles. Static vs dynamic typing, procedural vs. object oriented, ec.
What are you trying to do with it? Also what format is the solidworks file. I haven’t used SolidWorks in a long time. These might be useful https://www.mathworks.com/matlabcentral/fileexchange/29906-binary-stl-file-reader https://forum.solidworks.com/thread/40118
I think the tolerances would be missing from an STL file. The file would have to be the .sldprt that would retain the tolerance information.
Matlab / Simulink sees extensive use in automotive engineering: engine, vehicle, and chassis controls, et cetera. If you are a new hire, general programming knowledge is useful because each company has different software offerings -- same is true with CAD. You'd be better off speaking another language than learning an additional programming language.
You do! You can create them [like this](https://www.mathworks.com/help/matlab/learn_matlab/matrices-and-arrays.html). You'll also want to know how to get the particular element you want back out, [like this](https://www.mathworks.com/help/matlab/learn_matlab/array-indexing.html).
Engineer here. Yes, we use MATLAB almost exclusively for visualization, data analysis... modelling, simulation, etc.
Solidworks sldprt files are a proprietary format. I doubt the solidworks vendor would release the format specification to you or anybody else. At least not without an NDA and a few million dollars. It is probably also (intentionally) difficult to reverse engineer. The only practical way to get model data into another program is to export your model from solidworks in a commonly readable format, like STEP, STL, or maybe IGES. you'd need to find a Matlab tool to read those formats, but I know that one exists at least for STL. If you want explicit dimensions to be retained, you'd probably want to use STEP. I don't know much about IGES files. 
Let me suggest a 3rd option that might work well. In my experience, Matlab deals with parallelization very poorly unless calling a built-in or external library that in natively parallelized. I imagine that the situation with nested timers is similiar in terms of having poor performance when another function is running in the foreground. In the past, Ive gotten around this by launching multiple instances of matlab (each of which was bound to a non-overlapping subset of my physical cpu cores) and syncronizing them up somehow. If you could give the timing functions their own matlab instance (or perhaps multiple matlab instances) I imagine this would significantly reduce the jitter. The trick is then to share the data between instances simultaniously, and the best (perhaps only) good way to do this is probably using shared memory. [sharedmatrix](https://www.mathworks.com/matlabcentral/fileexchange/28572-sharedmatrix?s_tid=gn_loc_drop) is a function ive been meaning to try out but havent had time, but it sets up a shared memory segment between multiple instances, allowing for effectively instant transfer betweenmultiple instances. Unfortunately that function was built for a much older matlab version, but seems to at least partially still be working. If nothing else though it shows that setting up shared memory is possible. Assuming you can get the shared memory up and running, the entire process can be automated by launching additional matlab instances from within 1 "main" instance using the `system` command and including a flag that tells it to execute a pre-setup script. Id guess that having the timers running in their own instance and writing the times to a shared memory segment would significantly reduce the timing jitter you are seeing. Getting it set up might be a bit of work though... If you do decide to give this a try and are successful please let me know....At some point when I have free time Im planning on tackling this problem since I have a whole bunch of use cases where this would come in handy (e.g., any single-threaded function that you have no choice but to use, something like `fread`, can be run in a dedicated single-threaded instance and then write its results to a shared memory segment, which you can begin to work with using the resources that single-threaded process wont use).
This is a very interesting idea, and I will definitely look it up and let you know what I find. 
+ (forgot to add the plus sign in my first reply, hopefully this Ok so having played around with it today I'm having a few issues. The main issue is the creation of the function. I'm calculating the error (r, I've called it) using the SSE method, which is all fine. However, to calculate r you have to have both the predicted temperature and the experimental temperature for that grid point. So what I've done is to move all of my calculating code - all the implicit equations and such - into the function, so that the predicted temperature (for one time step, I'll need to figure out how to do this repeatedly for each time step using the optimized h - heat transfer coefficient - calculated in the previous time step) is generated in the function, and then the SSE is calculated using the predicted temperature and the experimentally determined temperature (which has been read in from a separate Matlab file, also in the function). the function is this: function [r] = functest (h) % all of code calculating predicted T using implicit equations + read in of experimental data r=sqrt(sum(((Predicted_T(2,2)-Experimental_T(2,2))/2))); and when I then try to run the fminsearch like this: 
&gt; 420 lines?? What?? Most of this is dealing with various ways people can/will misuse the function and having it still work properly. Effectively all inputs are optional: one could run `for nn=1:nIter; foo(nn); myLoopTimer; end;` and nothing else and it would still work. inputs can be out of order, caps or lowercase in any combination, and have anywhere from 0 to an infinite number of preceding dashes. You can update the current iteration or the numer of iterations mid-loop and it will automatically adapt. You can opit the 'start' command and it will still (usually) automatically run it, and the `reset` sequence is automatically engaged upon hitting the final iteration. Im sure there are a couple of minor things I missed, but it smartly deals with almost any usage syntax. Adding in the logic for these cases takes up a considerably larger number of lines than a function that works with 1 specific invokation and otherwise fails. &gt; Is your program bugged? Did you try running it? Or did you really just assume that because you looked at a couple of lines and didnt see their point that it must be bugged? The part that clears persistent variables is only engaged when the 'reset' flag is set, and the function doesnt do anything else aftter this. This option exists because the logic behind the decision to automatically re-run the startup sequency depends on whether certain persistent variables are either empty or an invalid data type. The 'start' flag only really needs to be used in the case that the function was used with another loop that didnt finish the loop or didnt have `numIter` defined AND that wasnt manually cleared. &gt; ...`clear`...`myLoopTimer(varargin)`...`return` The additional call to `scanForInputNameStr(varInCell);` after clearing the variables is so that in case there were additional arguments that proactively set things up for the next loop, but that loop wasnt until later in the code, someone could set things like `'name'` `'iname'` and `numIter` but keep everything else cleared. This might be useful if you are working in the base workspace rather than a function, since you wouldnt need to use the `myLoopTimer('start',...)` command and things would still work perfectly. Recalling the whole function here would be more coding work and less efficient to get the same result. `return` isnt used since i set `runStartResetFlag=true;` and the only thing after this is a check for `if ~runStartResetFlag ...`. Return might be one or two clock cycles faster, but the difference is negligible. &gt; In your "recommended syntax," you have a comment that says you can use 'iname=&lt;...&gt;'); should that be '-iname=&lt;...&gt;') instead? With a minus in front? It probably should for the sake of consistency, but in practce it doesnt matter if you have 0 or 1 or 2 or 100 dashes...so long as the `iname=` part of the string matches with a (case-insensitive) match the code will correctly recognize the flag. &gt; The timer function gets called every time the loop iterates, and there is a bunch of cell and string/char operations on every call. It is fast enough that its time is negligible in almost any function you actually want to time. If you have a ton of fast iterations, you can do numStatusUpdates=1000; updateEvery=floor(nIter/numStatusUpdates); myLoopTimer('start',nIter/updateEvery) for nn=1:nIter foo(nn); if mod(nn,updateEvery) == 0 myLoopTimer end end The above for `nIter = 120 million` addeed about 6 seconds to the loop, which should be constant regardless of what `foo` is. Im guessing at minimum a couple seconds went to the `if mod(nn,updateEvery) == 0` call, So figure calling the function 1000 times takes 3-4 seconds or so. A 30ms delay per iteration is negligible 99% of the time for functions that are actually worth timing. For the other 1% you can manually implement something or use something like the code shown above.
Please do. IIRC, you have to tweak a few lines of code to get it to compile and work correctly, and it only works when using cell arrays, but it still works. Someone with more C/C++ knowledge andsome experience with POSIX memory sharing as well as Matlabs data structures could probably fix it...I got the idea that the main issue is there have just been a few changes to how Matlab internally represents/names data, and the code was last updated in 2011. These seem like the type of thing that *might* not be too hard to fix in the mex source code.
If the speed if found as part of an inverse problem, the problem is probably blowing up. I dont know much about the tools in simulink, but switching to a regularized inversion of some sort might fix the problem. Making sure it is using doubles and not singles can also help if the problem is borderline numerically unstable.
"Very expensive" is relative though, depends on the company. I was able to talk my boss into buying a Matlab/Simulink license because my use case was worth it.
So at the end of this I want to produce a graph that maps the results, apologies for not stating that. I need all the values and yes z is necessary as it will update the value of s, so that the calculation can be run again.
z isn't really necessary if you aren't plotting z. if you just want a plot of s, you can use: s=-0.3(s - ((2 * d)/20)) + (1.3) * cos(d) this will use the old s to calculate a new s. So start you code with something like: a = 0; s = 1; n=1000 output=[]; for i=1:n d = 20 * s; b = a + d; s = -0.3(s - ((2 * d)/20)) + (1.3) * cos(d); a = b; output=[output; a,s,d,b]; %(or whatever order you want them in) end
Some companies have shared licenses (I am not sure it this is the proper name). Considering that people only use Matlab from time to time, it can work well. However, I do agree with you - nowadays python is a better option. I still use Matlab because we have a shared license and I have some old code.
You can get process name and PID using [~,out]=system('tasklist /V /NH'); you will ned to figure out how to extract the relevant info from the text output, but if you want PID this will provide it.
My research group runs Matlab as a snapshot of our data during our test, but most of the data is collected by LabVIEW by NI. It is extremely powerful if you're running all of your data through it but you'll have to resample your data later if you have independent instruments.
What's your end goal for all of this? Is it to use the atmospheric data to control hardware in your workshop?
So im gonna be using 6 different frequency bands 125, 250, 500, 1000, 2000, 4000. I have a drop down box at the top to select the frequency. I have all all the varibles for the different absorbtion coefficients for each frequency but what would be the best way to switch out the variables an if or switch statement? Layout - https://imgur.com/a/CShZe Would I use a callback and list the if/switch statement and variables in there? '%125Hz a1 = 0.01; %concrete or tile a2 = 0.08; %carpet on foam a3 = 0.02; %carpet on concrete a4 = 0.14; %curtain: 18 oz/sq yard fabric molleton a5 = 0.013; %plater smooth on tile/brick a6 = 0.29; %plasterboard 12mm a7 = 0.28; %wood 9.5mm plywood panel a8 = 0.05; %acoustic tiles'; 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/JMo8iem.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
Each UI element on the screen has a callback property that is by default empty. The idea is in order to add interactivity to your app, you need to tell MATLAB what to do when E.g. a button gets clicked, or a text box has something typed in it (maybe you want the user to be able to type in an ID number and have the rest of the screen pull data for that ID number, or maybe you want to make a calculator and have an "=" button that runs the calculation the user has entered and return the answer to the screen). In order to do that, you need to write a callback function. Callback functions are a little special in that they have 2 mandatory inputs you need to account for, otherwise you'll get errors about the number of input arguments. These two inputs (in the order they're passed to the function) are: Source: this is a copy of the handle to the object the callback is attached to. So if you attach the callback to a text box, the source argument will be the handle to the text box. This lets you query all the information about the object that was interacted with, but most commonly you'll want to use it to get the value of the object that was interacted with (eg when the user enters text into a textbox and the callback fires, you can use this source argument to get the text the user entered) Event: this is a structure containing information about the event that caused the callback to fire. It will tell you things like if a button was left or right clicked, or if a certain key combination was pressed. This can be used to add deeper interactivity to your apps. So you write a callback function at the end of your script as you would any other function, accounting for the source and event inputs (even if it's just replacing them with ~ eg function MyCallBack(~,~)), then set the callback property of the desired object to the handle of the function you've just written (eg set(MyButton, 'Callback', @MyCallBack); or alternatively set it directly when you initially declare MyButton) Lastly, if you want your callback to have other input arguments than source and event, you need to set the callback property of the desired object to a cell array, the first element of which contains the handle to the callback function, and each subsequent element is an argument that will be passed to your function after the source and event arguments. Eg set(MyButton, 'Callback', {@MyCallBack, ExtraArg1, ExtraArg2}); where MyCallBack then accepts the arguments as: function MyCallBack(source, event, ExtraArg1, ExtraArg2) 
Thanks. Good tutorial and production quality, but I think I’m still lost with my original question.
Yes, exactly, it triggers all sorts of events that need to be precisely time-locked to analog signals. The analog signals are very precise (I use NI board and that all seems good). It seems more the problem when I am doing a bunch of extra processing and digital I/O in response to the signals and then sending these digital outputs out to additional hardware in the lab that the precision starts to drift (I use multiple timer functions to control multiple processes simultaneously in a few different pieces of hardware).
I have sometimes wondered if I should just use labview instead of Matlab. 
I have recently been learning C++ just in case it turns out to be what I need. I actually am liking it this time around. :)
&gt; I don't know why you would need to pre-allocate memory in MatLab. I've never run into a situation where you MUST do this. It's a "best practice" from ancient times when memory wasn't as large or as fast as it is today. Without preallocation, you risked having to move the variable in the stack, or worse, into swap if it grew beyond its initial allocation and there wasn't enough space in the remaining RAM. Modern computers rarely have this problem, and I can't say I'm sad to see it go. :) Most homework "toy problems" won't ever require this, but an example where you absolutely MUST employ good memory management is in computations involving very large, non-sparse data sets. It can be the difference between "it took about 4 hours to run" and "it's still running"!
My experience is that you should use LabVIEW during the test then post process with Matlab. That being said, I have a side project where I use Matlab to collect data from an NI DAQ and NDI Optotrak system simultaneously.
Yes I would never analyze my data with labview, I meant for data acquisition.. :) 
I figured you meant that. Good luck with your testing and I hope you don't have to completely start over.
Thanks! I may try simulink.... This seems intriguing: https://www.mathworks.com/products/simulink-real-time/features.html#creating-and-controlling-a-real-time-application Frankly my current iteration of the project is not very well written. It works great for some high-level things but now that we are getting into precisely timed stuff it is clear this approach of using timer objects to control everything is probably not right.
Is there a command I can do to engage all 2 or 4 cores from Matlab? Or do I have to edit settings somewhere on my laptop...
To actually cause computations to be done in parallel, you would need to use either the parfor or spmd construct, or create a "cluster job". You should refer to the documentation on these. Parfor is usually the easiest. It essentially allows a 'for' loop to be run using multiple CPU cores. You will probably see *at best* a 2X speedup from using parfor. Most likely, you will get less of a speedup than that, because your computer may not have enough RAM to allow both CPU cores to operate at maximum productivity.
Alright...so I tried if matlabpool('size') == 0 matlabpool open 2 end and that got it going. Heres the difference now: https://imgur.com/a/lkMRg Lookin' a lil rough. 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/5WdPfrc.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dwjzlei) 
Does your code actually include a "parfor" loop or other parallel construct? Otherwise opening a parallel pool will do nothing. Either way, based on the link you just sent me, it looks like your PC's performance is about as good as it is going to get.
More than catching up, actually. 
In general, matlab and simulink themselves won't be real-time, as it looks like you've discovered. The real-time toolbox allows you to do things like generate C code from things designed within matlab/simulink, which can then be run in a real-time (or at least more deterministic) fashion. I have heard of hardware that integrates nicely with the output of the RTW, but haven't used it much. The ability to generate C code that can be built for many possible targets is a strong advantage of the RTW. IMO, NI tends to provide a more turnkey solution for what you're describing. 
Pretty much what I want to do is be able to get the dimensions of a part from solidworks, then using matlab feed a program measured values of a real part and compare to see if they are within tolerance range. Is that possible?
There are ways to import Solidworks assemblies into Simscape. It used to be named SimMechanics. I don't know if this is useful for what your are trying to do. https://www.mathworks.com/help/physmod/smlink/solidworks.html
Pretty much ALL I really want to be able to do is: Have a T shaped object in solid works with lengths and widths and +/- tolerances on it, like the top is 2 inches +/- .1 inch. Then be able to import all of those values into matlab so that I can run a code to input values manually to test if each measurement is within the thresholds in the object.
Not my code, the only mention of parlor was line 45 in: https://github.com/panly099/sketchSynthesis/blob/master/functions/sketchDetect.m But the performance could be better to get the image to complete in 5 minutes right? Quoting: https://github.com/panly099/sketchSynthesis So a RAM upgrade, or something more than that?
Looks good to me. It even goes through the -3 dB cutoff point at 1. Try the following changes to see, and compare to [standard Butterworth plots](https://upload.wikimedia.org/wikipedia/commons/c/cd/Butterworth_Filter_Orders.svg). %First Order Num1=[0 1]; Dem1=[1 1]; % w = (0 : 100*2*pi/100 : 100*2*pi); %freq range w = logspace(-6, 0, 1024); w2 = logspace(-6, 2, 1024); T1 = freqs(Num1, Dem1, w); %calculate the transfer function T1plus = freqs(Num1, Dem1, w2); fPlot = figure % axis([0 100 -30 0]) semilogx(w, 20*log10(abs(T1))) grid on fPlot2 = figure semilogx(w2, 20*log10(abs(T1plus))) grid on %Second Order Num2=[0 0 1]; Dem2=[1 1.4142 1]; %repeat for second order T2 = freqs(Num2, Dem2, w); T2plus = freqs(Num2, Dem2, w2); figure(fPlot) hold on semilogx(w, 20*log10(abs(T2))) hold off figure(fPlot2) hold on semilogx(w2, 20*log10(abs(T2plus))) hold off Just a couple of minor changes in perspective.
This is referred to as a two-sided spectrum, as seen in the [documentation](https://www.mathworks.com/help/matlab/ref/fft.html?s_tid=doc_ta).
[Wrong documentation](https://www.mathworks.com/help/signal/ref/freqs.html#f7-1529). MATLAB does not evaluate an FFT when calling freqs. It uses polyval, and directly evaluates the transfer function at iω. The plot looks like a normal Butterworth filter response if plotted logarithmically in ω, as demonstrated by the code I posted in my comment.
Not the OP, but I'll take a crack at it. I use python (and in the past have used MATLAB) for fairly small differencing and FE problems. Python and MATLAB are both interpreted languages and as a result fairly slow. For a small problem, the difference is truly negligible, but for larger ones it can be significant... there's a reason that there are no serious CFD or FEA programs written python or MATLAB (although there are a few educational ones). Once you start needing to handle very large systems of equations, the benefits of compiled languages, and powerful linear algebra libraries make languages like fortran and C++ appealing.
Thanks. Matlab clearly wasn't originally intended for thus type of thing the way labview was...
As far as I know, there are no functions that you can pass your data to that will give that output. That doesn't mean MATLAB can't produce figures like that though. What you could do is plot the realised data as a continuous line, plot the predictions as dots/crosses and then plot the lines that connect the true data to the predicted data. First 2 problems are trivial to solve, but the third problem could require some googling around (how to connect 2 datapoints on a plot).
should be fairly easy using "hold on", and brute forcing the small line segments with a for loop (there are probably ways of doing it in one plot-call). something like: figure hold on plot(time, continuousData, 'b') %this is the line that goes across the entire example plot % line segments for tc= 1:length(predictions) startTime = time(tc); endTime = time(tc+1); startDeficit = deficit(tc); endDeficit = deficit(tc+1); plot([startTime endTime], [startDeficit endDeficit],'r') %tiny line segment plot(endTime, endDeficity,'rx') % x-mark end 
the connecting segments would obviously have to be plotted using a for loop, but i'm not sure if it's necessary to plot the other data inside the loop.
Oh yeah, you almost definitely can do things better for the other parts. 
It seems like adapting Mathworks' suggested [mex debugging technique](https://www.mathworks.com/help/matlab/matlab_external/debugging-on-linux-platforms.html) would allow you to do this. If you run Matlab inside gdb, you can tell gdb to stop execution on a particular signal. If you send Matlab that signal, it should stop. There may be a way to cause Matlab to abandon the currently executing function from within gdb, but I'm not well versed in gdb so I don't know what your next move would be. Matlab spawns a whole bunch of threads when it runs. I haven't payed attention to what all the different threads are, but I have successfully killed individual frozen components without shutting the entire session down by finding and killing the right thread. If you can isolate the executing portion, you might be able to kill it without having to restart Matlab entirely.
Your objective function needs to return a scalar. Have you stepped through it in the debugger and examined when the output is set to an array? As an alternative to globals, you could pass a parameter struct to your functions in an anonymous function parameters = struct('properties', properties, ...) x = fmincon(@(x) objfun(x, parameters), x0, ..., @(x) nonlcon(c, parameters), ...)
I don't know what operations you're doing with `Spmass_x`, so I don't know why it would caus the output to not be a scalar. How is it being used and why does that line make the output nonscalar? You need to look through your code and verify that it makes sense at every step.
So I don’t know too much about how fmincon operates but is the order of operation linear? Meaning: Call fmincon, check nonlinear constraints (where I calculate Mm), go to objective function (where Mm is again), repeat? Obviously it’s more complicated than that but if it’s global, is it possible that the nonlinear Mm overwrites the objective function Mm? And then I have some lag between the two and ultimately get incorrect answers? Thank you so much! 
Yeah, that would be fantastic!
I dont know...sorry. Ill be honest I dont much like the fmin___ functions in Matlab. I have a fair amount of experience with inverse problems and have found that for anything actually difficult to invert, In can either write my own code that is more efficient and more accurate, or spend a bunch of time trying to get fmincon (or similiar) to work and 9/10 times end up eventually writing my own code anyways. You can, however, figure it yout if you dont mind delving through the source code of fmincon. It isnt a builtin, so you can see its code by running `open fmincon`. Though, id guess that the easiest way would be to copy the code into a new function and make a modification like the one I describe above (you cant directly modify the code in the fmincon function, but you can make an identical replicate function and modify that).
yeah! Definitely would watch.
Ive considered this, but 1) I dont really want swap fully disabled (I use swap more often than id like since I tend to work or problems with lots of data...usually it is just for an operation or two which creates a temporary slowdown but doesnt cause any major problems, and I dont really want these to cause the kernal to force close matlab). 2) This is more for wanting to get back into matlab without having everything reset, where killing matlab (obviously) doesnt help anything. On occasion it will cause system-wide issues, but for preventing this im trying to figure out a way to limit Matlab's physical memory without limiting swap or virtual memory. I figure this gives Matlab the chance to use swap without killing performance on the rest of the system, since the rest of the system will always have some memory available that matlab cant use. I havent figured out how to do this (I think it might be possible using containers). It is easy to do on a NUMA system using `numactl` though (I think that might literally havve been the first time ive ever said *anything* is easier on NUMA than UMA systems. Usually NUMA is a pain in the ass...).
please do, sounds super interesting 
Thinking about it, there is probably a better way to do this. The key I think is not running the timer functions in the same Matlab as your main function, but theres no real reason they need to be run in matlab at all. You can start running a external program asyncronously using ! program.exe &amp; I imagine you could fairly easily setup a function inanother (non-matlab) languuage that has sufficiewnt accuracy, and make it so that matlab caan query it and/or it can alert matlab when a given amount of time has passed by communicating through stdin/stdout. I always realized that for any of this to work you will need to have some sort of listener setup so that the main function becomes instantly aware that the external timer is going off. I dont have a good answer for how to set this up though (in fact, it wouldnt surprise me if the reason Matlabs timers have 'jitter' has nothing to do with the timers but rather has to do with the main function doing other stuff and only infrequently listening for the timer's alert).
&gt; ...you can have enough functionality to crudely stop an individual process even withpout full debugging control though. Yes. You won't have any debugging symbols, won't be able to see which line you're on, won't be able to print any values out, that sort of thing. But I don't think that will prevent gdb from stepping through the instructions. Again, I'm still not sure how you can gracefully kill the execution once you're there, but there's probably a way. &gt; I bet it would be possible to write an external script that identifies the thread... My suggestion would be to execute a simple `while true` loop and see if you can manually locate the correct thread to kill. I'd probably use tree view in htop. Then you can replace `/usr/bin/matlab` (or wherever you're calling matlab from) with a script that calls matlab and then does the kind of thread monitoring you describe.
Will do, appreciate it! 
I didn’t realize you could do that! Interesting. I’ll look into it later today, thank you! 
`fmincon` is only a wrapper around the actual optimization algorithms. I forget which, but some of them aren't implemented in matlab.
Thank you so much for the help, it worked perfectly. Just in case someone else is looking to do something similar, I believe &gt;endDeficit = deficit(tc+1); Should be &gt;endDeficit = predictions(tc); But other than that this is exactly what I was trying to do. Thank you once again.
When I call this function from elsewhere, it gives me this error message "length" previously appeared to be used as a function or command, conflicting with its use here as the name of a variable. A possible cause of this error is that you forgot to initialize the variable, or you have initialized it implicitly using load or eval. Any help will be appreciated!
Could you copy-paste your full code here instead of a screenshot? Also, what's the point of the 'clear length' instruction on line 3?
I think it is thee timers that have the jitter, as I am not registering them in my main program loop, but in another computer that captures the TTL pulses generated by the timers. The jitter in the timers is generated by the processes going on concurrently in the main loop though. when I kill my main loop processing the timers are accurate. Unfortunately there is no way around this to my knowledge.
I don't think the problem is in this snippet of code, but somewhere else. You are clearing "length" from the workspace, implying it's a variable in line 3, and the error code is telling you that the name "length" is being used as a function and a variable. a few ideas: 1) search your code to see if you named a function length, meaning you'd either have something like: length = something; or [length, other variables] = functionCall(inputs); 2) put a stop point in line 3 of this function (before "length" gets cleared), run your main function, and when it stops check to see if there is a variable called "length" in your workspace.
The 'clear length' instruction was just in case I had accidentally defined a variable with that. But stopping in debug, I know I don't have any variables called 'length' in the workspace at any point and so I've since removed the 'clear length' line. This is the full code : https://pastebin.com/z8dYqLZq (soz its very long) 
Hi there, I've actually checked this and I haven't set 'length' as a variable at any point in the code? I've also tried debugging at the point suggested and there is no function called 'length' at that point. In any case, here is the full code https://pastebin.com/z8dYqLZq (Soz its very long)
Art of matlab (blog from Loreen?) Does this. I find it super interesting; picked quite a few tricks from her.
This is the output: built-in (/opt/mlsedu/matlab/R2018a/toolbox/matlab/elmat/length) 
I have actually. Tried it on 2 diff pcs and also on MATLAB Online. Weird thing is that it used to work but now it’s giving me this error?
Yes would be interesting.... After watching your content I could also send you mine if it's significantly different.
My impression is that although they've been getting closer and closer over time, that's not how they started, and it still shows. We often joke around work about how we're using "Matrix laboratory" to do all sorts of stuff I'm sure they never imagined at the start :). It really shines at doing proof-of-concepts or small scale experiments. However, when you want to either go to production, go super fast, do lots of iterations, or scale up to massive-sized models, you'll start to notice strange limitations. This is not unexpected, and will happen whenever you push any tool to its limits. Toolboxes like the realtime coder really help you break out of the box into a more suitable runtime environment. Just good to know the limitations and not be afraid to branch out at the appropriate time.
Sadly that doesn't work 1) I got the error before putting 'clear length' in there and have since taken it out as it doesn't solve the problem. 2) I also don't have an input named length at any point. 
The error messages you're getting are pretty clear, aren't they? Stop naming variables the same as built in functions. 
Oh my god yes
Lemme know! (in other comment) 
Dynamics of Structures by Chopra is a great resource. It hits almost everything you need for an earthquake course, has many earthquake specific examples and sections, and even lays out some of the most important algorithms in a step by step fashion.
Maybe a stupid question but, does the 'length' function work from the command window after restarting Matlab?
Yep it does. I use a script which calls a few functions including this one and no other function has a problem with length??
Yup that's code. 
but it's not correct
Must be. Otherwise OP would have mentioned a problem of some sort. 
Think about your question. It doesn't even make mathematical sense. Matlab cannot help you do anything you don't understand how to do yourself. 
Here's your problem: on several lines you are using incorrect syntax for the length function, causing the error. On lines 42 and 43, for example, length is used improperly - you are giving it two inputs when length only accepts one. Your code should look like this: Coverage_CupBig = length(Covered_Pts_CupBig) but you have an extra input in there (the colon): Coverage_CupBig = length(Covered_Pts_CupBig,:) Change all of the incorrect usages of length and your function should work properly. If you want the number of columns or number of rows - don't use length. Use size(variable, 1) or size(variable, 2). Also - don't use 'clear length'. If you are worried that you named a variable 'length', use 'clearvars length'. 
Google: Matlab for beginners Cheers!
Google: Matlab for beginners Cheers!
Not sure if this was meant to be snarky or not...
Definitely interested. Application of MATLAB in real life varies a lot, and reading what problems people solve on daily basis would be fun and encouraging!
Thanks for your reply But actually is it a right way to do this question? In this question, you are going to test the relationship among HS and B Quartile data of HS and B is stored in the file “data.txt” . Assume HS can be related to B with the following model: HSt = A*Bt + noise Use newton’s method to estimate the value of A1. Please assume the time series are stationary and use squared error as your objective function.
Go for it. I think it would be neat to see how others use Matlab themselves. One of the biggest problems I've had with using Matlab was building my "vocabulary" of things Matlab already does but I had no idea was even possible until I saw someone else do it (ginput blew my mind).
The way I started learning Matlab was to do the online Matlab Academy (like most people) then I dove into a couple *fun* projects. One of which was a "Three Body Problem" style planetary system with X number of Y masses moving at initial speeds Z. Did I need that? No, but I had fun programming it and I learned a lot.
Haha yeah I know what you are taking about 
This is true, but is also the case literally every matlab function / script / line of code executed. Regardless of what you will running, the current function stack will *always* end in a built-in function. This is true even for things like `a + b`, since this is actually calling the built-in `plus(a,b)`, we just dont see that part. Even stuff like `+` and `-a` actually call `uplus(a)` and `uminus(a)`. For what OP wants though I dont think it matters, since im 99% sure that the only way that a builtin can change the value of a parameter is if it is called to utalize in-place replacement, which (among other thing) requires a function call of the form `a=foo(a)` which is observable in the matlab code. I dont think it is possible for a builtin to override a global variables value froom within the built-in (i.e., if the variable is not in the list of function outputs it wont get changed). IF this is even possible, I would hope that the devs were smart enough to make sure it didnt happen except in unusual / borderline impossible cases.. 
Very interesting, thanks for sharing!
So what are we supposed to do? 
Nope you stated that you haven’t touched MATLAB ever before two months ago and it sounded like you were asking about nested for loops. There is a ton of resources one can find online. This subreddit is usually more helpful for specific coding questions. 
&gt; I just posted my "How I use Matlab" to the sub and I hope that it inspires others to share what they do. I think I will... this is a good idea.
So I've progressed a little further with this and I've hit another stumbling block which someone might be able to help with. I've got a function working ( function r = functest(h) ) and when I pass this to fminsearch it produces a value of h that minimizes the error between predicted and experimental T for a single time step - good so far! However, I'm now having trouble making the code use this calculated value of h in the next iteration (the next time step). Is there a command or something similar that enables me to use the fminsearch derived h for the previous time step as the initial guess for the next time step, whereby the process repeats itself until a predetermined temperature is reached?
Civil engie here, really interesting bud
So you know all coefficients? Then just let your angle phi range from 0 to 2pi and compute Py based on that phi = 0:0.1:2*pi; Py = ... plot(phi, Py) 
Well then maybe I undersold myself. By this point I have done quite a bit of coding in matlab, but I feel like my code isn’t as efficient as I’d like. I just posted to see if anyone has any specific resources on numerical eq methods such as newmark’s method. If you think it’s a dumb question, that’s fine.... but you didn’t have to answer.
Ahhh yes perfect!! It was just a a typo. Thanks so much for your help! I've removed 'clear length' already, see explanation in other comments.
I'm not quite sure I understand your problem, but usually what I do is write a function like function errVal = errFun(param, experimentData) modelData = modelFun(param); residual = experimentData - modelData; errVal = sqrt(sum(residual.^2)); Then you pass it to your optimizer like experimentData = %read data fittedParam = fminsearch(@(param) errFun(param, experimentData), startGuess) You don't want to do something inside your error function like reading data that's going to be the same every iteration. The error function should only do the bare minimum that's needed to calculate an error value. Anything that is constant should only be done once. 
Aha, but convolution is not the same as multiplication. If you turn off the 'same' property, how does the length of the output compare to the inputs? What should the range of this new output be to make sense?
You'll want to use the max() function, specifically [this part](https://www.mathworks.com/help/matlab/ref/max.html#bubhhu5-1-I). Then you can use the result of that to find your angle. I'm assuming you're okay with entering and evaluating the formula, and plotting it similarly to your assignment prompt.
When same is off the output Is 2x the length of the inputs So if I halve the range of the output it should fit better
But when i remove the 'same' property and try to graph i get an error; "Vectors must be the same length." I'm unsure of how I can shorten the vector, since the conv function will output a vector 2x the size of the vectors that were input.
I try to create a global variable with: function one(~) global a1; a1 = 0.1; % concrete or tile end I put it in under "% Code that executes after component creation" but when I go to test to my switch statement to display the value of a1 when I hit calculate it says a1 doesnt exist.
I can't see all of your code, but most likely the problem comes from the line if dist == 0 When doing floating point arithmetic, never test for equality directly. Instead, define a tolerance, and compare the difference to the tolerance. Something like this: tol = 1E-4 if abs(dist) &lt; tol This is true for all languages, not just MATLAB. 
That does appear to be the problem. Thank you so much!
I love how the person who wrote that document took absolutely no care to make the proportions of the figure somewhat match the text size of the document
Use the phase parameter to shift the phase by 90 degrees.
You definitely undersold yourself. If you have a specific question, ie newmark’s method, etc., just ask that instead of “for loops inside of for loops inside of for loops” ...you made yourself sound like a total beginner. 
Do you have to use a For loop? I’m a big proponent of logical indexing and vectorizing code whenever possible. You could probably do the same thing with 4 lines of vectorized code. 
I don't think you should be splitting the event function into cases. `value` is the same in either case. Why should `isTerminal` and `direction` change exactly when event 1 occurs?
Really depends on context man, as a civil engineer for inertial tensor (not sure how to translate to English) it's helpful to write on paper just so I visualize each element better, but with practice comes wisdom and even though we don't know why you're using matlab, depending on your field of work you may eventually stop to feel the need for the old paper and pencil, it's still useful to explain to people
&gt; Unless your system is prohibitively large or complex If you are like me and run into this more often then not, it is probably worth getting mathematica and learning the basics. Paper and pencil is great when the problem is small enough, but for larger problems getting performing the same type of analysis is still very useful, and mathematica makes that (usually) possible. Technically you could do this in Matlab as well, but Mathematica is so much better when it comes to symbolic math.
&gt; but I feel like my code isn’t as efficient as I’d like A few months back i posted [this](https://www.reddit.com/r/matlab/comments/6utfy9/some_tips_for_writing_fast_and_efficient_matlab/) set of tips for writing efficient matlab code. Maybe you will find some things in there that are useful for you.
is that a simulink block? or do i just double click on sinewave block and change phase to 90 degrees? 
I don't have Simulink in front of me. The [sine wave documentation](https://www.mathworks.com/help/simulink/slref/sinewave.html) says there's a parameter for a phase shift. I don't remember how to bring up the menu that has the parameters, but double click seems likely. If not, right click, and I think it's one of the menus near the bottom.
Somehow a lot of people pick up the idea that writing code means you no longer have to do math by hand. This could not be more wrong, particularly in any kind of technical computing situation. Writing good numerical analysis code almost always requires doing significant analytical calculations before writing the code. 
Check out [findgroups](http://www.mathworks.com/help/matlab/ref/findgroups.html) and [splitapply](http://www.mathworks.com/help/matlab/ref/splitapply.html). This should enable you to use the column of IDs as group labels and apply whatever function you want to the groups. You can even use a combo of IDs and Measurement # for the groups.
ERPLAB has a few options to flag artifacts and remove later. You may run analysis with and without these flagged epochs and yield two results for comparison. A few options include “Moving Window Peak-to-Peak”, “Flatlining”,”Eye movements” “Step-like” (from memory so the exact names would be slightly different) There is documentation on the ERPLAB website. Let me know how it goes!
As usual, what have you tried so far? Any example code? Etc etc.
Make light pass through it. 
I also write pseudo code on paper.
https://www.mathworks.com/help/matlab/ref/strfind.html
Could you try a "unicode2native" function then use logical operators to remove text that is outside the letters A-Z? I.e. unicode2native ('Cabrón') becomes an array of numbers, ó is greater than U+07E so it is removed, then find values between U+041 to 5A and add 56 (decimal) or 38 (hex) to its value to get it as lowercase, then native2unicode to return it to English.
 nSamplesToRemove = p - q; nthSample = floor(p/nSamplesToRemove); qSamples = pSamples; qSamples(1:nthSample:end) = []; should get you there. Vectorizing, fun for the whole family. 
Set the alpha to something less than 1.
So...it seems not a lot of people use this. :) Maybe not something I will want to be investing in...I am currently watching online video about it, it seems pretty cool, but based on lack of responses here about real-time Matlab stuff, I'm thinking this may be a sinking ship I don't want to invest in.... https://www.mathworks.com/videos/using-speedgoat-target-computer-hardware-for-simulink-real-time-90982.html I will update if I end up using this stuff.
Mathematica sliders *droools*
For newer versions of MATLAB there is a `replace` and `lower` function that do this automatically. These questions, however, may have been written back when MATLAB didn't have this functionality. All letters on a computer are actually stored internally as numbers, and MATLAB lets you access the numbers. Any number over 128 will be a character with special signs or accents, you can switch between lowercase and uppercase by shifting the numbers by a certain amount, and spaces have their own number. So they may have expected you to deal with these numbers rather than using the newer, built-in functions.
You're reaching one of your two break statements too soon. To debug this, add some command window outputs before the breaks to tell yourself where you're dumping out, and what the results of some of your intermediate calculations are. For example, in the first conditional: ... disp(round(q*i/2)) disp(length(y)) break; Alternately, put breakpoints on your if statements to see, index-by-index, what the values are and which is causing your early exit from the loop.
I would think that using cell arrays here would make life much easier for you. Id personally probably try something like this: % setup example data data=randn(100,100); dataSampleID=round(10*rand(100,100))+1; numSampleIDs=max(dataSampleID(:)); listOfAllPossibleSampleIDs=[1:numSampleIDs]; foo=(@(X)(X.^3)); % % % % % begin algorithm % % % % % % preallocate samplesAll = cell(1,numSampleIDs); resultAll = cell(1,numSampleIDs); resultAllFilt = cell(1,numSampleIDs); meanAll=zeros(1,numSampleIDs); stdAll=zeros(1,numSampleIDs); cutoffSTD=3; for nn = 1:numSampleIDs % window data based on sampleID samplesAll{nn} = data(dataSampleID == listOfAllPossibleSampleIDs(nn)); % apply processing workflow resultsAll{nn} = foo(samplesAll{nn}); % calculate statistics meanAll(nn) = mean(resultsAll{nn}(:)); stdAll(nn) = std(resultsAll{nn}(:)); % filter outliers out of results (replace with NaN's) resultsAllFilt{nn}=resultsAll{nn}; resultsAllFilt{nn}(resultsAll{nn} &gt; meanAll(nn)+cutoffSTD*stdAll(nn) | resultsAll{nn} &lt; meanAll(nn)-cutoffSTD*stdAll(nn)) = NaN; end % function will generate [N x 2] array that compares the filtered and unfiltered results for 'sampleID = nn' compareResultsFilter=(@(nn)([resultsAll{nn}(:),resultsAllFilt{nn}(:)])); 
Saving. As someone who uses MATLAB a lot, I love my hot keys 
matlab has some decent functions for regridding and interpolating data that will do most of the work for you. `interp2` and `griddedInterpolant` will interpolate starting from a regular grid. `griddata` and `scatteredInterpolant` will interpolate starting from scattered data both can interpolate to a scattered or regular gridded output. For the surface plot you have a few options. `surf` is probably as good a place to start as any.
Sadly, not. &gt;&gt; size(IEEGSession.values) The class IEEGSession has no property or method named 'values'.
You should already have it in `valTxts{...}` 
Im fairly sure that, technically speaking, this is the only correct answer to OP's question. Well played.
Ok will do! 
A while back I posted [this](https://www.reddit.com/r/matlab/comments/6utfy9/some_tips_for_writing_fast_and_efficient_matlab/) that has some good (imo) tips for writing more efficient matlab code. As a side note: reading data from binary is much faster than from an ascii .txt file. If you have access to binary versions of the data it will be much faster to read in the data. 
Unless you HAVE to use newtons method, it doesnt make sense here. You can get A that minimizes error up to machine precision using and that uses L2 error with: % y = A*x + n Aest=(x(:)*y(:)')*pinv(y(:)*y(:)') error=norm(Aest*y-x,2) Though this is fitting the noise too, so a better method would use regularization. There are plenty of formulae for things like tikhonov regularization that can also be implemented in a single operation.
I had thought that varargin only worked when you define inputs in terms of `varargin`...am I wrong in thinking that? If you meant `nargin` - I used to use that e.g., `if nargin &lt; n || isempty(inputN) || ...` but `exist` is nice since 1) you can run the code as a script (useful for code development and testing), and 2) you can reorder/add/remove inputs and not have to renumber all your `nargin` checks.
Wow, okay, this is a huge help already. Again, it's probably obvious that my knowledge of MatLab is really kind of limited, and even learning about these functions (most of which I had no idea existed) is a major step in the right direction. I definitely like your point about avoiding using the sample names themselves for data storage - as I get more and more data that'll become a less and less reliable method. Obviously I just read this response a few minutes ago, so I'm still playing around with your suggestions in matlab, but in the meantime I copied a few samples' worth of the actual data onto a [spreadsheet here](https://docs.google.com/spreadsheets/d/1G7rpUJUwt6QLe38Wb5DZNmfRziQnR6KX7zZi6nJKpU8/edit?usp=sharing) for *if and only if* you want to take a look, like you mentioned, at something a bit more specific. To detail what happens with the data I linked: you'll find 5 or 6 measurements each from 3 select samples. That is: for example, in sample ID 'TM17-21' I measured the major element compositions for 5 different pairs of adjacent clinopyroxene and orthopyroxene grains (e.g. the column 'Si_c' is the wt.% of silica in the clinopyroxenes, and 'Si_o' is the same for the orthopyroxenes). *For context, the reason I'm taking these measurements is that the exchange of certain elements between two adjacent grains of ortho- and clinopyroxene is controlled by changing temperatures and pressures at depth during the rocks' formation. What this means is that the ratios of Mg, Fe, and Ca in particular between those two grains effectively record the temperature and depth at which that sample formed.* The way the code calculates this for one set of Opx and Cpx measurements is by: 1. *Converting these Wt.% values to cation abundances (there's a separate script for this)* 2. *Running those cation abundances through a script that translates them to a bunch of coefficients* 3. *Plugging those coefficients into a series of equations that end in a single pair of values for T and P of equilibration* While this script only uses the Mg, Ca, and Fe values, there are other similar models that use some of the other compositions. I wrote the codes I have now to work with all the major element compositions (rather than just those three) so that if the need arises I can factor in those other values. The 'sites' column you can ignore: here I wanted a way to assign sampling sites to different samples, and referencing the measurements to numeric values (1 and 2) was a bit less of a hassle than referencing them to 'TM' and 'SL.' In this case, the end result of the 16 measurements in the table I linked above spits out the table of T and H results also included there (H = depth; the code also converts the pressure values (kbar) to depth). **And just to state the obvious, you (and the other commenters in this thread) have already gone above and beyond with the help you've given me already, so feel absolutely zero obligation to keep following up: my sincere thanks to you either way.** 
Creating variables whose names depend on some parameter is not a good idea. You could work with data structures and make each piece accessible with a string that could be constructed from user inputs, or you could just store whatever data you need by using some sort of indexing scheme with a parent vector/matrix/cellarray.
Could you elaborate on how I would go about doing that? Programming is not my strong suit, and I am just starting to work with Matlab.
Still not answering the question but I would add [inputparser and validateattributes](https://www.mathworks.com/help/matlab/ref/validateattributes.html#btnqj9a-1) to the list of functions useful for that usage. But it could still need the renaming feature of the variable name as a char array in inputparser. (So two use case, in exist and in inputparser functions.) Edit: I wanted to post this comment as a child to the other one about varargin , sorry)
Are you aware of `[inputparser](https://www.mathworks.com/help/matlab/ref/inputparser.html;jsessionid=d20be4ae526e374dd712cdbdc799)`? It may help you do what you are doing. Specifically, [adding optional inputs](https://www.mathworks.com/help/matlab/ref/inputparser.addoptional.html). It does add a little overhead to your functions, but it's kind of nice. Instead of having to hand in empty arrays, or remember the order of your variables, it uses a key/value pair system. My workflow using this normally looks like: function z = foo(varargin) % set defaults x = 2; y = 3; % parse varargin p = inputParser; p.addParameter('x', x); p.addParameter('y', y); p.parse(varargin{:}); % assign new results x = p.Results.x; y = p.Results.y; 
So I made a script for you, posted below. I'll say that I took your test data and deleted the results you had posted in it. Otherwise it's the same format, I just didn't want the results, which were in a different format, to throw off the `xlsread` function. Everything is pretty well commented, so take a look and let me know what you think :) clear all; clc; filePath = 'D:\sample_data_trimmed.xlsx'; [num, txt, raw] = xlsread(filePath); % YOU PROBABLY WANT TO CHANGE nStd TO 3! % At 3, you don't get an outlier. Two gets you an "outlier" so you can see how outlier handling happens. nStd = 2; % Number of standard deviations to call an outlier an outlier sampleIDs = txt(2:end,1); % First row is the column names uniqueIDs = unique(sampleIDs, 'stable'); nSamples = numel(uniqueIDs); analysisResults = cell(nSamples, 4); %I'm thinking sampleID, raw data, culled data, test results for currentSample = 1:nSamples analysisResults{currentSample,1} = uniqueIDs{currentSample}; sampleMeasurementIndices = find(ismember(sampleIDs, uniqueIDs(currentSample))); % Get all of the measurements for the current sample % In your data, it is looking like the first two columns of `num` are % 'pair' and 'site.' Since these aren't (appearing to me to be) data, % I'm ignoring them. You can keep them if you want, but I would leave % them out for outlier checking purposes. measurementData = num(sampleMeasurementIndices,3:end); % Check for outliers! measurementMean = mean(measurementData); measurementStd = std(measurementData); outliers = (measurementData&gt;(measurementMean+nStd*measurementStd))|(measurementData&lt;(measurementMean-nStd*measurementStd)); if any(any(outliers)) warning('Outliers found for sample %d, %s!', ... currentSample, uniqueIDs{currentSample}); % A note here - the 'inner' any() command looks *by column* to see % if any *columns* have a TRUE, which indicates an outlier. % The result is a single row, which the 'outer' any() command % receives. % % If you wanted to remove outlier samples, you need to TRANSPOSE % the data and check for outliers. In this way, the "column" that % contains an outlier is actually a *row* that contains an outlier. % You can then use the results to do "logical indexing" to remove % the offending rows. outlierRows = any(outliers.'); % Remember that .' is the transpose operator. A single ' is the conjugate transpose. outlierRows = outlierRows.'; % Transpose the result of the check because you transposed the input. sanitizedData = measurementData(~outlierRows,:); % Here you get every row that does NOT contain an outlier sampleMeasurementIndices = sampleMeasurementIndices(~outlierRows); % Don't forget to update the "good" indices or you'll get buggy results later if isempty(sanitizedData) % Warn if you somehow wound up removing all the data. Shouldn't happen, but it's a sanity check. warning('All data was removed somehow from sample %s\n', uniqueIDs(currentSample)); end else % If there weren't any outliers, then the input data is okay. sanitizedData = measurementData; end resultsMatrix = zeros(size(sanitizedData,1), 2); % Preallocate the resultsMatrix. % I put 2 here, for temp/pressure, but it should be however many % results you want to use for currentMeasurement = sampleMeasurementIndices % Remember, NOT "= 1:matchingSamples", just "= matchingSamples" % Anything you wanted to do for each individual test % [temp, pressure] = yourProcessor1(sanitizedData(currentMeasurement, :); % depth = yourProcessor2(pressure); % resultsMatrix(currentMeasurement,:) = [temp, depth]; end % Store the results analysisResults{currentSample, 2} = measurementData; analysisResults{currentSample, 3} = sanitizedData; analysisResults{currentSample, 4} = resultsMatrix; % you could also do analysis on the measurementMean, etc. - just be % sure to re-calculate the mean after removing the outliers! end
 &gt; 3! 3! = 6 
Wow. Okay, just about to dive into this, but it is actually so freaking cool of you to do this. 
&lt;3
Never mind, I think I got a solution
But how can lines be real if our eyes aren't real? 
set.data.values
I mean how to judge with a computer, not a man's eye.
Check this subs sidebar for more information about where to learn MATLAB. Good luck!
[x y z]=sphere(50); mesh(x,y,z); hold on axis equal
[x y z]=sphere(50); mesh(x,y,z); hold on axis equal
In the long run, C++ is a better fit, or even C# for audio engineering. Strictly speaking, you don't "audio engineer" in any language. You do that with other things. The closest thing your typical audio engineer gets to coding is something like max msp or puredata. That being said, you can use matlab for all sorts of signal processing. You can also do it in other languages, but for coding VSTS / RTAS plugins, C languages are the choice. The reason is that matlab files require matlab to run, or at least the code writing software (expensive) to output it as a C style class or function. If you go direct with C++ / C# then you have one less translation step and the accompanying boondoggles. Check out youtube for audio / signal processing with matlab. If nothing else, it should really help you understand what certain common tasks and techniques do and when they are appropriate to use (filter design / FFTs / compression algo's, sampling, etc). With that understanding you could think about trying to write some VSTS in matlab...but they won't really travel well outside of the matlab website forums.
Okay. And? 
We're not going to do it for you. You're not going to get much help if you don't at least try it on your own and ask a specific question. Do you understand the question mathematically? Do you know how to do it by hand? Do that in Matlab. 
I didnt know about this, though funnily enough I recently put together my own input parser (well, started to. Its *mostly* working, but there are still a few bugs). The syntax is pretty much identical, except that you can define multiple input variable names in a cell array and you can define multiple properties for each input using a nested cell array. It only requires a default value to be defines, but you can define additional keywords (anything supported by `isa('var',____)` or by `is____(var)` works with the proper keyword). You can also pass anonymous functions that output a logical to get even more fine grained control (and do things like force a condition that the value is positive) (this part is still a biit buggy - the basic check works, but it isnt integrated quite right). It also automatically sets the variable using `evalin('caller',...)` if `nargout == 0` (when outputs are defined it doesnt auto set anything in the calling function). The idea is you will be able to call it like so: myInputCheck({'var1','var2','var3'},{{default1,'altClass1a','altClass1b', {'--custom-func',foo1}}, {default2,'altClass2a','altClass2b',{'--custom-func',foo2}}, {default3,'altClass3a','altClass3b',{'--custom-func',foo3}}}) As I said it is a work in progress, but in case youre interested [here is the code](https://pastebin.com/MsamEmnN). This all ends up having the same issue as my original post describes though...you have a char string input of a variable name that Matlab wont auto-change like the others. I dont suppose you know of any way to make matlab autorun something else when it does a shift+enter renaming, do you? I imagine we dont get that much control, but if you could get matlab to start a scritp and pass some rudimentary info (like old/new name and the function you are working in) it would be super easy to write an external program to search through the .m file of disk and make the appropriate replacements. I mean, i think this would work for bash and similiar shells varStrReplace() { local a="" mv funcName.m funcName_OLD.m a="$(cat funcName_OLD.m)" a="${a//"'varNameOld'"/"'varNameNew'"}" echo "${a}" &gt; funcName.m }
You have a 3x3 differential system: 3 equations and 3 unknowns with time derivatives present. If you are asking how to solve it by hand thats more a poure math question of "how to solve differential systems". If you just want an id start with `dsolve` and go from there.
Ill reiterate what /u/FrickinLazerBeams said...were not going to do your homework for you, especially if you havent tried it yourself. That said, finite differencing is pretty straightforward (as is gradient descent...literally it is just 'keep going downhill till you cant anymore'). The derivative `dy/dx` is just `change in y / change in x` over a very small window. You have a function. Choose a small but numerically stable window size. Calculate `dy` and `dx`. divide. done.
Thanks for your comment. I actually want something much simpler. I just want to rearrange the equation as follows: https://i.imgur.com/yg09mfY.png Can matlab do that?
You can make heat map of the crime in Chicago (I just did this for a class)! the data is very easily accessible, so if you can't find it, I can probably send you a drive link and it's pretty mathematically stimulating. You may need to research a bit about kernel density estimation before jumping into it. 
I pretty much live in MATLAB. I can’t remember the last time I used the editor. If you want more slick object oriented features, why not just use another editor?
Unless you’re already hooked on sweet lady MATLAB, leave her be. You’re better off with almost anything else. Source: I can kick anything but MATLAB.
Because integration with the runtime and debugger is really nice. 
What does `ver` give you? Did you `clear all;`? The command makes a sphere for me with no issues. What's more, if you *read the documentation*, and *look for the alpha*, like I said, you can see the `FaceAlpha` parameter controls the face transparency. So, where `mesh(x,y,z)` makes an opaque sphere, `mesh(x,y,z,'FaceAlpha',0.25)` makes a transparent sphere. 
I think you could take the [Laplace transform](https://www.mathworks.com/help/symbolic/laplace.html), make an [explicit descriptor state space model](https://www.mathworks.com/help/control/ref/ss.html#btrgiyt-8) (A, B, C, D, E)-&gt;(E^(-1)A, E^(-1)B, C, D, I), then perform the [inverse Laplace transform](https://www.mathworks.com/help/symbolic/ilaplace.html) on it and get pretty close to, if not exactly that form.
I suggest you try to [find](https://www.mathworks.com/help/matlab/ref/find.html) the [minimum](https://www.mathworks.com/help/matlab/ref/min.html) difference between the [maximum](https://www.mathworks.com/help/matlab/ref/max.html) of the negative of the [derivative](https://www.mathworks.com/help/matlab/ref/diff.html) (or the minimum of the derivative), then either zero-pad that number of samples on the left or truncate samples on the left as appropriate, whichever is more suitable to your application.
Please provide more detail about what you're trying to achieve. This is cryptic.
What's the question?
The file is already a standalone app, hence the .exe. What you need is the matlab runtime, as this app appears to be made in Matlab, then exported as an exe. Think of the runtime as the interpreter of the program for the computer. Go to [this site](https://www.mathworks.com/products/compiler/matlab-runtime.html), then scroll down to the "R2012a (7.17)" row and click on the "32-bit" link on the windows column, and install that download. 
Glad to help! Enjoy! Good luck with your project :) 
Your post is ambiguous as to your final needs. Are you saying you have a biology exe file you want to run, and it won't/can't? Or are you saying you want to make a exe file in MATLAB? To do the former, all you do is install the MCR *of the compiled version of the exe*. In the readme it will tell you what version you need (R2012a is 7.17). If you install the 2018 version it will not work, you need the same MCR for the application. Install the MCR, then double click on the biology exe file. It will work, I've written and published MATlAB files before. If you're trying to write a bio app, you need the full version of MATLAB, not just the MCR.
 vecnorm(A(:,5) - A(:,1:4)) 
Thank you!
Lol not sure why this was downvoted. I think I want to move to Python, but Matlab is *so* easy, and so much of my code base (years and years of development) is already in Matlab, so I'd have to learn Python and then port all of my (years and years of) work... I want to, but I can't bring myself to do it. I don't think I'll ever ditch Matlab. 
I'm sorry, I'm sorry, I wrote that: [x y z]=sphere(50); mesh(x,y,z); hold on axis equal alpha(0.3) ??? Subscript indices must either be real positive integers or logicals. 
`while abs(x-3.14157) &gt; 1e-5
Ahh. I knew it was easier than I was making it out to be. Thank you. 
[Sure](http://lmgtfy.com/?q=matlab+cell+array+to+matrix).
use the imwrite function
For travelling, I have used the cheapest, lightest laptop possible and just used Matlab Cloud.
How do I make an explicit descriptor state space model from a laplace transformed equation? I have the equation in a variable called eqn
all of this seems relatively simple. if you're asking for specific help, maybe draw out the plots/statistics you want to calculate.
Assuming you just want to know if something like: vector = ones(1,100000)*5; is all equal to 5, consider the minimum and maximum values of the vector.
Use logical arrays
Sum(a==a(1)) == numel(a)
[removed]
You might wanna take a look at the *diff* function.
`all(x(:) == x(1))`
This right here.
Do you want to solve this with ode23 or do you want to solve it with a file from the file exchange? 
Actually that is a pretty common problem... should have thought of it. You can fix that one without un-installing and re-installing by changing your environment variables for your system (assuming windows) so that the 2012a MCR is the first MATLAB app it references before going down the list to your most recent install. When I publish old code I had systems which already had MATLAB installed and had this problem... my bad, its been a while.
I would do it by hand. But, with [a bit of manipulation](https://www.mathworks.com/help/symbolic/solve-differential-equations-using-laplace-transform.html), after solving for I_rsc, you should get a rational expression you can first transform into a [transfer function](https://www.mathworks.com/help/control/ref/tf.html#f4-398160), then [to state space](https://www.mathworks.com/help/signal/ref/tf2ss.html). Express your new equation in the form dI(s) = A*I(s) + B*v, where dI(s) is your derivative vector, and v is your input, and transform back to time domain. Should be in about the form you want. You could also just perform all the steps you would perform by hand in MATLAB to manipulate the equation into that form (subtract things from both sides, left-multiply inverses, etc.). Or just do it by hand and enter it that way.
Maybe consider KDTree rangesearch?
With the ode23tx from the file exchange.
Is disp(num2str(diatance)) Sufficient?
The function seems to be pretty well documented; there's even an example. Did you try the example? Did you try your problem in the style of the example? Did you get an error? What was your error? Are you looking for help or are you looking for someone to do your problem for you?
I'm looking for a way to let matlab chop the segments rendered by the 'segmentgestalt' function up into seperate midi files or nmats. So, in other words, I would like to show the data contained in each of the segments that are rendered by the ‘segmentgestalt’ function, and capture them into seperate midi files. One of the creators of the midi toolbox sent me a string of code but it doesn't seem to work... How would you guys do this? 
Seconded. Assuming the data are low dimensional (less than, say, 7 or 8 dimensions).
Duh, feel dumb about that one haha. Thanks for your help! 
"One of my friends"
Your friend should have studied...
Pretty sure your "friend" can figure how to do this by doing a quick google search. 
I'll have to look into that diff command! That looks really useful.
if you can mathematically represent the contrast adjustment, you can alter the image that way.
What is the value of the coefficient of x1 in the third equation? 
The value for that would be 7
your matrix A for case 1 is [1,2,3;4,-5,6;0,7,-8]
+Where does the 0 value come from? x1?
yes, since there is no x1,this means your coefficient is 0. 0 * x1 = 0 which is nothing and hence not included in the equation.
+Ah, that makes sense! I've got no prior experience with matrices or simultaneous linear equation type problems in matlab, so I must practice more. I appreciate the help!
It's not an assumption.
What are the dimensions of temp and y_t? Even if they are both "vectors," subtracting a column vector from a row vector (or vice versa) in Matlab may not be the operation you are expecting. For one thing, it will yield a matrix, and sum on a matrix will return a vector. So that would be my first guess. 
They are both 1x10000 column vectors
Did you verify this with the size command? Because I'm unable to reproduce this behavior with the following code: a = 1:10000; b = 2*a; s = sum((a-b).\^2); s = s / length(a); I confirmed that s is a scalar in this case. I'd be interested to know if you get the same outcome when running this exact code at the command prompt. If you do, then it seems likely to me that your vectors temp or y_t are not the same size before the sum command. 
Oops, didn't see this comment while I was writing up my other reply. Glad that your bug is gone! As a tip, you can turn any n-dimensional array v into a column vector with the command v = v(:). 
Yup, I just fixed it by adding a ‘ to temp
This is a little concerning. You should have gotten a basic understanding of polynomials in high school. 
Also it would be easier to write `sum(x)/length(x)` as `mean(x)`. 
This is fairly straightforward with logical indexing. blackInd=(L &lt; cutoff); % remove blacks from L/A/B variables L(blankInd)=[]; A(blankInd)=[]; B(LabInd)=[]; % if you just want the means, you can also do mean(L(~blackInd)) mean(A(~blackInd)) mean(B(~blackInd)) 
Hey, Thank you for your reply, i'm not sure what the LabInd or blankInd variables are supposed to be (you've mentioned both blackInd and blankInd and i'm not sure if it was a typo or not). But I have made some alterations to your code to what I thought you meant https://pastebin.com/h3fPaib7 However I am getting an error saying 'index exceeds matrix dimensions' for the following line of code: mean(LChannel(~blackIndL)) and I am not sure why. Any chance you know what the issue is? Thanks in advance :) 
Sorry, i fixed the typos. Everything needs to use the same index. Identifying the blacks in `L*a*b*` space is finding everything with a smalll `L*` value (L stands for luminosity, `a*` and `b*` deal with what color you get, but not with how light or dark the image is). Find the black pixels based on L and then apply that mask to all 3 `L*a*b*` parameters.
Thanks for following up, do you think it is okay to set the cutoff value to 1? Since Black is the colour I want to get rid of before calculating the mean, and the RGB value for black is 0? 
Can you post a picture of what you expect the end result to look like? Also, what do you mean when you say "CAD file?" 2d/3d? What file extension? Are you saving the results back to the CAD file or is this for display purposes only? 
One apostrophe is *conjugate* transpose. You need to use period apostrophe for transpose. No difference as long as you're using real numbers, but if you get in the habit of using the wrong command then it will wreck your world when you try to use symbolic variables or complex numbers. 
Thanks!
I've added a link to a picture of what I am trying to do, 2D would be good enough, .STL most likely. I want to do this for display purposes only i dont need to export back to CAD file. Thanks for the reply.
Some CAD programs, like NX, have function called raster image. Basically you put a picture on the surface of a model. Could be worth a look.
&gt; I've tried using all variations of imadjust and imshow, but I just get the same whited out image. If you're getting a whited out image, you're doing something wrong. You don't have any sample data or code, but if you post it we can probably help you out. 
&gt; mean(LChannel(~LOnlyBlack)) &gt;mean(aChannel(~aOnlyBlack)) &gt; mean(bChannel(~bOnlyBlack)) These are wrong. They need to use the logical index (`blackInd`), which, when negated with `~` give the stuff that isnt black. My first comment shows the correct usage. &gt; does it make sense to get the LChannel variable and set it as the luminosity (L), since that is the Luminosity channel? you can do that or just use `lab_Image(:, :, 1) &lt; cutoff` directly. It probably makes sense if you need the luminosity for other stuff, probably doesnt if this is all you need it for. It doesnt really matter much one way or the other except for whats more convenient to code. Thanks for following up, do you think it is okay to set the cutoff value to 1? Black is 0, but 1 id awfully damn close. If you only want exactly black then yes. If you want everything dark enough that most people would call it black set it higher. If there is one specific feature you want to isolate and remove look at a histogram to try and figure out what the lowest cutoff you can use that still removes the feature is.
So, i decided to try my hand at writing a code to enhance contrast from scratch. It works decently well with the image I tested it on, but i cant promise it will work with every image. Its decently efficient but the settings are optimized for images smaller than 1000x1000 pixels...for larger images id lower `k` and `kf` a bit. This is 100% off the top of my head and not based on any other algorithms to enhance contrast, so there very well could be better approaches, but hopefully this will be of some use. [LINK](https://pastebin.com/PNd0aMcs)
`imwrite` *probably* will work, but a while back i wrote my own tif(f)-specific figure saving function that directly calls `libtiff` for saving images. I did this because I wanted to save images with 16-bits per channel and have options for RGB (48-bit) / CMYK (60-bit) / BW (16-bit) / other color palettes. I think my function sets everything uo correctly for most situations, but its possible there is a bug lingering somewhere is a usage mode that I dont use much. At any rate perhaps it will come in handy. [LINK](https://pastebin.com/iEyXPPug) &gt; How can I export a .tif file keeping the same dimensions and without the white moldure? If this is still a problem play with the `paperposition` property
Manually compute if the points are in the circle or not. If you know the center point you can calculate each data points radius pretty easily, Take the points with radius less than or equal to the circle's radius. to actually draw the circle, if recommend starting with `doc plot`
Extremely high quality post. One of the things it highlights is that when it comes to high performance coding there an be many 'wrong' ways to do things, definitely reminds me of writing fast CUDA code where seemingly small differences in approach cause several order of magnitude increases in execution time.
I've recently started looking at running matlab code on the gpu, are there any general rules for ensuring CUDA code runs fast?
Hey, thanks this was insanely helpful :)
I don't know what level of control you get from Matlab to be honest, as in you might just have to take what you get, the CUDA code I have written was done either in Fortran or C. Some rules: Minimise copy from host to device, if possible pin memory &amp;/or perform async. Always be aware of the order you are running across rows of variables (they lay rows end to end in memory so going down columns means you are slower by a factor of your block size or so since all threads require a unique memcopy to the SMP cache). Utilise read only and broadcast memory when possible, or really just use the appropriate memory space as close to the smp as you can get. Always watch your occupancy, 100% not possible but if it is extremely low then you have either done a bad job or your problem is not suitable for GPGPU. Minimize Synchronize (never sync in divergent codes). Use math libraries where possible but beware dupicate cudamemcpy calls, i.e. once the data is on the device don't copy back till you are completely done or have to for another reason (and even then an async device to host while computation continues is preferable). Avoid logic wherever possible, divergent code kills cuda perforamnce! This one is important, all threads must execute all branches of an if statement regardless of their outcome so an if elseif elseif else statement means all threads execute all 4 codeblocks. Can require novel solutions to avoid, although for things like boundaries this is impossible to avoid sometimes. edit: thought of another general rule: Do as much computation as possible at the same time. Memory copies and access memory in general are slow but can be disguised by the scheduler by running arithmetic whilst waiting for a response. If you have many warps in flight at once then the latency can be effectively removed, this means you need more blocks than SMP by a large margin. I believe a volta (which is obvioulsy bigger of a GPU than you will likely be using) requires in excess of 100,000 threads in flight at once to get near a 100% occupancy. 
My response strays a bit from Matlab I've realised while writing it but hey, was enjoying musing on it, I think the dream is that the interpreter/compiler leaves you with identical code for a variety of different fundamentally-the-same approaches but we know that is only the case for the most simple examples (like your addition). I would guess, with absolutely no evidence, that Matlab would be particularly bad at improving your code behind the scenes compared many other (compiled) languages. Which is where at least some of the time improvement comes from. In general, I am not surprised that sparse arrays have such a potential to be sped up considering the absolute abundance of specialised libraries that deal with them, well due to the absolute waste of time doing a regular operation is on them. I feel like we are moving in the right way though, some of the optimizations that are easily accessed (e.g. -05 and above in gnu compilers) involve significant refactoring of source code though I don't see this kind of work being as easily extendable to an interpreted approach. These of course are nowhere near smart enough to deal with sparsity (yet).
Just needed a refresher, should not be concerning considering I have been out of highschool for more than 10 years. 
So you are definitely right that Matlab's JIT compiler being slow is one reason Matlab runs slow, but its a bit more complicated than that. JIT is always going to be slower than GCC (or similiar), since (even if it eventually hits the same maturity) it is a fundamentally different problem. * GCC is compiling a code to be run many times in the future (in general) where it makes sense to heavily optimize, AND it has ALL the information about the code up front, whereas * JIT is compiling for immediate use and minimal re-use, where is makes less sense to spend a bunch of time optimizing, AND it has MUCH less info than the GCC compiler does at any given stage. Another part is that you simply dont have the ability to fine tune memory access and minimize cache misses or explicitly control threads or engage the vector registers in matlab, it just isnt built into the language. The really efficient codes (like BLAS/LAPACK) heavily rely on these to make then efficient as they are. The easiest (imo) solution to both of these is to try and have the code spend as little time in matlab and with the JIT compiler and instead spend most of its time in pre-compiled built-ins/libraries. &gt; some of the optimizations that are easily accessed (e.g. -05 and above in gnu compilers) involve significant refactoring of source code When actually given enough info, Matlab can kind of do something like this. using sparse arrays and datastores, you can input(but not run) a set of operations, and then run a queue of them at once and matlab will optimize their execution. The optimization is to limit disk IO, not computations, but it is on the right track and seems to indicate it is at least possible. &gt; I am not surprised that sparse arrays have such a potential to be sped up considering the absolute abundance of specialised libraries that deal with them The bigger issue with sparse arrays is memory I/O. Matlab doesnt just store a list of indicies like `sparse` accepts - it tries to store as little info as possible to describe the nonzero indicies, which results in each index relying on many memory values. This means that, even when you preallocate, each addition/removal re-writes at least part of the internal indexing map, which is more than 1 value and is larger the bigger the array is. If you dont ppreallocate you have to re-write the whole thing into new memory addresses (the "20 minute" method took so long because it re-wrote a progressively larger and larger array into new memory locations 40,000 times). This is why the "spalloc+loop" gets progressively worse than the "loop+sparse" and "spdiags" method. The speedup from "loop+sparse" to "spdiags" actually has nothing to do with the sparse matrix generation....it is 100% from vectorizing the loop that generates the indicies. spdiags is actually a .m file that re-orderes the indicies and then calls sparse, and doing a timeing execution profile this sparse call and the one after the loop in method 2 are identical. (note: the 'sparse' call in the "loop+sparse" method only takes ~6% of the execution time, more or less). I could probably re-do it one more time to directly call `sparse` using a vectorized indexing setup. I might do this strictly because the spdiags uses much more memory than it really needs, and not dipping into swap will make a tangilbe difference for larger inputs.
No. IMO there shouldn't even be defaults for stuff like that. There's absolutely no way to have a default value that's reasonable, because these parameters are very problem dependent. You should simply expect to have to set them any time you use an optimization algorithm. 
You cant change the defaults, but you can make a new function that passes any command you give to fsolve and otherwise sets defaults of your choosing. something like this should work function [fOut] = myfsolve(var1,var2,...,varN) if ~exist('var1','var') || isempty(var1) var1=var1default; end .... if ~exist('varN','var') || isempty(varN) varN=varNdefault; end [fOut]= fsolve(var1,var2,...,varN)
if you run `open fsolve` in the command window. The file will be read-only, but you can override this if you're a system administrator. You could then edit the file to use whatever default values you'd like. Just check if the argument was given, and if not, set necessary variables to desired values.
 x = [0.2, 0.4, 0.6, 0.8, 1, 2, 4, 6, 8]'; y = [-80, -30, -20, -15, -20, 0, 20, 40, 80]'; G=[1./x,x.^2]; %m=[A B]'; m=G\y; error=y-G*m;
+thank you!!
Regarding paragraphs: do you just mean pressing enter twice? If you’re always having the mat lab data pasted to the same excel range, just color them that way from the get go? Or, create a macro that colors in any cells that have changed data in them. Or paste a array adjacent to your data array in excel that posts “M”, of which you can use to set conditional formatting to those adjacent cells. If that makes sense to you. But I’m not sure you can use matlab to change the color of the cells it fills in. 
I just found out about it and its working thanks guy
Yeah, you’re probably right. The fact is that there are problems I have to solve quite similar to each other, and there is a range of values for these parameters that works pretty good.
I have also tried debugging it by using things like: j=isequal(a, c) k=isequal(a, b) but even they say they are not equal even though in the workspace they clearly are. a is 0.0940, b=0.0940 c=0.0940 
Looks like your GPU memory has been grilled. No difference after a restart?
You may want to cross post this r/buildapc. For right now unplug your gpu and plug it in your mobo display port to see if anything is with the rest of your system.
code moved to pastebin
Is talking about himself
Your for loop is currently only running once, I think, since you've written for gamma = 1 instead of something like for gamma = 1:5 or something (which would loop 5 times). Since what you seem to be doing is recursively calculating a value until a condition is met, a 'while' loop may be better suited for your purposes (although make sure your exit condition is well defined)
Thankyou for replied. The idea here is to use next_gamma to calculate the loop until i got equivalent of gamma value and next_gamma. My friend also told me that using while will made this more reasonable, but profesor give me restriction to use if-elseif-else instead while syntax --------------------- my new code: https://pastebin.com/KZn21LMX
This may have been triggered by doing a demanding video operation, but Matlab didn't break your video card. It was already broken. I suspect it wasn't cooling itself sufficiently and something was destroyed as a result of the heat generated when you loaded it heavily. No software is capable of breaking correctly working hardware. 
So you're looking for the structure: for index1 = start1:finish1 for index2 = start2:finish2 if condition1 % what to do if condition 1 is true elseif condition2 % what to do if condition 2 is true ... else % what to do if none of your conditions are true end end end I agree that a while loop is better for this, but some people swear by using for loops for this kind of thing. Speaking of which, it helps if you're familiar with the topics of [iterative computation](https://en.wikipedia.org/wiki/Iterative_method), [loops](https://en.wikipedia.org/wiki/Control_flow#Loops), and [conditionals](https://en.wikipedia.org/wiki/Control_flow#If-then-\(else\)_statements), specifically the [for loop](https://www.mathworks.com/help/matlab/ref/for.html) and [if-elseif-else](https://www.mathworks.com/help/matlab/ref/if.html) flow control structures in MATLAB.
If you've never seen it before you might want to start here to learn syntax and so on https://www.mathworks.com/training-schedule/matlab-onramp.html
So, we agree that using for-loop in interation is ineffective right?
It really depends on what your goals are. Is there a specific toolbox or domain area you are working in? 
Something like solving equation for a lot of parameters, then plotting graphs out of the results, derivate/integrate functions. Sorry that I entered this discussion, but I am also very interested in learning MAtlab
Those all fall under “basic knowledge,” any intro tutorial will cover solving systems of equations, plotting, and calculus. 
https://matlabacademy.mathworks.com/ i took the "matlab programming techniques" and it was very useful
Well, as I said I have basic knowledge in programming, like i know how to plot curves solve equations integrate and take derivatives and stuff like this.. My current use for matlab is control systems, transfer functions, step and ramp responses.. My biggest achievement so far is designing a program that takes inputs and gives out design parameters for journal pressure fed and self contained bearings (i’m an engineering student) It is not so special tho.. it’s consists of 3 for loops within each other.. it reads data from an excel file, and outputs data as a table.. Thing is i had to ‘learn on the job’ as they say I need a tutorial that would get me up and running with beginner / intermediate level so that I broaden my horizon on the things i know
No, not ineffective, but inefficient. If you loop over 1000 iterations, but find a close enough value at say, iteration 270, you either have to sit around through the remaining loops as the value basically stays the same, or use a [break statement](https://www.mathworks.com/help/matlab/ref/break.html) to exit the loop; a while loop has this built-in. I prefer while loops in iterative computations for this reason. You'll find people who disagree.
I’d like to emphasize on the word free
Thank you for all your help! I have finally made it work! :D
What exactly. I am sorry but actually I got this program online and image processing is the main thing I am working on. It's just a part of what I am going to make. Would be great if you could help me with the exact changes I need to make. 
Sorry I have an academic account 
Only if the for...end loop has incremented above 18+
Are u ok? 
So you have used Matlab more than once, good.
upvoted
Just look at that post history. Oh boy.
Oh yeah, that's how I feel when I have this "index exceeds matrix dimension" error too.
There is nothing that will teach you a language like using it. 
I mean I'm glad, matlab can get frustrating but next time just post the problem you are having..
Or I can just vent 
What about it? 
There is a free section called MATLAB Onramp offered now too on that page/link.
Use cell arrays and logical indexing. Something like dSort=cell(1,3); dSort{1}=[x(x&lt;cutLow),y(x&lt;cutLow)]; dSort{2}=[x(x&gt;cutLow &amp; x&lt;cutHigh),y(x&gt;cutLow &amp; x&lt;cutHigh)]; dSort{3}=[x(x&gt;cutHigh),y(x&gt;cutHigh)];
Thankyou for sharing your point of view, sir!
You're welcome. Hope it helps!
The [University of Michigan MATLAB Controls Tutorials](http://ctms.engin.umich.edu/CTMS/index.php?aux=Home) should be perfect for you.
This looks great! Thanks
You're welcome.
Im not all that familiar with arduino's nor with Simulink, but im guessing you ran out of memory. According to (this)[https://www.arduino.cc/en/Tutorial/Memory), the base-level arduino's have 2k of SRAM available for use when actually running a program, which is nothing. I also wouldnt assume that it will automatically use the flash memory in the same way a modern OS will use swap space to run things that exceed available RAM. This seems like the type of thing that could result in the error you describe and you said a simpler test worked, so...
... variables in functions are not persistent - they get released when you go out of scope.
...unless you declare them as persistent. Meaning the reverse behavior is "everything is by default a persistent variable unless it is declared otherwise". This should have been fairly clear.... At any rate I think I figured out the part where this would have really helped, but im still curious if there is anyway to do this. As I said in the post I suspect there isnt an easy way, but you never know.
If you need a massive number of persistent variables, you might want to look into using classes.
What I had planned to use it for was/is a one-time unusual situation. Long story short: it seems the `-memory` flag with profiler no longer works, so I decided to try and write my own line-by-line profiler that will output line-by-line wall time / cpu time / memory usage. This involves setting up a function that like the base workspace in certain regards, and to try and keep as true to the function's original code as I can I am not doing things like "replacing individual variables with a combined cell array" - Im trying to make every line evaluate in the same way it would in the original function that I am testing/timing. Long story not-so-short: The function first reads in the script/function line-by-line, then determines the input/output variables (for testing functions, this isnt needed for testing scripts), and how deeply "nested" each line is in `if`/`for`/`while`/`try`/`switch` calls. Once initial setup is done, it calls a subfunction to evaluate everything line-by-line. This function first unpacks all the variables passed via `varargin`. If the current line has a deoth level of 0 it is timed and evaluated, BUT if not (meaning the line is the start of a `if`/`for`/`while`/`try`/`switch` function call) it a) determines which path the function should take, b) windows out those lines from the full line-by-line record of the function, and c) recalls itself with just those lines and with all their nesting depth levels reduced by 1. e.g., in an `if-elseif-else-end` call it: * First, it evaluates / times the `if` condition. * -- &gt; IF TRUE it re-calls itself with only the lines between the `if` and `elseif` statement. * --&gt; IF FALSE it evaluates / times the `elseif` condition * * --&gt; --&gt; ELSEIF TRUE it re-calls itself with only the lines between the `elseif` and `else` statement. * * --&gt; --&gt; ELSEIF FALSE it re-calls itself with only the lines between the `else` and `end` statement. So, in effect, everything except the variables dealing with the index of the line of code currently being evaluated needs to be persistent. The problem was that I *really* didnt want to have to completely recreate a parser (even a rudimentary one) to determine what was and wasnt a new variable definition in each line. This means that I *have* to define the variable before i declare it persistent, since the code doesnt know what the new variables are until Matlab parses and evaluates the current line. And Matlab doesnt like to declare pre-existing variables as persistent. At any rate, it seems like Matlab will declare a pre-existing variable persistent on the condition that it isnt directly referenced previously. So, a combination of the following seems to work: * 1) recording the current persistent variables * 2) evaluating each new line with `eval(['string of line from function to be timed'])` * 3) pulling all variables from the workspace with `who` * 4) removing variables that were previously declared persistent * 5) reshaping the cell array of not-yet-declared-persistent-variable-names into a space-seperated `[1 x n]` char vector and * 6) calling `eval(['persistent ',varList])` Being able to call `local &lt;...&gt;` once on variables that I know the name of in advance and having everything else be persistent would have been easier, but (i think) my solution works for general usage. Ill know for sure when Im done with debugging it. As far as classes - Ive not used them all that much, but since 1) Im trying to stay true to the original function execution and 2) I didnt know for sure if it would actually make things easier.
These two methods give the same result. If they dont then you either arent using them right or have something very wrong with your Matlab installation. Fp=0.5; % passband freq Fs=0.7; % Stopband Freq Rp=3; % passband Ripple As=100; % Stopband Attenuation % Design filter with 'butter' [N,Wn]=buttord(Fp,Fs,Rp,As); % required order/frequency for 'butter' call [z,p,k] = butter(N,Wn,'low'); % Butterworth filter [b0] = zp2sos(z,p,k); % Convert to SOS form h0 = fvtool(b0); % plot % Design filter with 'designfilt' % Make filter b1=designfilt('lowpassiir', 'PassbandFrequency', Fp, 'StopbandFrequency', Fs, 'PassbandRipple', Rp, 'StopbandAttenuation', As, 'MatchExactly', 'passband'); h0 = fvtool(b1); % plot 
My apologies for not understanding what you wanted. Inbuilt persistence is a round about way and uat what your suggest from the comment above is far more hassle than a) saving your variables as in a .mat and b) loading that .mat when you need it again.
The tick marks show equally spaces quantiles. The first tic mark means 99% of the distribution is above and 01% is below. The 2nd tic mark means 98% of the distribution is above and 02% is below. etc. They are more dense in the center because you have a lot of the distribution in the center, so moving forward by 1% of the distribution doesnt require moving much.
On My machine this is slightly faster PD=hypot(bsxfun(@minus,R(:,1),R(:,1)'),bsxfun(@minus,R(:,2),R(:,2)')); PD=PD.*(PD&gt;=thr); If you dont need the actual distance and can settle for distance^2, this is ~60% of the time on my machine. PD=(bsxfun(@minus,R(:,1),R(:,1)').^2+bsxfun(@minus,R(:,2),R(:,2)')).^2; PD=(PD.*(PD&gt;=thr^2)); Depending on how many points qualify using sparse arrays might be worthwhile, but with the numbers in your example something like 97% of points qualified, so it would have to be a much higher threshold.
have you tried stepping through your code in debug mode?
[removed]
Newer versions of matlab have a string array type as well
Give us the inputs your are trying my good sir 
Thanks! I did not know about these
This is a bit tricky to sort out without understanding what you are trying to do with the script. However, do you only have two core to provide to Matlab? It appears you are only using 50% of the available CPU so I suspect you may actually have four. Worrying about RAM would only be an issue if Matlab tells you it has run out of memory. From your post it is clear that the scripts run, but doesn't complete fast enough for you. Are you running on the same data as the person who achieved a 5 minute run time? Scale down your operation so it can complete by reducing the size/dimensionality of your inputs. It would be helpful to know if it can run to completion. If you can get it to run at all then you could use the built in optimizer to sort out what operations are the most time intensive. As the current parfor loop only prints when it starts, this doesn't help you understand the run time without a tic/toc for each parfor iteration. If you add a fprintf statement with a tic/toc pair you should be able to determine how long it should take on your machine if you also print out numCluster.
the core i3 only have 2 real cores, yo need more cores or a cluster to speed up the process. you need Parallel Computing Toolbox to run local/remote cluster or use gpu https://la.mathworks.com/discovery/matlab-gpu.html
What are the variables a b and c? I tried with some random values and the absolute difference of Pcal and P seems to converge towards a fix number outside of ]- 1,1[, so you don't reach the exit conditions of the while loop. 
Thankyou for the response. Im assuming I have 2 cores...its a dual-core laptop, so it should be 2 cores yes? Im not sure how I would activate 4 if there were another two im unaware of. I asked the same question a bit back and I was told it was a RAM issue, but I guess if it is ok with 4GB and it hasnt warned me, then cool. Yes, same data and everything. True...I've let it run for about half an hour, I suppose I could see what happens if I let it go for longer. Im not sure what you mean by add a fprintf statement with a tic/toc pair....where would I add that? 
Thats what I thought, that it had only 2 cores. I have the parallel computing toolbox....I believe it runs a local cluster. Would an external gpu be the right thing, or would updating to i7 make a difference?
Something like this would let you see how long each iteration takes, so you could understand how long it will take to run on your machine. Then you can make a decision about what to do depending on how often you need to run the script. numCluster = length(configuration); strokeCandidates = cell(1, numCluster); parfor j = 1 : numCluster a0 = tic; // lots of operations fprintf('Iteration %d completed in %f seconds.\n',j,toc(a0)); end
Thanks alot! So this would go in the sketchDetect.m? Line 42? I hope..
I love this! I wlhave been fiddling with KOS, an automation mod for Kerbal Space Program and it's so cool to see the math laid out like this. Thanks for posting!
Please reformat your code for readability. The easiest way to do this is: 1. Select the code in the editor. 2. Press your Tab key. 3. Copy the code. (Bonus points for selecting the new 4 spaces in the first line.) 4. Insert a blank line between any text in your post and your code (by using two returns). 5. Paste the code in your post's body. (Add the missing 4 spaces in the first line if you didn't select them in the editor.) This gives nicely formatted code, like this: niceCode = format(messyCode, 'readable'); helpFromStrangers = moreLikely(thanWithout); For now, the first thing that jumps out at me is that elements in pE may not be exactly 0 or 1, so it won't evaluate properly as a logical condition. It's hard to tell; what is 'getPivotRow'? Also, even if it did, it's not a very good iterator. Aside from that, you haven't told us what's gone wrong, so it's difficult to help.
idk...i was a tad dissapointed to not see a counterexample showing Jeb expertly executing a lithobraking maneuver, which is arguably a far superior method to suicide burns. In all seriousness though, good post OP. 
I don't know of any, but you could easily convert your values in an approximate sense; just imagine that your measured part of the earth is reasonably flat and use the values in the table [here](https://en.wikipedia.org/wiki/Latitude#Length_of_a_degree_of_latitude).
So I put it in, but I dont think its doing anything....what is it supposed to show? This is what its been showing for me (before and after I put in your code) https://imgur.com/a/m50bI 
Would the difference between 2, 4 and 6 cores be significant for what I need? Id also like to run https://github.com/omrysendik/DCor/ (which uses matconvnet) right now it takes over an hour. The guy ran it on a GPU server not a CPU server though. I just wonder if 4 cores would be good for this and the https://github.com/panly099/sketchSynthesis im trying to run. 
https://www.mathworks.com/help/matlab/ref/xlim.html
yes I have seen this but it did not really help me, can you point to me where it could be useful in my case ?
`xlim([min(TIME) max(TIME)])`
yes I have already done that, but the thing is I want to expand this axis horizontally so it would show more data. What I see now is min(TIME) which is only 0.0002 s and max(TIME) which is 2 s. Hence the data just appears as a big mess, I want to expand the horizontal axis much more so the data can be better represented
lmao wat, are you trying to say you want to log-transform the axis to resolve the data across varying time scales?
I solved the problem by changing the aspect ratio, thanks for your replies mate. Any idea about how I would make the plot bigger ?
Thanks, I'm glad you enjoyed it!
Lol, thanks! 
So the cores all each have the same power in the different lines, if you do cpu oriented you'll have to have more cores to go faster. It's the same thing with gpus, but they have way more which are slower than cpu cores though, but are useful for large calculations. If you look at gpus ie gtx 1060 and gtx 1080 it'll say that they have way more cores in the 1080 even if the clock speed is the same. Now since you're doing this on a laptop you won't really be able to upgrade either of them. 
If it completes a parfor iteration it should tell you how long it took to run. Although it isn't even displaying the start of the parfor loop from the print statement after the parfor. parfor j = 1 : numCluster fprintf('current stroke id: %d\n', j); Is there anything before this is called in your script? Often times I use fprintf statements to track the progress of my scripts when they are too cumbersome to debug in realtime.
Welcome to Matlab! When you use Matlab there are essentially two types of .m files: functions and scripts. The .m file you have donwloaded is a function - you can tell from the funcnction declaration in the first code line of the .m file. Matlab functions can be called (used) by other Matlab functions, Matlab scripts or from Matlabs Command Window (the bottom window in your case). So the way you should use the .m file you have is to place it in Matlabs path (for ease of use, you can put it in /documents/MATLAB since Matlab will check this folder on startup of the program. When you have done this, restart matlab.) Now you can use the function by creating a new script (empty .m file) and pasting something like this: % Script to call dicom2raw.m clear all; % clear variables close all; % close figures clc; % clear command window path_in = 'C:\Users\Documents\myDicomFile.dcm'; % the location/name of your dicom image (must be a string) path_out = 'C:\Users\Documents\myRawFile'; % the location/name of your raw image (must be a string) Dicom2Raw(path_in,path_out); % call the function using your paths Then run the script. 
I dont think its working. By completing the iteration you mean what exactly...right now it just goes "current cluster 1" to "current cluster 2" and so on. I dont think anything else is called from what I can see... What I do is run image2sketch.m in synGUI, pick the image, assign the category, and select it with the bbox function. It might be a bit over my head (not my code) 
Your ram could absolutely be impacting performance even without MATLAB telling you it's out of memory. How much ram did the other guy have on his server?
So say for kicks I upgraded to an i5 or i7 with 8gb of RAM...it should speed the codes up somewhat I would imagine? Just trying to find a cost effective solution...these gpus sound super great, I just dont know if Id need something as serious, unless I absolutely do. 
Well the RAM won't really help unless you need to store more information at once. MATLAB would tell you about that as either you'd freeze, or you'd get an error message that means you don't have enough. Your CPU only having 2 cores has to have that buffer just in case, and I don't quite know how MATLAB is optimized so I'm not a 100% on if it would utilize threads. You may want to ask around on r/buildapc. There is one more thing i'd like to add is that since you are using a laptop it may be a U model. eg i3 6500U. They have a smaller clock speed so you may suffer from that as well. This is done to save battery or something to that effect I believe.
Thanks! Alright Ill check over there. In the end I may just invest in a new laptop altogether....its a i3 380-M https://ark.intel.com/products/50178/Intel-Core-i3-380M-Processor-3M-Cache-2_53-GHz 
Bigger in what sense?
I guess a budget 6-core processor would be better, probably what ill end up doing, unless I find an 8-core at an ok price. 
The worker process environment doesn't have access to AWT, and this function needs it. I'll bet if you replace the print with javachk it will tell you awt is not there. https://www.mathworks.com/help/matlab/ref/javachk.html https://www.mathworks.com/help/matlab/ref/im2java.html
For a few bucks an hour you can have access to a sixteen core server. All you need to do is provide your details for the parallel cloud profile. https://www.mathworks.com/products/parallel-computing/matlab-parallel-cloud.html
so how do I resolve this error? how come I only get this error when running this in parallel, but not serially?
I really appreciate this! Unfortunately, the script itself did not seem to work - i.e. it didn't produce an interpretable file. And it only seems to work on one dcm slice at a time. While I could probably set up a loop somehow, I managed to resolve the issue by figuring out a way to conduct this task using ImageJ. Again, I appreciate the time you took to explain this to me. It will not go wasted; I have to learn Matlab later for some other purposes. **** If anyone's Google search brings them here... If you're trying to implement Mattaz' volume renderer in Unity, and need a .raw input, here's how you convert a .dicom to a .raw file, without the VVV cygwin 'nix terminal bs that he suggests you go through to make .raw volume files, which probably won't even work in the end. Get your dicoms in order from your CT scan, or from some public repository. Go to ImageJ's File -&gt; load image sequence -&gt; and select the first .dcm in the folder. You probably suspected that you should Save As --&gt; Raw File, but FIRST. Convert the image to 8-bit with Image -&gt; Type. Then go to Image -&gt; Properties, and make sure you change units to pixel, pixel width to 1, pixel height to 1, and voxel depth to 1. Once you do this, make whatever adjustments you want to the images of the dicom. Then when you export, make sure you get the image dimensions right when saving as a raw file, otherwise the entire image will be garbled. Now you can load this into Mattaz's volume renderer module, use his/her custom editor script to build the VolumeAsset from the new raw file you made, and view your CT scan in glorious black and white only, because there's no opacity coloring like with other computationally expensive volume rendering packages.
Holy shite! Thats front page worthy stuff!
So this is basically ad for udemy courses! 
Bigger so it can fit the screen 
He says he was using 128GB of RAM....holy 
Quick and to-the-point. &lt;3 that. upvoted
I got a response back from the author of the code and he said he was using 128GB of RAM....thats quite a bit. 
Either you have multiple versions of this function (possibly somewhere else on the PATH), a built-in function with the same name exists, or you are somehow redefining the function (improper code). I would just slightly change the name of the function and the call, and run again.
Please try to input antoine coefficient of water and methanol Water: A= 8.07131 B= 1730.63 C= 233.426 Methanol A= 8.0724 B= 1574.99 C= 238.87 [sauce](https://www.researchgate.net/file.PostFileLoader.html?id=56d2c2cb7eddd3cfbf8b4596&amp;assetKey=AS%3A334041053188097%401456653001218)
Are these for free?
Not the type of problems I have to deal with, but it's an interesting read nonetheless. Thanks for sharing.
Could you show us the graph?
Why are you taking the Matlab for Engineers course if it's 1 credit and you're already using Matlab? Is it required? Is there something more you're trying to learn to do with Matlab? It sounds like Discrete Structures is a *required class* for you. That means you take it. Maybe it's offered as an alternative? You're not especially clear on whether it is a prerequisite class or not ("they offered me Discrete Structures instead"). If one is optional, of no use to you, and the other is required and a prerequisite to classes next semester, *take the required prerequisite course.* If you have doubts about which one to take, talk to your advisor. Your advisor should know which route to take. If you don't trust your advisor (you have bigger issues, but) you should talk to a friend who is in the program with you and see what they're doing, preferably someone who is ahead of you in classes. If this is a community college and you're planning on transferring to a university, talk to the university academic advisors and see what they're looking for. But really, talk to your advisor. The internet is a really poor choice for academic advising. 
It depends on what you want to do. Try to find a company that does what you want to do and ask them what they use. Try to intern or co-op with them. With mechantronics, I would imagine the bulk of your work would be in C++. Matlab can do embedded stuff, but C++ would really be the tool of choice, but again, it depends. If you're mechatronics specialization is kinematics and actuators, maybe you wind up doing a bunch of simulation and development in Simscape. Again, it all depends on you and what you want to do.
&gt; **tableau** &gt; &gt; noun. &gt; &gt; a group of models or motionless figures representing a scene from a story or from history I thought you misspelled *table*, but you're using it as an *indexing variable*?? You have `tableau = tableau`? You define `pivotElement = [row; col]`, but then later call `pE = pivotElement(tableau)`? *What are you doing?* What is the "simplex method?" What is a "unique solution?" What is the "objective function?" what is `readSolution()`? Also, format your code wow. 
Embedded stuff definitely is what i am working on, but since i am living in country where matlab is actually unknown.. They like to drill us more with C++, but i found matlab way more fluid with embedded systems. To me matlab is great software with so many options to do in practical way. So if i go hard with matlab, in future it should pay off? 
i removed semicolons deliberately
Not really, if embedded is what you want to do. Matlab is great for prototyping because you can iterate so quickly. It's not so great for optimized solutions because, relative to C++, it is slow. It's also expensive. I'm not saying don't use it, but I would definitely recommend you work primarily with the C++ you're being trained (drilled) to use if embedded is the route you want to go.
Use nargin instead of length(varargin)
Do dont really need to have varargin as an input at all, since you arent using it (unless you want the function to silently throw away the 5th+ input) As another comment suggestedyou can chance `length(varargin)` to `nargin`, though I would tend to reccomend instead doing if ~exist('w','var') || isempty(w) || ~isnumeric(w) rst=(10*x+y)*10^z else rst=(100*x+10*y+z)*10^w end This approach checks to make sure `w` not only was given as an input but was given as a valid input, so its a bit more robust than using `nargin`. It also allows the code to be run as a script (the `nargin` check throws an error when called from a script). This functionality can be nice when you are debugging bur using the base workspace, since you can just copy/paste everything and not have to manually choose + selectively run checks like this. Either way works though.
This is a floating point roundoff issue. Try using this instead function m = mymod(a,b) %% 'mod' with a check to prevent floating point roundoff issues if abs(a-round(a)) &lt; sqrt(eps(a)) &amp;&amp; abs(b-round(b)) &lt; sqrt(eps(b)) % a and b are probably meant to be integers m = mod(round(a),round(b)); else % a and/or b is definitely a non-integer float m = mod(a,b); end end
i went with margin, same error
"clear" in the left tab script is OK, but in the right tab script has to be removed. Additionally, there is no reason to right a new script for your function, but you can define it in your main script at the bottom as a nested function. 
The clear statement was the issue! I don’t know why I put that in there. I do always save functions as there own file though to keep things neat. Thank you!
Thank you!
Nevermind, he said 16GB....lol. 
Thank you for your input. I noticed that the problem also gets solving using double(mod(uint32(a),6000)) Would you say that there is something wrong doing it like this? Should I stick with your solution?
This is a summer course Im taking for myself to supplement what Ive learned. I originally wanted to take CS1 to understand the basics of programming. It sounds like Matlab is more for me since all of them are optional and are done at my community college
No problem. If the raw file is not interpretable and assuming my short script ran without errors (I did not have a dicom file to test), the problem is in the dicom2raw function. And as you suggest, you do need to use a for loop in matlab if you have more than one dicom image, but that is easy to implement. Glad you figured out a solution :-)
I am programmed to open link only when I read sentences in that format. 
Basically, your `a` is just a little bit smaller than 6000. You don't see it in the 4 digits of precision, but perhaps`a` actually equals 5.9999999e3 or something. 
I think you're confused about how `varargin` works. You are defining `w` as an input variable, but I think you intend it to be in your variable input. Thus, when you call your function with either 3 or 4 inputs, your length of `varargin` is 0, and so you don't go into either branch of your code. 
Probably best to use simulink
Theres a good chance what you did will work, but there are a handful of situations where my code works and and what you used doesnt. You may not ever run into these, but I would rather over-generalize than not generalize enough. In paqrticular: 1) `uint32` vs `round`: Consider all numeric inputs. If the input is an integer then you really dont want to cast it to a uint 32, since it will change the value of a if it is a signed integer with value less than 0 (e.g., `int32(-20)` or if it is a 64-bit integer with value greater than `intmax('uint32')` (which is 2^32 or ~4.3 billion). It will also change the values of singles/doubles that are less than 0 or more than 2^32. If the input is a single or double, I dont think there are any cases where `uint32` gives the correct answer and `round` doesnt, but `round` is both computationally cheaper and isnt limited to values between 0-2^32. 2) the `if abs(a-round(a)) &lt; sqrt(eps(a)) &amp;&amp; abs(b-round(b)) &lt; sqrt(eps(b))` check: If a number is supposed to be an integer but has accumulated some floating point roundoff error, it will almost always be within `sqrt(eps(a))` of the nearest integer `round(a)`. Without this check, things like `mod(5999.6,6000)` would return `0` when they shouldnt, since an error of 0.4 on a value of 6000 is much more than (double precision, probably single precision too) roundoff error would ever be. 3) The ability to use `b` other than 6000: the `mymod` function i posted has the same syntax as `mod` so you can directly replace and `mod` usage with `mymod`, and it will (mostly) prevent floating point roundoff in both the `a` and `b` inputs. These are perhaps edge cases that youll never encounter, but I dont see any downsides of going with the more general method so thats what I would go with.
&gt; a series of delays in the form of y[n]=x[n-1] + x[n-2]... This is just standard 1D digital filtering. Use [filter(https://www.mathworks.com/help/matlab/ref/filter.html) to filter the data using the digital filter described by the `x(n-i)` terms and then plot the result using a plotting function of your choise (good ole fashioned `plot` should work just fine).
Near the top of your function (anywhere above the 1st check for `nargin == 3`) add the following line: rst=[]; You define rst as an output, but if you try and call the function with less than 3 inputs `rst` never gets defined in the function, and when you try and output or display something that isnt yet defined you get an error. Adding `rst=[];` will return an empty variable as output instead of throwing an error if you dont give enough inputs. The better option is to add checks for `nargin==0,1,2` and define default values for`x` and/or `y` and/or `z` if there arent enough inputs, but this only works if there are sensible default values you can use. 
You're trying to plot line segments in 2D, which are defined by their *starting* and *ending* **x** and **y** values. To [plot](https://www.mathworks.com/help/matlab/ref/plot.html) each one independently, you'll enjoy the '[hold on](https://www.mathworks.com/help/matlab/ref/hold.html)' command.
Hey thanks for the great reply! Its hard to get the right answer on this. Assuming this is what you mean? https://imgur.com/a/lkMRg 3.37 out of 4GB. So this would be vectorizing the strokes or something? The author told me yesterday that he had 16GB of RAM on the 8-core server he was using when he wrote it. So lets say I had an i5 or i7 dual-core with 8GB, would there be any significant changes in peformance do you reckon? 
The magnitude peaks changed at 0,.5,1 by like 20%
Okay, and how about if you don't define w (comment it out), and let freqz choose it for you (as 'om')?
nope
yeah!
Sure, it's what I was trying to get you to discover with the other reply. Your selection of evaluation points, w, determines the resolution of the resulting plot. If you make a linear vector, you will be looking at samples in the smaller end of your values that are VERY far apart, relative to their size. When you define a logarithmic vector instead, you keep the relative distances equal, and thus the resolution of the plot is consistent, revealing all the interesting features you're looking for. The freqz function will actually select an appropriate vector (most of the time) to reveal these interesting features for you, if you choose to let it. Hope that helps you understand your assignment!
Hmm actually trying it again the in the first case where I started with an expression like y[n] = x[n] + x[n-1] + ect I added a delay of two to the input turning it into x[n-2] + x[n+1]... the mag nor the filtered response didn't change, the phase spectrum did though. Is that because all I am doing is just adding in a delay of 2 so the two are just shifted right 2 values? something I can't really see? Also it doesn't seem to change when I multiply y[n] by (exp(1)^j*pi/4) I would think that would just change the amplitude, but I am also not seeing that. The last one where I change num den like the code above, the mag also doesn't change. I guss I just don't understand the meaning of magnitude of spectrum filter.
&gt; I guss I just don't understand the meaning of magnitude of spectrum filter. I agree, but that's what school is all about! We were all there once. Do you know Euler's formula? If not, I suggest you [look into it](https://en.wikipedia.org/wiki/Euler%27s_formula). Then I recommend double-checking your [complex arithmetic](https://en.wikipedia.org/wiki/Complex_number#Elementary_operations), specifically how the [angle \(phase\) and magnitude are calculated](https://en.wikipedia.org/wiki/Complex_number#Polar_form), given a complex number a + j\*b. To round it all out, take a look at the [Laplace transform](https://en.wikipedia.org/wiki/Laplace_transform), and [working with equations f\(t\) &lt;-&gt; F\(jw\)](https://en.wikipedia.org/wiki/Laplace_transform#Table_of_selected_Laplace_transforms). Once you've got that, [it's easy to see](http://lpsa.swarthmore.edu/BackGround/TimeDelay/TimeDelay.html#FreqDomain) why what you're seeing happens.
Is this an ellipse aligned with the coordinate axes? If so this is a pretty simple algebra problem and not a Matlab problem at all. If the ellipse is rotated from the axes, this is a slightly more complicated problem, but still not really a Matlab problem. Do you know the equation for the ellipse aligned to the coordinate axes? Cam you solve for Y? 
Yes the ellipse is aligned with the coordinate axes, I used a script from the file exchange called ellipse.m to generate points for my ellipse, I don't actually have the equation specific to my ellipse so can't solve for y. I am taking the 2nd integral of a poly55 surface fit but want to limit it to an area of an ellipse as the base.
I will second what jkool702 said. In my experience, running out of RAM in matlab is one of the biggest performance hits you can get - often it can be worse than not vectorizing your code. If you can run on a system with enough RAM to handle the problem without using swap space, then you will definitely get a big speed improvement. Whether or not 8GB is enough really depends on your specific case, so it's hard to know. If you're lucky, there may be some programming solutions to your RAM issues. If you step through your program, you can make note of how much memory every variable takes. Usually the culprit will only be a couple very large arrays. If there are very large variables that are no longer needed, you can use the `clear` command to remove them from memory - using functions liberally can be useful to clear unused variables, as well as keeping your code more manageable. Also, if there are very large arrays that contain over 50% zeros, you can use sparse arrays to reduce the memory requirements (I once went from &gt;16GB usage to 6GB usage just by switching to sparse arrays). Finally, if all the memory usage is in a small part of your program, you may find a performance benefit by splitting the program to just work on pieces of a given array at a time - even if this requires turning some vector operations to a loop. 
The lazy and slow (computationally) way to do this is to use inpolygon(), but it would be a lot more elegant to just derive the formulae for the upper and lower half of an axis-aligned ellipse. It's trivial. 
So you are definitely memory bound a few notes: 1) From the picture, it is actually closer to 3.37/3.67 GB or so. I dont say this to be nit picky, but because you actually only have 300 mb of "available" memory, not ~630 mb. 2) windows doesnt highlight the importance of this as much as it should, but you really want to look at the `commit` stats. What exactly this is is...complicated....but it is basically the size of what programs need to be able to access, which is a combination of stuff that it is actively using and stuff that is temporarily being stored on disk until the program needs it later. Your commit is ~1.8 GB larger than your physical ram usage, meaning you are using 1.8 gb of disk space to temporairly store stuff for programs for later. How much this matters in matlab really depends on the operation. Some of this stuff is probably data from variables that arent needed in the current operation, and this doesnt have too big of a penalty (with a ssd andhow...even this can hurt a lot with a old school HDD spinning platter hard drive). Where you really run into trouble though is when you cant do an operation without putting some of the stuff you actively need on disk, since this tends to require reading/writing the data multiple times in a single operation, which really kills performance (even the absolute fastest PCIE SSD'd are still like 10-20x slower than RAM). Long story short - you need more memory or to rewrite the program to be smarter about its memory usage. an i5/i7 would help too, but for that were talking an order of (maybe) a factor of 2x (less if the code is mainly single threaded), whereas getting enough ram could easily be a 50-100x improvement. As a side note: if you get a i5/i7 and want to parallelize with 4 or 8 workers, you will need more memory. For the data that the workers need to do their operations, matlab tends to make duplicate copies of the entire data array (and send the whole thing to each worker (it doesnt automatically just sent each worker the part it needs - each gets the whole thing). This means that, in a worse-case scenario, using N workers will result in Matlab using N times as much memory versus running single threaded. Another note - Matlab 2013a is old, and there have been some pretty major overhauls under the hood. idk how much these change memory usage, but they do help quite a bit with speed. If updating is practical, then it might be worth considering too.
Turns out you can use a cfit object as the ymin and ymax so i just fit a curve to my ellipse and used the cfit as limits. The integration works but the FailurePlot is showing large areas needing refinement, do you know how I can improve the integration?
If you don't need a precise answer anyway, then what does it matter if some parts aren't converging perfectly? What's the documentation say about this topic? 
Here is what I translated the transfer function to: G = 3 s + 9 -------------------------- s^4 + 8 s^3 + 15 s^2 and to include K: rlocus(G/K); 
&gt; If you step through your program, you can make note of how much memory every variable takes. The following sequency is particuarly useful for this profile off profile -memory on &lt;run code&gt; viewprof % the correct command might be profview, I always forget. I have the incorrect one aliased to the correct one, so they both work for me. profile off &gt; if there are very large arrays that contain over 50% zeros, Its worth noting that it is a bit more complicated than a hard cutoff at 50%, though this is a pretty good guideline of when you will start to see memory benefits (assuming you build the sparse arrays correctly - matlab is a bit touchy with this). &gt; I once went from &gt;16GB usage to 6GB usage just by switching to sparse arrays I can safely say I got ya beat on this one....recently I was working on something where in sparse form the array took 5-6 gigs or so, and in dense form it would have taken 9 TB. of course I never actually made the full version (Matlab kindly informed me that making an array that large would probably slow down my computer), but using sparse arrays *can* be very beneficial. It is also worth checking out some of the sparse array reordering functions like `amd`. These can sometimes make a sparse array even more memory efficient by grouping the data and allowing you to remove unnecessairy all-zero rows and columns. 
Dude, thanks so much. This is, pretty in depth. Its an i3-380M, the one im using. So could it be done with the i3 and 8-16GB? Im not sure if I have the skills to rewrite the program, though I'd love to. Its a plethora of code. Yeah...the guy used 8 workers with 16GB so he tells me. The other code I also was trying to run was : https://github.com/omrysendik/DCor/ Which uses matconvnet, a neural network. It also takes hours to complete. I need to upgrade everything really, get moving with the times. But I have to be cost efficient where I can though, since Im just trying these out for fun. 
You used tf() to create G, right? If you look at "help rlocus", that can help; you just do rlocus(G). rlocus actually plots the change of the roots as K varies from 0 to infinity. Does that help? 
You can also use the data cursor on the rlocus plot to see the pole or zero location, the damping, the overshoot, etc. If you want to investigate more, sisotool() is also very useful. 
I took a break from it, I did try different values of K manually but it did not change the outcome of the root locus :(
thank you, I was expecting an intersection of the lines on the y axis but the zero or pole is bang on origin
The problem is that you have a fundamental misunderstanding of the root locus. For one value of k each pole only has one value. As the comment above said, the rlocus command shows where the poles move as k increases. This, the plot you are showing shows where the poles are for every possible value of k. 
&gt; i3-380M, So, this is a bit older than I was imagining. There was a pretty major performance leap between your generation and the one immediately following it. Your is a mobile version which also tends to be lower clocked and iirc doesnt have hyperthreading enabled. The memory is still probably the bigger issue, but switching from this to, say, a system with a 6-core i5-8600k you might be looking at closer to a 10x difference (3x core count * 1-1.5x for faster clock speed * 1-2x for IPC improvements is probably a decent ballpark guess). I mean I wouldnt say it is *required*, but there is a lot more performance to be had by upgrading your hardware. So could it be done with the i3 and 8-16GB? I mean if you can avoid hitting swap space it'll run. idk exactly how long itll take, but im guess at the very top end an hour or two. Note: the [product page](https://ark.intel.com/products/50178/Intel-Core-i3-380M-Processor-3M-Cache-2_53-GHz) for the i3-380m indicates max memory support is 8gb, so 16 isnt an option, but id guess that 8 is enough. It might require you to change out all the `parfor` loops for standard `for` loops though. So, before going any further, I just realized there is something you really should check. Id ask that you open a command prompt (press windows key + r, type `cmd` and hit enter), then enter the following command: wmic os get osarchitecture and press enter. This should output a line that says `OSArchitecture` followed by a line that says either `32-bit` or `64-bit`. If it says 64-bit youre good to go. If it says 32-bits youve got problems. A 32-bit OS physically doesnt support more RAM than you currently have. I admit idk what the cost of upgrading from 32-bit to 64-bit is, if any, or if you can do that "in place" or if it would require a complete re-imagine of the harddrive. If it costs anywhere close to a full windows license it realistically probably isnt worth it. Assuming no 32-bit OS issues, The other thing worth checking is to make sure you actually have an upgrade slot available. Easiest way is probably to install [cpu-z](https://www.cpuid.com/softwares/cpu-z.html), then go to the "SPD" tab. You should have a pull-down menu to select 2 slots. They will either both have 2gb or one will have 4 and the other will be empty. If it is 2+2 you should google your laptop model and try to find out if the memory is removable. Some laptops (I know that, for example, the macbook airs do this) solder in the memory so you cant remove it, and if you have 2+2+solder youre also shit outta luck. &gt; the guy used 8 workers with 16GB so he tells me. Assuming he *actually* has a 8-core xeon server cpu and isnt talking about some machine he happends to ssh to with a 4c/8t i7 and 16 gb or ram, I would guess he means 16 gb *per core*. 8 cores + 8 RAM slots + a max size of 16 gb per slot (well, max before memory gets *really* expensive anyhow) is a fairly common server loadout (esp for sandybridge / ivybridge / haswell systems).
Okay thank you again, I think I will stick with your solution
Format your code. Four spaces in front of the lines of code, offset the code block with a newline above/below the block. 
Hi again! Thank you very much for your help, I really appreciate you taking the time. I think it's gonna be quite hard to explain the whole project in more detail because there are parts of it I'm not allowed to discuss. I'll look into your suggestions and try to clean up my code. Thanks!!
Check out r/UltrasonicBear 's reply above (https://www.reddit.com/r/matlab/comments/8bcoif/help_with_reading_root_locus_plot/dx63xv1/); the lines *are* the possible locations of the poles and zeros. To help me personally wrap my mind around it, I liked the explanation on Brian Douglas's youtube channel: https://www.youtube.com/watch?v=CRvVDoQJjYI
So you are on the right track. I think the easiest would be to have the user use the function like: [q,s,c]=comp3a_001(10) where here the user inputs the angle 10. For this you then need to delete: clear clc x = input('Please enter an angle degrees between 0 and 360 '); also delete: sangle = 0 cangle = 0 x = 0 and change: fprintf('Angle is not between 0 and 360 degrees') to: error('Angle is not between 0 and 360 degrees') And lastly, since the error should trigger both if your below 0 or above 360 you should change the "&amp;&amp;" in: elseif x&lt;0 &amp;&amp; x&gt;360 to "||" Does this makes sense?
I really appreciate you taking the time to help me. So im running 64-bit (which is good) I've asked him if he used 16GB per core....he's a bit of a slow responder so ill let you know what he tells me if he tells me. It looks like its 2GB per slot: https://imgur.com/a/J80nu Its a acer aspire 5733-6696. I honestly may just get a different computer in the end, but I suppose if I can remove the RAM and put in 4+4, it might make a bit of a difference, at least for it to run and complete even if it takes a while. I dont know, what would you recommend? I feel like I'd lean towards an i5 with 8GB, they seem more common on their own out there. And yeah in reality if I'd need 16GB, I have no choice but to get a new computer if I want to run this and https://github.com/omrysendik/DCor/ 
Here you go. http://www.mediafire.com/file/duka2af36wu1015/exported_to_matlab_2015a.zip
https://www.mathworks.com/support/compilers.html you need xcode, please check the docs
I owe you my life bro &lt;3 &lt;3 PS: Nice 'easter egg' in the .zip ;)
if you have run `mex -setup` and then loading the library it would probably be worthwhile. If the library is C++ instead of C instead run `mex -setup c++`. Also, the syntax `[notfound,warnings] = loadlibrary(___)` might give you more info on what is going wrong. &gt; don't have Xcode but have the Xcode command line tools idk how touchy Matlab is with compiler support on Macs, but on windows itonly supports specific compilers. if `mex -setup` doesnt detect a supported compiler that probably means the xcode command line tools along arent enough and you need to install the full xcode suite.
Glad you enjoyed it. The link is now no longer valid. Have a nice day and good luck with your homework.
Thanks! Although I saw your comment after I started the download for Xcode (I hate Xcode, it's too big clunky) but I wasn't sure it would work it was a shot in the dark, but finally it worked. So I guess the lesson here is that Xcode is not that bad. I thought that I didn't need it despite reading that page because I had the commandline tools of xcode (so like clang, gcc, etc.) but after running the mex -setup command that jkool suggested, it was complaining to me that I never accepted the license of xcode, which I couldn't do without having desktop Xcode. 
&gt; I really appreciate you taking the time to help me Glad to help. Ive ended up learning a good amount about how computers work in an attempt to deal with problems that are laughably too big for my system, and its always nice to put some of that info to practical use. &gt; It looks like its 2GB per slot This is a bit less ideal, just cause youd have to buy 2x 4gb sticks instead of 1. Id see if you can actually get to the ram and then make sure it isnt soldered (id guess it isnt, i think it is mainly apple that soldered the memory in, but idk for sure). A lot of times there is a emovable panel on the bottom of the laptop that lets you easily get to the ram. If not, it might be a bit more effort and require some disassembly and reassembly of the laptop. &gt; I dont know, what would you recommend? So, from a quick seach on the internet, it seems you can get a compatable 2x4gb kit for [$60](https://www.amazon.com/SAMSUNG-10600-SODIMM-LAPTOP-MEMORY/dp/B0067GGPXC), thought it might be worth checking out the used market since you might be able to get a matching pair of used 4gb sticks for almost nothing. If you are planning on getting a new computer soon regardless and will never use the old one again, it probably isnt worth $60 (but $10-20 if you can find them used would probably be worthwhile). &gt; is 8gb enough Id ask your friend what memory usage he saw when running the code. 8gb seems like enough IF what you posted is the code's peak memory usage. It is entirely possible though that running for 30 minutes didnt even get you past the initial setup stage (running on swap is *really* slow even on much newer systems), and that you didnt get to the part with more significant memory requirements. Personally id have gotten a new system long ago, but i also work on problems that dealing with them in their full form (not a cut down version) basically requires a small supercomputer, so im not necessairly the best person to ask. &gt; I feel like I'd lean towards an i5 with 8GB, Id tend to suggest 16gb otherwise youll just run into this same issue again. its worth going on /r/buildapc if you have any desire to build a system (you tend to get much more for your money this way than buying prebuilt). IDK what kind of budget you have, but if it were me, id probably go with something like this. Theres a couple places you could scale back the cost, but those all come at a cost. [PCPartPicker part list](https://pcpartpicker.com/list/m82mgw) / [Price breakdown by merchant](https://pcpartpicker.com/list/m82mgw/by_merchant/) Type|Item|Price :----|:----|:---- **CPU** | [Intel - Core i5-8600K 3.6GHz 6-Core Processor](https://pcpartpicker.com/product/Mr2rxr/intel-core-i5-8600k-36ghz-6-core-processor-bx80684i58600k) | $237.59 @ SuperBiiz **CPU Cooler** | [Cooler Master - Hyper 212 EVO 82.9 CFM Sleeve Bearing CPU Cooler](https://pcpartpicker.com/product/hmtCmG/cooler-master-cpu-cooler-rr212e20pkr2) | $19.99 @ Newegg **Motherboard** | [MSI - Z370-A PRO ATX LGA1151 Motherboard](https://pcpartpicker.com/product/fjPzK8/msi-z370-a-pro-atx-lga1151-motherboard-z370-a-pro) | $89.99 @ Newegg **Memory** | [G.Skill - Ripjaws V Series 16GB (2 x 8GB) DDR4-3200 Memory](https://pcpartpicker.com/product/Cf98TW/gskill-memory-f43200c16d16gvkb) | $165.99 @ Newegg **Storage** | [SanDisk - SSD PLUS 240GB 2.5" Solid State Drive](https://pcpartpicker.com/product/8jH48d/sandisk-ssd-plus-240gb-25-solid-state-drive-sdssda-240g-g26) | $60.99 @ Amazon **Case** | [Cooler Master - HAF 912 ATX Mid Tower Case](https://pcpartpicker.com/product/C9zv6h/cooler-master-case-rc912kkn1) | $34.99 @ Newegg **Power Supply** | [EVGA - SuperNOVA G3 650W 80+ Gold Certified Fully-Modular ATX Power Supply](https://pcpartpicker.com/product/y88H99/evga-supernova-g3-650w-80-gold-certified-fully-modular-atx-power-supply-220-g3-0650) | $73.98 @ Newegg | *Prices include shipping, taxes, rebates, and discounts* | | Total (before mail-in rebates) | $738.52 | Mail-in rebates | -$55.00 | **Total** | **$683.52** | Generated by [PCPartPicker](http://pcpartpicker.com) 2018-04-11 12:36 EDT-0400 |
Let us know if you get it all working :)
From MathWorks: * [How do I activate MATLAB?](https://www.mathworks.com/matlabcentral/answers/99457-how-do-i-activate-matlab) * [Why am I continuously prompted to activate when I try to launch MATLAB?](https://www.mathworks.com/matlabcentral/answers/106141-why-am-i-continuously-prompted-to-activate-when-i-try-to-launch-matlab) * [Contact Support](https://www.mathworks.com/support/contact_us.html) Best of luck.
I don’t understand the forum link you provided.
Have you tried profiling each method using the built in profiler? Add the -memory tag to see memory usage as well
It started working as soon as I accepted terms and conditions of Xcode. 
Thanks for your help. I’ll give this a try. 
The whole purpose of the exercise to have us get more familiar with functions. Should I be asking for the input before I call the function? Thanks for your help. 
Yes. In a top level script have the define x line then call the function later in the script.
I actually gave *two* links to the MATLAB Answers "forums"; the first describes the activation process generally, and the second describes solutions to the specific problem you're experiencing. The third link is a catch-all, in case the first two links don't help you: how to contact MathWorks Support. This is probably your best option if you're having trouble understanding the info available in the first two links.
Mathworks support is fantastic. Contact them to remedy your issue. This is assuming, of course, you/your school actually has a valid license.
No, they do. 
Look at rowfun()... or cellfun() since a table column containing strings is a cell array of strings.
That's the thing, I can't determine the stable region for the K value. How did your plot look like?
But the question says open-loop, do I go for closed-loop?
Looking back at my work, yes I used the tf() to create G, but that didn't include K, how would it know where K goes? I reluctantly put K=1 into rlocus(G/K); (that's the only place I introduce K) Maybe there's a way to put K in at the denominator using tf() but I can't figure it out
Thank you so much for trying anyway, maybe I translated the question wrong, the format seems off in the word doc
It seems as though you've written some pseudo-code without familiarizing yourself with the syntax that Matlab accepts for scripts, functions, and plots. I'd recommend checking the sidebar for tutorials on getting started in Matlab and the form that functions vs. scripts should take on.
In your COMMAND window, type help plot help for help function Alternately, try doc plot doc for doc function Wasn't sure which one you needed syntax for, but there's two ways to get each of the three.
Mathworks has tons of documentation on their built in functions (such as 'plot'). The reason your script isn't working is because it's the wrong kind of input. It's actually looking for specific points. Here's one way to approach the problem (although probably not the most elegant way, it's pretty simple/intuitive). Start by creating your matrix of k values: `k = [1:0.01:5];` Now you have "saved" values at these steps. Next is to run through iterations of each k-value. `for i = 1:length(k)` Now add your if/elseif criteria here, but place "(i)" after all your ks and xs. Now, as your script iterates through each entry in your k matrix, it will analyze it and create a corresponding x-coordinate. `end` Now you should have two matrices (k and x) that are the same size. at the end of your script, you can type `figure; plot(k,x, '*')` When you run your entire script, you should see your graph. Alternatively, you can manually create the graph by running the script (without the figure; plot(k,x) at the end) and then type those in the command window. As some general housekeeping, it's usually convenient (particularly when you're starting out anyways) to put `clear all, close all` on line one of your script. Every time you run, it will close all open figures and delete all your saved variables from your previous runs. You're basically starting from scratch every time you run your script. 
Did you read the documentation for `plot`? You can't plot a script. A script is a file containing text that provides a sequence of operations to perform. You can plot numerical data. Also, you aren't assigning to `x` the way you want to be. Read the documentation regarding vectors and indexing. The `=` symbol is for *assignment*, meaning it assigns the value of the expression on its right hand side to the variable name on its left hand side. Read your code line by line, and think about what you're doing. You assign a new value to `x` on each iteration of the loop. What happens if you draw (by hand) a plot of a single value? 
If it's due soon you probably should have paid attention when this material was taught in class, or started early enough to learn a little. I turned in countless late assignments in college. You'll live, and next time start earlier. 
Wow. That's very helpful advice! All of my MATLAB issues are solved now!
I think the most efficient and readable way is to use logical indexing in the following way: plot(xLocations(eventType==0), ... % and eventType~=0 But as said at another place, the best way to be sure is to profile it (preferably with real world data). Creating a « eventType » logical array may be faster if you have to reuse the same original eventType over and over. If you could change the uint8 to logical from the beginning, it could be event better but I guess from your comment « due to the nature... » prohibit that. Definitively don’t call find() four times as in your other example. Quote from the doc page: &gt; To directly find the elements in X that satisfy the condition X&lt;5, use X(X&lt;5). Avoid function calls like X(find(X&lt;5)), which unnecessarily use find on a logical matrix.
Don’t use “clear all”, for almost every case “clear” is sufficient. 
I've had this happen when I tried opening MATLAB without being connected to the license server. Make sure you have the license file in the right location and that you're connected to the schools network, if that's required to access the license server.
I've spent hours looking up how it's done. This is not "low-effort homework hunting".
Thank you. I appreciate the feedback. 
I haven't had much experience with profiling or the memory tag. I'll check that out. Thank you for the advice. 
&gt;plot(X,Y) creates a 2-D line plot of the data in Y versus the corresponding values in X. &gt;If X and Y are both vectors, then they must have equal length. The plot function plots Y versus X. literally first two lines of the [documentation](https://www.mathworks.com/help/matlab/ref/plot.html) for plot tells you what you need to input. Furthermore, there are several examples (with code) demonstrating different types of things you can do with the function. If you're struggling, talk to your professor. 
&gt; With running neural networks like this, is it more of a number-of-cores thing, or again a straight up RAM issue like the sketch synthesis? Its hard to say without running the program and seeing what memory usage looks like. RAM is the type of thing where either you have enough and you are fine, or you dont and things get rough real fast. Best way to see if you are memory bound is to run it and look at the memory usage. If you are at &gt;3 gigs used and the "committed" memory is more than your total memory then you are using swap space for *something*. It is harder to tell if it is just inactive stuff that is stored on disk or if the stuff actively needed for the current computation is partially stored on disk and is getting reloaded/resaved multiple times (this is the really problematic use case). If your hard drive usage is at or near 100% then this (reloading/resaving actively needed memory to disk) is probably happening, but that doesnt necessairly mean that 100% of the excess "committed" memory that is stored on disk is being actively used (some will be things that you dont actvely need but need to still be available for later operations). It does mean that you need more RAM than you have by some amount.
Well now you gotta tell the class!
No worries. Here's a good article that goes over the specifics https://undocumentedmatlab.com/blog/undocumented-profiler-options
Please don't give people complete answers to homework questions. Also, putting `clear` at the top of your scripts is a bad habit that promotes sloppy variable handling. It's better to simply write code that isn't flummoxed by preexisting variables. 
I was being sarcastic.
&gt; If you could change the uint8 to logical from the beginning, it could be even better If you were thinging in terms of memory usage, this isnt actually the case (unfortunately). Matlab stores logicals at 8-bit / 1byte values, just like uint8's are stored. You can "pack" the logicals into uint8s and make them take up a factor of 8 less space, though you have to unpack them before using them, so this only makes sense for large logical arrays that arent needed for a while. clear all clc % generate random logicals l % numel(l) should be a factor of 8, otherwise youll need to zero-pad l = (randn(256,256) &gt; 0); whos % pack l into uint8's lp = uint8(2.^(0:7)*reshape(l,8,[]))'; whos % unpack lp lu = false(numel(lp),8); for nn=1:8 lu(:,nn) = bitget(lp,nn); end lu = reshape(lu',size(l)); clear nn whos % confirm l == lu nError = nnz(double(l)-double(lu)); if nError ~= 0 warning(['WARNING: ',num2str(nError),' values did not match!!!']) end &gt; I think the most efficient and readable way is to use logical indexing in the following way ... I was curious and ran a few tests. Of the ways I could think of, it appears that : * `bitget(eventType,1)` is fastest, followed by * `logical(eventType)`, `~~eventType`, `eventType == uint8(1)` and `eventType ~= uint8(0)` (these 4 are all about the same speed), followed by * `eventType == 1` and `eventType ~= 0` (these are also about the same speed) You would have to use this a lot with rather large arrays for it to make much of a difference though. % test logical conversion speeds l = randn(256*8,256*8)&gt;0; [t1, t2, t3, t4, t5, t6, t7]=deal(0, 0, 0, 0, 0, 0, 0); nTrials = 1000; for nn = [1:nTrials] % Method 1 ll = uint8(l); tic ll = (ll == 1); t1=t1+toc; % Method 2 ll = uint8(l); tic ll = (ll ~= 0); t2=t2+toc; % Method 3 ll = uint8(l); tic ll = (ll == uint8(1)); t3=t3+toc; % Method 4 ll = uint8(l); tic ll = (ll ~= uint8(0)); t4=t4+toc; % Method 5 ll = uint8(l); tic ll = logical(ll); t5=t5+toc; % Method 6 ll = uint8(l); tic ll = ~~ll; t6=t6+toc; % Method 7 ll = uint8(l); tic ll = bitget(ll,1); t7=t7+toc; if mod(nn,100) == 0 fprintf('Trial %i of %i done. \n',nn,nTrials) end end fprintf('\nMethod 1 took %.5f Seconds \n',t1) fprintf('\nMethod 2 took %.5f Seconds \n',t2) fprintf('\nMethod 3 took %.5f Seconds \n',t3) fprintf('\nMethod 4 took %.5f Seconds \n',t4) fprintf('\nMethod 5 took %.5f Seconds \n',t5) fprintf('\nMethod 6 took %.5f Seconds \n',t6) fprintf('\nMethod 7 took %.5f Seconds \n',t7)
Just my kitty cat: https://i.imgur.com/fqdPwym.jpg
"weird text" like an error message that you're assuming you shouldn't bother to read? There's no guarantee that all files types can be read by Matlab easily. I've never heard of that file type, and a 3D image isn't a particularly widespread data type. It's entirely possible that the file format is proprietary, and reading it would require weeks or months of reverse engineering. Even if it's a documented standard file format, somebody has to have written code to read its contents and interpret them as Matlab data types. If no such functions exist in Matlab natively, you can check out the file exchange. If you don't find anything there... Congratulations, you get to write it yourself! 
Multiple options on [Mathworks](https://www.mathworks.com/matlabcentral/fileexchange/29344-read-medical-data-3d)
You seriously need to look at your own code and think about what each line is doing, and whether it's something you actually want done. &gt; function [quad,sangle,cangle] = comp3a_001(x) What do you think this means? Is x an input variable? &gt; clear &gt; clc Why? What do you think this does? &gt; x = input('Please enter an angle degrees between 0 and 360 '); Oh. Okay, so x isn't an input to this function? Then why is it in the function declaration on line 1? What do you think that does? Do you want to do that? You seem to be attempting to program by using the shotgun approach. You're just writing things that you know are vaguely related to the topic, hoping you'll just stumble onto the magical incantation that makes the right answer. Matlab is not some inscrutable nonsense language that you just have to stab at blindly, like trying to guess the name of rumplestiltskin. Each operator has a specific meaning, and that meaning is well documented. In stead of writing code and hoping it dies what you want, work in the other direction: figure out what you want to do, and then write code that does exactly that. If you don't know how to express your instructions in the language, search the documentation. 
You don't understand English? Or there's something specifically that isn't clear to you? 
Did you read the function before pasting it? It's pretty obvious from the first line. 
Do you know how to express that linear relationship mathematically? Do you know how to generate a random value between 0 and 0.2?
Plz 
The command window should tell you what you need to do to avoid this when your graphics reaches its limit after you load it back up after the failure. 
Yeah I really dont know anything about code just need to filter images
The best easter egg.
Nice to have done the tests (and thanks for sharing the results/scripts) I think that using bitget is slightly less readable (imagine someone new looking at the code, he may asks himself "what are we doing here".) but of course if performance is a major need, than using it with a comment saying why it's done is ok. (I'm also curious about one thing, I don't think that you can have bitget returning a logical, only integer types. I have to double check that. And you need a logical to do logical indexing. How do you do?) I would say that using "== uint8(1)" would be my choice of compromise after reading your comparison of speed (and personal preference in term of style of code) &gt; &gt; If you could change the uint8 to logical from the beginning, it could be even better &gt; &gt; If you were thinging in terms of memory usage, this isnt actually the case (unfortunately). Matlab stores logicals at 8-bit / 1byte values, just like uint8's are stored. I was thinking in terms of efficiency (both speed and quantity of code), if it's already logical, you can use it directly for logical indexing without having to do any transformation (except for taking the negative when needed) So my personal conclusion for OP would be: 1. check if performance is really a bottleneck at this level first (with profile, on real world data in with real world script, to identify where you have performance issues, if any) 2. if no, chose the one that seems the most readable (while avoiding find. I think it's one function too much. Logical indexing is really a nice feature) 3. if yes, chose the most efficient, and comment it if it's less readable than another choices. (the comment should say what it is doing, and why the most readable way to do it was not used. And be as close as possible to the place where you do it)
So turns out I screwed up with the `bitget` option - this actually outputs a `uint8` array (that, in this case, is identical to the input). Id probably tend to either choose `logical(l)` or `l == uint8(1)`. It is probably good practice to make the value your comparing against the same data class as the data if the data isnt doubles. If Matlab let us typecast to logicals that would be even faster (though this would be problematic in many other situations). THough, its hard to imagine a situation where a conversion to logicals was the limiting factor...my computer, averaged over 1000 runs, converted the values to logicals at a rate of ~1.9 billion values per second, meaning were talking about ~1.5-1.6 clocks cycles per conversion (combined/averaged over all cores). Its hard to do much of anything faster than that...
This should work (i think), and should run a reasonable amount faster since the loop has been vectorized. mutatedPop = (newPop); %defining members to mutate if mutationRate &lt;= size(newPop,1) %if the mutation rate is &lt;= the pop size mutatees = randperm(size(newPop,1)); mutatees = mutatees(1:round(size(newPop)/mutationRate)); j = randi(size(mutatedPop,2)); %generating random numbers for spaces vs caps vs lower FirstRoll = ceil(53*rand(numel(mutatees),1)); % indicies of changes ii=[mutatees(FirstRoll(:) == 1), mutatees(1 &lt; FirstRoll &amp; FirstRoll &lt; 27), mutatees(FirstRoll(:) &gt;= 27)]'; % replacements --&gt; kk kk=[char(32*ones(nnz(FirstRoll == 1),1)); char(ceil(26*rand(nnz(1 &lt; FirstRoll &amp; FirstRoll &lt; 27),1))+96); char(ceil(26*rand(nnz(FirstRoll &gt;= 27),1))+96)]; % convert replacements to cellstr kk=cellstr(kk); % add missing spaces back into kk if any(cellfun(@isempty,kk)) kk{cellfun(@isempty,kk)}=' '; end % replace values in mutatedPop with replacements [mutatedPop{[ii],j}] = deal(kk{:}); else mutatees = randperm(mutationRate); mutatees = mutatees(1); if mutatees &lt;= size(newPop) end end 
Wouldn't it be just easier to turn it into an array for the plot?
It really really is, or at least you should hope it is. The other option is you are just very slow. 
&gt; Also, putting clear at the top of your scripts is a bad habit that promotes sloppy variable handling. It also tends to destroy variables you might have intended to keep in your workspace, or worse, it does this to somebody else when you share your script with them and forget to mention your little surprise. It's better to simply write code that isn't flummoxed by preexisting variables. Clear is fine in scripting languages, people should read the script before running other random peoples scripts
loop over 1 dimension to reduce it to a 3d valume, then use [one of these functions](https://www.mathworks.com/help/matlab/volume-visualization.html). also, unless you are using this to derive something, id avoid using symbolic variables. Instead, do something like function(x1) for n1=1:10 for n2=1:10 for n3=1:10 f=f+r(n1,n2,n3).*sin((pi/5)*(n1.*x1))*sin((pi/5)*(n2.*x2))*sin((pi/5)*(n3.*x3)); end end end end
How is it licensed? network license, local license? Do you have an account with mathworks with the license on?
What would you imagine this looks like? Can you draw a picture of what you're expecting?? Let's take a sphere that grows over time - this is a four dimensional function. x,y,z,t. If you took 2D slices of the x,y,z data, then you'd get a "slice" of the sphere - a cross section. If you plot the cross section at t=0, when the sphere radius is zero, then you get a point. As you continue to take slices, you wind up *filling* a figure, because you're drawing concentric circles, from r = 0 to r = rMax, at times t=0 to t=tMax. The only way you'll get that to really make sense or be readable is to plot the 4D object in 3D. If you wanted a planar drawing, then you could use *color* to represent the third dimension. In this example, the 3D planar plot of your 4D object would still look like a filled circle, but now the fill would be a gradient, where the shading in the gradient corresponded to the sphere radius over time. I would highly encourage you to *sketch* what you're expecting the plot to look like. If you can give us a sketch, we can tell you how to generate the corresponding figure in Matlab. 
If you're going to use a programming language to do something, you're going to have to accept that you have to learn to program. Otherwise get photoshop or something. 
It's showing a 4x4 matrix, but when I input size(T) it says it's a 1x1 matrix. Anyone has an idea why that might happen?
Yes, its a Network License. The University told me to use the VPN, i'm signed into the VPN but not sure what to do. It's still telling me to Activate repeatedly. 
I've connected to the VPN. I am going to reinstall it.
Look at the dimensions of the vector produced by Kr*(blackBack(:,:,1)); Then look at the dimensions of OUT(:,:,1).
So it seems it hovers around 2.7GB with the neural texture synthesis: https://imgur.com/a/803u0 The author of this code said that he was using a GPU server, and not a CPU server. He suggested a GeForce 1080....not sure how that compares in number of cores. Whereas the author of the sketch synthesis said I definitely need CPU and not GPU. The neural texture synthesis does indeed run, it just takes forever. Thanks for all the help.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/DcNFXcW.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dx8l1lc) 
Using strlength and extractAfter: % some example table t = table; t.string1 = ["abcde";"abc"]; % extraction t.string2 = extractAfter(t.string1, strlength(t.string1)-2); % result t 
If you are using [edfRead()](https://www.mathworks.com/matlabcentral/fileexchange/31900-edfread) you'll be given header information and data for each file. From there you should be able to cat() together the data into one much larger matrix. The marker could be an additional row in the new matrix.
Hmm... I haven't tried it, but you might be able to do this by driving a [controlled voltage source](https://www.mathworks.com/help/physmod/sps/powersys/ref/controlledvoltagesource.html) with an [arbitrary waveform](https://www.mathworks.com/help/daq/generate-an-arbitrary-waveform-using-waveform-function-generation-channels.html).
Consider using string: &gt;&gt; string('abc ') ans = "abc "
Before you try any of this, have an extra copy of the files. 
because surely it would round to zero? which is what it is already doing?
Wait I've misread your question. You have something wrong. I have MATLAB open and I just did f3 = -0.0002662 f3 == 0 And the output was false (which is correct). So something else is wrong on your code
So after reading your comment I went back and did a little more reading on function. I feel like a total idiot. I was completely using it wrong. There was no need to prompt the user for information inside the function. Thanks for your help. 
Very surprised to see this, are you sure there isn't some other mistake since matlab would never return true for -0.0002662 == 0
yeah my problem seems to actually be coming from the for loop and if statement i have.
I can't get it to work. Anyways, what I am looking for is something that looks like [this](https://imgur.com/a/AVTXy) if we take a slice of XY plane for example. 
That sounds like a reasonable assumption.
That is true, but I will say in my 10 years of extensive matlab use, the times I would have benefitted from `format shortG` vs `format short` are probably about 50:1
&gt; But I think the number of the cores is the bottleneck yes and no. ram is the type of thing where either you have enough or your dont. If you have enough adding more doesnt help, if you dont it will be the biggest bottleneck in whatevver you want to do. So, If you have sufficient memory then more cores is the bigger bottleneck (though using more cores increases the memory requirements as well). If you dont have enough memry then memory is the bottleneck.
&gt; He suggested a GeForce 1080....not sure how that compares in number of cores. GPU's are a whole different beast. To make a not-so-computery analagy- imagine the cpu as a factory that makes a bunch of different things at an "average" speed. the gpu is an offsite facility that only makes a couple of things and that requires extra time to ship materials to the offsite facility and to ship the finished product back, but (once it gets the raw materials) it makes the few things it specialized in 30x faster than the "general use factory" could. In terms of raw power a GPU blows away even the best high end modern CPU's, but getting data to and from it (especially when limited to the tools available in matlab) is tricky, and not every problem will run well (in particular, it requires problems of a class called "embarrassingly parallel", meaning that you can split up the operation between thousands of cores and apply the same operation on each core to each subset of data). IF you can make it work it is much much faster than a cpu, but the "making it work" part is much harder too.
Right, that makes sense. Well, only one way to find out! A laptop with 16GB of RAM!
I believe this is the package: http://nn.cs.utexas.edu/soft-view.php?SoftID=23 wasn't too bad to find where the fitness of the different candidates was being calculated so you could change it to your target function.
As a side note - this made me realize that a fast and memory effective way to store multiple logical masks for a given variable is: mask1 = foo1(x) mask2 = foo2(x) mask3 = foo3(x) ... maskPacked = uint8(mask1)*uint8(2^0) + uint8(mask2)*uint8(2^1) + uint8(mask3)*uint8(2^2) + ... % note: if you have more than 8 masks they will need to be split up or you need to use uint16/32/64 instead You can then access the individual masks rather quickly via bitget(maskPacked,N,'uint8') % if 1 mask is going to be accessed more than the others, it should probably be stored in the 1st bit.
Hey I know the guy who wrote that function, what a coincidence. Anyway, your question is very clear. Cross-correlation can certainly be done to subpixel accuracy, but it's also got absolutely nothing to do with drawing lines on top of edges, or whatever it is you're trying to do. Can you be more clear about what you're trying to do? 
To reiterate, I want to be able to generate plots of the roughness near edges by taking the cross-correlation of the cropped image around an edge, and a template. I tried to explain it better using diagrams here: https://imgur.com/a/jxQj9? Please let me know if this is still confusing. Anyway, the point is, I just wanted to know if there was a way to get subpixel accuracy other than using the function in that File Exchange link, since `normxcorr2` only provides pixel accuracy
 int = 42 connection = arduino_package.connect() connection.send_integer(integer)
Yup. Look into Serial.readBytesUntil(), Serial.parseInt(), etc. As for Matlab, https://www.mathworks.com/help/matlab/matlab_external/getting-started-with-serial-i-o.html
&gt; for i1=1:10; dat(i1).a = randi(10); end The `dat(i1)` part is probably the problem. This creates a struct array, not a single structure.Matlab stores the data of a given structure/field sequentially in memory, but stores data from different fields / different structures (including different structure elements in a struct array) if different locations. The way you use `dat.a` is actually shorthand for `dat(:).a`, which grabs `a` from each of the individual structures making up the struct array and combines them. BUT, these are scattered throughout the memory space, so it takes a while to find them all (relative to if they were sequential). At any rate, try something like this instead numRand=10; maxRand=10; dat.a=ceil(maxRand.*rand(1,numRand)); ... a=dat.a; note: to access individual elements, use `dat.a(nn)`, not `dat(nn).a`
Not sure exactly what you're asking, but it looks like you never provide your callback function with any way to get the `panelHandle`. Typically this is done through the shared workspace of a nested function, or by the default input arguments that are fed to callbacks. Read the documentation on creating callback functions for more details. 
Thanks! Looks a but old but looks like a great place to start!