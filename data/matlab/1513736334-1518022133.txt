I use it for work all the time, but sometimes I use it for fun. For instance, a few months back an artist friend of mine had this idea for Fibonacci pseudo-fractals, but was drawing them by hand. So I wrote a script in MATLAB to [make a GIF](https://www.instagram.com/p/BVSDtYmAKtp/) of them. 
Simulation of chemical reactors and some heavy Statistics involving lots of matrices.
A way to launch Simulink
Anything NVIDIA. AMD won't work. The more cuda cores and memory the more you can do.
Simulation of signal processing and communication systems. 
Although it comes highly ill advised from this sub. Use the syms and dsolve to get an analytical solution for classes.
There is a floor to how much performance the card can offer while still actually offering a speedup over doing operations on CPU. Also only some operations will be faster on a GPU. What do you plan to use it for?
I use it to model and simulate industrial controls systems. Then I have a script that I run that converts all the Matlab code to PLC code. Is the controller not performing correctly? Do some system identification testing, then try to find the portion of the underlying model that's not reflecting reality. Once the underlying model is corrected, re-run the script that generates the controller and re-run the simulation in Matlab. Once simulations of the new controller looks like it rectifies the simulated real-world problem, run the script that makes the PLC code and send it to site for field testing.
If `x` is common to both functions, you can use the [`hold on`](https://www.mathworks.com/help/matlab/ref/hold.html) command: plot(x, y1); hold on; plot(x, y2); It's not super clear to me what your data looks like, but I would suspect this is what you're after. 
\^This. Also, I don't *think* Matlab inherently sends anything to the GPU. You would need the Parallel Computing Toolbox to send work to the GPU. The toolbox is not free. I would suggest giving [this page on GPU programming in Matlab](https://www.mathworks.com/company/newsletters/articles/gpu-programming-in-matlab.html) a read and ensure that your project is applicable to GPU programming. 
Hey thanks! exactly what I needed.
image processing projects at work.
Try compiling around a simple UI front end, then spit out error messages. Or, better yet actually, take your code and put it on a 2015 computer and run the code and do it in the matlab IDE. I don't think you're going to have a lot of problems, and if you have access to a 2015 machine via your workplace then try it.
Can you give me some examples of particle simulation &amp; fluid dynamic you did with Matlab? And how did you visualize them in Matlab?
Could you explain more?
So I like to (try to) make interactive sculptures and puzzles. I use the image processing toolbox to make programs that perform things like object recognition and tracking. I use signal processing techniques in Matlab to find innovative approaches to synthesis. The end goal being my own musical instrument. These Matlab scripts are the logic I refer to when I start writing the code in C I've made a small granular synthesizer and an image based midi controller. This isn't my job or anything I'm just a hobby maker but my EE course provided Matlab as an awesome preliminary design tool 
Currently creating an analytical model of a specific type of magnetic atom trap to reduce computation time compared to micromagnetic simulations. Will hopefully be comparing my model's results to real-life experiments in the next few months.
Lots of things: signal processing, data visualization, automated testing. I've even written applications that compile to an executable for customers to use. 
I'm a pharmacomatrician, so predicting the time course of drug concentration and effect in the human body. It's not my primary software, but I use it every once in a while. 
Thanks for the reply, appreciate it. Would it be possible for me to PM you instead? Don't follow WEC too much but thats awesome you're working with a LMP3 team.
Designing and presenting stimuli for fMRI experiments and fMRI analysis. Also use it for analysis of electrophysiological data.
What do you use Matlab for? 
Currently as a calculator but in more fun uses, I get to program things for the government. 
I did a discrete element model of magnetic nanoparticles. Basically computing forces on each particle, then integrating position over time. Visualization was done a variety of different ways, but for the particles themselves I just plotted circles with the corresponding radii. 
Creating physics simulations
I answered above. But may I ask why you are curious?
Cool! I’m a beginner to matlab (got the education version through my school and am currently working through a stack skills course). I’m amazed at all of the things that I’m learning that matlab is capable of
If you don't know how to do a mathematical operation, Matlab can't really help you. It can only do what you tell it to do, so you'll have to go back to your textbooks and figure out how a tangent plane is calculated. 
I know how a tangent plane is calculated, but using the same process in matlab results in something that does not look like a tangent plane. I am using surfnorm to find the tangent plane. 
In order of difficulty to implement: Easy - They're just annotations. Double click the background, and you'll get a textbook you can write in. These are essentially comments. The one on the left might have tex mode enabled, and they're doing some advanced formatting. Medium - they're just edited in. Hard - Someone created a block which sets the values in the relevant workspace (base, model, or even data dictionary), and displays the values on the block. 
I'm not op. I'm just providing you with all the context that everyone else in this thread has. 
Run the data through the upper half and bottom half separately. Use something like surfc or meshc on both with hold on set. 
Since you were so helpful with the first question I have another, ive been reading a book on algo trading that uses matlab and the author left a page full of examples used within the book as well as data he used. The files consist of .m, which I can download and store in my matlab folder just fine, and .mat which I cant seem to install. I know .mat is custom to matlab but is there anyway to download a .mat file off the internet? Right clicking the file didnt work.
It's just a file like any other. You should be able to download it like any other. It doesn't need to be "installed". Maybe try another browser? 
yea I had a feeling something was off. Im used to just being able to click links and having an installer open but when I click this one a text file of gibberish opens, like its trying to execute instead of install. Using chrome, ill try firefox now. 
I don't see how you'd use surfnorm in this instance. Have you read the documentation for it? It's for plotting. A tangent plane is only tangent to a single point on your function, so you won't be able to get a tangent plane over a whole range, as you describe. Before you start writing code, you need to know exactly what you want to do. Do you know how you'd calculate this by hand? 
On my phone, but I'm pretty sure it's just fileData = load('C:\path\to\your\file.mat');
Yes cross product of the derivative of the vector in terms of variable u and variable v. Choose a point (u, v) and plug it in. Use that as the normal vector. Then tangent plane is a(x-x0) + b(y-y0) + c(z-z0) = 0 where &lt;a,b,c&gt; is the normal vector.
Sent you a PM
There is the sphere command. 
Okay, so do that. Have you tried to write code that does that? 
yes of course, PM is better
A .mat file is just a data store. It shouldn't have to install or execute, just download and open in Matlab.
Lol nobody ever has a plan. &gt; "Matlab won't solve my calculus problem!" How would you do it by hand? &gt; "I have no idea"
Right click -&gt; "Save As" or "Save Link As" or "Save Target As"
&gt; It doesn't seem like the normal contour functions work on this example. How so? *What did you try?*
Nevermind, I got it!! Sorryyyy
You're using `set(d5, 'Visible', 'off')`, but you do `run d5.m`. The call to run `d5.m` is running a script, not creating a figure, but I'm assuming that you create a figure handle at some point like: d5 = figure(); Generally speaking, I wouldn't name a variable the same as a function or script, but that's a side note. If you want the figure to be invisible when it loads, just set that property from the start: d5 = figure('Visible', 'off'); 
Do i put it in the OpeninFcn or the OutputFcn ?
You're not showing us how or where you're creating the figure, so I can't tell you what to do. All I know is that, somewhere, you create a figure and assign the handle to a variable called `d5`. This *must* happen or you would get an error when you tried to `set(d5, 'Visible', 'off');`. Look inside the `d5.m` file. Ctrl+F and look for `figure`. Wherever `figure` is called, add `'Visible', 'off'`. I don't know what you mean when you say "d1-d5 are function files [you] created through GUI." Do you mean GUIDE? If it's a GUIDE script, the figure creation should happen on one of the first couple lines in the `m` file - again, just open the file and look for it. 
yes sorry I meant GUIDE.
Okay, figured I'd go through GUIDE myself as I haven't used it in ages. It looks like, based on the M file that gets generated, you can pass inputs to the M file, and those get passed along to the figure when the figure is created. So, to answer your question, if you wanted to have the figure be not visible, you should set that when you call the script. Instead of using the `run` command, just call the script directly: d5('Visible', 'off'); Do the same for the others.
but that's the issue, I need to run all of them at the same time but preferably only showing d1
A place to begin would be to post what it's suppose to look like and what you get as well as your code 
You can't run them all at the exact same time. You can do something like: d5('Visible', 'off'); d4('Visible', 'off'); d3('Visible', 'off'); d2('Visible', 'off'); d1; This would load all of them, *in sequence*, with 2-5 turned invisible and d1 visible.
Oh sorry I wasn't aware the code would also load the script, it works thanks for the patience!
edited my first post
Try collect(G,z)
Also your getting it as a fraction try double(collect (G))
 &gt;&gt; double(collect(G)) Error using symengine DOUBLE cannot convert the input expression into a double array. Error in sym/double (line 643) Xstr = mupadmex('symobj::double', S.s, 0); 
Glad to help! :D 
Matlab is exactly right. If you divide both the numerator and the denominator by 625000 and round the coefficients off, you will get the answer in the figure you linked. For example, -2373500/625000 = -3.7976 for the first numerator coefficient.
Yeah, but the question is why it gives me those factors and not just the simplified ones?
perhaps because integers are easier to work with versus floating point numbers? I'm just guessing.
is there a way to get the result with the first factor equal to one? when I try to divide all the numerator for 625000 it gives me z^3/10... sorry for the noob question.
I do not know. Sorry. And it's not necessarily a noob question. If the result of collect(G) was an array it would be much easier for me to work with.
sorry about that i'm use to arrays. I found something that may work vpa(G,5). You can put any number instead of 5 as well to the amount of sig figs you want.
You have mistyped. 625000*z^3 divided by 625000 is 1. That is why you need to divide by 625000: it is that number which will remove the coefficient from the leading term of the polynomial.
Well, this question was deleted so, for anyone else coming late, the tl;dr was that OP wanted to suppress figures when the figures are ones created with GUIDE. The key is that the *script* associated with the GUI can accept inputs, and the script passes those inputs to the figure. So, for example, if you used GUIDE to create a `myGUI.fig` file, there is also an associated `myGUI.m` file. If you wanted to start it with the figure suppressed, you can just call myGUI('Visible', 'off'); The GUIDE tool uses the script name as the handle name. This means that, later, you can turn the GUI visible with: set(myGUI, 'Visible', 'on'); Hope that helps some future visitor.
The correct answer is the one that doesn't round. A floating point number is generally not *exactly* a correct decimal number, it's an *approximation* of a decimal number. If you want to make your code look like the image to which you linked, I would first split the function into numerator and denominator: [num, den] = numden(G); Then I'd get the coefficients in `z` for those: [numCoeffs, numTerms] = coeffs(num); [denCoeffs, denTerms] = coeffs(den); **A word of warning here**: I submitted a bug to Mathworks that they have sat on. The `coeffs()` function returns coefficients in **ascending powers** of `z` if you don't ask for the `terms` output, and it returns coefficients in **descending powers** of `z` if you do. Now, that said, just re-express the answer such that you have a coefficient of one for the biggest power of `z` in the numerator: newNum = sum(numCoeffs.*numTerms/numCoeffs(1)); newDen = sum(denCoeffs.*denTerms/numCoeffs(1)); newEqn = vpa(newNum/newDen); pretty(newEqn); Whoop there it is.
I just met with MATLAB. So, I wonder why people use MATLAB because you know that it has a lot of extensions.
Maybe. You won't use it after your education.
I think that Python can supplant of MATLAB in next years.
Cool!
Are you coding with C, and you convert your C codes to PLC with MATLAB? 
Thanks, I've PM'ed you now cheers.
sounds really interesting. do you have any videos online showing the results?
Awesome!
Neat! Can you upload the script?
Thank you so very much for your proposed solution. I love you. (no homo, and even then, uh well THANK YOU)
You ought to read this https://en.m.wikipedia.org/wiki/Bareiss_algorithm And the referenced paper
Non-Mobile link: https://en.wikipedia.org/wiki/Bareiss_algorithm *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^130644
**Bareiss algorithm** In mathematics, the Bareiss algorithm, named after Erwin Bareiss, is an algorithm to calculate the determinant or the echelon form of a matrix with integer entries using only integer arithmetic; any divisions that are performed are guaranteed to be exact (there is no remainder). The method can also be used to compute the determinant of matrices with (approximated) real entries, avoiding the introduction any round-off errors beyond those already present in the input. During the execution of Bareiss algorithm, every integer that is computed is the determinant of a submatrix of the input matrix. This allows, using the Hadamard inequality, to bound the size of these integers. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Very cool. 
Thanks.
Nice job, although I would suggest the following improvements: on line 16: RN = 0.5*randn(n,1); NS = transpose(RN) + S; If you switch arguments in the randn function, the transpose in the next line becomes unnecessary. Also, you can write the transpose shorthand by using the .' operator. Line 30: m = max(ck); for i = 1:n if ck(i) &lt; 0.95*m ck(i) = 0; end end Can be replaced by: ck(ck &lt; 0.95*(max(ck))) = 0; Look up logical indexing and vectorization and try to avoid loops in matlab where possible. Similarly on line 40: for i = 1:s ak(i) = 2 * real(ck(i)); bk(i) = -2 * imag(ck(i)); end Can be replaced by ak = 2*real(ck(1:s)); bk = -2*imag(ck(1:s)); I'll leave simplification of the last for loop as an exercise for you. Some other remarks: the return at the end of the script doesn't actually do anything now. You could use return in a function to end it prematurely. Furthermore it is not necessary to say "hold on" multiple times, once per figure will do. Oh and on line 49, the operator += doesn't actually exist in matlab. 
Thanks a lot for the feedback! &gt; Look up logical indexing and vectorization and try to avoid loops in matlab where possible. Whats the reason for avoiding loops in matlab? Are the alternatives faster? Maybe I am biased from my programming experience but I think loops improve the readability of code.
Matlab, matrix laboratory, is optimized for matrix operations. So using matrix operations instead of loops is prefered, because it is faster and better coding practice. As an example I ran your first loop, where you set some complex coefficients to zero in matlab a bunch of times and got an average time of 0.017 seconds. Then I tried my suggestion and I got 0.009, so roughly a factor 2 difference for this particular case. For small loops like this it won't matter that much, but if you construct larger code and run times are nearing seconds or minutes then the difference will become very noticable. Your argument that it improves readability of code is a fair one, but imo that depends on your preference. For example I could rewrite my suggestion to be more clear as: ck(ck &lt; 0.95*(max(ck))) = 0; into m = max(ck); condition = ck &lt; 0.95*m; ck(condition) = 0; Instead of using a one-liner.
Got it, thanks for your help!
Why do you take the real and imaginary parts and rebuild the spectrum, instead of doing the inverse fourier transform after filtering the frequency spectrum?
I haven’t programmed in MATLAB in a while, but I seem to remember being able to attach things to the ‘handles’ var that gets passed around via the callbacks. 
get(handles.SliderName, ‘Value’) will return the value of SliderName. You can call this inside your UpdateAllImages() function for each of the sliders.
something that should work is to have the a function called updateAllImages(handles) get called after the callbacks of all the sliders. for example, something like: function sliderOne_Callback(hObject, eventdata, handles) updateAllImages(handles) function sliderTwo_Callback(hObject, eventdata, handles) updateAllImages(handles) etc. function updateAllImages(handles) value1 = get(handles.sliderOne,'value') % or whatever the code is value2 = get(handles.sliderTwo,'value') axes(handles.axes1) image1mat = function for axes1(data, other inputs from sliders) image(image1mat) axes(handles.axes2) image2mat = function for axes2(data, other inputs from sliders) image(image2mat) Not sure if you need to put the "guidata(hObject, handles)" line at the end of the callbacks. also, if the GUI is slow, it could be because you're calling the updateAllImages "all the time". If that's the case, you can have a button for updating the plots that calls the updateAllImages function.
1. Normally the number of principal components equals to the number of the original variables, however if you have really high dimensionality (the number of observations isn't greater than that of the variables), the number of resulted principal components will be observations-1. This doesn't really matter, since regardless of their number, the principal components will always cover the whole variance in your data. 2. This is written explicitly in the documentation, that you linked: &gt;[coeff,score,latent,tsquared,explained,mu] = pca(___) also returns explained, the percentage of the total variance explained by each principal component I don't know why you assumed it is not the proportion of the explained variance. I already answered this, but yes, principle components always reflect the whole variance, regardless of their number. 3. Scores are basically your new variables (the principal components), you can use them as the original variables. PCA is basically a tool to "condense" most of the variance in your data into a few variable, the exact dimension reduction is done by leaving out the variables, that cover only a small part of the total variance. It is basically up to you how many components you "throw out", and the optimum is highly dependent on your dataset and goal. You don't project back your data, however there are transformations, like "varimax rotation" which rotates the principal components closer to the original variables.
A cell datatype is simply a container for other datas. There is a function called cell2mat which will unpack what's in your cell and try to put it in a matrix: Try cell2mat() 
Uh, basically R, G, B are the channels of an image. So they're in unit8 format. N to recreate the background image, I need the final vectors in unit8 format. Don't know if cell2mat() will help?
See if it complains about the number of rows or columns not matching. If it does complain then you cannot do the conversion.
See, what I'm trying to do is, I've 3 frames, I need to take individual pixels of the 3 channels of the 3 frames, find the median, n create a new frame with those values. I'm just stuck in creating a new frame with those values. Halp?
This is why you need to use cell2mat(). You are trying to do an operation on a cell that is used on a matrix. So converting it to a matrix should solve the problem. Just try yourVar = cell2mat(SR(2))
The first quick and obvious question: are your rows representing electrodes within a subject? If so, you want your PCA to do dimensionally reduction across electrodes for each time point. Doing it within time would make no sense. If 50 is the number of electrodes, make sure you have no more 50 scores. Plot a few and see if they look like ‘clean’ EEG time courses. Note, however, there are better ways. For example, PCA essentially enforced linear independence between components. Generalized eigenvalue decomposition does not. The second is more realistic given the data, and does essentially the same thing. 
Ctrl-a Crtl-i
You’re using curly braces in lines 45 to 47 so you’re creating cells of uint8. No idea why you’re making this code so complicated tho. 
I don't think hes making it Complicated intentionally. It's likely just the only way he knows of doing it, and it's causing problems, hence him asking for help. 
any CUDA-enabled gpu with a minimum compute capability of 3.0
Yes, I don't know if there's another way to extract the pixel values of "multiple frames" extracted from a video. I just made a cell matrix keeping each cell with pixel values of each image. And the problem is solved. I did a mistake with the braces in the last part.
A one sentence post isn't gonna get you much. Are you looking for someone to learn things alongside you, or a mentor who has more matlab knowledge than you? What is your past experience in programming? What is this "some Matlab stuff"? As it is, it sounds like you're looking for someone to spend time teaching you Matlab for free, and possibly doing your homework/assignments. If that's not what you mean, it would be best to clarify what you do mean. 
Ok thanks
https://matlabacademy.mathworks.com/ That should be free for you... it's not bad.
Did that second column get read as a cell array by any chance? That’s the only thing I can think of, but the csv file looks clean. 
Thanks so much! This really helped a lot. I was mainly confused by the fact that a couple of components can explain all the variance, especially since the original data was of such high dimensionality. This was further amplified by the fact that the generalisation analyses' accuracy scores dropped down hugely from ~55-60% to ~0-18% for classifying two conditions.
Should have clarified this. No, my rows are strictly observation/replications/trials within a subject. My columns reflect time embedded in space, specifically timepoints and electrodes. E.g., columns 1-600 electrode 1, 0-1200ms, 601-1200 electrode 2, 0-1200ms etc. Thus, 600timepoints*64electrodes=38400 columns. I see your point. So, am I right to assume that you would still suggest generalized eigenvalue decomposition for such data?
Thanks That’s what I thought of! Do you know how to solve this ? :)
Look at your data in the variables window 
What do you suggest ? :)
What does the variable GLEPA look like 
You should just use two plot commands. plot(x1, y1, 'Color', c1); hold on; plot(x2, y2, 'Color', c2); The "hold on" allow you to plot on the same figure again
Thank you! 
Hello again! Using [rand\(\)](https://www.mathworks.com/help/matlab/ref/rand.html) and a bit of control flow logic, you can achieve this within your loop: probability = rand; if probability &gt;= 0.5 match = 1; else match = 0; end Then use 'match' to do whatever you need to do to generate 'p' from your list or from some other list that doesn't match. Not entirely clear what you're doing here with 'match' and 's', but that demonstrates how to implement a probability of 50%. You can do it more cleverly and in fewer lines, but this way makes it clear what is happening.
Okay this makes sense. It terms of implementing it, I want the probe to match one of the numbers in the list 50% of the time. So if I were to generate a list of 3 numbers like this: for s = randperm(10,3)-1 % loop through randperm of 0-9, select 5 numbers disp(s); I would like the probe I then present to match one of those numbers 50% of time. Currently I'm presenting a one number randomly like this: for p = randperm(10,1) - 1 Would I instead input that piece of probability code to control the probe probability?
You could use something like what I typed above to determine whether to select an element of your 's' vector or generate a distinct random number. 50% of the time you would select a random element of your 's' vector, and the other half you'd generate a fresh one. You can read about what you can do with rng [here](https://www.mathworks.com/help/matlab/ref/rng.html).
Yeah that's called a classification problem. You could use something like a linear discriminator, or aggregated decision trees. This is all in the documentation. 
My research PI wants me to use regression trees (RegressionTree.fit) in addition to a variety of other algorithms (knn, svm, lda, binary decision tree etc.). Personally, I don't think we should be using it, but he insisted that I give it a try. 
How about a simple probit/logit?
If you aren't picky about it he colors, you could replace 'hold on' with 'hold all' and it will automatically use the ordering of the default colors 
Dude logit. Why didn’t i think of that... I googled “categorical regression” and didn’t find anything useful and gave up haha. Man i really need to take an actual statistics course
Alternatively to the HOLD function you can also use the graphic handles to get full control on the plotted lines: h = plot(x1,y1, ‘-‘, x2, y2, ‘-‘); % Or whatever compact syntax you prefer. set(h, {‘Color’}, {[1,1,0], [0,1,1]}); % The curly braces are necessary to indicate setting different colors for each handle. If you get series about plotting, object handles is the way to go.
About colours: MATLAB's standard colours for graphing multiple lines are absolutely terrible. You'll find that out once you start plotting 5+ graphs on the same figure. A great workaround for this is to use a user-made script called linspecer. All it does is generate a number of colours that are very distinguishable. For example: colorMatrix = linspecer(5) will generate a matrix that contains the RGB values for 5 very distinct colours. So you can then do something like this (suppose x and y are arrays with 5 rows and an 100 columns, each row being the data that you want to plot - so x1 = x(1,:) and x3 = x(3,:) and so on.): hold on for iteration = 1:5 plot(x(iteration,:),y(iteration,:),'Color',colorMatrix(iteration,:) end hold off This will plot your 5 data series on the same figure, each data series having a different colour generated using linspecer(5). You should compare that to what you would get if you let MATLAB use its standard colours.
Lol glad to help &lt;3 
I wrote a lot more, but took it all out because it boils down to this: Matlab is not a compiled language, it's a *scripting* language. This means that, when programming in Matlab, just imagine a command like `WaitForOS()` between each line. So, where you have something like: for i = 1:s ak(i) = 2 * real(ck(i)); WaitForOS(); bk(i) = -2 * imag(ck(i)); WaitForOS(); end I hope that you can see that your code is slower than if you just wrote: ak = 2*real(ck(1:s)); WaitForOS(); bk = -2*imag(ck(1:s)); WaitForOS(); Matlab's *commands* might be compiled, but the scripts are not, so Matlab has to wait for the operating system in order to pass the next command off to the processor. In your code, there are 2*s calls to `WaitForOS()`, in the optimized code there are just 2.
No, I'm coding with Matlab and I'm converting Matlab to C with Matlab.
What commands exactly are you doing? It's not clear. You're taking the `ifft` of the mean you found, and that gives you red, then you use `xcorr` on the red signal to get blue? 
+ I'm sorry I didn't explain myself well. I have my signal: x=randn(80000,1000); %1000 random signals, each 80000 samples length, (and then I filter it through a low pass filter with cut frequency of 2000Hz.) Sx=fftshift(fft(x)); %Obtaining my transform Sx=(Sx.*conj(Sx))./(800000*4000); Sx=mean(Sx,2); %this is my Power Spectral Density, it's almost a rectpuls Rxx=ifftshift(ifft(Sx)); % &lt;--- this is the RED output. %alternative: Rxx=0; for i=0:1000 Rxx=Rxx+xcorr(x(:,i),'biased'); end; Rxx=Rxx(40000:end-40000); % just a normalization in length Rxx=Rxx/i; % the mean of all autocorrelations. And when I plot this one, it gives me the blue plot. The last one is the right one, I'm sure, because if I plot a sinc with the same frequency it gives me the same result. The red one seems to be a little bit aliased, but if I plot the absolute value of both, red and blue, they are 100% identical! 
I would agree on the colors for pre2013 releases. Afterwards the colors are quite nice. LINES - the default color order - has 7 distinct colors which are visually well distinguishable and look ok. If you want to change the colors which are used, set the colororder property to another colormap of your liking. This will result in subsequent plotting commands cycling through this colormap instead of the one created by LINES - no need for loops. Built-in colormaps are for example HSV , JET &amp; GRAY. 
Here it is:) https://ufile.io/pmgzm
&gt; a cell array by any chance? I think I should use cell2mat, but I have no idea how :c
Looks like the data in columns are strings not numbers. Personally I would use R for things like this not matlab but that's your call 
I don't think you've posted everything; the code you posted does not generate the output you showed. Are you sure the inputs are `randn`? Can you use a `rng(0)` or something similar so we're working on the same random data set? What are you doing to `Rxx` before you make the plots? 
There's [this relevant pic](https://pics.me.me/hou-do-you-program-so-well-practice-it-must-be-29748064.png) from /r/ProgrammerHumor the other day.
This is the full code I write in order to obtain the two plots: Fs=80000; dt=1/Fs; t=-0.5:dt:0.5-dt; L=length(t); dF=Fs/L; Freq=-Fs/2:dF:Fs/2-dF; N=1000; x=randn(L,N); d=fdesign.lowpass('Fp,Fst,Ap,Ast',2000,2200,0.5,60,Fs); LPF=design(d); x=filter(LPF,x); Sx=fftshift(fft(x)); Sx=Sx.*conj(Sx); Sx=mean(Sx,2); Sx=Sx./(L*4000); Rx1=ifftshift(ifft(Sx)); figure; plot(t,Rx1); xlim([-0.001 0.001]); % the first plot Rx2=0; for i=1:N Rx2=Rx2+xcorr(x(:,i),'biased'); end; Rx2=Rx2/(4000*N); Rx2=Rx2(L/2:end-L/2); figure; plot(t,Rx2); xlim([-0.001 0.001]); % the second plot. %if you want both of them on the same graphic: figure; hold; plot(t,Rx1); plot(t,Rx2); xlim([-0.001 0.001]); hold; 
Is there a way to convert it ?
Practice with a lot of googling. That's how I did it, if you find another way please tell me
https://matlabacademy.mathworks.com/?s_cid=learn_MLacad
If you need to follow some video that tells you what to do, I suggest to check out [Udemy] (https://www.udemy.com/courses/search/?q=matlab&amp;src=ukw) There is a sale going on some courses
There was some library for TeX to format Matlab nicely. A student of mine used it but I can’t remember the name. 
Look up the package mcode
I always went to the publish tab, published it and copied and pasted into a word doc when I had to print mine out for homework 
You mean how do you copy/paste? I'm not sure what you're asking. Ctrl+A to select everything, Ctrl+C to copy, Alt+Tab to change windows to your text editor, Ctrl+V to paste. 
I don't remember if I upgraded to High Sierra first, or to R2017b first. Anyway I think it should be working. But can't you upgrade to R2017b? Or you need the 'a' version for project compatibility?
Use `minted` with `LaTeX`. It even comes with syntax highlighting. [wiki](https://www.sharelatex.com/learn/Code_Highlighting_with_minted) 
&gt; Tried checking mathworks.com, but only found [this](https://www.mathworks.com/matlabcentral/answers/358270-is-matlab-compatible-with-macos-high-sierra), which just says they can't guarantee compatibility. No, keep reading: &gt; When using certain Language &amp; Region combinations, MATLAB may fail to load an appropriate character encoding for your locale. **This may also cause text files to be corrupted when loading and saving.** And then there's a [link to follow](https://www.mathworks.com/matlabcentral/answers/358261-why-do-my-matlab-files-appear-corrupt-on-macos-high-sierra). *It* says: &gt; Apple released macOS 10.13 High Sierra on September 25, 2017 and changed the way macOS reports Language &amp; Region preferences to MATLAB. When you update to macOS High Sierra, we recommend you upgrade to MATLAB R2017b, which can be [downloaded here](https://www.mathworks.com/downloads/web_downloads/download_release?release=R2017b). 
This approach makes sense if you want to obtain a low dimensional representation of each trial (i.e. you will have one point per trial). However, you might also wish to try obtaining a low dimensional representation of the electrode signals at all points in time and all subjects, so that you can see how the dynamics change over time. To do that, you would want to format your data as a [# trials * # timepoints] X [# electrodes] array, and do PCA on that. You might also want to try doing dimensionality reduction in a way that better takes frequency characteristics into account. The method you described will do a good job of representing features that are time-locked and phase-locked to trial start, essentially like an ERP. However, like an ERP, this method will fail to represent features that are not phase-locked. I highly recommend Cohen's book, "analyzing neural time series data."
Check out the documentation for the built in publishing tool. 
This YouTuber has a pretty good tutorial. https://youtu.be/WLqVLNzIN9E 
You want to use the listings package with color. So add `\usepackage{listings}`, `\lstset{language=Matlab}` and `\usepackage{color}` to your preamble and then start your code block with `\begin{lstlisting}`. You can also customize the colorizing in the preamble. 
You would have to use a cell array or table 
First off, saying something like, &gt; I've tried this code, but it doesn't work. It's not giving me an error though, so idk why. is about the least useful statement you can make. If it's not giving you an error, then *what makes you think it doesn't work*? What **is** it doing? If you can articulate what you are seeing and what you expected to see, odds are you might be able to troubleshoot the problem yourself - see [rubber duck debugging](https://en.wikipedia.org/wiki/Rubber_duck_debugging): &gt; Many programmers have had the experience of explaining a programming problem to someone else, possibly even to someone who knows nothing about programming, and then hitting upon the solution in the process of explaining the problem. **In describing what the code is supposed to do and observing what it actually does, any incongruity between these two becomes apparent.** Beyond that, if you can't explain to *us* what the problem is, then we're stuck *guessing* what the problem is and then coming up with answers to *hypothetical problems*! **My shot in the dark:** The first column of any matrix is... one column. It's one column wide. If you have a name that is, say, five characters wide, then each character resides in its own column. One row, five columns for something like name = 'hello'; If you wanted to put this name in the first column of another matrix, you can't! You can't because `'hello'` is *five* columns wide. You can't put five columns into one column for a *matrix*. There are two workarounds for this: 1. Convert your *character* array to a *string* array. Store the column of *strings* in the first column of your matrix. **This will cast everything in the matrix to strings.** 2. Convert your matrix to a cell array. Store whatever you want in the first column of the cell array (a character array or a string array). You can't just do something like `output(:,1) = Names(:,1);` if `output` is a cell array though; you have to loop through row-by-row because you can't convert char or string to cell. It's not clear if `NAMES` is a char array or a string array. It's not clear if `output` is a matrix or a cell array. It's not clear what the problem you're seeing is. If you make `output` first as a character array, then add numeric data to it, the numbers will be cast to characters by ASCII code. If you first make it as a number matrix and add characters, the characters will be cast to integers, again by ASCII code. If you could clarify what the problem is, you can get a better answer.
I can't upgrade to R2017b, my license is up.
I was sure that the licence was the same for both a and b versions, and that it changes only for the next year. But I must have understood it wrong.
Right, so further on it says if you can't upgrade to R2017b (which is the case with me) and you use one of the four listed languages, you may be impacted. What I'm asking is if anyone's actually tried this and noticed any issues.
You might be right -- I'll check, thanks.
MATLAB coder?
Nope. Just a script I wrote.
Why are you doing this in Matlab at all?
It's homework. If I do it I can eventually skip the second part of this exam and discuss the making with the professor instead.
What I'm saying is you can answer these questions much more easily on paper.
Very likely but I took this opportunity to start and learn matlab and numerical analisys
You are trying to build a house with a jackhammer. Useful tool, but not useful for the questions you were given. 
Are you looking for an iterative or closed form solution? Are you given an equation for the "s shaped curve" or just a series of points? *What work have you done so far?* Generally speaking, taking the *integral* of a function is the same as finding the *area* between the function and the x-axis. You have the same area *above* and *below* the x-axis if the integral is zero. If your integral isn't zero, then maybe you could add an offset to your curve, take the integral, and then solve for the offset that gets you an integral of zero.
Thank you! It is an equation. I’ll try your methods. Really appreciate it
If you ever have a question about a function, the best place to start is the documentation. Try: doc rand And read, under **Tips**: &gt; * The sequence of numbers produced by rand is determined by the internal settings of the uniform pseudorandom number generator that underlies rand, randi, and randn. You can control that shared random number generator using rng. You can then read, on the rng documentation: &gt; rng('default') puts the settings of the random number generator used by rand, randi, and randn to their default values. This way, the same random numbers are produced as if you restarted MATLAB. **The default settings are the Mersenne Twister with seed 0.** You can verify that Matlab starts with the same random seed on every instance by starting a fresh instance and typing `rand`. I get: &gt;&gt; rand ans = 0.8147 every time.
Ah okay thank you! 
mex?
I've written mex files when I needed/wanted scripts to run faster, but the C code I mentioned in this thread specifically is for a PLC - an industrial computer that isn't capable of running Matlab. I do all of the controls work in Matlab to generate the control gains, etc., and then port that work to run in an industrial controller.
You can use the warp command, I think: https://www.mathworks.com/help/images/ref/warp.html
the surface color data is stored in the CData property. % Load [206x345x3] example image im = imread('autumn.tif'); % surface height is average pixel value Z = mean(double(im),3); h = surf(Z); % color pixels acording to original RGB value h.CData = im; % Remove lines between pixels shading flat; 
Problem Solved: There were some "NaN" in the CSV file, which caused the error. I fixed it using ID=isnan(GLEPA); ID=1-ID; ID=logical(ID); GLEPA=GLEPA(ID); clear ID; and did the same for the Dates 
+ Thank you so much, this works but I do not want to buy the image processing toolkit!
+ Thank you so much, this works very well for my needs
Thanks a lot. Well, I want to feed the EEG data into a classification model. Those require that one axis of the input matrix (e.g. rows) corresponds only to trials. Would you thus say that PCA is not a suitable method for this purpose? 
I have actually been working on something similar using Octave (the code would be slightly different on MATLAB), but scrape the NASDAQ website (not using it for commercial purposes). I have a write up here: http://kengroo.com/courses/data-analysis-using-octave/data-analysis-financial-data-analysis-part-1/. I am still writing this up and adding content to the website. Alternatively, I have come across a few free API that serves as an alternative to the Yahoo API (have not used them tho') See: https://www.alphavantage.co/ https://blog.quandl.com/api-for-stock-data
Hi, Thank you very much for your answer Your code seems really nice but I have no idea how I could translate it to make use of it into matlab. I also tried to install some add-ons but no one seem to be up to date.. This seems to be quite complicated for someone who has few experience like me :/ 
Can you provide a link to the file you used? It's hard to tell you how best to handle the data without being able to see how exactly the data is stored. You say empty row, do you mean "you don't see anything" or do you mean `isempty()` returns `true`? Obviously `isempty` would be the test that I would use, but again I can't tell what your outputs are. The easy way to do it would be something along the lines of: GLEPA = GLEPA(~isnan(GLEPA(:,'AdjClose')),:); That code gets all rows (`:`) of column `AdjClose` in the `GLEPA` matrix, then finds which rows are not `NaN`. It then takes those "good" rows and chooses to keep all columns where the rows are good (where again "good" means "not NaN"). You could change `isnan()` to `isempty()`, depending on your data.
Thank you so much for your answer! Actually I did try what you suggest (in a somewhat less efficient code) but I could not find the correct result. If I write "isnull / isnan" I obtain: Undefined function 'isnull/isnan' for input arguments of type 'table'. Which is weird because it is actually written 'null'. For "isempty" I simply obtain the first row. You can find everything in this .rar file :) https://ufile.io/iug3l 
I'm still learning MATLAB, but in the function "CellEdit()", wouldn't taking the cell array "flags" outside the function and having it as an input into "CellEdit()" optimize it a bit? Define the cell array "flags" before the beginning while loop so you aren't defining it every loop since from what I see, "flags" stays the same value throughout the script.
You are correct (I commented in the code that it needed to be changed). At the time it was a little easier to keep variables in their respective functions. Here's a comparison: Computation time for 250 iterations: 'flags' defined in cellEdit(): Time Elapsed = 11.613436 Time Elapsed = 11.213482 Time Elapsed = 11.218599 Time Elapsed = 11.044835 Time Elapsed = 11.414656 'flags' defined outside WHILE loop: Time Elapsed = 8.426814 Time Elapsed = 7.931156 Time Elapsed = 8.167582 Time Elapsed = 8.098885 Time Elapsed = 8.181853 
Your approach will be as follows: 1) find equations 2) program equations in matlab 3) solve. I suggest you start at step 1, probably from your lecture notes or something.
clc
do you have the data for when the recessions are, like specifically when the times are? since recessionplot is pulling from NBER, and the US recessions may not line up with those in the UK, you'll need that data somehow. once you have that information, i'd use a combination of "hold on" for the different pieces of info i wanted plotted, and "rectangle" to highlight the gray areas for the recessions. something like: figure; hold on plot(stockData) plot(interestRateData) for k = 1:numRecessions startCurrentRecession = recessionStart(k); endCurrentRecession = recessionEnd(k); rectangle('position',[startCurrentRecession endCurrentRecession minY maxY]; end If you put something like interest rates, stock market values, and unemployment numbers on the same graph, they're going to be on drastically different scales. you could normalize them all to start at 1 at the very beginning, have multiple y-axis scales for the different data series, or just use different subplots within the same figure to get around this. https://www.mathworks.com/help/matlab/ref/rectangle.html
I don't know about that function, but this is pretty simple to implement using the "fill" and "alpha" functions. So for example, recessionStartTime = [1995.25, 2001.4, 2007.75]; recessionDuration = [0.3, 0.8, 2.1]; recessionStopTime = recessionStartTime+recessionDuration; x = [recessionStartTime',recessionStartTime',recessionStopTime',recessionStopTime']; y = repmat([0,1,1,0],length(recessionStartTime),1); figure(); a=fill(x',y','k'); alpha(a,0.2) You can just stick that into a function and you'll basically have reproduced the functionality you need from the recessionplot as far as I can tell.
Thanks a lot for the reply. &gt;recessionplot is pulling from NBER, and the US recessions may not line up with those in the UK Crap, this is what I was worried about. I have yearly data on a bunch of variables, including GDP and I know the dates that the UK was officially in a recession. So I'll try using rectangles instead of recessionplot as it seems quite intuitive. 
Not really starting. Just never cared enough to get into it. Learn it for tests and than forget all about it haha. 
Thank you! :)
&gt;never cared enough to get into it then they say &gt; matlab is garbage this is dangerous logic. learn something before you bash it. you literally could not figure out how to clear the command window, an extremely basic task, despite the first 10 google results for "[matlab clear command window](https://www.google.com/search?q=matlab+clear+command+window&amp;oq=matlab+clear+command+window&amp;aqs=chrome..69i57j69i60.3523j0j7&amp;sourceid=chrome&amp;ie=UTF-8)" all describing the 'clc' command. maybe you're just a lazy idiot?
Probably not in lecture notes, but definitely in the text book.
yeah it actually is. One of the main advantages of matlab over other platforms is it detailed documentation. It would be considered good practice to search through it and read it.
Do you know how FEM is done? Do that, in Matlab. 
The answer depends on what kind of classification model you want. Some types of classification models are specifically designed to accommodate time-series inputs, and for those models, your inputs for a given trial would be two dimensional, having the shape (number of features) * (number of timesteps). But for a garden variety classification model, you would indeed need the inputs for a given trial to be one-dimensional. And yes, PCA would work there. Essentially, to solve this problem you really need to figure out what TYPE of differences you expect to see between your classes. If you expect recordings of one class to consistently have a more positive (or more negative) signal (on one or more electrodes) at t = 300ms than the other class, then you can do as you described, and use a vanilla classifier. You could apply PCA to the data *after* transforming into frequency domain. If you expect that your classes might be differentiated by having a particularly strong 12 Hz oscillation at, e.g., around t = 300ms, *but you have no reason to expect that the phase of the oscillation will always be the same*, that won't work. But, you could still get away with using a vanilla classification model IF you first transform the data into the frequency domain (e.g. by windowed FFT or wavelet transform). If you think that whatever feature might discriminate your classes from each other could possibly occur anywhere in the trial (i.e. it won't always occur at t = 300ms or whatever), then you need to use a classifier that is built for time series data.
Sounds like it could work, but I don’t know which count function to use
I tried the (theMatrix(:)==1) (and for 0 and 2 as those are the other values), but this only displays the final sum, I'm trying to plot the change for each time iteration to show how the "population" of each cell type changes over the course of the simulation, any ideas? 
Can’t you just run this every time you update? Like I’m imagining this is some sort of loop. Before you start initialize a data mat. And a loop counter i. Then just While (looping) ... ... ... theMatrix =Update dataMat(i,2)=sum(theMatrix(:)==1); dataMat(i,1)=i; i=i+1; ... ... ... end and you’ll create a mat that looks like [1 count 2 count 3 count 4 count ...] Then you’ll just make a graph from that. I don’t know more about your data so I can’t really add on to this
Is that the test-set accuracy? Sub-50% accuracy seems rather odd... In fact, being right 20% of the time in a 2-class discrimination sounds like *BETTER* performance than 55% accuracy, since I would consider 20% accuracy to be equivalent to 80% accuracy. Hypothetically speaking, as I understand things, it should be pretty difficult for a purely linear classifier to obtain a different result when applied to data that has been PCA-ed, if you are in fact using all components. Perhaps this could be due to some issue in the SVM's hyperparameters, such as early stopping criteria?
So.. if I understand you correctly, you are given a graph (not shown in post) which has a certain amplitude somewhere of max 2000 (units?). You also have the raw data of the graph, but there it shows an amplitude of max 300 (units?). To be honest, this question is kind of unanswerable without any more information. Are you 100% certain that the units of the dataset and in the graph are the same? Perhaps your dataset is in magical freedom units and your graph in some metric unit? Perhaps you have the raw accelerometer data and the graph you are given has motion in meters, i.e. integrated twice over time? Or gyroscope data with angular velocity over time. Or do I interpret your story wrong and you use a script from the internet on your data to make a graph and this script gives you the wrong numbers? If so, just look in that script and see what happens.
Yes, it is test-set accuracy. I just tried classifying on single electrode data using 1. The 'score' variable (88(observations) x 44(variables)) 2. The 'coeff' variable (601(variables) x 86(observations)) 3. 'reversed' PCA so my data is projected back onto the original axes. (88(observations) x 601 (variables)) For 1. and 3. I did so using all components (43) and only a subset (15, which include ~94% variance) Please see the comment of LabMem004 above: "Scores are basically your new variables (the principal components), you can use them as the original variables. PCA is basically a tool to "condense" most of the variance in your data into a few variable, the exact dimension reduction is done by leaving out the variables, that cover only a small part of the total variance. It is basically up to you how many components you "throw out", and the optimum is highly dependent on your dataset and goal. You don't project back your data, however there are transformations, like "varimax rotation" which rotates the principal components closer to the original variables." Results are (10-fold cross-validated and using linear SVM) 1a. 'Score' with all components: 13.6% 1b. 'Score' with 15 components: 11.4% 2a. 'Coeff' with all components: 41.9% 2b. Didn't make sense to me 3a. This is equivalent to my original data before PCA: 42.0% 3b. Data on original axes after PCA with 15 components: 39.8% As you can see, 2a., 3a., and 3b. show really similar accuracy scores, but 1a. &amp; 1b. do not. Thus, it is still really hard for me to believe the statement LabMem004 (and others) made, specifically that the 'score' variable can be treated as my new variables and include all variance of my original data.
OK, couple confusing things here. First off, do your *original* data (single electrode) have the shape (88(observations) x 601 (variables)) ? The dimensions you give for "coeffs" don't make sense. The 2nd dimension of "coeffs" isn't "observations", it's "components". The "coeffs" matrix transforms 601-dimensional data (dim 1) to 86-dimensional data (dim 2). Neither dimension of "coeffs" corresponds to observations. Additionally, while the dimensions of "coeffs" should be (input dimensionality) X (output dimensionality), the dimensions of "scores" should be (num of observations) X (output dimensionality). So I am confused about why the 2nd dimension of "scores" has size 44, not 86. The number of columns in "scores" should equal the number of columns in "coeffs". Something does not seem right here.
I see.. My original data has the shape 44(observations) x 600 (timepoints) for each condition. For classification, I concatenate two conditions vertically and create a 601st column for my response variable, thus: 88 x 601 with 1:44, 601 = 0 and 45:88, 601 = 1 I obviously did the PCA first and concatenated my conditions afterwards for all variables. For 'scores' my reasoning was: scores_condition1: 44(observations) x 43(components) scores_condition2: 44(observations) x 43(components) contrast_scores: 88(observations) x 43(components) + 1(response variable), or 88 x 44 Or, equivalently for 15 components: contrast_scores: 88(observations) x 15(components) + 1 (response variable), or 88 x 16 I (wrongly) assumed that for 'coeff' 600 equals timepoints and thus added a row vector for the response variable and concatenated my two conditions horizontally. To clarify: My variables for *each* condition are Original data: 44 x 600 Coeff: 600 x 43 Score: 44 x 43 By the way: THANK YOU (!) so much for this great advice. It's my first time asking such stuff on Reddit after five years of higher education. I never expected to get such good help here.
Hi, Well I did not dare to try since I don't know where to start, but I think at this point you gave me all the tools I needed to get into it and figure it out by myself :) Thank you very much! If you ever write a Matlab code don't hesitate to drop by this topic ;)
Thank you so much for your answer! Actually I did try what you suggest (in a somewhat less efficient code) but I could not find the correct result. If I write "isnull / isnan" I obtain: Undefined function 'isnull/isnan' for input arguments of type 'table'. Which is weird because it is actually written 'null'. For "isempty" I simply obtain the first row (I have no idea why). You can find everything in this .rar file https://ufile.io/iug3l Hope you can help me 
Suggest providing indexing or 3x3 example
just curious - are you just trying to develop this as a learning exercise for yourself or building a tool. I surely will - I am trying to get the remaining portion of the tutorial in Octave done (sorta a dashboard), but other things have taken precedence for now. Writing something for MATLAB is surely on the horizon since I worked with it for a while.
Both actually. I had matlab classes for the first semester and I really need to practice before the second semester starts. Moreover, I like coding, I enjoy practicing and I am sure this kind of code is essential for future work (in or outside school). Good to hear! Thank you very much for your help :) 
this is a math problem, not matlab. find your solution with paper and then come back if you have trouble with the implementation. 
This is about as short as you can get it and have it be reasonable (it works for arbitrary length *nums* and *standards* vectors): maxmult = floor(max(standards) ./ nums); perms = nums(1) * [0:maxmult(1)]'; for i=2:length(nums) terms = permute(nums(i) * [0:maxmult(i)]', [2:i,1]); perms = terms + perms; end error = abs(permute(standards, [2:i+1,1]) - perms); temp = cell(1, length(nums)+1); [temp{:}] = ind2sub(size(error), find(error&lt;limit+1)); indices = cell2mat(temp) For simplicity I tried to keep variables that did the same types of things be the same as your code. I'll explain: *terms* is just the ith *nums* multiplied by all factors up to *maxmult*. If your *nums* aren't all roughly the same magnitude, this can save a lot (it doesn't matter for *n=3* here, but for larger *n* it will). *perms* is the running combination of all *terms* (we initialize it outside the loop for *i=1* to simplify index annoyance). The *permute()* is necessary so that we make the shape of terms be one dimension bigger than *perms* so that when we do *terms + perms* Matlab automatically does a [bsxfun()](https://www.mathworks.com/help/matlab/ref/bsxfun.html). At this point we have computed all possible combinations; we compute the error, do some *cell()* hackery so that we can gracefully handle an arbitrary number of arguments from *ind2sub()*, and spit out the indices. Note that indices contains an extra column that contains the index of the *standards* that we found. 
Genuinely curious: is there a pencil and paper way of arbitrary size *n*? At best you solve the under-determined system, but it would be subject to integer constraints, which leads to integer programming and Diophantine equations. I'm also not sure how robust it would be to find **all** solutions, which is what he appears to want. Also, this **is** a Matlab question, since the part he's stuck on is how you would extend this to arbitrary size **in Matlab**. Even if this particular problem could be solved in other ways, there are numerous other coding situations that do not. I think of myself as well versed in Matlab and I had to Google some to put together my answer that dealt specifically with his issue.
Well you can do that if you want, though the resulting plot will be weird. You might wanna switch the x and y axes
Oh no, I don't want it to be weird! I definitely want the magnitudes on the y axis and frequencies on the x
Checkout my code at kylemathewson.com/eeg
I have an implementation without any (visible) loop, that take advantage of the vectorized/matrix operations aspect of MATLAB. Also I use implicit expansion in two places (so you need MATLAB &gt;= R2016b or change these two lines either with repmat or with bsxfun) I haven't check the solution on your data, it seems to work on "easier" example (I didn't check the real solution on your data because I'm to lazy to write the end of the problem for you, where you still have to use the i indices to find the line tt(i,:) and use it to find the corresponding values in available_numbers) Also this is only an exercise showing that you can do it without any loop. I don't think that's the best approach to solve it. The "algorithm" part in this case is brute force, and it does not scale well (the tt matrix is going to be 2\^(n\*m), n\*m in size (I think) with n = length(nums) and m = number of multipliers. It may be a non polynomial algorithm in general (It seems similar to the [Knapsack problem](https://en.wikipedia.org/wiki/Knapsack_problem) which is NP-something IIRC but I haven't done theoretical algorithmic in a long time), but there must be more efficient algorithms than this one. % input data nums = [107;108;112]; standards = [545;592;550]; % multipliers. Use implicit expansion, so MATLAB &gt;= R2016b mults = 1:5; available_numbers = nums * mults; % reshape to a column vector available_numbers = reshape(available_numbers, [], 1); % generate all possible combinations of 0 or 1, some kind of thruth table % That's not pretty, but it works % there are some functions on MATLAB central that does the same, they may % be better % Also the "algorithm" is brute force, that's not very elegant, and not % memory or complexity efficient. n = length(available_numbers); tt = reshape(str2num(reshape(dec2bin(0:2^n-1), [], 1)), [], n); % compute all the possible sums sums = tt * available_numbers; % find the matching one (again, implicit expansion here) condition = abs(sums-standards.')&lt;=1; % list indices of matching data [i,j] = find(condition); % j tells you which sum is found (1,2,3 for 545, 592, 550), i is the line in the tt array. % You need to look in the tt array to find the indices corresponding to the % number in the available_number array
**Knapsack problem** The knapsack problem or rucksack problem is a problem in combinatorial optimization: Given a set of items, each with a weight and a value, determine the number of each item to include in a collection so that the total weight is less than or equal to a given limit and the total value is as large as possible. It derives its name from the problem faced by someone who is constrained by a fixed-size knapsack and must fill it with the most valuable items. The problem often arises in resource allocation where there are financial constraints and is studied in fields such as combinatorics, computer science, complexity theory, cryptography, applied mathematics, and daily fantasy sports. The knapsack problem has been studied for more than a century, with early works dating as far back as 1897. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
What do you mean? Don't you have En &gt;= err in your while loop condition? Why do you even need the if/else statement? Have you read the documentation on while loops? 
Do you know Simulink already? If not, make a MathWorks account (if you don't already have one) and watch some tutorials/webinars to get a feel for how it works, and then find some that are specific to code generation from a Simulink model since that is what you'll be doing. Then do some searching for "Simulink support packages" and see if any support packages exist for the boards you want to use. These are free product add-ons and come with documentation and example models showing off some functionality (e.g. read/write for GPIO or I2C). I don't have a ton of direct experience there but I have successfully used the Raspberry Pi support package for some basic stuff.
I have adjusted my code: function [res1, res2] = NRM(f,x0,beta,err,MaxIt) % Function that uses the Newton-Raphson method to find the root f(x) = 0. xn = x0; %set boundary value an to initial a0 xo = x0; % ^^ n = 0; % initiating iteration counter h = 10^-6; En = abs(f(xn))+((abs(xn-xo))/h+abs(xo)); % calculate error of first xn while (En &gt;= err &amp;&amp; n &lt; MaxIt) %start iterative process loop n = n+1; %iteration count, n=2 on first loop xo = xn; %set xo xn = xo - beta*(f(xo)*diff(f(xo))); %set xn if En &lt; err % check for convergence fprintf('Converges') break end end % res1 = xn; res2 = n; end 
Very little to go on here to help out. What's the error message you are getting? Your communication stack? GPIB, serial, gateway? What flavor of visa are you using? Rather than use the driver, can you send raw scpi commands to the instrument?
What does "doesn't work" mean? 
If I run this to answer the question % Q1(b) fprintf('\n\nQuestion 1(b)\n-----------\n') x_q1b = NRM(@f,100,1,1e-8,10); fprintf('\n f(x_star) = %20.14g: x_star = %20.14g\n',f(x_q1b),x_q1b) It should print values, but I get blank answers instead.
It is actually against the EULA to run MATLAB in a remote desktop environment.
Okay? And have you looked into why? I mean you know what's in those variables, right? 
I have looked into it but I just can't seem to understand it
The contents of the variables are literally visible in the workspace browser on the screen. I don't think you need help with this particular piece of code. You need help with basic debugging and problem solving skills. You ran an fprintf command and didn't get the answer you expected. Okay. You shouldn't need me to tell you to do basic exploration of the problem. I can't help you if you won't even glance at the screen to see what was the value of the variable you tried to print. That should just be obvious. That should just be natural human curiosity. What variables didn't print? What's in them? If you write a very simple fprintf command, does it do what you expect? Does it do what the documentation says it should do? **have you read the documentation?** did it not print because the variable was empty? Or did it contain something unprintable? How could it have gotten that value? Read your code and think about what it's doing. How could it have assigned that value to that variable? You have to **think** about what is happening and **investigate** when things don't work as expected. Nobody can help you if you can't or won't do that. I mean, you still haven't even told me whether you've read the documentation. Read the documentation. Hit f1 and read. 
I have read the documentation on the while loop, I will read the documentation on the fprintf, my only concern is that my code is wrong therefore I am not receiving any values. I will try again and let you know if I was able to do it, I appreciate the support.
You said the print statement didn't give you anything. But what does the variable actually contain? 
Does it contain an array?
Is that code all in a single file? Or is that multiple m files all copy/pasted into your OP? It would be odd to do this with subfunctions like this if that's actually all in one file. Also why is ic global? Globals are almost always unnecessary and should be avoided, and this certainly doesn't seem to be an exception. You seem to define the function "practice" but you never call it. Where does the "motion" function come from? You pass it as a function handle but never define it. I don't need to see the code for it as long as you know it exists somewhere on your path. 
I wouldn't expect it to contain a function, but I'm not sure why you're asking me. It's not a rhetorical question. You should be able to tell me what the variable contains. Literally just look at it on your screen and see what it contains. 
I mean literally look at the workspace browser. It looks like this: https://www.mathworks.com/help/matlab/ref/workspace_browser.png
It contains a 1x1 double which is 0
Okay. So what's the next step? You have a variable with a printable value in it. It didn't seem to print in your print command. What should the next step be to understand the problem? 
To check my fprintf command and make sure it's coded correctly for the variable? I have just cleared the workspace and run my program again, it is now a size 0x0 with no value at all. I think that is my problem?
Don't define 'ic' as global. 'tspan' should just be the start and finishing time, i.e., [0 20].
The practice problem asked for the function to be named motion, but I changed it to practice to make more sense... Looks like I missed some though, sorry. I made ic global so that I could use ic in my main function and subfunction. Could I ask why this is poor practice? The code is all from one file, it is a main function with a subfunction. Again, I didn't know that this was odd, but I would like to learn more. Thanks for your reply!
How can I use ic in my function and subfunction without definitely it as global? I would guess that I should add some inputs to my subfunction. What difference does tspan make? I've tried both and there seems to be no difference, but any other information about it would be appreciated. Thanks friend!
It's not necessarily bad to put it all in one file like that, it's just atypical in Matlab. It's actually quite common in any other language, so you're not doing anything really nuts. In Matlab, you can only have one externally available function per file, usually. What you wrote is called a subfunction, which is only available within that file. As a result it's just habit for most people to split things into different files for organization. Globals are bad because they're error prone, and make debugging hard - especially when you start writing larger more complex code. In a tiny example like this it won't likely cause trouble but it's still a bad habit to get into so it's best to avoid it. When you've built enough skill and an appropriate use for globals presents itself, you'll know. Until then just aim to never use it. If you need to get a variable into a function, you can just pass it in like anything else. It's very rare (maybe impossible?) that you ever really **need** a global. In any event, you never assign a value to ic. Your subfunction would, but you only define it, you never call it. 
&gt;How can I use ic in my function and subfunction without definitely it as global? I would point out that you actually don't use ic anywhere. You define it but never use it. &gt;What difference does tspan make? I've tried both and there seems to be no difference, but any other information about it would be appreciated. I don't do a lot of ode solving but I believe tspan tells the code the domain over which to compute the solution. The solver itself will figure out which (and how many) points within that domain need to be in the result to provide the specified accuracy. You should take a look at the documentation for ode23. 
The only subfunction should be the function for the derivative which is sent into ode23. Everything else should probably just be in the main method.
Lol, "method". Look at this guy and his Java code. 
I got the code to work now thanks to all this great help. What I did was remove the global, instead making ic one of the inputs of my subfunction. I also had to rename several variables within the subfunction to match the inputs. In case you're curious, here is the completed code. function zsol = motion_main close all; z1 = 0; z2 = 1; z3 = 2; z4 = 0; ic = [z1;z2;z3;z4]; function zdot = motion(tspan,ic) zdot1 = ic(2); zdot2 = (-ic(1))/(((ic(1))^2)+((ic(3))^2)); zdot3 = ic(4); zdot4 = (-ic(3))/(((ic(1))^2)+((ic(2))^2)); zdot = [zdot1;zdot2;zdot3;zdot4]; end tspan = [0 20]; [t,z_sol] = ode23(@motion,tspan,ic); plot(z_sol(:,3),z_sol(:,1)); end I appreciate the help!!
That might work but there's a lot of really bad habits in there. Your function is taking a set of time values and a set of Z values. You've called these tspan and ic, but you use identical variable names for the tspan and ic that you pass to the ode solver. Using identical variable names, in the same file, for different variables that mean different things is extremely confusing and will certainly bite you in the future. The tspan passed to the solver tells it what time domain to compute the solution over, and ic is the **i**nitial **c**ondition. The time variable passed to the derivative function is the time at which you should compute the derivative, and the Z values are the values of z at the corresponding times. The derivative is a function of z, not the initial value of z. 
Click on one of those workshops and walk through the code kyle_fft.m, other stuff will be usefully to maybe 
Can I pm you regarding any specific questions I may have?
First off when converting a two-sided spectrum to a one-sided spectrum you need to multiple the single sided by 2. As for locating peaks you can do this simply by using “findpeaks” function however I think that function requires the Signal Processing Toolbox. If you don’t have the SPT you can calculate the slope at each frequency and determine when it’s near zero and when it slips changes from positive to negative to find all local maxima. 
Thank you so much for your reply! Just a few things: 1. &gt;you need to multiple the single sided by 2. What do you mean by this? Sorry, I'm a beginner to MATLAB. What adjustments do I need to make to my code to solve it? 2. I do indeed have the Signal Processing Toolbox! But just to show my work mathematically, how would I calculate the slope at each frequency? 3. I'm a little worried that my magnitudes are a little too high, especially because this is a relatively low note played on a music instrument. Does my panic have any merit? I need accurate magnitudes for determining the coefficients/amplitudes of the corresponding sine/cosine terms at that frequency. Thank you so much! I'm only a high school senior, so please forgive any seemingly-obvious ignorance :) 
1. In your code you already converted the two-sided power spectrum (FFT output) to a single-sided power spectrum but you need to multiple it by 2. So: X = 2*X. 2. From calculus you can calculate the instantaneous slope by taking the derivative of any function. This is essentially equal to taking the difference between two ordinate values (y values) and dividing that by two abscissa values (x values). For your case you would do this by: m = diff(X)./diff(freq) 3. I’m unfamiliar with audioread function. So you may want to check if you need to specify any other inputs then just the wav file. I will add though 10*log10(2*6000) is around 40 decibels (dBs) which is definitely plausible in regards to hearing. Another way of plotting your data would be: figure(); semilogx(freq,X); Don’t forget to do X=2*X. Better yet, figure(); semilogx(freq,10*log10(X)); This will help show more of the lower frequency content of your spectrum (which is also where more peaks are) and also change the magnitude (whatever your units^2/Hz (power spectrum units)) to dB re 1 units^2/Hz. 
90% sure that xo is a scalar (1x1 variable), which results in f(xo) being scalar, and subsequently diff turing that into a 0x0, (called an empty array / matrix). The result of the right hand side is then an empty matrix, which is assigned to xn.
There are a few ways to do this, but my preferred way would be one of the following: 1) Make two arrays - one with the matching values, and one with the non-matching values. Based on your 50% probability, choose one of the two arrays, then select a random element from the chosen array. 2) Make an array with the matching values, and pad it with random non-matching elements until the array is 50% matching values and 50% non-matching values. Then select a random element from the generated array.
Yes xo is a scalar, does that mean the differential of the function would always produce a 0x0?
[the doc of diff reads](https://nl.mathworks.com/help/matlab/ref/diff.html) "Y = diff(X) calculates differences between adjacent elements of X along the first array dimension whose size does not equal 1:" soo, if you have 1 element in your array, there's no adjacent element, get it?
1. Ah, okay. But why do I need to multiply it by 2? I watched a video in which it said I had to adjust for the Nyqvist frequency, but it wasn't clear why the multiplication had to occur. 2. Yes, I was familiar with the math, i was just curious how to do it in MATLAB :). Thanks 3. Gotcha! Do you know of an efficient way to find the x and y values of the various peaks? I tried the 'findpeaks' function but it didn't seem to work. 
Thank you!
1) Simply because Two-sided power spectrum = 2*one-sided power spectrum. In other words, if you were to integrate the one-sided spectrum without the times two factor, you would only calculate half of the total energy which should be equal to the total energy of a two-sided spectrum. Double check the documentation of findpeaks... you may be switching the output variables. If it still doesn’t work, you will have to do m=diff(X)./diff(freq) and use logical indexing to find the peaks. 
Oh okay. So then the magnitudes should just be double, right?
Great! Now, with regards to find peaks, I'm still not quite getting it, having gone through the documentation. Is there another way (non-calculus) that I can just click on the peak or something and have it return the x/y coordinates? This is because I have hundreds of thousands of data points in my signal, and so I need an efficient way for it to return the key peaks' x and y coordinates unto a certain limit.
Found a way to solve my problem by combining both findpeaks and the data cursor tool! I used 'findpeaks' to illustrate the location of the maxima, and then by clicking on it with the data cursor I got both the x (frequency) and y(magnitude) values! Thank you so much!!!
Glad you got what you were looking for!
I have chosen option 1 and I think i'm getting somewhere now! Thank you!
Thank you so much!
That's a really terrible way to do that, but okay. 
Do you know how to do it without MATLAB? That is, if I just gave you a 4x4 matrix and asked for the determinant, what would you do?
in addition to drawnow, you probably want to look at a histogram of the data. something like: for k = 1:maxK % code that changes your dataMatrix dataVec = dataMatrix(:); hist(dataVec,[0 1 2] pause(1) end you can also call hist with left-hand arguments, something like: for k = 1:numK currentCounts = hist(dataVec, [0 1 2]) %store currentCounts countsOvertime(:,k) = currentCounts end plot(countsOvertime) You'll probably need to play around with those functions to make sure things are the correct dimension for what you're trying to do, but this should start you in the right direction. 
are you using one of MathWork's toolboxes? if not, i'd recommend looking at matconvnet, a Convolutional Neural Network toolbox that's free to download. they include a good example on the MNIST data set, which is the 0-9 character recognition data set. from a general perspective though, you'd probably be interested in the function imread to read in a single image, and do that over-and-over again for your whole data set. typically these are saved as uint8 datatypes, which isn't the best for Neural Network related stuff, so i'd recommend converting each image to a 'single' (which allows for things like subtracting the mean from each pixel value without worrying about going out of bounds on your data type and scaling between 0 and 1) and saving the data set as a .mat file.
No, you're going to get much less exact information from the cursor. It's also going to be tens of thousands of times slower. 
Thank you! It does exactly what I want. The problem is if I increase the elements in baseNumbers, calculation takes forever.
Thank you!!
Then what do you propose? With that many data points, its arguably way more inefficient to have it store the values in an array.
You're aware that arrays with many millions of points are still quite small, right? Memory efficiency isn't really a problem until you're talking about arrays with billions of points, unless your machine is short on ram. 
Yeah, thats the thing - because this is for a high school research paper, i cannot rely on the computer for too much. I.e., I have to show the mathematics by hand to a great extent, hence why I need to pick the points *by hand*. Frustrating, i know
I find it highly unlikely that you are expected to pick thousands of points by hand. That's not feasible in any way. 
oh of course not. Just the key, visible ones within a certain limit. I'm thinking of peaking the main peaks that you can see in my image of the FFT plot, from 0 to 20,000Hz.
And then in the Evaluation section of my paper, I discuss how this is cumbersome, and better to do purely computationally. 
An additional comment to be made if/when you do this for a number of *nums* greater than maybe 8 or 9: One thing not mentioned by others that you can do here is periodically prune the results. Of course there is overhead in pruning intermediate sums that exceed all of your *standards*, so you should choose carefully when you do this and it will depend on the length of and ratio between *nums* and *standards*. For example something like : .... for i=2:length(nums) terms = permute(nums(i) * [0:maxmult(i)]', [2:ndims(perms)+1, 1]); perms = terms + perms; if sum(perms(randi(numel(perms), 20, 1)) &gt; max(standards)) &gt; 10 perms = perms(perms&lt;max(standards)) end .... This will randomly sample 20 entries from *perms* every iteration and if more than half exceed *standards*, then it prunes. Of course the numbers I chose were somewhat arbitrary and would need tuning. (Note also the change to the ordering on the *permute()* since we can no longer expect *ndims(perms)* to be always equal to *i* now. You'd also have to store the intermediate indices, since they get wiped when you modify the structure of *perms*, but I'll leave that as an exercise :)
&gt; including the possibility of not using a factor at all Ah true, I was hasty and missed that of course in your *tt* **all** binary combinations are included. &gt; In that case I should change the way I construct the tt matrix to restrict it to the possible choices of exactly one time each num Right, in which case it is much cheaper to just due the direct summations. It also leaves open mid-compuation intermediates pruning ([an example](https://www.reddit.com/r/matlab/comments/7nq81q/need_help_with_an_alternative_for_a_for_loop/ds7qc90/) is included to OP's response to my post)
If you're using the Live Editor, [you can use a limited amount of LaTeX commands to type out your functions. ](https://www.mathworks.com/help/matlab/matlab_prog/insert-equations.html) There's also some conversions for [symbolic equations to LaTeX if you are using the symbolic math toolbox.](https://www.mathworks.com/help/symbolic/latex.html) In the grand scheme, MATLAB was never designed to draw pretty equations. LaTeX is a typesetting language, so it's perfectly suited for this. 
Okay I tried that, and it says it’s an empty vector 
Thanks, this looks interesting. Is there an equivalent to histc for drawing a line graph instead of a histogram? I ideally want to look at how the number of 0s, 1s and 2s changes over time, so a line graph would work best
To piggyback off what TCoop said: If you look at LaTex and think that’s too confusing or looks like another language, don’t be intimidated. My initial thought was “oh no, not another language to write stuff!” It’s actually not that bad. The first few times I used it, I pulled up a google image of a chart that had all the LaTex commands on it. Helps out a lot and makes it much quicker than googling each one you get stuck on. 
First, try creating the scruct opts = gaoptimset(@gamultiobj); Then to adjust the options do: opts.PopulationSize = 500; opts.Generations = 100; Et cetera
+ Thanks for your input. I've just this moment realised how dumb I am (why it's taken me this long to realise I have fluff for brains I have no idea) and remembered that I can't use: [1:nvars] To force integer results, as this isn't possible with a multi objective GA I was getting an error. It runs now, but gives spurious results, mostly due to the fact that I got lazy with my constraints and tried to do everything through the use of upper and lower bounds. 
did you try running anything like the second code snippet? its general structure is doing exactly what you're trying to do, it just may be off in terms of the data being transposed. hist and histc by default generate a histogram plot, but if you call it with left-hand arguments it will return the counts of the data set, which you can then store, and plot. look at the Matlab documentation to see how hist/histc work, write some code, put some breakpoints in your algorithm, and step through it to understand what's happening.
What I'm looking for is a way to write pretty equations so I can see what I'm writing and paste them into matlab with the proper formatting (parens, root symbol changed to sqrt(), etc.)
I don't mind LaTeX but often I forget a paren or a multiplication sign when there is a lot on one line. And I have to look at a long equation trying to find the lost parenthesis. What I'm looking for is a way to write pretty equations so I can see what I'm writing and paste them into matlab with the proper formatting (parens, root symbol changed to sqrt(), etc.)
I use a method where if I am working out a somewhat nasty problem, to make sure everything is as it should be... I set all my variables to syms a b c; and so on then the equation to lets say x= then do pretty(x) and it writes it out with fraction bars and all that stuff. 
It is indeed possible to do it in a for-loop. However Matlab is optimized for the use of arrays and matrices. So most of time it is far more efficient to do something with arrays such as the already proposed solution. One of the "golden Matlab rules" is "use arrays, avoid loops".
Got it, thanks!
So I tried using imread, except that the input wasn't a 30 x 30 matrix, but rather a 30 x 30 x 3 data file, where 30 x 30 x 1 = 30 x 30 x 2 = 30 x 30 x 3. It does what I want and associates each entry of the matrix with the greyscale value of the image (0 for black, 255 for white), but I just want it in two dimensions. Additionally, when I try dividing the matrix by 255, I get 0s and 1s instead of decimals. I can work around this, but is there any way to get the matrix to store the values as decimals?
Thanks! I couldn't really try to figure out how to 'recognize' the image.
My approach to this was always to rewrite these kind of differential equations slightly different. On one side of the equation, I wanted to have the highest order derivative. So for the first equation for instance x1'' and for the second equation x2''. Let's consider the first equation. Basically you have that the second derivative of something (x1) is equal to something else. You can implement DEs by making use of the integrator block. Since that equation contains a second derivative, you will need 2 integrator blocks in a row to integrate x1'' to x1. What you feed into the first integrator therefore has to be the second derivative. Since the equation was rewritten as x1''=1/m1 * (...) You basically have some kind of summation in the brackets that is multiplied by a gain of 1/m1. If that summation contains for instance x1', you simply say that x1' is what comes out of the first integrator. Since you have two coordinates (x1 and x2), this stuff is slightly more messy when building it. I suggest that you initially set up 2 sets of 2 integrators each. You use a GoTo block at the output of each integrator and label it accordingly (something like x1d, x1, x2d, x2) and then construct the just mentioned summation in front of either integrator pair. I hope this kind of helps you. 
That really helped me, thank you so much
So did you manage to build the equations? :)
It's difficult to know for sure what you are looking for without having a more detailled description of what result you want to have, but what you are looking for may be the [datastore](https://nl.mathworks.com/help/matlab/import_export/what-is-a-datastore.html). By the way, the eval you have in your code is not necessary and you should avoid it, you could do directly the following table{i} = readtable(files(i).name)
The dot product is dot(A,B) or A'*B
Thanks for your answer and the code improvement I'd like to import the tables independently if you seen what I mean. for example, in this case, I would like to have 10 tables in my work space and not 1 struct called Table. Id like to have: -Table_AC.PA -Table_ACA.PA .... Do you know how I could do this ? :) https://ibb.co/ezaHMb
Does the documentation cover this at all? 
no, it doesn't. That's why I am asking. https://www.mathworks.com/help/wavelet/ref/wfbm.html
Do you know how to do this, mathematically? 
https://www.mathworks.com/matlabcentral/answers/93963-is-it-possible-to-use-matlab-over-remote-desktop-software Remote usage of MATLAB is prohibited by the MATLAB Software License Agreement for Designated Computer licenses. All other license types permit remote usage of MATLAB. Refer to section 4 of the MATLAB Software License Agreement for more information.
I'm not familiar with the math here, but probably your best bet is just to read through the code yourself and see what matlab does. https://pastebin.com/9tWbJaWp Or read original study used for implementation. https://www.sciencedirect.com/science/article/pii/S1063520396900305
the documentation is more than enough for someone novice. You can advance further by trying out to solve problems from your courses or work using MATLAB. 
Just a quickpoint: peak-finding has little to do with your data scale relative to what is shown on that figure. Also, ask yourself if you want to find the peaks relative to your whole time-series? If you have major drifts in amplitude peaks, e.g, the peaks at the end are much smaller than the beginning, try (1) time-binning your data, (2) find the peaks in those windows, and (3) concatenate your data back together if you want a time-series of peaks. 
Yes, just to multiply the principle with the first return element, then save the product to a new list(y) as element 1, then multiply the principle with the first two return elements, then save this product to list y as element 2 and so forth.
Read the documentation for cumprod 
Unix and windows (and Mac) all handle newlines differently. I actually don't know which is which, so I just did a quick Google. [It looks like Notepad (Windows) expects `\r\n` for line breaks, `\n` isn't enough.](https://www.mathworks.com/matlabcentral/answers/84256-why-won-t-n-give-me-a-new-line?requestedDomain=www.mathworks.com) That page also mentions that most other editors, even on Windows, will correctly display the `\n` line breaks.
I'll take a wild guess. I think it means that the number of columns on line 3 is not the same as the previous lines.
What does matlab mean in terms of columns within a text file? By eye, everything within the file seems the same length?
It sounds like it already is a string, so I'm not sure what you're asking. Have you read the documentation for cell arrays? 
I'm importing table from excel file, then converting it to array using table2array
date=table2array(Mar1(1:10,2)); gp=table2array(Mar1(1:10,3)); lgnd=[table2array(Mar1(1,1))]; plot(date,gp, 'DisplayName', lgnd) legend('show') 
Could you post the first 5 lines of your .txt and the line of code where you load the .txt?
You need to call hold on after the first plot
There is no reason you can't call `hold on` at the beginning. 
Are you getting errors? What are the numbers entered in as the third argument? 
Hold on won’t work for plot unless you have already created an axes handle, a figure does not. 
Perhaps, although I could have sworn it was still a thing. I just tried it myself and sure enough I had no problems. Regardless, I think the correction will fix OP’s problem. The documentation for hold shows its use always after a previous command has set the current axis, or else you need to use its full syntax to specify which axis the hold should be applied to. I wonder if figure now automatically sets the current axis in newer versions. 
To the general answer w/o adressing your other post, CHAR(x) Where x is a CELLSTR should do the trick. 
You don't even need to call `figure` first; you can just call `hold on` and Matlab will generate the figure.
&gt; I'm getting so frustrated Me too. I don't know what the problem is. &gt; I can't figure out how to convert cell containing some text to string If you have a cell array, like myCell = {'This is a character array in a cell.'}; You can see that it's a cell by just typing the variable name: &gt;&gt;myCell myCell = cell 'This is a character array in a cell.' If you want to get at the data *inside* the cell, you have to index it: &gt;&gt; myCell{1} ans = 'This is a character array in a cell.' If you want to convert that to a string, just wrap it in a `string` command: &gt;&gt; string(myCell{1}) ans = "This is a character array in a cell." If you want to verify that it's a string, you can check with `isstring()`, as in: &gt;&gt; isstring(ans) ans = logical 1 I'm not sure what's frustrating you about this. If you could post *helpful* things like some sample code that you're trying to process, the code you wrote to process it, the data you got out of the code, and the data you're expecting to get, then we could maybe help more. 
By eye, you can't tell the difference between one tab and a bunch of spaces. You lines don't have the same number of characters. What is writing these files? 
Yes, thank you! Figured it out now!
i'd recommend investigating your data. everything looks alright from the syntax point of view, but if the x-values and y-values of the plots from 1-10 are the same (like x=[0 0] and y=[100 100] for example) the plot isn't going to show anything since the line between the points is only a single point. what is the third input doing for the plot command? try removing that? and you can easily do this in a for-loop; just have the variable you're looping over be index number that is used to pull the data for your plot command.
Ah geez, that's the problem. Thanks!
Hahaha bro chill man why you getting so mad over matlab hahahhaa
I've never used semicolons after hold on and hold off, maybe thats the problem.
Man, I have a graduate degree and like to think of myself as relatively well versed in science and engineering, but I swear this question sounds like the [turboencabulator](https://youtu.be/Ac7G7xOG2Ag) lol.
Nature of the beast IMO. Maybe try the function?
I want to get the East Australia data to fit within the Australian border so it looks professional
This is absolutely what you need to do - preallocate the array before the for loop. A tip I picked up from a Mathworks Application Engineer is to use "ii" instead of "i" as your index variable to avoid overwriting it's default value of √-1. This applies to using "jj" instead of "j" as well since it's default value is √-1 too for electrical engineer who used "i" for current.
No, the matrix is still the same size. You just see huge numbers, because the symbolic toolbox likes to work with very large integers. Try: eval(subs(Gx,z,exp(2i))); Also, exp(2i) is the same thing as exp(1)\^(2i), the argument to exp is already the power. Also these look like transfer functions to me.. it might be better to use the actual transfer commands for this. z = tf('z'); g = 1/z; evalfr(g, exp(2i)); etc.. 
it gives me Undefined function 'evalfr' for input arguments of type 'sym'. 
Use `double()` or `vpa()`. You can only use `double()` if there aren't any symbolic variables left in the argument. So, for example, you can do: syms x z; g = 1/z; subs(g, z, exp(2i)) ans = - 135047369505808369622171506442240/324518553658426740434339348119721 - 295083885798799339995727371698176i/324518553658426740434339348119721 Now you can try: double(ans) ans = -0.4161 - 0.9093i BUT, if you did: g = x*(1/z); subs(g, z, exp(2i)) double(ans) Now you get an error: Error using symengine DOUBLE cannot convert the input expression into a double array. Error in sym/double (line 643) Xstr = mupadmex('symobj::double', S.s, 0); You can use `vpa()` now: vpa(ans) ans = x*(- 0.41614683654714238939791753899257 - 0.90929742682568167116646051685028i) This is still pretty ugly, so just use the significant digits argument: vpa(ans, 4) ans = x*(- 0.4161 - 0.9093i) 
evalfr is for transfer functions. Like the other dude said, use eval, vpa or double
You could consider creating a [struct](https://nl.mathworks.com/help/matlab/ref/struct.html) and use the data names as fieldnames. A = struct; stringVar = 'orange'; A.(stringVar) = 5; A.orange == 5 Or you could use the [assignin function](https://nl.mathworks.com/help/matlab/ref/assignin.html) to save the name into a specific variable. variablename = 'orange'; value = 5; assignin('base', variablename, value); orange == 5
I think based on your question you are multiplying two matrices A and B of the same size and expect the elementwise multiplication as the result, where each element in A is multiplied with the corresponding element in B. If that is what you want, then, as your homework is prompting you to try: A .* B uses elementwise multiplication as the operator.
I typically use "1i" to mean the imaginary constant for this reason. I think it also is slightly faster (I recall the matlab editor suggesting it one time that I didn't do this). That frees up i for an index (very natural index and I always thought ii and jj looked incredibly ugly) and avoids the i/j confusion. 
Thank you both of these work really well :)
Yes that makes sense now. This is what I've changed it to: N=rand; While N&lt;20 N=N+rand if rand&gt;.75 disp('x is greater than .75') end i=i+1; end disp(i) This seems to run until N is 20 and it notifies me when the rand # is greater than .75, but when it displayed 'i' it said '47+1i'. Looks like the only thing I need to do is get rid of the '1i' at the end. How do I go about doing that?
Why do you think there is a 1i there? What happens on the first iteration of the while-loop? At the end of the first iteration you have it computing i=i+1, but at this point in time the variable 'i' has not yet been created. Thus, Matlab thinks you are using 'i' as the [imaginary unit, sqrt\(-1\)](https://en.wikipedia.org/wiki/Imaginary_unit). So it assigns the value of i+1 (sqrt(-1) + 1) to the variable called 'i.' From that point forward it proceeds how you'd expect given that 'i' has been created. So you need to define 'i' before you use it. What does 'i' represent? If you were to define i before the while-loop, what value would it have?
**Imaginary unit** The imaginary unit or unit imaginary number (i) is a solution to the quadratic equation x2 + 1 = 0. Although there is no real number with this property, i can be used to extend the real numbers to what are called complex numbers, using addition and multiplication. A simple example of the use of i in a complex number is 2 + 3i. Imaginary numbers are an important mathematical concept, which extend the real number system ℝ to the complex number system ℂ, which in turn provides at least one root for every nonconstant polynomial P(x). *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
‘i’ represents the amount of times random numbers were added together in order to reach 20. Which should be the same as the number of loops the ‘while-loop’ goes through to reach N&gt;=20. I fixed it. At the begging I set i=0 because 1 should be the loop and then it increases by 1 every further loop. I think I may have got it. Thanks for the help and let me know if I’m still missing something :)
You should probably set i=1 before the while-loop because the outcome of interest is the "number of random variables required to reach 20," and that first call of x=rand definitely counts as the "first" random number ;-)
Is there a way to make Matlab not try to get rid of pi? I need a symbolic expression without decimals. Thank you for the reply.
Ok this is what I got: N=rand; i=1; while N&lt;=20 x=rand N=N+x if x&gt;.75 disp('x is greater than .75') end i=i+1; end disp(['Number of random #'s added: ',num2str(i)]) It seems to work, but I was wondering why I can set x=rand in the 'while loop' and it gives me a new number every time, but when i set x=rand before the 'while loop' it gave me one number for x? Thanks 
I honestly have no idea why it's converting `pi` to the fraction. If you consider that `2/pi` is a constant, you can set `a` equal to the integral and multiply by `2/pi` later, which means you could multiply by `2` first and then divide by `pi`. Consider the following: syms x k evalin(symengine, 'assume(k,Type::Integer)') a = (2/pi)*int(cos(x/2)*cos(k*x), 0, pi) a = -(5734161139222659*(-1)^k)/(4503599627370496*(4*k^2 - 1)) That's ugly. Try instead: a = int(cos(x/2)*cos(k*x), 0, pi); a = (2/pi)*a a = -(5734161139222659*(-1)^k)/(4503599627370496*(4*k^2 - 1)) Yup. Also ugly. Try instead: a = int(cos(x/2)*cos(k*x), 0, pi); a = 2*a; a = (1/pi)*a a = -(5734161139222659*(-1)^k)/(4503599627370496*(4*k^2 - 1)) Yup, also ugly. But, for some reason: a = int(cos(x/2)*cos(k*x), 0, pi); a = 2*a; a = a/pi a = -(4*(-1)^k)/(pi*(4*k^2 - 1)) I don't know why this is like this.
When you write 2/pi or 1/pi for that matter matlab computes that first. This then causes a decimal rounding somewhere, making it impossible to compute the result as a fraction of pi. When you write it like you did in the last example, a is computed first (with pi in it) and then divided by pi which allows it to fraction the pi out with the pi from the integral. An alternative way to write it is a = 2*a/pi. 2/pi is a 'nono' because it gets computed as a numerical value without being able to return to a fraction of pi.
&gt; is it possible? Yes. &gt; Where shoul I begin? Probably by taking a class in Machine Learning? There is not near enough information for use to help you here. A NN is not just a "one size fits all" tool that you just dump data into and get out a useful answer. You have to know how it works, what you want to accomplish, etc in order to get useful information out. 
&gt; class in Machine Lear Thank you for the answer, but in my college we do not have classes in machine learning... Do you have any book suggestions or video lectures (preferably applied to matlab)?
I was wondering, "Why then does it do pi symbolically sometimes but not others?" and realized that maybe it's implicitly declaring pi as symbolic, so I tried explicitly declaring pi symbolic, **and it worked!** a = (2/sym(pi))*int(cos(x/2)*cos(k*x), 0, pi) a = -(4*(-1)^k)/(pi*(4*k^2 - 1)) 
Why? what doesn't make sense with what I was saying?
That's not my bag, baby. Not familiar with any of the terminology. After I wrote that comment, I did some digging just to educate myself. I read that "Brownian motion" is essentially a random walk. I was curious why you were thinking the standard deviation of the *difference* of the path would be 1, and then realized that you're looking for the standard deviation of each "bump" to be on a standard normal distribution. I also checked out the original paperwork that /u/TheAccountToThrowWay linked and, from what little sense I could make of it (very little lol), I couldn't see anywhere in there that linked an actual probability distribution or any other actual noise parameters (standard deviation, range, etc.) to the formula used to generate the numbers. Everything seems to be based around this "Hurst parameter," which again is apparently very far removed from my line of work as a control engineer. The Hurst parameter is confounding to me because I can't seem to get a clear intuitive definition for what it is, beyond Wikipedia's "relates to autocorrelation" statement. Again, though, I can't seem to get an intuitive definition - is it a filter parameter? Or an indication of the "color" (from colored noise) of a process? But even then, the *bounds* don't make sense to me. If it were some measure of autocorrelation, and the scale were zero to one, then I would think that *zero* would be a completely random process (std = 1) and *one* would be a completely periodic function. But again, there is no indication of *frequency*, just that a process "is" periodic. I got about that far and gave up. Oh and also, the paper linked is the basis for Matlab's formulation, but the paper states it's a "fast" method; I don't know if this method glosses over and/or assumes characteristics about noise, etc., in favor of a faster implementation. If I were you and cared about the statistical properties of the signal, I might investigate some of the prior methods cited in the paper. They might be slower, but what good is a fast process that you can't characterize?
Hey, thanks! I tried your code with a different integral syms x k evalin(symengine, 'assume(k,Type::Integer)') a = 2/3*int((x^2 - 3*x)*sin(pi*x*k/3),0,3) a = (18*sin(pi*k))/ (k^2 * pi^2) - (72*sin((pi*k)/2)^2)/ (k^3 * pi^3) Somehow it knows that cos(pi*k) = -1^k but it does not know that sin(pi * k) = 0. Any idea why that is? Wolfram has the correct answer http://www.wolframalpha.com/input/?i=2%2F3*int((x%5E2+-+3*x)*sin(pi*x*k%2F3),0,3)
Yes, same thing. https://www.mathworks.com/help/images/ref/gabor.html 
[removed]
Knowing when it may be easy vs when it will be hard to increase performance is the first thing I think of on this. Things like going from dynamic resized to preallocated I don't worry about in prototyping because it's almost always trivial to "fix" that. When I have to change the algorithm to use higher performance methods (EX: loops -&gt; vectorized) I usually put the work into the prototype to vectorize from the start. Only don't bother if you have good reason to believe this is a tiny one-off or toy problem. The habit to write the higher performance algorithm by default often saves development time in the long run because * 1) Eventually you just get to where writing faster (ex vectorized) code is just the natural thing to do (it looks more like the underlying math too!). You literally are forcing yourself to practice at becoming a better programmer by doing this. * 2) Ideally you save yourself a rewrite by not making the (slow algorithm -&gt; fast algorithm) transformation on your source code. * 3) Things that are not broken don't get fixed. People are amazing for sticking with the slow devil they know vs putting in the effort to rewrite code to get the better/faster/easier to debug/easier to reason about code Finally, and I can't stress this enough, get in the habit of using the profiler early and often. Humans basically can't predict what parts of code are fast/slow without lots of time getting training to see the slow parts by the profiler. The profiler will also teach you a lot about what's going on under the hood that you would never have suspected otherwise. Doing this is critical to being able to Know when it may be easy vs... oh wait I just looped ;-)
This is pretty much exactly my response as well. A long time ago I started holding myself to some standards of good programming, and by now it's really the natural way for me to work. This applies to vectorizing, but my favorite example is splitting a chunk of code out into its own function. Knowing when this is appropriate is second nature now, and actually much easier for me than keeping everything in one big messy file. 
Thanks but I'm running matlab 2015a and that function isn't available unti 2015b. Is there another way to do this?
Try giving it a 'nudge' with the `simplify()` command. If I follow your script I get: simplify(a) ans = -(18*(-1)^(k + 1)*((-1)^k - 1)^2)/(k^3*pi^3)
How about you just write a short paragraph explaining what the different bits of code is doing. Try to split it into logical chunks and just write a one sentence summary of what that chunk does. Pseudo code is just taking it one step further. It should be said though that generally speaking, pseudo code is written before the code itself, not after. Writing pseudo code *de de novo* is in many ways easier than going from code to pseudo code.
matlab is basically already pseudo code
Because a while loop is a conditional loop that will run an infinite amount of times until the condition you specify is met. So putting x = rand in that loop will give you a new random number each loop iteration. 
The code is well commented and basically explains each step. Type help X where X is any function call. If it's in the Matlab help, read it. Check mathworks forums for further explanation. Then put the pieces together
It‘s magic! Or math? I always get confused with these....
So, if I understand correctly you first generate huge equations of motions via the symbolic toolbox and then copy paste these equations afterwards into another script to work with them? What you could do is, generate those equations of motions and then write them to a .txt file or save them in a .mat file. Then in your second script you would load the .mat file (or import .txt) and convert your symbolic equation into a character array via [this function](https://mathworks.com/help/symbolic/char.html). This entry can then be used inside of the evalin function. Example: Script 1: syms x; y = x + 1; save('nameoffile.mat','y'); Script 2: x = 2; load('nameoffile.mat'); expr = char(y); result = evalin('base', expr); There is probably a way better way than this weird setup, but I think this mirrors quite well what you have, if I understood you correctly. 
Right click in the plot, under characteristics you can find what you need.
For question 1, [read this](https://mathworks.com/help/matlab/ref/ismember.html) name2 = name(~ismember(name, 'FCH')); For question 2: p = isnan(PortfolioReturn); Gives the locations of all nans. rows_nans = any(p,2); Checks if any entry in a row is true, then return true for the entire row. Returns_no_nans = PortfolioReturn(~rows_nans,:); Gives you what you need. Be sure to read the documentation. 
Thanks, this doesn't give me everything though. Do you know of a command that literally tells you the response information of the transfer function?
Thanks for your answer, it seems to work however it doesn't seem to recognise variables that are defined before it in the .m file? Only when I type them into the command window before running it does it recognise the variables. Do you know why this could be? 
I believe they're all in the [help](https://fr.mathworks.com/help/matlab/?requestedDomain=true) 
Any way to color it in?
That is perfect, thank you so much!
Well, the reason I am writing this is because I don't have the problem mentioned in 3 :).
Do people even try to read the documentation? 
If you're trying to get a numerical answer, why are you using symbolic variables? 
Yeah its good, although your variable naming is wonky, like sum is a function and you're overwriting with, but thats fine. In reality you'll have encounter situations where there is no solutions or cross-checking. Best thing you can then do is to think logically. Is your answer in teh order of magnitude you expect, does your script behave the same for different scenarios, if you solve the question in a different way do you get teh same answer etc. For example in this case you could rewrite your while loop with a for loop and an if statement which contains a break.
I solved it through numerical, thanks
I used the int function in the end, thanks
I did a project (for fun) where I would input object radii with initial speeds and then let gravity take over to see how the system behaved. (I'd just read The Three Body Problem series and wanted a visual of an N Body Problem system) It was kind of cheating but what I did was use two quiver plots of my planets with arrows representing by velocity and acceleration components at that time step and a circle of varying size to represent the object size. For the objects V and A were whatever. Everything else was zero so I didn't have a figure full of arrows. Below is how to add images to a figure. You just have to have fun with your image scale as a function. I also initially used the text(x,y, your text here) function to add a letter at the point before I figured out the image thing. https://www.mathworks.com/matlabcentral/answers/267828-insert-image-behind-graph
Basic programming ... maybe a hint ? randi([0, 9], 1, n) 
length could either mean, the number of digits within the number or the number of elements within a vector. please clarify
Rand in a rand?
I know how to vary the number of items. I dont know how to randomise the number of items given. 
the number of elements within a vector
indeed
Randomise the value of n? 
Thank you so much. Can I bother you with something? The vector cannot have two identicle numbers. I dont get any identicle numbers when using randperm, but I cant seem to use this method on this function. Thank you? 
You should learn to do your homework alone. I haven't used matlab in 2 years but it took me 20 seconds to read the randperm help page. You can do something like randperm(9) but then index only the first n values from the returned vector 
I would if I could. I have been sat in this library for 12 hours now and had to throw away everything I have previously done because I completely missed something so simple. I have read the randperm help, and I am very well aware of how annoying it must be to have people come on and ask questions.
I did think that using boolean logic wouldn't be the right thing. Is there an equivalent sign or operation that indicates that I DON'T want one variable to contain any values in another variable? Datasample(r,1) just randomly samples one value from r and assigns it it to variable c
It is not that hard. You specify the center of the circle, let's say (x0, y0). For every single spot in the matrix (for-loops) you compute the distance from the center in "index-coordinates" (via pythagoras) and check with an if-statement if the value is lower than the radius of the circle (assign 1) or larger than the radius of the circle (assign 0). So double-for-loop with one if-statement inside. 
There's no such thing as an "if loop". You don't actually need any loops to do this. Just meshgrid, linspace, hypot, and &lt;. 
You don't actually need a for loop, which would be expensive if you have a large matrix, or your mask is 3D. You can use a meshgrid and define the center (cX, cY), the radius (r) and all you need is the size of the image (width, height) [xx,yy]=meshgrid(1:width, 1:height); mask=(sqrt((xx-cX).^2+(yy-cY).^2)&lt;=r); 
Disable the color bar, get rid of all ticks, make the labels empty and you're done. Example: h = gca; h.XTick = []; H.YTick = []; Etc. 
Modern computer screens already have mass. 
double for loop + matrices is obviously something like for i = 1:length(1,m) for j = 1:length(2,m) If condition end end end where condition is to see if it is inside the radius and if it is you assign m(i,j) = 1; 
This is a bit old, but check out colfilt and blockproc. The blockproc function is more straightforward, but colfilt will be significantly faster.
If you've generated the functions via the symbolic toolbox you should be able to use [matlabFunction](https://www.mathworks.com/help/symbolic/matlabfunction.html) to create *either* an anonymous function or a standalone .m file. See my [previous post on this](https://www.reddit.com/r/matlab/comments/7e9wb7/why_you_should_avoid_using_the_symbolic_toolbox/dq4e2rs/), which demonstrates it's fairly impressive performance.
No
Quote from the documentation of csvread: "Embedded white space in a complex number is invalid and is regarded as a field delimiter.". The fact that your initial 100 numbers are turned into 91 complex numbers tells me that something weird happens when reading. I suspect that there is some irregularity in that .csv file such that Matlab considers some of the actual numbers as the complex part of another number. That should be the case for 9 numbers. You might want to check if really all of the read 1x91 numbers are purely real. Let's say that you called the 1x91 matrix within Matlab "A". Use any(imag(A)) to see if any of the imaginary parts is non-equal to zero. If so, you probably want to have a look at your .csv file in the notepad to see where the irregularity might come from.
no, download, reinstall, use same key
Put the dlmwrite line inside the for loop if you want it to save at the end of each iteration 
Yeah, because you're overwriting the csv file, 'test.csv', with each iteration. dlmwrite should be there, but you should also be writing to a new csv file each time. So you need to have a line where each csv file has a new name, possibly the trial name? (Something like 'test1.csv', then after the next iteration, 'test2.csv', and so on)
No, it won't update. Go to [MathWorks](https://www.mathworks.com/mwaccount/) and download the new version associated with your mathworks account.
is there anyway to save each iteration into one file, one after the other? 
Yes the function should work I was just about to suggest it. Al you would need is which rows to import from its straight forward. 
I'm sure there is. Currently on mobile so I can't check, but read the dlmwrite documentation on Matlab's website 
Has anybody ever told you that you're their favorite person? Because today sir, you are definitely mine! 
what are your parameters a and b? do you have a function for them, or do they come from an array or...?
Hey, thanks for your code, but I was trying to understand it and ran into a couple of difficulties: Why "mydata = zeros(8000, 3)"? Doesn't that create a 8000x3 array of zeros? And from what I understand, it creates an array, not a table (although my knowledge on the differences between these two classes are a bit limited).
You are right sorry that was my own code that I used. I’m not sure what your data contains but simply change it to make an empty table. I would honestly need more information on what is in your table? Is i all text, numbers or a mix? 
No prob, it felt like that! I had a sample in the above text, the CSV files which I have contain about 2000 readings, and the files look like this: TimeInSecs,CurrentInMiliamps 0.1,0.008 0.2,0.003 What I've managed to do is to use the import wizard to create a function, and invoke this function in a for loop. However, I've now been running into problems where the loop saves the imported data into a #(Number of CSV files imported)x1 cell, within which contains a table with all the readings in the CSV files, hence the problem of (a) loss of CSV file name, and (b) an added difficulty (based on my very limited understanding of MATLAB) in trying to access these cells during data analysis.
Now do you actually need those strings of timeinsecs and currentibmiliamps? 
Sorry, added an edit above. &gt; Now do you actually need those strings of timeinsecs and currentibmiliamps? I'd prefer to have them, as it (IMO) makes the referencing of the data during analysis a bit easier.
i don't think matlab can solve this in a few lines of code then. as far as i know, you can't refer to an element in an array using your sum iteration index as an array index. the problem can be solved quite easily if you write a for-loop to do the summation automatically and then solve the resulting equation. may i ask why the sum is split in two parts? why not just run one sum from t = 1 to T? here's my proposed solution: T = 5; a = 1:5; b = 1:5; syms x eq = 0; for t = 1:T eq = eq + a(t)./(b(t)-x); end eq == 1; ans = solve(eq,x); vpa(ans)
Thanks. I have already tried with the Matlab command 'solve' and it doesn't work if T is high and a, b are complex. Also, I have split the sum into 2 parts because the second part of the sum is zero for one case and valid only if meets some criteria that I define in the program.
ok nice, let me know if it works or not
This is my exact CSV file contents, it loads fine when I double click the file in MATLAB but adds complex part when I use csvread...any thoughts? 0.7300516,0.0472056,0.8028633,0.8870052,0.5953524,0.4002477,0.0543991,0.1153031,0.4514824,0.8944775 0.0096945,0.8224671,0.2937926,0.5842367,0.4162787,0.2550103,0.4680799,0.4685607,0.3339478,0.5886941 0.6924560,0.6455623,0.0834645,0.3710599,0.7341309,0.0988546,0.2765557,0.4327037,0.3180795,0.3679331 0.6484707,0.9962096,0.2786738,0.4906872,0.8475953,0.8117795,0.1341972,0.1888062,0.9360718,0.0922733 0.1001378,0.3292570,0.3433903,0.3909292,0.2476388,0.8579027,0.7285217,0.0057386,0.7673066,0.9196026 0.1799770,0.7690317,0.4993083,0.7343549,0.8297712,0.2325524,0.8677437,0.8467330,0.3675360,0.4175486 0.0519433,0.1237510,0.1383928,0.1683928,0.6011025,0.1481921,0.9589423,0.9378640,0.7365007,0.5828466 0.6453113,0.4386215,0.8115836,0.4025661,0.2479632,0.0480005,0.1355558,0.3307055,0.8175172,0.7649384 0.4430195,0.8162405,0.9086350,0.1188870,0.2412584,0.8359005,0.5401932,0.5330195,0.3591531,0.9485721 0.5897814,0.2823788,0.8306962,0.9715619,0.7845266,0.4635733,0.7415623,0.5462721,0.1380519,0.1692778
So I just saved your stuff with csvwrite('test.csv',A) where A was your content. If I use csvread('test.csv') then, I get ans = 0.7300 0.0097 0.6925 0.6485 0.1001 0.1800 0.0519 0.6453 0.4430 0.5898 0.0472 0.8225 0.6456 0.9962 0.3293 0.7690 0.1238 0.4386 0.8162 0.2824 0.8029 0.2938 0.0835 0.2787 0.3434 0.4993 0.1384 0.8116 0.9086 0.8307 0.8870 0.5842 0.3711 0.4907 0.3909 0.7343 0.1684 0.4026 0.1189 0.9716 0.5954 0.4163 0.7341 0.8476 0.2476 0.8298 0.6011 0.2480 0.2413 0.7845 0.4002 0.2550 0.0989 0.8118 0.8579 0.2326 0.1482 0.0480 0.8359 0.4636 0.0544 0.4681 0.2766 0.1342 0.7285 0.8677 0.9589 0.1356 0.5402 0.7416 0.1153 0.4686 0.4327 0.1888 0.0057 0.8467 0.9379 0.3307 0.5330 0.5463 0.4515 0.3340 0.3181 0.9361 0.7673 0.3675 0.7365 0.8175 0.3592 0.1381 0.8945 0.5887 0.3679 0.0923 0.9196 0.4175 0.5828 0.7649 0.9486 0.1693 I cannot reproduce your problem...
I'm assuming you've figured it out, but just in case someone else wanted: dlmwrite(filename,M,'-append')
Basically each version of Matlab is installed as a separate application. So if you have 2016a, you could download 2017b or 2018a or something and it would be installed as a separate application from scratch. The older versions will still exist on your machine until you uninstall them.
 % plot up here axis off print('figure','-dpng','-r1000');
Okay I see what you mean. The function you have created needs to me used without a for loop just for example MyVar1=createdfunc(‘MyVar1.csv’, r, c) And simple add each file in one by one. It will be a tad slower than a for loop but it’s not that big of a deal. Or : https://www.mathworks.com/matlabcentral/answers/129534-importing-folder-of-csv-files-and-saving-them-as-variables-with-different-names?s_tid=gn_loc_drop
I'm confused. First summation is t to k, second is k+1 to T. Summations are the same form though, so can't you just combine them to one summation from 1 to T? Then multiply both sides by sum of (b(t) - x) from 1 to T. X isn't a function of t, so it just gets repeated N times, where N is the number of samples. Looks like Nx should be equal to the sum of (b(t) - a(t)) from 1 to T. 
That won’t turn off decorations such as legends or colorbars, per OPs request 
Then just don't plot them?
Thanks for your help, I appreciate it. Seems it was just a weird formatting issue when I saved my excel file as .csv from my mac.. I just opened and resaved on my linux computer and it worked fine. :D
Thanks for your help, I appreciate it. Seems it was just a weird formatting issue when I saved my excel file as .csv from my mac.. I just opened and resaved on my linux computer and it worked fine. :D
thought I was going nuts lol done this a million times before 
Then you're saying that the sum of a(t) from k+1 to T is zero. You can still split out your operation: 1. Simplify as stated above, such that x = (1/N) * Sum_1\^T(b(t) - a(t)) 2. Split the summation to a(t) and b(t) terms: x = (1/N) * Sum_1\^T(b(t)) - (1/N)*Sum_1\^T(a(t)) 3. Split the summation as you did, by breaking on k: x = (1/N) * Sum_1\^T(b(t)) - (1/N) * Sum_1\^k(a(t)) - (1/N) * Sum_k+1\^T(a(t)) This is a really messy way to phrase it, though, and you're probably not saving much computational time writing it this way. Unless you have some really, *really* good reason to split the summation up, just leave it all as presented in (1) and let Matlab worry about whether the sum from k+1 to T is zero or not. At some point, you're going to change the function that drives/creates a(t) and/or b(t), but you're going to forget to update k, and that's going to cause you a world of headaches. 
Even when I'm writing something quickly, I try to avoid the biggest slowdowns. The more you practice this, the quicker it is in the future. For me, the main things I try to remember for CPU speed include: 1. Vectorizing is much, much faster than a for loop (I have had precisely one exception to this); 2. Always preallocate variables before a loop if you can possibly know their final dimensions; 3. Structures of arrays are much, much faster than arrays of structures (i.e. `struct.field(:)` is better than `struct(:).field` 4. Calculate constants before entering loops whenever possible Finally, note that the above tips assume that CPU time is your limiting factor. If RAM usage is your limiting factor, then you will have to take a different approach that processes variables in manageable pieces - even if that processing takes more CPU time. Similarly, file read/write operations are often a bottleneck which is mostly only improved by reading/writing things all at once.
It is possible and there's likely a better way than this.... If you have *k* states and each state has *n* nodes, then run *k* loops and store the output in an array that has *k* dimensions that are each of lenght *n*. From there, I'd use max().
I think OP says that's the plan at the moment. I think they're looking for something like the [final value theorem](https://en.wikipedia.org/wiki/Final_value_theorem) but for a *maximum* value instead, like the peak in a step response instead of the final steady-state value. I don't think such a theorem exists. 
Thanks a lot.. I modified a little and did it :) Working now :)
I know a lot of people use [Knitro](https://www.artelys.com/tools/knitro_doc/3_referenceManual/knitromatlabReference.html) for fast optimization... 
Read the documentation for sprintf. There's a nice way of padding a string with zeros to a predetermined length, regardless of its numerical value. 
That looks great, I'll give it a go. Cheers! 
Lol, I don't hear that quite so often, so thanks! Hope you were able to figure it all out (the guy who commented before me was also super useful). 
If you type `help geoshow` into matlab, it should give a detailed explanation of how to use the function. Mathworks also keeps more detailed help files on their website. For example, here's the page for the `axesm` function you mentioned: https://www.mathworks.com/help/map/ref/axesm.html After reading those help files, try feeding them your data, and let us know if you have more questions.
I believe matlab does have an associated program called SimScape. This will allow ypu to create bodies and give them a mass for multibody dynamics problems.
Im not sure how helpful this would be to be honest.
Unfortunately not. The stems go from the top down. I'd like them to go from the bottom up.
Just re-map your data to be distance from -100 and then adjust the y-tick labels appropriately
I'll work on that, thanks.
Thank you.
[removed]
It's not clear to what your problem is... Are you having trouble with getting the data from the actual table that corresponds to the entries where you have a '1' logical? If that's the case, I would probably find a way to get just the data you want from the table into another array. Something like: data_mat = []; %dummy vector to be filled for ii=1:length(Table) if AAPL_ID(ii) == 1 data_mat = [data_mat; Table(ii,2)]; end You would then have the vector with all of the "underlying price" values only for AAPL based on the logical == 1. 
Do you know how to use the debugger? If not, it's really quite simple. You simply click on the dash next to the line number where you want a stop, and then run your script again, and MATLAB will "pause" at that line, and you'll be inside the workspace of the function you're investigating. You can then step through and investigate the value of variables. Doing this and stepping through your loop would make it clear what the problem is. Here is a hint. Just copy and paste the lines `co = ...` and then `v = roots(co)` into your command window, and inspect `v`. I don't think it will be what you think. 
What pulse width do you want? I usually do the following: x = rectpuls(t/Tp); Remember, rectpuls is equal to one for abs(t)&lt;1/2 and zero everywhere else. 
oops thanks mate. so for a particular pressure I will get 3 roots which all will be present in 3 rows in a column, any ideas how to plot that so it will be a single graph? 
Well, if you want to add to the bottom of a column use `;` instead of `,` (; is the vertical concat operator, while , is the horizontal concat operator). Or, if you want to make them into a row vector, you could transpose your roots using the `'` operator. 
Well the problem given was for a specific substance we have to select a particular Temperature and then by varying the pressures we have to plot the isotherm using van der waal's equation of state. The problem is I am new to MATLAB and while I understand the physics behind it, that it will have a single root in the subcooled and superheated region but it will have 3 roots in the saturated liquid and vapour zone so I am still having the problem about how to plot it. now the code giving 2 imaginary roots in the subcooled and superheated region as expected and real in the mixture zone but I have no idea how can I plot such a thing? How to ignore the imaginary roots while retaining the real roots and also making the pressure and volume matrices of same dimension? Help
Appropriately enough, there is a command `annotation` that I think does what you want: ah=annotation('textarrow'); set(ah,'parent',gca); set(ah,'X',[xBox,x0(eleNo)],'Y',[yBox,y0(eleNo)],... 'String',num2str(MaxVar(eleNo),4),'FontSize',12,... 'TextBackgroundColor','w','HeadWidth',2.5,... 'HeadLength',2.5,'LineWidth',1.0,'TextEdgeColor','k',... 'Color',[0,0,0]); There are a lot of options, and different ways to make `annotation` do what you want, but I've used the above code to successfully ensure that the annotations are on the side of the data that I want. The annotation box will be at x and y coordinates of `xBox` and `yBox` respectively, so you just need to come up with a reliable way of determining where those should be. The text in the annotation is specified by the `String` property, which for me was the variable stored in `MaxVar`.
Have you tested this code? I don't think it works, or if it does, I think maybe it's a marginal thing. A few points: 1. The biggest thing I can't figure out... what is `k` for? Let's say you're early in the process, and say `i = 1` and `j = 10`. Let's say `n = 100`. Your formula for k, `mod(1-10, 100)` gives `k = 91`. `k` continues to count *backwards* to zero. Later in the process, say `i = 10` and `j = 1`. Now you get `k = 9`, but again it's counting *backwards* and you'll *loop around zero* to `n-1` (99 in this example), and continue counting backwards. 2. Final point, you are doing this without any checks on the length of `h`. If `length(h)&lt;length(x)`, you'll error out. If `length(h)&gt;length(x)`, then you'll loop around a *portion* of `h` as described in point (1) above. 
Try increasing the number of candidates you get from the hough function. You may need to filter out duplicates afterwards.
you mean increasing `numpeaks`? When I did that, I got the lines I expected However, isn't there a way Matlab can automatically detect the number of edges? Because I have a bunch of images that are a little different from the sample image I provided, and most of them will not have the same number of edges with each other 
I have no idea what you're asking. Where are you stuck?
What is pie0?
yeah sorry i forgot to post picture afterwards i realized i missed it :D https://prnt.sc/i2fznu + under R's u have (n) which stands for inner and (z) which stands for outer :) i just need some basic graphs about this equations and what may change them 
It's unclear what is going on, as you have provided little information as to what you are doing
in short, use hold on and plots. a "brute force" approach could look like: xvec = [0 1 2 3] yvec = [0 1 2 3 4 5] numX = length(xvec); numY = length(yvec); hold on % plot circles for k = 1:numX for j = 1:numY plot(xvec(k), yvec(j),'ob','markersize',10) %black circle end end % lines for k = 1:numX plot([xvec(k), xvec(k)], [yvec(1), yvec(end)], 'b') end for j = 1:numY plot([xvec(1), xvec(end)], [yvec(j), yvec(j)], 'b') end the trickier part is the text labels. you can use this: https://www.mathworks.com/help/matlab/ref/text.html 
Maybe this could be a work cut out for [gramm](https://github.com/piermorel/gramm), which is able to apply color to datapoints automatically... among many other things. It also supports brewer colors (see set_color_options). 
Pi * E0, which is vacuum permittivity constant
https://pastebin.com/xeSiHH8G Hope it helps.
Ggplot2 in R can do this kind of thing very easily 
If you have R2015b or newer check out the graph function. You can make something like [this](https://www.mathworks.com/help/examples/matlab/win64/PlotGraphExample_01.png) and can probably use all of the other functions to get you close. https://www.mathworks.com/help/matlab/ref/graph.html https://www.mathworks.com/help/matlab/ref/graph.plot.html#inputarg_G
If you plot them all on the same graph you can turn them on and off in the GUI.
oh that looks hot. thank you.
If you say `a = diff(V)./diff(t)`, then `a(1) = (V(2) - V(1))/(t(2) - t(1));`. This goes all the way to the end; if there are `nSamples` in your time vector, then you get: a(nSamples-1) = (V(nSamples)-V(nSamples-1)) / (t(nSamples) - t(nSamples-1)); That is, your output will always be one sample shorter because `diff()` gets the difference *between* samples. Because the first entry in a `diff()` output is calculated on the *second* entry of the input vector, I always get the plots to line up like: plot(t(2:end), diff(V)./diff(t)); This starts time on the second sample, which is where the first entry of your diff is generated.
These seems like a great solution but is still giving me problems since my a is being found through a loop. I tried a((i+1),2:end) = diff(V(i+1))./diff(t(i+1)); and got this error "Subscripted assignment dimension mismatch." 
%RK4 loop for i=1:N %iterate time t(i+1)=t(i)+h; %RK substitiution and summation k1V=fV(t(i),V(i),X(i)); k1X=fX(t(i) ,V(i) ,X(i)); k2V=fV(t(i)+h/2,V(i) + h/2*k1V,X(i) + h/2*k1X); k2X=fX(t(i)+h/2,V(i) + h/2*k1V,X(i) + h/2*k1X); k3V=fV(t(i)+h/2,V(i) + h/2*k2V,X(i) + h/2*k2X); k3X=fX(t(i)+h/2,V(i) + h/2*k2V,X(i) + h/2*k2X); k4V=fV(t(i) + h,V(i) + h*k3V ,X(i) + h*k3X); k4X=fX(t(i) + h,V(i) + h*k3V ,X(i) + h*k3X); V(i+1)=V(i) + h/6*(k1V + 2*k2V + 2*k3V + k4V); X(i+1)=X(i) + h/6*(k1X + 2*k2X + 2*k3X + k4X); %calcualte acceleration a(i+1) = diff(V(i+1))./diff(t(i+1)); %calculate all work Wgas(i+1) = n*R*T*log(X(i+1)/l1); Watm(i+1) = -P*pi*r^2*(X(i+1) - l1); Wg(i+1) = -(M+m)*g*(X(i+1) - l1); Wfr(i+1) = -u*2*pi*R*l2*(V(i+1)+V(i)/2 * (X(i+1)-X(i))); Wtot(i+1) = Wgas(i+1) + Watm(i+1) + Wg(i+1) + Wfr(i+1); %calculate KE KE(i+1) = 0.5*(M+m)*V(i+1)^2; end
 %RK4 loop for i=1:N %iterate time t(i+1)=t(i)+h; %RK substitiution and summation k1V=fV(t(i),V(i),X(i)); k1X=fX(t(i) ,V(i) ,X(i)); k2V=fV(t(i)+h/2,V(i) + h/2*k1V,X(i) + h/2*k1X); k2X=fX(t(i)+h/2,V(i) + h/2*k1V,X(i) + h/2*k1X); k3V=fV(t(i)+h/2,V(i) + h/2*k2V,X(i) + h/2*k2X); k3X=fX(t(i)+h/2,V(i) + h/2*k2V,X(i) + h/2*k2X); k4V=fV(t(i) + h,V(i) + h*k3V ,X(i) + h*k3X); k4X=fX(t(i) + h,V(i) + h*k3V ,X(i) + h*k3X); V(i+1)=V(i) + h/6*(k1V + 2*k2V + 2*k3V + k4V); X(i+1)=X(i) + h/6*(k1X + 2*k2X + 2*k3X + k4X); %calcualte acceleration a(i+1) = diff(V(i+1))./diff(t(i+1)); %calculate all work Wgas(i+1) = n*R*T*log(X(i+1)/l1); Watm(i+1) = -P*pi*r^2*(X(i+1) - l1); Wg(i+1) = -(M+m)*g*(X(i+1) - l1); Wfr(i+1) = -u*2*pi*R*l2*(V(i+1)+V(i)/2 * (X(i+1)-X(i))); Wtot(i+1) = Wgas(i+1) + Watm(i+1) + Wg(i+1) + Wfr(i+1); %calculate KE KE(i+1) = 0.5*(M+m)*V(i+1)^2; end %plots
There are a lot of variables in play. Operating system, disk technology (ssd vs spinning), network interconnect, operating system, speed of network, load of other vms on the same systems, etc. 
Wavelets for event detection. 
nice. thanks for sharing.
Have a look at FINDCHANGEPTS https://www.mathworks.com/help/signal/ref/findchangepts.html 
If you have a range of 0:1, then if you multiply that by a number you get a longer range. I.e. if you scale 0:1 by 5 you get a range of 0:5. You can also shift ranges by just adding or subtracting. If you subtract one from teh range 0:1 you get a range from -1:0. If you add 2 to the range of 0:1 you get 2:3. For example: numbers = rand(2)*5 - 1; Will give me a 2x2 matrix of range -1:4.
For some of the smoother curves you shared, you could try using the curve fitting toolbox to get an equation for your data.
I ended up figuring it out. test = -1.5 +(3.2+1.5)*rand(2) let range be a to b a + (b-a)*rand(size) Thanks for the input!
Import data is just for .mat or .csv files, not the code itself
Does MATLAB have a feature where I can work on the files on my account on any computer? I read that there was matlab cloud but couldn't find anything regarding that. I don't mind downloading the files from my one drive. Im just hoping there was something more convenient. 
This sounds more like a OneDrive issue than a Matlab one. I use Dropbox to do the same thing and have never had any problems. I remember a few years ago OneDrive wouldn't automatically push all the files out to the physical computers, but was instead more of a network drive (whereas Dropbox pushes out changes whenever they are made to all computers with the account as soon as they happen). I'd recommend checking to see if OneDrive does indeed save the files on the actual computer, or just on the cloud, and if you can change that setting. 
in addition to the other comments, you could also do a sliding-window-average of your data points to smooth out some of the noise, where your kth filtered data point is the average of data(k-n:k), where n is the look-back length. 
You're right. Looks like it's a one drive problem. I am able to open a file via Dropbox onto MATLAB. 
For MATLAB file sharing between devices, you could try [MATLAB Drive](https://www.mathworks.com/products/matlab-drive.html). As someone who uses OneDrive and Google Drive already for file sharing, I was sceptical as to why I needed yet another cloud file-sharing service, but it's well designed and works well across all platforms (including remarkably well with the MATLAB app).
if you have a Cumulative Distribution Function, you can use the Inverse Transform Sampling method: https://en.wikipedia.org/wiki/Inverse_transform_sampling Take a look at the examples on the Wiki for clarity, but the awesome thing about this method is it works for any distribution as long as you have the CDF (to my knowledge).
For all the functions matlab has, I've always thought out odd there isn't a "randbetween" function like excel
I was just thinking maybe the files haven't synced https://blogs.office.com/en-us/2017/05/11/introducing-onedrive-files-on-demand-and-additional-features-making-it-easier-to-access-and-share-files/ Open your .m files in notepad first 
Oh great ! Thanks to both of you guys! The first technique is actually interesting but the second is way simpler :) 
Why not use the matlab built in function for that? &gt; https://de.mathworks.com/help/symbolic/mupad_ref/interpolate.html?s_tid=gn_loc_drop
+I haven't heard of Kalman filters before, but I'll look into them. The issue with this is that I don't necessarily have an expected measurement, except for a derivative of 0 for steady state. I'm looking to minimize tuning each case with an arbitary "when data gets ___ away from mean" - e.g. if I run 12 trials, the code can highlight the transient period with moderate accuracy.
When you say derivative of 0, does this mean you have the differential equations that model your system? if so, that's what the KF uses for the "expected measurement" (well, it's a bit more complicated. Its actual expectation is basically a weighted average between the noisy measurement and the theoretical value obtained from the mathematical model). You could look into this [MathWorks site](https://la.mathworks.com/help/ident/ug/fault-detection-using-an-extended-kalman-filter.html) and see if it might help with what you are doing.
[Here's](https://www.mathworks.com/matlabcentral/answers/97504-how-can-i-access-the-saved-command-history-in-matlab?requestedDomain=true) an Answer on the mathworks site.
i don't know. looking at the Wiki for decimation, there are two steps: 1. reduce out the high-frequency signal components 2. downsample the filtered signal Step 1 would have a similar effect since noise contributes to high frequencies (low frequencies too, but it does depend on the noise distribution, like whether it's Normal/White, Uniform, Brown, etc.). Step 2 shouldn't reduce the noise of the samples, but it really depends on the distribution of the noise (like whether it has a temporal component).
Hey! I already had some programming experience but I used these sites for starting out with app designer in Matlab. https://uglyduckling.nl/blog/software/matlab/demo-how-to-create-objects-using-oop-in-matlab-in-under-10-minutes/ https://lifeinplaintextblog.wordpress.com/matlab-app-designer-tutorial-1-english/ https://lifeinplaintextblog.wordpress.com/matlab-app-designer-tutorial-2-english/ https://www.tomdalling.com/blog/software-design/model-view-controller-explained/ 
Don’t know if I get your goal, but I think something along the line of VERTCAT(myStruct(:).xcorr) Should do the trick. 
That did the trick! Thanks so much for your help.
In addition to the other comment, you may find it helpful in the future to create handles for each figure. These handles can be used to specify which figure to be modified. Be aware that sometimes you need a handle to the axes rather than the figure, since a figure can have multiple axes (I regularly mess that up). for n=1:4 h(n)=figure(n); %create figure ha(n)=gca; %get axis handle end surf(h(1),x,y,u); %plots a surface on first figure title(ha(2),'this is figure 2'); %adds a title to axis on figure 2 This can be particularly helpful in larger programs where you may want to modify existing figures. It's also really useful if you ever make a GUI.
https://nl.mathworks.com/help/matlab/ref/rmfield.html
Ah, I see. So, a 'figure' and 'axes' are two entirely different objects in Matlab? Is that correct?
He doesn't want to remove the field 
You sure about that? as far as I understand it he wants to remove the field that contains the string of ''L3_options_20160105.csv' from his struct array.
Then something simple like this should work: files(~strcmp({files.name}, 'L3_options_20160105.csv');
That's right. You can use the `subplot` command to create and manipulate the axes within a figure.
Oh yes thank you so much for your help! I'm a beginner so I get stuck on basic stuff easily :/ &lt;3
Just call ceil within the fprintf command.
Ok so I used solve and some sort of way to accesing the solution by addressing elements of the solution structure. By putting S.ux4, the solution is displayed. What exactly is that doing...
oh EZ thanks I got it sorry for being a noob
It would make more sense to round up first, then use fprintf. Create a dummy variable of the rounded integer, than use %x.0f. 
You can apply an FIR filter and use changes in the moving average to gauge transient changes. The beauty of this type of problem is there is no direct solution to solving this problem. 
A Kalman filter will only give an estimate with respect to the measurement and an analyitical model. It wont help in detecting changes and may actually give a wrong answer depending on the system dynamics. Do not use a KF.
You should test your code against a simple analyitical solution. A particle with drag is one of the few nonlinear differential equations with an exact solution. dv/dt = -Kv^2+f where f is an arbitrary function. Simply use a one dimension case and plot versus time. You should get an asymptotic solution. 
If you do struct.fieldname, that will output all the values of that field of the structs. By having curly brackets around it I catch those values in a cell array. For numbers you could also use [], to catch them in a normal array, but this won't work for strings. Since ['hello, 'world'] will become 'helloworld'.
Matlab compiler SDK toolkit. Costs some money, but lets you deploy to Java, .Net, C/C++
That's not even a little bit correct. 
Even better answer: *read the documentation for what round does*. When in doubt, `doc ____`. In this case, `doc round` returns: &gt; Y = round(X,N) rounds to N digits: &gt; &gt; * N &gt; 0: round to N digits to the right of the decimal point. &gt; * N = 0: round to the nearest integer. &gt; * N &lt; 0: round to N digits to the left of the decimal point.
Round. 
it works. Thank you so much 
wow.
Be aware that `round` is rounding your answer. Use `double` if you don't want it rounded. Use `vpa` if the expression includes a symbolic variable. 
Hey, can you give me some more info on that OCR functionality? What toolbox is that in?
Sure! It took me a bit to find links as citations, but the function is just 'ocr', it's in the "computer vision system toolbox", added in R2014. here's a link to the doc: https://www.mathworks.com/help/vision/ref/ocr.html It's nothing spectacular or anything, tesseract -- the open source library -- does the REAL heavy lifting, mathworks just coupled it to their API and polished off the edges a bit. You pass it an image, even something unprocessed like from imread, and it does it's thing returning candidate answers and bounding boxes in a struct. So like, it by itself isn't gonna be a super magic bullet, but I've used it in the past, generally in cases where I felt it was more of a PITA to write my own mex so I can link into the tesseract (or some other library). Of course, it's performance is a function of how clean/preprocessed your data is, and other things, but it's still nifty.
My guess is that your sampling rate isn't set high enough. If your signal is aliasing, then you are probably: 1. Not measuring the exact peak of each cycle, and 2. Not measuring the full waveform of each cycle. This explains both of your problems. You said, "I've got a problem," but didn't state *how* you're getting that problem. What options are you using when you call the function? You can [see the example waveform on the Matlab documentation](https://www.mathworks.com/help/phased/ref/phased.fmcwwaveform-system-object.html#bu7tc68) and the waveform there is constant amplitude. I would try setting the `SampleRate` option to something like `1e9` first and see if that fixes your problem. For the record, the waveform that you're generating should *never* look like a sawtooth. Not with that command. There's an option to *make* a triangular pattern, but not a sawtooth.
Thanks! From your experience with it, how well do you imagine it would handle a task like pulling handwritten numbers off of paper forms?
You could write test cases where you know what the solution should be and just compare it to your solution. Or you could solve the same system with other software packages and compare your solution to those. Or you could solve the mass spring damper equation symbolically (that is you develop a formula with parameters), then you just substitute into this formula and compare it to your solution.
Hmmmm... So, note that this is just a hunch, so the "error bars" on this guess are wide, but I'd imagine it's not so hot at that. But the OCR engine MATLAB took really is an existing and actively developed open source project. https://github.com/tesseract-ocr/ So, you could download it and give it a shot. Later on this evening I just so happen to be working on a project involving lots of image processing as well as OCR of digits -- if I remember to, I'll write a few by hand and run it through, won't take more than a minute. If the "Real Problem" you're interested in is handwritten digit recognition, there's a wealth of different diverse methods to solve it, it's one of those problems that's been analyzed and worked on for eons. Deep learning with convolutional nets happens to be the new hipster trendy way to solve it these days but there's tons written in the literature about other methods (&lt;tiny&gt;which I tend to prefer&lt;/&gt;) 
Thank you very much. This was helpful. I appreciate your time. 
Yeah, I know what you mean about CNNs. The problem I'm thinking of is a data entry problem... Kind of a side-burner thing. I've got a whole lot (~2K) of old forms lying around, with handwritten numbers in specific boxes on those forms that I would like to get into digital form. Bonus, there's multiple versions of each form. So I'd ultimately need to have a process for identifying the form type, then doing OCR on the relevant subsections of the form. Bottom line, it'll only ever be worth it to me if that available MatLab tools can handle it with very little time investment (no training a CNN, etc.). Any thoughts as to whether something like that is remotely realistically possible?
I wrote a little function but I don't know why it's working. It runs and and says error_ is undefined. function [ approx ] = arctan( x ) %arctan approximation y = nan(1,0); sigfigs = 4; n= 0; while nnz(sigfigs) &gt; 2 term = ((-1)^(n)*x^(2*n+1))/(2*n+1); y(end + 1) = term; n = n + 1; true_val = arctan(x); error_ = abs(100*(true_val - sum(y))/(true_val)); sigfigs = num2str(error_) - '0'; end error_rel = error_; fprintf('relative true error percentage under 2 significant digits is %g\n at %g terms',error_rel,n) end
If you are using the FFT to for example perform convolution in the time domain, it is really performing circular convolution. This means that the edge of the image will wrap over and combine with the other edge of the image. If you pad with zeros, this is still happening, but the edges of the images are zero and therefore they don't contribute to the final answer.
Never had a chance to thank you but you saved my life dude. Thank you for your help!
I'm very glad I could help!
Sorry it took time to respond! Your analysis was great!
So thank you guys for help :) i managed to do it :)
do your (x,y) datapoints fill the entire rectangular domain? if so, assuming you have the meshgrid over X and Y you can fill in a new Z matrix that contains the closest z value from the original data. something like: xVec = linspace(min(xData),max(xData), 100); %do the same for Y for k = 1:numX for j = 1:numY currentX = xVec(k); currentZ = yVec(j); diffX = xData - currentX; diffY = yData - currentY; diff = (diffX.^2 + diffY.^2)^.5; minDiff = min(diff); minDiffLog = diff == minDiff; dataIdx = find(minDiffLog); dataIdx=dataIdx(1); %in case multiple points satisfy equality ZMat(k,j) = zData(dataIdx); end end [XMat, YMat] = meshgrid(xVec, yVec); contour(XMat, YMat, ZMat) 
I started my function but I cannot get it to work, as for some reason my variables in the while loop are undefined. function [ approx ] = arctan( x ) %arctan approximation y = nan(1,0); %start a vector that will grow, this vector will have each term as an element sigfigs = 4; %start the while loop n= 0; %start at n = 0 while nnz(sigfigs) &gt; 2 %stop when there are less than two non-zero numbers. term = ((-1)^(n)*x^(2*n+1))/(2*n+1); %the series equation y(end + 1) = term; %add a term to the vector n = n + 1; %sets up the next iteration true_val = arctan(x); %true value error_ = abs(100*(true_val - sum(y))/(true_val)); %error percentage sigfigs = num2str(error_) - '0'; %changes number into a vector end fprintf('relative true error percentage under 2 significant digits is %g\n at %g terms',error_,n) end
Yeah, in terms of "kitchen sink" MATLAB really does have an emacs like nature. ;-) [Everything including the kitchen sink...] Heck, it's got "sendmail" function, for, you know, when you want to send emails.... from your computer algebra system. ;) I just think it's funny how many different random things get bolted on to MATLAB, and also how often it seems to reinvent core parts of its structure. Do you happen to know, in this new "deploy app as a webserver" feature, if they're going to be bringing back the close integration with java that they did a few years back?
How do i make it better? 
I wrote some code in the thread update. You got any pointers for me?
What are MATLAB csv files? 
The title makes sense, but your statement in the body of the post is certainly false. I don't even know what a "Matlab csv" would be. CSV is CSV. It's not as if it's inspecting the contents of the file. 
Matlab answer. 
Oh, I was just doing a nerdy "joke" -- scarequotes because, hey, if I have to explain it, it's not really a joke now is it.... ;) I've been doing "MATLAB development for hire" since ~04; it's changed a bunch, changed back, then changed again. The point/joke I was trying to make is that it *really does* have everything plus the kitchen sink built in, an adage commonly ascribed to emacs. A standalone function called "ocr" is a apt example. Throughout its history, the Mathworks has brought out numerous different product offerings for IPC and distribution with other software, to mixed success. even "better", they all seem to have similarish names, despite from a technical perspective being quite different. The first offering in this parade I was aware of was the humorously named "MATLAB Compiler". Which, of course, was not in the slightest a compiler. If I remember correctly, the "compiler" bundled the p-code (of MATLAB, an interpreted dynamic language) with the MCR, MATLAB's sort of "standard library". The advantage of this was that you could take unaltered MATLAB, and, without paying more money, distribute it to unwashed masses sans MATLAB licenses. Because your MATLAB code would run on the MCR, the sort of "mini" MATLAB engine, it became nice and self contained, and generally ran nearly as fast as it would inside of MATLAB. Eventually people got tired of having a fast one pulled on them (the MCR alone often took longer to start up than the program it was there to execute...). My memory's unclear here, but I think it was he who 
There's still aliasing, unless your data is either truly periodic or rolls smoothly to zero at the edges; but it is potentially a lot less severe. 
That's what i was sayin. It didnt make sense to me. I think what was happening is that it was looking at *.csv as the file name and searching All MATLAB file types. The way that i fixed this was to include 'MATLAB Files' at the end of the command. Which i only found after scouring forums
Yeah im sorry. U can read the edit to the original post if u care
Do you understand SVD mathematically? Matlab can't help you be better at math, it can only do calculations for you. 
Thank You!
I would recommend some Modelica based software, such as Wolfram SystemModeler, SimulationX, etc. Look at this [wikipage](https://en.wikipedia.org/wiki/Modelica), especially the 'See also' section.
I can't understand... what on Earth is the cell array for?? `v` is not an input. It is not an output. It is never displayed. The script never appends anything to `v`, and it's never used as a cell. Instead, it's just a really, **really** awkward container for `x0`. Not only could you just use `v = x0` instead of `v = num2cell(x0)` (which of course means later you could just use `v` instead of `v{:}`), but **nothing ever happens with `v`**. Every instance of `v` could be replaced with `x0` and nothing would change. Unless there's more to `x0`? Is `x0` not just a singular value? I don't know, **because nothing is documented**. What is it expecting? The first thing I try to do when I write a function is write the help. This is a block of comments starting the line after the function declaration and continues until you skip a line, as in: function y = newton_raphson_method(f,x,x0,eps) % newton_raphson_method(f, x, x0, eps) % This is a function that solves for one random root of an equation, where: % f is a symbolic equation (yes/no?) % x is ... I don't know. % x0 is ... an initial guess where the root it? I don't know. % eps is a way to overwrite the built-in eps parameter. Speaking of which - `eps` is a built-in parameter. It's already defined. For all things, really, *don't overwrite built-in functions.* This is akin to storing some data from a plot in a variable called `plot`. Great, now it's a descriptive name. Guess what? If you ever want to use the `plot()` function, now you can't. 
Ugh zero effort post to just link to another forum. That said, how are you trying to use `parfor` in a set of functions that never use a `for` loop?? &gt; I struggled using parfor to parallelize because it behaves strangely with indexing order and I don't understand it. Well, yeah. First, **there is no `for` or `parfor` in the code you posted**. Anywhere. Second, you don't appear to index any of the data anywhere. The only indexing I can see is when you make some random checks. 1. Read the documentation on the functions that give you trouble. 2. Post the shortest, most concise code you can that still gives you the error you're seeing when you're asking for help. When you *[read the documentation](https://www.mathworks.com/help/matlab/ref/parfor.html)*, you can see: &gt; Unlike a traditional for-loop, iterations are not executed in a guaranteed order. The `parfor` command splits a `for` loop into blocks. If you had three workers, the first one gets the first third, second gets the second, etc. If you had, say, 33 iterations in the total loop, iteration 12 will probably complete before iteration 11, because 12 is the first iteration for worker two, but 11 is the last iteration for worker 1. *You can't use `parfor` loops where one iteration depends on the results of another iteration.* From the [parfor topic documentation](https://www.mathworks.com/help/distcomp/parfor.html) (as opposed to the parfor command documentation): &gt; * Loop iterations are executed in parallel in a nondeterministic order. This means that you might need to modify your code to use parfor. For more help, see Convert for-Loops Into parfor-Loops. &gt; &gt; * The body of the parfor-loop must be independent. One loop iteration cannot depend on a previous iteration, because the iterations are executed in a nondeterministic order. For more help, see Ensure That parfor-Loop Iterations are Independent. You wrote: &gt; Can anyone chime in with advice about how they would parallelize this task? Not until you post the code. Again, nothing you've posted loops. At all.
x and y doesn't fill the whole domain, but I think it worked. Many thanks! 
&gt;The first thing I try to do when I write a function is write the help. I agree with everything you wrote, but this in particular bears repeating. A lot of people just dive into a function and add inputs and outputs as necessary, essentially just moving a chunk of in line code from the surrounding context into the function file. Writing the help first actually forces you to think ahead of time about precisely what this function is going to do, what it's inputs need to be, and what it's outputs need to be. More important than actually writing the help first, I think, is that process of *knowing what the inputs, outputs, and purpose of the function* will be before actually writing the function. For example, if I write a function that's going to move some hardware while taking measurements from a second piece of hardware, and continue moving until the measurement has a particular value, I know already that I need fundamentally 3 inputs - information to talk to the motion hardware, information to talk to the measurement hardware, and a target value for the adjustment. You should be able to write the function prototype fully before writing the function. BTW the concept of *function prototypes* is a computer science term that's underutilized in engineering programming. In Matlab, it's the stuff on the first line of a function file after the "function" keyword. It's the function name, it's inputs, and it's outputs. In a strongly typed language like C, it also includes the data types. Function prototypes are important to think about. You can often write a whole piece of code using functions you *have not yet written* because you have a clear understanding of their prototype. Then you go back and fill in the blanks as needed. 
He is not a student, or at least doesn't claim to be one. Check his post history. He's some self-important data science wannabe. He's spreading garbage with negative educational value. This is materially harmful to people. Pointing that out doesn't make **me** the asshole here. 
I can either visualise the outer shell or a whole block of points. Sorry if its unclear but basically I need the whole dome worth of data points instead of just a shell on the outside?
Hm. I don’t get the matrix thingy you are referring to. But if xcorr is a 1xn array and your struct is 650x1 then my suggestion should result in a 650xn matrix... Isn’t that what you are looking for?
You're going to need to provide a LOT more detail, and not in the form of unreadable screenshots. What parameters are you currently using? What is your data? What are you trying to classify? What is your network architecture?
https://pastebin.com/TmGhREZ3 I've considered only 3 classes of CIFAR 10 dataset.
 figure; hold on for ii = 1:length(sin(phi)) [XNEW, YNEW] = meshgrid(0:0.01:max(X(ii,:)), 0:0.01:max(Y(ii,:))); ZNEW = sin(phi(ii)).*ones(size(XNEW)); scatter3(XNEW(:), YNEW(:), ZNEW(:)); end With this very ugly code snippet (I deserve to be shot for this) I managed to create a quadrant of what you wanted. What I do, is I loop through all the levels of Z (sin(phi)). and for each level I create a new meshgrid of all the points.
STACK. MORE. LAYERS. https://i.redd.it/17djio8x7ya01.jpg
Em you need to ask a proper question with an example or specific issue. 
Exactly. You need a plan. You need a plan. You need to have a plan. I don't really code, I transcribe. I do the work with pen and paper, and then I code based on my handwritten notes. 
Always. 
https://www.mathworks.com/help/distcomp/examples/illustrating-three-approaches-to-gpu-computing-the-mandelbrot-set.html
 % A is a row vector B = linspace(0,1,16)'; % fractions from 0 to 1 B = B.*A; % Use implicit expansion to multiply
can you draw what you'd like to see? Using plot3 and/or scatter3, you could use x=week number, y = weight, z=number of reps. For the set differentiator, i'd use separate lines; ie, have a blue line for set1 of the exercise that goes through the weeks, weight, and number of reps; a red line for set2, and a black line for set3. Excel may have some plotting tools that are better than this using Pivot Tables, and it may be a better tool overall for this application.
Python would be a much, much, much better option... 
Ah, that sucks. Hope someone else can help you out. 
Oh lovely, very elegant. Thank you :)
You asked this yesterday, matlab is not the right tool for this. You can import a picture of the map and work the line and dot in Photomodeler or some other design program. hell, you can even do this with Microsoft PowerPoint mich easier than with matlab 
* There isn't a line 133. * I can't run your code because nothing is defined (you provided a *non-functioning* snippet) * You couldn't be bothered to put four spaces in front of each line, so your formatting is garbled. I'm not going to try to ungarble your code that won't run anyways to fix an error on a line that doesn't exist. 
^This. I can probably make Matlab do anything you want with regards to graphics. *Show me a sketch of what you think this would look like* and I'll post some code to do it.
Prove it.
That gives me a sphere though, not a dome? (https://imgur.com/a/tAkAE). I tried to modify the last few lines to this but it didn't work out: yourOutput = pointRadii&lt;=maxRadius; z(yourOutput) = z(yourOutput)&lt;=0 scatter3(x(yourOutput),y(yourOutput),z(yourOutput)); axis equal
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/nIODsJb.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dt827rv) 
What I basically did was divide the 3D-dome in layers of different height. [XNEW, YNEW] = meshgrid(0:0.01:max(X(ii,:)), 0:0.01:max(Y(ii,:))); Then for each layer I create a grid for the x and y coordinates, which I started from 0, with a stepsize of 0.01 until the maximum x or y coordinate found. See above line. ZNEW = sin(phi(ii)).*ones(size(XNEW)); Then I simply get the height of the layer again.
Do you set X,Y,phi to arrays representing the distances/angle beforehand? If yes, are there any rules about choosing the array sizes here? (Does it have to be the same as something else?)
If you want a dome, just set `zMin = 0;`. 
I'm using your variable name definitions. the Phi in my code is the same as the Phi computed in your code, the X and Y are the same X and Y as in your code. The code snippet was just meant to show on how I would quickly tackle this problem. There is problably a way better method. So in my code snippet I do not save the data to an array or something I just plot it in the figure. You should definitely pre-allocate some data container to store this data in. The size of this would relate to the stepsize you choose. Also keep in mind that in my code I start from zero, and as such only have a quarter (half x and half y) of the actual dome.
Ok amazing, I'm following you now. If I'm setting my start points to X(ii) and Y(ii), should that be getting me a full hemisphere? Cause right now doing that is getting me half a dome. PS: Thanks for all your help &amp; patience, I really really appreciate it!
So what Matlab is giving you is a spline of y in terms of x i.e. at any given point it's a cubic function such as: y = ax^3 + bx^2 + cx + d But going of you picture what I think you are really after (and correct me if I'm wrong) is a 2D spline such that you can have a smooth curve that bends back on itself. As such you probably want both 'x' and 'y' to be splines of some parametric variable that increases along your curve e.g. y = at^3 + bt^2 + ct + d x = jt^3 + kt^2 + lt + m The variable t can be whatever you want, it could be as simple as going up by 1 for each point you place e.g. tt = linspace(1,n); sx = spline(1:n,x,tt); sy = spline(1:n,y,tt); plot(sx,sy,'b-') Please don't just copy what I've put, but have a think about how and why it works. Maybe try a few other parametric functions. What would happen if 't' was the total distance along the line from your first point? etc. Hopefully that is what you're after, if not let me know and I'll see what I can do!
Yup, it's exactly like that. Looking back at what I've done in the past i found some code that solved my problem according to what you said: % sx= spline(tt,x,t); % sy= spline(tt,y,t); where tt and t are: t = linspace(a,b,length(x)); tt = linspace(a,b,length(x)*10); Now the hard challenge is about trying to make an implementation of the cubic spline. Thanks a lot for the help and wish me good luck with that lol
Best of luck! But first decide which type of spline you want to do! The way I'd go about writing the functions would be very different. If it's the stereotypical 'natural cubic spline' you're after (with C2 continuity) you'll have to solve a tridiagonal system, although Matlab can probably do most of the heavy lifting :) There are efficient solvers out there, but Matlab will probably notice what form it's in and apply something suitable. Especially if it's a sparse matrix. Also the diag function will probably be useful. Alternatively if you only require C1 continuity then I'd calculate the derivative at each know and then just plug in the formula for a cubic between 2 points where the value and derivative are known. Hope the hints help!
It would be better to create a max([n1,n2,n3]) x 3 Matrix and simply fill the unused elements with NaNs than creating a 3d array (which would have n1xn2xn3 elements instead of the much fewer n1+n2+n3) Something along the line: v= NaN(max([length(v1), length(v2), length(v3]), 3); v(1:length(n1),1) = v1; % rest left for exercise 
[Implicit expansion](https://blogs.mathworks.com/loren/2016/10/24/matlab-arithmetic-expands-in-r2016b/) does this. % Place each vector along a different dimension v1 = v1(:); % column vector v2 = v2(:)'; % row vector v3 = reshape(v3, 1,1,[]); % vector along third dimension array3d = v1*v2*v3; % implicit expansion % array3d(i,j.k) = v1(i)*v2(j)*v3(k) 
It's not clear to me what you're asking for. When you say "bounded by" do you mean mathematically? Or in an illustrative sense? 
I just tried urlread and it puts the entire .m file into a char variable. you may be able to save that to a specified .m file after that...idk 
Quiver function requires the components of the arrows. The second line decomposes the (direction or angle and magnitude) into (horizontal and vertical components). Quiver should automatically scale so none of the arrows overlap but I typically take the extra step to normalize all of my arrows to the greatest magnitude.
Thank you. I don't have a problem with scaling. So does that mean you must always convert the raw direction and magnitude to Cartesian coordinates before using quiver? Because the flow is in the completely opposite direction if I don't use pol2cart. x and y are longitude and latitude btw.
Tentatively, yes, they must be the Cartesian components from what I see in the online documentation. I'm not a developer, though, so someone may chime in. I'm not sure why your flow would be the opposite direction. Do you have the angles messed up? Either adding pi radians or 180 degrees? Lat/long also assumes 0 degrees is North (rather than the Cartesian "East" on the X axis).
https://www.mathworks.com/help/matlab/ref/quiver.html Not intending to sound snarky, the reference to components is the first line under "Description." Generally, U and V are used as variables for vector components in the horizontal and vertical directions, respectively.
Yes I found this link. I was asking about the part that says Cartesian coordinates. Thanks man
An issue that I see here is where you are setting c(n)=c+const, for n=1,...,10. The issue is that, after n=2, you are trying to assign a value of c-const, where c is now a 2x1 array to c(3), which is a scalar value (1x1 array). What are you trying to accomplish by subtracting a const from c prior to defining c? Follow up question: why does your function take in the variable x, but then redefine x in the function without using it? It seems like x isn't used for anything.
two things to look at: 1) doing a logical operation with vectors 2) "indexing" vectors in matlab (look at the parts with "end") https://www.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html
[diff(vec)&gt;0, false] Will do the trick...
I think what is happening is your phone is accessing files on your Matlab Drive account, and your computer isn't. Try going to Matlab Drive on your computer and getting the files from there. There's probably a how-to on there on connecting your Matlab on your desktop to the server. 
of course it is possible, its just a more or less complictaed way too show the progress, but it is possible! * Do you want to learn how to plot things in Matlab? *Because if not, and you only of one data set and not for a hole class, i would do it in Excel or something similar, just input the data klicky klick and graph, without code. 
In the matlab editor or console, hilight the word "quiver". Now hit f1. 
You can use the fitting tools in the console or in a script to create a fit object, which can be plotted directly or used to create modeled data for plotting. I think there's a way to export the fit results from the fitting tool but I don't know it off the top of my head. 
This is a hard problem even without the wrinkle of printing in bw. I'm. Not sure it's possible. BW sucks for figures. 
This is fine as far as solving your problem but your reaction indicates a severe deficiency when it comes to thinking about code. That error message wasn't in ancient Greek. It was pretty clear about what the issue was. Why do you think it happened? What was its meaning? Do you think shtpst expected you to take his code literally? Or to use it as an example to increase your understanding? Do you think he expected you would see the meaning of the variable N, and if necessary define it yourself? Or maybe he was just setting up an example? 
I downloaded matlab today and I barely understand it. Can you please elaborate.
I'm pretty sure a polynomial (of order larger than 1) isn't considered a linear model, and i'm very sure that fitting a polynomial (of order larger than 1) is called regression. Try changing the order (or Degree, as it's called in the GUI) for both x and y to 1 to fit a linear model and do your regression.
The function definition, if it exists, must always be on the first line. Also c(x) does not make any sense as a return value. You can't have parentheses in the name of a variable. You repeatedly assign values to x, but you never once actually use x. I know that the little box at the right upper corner of the editor is either red or yellow, which means you're ignoring a lot of warnings from the editor. Stop doing that. 
Fifteen lines is a lot to display in a single figure. The answer really depends on your data. If your lines don't cross, then you can use an alternating pattern (solid line, dashed line, solid line, dashed line, etc.). If they do cross, then you might consider splitting the data into multiple figures. If there's some natural subdivision, you might be able to bring it down to four lines per figure, which is much easier to manage. Ultimately, fifteen lines in black and white will almost certainly be indistinguishable. Try to decide what conclusions you're drawing from the data, and group the lines in way that will emphasize that. For example, if each line represents a different test velocity, then you might group them into low, medium, and high velocities, allowing you to use only three patterns/colours. If you absolutely must, then you can pick 3-4 colours that range from dark to light when printed in black and white (the best way to check this is to actually print it and see how it looks), then use patterns to further distinguish the lines. This will still tend to be a very messy figure, but for some data it will be effective. As an example, you might get: 1. black solid, 2. (dark) blue solid, 3. (light) red solid, 4. black long dashes, 5. blue long dashes, 6. red long dashes, 7. black short dashes, 8. blue short dashes, 9. red short dashes, 10. black dotted, 11. blue dotted, 12. red dotted, 13. black dash-dot, 14. blue dash-dot, and 15. red dash-dot. As I mention, the above may work for some data sets, but not others. One advantage is that you can group data in two ways. If, for example, you are showing the effect of temperature and pressure variation, then the colour could correspond to temperature, and the linetype to pressure. However, it is often simpler just to have separate plots for each pressure or each temperature. Regarding colours, I find that you can safely use black, red, and blue, and can usually add green* and orange - in that order. Beyond that, it can be difficult to keep the colours distinguishable. *Note that green and red will cause difficulties for roughly 5% of the population due to colour blindness - this can often be fixed by using a bright/light red and a darker forest green (or alternately, use a dark maroonish red and a bright/light green). My final recommendation is to explore multiple options for any figure, but be prepared to discard a confusing figure - regardless how much time you spent making it. Always ask yourself how a figure will look to someone that has never seen it before.
Blue and red should have the same gray scale values. 
Blue and red should have the same gray scale values. 
I know how to use the help documentation man. I was asking him about the bit about the Cartesian coordinates.
I didn't define N because *you* didn't define N. I assumed you had *some* value you wanted to use for N. 
I thought the N indicated indicating the length of the vector. 
Use different variable names for different things. You have `c` as a function (`c(x)`) and as a vector (`c(1) = ...`) and as a scalar (`c = 1.1319...`). Stop using the same name for different things. 
N is whatever you define it to be. If you want it to be the length of a vector, then you use the `length()` command. The *problem* with that is I used it as a stand-in to define your `vec`. If you wanted to use this command in a function, then you already have to have a `vec` to pass to the function, and thus you don't need any `N` in the code. Anywhere. If you wanted to use an N you could, like in a loop: function x = LogicalDiff(vec) N = length(vec) x = logical(zeros(1,N-1)); for i = 1:N-1 x(i) = vec(i) &gt; vec(i+1); end end This is technically okay, but inefficient and a *bad habit to start*. Try your best to *not* use loops when the problems are easy and it will be second nature when the problems are hard. The more efficient way to write it would be as I did earlier: function x = LogicalDiff(vec) x = vec(1:end-1) &gt; vec(2:end); end If you already have `vec` defined, then you don't need to make this its own function. It's one line of code, just use that one line. 
+ ok, I'd like to generate this matrix, receiving these elements (but I really don't wanna define it for each element) syms t x; n=20; k=[0:n-1]; z=(x + t)*1/(t.*sqrt(1-t.^2)); eps1= 0.005; valintegral=(int(z,t,-1,-eps1)+(int(z,t,eps1,1))); for i=1:n for j=1:n A(i,j)=-raizes_pol_tchceby1(n,k).^(-1)*pol_tcheby2(n,t) + (1/pi).*valintegral.*pol_tcheby1(n,t); end end 
and it seems like I'm not even capable of pasting it properly *sigh*
Depending on how much the lines overlap, you can also include labels with arrows that point to the lines, to indicate what each line refers to. I would start by trying to reduce or break up the figure, though. 15 lines will typically make for a busy and confusing graphic
In his usage, c(x) is the return value of a function he named "piecewise". 
&gt; the return value of a function he named "piecewise" The `piecewise()` function is a stock Matlab function in the symbolic toolbox. The "declaration" is inline and not on the first line of a script, so I don't think the intent was to overwrite the stock function. I think OP probably intended to call: c = piecewise(&lt;stuff&gt;); instead of function c(x) = piecewise(&lt;stuff&gt;); That point's probably debatable, though, because there are so many fundamental flaws with the code. The broken lines on the piecewise input don't end in `...`, there's a vector assignment in the function call (`c(1) = &lt;stuff&gt;`, etc.), no close parenthesis on the piecewise call, etc. etc. Also the piecewise stuff is invoked for the x = integer conditions *only* and is undefined elsewhere. If I had to guess, I would think OP wants something like: syms x; yInt = 1.13198824; pieceFun = piecewise(... x&lt;=1 , x-0.1175, ... 1&lt;x&lt;=2, x-0.0985, ... 2&lt;x&lt;=3, x-0.0755, ... 3&lt;x&lt;=4, x-0.0445, ... 4&lt;x&lt;=5, x, ... 5&lt;x&lt;=6, x+0.055, ... 6&lt;x&lt;=7, x+0.013, ... 7&lt;x&lt;=8, x+0.023, ... 8&lt;x&lt;=9, x+0.035, ... 9&lt;x, x+0.5); pieceFun = pieceFun + yInt; fplot(pieceFun, [0 10]);
I'm not sure what your intent is: 1. If you would like an array of *function handles*, such that you could pass an input and get an output, you need to use a cell array and use the function handle `@`, like `A{1, 1} = @plot;`. In this example, you could then do something like, `A{1, 1}([1:10],-[1:10].^2,'-.','Color',[1 0 0])`. 2. If you would like a symbolic *expression* to be returned, then the line you execute needs to return a symbolic expression. If `raizes_pol_tchceby1()` doesn't return a symbolic expression, then there isn't a way you can call it to return a symbolic expression.
Yeah that's possible too. It's difficult to figure out his intentions from such broken code. 
You can make a function with a matrix return value. Is that what you want? 
I want it to keep the functions without the value, just the function
how can I get a symbolic expression to be returned then? (not from raizes~ but the other functions)
What do you mean by function, in this context? A function handle? A symbolic object? A text string? 
The functions you list aren't stock functions. You have to define them in a way that returns the symbolic formulae instead of a numeric answer. For example, instead of: function y = YourFunNumeric(x, m, b) y = m*x + b; end Try: function y = YourFunSymbolic(m, b) syms x; y = m*x + b; end In the former case, *you provide a value* for `x` and you get a value as an output. In the latter case, you're just passing parameters (slope/intercept in this case) and you're getting a symbolic result. Now is where it's not clear what you're asking. What are you trying to do? Try the following and compare: A_numeric{1, 1} = @YourFunNumeric; A_numeric{1, 1}(10, 0.5, -10) And compare that with: A_symbolic(1, 1) = YourFunSymbolic(0.5, -10); A_symoblic(1, 1) 
+OP
Have a look at annotations https://ch.mathworks.com/help/matlab/ref/annotation.html 
Is there supposed to be a question or link attached?
I am having trouble combining lines 3 and 4. I was thinking of by passing the erasing the whole word with blank spaces and just put 'new' instead. I still ran into the same problem.
Instead of thinking of it as changing your existing char array, how could you construct a new char array using the ingredients you have?
I was thinking along the lines of new = forecast1(strfind(..... and so on. Set a new vector equal to the vector but with different elements for the same indexes.
Never heard of such a button. Maybe it's a version specific thing. Do you have any idea what it does? 
Imread. Imshow. 
What
#IMREAD. IMSHOW. 
I’m still new to Matlab so I’ve only seen it in video tutorials where it’s under the import data function There’s a drop down menu to either generate a script or function. I believe it can help with importing the multiple data sets. I hope that helps! Let me know if you need more clarification. 
Line. 
Oh okay I was more interested in creating a loop of different functions so I can automate the same analysis for multiple excel files/sheets. I’m just not sure where to begin to even do that. Thank you so much for your help!
Okay, short story, spooky shit. After posting my previous comment, I came across a scientific paper that used elliptic integrals in a solution. I had never heard of elliptic integrals before this post was submitted. Turns out, you gave me an answer to a problem I didn't know I had yet, until about 2 hours after you posted. props /u/aga_blag_blag 
That's a yes I guess 
Should I make 3 variables in that case?
you may need to be a bit careful with the direction of the y-dimension. by default, if you use the "image" function to show an image, it will have the y-dimension (corresponding to the rows) be positive going "south" on your computer screen, compared to normal Cartesian with positive being "north". check this out for how to switch that up: https://www.mathworks.com/matlabcentral/answers/164223-how-do-i-reverse-the-y-axis-in-image 
the "import data wizard" is good for a single file, and can also generate code, but reading the documentation on the I/O functions is the way to go. in addition to the ones FrickinLazerBeams mentioned, take a look at 'dir', which lists all the files within a folder. you can use this to get the contents, then write a loop to suck in the files and do the necessary processing. 
Nope. Was super bored at work, so I decided just to share some code. Apparently it helped out the guy below, which is pretty cool. 
Huh, that's fucking insane. I was literally just bored to death at work and decided to post this. 
edx.org has a good introduction to matlab course. After that, Vanderbilt has an online course in matlab. Both these courses are free. When I started graduate school I didn’t know much matlab and I learned a lot from these courses. Another way is just to use the command help “whatever you want to know” in matlab. 
You could try [Project Euler](https://projecteuler.net/). Although a lot of the problems are relatively straightforward, challenging yourself to come up with new methods (especially [vectorised methods](https://uk.mathworks.com/help/matlab/matlab_prog/vectorization.html?s_tid=gn_loc_drop), which is the MATLAB's speciality), will boost your confidence and proficiency.
Some stuff specific to mechanical engineering: * Simulating and visualizing orbits is easy and fun * Same goes for multi-DOF dynamics - simulating a bunch of masses connected by springs, normal modes of such systems, etc * Pick a system, simulate it, and add a controller. With or without Simulink, depending on what you want to learn. You can make this as involved as your controls knowledge will allow.
User name checks out!
This is the course that we had as first year mechanical engineering students at my university: https://www.imc.tue.nl/ . I'd say it's pretty good.
Your network architecture is too shallow. You are using the architecture from the trainNetwork help, which works fine with a very simple classification problem like MNIST, but doesn’t have enough complexity to learn something like CIFAR. Add more layers, look at other examples of the CIFAR classification problem, or the MATLAB example with Caltech 101.
Using those functions I mentioned would definitely be how you would do that. Think about how you'd do it by hand, and write code to do that: Construct a list of files. For each file in the list, Read the data Process the data 
You know you can directly create characters using char(), right? Chars are only displayed as their ASCII symbol as a convenience. They're actually just numbers. 
Write a code that solves Sudoku puzzles (using loops).
And then rewrite it using recursive functions
If I remember correctly, Meshgrid should be your friend here. 
`function [a, da] = func_grad(M) a = M(1, 1); da = zeros(size(M)); da(1, 1) = 1; end`
Use bitstrings that encode integers instead of floats for the design variables
I found the coursera.com course helpful but I took it before taking 2nd-year university classes on it so you might find it too easy to be helpful. 
Hi! Thanks for your reply! I guess I didnt word my question optimally. The function I am searching my gradient for is not exactly the function in my question, it is only similar to it in the sense that it takes a matrix and returns a scalar. The function I am really looking the gradient for has 1,3million entries and the output depends on nearly all of them. I am interested in how I have to change the entries so that I get a maximal output from my function.
My function is taking a Matrix with 1.3 million entries and returns a scalar. This scalar is depending on nearly all of those entries. I am interested in how I have to change my entries(from any given start matrix) so that I get a maximal output
Try [gramm](https://github.com/piermorel/gramm) It has plenty of color schemes or ways to visually separate groups (color hue, color lightness, line style, subplots...). It can't do miracles though: with 15 groups it becomes very tricky/busy unless you use subplots in addition.
t = 0:100;
thank you! It says I have to declare 'm' as well. How to do that? It's the unknown(variable) in equation. (i have a function m=2t+3mt+5. need to declare this, so i can use this m in another function!)
No, I was just being a smartass. Are you using the optimization toolbox? Its optimizers will use finite differences if a gradient function isn't provided. If you aren't, it's still really easy to take finite differences yourself. If finite difference aren't good enough, there's a variety of more complicated options.
It is trying to call the variable "mt" which is probably not declared. If you're trying to do something iterative, say m at t1 is a function of m at t0, you'll need to establish the initial value for m. So what I'd recommend is m=zeros(100,1), m(1,1)=whatever, then start a "for loop" from interval 2 to 101 (your first index needs to be 1 so just change your time variables to (t-1)). So: m=zeros(100,1); m(1,1)=whatever; for t=2:101 m(t,1)=m(t-1,1)*(t-1); %or whatever formula you want end
Oh okay, haha i didn't get that. No I'm not using any toolbox afaik. How would this be applicable here? I have now managed to change the function so that it takes a vector and outputs a scalar. How do I get the gradient of that function at any given point? The problem is, that I cant give a "range" of my vector as you often see because it has 1.3 mil dimensions. How would I do that with finite differences?
Cheers for that looks like it will be useful
I'd take this in steps: * Determine how you would calculate the derivative of `a = f(x)` for scalar `a` and `x` * Determine how you would calculate the gradient of `a = f(v)` for scalar `a` and vector `v` * Realize that `a = f(M)` for scalar `a` and matrix `M` is no different from the vector case except in how the data `M` is arranged As /u/redditusername58 said, finite differences is your first place to go for the derivative/gradient calculations.
Okay and how do I calculate the gradient of a = f(v) if I cannot give the range of v?
What is the equation for n?
What do you mean by &gt; the range of v 
If you're dealing with just real numbers then it's easier to isolate m by hand and then define the variable m in Matlab based on your work.
`gradient` is a bit different than what I was picturing. That gives you a gradient *field*, not the gradient at a single point. That said, it works for the vector case. In fact, your example is already the vector case: `z = f(v = [x, y])`. Here, the vector has only 2 dimensions. You start with the "ranges" as you call them for the vector components `x` and `y` and use them to calculate the 2-D input `z`. This gives you the 2 components of the 2-D gradient at each `(x,y)` point in the input `z`. For an n-dimensional vector, you would start with n ranges, calculate an n-D matrix of function values over those ranges, and get n components of the gradient at each point in the input. You said your input matrix has ~1.3 million entries. I suggest you do not attempt to make an array with 1.3 million dimensions. Even if each dimension only had length 2 you would have 2^(1.3 million) = 10^391339 entries. Instead, I think you'll need to calculate the gradient at a single point manually. Do this by using finite difference to take the partial derivative of the function with respect to each variable in the input.
Okay I see what you mean thanks! But how do I use finite differences? I am neither familiar with the maths nor have I ever used the function in matlab. Reading the method description in the matlab help doesnt really help me... thanks for taking the time btw, I appreciate it! ;)
You can either use finite differences (literally (f(x + dx) - f(x))/dx for each input array element, where dx is typically on the order of eps(x)^2), or you can find some analytical expression for the gradient. The former is easier to write, the latter is **much** more efficient, especially for functions with many input arguments, like yours. Either way, if you're looking to optimize your function, I would absolutely use the existing optimization tools rather than write your own. Especially with millions of inputs, this is very non-trivial. If you're just going to use finite differences, the optimization tools will do that for you if necessary. You could also try fminsearch, which doesn't directly calculate the gradient ever, but it's not particularly efficient on large problems. 
Are you trying to solve a differential equation? Check out ode45. 
Thanks! Now I know how to solve the problem but it takes sooo long to compute lol! I will check out the optimization tools now. Thanks for taking the time to answer!
Post your code. It sounds like you aren’t using them correctly. Alternatively, the data could be stored in a cell array, which would allow you to store the differently sized vectors without NaNs. 
but i cannot calculate teh mean over an cell array, can i?
The way you describe it, it's not mixed integer, it's all integer. I don't think gamultiobj can do mixed integer problems, but you can use a bitstring population that codes for integers. How many numbers are we talking about, btw? And what are the 2 fitness functions? It might make more sense to brute force it rather than use a genetic algorithm.
Here is my code, since posting code on reddit is a bit of a pain, i took a screenshot. Link &gt; https://www.dropbox.com/s/087ogqh6la26jhb/Bildschirmfoto%202018-01-28%20um%2001.36.03.png?dl=0 * Mede1,2,3,4 are my different datasets 
Does it have documentation or examples? 
Check out this website to help you learn in minutes.com 
You don't really need to define an [anonymous function](https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html) of just a function to plot things. It seems that you want to input a vector of n numbers to funct and get a vector of n numbers as its output? This is possible, but you'll need to be careful that funct uses [element-wise operators](http://www.glue.umd.edu/afs/glue.umd.edu/system/info/olh/Numerical/Matlab_Matrix_Manipulation_Software/Matrix_Vector_Operations/elementwise) when you're performing an operation with the variable t. Some common element-wise operators that trip up new users are: - [element-wise power](https://www.mathworks.com/help/matlab/ref/power.html) - [element-wise multiplication](https://www.mathworks.com/help/matlab/ref/times.html)
Yeah that looks right to me. It can definitely be a time consuming operation, which is why analytical derivatives are preferable when they can be obtained. That said, if your goal is optimization I'd use a Toolbox optimization function, which will, among other things, offer you the option to perform finite differences internally. It's generally a good practice to avoid reinventing the wheel. 
You don't need any extra work. Just do all your homework in MATLAB. I TAed the MATLAB class so I was already pretty good at it by my third year, so around then I stopped using a calculator and did everything in MATLAB.
I could hand you a fish, but at this point I'd rather try to teach you fishing. Matlab has a surprisingly well written documentation, also a very accessible one. doc input help input The first line (doc) will open an extra help window, which can also be accessed as a popup by pressing F1 while your cursor is at the word in question. The second line (help) will paste the info into your command window. For the one question you did not ask, the "- '0'", take a look at uint8(str)
Right. So when you say "those 4 equations are elements of it", what do you mean? Do you want them to be string representations of your equations? Function handles that evaluate the equations? Symbolic objects? What does it mean to you for an equation to be a matrix element? 
Well I wouldn't mind paying you a reasonable fee if you can help me with the deployment and hosting part. The whole code should be ready within 2 weeks or so. 
Yes, there is a lot of it: start with running the examples.m file with examples for almost funcitonality (plus results in the html folder), there is also a cheat sheet pdf for all the commands and arguments, and to finish, every function is throughly documented for use with Matlab's help browser (doc gramm).
Assuming you have a function saved as m-file like this: function output = myFunction(input) % your function goes here you could use the Interpreted MATLAB Function block to call it within a model. Input the function's name in the: *MATLAB function:* field. Hope it helps. 
Yes it is all integer problem. But using a bitstring population will ignore my lower and upper bounds for the solutions in matrix i which are the minimum and maximum matrix indices. my first fitness function is simple: it is the absolute value of the difference between the sum of the combination from A and some number from B. f(1) = abs(sum(A(i(1:size(i,2)-1))) - B(length(i))); ga did pretty well with the first one. Now I want to expand the problem and add another matrix C. The second fitness function is: f(2) = max(C(i(1:length(i)-1)) - min(C(i(1:length(i)-1)); 
This example uses pre-trained network which is again a no-no for me. Thanks for the help anyway, I managed to change my dataset and added more layers, getting a good 80% accuracy now!
I’ve heard this termed ‘solid of revolution’. I’m sure there are solutions out there, and screams ‘use polar/cylindrical coordinates’, but I guess I’m just a Cartesian guy. That said, think about the data you have. It is 2D, with an independent variable (x) and a dependent variable (y). X is a list of numbers (sample points) of your choosing. Y will be output by the equation you gave. Now consider a cross section of the Apple as if you were looking directly down the X axis. Pick a sample point along X and you will get a corresponding Y value. If you now forget about X and look at the YZ-plane, there will be a single dot at [Y,0]. You can then use the radius (Y) and sin/cos to sweep this point in a circle in the YZ-plane. This will give you a set of coordinates at that particular X sample point. Using a ‘for’ loop, you can repeat this for each of your sample points (X).
I tried that first, there is a "Turn off hard disc after X minutes inactivity" section in Power Options (Win 10) but it has no effect. It is set for 20 minutes now, but the HDD turns off within 10 seconds.
You probably want an architecture that is essentially a CNN feeding into an LSTM, or some other form of RNN. Without more specific info, though, it's hard to say more.
The thing is I have to do it this way for the homework. I could probably do it this way if I was aloud. 
That's the place. If that's not doing it, I'd run chkdsk on the drive. Hard drives on the way out can start exhibiting weird behaviors.
This is not possible to do using MATLAB command window. If this is an issue, it would be better to make a script to do what you want, then you can edit and run it at will.
Okay, so I read the description again and I just want to confirm that you want to vectorize the function funct(A, B, t) where I assume in this function you perform calculations where you treat A,B as matrices and t as a scalar. I also see that in your sample code you used a for loop which is ideally not how to vectorize the function. Ideally, if you vectorized funct properly you would just need to do the following: t = linspace(0,45); y = funct(A, B, t); plot(y,t); 
"zero-padding might move the aliased components to locations in the frequency domain where they will be less bothersome" seems sort of wrong! because when there is aliasing then the original signal is not retrievable.
that would be great ! thanks:)
 [J = imnoise(I,type) adds noise of a given type to the intensity image I.](https://se.mathworks.com/help/images/ref/imnoise.html)
&gt; I have tried everything So what did you try? I don't see anything. Gaussian noise is just noise which follows a gaussian/normal distribution. So just generate some random numbers from a normal distribution and you're done. https://nl.mathworks.com/help/matlab/ref/randn.html
Whelp, wasn't actually expecting a response back. You did reply, though, so here's the best that I could find: Looks like the algorithm [*should* be](https://en.wikipedia.org/wiki/Discrete_Laplace_operator#Finite_differences) the sum of all differences between a point and its neighbors. Matlab's [implementation of the method](https://www.mathworks.com/help/matlab/ref/del2.html#bt1nr02-6) appears to take the difference between the **average** of the neighbors and a point. If your point were zero, and all the neighbors were 1, then the "correct" (by Wikipedia lol) method would be to sum the differences between the point (zero) and each neighbor (1), and you wind up with: L = (1 - 0) + (1 - 0) +(1 - 0) + (1 - 0); Or, as is written on Wikipedia: L = (1 + 1 + 1 + 1 - 4*0); Matlab takes the **mean** of the neighbors and finds the distance between that mean value and the original point: matlabL = (1 + 1 + 1 + 1)/4 - 0; I have no idea why it's done this way in Matlab. The last line under the "Algorithms" heading says, "This formula is extended for multidimensional U," so I would guess that you would need to know across how many dimensions you're working so you can "inflate" the result correctly. Their documentation seems to directly contradict this, though - they give a [one dimensional example](https://www.mathworks.com/help/matlab/ref/del2.html#bt1j8dn-5), which I would have assumed, by their algorithm, would be something like: matlabL = (x(k+1) + x(k-1))/2 - x(k); But they're "inflating" by a factor of four and not two. ¯\\\_(ツ)\_/¯
I am a huge believe in visualization. Good looking data is easier to gather information from at a glance, and a few well-constructed graphics convey more information than a couple dozen pages of a report. With that in mind, and given your preference for signal processing, statistics, and finance, why not try to make some data visualizers for finance data? Maybe write a script that gathers stock values over a particular duration of time. Fit a line to the data, then have the line get wider as the R^2 value gets closer to one and have the line get more green or red depending on the magnitude of the slope of the line. Try making a GUI that lets you enter a stock symbol(s) and select dates and have it fetch/scrape trend data for that period. Coding is kind of like woodworking - yes of course you can do big projects, but you can (and usually must) make your own tools, too. "Playing around" with Matlab and writing some scripts that pull, process, and plot data sets are actual tools you can use later for bigger projects. 
You can declare a matrix/vector of zeros that is the same size as t if you want to make your code run quicker, but a definition such as m=5t; should run without error if t is defined The equation you have written above though has m as the unknown and known variable. Is this a typo? If not it looks like you may need a for loop because m changes its value each time the equation is evaluated. If you have a variable that is just in an equation but never really has a value, then you need to declare it as a symbol.
https://www.mathworks.com/matlabcentral/answers/217711-how-to-add-random-noise-to-a-signal
Have you checked out Cody? It’s a great place to find exercises and complete matlab challenges. https://www.mathworks.com/matlabcentral/cody/
I run it, but the HDD seems fine. I guess it's some weird windows issue then. Although, I'm still not sure why Matlab halts the GUI while accessing the drive.
The first line of the script you call has a `clear all` statement. This will delete everything, including previous results.
Your formatting is too hosed for me to read it effectively. Go back to matlab, then: 1. Ctrl+A to select all 2. Tab to indent all 3. Ctrl+A to select all again (otherwise you miss the first tab on the first line) 4. Ctrl+C to copy 5. Come back to your post and Ctrl+V to paste the text in. You need to indent each line of code with (at least) four spaces to get the `code formatting`, otherwise something like `var1*var2*var3` comes out looking like var1*var2*var3. If I had to guess, you're using a value that's not `t` to index something else. Matlab's error will even tell you which line is causing the error - that's the part of the error you didn't paste in your question.
An apple or a ball? The code you've got looks like it'll just draw a circle. If you're trying to make a sphere, there's a `sphere()` command. If you want, you can just repeat the same `plot()` command in 3D by rotating your data set and using the `plot3()` command, but you'll wind up with something more like a *wireframe* model and not a bunch of *surfaces*, which is what you asked for. Try this: theta = 0:0.5:pi; r = 1; nPoints = length(theta); cirX = r*cos(theta); cirY = r*sin(theta); cirZ = zeros(size(cirX)); phiMin = 0; phiStep = 0.5; phiMax = 2*pi; phi = phiMin; rXmin = [1, 0, 0; ... 0, cos(phi), sin(phi); ... 0, -sin(phi), cos(phi)]; rXstep = [1, 0, 0; ... 0, cos(phiStep), sin(phiStep); ... 0, -sin(phiStep), cos(phiStep)]; currentSlice = (rXmin*[cirX; cirY; cirZ]).'; currentSegment = zeros(2*nPoints,3); figure(1); clf; hold on; axis equal; xlabel('X-axis'); ylabel('Y-axis'); zlabel('Z-axis'); view([-19 56]) fullRows = (1:size(currentSegment,1)-4).'; while phi&lt;phiMax phi = phi + phiStep; nextSlice = (rXstep*(currentSlice.')).'; currentSegment(1:2:end,:) = currentSlice; currentSegment(2:2:end,:) = nextSlice; patch('Faces',... [fullRows+1, fullRows+2, fullRows+3, fullRows+1; ... fullRows+2, fullRows+3, fullRows+4, fullRows+2], ... 'Vertices',currentSegment,'FaceColor',[1 0.5 0.5]); currentSlice = nextSlice; drawnow; pause(1); end
One of your indices is not a whole number or negative or zero. Check all of your indices by code if they are correct.
[removed]
make sure the values Vm(1) and m(1) and etc.....(1) all have values. I also see you dont update i(t) so make sure i(1:99) have values.
Please format your code so it is readable. The easiest way is to put 4 spaces in front of each line, so it looks like this: for t = 1:99 betaN = 0.125*exp... This is necessary because as your code is written it's impossible to tell where you multiplication symbols are. Secondly, you don't just get an error message, you get a line number the error message occurred in. Which line is your problem?
Hodgkin-Huxley neuron?
tl;dr: It's a scope issue. You're redefining the outer loop variable `i` when you call `TheScript`. Your outer loop is defined: for i = 1:5 But you call a script `TheScript` that has in it for i = 1:length(price) (~line 188). The problem is the script is a *script* and not a *function*, so it's using the same workspace (the "[base workspace](https://www.mathworks.com/help/matlab/matlab_prog/base-and-function-workspaces.html)") as the script calling it. This means that, when `TheScript` is done executing, the value of `i` is set to whatever `lenght(price)` happens to be. The next iteration of your loop chooses `i` to be whatever the next value in `1:5` is. **Tangent**: Matlab is not C++; Matlab **ignores** any changes to the loop variable come the next iteration. For example, C++ might have something like: for(int i=0; i&lt;length(price); i++) { &lt;do stuff&gt; } which would be equivalent to: int i = 0; while i&lt;length(price) { &lt;do stuff&gt; i++; } Matlab does not do that. For the same loop, Matlab would be: tempVar = 0; while tempVar &lt;length(price) i = tempVar; &lt;do stuff&gt; tempVar++; end It doesn't really matter what you do with `i` inside the code - *you cannot skip/repeat/reverse loop iterations in Matlab.* This is a problem because you may have found your bug earlier if Matlab always only executed your outer loop once. It didn't, which is why this is harder to find. Matlab will give you a warning if you try to change a loop variable inside its own loop, but you've "masked" the problem by tucking one loop inside a script. The [linter](https://en.wikipedia.org/wiki/Lint_(software%29) won't find the problem there. 
oh wow! Thanks to you I managed to get it done! This is my first time to work on a bigger code in matlab and as you can see, I quickly overlook such basic things. It would have been easier to start setting this up as a function. Thank you for taking the time to explain this!
Yeah no problem, glad to help :) One thing I've tried to do, personally speaking, is to move away from the "easy" loop variables like `i`, etc. They're easy to type, but (1) they're not very descriptive, and (2) it's easy to overwrite if you nest them and you're in the habit of using `i` for everything. What I prefer to do any more is something like: for currentSim = 1:5 &lt;do stuff&gt; result2(currentSim) = &lt;thing you want to save&gt; end In the simulation, you iterate across samples, so for currentSample = 1:length(price) rev(currentSample) = &lt;stuff&gt; end Now it doesn't really matter if they use the same workspace - they have different names. But debugging is hard. I write scripts as a long-form calculator; generally, if I'm going to call something, I make it a function to neatly sidestep all of this. 
You see those squiggly lines underneath the variables inside the brackets [] in the second argument of the solve function? More specifically the 2x 2y 4x 4y 5x 5y? Matlab doesn't allow for variables to start with a number. You forgot the u in front.
There are two ways I can think of to do this. 1) Use the Real-Time from File block. [From File](https://www.mathworks.com/help/xpc/io_ref/fromfile.html) Pro: This will work. Con: It can be difficult to set up as you will need to convert your excel data to a binary format and then transfer it to the target. This isn't really difficult to do, but it can be tedious. I recommend using [SimulinkRealTime.utils.bytes2file](https://www.mathworks.com/help/xpc/api/simulinkrealtime.utils.bytes2file.html) 2) Use the inport mapping tool [Define and Update Inport Data](https://www.mathworks.com/help/xpc/ug/connect-inport-data-with-root-inport-mapper.html) Pro: You can use the same workflow for desktop simulation as well as real-time execution Con: I had a little trouble when I tried to do this and actually found it easier to do this through MATLAB language rather than through the root inport tool. (see [Define and Update Inport Data with MATLAB language](https://www.mathworks.com/help/releases/R2017a/xpc/ug/define-and-update-inport-data-with-matlab-language.html) ) 
You would need to use the PDO or SDO receive/transmit blocks. In order for these to do anything you first need to set up the tasks/processes in your EtherCAT configuration tool (TwinCAT3 etc). Once you pull the configuration files into the EtherCAT init block, the PDO/SDO blocks should be able to pick up the tasks you have configured. In your case the task would be to "set velocity". 
sorry for the late response, but here https://pastebin.com/NYQm3AZB
Remove the h = 1371.6 
Don't import the fig files. Just open them. I would get a list of all the figure files using *dir()*, then for loop through the list where you open the figure, getframe, writeVideo, and finally close figure. Something like: v = VideoWriter(filename,format); open(v) d = dir('*.fig'); for ii = 1:length(d) h = open(d(ii).name); F = getframe(h); % Could use gca instead of h here writeVideo(v,F) close(h) end close(v) Just make *filename* and *format* appropriate strings.
It really depends on your data, and if you know some other "programming language", I would say everything from one day to one week is possible 
Thanks for the quick reply mate. I guess there are about a million places on the internet I could learn this on? Don't suppose you'd have any recommendations?
One quick way to learn is the MATLAB OnRamp on their site. It's fairly basic, but it should show you enough to get started if you've never used it before. It's free if you have an account and only takes about 1-2 hours
&gt; My professor is neurotic about the .*, ./, etc so his suggestion is always "just put them EVERYWHERE." Then your "professor" is a moron. The `*` operator and the `.*` operator are two completely different things. For scalar values, they do the same thing. For vectors or matrices, the `*` operator is a *matrix multiplication*, and the `.*` is an *elementwise* operator. If you want to multiply each entry in a matrix with its *corresponding entry* in another matrix, use `.*`. If you want to *matrix multiply* two matrices, use `*`. If you're using scalar values (i.e., not a matrix or a vector, but just a singular value), then use `*`. &gt; Also, while I'm here, how do I tell MatLab not to print "ans=..." every time and just stop at my fprintf? You've defined your function to return a value `A`, when you said: function [ A ] = mpay(P, n, ai) So you told Matlab to return a value. Any time you want an output suppressed in Matlab, you need to terminate the line with a semicolon. It looks like you're not using the output, so I would guess you're calling the function: mpay(4000, 48, 0.03875) Just put a semicolon on the end and it will suppress the `ans = ` bit. &gt; When I run it with sample numbers P=4000, n=48, ai=0.03875, I get a monthly payment of $83.40, but according to a legitimate online calculator (and the formula provided) it should be $90.09. Any idea where the error might be? **When you convert from an annual interest rate to a monthly interest rate, you're dividing by 1200 instead of 12.** Put that in bold because it's probably the bit you care about the most. 
Learn something new every day, I suppose. There's a typo in the stuff you posted - the function declaration for `TestStuff` is **actually** spelled `TestSuff`. I missed the typo and thought the flaw was with the grouping, so I split all your stuff up the I have been in the past, adding handle assignments and passing the handles with the `guidata(gcbo)` and `guidata(gcbo, handles)` calls. That said, that's not required to get your script to work, so that's a thing I didn't realize. I started writing my own GUIs after GUIDE kept corrupting the auto-generated ones, so I followed their template. Anyways, rename `TestSuff` to `TestStuff`. Now the script runs. ------ To your question: Your question is about why you have to push return twice to get the value in a box to display. At first, I didn't have this issue because I clicked off the box before hitting return. The problem seems to be that, after you enter a value in the box, striking return simultaneously writes that value to the uicontrol **and** calls your `KeyPress` function. The function then grabs the value in the uicontrol *before* the uicontrol has a chance to update. The solution? Wait a little bit before grabbing the uicontrol value. It looks like putting a `pause(0.001);` anywhere between the `KeyPress` declaration and the first time you pull data is enough of a delay to let the value update. 
Awesome thank you so much! That make sense, I forgot to check if Matlab was asynchronous.
Aha, thank you so much! Yeah, any kind of cover-all like that seems a little suspicious to me :/ UGH, I should've seen that! I think the 1200 was supposed to convert % to decimal for you, and I was doing the input itself as a decimal. Thanks for your help!!
You could've Googled this in less time than it took you to ask... It's the **surf(x, y, z)** command
You need to derive/construct the equations yourself. Each finite element depends only on the type of element (first order, linear shape functions, Galerkin, etc.). So assuming you are using the same elements here, you just need to build the matrix by summing the sub-domain matrix for each element into the stiffness matrix, A.
You could've saved us both some time and not bothered replying 
What can I say, I like to help
"These two things look similar, and I can't tell you what the difference is, but always do it my way." Not an acceptable statement from anyone really, but especially not someone teaching a course using the thing they don't understand. Glad to help though! :D 
If you already had Algorithm classes in any other language, you could start learning the equivalency, if you didn't, better learn the concepts first. I learned to program in C. When I started on Matlab I just searched "How to do [thing in C] in matlab". Learn how to make matrix and array operations, because this is one of the main advantages of Matlab when doing technical programming. I recommend a book called "Matlab for Engineers". It gives a nice overview. The Matlab help is very nice also, with lots of examples. 
Thanks man i appreciate it!
Thank you !
Yeah that's true! thank you for the advice. It's just that I lack a bit of imagination when I am not working on anything that could be related to matlab
Oh I did not know but that seems to be exactly what I am looking for ! Thanks
There's a free self-paced training that MathWorks offers called "MATLAB Onramp". You should check that out. Will give you the basics and enough to feel more confident using MATLAB https://matlabacademy.mathworks.com/
Since OP is not coming back to fix the code formatting, here: for t=1:99 alphaN = 0.01 * ( (55+Vm(t)) / (1-exp(-(55+Vm(t))/10)) ); betaN = 0.125*exp(-(Vm(t)+65)/80); alphaM = .1*( (40+Vm(t)) / (1-exp(-(40+Vm(t))/10)) ); betaM = 4*exp(-(Vm(t)+65)/18); alphaH = .07*exp(-(Vm(t)+65)/20); betaH = 1/(exp(-(35+Vm(t))/10)+1); m(t+1) = m(t) + dt(alpha_m(Vm(t))(1-m(t)) - beta_m(V(t))*m(t)); n(t+1) = n(t) + dt(alpha_n(Vm(t))(1-n(t)) - beta_n(V(t))*n(t)); h(t+1) = h(t) + dt(alpha_h(Vm(t))(1-h(t)) - beta_h(V(t))*h(t)); Vm(t+1) = Vm(t) + dt(((gnam(t)3h(t)(Vm(t)-Ena)) + gkn(t)4(Vm(t)-Ek) -gcl*(Vm(t)-Ecl) + i(t))/cm); end One issue might be that you're defining `alphaN` and then calling `alpha_n`. Also you're doing arithmetic to get an index (`alpha_n(VM(t))(1-m(t)` is being used to index `dt()`), this often leads to non-integer results (even when the results *should be* an integer) because of computers having trouble with 0 or rounding issues.
I didn’t know that awesome 
"Comparing the results?" What do you mean? Comparing the solutions? Comparing their error? Comparing the time they take to run? Just make each process a function that returns the solution. Call the two functions when you need them to produce the table.
Roger that, thanks
Because the cos function takes radians and not degrees. You can convert to radians by first calling deg2rad 
It also depends on what you’re trying to do. What kind of algorithms are you writing? A best bet with getting started is to check out the MATLAB central community (just google MATLAB central). There’s a ton of blog posts for whichever application you’re working on. I highly recommend “Loren on the art of MATLAB”. Also, it’s actively patrolled by MathWorks staff so if you ask a forum question, it will very likely be answered by a MathWorks engineer or developer. Best of luck!
not sure if this helps at all, but you can separate your install file from the Matlab Runtime Environment so instead of installing a ~700 MB file they're only dealing with a ~5 MB one. One issue with this is (i've heard) that the version of the MRE must be the same as the compiled application, which can be somewhat of a pain if you're staying up to date and providing the program to customers. 
if you're comparing error, you'll need the analytic solution for a reference.
What’s your question. 
Oops, forgot to put it down. Basically solve the equation for x2 replacing x1 with the value in data(i, 1). I found a solution using substitution, but the script runs slowly. I'm thinking there's a more elegant way to do the same thing that I'm not aware of.
Well, your equation is very simple, so there’s no need to use the symbolic variables, right?
It's an example equation. The actual question is to implement a Case 3 Bayesian classifier. It matches the results I want, I just want to have it so that it takes the data automatically. syms x1 x2; mu1=[mu(1, 1);mu(1, 2)]; mu2=[mu(2, 1);mu(2, 2)]; x = [x1; x2]; w10 = -0.5.*mu1.'*inv(sigma(:, :, 1))*mu1-0.5*log(det(sigma(:, :, 1)))+log(prior); w1 = inv(sigma(:, :, 1))*mu1; W1 = -0.5.*inv(sigma(:, :, 1)); g1 = x.'*W1*x + w1.'*x+w10; w20 = -0.5.*mu2.'*inv(sigma(:, :, 2))*mu2-0.5*log(det(sigma(:, :, 2)))+log(1-prior); w2 = inv(sigma(:, :, 2))*mu2; W2 = -0.5.*inv(sigma(:, :, 2)); g2 = x.'*W2*x + w2.'*x+w20; eqn3 = g1 == g2;
I'll be honest, not really sure what you're asking for. I *think* this is something along the lines of what you're asking for. X is a array of rand numbers between 0-100, N is just an array of predefined values. Also I'm on my phone so apologies for the formatting. X = floor( rand(20)*100 ); N = [75 175]; For j = 1:length(N) Sum = 0 For g =1: length (X) Sum = Sum + X(g); If Sum &gt; N(j) Sol(j) = g; Break End End End
Well that didn't format how I expected it to. :/ 
 x1 = data(:,1); x2 = 3 + x1; classIndex = data(:,2) &lt; x2; Would do the same thing, without any loops or symbolics. Based on your other comment you have a more complicated equation. So why not solve it **once** to get the equation in the form you need and then use the approach given above?
Ah, okay. I figured I might have to do it that way. Thanks.
You can also consider this self-paced online course: https://www.udemy.com/matlab-programming-mxc/?couponCode=MXC-MATLAB10
I don't know why it's doing that (you didn't post your actual data file), but I'm assuming Matlab is thinking the data is supposed to be character arrays and not numbers. [You can check the import options](https://www.mathworks.com/help/matlab/ref/readtable.html#bvghcdb) and then change the `VariableTypes` with the [setvartype command](https://www.mathworks.com/help/matlab/ref/importoptions.setvartype.html).
&gt; cos(30°)=sqrt(3)/2 right? Yes. &gt; So why is that when I type "cos(30)" I get 0.15425 You didn't type cos(30°). You typed cos(30).
I agree. As a general rule, I avoid using auto-detection of anything. It's fine as a convenience when you're just exploring, but when you get around to writing code that's expected to be reused, you should explicitly specify anything that matters for your code to work. 
How much u pay?
I used this method in a task where 2 variables were dependent from each other (basically a circle equation) and it worked for me just fine. What kind of dependency do you have exactly?
Fmincon doesn’t use the simplex method (gradient free, nelder-mead), fminsearch does. 
Maybe different version of Matlab..
So a couple of things.. First of your problem is caused by the fact that your boundaries are only partly defined. For example function 1 is defined for 0 up to 0.0162 and 0.0162 to 0.0438. Function 2 is defined for 0.0875 to 0.1038 and 0.1038 up to 0.1313. Now as you can see, there is no region of overlap between the two regions. Hence if you add them up you'll always get nan for all regions. Now to the main question: Why are you using the symbolic toolbox for this? that doesn't make sense. Like you define the symbolic variables first and then you literally overwrite almost all of them (???). I'm not sure what you are trying to accomplish here, but I heavily suggest you rethink your strategy.
&gt; the alignment is still performed but comes out completely wrong You need to be much more specific about what is different between the two outputs.
Don’t underestimate this. One of my scripts on 2016 was broken on 2017 as well. Just reinstalled the older version. 
just use the "double" function. if you have your "cdata" variable that came from an image, that is a uint8 that is [numRows, numCols, 3], do: doubleData = double(cdata); im2double looks like a function matlab has to help out with whether your dealing with data in the 0-255 range or 0-1 range. if you were to have used im2double, you could probably have multiplied the result by 256 to get it near your original data numbers. also, the "image" function has some predetermined behavior for what scale it uses that depends on whether the input is a uint8 or floating point number, so sometimes the result can look weird, in which case passing in a scaling or using imagesc can help.
E is a vector. So it's asking what is the maximum value of E and where in the vector (indices) does it occur. Try `help max`
Alright thank you. With that and some more searching around I was able to find what I needed for the real parts. I still wasn't able to do max and min for the imaginary parts since I kept getting errors if I tried to do it the same way I did for E, but I had to go ahead and turn it in as is.
To expand on this, image/imshow expect images of type double to be in the range [0,1]. Anything above 1 will show up white. This is why using the conversion functions im2double and im2uint8 is important and useful.
I just ran your script on R2016b and it wasn't aligned. [Here is a still from the video](https://imgur.com/a/unQUe), and [here is the output of 'luckyimage'](https://imgur.com/a/dKkEw). The results from 'total' were similar (I couldn't visually tell the difference). Take it for what you will. Good luck.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/LqsmnnG.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dtk8jdz) 
go away
you need to tell matlab where it should put the smaller matrix in the bigger.
Cool, I'll check it out. Thanks
sorry i missed that one, what about splitting it up, calculating it on by one and than populate the matrix?
Thank you for your answer, I also think that this option is the solution, but here's what i've discovered: https://ibb.co/dp2g4R I really don't get why its a character array if it says "Double". link to the csv: https://ufile.io/djcn6
Thanks for your answer, do you know how I could solve the problem in this case? I did some extra research and found this: https://ibb.co/dp2g4R
I don't think you understand the issue. Imagine you're matlab and you're trying to compute f1(-1), in this case you wouldn't know what to do, since -1 is not defined for f1. So it returns NaN, not a number. f1(0.09) it can compute, since 0.09 lies in the defined domain. f2(0.09) again is undefined and will return NaN. Now if you want to compute f3(0.09) = f1(0.09) + f2(0.09), what would you get? The answer is: f1(0.09) + NaN. A number + NaN = NaN. Since this is true for all possible x it will always return NaN. **A possible solution**? Define x. Include an "otherwise" where x = 0. See the documentation on how to do that. That way x will be defined for everything. **The real solution**: Don't use the symbolic toolbox for this, since this doesn't make any sense to use it. Like you are not doing any algebraic manipulation you are just computing data. &gt; I tried to plot these functions on discrete vectors, but there would always be rounding errors on the edges, and my supervisor recommended the symbolic toolbox to get rid of them. Show me an example of this. I don't understand this. In the end you generate the same data again, so I don't understand this argument. &gt; Hm, you mean I should only define the variables and not the functions as symbolic? I'm afraid I don't really understand what you're saying. Look at your code, third line. There you define many different symbolic variables. Like x, f1, f2, f3, xu, yu etc. But then you overwrite those symbols with the actual values. I.e. xu gets computed on the 17th line, while you have not used it as a symbolic variable at all. The only symbolic thing you are actually doing in this script is with the piecewise functions. Now back to the **real** solution: What is wrong with the simple plot(x,y) command? Just generate your numbers and then plot it. e.g.: xdata1 = % generate your first domain here ydata1 = % compute the ydata based on xdata1 here xdata2 = % second domain ydata2 = % data from second domain etc. xdata = [xdata1, xdata2,...]; ydata = [ydata1, ydata2,...]; plot(xdata, ydata); 
&gt;A possible solution? Define x. Include an "otherwise" where x = 0. See the documentation on how to do that. That way x will be defined for everything. Thanks, that worked for the most part, I'm not getting the NaN anymore. It seems that adding the functions and then plotting the result gives me separate lines for every single part of the function, instead of giving the value from adding all the functions together. As in, it's giving me a picture like [this](https://imgur.com/a7ND11L) instead of [this](https://imgur.com/0Pj46Uf) (the upper line is the sum of the lower lines). &gt;Show me an example of this. I don't understand this. In the end you generate the same data again, so I don't understand this argument. The entire code from before was too long to paste here in a comment, so I put it on pastebin: https://pastebin.com/EpNjc6ZN It'll generate the profile line I'm trying to achieve and the derivative as the error is easier to see there. You'll still have to zoom in, I'm afraid. The spikes are the result of rounding in line 105, where I clone the first tooth to create the others.
%sine Cosine clc, clear i=('Enter the first angle : '); f=('Enter the second angle : '); t=linspace(i,f,10) S=cosd(t); disp(' Theta Sine Cosine') disp([t' S' C']) 
%sine Cosine 3) clc, clear 5) i=('Enter the first angle : '); 6) f=('Enter the second angle : '); 8) t=linspace(i,f,10) 9) S=cosd(t); 10) disp(' Theta Sine Cosine') 11) disp([t' S' C']) 
If that is exactly your code, i and f are character arrays and not numeric. Linspace expects two to three scalar numeric inputs. For example: &gt;&gt; y1 = linspace(-5,5,10) Which generates 10 evenly spaced numbers between -5 and 5. Check out documentation for more: https://www.mathworks.com/help/matlab/ref/linspace.html#bud27em-4
Does this page in documentation help? I think the first topic (use CAD models with simulink 3D animation) and the last topic (link to simulink and simscape multibody) Sound like what you’re trying to do. https://www.mathworks.com/help/sl3d/import-cad-and-robot-models.html Let me know if not. I know folks who’ve done it before so I can go pester them :)
Yes. My university was running R2014a on its Linux cluster, while it was distributing R2017a to students. One of my scripts required the digraph function, which wasn't introduced until R2015a, rendering my code useless until they updated.
I am allowed to use the function, and I did so by defining my own kernels. However, when using three different kernels, the smooth image looks the same
thanks guys, very helpful
Your welcome!
I'll try that, thanks!
It worked!
Yes. But you are going to need a lot more detail than that, and probably show us what you are trying or want to try. Lots of ways to fit a curve. 
Yes of course, in the table you can see the data i have, the first column is the amplitude the second column is the frequency and the last column i want to correlate is the displacement in 10seconds. I am taking as x values the Amplitude , y values the frequency and as z values the displacement. Ampiezza | frequenza | t=0s | t=10s --------|---------|----|----- 2,71 | 11,80 | 0,00 | 0,04 0,45 | 1,66 | 0,00 | 0,01 3,56 | 10,27 | 0,00 | 0,02 2,91 | 7,77 | 0,00 | 0,07 3,12 | 10,51 | 0,00 | 0,02 4,45 | 11,47 | 0,00 | 0,11 4,56 | 9,57 | 0,00 | 0,08 4,35 | 11,39 | 0,00 | 0,05 4,45 | 6,46 | 0,00 | 0,16 3,29 | 12,64 | 0,00 | 0,03 5,00 | 13,00 | 0,00 | 0,02 2,00 | 9,00 | 0,00 | 0,07 5,00 | 13,00 | 0,00 | 0,02 5,00 | 13,00 | 0,00 | 0,11 2,02 | 3,84 | 0,00 | 0,04 2,78 | 8,60 | 0,00 | 0,07 3,85 | 11,09 | 0,00 | 0,03 3,09 | 12,07 | 0,00 | 0,04 4,01 | 12,75 | 0,00 | 0,08 4,02 | 12,80 | 0,00 | 0,08 3,27 | 4,77 | 0,00 | 0,07 1,13 | 1,46 | 0,00 | 0,03 1,12 | 4,97 | 0,00 | 0,01 0,36 | 8,74 | 0,00 | 0,01 3,17 | 7,79 | 0,00 | 0,08 1,67 | 6,14 | 0,00 | 0,04 3,46 | 9,54 | 0,00 | 0,04 2,77 | 13,80 | 0,00 | 0,03 2,34 | 11,60 | 0,00 | 0,02 4,00 | 6,00 | 0,00 | 0,20 3,00 | 4,00 | 0,00 | 0,12 1,00 | 5,00 | 0,00 | 0,02 2,00 | 8,00 | 0,00 | 0,06 4,00 | 9,00 | 0,00 | 0,09 3,00 | 1,00 | 0,00 | 0,22 3,00 | 1,00 | 0,00 | 0,95 3,00 | 1,00 | 0,00 | 0,98 1,00 | 10,00 | 0,00 | 0,02 1,00 | 1,00 | 0,00 | 0,02 3,00 | 1,00 | 0,00 | 0,00 5,00 | 1,00 | 0,00 | 0,00 7,00 | 1,00 | 0,00 | 0,00 9,00 | 1,00 | 0,00 | 0,15 3,00 | 10,00 | 0,00 | 0,11 3,00 | 1,00 | 0,00 | 0,61 3,00 | 25,00 | 0,00 | 0,01 1,00 | 10,00 | 0,00 | 0,00 9,00 | 10,00 | 0,00 | 0,66 1,00 | 1,00 | 0,00 | 0,05 3,00 | 25,00 | 0,00 | 0,02 5,00 | 25,00 | 0,00 | 0,08 9,00 | 25,00 | 0,00 | 0,46 7,00 | 10,00 | 0,00 | 0,45 9,00 | 25,00 | 0,00 | 0,28 
Great!
**tl;dr: The solution is to use biograph and use** view(biograph(A,B)) **where A is your adjacency matrix, B is a character array of labels for your nodes, where B(a) is the element corresponding to the node in A(a,:).** --------------------------------------------------- Swell community y'all have here. Honest question, plenty of detail, courteous, and yet downvotes the whole way down. Fortunately, I found a solution, and since I'm not a misanthrope but also really petty, I'm happy to share it in detail if anyone else happens to stumble across this looking for an answer. My solution is rather specific to causal sets, because that's what I'm working on, but hopefully it might be useful for anyone else trying to create a DAG (directed acyclic graph) for any other reason. You must create a [biograph](https://se.mathworks.com/help/bioinfo/ref/biograph.html) object. If you already have a causal set (or any adjacency matrix) and have been able to plot it the way I was using digraph, you simply create a biograph object using h = biograph(your_link_matrix,label_array); view(h) **your_link_matrix is the adjacency matrix** that represents the ordering relation between your events. ---------------------------------------------- *(Note for anyone working on causal sets: If your set includes "A precedes B" and "B is preceded by A", you will need to reduce the matrix by removing one of these "equivalent" relations, such that you have only 1's in your matrix. In other words, for a causal set with two events, A and B with matrix representation* causalset = 0 1 -1 0 *you must remove the -1 and set it to zero, which is fine because it is redundant. If you use anything else to denote this relationship, you must change whatever number you have for the statement "causally precedes" to 1. If you are not working on causal sets and have no idea what I'm talking about, disregard this.)* ---------------------------------------------------- **label_array is a character array** for the events in your causal set. If you are using all of the points in your causal set, then the row number of your matrix is simply the label of your nodes. For instance, if your adjacency matrix looks like this: adjacency_matrix = 0 0 1 0 0 0 1 0 -1-1 0 1 0 0-1 0 Then you can simply create the label_array using the following code: label_array={}; for a=1:length(adjmatrix(1,:)) label_array = horzcat(label_array,num2str(a)); end (An adjacency matrix must be square anyway, so all rows/columns must have the same length.) If you want to create custom labels, I believe you will need to do that manually. --------------------------------------------------------------------------------------------- (*Another note for anyone else working on causal sets, and possibly others: most causal sets must, of course, be pretty large--possibly on the order of 10,000 points, and in that context, you may have found my diagram to be a little...lacking. As you may have seen in my code, to make the Hasse diagram understandable, I have selected a random event in the causal set, which I call "spot" and plotted its "nearest neighbors". I created a distance matrix using* dist = distances(digraph(abs((causalset)))); *then decided on the distance of nearest neighbors, which I called "hood", and enumerated all the events within that distance putting them into an array I called "neighborhood", using* neighborhood = zeros(1,1); for a=1:m if dist(spot,a)&lt;=hood neighborhood = horzcat(neighborhood,a); end end neighborhood(1) = []; *Then, I extracted that "neighborhood" from the causal set and removed the redundant relations using* subset = causalset(neighborhood,neighborhood); subsetfixed = subset; for a=1:length(subset) for b=1:length(subset) if subsetfixed(a,b) == -1 subsetfixed(a,b) = 0; end end end *You can keep the original labels of the largest set using the lines* label_array={}; for a=1:length(neighborhood) label_array = horzcat(label_array,num2str(neighborhood(a))); end *instead of the the lines used to create the label array above.* *Finally, you can denote those events in the subset that are connected to the entire event and use them to edit your labels by using* edges=zeros(1,1); for a=1:length(neighborhood) for b=1:m if causalset(neighborhood(a),b) ~=0 &amp;&amp; dist(neighborhood(a),b)==1 &amp;&amp; ismember(b,neighborhood)==0 edges=horzcat(edges,neighborhood(a)); end end end edges(1)=[]; edges=unique(edges); *then labeling them with an asterisk using* edgelabel={}; for a=1:length(edges) edgelabel=horzcat(edgelabel,num2str(edges(a))); end for a=1:length(label_array) if ismember(label_array{a},edgelabel) label_array{a}=pad(label_array{a},length(label_array{a})+1,'right','*'); end end *and also label the "center" of the subset that you extracted with an "O" for "origin" using* for a=1:length(label_array) if strcmp(label_array{a},spot)==1 label_array{a}=pad(label_array{a},length(label_array{a})+1,'right','O'); end end --------------------------------------------------------- One problem I have noticed is that my Hasse diagram is "upside down", but changing the layout of view(biograph) is not as simple as most other matlab figures and there seems to be little documentation on how to do this. A quick fix is to select File &gt; Print to Figure in the Biograph Viewer, then in the Figure window that produces, select "rotate 3D" either from the icon in the toolbar in the top or Tools &gt; Rotate 3D. Or, even more simply, just type "axis ij" in the command window. If anyone is working on this and found any of this unclear, feel free to ask questions or PM me. I apologize in advance if my code is a little unclear or poorly written, but it suffices to say that [it gets the job done :D](https://imgur.com/a/whemj)! 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/JcDPxgd.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dtkv8qc) 
I feel like this isn't all of the code. Surely there should be the command `input` in there somewhere. 
take a look at the fit comand -&gt; https://de.mathworks.com/help/curvefit/fit.html
hey man if you figure this out please let me now. I'll have to do something very similar to this in a few months time for my master's thesis
ok!That is nice , now theres te queston of square R right?How can i see the % of data on my surface?
NVM this isn't the issue it's something else
This sounds like a floating point problem. If your rows and columns add to 1.00000000001 or 0.99999999999, then it will display as 1.0000, but it will not be equal to 1. There are a few possible fixes, but they all rely on the principle of setting some allowable error, and testing if the answer is less than the error. For very accurate calculations, the function eps() is useful for setting the allowable error. Here's some sample code to demonstrate: x=ones(7).*(1/7); RowSum = sum(x,2); ColSum = sum(x,1); % doesn't work due to floating point precision RowAddsToOne = (RowSum==1); ColAddsToOne = (ColSum==1); %fix by rounding RowAddsToOneRound = (round(RowSum,5)==1); ColAddsToOneRound = (round(ColSum,5)==1); %fix by comparing to tol ErrAllowed = eps(1); RowAddsToOneError = (abs(RowSum-1)&lt;=ErrAllowed); ColAddsToOneError = (abs(ColSum-1)&lt;=ErrAllowed);
I’m not familiar with all the functions in your script, but could some of them be from toolboxes you have at school but not at home?
but what ever company asks for matlab experience is looking for more than &gt;discreet type things, and linear algebra Some models, simulations and so on.
Not the same and workes in a different way
It probably will to your eyes. But look at the difference between them. Maybe: imagesc(imabsdiff(imageA, imageB)) 
Discrete.
yes i expressed myself badly while at the last post. I was to get how to do a statistic analysis of the validity of the model.
The most common way to do this is to add random jitter. For example x = linspace(0,100,51); jitter = randn(size(x))*5; y = x; figure() plot(x+jitter,y,'k o')
check out the rand function, it generates uniformly distributed random numbers between 0 and 1. Scale and translate the results as desired.
No, they are not the same. If you can’t get MATLAB through school, download Octave and start learning.
Read the documentation on the plotting tools. You'll probably want to make a bar chart. 
rand() ic closed; it does include 0 and 1
Are you saying you want the 1st and last element of each row or column to be 0 and 1 respectively?
You realize that numerically there's no difference, right? The endpoints themselves are sets of zero measure so the probability of actually getting them is zero. It doesn't matter if they're included in the interval or not. 
You realize that numerically there's no difference, right? The endpoints themselves are sets of zero measure so the probability of actually getting them is zero. It doesn't matter if they're included in the interval or not. Also, nothing on that page you linked says anything about it being an open interval. 
AHHH! right. OK sweaty_meatballs, here's your code: i=input('Enter the first angle : '); f=input('Enter the second angle : '); t=linspace(i,f,10) S=cosd(t); 
If you want a closed interval then you need a bump function. These are a huge paininrhe ass and I don't recommend using them. Instead try a truncated normal distribution.
Updated
Well first you're gonna need a 4 dimensional screen. 
Yeah I just checked on my computer, you broke Matlab. We'll all have to go back to IDL. Way to go. 
Assuming you've declared the array properly (I keep forgetting the syntax). The thing is, Matlab has to read in floating point numbers, like you've said, yes? And it does so in a rather funky way. To you, the answer is clear: the sum is zero. But Matlab doesn't understand that. So, in passing the data in and around the processor and the cache, round off error creeps in. Too tired to explain better, but you can read up on how floating point computations are carried out. 
Credit to r/shadowfox_art for the awesome art
Well shit. Everybody move to python. Matlab is broken.
I'm not seeing the relationship between a bump function and a closed interval. 
Yes. You can use photoshop, or you can spend about a decade working with a team of people with doctorates in machine learning and image science. 
I thought this was a poem at first after reading the title. 
Lol who would write a poem in MATLAB subreddit
dont understand the part with the RPi, such code is not working fast from this kind of small machine. to process a batch of 6 4k pic you need a proper pc, not ultra fabcy but an normal CPU not ARM like the RPi, except you have a lot of time...;-)
Wow, didn’t know that. That’s unfortunate - fighting against the tide :) 
Detect edges -&gt; distribute points on edges -&gt; delaunay is a start.
Matlab does not do anything funky with floating point. This is entirely standard. 
A variable with the value ((X1〖X1〗^t ))/(trace(X1X^t 1))
Use the pretty() function 
Well, I have a suggestion. There's a high chance it's stupid, but still you can try it. Run the MATLAB code in a fair, decent PC n just connect the Rasp to it through a network to take data from their equipment (cameras). I won't really suggest doing 4K image processing with an arm device, it'll take an eternity.
You might be interested in generating [Voronoi diagrams](https://www.mathworks.com/help/matlab/ref/voronoi.html), to start. Stylistic effects not included. 
It is 4-D in the context of four signals with potential correlation. It is just not 4 spacial dimensions.
And format fraction to get fractions rather than decimals
What's tf? If you have two vectors of the same length (in general two 2d arrays of the same dimensions) you can use plot(x,y) to plot y against x
What round off error? Matlab uses 15 digits for floating point, and here there are no more than 4.
I'm not worried about being top comment, I'm wondering why I'm getting downvoted for giving a legitimate answer at all? Like what is the point of that?
Idk
“Ode to 45 Isode” is how I read it at first and it sounded like a poem you know like “ode to joy” 
https://www.reddit.com/r/matlab/comments/7rr5sq/stupid_noob_question_about_random_number/
So Matlab is giving you the derivative dV = 15,000-2000*x, from that you can plot the tangent line. I'm not sure where you are stuck.
Make the equation symbolic first, then use the `subs()` command: syms x; eqn = x*10000-1000*(x-5)*x; V = @(myVar)subs(eqn, myVar); Now if you want a derivative, take the derivative before you substitute: dV = @(myVar)subs(diff(eqn, x), myVar); Enjoy!
use [subs](https://www.mathworks.com/help/symbolic/subs.html)
You just triggered my PTSD
Well, if there are nice geometric features that detect edges or even detect rides could pick up for decent-looking segmentation — you can certainly make the image look this cool. But it’s quite a bit of work.
&gt;But it’s quite a bit of work. Exactly haha there are certainly ways to do it, but it's going to be so dependent on your input image and so subjective that there's basically no point automating it - you'll just end up doing everything by hand in the end anyways.
You might be looking for [warp](https://www.mathworks.com/help/images/ref/warp.html), which maps an image onto a surface.
scroll down &gt; https://de.mathworks.com/help/matlab/ref/colormap.html
http://www.mccormick.northwestern.edu/documents/students/undergraduate/introduction-to-matlab.pdf
There are built in functions for uniform and normally distributed numbers. You don't need to use rand to create normally distributed values, you'd just use randn. Furthermore there are functions to generate numbers from a few dozen different distributions in the statistics toolbox. 
 stem3(x1, y1, z1) hold all; stem3(x2, y2, z2) stem3(x3, y3, z3) stem3(x4, y4, z4) That will put 3 separate functions on the same plot. Otherwise, I have no idea what your question is asking. 
Damn you just schooled OP
Before I actually try, I have to submit this, so will the image warping stay with the file? Because I have to load the file right? And it may not be available on the graders computer when they check?
[vertcat](https://www.mathworks.com/help/matlab/ref/vertcat.html)
You'd need to include the image with the code if you want to make it work on your examiners computer. Otherwise maybe you could work a way to use an image on a web address? Alternatively, you could probably save the colour pallette it generates (if I read the documentation correctly) and send that with the code.
I guess I'm not actually trying to vertcat anything. just make a vertical array inside a matrix... I feel bad for phrasing this question so poorly, but I don't really know how anything about this.
The link is good, but it has nothing to do with “the variable class” or negative numbers. .01 cannot be expressed exactly in binary, so even though these are nice precise numbers in decimal, when matlab stores them (in floating point representation, which is 2-based), some precision is lost. Multiply all the numbers by 100 and retype them, then sum, then divide by 100 and you will get 0 exactly.
If you vary K, then you can make a 3D plot. For example, perhaps parameter K is valid between 0 and 1, while alpha is good between 0 and 2pi. K = 0:0.1:1; alpha = 0:0.1:2*pi; beta = atan(K’*sin(alpha)); surf(alpha,K,beta) xlabel(‘alpha’) ylabel(‘K’) zlabel(‘beta’) 
Also looking for this! 
I can't comprehend the title... A description would be nice
Be sure to save the handle of the circle into a variable and then for each iteration update the position of the circles. For example: r = 1; x = 0:0.01:5; y = x.^2; hFig = figure; hAx = axes(hFig); axis(hAx, 'equal'); hold(hAx, 'on'); hC = rectangle(hAx, 'Position',[x(1)-0.5*r y(1)-0.5*r r r],'Curvature',[1 1]); hPlot = plot(hAx, x, y); for loopVar = 2:length(x) hC.Position(1:2) = [x(loopVar)-0.5*r, y(loopVar)-0.5*r]; drawnow; end https://nl.mathworks.com/matlabcentral/answers/94495-how-can-i-create-animated-gif-images-in-matlab You can use this resource to find code on how to extract frames and save it into a gif. If you want a movie or something then google around, plenty of resources.
&gt; Can I do this? yes &gt; If yes, how can I do it? Loop over your values and then for each value save the data from the simulation. And after the loop make graphs from the saved data. Like the pseudocode you have typed. Use the sim command to run your simulink model. See documentation on how to use it. Then I would use a "export to workspace"-block or however it is called to export the data.
I am sorry my question is a bit short and ambiguous. Let me show you. I have this cell matrix called Finale: https://imgur.com/a/3fRFB I want to display the elements in this matrix as shown in this picture: https://imgur.com/a/FMTbK Please note that these are not fractions! I mean for example 84/41 does not equal 2.04! 84 and 41 have different units. I just want them displayed this way. Take for example the first line in the second picture. The numbers sitting on the top in the picture are 16,20,8,2. I my case, they are Finale{1,1}(4,:) which are 10 12 14 21 Below these numbers we have 84 166 166.5 166. In my case they are Finale{1,1}(1,:). (I know they are not the same numbers but this is just for demonstration). Below these are: 41 41 41 41. I my case they are 23 23 23 23 which are Finale{1,1}(3,:) Finally, the 585/41 in my case are 585.5/23 which are Finale{1,3} and Finale{1,2}. Now how can I take this data in Finale and display it as in the second picture? Thank you in advance 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/ZASCu42.png** **https://i.imgur.com/KCos2TU.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dto7f4v) 
By googlign around for web scraping I found this blog post: https://blogs.mathworks.com/loren/2017/07/10/web-scraping-and-mining-unstructured-data-with-matlab/ Sounds like a good start for reading I'd say.
What if the function is a beta =atan (sin alpha)? What is the code of the drawing?
It isn’t 3D anymore. You just use plot(alpha,beta) instead of the surf command.
Thanks for the reply. I found out I can embed additional files and folders in the installer executable to be extracted to the install directory, which significantly simplifies the whole thing for the user. So that works for me.
Thank you very much for your comprehensive answer :) It was really helpful and I eventually managed to plot the tangent. However I am not sure to uderstand what V = @(myVar)subs(eqn, myVar) does exactly since its not possible to run subs(eqn, myVar) on its own. I assume it takes the "x" in the previous equation and replaces it with myVar, and then creates a function. But I'm a bit confused about how the function would behave with say two variables x and y. 
can you share a link, or describe that a bit more? seems useful...
Histogram(data, ‘BinMethod‘,‘sturges‘) If you don’t want to compute it yourself. P. S. : Good advice: Read the docs!
I’m afraid, at this point, I’m not quite sure what you need help with; I’m sorry. Could you clarify the issue, please? surf(Lon,Lat,Alt) Where Lon is a M-long vector, Lat is an N-long vector, and Alt is a NxM matrix.
The bit @(myVar) just means that you want to make a function that you can pass an input into, and you're going to call the input myVar. You can 100% do subs(eqn, myVar) IF: 1. myVar is defined, or you just use a number in its place, and 2. eqn is a function of x or t. There might be other variable names that subs will look for; I can't remember and you'd have to read the documentation on it. You *can* use other variable names, but then you have to be more specific: Subs(eqn, &lt;symbolic variable you want to replace&gt;, myVar) Lazy edit - subs automatically replaces the first variable returned with symvar. In your case, there was only one variable, so no need to specify it (though the more safe thing to do would be to specify). 
Yes, but to create a more general distribution you must used randn. If you dont have the statistics toolbox you are SOL. I wrote a small program that does inverse sampling so an arbitrary distribution may be approximated to the desired precision. Matlab sucks for statistics, unfortunately. 
A bump function is a smooth function with compact support. Compact support means the domain of the function is closed and bounded. See: https://en.wikipedia.org/wiki/Bump_function Therefore, you need a joint distribution which can be modelled as a bump function. However, in practice there is little benefit to using these. You can make your own truncated distribution. 
Looks like you're already on the right track but you aren't understanding how to use the for-loop. Instead of saying `K_i = ...`, you should say `K(i) = ... ` that way you are saving all of the data into the variable `K`. Because you dealing with a 2-D case, I'm guessing the stiffness matrix for each element is going to be 2x2, in which case you'd say something like `K(2*i-1:2*i, 2*i-1:2*i) = ...`.
I'm thinking about what this function looks like in the three-dimensional space. This function is a curve on a sphere. Alpha and beta are the coordinates on the sphere. Could you help me?
Lol okay. 
Spelling? I guess? What's the documentation say? 
I assume it works fine, otherwise you obviously would have told us how it fails. 
In MATLAB, you can access elements of a matrix using either an index (1 number) or a subscript (1 number per dimension, minimum 2). The first two assignments use subscript but the last is using index.
MATLAB documentation is free on their website and well done. I would start here: [https://www.mathworks.com/help/matlab/getting-started-with-matlab.html](https://www.mathworks.com/help/matlab/getting-started-with-matlab.html)
Thanks
Look at scilab for an example of good random number generation
plot3(x,y,z) plots x on the x axis, y on the y axis and z on the z axis. I can't think of a time when switching x and y makes a difference, and you can rotate your view in the figure window, so the order really doesn't matter.
Well... when I put parfor in first loop (i) I get error. Second loop (j) works with parfor but take like 80 sec to complete. Without parfor it need 2 sec max. It should be faster with parfor... And sorry, I wasn't clear with my problem
I need to run this code with parfor. Can't use on first loop, second loop works but takes too long.
function [V, D, P] = Drag_Power(v_max,inputs) 
Thanks, that's what I tried before, but how do I go about using the inputs in an equation? function [V, D, P] = Drag_Power(v_max,inputs); D=(.5*Cdp*rho*(v_max^2)*S)+((W^2)/(.5*rho*(v_max^2)*S*pi*e*AR)); P=(.5*Cdp*rho*(v_max^3)*S)+((W^2)/(.5*rho*v_max*S*pi*e*AR)); V=sqrt((2*W)/(rho*cl_max*S)); end This function does not work. Is there a special way to input the structure into the equations? 
You have to reference the fields of the struct. So instead of Cdp, use inputs.Cdp.
^this
parfor is a tricky beast. your data needs to be "independent" enough when you're storing results, and there can't be any dependencies due to the way MATLAB executes it. for example, if you say: for k = 1:100 k end it will output 1, 2, 3...100 if you do: parfor k = 1:100 k end the result is going to be somewhat random, like 3, 15, 2, 9... (at least in my experience with older versions). it's strange, but it basically forces you to make sure there aren't any dependencies that shouldn't be there. does your code work without parfor?
Thank you
I believe you can use the command *hold on* then type your two plots *hold off *
Yes, but I need parfor for stupid school project. 
parfor isn't always faster since there's overhead associated with distributing the workload and collecting results. are you starting the parallel pool before the loop?
I'm thinking about what this function looks like in the three-dimensional space. This function is a curve on a sphere. Alpha and beta are the coordinates on the sphere. Could you help me?
Yes of course 
alpha = 0:0.1:2*pi; K = 1; beta = atan(K*sin(alpha)); [X,Y,Z] = sph2cart(alpha,beta,K); plot3(X,Y,Z) 
No expert here but I'd start by extracting the data from each figure then plotting them separately with the hold on. I'm not sure how to extra the data but I believe .fig files have the data built in so you can do that. 
What is the function?
A function of a curve that is parallel to a red line on a sphere.
Can you describe it's proccess?
Make sure to select the curve, not the axis.
I don't understand how this post has so many upvotes. You don't give anyone any information to solve your problem. You only post one function - beta = atan(K’*sin(alpha)) But it looks like there are only two variables - `alpha` and `beta`. How are you getting a 3D plot? Even in spherical coordinates, I would expect something like: r = f(theta, phi) Unless your `K` is a variable and not a constant, but I don't know if it is or not, or what the values are, etc., because you haven't defined anything. *If you don't tell anyone what you did, nobody can tell you where you went wrong.*
I really want to find a formula that is parallel to the red line. The formula I gave is a formula of the circle in the three-dimensional. Although it is only beta and alpha. K is a given constant. Can you find a function formula that is parallel to the red line?
lol. :) Thanks. I'm hoping OP figures out ... whatever it its their trying to do.
There are parallel curves on a sphere
Yep, of course. Thanks. 
How do you get three coordinates from two variables? That's the point of my post. What is the equation for your red line? What are the numbers you are using for K? Please post the code you're using to generate the red line and we can help you generate a line that's parallel to it. 
&gt; I get an error What error do you get? MATLAB errors are very specific. 
try readtable('filename.exe','Range','C9:D9'), only make filename.exe a variable, then use a loop to call each file name and stuff the results into a matrix. Something like: Data=[]; Files=[filename1.exe filename2.exe ... filenameN.exe]; for n=1:N tempdata=readtable(n,'Range','C9:D9'); Data=[Data;tempdata] end I don't have an active matlab license anymore, so I can't try it, but that's how I would start toying with it.
&gt; a simple call method like call(excelsheet1(C9,D9)) Does this help? xlsread(Filename,'SheetnameInExcel','c9:d10') Note that the xlsread function works differently if you have Excel. If you don't, then the above syntax might not work.
Error: The variable D in a parfor cannot be classified. See Parallel for Loops in MATLAB, "Overview".
/u/FrickinLazerBeams /u/MattDoesMath /u/Weed_O_Whirler People I am sorry... I was lazy and din't search google enough. Solution: for j=1:size(C,2)-(2n) -&gt; x=size(C,2)-(2n); and second for j=1:len 
The beta is also angle, which is perpendicular to the angle of alpha.
I just want to find the equation that keeps a constant distance from the red line.
alpha = 0:0.01:2*pi; K = 1; R = 1; beta = atan(K*sin(alpha)); [X,Y,Z] = sph2cart(alpha,beta,R); plot3(X,Y,Z) 
 files = dir('*.xlsx'); sheets = {'sheet1','sheet2','sheet3'}; data = []; for i = 1:length(files) for j = 1:length(sheets) newdata = xlsread(files(i).name,sheets{j},'C9:D9'); data = [data; newdata]; end end This assumes all of your files are in the same directory. Unfortunately, MATLAB does not have something like os.walk() unless you write it yourself, so finding all spreadsheets in a file tree might be a bit tricky. I have written my own MATLAB version of os.walk that works well based on comparisons to output from python. Can put up a dropbox link or something if there is interest. 
From 2016b on "dir" is able to search recursively. dir('**/*xlsx')
 doc mex and follow the instructions for building the mex file.
You mean the sources of the mex file before was compiled, right? Because I have only the mex file and when I opened it in Notepad++ it had me some weird characters.. it wasn't quite code.. Well, I suppose I have to ask my professor if she has the source, otherwise, I'll go to faculty where I suppose it's installed matlab on 32bit and it'll work there... 
Correct. The header and source file of c code that are compiled with the mex command.
Ask your subject coordinator if they have student licensing and how to install it at home. Otherwise, you might have to buy a student license from Mathworks.
Likely no. However, if you know Java and Python, you will likely be able to help your girlfriend out fairly easily. Native vectorization and matrix operations may be unfamiliar to you though.
Thanks for the info!
Yes thank you much
I'll give this a go, that's the issue I was running into, trying to create a loop to go through all the files and grab them and store them in an array. Otherwise I'm finding each array individually which is going to be tedious.
student licence is only $35 if i remember correctly. but your school should have it.
It looks like you wrote a lowercase I instead of an uppercase I. This has happened 64 times on Reddit since the launch of this bot.
Would having a bit of this background set me apart at all from other applicants to a job, in your opinion?
nah, i think it's much better to show some more advanced projects in the other languages that are relevant
Briefly, * will perform matrix multiplication, so if you try to multiply two matrices it will give you the resulting matrix. While .* will do array multiplication, which will give you the multiple of each internal element. Read this doc page for more info: https://www.mathworks.com/help/matlab/matlab_prog/array-vs-matrix-operations.html
At my school I could run it on a remote server on my laptop, it was pretty neat. Your school might have the same thing. 
And in a real crunch you could always use Octave
Ahh okay thank you!!
They do not, it's a junior college. 
My teacher told me to find it "somewhere" or ask if someone else had found it. Which I don't really want to illegally download.
The problem is that for my homework I have to copy and paste my code into a word document for my professor to see
I'll see what I can find along that route, thank you 
No, not at all. I work in infosec and it wouldn't even register. Python, powershell, JavaScript, bash, etc would all be more applicable. 
I am not sure if I understand your question. But would this work around work? You could have a chart inside the simulink block which only triggers if your external func sets an input to true. This way you can run your algorithm only when the function triggers. But the simulink block runs at whatever sample rate is set. 
I am honestly not sure at this point. I'm contacting the IT guys at my JC to see if maybe they have a remote thing that sweaterandsomenikes mentioned. Who knows, schools always surprise me haha. I would spend the $35 if I had to but as it is, it's a convenience fee, so it's not really a big deal. It would just be nice to work at home rather than spend the whole day and some night at the college.
can always pirate it.
Octave is an open source matlab compatible solution. 
You will have to manually normalize the rows. Something like `a = a./max(a,2)`. If you don't have implicit expansion you'll need to use `bsxfun` for the division.
Octave saves as a Matlab file, any code you write in octave you can open using Matlab when you get to school, or just copy and past right from your script file in octave 
Unfortunately even if I normalize (a=a./(repmat(mean(a, 2),1,3))), the produced imagesc(a) still mirrors the problems in the un-normalized data.
Hmm, even if i normalize each row (a=a./(repmat(mean(a, 2),1,3))) i still run into the same problem with imagesc(a) as when the data is not normalized.
It looks like you wrote a lowercase I instead of an uppercase I. This has happened 3003 times on Reddit since the launch of this bot.
Could you explain the motivation for why not use imdilate, given that you must already have image processing toolbox if using padarray? I assume the answer is homework, in which case, fine. If the answer is you think this will be faster on a single local machine than imdilate, highly unlikely. 
Your vectors are different lengths. 
Matlab is as much a science and engineering tool as it is a programming language. It doesn’t hurt to learn a bit though because it will force you to think about things differently in some cases and you’ll have a broader understanding of how problems can be solved. 
That's odd. I checked to make sure ,but I'll check the original code again. Thanks? 
If you enroll in Andrew Ng’s Machine Learning course on Coursera, you can get a free MATLAB license for the duration of the course. Or as others have said, you can use Octave.
Yeah, that's what I was thinking about, they seem related. But last night I was falling asleep as in my country the hour is CET +2. I'll try tonight. should I try in a cmd window run as admin? 
The uncertainty in the parameter is uncertainty due to the data, is it not? In other words, if the data are ground truth, there is no uncertainty about the parameter values (assuming the problem is convex, etc.). So my assumption is that the uncertainty in the parameter values obtained from nlparci reflects what you want. But I have no idea what nlparci actually does so I probably wouldn't use it. Personally, I would do fits on bootstrapped version of the data and get the 95% confidence intervals that way. 
Just type the command from my last comment into the prompt in Matlab while being in the directory where the .c file lies.
Matlab is a scripting language is what I've been lead to believe.
It also has a lot of capabilities
Just a stupid homework...
That is so bizarre... have you shown this to tech support? My first instinct would be to mess around with the axis properties such as the yticklabel. Does this only happen when you have several subplots? It would be good to try to isolate what is cause this behavior. I’ve never run into this before... My recommendation is to call into tech support. It’s either a bug or something quirky is happening that isn’t obvious. What version of matlab are you using?
I checked with doing the same plots in single figure windows and I ran into the same issues when resizing the window. But thanks to your mention of yticklabel, I commented it out (previously defined as (0:0.1:1)) and everything worked properly. Just for reference this was on both 2016b and 2017b and possibly another version on my supervisor's computer. And I will send the info to tech support so they can have a look. 
I guess the solution of this equation can guarantee that it is not bending, but I can't solve it. Can you solve it? K*sinθ+K*sin α*cosβ-sinβ+sinγ=0, alpha is an independent variable ,beta is a dependent variable, and theta, gamma, and K are constant. 
(1) I'm not sure of the exact algorithm used by smooth but I suspect it calculates the regression independently for each point. This means the calculations should lend themselves to parallelization and, in principle, you should be able to get a significant speed up using a GPU. (2) Does your vector contain any NaN's? I've found the presence of a single NaN can slow smooth down smooth very significantly. 
When you say `y = (x-a).^n` it is assuming you mean the entire vector `x`, when you should be using `y = (x(z)-a)^n`.
&gt; mex jpeg_read.c I tried and I get this: &gt;&gt; mex jpeg_read.c Error using mex No supported compiler or SDK was found. You can install the freely available MinGW-w64 C/C++ compiler; see Install MinGW-w64 Compiler. For more options, visit http://www.mathworks.com/support/compilers. Should I install SDK as I am said? 
If you still want to compile, install the mingw compiler, yes. You can do that via the addon manager. Since after the installation it's your only compiler, matlab should be configured to use it and the mex command should run.
The `sort` function will sort strings based on their ASCII value. The most obvious deficiency is that it may not treat upper and lower cases how you want. If this is a problem, you can convert everything to lower case before sorting, then use the returned index to find the initial string. StrArray = {'GAMMA', 'Alpha', 'dELTA', 'beta'}; LowStr = lower(StrArray); [~,IndSort]=sort(LowStr); StrSorted = StrArray(IndSort);
Aha, got it working! Thanks!!
I have solved this problem. The solution is to plot each row of data separately and then merge the figures using a free function called "tight_subplot". The result is the same as imagesc without the issues mentioned in my original question.
GE?
Useless for loop, use logical indexing. Also your output is y, but y is not a vector, so only the last loop calculation will be returned by the function. Better: idx=x&lt;a; y(idx) = (x(idx)-a).^n; y(~idx) = 0;
I don't think you need to contact tech support for this. I am going to go out on a limb here and guess that you had defined 'YTickLabel' and not 'YTick'? In other words, you resized your graph, and the limits are still [0 1], but now there are only ticks for 0, 0.5, and 1. If this is the case, only the first 3 provided values from 'YTickLabel' will be used, and additional values will be ignored. For your particular case, those values are 0, 0.1, and 0.2. In the future I would suggest either not defining 'YTick' and 'YTickLabel' **at all**, or defining them explicitly as follows: tick_vals = 0:0.1:1; set(gca,'YTick',tick_vals,'YTickLabel',tick_vals); 
Thanks for the input. I don't think any amount of normalization can help alleviate the issue. Since imagesc generates the limits of the colormap based upon the entire matrix of data, there is no way to do what i am looking using the imagesc(a) command, even if (a) is normalized properly. 
do you have a link to the function/algorithm you're using?
this is what ive been able to do for the first part: Mass=[400 70 45 2 0.3 0.16]; Metabolism=[270 82 50 4.8 1.45 0.97]; logM=log10(Mass); logMe=log10(Metabolism); plot(logM,logMe) a=polyfit(logM,logMe,1) t=polyval(a,200) Metabolism=(0.7266*Mass)+(0.5301)
I don't quite understand the second part about the m-file and what exactly is the question asking!
And octave is free? 
You need to tell mean in which direction it is supposed to average. How else should it know that for the second command it’s supposed to average along a different dimension if you are just giving it a matrix. Have a look at the documentation for mean. Basically you give it a second argument that tells it the dimension.
because by default it goes through one dimension 
Correct
Homework question: For some homework tomorrow i have to calculate a water boiler iteratively. The calculations are: E_sum = P - Alfa * A * ( T - T_inf ); %Calculate energi added dTdt = E_sum / ( cp * M_i ); %Find scale for timestep dT = dTdt * dt; %Scale and timestep product T = T + dT; %rise in temperatur add up t = t + dt; %Time add up I have to make a plot of the time and temperature, but can't figure out how to handle the timesteps in simulink and how to make an Initital condition of 20 deg C that should reach 100 deg C. I know this is a really newb question but i can't figure out how to make it work :(
What is your matlab version? The function is introduced in 2017b
Yes its a scripting language, but its also an entire system/ecosystem of products. The language itself is kind of icky, but there's many, many suites of tools. For instance, in digital signal processing MATLAB is probably the fastest tool to create, analyze, and prototype a filter. You can then access test equipment and start working with live data. (Python &amp; friends can certainly do this to, but there's a lot of inertia in the matlab community with these things).