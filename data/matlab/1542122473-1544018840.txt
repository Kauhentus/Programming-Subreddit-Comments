[One of these](https://www.mathworks.com/help/matlab/predefined-dialog-boxes.html) should fit the bill.
Thanx I managed to use it, but not the way I wanted it! 
You can change the version of java that matlab uses by typing on shell export MATLAB_JAVA=&lt;JRE path&gt; and the run matlab. In my case the path was /usr/lib/jvm/default-jre/ I tried several versions of java and none worked (all installed in the same path /usr/lib/jvm). I believe the problem is with the new kernel, because i recall running matlab on an earlier version of ubuntu (about 17.10) and it worked fine. Now i went back to 16.04 LTS but it runs the newer kernel 4.15. Maybe there is the problem.
How would you do this by hand? 
I believe it is a problem with the Ryzen APUs and newer versions of the kernel. Hopefully they will fix it. Now I am going to try to get the latest version of mesa drivers in Ubuntu 18.10 since it comes with the version 18.0.5 and the last is 18.2.2. If I find any solution I'll post it here.
Yes, it does make sense. I've tried implemented a sparse matrix multiplication using the state space block but I haven't seen any improvement that is noticeable. My matrices aren't highly sparse so that's not going to be helpful. I've dabbled a bit in trying to optimize the format of them so they can be paralleled on multiple systems with some success but the effort that goes into the setup is strict. I really wish we could leverage GPU capabilities in SLRT. I mean, those operations are what they are meant to do! 
Thanks man. I'll keep a lookout for your posts. I saw your other reply too. You mentioned the newer kernels caused the issue? You recommended downgrading to an earlier kernel? And here I thought newer kernels were good for new hardware like Ryzen. Guess not.
You can't have \[0;Nui\] as your initial conditions. Since y(1) starts at 0, your F will always return F(t,y) = \[0;0\]. Thus you will never get anything but your initial conditions. You may want to recheck your function. You may also want to use ode15s instead of ode45 while you debug this as you have a very stiff function.
This shouldn’t happen because of a network license. I think it only hits the license server when you first check it out not every time you use it. If any of your working directories are reading/writing to a mapped drive that can get slowed down by your network.
Yep definitely can add a mex wrapper on top of your c++ code to make it callable from Matlab. Matlab is pretty flexible though, so you can directly call c functions from matlab. You will probably need to turn off c++ decoration in your linker for the functions to make sense, or simply wrap your c++ code inside a pure c wrapper to make it matlab friendly. You can do the same thing with .NET or Java as well. &amp;#x200B; Some other things you can do is have your c++ code open up a tcp/ip server on a local socket and you can feed your data through the socket to matlab as matlab knows how to connect to a socket and read data from a socket. You could also just write a local file to the filesystem and have matlab simply monitor the file modified attribute and read and plot data from the file whenever it is modified. Yet another solution is to use shared memory. Matlab knows how about shared memory as well. &amp;#x200B; Lots of different solutions. I hope this helps.
You are correct that I am only getting my initial conditions, but I am not understanding what I need to change to fix that. I re-checked my equations and they are correct (they are provided) and the initial conditions are correct. y(1) is the number of photons and y(2) is the number of atoms in an excited state. There are initially Nui atoms in the excited state and there are no photons until they are emitted by the electrons going to a lower energy state. Thus, my initial condition for y(1) is 0.
No this doesn't really help. My confusion is how to connect my C++ program to my MATLAB program. If I great a MEX function and call it from my MATLAB code it will get to the call and never continue. This is because the C++ code contains an infant loop which is constantly monitoring the socket. I can't just use MATLAB's socketing functionality because I need a socketing program which has promiscuous mode. I can't have my C++ code write to a file and then have MATLAB read it because that will be too slow and I need real-time processing. Sharing memory between C++ and MATLAB sounds like a good idea, but I have no idea how to even begin doing that. Any examples or tutorials would be REALLY helpful. Thanks for taking the time to answer my question, BTW. I've been stuck on this all day.
sounds like you want event-driven programming, where you'd have your C++ MEX function polling on the socket, and when it receives something it would `mexCallMATLAB` a previously registered handler function on the MATLAB side to act on the received data. 
The real answer is it's complicated the short answer is no
Can I get a link to some source material? The only thing I can think of is this requires probabilistic ode solvers but we don't have enough info for that type of problem.
So... you might want to rethink using matlab in a real-time system. I would even rethink using any modern OS (linux, or Windows) in a real-time system. You might want to take this over to an FPGA if you absolutely need realtime, as you will find matlab/modern OS combo sorely lacking in realtime functionality. Perhaps you're dependability requirement is relaxed? Perhaps when you say real time, you just want "alot of updates" in matlab in a second? Perhaps you're realtime requirement is a slow update rate like tens of updates/second (i.e. something that lies at the 6 sigma threshold of a matlab/modern OS/modern CPU to process)? &amp;#x200B; If either of these requirements of realtime processing can be relaxed, then you can use the c++ program to smooth out any hiccups and have matlab display/process data in batch mode with the understanding and design that you will not see 100% of the data in matlab. A modern OS giveth and taketh away cputime and there is no guaranteed execution time. You can certainly play with thread priority and control other processes, but still no guarantees that matlab or your c++ time can respond to events in a timely manner. &amp;#x200B; As for shared memory, you certainly type "Shared Memory" in matlab and see an example. For the c++ side of things you either need to get familiar with the [Windows API](https://docs.microsoft.com/en-us/dotnet/standard/io/memory-mapped-files) (I have no idea if you're using windows or not), or you can search for a [C++ friendly library](https://github.com/carlomilanesi/cpp-mmf) that will setup memory mapping. &amp;#x200B; I hope this helps.
Use hands to type question on reddit.
How simultaneous do you need? If you're talking about a small number of milliseconds, hardware is the way to go.
I am familiar with that situation. I feel for you. I always had trouble getting toolboxes but I have ways.
What do you have so far? How would you do this by hand? You need to convert miles-&gt;meters and hours-&gt;seconds.
No, that's not the error. That's just telling you where the error occurred. The error is the text which tells you, clearly and exactly, what went wrong. Newton Rhapson is a numerical method. You should not be using symbolic variables for it. 
Error using symengine The operand is invalid. Error in sym/privBinaryOp (line 937) Csym = mupadmex(op,args{1}.s, args{2}.s, varargin{:}); Error in - (line 7) X = privBinaryOp(A, B, 'symobj::zip', '_subtract'); Error in PFproject3 (line 406) xi = xi - inv(J)*f; ----- That is everything that the console spits out after running the program. Not sure if there is some other place to check for errors. Also, I know that newton rhapson is a numerical method, but I would have to take the partial derivatives of every entry in that 8x8 matrix which would take forever. I'm not sure if I am doing this the most efficient way, but it's what makes sense to me. I took the derivative of everything symbolically and then plugged in my initial conditions to get those entries numerically. The only issue is this xi thing won't iterate, but instead gives me a bunch of FAIL's. 
If you've already used the symbolic toolbox to calculate the jacobian, use those new expressions to compute the jacobian numerically. You shouldn't have any symbolic variables in numerical code. 
Right. And I don't. I thin When my code stops and I get the error message I can check what is in my jacobian and my f and it's just numbers. no symbols: J = [ 4.7234759779784961114533659850217, 4.7234759779784961114533659850217, 4.7234759779784961114533659850217, 4.7234759779784961114533659850217, 4.7234759779784961114533659850217, 0.4430489711832013701010201295639, 0.4430489711832013701010201295639, 0.4430489711832013701010201295639] [ 3.2361344165495306771929117091485, 3.2361344165495306771929117091485, 3.2361344165495306771929117091485, 3.2361344165495306771929117091485, 3.2361344165495306771929117091485, 0.32432432432432432432432432432432, 0.32432432432432432432432432432432, 0.32432432432432432432432432432432] [ 2.4227283412853003766826493089288, 2.4227283412853003766826493089288, 2.4227283412853003766826493089288, 2.4227283412853003766826493089288, 2.4227283412853003766826493089288, 0.27417063383265621494977692480247, 0.27417063383265621494977692480247, 0.27417063383265621494977692480247] [ 2.9579454463923990145656609194961, 2.9579454463923990145656609194961, 2.9579454463923990145656609194961, 2.9579454463923990145656609194961, 2.9579454463923990145656609194961, 0.25406223420119519711915518784036, 0.25406223420119519711915518784036, 0.4430489711832013701010201295639] [ 3.3785463160937655729140227422865, 3.3785463160937655729140227422865, 3.3785463160937655729140227422865, 3.3785463160937655729140227422865, 3.3785463160937655729140227422865, 0.44638428727308798730284693978772, 0.44638428727308798730284693978772, 0.44638428727308798730284693978772] [ -35.329706449379545009475028386747, -35.329706449379545009475028386747, -35.329706449379545009475028386747, -35.329706449379545009475028386747, -35.329706449379545009475028386747, -4.9849206151392033703473316563759, -4.9849206151392033703473316563759, -4.9849206151392033703473316563759] [ -32.666108110319131618381228507018, -32.666108110319131618381228507018, -32.666108110319131618381228507018, -32.666108110319131618381228507018, -32.666108110319131618381228507018, -3.3138552287112417182868284726283, -3.3138552287112417182868284726283, -3.3138552287112417182868284726283] [ -36.805996838152221847630885918405, -36.805996838152221847630885918405, -36.805996838152221847630885918405, -36.805996838152221847630885918405, -36.805996838152221847630885918405, -4.9598254141454220811427437754191, -4.9598254141454220811427437754191, -4.9598254141454220811427437754191] ----- f = 4.7234759779784961114533659850217 3.2361344165495306771929117091485 3.6727283412853003766826493089288 4.6279454463923990145656609194961 5.4585463160937655729140227422865 -35.076706449379545009475028386747 -32.461108110319131618381228507018 -36.468996838152221847630885918405 ----- But for some reason the matrix xi = [0,0,0,0,0,1,1,1] just changes into a symbolic matrix with entries of: xi = FAIL FAIL FAIL FAIL FAIL FAIL FAIL FAIL ----- Which is why I'm confused. xi is never altered or made symbolic anywhere in my code. The only time is changes is withing the for loop, but even then it seems like everything is numerical when iterating xi = xi - inv(J)*f; J is numerical and f is numerical, but xi just becomes symbolic out of nowhere.
Just loop through each element in the vector, see if it's divisible by 7, if so, add it to a variable that you keep adding to. Also increment a counter. Then at the end out of the loop, do the sum/counter.
I think it has to do with the unsupported use of the c style printf specifier: "%g" To concatenate a number into to a string you do it with array syntax. In a basic example for i = 1:10 disp( ['Current index is ',num2str(i),' out of 10'] ); end For your case I would rewrite the input command as follows for i = 1:1:r_sat for j = 2:1:c_sat while saturated_data(i,j) &lt; 0 saturated_data(i,j) = input(['Please replace the value at temperature ',num2str(saturated_data(i,1)),': ']); end end end The key difference is that you put the temperature into the string before you pass it to the input function. In your implementation it is trying to pass a string and a double as two different arguments. On a different note I would suggest mentioning to the user what the value of j is so they know what entry they are replacing, but I don't quite understand your application.
Thank you for the explanation, I really do appreciate it! I have implemented the correct code into my program and it works perfectly. I do also plan on including the column that it pertains to. I just wanted to first test it out with what I had put up. Thank you again for the help!!
I'm not confident in this, but I believe that J is still a symbolic matrix, even tho there arent any symbolic variables in it. Try finding the type of J. I was doing something similar and had a vector that was all numbers but it was still symbolic
If your cameras have rolling shutters you can use a fast light flash to figure out how out of sync they are. Still tough to tune tho. 
First, take a course in digital signal processing.
I did not try that but did you try to set the figure visible property to off? 
Nope, didn't realize it as an option, will try. Thanks for suggesting!
In the future, reading the documentation for input would have made it clear that it doesn't take that form of input. 
Check the documentation for the "algorithm" input argument. 
Thanks for pointing that out! Made it much easier way to understand
Sure! It's somewhere here, if you have journal access. I don't have access to it on my phone right now. https://arc.aiaa.org/doi/full/10.2514/1.J052059?mobileUi=0
X(find(abs(X)&lt;1))=[]; Y(find(abs(Y)&lt;1))=[]; The function *find* gives you the position of the values which match the statement Abs(X) gives you the absolute value, so abs(X)&lt;1 all values in the interval ]-1,1[ *=[] deletes the line 
both come out as sym
To add on to this and as a general information: BFS or DFS is used for non-weighted graphs, which has a complexity of O(E+V). Dijkstra is used when your edge weights are positive, and depending on the implementation, has a complexity of O(E + VlogV). And If you have negative weights as well, then you need to use Bellman-Ford, which is O(V*E). That's why they say the algorithm for "mixed", which is Bellman-Ford is slow. Generally, if you have large network, you'd want to avoid negative weights. 
That's a more generic question about audio. You might find more help over in /r/synthdiy
Did you try pré allocating frames? 
Thank you for that. I already have the game board down. I just need to work on having everything move with the arrow keys at the moment. It’s a work in progress.
Thx, didn't new that!
Crap no I don't think so. What is the most elegant/compact way to do that?
&gt; We want to exclude all pairs where Xi or Yi, or both, have values between -1 and 1. mask = (abs(x) &lt; 1 | abs(y) &lt; 1) x_mod = x(mask) y_mod = y(mask)
Where has this been done before? &amp;#x200B;
I dont think this has a unique solution. Unless im misunderstanding something, setting either A or B or C or D to `sqrt(167)*eye(167)` and the other 3 to `zeros(167)` meets all the conditions, which is 4 solutions. I think this could be expanded to `nchoosek(167,4)` solutions by assigning each of the diagonal diagonal elements to exactly 1 array (A or B or C or D) and setting everything else to 0.
Once an experssion encounters a sybolic variable it stays symbolic until you manually converrt it back. Run `double(varName)` for each variable that is symbolic and shouldnt be.
Wait a second, do you go to Georgia tech?
You’re calling Problem.m but it can’t find it in your namespace most likely. 
I saved the file to a folder and set the path when I did so as it prompted me to. Haven’t changed the file name or file location at all. 
Some configuration has definitely changed. Do you know how to check if your file is in the Path variable for matlab?
I managed to get the error to go away by saving a copy of the file over the problematic one, but now it doesn’t actually run the script, it just displays &gt;filename in the command window
[removed]
Okay but that’s not the problem. The problem is your running a script that’s making a call to something that is not available in the namespace
How do I fix that
Google Matlab Search Path
NO SPACES ALLOWED
Why exactly is that? I think it just comes down to what you prefer to use. There [is a speed difference](https://stackoverflow.com/questions/33555066/faster-num2str-for-integers), but when used in an input it won't make any difference. If you are processing a ton of data into strings then sure, look into sprintf. If you come to matlab with a C background then sprintf might make more sense or if you want to very carefully format the numbers then sprintf might be a little easier. For me at least, when I am writing quick inputs or outputs that run infrequently then a quick num2str() works just fine.
[why don't you just try step by step](https://www.mathworks.com/help/matlab/ref/xlsread.html) 
Thanks!
Depends what to want to make. If you want to manipulate some entries which have a certain value you can use logical indexing: Be A an mxn matrix containing some random values where you want to replace all values between a and b by c: A(A&gt;a&amp;A&lt;b)=c; If you just want to find the indices, [x, y] =find(A&gt;a&amp;A&lt;b); 
Well, if your temperature is initialized to be zero everywhere and there are no sources... I'd say you successfully solved the problem. Now, if you want more interesting results, maybe try changing up your boundary conditions or initial conditions.
The reason I am confused is: &amp;#x200B; Ut=D*Uxx+C*U where D is the Diffusion constant, and C is the creation rate for neutrons, also constant. I am stuck on bullet point 2. No matter what I select for L the rate of creation never increases exponenetially &amp;#x200B; &amp;#x200B;
&gt;count = sum(A(:)&gt;90&amp;A(:)&lt;110); &gt;count = count + 1 Why?? And why is `x` not good enough for you? Sort that out, then you can use *one* of those as an index into a vector to store your results. myStorage = []; % empty array for idx = 1:100 % for loop with 100 iterations myStorage(idx) = 10*randn + 100; % indexed result end
We were required to use "count" in the assignment as it would be more clear. This script was what we had to do, and I was just thinking about how I could save the results and compare them and how to do that
Okay, so then: for count = 1:100 &lt;do stuff using count&gt; end Keep it simple, sugar. :)
We were required to do it like this in the assignment. My script was what we had to do, and I was just thinking about how I could save the results and compare them and how to do that
Okay. Thanks for the help!
OP said s/he was a beginner and I’m pointing it out because there is a better way...MATLAB is simply not meant to be used this way.
Ok. Does putting your script in a function do what you need?
It'll probably do the trick. Thanks for the help!
out = []; while true % calculate scalar x out = [ out; x ]; % brake condition end
"Implement a numerical fi nite difference scheme in matlab to con firm/deny this result." You have done this! &amp;#x200B; "You may also wish to start the process with a delta-function, approximated by 1/dx in the middle of the interval." You have NOT done this.
oh! I didnt realise this! &amp;#x200B; If I increase the legth of my equation nothing else changes.
Oh, I'd also recommend looking into a function like `del2` to get rid of your nested loop. It'll make your code much easier to read, and since it's vectorized, much faster.
Unfortunately I have no MATLAB experience so I have no idea how to do that. We are supposed to be in teams with one person who is done MATLAB previously but I am by myself :D 
Well you're in luck, 'cause MATLAB has fantastic documentation. Since you have working code, really only go through this if you have some time or want to upgrade your knowledge a bit; but, here's the doc for del2: [https://www.mathworks.com/help/matlab/ref/del2.html](https://www.mathworks.com/help/matlab/ref/del2.html) MATLAB has allllllll the functions, man. Never write them yourself unless you can't figure out how to get theirs to work.
Just wondering what level of difficulty would you rate this kind of problem? I'm quite new to PDES and extremely new to MATLAB :'D
As a counterpoint, I personally have never had the need to use sprintf or fprintf in any of my work. I work mainly in dynamics and controls, not data processing or topic mining. 
I've been out of school wayyy too long to answer this. But I was using this type of approach to do basic simulations of the wave equation in optical fiber back when I was in grad school. At some point I had access to a proper FDTD simulation toolset though. So depending on your specialization, your experience with programming, and your courses, I'd say it's a good problem for 3rd year+...? So... medium? In my experience programming math makes it much easier to learn math, too. Actually, if you're new to PDEs / MATLAB this is a hard problem. Once I figured out how to use MATLAB's built in stuff properly, it became much easier; especially when implementing explicit methods or using built-in solvers (like ode45).
I am a first year student studying Chemical science and Engineering (in the Netherlands) and we're doing it as a course in error analysis, a sub course of our lab course
The easiest ways that I know how to do this are 1) initialize the array as being 4d, e.g. use A=zeros(5,4,3,2); 2) use repmat()
I initialized my variable in 4 dimensions, and that works well up until the following lines (from the posted code): &amp;#x200B; if All_x1&gt;All_x2(k) All_line(All_points(k,2):All_points(k,1),:,k,j) = All(All_points(k,2):All_points(k,1),:,k,j); else All_line(All_points(k,1):All_points(k,2),:,k,j) = All(All_points(k,1):All_points(k,2),:,k,j); end Here's where I get the dimension error. Index exceeds matrix dimensions. The error occurs on the "else" portion of the loop.
Solution verified!
Look at Matlab doc here https://fr.mathworks.com/help/matlab/ref/getframe.html And more apecifixally (sorry for bad formating) Z = peaks; surf(Z) axis tight manual ax = gca; ax.NextPlot = 'replaceChildren'; loops = 40; F(loops) = struct('cdata',[],'colormap',[]); for j = 1:loops X = sin(j*pi/10)*Z; surf(X,Z) drawnow F(j) = getframe(gcf); end You may also change the rendering engine: At last look at the renderer property and change it to painter. If the prog is faster then you have an issue with opengl
Lecture 7: slides 7,10,12
Did you check what is time consuming? Get frame or plot? To improve plot as said before, try avoid recreating the object. I usually do like this for i=1:n If i==1 H=plot(....) Else Set(h, 'xdata',..., 'ydata',....) End Drawnow End This is muchhh faster
Have you checked the value of k and j when it fails and then see if that is larger than the size of the array? That’s typically where that error comes from
look up if statments, the logical 'and' operator (&amp;&amp;), and xlswrite. That should get you going. 
Interesting. I wonder if there has been some advertisement by MathWorks at universities world-wide and the higher-ups (administrators, department heads, etc.) have started pushing its use for even professors/assistants with little experience or inclination. Done correctly, this type of assignment can be very illustrative. You work the problem slowly, using for or while loops, figure out 1-based indexing, so on, so forth, and then write one or two lines that complete the whole problem by vector methods. I will say that it's very cool that your lab has an error analysis component, and that you're at least getting some experience in MATLAB!
Perhaps taking a step back on this: Have you tried filtering twice (filtfilt command) or tweaking your filter to avoid the phase shift? Alternatively, is there some reason you can't use x-120 to get the value from the raw signal as opposed to running findpeaks on a smaller chunk? Maybe a little information on the signal would help. 
Filtfilt would be a step in the right direction and would solve my phase issue, however I'm not familiar with the designfilt function. I'm currently using a simple butterworth bandpass My original code: % Butterworth bandpass filter design [a,b]= butter(1,[5 15]/(Fs/2)); %% Filters the sample with filter [a, b] and places filtered signal in array sf sf = filter(a,b,sample); I gave the filtfilt a go but I'm not too sure how to convert my filter into an IIR filter? % Butterworth bandpass filter design (4th order) [a,b] = designfilt('bandpassfir','FilterOrder',2,'CutoffFrequency1',5,'CutoffFrequency2',15,'SampleRate',Fs); %% Filters the sample with filter [a, b] and places filtered signal in array sf sf = filtfilt(b,a,sample);
You posted a homework question but you didn't actually say what you're asking from the community here.
thanks! i updated it, hopefully thats better im confused i followed my notes but cant manage to create a 2d or 3d graph so if anyone could help itd be much appreciated 
I ran into a similar issue a couple years ago, in my case I was spitting data on to serial faster than I could process it in Matlab and Matlab’s buffer was filling up and I was losing data. I’d recommend modifying the Arduino code to only send data when you detect a button press.
I’m not sure which argument it is, but it seems like one of the argument should be a cell array of character vectors and none of yours are. Maybe the cell array with the empty string in it should be a character vector instead of a string?
hey thanks for the response ! this is the script i came up for based on the notes we had for a similar problem: 1 \[x,y\] = meshgrid (-2:0.1:2); 2 z=80\*exp(-(X-1).\^2).\*exp(-3\*(Y-1).\^2); 3 subplot (2,1,1) 4 mesh (x,y,z); 5 xlabel ('x') 6 ylabel ('y') 7 zlabel ('z') 8 subplot (2,1,2) 9 contour (x,y,z); 10 xlabel ('x') 11 ylabel ('y') i feel like some things are off for the problem i posted but not exactly sure
&gt;1 \[x,y\] = meshgrid (-2:0.1:2); &gt; &gt;2 z=80\*exp(-(X-1).\^2).\*exp(-3\*(Y-1).\^2); &gt; &gt;3 subplot (2,1,1) &gt; &gt;4 mesh (x,y,z); &gt; &gt;5 xlabel ('x') &gt; &gt;6 ylabel ('y') &gt; &gt;7 zlabel ('z') &gt; &gt;8 subplot (2,1,2) &gt; &gt;9 contour (x,y,z); &gt; &gt;10 xlabel ('x') &gt; &gt;11 ylabel ('y') thanks for the response and read tho! any help is appreciated if the script is correct would all i have to do is hit run and it would work?
Looks good except in line 1, your x and y are lowercase, and in line 2, they are uppercase.
damn, good catch! much appreciated lets see what that does 
so i changed it says error in line 1, and no graph pops up haha, thanks for all the help so far ive been trying this at work on matlab online maybe once i get on the actual program it will switch up a bit
I'll look into to it with more detail, but from what I've seen it shouldn't be larger at the point of failure 
That looks about right. Only thing I see wrong is that you used lowercase x and y for the output args of meshgrid and uppercase X and Y in the heat distribution function.
What's wrong with your code? Is the problem that your indices don't match uo because of the diff function? function f = OPT\_1 (x); dx = diff(x); ddx = diff(dx); f = x(3:end).*ddx - (dx(2:end)).^2 -1; end 
Cool. Did something similar a while ago for plotting temperature data from a FLIR camera video. I just used a simple OCR on fixed segments frame by frame.
I was hoping to do an OCR video next - was it also a segment display? Did it work? I'm not sure OCR would work here actually - the frames of the side thermometers are really hard to read by eye. Did you use a stand alone tesseract, or use matlab's OCR? I'm a bit nervous about making a video using just the matlab OCR, since it's part of a toolbox and that makes a lot of people sad, but it's also kindof what I make videos about so I'm not sure. 
It's not clear to me what you mean precisely, but why not do something like tf = col&gt;=1 &amp; col&lt;=2 That will give you an array of logical values the same size as col. However would be easier to answer if you posted some example code...
It's not clear to me what you mean precisely, but why not do something like tf = col&gt;=1 &amp; col&lt;=2 That will give you an array of logical values the same size as col. However would be easier to answer if you posted some example code...
please i’m clueless and desperate 
Have a look at the 'trapz' function for the integration, but first you will need to apply the formula given (which i can't see properly) at a dt of 0.01 day. This will probably involve a 'for loop'. This will give you X (your 20 days in 0.01 day increments) and Y, the output from your formula calculation, you can then use: `Q = trapz(X,Y)` &amp;#x200B;
There are several ways to approach this. If you want the most basic, you should use braces when calling the arguments of the table instead of parentheses. Additionally, a more advanced option is using the table2array command. &amp;#x200B; Side note: you don't need to set the increment number in an array call if you're incrementing by 1 - i.e. 1:1:end is identical to just 1:end. 
You could start by modelling a simple communication link consisting of transmitter, receiver and an AWGN channel. As you proceed you might include additional components such as various pulse shaping filters, support for advanced modulation formats and extend the channel to a non-memoryless one. Based on that, equalizers would be a nice addition! Let me know what you think!:)
Sounds fantastic. It would be pretty helpful if you could link me some tutorials that would help me do that.
I think what you're describing is a scope problem. Once your function returns, you no longer have the variables. You need to pass them to another function, make them global, place them in a handle object....
Modulation, Demodulation and filtering are all fun.
&gt; I'm really struggling with plotting the trapezoidal approximation on matlab No problem! Assuming you've solved for your dependent variable (the result of the trapezoidal approximation), you can use the [plot command](https://www.mathworks.com/help/matlab/ref/plot.html) to plot it as a function of your independent variable. If we call your independent variable `x` and your dependent variable `y`, then the correct way to plot it is: plot(x, y) The command has quite a lot of additional functionality, and the resulting plot can be annotated, labeled, and scaled in a variety of ways. For example, you can give the plot a title and axis labels with: title('Trapezoidal Approximation of Collected Detritus') xlabel('Time [s]') ylabel('Total Detritus [g/{m^2}]') All this and more are included in the documentation linked above.
I second the MATLAB Onramp suggestion: [https://www.mathworks.com/learn/tutorials/matlab-onramp.html](https://www.mathworks.com/learn/tutorials/matlab-onramp.html) Free, quick, 2-hourish (probably less) intro into the basic MATLAB syntax
Everything computed as a sym Var remains a symbolic variable: even if you subs all the variables contained in an expression by values, it remains a symbolic value. You need to force them to double. x=double(x) However, this is really slow. In general, I suggest using the instruction matlabFunction to generate a function from the symbolic expression and then call this function using some numerical parameters
Probably not the best subreddit for this. Do you not understand what they are? Or do you not understand how to perform them?
Feel free to give me any simple ideas. (and link me some helpful tutorials)
I don't understand what they are
Watch this video series: https://m.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab
I could feel you. I was just the same 5 months ago. Not knowing basic Syntax and stuff. But as I've come across this software, I came to know that it's easy to code in Matlab and Matlab's strength is its community. I hope you find the stuff you need and finish off the project🤙🏼
Well, in the future, googling this would help. Try just googling "eli5 cross product" or "eli5 dot product". Or just cross product/dot product and you'll find good information.
I'm just trying to get it to display invalid if the number entered is not between 0 and 100. I haven't gotten far enough to start adding onto it. 
So you're code is just: g=input('Enter grades, and enter 999 to stop: '); while g~=999 if (g&lt;0) &amp; (g&gt;100) disp ('Invalid') end g=input('Enter grades, and enter 999 to stop: ') end
Right, well I'm just saying that if I run what you wrote, I don't have a problem. That's why I wanted to see the rest if something else was causing it.
Yes, it probably does. I don't have Octave. But try switching to &amp;&amp; and ||. I'm not sure about the invalid call, the only things you're calling are "input" and "disp". Check what the equivalent of those in octave is
Well my Prof said that everything were doing this semester will work in Octave as it would in Matlab, but shes been wrong before. But thank you for at least checking this out today. I think I just need to leave it as is and continue on with this.
Looks like a few of the multiplications should be element-wise multiplication ".*" Try this: fun = @(T) (1 - b^2 .*T/a).*(1./T.^2).*(exp(-0.5.*((T-6.1875)/2.11612).^2)).*(0.8.*T/Ed);
Octave user here. The warning is just a warning, not an error. It's telling you that in your if statement, Octave is implicitly using the short-circuit &amp;&amp; operator instead of &amp;. Meaning, if g&lt;0, we don't need to check if g&gt;100. This is reasonable. If you want the warning message to go away, you can use the &amp;&amp; yourself. And just FYI, the short-circuit operators only work on logical scalars.
I will tomorrow haha. I was thinking about it at the bus and didn’t really know how to explain it...
You can import numeric data from excel spreadsheets if you return numeric, text, and raw data separately. Once you have a numeric array instead of a cell array, doing what you want is super easy. Just hard-code the range for the array you want to pull, or put -1 in the place of the range to select data interactively (shown below). &amp;#x200B; `[num,txt,raw] = xlsread('yourfile.xlsx',-1);` &amp;#x200B; Once you pull the 'num' values from above, you can just use array logic to find values in and out of your desired range. 
Probably pcolor.
Update: I progressed this far. Except finding the maximum, the rest is accomplished. Was simpler than I thought. Should i delete this post? &amp;#x200B; clear all syms x; syms y; syms z; syms rho; A=[(12.73+(1467-4.89*x)*y*10000)-rho 2444.6*z-1.02+1629*y^2 2444.6*y; 2444.6*z-1.02+1629*y^2 0-rho 0; 2444.6*y 0 0-rho ] eqn = det(A)==0; roots = solve(eqn, rho); 
I don't know how to thank you for the help. Vectorization looks a lot easier than nested loops and hopefully I learn it soon. Thanks again. 
Check out this link: [https://www.mathworks.com/help/matlab/matlab\_prog/vectorization.html](https://www.mathworks.com/help/matlab/matlab_prog/vectorization.html) &amp;#x200B; Matlab is built around vectorization and it is incredibly fast and concise. Not everything can be vectorized, but most things can, just takes some creative thinking.
Thats just cool, none of what ive used matlab for would benefit from that approach, but its not hard to see uses for it. 
I'll definitely take look at it when the time to learn vectorization comes. Is mathworks the official tutorial site of Matlab? 
Let's start with this: do you have any specific questions? If you do, we might be able to tease out some details that can help you on your way.
You should have a look at dsprelated: https://www.dsprelated.com/tutorials.php There are lots of tutorials which; however, might not be specific to Matlab. I'll have another look and will let you know if I find something interesting.
Thank you, buddy. That would be helpful.
I haven't found anything that would really fit your needs. However, I would recommend you to start with the following: * Decide whether you want to look into analog or digital modulation. (Or maybe even both?) From now on, I'm going to concentrate on the digital variant. * Think about how you want to generate your data. How can you generate a bit sequence? Is it possible to transmit this over a channel? If not, how can you generate a transmittable signal (--&gt; pulse shaping)? * Take a closer look at the various possible pulse shapes, what aspects do you have to consider in the selection process (--&gt; spectral properties, maximum possible data rate, ...)? * How can you simulate the pulse shaping filter in Matlab? * How do you apply pulse shapes to the binary sequence (--&gt; upsampling and convolving)? * Make sure that you've understood that it is not possible to transmit complex data. A physical signal is always real-valued!
Of course, feel free to ask if you have any questions! :)
This is a double integral. dA still equals dxdy. Search the documentation for "integral". 
I have. Not sure what your point is... Integral takes the integration limits from the user, my problem is that those limits are not always the same, and they differ depending on the triangle points. So I need to define those limits based on those points (finding the equation of the lines connecting those points and taking those lines as the integral limits)
I didn't!! I know you can use functions as limits, but those functions are not really known, and must be computed case by case! that's why I'm looking for a method to have a general solution regardless of the points given
Ahh! Okay, so start thinking about how you can write the equation of a line given two points on the line. 
Pcolor, mesh, surf, imagesc
That's a smart way to start, care to share more sarcasm? you seem to be really good at it....
They make matlab. But there is help all over. Stack exchange has a lot of great help too.
What have you tried until now? Did you already saved the values from the files? 
load('data\_points\_50(1).mat'); m=length(a); %We set m to the the number of a and b terms (i.e 50) for n=2:11 %loop from n = 2 to n = 11 A=ones(m,n); %setting up our Vandermonde matrix A(:,n)=a; AtA=A'\*A; Atb=A'\*b; %Solve for x using backslash x=AtA\\Atb; %Compute and display our condition number of A\^T \* A in the 2-norm connum = cond(AtA,2); str=sprintf('\\nFor n = %d, the Cond num of A\^TA in the 2 norm = %4.2g using x\_0 + x\_1\*a: x\_0 = %4.2g; x\_1 = %4.2g', n,connum, x(1), x(2)); disp(str); end &amp;#x200B; That's what I've tried so far and its not giving me any errors (apart from telling me that the matrix is close to being singular, but I think that's what I'm meant to expect?) Sorry if I'm coming across as stupid btw, I'm terrible at Matlab :(
Ah I see what you mean, but I’m not sure how to incorporate it into my script
This is a known fail case for GEPP (Gaussian Elimination with Partial Pivoting) and it can lead to some pretty explosive instability for very special matrices. The way to fix this would be to use GECP (GE w/ Complete Pivoting), which searches the remaining rows and columns for the largest element then switch both the rows an columns. This is provably stable, but takes twice as long as GEPP so nobody uses it in practice.
Thanks for the help. If it is a floating point round off, any ideas on how I can check it? 
Your for loop is essentially copying everything in R into R0 and also for d0 and d. That's equivalent to: R0 = R; d0 = d; You should google QR decomposition and least squares. Seems to me like you're wrongly using the output Q and R of the qr function.
A couple things I noticed: if a(i,j) == 0 This statement occurs after the loop over `i`, so it will only check the last element for the current value of `j`. Also, try using `row` and `col` instead of `i` and `j`, which are two representations of the imaginary number. It won't likely cause a problem, but it's generally considered poor form in MATLAB. Second, the statement is actually the opposite case of the line if a(i,j) ~= 0 So why not use the `else` portion of the conditional? Finally, back to the first statement I copied, unless you're dealing with guaranteed integers, testing equality with zero is typically a bad idea. Try creating and tuning a tolerance value instead (something rather small, maybe starting ~10^(-10)). You can compare with that instead: if abs(a(i, j)) &lt; tol
The loops are there to "cut" the 0 rows. Now that I think about it, it shouldn't actually matter whether I cut the 0 rows or not. Could you explain to me how I used the QR decomposition wrong? In class it was explained like this: 1. Find the QR Decomposition of the Matrix A 2. define d = transposed(Q) * c ("transformed data vector") 3. solve the system R*x = d, since this is leads to the best fit for the initial system. And that's what I tried to implement here.
You should investigate [indexing](https://www.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html) to avoid replacing A during each iteration.
Since A is not a square matrix the R matrix will have rows with only 0 entries at the bottom. That‘s what I meant. I tried x=d\R and got the same Solution again.
You need to use R\d instead of d\R. 
That fixed it thanks a lot!
Thank you! Removing the first argument helped resolve the issue.
I wrote a similar program for a problem set two weeks ago to return the upper triangular representation of a matrix with row swaps. I perform the row swaps with the first "if statement" within the for loop. The code is a bit sloppy, but I hope it can be helpful to you. function [U,f_hat]=g_e(K,f) augmented = [K f]; [rows, cols] = size(augmented); for i = 1:rows-1 [~, ind] = max(abs(augmented(i:end,i))); ind = ind+i-1; if abs(augmented(i,i))&lt;abs(augmented(ind,i)); temp = augmented(i,:); augmented(i,:) = augmented(ind,:); augmented(ind,:) = temp; end for n = i:rows if n~=i augmented(n,:) = -(augmented(n,i)/augmented(i,i))*augmented(i,:)+augmented(n,:); else augmented(n,:) = augmented(n,:); end end end &amp;#x200B;
Sure, doctor... but honestly, I'm in engineering, not maths, but I know my stuff. I know that it is done this way, I just figured there was some already built-in function that does the job without having to reinvent the wheel. I'm sorry if I offended you or anything, enjoy your weekend! 
As an engineer in a senior position in aerospace, I can tell you that calculating the equation of a line is well within the expectations for a competent engineer. It is far, far away from the domain of "math, not engineering". Looking for a pre-written function that requires less hand calculation is a good instinct for many reasons, but ultimately if you can't find an expression for a line, you do not, in fact, "know your stuff". Which again is fine, in itself, but maybe getting defensive about it isn't the greatest idea, especially if you hope to function in a highly technical professional environment. 
This can be made easier and ore efficient by vectorizing it. I didnt try7 running it, but i think the following is coorrect: cumsum(1 - b^2 .*T/a).*(1./T.^2).*(exp(-0.5.*((T-6.1875)/2.11612).^2))*(0.8.*T)) ./ (Ed - min(Ed));
Try running it as `matlab -softwareopengl` to use the software opengl implementation. MATLAB's hardware opengl has a lot of problems on Linux in general.
I could identify a lot of problems here, but this is pretty simple so you'd learn more by figuring out the problems yourself. I'd suggest running your code line by line and inspecting the results so you can see what's happening exactly at each step. Also read the documentation. For example, what type of variable is returned by `input()`? 
I would also start with a single angle at first.
I am out of ideas, then.
It works fine for me with Gnome on Wayland
I got a resolution from MATLAB support 6 months back for my fedora-matlab problems. They had pointed me to below: https://www.mathworks.com/matlabcentral/answers/399207-matlab-does-not-start-on-fedora-28
 [num_rows,num_columns] = size(A); % Find number of rows and columns in A You can do a comparison like: if num_rows == num_columns: fprintf 'A is square' else: fprintf 'A is not square' You can determine the length of the vector b as len_b = length(B); All of this can be easily determined by Googling simple questions like how to find the size of an array in MATLAB. I'll let you Google how to implement Cramer's rule in a for loop.
What have you tried? Have you checked the matlab documentation on plotting? Have you tried to write those equations in Matlab? 
Everything in that loop over j can be vectorized or rewritten. The loop over i is just a convolution filter, I think? You could implement that another way - either via Fourier methods or maybe using one of the existing filter/convolution functions. In Matlab, i = j = sqrt(-1) so it's ugly to use them as loop indices. In general if you want to know what part of your code is taking the most time, try using the profiler. 
My goodness this made a massive difference!! Now it runs nearly instantly! Is the below what you meant about vectorising everything in the j loop? &amp;#x200B; u(1,50)=1.0/dx; u(:,1)=0.0; u(:,Nx)=0.0; time(:)=dt\*(1:1:Nt); &amp;#x200B; for j=1:Nt %setting the boundary conditions for i=2:Nx-1 u(j+1,i)=factor1\*(u(j,i+1)-2\*u(j,i)+u(j,i-1))+factor2\*u(j,i)+u(j,i); end middles(j)=u(j, (Nx-1)/2); end
This together with the advice above makes my code run crazy fast:) Thank you so much!
Looks like they're asking for a for/while loop through time with an if-statement to choose the correct equation: https://www.mathworks.com/help/matlab/matlab_prog/loop-control-statements.html https://www.mathworks.com/help/matlab/ref/if.html
Ah okay, thanks for that. Will give it a go.
You should build the first column outside of the loop: A(:, 1) = ones (m,1); Then starts your loop for i =2:n-1 A(:,i)= *what you want to do* ; end
Thank you very much, I’ll try doing that!
Just to add since I think the question's already answered: as much as possible, avoid using for-loop on MATLAB as it slows down the computation significantly (has something to do with MATLAB's data reading). Just a tip if ever you want to make another optimized code in the future :)
Thanks very much for the advice :) 
What do you need exactly ?
Looks like what you've got there is a picture of some homework problems. Hope that helps!
He needs you to do the problem for him since he's lazy. 
You stand at the entrance to a rabbit hole. Beware! There are a number of ways to work with colors in figures. The simplest is using the plot command and giving the Name/Value pair `plot(x1, y1, 'Color', [r1, g1, b1])` for each line. The legend *should* adopt the color you've selected. Another would be to use the `'ColorOrder'` [property for the axes](https://www.mathworks.com/help/matlab/ref/matlab.graphics.axis.axes-properties.html#budumk7_sep_shared-ColorOrder), but this makes it harder to get the RGB values, and sticks to the default MATLAB colors... unless you change it. [Read more here](https://www.mathworks.com/help/matlab/graphics_transition/why-are-plot-lines-different-colors.html#buhi77f-2), especially if things don't work out like you planned. If you'd like to define a custom colormap, one of our regular users (/u/jkool702) has created [a function to do just that](https://pastebin.com/abetiSXL)! Finally, you can dive into the Java with [Undocumented MATLAB](http://undocumentedmatlab.com/?s=plot+and+legend+colors). This dude has been deconstructing MATLAB for, what, a decade now? This is the jumping off point for "MATLAB Insanity^(TM)", and may cause irritation, lack of sleep, and the introduction of semicolons into everyday language. Hope some of that is useful!
When you’re calling your audioread function, use directory(i).name to get the name as a string. Same with using the audiowrite 
You can use another Name/Value pair plot(..., 'DisplayName', &lt;name&gt;, ...) in each plot command, and then `legend('show')` once outside the loop. Don't forget `hold on` after the first plot! Definitely check out [all the Name/Value pairs](https://www.mathworks.com/help/matlab/ref/matlab.graphics.chart.primitive.line-properties.html). The plot command is pretty burly, even without jumping through Java hoops, especially after the 2014 updates. Always happy to help. :)
Thank you! I had to do a little more tweaking but it works. 
Look into the spdiags command. Sparse arrays are a must for these methods. Try and write your system in a way where you update every space point for each time step with one step. i.e find a matrix A such that u_j+1 = A\u_j. Then you only have to compute the matrix once and things will go really fast
Nah with Intel gpu
Re: your edit Check out the `lagmatrix` command
I'm sorry but your message has almost zero information. What do you want to say, that build in functions work better than a custom one? 
Built in functions like fft, filter or matrix multiplication are already optimized for parallel execution and will be almost always faster than your customized functions.
Set it up as a function handle: blit = @BLIT() output = FUNC(blit, stuff);
Really, i can think of very few situations where Id actually want to use `parfor`...vectorization + natively parallelized functions are just so much more efficient, especially for ffts (which use FFTW) and matrix ops (which use MKL). &gt; My code is showing exactly 50% CPU usage on a core i7, meaning it is using all the physical cores without hyperthreading. Any attempt to make it do beyond 50% actually makes the execution time worse. So, etsting this has been on my to-do list (ill get to it eventually...), but I think that this is actually using 100% of the CPU (i.e., all 8 logicsl cores), at least for matrix operations that report 50% utalization. The reason that (i think) this happens is because MKL is setup so that you tell it to use the number of physical cores in the system, and it then will detect if SMT/hyperthreading is enabled and will then assign either 1 or 2 threads per core depending on if it is or not. Im guessing that the system onlysees this as 1 thread in hyper thereaded cores, hense the 50%. Of course it could also be a bug in matlab, or a bug in mkl, of just that hyper threading doesnt help, but none of those explain why forcing more threads actually hurts performance if you are really only using half the cpu. On the other hand, if you are already using all threads and force more you just end up thrashing, which will hurt performance.
Glad to see im not the only one that finds the internal working of X11 to be almost entirely impossible to follow. I was, thankfully, able to fix it. IDK what exactly the fix was, buta combination of the following seemed to do it * upgrade the kernel to 4.19.2 (conveniently, this just went to the "stable" update branch on fedora last night) and update all packages that were had a update for the new kernel * uninstall all the "extra" Xorg/X11 stuff I could (i.e., packages that didnt make me also force-uninstall everything in the system that had X11 as a dependency) * uninstall nvidia drivers (again) * reinstall a few select X11 packages + reinstall latest nvidia drivers in non-GLVND mode * (/u/jumpUpHigh - thank you for suggesting these): install `libnsl` and fixing a broken symlinks in the MATLAB `${matlabroot}/bin/glnxa64`. The /u/jumpUpHigh 's link post suggested was OK, but I found 1 or 2 that were pointing to noting.
You should be able to replace the inner loop (ee) with an indexing. `code AltPVID(altPVID == e) = SLP(1,e)`
Assuming you know what the value for distance is, you can use the solve function: S = solve(eqn, var) And a common mistake is you need to use two equal signs to define your equation: eqn = dist == 5*W; Use 'doc solve' to learn more about the solve function, but I believe it is what you are looking for. 
I had to run lots of matlab and mcnp, if it will be extensive id recommend building a desktop and using a cheap laptop to remote connect. Never lose files if your stuff gets stolen or loses battery, back up connection through phone, much stronger processing power esp with some budget builds using a 8350 or 4350
There are 2 main issues with using AMD chips 1. In general, MATLAB is tuned for performance on intel chips.This can be somewhat overcome if you are willing to manually change out some of the matlab libraries for versions that are AMD-optimized, but out of the box an AMD chip isnt going to run at its full potential, whereas an intel chip will (or will be closer to its full potential at any rate) 2. AVX - the maximum avx compute (AVX2/FMA3) on Ryzen chips are half that of Intel chips. That is just the way they are designed. There arent many appl0ications thast make use of this, but one thing that uses this extensively is matrix operations. In general, if you want to run something fast in MATLAB you need to use matrix operations. (the other main application that uses this is video rendering). Its also worth noting that the BLAS library latmab uses for matrix operations (MKL) is Intel's library, so out-of-the-box performance will be probably be 3-4x vs an equivalent intel chip. AMD will run matlab just fine, itll just be slower.
This is just L2-norm of x and y weighted by the inverse of the variance of H and L. using only the independent parts drops the covariance part (i.e., the covariance matrix is diagonal)
Ah sry... im doing hard processing it myself in my head so thats why its unclear... do you know korean webtoons? I'd like to have one large image (or many large images) where i can just scroll down to the time i want to see. 
What is the point of that while loop? 
Wouldn't it be easier to just save individual images and write them to a PowerPoint document or something? 
I just started trying doing smth like that xD but it's just trial &amp; error, dunno if it will/can work.
In this particular case the `while` loop does the same thing as `if`, but semantically it should be `if`. With respect to OP's question: (SLP(3,:)==altPVID(1,:)') will return a logical matrix of dimension `length(altPVID)` by `length(SLP)`. This matrix has a 1 in the (i,j)th entry when `altPVID(1,j)` is equal to `SLP(3,i)` and zeros elsewhere. I think you can use this to vectorize your problem. Let me know if you need more help.
With respect to OP's question: (SLP(3,:)==altPVID(1,:)') will return a logical matrix of dimension `length(altPVID)` by `length(SLP)`. This matrix has a 1 in the (i,j)th entry when `altPVID(1,j)` is equal to `SLP(3,i)` and zeros elsewhere. I think you can use this to vectorize your problem. Let me know if you need more help.
This was a fun and interesting read. Thank you!
 No problem, thanks for reading! I don't always write about chaos. Sometimes I write about astrodynamics, other times about numerical methods. Aka stuff that isn't chaotic systems, but if you find this post cool, you'll probably also find cool. I have a subreddit where I post everything at [r/Gereshes](https://www.reddit.com/r/Gereshes) so you never miss a post! 
So if the condition is true, then `altPVID(3,ee)` gets replaced with another value, at which point the condition is no longer true and the loop ends. If the condition is not true, then the loop doesn't execute. Maybe I'm missing something. Can you please explain what it is?
Can confirm these things. I have an AMD chip in my computer and it is noticeably slower at processing code compared to friends with Intel chips in their computers from around the same time. 
Plot3(x,y,z). Just like plot you can use line or a marker. See help for more. 
You're looking for the function `ismember()`. Read the documentation on that function. It pretty much does exactly what you're after. 
As the other comment mentioned, plot3; you can also use scatter3. 
Thank you friend.
Thank you friend! 
Woah that's handy. Is that a variation of the implicit expansion syntax that was recently introduced? That's like a matrix version of `ismember()`. 
I think you meant AltPVID(altPVID == SLP(1,e)) = SLP(1,e);
So do you know what this equation is called? Is this the mean square error function? Also I thought the ‘ operator is transpose operator. 
Create a matrix of zeroes. Take the desired number of predators and prey and assign them to random locations. Loop over each location and evaluate the neighboring values to determine the result for the current cell. Go to the next generation and repeat. The sidebar (or about page if you're on mobile) has some links to get started on Matlab. Maybe talk to your instructor or a teaching assistant as well.
If you want a numeric answer, why are you using a symbolic variable?
Have you tried imagesc ?
You have no idea how convenient of a time it is for me to find your article while browsing through Reddit. I literally just submitted my proposal for a final project for my MATLAB class - and it's on double pendulum divergence. You're a god, thank you so much
No worries it’s what I always use for spectrograms.
You’re getting into statistics territory. There are lectures out there on why it is the expected value. Best bet is to go through a couple lectures or read some chapters in your introduction to statistics textbook of choice
Yes, great catch. 
I needed something of the surf variety
If you do some googling, there are some videos and other tips I've seen in the past about adapting surf() to nonuniform data.
You can just use the method described in the documentation, accessible from within MATLAB itself, by a Google search, or by this [handy link](https://www.mathworks.com/help/matlab/visualize/representing-a-matrix-as-a-surface.html#f0-9140) I've provided free of charge. Easy peasy.
I don't know how to get the data, but a good place to always start when dealing with MATLAB is the documentation (e.g. accessible via Google). Perhaps the `contour3` function would be useful for this project. You can learn more by typing "matlab 3d contour" into Google ;-) Or here's the damn link, hahah: [https://www.mathworks.com/help/matlab/ref/contour3.html](https://www.mathworks.com/help/matlab/ref/contour3.html)
I attempted this but couldn't get variable mass and length to work. [https://www.reddit.com/r/matlab/comments/7jwcjd/ode\_ntuple\_pendulum\_with\_damping/](https://www.reddit.com/r/matlab/comments/7jwcjd/ode_ntuple_pendulum_with_damping/)
Alright thanks! 
Thanks man
Because to calculate the distance, i needed to do some n iteratives methods with the weight. I thought using symbolic variable was an easier way to get the function "distance(weight)".
You're welcome. There are quite a few people here who will jump right in if you ask a specific question, but general questions like this often get overlooked/ignored. Please do come back if you try your problem and get stuck and we'll help get you back on track.
Cool! To answer your question, that depends on the end result of your curve generator. Do you end up with two vectors? Many vectors? Polyshape objects? How are they ordered? If you feel comfortable, post some code.
That’s a big Koch
Don't sell yourself short, you're doing okay! Here's a few nudges in the right direction, with links to the documentation so you can explore related concepts if you'd like. That should be more targeted than the academy, which is great, by the way. Keep it up! **TIPS**: *1)* Use [logical](https://www.mathworks.com/help/matlab/matlab_prog/matlab-operators-and-special-characters.html#bvg3oy_-4) and [relational](https://www.mathworks.com/help/matlab/matlab_prog/matlab-operators-and-special-characters.html#bvg3oy_-3) operators for your [conditionals](https://www.mathworks.com/help/matlab/matlab_prog/conditional-statements.html): if a &lt; b || c &gt;= d ... else if b &gt; a ... else ... end *2)* Use an iteration variable instead of your independent variable in the loop: for index = 1:length(myVector) ... end *3)* Try out [breakpoints](https://www.mathworks.com/help/matlab/matlab_prog/set-breakpoints.html) to actually see what is happening in your code. You can mouse over a variable name to see its value, or you can select a command, or some portion of that command and hit F9 or right-click it and choose 'Evaluate Selection' to see what it gives you in the command window and/or workspace. *4)* You can double-click variables in the workspace to open them with a view kind of like MS Excel.
WOWOW thanks so much. I made some test arrays and the logical indexing worked but this was harder for me. 
thank you all! I'll test. The purpose of this code is to link trajectories which are broken. SLP contains the linked pairs I created according to previously decided parameters in which the top row links to the bottom row. I want to overwrite the ID of the top row with bottom row so I can treat the newly linked path as one continuous path.
I am Fairly new to matlab can u give me an example?
I tested with ismember() and got the locations of the id's I want to swap out. But when making another loop which goes to all these locations, and then increments by the amount of times that unique id appears, I get missing links. Maybe I cant speed this process up. I have other slow processes in my script with these double for loops going over large arrays looking for identical ID values and extracting the points.
i dont think i can use the tricks you have shared due to the arrays not being the same size to give me a way to replace values. And SLP can have circular references which need to be carried out in order from left to right. Point 1-&gt;Point 2-&gt;Point-3 SLP[ P1id P2id; P2id P3id] Overwrite P1id with P2id, then all intances of P2id overwrite with P3id. This trajectory is now a combination of three previously separated trajectories with different id's. Maybe I can optimize other parts of the code which pulls out columns containing unique ID's that appear in another array. 
Just out of curiosity. Can you please explain the formula in detail? Thank you!
Thank you. I think I just misread your formula. M is not the downsampling factor, but the actual sampling rate, correct?
M is the downsampling factor
Really appreciate this so much, can you explain to me how and why logical OR is being used here? I don't understand why: if t &lt; 5 ... elseif t &lt; 15.4 ... else ... end Doesn't work, I really don't have much intuition for logic or programming as a whole, I'm on the verge of writing this module off as a failure. 
This is unreadable. To show code in Reddit, begin each line with four spaces. Also, your asterisks are getting turned into italics. It would probably be easier for you to just put your code on pastebin and provide a link. What errors are you getting?
You shouldn't even need a loop. Anywhere altPVID is a member of SLP(1, :) you want to replace it with the corresponding element of SLP(3, :). That's a one liner with indexing. 
That's not a Matlab issue, it's a a fundamental signal processing issue due to the Nyquist theorem. 
I need to do it in matlab. Can you write a script expelling what are you saying?
I'm not sure why the arrays being the same size is relevant. Can you provide abbreviated examples of SLP and altPVID and show the output you want? 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/learnmath] [First Matlab project - finite difference method](https://www.reddit.com/r/learnmath/comments/9yt28r/first_matlab_project_finite_difference_method/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
I can't write Matlab code that will make you understand basic signal processing theory, no. That's something you should have learned in class. If you're asking how to perform the downsampling, you've already found the correct function. Maybe you need to read the documentation for it? The other poster has also mentioned how you might go about selecting that downsampling ratio. 
What doesn't make sense to you? Do you understand what aliasing is, and what causes it? 
Hey, this is great! I'm sorry this has you so down, I certainly know the feeling. My grandfather had a great saying about that, "Sometimes you just have to throw your hands up and run out from underneath it." I don't think you're there quite yet! With a couple of modifications you can make this work. &gt;can you explain to me how and why logical OR is being used here? I don't understand why: &gt;if t &lt; 5 ... &gt;elseif t &lt; 15.4 ... &gt;else ... &gt;end Technically, there is no logical OR operation here, despite the fact that you're kind of saying "It's less than 5 *or* it's less than 15.4 *or*...". Further, from your problem statement and code, it seems to me that an AND would work better. For example, let's say I have a list of all the building heights in my city, and I want to know which ones are bigger than my house but smaller than the Blamco HQ building. If I were looping through them to check, I might try something like: for bNumber = 1:length(bHeights) if bHeights(bNumber) &gt; houseHeight &amp;&amp; bHeights(bNumber) &lt; blamcoHeight disp(['Building ', num2str(bNumber), ' is taller than the house and shorter than Blamco HQ!']) end end I could also use a single logical condition (like you tried in your newly-posted attempt) to get the logical vector where my conditions are true: matchVec = bHeights &gt; houseHeight &amp; bHeights &lt; blamcoHeight; FYI, the single ampersand handles vector conditions (one-to-many comparison or many-to-many comparison), while the double ampersand handles only scalar conditions (one-to-one comparison). Using that result (which we typically call a 'mask'), I can get the heights I'm looking for: matches = bHeights(matchVec); A third way to do it is to use the logical conditions directly for [logical indexing](https://www.mathworks.com/help/matlab/math/array-indexing.html#d120e1410): matchVec = bHeights(bHeights &gt; houseHeight &amp; bHeights &lt; blamcoHeight); I'd say stick with the second option, since you've already almost got it. In your new attempt, your blue line is correct, because you've identified the correct condition: `t &lt; 5`. The next two sets only consider an upper bound... but you need to exclude the section you've already identified as being part of the previous conditions! Seriously, you're like 2 minutes from the correct solution. Don't give up yet! PS: A very nice thing to do (for yourself and anyone else who reads your code) is to define logical conditions up front. From the building heights example, I could say something like: isTallerThanHouse = bHeights &gt; houseHeight; isShorterThanBlamco = bHeights &lt; blamcoHeight; isCorrectHeight = isTallerThanHouse &amp; isShorterThanBlamco; Then use that in the comparison: matches = bHeights(isCorrectHeight); It's not necessary, but it can help you (or others) see what is intended by your code at a glance.
Quick and easy way to get code from MATLAB onto reddit: 1. Select your code in the Editor. 2. Press Tab. 3. Copy. 4. Press Shift-Tab to put it back the way it was. 5. Paste into reddit. 6. Fix the first line by adding 4 spaces to the front. Nice formatting achieved!
That website looks scary
They did not teach as anything about matlab we have learn our self and provide the answers, and I did look at the documentation but it was not useful.
Haha sorry! Would you prefer I submitted it somewhere else?
I friend has just pointed out in the marking rubric to me that I MUST use conditional statements, so I think that makes my single logical condition attempt kind of redundant. I'm struggling to articulate my ideas using the correct terms. So my current understanding of the solution is: I need to make for loops that will check every value of t against these conditional statements, t &lt; 5, 5 &lt;= t &lt; 15.4, 15.4 &lt;= t &lt;= 25. I need to create indices for the location of the values or t (and speed) that satisfy each condition let's call them i1, i2 and i3, then plot 3 lines on the same graph using: plot(t(i1),speed1(i1)) plot(t(i2),speed2(i2)) plot(t(i3),speed3(i3)) is that what i'm trying to achieve here? I feel bad, you post well formatted in depth explanations and I don't seem to be absorbing much of it.
Github is pretty solid.
Good point thanks 
Yes but this isn't a Matlab issue. I assume you were taught about the Nyquist theorem? 
I'm always of the opinion that if you're trying to upgrade your hardware to speed MATLAB up... you're at the point where you may consider a faster programming language.
Sounds to me like you've got the essentials, honestly. You'll only need one loop, and you can use conditionals with only one bound. This is because you'll be iterating over a monotonically increasing vector of integer indices, so you won't run into the situation where you go "back in time", so to speak. Once you've left a particular interval, you won't see it again. Just be sure to assign the indices to the correct interval vector so nothing goes haywire when you try to plot. I expect, given the time, that you've already tried this. I hope it worked!
I've checked the rubric, and I have to use conditional statements unfortunately, but I think i've made some progress: https://gyazo.com/7584cc48d17fb76e3277615b743d35de https://pastebin.com/qGa5H2eJ I believe the assignment is to create a continuous line rather than a series of point, would it be a better idea to use functions instead? 
I deleted it because I felt it we less relevant, but I didn't see you had replied to it at the time, was a very silly mistake! is this heading in the right direction? https://pastebin.com/PD2uA1XA and now I need to lengthen those 3 index vectors using concatenation until they are 126 elements long?
On the right track! Don't do any artificial lengthening. Trust your logical conditions to do their jobs. Your index arrays will likely be of different length since your intervals are of different length (5 - 0 = 5, 15.4 - 5 = 10.4, etc.), right? What matters is that you use the same indexing to plot `t` against `sn`, which you ought to go ahead and try now to see what error message you get. :) Upon doing so, think about what should be stored in `idx1`, `idx2`, and `idx3`, and how that differs from what you've put there now. If you're struggling with this part, don't despair. This is hard for **every** new programmer. Double check the rest of the article I linked on logical indexing; I linked you a specific section, but the rest of the article is about indexing in general.
They should be logical instead, right? https://pastebin.com/RaBwCTFX I'm not going to lie, I was getting pretty hopeful right before I pressed run. At this point I'm pretty confused: "Array indices must be positive integers or logical values" Is my for loop not creating logical indices? 
thank you for the reply. i already used the profiler. The second part of my problem is a piece of cake since i could run it on the gpu aswell i think to make it even faster. but it also scales very well with more cores. The first part is my main problem. It comes down to checking if a lot of points are within the perimenter of a polygon shape. I used "inpolygon" first but figured out that "isinterior" is way faster but there is no way i can run this at the resolution i want.
thanks for the reply. I want to upgrade my pc anyway so its not just for this problem. But when i upgrade i want to get the best out of it. Unfortunately i only know matlab and a little bit of python and vba. Do you have something more efficient in mind? I need to to a lot of "inpolygon" operations. And by a lot i mean checking around 160 million points.
My experience is that well written matlab code is as fast as most other languages, and development time is way more expensive than hardware. That said, why buy when you can rent cluster time?
Second question - have you tried cleaning up your own version of inpolygon or compiled it with a mex file? Or used someone else's? It is full of cases if you look at its code. Skipping some of those checks or doing a smarter parallization could help a lot. Precaching lines 76 and 83 would help if you are doing the same polygons a lot for example.
oh my goodness, I think I understand! each time the condition is satisfied "i" is the number the number of times iterated and also the position of the values of t and sn, storing "i" gives me the index I've been trying to create. I really hope thats correct. https://gyazo.com/53997362ffd0b5a69ec0d602dd9af5d3 I think i'm getting there.
Very well done! Pat yourself on the back! Today you've learned a lot about iteration, conditionals, indexing, and hopefully gained some handy tools and information to help you identify and fix errors in your code. That's basically half of an introductory programming course in one day. Not too shabby, to be quite honest.
You have been an absolute godsend, I'm feeling a bit more hopeful about this assignment now. I think I probably would have thrown my hands up and ran from under it if you hadn't been here today. Finally, is it possible to make all 3 lines connect using this method?
Having been bested by reddit formatting. I can see why you are resorting to paying someone to do your homework for you. Fairly confident the rules say it should be slightly more than "here is the question verbatim, please do it for me."
Why do you think it is that the lines don't connect? Take a good, hard look at your index vectors, the time values they reference, and the conditions you've defined inside your loop. Then look at where the breaks between the lines are. You can use things like: t(idx1(end)) t(idx2(1)) to help your investigation. If you're satisfied that your conditions meet the requirements laid out by your prompt, I'd say leave it. If not, you can fix everything with the careful application of a single character in two places inside your loop. I'll let you figure out which key to press. :) I'm happy I could help.
I was really hoping that character was going to be = I believe that for them to join up, the index vector for time at 5 seconds will have to be present in both idx1 and idx2, similarly for 15.2 in idx2 and idx3. I don't believe I have satisfied the conditions just yet because I have to apply numerical integration to the whole line, also the figure on the handout shows a continuous line.
Okay, if you've got to have the continuous line, the `=` is the right way to go. That way both `idx1` and `idx2` will have whatever index t = 5s is at. Then the lines will (hopefully) meet. Good call.
Update: I can pretty much accomplish this with `xlim` etc
Thank you again. I think at this point you've done far more work towards my project than I have! goodnight :)
I'd start with stabilizing it in premiere. After that? I'm not sure. That's a difficult problem. As far as I can see, there's only one small sliver of footage that stays in the frame for the whole thing. If I were you, Id probably focus on that one sliver, and see how many ducks heads pass it.
The constantly changing field of view is the biggest problem I see. I would maybe try defining a static(as much as possible) interrogation window, then try to count the heads maybe using a 2-D cross correlation using a single duck’s head as the “template” window. From there, you should be able to count the peaks inside the window, and that should be the number of heads in the window. I’m not sure how 2-D autocorrelation handles RGB images, you might have to change it to a grayscale or something similar first.
You're welcome.
Honestly, this will be very challenging because your video quality is kind of poor. Each individual image looks very blurred. Do you have a non-compressed version of this with better lighting? If the answer is no, I'd treat this as a mass-transport problem: * Try to count the number of ducks going through the barn door at maybe 5-10 different unique frames. Get an approximation of DV/DT. And integrate for total ducks. I bet, ballpark, you'd be within 10% if the STD on that average isn't too bad.
I like this idea
Sure, with 10 years and a few PhD students. 
I figured out how to do something along these lines, but thank you for your response!
As other comments say, you have to preprocess your file first to make the data readable. You can have a look into image stabilisation using point feature matching, which I think will be a good first step : https://fr.mathworks.com/help/vision/examples/video-stabilization-using-point-feature-matching.html Please let us know about the next steps, I find this interesting. Cheers! 
Fun fact: I actually found that and began working on it tonight. I posted an update that should be visible to this subreddit. Had some trouble with the video read function. 
Have you tried to post your question on [this site](www.reddit.com/r/matlab)? Normally the people are really competent. 
I’ll do that then but I’m mostly hoping to find more of mentor and someone I can go to
Do you like matlab? I am a beginner, so I cannot help you. Just wanted a small talk.
Why not trying it yourself first and asking specific question rather than wishing for a person to baby-sit you? There are many people with great matlab knowledge in this sub who are willing to help but I doubt they would want to be just your private teacher 
I'd recommend using the Matlab forums. Honestly, you'll get better answers since people on this forum can be downright assholes. The old saying of, "the only stupid question is the question you dont ask" goes out the window here. That being said, you need to suffer through learning how to code. Coding isn't easy, and if someone mentors you through the initial pain you wont learn how to think in code. Mentoring would be appropriate of you are going from one language to another. For instance, I'd say I'm towards the upper end of Matlab users, but give me Python and I struggle. Now, this is all under the assumption that you are starting out. You didn't say more than that in your initial post. So I apologize if I was wrong. I hope this helps in finding what you're looking for. 
I'm not available for this, but just to clarify for others, are you looking for a volunteer or offering to hire someone?
The integral function uses quadrature, which is an approximation. I'm not sure if Matlab will use the exact formula when it's a polynomial like what you have; in case not, then you can calculate the integral analytically and evaluate it in Matlab?
Thanks for the reply, could you explain what you mean when you say calculate the integral analytically? 
&gt;the line I have plotted is made of 3 separate equations, so I will need to apply the trapezoid rule to each section individually right? Sounds good. &gt; how can I calculate relative error? The standard formula for relative error is something like: relativeError = (theoreticalValue - approximateValue)/theoreticalValue Dividing by the theoretical value scales the absolute error (the numerator) by the value expected from analysis, making it *relative* to the "actual" value. &gt; I have used the integral function on each section, is this the value I should compare to to acquire relative error? Take a look at the [documentation for integral](https://www.mathworks.com/help/matlab/ref/integral.html). [Adaptive quadrature](https://blogs.mathworks.com/cleve/2016/05/23/modernization-of-numerical-integration-from-quad-to-integral/) is not the same as [composite trapezoidal integration](http://mathworld.wolfram.com/TrapezoidalRule.html). The [wiki article on it](https://en.wikipedia.org/wiki/Trapezoidal_rule) tells you about [error analysis](https://en.wikipedia.org/wiki/Trapezoidal_rule#Error_analysis). MATLAB has built-in [cumulative trapezoidal rule integration](https://www.mathworks.com/help/matlab/ref/cumtrapz.html), and [complete trapezoidal rule integration](https://www.mathworks.com/help/matlab/ref/trapz.html), but given the first part of the assignment with the mandatory for loop and conditionals, you might need to implement it yourself... I'd double check to be sure. Here's a [handy article](https://www.mathworks.com/help/matlab/math/integration-of-numeric-data.html) on numerical integration in MATLAB.
No we don't do that here. Only if the antennae are red. 
As others have suggested, I should obtain the theoretical value from good old fashioned pen and paper integration? and if I understand the literature on the cumtrapz function I can create a while true loop that will calculate an approximate value starting with a scalar spacing of 1, I can use that to calculate relative error, break the loop when relativeError &lt; 0.0002 if relativeError &gt; 0.0002 double the number of spacing's. the literature doesnt say it can be applied to functions, so cumtrapz(a,b) where a is the number of spacings and b is the vector of speed values?
The only time I've seen people be jerks (outside of a few down voted comments) is when people don't follow the rules of the sub- asking for help without showing they put any work in themselves. 
&gt; As others have suggested, I should obtain the theoretical value from good old fashioned pen and paper integration? That should do it. There's also the [symbolic toolbox](https://www.mathworks.com/products/symbolic.html), but... yeah just do pen and paper for now. &gt; I can create a while true loop that will calculate an approximate value starting with a scalar spacing of 1, I can use that to calculate relative error, break the loop when relativeError &lt; 0.0002 if relativeError &gt; 0.0002 double the number of spacing's. Why not `while relativeError &gt; 0.0002`? :) &gt; the literature doesnt say it can be applied to functions, so cumtrapz(a,b) where a is the number of spacings and b is the vector of speed values? Correct. As you most certainly noticed, it will return a vector of values representing the value of the integral at each time point (since your speed is paired with `t`). You can plot that against `t` or use the [sum function](https://www.mathworks.com/help/matlab/ref/sum.html) to obtain the total integral.
I have most definitely made a mistake, my approximate value must not converge on my theoretical value because I think i've created an infinite loop. https://gyazo.com/cea860eacb016b236f88d914a214a2a9 I believe it has crashed, if I close and reopen will my script still be there?
haha thank you, pen and paper is definitely more my speed than matlab.
Yes. Before it runs the script, MATLAB auto-saves it if there is any unsaved work. In your image, is that pen-and-paper value calculated for just the first interval, or is it the entire integral over all three intervals? Infinite loops are a pain, but you can ensure you don't run into one with a counter.
ah thank you, a counter would have a great idea, and I believe this is only for the first portion. I integrated between x=0 and x=4.8, because I forgot about the change I made to idx1 so the graph would be a continuous line, great spot!
I think I must not be using cumtrapz correctly, it is producing GIGANTIC values
Whoah.
That's my fault, I've steered you wrong. I'm terribly sorry. You don't need the `sum`, you need the final value. It's already summed at each time value. I've corrected my mistake in the previous comment.
% Read in data % Ignore ID column - row and column both offset by 1 data = csvread('Orders_50_3000.csv', 1,1); % Get number of rows and columns rows = size(data, 1); cols = size(data, 2); % Starting value for inventory % Will be updated as function performs current_inventory_level = 1000; % Set current policy reorder_level = 300; reorder_quantity = 1200; % Costs setup_per_order = 55; shortage_per_backlog = 10; holding_cost_per_unit_per_day = 0.1; % Can multiply setup by number of rows % Setup cost is fixed cost per order. Rows is number of orders total_setup_costs = setup_per_order * rows; % Total Costs to update total_holding_cost = 0; total_shortage_cost = 0; % Order flag basic_order_flag = 0; backlog_order_flag = 0; % Initial values basic_order_day = max(data(:,1))+ 1; backlog_order_day = max(data(:,1))+ 1; backlogged_units = 0; inventory_level = 1000; inventory_vector = zeros(3000, 1); holding_cost_vector = zeros(3000, 1); shortage_vec = zeros(3000,1); for row =1:rows % Keep track of days for when orders come in current_day = data(row, 1); % Update inventory levels if ismember(current_day, [basic_order_day backlog_order_day]) inventory_level = inventory_level + 1200; end % Check if delivery can be made if data(row, 3) &lt;= inventory_level inventory_level = inventory_level - data(row, 3); else total_shortage_cost = total_shortage_cost + shortage_per_backlog; backlogged_units = backlogged_units + 1; end % Basic: If inventory hits reorder level, reorder % Only reorder if not already an order if inventory_level &lt;= reorder_level &amp;&amp; basic_order_flag == 0 basic_order_flag = 1; basic_order_day = current_day + 4; end % If immediate delivery wouldn't raise inventory to above % backlog, then place an order if backlogged_units &gt; reorder_level + inventory_level backlog_order_flag = 1; backlog_order_day = current_day + 4; end % Holding costs are end of day calculation total_holding_cost = total_holding_cost + 0.1*inventory_level; inventory_vector(row) = inventory_level; shortage_vec(row) = total_shortage_cost; holding_cost_vector(row) = total_holding_cost; end %total_cost = total_holding_cost + total_setup_costs + total_shortage_cost; % Results Res = [data(:, 3) data(:, 1) inventory_vector holding_cost_vector]; 
aha, thank you very much, this has helped very much, after a single iteration my relative error is 4% which is fantastic, however it most definitely gets worse after that. if I explain what I TRIED to do here, hopefully you can tell me where I am failing miserably. https://gyazo.com/39f5c1c2c28148ec3a2e1d87f0286925 cumtrapz does not use a function, so i figured I would try to apply it to the whole line at once, I tried to concatenate all the speeds into a single vector and apply cumtrapz to that. I also calculated the theoretical value for the entire line. as always, thank you for your guidance.
Which university course is this an assignment for?
A 3rd year Partial differential equations module! It's a tough one as we actually never used MATLAB prior to this! 
Your if-statement logic is flawed. Consider how dx and L relate.
Your 6th equation just needs to be directly plugged in to your 5th equation. That way your 5 diffs all have the information necessary to solve the system of equations. Whether you plot the 6th equation depends on the context of the problem, but if you do then that “plot” command is correct. Just make sure that you include hold on before you plot the 6th one so that the plot of the 6th equation is included on the same graph as the solution to your system of ODEs.
I had to edit the initial post. What do you think then? &amp;#x200B; Thanks for taking the time to help :)
I finally got around to working on this. So I want to capture a single image from 3 cameras at different angles. The cameras are connected to the computer via ethernet cable and have the capability to support a hardware trigger. Before I try and build the trigger, I wanted to figure out what would work. MatLab requires you to specify a hardware video input type. For my cameras its device specific. So how would I program to look for a voltage pulse to trigger the cameras. 
If i'm understanding correctly, and at this point that's a pretty low chance. but I believe this means instead of a = 1 a needs to be a vector, for example a = linspace(0,5,s) and every loop s = s + s because "if the relative error is not reached, double the number of separations used" 
I think I understand, the reason I want to use linspace and start with a very low number of sections is because later on in my assignment I have to plot total distance calculated against the number of separations used in each numerical integration calculation. however the problem i'm having with that, is cumtrapz will not accept my vector. https://gyazo.com/9183f169adb0ce2759a8819590ccae6e because it says it can accept a scalar specifying uniform spacing, I could instead start with a = 5 and half it every loop? 
Make sure that `a` and `s1` are the same length if you use a vector. That means you'll have to re-evaluate `s1` if you change `a`. If you give a scalar there are no restrictions, but if you give a vector it must be the same length as the vector of function values. In the documentation, it tells you the difference between scalar and vector input in [the description](https://www.mathworks.com/help/matlab/ref/cumtrapz.html#description) for the second syntax case.
will look into that! Thanks for the advice.
Look into regular expressions, if you haven’t already.
That makes a lot of sense, great explanation. I have been trying to evaluate s1, but i've been struggling. I understand in lay terms what I need to do, putting that into code that makes sense is becoming challenging. when a = linspace(0,5,2) a = [0 5] so I need b to be a vector of the values of s1 at time 0 and time 5. b = s1([0 26]) https://gyazo.com/28fb42e92450005479a956a47d5b609f 
This sounds like you want regular expressions. You shouldn't need a loop though. 
If you have a set of différential equation plus an algebraic equation (that you cannot solve manually), then you are trying to solve a DAE (differential algebraic equation). In general the math behind is more complex than for ode... 
That's right. Note that in the image you posted, you've left `s = 1` when first evaluating. `cumtrapz` can't handle that!
Thank you so much!
It has to open a Matlab instance to run the code in. Is the time you wait about the same time it takes to open Matlab?
I just cant wrap my head around how to do this, when a = linspace(0,5,2) a = [0 5] i can not use b = s1([a]) because there is no 0th element to extract. I need the first element because that is the element when t = 0. I feel like i'm missing something fundamental, 
No I'm running this inside of the MATLAB console so MATLAB is already running.
&gt; I feel like i'm missing something fundamental, Indeed: you need to actually evaluate `s1` again at those new time values! Remember, it (and its brethren) still have the old values from your very first time vector! Breakpoints!! Workspace!!
You can use reg exp depending on the complexity of your search. But a simpler way I would suggest is to vectorise the strings in cell arrays. Then search using one or more of these functions, they all work in cell arrays. This will give u a logical indexing to the cell array when it find a match so you can access your other data. TF = contains(str,pattern) TF = endsWith(str,pattern) TF = startsWith(str,pattern)
You may want to consider using a table with row names. But it depends on how your data are stored.
Thank you! I think I needed some rest and a fresh pair of eyes. 
This answer: &gt;I arbitrarily choose different resolutions depending on the situation doesn't really make sense. If your choice depends on the situation, it is not arbitrary.
Without being given a high quality reference image that represents the ground truth, how am I supposed to comment on how well the content in an image is preserved? I do get that I can see some very obvious compression artifacts in some of the images in the survey, but these questions still seem ill-posed to me.
Hi guys, I'm new to Matlab and very new to maths (as you can probably tell, I imagine this is a ridiculously stupid question!). &amp;#x200B; I'm basically trying to test if there are significant differences between the two data sets on each of these graphs. I.e. is there a significant difference between "lysozyme" and "VEGF-C", and is there a significant difference between "Dextran" and "VEGF-D". &amp;#x200B; What test would you perform, a 2 tailed T test? &amp;#x200B; Are there any other cool stats things you could do? &amp;#x200B; Thank you! 
xlim([10, 15]); ylim([-2 2]);
Is that the output of your ODE solving code? Or the function representing the DE itself? That's definitely not the output prototype of the existing DE solvers in Matlab. If that's the output format of the DE solver itself, you need to be assigning those outputs to variables when you call the function. They don't get assigned just because you defined them as outputs in the function definition. If that's the function defining the DE itself, rather than its solution, you could evaluate it after the solution is computed to get all of the derivatives etc. at the time steps specified by the solver. Returning the values at each invocation of the function during the solver iterations is probably not what you want, since most DE solvers adjust their vector of time points dynamically as they converge to a solution. If you really need this you could look at the documentation for `assignin()` but I wouldn't really recommend that. A variable being displayed to the console unexpectedly is usually because you missed a semicolon somewhere. The editor should hilight this for you. Unless you're simply seeing the output of your call to the DE solver in the console? This is still because of the lack of a semicolon, and again the other variables aren't being stored because you're not assigning them to anything. 
2 tailed t test would make sense, with the null hypothesis being y2-y1 = 0, where y2 and y1 are your two curves. As for improving the quality of the plot, what I do is export all my figures as .svg, which is a vector graphics format. Essentially, this gives your plots an infinite resolution; you can zoom in forever and all the text and plot elements will always look very sharp and never rasterized. This file can then be opened in Inkscape, which is a free vector graphics editor. I usually touch up the plots to make sure they look presentable (though I also do a fair amount in MATLAB itself to make them look better too. From here, you can save it as a higher resolution .png (not recommended) or as a .pdf or .wmf. PDFs are the best if you have a way of integrating them into your report/presentation like if you use LaTeX. If you’re using word/PowerPoint, WMFs get pretty close to how vector graphics look. 
Im not sure there is a single "best" way to do this, but I would use something like the following. I computes local norm and standard deviation of both curves, then compares the difference in value to the local standard deviation and sets everything above some user-set cutoff as being an area of significant difference. &amp;#x200B; % {y1, y2, x1, x2} are the x and y of the 2 functions % N = hallf-window length of local averag &amp;#x200B; % setup sample data &amp;#x200B; N=10; &amp;#x200B; x1=\[1.1:.1:11\]; x2=\[1.1:0.11:12.1\]; &amp;#x200B; y1=1.3-1./x1+randn(size(x1))/50; y2=1.1-1./(x2.\^4)+randn(size(x2))/25; &amp;#x200B; %figure; hold on; plot(x1,y1); plot(x2,y2); hold off; legend('fun1','fun2','location','best') &amp;#x200B; %%%%%%%%%%%%%%%%%%%%%%%%%%% Start Algorithm %%%%%%%%%%%%%%%%%%%%%%%%%%% &amp;#x200B; % ssort x and y in increasing x order \[x1,x1s\] = sort(x1); y1=y1(x1s); \[x2,x2s\] = sort(x2); y2=y2(x2s); &amp;#x200B; % interpolate to uniform sampling &amp;#x200B; X = linspace(max(min(x1),min(x2)),min(max(x1),max(x2)),numel(unique(\[x1(:);x2(:)\]))); Y1 = interp1(x1,y1,X,'pchip','extrap'); Y2 = interp1(x2,y2,X,'pchip','extrap'); &amp;#x200B; %figure; hold on; plot(X,Y1); plot(X,Y2); hold off; legend('fun1','fun2','location','best') &amp;#x200B; &amp;#x200B; % gaussian weights for local avg W = exp(-(linspace(-2,2,2\*N+1).\^2)); W = W ./ sum(W); &amp;#x200B; % local mean m1 = conv(Y1,W,'same') ./ conv(ones(size(Y1)),W,'same'); m2 = conv(Y2,W,'same') ./ conv(ones(size(Y2)),W,'same'); &amp;#x200B; &amp;#x200B; % local std s1 = sqrt(conv((Y1-m1).\^2,W,'same') ./ conv(ones(size(Y1)),W,'same')) ./ sqrt(N); s2 = sqrt(conv((Y2-m2).\^2,W,'same') ./ conv(ones(size(Y2)),W,'same')) ./ sqrt(N); &amp;#x200B; &amp;#x200B; tuningWeight = 5; % change as needed diffIsSignificant = (abs(m1 - m2) &gt; tuningWeight\*(s1 + s2)); &amp;#x200B; &amp;#x200B; figure; hold on; area(X,max(max(Y1),max(Y2))\*double(diffIsSignificant)); plot(X,Y1,'LineWidth',3); plot(X,Y2,'LineWidth',3); hold off; legend('Significant Sections','fun1','fun2','location','best') &amp;#x200B;
Thank you kind sir 
Cross-correlation?
Hello fellow mechanical aerospace student
You're welcome. Glad to hear it. :)
Today has gone fantastic I think, there's just a couple of places I dont think im meeting the criteria. for example It specifies two subplots, speed vs time and cumulative distance vs time, I think I have plotted both, but on the same figure, and finally it states "produce a figure showing total distance calculated vs number of separations used in each calculation. use a logarithmic scale on the x-axis. again, i think i've manged that but it certainly doesnt look like a useful graph. if you'd be willing to have a look I can send you my code 
perhaps something like the chi-squared analysis would help out. [https://en.wikipedia.org/wiki/Chi-squared\_test](https://en.wikipedia.org/wiki/Chi-squared_test) It's normally for a function and data, but should give info on two data
How would I integrate audio files into it? 
I'm getting ready to head out for most of the day, but if you PM me I can take a look when I get back tonight. Did you check out the [subplot function](https://www.mathworks.com/help/matlab/ref/subplot.html)? If not, definitely do that in the meantime.
show yourself &amp;#x200B;
not sure if i understand your issue...i tried your code and made a small change, [HERE](https://imgur.com/a/JSvmNDu) is what i got...is this what you wanted? 
You need to program a blob detection routine. This is not that difficult but a carrefull coding is required to achieve real time performances. 
Chances are your data are all zero. Throw a break point in at the beginning of the function. Confirm your data are the right size and values. Then step through the rest of the code to find the problem. Also, instead of the `for` loop, try using logical indexing PSD(isnan(PSD)) = 0;
When you use [polyfit](https://www.mathworks.com/help/matlab/ref/polyfit.html) with order 1, it tries to generate a line with minimum distance to **all** points by [linear regression](http://mathworld.wolfram.com/LinearRegression.html) via [Vandermonde matrix](http://mathworld.wolfram.com/VandermondeMatrix.html) (there's some slight nuance you can read more about if interested). Grab a ruler or piece of paper (or something else with a straight edge) and hold it up to the screen starting at (0, -20), then try to do the same thing. You'll find it impossible to make a line that passes through that point and has a better fit to the data over the whole domain for each function. If you want to generate a line with worse overall fit, but which passes through your desired point, you can use the [refline function](https://www.mathworks.com/help/stats/refline.html), which takes `m` and `b` from the slope-intercept form of a linear equation.
Re-read the [documentation for eig](https://www.mathworks.com/help/matlab/ref/eig.html). Start by using the eigenvectors instead of the eigenvalues, as instructed by your prompt. You won't need a for loop, only the [backslash operator](https://www.mathworks.com/help/matlab/ref/mldivide.html).
Yes you can
Cool, thanks for answering 
So, this was a ballsy question as it looks at Matlab as "the cup is half empty" viewpoint. Matlab is where I got my foundation for mathematical programming. So for me, matlab makes sense. I've branched out since then to R and Python, but in terms of ease and documentation, it continues going downhill. The one thing you mentioned was incompatibility struck me as extremely puzzling. I'd argue that compatibility is one of Matlabs strongest suits. Matlabs foundation is built on C and Java. I don't work for the company, so I can only imagine most of the functions that become deprecated and replaced are due to backend improvements. Pythons best plotting package, Matplotlib has documentation that leaves much to be desired. Case in point: I spent roughly 20 hours trying to plot a timeseries that after a tremendous amount of troubleshooting, came down to an old version of both Pandas and Matplotlib not playing well with eachother. When I say old, the versions were only about a year old. That doesnt happen with Matlab. Packages with Matlab can be a little frustrating and gimmicky at times. For me, vanilla matlab and the statistics and machine learning toolbox are all I need. But for anything deep learning related, Tensorflow and Keras are my bread and butter. I think you have to do what I did going from Matlab to Python, and that is accept the differences for what they are, and live with it. Matlab is fundamentally powerful and easy to use. Python is fundamentally flexible and open source. 
The only reason I use MATLAB is that there is no comparable tool to Simulink in Python.
You use Matlab because the C engine behind the matrix manipulation capabilities of the software are superior to anything else out there. You use Matlab because it remains an industry standard for many fields. You use Matlab because it has an intuitive scripting interface for rapid technical computing. You use Matlab because Simulink is extremely powerful for systems engineering. Your points are relatively weak, but of course Matlab has many deficiencies, as does any other computing language. That being said, I think each of your points can be addressed and/or countered. 1) In my experience this doesn't happen frequently for any of the core methods. Maybe it happens in some auxiliary toolboxes? But even there I haven't seen it much. And there are nevertheless ways to handle it. 2) Matlab isn't very good for graphical interfaces and plotting unless it's relatively simple. If you are trying to make a publishable-quality figure, I'd recommend alternatives. That being said Matlab gives you quite a bit of control and the basics don't take long to pick up. You can make a feature-full plot in just a couple lines. 3) Actually plot and ezplot are doing different things and as such have different syntax. Note that ezplot is intended for purposes when you have a function instead of vectors. That's why the function is the first input. 4) I disagree, exceptions and errors in Matlab are very descriptive. You mention Python here and in my experience the error and/or exception descriptions are very comparable across the two frameworks. 5) You only install Matlab once and in 2018 it's not too much to ask for 20 gigs, IMO. Not to mention you don't have to worry about manually installing any dependencies or libraries like Python. That being said you don't have to install the entire beast if you don't want to.
So you suck at matlab and want to stick with python. Good for you.
Thanks for the response. It's entirely possible that I've just encountered a different scenario where it didn't help me a lot, or they didn't teach us its use properly on university. I've always been the kind of guy the form the problem and the solution in head and pour it into the code and this is where I've lost lots of patience with MATLAB, many solutions offered online are puzzling and very much different to each other, but as for compatibility I mean functions such as simplify, xticks etc. Why would anyone change that? Also, what triggered me to write this post, I've had to plot impulse response of some electronic filters. The response contained two high frequency sines and two high frequency cosines (4000-8000t). Defining time variable and then defining the function (where I have to use dots for element by element) was a headache, and then the most important part of the response wasn't plotted at all. Then I tried symbolically defining the function and plotting it and the result was similar. I copied the code and adjusted things by defining a function which returned these values in python. I used matplotlib to plot it and where MATLAB didn't plot anything, Python plotted high frequency oscillations. The only way to make MATLAB plot them was to drastically reduce the size of X axis, but I wouldn't even know that if I didn't see the oscillations in Python.
I once asked the chair of my department the same question.... &gt;Alex, Matlab has established its footing well for the last 35 years so. Matlab is based on old government funded projects on linpack, eispack, and others in 60s and 70s for solving dynamic systems' problems. It has built its momentum and followers. Academia and industy adopted Matlab to solve numerical and dynamic systems with all the convenience of plotting features embedded. Python is a late comer, borrowed lots of features from Matlab. You can see much similarity in NumPy, Matplotlib, and others libraries. Some schools teach object-oriented Python as the first programming language. ECE community still considers C as a primary language for embedded system designs. Matlab is a closed system so it is maintained consistently bu Mathworks. Python and libraries may be not well maintained since these are open sources, that is, lots of frustration when the function calls are different in different versions. That's my view. You can find out more from the Internet. 
Very mature, better hit the sheets before your mom hears you typing on the computer, little child.
As for the first, my question would be why change simple to simplify if they are used for the same thing? I understand ezplot and plot are different, but what's the point of symbolic plot if you can just make a time vector and make a function that used it as an argument? I use ezplot only when I can't make plot work, to be honest. While MATLAB and Python have very similar ways of displaying the error (function&gt;function&gt;function&gt;line where you made a mistake, the error text itself is usually confusing to me, not the method of displaying it) Also I didn't know what you said about figures. Thank you!
Haven't done a lot of EE filter work. Thought that was relatively self contained in the filter toolbox, though of course, when your school has the license to everything and the kitchen sink, that's what gets installed. Matlab's a lot better these days than it used to be, and unless you're using some of the rarer toolboxes, quite stable - I've got bits that more or less originate from my B.Sc thesis and still run fine. Python has increased in efficiency a lot, but... oh dear, it's been 15 years ago, our actually working alternatives were the likes of C, or if you were a real computational mathematician, FORTRAN. Matlab errors can be cryptic, if you don't note that it tells what called the function where the crash is. In many cases the crash is in a built-in function, whereas the actual cause may be in the calling script or 1 - 2 functions deep. The IDE helps a lot. (You haven't seen error messages until you start seeing Java errors - Matlab runs on top of a JVM.) Back in the day, our tutorials didn't include ezplot (and these days, it appears to be about to be deprecated in favour of fplot), but they did include xlim, ylim and zlim commands for setting custom axis limits. So, Matlab's nice for prototyping some code fast, once you're familiar with it. For some people looking for free alternatives, there's at least Octave and Scilab. Scilab also has a Simulink-alternative IIRC. Not sure, I've only used Simulink once because my advisor said that's what I needed to use - most of the bits that mattered were Matlab function blocks and Simulink itself appeared to be very unintuitive and clunky.
Dymola or modelica are better than simulink
Well, a good reason I could think for using MATLAB is mostly for mathematical and physical simulation, mostly physical simulation. Truly, if you want to actually do a Monte Carlo simulation of photons travelling through some material with great accuracy in a reasonable time, I would recommend using C or C++, but just to make sure your model is right, making a simpler proof of concept using MATLAB is the best option. You could use python too or any programming language, but MATLAB combines the high number of packages and graphical performance that really helps. I may have used only Monte Carlo Simulations, but that also holds true for optimization problems, solving differential equations and modelling many-body interactions. For pure programming (a.k.a. developing apps and such) it is useless, but MATLAB is very reliable for scientific programming and for teaching, too.
Matlab has quite a few weaknesses and problems but I don't think a single one of them is on your list. Most of your issues seem to stem from not knowing how to effectively do something with Matlab which I understand if you only use it once in a while. However, for people who use it regularly, essentially nothing you have written is a problem. 
Yes, exporting to pdf or svg gives a vectorised grafic. Easy to modify. 
For some reason Matlab is the one thing where if someone doesn't know it it's always school's fault for not teaching them. Take some responsibility and learn how to do it for yourself. What you're describing is a very simple plot. 
I mean basically you are saying that for your application, Matlab sucks. And that's a perfectly good reason to not use Matlab, I agree! But that doesn't really mean it's useless, and it's silly to go to a forum where people use it effectively and basically say, "you're stupid for using Matlab, and here's why" and expect a positive response. 
I am not sure what you expected with the rant. From what I can gather, you don't know enough about Matlab to use it properly. Matlab has it's defects, but you don't seem to mention any of them. If you need help getting your code to work correctly, post a question regarding that. Or read the documentation to understand it better. I had code from 10 years ago that only required a small 1 line change to work with 2018B. If any functionality changes are planned, then Matlab will give you a warning regarding that well in advance. I agree that standard graphing engine for Matlab is not publication quality, but you could improve that by diving deeper into figure saving options.
Matlab is a tool and like all other tools has its strengths and weaknesses. I'm an economist so my programming is relatively narrow. But if you are doing linear algebra Matlab is simply unbeatable, in my view.
Because I'm an entry-level graduate student and every position I want in the industry I like requires MATLAB. I don't really have much leverage on that
This response was far less mature than the OP.
So, I put together something that mostly works, at least for GUI based editors. To use something like vim you might need to modify it to spawn a new terminal using whatever terminal your system uses and then run the editor opening command in the spawned terminal. This function needs to be in a directory called \`@char\` somewhere on the current MATLAB path. You should also probably replace \`run\_orig\` with whatever the matlab run function actually is on your system (e.g., run \`open run \` and copy and paste it into the \`run\_orig\` function). function run(scriptname) %% overloaded `run` function try run_orig(scriptname) % % ALT - this will work, but doesnt include the more robust checks that `run` does % evalin('caller',[regexprep(scriptname,'^(.*)(\.m)$','$1;')]) catch MException myerror(MException) keyboard end function myerror(ME,prefEditorCmd) %% error function replacement that opens relevant files inn an external editor % this works with GUI editors (gedit, sublime, etc.), but may not % work with terminal based ones without some modification. N = numel(ME.stack); % number of files to open (everything inthe current stack) F = cell(N,1); [F{:}] =deal(ME.stack.file); % actual filenames if nargin &lt; 2 prefEditorCmd = 'subl'; % this opens `sublime` on my system end for nn = [1:N] system([prefEditorCmd,' "',F{nn},'"']) % open files, one at a time end rethrow(ME); % re-throws the original error in matlab end function run_orig(scriptname) %RUN Run script. Copied verbatim from [matlabroot,'/toolbox/matlab/lang'] (Matlab R2018b on Linux) % Typically, you just type the name of a script at the prompt to % execute it. This works when the script is on your path. Use CD % or ADDPATH to make the script executable from the prompt. % % RUN is a convenience function that runs scripts that are not % currently on the path. % % RUN SCRIPTNAME runs the specified script. If SCRIPTNAME contains % the full pathname to the script, then RUN changes the current % directory to where the script lives, executes the script, and then % changes back to the original starting point. The script is run % within the caller's workspace. % % NOTES: % * If SCRIPTNAME attempts to CD into its own folder, RUN cannot detect % this change. In this case, RUN will revert to the starting folder % on exit. % * If SCRIPTNAME is a MATLAB file and there is a P-file in the same % folder, RUN silently executes the P-file. % % See also CD, ADDPATH. % Copyright 1984-2017 The MathWorks, Inc. if isempty(scriptname) return; end if isstring(scriptname) scriptname = char(scriptname); end if ispc scriptname = strrep(scriptname,'/','\'); end cleaner = onCleanup(@() ([])); [fileDir,script,ext] = fileparts(scriptname); startDir = pwd; % If the input had a path, CD to that path if it exists if ~isempty(fileDir) if ~exist(fileDir,'dir') error(message('MATLAB:run:FileNotFound',scriptname)); end cd(fileDir); fileDir = pwd; % get the fully qualified path name cleaner = onCleanup(@() resetCD(startDir,fileDir)); end % Look for executable 'script', ignoring variables in RUN's workspace. pathscript = evalin('caller', strcat('which(''', script, ''')')); %if it is a variable then 'script' cannot be run due to precedence if strcmp(pathscript, 'variable') warning(message('MATLAB:persistentVariableAlreadyInWS', script)); return; end % If not found . if isempty(pathscript) if isempty(fileDir) || isempty(ext) error(message('MATLAB:run:FileNotFound',scriptname)); else error(message('MATLAB:run:CannotExecute',scriptname)); end end [runDir,~,rext] = fileparts(pathscript); %If which doesn't find a script in the same location as the requested path, % calling evalin will run the wrong script. % In other words, the script at the requested path doesn't exist. if isempty(runDir) || (~isempty(fileDir) &amp;&amp; ~strcmp(runDir,pwd)) error(message('MATLAB:run:FileNotFound',scriptname)); end % If an extension was given, and doesn't match the results of which -all, % then do not try to run the script--it is the wrong thing--except when % both a .m and .p file exist with the same name. if ~isempty(ext) ... &amp;&amp; ~strcmp(ext,rext)... &amp;&amp; ~(strcmp(ext,'.m') &amp;&amp; strcmp(rext,'.p')) error(message('MATLAB:run:CannotExecute',scriptname)); end % Finally, evaluate the script if it exists and isn't a shadowed script. evalin('caller', strcat(script, ';')); delete(cleaner); end %on exit in case of an error. function resetCD(returnDir,tempDir) if strcmp(tempDir,pwd) cd(returnDir); end end end 
&gt;If you are trying to make a publishable-quality figure, I'd recommend alternatives. What would you recommend?
MATLAB is typically paid for by universities, institutions, and companies, so not a problem there. MATLAB's documentation is second to none. Python's stuff sucks. I can make very beautiful plots in MATLAB. I think you should separate its capabilities from the burden of knowledge. Furthermore, I find the dot notation, and clearly documented name-value argument pairs, to be extremely easy to customize plots. Exception errors in MATLAB are much more descriptive than in numpy.
Your problems seem to be that you just find one language more intuitive. Before Python accepted '@' as matmul, here's what you would have written: S = np.dot((np.dot(H, beta) - r).T,np.dot(inv(np.dot(np.dot(H, V), H.T)), np.dot(H, beta) - r)) S = (H.dot(beta) - r).T.dot(inv(H.dot(V).dot(H.T))).dot(H.dot(beta) - r) In MATLAB: S = (H*beta-r).'*(inv(H)*V*H.')*(H*beta-r) Because python is more flexible, matrices are second class citizens to objects, unlike MATLAB where the first class variable is an array. I'm not sure why you find .* multiplication difficult ... your problem seems to be that you didn't create your linspace properly, not from any problem with MATLAB. Maybe matplotlib automated that part away for you.
Matlab has some shortcomings... But the visual interface for data in memory (workspace), intuitive syntax, and extensive help resources make it great for prototyping and testing. Especially for people who are familiar with the C family of languages (C, C++, C#). Here are my top use cases for Matlab: Testing and distributing libraries ive written in C#, or C++/CLI that are compiled as .Net assembly (.dll). Matlab is often a common ground among engineers, so it's minimal effort for someone else to test or use functionality of something I've written in a C language if it's in the form of a .dll. Quickly testing math related programs, especially those involving image or matrix manipulation (in matlab they are the same thing). Quickly plotting a simple graph. Pasting data into a variable in your workspace and then plotting couldn't be easier. Converting Matlab functions to C using Matlab Coder. There is no denying Matlab has a good amount of resources, allowing certain functions to be researched and optimized to the point of being superior to similar functions in other languages. Detect checkerboard points and spline are two that come to mind. As far as some of the complaints you have.. Matlab is incredibly backwards compatible when it comes to base functions. More so than Python, at least (Python 3.4 and Python 2.7 have serious incompatibility issues). And plotting couldn't be easier. Matlab does however have issues with memory leaks, and certain parts that are mainly Java have issues (Database toolbox comes to mind). 
&gt; (change or create typefaces, annotations, line weights, colors, axes attributes, grids, borders, legends, titles, labels, and anything else you can think of) All these things you can do in MATLAB, and scripted! figure(1) ax = gca; ax.FontWeight = 'bold'; ax.FontName = 'Times New Roman'; ax.Box = 'on'; ax.YTickMode = 'auto'; etc ....
&gt;your problem seems to be that you didn't create your linspace properly, not from any problem with MATLAB This is precisely the issue here. It seems that OP doesn't understand MATLAB fundamentals as well as how computational maths differs from pen-and-paper maths.
For my publications, I used matplotlib for python, with LaTeX (and its math symbol packages) enabled and I exported my figures to pdf (since pdf uses vector graphics).
It seems that you're being willfully ignorant here and generally, you are reacting petulantly to people's advice. This seems counter-productive because people who may have decades of experience in computational programming are taking the time to explain to you the how and why of the matter - and they're doing that for free. Be humble and learn.
EE who spent a bit of time designing digital filters in Matlab (without making use of a toolbox). It seems to me that you're not using Matlab properly. Your sampling frequency (related to the Nyquist frequency) determines your simulation time step (reciprocals of each other), which influences your time variable. Seems like you're not defining your time variable properly (with linspace or whatever) and this is causing issues with your plots. In fact, there's a possibility than your filter's responses that you're plotting are altogether incorrect due to incorrect sampling frequency or the time variable. Once you understand how this works, you'll have a much easier time designing digital filters in Matlab or python or whichever environment you want. I have found that doing so in Matlab is no harder than so it in python or C++.
I really wasn't aware I could export figures in vector format. I also have a lot of experience in AI so it shouldn't be an issue. Thank you very much
Because unlike Python and anything else, Matlab is a polished time-tested software with a vast library that contains everything you could possibly need and thanks to it's long well tested existence you can actually rely on it 100%. Also, Python has the [slowest execution](https://benchmarksgame-team.pages.debian.net/benchmarksgame/) of all programming languages and people just keep using it only because its syntax is simple and it's free.
Thanks for your response. I know where I made a mistake. I was working with normalized version of transfer functions first and adjusted time limits to be around 10 seconds because it took them around that time to settle. Then, I denormalized them to f=4kHz and it took about 0.0025 seconds for oscillations to be relatively settled (but they did reach ~8000 in value at start). I copy the same code and adjust it so it works in Python by defining it as a function and plotting it with matplotlib. It was pretty clear I made a mistake because you could see overlapping zig-zags. If you search the internet it says the term most likely can't be calculated because the part of the axis isn't within function's domain and there I am breaking my mind over how a part of the plot can't be within function's domain when it only contains sines, cosines and exponentials. It's okay though, I made a function in Python to calculate the output and plot it on the graph so I shouldn't have any more problems with it and it should make my work more efficient, as for MATLAB, I went back later and set the correct plot boundaries and the plot looked good.
I know you can, and there are times when I do just that - namely for my day job, where I don’t have Illustrator. But, for academic purposes, you get much more flexibility with the Illustrator route. For example, say you need to fit eight subplots in one figure. Can you effortlessly change the spacing between individual subplots purely via code, without doing endless algebra? Let’s say you decided to add a paragraph to your report/article/manuscript and need to redo the layout, two weeks after you thought you were done with the project, long after you cleared those variables from MATLAB. Can you resize that spacing to fit your new layout, without having to rerun your entire script? If your script runs for 2 minutes, this might’ve not be a *huge* deal. But if it runs for 12 hours and your project needs to be submitted in 6 hours, this can be a major problem.
I think majority of the other comments are correct in that you don't know how to use it well. Matlab was the first programming I learned 10 years ago and I use it the most out of all the languages I've learned. It makes the most sense to me. It has great functionality and incredible documentation. Yes there are a few support documents that could use some updating, but in all honesty some of the fun of coding is figuring out what you can and can't do. Matlab also has GUIDE where you can create an a GUI. Its awesome and makes things easier for sure. You essentially move stuff around on a figure and in the generated code you code your functionality. It makes editing your GUI easy. It targeted towards certain subjects like DSP and DIP. I use it a lot for working with tables in survey work I do. Simulink is complete trash, but other than that it's a pretty good program. I also think it might help if you explain what you use it for. 
Clearly your issue isn't specific to the actual programming environment used. It is always good practice to check if the boundaries of your plots are appropriate for what you're plotting. &gt; I am breaking my mind over how a part of the plot can't be within function's domain when it only contains sines, cosines and exponentials. I don't really understand what you're saying here and a lot of what you described elsewhere. My guess is that you need to brush up on signal processing theory and you may also benefit from going through proper tutorials on DSP and digital filter design. Once you know the lingo used in this field, you'll be able to explain your problem more accurately and people will more easily understand you. &amp;#x200B;
[mp4 link](https://g.redditmedia.com/mj8NCj7-UYVjTgfYMBDwh1BYMCoW7L7YcjRCZnbZGe0.gif?fm=mp4&amp;mp4-fragmented=false&amp;s=076652b7d0e955d0a2f052cf476bc198) --- This mp4 version is 94.43% smaller than the gif (184.17 KB vs 3.23 MB). --- *Beep, I'm a bot.* [FAQ](https://np.reddit.com/r/anti_gif_bot/wiki/index) | [author](https://np.reddit.com/message/compose?to=MrWasdennnoch) | [source](https://github.com/wasdennnoch/reddit-anti-gif-bot) | v1.1.2
Oooh, I like this. Very nice! 
Does this work only when you run a script using run(yourscript) or is run actually called by matlab normally when running code?
Very nice! Only thing you need now is a jerk curve (derivative of acceleration) and you basically have the full simulation engine design engineers use to design cam profiles.
Actually the cam has been designed from the Potion Diagram (C2 continuity). I've not plotted jerk because is not continuous and I just wanted continuity up to accelerations, but you are right, it can be added. 
If any of you is interested I can give you the code. 
Very nice! I'm familiar with these plots. But I was confused with your titles of your plots are first. I expected the titles to be at the top of each plot. With the x axis label right below the x axis and the y axis label left to the y axis. The labeling right now threw me off and confused me for a bit. But I was able to understand it eventually! Overall very nice! Love how the marker on the places trace and follows the state of the cam-follower. The image of the mechanism up top is great.
I would love to see the code you used to generate this! How did you do the moving black dots and the figure at the top? 
I have shitty technical english skills and there's no doubt about that. If a real argument isn't within function's domain, that function either returns minus or plus infinity. (ln(0) for example). That's why it confused me, for what real number would function of (Acos(wt)+Bsin(wt))e^-Ct yield such values? It made no sense. As I said, someone on the internet said this happens in the case of what I just described above and it didn't make sense for me that a number within (0-4000) would make the function go into infinities.
Yeah but like I said you really should avoid using that. 
On monday I'll give you a link. 
I most likely don't, but I use it a long time. They give us MATLAB on uni to solve problems such as analog filter response to certain inputs etc. 1. Inverse Laplace is just terrible in MATLAB, it will either return a bunch of symsums, it will approximate exponentials with a bunch of "i"s or something other than that. Sometimes when plotting I face problems, especially when defining plotting variable beforehand. To fix that, I need to add a bunch of dots to my expression so it looks kind of like this: Tgsi=-(-2.2287.*w.^6 + 1.8195.*w.^4 - 6.1169.*w.^2 - 6.8519)./(w.^8 - 4.0209.*w.^6 + 6.0848.*w.^4 -0.0465.*w.^2 + 3.0165); The thing is, considering I had a bunch of filters to analyze, I really didn't want to waste time on this, not because it's annoying or something but generally as the expression becomes more complicated I am more likely to miss something as it's already been close to 5AM I believe. It took me about an hour or so to make a Python function that returned the response in time domain and plotted both it and numeric integral of that response. Then I just ran said function for every filter and saved a decent amount of time, the results sort of looked like this -&gt; http://prntscr.com/lmfm5u.
It's possible - tight_subplot works very well. Also, if you have coded the subplots as axis handles, adjusting them by their position is pretty easy. As is with any problem of coding vs. hand adjusting (i.e. beamer vs ppt), it depends if the initial cost is worth it. If your data processing does take that long, then yes, definitely better to manipulate the graphics.
I will be messaging you on [**2018-11-27 15:51:41 UTC**](http://www.wolframalpha.com/input/?i=2018-11-27 15:51:41 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/matlab/comments/9zx5x1/camfollower_simulation_what_do_you_think/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/matlab/comments/9zx5x1/camfollower_simulation_what_do_you_think/]%0A%0ARemindMe! 3 days) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Thanks! Can you point me to some videos that explain this so I can understand better, also the audio files I'm not sure if need to have the whole song maybe just the obvious sampled parts to compare?
Here's a good video on cross-correlation and convolution: https://www.youtube.com/watch?v=MQm6ZP1F6ms Starting with small samples might make everything more manageable, but you should be able to do it with the full song and it should still process relatively quickly. If you still are unsure how all of these parts will work together, you could create some test data to make it even simpler. For example, generate 4 or 5 sine waves with different frequencies, that continue for around 10 cycles (making sure they're all the same length). Concatenate all of them into one matrix, then perform a 2-D cross correlation using one of the sine waves you created as your "probe" or "sample" window. Relevant matlab help pages: 1-D cross correlation https://www.mathworks.com/help/signal/ref/xcorr.html 2-D cross correlation https://www.mathworks.com/help/signal/ref/xcorr2.html When you get something working, I'd love to see the results!
He’s at uni so everything looks like a nail.
For all the publications I've worked on, we export .svg's from MATLAB, after improving them by adding black borders around lines and markers, bolding the axis text, setting the axes to what we want, etc. From there, we open the .svg's in Inkscape and make changes as necessary to make the plots presentable, and then we save them as .pdf's. Those figures always look leaps and bounds better than the figures published by others in our community, especially those that try to use the stock excel or MATLAB plots.
For computational programming, people make use of numpy, which is based on optimized C++ linear algebra packages iirc. This improves programe execution times.
Alright
Good bot. u/aitorp6 I would consider saving this version!
Interesting. I'm always trying to improve the quality of my visualisations, because to me those are invaluable. What kind of touch ups do you usually perform in Inkscape?
Sometimes MATLAB exports things funny, so we'll adjust the axis labels so that everything is lined up and not overlapping. Addtionally, we only ever export single plots from MATLAB, so if we want to do a figure with multiple plots in it, we put them together in Inkscape because it looks 1000x better than the subplot feature in MATLAB. The legend feature in MATLAB isn't very good either, so we usually make the legend in Inkscape as well. 
Try to use .* and ./ instead of * and /. Without it, both of them are considered being matrix operators instead of "do this for each element on this array".
https://en.wikipedia.org/wiki/Newton%27s_method
Wow that’s could! I’d definitely like to see the code too.
Thanks!
the ballistic function &amp;#x200B; &amp;#x200B; &amp;#x200B; function distance = ballistic(theta,m, area, Cd, Vo, tstep, plotting) g = 9.81; rho = 1.225; &amp;#x200B; Vt = sqrt((2\*m\*g)/(rho\*Cd\*area)); k = (g\*m)/Vt; &amp;#x200B; Uo = Vo\*cosd(theta); Wo = Vo\*sind(theta); &amp;#x200B; Sy(1)=0; Sx(1)=0; t=0; &amp;#x200B; n=1; while Sy&gt;=0 t = t + tstep; n = n+1; Sy(n) = -(m\*g\*t)/k + (m/k)\*(Wo + (m\*g)/k)\*(1-exp(-(k\*t)/m)); Sx(n) = (m/k)\*Uo\*(1-exp((-k/m)\*t)); end distance = Sx(n) if plotting == 1 plot(Sx,Sy,'g') xlabel('Sx(m)') ylabel('Sy(m)') axis(\[0 100 0 50\]) grid on end end &amp;#x200B; &amp;#x200B; &amp;#x200B;
If you're talking about actual lines, you can get their intersection by direct solution from their parameters. If you're talking about arbitrary functions, you can find their intersection efficiently with `fzero()`. 
take a look at https://www.mathworks.com/matlabcentral/fileexchange?term=intersections
You would just type them in. If you're simply worried about transcription errors, I believe Mathematica has a Matlab output formatting option; but you'll still need to verify correct output. I'd suggest using a few known points to check. 
Nope, wish I did. I know that makes it much easier.
Not really. It's better you're not using it. If you want a numerical result, you don't need symbolic variables. 
Not sure if I fully understand your question, but if you check the condition for each grayscale value in the image, and then take the product of every element in that matrix, you will know if every element satisfies the condition. `isInRange = ( Image &gt;= 0 ) &amp;&amp; (Image &lt;= 255);` `allInRange = prod(prod(isInRange))` &amp;#x200B; &amp;#x200B; &amp;#x200B;
Really cool, would love to see the code. 
The error you're getting means you're referencing an array at a location past its size (like the 61st element of a 1x60 vector). The error message probably tells you where this is happening.
One option would be to use the square area of each blob (ie number of pixels) to figure out a "radius" to then determine which type of coin it is. You should get 4 blob sizes 
You could always subtract the intersecting lines from the function and then find the roots.
What is the error message that is returned and what line does it direct you to?
Take another look at your second FOR loop: for j = 1:2^(n-1) This is attempting to index j from 1 to 1/2 on the first iteration, because n = 0, so this loop won't be executed the first time around. Take a look at that, and: * maybe consider setting h(1) and R(1) outside the loop, as R(1) just gets reset every time * generally avoid using i and j as indexing variables in MATLAB, as those are understood to be complex numbers (I use k1, k2, ..., kn as my indexing variables)
Good to know that exists!
Titles on subplots are kind of difficult to do
Which line is causing the error? This is probably not doing what you want: t=1+maxlag:length(Net)-leadtime . Use parantheses properly. Matlab processes operators from right to left when order of operations is not clear from mathematical rules or parentheses. It processes that line as: (maxlag:length(Net)-leadtime)+1 &amp;#x200B; A numerical example: \&gt;&gt; 1+10:20-5 ans = 11 12 13 14 15
There are also some other lines that I'm not sure you wrote correctly to get what you want. Please code step by step and make sure variables are getting correct variables in each step.
+ I send code from vim to execute and it ultimately works by copy-pasting lines or sections. This means that I could only get this to work when running a whole script, as I could just prefix the copy-paste command with run. But it would be impractical to run whole sections of code through run, when from matlab's perspective (in my case) each line is being typed at the command line. I think the logic is sound though, and this has made me think differently about trying to get this behaviour. For it to work from any function, when called normally (i.e. without run) something must be intercepted along matlab's native execution events. I'll have a deeper look at what goes on, like at the error functions. Thanks for the help.
Have you started yet? Here are a few things you should start with: 1. [https://www.mathworks.com/help/matlab/ref/xlsread.html](https://www.mathworks.com/help/matlab/ref/xlsread.html) 2. [https://www.mathworks.com/help/matlab/ref/for.html](https://www.mathworks.com/help/matlab/ref/for.html) 3. [https://www.mathworks.com/help/matlab/matlab\_prog/find-array-elements-that-meet-a-condition.html](https://www.mathworks.com/help/matlab/matlab_prog/find-array-elements-that-meet-a-condition.html) 4. [https://www.mathworks.com/matlabcentral/answers/2015-find-index-of-cells-containing-my-string](https://www.mathworks.com/matlabcentral/answers/2015-find-index-of-cells-containing-my-string) Almost anything an entry level user will work on can be found online. Start with learning the syntax. After that, look up the specific techniques you want to implement. There is a ton of stuff out there but we must not do your homework for you.
For and if loop
I'd love to see the code as well! Looks really good!
LMGTFY. [https://www.mathworks.com/help/stats/find-missing-data.html](https://www.mathworks.com/help/stats/find-missing-data.html) seems to be what you're looking for.
Thank you, I'll take a look
If statements would be okay, but there are easier ways. Try something like this, where 'g' is your dataset.. g(sum(isnan(g),2)==0,:) This is just 'one way to skin a pig'
Just to explain how this works: * Isnan assigns a value of 1 to any entry that has a nan and 0 otherwise. * We sum those results for each row. * The rows that have summed values of 0 don't have any Nan's in them and are the rows we keep from the o.g. dataset. 
Or he could use the function rmmissing.
Thank you very much that's very helpful. Have an excellent day.
I will. Thanks a lot :)
Just to clarify when I go "x = g(sum(isnan(g),2)==0,:)" is it creating a new table x that is ignoring the rows in g that don't have summed values of 0. &amp;#x200B; Thanks
No that's the problem. There are print statements all along the program. None of them run, then all of them run at once. I don't think the program is the issue TBH. I'm hoping someone who knows more about MEX functions can tell me why the actual running is taking so long. If figured the compilation is where all the hard work is done.
Kinda hard to tell without the code.
You are correct. I've added my MEX Function code.
Try using `mexPrintf` instead of `printf`to display some text.
I'll give it a shot, although I don't really see the difference.
Judging from [this post](https://stackoverflow.com/questions/26271154/how-can-i-make-a-mex-function-printf-while-its-running), that would at least solve the fact that you see every message after your function is done running, so you would be able to see what's taking time.
Then why not write a mex function that does nothing and add everything back one line at a time until you identify where the problem is?
Finding where the progress lies is what someone with experience would do.
&gt; relevant bits of program Yes this would help
I would try to calculate the length first, for that, divide by steps using 10: my _number =12345; check = my_number; counter = 0; while check ~=0 check =floor(check/10); counter = counter + 1; end 
Name checks out
Is it a standard Matlab function? Or something your professor wrote for you? If it's the latter, I assume you'd get it from an online course materials website or in an email from your professor, or something like that. 
This is the code so far: &amp;#x200B; syms P(T) Hfg Vg Vf F(T) ode=diff(P,T)==Hfg/(T\*(Vg-Vf)); F(T)=dsolve(ode); G(T)=solve(F(T),Hfg);
just rebranded it to fig2svg: https://github.com/kupiqu/fig2svg
I guess my question is, have you looked into the theory behind what you are trying to do? That's your first step if you are trying to make your first step. There are a ton of videos on YouTube about this subject. [Hopefully this helps you.](https://youtu.be/f0Xku3LIQxk)
It is helpful, but it seems to start from past my issue which is creating the Gaussian based on the sizes I mentioned before. Everythung I can find discusses a sigma which I dont think I have.
It's what im told to do lol, but thats good to note.
Fun fact: the uint8 cast already clamps to [0,255] in MATLAB. So, those inner min and max operations aren’t necessary if you’re casting the result.
Its to recover a blurred image, the numbers are given in the assignment im working on. Im unsure how to apply them to creating the filter.
If this is a blind deconvolution problem, you can estimate the point spread function (Gaussian in your case) from your input images. If not, you’ll just have to make up a sigma to define the width of your Gaussian and see how well it works as a Wiener filter kernel. 
`pause(1)`
ty!
As some of you requested, here is the code: https://github.com/aitorp6/CamFollowerMechanism
You're post for help here is of so ridiculous low effort, that I was seriously considering not answering. The error you get is because you don't pass M to your function. 
my apologies! i’m not sure how could i actually show my code, i’m new to this. so how can i fix that exactly?
also if you need me to post something clearer i definitely will!
Here you have: https://github.com/aitorp6/CamFollowerMechanism
You need to call on the function with a matrix M and an integer ngens. Dunno what M is supposed to be, but for example preypredator(M,2)
my apologies too, I was a bit too harsh. Anyway you need to show us what M is when you're calling your function (like /u/skyentistic writes). 
Hello! Here is an example to give you some food for thoughts. It extracts digits one by one from right to left. n = 42345 while n &gt; 0 last_digit = mod(n, 10); % that digit you can write in another variable n = floor(n / 10); end &amp;#x200B;
There are some reasonable points in here, but Wolfram as a GENERAL PURPOSE language? You crazy.
It's been a long time since I did Baysean classification stuff so I'm not really following your code; but I'm a little confused why you're using symbolic variables. 
What are you expecting as the outcome? You also need to reformat your code to get all 4 graphs on a single plot...x=linspace(0,20); %Define z from 0-20 (Length) &amp;#x200B; hold on for xi=\[5 10 15 20\] %Changing second boundary condition for multiple trials M=2; %Physical property a=0; %Defining boundary conditions b=20; a1=0.001; b1=xi; twoodes=@(xi,y) \[y(2); (1+2\*y(1)/M\^2)-1/2-exp(-y(1))\]; %Define reduced 1st order system bcs=@(ya,yb) \[ya(1)-a1, yb(1)-b1\]; %Boundary conditions solinit=bvpinit(linspace(a,b,5), \[a1 -0.01\]); %Evaluate with given range, -5,-10,-15,-20 as positive sol=bvp4c(twoodes,bcs,solinit); %Soln of BVP y=deval(sol,x); %Plot solution figure plot(y(1,:),x) title('') xlabel('') ylabel('') plot (y(2,:),x) end hold off &amp;#x200B;
Because I would like to find the function that I can plot
You could just set x1 and x2 to some arbitrary range that makes sense... x1 = linspace(a,b,101) x2 = linspace(c,d,101) or something similar. This should allow the use of better numerical solvers
Try to add one more argument in to "[x,y] =size(M)" U have just one input and need 2 
 I hope you enjoyed the post! This is part of a series on the 3-Body Problem on my website. I don't always write about astrodynamics. Sometimes I write about the design behind everyday things, other times about numerical methods. Aka stuff that isn't astrodynamics, but if you find this post cool, you'll probably also find cool. I have a subreddit where I post everything at [r/Gereshes](https://www.reddit.com/r/Gereshes) so you never miss a post! 
Matlab now has save as SVG option, what value does this add-on bring?
Yes, Matlab and GNU Octave can do that, which is great. And one can use them to cover current limitations of fig2svg (although reporting feature requests in github gives me some motivation to cover those cases). There are differences between native support and fig2svg, for instance svg files from Matlab do not get automatically scale to available space but in contrast are constrained to the given size, which in my opinion is weird default for a svg format. We can see this when you open the svg file in a browser for instance. Other things that are also different are for example how things get clipped (there are options for that in fig2svg), or in terms of the interaction with third applications such as LaTeX and/or Inkscape. Also fig2svg removes the data that is not visible, which makes svg files lighter. 
nono, I'm sorry I didn't expand on that. I really use only wolfram alpha in its free state, when I need quick derivatives or ilaplace of a certain function, mostly basic problems and quick checks. For anything more serious almost always python.
I would be curious to see how it fares with complex graphics generated by [gramm](https://github.com/piermorel/gramm) (especially with alpha, patches, etc.).
Do you actually need the analytical expression? Or just it's plot? Plotting is a numerical result. You could just use a numerical solver. 
+u/kupiqu , thank you for this explanation, and thank you for working on this.
I think the issue is with Hold on, that keeps the figure as is. Try running your xlim and ylim before the first hold on
I think this should work aswell: axis([0,1000,0,1000])
Investigate the function [accumarray](https://www.mathworks.com/help/matlab/ref/accumarray.html), which enables similar behavior. Accumarray is a very flexible function, but is correspondingly difficult to understand. Accumarray will probably be just one part of what you need, since you are using several features of MATLAB here.
I’m having a problem figuring out what behavior you’re looking for. But, maybe try: &gt;sum(Increment) or &gt;cumsum(Increment) or &gt;A+increment To explain your current behavior, note any code’s right side is fully evaluated before any assignments are made to the left: &gt;A(ind) + increment &gt;[0,0,0] + [1,2,3] &gt;[1,2,3] Then this 1x3 array is assigned sequentially to the left side: &gt;A(1)=1 &gt;A(1)=2 &gt;A(1)=3 Hence A(2) &amp; A(3) are unchanged and left at 0 Note, even though “true” &amp; “1” look the same in MATLAB’s output and act the same in “if” statements, they behave differently for referencing/assignment. For example: &gt;ind1=[true,true,true] &gt;ind2=[1,1,1] “ind1” acts the same as indexing by [1,2,3], which is different than “ind2” 
Very nifty, thanks for putting this together!
Try: A = [0, 0, 0]; ind = logical([1, 1, 1]); increment = [1, 2, 3]; A(ind) = A(ind) + increment; myResult = sum(A); When you call with `ind = [1, 1, 1]`, it is just the first index three consecutive times (which assigns in turn, `0+1`, `0+2`, and then `0+3`, which is what remains). If you just want the sum of `increment` at positions denoted by your index vector to be assigned to A, you can just multiply: A = zeros(1, 3); ind = ones(1, 3); % include zeros if/where appropriate increment = 1:3; A = ind*increment.'; % zeros will multiply out values you don't need If you want to add increment to A in all positions, you can just add the scalar to A, and it will auto-size. If you want to do so at logical vector of positions, you need to give logical arguments, not doubles. Not 100% sure what you're trying to accomplish but something here should hopefully help!
can you solve that with [matlab](https://www.novinghalam.com/%D8%A7%D9%86%D8%AC%D8%A7%D9%85-%D9%BE%D8%B1%D9%88%DA%98%D9%87-%D9%85%D8%AA%D9%84%D8%A8/) ?
You can't have a lower limit of 0 on a log plot - `log10(0)=-Inf`, which isn't possible as an axis limit
We've one big model which has several unit models. We have performed unit testing for each unit model using Reactis software (like generating random values for input and cross verifying output with logic). This integrated model has like 2000 input and 1000 outputs. We tried to do same type of integration testing using Reactis software but it can't handle it very well. 
Haven’t tried it myself, but what happens when ii = 3? You’re trying to play the note ‘#’, which doesn’t exist. Try setting up tune as a cell of strings, I.e. {‘d’,’d#,’...}
Maybe I'm reading your code incorrectly but I don't actually see where you call OSELM. In any case, I'd debug this by putting a breakpoint at the top of OSELM. When the breakpoint is triggered you can see what each of the input arguments are. That should help you figure out what is going on. 
One potential issue is the name. There is already a Pacman package manager and a packman package repository. Of course you can re-use the same names of you want, but it might make it harder for people to do searches for information on your project since they will get swamped with results for unrelated things. Most language package distribution systems I know, including pip, npm, cran, and ctan, have the programming language somewhere in the name. So to make it easier to discover and remember you might want to follow a similar pattern. Regarding the software itself, this can be very helpful. A couple of questions: 1. Does it handle dependencies recursively? So if your package depends on package A, and package A uses your project to depend on package B, does package B get pulled in? 2. What about packages that require compilation steps? Is there some way to either specify GitHub downloads that include compiled code or to trigger a compile at install time?
What do you mean by "it can't handle it very well"? Is it taking a long time to generate the tests? &amp;#x200B; &amp;#x200B; **Full Disclosure**: I work at MathWorks in the Simulink Verification and Validation Product Marketing team.
Just for fun, try setting the axis limits to `[1e-2,1000]` instead of `[0,1000]` and see if that works. If so, the 0 is the problem
Thanks for your reply. I updated the example in my question to be a bit less ambiguous (I did not mean to use logical indexing). \&gt; To explain your current behavior, note any code’s right side is fully evaluated before any assignments are made to the left Thank you for walking through that, it really helped clarify the behavior. \&gt; I’m having a problem figuring out what behavior you’re looking for I suppose this can be formulated as matrix multiplication since it is linear. Mat = zeros(3,3); for i = 1 : 3 Mat(i,ind(i)) = 1; end A = increment * Mat; However, my data is way too big to actually form this matrix. 
&gt; But my data is too large to actually form these matrices (A is about 10 million samples). Only 10 million? That's not bad, as long as you keep performance in mind (or only have to do this once). MATLAB offers [tools specifically for big data](https://www.mathworks.com/help/matlab/large-files-and-big-data.html) to keep memory management easy, speed up operations, etc. Looking at your updated example, as already mentioned, [accumarray](https://www.mathworks.com/help/matlab/ref/accumarray.html) seems to do exactly what you want.
This is exactly what I need! The line below gives the desired behavior: A = accumarray(ind', increment); By the way, what I actually need is to calculate the adjoint of linear interpolation with interp3. That is, since interpolation is linear, it could be written as matrix multiplication (but this isn't be done in practice because the matrices would be way too large). I need to implement multiplication by the transpose of this matrix. Have you seen a built in feature that does this?
Ah, with your edit I understand more. I can't think of a way to do it without a loop at all, but you can still use some vectorization, something like this: all_ind = unique(ind); for i = 1:length(all_ind) ind_i = all_ind(i); inc_i = increment(ind == ind_i); sum_inc = sum(inc_i) A(ind_i) = A(ind_i) + sum_inc; end 
Gotcha. This is a common issue with large models. &amp;#x200B; I'll start with "there is no silver bullet solution" that will entirely automate the test generation and result in short analysis times. Large models inherently involve added complexity that V&amp;V tools can't predict. For instance, there may be nonlinear elements that, when stacked together, cause (essentially, though not technically) exponentially longer simulation and analysis times. Two quick fixes: reduce the length of timers, and consider using single-precision floats (or, if you can, move to fixed point or int). &amp;#x200B; That being said, there are ways around this, and it depends on the tool you use. I don't know the details of Reactis and how to improve its performance. &amp;#x200B; However, there are some workflows and [MathWorks solutions](https://www.mathworks.com/solutions/verification-validation.html) you could try: &amp;#x200B; 1. Split up the model logically using test harnesses that represent groups of units. [Simulink Test](https://www.mathworks.com/products/simulink-test.html) provides [this functionality](https://www.mathworks.com/help/sltest/ug/relationship-between-harness-and-model-block-diagrams.html) 1. **This is a good practice in general, regardless of whether you use MathWorks V&amp;V products.** 2. Harnesses can be intelligently "stacked together" to be more iterative. 3. Simulink Test also has a tie-in with [Simulink Coverage](https://www.mathworks.com/products/simulink-coverage.html) and Simulink Design Verifier to automatically generate tests for additional coverage (as of R2017b). 2. You can also create harnesses and generate tests using [Simulink Design Verifier](https://www.mathworks.com/products/sldesignverifier.html) 1. There are some considerations when using Design Verifier that I should point out, especially if your model contains a lot of timers and/or nonlinear math. These can add to the overall analysis time. If you decide to go down this route, I recommend asking MathWorks for help. 2. There are also newer workflows around "cross-release" support that MathWorks could help you with.
I found the issue, I defined x in too large of an interval so it made me misunderstand the graph. Sorry for the inconvenience, but if anyone else encounters this rookie error I hope my post can serve as a reminder to check it out
You have it in you to become a good programmer. Don't let small setbacks bug you so much. What have you learned from this and what will you do differently next time?
Thanks for the help. I'll sure try this method as it reduces time for test generation.
If you like it, keep doing it and you'll get better. Everybody on this sub would have failed that test at some point in their Matlab careers. Also, timed exams are hardly representative of real coding, where you have time and resources. Timed coding exams are just a lazy and ineffective way of assessing someones ability.
I think everyone struggles like this with coding - especially with their first coding language. For some people, it just clicks right away and for others it takes practice and "muscle memory". Furthermore, with every mistake, you'll begin to think about things you want to watch out for in the future (potential failure cases, more efficient structure, etc). My guess is the examiner is expecting some mistakes, but what's more important is that you know how to fix them (which it seems like you did). I don't know anyone who gets code to run perfectly on their first try. As someone who uses Matlab for a living, I still learn things every day. Some days I look at code I wrote a month ago and think, "oh my god, what an ugly way to write that function." As with everything else in life, you just have to keep practicing. That said, if it's the actual process of coding that you don't enjoy, then don't pursue a career in it. But don't back out just because you didn't get a 100% on a test or because there are people who did better than you. 
Thanks for your constructive points about the naming. &amp;#x200B; To answer your questions: 1. Yes. If there are recursive dependencies, PackMan adds all dependencies recursively (while avoiding infinite loops). It will also warn you if overall multiple different version of the same dependency are referenced and it would only add one of them to the path. 2. That is a great point. Currently, a package's "installation" process is simply checking out a specific commit from the corresponding Git repository and branch. So if the compiled code is committed to Git (e.g. if there different branches for different OSes each with their own compiled mex files on GitHub), it should work as is. Otherwise, it is straightforward to add the option for calling an installation Matlab script or OS command during installation. So we can definitely add this feature.
You forgot the constant Z~1+... You do have some extra terms X and X^2 but looks good
I think what you need to do is use the fft function in Matlab and implement STFT shifting the signal window. Depending on your sampling frequency, taking the fft of whole signal will probably too long and you wont be able to distinguish vibrations. I have no idea of vibration characteristics of the sensor, i could be more helpful if you give me some tips about it. What i first imagine is the i think that will definetly depend on engine revs and there might be some resonant frequencies on the platform that you will want to filter out. 
Thank you for the encouragement &lt;3. I learnt quite a bit especially making your code for a variety of different functions instead of just one. I also learnt how to code on the spot under pressure xd. 
I agree. I love doing the matlab assignments and I would spend an hour or more doing each question. I would talk to myself out loud like reading a story to a child haha. I was very nervous for me to code in 15 mins because when I I would go back and front quite a lot whilst I am talking to myself. Anywho, thank you for sharing :D
I like coding especially the feeling when u finally cracked the bug in your code and it works! woohoo! I love that feeling! The test made me judge my ability hence I was feeling down. But thank you for sharing your view, it gives me some encouragement. 
So basically I’m using the MPU9250 with an output data rate of 4000 HZ. The frequency produced by the drone is about 259 HZ. The motor has 750 kV operating at 11.1 v this gives me 750*11.1 = 8325 rpm. I don’t know if this is what you asked. 
Cheers man , I will try it and see what happens . I honestly appreciate your help 
Just post your results here, i will try to help you. 
Then stick with it! You'll figure it all out one way or another :) On an unrelated note, I'm glad to see a fellow HotS support in the coding world!
matlab is possibly the worst place to start as a coder :) It's a wonky mishmash of stuff built up over decades. And it is not even a language but an interpreter syntax. You don't need to care about it at all. If you consider learning a proper general programming language you'll see all the issues in matlab. Hence don't use matlab as an indication of your abilities. Disclosure: I've been using it since v5.3.
Thanks for the help! About the X and X\^2. Since it is X and X\^2 multiplied with something inside a parenthesis. I thought I would have to include it. Could you please give some context to why i should remove it? 
oops on my part. X and X\^2 should definitely be in there. You are correct as long as you remember the constant term 'Z \~ 1 + X + X\*Y + X\^2 + X\^2\*Y + Y'
Thanks! 
What About HoleNomials?
Elegant Structured Repose. \_\_\_\_FLUID.DYNAMIXl: 9\*
Coding is hard - for everyone! Even the best coders struggled to learn in the beginning. Practice is key
I'm not sure why you would need a nested loop for this. Also, I'm curious what you think this does? &gt;for j = 2 You need to understand the basic behavior of a loop *before* you start writing code. Maybe read the documentation? 
Have you read the documentation on the various tools for writing data to files? 
Yeah I figured it out. Thanks
It was the requirement to use a nested loop 
I have done something something quite similar, involving explicitly constructed the interpolation matrix (easy in that case, since it was 1D data) as a [sparse](https://www.mathworks.com/help/matlab/ref/sparse.html) matrix, which was fairly simple to vectorize. I have also cheated out interpolation weights in the past by interpolating index values: [I1] = ndgrid(1:Nx1) temp = interpn(x1,I1, x1q) basisval1 = floor(temp) weight1 = temp - basisval basisval2 = basisval1 + 1 weight2 = 1 - weight1 Repeat for every dimension and merge weights. That’s a basic outline, which needs edge case handing. I fully believe there is a better way to do this for your problem. Do you need the adjoint matrix itself, or the multiplication of it by some data vector?
okay (assuming this is not a joke), take a step back, look at what you wrote, and think really hard about whether or not, you have given us anywhere near enough information to help you... Describe your problem in more than one sentence. Show us, what you have already tried. Maybe draw what you want to accomplish.
By default, Matlab expects that you're working with matrices. If you want it to do element-wise calculations, use a period (.) before the operator. y=2.6e-06*x.^3 Like that. (The multiplication doesn't matter, because multiplying with a scalar element-wise is the same as multiplying a matrix with a scalar.)
Agree with this. OP it's not clear what you're trying to accomplish with your code. The answer to your question really depends on it
Never beat yourself down because you tried something but got not the desired results. You always have learned something try to be positive, you are worth it.
You can also use it as a function by using y = @(x) 2.6e-06*x.^3 
your code doesn't look like a *nested* for loop. For it to be nested one loop should be inside like the other, such that for each step of the outer loop, you run through the inner loop. 
[J1, J2] = rectifyStereoImages(I1, I2,stereoParams); figure; imshowpair(J1,J2,’montage’) This gives me the rectified images displayed both in a window. But I can’t see the correspondent epipolar line in this figure. Hope you guys can give me a tip to solve it. Thank you 
The problem I'm seeing is that R and F should change for every cycle in the loop, correct? So R should be set to the previous R (one row above), and likewise for F. You need this to be in one loop for it to work. Just delete the "end" from the first loop and the "for i=1:T" for the second loop. As far as nested loops, I noticed that one of the restrictions was that the population cannot be less that 2. If you put what you have INSIDE a "while" loop, then you can tell the algorithm to stop if a population gets below 2 for either species. Good luck!
https://imgur.com/a/ubT2BVA
I suppose. 
I don’t see why not, but I also don’t see why you would. Is there any reason you wouldn’t use the built-in MATLAB function, rref? https://www.mathworks.com/help/matlab/ref/rref.html If you’re trying to just write something for your own personal education, then those two functions are 90% or more of the work. But any script you write will probably have limited use beyond just the education of writing it. 
Yes, look into cell2mat and either horzcat or vertcat. Your code would like something like this: A=celldata A_array=vertcat(cell2mat(A([1:8,10],:))); Let me know if this doesn't work. I wasn't at my computer trying the code out when I typed this reply.
Can you explain what is A([1:8,10],:) referring to in the cell? I have A = cell(10,1); When I reference my cell, I use A{1,1}, each A{} is a 4x5 matrix And I tried to do something like vertcat(A{1:10 ~=n} ) where n is the cell that I don’t want to include 
Ah I see, I think I have a better idea on what to do now, thank you very much!
[Here is a lovely article](https://www.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html) about indexing featuring Loren Shure, one of the best MATLAB authorities around. Here is the [documentation for indexing](https://www.mathworks.com/help/matlab/learn_matlab/array-indexing.html) in MATLAB. [Here is another, slightly different take](https://www.mathworks.com/help/matlab/math/array-indexing.html). Once you've got that down, take a look at the [documentation for the 'for' loop](https://www.mathworks.com/help/matlab/ref/for.html). Going line-by-line that way is a great way to understand a program, and I applaud you for the effort. Let me know if you're still stuck after reading those!
I have edited my code in the original post and I was able to get all of the numbers except in the last row of both columns my numbers are 5 and 68 instead of 8 and 70. I'm not sure how to make it round up 
One other option: Personally, I like using logical indices. A = yourCellData;%assume it's a 10x1 array of matrices Anew = cell(size(A)); for n = 1:10 ind = true(10,1); ind(n) = false; Anew{n} = vertcat(A{ind});% or horzcat(A{ind}); depending on what you want end
Hi there, as you see I want to add an Excel add-in compiled in Matlab into Excel itself via the Matlab Compiler Function Wizard. It is useful to set input and output variables, to build the function and the macro too if requested. If I want to see the Visual Basic code produced though, the project is password protected. Why do they do that? Is the password a well known one? I've tried a couple but nothing works. Thanks in advance to whoever wants to reply. Ceers.
That’s very interesting and a lot more advanced compare to what I did, I managed to do it in a different way using append and if statement, thank you for the help! 👍
Currently I'm implementing it like this (1D example): given an array I, with samples at xI, linearly interpolate at the locations xJ. The result should be the size of xJ. % convert locations to indices ind = (xJ - xI(1))/(xI(2) - xI(1)); % assumes uniform spacing of xI but not xJ % convert to integers ind0 = floor(ind); ind1 = ind0+1; % boundary conditions ind0(ind0&lt;0) = 0; ind0(ind0&gt;length(I)-1) = length(I)-1; ind1(ind1&lt;0) = 0; ind1(ind1&gt;length(I)-1) = length(I)-1; % fraction between indices to sample at p = ind - ind0; % get the interpolated output I_at_xJ = I(ind0+1).*(1-p) + I(ind1+1).*p; A typically application in optimization would be to have some error the size of xJ, and transform it back to something the size of I using the adjoint of interpolation. I can do it with accumarray like this: % err is error the size of xJ err_at_xI = accumarray(ind0(:)+1, err(:).*p0, [numel(xI),1]); err_at_xI = reshape(err_at_xI, size(xI)); My implementation of linear interpolation above is substantially slower than matlab's built in griddedInterpolant. So I was hoping they would also have a built in version of the adjoint. Using interpn itself to get the weights is a good idea. That might end up being faster.
thanks for all those links! The article was really helpful, will also have a closer look at the others as well. I'm just wondering... when its written i = 1:floor(6/2), i know i get a vector i = 1 2 3, does that mean that it will loop through once with being 1 2 3, or go in three times with i = 1, i = 2, i = 3 (I cant make it go right, so I doubt its like this).. but I kinda don't understand how it computing the a(i) = a(L - i + 1); - at first i though they went into the first element in a (when i = 1), and replaced it with the third element in a [a(3-1+1)], but couldnt, get that to go up, so something else must be happening. Because when i run a(i) = a(L-i +1) the vector then gets changed to a = 9 7 5 5 7 9, so the three first elements get changed out with the three last.. and then you run a(L-i+1) = t [ where t = a(i), and i are i guess 1 2 3, so that means taking out the L - i + 1 (i think this is the part i don't get) with 1 2 3 (but its supposed to be reversed??) and then you get the reversed vector a = 9 7 5 3 2 1... I'm sorry if this is messy/not understandable, but I'm going kind of mad as I've used hours trying to understand this now... Like I can run it in matlab and see what is happening, but i can't quite SEE it...
There are a bunch of different ways to do it, the easiest is to store stuff in the object's UserData, e.g. in a struct as discussed: [https://www.mathworks.com/help/matlab/creating\_guis/share-data-among-callbacks.html](https://www.mathworks.com/help/matlab/creating_guis/share-data-among-callbacks.html) I prefer to update the callback so that it includes additional parameters, but there are complications to that, which I was lucky enough to learn the fun way. One example is: `slider.Callback = @(src, event) slider_callback(src, event, data_obj);` But the `data_obj` has to be a handle class so that you can update it as the program goes along. Otherwise it gets sent to the callback by value; and, that value never updates. That could be fine, like if the `data_obj` were instead a struct that contained handles to other objects... etc. etc. That's kinda how they do it in GUIDE. If you look at a callback signature there's an extra handles parameter that gets passed into every parameter, and you'll have the callback set up to be something like: `@(hObject,eventdata)FileName('slider_Callback',hObject,eventdata,guidata(hObject))` But that link also discusses how to use `guidata` to share data between Callbacks so... check that out!
Not a problem, glad to help. I'll give you a couple more links that will give you tools to do *exactly* what you want: see the operation of the program. Check out [breakpoints here](https://www.mathworks.com/help/matlab/matlab_prog/set-breakpoints.html). You can set a breakpoint at a point just before you lose "sight" of what is happening, then run the program and it will pause at the point you set. You can then step through the code line-by-line (using the buttons at the top of the Editor window), and even more importantly, you can mouse over the individual variables and see exactly what value they have at that point in the code. You can also select a bit of code and execute it in the command window using your F9 key, or by right-clicking the selected code and choosing 'Evaluate Selection'. For example, if I have the line: A = B + C*D; I could mouse over each of `A`, `B`, `C`, and `D` to see what value is stored in each one. I could select just the `C*D` part and hit F9 to see the result of the multiplication in the command window, or select the all of the right-hand side and do the same thing to see what value is going to be stored in A when I run the command. This works for ranges and indices as well! (e.g. in `A(b:c)` I can see the values in `A`, and the values of `b` and `c`, as well as the entire range of `b:c` if I want using F9) This will open up a world of possibility for you! You can read more about [debugging in general here](https://www.mathworks.com/help/matlab/matlab_prog/debugging-process-and-features.html).
Thanks, friend! I had stumbled upon that page, but was hesitant to use that solution for a pretty silly anxiety reason. The sample code they provide shows the storage of single parameters, whereas I'd be storing 100000+ element vectors. A voice in the back of my mind told me I was misusing `guidata` in some way, so I avoided it rather than experimenting with it. I'll definitely give it another look, then. :) I was also looking for a way to update the callback to include additional parameters as you described, and so I'm glad you've gone down that path as well. Admittedly, I don't know enough about handle classes yet to really intuitively grasp what you're saying, but I'm sure this is a good starting point, so thank you. 
I applied, but then I heard no matter what position you applied to you'd answer phone calls the first year working there as customer service.
Honestly, all you need to know for your use case is to, at a very high level, define an object / class to hold all of your data to be a subclass of handle. That is, literally type: `classdef data_obj &lt; handle` `properties` `% your ridiculous vectors` `xn_Clean, xn_Dirty, SNR, whatever` `end` `end` And then you can treat `data_obj`, or whatever you want to call it, as a struct but with pre-defined properties. Then to get, say, `xn_Clean`, you could just say `data_obj.xn_Clean`. However, because `data_obj` is a subclass of handle, it'll always be passed by reference to wherever it's sent (as opposed to passed by value, i.e. as a copy at that single point in time). So if in one callback you modify the data, it's saved to that one specific instance of that object, which can then be shared wherever you please. Kind of like a global variable, but not. You can also treat gui objects this way, that is by sending copies of their handles to whatever callback needs data from that object. The best use case is to check if a checkbox is checked or a toggle button is toggled. However, if you really want to make terrible, impossible to decipher code, you can just store all of your data as line objects as children of your axes object. Maybe don't do that. But definitely read through this piece of documentation: [https://www.mathworks.com/help/matlab/matlab\_oop/comparing-handle-and-value-classes.html](https://www.mathworks.com/help/matlab/matlab_oop/comparing-handle-and-value-classes.html)
Current employee. What are you questions?
What do I need to qualify as a good intern? What can I do if I get an internship at MathWorks? I’m an electrical and electronics engineering sophomore with an interest in, and with projects on, Machine Learning, Deep Learning and Image Processing.
This is slightly inaccurate, let me see if I can clarify. The default position for new grads is Engineering Development Group: this group is the technical support team (not customer support!) at MathWorks and for good reason. It’s crucial that our developers, engineers, marketing folks, etc, really get to know our customer’s needs and pain points and technical support is a great way to get a crash course in all this. Trust me, I thought I knew MATLAB when I first joined, and was quickly proven very wrong. While in EDG, you also are given the opportunity to take projects with any group at MathWorks, get a sense of what they do and what they’re processes are. I also like that I could “test drive” the team and its manager before joining. Eventually (on average after 1.5 years), you transfer to that team. ALTERNATIVELY: you can apply directly to a position at MathWorks (I.e. a dev team). This is less common for recent grads as we really value industry experience. It depends on the team though. It is also a little less likely that you will see these other positions as they are often filled by EDG. As I mentioned in an above comment, I strongly recommend EDG because of the experience and skills you gain working directly with customers, and the connections you make as you work with other teammates, development, marketing, etc to solve the customer’s problem. It’s definitely not for everyone and can require some thick skin. The customer questions are usually very interesting and feel more like engineering problems that you help them solve. But I suppose as a bottom line, you CAN apply to specific positions in specific teams, especially if you know exactly what you are looking for and what you want to do. Otherwise, the vast majority of incoming new grads is EDG. Good luck to you wherever you ended up! If circumstance allows, definitely give us a shot next time :)
I just typed out a reply to u/onsager01 so please see that comment. As for your other questions: Q: What group are you in? Development, Sales or Support? A: I now work in Application Engineering Group. It is part of sales and I basically travel around the country visiting customers. My tasks vary from delivering canned seminars to deep engagements. Usually the “deepest” I go with customers is a proof of concept where I take the customer’s requirements and application and deliver a lite example of what a solution looks like. We can sometimes get pulled into further engagements or long term projects but it is unlikely. I also deliver customer feedback and participate in strategic meetings that influence the future direction of the product. Q: How is the technical training group? A: We have a training team at MathWorks that teaches classes to our customers as well as hold internal classes for our employees, is this what you are referring to? They are part of our customer facing category of positions and will travel to various locations teaching classes on using MATLAB/Simulink for FILLINTHEBLANK. I’ve never personally been interested in considering this team but I know several trainers. If you have a passion for teaching, it may be worth considering. Q: Do you really get to work on 'free' projects and learn more about the product offerings (as long as you get your required work done)? A: It’s been a while since I was in EDG so things might have changed since I was there. Interns did not typically have enough time to get ramped up for technical support AND participate in projects. Whenever I’ve mentored an intern, I have always recommended that they take advantage of being onsite with all the groups and start networking, then come back full time and get a project with your favorite teams. In full time, it roughly is 50:50, one week of support followed by one week of project time. It fluctuates a bit based on need but evens out in the end. I thought it was great, I could look up a team I was interested in and reach out to a manager there and find out more. Sometimes they will have projects on offer, sometimes we had to come up with one. A friend of mine had a passion for the maker community and got approval to create his own project to host a robot competition and he did so well, he was basically offered to write up his own job description and transfer into it. He’s a special case though. Haha. Q: How does the 'bonus' schedule ramp on? Does it actually end up being 8-12% of your salary? My first company dangled the 'bonus based on company performance' out in front of their lower salary but never actually came through. A: Oof, this one I haven’t particularly paid attention to but you may want to ask that of your hiring manager during interview. All I can say is that I’m quite satisfied, especially this last year :D Q: If you've worked for a public company, does it seem like Mathworks and the CEO actually think long term vs stock price next quarter? A: MathWorks is my only full time work experience and my internship was at a government organization so I don’t have a comparison. MathWorks itself is a privately held company and our CEO tends to be very much a long term thinker and will give us more details than I personally care to know about our multi year plans :P Q: Mathworks would require a relocation and need to make sure I'm making the right choice for my family and career. A: EDG does require relocation to Natick, MA. There are no exceptions for that. I currently work out of LA and specific positions allow for some flexibility but are primarily customer facing positions. We do also have EDG offices internationally. However, a pretty sweeping majority of the positions at MathWorks are in Massachusetts. I know I’m working off a small sample size but I’ve greatly enjoyed working at MathWorks. For me, it’s the company culture and the people that have made it worth while. I feel like every other person I’ve met here are crazy mad geniuses and it’s been amazing learning from them. Being a private company, I feel we are able to prioritize the right things and do right by our customers and our employees. Hope this helps and good luck!
If you have a color sensor hooked up to an Arduino you should just get the Arduino to read the pwm signal using the pulseIn command and then send the signal via serial USB to MATLAB. 
I have two ideas on this. First, have you tried using vpasolve? My second idea is to try the symbolic toolbox in Python. It might be able to do more but that would require using a new language. 
Now that I think about it some more if the equations are indeed linear why don't you just use Gaussian substitution in the form x=A\b?
Yes I can. However, I generally have much more equations than unknowns. As a result, A tends to be rank deficient and I therefore generally have free parameters in my solution. I suppose I could determine which columns are deficient and remove the corresponding free parameters and write my solution in terms of them but I’m not sure how effective that will be.
I was an intern with EDG last year, and now work full-time there. **Interview Process (EDG):** The interview process for EDG is similar for both intern and full-time positions. There is normally a technical phone interview along with some general questions regarding your interests and background. For full-time positions, this phone interview is followed up with a set of onsite interviews. The technical interviews have a strong focus on critical thinking and communication skills. **Internship (EDG):** As an intern in EDG, you are assigned to a specific development team based on your interests. You are invited to all of the team meetings, and will work closely with a mentor to complete a project. These projects take approximately 3 months to complete. As an intern, you will learn about, but will not provide, technical support. Your only deliverable is the project. **Full-time (EDG):** The full-time EDG position is a little different since your time is split half-and-half between technical support and project work. You work in a month-long rotation: two weeks of support followed by two weeks of project work. I like technical support for many reasons, but here are some of the most important ones: 1. The people - I am surrounded by incredibly smart people around my age. A large number of my colleagues in EDG are subject-matter experts with Masters or PhDs. 2. The problems - I get to work on and solve incredibly interesting issues that customers are facing. Almost every case teaches me something new about MATLAB, which will be invaluable once I transfer to a development team permanently. I also like the project work, because I get to choose projects based on my interests. As the name suggests, the Engineering Development Group is all about development - the projects are a great opportunity to develop skills ranging from a specific programming language like C++ or JavaScript, to domain-knowledge in areas like compilers and automatic code generation. Once you find a team that's a good fit for you, you transfer onto the team permanently. This normally occurs after 1-2 years of joining, with the average being 1.5 years. As a side note, most people in EDG transfer to development roles, but you are able to transfer into any position in the company. Some people transfer to Sales, others become QEs (quality engineers) - it's your choice. **Company Culture:** In terms of the company culture, I think that it's pretty great. Everyone that I've spoken with has been more than happy to sit down with me and talk, whether it's to discuss potential projects or to walk me through how to solve a problem. If I had to pick one word to describe the environment, it would be "collaborative". I'd be happy to answer any other questions about EDG or MathWorks as a whole.
Yes, I know... I tried reading the documentation prior to making this post, but I didn't really know what to look at
Thank you very much, this cleared things a lot for me. I am also thinking of becoming a researcher and an internship at MathWorks could help me see various topics researchers are focusing on and how MathWorks solves new engineering problems with EDG. I think it would be an informative internship.
mse 380?
If a value is not 0, it is considered true. This is a convention in lots of programming languages. Since a is 172, the loop will continue.
Doesn't "while a || length(b)==0" read: "while a or length of b is equal to zero" (which if it is true, it will enter the loop, or?) Why is it considered true if a value is not zero? Maybe its because it would have had to be "a == 0 || length(b) == 0" ? so "while a || length(b)==0" reads while we have a number a OR length of b is zero ==&gt; true == &gt; enter loop
Agreed that Arduino libraries are super friendly to PWM, but if you'd really like to use Matlab, I would look into using a DAQ. They'll let you read in analog/digital signals to the Matlab console.
You’re very welcome! I would defer to u/jamaicamonjimon regarding internship details in EDG as that user seems to have more recent experience with the program. Good luck!
No. It means while either 'a is true' or 'length of b is zero'. a needn't be boolean for this to work, matlab will automatically consider a to be 'true' as long as it is non-zero. 
When it comes to understanding how Matlab built-in functions work I would suggest going into Matlab's documentation. You can do this in Matlab by typing "`help bode`" in the Command Window or by clicking on the name of the function and pressing the F1 key. If you do this you'll quickly see that the inputs you entered are not what the bode function wants. If you want something that looks somewhat close to what you want then you can use subplots in combination with semilogarithmic plots. &amp;#x200B; freq = \[100, 200, 400, 800, 1600, 3200, 6400, 12800, 25600, 51200, 102400\]; gain = \[0.98, 0.901, 0.864, 0.744, 0.578, 0.515, 0.168, 0.087, 0.042, 0.017, 0.009\]; phase = -\[3.79, 18.94, 22.27, 43.5, 61.5, 75, 83.84, 84.6, 86.4, 87.16, 88.59\]; &amp;#x200B; subplot(2,1,1); semilogx(freq, 20\*log10(gain)); %plot magnitude (dB) &amp;#x200B; subplot(2,1,2); semilogx(freq, phase); %plot phase (deg)
When it comes to understanding how Matlab built-in functions work I would suggest going into Matlab's documentation. You can do this in Matlab by typing "`help bode`" in the Command Window or by clicking on the name of the function and pressing the F1 key. If you do this you'll quickly see that the inputs you entered are not what the bode function wants. If you want something that looks somewhat close to what you want then you can use subplots in combination with semilogarithmic plots. freq = [100, 200, 400, 800, 1600, 3200, 6400, 12800, 25600, 51200, 102400]; gain = [0.98, 0.901, 0.864, 0.744, 0.578, 0.515, 0.168, 0.087, 0.042, 0.017, 0.009]; phase = -[3.79, 18.94, 22.27, 43.5, 61.5, 75, 83.84, 84.6, 86.4, 87.16, 88.59]; subplot(2,1,1); semilogx(freq, 20*log10(gain)); %plot magnitude (dB) subplot(2,1,2); semilogx(freq, phase); %plot phase (deg)
What's the warning? Actually it doesn't matter. Stop using symbolic variables. You don't need them. Plotting is a numeric operation, use numeric variables. If the result you're looking for is not symbolic, you should not be using symbolic variables. 
Oh yeah wow. That is way more difficult. Unfortunately unless I sat down and saw your derivation I wouldn't be able to help you. A lot of times I try and set up the equations as best as I can on paper and then move to code. I hope you've done that as well.
Some people use DAQ to refer to various types of Data AcQuisition boxes that connect via USB and offer a variety of inputs (analog, pwm, even resistive or digital in some cases). 
Sounds like subs() is getting upset that you're using a string containing references to symbolic variables that haven't been explicitly declared ahead of time. Which won't matter, since you should stop using symbolic variables and tools to do numeric work. 
Ah thanks, I was really confused not heard that Called a DAQ before. Thanks for the explanation.
This is generally a dead end. The locus of solutions to an underdefined system of equations can be ugly, and there's not necessarily one "right" or "natural" way to get an equation parameterizing that locus. I'd try to find additional constraints, or parameterize the solution yourself and then fit an equation to the results numerically. Really, anything to avoid symbolic variables for doing calculations. Symbols are great for doing symbolic manipulation on expressions you already know. They're a terrible pain in the ass for doing any kind of numerical analysis. If you really need to do heavy duty symbolic work, I'd suggest Mathematica. It's symbolic engine is much more sophisticated than Matlabs. 
What is the error that is occurring?
I'm getting no errors
what have you tried so far? Post your code (with comments!) What errors do you get? Etc... 
your cell array index has a single subscript, suitable for a vector (vector means 1xN or Nx1 in size). you need a second subscript, one for row indexing, one for column indexing.
Are you converting from the original cell array into a struct somewhere else? 
I was just trying to use the cftool, without actually coding. I figured it out. Thanks! 
This didn't work with fractions. I figured out how to do custom fitting in cftool plugin. 
Great that you solved it! Can I ask you to paste your solution in your post, so other who come here can see it?
What kind of program? 
It sounds like you want to check the validity of the stored variables after they are assigned. This could be achieved by a separate internal method to the class that is called at the end of any function or method a user can call to alter those stored variables. Or it can be called on its own by the user or prior to both of those variables needing to be used by the class. There are a lot of options here, and the best answer probably depends on your work flow. If you check when the variables are initially set, the user could be asked to correct them or be alerted to the problem prior to running anything further.
What do you mean by functions cannot be used?You cannot define new functions or you cannot use built in functions? Assuming that we are talking about built in functions: Think what you have to achieve first. If it was for me I would make a plan. First ask inputs from the user. Second check whether first number is a prime, if it is store it somewhere, if not check the next number and so on. When the check process checks the large input display the stored values.
it doesn’t necessarily have to be the same code but [this](https://imgur.com/a/p60bWXQ) is what i have for the first part. And yes mod function is forbidden
do you have an example i could follow? i’m still new to this so i don’t really understand this well
First of all, it seems like you often will have more than one combination of elements that will give you your maximum especially since your vector contains only integers. Anyway, my guess would be to use C=combnk(v,k) in a loop over k. This takes you input vector v, and gives you all the different combinations of choosing k elements from v. Then for each k you calculate the sum of C (along the second dimension). Lets call this sumC. Then you set all vales of sumC larger than 10 to 0 (sumC(sumC&gt;10)=0). And then you find the max of sumC (maxsumC) as well of the index (or indices if there's more than one combination giving you the max). You do this for each k from 1 to length(v), and then you find the max of the maxsumC and that's you answer for the maximum (probably exactly equal to 10, since you're working integers). The lastly you need to have saved for which k's and for which rows of C (for the given k) you got your max, and that should give you your answer.
It's like playing lego. You have to know your bricks (=built-in functions), how to put them together (=syntax) and you'll need some imagination to build a car from bricks XD. Bring an example you don't get, and we can tell you how we think about a solution.
It's putting each line of the file into a new row in the table. It does this by increasing idx every time you finish a line in the file. And it uses idx as the first dimension (row) when subsetting in the table array.
Still no one has any kind of answer? I worked it around, still tough I would like a proper solution to this
Practice! If you want to get good at anything, and you're like most of us (i.e. you're not a savant), you have to work at it. It's good that you've taken a course, because having direction for your practice can be very helpful. To that end there are also resources online that can guide you in studying MATLAB, several of which are featured in the sidebar of this sub (to the right ---&gt;). My favorite among those is MATLAB Cody, and specifically the [Cody Challenge](https://www.mathworks.com/matlabcentral/cody/problems?term=group%3A%22Cody+Challenge%22&amp;sort=created+asc), which teaches you how to solve specific problems using MATLAB features. For more general coding assistance, there are over a billion results for a Google search on "how to write code", which is overwhelming (despite most of the results being distinctly *underwhelming*). It can be tough to pick out the good stuff from the bad, and tougher to know where to start. However, there are some fundamentals that you can learn about (essentially the modules in any introductory programming course) that make it easier to get good help: 1. [Variables](https://www.mathworks.com/help/matlab/matlab_env/create-and-edit-variables.html) and Basic Data Structures 2. [Control Flow](https://www.mathworks.com/help/matlab/control-flow.html) Statements ([Loops](https://www.mathworks.com/help/matlab/matlab_prog/loop-control-statements.html) and [Conditionals](https://www.mathworks.com/help/matlab/matlab_prog/conditional-statements.html)) 3. [Functions](https://www.mathworks.com/help/matlab/function-basics.html) (aka Methods; MATLAB has many already made for you, like the sum function and the sine function, etc.) and [Operators](https://www.mathworks.com/help/matlab/operators-and-elementary-operations.html) 4. [Objects](https://www.mathworks.com/help/matlab/object-oriented-programming.html) (this is at the upper end of the basics, and might be something to hold off on for now) Each of these topics is crucial to understanding programming in general ([object-oriented programming](https://www.mathworks.com/discovery/object-oriented-programming.html), specifically), and breaking the whole topic down to these four elements can help you make the task of understanding easier. With those in mind, the process of writing a program becomes easier to understand. You need some way to store both input and output data (item 1), you need to do things with that data (item 3), you need to direct when and how many times to do those things (item 2), and when you're ready, you can combine some of the previous 3 items into 'classes', which are the cookie cutters for objects (item 4). Do you have any specific trouble with any of the four things I listed? Is there a specific problem you'd like help with? Read some of the links I gave you, and if you're struggling with something, make a new post asking about it. Lots of people here want to help you, but it's easier to answer more specific questions!
Write more code.
Does [table2cell](https://www.mathworks.com/help/matlab/ref/table2cell.html) not work for you? You obviously wouldn't be asking if you just needed to assign the table to an element of a cell array like `myCell{n} = myTable1;`, because that's too simple, right? Not clear on what functionality you're looking for. Double-check the documentation for [tables](https://www.mathworks.com/help/matlab/tables.html) and [cell arrays](https://www.mathworks.com/help/matlab/cell-arrays.html) to make sure there's not a simple built-in that does the job you're looking for or a reason you can't do what you want. Feel free to clarify, too.
The statement `idx = 1;` is generally referred to as 'initialization'. The value will be used/modified later, and we want to start from *somewhere*. The name 'idx' appears to be an abbreviation for 'index' (at least that's how I use it in my code), which as you guessed, will be used to address a specific location in an indexed variable (such as an array, or in this case, a table row).
first step into writing better code is to stop writing code as your first step. Take a min to outline/draw what you are trying to accomplish. It will give you a good mental map of how to struct and set all the pieces together. two, figure out your comment style. I only comment sections of code. These are the inputs, the algorithms and outputs.
I don't remember correctly so I may be mistaken, but to run from command line you have to use: ..(path to matlab)../matlab.exe -r myFile.m I think you have to use '-r' to run a script
Short answer: Make alpha an input argument for tankf1 and put it in a for loop outside to loop through your alpha values.
Matlab is likely upset that when alpha is a vector everything else isn't a vector. It does not always convert from [arrays to matrices](https://www.mathworks.com/help/matlab/matlab_prog/array-vs-matrix-operations.html). If you wish to avoid using a loop, replace your * with .* This will tell Matlab to produce matrices and thus make it okay with having inputs being of different sizes.
Assuming the problem is just path specification, you can avoid having to escape spaces by using double quotes. "C:/Program Files/MATLAB/R2017a/bin/matlab.exe myFile.m"
How do you mean loop? I've also actually changed my mind to have the range now 0.0:0.05:0.2;. I would like all 5 graphs to be displayed. As before, changed alpha one at a time works. &amp;#x200B; Discussing with a friend I'm told to figure out h and t values separately for each and rename the h1 and t1 so on and then combine this with a plot and hold on function. But im having no luck.
I've changed just the last bracket so that it is now (alpha.\*g\*h). I've received the error: Error in tanksim1 (line\_9) \[t,h\] = ode45(@tankf1, \[0 tf\],h0,opts) ;
Practice using another language (like Python), and study some basic data structures and algorithms. It's difficult to get good at programming using just Matlab.
I must have misunderstood, my bad
Np. I thought there might be something weird I didn't see that was actually causing a problem.
Prior using any control technic, it's good to identify its strengths and weaknesses. Although this can ends up in a troll battle, my point is that fuzzy system are just a way to represent a non linear function. It's a great modeling tool, well suited to formulate rules using 'human' understandable rules. If you don't have any prior knowledge on how to control your system, then other methods could be better suited. Neural network may sometimes be easier to to tune. Whatever, it's better to provides your controller with relevant info. In your case, why don't you try using the frequency and the amplitude has input to your fuzzy control.? 
Several hints: MATLAB is mostly a software that deals with numeric computation. In general, there is no trivial way to compute the integral of a function. You may uses the symbolic toolbox to compute the analytical expression of the integral. But it is subject to severe restriction (the integral must be solvable). You may also decide to use a numerical integration. This method will provides an approximation of the result but will definitively more general. So your problem may be solved using Matlab (or may other software) but you should be more specific about what kind of result is expected 
My homework assignment is to read a research paper and implement the same approach in a similar system (but not identical). So the researchers have shown how a Fuzzy Logic Controller has helped improve system response. However, the researchers in their paper mention that they have a set of crisp input and output data values. I am using rotor speed variation (a measure of angular frequency) and rate of change of speed variation (a measure of acceleration) in order to generate corrective voltages (the output). It was a peer reviewed and published paper and I understand the concepts of Fuzzy Logic and how it can help. But I'm having trouble determining what the output voltages should be for a set of inputs. I was hoping Simulink had some probes or measurement blocks that I could attach where I want to measure outputs. Then I run a set of inputs and see what comes out. Normal scopes aren't helping because the signals are non-linear and aren't any known functions. This might be an electrical engineering question, and not necessarily a MATLAB question. I might be in the wrong sub.
Okay, no need to check my answer to your comment on the other question, since I see you've got it. Good! In the [documentation for cellfun](https://www.mathworks.com/help/matlab/ref/cellfun.html), you can see in the Syntax section how they have `func` and then `C1, ..., Cn`. Each of those C's is a cell array of the same size. You can't use `'Trial'` there. What you can do is make `@eg` a 'wrapper' for your real work function, extract the contents of the cell in there, then have it call your real work function to pick `'Trial'` out of the table contents and return the scalar as `B(idx)`. Then `eg` can return those to the cellfun iteration and so on. See [how to pass extra parameters here](https://www.mathworks.com/help/optim/ug/passing-extra-parameters.html).
Might give some pointers: https://www.researchgate.net/post/How_to_choose_appropriate_membership_functions_shapes_and_their_parameters_in_a_fuzzy_system
https://www.mathworks.com/help/symbolic/int.html Symbolic integral
I know how to get a numerical answer, but I want to show it graphically. 
K = a(1,n) &gt; 0.01 ? b : 0
Well it looks like your professor made a mistake. There’s a mismatched parenthesis. But to answer your question, here’s what the state meant could mean if the parentheses are adjusted. K = (a(1, n)) &gt; 0.01*b % K is 1 or zero, depending on weather a(1, n) is greater in value than 0.01*b K = (a(1, n) &gt; 0.01)*b % K is 0 or b, depending on if a(1, n) is greater than 0.01 But in short, in almost all programming languages, `&gt;` means greater than, `&lt;` is less than, and `&gt;=` and `&lt;=` are greater-than-or-equal-to and less-than-or-equal-to respectively. 
Plot the integral result?
Code just does what you tell it to. How would you solve the problem? Write code that does that. 
&gt;Wait I'm sorry, I am a little confused. The code I have written above is set up for a struct. I need to convert it to a cell array. So in the command window when I write disp(filterpatients\_cell( ... {'name' 'gender' 'age'; ... 'mary' 'f' 25; ... 'john' 'm' 35; ... 'anna' 'f' 30; ... 'paul' 'm' 22; ... 'elaina' 'f' 38} )); &gt; &gt; &gt;the output should be 'anna' 'elaina' &gt; &gt; &gt; &gt;Is there a way to do it without cell fun? &amp;#x200B; for instance - when I had to do the assignment for cell struct - the above was my code and in the command window when I typed disp(filterpatients\_struct( struct( ... 'name', {'mary','john','anna','paul','elaina'}, ... 'gender',{'f', 'm', 'f', 'm', 'f'}, ... 'age' ,{25, 35, 30, 22, 38} ) &amp;#x200B; the output would be 'Anna' 'Elaina' &amp;#x200B;
In Matlab, 0 is false; but it's really bad practice to use doubles for logical values when there is no reason to do so. Matlab has the literal values `true` and `false` to represent the respective boolean values, and they're actually stored as logical values, so they only take up one bit instead of 64.
As far as I can tell (without Matlab in front of me right now) there's no `area()` function that's meant for symbolic variables. Why are you using symbolic variables? Area can be calculated numerically. If you must use symbolic variables, you can calculate an area by integration (well, anti-derivation). 
That just tells you where the error occurred. The actual error, which tells you *exactly* what the problem is, is the text you're ignoring. 
I have calculated the area using the int( ) function, however, I want it to be seen on a graph. I'm making like a calculus solver so it would help conceptually show what is being solved. I'm using the symbolic variables because that kinda just how I was taught for when you're solving an integral using the int() function and I am somewhat new to Matlab so I'm just kinda going off of what my minimal knowledge is about it.
Symbolic variables are for doing symbolic calculations. If the result you're looking for is an equation, symbolic variables are fine. Any other time, you shouldn't be using them. In Matlab, symbolic variables are extremely uncommon and do not work with the vast majority of the language. Stop using them. You can plot anything you like. I'm not sure what you're trying to describe but you can certainly plot it. 
Read the documentation on indexing. 
So, no symbolic variables for definite integrals because it's actually solving for a number? I guess that does make sense to me now. I wasn't entirely sure what they're used for, but I do thank you for that short explanation. I'll hopefully be able to try switching it to not having symbolic variables when I work on it tomorrow.
Thanks, I did this and it worked great. I made a method obj = verifyObj(obj) that checks a series of conditions. If any conditions fail, it spits out a warning and makes necessary changes to the properties and returns the object.
Let's say the data starts at 1950 and the user wants the year 1955. Then M(6,:) would give you every entry in the year 1955 row.
Thanks. So there isn't a smooth way to call the desired row based on their input, other than doing a switch case and attaching years each year inside?
do something like: year = input('prompt'); B = A(year,:) And manipulate/plot B however you need.
Ohhhh okay. Thank you so much!
What if I just did a loop instead? Something like: for i = 1:length(open_sessions) y(i) = open_sessions{i}.TrialType == 'Trial'; open_trials = y{i}; end 
Can you post a dummy, simple enough, example which has the same structure has your problem. I still do not get exactly the problem(at least not enough to be helpful) 
Simulink allows to visualualize any of the model signal, for sure. I use 'to workspace' blocks that record the data in the workspace. Then I write a scrip to display the data in the way I want.. Scope are not restricted to linear signals (although this expression does not make a lot of sense to me) or whatever, they just display the incoming data. 
I made a new post with exactly that! Check my profile, it is a better written version of my question.
The equivalent `cellfun` operation to this (or to what I think you are trying to do) is something like mask = cellfun(@(x)(strcmp(x,'Trial')),open_sessions); openTrials = open_sessions(mask);
Just wanted to comment to make it clear that that was just an example and the code won't quite work like that ... You need to know the range of years and the location of those numbers in your source data.
Sorry, I structured my comment to simply answer the original question, which states &gt;Write a function that takes as input the list of patients in the database as a cell array and returns the names of eligible patients as a cell array of strings. The first row of the input cell array contains the field names for each column, and each of the additional rows contain information about a patient. Assume that the gender is always given in lower case, either as 'f' or 'm'. I think I likely misunderstood what you were specifically asking for. When you say: &gt;The code I have written above is set up for a struct. I need to convert it to a cell array. You're actually saying something like "I've already worked it out if I get a struct. I need help figuring out how to do the same thing if it's a cell array". Is that correct? If so, what approach would you like to take? There are multitudes of approaches, e.g. \-Do you want to just convert the input (i.e. the list of patients in the database as a cell array) to a struct so you can use your code shown above that approaches the problem when provided with a struct? or \-Do you want to just convert your `for` loop so that it accesses the elements in the cell array? or \-Do you want to be more efficient and avoid `for` loops? with just the input cell array, never messing with a struct? or after converting the input cell array to a struct? That's my approach. Hopefully that makes sense how I'm trying to help. Addressing your comment: &gt;also in that last example you posted - I thought you can't use dot indexing for a cell array, Matlab won't allow it? That last example I posted stated &gt;If you instead really want to use the struct `x` described above I was referring the the x created from this code patients_data = {'name' 'gender' 'age'; ... 'mary' 'f' 25; ... 'john' 'm' 35; ... 'anna' 'f' 30; ... 'paul' 'm' 22; ... 'elaina' 'f' 38}; datafieldnames = patients_data(1,:); dataonly = patients_data(2:end,:); x = cell2struct(dataonly,datafieldnames,2); So, I was using dot indexing on the struct `x`, not on the cell array. If you really want to have minimal change to your code, you could just do filterpatients_cell =@(patients_data)... filterpatients_struct(cell2struct(patients_data(2:end,:),patients_data(1,:),2))) So that disp(filterpatients\_cell( ... {'name' 'gender' 'age'; ... 'mary' 'f' 25; ... 'john' 'm' 35; ... 'anna' 'f' 30; ... 'paul' 'm' 22; ... 'elaina' 'f' 38} )); Will output 'anna' 'elaina' 
You need to break this down into bite sized chunks. You're trying to run before you can crawl. Your post was too long for me to read. Here's a quick stab. 1.) Learn how to plot y = x^2 2.) Learn how to plot the Fibonacci sequence ( it would teach you alot about for loops) 3.) Learn how to integrate functions using trapezoidal rule 4.) Put it all together
This problem can be formulated as a simple integer linear program (ILP) and solved using MATLAB's `intlinprog`. Let `f` be the vector of given integers, and `c` the limit. The decision variables is a vector `x` of same length as `f`, with value `1` indicating that the integer in the corresponding position from `f` is selected and `0` indicating that it is not selected. The optimization problem to solve is then, max f'x st: f'x &lt;= c x ∈ {0, 1} where `f'` indicates the transpose of the column vector `f`. In MATLAB, this can be solved as: f = [ &lt;your input vector&gt; ]; c = &lt;your upper bound on the sum&gt;; intcon = 1:length(f); % all decision variables are integers lb = zeros(1, length(f)); % lower bound on x ub = ones(1, length(f)); % upper bound on x A = f; % inequality constraint matrix b = c; % upper bound on the sum % Solve the optimization problem x = intlinprog(-f, intcon, A, b, [], [], lb, ub) You can read the documentation for `intlinprog` [here](https://in.mathworks.com/help/optim/ug/intlinprog.html) for more information. The advantage of this approach is that it can easily be scaled for any length of the input vector and any arbitrary value `c`. The disadvantage is that it will find *only one* optimal solution, whereas like /u/Morton_Fizzback rightly noted your problem can have potentially multiple optimal solutions. If you wish to find all of the integer optimal solutions, you might have to use a commercial optimization solver like Gurobi/CPLEX.
Is the program MATLAB specific? If not you could rub Octave instead. The syntax is the same but it has better command line functionality. The downside is that some specific MATLAB functions won't work in Octave Another idea would be to compile your script itself to an executable or an app. 
doesn't cell2struct keep it to work with a struct? I need to to work for a cell array. The exact opposite of what you are saying haha 
Not OP, but cool answer. Will remember to look into that function myself.
OP has a cell array of tables... [check it out](https://www.reddit.com/r/matlab/comments/a1id53/importing_multiple_tables_into_one_cell_array/). Pretty sure that just requires modifying the above to `...strcmp(x.TrialType, 'Trial')), ...`
I'm sure you could work something out like that, if you fix your indexing syntax. Check out the other response, first.
For anyone interested. There are two way to achieve this: 1. arrayfun() with an anonymous function as answered by [Honglei Chen from Mathworks](https://www.mathworks.com/matlabcentral/answers/431783-filtering-array-of-custom-objects) 2. [as described in the Matlab help](https://www.mathworks.com/help/matlab/matlab_oop/finding-objects-having-specific-settings.html)
I was actually being stupid, instead of using || I should've been using &amp;&amp;, my bad, thanks anyways everyone
So, I'm now assuming I'm correct that you're actually asking something like "I've already worked it out if I get a struct; I need help figuring out how to do the same thing if it's a cell array". Is that correct? If you only want to work with the cell array and never convert it to a struct, see my above comment in the middle. I'll repeat it here: &gt;If you keep it as a cell array, you can compare all contents for a given label to get logical arrays which can be used to index the cell array (but this assumes you know which column is gender/age/name). isfemale = [patients_data{2:end,2}]=='f'; isrightage = [patients_data{2:end,3}]&gt;=30 &amp; [patients_data{2:end,3}]&lt;=40; This would work if your input is defined as a cell array like this: patients_data = {'name' 'gender' 'age'; ... 'mary' 'f' 25; ... 'john' 'm' 35; ... 'anna' 'f' 30; ... 'paul' 'm' 22; ... 'elaina' 'f' 38} Then you could do patientname = patients_data([false, isfemale &amp; isrightage],1); You asked above if there is a way to do this without `cellfun`. That's what `isfemale = [patients_data{2:end,2}]=='f';` is doing. *If* your function needs to be able to adapt to different orders of columns labeled as `name` vs `gender` vs `age` and you are not allowed to use `cellfun`, you could just do a loop of the first row of the cell array (i.e. `patients_data{1,:}`, which gives the contents of the column labels) and use a case/switch statement for jj = 1:length(patients_data(1,:)) switch patients_data{1,jj} case 'gender' isfemale = [patients_data{2:end,2}]=='f'; case 'age' isrightage = [patients_data{2:end,3}]&gt;=30 &amp; [patients_data{2:end,3}]&lt;=40; end end 
FYI, to help with readability with multiple lines of code in a reddit post, in Markdown mode you can use four spaces before each line (instead of the back tic "\`").
Thank you! I corrected the indentation!
What part of the logic requires a for loop though? Okay, I've gotten a basic understanding of plotting with matlab. Isnt the mid point rule have a faster speed of convergence? Or why not use quad?
[Empty arrays](https://www.mathworks.com/help/matlab/matlab_oop/empty-arrays.html) are not *undefined*, they are just empty. They still have all of their properties, but there is no value associated with them. You can observe similar behavior with a struct (remember that everything in Matlab is an array, so a scalar struct is really a struct array with 1 element): &gt;&gt; foo.bar = 1; &gt;&gt; foo(1) = []; % Note that foo is a "1x0 empty struct array with fields: bar" &gt;&gt; foo.bar &gt;&gt; % No value is returned, ans is not populated, no error is thrown. Another time you can see "no value" is when you expand an empty cell array: &gt;&gt; c = {}; &gt;&gt; c{:} &gt;&gt; % No value is returned, ans is not populated These behaviors are more similar than they seem at first glance. When you invoke `foo.bar` on a struct (or object), the `bar` field (or property) is returned for every element in the `foo` array. If `foo` is scalar, it's just one value, but when `foo` is an array, all values are returned in the same way that all of the contents of a cell array are returned when you use cell indexing for a range - as a [comma-separated list](https://www.mathworks.com/help/matlab/matlab_prog/comma-separated-lists.html). In this context, it makes sense that the zero-length structs (or objects) and cell arrays return an comma-separated list with no entries. In any context where these comma-separated lists are used, an empty portion simply collapses and the next value takes its place. You can experiment with any kind of function call. For example, in function calls to `bar(foo.bar,baz)` or `bar(c{:},baz)` (using the above variables `foo` and `c`), `nargin == 1` and only the first argument will be populated with a value - subsequent arguments, if present, do not exist. This means that the above calls will not throw an error, even if `bar` accepts only 1 input argument, since only 1 argument (`baz`) is passed.
Whoops, definitely overlooked the whole "using tables" part. I admit ive only used tables a handful of times, and most of that time was spend converting them to be not-tables lol, but Id tend to agree - the overall `cellfun` structure should be OK, but the `strcmp` call needs a bit of tweaking to adapt it for use with tables.
&gt; most of that time was spend converting them to be not-tables Same. I have used tables for display a couple times, where appropriate, but more often than not it's `table2___` for me.
Integration requires a for loop if you plan on integrating numerically. Mid point rule is fast sure but trapezoidal rule is just my go to for integration. It's really easy to code. If speed is an issue you could consider using something that converges faster. 
Thanks for taking the time to respond. I ended up going a different route, but this helped me figure out what i was "missing" with regards to using callbacks. [This](https://pastebin.com/UAPmuf7H) is the actual code. Your welcome to use it if youd like. It seems to work well , though (rather annoyingly) the `onCleanup` function doesnt get called if the function doesnt complete normally, which leaves a stranded difficult to close window in the UI. I dont suppose you know a good way around this, do you? I set it up to catch errors that it could (though try/catch blocks wont catch things like a user pressing ctrl+c), and also set something up so that any stranded windows are found and closed the next time the function runs to completion. Ill call this a "decent" soution, but Id rather have `onCleanup` run like it is supposed to...
In the first sentence of your problem, `n` is defined as the upper bound of a range to be used in creating basis functions for the regression.
n means the number of terms in your polynomial. In other words, the number of terms featuring a power of x, including constants.
But why do i need n? For example the data points x and Y are given. x = \[ 1 2 3 4\] and y = \[1 3 8 6 \]. Now for me the find regression all I have to do is: f (1) = 1m + b = 1 , f(2) = 2m + b = 3 , f(3) = 3m + b = 8 and so on for f(4). From that I take my matrix A = \[ 1 2 3 4; 1 1 1 1\] vector x = \[m b\] and vector b = \[1 3 8 6\]. Now I will find for x which I know how to do. But where does the n come into the picture? 
so if my n = 3, i would need to find for m, c, d? where mx + by +d forms the regression line? 
You need `n` to describe the degree of the polynomial for the regression, as demonstrated by the given formula for the basis functions. You're currently thinking that you will only need a single polynomial of degree 1 to form the basis, but the formula for f_n describes the basis in terms of individual basis functions. Each basis function has degree j-1, where j is in {1, ..., n}. Does that make sense?
n=3 would mean y = c\_0 + c\_1 x + c\_2 x\^2 where c\_0, c\_1 and c\_2 are constants to be determined by the linear regression process.
The n determines which model y = f(x) you want to fit to your data. Say you choose n = 2, your model will be y = c\_0 + c\_1x where c\_0 and c\_1 are constants. This means you've fitting your data with a straight line. Say you choose n = 3, your model will be y = c\_0 + c\_1x + c\_2 x\^2, which is a parabola. The choice of model f(x) is not a trivial thing, it's extremely important in determining how the data fits your model. There's also something called overfitting, which is probably beyond your level at this point. You're welcome to upvote posts which are helpful. Note that your question isn't specific to matlab, it's more of a stats question.
So correct me if I am for a set of data points of x and y which i mentioned above: f(1) = C2 (1\^2) + C1 (1) + C0 = 1 f (2) = C2 (2\^2) + C1(2) + C0 = 3 f(3) = C2 (3\^2) + C1(3) + C0 = 8 And then I need to solve for \[ C2, C1, C0\] which will form my regression line? Am i right? 
Thank you. So for example if I have random data points like x = \[ 1 2 3 4\] and y = \[1 3 8 6 \]. and n = 3. My equations would then be: f(1) = C2 (1\^2) + C1 (1) + C0 = 1 f (2) = C2 (2\^2) + C1(2) + C0 = 3 f(3) = C2 (3\^2) + C1(3) + C0 = 8 And then I need to solve for \[ C2, C1, C0\] which will form my regression line? Am i right?
You should make use of your fourth data point as well.
What do you mean the fourth data point? do you mean f(4) = C2 (4\^2) + C1(4) + C0 = 6? 
Opps sorry, I wasn't part of any stats community so I wasn't sure where to post it. Matlab is the only community I am quite familiar with. But if you know a community, drop me a link and I would love the subscribe. 
Yeah
My bad sorry. But other than that im on the right track? 
Yes I will work on that now. My matrix A will be a matrix of X values from the function and x will be the vector of [c2, c1, c0] which will = the vector of y values [ 1 3 8 6]. Ax = b. Thus in order to solve for vector x it will be (A' A)inverse * (A' b). 
Apart from a minor distinction, that is correct for the given `x` and `y` vectors with `n = 3`. You'll need to generalize it and wrap it in a function to address the prompt completely. The distinction I mentioned is that the vector `[C2, C1, C0]` does not form a regression line in and of itself; it represents the coefficients needed to fit the polynomial (of degree n, which in this specific case is 3) to your data. That polynomial is your regression "line" (scare quotes because it's not strictly linear). Hope that helps!
Alright. I get the regression line by getting a new set of y vectors? Using A * X (my coefficients) = the new Y vectors. I can then plot the x and the new y vectors to get the regression line.
You're referring to "y-hat", the estimate? It does come from the coefficients and their inclusion in the polynomial. Since you have to use regression, it means that you're not likely to find any C's that would make XC = y (where X is a matrix of your powers of elements of x). Instead, the C's you find will (along with the powers of x) give you a new vector of estimates, y-hat. Try it out and see how it looks. :)
Thank you very much for this detailed explanation!
It's because you're using the [conjugate transpose](https://www.mathworks.com/help/matlab/ref/ctranspose.html). Try the [non-conjugate transpose](https://www.mathworks.com/help/matlab/ref/transpose.html) instead.
Ah, right. Thanks!!
You're welcome.
Uhh, one more thing. It seems like I am getting the wrong answer. The first entry should be (0.976 - j0.569), but I am getting [something different here](https://imgur.com/a/ruGiBSi).
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/421hqLQ.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
:)
Honestly the efficiency is so close, and if it is easier to implement that way, then it sounds preferable. I hear you that integration requires the for loop, where/why? 
Great solution. Thank you.
This is very close to what I ended up doing. Thanks.
`j`? You filthy electrical engineer. SHAME. 
Lol
I'm losing you on this thread. I already said you need a for loop to compute indefinite integrals numerically. Like I said you need to create a roadmap for this code and complete bite sized chunks. 
THANK YOU SO MUCH! 
Excuse me in italics.
There is an incremental shift happening. I suppose this by "ht" actually intended to be "is". I had a similar problem years back, but basically from what I recall the transform and inverse transform were out of sync because of the increment on "j". Sorry if this is less than helpful, I just recall it being something of that sort. 
No thank you! I will definitely be looking into this because I did notice a shift. I just thought it could be disregarded since my first step actually worked out. However thinking about it more in depth I think you are correct since when converting to ASCII it is very sensitive and a shift could ruin everything. Thanks a ton! 
y= input(‘ Input a number between 1 and 10’); for i=1:1:10 if 1&lt;=y&lt;=10 I’m not really sure what commands are to be used and the ‘help’ function isn’t very helpful for inexperienced programmers. I know what it [should ](https://imgur.com/a/gMN6Guv) be doing, but I need a push in the right direction.
Don't feel too bad. Y'all are still better than the optical engineers from Arizona. Tracing rays from right to left like **animals**. It's *barbaric*. 
Do you know for loops, how to display text, if statements, and how to store user input? Just use those tools to code each node on your flow chart, and then code the sections to bridge those, and you'll be done. 
I know everything but the conditional statements. What’s the difference between a for loop and an I’d statement?
A for loop is as the name describes: It will do something for i amount of steps. e.g. for a = 1:5 'do this thing' end An if statement is a conditional check where it will do something based on if you meet certain criteria, e.g.: if x&lt;=10 &amp;&amp; x&gt;=1 'do this thing' elseif x&gt;10 x = 10 'give me a smaller number, bad user!' elseif x&lt;1 x = 1 'give me a bigger number, bad user!' elseif [check if x is numeric] % this is bonus points x = 5 'numbers only, bad user!' end Good luck!
Am I on the right track as is?
an if statement runs the next block of code if it evaluates to true, and the else statement if it evaluates to false. a for loop (in matlab) continues trough the vector defined at the beginning, and runs the block of code _for each_ element of that vector. In other programming languages, a for loop might have a conditional statement, but in matlab, I don't think they really do.
RemindMe! 1 day
I will be messaging you on [**2018-12-03 04:59:07 UTC**](http://www.wolframalpha.com/input/?i=2018-12-03 04:59:07 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/matlab/comments/a28et5/least_square_model_nonlinear_model_lotka_volterra/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/matlab/comments/a28et5/least_square_model_nonlinear_model_lotka_volterra/]%0A%0ARemindMe! 1 day) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Yeah, still fuzzy, but since one is shifted left and another right, I think the indexing on j is reverse from forward transform and inverse, with an odd number of indexing with a midpoint between h and t accounting for it. Something like that. I have a buzz now lol, but good luck bro
I wouldn't use i as a variable, as in matlab that is the imaginary number (along with j) 
Defining i as a variable for a for loop should be fine because matlab recommends to use 1i or 1j for the imaginary unit 
Sort of, it looks like you're using some odd terminology, which is fine because you're learning, but hopefully I'm interpreting it right. First off, I would say you should solve the problem without any for loops whatsoever, and then worry about step 5. That should simplify the flow chart you're trying to make a fair bit.
I understand the road map part, do I know where to start? No, but I'll figure it out. I'm asking why indefinite integration involves loop logic at all? If you can tell me why, then I'll have a stronger sense of how to tackle this problem. I understand loops in the context of definite numerical integration because of sampling, I assume.
Can I ask how you would handle this in your code? Or what would be the standard way to handle this behaviour? The function I wrote of course doesn't work, because `exist()` excpects two arguments. function x = check_exist(v) if exist(v,'var') x = y; else x = 'empty'; end end &amp;#x200B; Thank you!
`isempty` is how I would handle checks like this. I'm guessing you come from a compiled language background - you can think of the `isempty` check like checking for a null pointer. The comparison is very apt in this case because your class is a handle. Generally, the code you've written is rather unusual. I doubt many people know that you can restrict the class of properties as you have. If you did not do so, and simply had written properties next prev end then the properties are automatically assigned the value `[]` and you would get an error on attempting to access any of *their* properties, since (for example) `prev = []` does not have a `name` field/property to access. This doesn't change how you handle the situation at all, but it does fail with an error instead of silently with a bug. It's subtle reasons like this that have pushed me away from using features like property restriction: something that seems like it should add safety to the code and catch bugs earlier actually hides the bug all together.
Where to start is writing out all of the equations by hand and then making a plan as to which equations must be computed first. You then connect all of the equations together in a sequence and make a roadmap. Indefinite integrals don't need loops but MATLAB had a hard time computing indefinite integrals anyway. That would be better suited for Wolfram Alpha. Definite integrals could be computed analytically at which point you don't need loops but anything done numerically involves iteration and therefore a loop. 
What do you think? [https://imgur.com/a/l4MNdzM](https://imgur.com/a/l4MNdzM)
I'd say that's a great example of why we don't just apply regression to everything! With data like that, it's hard to tell, but that's why we use least squares. The curve is clearly quadratic, which fits the bill for your prompt's specific test case, so I'd say cut the record and ship it. If in doubt, to test your function, you can make a quadratic (or cubic or whatever order) curve, then add some noise to it, and pass it with the appropriate `n`: n = 3; % pick your favorite x = 1:10; y = x.^(n - 1); errorBar = 2; % adjust noise here y = y + errorBar*(rand(size(y)) - 0.5); yhat = myFunction(x, y, n); % change name appropriately Plot and check! You can read about [rand here](https://www.mathworks.com/help/matlab/ref/rand.html) if desired.
dataset = % this is where you import the data [r,c] = size(dataset) for idx = 1:r xynext = dataset(idx,2:3) connectedindex = dataset(idx,4) xyfirst = dataset(connectedindex,2:3) plot([xyfirst(1) xynext(1)],[xyfirst(2) xynext(2)]) end Makes sense? 
Oh wow! I think I took the longer way. function [a] = myleastregression (x, y, n) i = (length(x)); j = n; MA = zeros(i,j); for j = 1:n MA(:,j) = x.^(n-j); end MX = zeros(n,1); MB = zeros(length(x),1); MB(:,1) = y; MX = (inverse((transpose(MA)) * MA))* ((transpose (MA))* MB); a = MX; yhat = MA * a; plot (x,y,'o', 'MarkerSize',5) hold on plot (x,yhat,'-', 'linewidth',1) end &amp;#x200B;
how do i generate these sine waves? is it in the cross correlation function or separate and how do i perform a matrix to it? 
A couple of notes: 1. The code I posted is for testing your function by generating a new data set for a known curve, not for solving your problem. It's just to make it easy to test if you're getting a good result. If you run the code as-is (after changing the name as noted), you should get a very nicely fitted quadratic curve/dataset which should validate your function's... functionality. I included a couple of 'knobs' for you to twiddle as well, if desired. 2. `inv(A)*X` can be written `A\X`, even if A or X are more complicated; just make sure to use parentheses appropriately. You can read about [how heckin' cool the backslash operator is here](https://www.mathworks.com/help/matlab/ref/mldivide.html#bt4jslc-6). 3. Plot outside the function. The assignment should consist of a script for testing and output, and your function (as a file or as the last thing in your script). You've called it `myleastregression` not `myleastregressionandplottingandstuff`, both because that name is ridiculous and because function should do one thing, and do that thing well. This falls under 'programming best practices'. :) Best of luck on finals!
Thank you so much for the advices! and thank you for sticking through with me for this. Really appreciate! :D
You're most welcome.
Thank you, this is what i did for i=1:32 plot([Data(i,2) Data(Data(i,4),2)],[Data(i,3) Data(Data(i,4),3)],'b') end 
Works. Nice. 
Works. Nice. 
Now just for curiosity’s sake if you don’t know which column is ‘name, age, and gender’ could you use the random function? We haven’t learned the case switch yet, but I wanted to do some practice on my own with codes. 
I've used SPS with 2017b and 2018a, but I can't speak to 2016b's compatibility (though I imagine it's fine). I guess Simscape Electrical is the new version. You say "suddenly it has stopped opening files." Can you be more descriptive? I could imagine a half-dozen ways for that to manifest, with as many causes. For example, you try to open a file from the File menu and nothing happens whatsoever. You try to open it the same way and it begins to open and crashes immediately. You open it and the diagram is blank... etc. Ultimately you may have to head over to [MathWorks' support site](https://www.mathworks.com/support.html).
Oh, I think I understand. You use the for loop, with an ending condition of the end of your domain vector, numerically integrating the function until some variable bound? Is that why we use the loop?
Also, I’d recommend using “1j” instead of “j” incase you ever declare j as an index variable or something
Yes exactly. For example. Say you want to integrate x^2 from 0 to 50. You could integrate like this using a reimann sum. s = 0 dx = 0.1 for x = 0:dx:50 s = s + dx*x^2 end 
Got it, that makes alot of sense! Any other advices that might help?
Don't code this all at once. Start small and add complexity slowly. 
It's hard to digest this code in this format. The only thing I can offer is that your approach (using so many conditional statements/loops) is going to be very hard to track and will be prone to a lot of debug time. I think a better approach would be for you to read up on logical indexing + a bracketing approach for the ranges.
Agreed, I can't really look at it like this. But from what I see, there's almost certainly a better way to do this. If you could post your code in a more readable format, that might help.
I have included a screen shot 
I included a screenshot
Put a [breakpoint](https://www.mathworks.com/help/matlab/matlab_prog/set-breakpoints.html) on line 11, then call your function with either of your two failing cases. Step through the code using the buttons at the top of the editor window, checking to ensure your conditionals are doing their jobs. You will definitely find the error this way, as you will see exactly which conditions are true at each step, and how they each contribute to the final answer. You will probably find that there is a gap in ranges or a missing condition, or that your data is formatted improperly in some way. Best of luck.
Format your code, and fix the errors in the screenshot.
Is doesn’t say there is an error. The filterpatients part is red bc of spelling 
It worked for the first command just not the second 
I don't think it's spelling. The filename is probably different from the function name. And by formatting your code: "Lines starting with four spaces are treated like code". So edit you post, so it's easier to read.
put a breakpoint on the line, and inspect the variable sizes involved in the expression: `whos y_Eul phi h`
no the filename and everything is correct. As stated above when I type disp(filterpatients\_cell( ... {'name' 'gender' 'age'; ... 'mary' 'f' 25; ... 'john' 'm' 35; ... 'anna' 'f' 30; ... 'paul' 'm' 22; ... 'elaina' 'f' 38} )); in the command window my output is 'Anna' Elaina' which is correct. &amp;#x200B; when I type disp(filterpatients\_cell( ... {'gender' 'age' 'name'; ... 'f' 37 'mary'; ... 'm' 35 'john' } )); &amp;#x200B; the answer should be Mary. but it says there is a problem in the last line. That is because my code is set up for me knowing the order of "age, gender, name" but I need to set it up where I can type in any arbitrary order ie "gender, age, name" and get the output. I just don't know how to set it up that way
you call the code with "filterpatients_cell" but in your screenshot it's called "filterpatients". So... Anyway, take the minimum effort at format the code in your question, and then it'll be easier for us ti help.
%DATA: Generates synthetic data to test predator prey % must define H, L, and years &amp;#x200B; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % User Defined Values &amp;#x200B; % Data &amp;#x200B; %Summer = \[30 47.2 70.2 77.4 36.3 20.6 18.1 21.4 22 25.4 27.1 40.3 57 76.6... %52.3 19.5 11.2 7.6 14.6 16.2 24.7\]; %Winter = \[4 6.1 9.8 35.2 59.4 41.7 19 13 8.3 9.1 7.4 8 12.3 19.5... %45.7 51.1 29.7 15.8 9.7 10.1 8.6\]; guess = \[1; 2; 3; 4\]; &amp;#x200B; % % End of User Defined Values %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% &amp;#x200B; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Synthetic Data Parameters &amp;#x200B; % initial time t0 = 0; % final time tfinal = 20; % initial Summer and Winter value init\_cond = \[30, 4\]; &amp;#x200B; % End of Synthetic Data Parameters %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% &amp;#x200B; y = ode45(@lotka, \[t0, tfinal\], init\_cond); &amp;#x200B; fun = @(p)\[p(1)\*y(1)-p(2)\*y(1)\*y(2);-p(4)\*y(2)+p(3)\*y(1)\*y(2)\]; &amp;#x200B; &amp;#x200B; % gnoiseh = ht.\*randn(size(ht)); % gnoisel = lt.\*randn(size(lt)); % %H = ht + gnoiseh; % %L = lt +gnoisel; % H = ht; % L = lt; &amp;#x200B; Summer = y(1); Winter = y(2); &amp;#x200B; options.Algorithm = 'levenberg-marquardt'; p = lsqcurvefit(fun, guess, y, \[Summer; Winter\]); p &amp;#x200B; function value = lotka(y, p) value=\[p(1)\*y(1)-p(2)\*y(1)\*y(2);-p(4)\*y(2)+p(3)\*y(1)\*y(2)\]; end &amp;#x200B; &amp;#x200B; &amp;#x200B;
My apologies, I have corrected it in the thread and in my code :)
where would I use dbstop ? I'm my script project_2 or in eul_sys?
do it in the command prompt before running your script https://www.mathworks.com/help/matlab/matlab_prog/set-breakpoints.html#buxup99-1 
OK I'm in debugging mode, and I'm getting the same error in the command window. Matrix dimensions must agree. Error in eul_sys (line 40) y_Eul(i+1,:) = y_Eul(i,:)+phi.*h; % update dependent variable (solution) Error in project_2 (line 17) [ t_Eul , y_Eul ] = eul_sys( @dydt_sys , tspan , y0 , h ); 40 y_Eul(i+1,:) = y_Eul(i,:)+phi.*h; % update dependent variable (solution) when I look at line 40 in eul_sys it indicates y_Eul = [ 0 0 0 0 ] and so is phi, h looks right. I have declared the initial conditions for y to be: [ 0 0 0 0 ] in the main script. I don't know if the values for y_Eul and phi that I'm seeing are correct or not. 
So your first row tells you which coloumn is which (gender, age, name). So use index_gender=find(contains(x(1,:),'gender')); to find the coloumn for gender, and similar for the others. Then change the 2 (on the right) in isfemale = [x{2:end,2}] ... to index_gender, and so on. Then you can also skip the x([false, isfemale &amp; isrightage],1); and just use the coloumn for index_name instead. Hope this works and makes sense.
I dont know the meaning of any of the variables, but since you're using `y_Eul(i,:)` to access it I would guess that it's supposed to be a 2d matrix not just a vector... So you should work your way back in the script and locate where `y_Eul` turned into a vector instead of being a matrix. (i.e place breakpoints at earlier lines and trace it step by step until you find the offending code)
You need to apply Laplace transform to your differential equation. The transfer function is ratio of the Laplace transform of the output signal to the Laplace transform of the input signal. If you want the to draw Bode plot then you will also need to calculate the magnitude and phase from the aftermentioned transfer function.
also what is the output of `whos y_Eul phi h`? these variable must have the correct dimensions for the expression to make sense: - `phi*h` this is matrix multiplication, i.e `size(phi,2)` must be equal to `size(h,1)` - `y_Eul(i+1,:) = y_Eul(i,:)+..` for this assignment to work, the variables must have the same size, i.e `size(phi*h)` must be equal to `size(y_Eul(i,:))`
If you're solving ODEs and Phi and h are what I think they are, you likely want to use "*" ("real" matrix multiplication, where number of columns in the first factor most match the number of rows in the second) not ".*" (element-by-element multiplication, where the size of both factors much match). I agree with using "dbstop if error" to see what the matrix sizes are. You'll want to think through the math on paper with just matrix sizes to know what size of matrices you expect; sometimes output from built in MATLAB functions are transposes of what you actually want for certain ODE methods. One warning that has been a source of problems for me with "dbstop if error": know matlab will then continue to go into debug at any error in the function it occurred (e.g. within built in functions you don't care about troubleshooting). Just be conscious of when you want to check values/algorithms within a function and when you want to stop debugging and just work in the main workspace. 
Yo dude/dudette, If this post doesn't work out for you, you can try just googling your project. There are a lot of resources online. Try Mathworks.com or Googling "MATLAB Cody"; its a huge website filled with tons of MATLAB programs and functions for different problems. The catch with Cody is that you don't have access to other people's answers/code unless you provide your own code for the specific problem. Still, if your project is general/popular enough (eg. double-pendulum), you should be able to find something online. Hope things get better for you academically and otherwise. Try getting on some medication for the ADHD. Most universities have resources for getting a script for something like that. I used to be like you, and meds have helped my GPA greatly. 
`function patientname = filterpatients_cell(x);` `index_gender=find(contains(x(1,:),'gender'));` `index_name=find(contains(x(1,:),'name'));` `index_age=find(contains(x(1,:),'age'));` `isfemale = [x{2:end,index_gender}]=='f';` `isrightage = [x{2:end,index_age}]&gt;=30 &amp; [x{2:end,index_age}]&lt;=40;` Is this the right direction? Would I have the patient name = to the indexes in {}? &amp;#x200B; thank you again for your help! &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B;
I believe y_Eul already is a 2d matrix. In the command window: K&gt;&gt; whos y_Eul Name Size Bytes Class Attributes y_Eul 1x4 32 double K&gt;&gt; whos k1 Name Size Bytes Class Attributes phi 1x4 32 double K&gt;&gt; whos h Name Size Bytes Class Attributes h 1x6 48 double Do you think it has to do with multiplying h and phi? Incompatible matrix dimensions? I'm not sure how'd I fix this because this was given to us. 
Thanks for the answer, I guess I formulated my problem wrong maybe. I know the tf is out/in but I have a hard time understanding how you write for example L\* di/dt.
L* di/dt would be L * s* I(s) if you don't take into account initial conditions
please see me comment below about matrix dimensions. I'm not sure how I could change them.
X = laplace(L\*diff(y)+R\*y)+(laplace(y)/C)\*laplace(heaviside(t)); X = subs(X,{laplace(y(t), t, s),y(0)},{ly,0}); H = simplify(solve(X==laplace(dirac(t)),ly)); pretty(H) This code gives us laplace(i(t))/laplace(Vc(t)) apparently, we need laplace(Vc(t)/V) =/ Do you know how to fix this?
well technically there is no 1d vectors in matlab `ndims`is always at least 2. What I meant is that `[m,n] = size(y_Eul)` where both m and n are greater than 1. `y_Eul(i,:)` and `y_Eul(i+1,:)` are accessing **rows** of a matrix, so I would look carefully at why `y_Eul` is just a vector not a matrix.. Also you just introduced the variable `k1`, is that supposed to be `phi`? 
yes, k1 is phi... sorry for the confusion.
&gt; x([false, isfemale &amp; isrightage],1); Sorry, I didn't look enough into this part. You should probably keep it, just exchange the 1 for index_name
Try to substitute given integral equation in the form I(s)/(C*s) = Vc(s)
in that case you cant multiply the two, neither `phi*h` nor `phi.*h` is correct. If you supplied those variables directly, you probably assigned the wrong input, otherwise you'd have to trace step by step to see where these variables got assigned in the code, and how they relate to the function inputs you gave.
Thank you for trying to help. Do you mean like this? X = laplace(L\*diff(y)+R\*y)+ laplace(y)/C\*s; We know the answer but can't really reproduce the calculations and answer in matlab.
I haven't looked at your code, but something like this: &gt; https://stackoverflow.com/questions/11855011/plot3-line-color-based-on-value
Thanks, I’ll try this. 
Thank you, I really, really appreciate it. 
At the moment I do not have access to Matlab so I cannot provide the correct code :(
Could I not approuch this from a modular strategy, and create the code for one of the functions, and then when I want to generate the data, I would just call on the functions, pass them in to some general expression? I figured I could approuch the problem like this since each of the integrals can be viewed as following the same format, and then just nesting them as I create them so nothing is undefined?
Ok, you get access any time soon?
Yea that would work too. Build one function at a time. 
Nevermind, I found the issue. In case anyone stumbles upon this thread, the problem was that the function handler that is supposed to be passed into lsqnonlin expects a difference. If my data is in variable y and the model is y = ax + b, then the function passed into lsqnonlin should be fun = ax + b - y parameterized on a and b. 
When you say build, what do you mean? I have the expressions composed well enough for mathmatictian, if that is what you mean? Or do you mean for me to compose the functions as files, and build them separately there, and then pass them in and run?
The web page content is dynamically loaded by javascript, which is why you're not seeing it when you use wget. It's easier to visit the web page, right-click, select "view page source", and copy-paste the data into a text file.
I mean build as in code. 
Thank you man
I'm not aware of a function that will do this, but you could run a loop through the matrix that does this.
I’d loop through row by row. On phone so I can’t test if it works but something like: Assuming A is your matrix ctr=1; for i=1:size(A,1) if ~any(isempty(A(i,:)) B(ctr,:)=A(i,:); ctr = ctr+1; end end
thanks a lot. what is ctr doing here？ 
i dont know how to check if a cell is empty
https://www.mathworks.com/help/signal/ref/envelope.html
The maximum absolute value of sin(x) is 1. -10 is a constant. Therefore, your function is bounded below by the product of -10 and your exponential, and bounded below by the the negative of the lower bound: |y| ≤ 10e^(-x/2)
Got Simulink? I'll PM you one of my lab assignments, maybe it'll be what you need.
The Hilbert transform is closely related to the FFT and assumes periodicity. That's your fundamental issue, and using the built-in `envelope()` function in Matlab will give you the same poor results e.g. try clear all x = linspace(0,6) y = -10*(exp(-0.5*x)).*sin(6.5*x+11) plot(x,y) Y = abs(hilbert(y)) hold on plot(x,Y) plot(x,envelope(y)) Basically, because your time series isn't periodic, the discontinuity in the end points manifests as ripples at the edges of the envelope. In frequency analysis, this is often overcome using a window function e.g. a Hamming window, which basically forces the amplitude to smoothly decay to zero at the ends of the time series, making it periodic and minimizing artifacts in the frequency domain. In your case, you can't take that approach, because doing so would change the amplitude envelope. Instead, you could make your time series somewhat more periodic by reflecting it about the origin (having it decay in the same way for negative x values) before doing the envelope calculation. For example: x = linspace(-6,6,1000) y(x&gt;=0) = -10*(exp(-0.5*x(x&gt;=0))).*sin(6.5*x(x&gt;=0)+11) y(x&lt;=0) = -10*(exp(0.5*x(x&lt;=0))).*sin(6.5*x(x&lt;=0)+11) plot(x,y) Y = abs(hilbert(y)) hold on plot(x,Y) set(gca,'XLim',[0 6]) It's not perfect because the exponential envelope doesn't have a continuous gradient at 0 (i.e. the exponential suddenly changes from `exp(x)` to `exp(-x)` at `x=0`) which is why you don't exactly reconstruct the envelope close to `x=0`) but that largely eliminates the ripples. You couldn't do it for sampled data, but if you're just synthesizing your y-values, then you could extend the time series further e.g. out to `linspace(-10,10,1000)`if you want to smooth out that final dip as you approach `x=6` which gets effectively over-fitted when you truncate the array at `x=6`
You could try a logical vector that'll return the index of each empty loop. Then with some arithmetic, you can convert those index numbers into row numbers, and delete those rows from the matrix. I can't think of a lone function that'll do that though. For/if loops or a logical vector seem like your 2 options. 
I've never used Simulink before, but I have the Student Version of MATLAB. Does it have it by default?
http://ctms.engin.umich.edu/CTMS/index.php?aux=Home Modify model/controller as necessary for your problem. Several examples in there which have the background theory if you need it.
This is great! Thank you so much I added Z = -abs(hilbert(y)) and plot(x,Z) to get the envelope for the peaks on the negative side. Not really sure if that's the right way is to say that.. but thanks again!
You're welcome!
If your student licence included it, I believe it would have been checked by default when you installed it. Do you see a Simulink button in the Home tab in Matlab?
That whole website is a gold mine highly recommend 
R is better for visualization but Python's syntax is easier to understand...it comes down to preference in the end.
In my experience, you can code pretty much anything in Python as you would in MATLAB. The syntaxes are similar enough that the learning curve is not huge (except for data plotting and visualization, Python can get tricky). Also, from what friends tell me from industry, Python is very popular because it’s free. It also has a lot of support, so you can pretty much google any question and get some answer. I think you should learn it just go get some experience with a different language. That and it gives you an extra skill to show off.
Unfortunately, I don't see it. I even checked under "add-ons", and it doesn't show up. Is there any other way you could send it to me?
What happens when you try to run the command "simulink" in the matlab console?
It says "To use 'simulink', the following product must be licensed, installed, and enabled: Simulink" &amp;#x200B; Is there any other way you could get it to me?
Ah yeah, sounds like you didn't install it when you installed matlab. Did you [buy](https://www.mathworks.com/academia/student_version.html) the 49$ version or the 99$ version of matlab? If you bought the latter, you can just reinstall matlab from scratch and select all the toolboxes when prompted. Otherwise you will have to buy it, I think its $10 to add it to an existing student license. You probably also want to buy the control systems toolbox for another $10
Python is free. MATLAB is expensive.
You could try using the findpeaks function, and do a polynomial fit to the points it returns.
Does that actually work in ode45? I'd be surprised if it does, the way those if statements are written. I'm pretty sure the function you feed to ode45 needs to take and return vectors. Did you test it out to make sure it's producing the correct output before running ode45 with it? 
I did not test it, but the graph that it produces is reasonable and makes sense. How can I test it?
Run it and see if it produces the correct output? It's a function just like any other. You can call it outside of ode45. 
I am very new to Matlab, so I'm not sure how to do this. But is there a way to use fzero with an ode function like this?
Hi, I've tried to implement your assignment in Matlab with Laplace functions but unfortunately I was not able to do so in a satisfactory way. In return, I prepared a manual solution, which I put on the screenshot. I hope this will help.
Use isempty on each row to see if there are any empties to co trust a logical array. Then use that to make your truncated array. Somethings like this: for nrow = 1:size(myarray,1) if any(isempty(myarray(nrow,:))); ind(nrow,1) = true; else ind(nrow,1) = false; end end Then truncate your array. truncated_arraymyarray(~ind,:);
Thanks, can't see the picture though :(
MATLAB has only one advantage over python...it is its simple syntax for handling matrices....in all other aspects python is definetely better......once u are out of University no way u r gonna afford MATLAB if u want to do something on ur own.... 
When you say "h looks right", from below it looks like it is a 1x6. And you say y_Eul and phi are both 1x4. You may need to post the original question and/or more of the preceding code to get any more help, as the error must be in an earlier part of the code. Phi and h, as they are, can't be multiplied (either as matrices, since the dimensions don't work, or by-element since they have a different number of elements). Additionally, y_Eul must be wrong, as (for any value of i) y_Eul(i+1,:) and y_Eul(i,:) are referencing different rows which can't happen for a 1x4 (i.e. an array with only 1 row).
No. But you may find a pretty good estimate by inspecting the y values: [y0, i] =min(abs(sol.y(2,:)); t0=sol.x(i) 
Peak finder function then use the points generated as the inputs to polyfit
Matlab has a build in PID function "pid". I'm not familiar with it, but you could try looking into it with "edit pid". Good luck.
You look like someone who needs to hear about [gramm](https://github.com/piermorel/gramm), it works in 3D and you'll be able to have a dual colormap (for example color with condition and lightness for something else !). Bonus fact, it has a few functions just for neuroscientists!
The code looks fine. You can see in the rkl variable that there are semicolons. That means they are vectors. To find the numbers you are looking for just plot it and then use the cursor to estimate the value. If you get two points on either side you can use linear interpolation
My recommendation would be to download Octave if you want to learn MATLAB. MATLAB is the matrix laboratory for a reason but python can now run on embedded processors from Adafruit using something called circuit python. Python is way more portable to different computers can link with Fortran code using f2py and even make executables using py2exe. You can even you Qt designer and PyQt to make GUIs. As everyone said though MATLAB is $500 after you graduate. Learn python and you'll be able to code for free forever. 
Python is free. MATLAB is cheap.
You could try `lsim` https://www.mathworks.com/help/control/ref/lsim.html and work with a ramp defined by you, probably using `linspace`.
Is there any other way, at all, you could get it to me?
I would highly recommend Python. First, exposure to programming is the most important thing. Once you learn a language it's easier to pick up your second etc. With this in mind, I'd learn the more powerful one, and Python can do a lot. The reasons I'd choose Python are. 1. Python has robust frameworks for website (django, Flask, Sanic), data visualization (matplotlib, Jupyter), data science (pandad, numpy) and so much more. 2. Python is free, Matlab is only free while you're a student. I work at a major aerospace company and they're realizing that 15,000 a seat is too much for Matlab and are pushing Python now. 3. Python is viewed as a major language, the companies using Python are numerous, YouTube, Instagram, CERN, 3Blue1Brown, DropBox to name a few. 4. To expand on 3, if you apply for a job that uses Matlab but know Python, it's reasonably to expect you to easily transition, I wouldn't say the inverse is necessarily true. 
I recommend Python. The short version is that going from Python to MATLAB is better than going there other way around. Python is a general-purpose language covering a wide range of programming styles and that encourages good programming habits. It is easy to switch from Python to almost any other language, including MATLAB, and you will likely have picked up good habits that will serve you well in other languages. MATLAB, on the other hand, is built around a single style or programming, matrix-oriented programming. Although it supports some other styles of programming (although not as many as Python), these were tacked-on later and are clunky and don't work very well. So it strongly encourages you to some every problem the same way rather than letting you pick the approach best suited to the problem. It also discourages many good programming practices and encourages many bad ones. So it is much harder to switch to another language that MATLAB, and when you do you will have to unlearn all the bad habits MATLAB taught you. Overall, learning Python will not just make your a better programmer, it will make you a better MATLAB programmer. By comparison, learning MATLAB will not make you a better programmer in any other language, and learning it first will likely make you a worse progtammer. That is not to say MATLAB is bad at what it does. It is excellent for matrix math. But matrix math is not the best solution to every problem, and it is a downright bad solution to many problems.
MATLAB is cheaper only if you are a student. 
It’s also cheap if it’s not for commercial use. And hay if it’s for commercial use the company pays for it l.
$150 with none of the toolboxes. And not all companies are willing to pay for a commercial license.
If companies don’t are not willing to give employees proper tools then they are not worth working for.
I've done some communication between Matlab and various scientific instruments. Matlab has ready implementation of TCP and UDP servers and clients. It's a bit clunky, but workable. Alternatively, Matlab is capable of loading (but not unloading - well, unless you close Matlab) .NET DLL files, if you want to make a custom client and/or server.
use Matlab, if you can get access to Matlab. Especially if you coming from Engineering or Scientific background. What you want is to get your math/computation/method correct. I can never properly get Python and all those fancy library to work, sometime it won't installed because version miss match, or other dependencies miss match. It get me frustrated. Oh yeah, you may say, use Anaconda or Canopy, I tell you, my experience says otherwise, Anaconda or Canopy doesn't solve this dependencies issues. 
First, people don't always have that sort of flexibility. Second, MATLAB often isn't the proper tool for a job.
If its not the right tool then don't use it. If its the right tool then its cheap so don't let the price stop you. 
First, again, $150 for bare-bones is not cheap by most peoples' standards, and a commercial package is steep for many companies when there is something else that will work reasonably well (I know there isn't always). Second, when all you know is MATLAB, it looks like the right tool for many things where it isn't. 
&gt; my experience says otherwise, Anaconda or Canopy doesn't solve this dependencies issues. They are both literally self-contained sets of packages tested to run properly together. What dependency issue do they not solve that MATLAB does?
Again. $150 is cheap as far as I am concenred, and thats the only way I can comment. Again, secondly, £4k ish is not expensive for a SME. I can repeat myself again if you would like? If Matlab is the right tool for the job its cheap so you shouldn't let price stand in your way. 
&gt; $150, which is pretty steep for a program these days Are you high? Do you have any idea what it costs to legitimately license the software for an engineer for a year? It's more than $150, I can tell you that. Try 3 orders of magnitude higher.
That is the home edition, which can't be used for commercial purposes or by any organization and has no toolboxes.
Python has a superior syntax (debatable). Tools like PyCharm are fantastic and very mature at this point. There is also a ton of libraries that can augment whatever you are doing. The difference is that MATLAB is the superior tool for a large number of tasks. Anything that has to do with signal processing, communications, controls, etc. can be done in both, but will be done quicker in MATLAB. The maturity and quality of their toolboxes makes many relevant tasks trivial. I know how to design a FIR filter by hand, but why would I when MATLAB does such a fantastic job? The other thing is that MATLAB has a cleaner and easier to use plotting syntax. Plots in MATLAB just work. Python can do it, and has a bunch of cool libraries for it, but you are going to screw around getting it going. Again I can figure out how to setup the backend of the python plotting library, and write my own if need be, but why would I when MATLAB does such a fantastic job? Finally, Python is Free as in beer. So the question is why not both? If you are new enough to programming in general that the idea of learning both seems daunting then I would suggest going with Python. You should take a CS sequence as well. Don't graduate without one even if you are an EE and they tell you one semester of MATLAB is enough. It isn't, and even Mechanical or Systems guys will benefit tremendously from a strong background in programming fundamentals.
At this point the plotly library is nearly on par with R. R continues to be the superior tool for statistical analysis. That being said, while I think it's cool, if someone suggested we write anything major in a functional language I would assume they are an idiot. 
There are still a ton of corner cases that require you to screw around. It's not that it's impossible, or even difficult. It's just yak shaving. Why do it when MATLAB doesn't require it? 
I'm mechanical with a cs minor and the programming and algorithms classes are both in my top 5 most useful classes I've taken.
Awesome read.
Thanks! This is part of a series on the 3-Body Problem on my website. I don't always write about astrodynamics. Sometimes I write about the design behind everyday things, other times about numerical methods. Aka stuff that isn't astrodynamics, but if you find this post cool, you'll probably also find cool. I have a subreddit where I post everything at [r/Gereshes](https://www.reddit.com/r/Gereshes) so you never miss a post! 
I was very interested in this writing and some other articles I saw, I will read some over the weekend. I have dealt on these issues myself before, and have done some research. I even did build a small model rocket haha. So yeah, I will be following your writing closely.
There is no difference. It's just personal preference. Simulink gives you alot of control to be as creative as possible
I'm telling you, that shit is practical.
Eh for "home use" there are ways.
Try this `% Define variables` `N = 10; % no. nodes` `xmin = 0; % lower bound of x` `xmax = 1; % upper bound of x` `t = 0; % time variable` `tmax = 0.1; % max value of t` `alpha = 1; % heat diffusion coefficient` `% Discretise the domain` `L = xmax - xmin;` `dx = L / N;` `x = xmin : dx : xmax ;` `% Calculate initial conditions` `u0 = exact_sol(x, alpha, L, t);` `u = u0;` `unp1 = u;` `% Calculate timestep` `dt = 0.9 * dx^2 / (2 * alpha);` `% time loop` `while t &lt; tmax` `% Ensure t does not exceed tmax` `dt = min(dt, tmax - t);` `% Calculate boundary conditions` `u(1) = 0;` `u(end) = 0;` `% Calculate one step of FTCS scheme` `for i = 2 : N` `unp1(i) = u(i) + alpha * dt / dx^2 * (u(i-1) - 2*u(i) + u(i+1));` `end` `% Update u, t and n` `u = unp1;` `t = t + dt;` `% Calculate exact solution` `uexact = exact_sol(x, alpha, L, t);` `% Plot solution` `plot(x, u0, 'r--');` `hold on` `plot(x, uexact, 'r-');` `plot(x, u, 'o-', 'markerfacecolor', 'b');` `hold off` `xlabel('$x$', 'fontsize', 16, 'interpreter', 'latex')` `ylabel('$U(t, x)$', 'fontsize', 16, 'interpreter', 'latex')` `title(sprintf('$t = %1.3f$', t), 'fontsize', 16, 'interpreter', 'latex')` `shg` `pause(0.01)` `end` `legend('initial conditions', 'exact solution', 'numerical solution')` `% =========================================================================` `function u = exact_sol(x, alpha, L, t)` `% This function calculates the exact solution for the heat diffusion` `% equation` `u = sin(pi * x / L) * exp(-alpha * pi^2 * t / L^2);` `end % function exact_sol`
 % Define variables N = 10; % no. nodes L = 1; % domain length t = 0; % time variable tmax = 0.1; % max value of t alpha = 1; % heat diffusion coefficient % Initialise arrays dx = L / N; x = xmin : dx : xmax ; u0 = sin(pi \* x / L); u = u0; unp1 = u; % Calculate timestep dt = 0.9 \* dx\^2 / (2 \* alpha); % time loop while t &lt; tmax % Ensure t does not exceed tmax dt = min(dt, tmax - t); % Calculate boundary conditions (Dirichlet) u(1) = 0; u(end) = 0; % Calculate one step of FTCS scheme i = 2 : N + 2; u(i) = u(i) + alpha \* dt / dx\^2 \* (u(i-1) - 2\*u(i) + u(i+1)); t = t + dt; % Plot solution plot(x, u, 'r--'); xlabel('$x$', 'fontsize', 16, 'interpreter', 'latex') ylabel('$U(t, x)$', 'fontsize', 16, 'interpreter', 'latex') title(sprintf('$t = %1.3f$', t), 'fontsize', 16, 'interpreter', 'latex') shg pause(0.01) end
Anytime
Unfortunately no, it's not something you can bundle up and send. Short of buying it, you could always download the free trial on mathworks. 
I meant your code, not Simulink.
This is an OS question, and not something to do with MATLAB. I'ts *possible* that the matlab.ico file didn't get installed, but quite unlikely. A Google search for 'taskbar icon' brings up several good results. It's basically a matter of right-clicking stuff until you find the properties and the place where you can "Change Icon". No guarantees on your system security policies allowing the change to stick!
I tried to change icon through clicking on the properties but it didn’t work, but my hunch about it being related to security(which is itself is OS) seems to be correct. I wasn’t actually expecting a solution I was just curious and you satisfied my curiosity 
Glad to help. You can be triple sure by checking your install directory, in &lt;installDir&gt;\bin\win64 (or &lt;installDir&gt;\bin\win32 if using the 32-bit version) for matlab.ico. If it's not there, then hey, somehow the installer messed up. If it is, you are completely vindicated. :)
I don't know the specifics of the model that you are trying to control, but as long as it is a single-input single-output(SISO) and linear time-invariant(LTI), designing a controller for it should be relatively simple. If you have your model in the form of a transfer function or state space object, you can run the command: pidTuner(SYS, 'PI') where SYS is your system and PI defines the controller type as Proportional-Integral. This will bring an application with a couple of sliders to adjust the gains until you get a desirable response, then export the gains.
If anyone figured this out I would be ecstatic.
There is no difference in how the code executes. But in terms of neatness, I would always use the gain block as it makes the model cleaner and easier to look at
Thanks, makes sense!
Thanks! true, I tend to use the gain block, was wondering whether it might slow the code down or speed it up wrt constant source and a product operator. 
It thinks most of my vectors are 1x4. So it seems it updated the lengths of some, but not others maybe? I don’t know, it’s an odd occurrence. Many are 6x9 or 6x10 but it still says it’s 1x4. Sizes even show up correct in the workspace, but not on the command window 🤷‍♂️
Can you show the code you're using to make these vectors and matrices? If it's what you're describing, it's just a weird bug in MATLAB, but more likely you're not doing something you think you're doing. Show us the code you're running (either formatted here) or in pastebin. 
Code please 
hang on...
So I stupidly used the wrong syntax for the size function, so it doesn't think they're 1x4, however, I still get an "index exceeds matrix dimensions error". I am plotting ***x***, a 1x9 vector, versus ***y***, a 6x9 matrix, varying the colors, using the following for loop color = {'k' 'g' 'b' 'r' 'm' 'y' 'c' 'k' 'g'}; &amp;#x200B; for i = 1:9 h = plot(***x***, ***y***(i,:), color{mod(i-1,9)+1}); set(h, 'Marker', 'o') set(h, 'LineStyle', '-') set(h,'MarkerFaceColor', color{mod(i-1,9)+1}, 'MarkerEdgeColor', 'k'); end
Indexing is `(row, col)`. When you get to the 7th row of `y`, since `y` is 6x9, you are out of luck. Hope that helps!
I've been reading your posts for a while now and I must say I love your content!
I assume the teacher just want you to program the filtering of the image by yourself... Just a matter of four loops, probably less if you vectorize things. 
Ah! Derp. Perhaps I transposed something earlier. I'll need to scour. Thanks!
You're most welcome.
Thanks!
Minor addition: One difference is in the numerical storage of the number. Dividing by a number is not the same as multiplying by its inverse due to data storage in memory. If you work with 64bits floating point numbers, you will probably not notice any difference. If you work with more restricted target, then you may experience issue. Try this: fprintf('%.5e\n',0.1+0.1+0.1-0.3) 
Oh got it, yeah give me a couple of hours and I can dig up a cruise control pid loop I wrote a while back. 
Thanks! I'll give this a go tomorrow.
Check out the documentation for xlsread, when you only have one variable returned, it won't read text or raw data from the sheet, only numbers. Perhaps if you used all three output variables [num,text,raw]=xlsread () you can pull your missing pieces.
You need to specify a sheet before you specify range. i.e. &amp;#x200B; temp = xlsread('weather.xlsx','your\_sheetname','C3:C11');
First, you're way more likely to get someone to help you if you copy out your code and paste it on here so that we can copy it ourselves without having to retype it all from scratch. If you are going to ignore that and post a picture of your code, at least take a screenshot instead of posting an actual photograph of a screen, which is harder to read and and cuts off the edge of the function. Next, whether you post your code, or a screenshot, or a picture, or whatever, you need to give us more details about what's going on than what is in the title only. Are you saying that the variable \`temp\` is size 1 by 1, and only contains the value from cell C3 of the excel file? Or are you saying that the output of your function only has the C3 value? (well, your function has no output, so I guess that's not exactly the case). Since your function has 2 embedded menus, you'll also have to tell us what the variable choices you made when you run it, so that we can parse out where you are in the if statements to figure out what's happening. I'm guessing that you are running the code exactly as written. You select "Temperature" from the first menu (so \`weather = 1\`), and then you select "max" from the second menu (so \`temp=1\`). Then your command line spits out the values of \`temp\_disp\` and \`final\_temp\_disp\`. These are both size 1, and consistent with cell C3 of your excel file. I also guess that you've looked at the excel file, and that there is data in all of the cells from C3 to C11. I think that's a reasonable guess about what's happening, but because you didn't tell us anything, all it is is a guess. These are the types of things that we need to know. Assuming that I'm correct in my guess, it's very obvious what's going on. Your code is working exactly as you've written it. You are successfully reading all of the data from excel into the variable \`temp\`, so \`temp\` is size 9x1. You are then letting \`temp\_disp = temp(weather)\` to print to the command line. What do you expect to happen here? If \`weather = 1\`, then this is the same as writing \`temp(1)\`. Do you know what that does? If not, you need to read more about *indexing*. Your code has a lot of issues and poor practices in general, but since it looks like a work in progress, I'll chalk that up to the code being incomplete. I won't spend the energy going over it all. &amp;#x200B;
Just tell me when it's ready, and I can PM you my email address.
It's not the root cause fix, but once it happens you can squeeze () your data to make it back into a normal array.
Have you had a closer look at the elements of 'number'? 
I'm not sure what you mean? 
You're going to want to invoke the 3rd output from xls read and do a cell conversion after you've identified the 'F' people. The first output on xlsread is going to drop any row that doesn't have numbers... (If I recall correctly).
Edit: you're doing it partially right. Where you might be going wrong is how you're trying to index 'r', I assume. Instead of using length, use size (I'm assuming data is xny dataset).. also cycle through the correct column of r (currently you're not specifying the column). Finally, instead of using a loop, you could do this in a couple of lines just using logical indexing. The example Excel file link is also broken.
&gt;http://sacan.biomed.drexel.edu/ftp/bmeprog/crps\_data.xlsx when you click the excel link it should automatically download on your computer
Doesn't work on mobile, sorry. Anyways, my points stand. If you could post a screenshot, I could try to.type.out what I mean quickly on mobile with Matlab code.
I added a screenshot of the file on there! Thank you so much for helping 
This might be a bit freestyle since I'm on mobile.. I'm trying to preserve your o.g. code while also making it do what you want and teaching along the way. Keep in mind you can do this a couple of ways. iC1 = 1 %crsp column index iC2 = 3 % gender column index iC3 = 7 % pain column index S1 = "CRSP" S2 = "F" % note you could also search for these columns if they change positions but are consistently named the same [~, ~, r] = xlsread(filename w. extension); C1 = r(2:end, iC1); C2 = r(2:end, iC2); C3 = r(2:end, iC3); L3 = (C1==S1) + (C2==S2); M_Pain = mean(C3(L3==2)); Try the above... You could make it more robust if you are worried about non-numeric entries like you tried in your o.g. example. Also, note I haven't actually tried this since I'm on mobile so it could not work.. but the general idea should be fine. Good luck!
Have you tried to find the error or do you expect that someone here does all the work for you? It's seems that the variable *painscore*is too high, so have a look at the next variable which comes at input for the mean function and so on... 
so I tried it that way but ended up with this message &gt;&gt; crps_averagefemalecrpspain('crps_data.xlsx') Error using sum Invalid data type. First argument must be numeric or logical. Error in mean (line 127) y = sum(x, dim, flag) ./ mysize(x,dim); Error in crps_averagefemalecrpspain (line 20) painscore = mean(C3(L3==2)); for reference this was the edited code function painscore = crps_averagefemalecrpspain(filename) iC1 = 1; %crsp column index iC2 = 3; % gender column index iC3 = 7; % pain column index S1 = "CRSP" ; S2 = "F"; [~,~,r] = xlsread(filename); C1 = r(2:end, iC1); C2 = r(2:end, iC2); C3 = r(2:end, iC3); L3 = (C1==S1) + (C2==S2); painscore = mean(C3(L3==2));
Note, looking over the above, you may need to convert C3 to numbers from cell before moving forward. Let me know if the above sets you on the right path.
I'm not sure what you'd use fzero for. To call a function you just call it. Like f3(0:55, y) ... for some reasonable values of y. Then look at the results and see if they're correct. You'll never find the solution of the ode if the de itself isn't right. Once you have a solution you can figure out where it equals whatever you like by interpolation or whatever you want. There may also be some options to ode45 that will let you specifically find certain critical points. I don't remember, but the documentation will tell you. 
Trying to undo the formatting carnage from extra lines between numbers, I'm guessing #2 is: &gt; Create a vector containing the values of theta2 required for the simulation. It will depend on the 5th and 6th inputs to the function. The angles can be in either radians or degrees, making sure you use the correct MATLAB functions for whichever you choose. Note that there are 2pi radians or 360° per revolution. So if someone told you "I want a thing to turn around `nTurns` times, and I want it do that with `nSteps` steps per turn." and you wanted to figure out all the points that thing would stop at, how would you do it? You'd probably need something like `nTurns*nSteps` number of total steps. You'd also probably want to start at zero because you're just cool that way, and end at `2*nTurns*pi` or something like that in degrees if you're into those instead. You're an adult, you can do whatever you like with your code. Now, I'm not sure if we have anything in common, but I'd probably love to know about [linspace](https://www.mathworks.com/help/matlab/ref/linspace.html) in a situation like that. Some assembly may be required!
So the function that you're writing needs inputs for it to work, and question 2 is asking you to focus on two of those inputs -- (e) number of revs and (f) number of steps per revolution. But if you look at the equations (1) and (2), they require theta2. So you need to get from point A (revs, steps per rev) to point B (vector containing all the theta values in your simulation). At some point, the user (you, I assume) is going to be using a main script, and call your function, and put in \[XX\] number of revs, with \[YY\] number of steps per rev. So, how do you get from those two values that the user gives, XX and YY, to a vector of theta2 values? I would do something like: total_steps = [ need to calculate the total number of steps using XX and YY values ] theta2 = [ initialize a vector that is the same length as number of total_steps ] for ii = 1:total_steps theta2 = [ write a loop that goes through each step and write the theta2 value over the zero that you initialized ] end After you're done with this, you'll have the vector for theta2 that you can use for other calculations.
Thank you! 
Hey, I just got to my pc and ran the code. It worked fine once I converted C3 to numbers (just modify the C3 line to 'C3 = cell2mat(r(2:end, iC3)); ') The other caveat was I originally spelled 'CRPS' 'CRSP'.. so you need to correct that typo for the S1 line as well. Cheers.
I really appreciate all of the help! 
Cool thanks for the suggestion 😁
Not an answer to your question, but... As much as I love Matlab, it simply sucks at symbolic manipulation. It is like using a screwdriver to open a can, or a can-opener to turn a screw: it can probably be made to work with enough effort, but changing tools is likely to be a better bet. For symbolic manipulation, I prefer Maple for syntax, but I use Mathematica more often since it seems to have more tools available. However, are you sure you really need to do this symbolically? Instead of a1, a2, etc, you can use a(1), a(2), etc. (The can also be done if the values of the variables are matrices, string, etc., by slightly changing syntax.) For example, "x = a1 + a2 + a3 + ... + an" can be done like this: x = 0; for i = 1:n x = x + a(i); end or even easier like this: sum(a) Does that make sense?
If you really want to do this, you can use something like sym xcur for nn=1:N eval(['xcur = x',num2str(nn)]); &lt;do stuff with xcur&gt; end That said, coding like this real;ly isnt reccomended (and for good reason), so if first ask yourself if you really need symbolic variables. In general, you should only use symbolic variables for things that are roughly described as "deriving an analytic formula". Basically everything else (including evaluating the aforementioned analytic formula) should typically be done numerically without using symbolic variables.
Thanks for the response. I agree Matlab isn't the greatest tool for this but unfortunately most of my code was already written. The a1,a2,a3 that I gave were just arbitrary variables. My code was a bit more complex: x = a1*cos(w*t) + a1*sin(-w*t) + a2*3*sin(w*t) + ... so I am not sure if I could use your method and just ended up doing it the long way by adding each term into a vector manually haha. I will keep your method in mind for the future, thanks!
Mathworks has the following for the Vehicle Dynamics toolbox: https://www.mathworks.com/matlabcentral/fileexchange/65966-vehicle-dynamics-blockset-interface-for-unreal-engine-4-projectsdone The link between Unreal Engine and Mathworks was also done for Ford's self driving team to simulate LIDAR and urban environments, but generally those custom links are publically unavailable. Always worth asking the Mathworks guys to try get in touch with the UE link team at Mathworks 
You don't know what you're talking about
The function you're looking for is children
The function you're looking for is : children
Thanks! I love how people on this subreddit are willing to explain these details, makes matlab just a bit more fun. I don’t think I’ll run into trouble, little deviations don’t matter (at least I hope, because otherwise my entire project can fit in the recycling bin)
Thank you very much for your help! Matlab can be a very strange language sometimes :)
what you need is the coeffs functions. I your equation is stored in eq and x is the unknown in your polinomial then v = coeffs(eq, x) will give you v which is a vector of all the parameters.
About point 4, yes you are right, i found it hard to write python code while i can write good code on matlab
Thank you, referring to the bad programming habits, yes I learned them and struggling now to overcomes this while learning Python :/
Can you tell me more about CA sequence?
Here's the Mathworks page on building mex files: [https://www.mathworks.com/help/matlab/matlab\_external/what-you-need-to-build-mex-files.html](https://www.mathworks.com/help/matlab/matlab_external/what-you-need-to-build-mex-files.html) Once you have a valid mex file, you just use it like any other function. If the file is on your path, then it should be recognized by the file name. For example, I have a mex file "RunLength.mex" in a folder I've called "Add-ons" that takes a single input array and outputs three integers. I added the folder to my path with the following command: P_Old=path; P_Add="C:\Users\UserName\Matlab\Add-ons\"; path(P_Old,P_Add); Then I can run RunLength with the following command: [Output_1,Output_2,Output_3]=RunLength(Input_Array); &amp;#x200B;
FYI it doesn't have to be either / or. You can use both. MATLAB has an [API for Python](https://www.mathworks.com/help/matlab/matlab-engine-for-python.html), you can integrate packages into the [Compiler SDK](https://www.mathworks.com/help/compiler_sdk/python_packages.html?searchHighlight=python&amp;s_tid=doc_srchtitle), or write [MATLAB Production Server Clients in Python](https://www.mathworks.com/help/mps/python-client-programming.html?searchHighlight=python&amp;s_tid=doc_srchtitle).
Thank you so much! I fond that page but it didn't really show me how to send data to a MATLAB file or how to get it back. I see that you just call the MATLAB file and then pass it an array. Does it matter what form that array is in? Also, do I need to make changes to my MATLAB file that it can expect data from a MEX function?
How's it going?
Don't think you need a file. you can return your array in memory. The mex function signature has plhs\[\] which is an array of pointers to arrays that represent the left-hand side of the equals sign when you call the mex function. For example, in MATLAB, if you call your MEX function like this: foo = mymex(); then it is up to you to populate plhs\[0\] with something so it can be returned to the caller in "foo". &amp;#x200B;
The inputs and outputs of the mex function will depend on your specific function. Whether the form of those inputs is important depends on the function. Some functions will assume you've provided a vector, while others will handle any size of array. Other functions will require string inputs, and many functions require multiple inputs. For a MATLAB function (.m file), you declare the inputs and outputs on the first line with the following syntax: function [Output1, Output2] = ExampleFunctionName(Input1,Input2,Input3) To get the results, you then call the function with a similar syntax - although you can rename the variables however you want, and inputs can be values instead of variables if needed: [FirstResult, SecondResult] = ExampleFunctionName(SomeData, 'InputString', 3.4); I haven't built any mex files, only used mex files that were generated by others, but there will be a similar declaration in the code somewhere where you say what the inputs and outputs are. For a reference, here's a page with the RunLength command I mentioned - it also includes source code and instructions how to install/compile mex, which may be helpful for you: [https://www.mathworks.com/matlabcentral/fileexchange/41813-runlength](https://www.mathworks.com/matlabcentral/fileexchange/41813-runlength)
You would call your MATLAB just like any other function. Assume you have a user-defined function `plot_my_data.m` which goes like this: function plot_my_data(data, options) plot(data, 'Color',options.clr, 'LineWidth',options.lw) grid on drawnow end In your mex-function, you can call it just like you did before, you just need to construct the necessary inputs: #include "mex.h" void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[]) { mxArray *rhs[2]; // data rhs[0] = mxCreateDoubleMatrix(10, 1, mxREAL); double *x = mxGetPr(rhs[0]); for (int i=0; i&lt;10; ++i) { x[i] = i; } // options const char *fields[] = {"clr", "lw"}; rhs[1] = mxCreateStructMatrix(1, 1, 2, fields); mxSetField(rhs[1], 0, "clr", mxCreateString("r")); mxSetField(rhs[1], 0, "lw", mxCreateDoubleScalar(2)); // call: plot_my_data(data, options) mexCallMATLAB(0, NULL, 2, rhs, "plot_my_data"); // cleanup mxDestroyArray(rhs[0]); mxDestroyArray(rhs[1]); } 
So I went through an old homework assignment where I made a cruise control PID loop, and my code REALLY sucks. It will not help you at all. [This website](http://ctms.engin.umich.edu/CTMS/index.php?example=CruiseControl&amp;section=ControlPID) has literally the same controller, but done in a much better way than mine. You will want to read [this page on PID](http://ctms.engin.umich.edu/CTMS/index.php?example=Introduction&amp;section=ControlPID) first. Now, note that in these examples the plant's transfer function is given by P. In general, P will come from the linear system that you are trying to control. For your boiler plant model, you will probably want to make a state-space model xdot = Ax + Bu, y=Cx (I'm not familiar with boiler plant models, so this may not be the case), and then use [ss2tf](https://www.mathworks.com/help/matlab/ref/ss2tf.html) to get the transfer function P. A quick search led me to find [this paper](https://ieeexplore.ieee.org/document/6408377) on PID control of boiler plants, so maybe that will help. Good luck!
By any chance are your coefficients coming form a Fourier series? Based on what you wrote that's *kind of* (though not exactly) what it looks like. If so, you may find tools like "fft" and "ifft" quite useful here....
[I see.](https://i1.wp.com/howsmyenglish.eu/wp-content/uploads/2017/05/Thats_just_your_opinion.jpg?w=300&amp;ssl=1)
 Really? &gt;&gt; children Undefined function or variable 'children'.
&gt; In order to leave blank an optional parameter that isn't the last parameter, I thought you just doubled the comma and moved on. Can I ask where you got this information? I've used Matlab for a while and have never encountered this as an option. Usually if I am writing functions with arguments that I might not always need, I will write if/else statements in the function to handle input values that flag the option as unused. For instance, I might decide to use type = [] (empty matrix) as a flag for not using that variable. Then towards the beginning of my function, I might have if isempty(type); type = default value; end ; And so forth for each optional variable. Then I would call it with chsize(P,newsize,[],start). Another option is to use [varargin](https://www.mathworks.com/help/matlab/ref/varargin.html), which allows functions to accept a variable number of inputs. 
Thanks. I'll check it out.
You can use the \~ character in modern Matlab for an unused input/output. Older versions don't support this (MATLAB 7.0.4 didn't, it was introduced by MATLAB 2012b) , so use at your discretion.
I've been trying to self-teach C++ haha so that's probably where I got the idea to double the comma. Also, I've been using `~exist` instead of `isempty`. I thought something felt off about using `~exist`. I'll make the switch now, thanks for that reminder!
Yeah, I could definitely see that being reasonable syntax used by other languages. `exist' is another good way to handle some cases, but it will break down in exactly the situation you have highlighted, when you want to skip an intermediate input instead of the last several. 
You can use the varargin Syntax! Here is the doc: [https://de.mathworks.com/help/matlab/ref/varargin.html](https://de.mathworks.com/help/matlab/ref/varargin.html) &amp;#x200B; You would do it like that: &amp;#x200B; `function Q = chsize(P, newsize, varargin):` `if size(varargin) == 0:` `type = foo` `start = bar` `elif size(varargin) == 1:` `type = varargin{1}` `start = bar` `if size(varargin) == 0:` `type = varargin{1}` `start = varargin{2}`
Another option that I sometimes use, is to set the optional argument (let's call it input2) to an empty vector, by inputting it as: function(input1, [ ], input3) Then in the function you do the following to set it to default if necessary: if isempty(input2) input2 = defaultValue; end But I guess using varargin is maybe a cleaner and more versatile way to pull it off. (Sorry about the formatting, not sure how to put this as script on my phone) 
I always though str_variableName('') meant default, and ("") was default text that needs translating depending on region.
This is helpful, thank you!
Thank you for the feedback!
 &gt;&gt; help children --- help for sym/children --- children Child expressions of symbolic expression Y = children(X) returns the parts of expression X as an array. For example, the children of a sum are the terms. If X is not a scalar array then Y is a cell array of the same size as X. The elements of Y contain the children of the corresponding elements of X. Examples syms x y children(x^2+y^2) ans = x^2 y^2 children(x^2 == y^2) ans = x^2 y^2 See also sym, sym/coeffs Other functions named children 
 &gt;&gt; help children --- help for sym/children --- children Child expressions of symbolic expression Y = children(X) returns the parts of expression X as an array. For example, the children of a sum are the terms. If X is not a scalar array then Y is a cell array of the same size as X. The elements of Y contain the children of the corresponding elements of X. Examples syms x y children(x^2+y^2) ans = x^2 y^2 children(x^2 == y^2) ans = x^2 y^2 See also sym, sym/coeffs Other functions named children 
Looks life is a custom function that you're missing. I'm guessing it's supposed to do a cross product or cross tabulation and then manipulate that output to find the zeroes of the resulting matrix.
How might I get the same results with regular functions then? 
What are t0 and i0 supposed to be, exactly? That'd let us know what it's supposed to do. 
t0 is the time and i0 is the moment of inertia I think? or maybe its the current. Its one of those two. The whole function gives us the vibrational analysis of a beam assembly.
If you don't know what i0 is, how do you want us to tell you how to write a script which replicates `tcross`? Can't you ask whoever gave you the script for the function `tcross`?
Not possible. It was for a lab and this is the first time in the script it shows up. 
Without knowing exactly what it is it's supposed to produce we can't really do much to help. You'll need to check with the original author, read documentation, suss or what is supposed to do yourself from the rest of the code (which I'll guess isn't well commented because it never is, which sucks), or go to whoever gave you this task and tell them you can't get this running without the missing black box and see if they have any insight. 
Here is the exact comment that was right above: % Finding zeros, courtesy of K Webb
Who gave you the code that you're running now? Why are you sure they don't have this `tcross` function?
My lab TA gave us the code and they specifically said that they don't understand it, just run it.
If they're running it, they have that file. Even if they don't understand, they still have it. 
I also have the file, I think.
If you have the file, put it in the same folder as the script you're running so MATLAB can "see" it and the problem is solved. 
Sorry, no. I don't have the file, I have the script. I don't understand the difference.
Do you have a script called `tcross`? If not, ask your TA for the script `tcross`. When you get it, either because you already have it or because he gives it to you, put it in the same folder as the script you're trying to run. If you TA can run the script you're trying to run, he or she has the script `tcross`. 
Ok, I think my partner just sent me the matlab files. I will message them and see if they can send the whole file.
Yeah, that's a custom function so you either need it or need to know what it does so you can remake it. 
[I'd start here.](https://en.m.wikipedia.org/wiki/Nuclear_magnetic_resonance)
**Nuclear magnetic resonance** Nuclear magnetic resonance (NMR) is a physical phenomenon in which nuclei in a strong static magnetic field are perturbed by a weak oscillating magnetic field (in the near field and therefore not involving electromagnetic waves) and respond by producing an electromagnetic signal with a frequency characteristic of the magnetic field at the nucleus. This process occurs near resonance, when the oscillation frequency matches the intrinsic frequency of the nuclei, which depends on the strength of the static magnetic field, the chemical environment, and the magnetic properties of the isotope involved; in practical applications with static magnetic fields up to ca. 20 tesla, the frequency is similar to VHF and UHF television broadcasts (60–1000 MHz). NMR results from specific magnetic properties of certain atomic nuclei. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
I think you need to be more descriptive. Are you using a pulser and signal analyzer to determine T1/T2 etc, or are you trying to visualize data from a hospital-grade MRI? *NMR* is a pretty broad brush.
 Y = atan2(sin(u),cos(u)) + pi Obviously there are blocks you can use to implement this
WrapTo2pi
You're right. I'm not asking the right questions. I'm not sure I know the right questions either. I'm in undergrad still, and in the interest of grad school, I want to get familiar with using MATLAB (as well as LabVIEW, C++ and Python) alongside laboratory data. I don't mean data acquisition per se, just data analysis. Really I'm looking for tutorials (rather than software) to figure out what data to look for, how to analyze it, and so on. For example, I want to know, is there any benefit to computing FFT of NMR data through MATLAB?
https://matlabacademy.mathworks.com/ Math works has a basic rundown for matlab available on their website. This may be a good place to start
Thanks! This is exactly what I was looking for. 
Thanks. 
`mod()`
You should get it then. 
Oh, and I couldn't think of that. Thanks a lot. 
You can do pretty much anything you want to in Matlab. You should probably figure out what you want to do first. 
it's been a few years, but i did it using USARSim. &amp;#x200B; [https://ieeexplore.ieee.org/document/4209284](https://ieeexplore.ieee.org/document/4209284) &amp;#x200B; [https://sourceforge.net/projects/usarsim/](https://sourceforge.net/projects/usarsim/)
If you are interested in a particular lab, I’d read their papers and figure out what sorts of analysis they perform. If you don’t have a particular lab, maybe an introduction to nmr (book/web) to determine the fundamentals of signals/analysis etc. From my experience, it is more of a time measurement of relaxation rather than frequency analysis. Although there is a field of NMR spectroscopy, but I admit I don’t know much about it. Can you ask the physics department if there is an NMR lab?
Can you re-attach the image you mentioned? Can't find it in the post.
I should investigate further
If you are computing the angle by integrating the angular velocity, look at the parameters of the integrator block (1/s), it has a "wrap value" checkbox that is there exactly for that purpose.
If you are computing the angle by integrating the angular velocity, look at the parameters of the integrator block (1/s), it has a "wrap value" checkbox that is there exactly for that purpose.
Ah yes, my apologies. It should be attached now.
Why don't you do a print screen on your computer, trim the picture and then post it? It is definitely is better than taking a shitty picture with your phone camera. You want people to help you but you provide a potato quality picture with a poorly worded question without a clear explanation of what the issue is for you. Help us to help you!
Nargin gives the number of input arguments. Then make the default values inside an if statement. There are many ways to do the same thing
The axis object has a ydir option I think. That might be what you are looking for. 
I recommend the amd 2700x
Here: \---- N = 1:100; figure; plot(N,abs(log(2) - cumsum(((-1).\^(N+1)).\*((1.\^N)./N)))); \---- &amp;#x200B; Not very helpful, is it? Well, so is your question. Try something and be specific about where you are stuck.
What kind of workload will it be? Single-threaded or multi-threaded?
Dollar for dollar, the 2700x wipes the floor with anything Intel has. Unless you are a brand loyalist, the 2700x is the best all around chip you can buy currently. 
MATLAB uses the Intel MKL library for BLAS/LAPACK. From what I understand, these libraries are optimized for Intel CPUs not so well for AMD, but don't take my word for it ;) 
Giving this is /r/matlab, I would say multi-threaded
You can add the following code below the load function Varname=sprintf('data_%02i',i); eval([Varname '=DATA
Gauranteed his project is due tomorrow
Youtube "MATLAB Help Fourier Series" 
You don't want to use indexed variable names. That's what arrays are for. For example, you could assign the data to a cell array: for n=1:1:53 myfile = sprintf('C:/Users/me/Desktop/ref/data_%02d.mat', n); temp = load (myfile) dataCell{i} = temp.data; end 
There are tools in the statistics toolbox for fitting distributions. I'm not sure if it has Cauchy though, considering what an odd one it is. There is a curve fitting toolbox that will work for any equation you provide. There are optimization functions that you could use to fit any function you can write. What turned up when you searched the documentation for "fitting", or "Cauchy distribution", or "Lorentzian"? 
I'm not even sure what "start this from O" is supposed to mean. Type an O, I suppose? There. You've started. Let's mark this one [solved]. 
I have also another similar question Changing the shape of Square waves pulse to something look like the RC discharge pulse 
 if nargin &lt; 4 || isempty(start) start = &lt;default start value&gt;; end if nargin &lt; 3 || isempty(type) type = &lt;default type value&gt;; end If you want to specify `start` but not `type`, you call `chsize(P, newsize, [], start)`. 
While I can't recommend a specific CPU, I can tell you that you should be careful to ensure that the CPU you buy is optimal for the specific type of computation you'll be doing. There are, after all, other important properties besides just CPU speed and number of cores.. the amount of cache memory can be more important for some kinds of computing than others. It's also important to take note of which specialized instruction sets (AVX etc) the CPU supports, as MatLab can take advantage of those. If you're planning on doing much multi-threaded computing, core count is important. Some benchmarking tests only really measure how fast a CPU can perform a single task, but other CPUs with more cores may have better total throughput, despite each individual core being slower. 