Off by one error. There are 10 intervals, so 11 elements in the array. t=linspace(5,20,11);
This is a very common problem. Check the MATLAB Answers forum or just google it. You'll find the solution for you already.
This is easily one of the most famous introductory programming examples of all time. If only there was a way to search for Fibonacci algorithm examples online. Ah, nevermind, bad idea.
Seriously? (What have you tried? Where are you getting stuck? Do you understand the math? Etc)
He's going to delete this thread once he gets an answer
Meshgrid is more or less the foundation of matlab, it's super-duper useful. Once you understand how it works.... An intuitive explanation is that it replicates the input vectors along the other one. I'll make you an example of how you can use it so that its usefulness becomes clear. Suppose you've got a 129x129 matrix of data, where each point is a measurement of a value in a specific x,y position. You also know that the sampling on the x axis was carried out from -64 to +64 mm from the origin at 1 mm steps, and the same happened on the y axis. You can create two vectors x and y reprenting the sampling axis coordinates e.g.: x = -64:64; y = -64:64. Now, suppose that you need to know fastly for each element of the data matrix M to which position it is associated. You can create two large 129x129 matrixes X and Y with meshgrid: [X,Y] = meshgrid (x,y); Now X(i,j) and Y(i,j) give you the coordinate of the point i,j along the x and y axis!
What's in the file? Where did it come from? Ask the people who gave it to you.
I recall once long ago I ran into an issue with parfor and a global. IIRC globals (and persistents) are not kept in sync between the desktop and the workers and so are a bad idea in parfor. (see also this: [matlab central for more](http://www.mathworks.com/matlabcentral/answers/129684-global-variables-call-function-parfor)) I don't know if that is true in the most recent MATLABs but you should check the parfor documentation to verify parfor's compatibility with globals.
Do you happen to work in a certain Max Planck Institute in Germany? Try opening the nml in Knossos, available at http://www.knossostool.org/ after loading the raw dataset into it. There is some documentation on the website on how to do that. There are some functions for reading nmls into Matlab at https://github.com/brainmaps/Scripts/tree/master/knossos . Just skim and try them out, I don't remember which one did what exactly...
You are a genius lol. That's exactly what my professor said, the nml file came from knoss. 
If you have access an up to date license you should try out R2015a. The MATLAB Funciton Block and Stateflow can now JIT most functions(no compiler required).
You have the statement x0=[0:0.1:2:0:0.1:2]; x0 should be a 6x1 vector giving the initial values of all the dependent variables. Your statement evaluates to an empty vector.
Don’t use `toc` in Psychtoolbox. PTB gives you timestamp when something happened. `Screen('Flip')` returns the timestamp when exactly the screen changed. `KbCheck` gives you a timestamp when a key was pressed. And so on. If you want to get a timestamp anywhere else use GetSecs. `toc` does not use the same time base and system clocks as PTB.
That's a small sample of the data. There's 35 or so data points I'll be plotting. 
Thank you！ Can you teach me how to do it？
If your 3D volume (a/b/c space) is relatively uniform, you might interpolate that scatter data to an isotropic 3D volume with interp3. * http://www.mathworks.com/help/matlab/ref/interp3.html Then you can visualize that 3D volume a number of ways. Fit 3D contours, slice it, whatever. Here's some links that might get you looking in the right place: * http://www.mathworks.com/discovery/gallery.html * http://www.mathworks.com/help/matlab/ref/isosurface.html * http://www.mathworks.com/help/matlab/ref/isocaps.html * http://www.mathworks.com/matlabcentral/fileexchange/35250-matlab-plot-gallery-wind/content/html/Wind.html * http://www.mathworks.com/help/matlab/visualize/connecting-equal-values-with-isosurfaces.html If you hunt around all the 'see these related functions' links from those pages, you might stumble on something that seems like a good fit for your data.
Not sure you're asking this, but if you're looking for web resources to help you learn MATLAB and how to solve problems with it, then the links in the side bar are a good place to start. If you've got more specific or clarifying question(s), we're more than happy to try and help.
A helpful hint for clarity: putting 4 spaces to start a line will format your code as you coded it and not reddit's formatting. It's a bit hard to read through right now.
Thank you I hope it looks better
the value of sum(prob) may not be identically one, which is the test you've written in the if statement. you should instead try something like the following code: if abs(sum(prob)-1) &gt; tolerance disp("error"); end
Ok I'll try that, but I don't understand why it wouldn't be 1, unless MATLAB doesn't have enough memory to represent a super long floating point number or something like that.
I think matlab tries to relate errors in machine precision representing numbers exactly by actually showing you the number you *intended* to see, but it's not what is *actually* stored. I could be mistaken, though. The tolerance method of checking is very good and simple. Another way to solve this issue is to round your numbers off to integers in your comparison statement. See [here](http://www.mathworks.com/help/matlab/matlab_prog/integers.html) for help on that.
Yeah so in my second code I added a length2 = length(x) to update it but it doesn't seem to do so. Oh well. It works now. I'll try your line tomorrow.
I didn't notice you had an edit to your original post until after I posted my comment. 
The long and short is computers don't do fractions elegantly. At some point (as you've discovered, about 16 decimal points away) they need to round the number. You'll always always have problems if you add up fractions expecting it to get "exactly" a number, so you should always set a tolerance. Best example : 1/3 = 0.3333333... forever. But a computer needs to round after 16 decimal places. So 1/3 x 3 might ebd up being 0.9999999999999999 instead of 1.
Can you say something about it in details?
the best would be for Matlab to actually see the screen as in video. I know it can easily get video from a webcam but I'd like to know if its possible to do it in screen. I might just use a webcam and make it look at the screen
... Seriously? 
You haven't been very specific about what you've tried so far for your solution. Some useful things when working with structs. Suppose your struct is 'x', and has fields 'field_1' and 'field_2' fields(x) -&gt; {'field_1','field_2'} (a cell array of available fields) x.field_1 -&gt; contents of field_1 (getting a field directly) x.('field_1') -&gt; contents of field_1 (getting a field using a string containing the field name) The last case is one of the more important ones, because you can then do a = fields(x); x.(a{1}) -&gt; contents of the first field in x 
link?
I think so.
OP: it'd help us read your code if you could put 4 spaces in front of any lines you want displayed as code and not how reddit will format things.
Please！
Would this structure allow me to do the following: I have the file which contains scans for each mass every say 200ms so for each mass there is an intensity value for each scan. I want the code to help me identify what is decreasing, increasing and not changing at all. So i plan average a background intensity value and subtract it from a region with an ongoing reaction. What i do not understand is how I can assign all the intensity values to their respective mass and how i can select a rang of these masses for the background etc.
I might have figured this out! thanks anyway. if anyone needs to know how let me know.
I am going to disagree here. I agree for most computer programming it is a bad idea. However, I have to read in giant data files with variable names as headers. And then sometimes I have to increment the name because I perform the same operation on subsets of the data and we need each subset result individually. So, /u/photoinduced, here's how I do it. I use the [**genvarname**](http://www.mathworks.com/help/matlab/ref/genvarname.html?refresh=true) function. % Create a structure for the various subset clocking_pos = {'C1','C2','C3','C4','C5','C6','C7','C8'} % Create a structure for the interpolation method methods = {'PLF','LG','SPL'}; % Start the for loop for i = 1 : 1 : 8 for j = 1 : 1 : 3 % Create the variable name for the pressure v1 = genvarname(['P_',clocking_pos{i},'_',methods{j}]); % Evaluate the data with function gridinterp. evalc([v1 '= gridinterp(X,Y,P,xq,yq,methods{j})']); end end This is straight from my code, but you can use almost anything to increment using genvarname.
I have never heard of map containers, which is why I haven't used them. I wrote this code years ago and now several people use this version of the code for similar data manipulation, so it's interesting for sure, but not something I am going to change at this point :) Don't fix what ain't broken, right?
Not sure if this is what you need but try Value='name' X.(Value)=1 This creates X.name without using eval. You might want to try strsplit for the second part.
you can format code on here by starting every line with four spaces like this 1. once you have calculated x, you can just substitute it into the equation for Y at the end, after running the simulation. 2. there is not generally any way of knowing how long it will take to run the program, it could be a millisecond, could be five days, depending on what ODE_fun looks like, and what tolerances you use for ode45
I'm a quite helpful jerk. This attitude towards good programming is one of the most serious problems in modern academic research. People don't just tell you to write good code because we like to make things hard for you. We do it because it's actually better. It avoids untrustworthy code that produces untrustworthy results. The fact that you think it's just someone looking down their nose because of you and your coding style is massively arrogant and ignorant. Research code is exactly the code that should be written well, more than anything else. 
It is possible to capture screenshots through Matlab indirectly by invoking the Java robot class. Please see this function by Yair Altman on the Matlab Exchange [here](http://www.mathworks.com/matlabcentral/fileexchange/24323-screencapture-get-a-screen-capture-of-a-figure-frame-or-component). I've played around with it and while it is possible to run this in a loop to constantly capture and process, it may not be an efficient/optimal solution. Please take a look and let me know how it goes! :)
Eval is bad. Never use it. You can use structs for this, but you should give up on letting your data name your variables for you. There's never a need for that, and if you think your situation requires it, you're simply confused. Take a step back and think about what you're doing. 
May I know if [this](http://www.mathworks.com/help/vision/examples/face-detection-and-tracking-using-camshift.html) the example you're using?
No, I'm using the face detection/tracking from [this] (http://www.mathworks.com/matlabcentral/fileexchange/45951--computer-vision-made-easy--demo-files) video. 
I've scanned through the code and it may be possible to place a counter within the while loop to count the current frame that is being processed. You can convert it to time stamp via the frame rate of the video to identify the frames that you want to grab. Unfortunately, I don't have access to the toolbox/version required to run the code example. However, if I were to take a guess, the coordinates of the point of interest should be in the variable 'visiblePoints' in the loop. 
/u/agentq512 any idea what's wrong here please? I created a structure 5 fields the row corresponds to the mass as does the entry in column 1, col. 2 is mean intensity A,col. 3 is mean intensity B, col. 4 is basically (B-A) - (C-A). the means are over time ranges i select. The problem now is that when the structure gets too big i get the 'Index exceeds matrix dimensions' error it works perfectly if i choose a mass range of say 100 but not 200. The contents are double.
a ok the problem is that the mass values are to 4 decimal places, for some of the scans the value is actually &gt;0.5 less than it should be and so it gives a blank value for one of the masses and a double value for a mass lower or higher to the missed one, I will think about how i should round the masses.
Because you can't actually do it. You can hide them with the stylesheet but it's trivial to work around.
What equation are you trying to fit? It helps to write out the equation before you try to implement in MATLAB. What I'm looking for is something like: y = a + b*x + c*x^2 Where a, b, c are your unknowns. It does look like you *almost* set up y = a + b*x. Is that what you want? Also, you mentioned that the script= currently does an exponential fit. Where is this code? Seeing what you currently have would help.
Is there a question here?
Thanks! I'll definitely try this out.
This. Imagine a point on a 2-d plane (a piece of paper). Now imagine a point in 3-D space, and extend into N-D. A point describes a position in N-D space. It requires a single N-D sample to define a point in N-D space. Next, a line. You can define a line in 2-D space with 2 2-D samples. A line can also be defined in 3-D space with 2 points in 3-D space, or in N-D space with 2 N-D points. And so on. You can embed each of the geometries you are talking about in any dimensional space that is large enough to contain the type of geometry you are talking about. I think your assertions about the dimensionality of each of the geometries you are talking about need to be revisited.
Check out the documentation on the imfinfo and exifread (deprecated) functions. 
If you've already generated the plot, I suppose you already know about the plot command, right? If you've got the data already, it's really unclear what you're asking for. Do you want a fit function? or an interpolation? 
Is there a way to utilize this to process a large batch of images? Really what I want to do is simple identify which of the thousands of photos actually has GPS information. Cataloging the actual data would be a secondary bonus.
I haven't tried anything because I can't figure out where to begin. I've spent hours pouring over the algorithm in my head and doing it on paper, but I can't figure out how to translate into matlab code. The teaching assistant for this class can't help me because she hasn't finished writing the code herself, and if I ask the professor for help, she will just refer me to the teaching assistant. The only thing I have done so far is calculate the intermediate node probabilities (which is easy and straightforward).
You could make a [startup.m](http://www.mathworks.com/help/matlab/ref/startup.html) file either for individual users or as a superuser dictating for all users. I've got mine with some start-up commands and a cd &lt;work_dir&gt; in my personal ~/usr/MATLAB/ directory. Do you know the command you use? I assume it's something syntatically like: lower_fun('NumWorker',4) where lower_fun is a low-level MATLAB function that controls the worker properties, "NumWorker" is a property, and it is changed to 4 (or whatever your ultimate choosing). It's always advised to do this to your *own personal* startup.m, unless you really, *REALLY* are certain (maybe you're a sysadmin) that all users should use the same start-up file.
I would do something like: aFiles = dir('C:\images'); iGPSCount = 0; iNoGPSCount = 0; for iFile=1:size(aFiles,1) sThisImage = imfinfo(['C:\images\' aFiles(iFile).name]); if isfield(sThisImage,'GPSInfo') iGPSCount = iGPSCount + 1; else iNoGPSCount = iNoGPSCount+1; end end
Not sure why its doing what its doing but you can use abs() along with the sign function possibly. Sorry for short reply on my phone.
Great idea! Thanks! Did that, and it seems to work. I have to some checking first. I think you meant (a-b)-c &lt;0.01 though. :D
 doc plot
Good ref: http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html
Never do a straight equality check on floating point numbers. Use a tolerance abs(a-b)&lt; 0.001. Computers represent decimals as floating point numbers with finite precision. So while they might look equal they are different at some location after the decimal.
Unfortunately "format long" (or "format long g" which I prefer) will not expose the underlying floating-point issues that others have already pointed out. It's interesting and a little maddening that MATLAB has no nice "built-in" way to display double precision values in an injective way. Fortunately, there is an almost-built-in way: java.lang.Double.toString(1.2 - 1.0) displays the given value in such a way that distinct 64-bit values yield distinct outputs. In this case, the result makes clear that the double closest to 1.2 - 1.0 is not equal to the double closest to 0.2 (since 0.2 is not *exactly* representable in double precision). 
If you want me to try *something*, I could spend an indefinite amount of time accomplishing a whole lot of nothing. To figure out *why* I can't convert the algorithm into code is simply admitting that my knowledge of programming in general is very limited/not well developed. I've never taken a class in programming before - I've just used MATLAB and learned about certain coding techniques/methods whenever I've needed them. As far as things I've tried - I have conceptually thought out "Ok, I will implement this using a very simple example for a proof of concept, and then scale it up accordingly. The first thing I need to do is to calculate all of the possible probability nodes - done. Next, I need to form these probabilities into a tree - don't know how to do that. Then, after I have the tree formed, I need to concatenate 0s and 1s to each node as I read down the tree with a pointer vector, call it R" I just don't know where to start.
Ah ok thanks! Will check out the links!
&gt; java.lang.Double.toString(1.2 - 1.0) ans = 0.19999999999999996 Okay I see the problem now.
Glad it works. enjoy.
You really need some example code, your question is unclear.
You gotta start small, then with programming in Matlab. Go through a few examples and use google. 
Hey that's super useful! I didn't know about the symbolic toolbox. Looks fun.
You should be able to do this with a serial cable easily, right? Just write to the serial connection with Matlab, and use serial.read on the arduino, I think. 
You can do this by editing your local parallel profile. I believe there's a menu option for this in the gui. 
Right - so here's what I've got so far. the "node" struct is self-evident based on what I've said so far. The "left" and "right" fields represent the left and right children of that node - but now the problem is that I need to represent children of those children - I think the easy way to do this is to use a pointer, but I'm not sure if pointers work the same way in MATLAB as they do in C++. here's my code so far: clc; clear all; p = [.1 .2 .3 .4]; c = ['a' 'b' 'c' 'd']; child = struct('symbol',{0},'probability',{0},'left',{},'right',{}); node = struct('symbol',{0},'probability',{0},'left',child,'right',child); for i = 1:length(p) node(i).symbol = c(i); node(i).probability = p(i); node(i).left = child(i).left; node(i).right = child; end 
If you don't know the extent of the rabbit hole (how many children's children...), I think you should look into using a while-loop. But be careful coding within and the while-condition, as you could inadvertently end up with an infinite loop.
There would be no more than 70 children - but again the issue I'm having now is that I need to recursively define the struct that I want to use - that is; the subfields of the struct *node* are also structs of type *node*.
No problem!
You might take a look at the linspace() and meshgrid() functions.
Well yeah that's not really a surprise, is it. And that's still not the same result you'd get using ndgrid with all 3 dimensions. 
That's what ndgrid does. Did you read the documentation? If that's not what you want you should clarify your question, because it sounds like you're asking for a collection of points that are evenly spaced. 
Do you want only 33600 points, scattered "randomly" without being close together? You could use randi for that. Of course they won't be properly random, but your "not close together" criterion already forbids real randomness, so I assume that's alright. 
Randi would only be integer values, though. And it still repeats points.
Use division. randi([0, 10], [1, 25])/10 ...will make a 1x25 array of numbers distributed across 0 to 1 on intervals of 0.1.
Yeah you're right. You can just send the whole string prefaced by the flag and the length of the string. It's been a while since I worked with an Arduino. 
If node 3 has a left child which is node 4 and right child which is node 5, then node(3).left = 4; node(3).right = 5; How this is implemented in your loop of course depends on where you're getting you're knowledge of the tree structure, but either way you only ever have nodes pointing to nodes via reference by index number. You never put an actual node object inside another. For another example, this would return the right child of node 3: node(node(3).right) Note that you don't need to ever know the index of the child to return it in this fashion. Also, stop using i as a loop index. It's the square root of -1. 
This will be of great help, thank you. For the point of this question you can think of me as a sysadmin, who doesn't want the users to accidentally spawn too many workers (I'm actually asking on behalf of our sysadmin, but ...).
Are you running a loop on the arduino programmed in their software development environment and just communicating using a matlab "arduino object"? Or are you using embedded coder to run matlab code directly on the arduino chip?
you're awesome - will do this once I am back on my computer! Hopefully this works - I've been struggling with this for a while and it would make my data look so much nicer :3
Not even really necessary... plot(0.2,A) will plot A all at 0.2. There's no need to use the "ones" or a repmat-like command, since plot can handle a single value for x for any arbitrary number of y values. What about it still isn't working for you? I figured you got the answer from yesterday's post.
Sorry, question is for /u/ilikecoldpotatoes btw
I'm using matlab as the interface, to store some data and to make a few calculations that the arduino can't make. So I have my arduino programmed and will be passing down values from matlab to the arduino. 
Im not sure how to use strcmp here to get what I want. When I tried to set up a for loop with strcmp all my values turned out 0. 
Nevermind! I solved it! Turns out the string I was trying to compare to had a space at the beginning of it so each value would come back 0. 
Glad you got it
You asked the same question, and I answered you. You replied in comments, and then suddenly stopped responding, only to ask a brand new question. The answer doesn't if change you ask a second time. **what do you mean by "function handle". Do you mean a fit function? Do you mean an interpolation? Do you just want the data in the plot? **
The quick, dirty way: string = 'ABBAAB' x = logical(lower(string) - 97)
 target = 'ABABAAABBBAB'; x = (target == 'B'); Works for arrays of all dimensions due to scalar expansion.
That's nice. What have you tried? What are you struggling with? What the hell is IEEE 574 format (no, I'm not going to google it)? How would you do it on paper? 
First, your vector isn't getting made as you've made a syntax error. You only need one colon operator: V = 1:n;
Heya, thanks for the help, much appreciated. Bonus round: Do you know how to replace the thin lines with "ribbons", if you get me? :P
Not sure why the downvotes-- /r/matlab seems to generally be a pretty unpleasant place :). You're right, and you can also inspect the bytes of a double (or any other native numeric type) with typecast(x, 'double'). Having said that, though, I think it is surprising that MATLAB manages to not provide a straightforward means of displaying double-precision numbers in a (a) one-to-one and (b) *human-readable* way. 
Thank you very much for your answer! It seems like there's some pretty heavy maths behind, but I should have expected it, hahaha. I'll see if this can make things more clear for me, thanks again :)
I think for your purpose you can kind just read the take-home points really. I'll try to re-read it later today and see if I can distill it down for you. Seems like the backslash command may result in a non-sparse solution even if you are trying to model something which is sparse. The L1 approximation will best represent a sparse dataset with a sparse solution. Anything else kind of overdoes it and produces spurious results. I hope someone else can chime in and clarify. I think if you dig around enough you will find a satisfying answer without too much math behind it.
Oh - ribbon is almost what I want. I've tried plotting with it but it's kind of annoying as it assumes my index k starts at 1 and goes to length(k) . This is because the arguments are for some reason only x and f(x,k). i.e. you don't give it the k vector. It's a bit strange. Also the colour scheme relates to the index, not the height of f(x,k) I've now tried using the "waterfall" plot, which is basically exactly what I want - however I can't control the width of the ribbons. :( Gahh - I'm so close to plotting perfection!
If I mess with linewidth for waterfall, I kind of get the effect I'm after so that will do for now :)
About the convergence test, I was wondering wether it was sufficient to decrease timestep to have better precision, or eventually a too little dt would give out false results due to machine precision. That's what I meant with "weird". Yeah, I think I might have chosen a better term... By the way, the DT is the temperature difference in my fluid from t=0 to t=tend, but I didn't want to enter in too details in that case because my question at the end was not dependant on the graph. About the convection, I didn't know it! I'll pay more attention in the future :)
You can do this in the following way (using a similar example as another commenter) % create a continuous x variable x = 0:pi/64:2*pi; % create a continuous y variable y = 0:0.1:8.9; % set the "boundary" between integers to NaN y (mod(floor(10*y), 10) == 9) = NaN; % create a grid [xGrid, yGrid] = meshgrid(x, y); % get your function data, but pass only the integer part of y to it fGrid = sin(xGrid + 2*pi/8*floor(yGrid)); % plot your function surf(xGrid, yGrid, fGrid, 'LineStyle', 'none') Note that setting the "boundary" between integers to `NaN` is only necessary if you want discreet ribbons of data. 
Another good point! I hadn't considered the memory allocation if you scaled this up from 5x5 to HUGExHUGE.
Yeah, my bad i forgot to mention that.
That say the max of the first peak is 1. I want to take and hold this value. When the next peak of the oscillation occurs (lets say its 1.5) I want the value of 1 to step to 1.5. When the next peak comes along which is 2, the value wil step to 2 etc etc. I guess if a were to graph the maximum I would want it to look like stairs if that makes it easier to understand.
Assuming it's an ascii file, the same way as any text file. From my familiarity seeing .out files (a FORTRAN radiative transfer code), they're just ascii. [Here's](http://www.mathworks.com/help/matlab/import_export/ways-to-import-text-files.html) some ways to import text files. You can also look at fscanf() and fgetl().
`1./(1:n).^2`
Haha, okay. Nooootttt really interested in arguing with you, but could you explain how skipping legend entries breaks when your data size changes?
I am still very new and don't quite understand all of the jargon; in layman's terms, how could I do this? It seems that I cannot import .out files to Matlab. Has anyone written a script that can do this? I am pretty much completely lost.
With what values should you compare x_new?
 Mh = inf; MinHold = zeros(size(x)); For n=1:length(x) If x(n) &lt; Mh Mh = x(n); End MinHold(n) = Mh; End
ty sir! it worked out nicely.
From the comments it sounds like a binary file. Either use the file menu and the "open" option, or use the "load" command.
Worked perfectly.
Check the [besseli()](http://www.mathworks.com/help/matlab/ref/besseli.html) documentation and pay attention to the examples. I think what you'll need to do is something similar to the second.
Maybe someone else can chime in as to how this might be done more elegantly, but here's what I can think of. For each point you're plotting you've got a u, v, and T observation (and height). What I'd do is grab a colormap of your chosing or make one colors = colormap('jet'); ^(I'm going to be killed for using the "jet" colormap, but it's an example) You've now got an array ("colors") that is 64 (I believe) x 3 representing RGB colors going from blue&gt;green&gt;yellow&gt;red (like a typical contourf() plot). You can now scale these 64 colors (or any spot between, really) to the temperature scale you're using (maybe 250-300K ?). Here's the tricky part, and where someone else may have a better way to implement this: I think you may have to iterate over each data point (x,y,ht) and make individual quivers. I say this because I'm fairly certain you can't add an extra dimension (the color (or temperature) in this case) all in one call. If you can, or if there's a 3rd party toolbox that does this, I'd be interested in it as well. I assume you also want to preserve the length of your wind vector to represent the true wind speed. If not, you could look into scaling the length of your vector by the temperature at that observation. 
You were given a mystery file by a teacher, with no idea what sort of file it is, where it came from, how it's formatted, nor have you been given any instruction in using Matlab? Something about this doesn't make sense. 
Question: Are you familiar with Huffman Coding? **Update** - I have successfully created a complete binary tree which has been populated according to Huffman's Algorithm, now I need to run down the tree, assigning 0s and 1s to each node (say 0 for left nodes and 1 for right nodes) - My approach to this is a recursively defined function...something like this: function [ output ] = populatetree(currentcode,currentnode) persistent k; k = 1; list = newlist([],[]) while k&lt;71 if (isa(currentnode.Leftchild,'node')) currentcode = strcat(currentcode,'0'); populatetree(currentcode,currentnode.Leftchild); end if (isa(currentnode.Rightchild,'node')) currentcode = strcat(currentcode,'1'); populatetree(currentcode,currentnode.Rightchild); end if (~(isa(currentnode.Rightchild,'node'))) list = add(list,currentnode,currentcode) k = k+1; end end output = list; end I should also give you this code, which is used to create nodes: classdef node properties Symbol Probability Leftchild Rightchild end methods function obj = node(symbol, probability, leftchild, rightchild) obj.Symbol = symbol; obj.Probability = probability; obj.Leftchild = leftchild; obj.Rightchild = rightchild; end end end function [ output ] = maketree( syms,prob ) %This function creates a Huffman Code Tree from two input vectors - a %vector of probabilities and a vector of symbols. It returns a single node %(the parent node) has a left and right child node. Each child is of the %same type as the parent node, and can also have children. l = length(prob); freq = sort(prob, 'descend'); output = 0; %initialize starting nodes for i = 1:length(prob) nodes(i) = node(syms(i), prob(i),0,0); end %extract the probabilities of the nodes and put them in a vector indeces = 1:length(nodes); sorted = 1:length(nodes); for i = 1:length(nodes) sorted(i) = nodes(i).Probability; end %rearrange the order of the nodes based on the order of the probabilities [sorted,indeces ] = sort(sorted); nodes = nodes(indeces); while (length(nodes)&gt;1) k = length(nodes)+1; nodes(k) = node(0,(nodes(1).Probability+nodes(2).Probability),nodes(1),nodes(2)); nodes(1:2) = []; indeces = 1:length(nodes); sorted = 1:length(nodes); for i = 1:length(nodes) sorted(i) = nodes(i).Probability; end [sorted,indeces ] = sort(sorted); nodes = nodes(indeces); end output = nodes; end 
This is too much for me to read right now, I'll look tomorrow. I didn't realize you had a node class. It looked like you were just using structs in your previous example. 
Here I wrote a short and simple example that should help you. %for AngryBlackMan33 %in this example we fit the function besseli(1,p*x) where p=3 %create data that we want to fit xs = linspace(-1.5,1.5)'; %apostrophe necessary: xs and data have to be vectors with shape (n,1) data = besseli(1,3*xs) + randn(size(xs)); %data is a besseli function and some random noise %create fitting function and options fitFunc = @(p,x) besseli(1,p*x); options = fitoptions(... 'Method', 'NonlinearLeastSquares',... 'Start',5,... 'Lower',0,... 'Upper',10,... 'TolX',1e-7); %fit the data and get parameter [fitobject,gof,output] = fit(xs,data,fitFunc,options) parameter = fitobject.p; confidence_interval = confint(fitobject); %plot figure('Color','white'); plot(xs,data,'bo'); hold on; plot(xs,fitobject(xs),'k-','LineWidth',1.3); set(gca,'FontSize',14); title(sprintf('Fit with p = %.2f [%.2f, %.2f]',parameter, confidence_interval)); legend('data','fit');
I have no idea what "does not work as I want" means. Please provide an example of what you're trying to do.
How are you getting your row/col coord_vector? Also, what are you trying to get from your initial_array to your wanted_array? It would be helpful to see some of the code (and error message) you are getting. starting a line with 4 spaces will retain YOUR formatting as you've coded it and not reddit's formatting for comments.
I found [this](http://www.mathworks.com/matlabcentral/fileexchange/3225-quiverc) on the file exchange. It might be of use.
The only way to do what you want is with `sub2ind`
Classes are either handle classes or value classes. Value classes are "pass by value", while handle classes are "pass by reference". If you modify a value class inside a function, it only changes the local copy, so you need to return the modified object. If you modify a handle class in a function, it actually modifies the original object. No need to return the modified object. See http://www.mathworks.com/help/matlab/matlab_oop/comparing-handle-and-value-classes.html for more info.
I really can thank you enough for helping me with this. Thank you so much for taking the time to do this!
Use the `isnan` function to test for Nan values
Just be careful. The `\` operator on an underdetermined system is not necessarily the most sparse. If `A*x=b` is `[NxM]*[Mx1]=[Nx1]` with `N&lt;&lt;M` (more unknowns `M` than equations `N`), Matlab will seek `x` to be such that it has no more than `N` unknowns. This is not always the most sparse, just at least `N` sparse. The `\` operator is great since it is super optimized and dynamic in what type of solution it uses, but that comes at a costs of transparency. (I am not saying you're doing anything wrong nor that your description isn't right. Just adding a warning for you and/or others)
I hope it soothes your anger :p
I think this is probably the most elegant solution and should be pretty efficient too
I think what I know is in line with you are saying, I honestly have never used "\" for any of my needs. I think the information I provided OP was arguing in favor of L1 optimization techniques over using "\" because of the lack of sparsity in the "\"-solution to an undetermined system. I only respond to make sure that I am sort of on the same page as you. 
Instead of selecting the elements of the matrix, that notation selects the elements described by vector r and concatenates them based on vector c or something like that. I edited the original post for clarity.
This is what I fear.
sorry i think i might have worded it wrong. i have made the GUI and everything for the program; i just want to access a database of images from the program which i can then compare with the users input image (psnr,graycorops,imhist,ssim,corr2,difference etc.) basically i want to know how i can add an image database to program. thanks
which is the easiest
Are you asking if it's easier to make a directory with files in it than to set up an SQL database? Think about that for a second. 
haha sorry. Brain fart. how would i go about setting up the SQL database??
Example with some similarities: http://www.mathworks.com/help/matlab/matlab_oop/example--implementing-linked-lists.html
Depends which one you want to use. MS Access is an SQL database, I suppose. There's also mysql, which is free/open source. Configuration can be kind of a pain, and I'm not sure whether they allow for images to be stored in the DB. Oracle does, but it's an expensive commercial product. You may just end up storing file path names in it. What are you actually after? A list of files? You keep saying "database". What do you actually want, and why haven't you just put some files in a directory? 
Try adding hold on either before any plotting or right after your first plot call. You're redrawing over your initial plot() to make your errorbar() plot, and since you've started from new (i.e. don't have the x-values from your first plot()) you only get indices 1:length(T(;7)) as x values.
You're a genius! That worked!! It's been awhile since I've used Matlab, and I completely forgot about hold on. So right now I get this plot: http://i1083.photobucket.com/albums/j397/joenobody1/Screen%20Shot%202015-03-20%20at%207.43.47%20PM_zps6zese2dv.png Is there a way to tie the error bars to the points along the x-axis? Thanks again
Thanks! This helped alot!
Thanks! This helped alot!
This ought to do exactly what you want: http://www.unc.edu/~thedrick/software1.html 
http://www.mathworks.com/help/simulink/examples.html
There's a great function you can use to get a better understanding: doc meshgrid 
1.) First off, [x y] = meshgrid(-4:pi:0.1:4*pi); is equivalent to x = [-4*pi:0.1:4*pi]; y = [-4*pi:0.1:4*pi]; [x y] = meshgrid(x,y); So let's look at x and y before you create a meshgrid (I am using a larger spacing for clarity): x = [-4*pi:0.5:4*pi]; y = [-4*pi:0.5:4*pi]; You have created vectors of some x and y points that look like [this](http://i.imgur.com/ioOVbiX.jpg). At this point, you basically have an x-axis and a y-axis, but you're interested in evaluating a function of x and y at each point on the [grid defined by those axes](http://i.imgur.com/rfcwNS1.jpg). This is where meshgrid is useful. Each point on that grid needs both an x-coordinate and a y-coordinate. [x y] = meshgrid(x,y); turns those x and y axes into matrices, each the same size as the grid illustrated above. This way, each grid point gets an x-value and a y-value. 2.) z is a function of the magnitude of (x,y) because you decided to make it so. Nothing is forcing you to do this, it is simply because you wrote r = sqrt(x.^2 + y.^2); and then made z a function of r. You could just as easily have chosen z = x + sin(y) + 4x.^2; or any other arbitrary function. EDIT: fixed images
Wow thanks! Not sure how you found this post so late. I'll give that a try and post an update.
No prob! I think there's a method under FevalQueue that will return the completed jobs. I forget what it is but it should be obvious when you see it. edit: by the way, this is how I usually operate as well. If you have functions that take a very long time and generate a lot of text output to the command window using fprintf(), I've found it helpful to write quick scripts that stores the output of P(i).Diary as a string, then parses the text using regexp() in order to generate quick and useful summaries for the progress/prelim results of my functions. This quells the impatience in me a bit! 
the while loop is running the same calculation over and over, since *h* is not changing within it. is this supposed to return S, Om and Ct for a bunch of different h values? if you are trying to keep the different values of S, Om, and Ct, you'll need to use a counter: [S(idx), Om(idx), Ct(idx)] = aluminums(h);
Have you tried printing out the values of S Om Ct inside the function to see how they are changing with every iteration? See if they are actually being updated and getting closer to the answer you expect.
They are. the while loops isn't recognizing the S&gt;=0.01
So is it stopping when the other condition is true? Om&gt;=o/3
A While loop and an If statement that contains an &amp;&amp; (AND) will only evaluate the second term if the first term evaluates to TRUE. Verify that both of Om&gt;=o/3 AND S&gt;=0.01 are false at the same time. ~~Also, why did you switch the way you were evaluating the AND statement from &amp; to &amp;&amp;? I can't run your code from my home computer.~~ Sorry, answered my own question there. It's late.
Post a small example of your working code. 
for non-random perturbations I used: for n=1:10 [t,n]=ode45('f',tspan,x0+[n;n;n;n]); end; which will output a solution set labeled n which appears to be the nth iteration but 1-(n-1) seem to be absent. I'm sure that the problem is that MATLAB isn't recognizing the n in [t,n] as the index but when I try something like [t,x(n)] I get an error &gt; In an assignment A(I) = B, the number of elements in B and I must be the same. which suggests that that sort of naming scheme is not the correct approach.
Hello, You're using n as you index in the loop (n=1, 2 ... 10), but then overwriting it in the [t,n]=ode45('f',tspan,x0+[n;n;n;n]); statement. I'm not familiar with the ode45 function, but when trying to store the second output to x(n), if it's anything more than a single element, you'll get the A(I)=B error. Try something like: x=[]; for n=1:10 [t,x(:,n)]=ode45('f',tspan,x0+[n;n;n;n]); end;
size(x) = [length(t), length(x0)] In other words, ode45 returns a matrix. Try : [t,x{n}]=ode45('f',tspan,x0) and search the help for cell arrays.
brilliant. thank you apparently the key was curly braces.
To suppress the output of your function you still need to use a "';" at the end of it, even on the command line. Then you can simply call whatever you want displayed at the command window. As to why the others are showing up, I'm not sure. If this is indeed how you have your function coded (with all lines suppressed), I don't see why MATLAB is returning anything from within the function, and is simply returning the outputs (t3,w3,h3). As to their contents not being what you expect, you'll have to dive into your function and perhaps iterate it step-by-step and do your method by hand as well to check yourself. Also, a syntax hint: many systems/languages won't be as forgiving as MATLAB is in a lot of things, for example mixing up a variable for iteration (such as 'i' or 'j') and the variable for sqrt(-1) (which are also intrinsicly defined as 'i' and 'j'). For your iterators, I simply just double tap the letter, and would use "jj" here in your example. ... or ilat if I were looping over latitudes. Just something to be aware of.
Personally I find cell arrays a bit of a faff. If the size of the output from ode45 is always the same in your loop, you could use a 3D matrix instead (and preallocate the memory beforehand, which isn't particularly necessary here but is good practice). n=1:10 x=NaN(numel(tspan),numel(x0),numel(n)); for n=n [t,x(:,:,n)]=ode45('f',tspan,x0); end Also, just to check, does it make sense why you have to do [t,x(:,:,n)]= or [t,x{n}]= and not just [t,n]=?
Just for reference, as it seems your problem has already been solved, but in your code the reason for the assignment error is that if x(i) = s1 ... Is trying to assign s1 to x(i) NOT ask if x(i) is equal to s1. To do so, use a double ==, ie. if x(i) == s1 ...
Yeah I realized that I didn't save any changes lol, I have much to learn..
HAHAHA! Awesome - glad I could help; there's a first for everything!
the number of rows is variable (12000 at the low end, 50000+ at the high end). With regard to that: why is it that I can't get a cell array of the time vectors the same way I did with the x{n}? I tried: [t{n},x{n}]=ode45(blah,blah,blah) but I get back an error saying: &gt;&gt;Unbalanced or unexpected parenthesis or bracket. &gt;&gt;??? Comma separated list expansion has cell syntax for an array that is not a cell. So I understand that I just want to get n time column vectors and that the cell array is probably overkill but since the time steps are of variable length depending on the solution the vectors will not be of equal size so a matrix that simply concatenates them wouldn't work either.
Does t already exist in the workspace as a matrix? If so clear it first, then try again. For example: t=[1 2 3] % t is created as matrix t{1}=1 % Try to access as if it's a cell array Cell contents assignment to a non-cell array object. Regarding the different lengths, yeah, in that case a cell array probably is the best/simplest way to go.
That did it. Thanks very much.
This may be a silly question, but have you tried restarting Matlab? In some versions I've seen odd behavior in the graphical bits that took a restart to sort out. It's as something under the hood gets corrupted and there's no good way to reset it. 
Hunh. I hadn't considered it. I just cycled through 2-3 scripts, but never a full shut down today until I left. I'll see the behavior tmw and report back. It was so odd because I later opened the saved pdf of the figure, and everything was plotted right! Maybe my MATLAB was drunk.
Yeah, it's the fact that it looked correct in the pdf that made me think something might be wrong under the hood, rather than in your code. 
Not sure what your error is saying/meaning, but what pops out to me is cause is a 0x1 cell, so something must be a miss in assigning (rather, not, and that's causing the error) to cause. As an aside, what is your netCDF read/input routine? What are their lines in whatever script you're trying to run?
Are those 3rd party netCDF utilities? I'm not recognizing them and am not getting good Google hits. You could be correct that the versions of MATLAB aren't compatible with the older/newer netCDF utilities. At any rate, you may look deeper in them to see if/where you're having your error if you have access to them. When you run your script, what line of it does MATLAB have this error on? What is the full error message?
You got me. Easy fix is left as an exercise to the reader.
seems to have the same problem unfortunately. [this is what it looks like](http://imgur.com/a/F7nE3)
&gt; t(t &lt; 100) what are these fancy array indexing methods. is it black magic?
Get frame seems to be returning a cdata field which is nothing but 255s so not sure if that's going to work eother
Oh--and the two-output version of find doesn't return [values, index]. Lots of functions work that way (max, min, mean, etc.), but find returns different results depending on the number of requested outputs: [k] = find (...) [row, column] = find (...) [row, column, value] = find (...) Where k is the linear index (i.e., the element number, counting from the top left of the matrix down each column) of non-zero elements, row and column are the row and column numbers of non-zero elements, and value (the third output, if the are requested) is an array of the nonzero values in the input to find. Keep in mind, though, that in the example you used, this would simply be an array of `true` (or an empty array, if no element of t was less than 100)--since your argument to find wasn't the array `t` but the expression `t &lt; 100`, which evaluates to a boolean before find operates on it.
Just to set my mind at ease can you try print -djpeg test.jpeg 
tried a few different extensions but none of them worked. 
Have you tried this? http://ch.mathworks.com/matlabcentral/fileexchange/23629-export-fig
That gave me a good chuckle.
what would be some other ways someone might multiply an expression with a boolean?
I would look into the export_fig() function/toolbox on the file exchange, it's worked wonders for me.
As others said, that's matlab! It's super-duper powerful and useful. But... getting proficient at this enourmous number of tricks is actually black magic 
I've communicated with OP to help him solve his issue. For anyone else, and archival purposes (I hate when a Stack Exchange question ends with "NM, I figured it out"), here is a slightly edited version of the message I sent /u/frizhbee Hey. Yeah, there are a couple issues with the code. Something that is not directly preventing it from working properly, but will likely be a problem in the future, is how you handle the blink in the arduino code. The whole program stops executing while it waits for the delay to finish. You want to instead save the time that you turn it on and keep checking it against the current time. Check out the arduino code samples in the github page to see what that looks like. [Here is my github project we were talking about](https://github.com/tstavropoulos/TestArduino) Now, what you'd intended was to blink the LED, but currently your arduino code turns it on, waits, then turns it off and waits, and you bombard it with 'go' signals. You want your loop on the arduino to look something like this: boolean blink; long lastChangeTime; boolean state; long timePerState; void setup() { blink = false; lastChangeTime = 0; state = false; timePerState = 2000; } void loop() { if ( Serial.available() ) { char c = Serial.read(); if ( c == 'p') blink = true; else if ( c == 'q') blink = false; } if (blink) { if (millis() &gt; lastChangeTime + timePerState) { lastChangeTime = millis(); state = !state; digitalWrite(Relay,state); } } else if (state) { state = false; digitalWrite(Relay,LOW); } } As for the matlab code, there are some issues there as well. You are right, you don't need the loop. But keep in mind every time you open the serial port, the arduino code restarts. So you probably want separate functions to open and close them. And then handle the logic in the middle. You can see what I mean if you take a look at the matlab code folder. Good luck!
what try?
Hey, thanks. You're a good internet person. So I'm a very new to programming, so forgive me if I tell you that your Github project didn't make a whole lot of sense to me, at least where my issue is concerned. You see, I'm wondering about that while loop in particular and why my code works when the fprintf statement lies within the loop and why it doesn't when I take away the loop. It doesn't work even when I try to run it 3, 4, or 10 or 15 times BUT ONLY when the while condition is set to while true 
Came in today and still had the same display "bug". Oh well, not going to sit around on it - the saved version is what it should be.
Not entirely sure if this will be helpful, and perhaps it maybe *too* complex, but here's a toolbox from the file exchange that should be able to forecast AR models: http://www.mathworks.com/matlabcentral/fileexchange/32882-armax-garch-k-toolbox--estimation--forecasting--simulation-and-value-at-risk-applications- If you look through the current documentation on the MATLAB functions you would use, and if you know or can find out about your AR model, could you build a forecast function yourself? Obviously, this would be more involved than what I'm making it out to be..
No problem. Let's step through the execution of the program and see what happens: First Matlab opens up the serialport, which boots up the Arduino sketch. Then, on an infinite loop, it prints 'p' to the serial port as fast as it can. By the time the Arduino recovers from its `delay(2500)` in the `setup()` block, its Serial buffer looks like this: &gt; pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp... The Arduino then enters the `if( Serial.available() &gt; 0 )` check, because there's lots of characters in the buffer. First it will read (and eliminate) the front character from the read buffer, which is certainly a 'p', so you enter the `if(matlabData == 'p')` block. Then, you send the 'p' back to matlab, turn the RELAY pin high, and then the Arduino hangs and does nothing for 4 seconds. Then it sets the RELAY pin low, and the Arduino hangs and does nothing for 1 second. Then you send "after loop" and 'q' back to Matlab. At this point, the Arduino would do nothing until it got another message. In your infinite 'p' case, it will always have more blinking to do. But this is an important point, the only reason it was blinking before was that you were bombarding it with 'p's, because one 'p' is consumed *each time* it turns the light on. Furthermore, in the `else` block (meant for when `matlabData == 'q'`), `digitalWrite(Relay, LOW);` will *never* do anything, because it's not possible to get there while RELAY is HIGH. So, why did it not blink when you tried sending a finite number of p's? Probably because every single p was sent (and summarily discarded) before Serial was actually initialized on the Arduino side. It takes a second or so to "wake up" once you open the connection, which is more than enough time to spin through any reasonably-sized number of p's you tried sending. A change you could make, if you wanted to keep the same idiom, is to have the Arduino send a serial message when *it's* ready, and have Matlab wait for that before it starts doing anything. If you want a lazy solution, you could also just try sticking a pause in MatLab after you open the connection. But let me reiterate. The *only* thing that sending a 'q' would do right now is print "not in loop" and 'q'. It will have no effect on the execution of the program as-written. That's why I recommended switching to something like the above code. That would let you interrupt the blink. It could also be adjusted to always let an ongoing blink finish (kind of like your current program) and *still* allow the Arduino to also do something else. It does not do anything when it's stuck in a `delay(4000)`. If you fixed *just* the startup issue I described above, and had MatLab do `fprintf(arduino, '%s',"ppppp");` once the Arduino was ready for a command, it would blink exactly 5 times and then stop. Hopefully that helps.
I usually assign a temp variable so that I can change it in one place. l = t&lt;100 z(l)=SomeLongFunction(t(l)) 
If your arrays are so large that memory becomes an issue with sub2ind, you could break the operation into chunks and process one chunk at a time. 
What is a datatip? If x and y are vectors, you can find the x values where y equals zero using X(y==0)
Who are these people downvoting everything on this sub to oblivion? I mean it's one thing when people just post their homework problems or don't even understand what they're asking, but what's wrong with this one? Also, 2007? Wow!
If it's a 2nd order ODE, you only need 2 states in y, the position and velocity. These are the inputs. Let's say position is the first entry and velocity the second. Your dy array should have velocity and acceleration. These are the outputs. Acceleration must be calculated, but velocity is simply copied from the second spot in y to the first spot in dy.
Quite frankly, this doesn't seem like the job for MATLAB... This is more of a job for WolframAlpha, Mathematica (paid), or Maxima (free). MATALB does have a symbolic toolkit as an addon but I still would use a dedicated CAS (computer algebra system).
Haha, thanks for the concern!
 function y_ut = bjODE(t,dy) Conceptually, y should be the input, describing the current state. dy should be output, describing the rate of change of the states. Variable names are arbitrary, of course, but this is needlessly confusing. y_ut = [ F/m; dy(2)+dy(1)]; The rate of change of position is not position plus velocity, it is velocity.
If you need a numerical solution and not a symbolic expression, use fsolve.
What are the equations?
What are the equations? You might be able to use ode45() if you are given initial conditions.
when you return dy(2)+dy(1) as the second element of the output, you are telling the integrator that the rate of change in position is equal to position plus velocity. The rate of change in position should be equal to velocity.
Have you looked here yet? http://www.mathworks.com/help/nnet/ref/perceptron.html
Is this a single variable function? If you know the solutions to your ode, could you just use fzero()? 
Hi! So, the equations are: 1) (q)(1-b)S/4+C(X-Y)+aX^4 (1-d)- aY^4 = 0 2)-(1-b-q+bq)S/4 + X(X-Y) + aX^4 (1-m-d) - aY^4 = 0 Sorry! So we are also given the following: q, b, S, C, a, m &amp; d
The Matlab way to do this is TrainA(1,:), TrainA(2,:), TrainA(3,:),..
I have, and most of the more complete resources use the toolbox. Unfortunately I have to code it from scratch using only basic functions :(
Good idea. I think that will work better.
EVAL is evil: From experience! Not just my own experience. Many times on Mathworks user forums and even here a user asks, "How can I create these hundreds variables A_1, A_2,..." We try to tell him not to do it. Then a few days later he comes back, "I can't figure out how to process my hundreds of variables!" or "Why is my code so slow?" or "I can't find the bug in my code." And guess what? Nobody can help because the code is a mess of strings that is nearly unreadable. When it is not necessary, why use it? Why teach a beginner to program is such a way? I do agree that there are times when EVAL is the only choice - fine. Just because there are exceptions doesn't mean that it should be the rule to use it. I would rather learn a user to program with efficient variable storage techniques, and program using best practice standards, and only much later discover EVAL. For your problem I suggest you use structures in for loops like this: for I1=1:length(trains) data.(strcat(trains{I1},num2str(I1))=... end Ofcourse you'd have to have a cell array where you store all your trains.
I was in same sort of a situation last year. I found these two books free on the internet: Neuro-Fuzzy and Soft Computing (by Jyh-Shing Roger Jang et al.) and Data Mining - Concepts and Techniques (by Jiawei Han et al.). You can find both books by just googling the name, but here are the links anyhow. [Data Mining - Concepts and Techniques](http://www.cse.hcmut.edu.vn/~chauvtn/data_mining/Texts/%5B1%5D%20Data%20Mining%20-%20Concepts%20and%20Techniques%20%283rd%20Ed%29.pdf) Apparently it takes forever for me to load the page, but you can still download the pdf by just right clicking the link and choosing "save to disk" or something similar. [Neuro-Fuzzy and Soft Computing](http://www.csbdu.in/pdf/Neuro-Fuzzy%20And%20Soft%20Computing%20Jang.pdf) Edit: Those are probably useful in other stuff as well. But here is a [link](http://matlabgeeks.com/tips-tutorials/neural-networks-a-perceptron-in-matlab/) I found just for Perceptron.
Right, and we're trying to say you should take a step back because this is a recipe for pain.
Just use solve. I think if it's not able to solve it analytically it will use a numerical method on its own. 
C'mon man! While it is fun to challenge yourself and code these up, **don't do OP's** homework. Of course, OP really shouldn't just post the homework without any real question or attempt. But still...
Is there a clear question within that multi-paragraph rant? I love Simulink. I earn my living having Simulink open. Perhaps you're trying to use it wrong? It's not a hammer that you go around hitting everything with. The I/O &gt; Maybe something that would take 10h to do in Simulink From scratch I can build an model to run an engine in Simulink in 10 hours. &gt; to have a reference to a block gcb gcbh &gt; and be able to obtain any variable I want from it using code. get(gcbh) get_param(gcb,'Param') &gt; Are you also frustrated with the Simulink way of doing things? Nope. &gt; Have you found a workaround for this issue? What issue? &gt; Mistakes are done much less in code than in blocks. Perhaps you aren't good at using blocks? It's like me arguing that "Mistakes are done much less in Matlab than in Python" because I'm just starting to learn Python. &gt; which is not logical in certain situations Then don't use it in those certain situations? Everything isn't a nail and Simulink isn't a universal hammer.
Did you have a question? Or are you just looking for someone to do your homework (which sadly /u/Reddia did for you even though (s)he shouldn’t have)
For anyone wondering how I got around this, I used the variant override parameters instead of conditionals. That seems to make simulink ignore and errors or missing simulink.variant objects otherwise.
Thanks very much for your advice, turned out to be an issue with how it was reading in netcdf files as it was written for an older version. Updating the script for the newer syntax fixed the problem :)
Thanks very much for your advice, turned out to be an issue with how it was reading in netcdf files as it was written for an older version. Updating the script for the newer syntax fixed the problem :)
you can use fsolve with your functions in a vector: F = @(V) [first function; second function]; where V(1) = X, V(2) = Y check out the documentation for fsolve for more info
&gt; I would like for example to have a reference to a block and be able to obtain any variable I want from it using code. I would like to be able to change block parameters from within the Matlab function at my please. I'm having issues understanding what the problem is exactly. If a variable is given in a Simulink block, Simulink automatically assumes that it is referencing a value in the base workspace. Write the valve to the workspace, run model, rinse and repeat ad nauseam. If you're interested in changing a value during the executing of the model (IE, no longer LTI), then yes, that is a complicated fix, but it's all within reason. Look up tables, mathmatical operators, user defined functions, and s-functions all exist to deal with these issues. The argument that line-by-line code is always easier is entirely subjective. I make tons of blunders just writing scripts to plot data. With graphical methods, I find that are fewer chances for me to make the same mistakes. I greatly enjoy Simulink's dependence on graphical programming, especially for controls development and rapid prototyping. It doesn't fix the issue that I have to know the math before hand, but going from continuous Laplace to discrete to Simulink is a cakewalk. In a final, shipping product, handwritten code is the only truly reliable solution right now. But if the race is to get the best response possible, we should all ditch code and go back to making Op Amp based controllers. And even then, those have their issues. &gt; First the language is terrible but that is beyond the point. I believe most programmers agree on this point. However, most programmers may also agree that MatLab's extensive collection of off-the-shelf programs and functions is what makes it competitive at all. &gt; What do you think? Are you also frustrated with the Simulink way of doing things? I am entirely attached to Simulink, probably to a fault. I think Simulink works very well. My largest issues are with 3rd party compilers and interpreters for real-time applications which are extremely bloated. If you can explain your problem in a bit more detail, we're willing to help, we just need to understand the problem precisely.
I guess we all miss being students sometimes where the problems you work on are so neatly constrained and once you are done with the problem set you are done for the week.
I have an algorithm that calls different objects and modifies their parameters sometimes. That's the key. Sometimes. I want to modify objects at my please without relying into having to output all the parameters that I may change, whether I want to change them or not. I also want to be able to have a normal way to store information on my own object. There's no way to store data in Simulink in a normal manner. Either I use data store block or I use delays. Can I save complex data such as structures or objects? No. Let's put an example of the complexity of blocks. I have three algorithms, when the first finishes the second is executed and so the first is executed again. After 20 executions of this back and forth a third one is executed for 10 times. It's literally 10 lines in C#. I can't even think of a way to do this in Simulink. All the blocks would be on execution at the same time no matter what and I would have to make some kind of selector to use the outputs in the inputs of other blocks somehow. Totally unnatural and illogical because my systems don't respond to a input/output. Sometimes the algorithms are calculating things. Sometimes they have results to output. Sometimes they call other objects. While it's technically possible to do this in Simulink think of the complexity it would require. I can come up with more examples but you get the point. My point is that for researching new methods and algorithms Simulink is not the way to go. You don't really know what's going on. You're trying things and you need the best tool for the job so it's not a pain to have to program something. Simulink makes simple things complex. Before deciding to do it all in C# I was having blocks with 20 inputs and 20 outputs and 5 delays between themselves. That's Simulink way. It worked but it took ages to program and the most minor changes would require a lot of other changes.
&gt; Sometimes. I want to modify objects at my please without relying into having to output all the parameters that I may change, whether I want to change them or not. I think this is a reasonable output you could get, but it's just not something that Simulink, by default, offers. Like any software package, end users are expected to create scripts and functions if they really need to get a specific feature. Writing a script which executes on the Simulation Stop Callback might get you most of the way there. &gt; There's no way to store data in Simulink in a normal manner. "Store" is relative. Store for use in the model? Yes, you might need to use delay or memory blocks if that information isn't using right away, or maybe even a buffer block. Store as in to analyze after execution? The simout block generally fits the bill. &gt; I have three algorithms, when the first finishes the second is executed and so the first is executed again. After 20 executions of this back and forth a third one is executed for 10 times. It's literally 10 lines in C#. I can't even think of a way to do this in Simulink. Have you tried Stateflow or s-function implementation at all? I say Stateflow because the issue sounds like a problem of execution order and evaluating parameter states, which Stateflow does a fair job at managing. I mention s-functions explicitly because they can be based on C. Personally, I haven't found the need to use them, but it might give you the implementation method you need for this application. &gt; My point is that for researching new methods and algorithms Simulink is not the way to go. I think you're right, but only because what you're talking about isn't within the scope of Simulink. Simulink was designed for dynamic system analysis in mind. Modeling and simulation systems for use in things like control-theory and signal processing, where the time domain plays a significant role. If you're working on something which is more based on iterative steps which would work well in code, then by all means, do your development in code. You should always use the best tool for the job, and maybe this time, Simulink isn't that tool.
 &gt; There's no way to store data in Simulink in a normal manner. Why would you? Simulink is a Simulation toolbox. You are supposed to model time based functions in it. You model what ever you want about the real world and then you press play. It *simulates* controllers. You can even pick what type of simulation estimator you would use (ode45 is default). Or if you are trying to simulate things discretely you can use a fixed time step. It's not a general purpose 'touring complete' language. (Though I don't doubt there is a way to do about everything in it). Are you trying to use Simulink as a programming language and not for Simulation or Model-Based Design? &gt; I can't even think of a way to do this in Simulink. You use a switch. It's what they're there for. &gt; All the blocks would be on execution at the same time no matter what and I would have to make some kind of selector to use the outputs in the inputs of other blocks somehow. You mean like an enabled subsystem and a merge block? Don't blame the tools because you don't now how to use them. &gt; Totally unnatural and illogical because my systems don't respond to a input/output. Sometimes the algorithms are calculating things. You're going to either have to post your code or your simulink models because nothing you're describing is making sense as a problem. &gt; You don't really know what's going on. I know exactly what's going on. Because I put the blocks there. &gt; That's Simulink way. It worked but it took ages to program and the most minor changes would require a lot of other changes. Actually that's the opposite of true. It's why more companies are moving to "Model Based Controllers". They even added it to their catch phrase on NPR. You honestly sound like you tried to use Simulink as a general purpose language, which is absolutely not what it is. It's like complaining that my VW Golf makes a terrible snow plow. It does make a terrible snow plow because it's a hatch back. Stop blaming Simulink because you tried to use it for something it wasn't designed for. &gt; Simulink makes simple things complex. It makes things simple. Which is why companies are starting to adopt it more for their controllers. It's much, MUCH faster.
generally you can access data using an index and a colon. the colon tells MATLAB to grab all entries in that dimension, so: first column of z, all rows: z(:,1) second column of z, all rows: z(:,2) first row of z, all columns: z(1,:) and so on and so on... you can keep adding indices and colons to get exactly the subset of z that you want
/u/costrom, mattt7 wants to send you a Bitcoin tip for 8,070 bits ($2.00). Follow me to **[collect it](https://www.changetip.com/collect/669800).** -- [^^what ^^is ^^ChangeTip?](https://www.reddit.com/r/changetip/wiki/tipping-on-reddit)
For starters, have you checked out the [fitnlm()](http://www.mathworks.com/help/stats/fitnlm.html) documentation and examples? They may be of help. What have you tried so far? What stage in your process are you having trouble? If you share any code: 4 spaces starting a line --&gt; ( matA.*matB*cos(pi)^exp(matZ) ) will show the text as you have it coded in your editor and not impose reddit's formatting --&gt; ( matA.*matB*cos(pi)^exp(matZ) )
You need the covariance matrix for this... ive never used fitnlm() but i see it returns a "NonLinearModel object". So this should work... % Get your NonLinearModel object from your data mdl = fitnlm(X,y...); % Display the coefficient covariance matrix. CM = mdl.CoefficientCovariance % Compute the coefficient standard deviation. SE = diag(sqrt(CM)) % SE is your error of each newly estimated parameters, so plot it good luck.
What I think you're after is doing 10 or 50 calculations (hint: iterations) with different lengths (nObs) of your observational data set with which you build your model for. Then you're after the (suspected) convergence as you increase the nObs you allow your model to use for training/intelligence.
Absolutely : When the data read character is sent, The UART is supposed to send back 134 bytes, comprised of 3 '*' characters ( UART1_TX('*') ), data array of 128 bytes - the high and low bits of each sensor on an 8 x 8 grid, then a checksum ( "UART1_TX(checksum)" ) then stop. What I get in practice is that I always get the correct number of bytes and the sequence reads correctly the first time after power-up (resets the UART), then subsequent reads may or may not read in incorrect sequence. That is, there may be many sensor values (in correct form) before the "* * *" header sequence is seen, then a progression of sensor values. This appears to be the result of reading out the buffer in correct order, but with an incorrect starting point - starting in the middle of a set of values somewhere. There is a Windows GUI supplied with the board that apparently reads correctly, but as I said, the author won't post code so I'm very much in the dark about how to get this all up and running in correct sequence. As a Plan B, I could read continuously, sift values until the start header shows up and start using the data at that point, but I'd rather figure out how to get things started properly every time. I'm not above putting a reset button on the UART, but somehow it shouldn't be necessary. "Correct" sequence will look like: **42 42 42** 214 1 96 0 102 0 104 0 101 0 107 0 107 0 109 0 107 0 96 0 101 0 96 0 101 0 102 0 112 0 116 0 113 0 95 0 100 0 95 0 102 0 105 0 119 0 120 0 123 0 93 0 98 0 98 0 100 0 108 0 124 0 132 0 129 0 94 0 97 0 95 0 106 0 114 0 124 0 150 0 143 0 100 0 96 0 101 0 102 0 109 0 120 0 128 0 133 0 94 0 98 0 100 0 100 0 107 0 105 0 120 0 123 0 91 0 99 0 96 0 96 0 104 0 107 0 109 0 113 0 188 188 Whereas an "incorrect" sequence might be something like: 108 0 124 0 132 0 129 0 94 0 97 0 95 0 106 0 114 0 124 0 150 0 143 0 100 0 96 0 101 0 102 0 109 0 120 0 128 0 133 0 94 0 98 0 100 0 100 0 107 0 105 0 120 0 123 0 91 0 99 0 96 0 96 0 104 0 107 0 109 0 113 0 188 188 **42 42 42** 214 1 96 0 102 0 104 0 101 0 107 0 107 0 109 0 107 0 96 0 101 0 96 0 101 0 102 0 112 0 116 0 113 0 95 0 100 0 95 0 102 0 105 0 119 0 120 0 123 0 93 0 98 0 98 0 100 0 Board side code is here: https://www.eewiki.net/display/projects/Panasonic+GridEYE+Breakout+Board+and+GUI
thanks for the reply. Yeah i realized it's a little unclear. I was looking at the rand function but i need it to be "timed" so to speak. I'm running a model of a wave energy device over a period of 100 seconds and seeing how the waves affect its movement and therefore power output. The waves themselves have a period of 10 seconds each. But i want each wave to have a different amplitude so every 10 seconds a new number generated as opposed to every second
I'm not sure how you intend to do this with ode15, but it sounds like you should just simulate 10 seconds, then make a new random amplitude, and simulate the next 10 seconds. You probably don't really want a random number being generated inside your ode. 
&gt;&gt;shapeInserter = vision.ShapeInserter('Shape','Circles','BorderColor','Custom','CustomBorderColor',black); circles = int32([360 360 360]); % [x1 y1 radius1;x2 y2 radius2] imCircle = step(shapeInserter, imCrop, circles); I'm also trying to fill the area by drawing lines pertaining to the equation of a circle but that doesnt seem to be doing anything either
Have you checked the [vision.ShapeInserter](http://www.mathworks.com/help/vision/ref/vision.shapeinserter-class.html) documentation? There's a few syntatictal reasons this code isn't doing what you're expecting. It looks like you've *tried* to follow the examples in the documentation, just perhaps too hastily and quickly. You're right on the path for what you want to do, just (re-)read through the documentation and correct your syntax. But it also looks like you've got a method from another user. At any rate, TMYK.
3? A = [1,1,1,3,5]; bins = 0:2:6; H = histc(A,bins). This gives you four bins, but you can just discard the last one.
Probably density. Density means that if you take all your counts, multiply them by the bin size and take the sum, it will equal 1. This is a roundabout way of saying that the integral is 1. Lots of good resources on this. Google "density histogram" or something.
Try the Matlab documentation instead of Google. Take a look at nargin, and inputdlg() 
Check out the [documentation for nargin](http://www.mathworks.com/help/matlab/ref/nargin.html), and pay attention to the bottom "See Also" suggestions..
I don't know anything about this process myself, but what have you tried already? Does the bioinformatics toolkit have a tool for this? What does the documentation say? 
:( ...but that's ***how*** I get to the docu
thanks a lot, I believe this is what I'm looking for. As i mention above the random number represents the amplitude of a wave - I want the mean of the wave to be 6m, within a range of 2-10m and a standard deviation of around 2m.
I have never used any textbooks for MATLAB/Simulink, so I can't help you on that. But since you mentioned you have to model dynamical systems I'd recommend you to follow [this](http://ctms.engin.umich.edu/CTMS/index.php?aux=Home) tutorial. It's the best online tutorial that I know of. Just don't jump all over it. Start from the introduction and do it step by step. Edit: BTW, Mathworks website usually has great resources. Check [this](http://www.mathworks.com/academia/student_center/tutorials/simulink-launchpad.html) page for more info.
Okay, great! So that sounds like your solution then, right? 
Right, I think I figured it out!
Mathematically, whether you optimize your model (fit the curve) through a gradient descent for non-linear models, or simply through differentiation for simple parametric leased-squares... the distribution of residuals and will still be reflected in your covariance matrix. The gradient decent is simply an optimised algorithmic tool for differentiation, and wont affect the actual mathematics of the leased-squares distribution of errors. But maybe I miss understood your question???... I do not know what you mean by "learning rate".
I'm fine with the runge-kutta method. It's just incorporating the code that would force the step size to adapt is what I'm having trouble with.
the step size is usually changed using the error at that point (which is usually calculated as the difference between the RK4 and RK5 values at that point). a formula commonly used is: h = (err/tol)^(1/n) where n is the order of the scheme (in this case n = 4) IMPORTANT EDIT: just realized the formula above is a multiplier for changing the step size, not for the step size itself
What are you trying to do with this code? e: you removed your code why?
I can reduce it pretty easily to 1 for loop... still about 7 lines long though since I don't see the pattern in the exponents you are using. Part of the reason is that there's no real background to the problem. Anyway, you should remove all factors of ten and replace them with values from a matrix - this is the big reason you can't reduce the for loop right now. After that, remove all your crazy annotations for your for loop... why do you switch from x(n+1) to x(n+3)?? stick with x(n+1) and y(n+1) on the left hand side, and this will collapse all your for loops in to one for loop.
Whenever you want to know anything about a command: &gt;help command &gt;doc command
be careful about using *exp* as a variable, since it shadows a built-in function
&gt; If a file or folder is not on the search path, then name must specify either a full pathname, a partial pathname relative to MATLABPATH, a partial pathname relative to your current folder, or the file or folder must reside in your current working folder. [source](https://de.mathworks.com/help/matlab/ref/exist.html)
It was last year that the toolbox worked but I resolved the problem by circumventing MATLAB using a java program, thanks for your help though. 
Ha, it would be nice. I learn by example and I cant find any unfortunately. I've always struggled with "Analytical" math like algorithms, signal processing etc. The assignments are reliant on completion of the previous assignment as well :(
[this](https://www.mathworks.com/matlabcentral/newsreader/view_thread/23346) should give you an idea as to how to generate the indices for the vectors should look more or less like: perms = [ 1 1 1 0 1 0 0 1 1 0 0 0]; [nrows,ncols] = size(perms); r = randperm(nrows); perms_sorted = perms(r,:);
thanks that function helped (randperm) for reference to anyone I used a code like this count=1; saugm=zeros(1020,17); while count &lt; 1021 saugm(count,1:17)=augmatrix((z(count)),1:17); count=count+1 end disp('Done.')
You might look into the repmat() function to make beta1T the correct size for RiExT.
I have made it as far as finding out that i can use vec2ind() on my trained selforgmap to get the index of each neuron for each sample in order. But now could anybody provide me with the means of using this index to find the coordinates of the index in my selforgmap
In case you care, here's how to find the "m" folders on your path: a=path; b = strsplit(a, ';')'; c = cellfun(@(x)strcmp(x(end-1:end), '\m'), b); b(c) 
No problem, I've had my share of headaches with weird communication protocols, so I feel you. Just one last thing, I'm probably not getting the part where you say &gt; the sequence is apparently correct even if the data stream starts in the middle Does that mean that even if your sequence doesn't start with three asterisks you still get the right data? Or does the correct data start after the three asterisks? In the second case I guess you don't get all of the data?
The documentation for ode45 answers your question very clearly. Have you looked at the documentation? If so, and you are still confused, what part of the documentation doesn't make sense to you? 
Create a subfunction containing the differential equations (modeled as a pair of first-order diffeqs) and include several if-else statements to select the appropriate diffeq depending on the value of y. function dY = model(t,Y) % Y(1) = y % Y(2) = dy/dt dY = zeros(1,2); dY(1) = Y(2); if Y(1)&gt;b dY(2) = ... elseif Y(1)&lt;-b dY(2) = ... else dY(2) = ... end end Then call model() in ode45() contained in your main function, passing the initial conditions and the time vector.
Okay, so I see a homework problem and some code. So what's the problem? 
Maybe try asking something? Running something? Coding something? Do you get any errors? What? Where? As the other poster pointed out (as does our sidebar) - **we don't do your homework!**
This is what I came up with but im not sure if its set up correctly. http://i.imgur.com/Af0damC.jpg
This is what I came up with but im not sure if its set up correctly. http://i.imgur.com/Af0damC.jpg
Because it's not matlab, it is plotly.
Okay, so in your code you never provide the plotting function with axis values. I'm not sure how you expect axis values to show up in the plot if you don't provide them. The documentation makes this very very clear. http://www.mathworks.com/help/matlab/ref/surf.html &gt; surf(X,Y,Z) uses Z for the color data and surface height. X and Y are vectors or matrices defining the x and y components of a surface. If X and Y are vectors, length(X) = n and length(Y) = m, where [m,n] = size(Z). In this case, the vertices of the surface faces are (X(j), Y(i), Z(i,j)) triples. To create X and Y matrices for arbitrary domains, use the meshgrid function.
Is that for python or something? 
It's for any data. There are [API libraries](https://plot.ly/api/) for many common data processing languages.
The aggravating thing is that it ships with a demo GUI that works just fine, but the author won't tell how he did it. My guess is he's tossing the first partial read (as below) It's a "cyclical" read, that is it keeps cycling through the array of sensors, but often starting in mid-cycle (rather than with the header then the first sensor). The data is apparently good all the way through - both before and after the header - but it's just reading/transmitting from the middle of the sequence at the start. I posted the other question which is an attempt to simply take the data any way I can, filter it until I find the start sequence and then read arrays into proper form from there - essentially shifting the matrix indexes and throwing out the first partial read. I've been getting somewhere with it...sort of. This may be the only solution.
It started as a web based visualization platform to complement python, but has been expanded with additional APIs. The downside is that this is another proprietary platform that uses a service model. Bokeh is a less mature alternative, but open source, that was started in the same way. It has libraries that support R and Scala atm, if I remember correctly.
Yes! Thank you. I managed to find that about 10 minutes ago, but my code was running so I didn't want to preemptively say my problem was resolved. This appears to work.
Ok I see now. So here is what I'd do if I were you. First of all: assess the frame rate you need. If you need maximum frame rate, as in the most your board is capable of doing, I wouldn't opt for discarding any of the data. Each byte you toss away is either a corrupted frame (a frame containing reading from different instants) or a loss in frame rate. So think about that and decide if you can afford the deal. If you CAN afford losing frames than you could set up a cycle that reads continuously and discard anything that doesn't start with the three asterisks. That's the most demanding trade off in terms of frame rate (you could end up halving or even diving by three or more), but it comes with the advantage that each frame you DO keep after the "filtering" is coherent. If you still want to keep max frame rate and you are willing to lose some coherency, you can set up a matrix that gets filled in as data comes in. Example: first read all 128 value in good order, you display the values. Second read you get 64 values than three asterisks then the remaining 64 values. You fill the matrix accordingly: the first 64 values (up to the asterisks) starting from 64 and up to 127; the second 64 values (after the asterisks) from 1 to 64. The way to make you variable to reflect the data matrix is "reshape" function. It rearranges a matrix in a given rows/col provided that the total number of entries stays the same: A=1:100; B=reshape(A,10,10); This converts 1by100 array A into 10by10 matrix B. On a side note, you could ask the vendor to support you with more documentation for the protocol. It's up to you. If you need help with the code, after your decision, let me know.
Use [the debugger](http://www.mathworks.com/help/matlab/ref/dbstop.html) and make sure useranswer has the value you're expecting.
The UserData property is rarely, if ever, set automatically by Matlab. If hObject is a text box, the property you want to get is 'String' i.e. useranswer=get(hObject,'String'); 
2 things- i.) **DON'T USE "i" AS AN ITERATOR!** It (and 'j') are reserved for the imaginary number(sqrt[-1]). Use ii, or jj, or imo if you ever loop over 12 months (for example). ii.) You're already looping 20 times, so why not just throw figure(ii); plot(x,y); lines in there? There are your 20 figures!
a couple people have told me I can make matrices to solve the problem, but I don't quite know how to do that with these equations. This is part of a review, and it is the only one out of three that I do not know how to do. I have a few days to figure it out, and this was really the only thing I could think of: good ol' Reddit. 
All good answers here already. I'd also suggest not using assignin(). It's not the worst thing in the world, but it's much better to simply return a value via function calls. 
Would something like: Icomposite = (1/3)*I1 + (1/3)*I2 + (1/3)*I3 do what you want? this takes mean of three images, I1, I2, I3 and forms a composite, Icomposite. 
This is what I have done now, as below, but in a function using vargain instead, thanks for the reply.
This is sort of how I feel every time someone says they found some "groundbreaking" correlation using some "machine learning algorithm" and "big data." I then start betting to see how long it will take before I just throw my hands up, yell "Bullshit!," and storm out of the room.
I think we'd need a bit more info to help with the problem... what exactly is the problem you're having? What's the difference between the data... how is it that you can plot the ode results but not the other results? What are the "3 different ways" you're finding the data? How many spatial dimensions are you plotting and comparing (x,y,t?) (x,y,z,t?) (x,t?) ? What exactly are you even trying to plot????????????????
hmm..it seems you are right. this is quite ridiculous, so if I'm supposed to have an error of about range -20/20, (space is about a 1000 pixels by 1000 pixels) from the ground truth and I have 2000 samples. It means the SSE will be 2000*(20^2) ???? 
I think you're looking for quiver3 or I am totally misunderstanding your post
Seriously? Have you forgotten how to math? 
Simple syntax problem. The correct syntax for "if not equal to X" is "if val ~= X". The correct syntax for "if not equal to x OR not equal to Y" is "if val ~= x || val ~= Y". So to summarize: Is equal: == Is not equal: ~= AND: &amp;&amp; OR: ||
You might consider paying attention to those squiggly red lines. 
I can't really read that code the way it's formatted, but it sounds like you are looking for the mod() function. 
 You are correct, &amp;&amp; and || are the most efficient ways to do logical checks, but you can also use &amp; and |. The difference is that &amp; and | evaluate both conditions no matter what, while &amp;&amp; only evaluates the second if the first is true, and || only evaluates the second condition if the first is false. These are called short-circuit logical operators. (I'm guessing you already know this, just throwing it out there for OP)
Thank you for your quick response! I love the fact you don't straight up give me the code, which is what I kind of hoped for, too. I don't know much Matlab yet but I was stuck thinking I could do some sort of repetition matrix of [1 0; 0 1] (doesn't work :D). Thank you for expanding my horizons, I'll have to see how I can make odds ones in different rows. Thank you again!
You're correct. See my edit. I realized this after my post and you must have replied between the edits. Note that I have an outline of a less brute-force method using the same idea. All you do is use `mod` to always make it odd then trim to the original size. 
There's no legal way to obtain MATLAB for free; it's commercially licensed software. You likely will be able to get a pretty steep student discount by purchasing through your university. Depending on the requirements of your course, GNU Octave is an open-source software suite that replicates much of the functionality of MATLAB (to the point of being able to run a fair number of MATLAB scripts without modification). 
If you're this far into the semester and just now realizing that you need it, you're fucked anyway. Try again next semester.
well let's see... % clear % don't need this % clc % don't need this num = 0; % players = [1, 2]; % don't need this % [r,c] = size(players); % don't need this while num &lt;= 9 for player = 1:2 % hard coded this fprintf('Player %d\n',player); userNum = input('Enter 1 or 2: '); if userNum == 2 || userNum == 1 % what the shit num = num + userNum; % elseif userNum &gt; 2 || userNum &lt; 1 % don't need this else % added this fprintf('Incorrect Input\n'); continue % don't need this end %if num == 10 % don't need this % don't need this %fprintf('Player %d wins!!!\n',player); %break % don't need this % end % don't need this end end fprintf('Player %d wins!!!\n',player); Edit - I just looked at the actual instructions for the project, and that is not what your original code is doing. That said, the actual instructions for the project... &gt; make a counting game where two players will count to 10 and who ever gets to 10 or above, they will win. Are so simple, they actually go over my head. 
ok thanks mate...i will give it a go. and because the new vector will include weekends(which will all be non entries) im guessing i can just delete all of these after. if i run into any problems il just reply to this thread again if you dont mind. appreciate your help
Hello and first of all thank you very much. I have to say this is much more like the method I expected the code to look like (not that anything else that accomplishes the same would be "wrong" - it's just that I thought an easier method such as this was intended and more accessible to me as a beginner). Indexing is certainly something that the book discusses but I never figured I could do it like this. Thank you again very much!
So you want to extract from your data set the data that was recoded during a certain time period where all 4 markets were open? Presumably this is the same "valid" time period for each day? I would construct an index of the valid rows, something along the lines of: for each row get time check if time is within valid time period if yes, record 1 if no, record 0 The easiest way to manage the logic of determining if the time period is valid or not would be doing it in a numerical fashion, rather than faffing around comparing the strings you currently have. Check out the datestr and datenum functions which will allow you to convert back and forth.
yea pretty much. thats the way ive been thinking about it in my head. il look into the datestr and datenum. thanks mate
So.. don't do that? Computers don't have infinite resources. http://www.mathworks.com/help/matlab/ref/memory.html
Can you divide the structure up and do the operation either in parallel or iteratively instead of all at once?
The repmat function could probably help you out here. You would use it to make A the same size as B and then do your vector multiply. The only caveat is for very large arrays repmat may be more time and memory intensive.
MATLAB can integrate numerically or symbolically. Numerical integration is basically just using the trapezium rule (actually slightly more accurate but similar algorithms). You need to specify the function using MATLAB's @(x) function handle notation, then use integrate(). Try this doc for size - specify your integrals in the right order - I think you can nest integral(). http://uk.mathworks.com/help/matlab/ref/integral.html I haven't got my head round symbolic MATLAB so you'll have to wait for a more experienced response for that!
Try ctrl+q
Ctrl - C is your friend. Failing that, use Ctrl-Shift-Esc to go straight to task manager.
they don't work when matlab dies
Thanks for the help, I'll look into it!
I think the best option here would be to make a gui specifically tailored to this purpose. I'm pretty sure you should be able to do most of the things you are trying to do here. 
Thanks, I wasn't aware that that was a thing and now I know where to look to continue with this. 
There isn't a built-in function to do this, but there are two easy options. One is to sequence the selections--use inputdlg, and, if the user cancels, open the menu. The second, more elegant option is to create a small GUI to do what you need; you can easily vertically stack the buttons and resize the figure to allow a variable number of gasses (either by looping over the number of gasses for and adding a pushbutton for each, and adding an edit box or two for user input; or by creating a single pushbutton, using copyobj to replicate it and altering the properties as needed. 
Yep, no problem. I have made a short into tutorial for guis if youre interested. https://www.youtube.com/watch?v=xTC5IXeILMA&amp;feature=youtu.be
You may take some time to explore the functions in the [signals toolbox](http://www.mathworks.com/help/signal/functionlist.html) as well as some of the links returned for a Google search on "matlab music toolbox". In the 5min I was looking, it seems there's this [MIRtoolbox](http://www.mathworks.com/matlabcentral/fileexchange/24583-mirtoolbox) both on the file exchange as well as multiple hits from the authors and their papers documenting the toolbox in the Google return. I'm not sure if this is what your after - I've done minimal signal processing in my MATLAB exposure, and none with regards to music and extracting *"things"*. Good luck, we're happy to help debug or when you get stuck along the way.
Linear wave files are really easy to handle in MATLAB. I developed an in house tool for NPR using MATLAB to look at peaks and loudness as well as one that tied into FFMPEG to get additional day. Shoot me an email or PM if you want to talk about it more. DAKLabb.com is my website, I develop MATLAB for academic and commercial research/projects. 
I have a feeling I know who this is. Do you go to school in central Texas?
There is a chance you get a free yearly license for it from your school. Look around in the 'free software' section of your universities website/library support staff. Matlab is most often installed via the mathworks website. You will need to download and then install it, nothing real fancy. This most often requires you to make a mathworks account.
I am also new to matlab and am trying to create a function that does this same checkerboard pattern. The first line of the function needs to be 'function y=exercise1(n)'. Can someone please help me make a function that generates an array like this? I have been trying for awhile, but I am stuck on the syntax of how to make this function. Help would be greatly appreciated
OP did nothing wrong. This sub does have a problem with rampant down voting. It's also got a problem with shitty dickish comments like yours. If the sub is toxic to dickheads, well, that's fine. 
It's not like there isn't a giant FAQ to the side and there's the distinct, we won't do your homework statement. There's a ton of shitty post with clear homework questions without attached codes or any effort put into attempting it...I downvote the shit out of those. And to OPs question Google is simple as shit, regardless if you're a freshman or not.
you ppl are no fun. 
This is probably homework and I'm not sure how this sub deals with it, but since I got very fast and kind replies to my original post, I decided to pay that forward for you as well. Therefore [here](http://imgur.com/UwF6JPI) is a solution for your problem using your naming system. It is in fact the same as posted by /u/ghost_403 for who I have to thank again. Note: take off the semicolon at the end of the code for it to show y = [matrix]!
Will any of this help? http://stackoverflow.com/questions/3881492/select-a-different-base-for-a-logarithmic-plot-in-matlab
I looked at that one 3 times, and it didn't make sense with what I wanted to do any time. For some reason someone else links to the exact same thing and it suddenly clicks and all comes together. Thanks!
You'll get more response if you can ask a more specific question. 
You could do it that way! &gt;&gt; n = 10; &gt;&gt; A = [1 0; 0 1]; &gt;&gt; repmat(A,n/2,n/2) ans = 1 0 1 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 0 1 1 0 1 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 0 1 1 0 1 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 0 1 1 0 1 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 0 1 1 0 1 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 0 1 But this only works for even n. Edit: It might not be the most efficient method, but I actually really like this way of thinking about checkerboards. If you restrict the length/width to even numbers (i.e. the corners must look like [1 0; 0 1]), then you could define a checkerboard recursively as any tiling of any smaller checkerboard, with the smallest checkerboard being [1 0; 0 1]. This code then builds a larger checkerboard out of the smallest possible checkerboard.
I don't see the problem... I used your code and it plotted it as expected. http://i.imgur.com/R7FMeac.png Thresh=sort(rand(20,3)*16,1)'; 
Do you need help starting or with a particular part off this problem? If it's starting then you'll probably need to be a little more specific however I do have some tips. Consider the information the submarine would have to store, it will need to store a list of mine positions, have a timer that is counting down, and store it's previous positions or be moving around the area in a systematic way. 
The 'legstr' is causing your code to fail, so it doesn't make it to the second iteration of your loop. Probably has to do with your indexing assignment. Try that line without all the other stuff to see how it fails. Maybe legstr{end+1,:} might work. 
Just use something like: for i=1:1:length(cf) curve = grades + cf(i) * (100 - grades) plot(curve) legstr{i} = num2str(cf(i)) end legend(legstr,'location', 'east') I also suspect you need a hold command and/or some more specifications for formatting each line.
yeah i need help starting. I am somewhat awful at matlab. I need to have, as an end result, a line showing the path that the unmaned sub took, through the mine field. I have coordinates of mines in this virtual field, and i would like to sub to continue straight if it has seen a mine within 23 sec, else turn around (following the formula of a circle to make the turn). 
Seriously? What have you attempted so far? This isn't even a while loop question, this is a homework question that uses a while loop. 
Kudos on the resolution update. 
Wow, quite nice! This one is certainly very simple looking. I wrote [it](http://imgur.com/GsPNwaU) down in Matlab for others too. This and the below version by /u/ghost_403 are certainly great looking, although I didn't at first grasp what is happening here. Well done, well thought!
Try closing the image file when you're done with it.
by the looks of it, your data points are being printed as asterisks which is why the corners seem funky. I think changing the data point markers to be rounded points or solid lines by passing '.' or '-' as an additional argument to plot may make your plot look a little cleaner. For reference http://www.mathworks.com/help/matlab/ref/linespec.html?refresh=true
Thanks! I had the same experience with the native ROI drawing programs, so I too employ my own by defining an elliptical region using rbbox, then just using those coordinates to define a section of the image for consideration. 
Repmat will work, you could also use the third output of ndgrid. Not sure which will be faster. But for the love of fuck, don't name a matrix "max". Max is a function that finds maximum values in an array. It's a Matlab built-in. 
Can you more clearly describe the problem(s) you're having and your goal? This is a bit vague. Do you have any code of what you've tried? If you do putting 4 spaces before code lines (e.g a*b*c^d*e) blocks reddit's formatting (e.g. a*b*c^d*e) and instead displays your code as you see it. About your problem... what is your "stupidly simple function"? Can you integrate it yourself on paper? Integration isn't really performed at a point, is your point a part of the initial condition to constrain your constant? Do you have bounds you are trying to integrate between?
http://www.mathworks.com/help/matlab/ref/plotyy.html http://www.mathworks.com/help/matlab/ref/linespec.html
In general, have your constant off integration as it's own variable. Define an anonymous function for your integrated equation, sans constant. Use fprintf to display your answer.
Thanks. That helped.
would my slope and y-int just simple be my c(1) and c(2) values respectively? i just realized that when looking at the code originally i was trying to thing of a command that would give me the slope and y-int of an line
Exactly, you already ran the command, you just needed to recognize the coefficients.
thank you so much, i got the question 100% correct now (i was on 50%). About line 13, im sorry but i really have no clue how to make it more efficient.
I wrote a blog article on this recently which focused on managing the indices over which the moving average is calculated. It's something I remember struggling with when learning Matlab. http://matlaboratory.blogspot.co.uk/2015/03/alternative-function-simple-moving.html There's also a follow up post on writing a function that allows weighting and setting of the lead and lag, if you're interested.
It depends. In theory yes you can write your own version of the toolboxes... But no one can tell you what you'll need without knowing what you want to do!
&gt; Can I do all the stuff from the toolboxes by coding in matlab? With a few hundred thousand man hours and a PhD, perhaps. 
At my uni we have to reactivate the student edition every year. The activation keys are only sent to active students.
...and it will likely be slower and less robust. 
Gotcha- didn't know if you were still stuck on the input part.
In the last step, the output is set to a boolean array. For example, [-1 1 -1] &gt; 0 would give you [False True False] which Matlab displays as [0 1 0]
Il faut que tu ajoutes quatre espaces au début de chaque ligne, reddit affichera tout avec une police monospace.
If you edit and put 4 spaces starting each code line it breaks reddits formatting and will format it all nice and *code-like* see: *code-like* Just like one of your loops which get indented by MATLAB. 4 starting all lines will preserve your indenting as well. In the editor, you can just highlight your whole code, tab once, copypasta, shift+tab/ctrl+z, and you're back to square-1.
Yes, for an odd length vector, the median can be calculated without accumulating additional floating point round off error. For an even length vector, you will need to compute the mean of the middle two elements, which will carry with it the floating point error associated with two additions and a division. 
Type &gt;&gt; clear in the command window. Assuming the name of your file is Question1.m, type &gt;&gt; Question1 in the command window next. What happens? You should get an error message because you probably want your file to read: a = [1:2:100]; odds = a; b = [0:0.1:10]; others = b; I don't know how new you are, so don't be offended if my advice is too simple.
Thank you good sir! That fixed my issue!
The formatting advice is really important. Also, nothing wrong with French, but most people here speak English so it will be easier for us to help if you translate the French bits for us. 
Alternatively you could just use odds = [1:2:100]; others = [0:0.1:10]; This allows us to skip unnecessary variable assignments. Not really sure what the others is supposed to be, but based on what OP gave us others gives an array of 101 values from 0 to 10 incrementing by 0.1.
I would go ahead and suggest that /u/undercoverfridge start most of his/her programs with `clear;close all;clc;` at the top of them so that weird things to happen from running previous programs with common variable names (like `A, i, j, B, x, y,` etc.).
i dont really love the way matlab handles functions as much, but i really should start using them more often. Apparently the way matlab compiles the code its much faster to use functions than a script in longer running codes.
In addition to the type error, this code is a very inefficient implementation in MATLAB. Textscan is designed to be able to read the entire file at once, and to discard values you don't need. Your code will run much faster if you include the read commands feeding `Temps`, `Temp2` and `Temps2` in the line reading in to `Temp`: Temp = textscan(FID, '%d %d %f %f %f %f %f %*s \n\r %*f %*f %*f %*s \r\n'); Where the "*" causes textscan to read and discard the value. This snippet will read the entire file (assuming the format is constant and properly defined for each pair of lines). If you're going to eventually read the whole file, unless it's too large to do so, it's best to read the whole thing at once. If you don't want to do that, you should at least preallocate `Data`--use `Data = zeros (N,7)` or `Data = repmat (0, N, 7)` before the loop (this will clear the mlint errors--the squiggly orange underlines in the editors and orange ticks on the side of the editor--you're seeing in your code), where `N` is half the number of data lines in the file (or, if you can't easily determine that, an estimate that can layer be expanded or shrunk to meet the needed size; it's better to preallocate a larger array than you need than to expand an array a row at a time in a loop). If your file is small, you won't notice much of a difference--but it's a good habit to develop, since the performance impacts on large files are significant. 
exactly, because lets say f(x) is a function of two variables x_1 and x_2, that is input as an array of length 2 but that only counts as one input variable in f(x) aka f([x_1 x_2]) but I need it to be f(x_1,x_2) due to the nature of the matlabFunction(). I found out that it is possible to do that if your input is say x = {x_1,x_2} then f(x{:}) so i figured that that was the appropriate way to do it.
i seem to get this to work when i first declare a dummy variable like this, dum = num2cell(x) f(dum{:}) so i'm guess that it spits out the cell contents individually, i wish there was a more sophisticated way to do this.
You can adjust how matlabFunction treats inputs (see docs for details). Assuming v is a vector of symbolic variables, this should work (note how v is passed inside a cell array): f = matlabFunction(func, 'Vars', {v}) Be careful about orientation - if v is row vector, f will now accept row vectors as inputs, and vice versa.
Good suggestions, thank you. Now my problem is that after reading the first three lines in the code it won't read the rest of the input text file. Also, I am wanting a total of 10 values in my Data matrix (so it will be of size (N,10). And the code isn't reading those last three values off the text file and I have no clue as to why. Here is what I have at the moment: clc, clear all, close all %%Inputting data file into Matlab FID=fopen('sample.in'); C=textscan(FID,'%f',1,'Delimiter','\n\r'); %First line of text file d=textscan(FID,'%s',1,'Delimiter','\n\r'); CN=cell2mat(C); Data=zeros(CN,10); for i=1 Temp=textscan(FID,'%d %d %f %f %f %f %f %*s \n\r %f %f %f %*s /n/r'); % lines two and three for n=1:numel(Temp) Data(i,n)=Temp{n}; end end Temp2=textscan(FID,'%d %d %f %f %f %f %f %*s \n\r %*f %*f %*f %*s /n/r') %Line four, won't read... fclose(FID);
 words = {'Test', 'Testa', 'Boobs'} str = words{:} str = 'TestTestaBoobs' Are you sure you want to stick all the words in to one long string? strjoin might be useful... words = {'Test', 'Testa', 'Boobs'} str = strjoin(words) str = Test Testa Boobs Also, are you sure you want that chevron? total = regexp(str, '\w*a', 'match') total = 'Testa'
We have a site license at work. The way this works is that your matlab installation will work for some period of time, and then will stop working when the license expires. You then have to re-activate by connecting to Mathworks, and the activation program will download a new license file if you're eligible for one. So, that's one way they could do it. I have no idea if the system is the same for student copies or not. 
What does your array of words look like? What's the error you get when trying to use strjoin? Your code above still appears to be converting the words to one long word, so won't find any words ending in 'a' unless the last word ends in 'a', and then it'll return the whole string. By the way I just noticed and corrected an error in the second block of code in my post above. 
I think you need to re-visit the [circshift()](http://www.mathworks.com/help/matlab/ref/circshift.html) documentation as you aren't using the function as you think you are. There is a way to shift rows and cols together, and it is with some of the syntax you have here. But you aren't shifting a matrix, you're stripping column vectors off your matrix and trying to shift them. Each one of your lines takes a column (sized 4x1) and tries to shift it [1 x]. Using this syntax means "shift the rows 1 time and shift the columns X times". Since you've stripped off columns vectors and only have rows left, this is why each one of these lines only shifts the row. I think one solution might be to get rid of the first indexing here (i.e. the 1s) and just leave the X. Once you work around this syntax issue I think you're on the right path to getting this to work for arbitrary size. You'll just need a for-loop and cleaver indexing. There may be a way to do it all in one line or without a for-loop, but it's eluding me on a Friday at 5p.
I don't think he (and unknowningly you) is using the correct syntax for circshift().
I transposed my cell array and viola, the function worked. Thank you both for the help!
If you use 'hold all' instead of 'hold on', Matlab should automatically use different colours
I'm not familiar with simulink, but couldn't you just make the parameter vector an input to the control function? (or control block, or whatever the proper term is in simulink) 
That is my fall back if I have too, I've already got the state feeding back into the control function and I'm worried about it becoming to hard to debug/maintain to have the state and the parameters be concatenated into one input vector. If I can output the estimates to the workspace and read them back in then I can give them meaningful names in the control function
If this were regular Matlab code I'd just say to split them into separate input arguments, even if they are always being passed around together. I assume there is some equivalent on simulink? 
User defined functions in simulink as far as I can tell can only take one input argument and it is read in as a vector with the name of 'u'
Well, I don't know enough about simulink to say with certainty that you're incorrect on that fact, but if that's true it's horrible and very surprising. You should check the documentation. 
Simulink snap shots the variables in your workspace at model update. There are ways to get parameters from MATLAB to Simulink while your model is running, but you'll be fighting Simulink the whole way. It would be easier to stay in Simulink. On the Simulink side you have a couple of options. If all you need is to feedback the parameters into your controller you can use a datastore, use a from/goto block, or directly wire the connection. If you need to process the output you could use a MATLAB Function block. It lets you write functions in the eml subset of the MATLAB language directly in Simulink. Inputs and outputs are limited to simulink data types (numerics, enums, and structs/buses). The function block behaves like a normal MATLAB function. You can have multiple inputs, outputs, and globals(DSMS). 
You can simply write your code as this: s_dfp = magic(4); HH = circshift(s_dfp,[1 0]); % shift by 1 row down , with the same result. But this is not what you want. Right? What is your desired output if you have input matrix like this: s_dfp = 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 ?
From workspace won't do it?
I was planning on using a too workspace block but that appends thr current value to either an array, structure or time series. I want the most recent value of the array rather than the whole thing but I'm not sure what i would use for the index. Self-tuning controllers are a technique for dealing with model uncertainty. For example, if you are controlling a mass-spring system the gains are a function of the mass and stiffness as well as the desired poles. If you don't know the massb or stiffness, STC will estimate them and you can use that estimate in tour controller.
Use randn to generate a normal distribution and shift the mean and variance as needed. var*randn(100,1)+mean
Ah ok, my question then become show would you actually create these gain functions that are dependent on plant parameters? Are you measuring it based on performance?. Are there any academic papers that describe this technique? 
I've learned 90% of what i know from the doc command.
The company that makes Matlab has a bunch of free [recorded webinars](http://www.mathworks.com/recordedwebinars) available on its website (must register for a free account to access). All different topics, ranging from introductory-level to advanced. I've found them to be quite helpful over the years. ETA:There are also a bunch of links in this sub's sidebar that you might want to check out.
The first for loop is intended to run from years 1700 - 1799, so I am trying to sum the values of onegram.match for each year. The difficulty arises in that years is a separate field of onegram and not the index.
Yes but you do realize it's not going to loop at all, right? Y+1 is a single value, not a range. 
I bought a student copy in 2011 and haven't had to renew any licenses. That being said its no longer 2011 and they may have changed their policy.
Typing doc is muscle memory for me. I can't help it. 
The function can estimate parameters only from one path at a time. You'll need to loop over columns of Y and call estimate() inside the loop.
Use optimoptions to change the DiffMinChange and pass the resulting options object into fmincon. If I may ask, how are you handling your simulink model, are you calling it from your cost function with sim, are you creating an executable, etc.?
An accurate gradient is absolutely essential for an optimizer like fmincon to work correctly. fminsearch uses a gradient free method, so it's very likely that your problem is related to the gradient fmincon is using to calculate the next step. Since your objective function is the result of another numerical method fmincon is numerically calculating the gradient. This is actually a tough problem, because your objective function is probably not smooth over very short length scales. You need to fiddle with the gradient options. You can try changing FinDiffType from forward to central, which will take twice as many function evaluations but provide more accurate estimations. You can also increase DiffMinChange, the minimum delta used for numerically approximating derivatives. This will force fmincon to use a longer length to approximate derivatives, and hopefully on that scale the function will appear smooth.
Also, if you have simple bound constraints, you might find it easier to input them as [xOpt,fval]=fmincon(funZiel,x0,[],[],[],[],[0 0 0 0],[inf inf inf inf],[],options)
I always forget this trick when I need it. 
Without seeing the data file, I can't say for sure why it won't read--there's a format mismatch that causes `textscan` to return before the end of the file, but I have no idea what it is. You can tell by calling `fgetl` or something similar to read the values immediately after the call to `textscan`, and determine what format specifier you should be using. Also note that the first two calls to `textscan` (assigned to `C` and `d`) aren't reading a line of the file each--they're reading any number of delimited by new lines and carriage returns (which occur in the opposite order--`\r\n`--from what you have listed on windows machines; fine for the delimiter, since each listed delimiter is treated individually, but the order matters for the literal read below--and I don't think you actually want it as a delimiter regardless), then reading any number of strings delimited by newlines and carriage returns (the single-cell output you appear to be getting is due to textscan encountering an unexpected format and returning; if you set `"ReturnOnError"` to `false` when you call `textscan`, you'll see that more easily). The part of your code reading lines 2 and three doesn't need either `for` loop--the outer loop is literally only looping over i==1 (i.e., doing exactly the same thing as if you replaced `i` with `1` in your code and deleted the `for i=1` and second `end`; the two rows in the cells of Temp are read by the single call to `textscan`), and the inner loop can be replaced by either passing `'CollectOutput',true` in your call to `textscan` (see [collect output](http://www.mathworks.com/help/matlab/ref/textscan.html#namevaluepairarguments) for details), by calling `cell2mat` on `Temp`, or by indexing and concatenating (iirc, `Data = [Temp{:}]` will work, though it might be slightly more complex). Last: your second set of newline/carriage returns in each call to `textscan`, in addition to being in the wrong order for what is typical on windows machines (usually `\r\n`), are formatted incorrectly--each should have a `\`, not `/`. That may be why the call to `textscan` is breaking, though it seems odd that it would work for line 3 if not line 4. 
Your sample code is incomplete and has multiple syntax errors. Please provide a concise, functioning example that reproduces your error.
Judging by the questions that come up across the internet, no.
 %ode15s script for wave converter tic global alpha Aw Cd Fe g mt omega H R rho k m wt d p q c wp delta u Re Rl Bt tspan=[0:99];t=tspan; % variables for the absorber and wave k=10000; m=4000; g=9.81; rho=1000; r=2.5; T=10; a=3*rand(1,5); b=repmat(a,20,1); J=b(:); stem(J) H=J'; ma=0.5*(4/3)*pi*(r^3)*rho; mt=ma+m; %total mass of displaced water and the buoy R=7000; Aw=0.5*2*pi*(r^2); Cd=1; As=0.5*4*pi*(r^2); alpha=0; Fe=As*rho*g*(H/2); omega=(2*pi)/T; wt=0.4; d=1.264; p=2; q=1; c=3; delta=0; wp=0.05; Re=10; u=0.5; Rl=20; Bt=1.5; [t,z]=ode45('wavemodel',tspan,[0 0]); toc This is the file i run named "wavescript" which calls this function file called "wavemodel" function zdash=wavemodel(t,z) global alpha Aw Cd Fe g mt R omega H rho k m wt d p q c wp delta u Re Rl Bt %This is the wave converter model zdash(1)=z(2); zdash(2)=-((R*z(2))/mt)-((0.5*rho*Aw*Cd.*(z(2)-(-(H/2).*sin((omega*t)+alpha))).*(((z(2)-(-(H/2).*sin((omega*t)+alpha))).^2).^0.5))/mt)-((rho*g*Aw*z(1))/mt)... +((0.5*Fe.*H.*cos((omega*t)+alpha))/mt)-((k*z(1))/m)-((2/Rl)*((((2*pi*Bt*wt*d*p*q*c)/wp)*sin(((2*pi*z(1))/wp)-delta))/u)); zdash=zdash'; I know it's a mess at the moment but I just want to get it running first before I clean it up.
yeah i figured. what i am trying to do is say "while the distance between any mine location and the ship is less than 101." there are 62 mines.
Same way in regular matlab. imshow works: imshow('cameraman.tif')
it would be easyer to help if you provided the mine data absx and absy... Also, right off the bat i can see that these lines are wrong: while( for i:2:1:62 le(pdist([mineloc(i,i);shiploc]),101)=1%distance is less than 101 for anymine and the ship end) From what you said: &gt; "while the distance between any mine location and the ship is less than 101." Should be something like: while(1) if pdist([mineloc(i,i);shiploc]))&gt;101 break; %exit while loop if distance is grater then 101 end end And your indexing here shiploc=shiploc+[0+(n*(40)),(-1)^(n+1)]; does not make sense, since you will have a negative index on your first iteration since you start at shiploc=[0,0]... (and the 0 is redundant) 
I pretty much only do time series analyses (5 years now). I've never used TSobjects. I can't think of a reason, unless you're using financial series (dates are considered relevant). 
like `this`!!! thanks, i was wondering how to do this for a while! The backwards accent thingy is called "grave accent", I had to google it myself :).
Why are you converting it to JSON to just decode it? Why not just put it into the output? Also sprintf is much easier to use to make strings.
Take the centroids (arithmetic mean) of the points defining each patch, this provides two vectors, then translate the coordinates of one patch object by the negative difference of the centroids. This will guarantee the centroid will intersect.
The following code accomplishes this goal foo = '{"Duration":' temp = sprintf('%f',Duration) temp1 = int2str(Freq) temp2 = int2str(nsamples) temp3 = int2str(nchannels1) foo = strcat(foo,temp,',"Frequency":',temp1,',"Num_Samples":',temp2,',"Num_Channels":',temp3,'}')
I'm sorry, I'm not sure how that would work (I'm VERY new to MATLAB). Could you please elaborate?
Do you want your vector t to increment one index longer each time, you're taking the variance of each new t vector, and finding the minimum? Also, here's the documentation for [loops](http://www.mathworks.com/help/matlab/matlab_prog/loop-control-statements.html) as well as [conditionals](http://www.mathworks.com/help/matlab/matlab_prog/conditional-statements.html).
You can use a for loop, and then only reference the ith value of your time vector. This time value will correspond to the current variance being calculated. 
What I meant is that I want to compute all the variances first, compute the minimum out of those values, and then finding (t) that gave that minimum variance. Thanks for the link, btw :)
Sounds like you have a function named rate. Type edit rate and see if you do.
Sort of aside - I frequently write my code with fprintf so you can seamlessly switch between writing to the console or a file. If you pass fid=1 (see fprintf help), your print-formatted string is printed to the console. Then when you want to pipe it to a file, just get a file ID with fopen() and then pass that as the fid input to fprintf. function formatSomeData(fid, alpha, beta) % Set fid=1 to print to the screen, or use fopen() to get an fid and write to a file. fprintf(fid, 'alpha = %0.15e, beta = %f.\n', alpha, beta); return;
This was my concern with what you're trying to do. Each loop here, t is a scalar. The [variance](http://www.mathworks.com/help/matlab/ref/var.html) of a scalar (single-valued vector) is identically 0. x will always be 0. Furthermore, with this code, you only have an x(1) entry and you are trying to ultimately access entries in x from 0 (which in itself will throw an error, there's no x(0) of ANY vector/matrix/structure) to 100 (which will throw errors as there's no x(2), x(3), ... x(100) entries AS CODED). To correct that, you need to save the variance to an index in x, not just asign it to x as a scalar value (the variance of a vector will just be a scalar..). Also, you don't need a conditional to find the minimum of x - if you take a careful look at how [min()](http://www.mathworks.com/help/matlab/ref/min.html) can be used, you'll see you can get the min value as well as index. You can do that all once outside your loop.
I think this code ought to work in newer versions, its mostly that new code won't work pre-2014b. in 2014 you could rewrite that too groot.ShowHiddenHandles = 'on'; figs = groot.Children; And then it wouldn't work in 2014a, but your old code works in 2015a, I just checked.
So, I'm basing it off [this](http://www.mathworks.com/help/matlab/graphics_transition/graphics-handles-are-now-objects-not-doubles.html) article, as well as a user who told me it didn't work in newer versions. I haven't tested it myself, but I believe him, as he is a developer with a lot more skill than me.
Hm. This didn't work for me in 8.3.0.532 (R2014a). I'm pretty sure things changed in terms of figure handles, but I don't know enough about MATLAB to say how/why (see link in comment below).
You can just use [figs.Number] to collect just their numbers. The rest of the data is all of the object data you might want to know or change.
Unfortunately I need the rows and columns of subplots in order to loop through them with a "subplot(rows, columns ,i)" type of command. 
If the standard definition of a collision were the case, you would have to take the intersection of any of the vertices, or line constituting two vertices, to define a collision. This cannot be measured with the mean of vertices. You would have to define every bounding line of the shape, and any intersection of lines with the lines in the other shape would constitute a collision. Unless the patch is defined by area, which would make the clac a little bit easier. 
var(t) will *always* be zero, by the definition of variance. 
Yes, Mathworks had been working on a new graphics system (hg2) for many, many years, and they finally released it in R2014b. It has a lot of similar syntax to older versions, but this was a really big change and lots of stuff works differently as its very, very different under the hood.
Why not ask The Mathworks directly? This isn't their customer support subreddit.
I ended up figuring it out. Browser issue. Sorry everyone. 
v is a vector and d is a scalar. You're trying to take a column array v' and concatenate a scalar to it as a second column. Since v' and d do not have the same amount of entries this operation can not be completed. The length of d must be the same as the length of v for [v', d'] to work.
Ah, that makes sense, thank you.
The Greek letter which looks sort of like a "p" is rho. Roe is fish eggs. 
I've got a few ideas, but is it possible you could post images of your plots/figures/gui (both before and after this behavior) and describe what you want? ..maybe also the lines of code around where you're generating/updating your gui? First (obvious) question I guess... are you using "hold on"?
it's actually *"row"*
Well... What if that's what I meant? ^^^I'm just kidding, I meant to type rho
Oh yes, which is what you do in a boat. 
&gt;Thanks for your time Thanks for showing you've given *some* effort to this assignment. From the sidebar: **we don't do your homework!** What have you tried? What are you able to do? Where do you get stuck? What error message(s) do you get? We're here and happy to help, we just won't do. If you do want to share code here: 4 spaces starting lines eliminates reddit's formatting e.g. --&gt; (a.*b.^c.*exp{sin(theta)}) and shows your code as you see it and not using reddit's formatting e.g. --&gt; (a.*b.^c.*exp{sin(theta)}). *Thanks for your time*
Hiya! OK, so what I've done is written some code that take a function and interval, and computes the newton interpolating polynomial. I think I'm stuck with interpreting the problem. The function I've written works for the problems listed, but I'm stuck working it to the function outlined in the assignment. function fz = interp(x,f,z) is the header I need to use. This is how I'm thinking: x and f are vectors of data points. The x values I get given the interval and the degree, n+1. For example number 1 has an interval of [0,1], n = 4. So the data points I have to calculate in my new function, and would be [0 1/4 2/4 3/4 1]. The f I'm not too sure about. Is that asking for the f evaluation at each of those x values? so f1 would be f(x1)? Which would be f(0^6) for number 1 (the function is x^6). Thanks for replying! I feel like I have the tools to work this, I just don't understand the format. 
It sounds like you have more of an issue with the math than the Matlab. You might want to go to your professors office hours. 
Maybe, but I think if I could interpret the question better I could do the math fine. 
I have never used LabView, so I can't help you on that. But I Googled it for you and I think [this](http://stackoverflow.com/questions/17185249/extensive-comparison-between-simulink-and-labview) should give you a very good idea. 
Thank you so much!
Well, I exited and opened it again and it worked... I will leave this here though because something obviously caused it that I want to understand and avoid.
Well it appears to work as intended the first time. If I try it with another formula after the first, it will make the T array a 1xn array for some reason. What I want is to stop it shrinking my nxn array to a 1xn array.
I do realise that the experiment should be done again, but that will end up being done by a PhD rather than myself. Unfortunately I have been stuck with the camera that was bought by a predecessor so changing that for one with an f-stop control was not an option. Because of the nature of the experiments we want a change in brightness between images, in fact this is what I am then processing and measuring in discretised cells after the fact. The other issue is I am using R2014a which no longer has an exifread function I was using in the past and the imfinfo doesn't seem to provide an exposure value (and if it does, I can't see it in any of the structures). I do have access to the shutter time and the f values mind. The scene is identical in all of the images, the light source was in the same position, the object of interest was in the same place and the camera was positioned in the same place (+/- 2mm). The issues still remains of what function could be used in order to brighten the images if I did surpass all of the other problems. Thanks for your reply thought, I do appreciate it.
Again, without a concise example that reproduces the issue you're experiencing nobody can help you. Use [the debugger](http://www.mathworks.com/help/matlab/matlab_prog/debugging-process-and-features.html#brqxeeu-177) to step through your code and observe what is happening.
&gt; Again, without a concise example that reproduces the issue you're experiencing nobody can help you. What do you mean exactly? This is the error I am getting and hoping to avoid: &gt;Attempted to access T(2,2); index out of bounds because size(T)=[1,10]. I am new to this, I don't know how the debugger works.
&gt;What do you mean exactly? I mean provide a piece of code and inputs that, when run, replicates the issue you're having. The code you provided in your OP does not do this. &gt; I am new to this, I don't know how the debugger works. That's why I linked the documentation that explains how the debugger works.
&gt; The other issue is I am using R2014a which no longer has an exifread function I was using in the past and the imfinfo doesn't seem to provide an exposure value (and if it does, I can't see it in any of the structures). The `DigitalCamera`field of the structure returned by `imfinfo` should contain that information.
Well in theory you could just directly mess with the pixel values within the array. If a deltaEV of +1 means twice as bright for example couldn't you just take the array that contains the picture and multiply it by two. You'll just have to take care of the variable type to make sure it clips the brightness to 255. 
&gt; The issues still remains of what function could be used in order to brighten the images if I did surpass all of the other problems. Multiplication? 
I think I worked it out, I need to clear all variables between runs, otherwise the T array gets shrunk to a single row. Something to do with the for loop I think. Thanks anyway, forgive me, I am very new to this.
Ask a "question", get an "answer". 
Well T is the output of the forward_differences and that part works fine. When running forward_eval afterwards works the first time, but unless I clear all, T gets shrunk to a 1xn array for any attempts with different values of X,Y,x. So for some reason even if a new T is defined by forward_differences it doesn't get entirely represented in forward_eval. To stop this clear all works, other than that I am way out of my depth. I have been working on this since 10am, it's 10pm now, so I am more than a little frustrated.
Yeah it does, if I was asked to pick out one that was under exposed it wouldn't be the one I was concerned with initially. It is just that in the blue plane that I was initially measuring in the values went so far over 255 that pretty much the entire image became white, but using a different plane (and the same technique/equations) it seems to pull them all into line.
Holy hell, you're using a strongly nonlinear sensor for a research project? Ouch. 
Could this help? http://www.mathworks.com/matlabcentral/newsreader/view_thread/317390
Its just a low end DSLR, not sure how non-linear it really is, I have no methods of calibration at my disposal. I am using 2.2 as that is "the standard" according to those slides, but it means nothing to me, it seems to pull the reference area that I have damn close to each other
To be honest, yeah I am. It isn't exactly my area of knowledge, using a camera is about as far as it stretches. Thanks.
Are you changing blocks or parameters? If it's blocks you would use model variant. If it's parameters you can store them in a data dictionary.
Depends a lot on the format of your data source and how accurate you need to be. The easiest way would simply be an array where each element represented the number of people living in a square region. Viewed as an image, it would look like a population map of Florida. Then you just add up the numbers within the destroyed region. 
thanks do i have to redefine B, or can i use the old B?
There should be examples in the book. This looks fairly straight-forward. Figure out which values change and by what mathematical operation they change. Hint: It kind of looks like all the changes are n+1 so your for loop should step by n+1. Now figure how to tell it to change B, S(n,n), etc to change appropriately. 
Sorry about that, change the 'B' in the code I wrote to B1 or whatever you like. 
This is a classic example of when it is useful to use an object-oriented programming approach but I think matlab has some tricks you can use to avoid oop. I think you can use something called structures in matlab. Matlab supports oop. I would solve this by creating a class and then placing my entire script into a single method of the class. I would then store the arguments as data fields of the class/object. Then I could have multiple functions associated with the class that would all be able to read the data fields and not have to constantly pass the arguments.
So I'd rather go with structures. Say `s` is my structure containing all the parameters `s.p1`, `s.p2`, ..., `s.p30`. And now my first function is simply function [result] = myFunction1(s) which is clean and looks nice. but then how do I proceed to do the optimization? should I do it like this below? function [result] = myFunction2(myParasToOptimize,s2) s = s2 ; s.p13 = myParasToOptimize(1) ; s.p17 = myParasToOptimize(2) ; result = myFunction1(s) ; where again `p13` and `p17` are in `myParasToOptimize` and `s2` is the same as `s` but without `p13` and `p17`. And like before should I optimize it like this below? fminunc(@(myParasToOptimize) myFunction2(myParasToOptimize,s2), options)
That's not a Matlab issue, that's a basic math issue. You should know what a step function is long before you see questions about Laplace transforms! Anyway, you can easily Google that one. 
Does the function have a cos(t) in it?
Yes, that would work just fine. 
I'm not sure if it's the "best" way, but using structs to carry lots of configuration parameters is common and effective. I wouldn't do it exactly this way, but I'd do it similarly. First of all, no need for a different struct without your adjustable parameters. You can just overwrite the fields of your existing struct if you need to. Also, there is typically some logical grouping of parameters when there are this many of them. Maybe some are configuration variables, maybe some are parameters for a model, while others are dependent variables for a model, which you'll be changing frequently. In that case it's best to group related variables into structs, and then you may not need to have a second function at all. Eg: y = myFunction(x, modelParameterStruct, plottingConfigStruct) fminsearch(@(x) myFunction(x, modelParameterStruct, plottingConfigStruct), x0)
Wut 
Or you could maybe give him a quick Layman's term to describe what it is since you've gone so far to explain how it's something he should just know...
You want me to explain to someone who is studying differential equations how to Google "step function"? Seriously? What other terms do you think he'd need? Just fucking type it into the Googler. 
If he needs that explained, it's surely not his only issue. I'm not going to give him a complete education via reddit comments. So where should I draw the line? If you'd like to copy paste half of Wikipedia for the guy, you're welcome to it. 
If you're not bothering to name the parameters to something human readable in the function, you could also use either a simple array (if all parameters are the same class) or cell array (if the class of parameters varies) and index. You don't even have to define the cell array before passing it to the function--see /u/DStoo's comment on `varargin`. If you don't necessarily pass all parameters every time and a single default value will generally work for most parameters, you could also define defaults in the function and overwrite the default if the user passes a parameter-value pair (you'd want to use easy-to-remember names for the parameters, though). 
as per my reply to him, I do indeed use human readable names for all of these. Thanks anyway!
If you're going with a structure I recommend not using `s.p1`, `s.p2`, ... , `s.pn` and going with `s.p(n)`instead. This is going to be much easier to reference for calculations and to understand visually.
Oh, yeah this is a classic problem. I've got code that will facilitate that sort of thing, but it's not particularly great. Really it's easiest just to use a function handle. 
&gt; I do indeed use human readable names for all of these That's what documentation is for. Look up the help for all of your favorite functions and see how many of them use varargin.
&gt; I spent a long time detailing what I was looking for, and you replied with one word that does not answer the question. Actually it exactly answers the question. "varagin" is exactly the correct reply to the "proper way of writing function of many parameters" If you type 'help varargin' you'd see that. You came to /r/matlab asking how to do something and you're downvoting people that don't appease your echo chamber. By all means do it what ever way you want, but varargin is the correct way to do what you are asking. It's not like some of us have been using Matlab in Industry for a decade or more. &gt; Not only am I looking at many parameters that have humanly readable names Which is why you make the documentation match what you want it to say And you can always put it on the line previous: ```myInput={humanreadable1,humanreadable2,humanreadable3}``` ```myfunction(myInput{:})``` &gt; humanly readable names Why? &gt; keeping in mind that I want to optimize a subset of those parameters. Varargin. 
Do you really need this to be in 3D? I am envisioning a 5-line 2D plot - one line for each Mw and colored a different color. Example: t = linspace(0, 2*pi, 100); x1 = sin(t); % whatever your equations are x2 = cos(t); figure plot(t,x1,'r-') hold on plot(t,x2,'g') axis tight legend({'X1', 'X2'}) I think that plotting it in 3D would just be visually confusing. If you want to go that route, check out plot3() or ribbon().
No, not separate plots. One plot with 5 lines. 
Thanks for that. I will have significant complexity on these models, so reducing the number of simulations run is a priority. I will look into that, as well as the "model variants" that /u/rygo796 suggested.
that's better thank you. I downvoted only your one word reply, not 'the people that don't appease my echo chamber'. Because it simply didn't help me. And it did **not** answer the question. It's like if someone asked 'how to properly cook scrambled eggs?' and you replied 'pan'. Yes it is the proper tool to use, although it is debatable, but by no means does it explain anything. Don't make a drama out of it, you knew precisely why it was downvoted and started explaining more afterwards - which sort of proves my point - and for which, again, I thank you. And upvote you.
```varargin``` answers the question. There is no reason to go into it when it answers the question.
Since the function is +1 at 0 and 2pi, and -1 at pi, does that mean the function I need to create has something to do with cosine?
You can manually add the newline operator \n as needed to create line breaks when questions are too long. Not the best solution but it might work.
What about a logical array corresponding to your parameters? If you had all your parameters in an array or cell array then you could have: params = {p1,p2,p3,...pN}; toOptimize = false(size(params)); toOptimize([13,17]) = true; fminunc(@(params) myFunction2(params(toOptimize), params(~toOptimize)) If you really want to keep the human readable names then it becomes trickier because you can't just index things in arrays. You could use a flag in your structure and then retrieve the fields by name, e.g: s.p1 = val1; s.p2 = val2; ... s.pN = valN; s.optimize = {'p13','p17'}; then, within your optimization function you would retrieve the parameters to optimize by doing something like: Noptvals = length(s.optimize); optvals = cell(Noptvals,1); for n = 1:Noptvals optvals{n} = getfield(s,s.optimize{n}); end Which is slower and (IMO) messier, but maintains the human readable names. There's probably a bunch of other ways of doing this, but there's two ideas for you.
What do you get when you call rank() with your predictor matrix in both versions?
thanks a lot !
Preallocate an output matrix size of the output and its type. 
Really? That changes the calculation? 
Never heard of sethandles, but it's name doesn't sound like something you'd want. Why not come up with your own starting guess with something like findpeaks()? Or, can't you just feed your data to fit() and let it do it's thing? 
So I found sethandles from questions/answers like e.g. [this](http://www.mathworks.com/matlabcentral/answers/45909-how-does-matlab-cftool-curve-fitting-toolbox-determine-startpoint-for-sum-of-sin-fit) and [this](http://es.mathworks.com/matlabcentral/newsreader/view_thread/273889). I'll give fit() and/or findpeaks() a shot tomorrow. I got so wrapped up in using the output code from cftool that I didn't think of just using fit(). If that works it was right under my nose the whole time haha. Thanks for the pointers.
I'm thinking: scale the grid (and the data) so that each square is 1x1 and square i,j goes from i-0.5:i+0.5, j-0.5:j+0.5. Then you can get which square any point is in by rounding your whole array of coordinates and generate which squares you need to draw very easily. Then it's just a case of rescaling.
So for the same script _and_ data you notice that R2014a works and R2015a fails?
The matrix is calculated in one step. Pre-allocating would not change anything. I tried it anyway, but nope.
fminsearchbnd will let you set boundaries :)
A crappy, brute force approach would be setting `x`, `y`, and `z` ranges, some tolerance `tol` assuming you're allowing floating point, and then [X Y Z] = meshgrid(x, y, z); prod_ = X .* Y .* Z; [idx, jdx, ~] = find(abs(prod_ - 50) &lt; tol); Then, the values of `x`, `y`, and `z` that satisfy the requirement are `X(idx, jdx)`, etc. Not very elegant, but it seems to work.
Yep, exactly. On 2014a, I get 25 coefficients that are on the order of what I'm expecting (this analysis has been performed for a long time). On 2015a, two of the coefficients are marked 0 and I'm given a rank deficient warning. I'm talking to Mathworks now, and it looks like there was a change in their linear algebra routines between 2014a and 2015a.
I also tried lmfit() with the same results in 2015a. I'll give glmfit a go. And unfortunately, I can't give out the data as it's for work.
I've never used the curve fitting toolbox myself, but can you get at the coeffs with the [coeffvalues()](http://www.mathworks.com/help/curvefit/coeffvalues.html) function and then change your format to see their extended behavior? Or take their difference and *"Is it zero?"* Basically what I'm propsing and what I think you want from your OP is to extract the actual numerical values of your coefficients, not just their nicely displayed human readable values in the command window. Once you've got the coeffs (like a 1x4 vector), change your display precision as you suggest and see if the format has changed and if these numbers truely are/aren't equal. Alternatively you don't need to display them, or even change your precision. If you know your A and C coeffs are index 1 and 3, vect(1)+vect(3) will give you the difference between the two and should display with some sig.notation (as is standard; this way you don't have to change the display precision).
very well. I didn't know it could handle discontinuities. Then create an m-file called myfun.m function y = myfun(x) if( all((x &gt;= [2 5 1]) &amp; (x &lt;= [3 9 4]))) y = abs(x(1)*x(2)*x(3) - 50); else y = inf; end then call this in the command window fminsearch(@myfun,[2 5 3]) 
What if you PCA the data and don't give me the transformation matrix? The matrix will have the same rank and I won't be able to reconstruct the data. Anyway, if not it's cool, I do completely understand. Good luck with this!
Your equation defines a manifold living in a 3-dimensional space. All the points in the surface satisfy the equation. This is a plot of such surface: http://i.imgur.com/v2kQDyc.png And here is the code: [X,Y] = meshgrid(2:.1:3, 5:.1:9); Z = 50 ./ X ./ Y; surf(X,Y,Z)
clear your variables first. I don't get this error from copying and pasting your code. Google says don't have folders with default names either. You don't have a struct folder do you?
I am leaning towards a CPU without integrated graphics unfortunately
OK thanks for the info
This is the option I was leaning towards. That or seeing if I can dispatch code to run over the network and running it headless.
I think you're on the right track about this being a Windows issue. That crash shouldn't be something that an error in your code can create, and the stack trace gives me a vague impression that something deep in the guts of the windowing/user interface code choked. Maybe submit the error report to mathworks and see if their customer service can help? 
Then you'd just make the sequence as long as your simulation
Yes, useless. The thing is a lot of people who would want that are probably using financial data. People who will really analyze that stuff aren't using matlab, they use Stata. Stata has really good built-in time series stuff. 
Can I do that just with my phone's camera and MATLAB code? No other hardware or anything necessary?
there is not enough information here. What is the sampling rate. 90k points and 25k is more than missing data, that's almost 4x the signal! is the missing data intermittent, all at the beginning, the end?
Sorry mate. Its intermittent. The data is financial markets data. Its intermittent because the FX markets are open for longer hours than other markets. And some markets are open when another market are closed. Eg: The UK bond market has no overnight session so you will get data entries for the FX markets when its oernight. Does that make sense?
you want to interpolate data so they are the same size? this is market data? so while one market is closed you want to interpolate that entire time? I don't think you can make that assumption that the closing time trends will continue. Perhaps if you generalize the problem with just a few data points I can provide a more specific solution?
i tried the interp1 my code was interp1(A_date, A_price, date) where date is the total 1min interval over the entire data horizon is my mistake using the date vector?
interp1 might have trouble with datevectors.
Use polyval and polyfit on matlab. 
hey mate i have a column of dates with time and a column with price(not sure if column 1 is timestamps or just time). basically it is financial time series data and the reason there are missing values is because some markets are closed in their night session whilst others are open. this means when i request data for a time period i get heaps of entries for some markets when others are closed.. so i just want to do a lowest common denominator of the time matrices....if that makes sense. ie: removing data when all markets are not open and then collating them in 1 big matrix
I don't see xinit defined in your nameoffunction(), could that be the problem? Also, I believe your dxdt should be a column vector not a matrix to use ode45 (although I'm not sure about that one).
Try ode45(**@**nameoffunction,...)
That 2nd method is more of what I'm after.. thanks!
Please format your code by putting 4 spaces before each line, and indent where appropriate. The result will be this: Initial_Height = input('Enter Initial Height = ') COR = input('Enter COR value = ') v = 0; t0 = 0; a=-9.81; T=15; dt=1/1000; t = 0:(dt):T; h = zeros(size(t)); for idx = 1:length(t) u=a*dt/2; New_Height = Initial_Height + (v+u)*dt; v = v + a*dt; if New_Height &lt; 0 New_Height = 0; v = -v*sqrt(COR); end h(idx) = New_Height; Initial_Height = New_Height; end plot(t,h); xlabel('Time [s]') ylabel('Height [m]') Which is much more readable. What you want to do is add a random variable to the initial height that the user inputs. Simply setting "Initial_height = rand" completely ignores the user input. Note that rand() pulls from the uniform distribution [0,1]. Think about how you might use that to randomly add or subtract from the height. How might you scale this value in a reasonable way?
Ok. A few things: I'm going to assume that the time points in the first column are all aligned to a grid. For example, we might have A(:,1) = [0; 60; 120; 240; 300]...etc., in seconds (note that "180" is missing, like you said it might be), and that we might have B(:,1) = [60; 120; 180; 300]. The point here is that the A(:,1) and B(:,1) times lie on the same grid. If not, we can deal with that issue separately. What we'll want to do is make a "master time grid" and put the data of the three columns into the correct locations. I'm going to assume that the data points are aligned with a grid of 60s like above. If not, you can change the "dt" value: dt = 60; Tmax = max([A(:,1);B(:,1);C(:,1)]); % get max time for all T = 0:dt:Tmax; % create "master grid" without any missing time points % determine indices of A, B, and C times indA = round(A(:,1)/dt)+1; indB = round(B(:,1)/dt)+1; indC = round(C(:,1)/dt)+1; % place data into matrix data = nan(length(T),4); % first column is time, columns 2-3 are data for A, B, and C data(:,1)=T; data(indA,2)=A(:,2); data(indB,3)=B(:,2); data(indC,4)=C(:,2); And there you have it. Note that "missing" data points will be == NaN in your new data matrix, which means they won't show up at all in a plot. data = nan(length(T),4); This will put NaN's into the missing points, which means that a plot won't show them at all. Let me know if you need more help!
I'm not entirely sure how to explain what I want; sorry! My professor gave the assignment, and I'm really unsure how to approach it. * My input is x and y location. (points of latitude and longitude) * I need an output of basically an enclosed area around the points. The area I want is typically modelled as an ellipse fitted around the points, but we're devising a new method. The idea is to try some sort of rectangular fit, or some sort of radial fit for the individual points, and the total area is the sum of all those rectangles or circles. Does that make more sense?
A few things. For starters, the way you have your file written here, you don't have "end"s for your main function and for nameoffunction(). The result is that nameoffunction() is not nested, and therefore doesn't include your main function's variables in its scope, so xinit() is not available for use. Put "end"s in there to fix this. As far as your error, you're getting your vector orientations messed up. "xinit" is a column vector of size(xinit)=[2 1]. It has 2 rows and 1 column. So when this gets initially passed to nameoffunction(), the variable "x" = [3; -1]. You're then trying to access x(:,2). You're asking for the second column of x--but x only has one column. Instead, replace x(:,2) with x(2) and x(:,1) with x(1). Everything works fine after that. I've pasted the fixed result below in case you need help. also, note that you're plotting y vs dy and not vs t. function wegwerpworp tspan=linspace(0,10,100); xinit=[3; -1]; [t,x]=ode45(@nameoffunction,tspan,xinit); y=x(:,1); ydot=x(:,2); plot(y,ydot); function dxdt = nameoffunction(t,x) %write out your first order system of ODE's dxdt=zeros(size(xinit)); dxdt(1)=x(2) ; dxdt(2)=(5-x(2).*exp(x(1))+(x(1)).^2) ; end end
The easiest is to simply pass the 'position' argument to colorbar--this prevents colorbar() from modifying the other subplot properties. I've filled in your contourf() with random data and added the loop that I think is outside. But try this: function halsey117() % make figure, projection, and contourf for ia=1:2 if ia == 1 Hfs = figure('Units','inches','Position',[2 2 9 5],... 'Color',[1 1 1]); hold on; subplot('position',[0.05 0.05 0.35 0.8]); hold on; elseif ia == 2 set(0,'currentfigure',Hfs) subplot('position',[0.5 0.05 0.35 0.8]); hold on; end contourf(rand(30,3)) % annotate if ia == 1 title('GSFC - Aqua'); elseif ia == 2 title('CPVD - Aqua'); end % add colorbar if ia == 2 colorbar('position',[0.9 0.2 0.075 0.5]); end end
I think you mean VariableNames. VariableDescriptions changes the description when using summary()
thanks for your reply. I figured out a way of doing it. it is my most recent post in the thread. I will try your way too to make sure I get the same result
unfortunately i keep getting 'out of memory' issues when i do this. and im only using small data sets in comparison to what i want to be using
That's odd. Would you mind PMing me a sample .mat file with your A, B, and C matrices?
&gt; I'm getting mighty sick of MATLAB's attitude... Yeah when first learning that god damn ding and red text makes you want to throw your monitor out the window! to format code in the text box just add four spaces on the line so it looks like this output = table(t,f,g,h); Learn to use the documentation. It will make your life so much easier and you will find solutions faster http://www.mathworks.com/help/matlab/matlab_prog/variable-names.html#btcg64n so no spaces. Use 'Time_(s)' 
You can definitely learn MATLAB. As far as programming languages go it's pretty easy and you don't need to mess around with types, build flows, make files, etc. etc. etc. Check out Octave as a free clone if you want to get your feet wet. Python + NumPy is another great language/ library if you're interested in this space and Python is a very capable scripting language. There are plenty of links on the right that can help getting started. Project Euler is a fun place to find some puzzles that require some coding to solve. While you may not need MATLAB specifically in your future education/ career, learning new programming languages gets easier and easier the more you know. The relative difficulty of learning a new language is somewhat inversely related to the number of languages you already know. There is _always_ value in learning something new, even if it doesn't immediately seem applicable! Weird coincidences will pop up =)
Thanks for understanding my pain... I don't really want to throw my monitor away, since it cost alot... But I would like to switch careers... For some reason, this still isn't working. output.Properties.VariableNames{'t'} = 'Time_(s)'; still gives 'Time_(s)' is not a valid variable name. Is there really no way to have an arbitrary string as a header? I'm actually surprised, that seems like a pretty basic thing. Well, anyway, TIL about adding four spaces to lines of code so they display correctly, so that is worth something, I guess... Thx again.
I enjoyed [Stormy Attaway's *MATLAB: A Practical Introduction to Programming and Problem Solving*](http://www.amazon.com/Matlab-Third-Practical-Introduction-Programming/dp/0124058760/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1429577486&amp;sr=1-1&amp;keywords=matlab+a+practical+introduction+to+programming+and+problem+solving). It's currently in its third edition, but I think the first (which is what I have) is quite useful, and it can be had for next to nothing used. That book recommendation aside, if I can make another recommendation, it would be to learn as much MATLAB as you can while working on little projects, simulations, or toy problems that *you* think up and find interesting, as opposed to exercises you might find in a book or tutorial. (I've found that these are frequently insufficiently interesting to keep one motivated.) Think of a relatively simple problem, code it up to the best of your ability (or modify some existing code) ... and then have that code eat shit and fail to run. MATLAB will show you the first error it encountered. Find the corresponding bug in your code and fix it, making liberal use of the help files (and Google) in the process. When you run your code again, it will almost certainly fail again, but this time it will probably fail *somewhere else*, deeper in the code, which itself is a small victory. Eventually, you'll have debugged all your code and learned a *lot* about MATLAB's syntax, documentation, and program structure. And the *next* time you code something up to the best of your ability, your ability will be a lot better than your old best. (Simulating such increasing ability is left as an exercise for the reader.)
Would for u(t-2.5) be: (t&gt;2.5) ? And then simply replace them into my original eq?
Awesome, thanks!
Keep in mind that solving PDEs like this isn't something you usually have to code from scratch. There are PDE solvers in Matlab that will do it more efficiently than your own code. 
not sure but sounds like preallocation is slowing things down. You don't show us the whole loop so I'm guessing somewhere you are building a large array from 'chunk' and when that keeps growing MATLAB has to find enough RAM to allocate for it as it grows which can get very slow. If you know how large the final array will be, initialize it before the loop total = zeros(11746*floor(k/datagroup),ncol); % add one to row length to include first sample where 'ncol' is the total number of columns. csvread should be seeking in the file to where you are reading and if it's the same size 'chunk' of data then that shouldn't be slowing down.
Even if you don't know the final size until you begin, doubling the size of the array whenever you fill it up and truncating at the end is a good way to save time.
Hello, and thanks for the response! The array that I am building from the data in 'chunk' is only 4 lines per every 11k lines in the original csv file. I think the issue comes from searching for the 'chunk' in the large csv file. I wrote a smaller script to confirm this: filename = '****.csv'; selection = [6000000, 0, 6000000+1, 5 ]; tic chunk = csvread(filename, 6000000, 0, selection); toc Here, all I am doing is grabbing 2 rows starting at row 6m. Elapsed time is 5.413866 seconds. Is there anything I can do to avoid reading through the entire length of the csv file before I reach the portion I want to pull in? maybe delete rows as I am pulling in? so the next time I can just grab whatever is at the beginning? 
Hi, thanks for the suggestion. I am not very familiar with how textscan() is used. It appears to me that the data types need to be specified by column, but, as you can see, the headers in my data would cause an issue if that were the case.
I had to do something like this recently with a 800MB CSV file with 1M+ entries. I had a lot of luck with [datastore](http://www.mathworks.com/help/matlab/ref/datastore.html) (needs 2014b+). I was able to read in my file 20k lines at a time, convert some values with categorical(), eliminate rows I didn't need (for me this was based on a datetime() value and category values), and add to my 'master' table. If the header rows in the middle are causing you problems you can probably use [sed](http://www.grymoire.com/Unix/Sed.html) to eliminate them. Or you could use the [ds.ReadSize](http://www.mathworks.com/help/matlab/import_export/what-is-a-datastore.html) property to get the header rows in a convenient place and then eliminate them.
putting (:) after a matrix makes the data all in one dimension, then do an equality test (using ==) and sum them together with sum() negOnes = sum(matrix(:) == -1);
i can do it now.... 
A=1; %amplitude f=100; %frequency D=1; % duration in sec fs=1000; % sampling rate x=A.cos(2.pi.f.[1:D.fs]/fs); % replace . with * wavplay(x,fs);
I find textscan to be a superior way to read ascii files in Matalb. 
 [x y] = meshgrid(1:10,1:10); %this gives you x and y coordinates c = eye(10); %only one input here means 2D 10x10 identity matrix c(2,6) = -1; % for example %set one of the values to -1 so we have 1, 0, and -1 representing colormap([1 0 0; 0 0 0; 0 0 1;]) %new colormap for defined values of -1 to 0 in RGB syntax. -1 = red, 0 = black, 1 = blue pcolor(x,y,c); %look at it That enough now. We're not going to write your game for you. Read some documentation and come back when you have a bigger problem.
I'm operating under the assumption that the first column of each matrix indicates the exact time. For some reason, column A has times running backwards from 108 down to -.25. I'll pretend that this is correct, and therefore that rows of A are in reverse chronological order. If you copy and paste this code exactly, it'll give you two results: in one result, you have a huge matrix where each row corresponds to one time point. Many time points have no data at all. In the second result, you have a minimal matrix where each row corresponds to time points that have data from at least one of the three sources. This makes it a little easier for comparisons, but makes it harder to visualize the time-course. load('for_ned.mat'); A=au10; A=A(end:-1:1,:); % put A in chronological order B=t_note; C=aud; dt=abs(A(2,1)-A(1,1)); % get a time offset for all three so we don't have a giant matrix of 0's at the beginning start_time=min([A(1,1) B(1,1) C(1,1)]); A(:,1)=A(:,1)-start_time; B(:,1)=B(:,1)-start_time; C(:,1)=C(:,1)-start_time; % convert timestamps to integers, isince they're all multiples of dt anyway idx_A=round(A(:,1)/dt)+1; idx_B=round(B(:,1)/dt)+1; idx_C=round(C(:,1)/dt)+1; maxval=max([idx_A(:);idx_B(:);idx_C(:)]); % maximum index; size of matrix data=nan(maxval,3); time=(0:maxval-1)*dt; data(idx_A,1)=A(:,2); data(idx_B,2)=B(:,2); data(idx_C,3)=C(:,2); % if you want to truncate and remove all time points where we have no data: value_locs = any(data,2); time_value=time(value_locs); data_value = data(value_locs,:); % plot time versus data, including blank spaces figure('units','normalized','outerposition',[.1 .1 .8 .8]); axes('position',[.04 .08 .95 .91],'fontsize',14,'box','on'); plot(time,data,'linewidth',2); grid on; xlabel('time'); leg=legend('100 - yield(Australian 10yr bond)','yield(US 10yr bond)','AUD/USD'); set(leg,'fontsize',14); % plot time versus data, removing blank space figure('units','normalized','outerposition',[.1 .1 .8 .8]); axes('position',[.04 .08 .95 .91],'fontsize',14,'box','on'); plot(data_value,'linewidth',2); grid on; xlabel('Row Index (variable)'); leg=legend('100 - yield(Australian 10yr bond)','yield(US 10yr bond)','AUD/USD'); set(leg,'fontsize',14); set(gca,'xlim',[0 length(time_value)+1]);
This is fantastic, amazing job.
You can learn this one WEIRD TRICK by reading the documentation. 
What are the dimensions of X and Y?
this is a monstrous undertaking. There are better places for this http://people.freedesktop.org/~aacid/docs/qt4/
 &gt;&gt; I1=imread('X.png'); &gt;&gt; I2=imread('Y.png'); &gt;&gt; I3=I1-I2; &gt;&gt; imshow(I3);
It's suprising how hard it is to find online a sensible solution to this common task. A google search like 'pdf2bmp' will mostly give you bloatware or malware. The easiest solutution is indeed to use ghostscript. You install it. If the installation folder ist not added to your PATH you have to go to that directory. Then you type: gswin32c.exe -sDEVICE=pnggray -r600 -dNOPAUSE -sOutputFile="%d.png" "input.pdf" to convert pdf to png page by page. Other formats are also avaiable. Except for the '.exe' this also works in linux.
Thank you. That's exactly what I was looking for.
lol - I had to google fiducials. For everyone else who might not have known, it's like "banana for scale" (in the image, it's the crosses, just like NASA photos (cool!), can be a ruler, or a quarter next to an ant). but I digress... To your problem... There may be better image processing ways (in that toolbox) to do this, but if you've got the image loaded in, I assume it's a 2D array. Can you scan for where there are black (or almost, if the RBG isn't [0 0 0])? You'll get your crosses. Now, I assume these markers are stationary w.r.t. each image (hence their fiducial name), so you could just do this once more-or-less manually. But if you can find the geometrical dimensions of each marker, you should be able to find their center. *e: I see you've also asked this on the mathworks forms - I did google search of "matlab fiducials". Maybe see if the first return (which was an academic toolbox) might be useful, or if you can learn from digging through their codes? Your [third image on that question](http://www.mathworks.com/matlabcentral/answers/212955-find-position-of-fiducials-in-an-image) is very promising, now just use some geometry and hand sketches to find their centers (and axes if you wanted also).
if you're trying to register an image use imregister() but if you have to find those crosses do some image processing with an arbitrary structure element that is a cross. Then finding it should be easier. nhood = zeros(9); nhood(5,:) = ones(1,9); nhood(:,5) = ones(9,1); strel1 = strel('arbitrary',nhood);
Can the fiducial change size or orientation? If not, a simple correlation should work. You take a cropped image of the fiducial and run a 2d correlation with it against the image. The image you get out is a heat map of the correlation coefficients, so if it works perfectly, you would have four bright spots, with the brightest pixel in each spot corresponding to the center of the fiducial in the original image. Another option could be to derive a matched filter kernel that is sensitive to the fiducial pattern. It's essentially the same idea with the same outcome, you just can control the filtering more. If the pattern can change orientation and/or size, it gets harder, and you will need to look into invariant feature detection algorithms, like SIFT. A good place to start is http://www.vlfeat.org. That's a computer vision toolbox for MATLAB with advanced feature detection algorithms
Thanks for the links, looks promising! The fiducials change size in every image because the resolution is changed, so I don't think correlation is the way to go.
Thanks to both of you! I'm currently trying this and it's working great so far! I already have all the center points available! Thanks again
Matlab has symbolic tools, but usually it would not be your first choice for symbolic work. However, it sounds like you're talking about doing this by hand? I think you wanted /r/math or something like that. 
Did you try looking [here](http://lmgtfy.com/?q=matlab+live+object+tracking)?
I'm trying to create connect 4, my partner and I draw blanks sometimes so I go here
I'm mobile so not positive, but I believe kmeans expects each row of x to correspond to one data vector, with the columns being the different dimensions. It's easy to imagine in two dimensions: X, y Data1 : 4, 6 Data2 : 9, 10 So x would be X= [4, 6; 9, 10] This does not extend to your case.somehow you must reduce your data to vectors before using kmeans. A naive approach would be to do (:) to each of your feature images
Yes I did and since I could not get exactly what I wanted, that is the reason I posted here . I appreciate your sarcasm :)
5/x^3 is really 5x^-3 integrate normally.
lol you have 5 days to implement live motion detection and tracking on streaming video and "have some code" but "can't figure out how to use it"? Mega fail.
 IMO even if the images are off by a few pixels, result should still be good . If the binary image is just a outline of the boundary, you can use [imfill](http://au.mathworks.com/help/images/ref/imfill.html) to fill the regions so that every nonzero pixel belongs to the object. 
It might be a good idea to erode the fiducial structure element with a 2x2 square or disk element. I've experienced that it can greatly help in getting more true positives. 
So many times I've been ecstatic to see some different line number or function pop up as my error message. That's the best and why I like MATLAB's IDE for being so easy to setup, learn on and ultimately use, compared to other languages I've used. 
Hey, just wanted to update, what I finally did is this: clc clear all close all original=imread('Untitled12345.png'); foto=im2bw(imread('Untitled12345.png'),0.35); nhood = zeros(19); nhood(10,:) = ones(1,19); nhood(:,10) = ones(19,1); strel1 = strel('arbitrary',nhood); IM2=imdilate(foto,strel1); IM3=imcomplement(IM2); IM3=medfilt2(IM3); B = bwboundaries(IM3,'noholes'); for iloc=1:length(B) locxy(iloc,1)=round(mean(B{iloc}(:,1))); locxy(iloc,2)=round(mean(B{iloc}(:,2))); end imshow(original); hold on plot(locxy(:,2),locxy(:,1),'*') which gives me: http://imgur.com/ah9LHb2 
This at least will work in 2014b and 2015a.
With nearly zero details of your current situation, what you've tried, what's not working, etc. A google search is the best I can do. Perhaps you could explain *WHY* the results returned by google are not what you need.
So look at the code and modify it to get video frames from your video source? 
So for the transfer function (As + B) ______________ (Cs^2 + Ds + E) The numerator coefficients box would look like this: [A B] and the denominator coefficients box would look like this: [C D E] There's no mention of 's' because it's implied by the transfer function block. You're going to need to multiply out the denominator and break up what portions are multipled by s^2, s, and are constants, etc.
thank you for your reply I found datetick but I couldn't get it to work, maybe it because my matlab is 2012b 
Repmat is generally faster than bsxfun anyway.
Repmat is most certainly not faster in a case like this. It's extremely and unnecessarily memory intensive with matrices of this size.
How about this one? A = rand(200,200,10); v = rand(200,1,1); and then... B = repmat(v,1,200,10); C = A./B; ^ takes roughly 17 seconds to run 10,000 times. C = bsxfun(@times,A,1./v); ^ takes roughly 3 seconds to run 10,000 times.
&gt;EDIT: After 15 more minutes of fooling with it I found that the error was not in CSV read but that apparently Matlab does not like \ outside of ' ' and the solution was to just place apostrophes around the entries of the filename. That's because the filename you pass to [csvread()](http://www.mathworks.com/help/matlab/ref/csvread.html) must be a string. Strings are anything between ' '. And the documentation is very helpful, if you know how to use and interpret it. Also, so is Google.
http://www.mathworks.com/help/matlab/visualize/coloring-mesh-and-surface-plots.html
check out the new docs http://www.mathworks.com/help/matlab/ref/datacursormode.html I try to only update MATLAB if I need the new functionality of a toolbox because this happens often and is so very obnoxious. looks like 'ViewStyle' is now 'DisplayStyle' and programmatically adding the other features should be in there.
This text is troubling: &gt;You place data tips only by clicking data objects on graphs. You cannot place them programmatically (by executing code to position a data cursor). Maybe this was always there because this functionality is not officially supported. I hope it doesn't mean the capability was removed. 
indeed. There must be a better way to solve your problem. Why do you need to do this?
I did that so the difference between the two is accumulated (running each line 100 times) and any small differences due to the computers state (background process) would be averaged out.
Gotcha. Thought you were just trying to optimize.
I'm using the Data Cursor to click peaks in data that is to be fitted to a double Gaussian. I have trouble with the fit function using the double Gaussian model when the starting guesses are not sufficiently good, so I pass in the Data Cursor coordinates to my fitting routine so that it works better. I have to analyze hundreds of data sets so I'm now trying to minimize user input. I'm implementing findpeaks to try to automatically guess the peak locations, but I still want to be able to manually change these guesses if they are wrong. So my approach is to use findpeaks and then programatically place data cursors at the locations found by the findpeaks function. The user (me) can then slide the cursors to the correct locations if they are wrong. I do have a workaround in mind already: mark the guess locations with dots on the plot. The user can place data cursors if they are wrong. If no data cursors are placed (data cursor position variable will be blank) the automatic guesses will be used.
Here's how I set up my workaround. I use findpeaks with 'MINPEAKDISTANCE' set to 30 (I bin my data into 50 bins and expect the peaks to be near the extreme left and extreme right of the histogram). I plot the data, turn hold on, and plot the guessed peaked positions as circles. I then set things up to be able to pull values from from data cursors on the plot and prompt the user to select peak values if the guesses are wrong. If the user does not add data cursors, the data cursor mode object is empty. I use the initial automatic guesses if the dcm object is empty, otherwise I use the dcm object positions to update the guesses. I've got some other heuristics to deal with potential issues with findpeaks. If there are more than two peaks, I take the two peaks whose height is largest. If there is only one peak detected, I guess the left-most data point as a second peak. If there are no peaks detected (not sure if this can ever happen) I guess the left-most and right-most data points. I agree that having a good peak finder is important and so far I'm probably only about half way there :p I'm not sure how to do some of the stuff you suggest, but it may be over-engineering the problem for now. My simpler workaround seems to work so far. Thanks for the dialog, it's always useful to bounce ideas back and forth! Edit: Just a little rant. The use of hist() seems to be discouraged now. You could call it as [binheights, bincenters]=hist(data);. Now, using the new histogram() function, you need a for loop to get the bin centers: h=histogram(data); binheights=h.Values.'; bincenters=zeros(length(binheights),1); for i=1:length(binheights) binheight(i)=(h.BinEdges(i)+h.BinEdges(i+1))/2; end Seems a bit asinine to me. Looks like there's also no way to suppress plotting of the histogram whereas calling hist() with output arguments causes the plot to be suppressed. Anyways, I could continue using hist() but the documentation says not to (no idea why).
It is good to bounce ideas off another person even if you don't use anything I suggest it helps to get not just another perspective from another person but most likely another field. for your `binCenters` why not this, `binCenters = diff(h.BinEdges)/2;` then you don't need a loop. Sometimes those updates are annoying. Once me and a coworker got different results using interp1() and we were just short of blatantly calling eat other stupid until we worked it out on each others actual computer--different goddamn versions. the newer release had an error in the interp1 function that was fixed later. Now as I mentioned I'm done updating until I need something new.
I actually accidentally tried using `diff` at first but to find center points you have to do a pairwise sum, not a pairwise difference. I don't think there's a built-in way to do this without a loop.
Scatter plots can also work if you give Z as the colour axis argument.
MATLAB was first written in Fortran (namely based off of LAPACK and ARPACK, some bit of this still remains), but today the core is written in C with a bit of Java thrown in. However, a lot of system files are actually M-files at this point :) ... since Java is based on C++ (start digging around in the library and you find nothing but .cpp files), you could say that MATLAB is even a bit C++ ... So we could say that MATLAB is written in MATLAB, C, Java, so by extension C++, and depends on some ancient Fortran libraries ;)
word
I'm actually working on a vaguely similar project. The better thing to do is to produce all of your data and then plot your results using the saved data tables. You can do this by holding a preset axis and then doing something like a for loop. Set it from t=1:500 to plot all of the data points at that time step and use pause(dt) to hold the frame for a specified length of time, dt. That way, you can explicitly control the frame rate while consistently posting the particles at once. So if xdata is an NxT array of position values for N particles over T timesteps (and you have a similar ydata array), you can use something like for t=1:T axis([-10 10 -10 10]) plot(x(:,t),y(:,t)) pause(1/30) end I'm on mobile and not at my computer right now so I can't check if any of that makes sense, but hopefully that helps you. Edit: formatting, didn't need hold
my advice to you would be to skip on the whole matrix thing that you did, to make it easier to understand. If I read it correctly this problem could be solved with just arrays. To give an example of overcomplication in your code: realI = 11-i; t = (11-realI) * 0.1; 11 - (11-i) = i The only thing that is accomplished by this is making the code harder to read for yourself. By going back to basics and using just arrays I think you will manage to check your code yourself! good luck!
I agree the pause component is critical, however, without keeping a short history of the points, you may not see the motion effect. I would suggest plotting the current step and the previous two steps at progressively lighter colors, possibly with line connectors. Sorry, also on mobile but I hope this helps.
Functions can either be an entirely separate .m file or a subroutine (nested?) within a file. Here's an example of a function called myStats.m (you MUST name the file the same as your function if you use separate). [myAvg myVar] = myStats(vect) myAvg = mean(vect); myVar = var(vect); return And you could call this as such: dataVect = [0 1 2 3 4 5 6]; myStats(dataVect); Some people have diffenrent feelings on how to name/pass stuff to/from the function, but I always try and make unique var. names for everything I do. In this example, you would make dataVect at the command line, call myStats(), and the numbers in dataVect will be passed to vect within the myStats function. Also note, once you've called myStats(), it's executed and returned, you cannot access the internal variables of myStats() unless a) their global or b) you use nested functions. As practice, I always assume I cannot communicate with function internals and anything I want I must pass as either input or output.
Hey that's a good idea. I'll have to remember that. 
What I would do is find x1 &lt; a &lt; x2 and use these two points (x1,y1) and (x2,y2) to find the equation of the line that's *~"tangent"*. If you need it to be absolutly tangent, you can first interpolate your function near a to get y(a) as well as take the derivative at a and get y'(a). Now you have a point and a slope to formulate the exact tangent line.
Well, to make your plot, if you knew the line segments you could just plot them. But... &gt;I'm trying to represent the change in total value of groups of data over a time series, and like this type of visualisation. this sounds more complicated. Can you elaborate what kind of data you have and what you're looking to achieve/plot?
If you can plot the top and bottom lines, you can fill them in using the [area command](http://www.mathworks.com/help/matlab/ref/area.html). To get filling for only the top and bottom, follow the example [posted here.](http://stackoverflow.com/questions/6245626/matlab-filling-in-the-area-between-two-sets-of-data-lines-in-one-figure) I can't really think of anything which is automated to do this in MatLab. You might find some success exporting your data and finding a LaTeX pgf package which does this type of plot, but that's opening a whole other can of worms.
A box and whisker on binned data would give you an equivalent plot.
So is each one of these red things a system, and you'll have 30? And the behavior of the red lines as they go right is somehow related to the 400 reactions? ...or the 100 rate values?
Yeah about 30. As they go from left to right, the values will represent the rate values from 1-100.
The percentages are discrete. The switch/case seems like it's what I'm trying to do, but I'm running into several issues however. I was vague in describing the 50% scenarios, but what I'm doing is comparing the effect of applying the 50% after a certain value of x. y in this case would have to change to 50% when x reaches a certain value. (ay+bx=c) So, I want y to be .5 for part of the expression (for i=2:5) and then I want it to go back to being 0 (for i=6:20). I then want that flipped, so that I don't have y=.5 for the first part, but then y=.5 afterward. 
I'm not on a computer but here is my gauss Seidel function I wrote. If you post your code I can see if I can find where you went wrong. https://www.dropbox.com/s/og2v7331igz6kyh/GaussSeidel.m?dl=0
I just ran your code with the matrix we were given to solve and came up with the same issue as the one with my code. Theoretically, if my initial approximation is the x0 = [0;0;0;0;0;0] the first iteration should be the same as cg = inv(D-L)*b, correct? 
You could have a separate variable, z, where it initializes as 0, then do z=0 for i=[2:9,2:9] if z==0 &amp;&amp; (i&gt;=2&amp;&amp;i&lt;=5) y = 0.5 else y=0 end (stuff) if i==5; if z==0; z=1 else z=0 end end Sorry about formatting, on phone. Something like that, where you use a separate variable to declare when the second run through is. So maybe some combination of switch, if, and separate variable? Though switch would only care about one condition being met, so that may not work with intermediate variable. 
Because you're mixing numerical and symbolic approaches. Your fx needs to be differentiated symbolically and then pass to ezplot. Or you can evaluate the function over your chosen domain (numerically) then plot the diff using plot() Edit: you can symbolically find the derivative in MATLAB but I'm not that familiar with the toolbox. Wolfram alpha can also do it for you perhaps a little more intuitively. 
Yeah I've been working on a code for my phd for around a year now and it has to be very changeable, such that changing a single number will make my geometry completely different. So I have a ton of if statements and random intermittent variables all over. Also, make sure you're vectorizing everything. It runs much faster and looks much better. let's say y = [1;2;3]; if you say 0.5 * (y&gt;=2), it returns [0;0.5;0.5]. Or, y = [0;0;0.25;0.25;0.5;0.5]; x.*y. Avoiding for loops is always a good thing, it's orders of magnitude slower.
If you still have it, could you post an example of the data and the code you used to plot it?
yeah, i'll have to dig it out when I get back to the lab. 
I figured it out! In the while loop I added a delete function that deleted the previous graph. Here's the relevant code: while sum(isnan(monsterPosition)) == 0 x2 = x2 + 1; y2 = y2 + 1; delete(h) h = plot(x2,y2,'k.') if (x2 - x1)^2 + (y2 - y1)^2 &lt; (towerRange)^2 monsterHealth = monsterHealth - towerDamage; end if monsterHealth &lt;= 0 x2 = NaN; y2 = NaN; end pause(0.5); end
Matlab is indeed a good tool for audio processing, although I'm not sure whether its hardware integration is tight enough to get microphone input in real time -- I've never tried that before. But you haven't given us much to go on. This would not be an incredibly hard task for an experienced Matlab programmer, but what do you already know? Do you already know how to program in another language? If not, the first step, before you even start this project, is going to be to learn how to program. You can learn programming in Matlab, but there aren't very many good resources for beginners. I think it's actually easier to learn another language first (e.g. Python, which I think is good for a first programming language and has many tutorials on the web), and then translate your general-purpose programming skills over to Matlab. Once you know one programming language and have the general concepts down, acquiring a second is much easier. (And the third is easier still, etc.) If you already know Python or some other language -- hit the tutorials! See the links on the sidebar. And Mathworks has great documentation on all of Matlab's functions -- both on the web and built into the application. Plus, once you know the basics of programming and the Matlab language in particular, there are a million tutorials out there for specific tasks. So... start Googling. E.g., searches for "matlab audio processing" and "matlab microphone input" and "matlab fourier transform" will give you tons of relevant info.
You need to be a lot more verbose in describing your problem. If you want to read data from the workspace consider using newVar = evalin('base','workspaceVariable') 
&gt; ou want to read data from the workspace consider using sorry, ill edit
Ahhhh..tricky. You have a good start and I can't think of a clever way to do this at the moment so...brute force. EDIT: This is not guaranteed to work every time so an outside loop and conditionals are placed for protection. Comments also added col1Pool = repmat((1:5)',36,1); %let's take from pools of all possible values so we know what we can choose from col2Pool = col1Pool; finalArray = zeros(length(col1Pool),2); for k = 1:100 %safety just in case we loop for a while randIndex = randperm(length(col1Pool),1); %since the pools are ordered, randomly get a value finalArray(1,1) = col1Pool(randIndex,1); col1Pool(randIndex) = []; tempPool = col2Pool(col2Pool ~= finalArray(1,1)); %remove all forbidden values randIndex = randperm(length(tempPool),1); finalArray(1,2) = tempPool(randIndex); col2Pool(find(col2Pool == tempPool(randIndex),1,'first')) = []; %remove from pool so we don't choose again for i = 2:size(finalArray,1) tempPool = col1Pool( (col1Pool ~= finalArray(i-1,1))); if(isempty(tempPool)) %if empty, this configuration impossible, break the loop and try again break; end randIndex = randperm(length(tempPool),1); finalArray(i,1) = tempPool(randIndex); col1Pool(find(col1Pool == tempPool(randIndex),1,'first')) = []; tempPool = col2Pool((col2Pool ~= finalArray(i,1)) &amp; (col2Pool ~= finalArray(i-1,2))); if(isempty(tempPool)) break; end randIndex = randperm(length(tempPool),1); finalArray(i,2) = tempPool(randIndex); col2Pool(find(col2Pool == tempPool(randIndex),1,'first')) = []; end if(i == size(finalArray,1)) %if successful, break out break; end %if not successful, reset and try again col1Pool = repmat((1:5)',36,1); col2Pool = col1Pool; finalArray = zeros(length(col1Pool),2); end
I'm not sure, can you send me the problem your working on? Edit: According to wolframalpha it's x^(k)=inv(D-L)*(U*x^(k-1)+b) where the matrices D, -L, and -U represent the diagonal, strictly lower triangular, and strictly upper triangular parts of A
You can avoid the `cols(i,1) ~= cols(i+1,1) and cols(i,2) ~= cols(i+1,2)`, testing both columns at once in a more concise fashion, by using [`diff`](http://www.mathworks.com/help/matlab/ref/diff.html): any(any(find(~diff(cols)))) returns true if any values are repeated back-to-back in any column, false otherwise (if you don't care about the corner case of the last element in a column being equal to the first column, you could use `cols(:)` and skip one of the calls to `any`). `diff` also works across rows (dim is passed as the third operator), so you can use it nearly the same way to determine if any value is repeated in a row: any(any(diff(cols,1,2)))
This is going to be hard because that p2/p1 term is not just on the outside of your exponentiated *'stuff'* but is also within. Have you been able to formulate this equation in a more simplified manner? Also, I assume you have the appropriate values for all the gammas and as?
plot the first position, lock the axes limits, use pause(0.01) then plot the next position. It's not gonna be in real time, you might have to go to simulink for that if that's what you want.
that would look prettier. I don't think you need velocity becuase that's factored into the displacement at each time point. You can assumed movement in the horizontal direction to be constant.
This is quite hard to follow. Can you boil it down to the minimum code possible and then describe what doesn't work. What does "doesn't work" mean? Doesn't work as expected or causes errors? What errors? Use four spaces in front of your code to format it like code. put your code here
You should perhaps post this question to the SPM mailing list. Those people would be more familiar with the way data are structured/stored using their toolbox and will be able to better help you. 
That's better but still a little unclear. why can't you do this? param1 = B1(:,1); param2 = B1(:,2);
Because I'm an idiot. This of course was the fix. Thanks!
...well this is an interesting nonlinear....system.....jacobian?....the output is what it is supposed to be. They shouldn't be the same. I'm curious, can you tell me where such a system(?) is used and it's purpose?
I think, 'v' is Vigenère table with a = 1, b = 2, ... z = 26. Right? But, in my opinion is this solution not very efficient. Why do you need to know the whole table? First you need this matrix generate. Why do you simply use: key = double(lower(key) - 'a'); key(key &lt; 0) = 27; ciphertext = double(lower(ciphertext) - 'a'); ciphertext(ciphertext &lt; 0) = 27; keyIndex = mod(0:(numel(ciphertext)-1), numel(key))+1; k = key(keyIndex); plaintext = ciphertext - k; idx = plaintext&lt;0; % find underflow plaintext(idx) = plaintext(idx)+26; plaintext = upper(char(plaintext + double('a')));
% vigenere_driver.m %ciphertext = 'LXFOPVEFRNHR'; plaintext = 'ATTACKATDAWN'; key= 'LEMON'; ciphertext = myvigenere(plaintext, key,'enc'); disp(['ciphertext = ',ciphertext]); plaintext = myvigenere(ciphertext, key,'dec'); disp(['plaintext = ',plaintext]); ============= % This was someones homework problem on reddit. function result_text = myvigenere(in_text, key, mode) key = int8(key) - int8('A') + 1; in_text = int8(in_text) - int8('A') + 1; key_to_size=repmat(key,1,ceil(length(in_text)/length(key))); key_to_size=key_to_size(1:length(in_text)); if strcmp('enc',mode) result_text = mod(in_text+key_to_size,26)-1; else result_text = mod(in_text-key_to_size,26)+1; end result_text = result_text+int8('A')-1; result_text = char(result_text); end 
I tried it using Octave and it worked just fine. function [retval] = u (x) retval=[0,1;1,1]^x *[0;1]; endfunction 
Ok. That helps. I see what you're doing. What happened was the matrix raised to the x power was treated as a symbol itself (not a matrix) and then multiplied by the `[0; 1]` matrix, giving you a 2x1 matrix of 0 and the matrix symbol. So, why? To do linear algebra with the symbolic toolbox maybe the matrices need to be symbols as well. This works for eigenvectors and such but the same thing occurred when I tried symbolic matrices, so I guess not. It works if you define `u(x) = [0,1;1,1]^x;` then multiply your result like `u(5)*[0;1]` Your example seems to be a gray area in how MATLAB handles the separation between symbols and matrices. Someone with more experience with this toolbox will have to chime in for the details. Do you have to use the symbolic toolbox? If you do, your school is doing you a disservice because from my experience (10 years using MATLAB almost daily) I've talked to people using a lot of different toolboxes to solve a lot of different problems and everything of this sort is Mathematica, not MATLAB. Now I haven't talked to everybody and some might have some use for it but I can't think of any reason to use it over Mathematica. Mathematica is a different programming language but learning the symbolic toolbox pretty much is too. So if you can just use a normal MATLAB function. That's what it was built for and that's the one I would use. Sorry I couldn't be of more help.
I don't know what the heck I'm doing. I came up with the syntax I posted based on googling how to make functions in MATLAB. How do I write this as a "normal MATLAB function"?
I will, thanks! I'm actually trying to do something very similar (albeit more complicated), so that might help.
Anonymous function!! That's what I was looking for! Thanks! Switching to Mathematica this late in my semester of Linear Algebra seems like overkill.
I suppose it exists so that you can overload it in a class definition. 
Why not just use a normal struct array? This sort of thing is exactly what they're for. Cell arrays are ugly workarounds most of the time. 
So you have an [x,y,z] grid that you want to turn into multiple [x,y,z] grids or [x,y] grids? If you know where the plumes are, either of these cases are easy. Matlab makes I pretty easy to grab elements of one matrix and make it into another matrix. If this is what you want I can add an example here. I would also avoid loops whenever possible!
I have the data in .txt files with the first columns being X, Y,Z. I could re-import it if that would make it easier. Is there a way to sort things between bounds w/o a do loop?
There might be or at least there exists a minimum loop way. How are you importing the .txt data? textscan?
I'm using the "Import Data" button. I got my data in 2D arrays [i,j], where i is the row and j are the x y z
I never understood MATLAB's thinking here; why is *demotion* the default? That is, single(1)+double(1) yields single(2), uint32(1)+double(pi) yields uint32(4), etc. Not only are those conversions the *opposite* of what you would expect coming from, well, just about any other language I can think of, but they are *silent*, with no warning that precision is being lost. Thanks for this example, btw; I was familiar with the down-converting, but in particular your second and third lines yielding different results was something I hadn't considered. 
Actually thanks for *your* examples, I haven't encountered them before and didn't realize demotion was the standard behaviour! Of course, my example sort of makes sense from Matlab's point of view, in that when you have an array index on the LHS, Matlab will automatically convert the RHS to the data type of the array before assigning it - but it won't do this in just a straight assignment that overwrites the variable entirely. In fact, you can mix our examples to produce: &gt;&gt; x = pi x = 3.1416 &gt;&gt; x(1) = x(1) + uint32(1) x = 4 &gt;&gt; class(x) ans = double which is especially strange 
It is confusing because you're probably using the wrong words to describe it. A condition is something that can be used to grab already existing numbers in an array. Like, give me all the values over 90 in the first column of this array in the same order that they appear: Arr(Arr(:,1)&gt;90,1) %Where Arr is an array. An equation is what gives you a value after you evaluate it. Neither of these concepts strictly require loops. If I understand you what I would do is this: %Anonymous function for both Ns. N1=@(variable) equation for N1; N2=@(variable) equation for N2; var = some array for k= 1: length(var) if var(k)&lt;6 NN(k) = N2(var(k)) else NN(k) = N1(var(k)) end end
Well I feel dumb now. I don't even remember why I made this as a cell array... maybe there used to be a possibility that each element would have a different set of fields. Anyways, I should be able to convert this into a regular struct and then it looks like it won't be too bad.
Adding "&lt; handle" did the trick! It seems kind of a silly thing to add... I have no idea how I would have found that out myself, so thanks a lot! I have used classes in C++ before, but have to use Matlab for a project. Since there were lots of functions, the code quickly became cluttered (all those seperate files with tiny functions...), so I used OOP to put some structure into it. Matlab could really do with a decent implementation of scopes...
Sending the sound signal directly into a neural network may not be the best way to go. (BTW in that scenario your Target signal would be a binary vector of the same size as your input indicating at each instance if that sample contains the whoosh). The approach I'm thinking (and this comes from some experience in speech processing a long time ago) would use the frequency spectrum of your sound sections (4 seconds may work, you may want shorter). This is called the short-time Fourier transform (STFT). You'd have a template that you generated from the known whoosh against which you'd check your chunks. Pseudo code might look like this: T = DFT(known_whoosh); for n = 1:numberOfChunks X = DFT(chunk(n)); D = comparisonFunction(X,T); if D &lt; someThresholdValue FoundWhoosh(n) = true; endif endfor Check out [this](https://www.youtube.com/watch?v=NA0TwPsECUQ) and [this.](https://www.youtube.com/watch?v=TZzS52OplYs)
Matlab also does some interesting stuff with how class, functions, and packages can be organized into different files or folders. If you don't look over their docs it's hella confusing. The way the files are packaged and appear in the matlab 'path' is part of the way they handling scoping. Its kinda funny if you're not used to it. Go read up on 'Function Precedence Order'. Also I don't think true polymorphism exist in matlab, but I vaguely remember what this is anyways so I may not be the most reliable source. 
True that, the documentation is sublime! &gt; Correct me if I'm wrong but, you can use classes without the inheriting handle classes. It's just the difference between passing by reference and passing by value. That's really interesting. I'll try to verify that. I too found the explicit passing of the object a bit... odd, since you almost always want to access it anyway (except for maybe some static functions). You don't however, have to do it for the constructor. (It's also not done in the [example](http://www.mathworks.com/help/matlab/matlab_oop/comparing-handle-and-value-classes.html#brgnh_y) you linked to.)
the computer labs have to have it; go there. It's not free, you have to pay for it.
Theres no time, and for some reason their website wont accept my licence number : ( Maybe it has expired after 5 years....
Student version is $99 bundled with the toolbox you want. http://www.mathworks.com/academia/student_version/
Im finishing my degree this friday and buying a new computer this weekend... Si I dont think I'll buy it outright.
Generally this sub doesn't do your homework for you. If you can show what work you have done already people will steer you in the right direction but there won't be any step by step walk troughs right away. In this case it might be a bit difficult since your problem is not so much regarding matlab but on a basic concept for differential equations in general. As a hint, what techniques do you know for reducing the order of differential equations?
&gt; Where in the code does this show? Here: ```y(1).^2+2.*y(2)-(t.^3).*y(3))``` ```y''' = y^2 + 2*y' - t^3*y''``` Such that y(4) would equal y'''' 
This is what I mean by confuckingusing. In the constructor, as a rule, you *must* return something. In that example an *e* is returned. When you call the constructor the returned *e* is a reference to the object you just instantiated. Note how it sets the class parameters in the constructor by *e.Name = Departmet*. This is what I meant by explicit passing. It is also happing in the function right below the constructor. The first parameter passed will always be that explicit parameter that references this instantiation. In the example it is *Obj*. Note how the department is set by "Obj.Department = newDepartmetn". *If* your method function is declared static, you aren't supposed to pass it. If your method isn't static but for some reason you don't need use it, you can supress it with a ~. Which would look like this function transfer(~,newDepartment) Department = newDepartment; end % transfer 
Thank you 
Loop over n = 1:100, assign output to D(n). 
If you can provide me with a sample of your dataset, I'd be happy to help. I've done a fair amount of work in 3d reconstruction and cluster modeling using matlab. Do you have a github account? 
so do a nested FOR loop directly below the main loop? Ive been working on this damn problem for hours haha. google is no help.
I got it! Used a nested FOR, but i could possibly put the second loop statement under the first one with another FOR loop. for C= 0:50:5000 [E, F, D] = Final_part4 (9, 2500, C); for n=1:101; D(n)=Final_part4 (9, 2500, n); end
His C is just n*50 where n = 1:100, so he wouldn't even need a list. 
That makes no sense. Think about what that's going to do. 
I've aliased a lot of unix and version control commands because I always forget the "!" e.g. function grep(varargin) system('grep',varargin{:}) 
I didn't think uigetdir let your use full regular expressions, just the wildcard '*'. Anyway, I do run this function after uigetfile in a parent function that allows you to check your regexp for matched files before accepting it. It's a bit longer and involved so I just posted the most useful portion.
What's the point of using `sprintf` in your shortcut if you're not doing any string formatting? You could just use `disp` since you already have the whole string typed out. Also, why all of this clicking, copying, pasting, and using the Matlab GUI? Making a script somewhere in your Matlab path called `myfig` containing the code enclosed in those strings is a far more general solution. Then you could just type `myfig` for the same effect (except this would actually run the code too, instead of needing to copy/paste it), and it could also be used within your own scripts/functions. That said, I have a similar trick for getting consistent figure positions. I use Emacs with matlab-mode for all Matlab things, so I have an Emacs function to insert the position of Matlab's current figure into whatever I'm editing. So if I have a line of code like this for example, where `|` is the cursor, set(gcf,'position',| pressing the hotkey does this: set(gcf,'position',[440 378 560 420]| Here is the Emacs function: (defun matlab-insert-gcfpos () (interactive) (setq comint-prompt-read-only nil) (let ((alim (nthcdr 2 (split-string (matlab-shell-collect-command-output "get(gcf,'position')"))))) (insert (replace-regexp-in-string "[()]" "" (format "[%s]" alim))))) It works by sending the code `get(gcf,'position')` to the Matlab shell and formatting the shell's output a little bit before inserting it into whatever is currently being edited. This allows me to position figures just once visually, and then I can reproduce the position when I run the code again. I guess this is more of an Emacs trick than a Matlab trick, but it's kind of similar and I think it's neat.
Nice post and nice tricks! Keep 'em coming! 
You say "it errors" as if you have no idea why it failed. The error message will tell you *exactly* what is wrong. It's not just random red text. Stop thinking about this as some sort of witchcraft, where you simply try things until you discover the proper magical incantation. You need to think about what your code is actually doing. What values do you want to pass to your function? Which element of D do you want each output assigned to? How do you reference that element of D? 
I'll go against the grain here and point out that your first one-liner may be a symptom of bad practices. Most MATLAB coders I know only write code for themselves; quick, dirty, "typical" MATLAB code that's intended to be used for one purpose, once. You should strive to write well-documented and _reusable_ code (and under revision control!). For your code (scripts/functions/classes) to be reusable, you can't be mucking around with people's current working directory. It may save you 15 seconds in the short-term, but it's a symptom your approach to coding is stealing days/hours/months from your future self/colleagues. I hope this is taken as constructive criticism - I like the idea of your post here, and I'll try to post a few later tonight. Cheers, fellow coders!
I make a lot of plots, sometimes with lots of lines. I don't always know how many lines they will have. So, I have a set of functions in my MATLAB directory *get_new_color*, *get_new_linestyle*, and *get_new_marker* that just cycle through a large set of possibilities. Similarly, if I want some segment of code to create a new figure, but it may be playing with other code that creates figures, I have a *get_new_figure* function that finds a figure number that isn't being used yet. For a trick that is more in-the-trenches rather than always-available-in-the-background, I love using arrays of symbolic variables. for i=1:n x(i)=sym(strcat('x',num2str(i))); end This allows me to access the symbolic variables as an element of an array, so I can make loops that will easily do the same operation for all the variables.
http://www.mathworks.com/matlabcentral/fileexchange/21351-getplotposition I got tired of arranging my windows and changing between external monitors. 1. Launch getPlotPosition as many times as you would like 2. Arrange the windows how ever you like. 3. Close the windows and it'll tell you the way to problematically arrange the windows in code. Also all of Simulink can be controlled problematically. I have a lot of code and scripts manipulate Simulink to reduce modeling time.
Is there a way to change it back at the end? (I've never messed around with changing the working directory before, so I'm never looked at it) I assume you could at the end of the function return the working directory back to whatever it was before. I'm one of those "quick, dirty, used only by me" matlab users and have no concept of decent coding practices.
&gt; From what I understand of neural networks, the more inputs you have, the more accurate your solution becomes. There's actually 2 definitions of "more inputs" here. There's "more input data points," as in your data set is now 2 or 3 times larger. And there's "more input references," so now you're including a second set of input data, of the same length as your first set. The first may probably increase your accuracy, because it gives you more data sets to train and test against. The second may increase accuracy, but only if the other input is actually relevant. &gt;How can I do this? If you're using the nftool, it will gladly accept any input, matrix or vector. You just need to be consistent with your data sets, whether it's in rows or columns.
I ended up talking to a friend. I did as you suggested and input a matrix. It worked fantastic. Thanks for your response though.
wow....so this really is as easy as it sounds. In case anyone is curious: [freq_count, bin_value] = hist(my_data); %the y and x axis, respectively bar(bin_value,freq_count./length(my_data) %normalized y-axis with x axis the bins
I have a bunch of quickie little tricks that I use. These are stupid-simple but they save me a bunch of time. 1) I have a function on my default Matlab path called `caca.m`. All it does is execute the code `clear all; close all;`. Super-fast to type whenever you want to zero out your workspace; has saved me millions of keystrokes, I'm sure. Plus "caca" means "poop" and is therefore automatically hilarious. I also tried to make a script called `crap.m` (standing for Clear, Rehash, and Pack) that also calls `rehash` and `pack`, to also make sure that all of your functions are up-to-date and your memory is compacted, but apparently you can only do `pack` directly from the command-line. Sad. 2) I have another one-liner function on my path to make a beep. Code: `sound(sin(1:1024)/4,8192);` If I'm running some analysis that loops through a bunch of things that take a few seconds to a few minutes each, I stick a beep at the end of each loop iteration so I get a little progress update in the background while my attention is directed elsewhere. And I often stick multiple beeps at the very end of the function to catch my attention when the entire task is finished, so I can check on the results, start the next analysis, etc. 3) Also, more of a habit/tip: ALL of my `.m` files are functions, even if they don't really have to be. This is good practice in the same sense that avoiding global variables in a language like C is a good practice. It forces you to be explicit about the inputs and outputs of each script, and keeps your main workspace clear -- this way, each script doesn't barf out all of its internal variables all over the place. It also means that when you run multiple scripts, one after the other, you don't have to worry about accidentally using the same variable name to mean different things in each script, thus causing one script to overwrite a variable the other script is expecting to use in a different context. I've seen some people's code that uses 5 or 6 non-function scripts that share a TON of variable names, and it's such a house of cards -- I find it horrifying. Keep your code chunks discrete, people! It feels like a time-waste for simple stuff at first, but once you get in the habit it takes almost no time at all, and it will save you tons of heartache in the end. 4) Last thing -- also more of a general programming practice. If you write a lot of Matlab code, develop your own conventions that will make it easier for you to read your own stuff. For example, my loop variables are always named i, j, k, m, n... (going from outermost to innermost loops). I skip 'l' because it looks too much like the number 1. Also, if I make a variable that changes each time a loop executes, I preface it with "this", e.g. `this_value = values(i);` If I'm saving a result at the end of each loop iteration, I preface those variable names with "all", e.g. `all_results(i) = this_result`. Finally, *almost* any function I write is prefaced by my initials, e.g. the beep function I mentioned above is `mrj_beep.m`. This isn't about egotism; it's to guard against name collisions in case Matlab adds a `beep.m` function in the future, or I download another person's toolbox that includes a `beep.m` function, or whatever. One exception to that rule is for functions like `caca.m`, where the main point is to save keystrokes. I have to assume Matlab is never going to introduce that function in the future. Another exception is that if I have a bunch of scripts that are intended to be run in sequence, I preface them with arbitrary letters that make them show up in the right sequence when listed in alphabetical order, e.g. `aaa_load_data.m`, `baa_preprocess_data.m`, `caa_main_analysis.m`, `daa_show_results.m`. I use multiple letters in that example so that if I want to insert an intermediate step, I can do so without renaming everything else, e.g. `aba_check_data_integrity.m` between loading and preprocessing. The reasoning is that when I come back to this folder of scripts after some time away, and can't quite remember what I did or in what order, the naming conventions will make it abundantly clear, and it will be way easier for me to recreate my old workflow.
Sometimes I want to keep a few variables from my workspace. For this, I created keep.m: function keep(varargin) % KEEP % % Example: % clear all variables in the workspace except 'var1' and 'var2' % &gt;&gt; keep var1 var2 % if isempty(varargin); return; end wh = evalin('caller', 'who'); if isempty(wh); return; end ndx = ~ismember(wh, varargin); del = wh(ndx); if isempty(del); return; end del = sprintf('%s ', del); evalin('caller', ['clear ', del]); drawnow; end Edit: I also use the shortcuts bar for close all; clc; dbquit
Also, change the current directory in MATLAB to the one where the current edit file resides: function cd2curFile() % CD2CURFILE % Change MATLAB directory to the directory of the currently open editor % file. % % Syntax: % CD2CURFILE % % This function is intended to be used as a MATLAB shortcut; one click to % change the current directory. % % Note: only tested in R2007b, R2010a, and R2011b. % % Get current MATLAB version V = ver; ndx = 0; for ii = 1:length(V) if strcmp(V(ii).Name, 'MATLAB') ndx = ii; break; end end if ndx==0 error('Unable to obtain MATLAB version.'); end V = V(ndx); curVer = str2double(V.Version); % Get the editor object for the filename switch curVer case {7.5, 7.1} %R2007b or R2010a editorServices = com.mathworks.mlservices.MLEditorServices; curFile = editorServices.builtinGetActiveDocument; curFile = char( curFile ); case 7.13 %R2011b curFile = matlab.desktop.editor.getActiveFilename; otherwise error('Not working with a tested MATLAB version.'); end % Have the file name, need to change to that directory (use FILEPARTS) dirname = fileparts(curFile); if ~isempty(dirname) %if not "Untitled.m" cd(dirname); fprintf('Changing directory to:\n\t %s\n', dirname); end end 
The [heaviside function](http://www.mathworks.com/help/symbolic/heaviside.html) doesn't do what you are asking for. What you are looking for is the [rectangularPulse](http://www.mathworks.com/help/symbolic/rectangularpulse.html) function.
Looks interesting. What does this let you do that [clearvars](https://www.mathworks.com/help/matlab/ref/clearvars.html) doesn't, though? For example clearvars -except var1 var2 should do the same as your code, right?
Yes! Thank you. BTW it works on R2014b (on mac/unix). Here's a modified version of the code that allows people to try it out on versions other than R2007b, R2010a, and R2011b (but still keeps to the spirit of your helpful error reporting): function cd2file() try % Try getting the editor object for the filename editorServices = com.mathworks.mlservices.MLEditorServices; curFile = editorServices.builtinGetActiveDocument; curFile = char( curFile ); catch exception try curFile = matlab.desktop.editor.getActiveFilename; catch disp('Something went wrong. For details visit:') disp(['http://www.reddit.com/r/matlab/comments/34cihm/' ... 'whats_your_favorite_programmatic_matlab_trick/cqu62df']) rethrow(exception) end end dirname = fileparts(curFile); % Change to directory containing 'filename.m' if ~isempty(dirname) %if not 'untitled.m' cd(dirname); fprintf('Changing directory to:\n\t %s\n', dirname); else fprintf('\n This script has not yet been saved, \n'); fprintf(' staying in current working directory:\n\t %s\n', pwd); end
I'm going to, tomorrow, I was just trying to get it done today. I'm just going to use a different method of solving this for now, and clarify with my professor to see if I can straighten out how to use the rectangularpulse function. I'm using global parameters because its a short code, so I'm not worried about it sinking resources, and because the code I call the function in calculates all those variables, so it makes it simple to transfer them.
Those two functions are very different. Fminsearch implements the Nelder-Mead algorithm, which doesn't need to know the gradient of your error function. It's very flexible, and can even handle discontinuous error functions. It's pretty impressive, and tends to give good results without a lot of setup. On the other hand, it can't deal with explicit boundaries, and for large numbers of parameters, it gets inefficient. Fmincon implements a variety of bounded optimizations, mostly of the sort which are extensions of Newton's method. It takes more preparation, but generally speaking the final results are very accurate. If you can compute an analytical gradient for your error function, these methods are also very fast and efficient. If you can't, they will still work, but much less efficiently because they must use finite differences. The real equivalent to fminsearch for gradient-aware optimization is fminunc, which implements Newton's method and some extensions of it. All nonlinear optimization requires a decent starting point (unless it's convex). Local minima can always be a problem, but usually some reasonable efforts to compute a starting guess will fix that issue. 
His code looks bad because he's ignored the sidebar note about adding four spaces to correctly format code He's got a t parameter because he's writing a function for ode45. There's no excuse for globals. 
&gt; What's the point of using `sprintf` in your shortcut There's no point, the output is the same without sprintf. I hope that is a satisfactory answer haha. Seriously though, after taking the screenshot I knew I'd get called out on this by someone; I can't remember what I was trying to accomplish by including sprintf :/ . &gt; Also, why all of this clicking, copying, pasting, and using the Matlab GUI? Making a script somewhere in your Matlab path called myfig containing the code enclosed in those strings is a far more general solution. Then you could just type myfig for the same effect (except this would actually run the code too, instead of needing to copy/paste it), and it could also be used within your own scripts/functions. Totally, I do have something like a `myfig` function. However, there are a few reasons I regularly use this shortcut to print... fh1=figure('Position',[600 450 1000 500],'Color','w'); hax1=axes('Position',[.07 .1 .4 .8],'Color','none'); hax2=axes('Position',[.55 .1 .4 .8],'Color','none'); If I don't want a figure with exactly these positions I need to include input args to `myfig(figPos,ax1Pos,ax2Pos)`, and if I don't like those colors, I need to add more input args `myfig(figPos,ax1Pos,ax2Pos,figC,ax1C,ax2C)`. And if I want to add a 3rd axis, I need to include in my code: myfig([600 450 1000 500],0,[.55 .1 .4 .3],figC,ax1C,ax2C) hax3=axes('Position',[.55 .1 .4 .3],'Color','none'); and then if I want a second figure with the same properties as those that are default in `myfig` I need my function to return fig/ax handles for everything: [fh1 hax1 hax2] = myfig(figPos,ax1Pos,ax2Pos,figC,ax1C,ax2C) hax3=axes('Position',[.55 .1 .4 .8],'Color','none'); [fh2 hax21 hax22] = myfig() ...and so on. Also, using `myfig` creates a custom function dependency; so when I share some minimal function with my buddy and forget to include `myfig`he's going to be like... "*dude, it doesn't run. It says something like undefined function or variable 'myfig'. Error in foo.m*". At which point (I'll think to myself, *shhiiiooot, should have run a dependency check*) I'll email him back saying - sorry about that bud, I'm attaching myfig.m, it's a custom figure function. And he'll reply "*Bro, foo.m is 25 lines of code, u rly need another files just for a dumb figure. Matlab sux. grok python m8... Thanks tho ;P*" Basically what I'm trying to say is that, for whatever reason, if I need to create a customized figure I could all the above or just do... &gt; all of this clicking, copying, pasting, and using the Matlab GUI? which is like, soo hard right? Gotta use the stupid mouse. 
You can use onCleanup for this. It will execute the function handle that you pass it when the returned object is destroyed. e.g. clnCwd = onCleanup(@()cd(pwd)) This has the advantage of still being executed even if your program errors or you stop execution using ctrl+c.
As the others have mentioned, they are two very different solvers. If you describe your objective function and constraints, we can help you pick the better algorithm.
 Thx!!!!
Agreed. OP: What exactly are you testing?
I don't think a for loop is your best choice here. You can sort large sets of data rather easy in this fashion: Define x: x = 1:1000; Now you can select every 5th element in x as follows y = x(1:5:end); If X is 2d, you can use the command x(1:5:end,:)
X (noun): The 24th letter of the modern English alphabet. --- ^(I am a bot. If there are any issues, please contact my [)[^master](http://www.reddit.com/message/compose/?to=Spedwards&amp;subject=/u/Define_It)^(].) ^(Want to learn how to use me? [)[^(Read this post)](http://redd.it/31vrec)^(].)
Google returned numerous results for me..
I agree with communis_opinio that a for loop isn't the best choice. I would probably create your arrays with repmat, e.g.: &gt;i = (1:10).'; % transpose so i is a column vector &gt;j = 32:32:8000; % since you only want every 32nd value, why bother calculating all of them? &gt;stuff = repmat(9*i, 1, length(j)) + repmat(10*j, length(i), 1); Finally, I would avoid using i and j as loop counters - you're redefining the variables for the imaginary number. While it's good practice to define complex numbers as x = real + 1j*imag, I would still tend to avoid i and j as other variables.
[This](http://www.mathworks.com/company/newsletters/articles/solving-sudoku-with-matlab.html) goes over the concepts of how to do it. Try reading the text and not looking at the code if you want to understand what it's doing. 
Are you sure you haven't opened up any of the pre-installed MATLAB code and messed with it? I don't have a copy in front of me right now, so for now, just a few observations/ideas: The documentation for audiorecorder (http://www.mathworks.com/help/matlab/ref/audiorecorder.html) doesn't indicate that any of the input arguments must be of a particular type. I don't see why any of the input arguments would necessitate a uint64. It's perfectly acceptable to pass in a number with the default class (double) and check that the value is an integer. I wouldn't expect any of the input values to be so large as to require a 64-bit integer over, say, a 32. So, something smells fishy. I'm not sure what's going on inside the initialize() method, but I'm curious what input or derived quantity ends up being passed to log2(). Perhaps try to find which input argument is causing the log2() to barf and report back? Best of luck.
I'm not sure if I need to evenly space it for this to work 
Yeah I would go with a 9x9 that has the initial clues, then figure out what matrix operations to do to it in order to expose additional deduced answers by process of elimination in a function that gets called repeatedly in a loop until it is solved.
you can just do for i=1:length(a) without the intermediate variable. if the different vectors are in a cell array you can nest it like for i=1:length(cells) for j=1:length(cells{i}) ... end end
thank you!
See also the size() method for extracting the lengths of each dimension of a matrix.
[Here](http://rosettacode.org/wiki/Sudoku#MATLAB) is an implementation of this process I posted to rosetta code a few years ago. The code can be simplified and cleaned up, but hopefully it can be followed if you copy the code into the MATLAB editor.
I love Emacs! Know what else I love? [The matlab gui](http://gfycat.com/NippyIncompleteBluewhale)! 
That is so painful for me to watch... That whole sequence should be 3 keystrokes! I agree to disagree on the matlab GUI and its merits. :) Edit: [Here](http://zippy.gfycat.com/NiftyZanyJay.webm) is how I would do it. 1 keystroke to insert some text from a file, 2 keystroke to save and run current script. I would bind function-f to insert the figure shortcut (key combos with function will never interfere with default emacs things, and this key would only work while editing .m files). Ctrl-C Ctrl-S saves and runs the current script. The only mouse movement is to stop the recording. Also, `rand(1,10)` instead of `rand(10,1)'` :P
&gt; savarN(array,i) function savarN(array,i) eval(['A',num2str(i),'=array;']) save(['A',num2str(i)],['A',num2str(i)]) end 
maybe invert it?
haha ok u win
I thought programs had to be optimized for different ram speeds. If the motherboard and processor support it, does that mean that you can run over the 1600MHz standard and get speed boosts out of it? I had been dissuaded against getting faster ram for a number of years based on the programs not being able to utilize it. 
There's almost certainly a more elegant, compact way, but first thing that comes to mind is a while loop. look at the limit, start at 0, and keep changing step size for each loop back and forth between 0.15 and 0.181 until you hit the limit. Then mirror vector and combine: limit=0.662; stepsize=[0.15 0.181]; sn=1; vector=0; i=2; while vector(end)&lt;limit vector(i)=vector(i-1)+stepsize(sn) if sn==1 sn=2 else sn=1 end i=i+1; end finalvector=[-fliplr(vector(2:end)) vector]; once you get huge vectors be careful with not preallocating like i've done.
this is giving me some weird results, the first thing I noticed is that start = -(symVecSize)*(step1+step2)/2; should be start = -(symVecSize)*(step1+step2)/4; this way I start with -.662 
I ran this and it is starting with -.75 and only increasing with stepsize of .15, but you gave me some ideas
change stepsize to stepsize=[0.181 0.15] I shoulda tried out the code before sending it.
Yes, you'll need to be more specific. Right now, I can tell you that a numerical solution for a cantilever beam with 20 elements should not take "many minutes"... however many that is.
Unfortunately this question, as posed, won't get any help. This is for a couple of reasons: 1. You didn't post code. No one can say why your code is slow without knowing what it looks like. 2. Most of us don't know anything about solving cantilever beams. MATLAB does a bajillion things in a bajillion ways, so you'll need to provide code. 3. You didn't bother to profile your code. It'll help if you can show us the source, point to a particular sore spot it its execution and people can then suggest speed-ups.
What step size?
Does grad school count as the field? If so, then I can help you!
Matlab is pretty good for prototyping a lot of code. If you are focusing on DSP, you should absolutely be conversant with FT's, creating filters, z-transforms, etc. Eventually though, Matlab won't be super effective in running computationally intensive code. So it will be good to know Python and C (or at least wrapping code in it). 
Okay. Thanks.
What's MEX? edit: [Is this MEX?](http://au.mathworks.com/help/matlab/ref/mex.html?refresh=true)
yes
I got attacked by the automod or something. Hopefully this little bump will get this noticed. Thanks gang!
Well... it would appear that this isn't an issue with your GJE code but in processing what you want to pass as input. How are you trying to combine your A and B?
&gt;size (a+b) but that's obviously. WronG. yep - you're trying to break math by adding to dissimilar matrices. You might instead consider the [cat()](http://www.mathworks.com/help/matlab/ref/cat.html) function... ^cough ^:) In programming language, "concatenate" is the action of "gluing" matrices together (as I suspect you're after) Alternatively, you could also have done some transpose-dance (if needed) and concatenated them like (generally) new = [a, b]
Try use a weighted linear regression. http://www.itl.nist.gov/div898/handbook/pmd/section1/pmd143.htm
this is exactly what i was looking for but couldn't find. i didn't know what it was called, so that was probably the bulk of my problem. Thank you!
I didn't want it to seem like i wanted you guys to do my homework for me. Thats why i decided not to include it. Thankfully /u/pugnare told me its called logical indexing. Now I can learn it properly. 
Thanks! I found this [page](http://au.mathworks.com/help/matlab/ref/lscov.html), and from what I can understand, the weights in the vector w should be proportional to 1/(uncertainty)^2. Does that sound right? What I'm still not 100% sure on is how do I get the coefficients of the linear best fit y=a\*x+b, as well as their uncertainties? As you may have noticed I'm a bit of a newbie at Matlab. Sorry for any inconvenience.
[here is the code, hopefully you can see where I am trying to create a chart the first time it is called and update it the following times](http://pastebin.com/inP5RcCw)
What do you mean by "name"? Do you mean the figure name? That is a property of the figure, not the bar chart, so you can set it like "set(gcf,'name','myNewName');". (gcf stands for "get current figure") Do you mean the title of the chart? That is a property of the axis, not the bar chart. So you can set it like "title(get(h,'parent'), 'myNewName');". (get(h,'parent') gets the handle of the axis that the chart h lives in) 
You know I guess I don't know. What I'd really like to do is refresh the data and redraw a bar chart. That has led me down the "name" rabbit hole
Check out the command *linkdata()* x = 1:20; y = rand(20,3); area(x,y) linkdata on % pause a bit pause(2) % change the values in y. y=randn(20,3); 
What menu command are you using? Anything that can be done from the menu can be done from the command prompt.
http://www.mathworks.com/help/curvefit/removing-outliers.html
Put it in a while loop with an extra option to 'exit'. K=1; items={'Red','Blue','Green','Exit'}; while ~strcmp('Exit',items{K}) K = menu('Choose a color',items); fprintf('You selected: %s\n',items{K}); end 
So, don't go with the menu that I have?
http://se.mathworks.com/videos/creating-a-gui-with-guide-68979.html https://www.google.se/webhp?sourceid=chrome-instant&amp;ion=1&amp;espv=2&amp;ie=UTF-8#safe=off&amp;q=matlab+calculator+gui 
Use your exact same menu just add another option and wrap it into a 'while' loop.
I figured my situation out. Thank you.
I was able to get it to work. It was in a function that I was calling and so needed to be declared and stuff. It ended up working fine now thanks to you guys!
You'd think. I checked the documentation after reading that. I could see the default optimisation algo, but not the cost function.
still gives me the same output 
What does your file look like? Which "certain parts" of the file are you trying to get? Can you post the first few lines of your file? And also post the first few elements of your output A so we can see how things align.
THANKS :)))
FYI, the max() and min() function have a 2nd output argument which gives you the index: [maxval,maxloc]=max([struct.field]); maxloc will now give you the index. This assumes that struct.field is a single value; if it's a vector, we'll have to do something a little more complicated but we can still do it.
It's a bit confusing because gamma is referred to as the "guess rate" but actually depending on what you are measuring your psychometric function can go either from 0.5 to 1 or from 0 to 1. It's easier to think of gamma simply as the lower bound (which is what it actually is mathematically). Equivalently, lambda or the "lapse rate" is 1-upper bound and represents the % of mistakes or lapses you expect the subject to make for the easiest trials / strongest signal
 X=reshape([ones(1,N); ones(1,N)*-1],1,[]); or X = ones(1,2*N); X(2:2:end)=-1; or X = repmat([1 -1],1,N); or X = (-1).^(0:2*N-1); or X = mod(1:2*N,2)*2-1; or X=cos(0:pi:(2*N-1)*pi);
Suppose you have N points, and their coordinates are listed in an Nx3 matrix, such that N(:,1) are the x values, N(:,2) the y values, and N(:,3) the z values. You now have a point m = [x,y,z] and you want to find the closest point in the Nx3 matrix: [shortest_distance,loc] = min(pdist2(X,m)); closest_pt = X(loc,:); To clarify: **pdist2()** computes the pairwise distance of the row-wise points in the matrix **X** with the row-wise points in the matrix **m**. Since **m** only has one row, our matrix is Nx1, and shows all of the distances between **X** and **m**. We then use the **min()** function to extract the minimum value and the index (**loc**) of that value.
Thanks!
This isn't much to go on. Use hold on and plot the line using plot3.
Use elementwise '.*' multiplication between the sines when computing rho. You have theta running between 0 and 2pi and phi running between 0 and pi.
I'd suggest using some Matlab code to do this. 
If you want to find the shortest path from a given point to the lowest point, your current approach is very likely to be trapped by a local minimal. To find a global minimal is to solve a Shortest Path Problem. See [Dijkstra's algorithm](http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm)
I think you have this backwards. &gt; To find a global minimal is to solve a Shortest Path Problem To solve a shortest path problem is certainly to find a global minimum - you're minimizing total distance out of all possible distances travelled. To find a global minimum, however, it is completely unnecessary to find the shortest path. There isn't even a concept of "path" because a global minimum is just a point that satisfies a certain condition - what "path" would you be minimizing? &gt;If you want to find the shortest path from a given point to the lowest point, your current approach is very likely to be trapped by a local minimal. His current approach *will* be trapped by any local minimum regardless of his goals.
You set x and y to be zero, yet your while loop only runs if x and y are greater than zero. 
Okay, I set the test conditions to x&gt;=0 &amp; y&gt;=0 and now I get 788.4878 -3.2031 8.8000 as my answer. But how come I am not getting more x,y,t values?
Are you sure, your original equations are correct? Shouldn't there be sin^2 and cos^2 in the denominator?
Try making a time _vector_ with something like this: t = 0:0.1:10; and you might be able to get rid of the loop altogether.
The while loop is the objective of the problem. 
&gt;What condition can I set for my matrix so that A'*A will always be invertible? A matrix is invertible if and only if its determinant is non-zero. So you could try something like A = gf(rand(5,3) &gt; 0.5); % construct A while det(A'*A) == 0 % while A'A is not invertible A = gf(rand(5,3) &gt; 0.5); % re-construct A end This will "reshuffle" `A` *until* `A'*A` has a non-zero determinant (i.e. is invertible). I'm not sure what exactly you're doing with your `for i = 1:10` loop... A couple of other things: * Use four spaces before a line of code to have reddit format it as code. * Matlab's default spacing when constructing vectors with `:` is 1, so instead of `i = 1:1:10` you can just do `i = 1:10`. * `A = A&gt;0.5;` can replace the two lines `A(A&gt;0.5) = 1;` and `A(A&lt;=0.5) = 0;`. `A&gt;0.5` creates a boolean array of `1`s and `0`s where you want them, and `gf()` can convert this to a gf2 array. I've used this to shorten your code from 14 lines to 4 lines.
What do you want, someone to do your homework, or to actually learn something?
textscan will work, but I recommend using table(). That way, you can easily add a column and also access data by row number, column number or column name. I don't have MATLAB on this machine, but it would be something like this: % read the data into a table T = readtable('filename.csv'); % add a flag column T.flag = zeroes(size(T,1),1); % as an example, check for nan in 'Level' column T.flag = isnan(T.Level); Note: when you use readtable(), it's probably going to be mad about your column names in the file. For the table, they have to be valid MATLAB variable names. So maybe something like this: T = readtable('filename.csv', 'ReadVariableNames', false, 'format', '%s%d%f%f%f'); % same format as textscan. T.Properties.VariableNames = {'Date','Hour', 'Level', 'ArmPrs', 'Tw'};
This isn't career oriented but I use it for computer vision applications and interfacing with my raspberry Pi 
Side note: you can use `sind` and `cosd` with degrees instead of converting to radians.
Try these lines as an experiment: signal = [0 0 1 2 2.5 2 1 0 0 0 0 1 2 2.5 2 1 0 0] signal_non_zero = signal &gt; 0 signal_starting_stopping = diff(signal_non_zero) Does that give you a hint how to get started?
Hm. Take a step back. Both those functions are for optimization, not solution. Usually for solving equations numerically I use matlab's fsolve. Are you sure you got a good solution with lsqnonlin?
I am implementing a dubins path algorithm in 3D, using equations from Hota and Ghose (https://scholar.google.co.in/citations?view_op=view_citation&amp;hl=en&amp;user=Sw87EI4AAAAJ&amp;citation_for_view=Sw87EI4AAAAJ:qjMakFHDy7sC) With lsqnonlin I`ve gotten decent results (fval = 3e-27). However at certain start attitudes (v_1,v_2) it breaks down (fval &gt; 1e-4). I tried fsolve in a few months ago, but I got better results with lsqnonolin. The reason I am asking is, that after mailing one of the authors on the paper linked above, she told me that fmincon would yield better results than lsqnonlin, but I am struggling to use it.
So you basically want to descend downwards into the nearest pit? This is what others are calling the nearest local minimum, although it's not even necessarily the nearest minimum. It will bring you to *a* local minimum.
Indenting so I can read it better: function derivative_krr(f,x0) h = .000001; x = linspace(-10,10); y = f(x); yp = (f(x-h)-f(x))/h; ypp = (f(x-2*h)-2*f(x-h)-f(x))/h^2; disp(f(x)) disp(yp) disp (ypp) plot(x,y); hold on; plot(x,yp); hold on; plot(x,ypp) title('Graphing a Function, First and Second Derivative') xlabel('X Axis') ylabel('Y Axis') legend('function', 'first derivative', 'second derivative') axis auto xy The reason is an algebraic error in your ypp equation, which is causing your ypp values to become *enormous*. As a result, the y-axis is stretching vertically to accommodate; this smushes y and yp down so they essentially look like lines.
Your linspace should be set up to output points at h spacing in order to be consistent with your derivative formulae linspace(-10,10,1/h)
You can use fmincon as a solver for nonlinear equations and it is actually quite simple. fmincon minimizes a function f(x) subject to boundary constraints and nonlinear constraints. One of these constraints are the inequality constraints g(x)&gt;0 the other one are the equality constraints h(x)=0. To use fmincon as a solver, you first need a function that does nothing else but return a constant - this is the function you are going to minimize with fmincon. Let's call this function myDummyFunction. Now, you need your system of nonlinear equations in a function. Let's call this function myProblem. Matlab expects that this function returns two vectors. One for the inequality constraints and one for the equality constraints. Therefore, the function header should look something like this function [InequalityConstraints, EqualityConstraints]=myProblem(x) InequalityConstraints=[]; % This is an empty vector EqualityConstraints=the results of my calculations in a vector Now you can solve your problem as follows: result=fmincon(@myDummy,guess,[],[],[],[],[],[],@myProblem,options) Similarly, you can use any nonlinear minimizer (e.g. fminsearch) by minimizing norm(myProblem). Edit: It seems that your problem has more variables than equations (I count 11 variables and 5 equations). Therefore, my suggested solution with fmincon doesn't work on your particular problem. But you can always use the minimization approach I suggested then you can try the various minimizers (fmincon, fminunc, fminsearch). Also, the Levenberg-Marquardt algorithm used by fsolve solves least-squares problems.
You can always solve a system of nonlinear equations by minimizing for example it's norm (see my post above). 
That's actually not true, since he/she ends up calculating f() at values f(x) and f(x-h).
Good point. Saw the sloppy setup and assumed that was it. Likely it's due to whatever f(x) is. Going to turn out it's f(x)=e^x.... Edit: or the sign error you already pointed out.
It's a simple arithmetic error. I fixed it on my end and everything ran fine...
f(x) was just x^2+2x+1
phi(phi&gt;.5)=0. You can find using your parameters and define their values or get their index (ex. I=phi(phi&gt;.5) gives you a true/ false for values greater then .5) . Pretty much search for what you're asking for or what I said. Tons of help online to expand.
I didnt realize why I had that equation for ypp, but now I do; I was using a sequence with centered difference values, but I still feel like just switching to the regular ypp formula shouldn't have fixed it as well as it did. I also posted this question on Mathworks, had similar responses, I fixed ypp, but then when I went back to using the centered difference values, the graph only showed the original function line but much much smaller http://www.mathworks.com/matlabcentral/answers/215761-derivative-graph-showing-the-orignal-function-and-first-derivative-as-the-same-on-graph#answer_178427 
and by the way thank you for actually looking into this and helping me, Im sure I'll get it in time, I'm just really not great with MatLab, specially when it comes to troubleshooting stuff like this, every little thing just seems like a brick wall for me still
really? Ive been doing tons of search and can't find anything.
Hey no problem. Just let me know--did you get everything working correctly or are you still having issues?
Thanks a lot! That was really helpful, but I think I might be able to get it working with fmincon, three of the equations are vector equations and can be expanded into three equations each. Got the work set out for me today! :)
Main features: * Download Free Data from Google Finance (Daily &amp; Intraday) - NEW! * In-Sample Optimization (Backtesting) * Out-of-Sample Testing (Forward testing) * Walk-Forward Testing &amp; Analysis * Genetic Algorithms Optimization * Advanced Analysis of Trading Strategies Portfolio Performance More information on: http://wfatoolbox.com Video manual: http://wfatoolbox.com/video-manual/
It worked! Thank you very much http://imgur.com/KeAUSHP (Pic of the path)
Would the output of diff() always have a 1 or -1 though? 
Yes because signal_non_zero is always 1 or 0 
uhhh its not looking great anymore, haha don't know why simply switching the ypp like that changed so much, but now the axes are set to what fit the old function and it wont change even though I set it to auto.... After a little bit I started focusing on some other stuff (if you couldn't tell by now I'm a student, I have this and 5 other functions like Newton's method, Euler's, Method of Bisection, Riemann Sums and Cubic Roots) Starting to look back at this function now though, gonna play around with the graph axes, see if I can find anything new, but right now I'm setting: f = (@(x) x.^2+2*x+1) derivative(f,2) It is not printing out the values of x, yp, ypp anymore, its just graphing the function and listing the values of 100 columns in the command window, PLUS the graph has huge parameters and is only showing the original function... 
I don't know if it makes a difference, but i have the R2011a version
It's hard to say with so few details, but one thing you could try is calling exit() at the end of your CloseRequestFcn? Edit - a bit more as to why you might want to do this - your compiled executable is not really an executable. When you run it, it starts up a more or less complete copy of the Matlab interpreter (either from an installed copy of matlab, or from the MCR which is essentially the same thing). Your exe file actually just contains the m files (probably stored in the exe as encrypted p files), and these files then get run to use your code. It sounds like for whatever reason, when your code finishes, the MCR/Matlab interpreter is for whatever reason not terminating. So exit() might force this to happen when your figure window is closed 
I have looked into using exit() but it doesn't solve the problem. Something seems to be going on after closing the GUI since CPU usage climbs from 5% to 30% after closing the program (memory usage stays roughly the same). I'll try removing parts of the business logic to pinpoint the problem.
What happens if you don't delete the handles at all? As an aside, memory leaks are mainly relevant programs that remain running - once a program terminates, the OS will free all of the associated memory automatically
I seem to have it somewhat narrowed down. I have created two seperate GUIs with GUIDE, one completely empty, the other one only containing one axes object. Both have zero manual changes in the automatically created .m file and the one with the axes object stays running after closing the GUI (there is no CloseReqFcn in both). I was under the assumption that closing a GUI always calls delete(hObject) as it does in an automatically created CloseReqFcn and therefore invalidates all references to hObject's children. edit: I am using 2014b, so my GUI handles are objects. another edit: Further investigation: An empty GUI with a single buttongroup (both empty as well as containing several radiobuttons) also shuts down cleanly, so the issue seems to be the axes. I have added a CloseReqFcn to a GUI with an axes and explicitly call delete(handles.axes1), but this doesn't help either.
Yeah, it's odd. Thanks for your help though.
Feel free to correct me if I am wrong, but I believe you are trying to use bvp4c with the EOM's you mention above and the boundary conditions you have described. To use bvp4c, you'll want to setup 3 files. The first will be the main script where you make your initial guess (solinit) of your states and call bvp4c. The 2nd file will have input (states) and output your EOMs, dcdz. The 3rd file will input (ya,yb,yp), but now it will output your residue. Ya is the initial point at all your states, Yb is the final point at all your states, and yp is a vector of all your parameters. The residue is your boundary conditions. [if your first state x1 should start at 5, then your residue should be ya(1) - 5;] I'm not sure exactly what your trying to do and if this doesn't address your question, let me know and I can try again. Good luck!
Thanks for the response Bernoulli. I finally got it working this morning and yep this is how to do it
use this b=atand((m2. (star) (1+e). (star) tand(a)) (dot)/(m1-(e. (star) m2)+((m1+m2). (star) (tand(a).^2)))); that should make it work. You didn't do an element-by-element division, so make sure to use ./ instead of just / next time. edit: reddit seems to be formatting my post in an unwanted way. This is why I wrote (star) and (dot) instead of * and .
Is your simulation time long enough? Are the settings on the analog input block in agreement with the to workspace block? I'd check both of those as a first idea.
Thanks mate
The input block only asks for a sample rate which is set to .01. The sim time is set to infinite. 
You could add a line to your function that compares the size of r to your xy input. If they're the same size, do nothing, if not and r is a single scalar, do r=r*ones(size(x)) to get the appropriately sized vector.
Yes, the simulation is running long enough. If I watch a scope for say, 60 seconds, I can see the signal as it should be being fed in for the whole minute. But when I hit stop to get the to workspace block to output the data, it will only have a few hundred elements in it which represent the last piece of my signal, not the 6000 that should be there.
They all use an inherited sample rate. If they were different would it cause this problem? 
&gt; some other way of saying "every time you need to match a value to a row, just use this value"? Element-wise operations (like `x.*r`) do this. `r` can be a scalar and scale everything in `x`, or `r` can be a vector the same size as `x` and element-wise multiply everything. Taking advantage of this depends on the implementation of your function - if `f` loops through `[x y]` and `r` simultaneously then obviously you'll need to pass `r` as a vector or have your function transform it into a vector. It's likely possible to rewrite your function in terms of `x`,`y`, and `r` and use operations like this instead of having a function of `[x y]` and `r` and using loops.
 4 spaces starting a line eliminates reddits formatting TMYK :)
Thanks, thats a great insight / idea. I'm working against a built-in function, so will try what you have suggested in the morning, but I doubt it'll be that flexible and i daren't change the built-in stuff (is that actually doable?) 
result = sum(3:10:998);
not sure why he put 10, but does sum(3:5:998) work?
I don't know where to write this line though... :(
Here's what you have so far. You're actually most of the way there. s=0; for i=3:5:998 s=s+i; end disp(mod(i,2)~=0); The first thing you should do is add comments to keep track of what you're trying to accomplish: s=0; % store my sum here etc Two changes you should make: - display s when your code's finished running - right now, you're adding all i values -- both the evens and the odds. How can you check *if* they're even or odd before adding them to s? This is where mod() could be helpful, too. s=0; % store my sum here for i=3:5:998 % what can I put here to check if i is even before adding it? s=s+i; end disp(s) % show my final sum 
http://pasteboard.co/oq6VBDP.png Sum = 49800 Correct?
 sum=0; for f=3:5:998 if mod(f,2)~=0 sum = sum+f; end end disp(sum);
I think the idea is is that this line should do all of that for you, and I think /u/CapturedMoments is right that 10 is correct rather than 5. I'm haven't tried but if it works then, result = sum(3:10:998); disp(result); 
We're gonna use a 'for loop' to run through all the values of n, and then use an embedded 'if' statement to check if the value (x) is even or odd. If it is odd, the function will add it to s (which we have started off at 0). To check for odd or even we'll use the "mod()" function. What the mod function does, in simple terms, is give you the remainder from taking the first value divided by the second value. For example, mod(4,2) = 0, because 2 goes into 4 an even number of times. There are no numbers remaining. Also, mod(5,2) = 1, because 2 goes into 5 twice to make 4, which leaves 1 as the remainder. mod(246,2) = 0, mod(547,2) = 1. type "help mod" in your command window to learn more. ; s = 0; ; for n = 1:200; __x = n*5 - 2; __if mod(x,2) == 1; %x is odd ____s = s+x; __else; %x is even ____s = s; __end end disp('s') 
 x = 3:5:998; % generate vector from 3 to 998 by step 5 idx = mod(x,2) ~= 0; % logical vector of odd numbers result = sum(x(idx)) % magic!
steven2358 has already posted the most simple solution, but to extend the code to make it flexible for use with other vectors, there's no need to use a for loop: n=3:5:998; % (Or whatever) result = sum(n(mod(n,2)==1)) Or, more explicitly: n=3:5:998; % (Or whatever) % Find indexes off odd numbers oddInd = mod(n,2)==1; justOdds = n(oddInd); % Sum these numbers only result = sum(justOdds) Edit: And just noticed marty_cz has already posted this solution :P
Will using the [table()](http://www.mathworks.com/help/matlab/ref/table.html) function be appropriate? Or is your assignment after something else?
As /u/KingDuderhino said, you're computing the pdf values of a N(0,1) distribution between 10^19 and 10^25. Way out in the tail like that, the values are tiny^tiny^tiny . Can you say more about what you're trying to do? Are you trying to center the curve in the region [10^19 , 10^25 ]? To do so, you need to specify the mean and variance.
Do you know what you would be using it for? If it is just getting used for some efficient calculation and plotting figures of results and data and such, then I really don't think you need to work up from anything else. It is probably simpler than other languages you would encounter. It is the next logical step beyond simple calculations and figures in Excel. If you have experience with Excel, then the simplest tasks in Matlab can be thought of as more efficient, more powerful, and more automated excel worksheets. The biggest thing to grasp if you have zero programming experience would be loops, if statements, and variables (especially vectors and matrices of data). Just understanding those 3 things can get you pretty far. Obviously understanding the syntax will take some getting used to (like when to use a semicolon, a color, double equals sign, etc.), but the error messages are usually pretty clear and you can just google them and it will tell you the likely problem with what you are trying to do. Good luck!
I did this MIT Free Courseware...course...I can recommend it http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-094-introduction-to-matlab-january-iap-2010/index.htm
Well not the software specifically or even the coding, but MATLAB courses are often rolled into algorithm or computation curriculum. At least mine was. Working with power series and finding zeros and coding simple adders and stuff like that. Simple mathematics (yes calculus is actually simple mathematics) and basic understanding of what computers are actually doing when programs are running is important, specifically taking error into account when running numbers - even for whatever the OP might need it for. 
OK but OP was asking for recommendations on prerequisites to learn Matlab. You might have to bone up on your calculus skills to take a thermodynamics course but you shouldn't take a thermodynamics course to learn calculus!
Aerospace engineer. Never used simulink. Don't care about it, never met anybody who does. 
You can do much more than short scripts for specific jobs. Matlab can actually be used for mid sized application code pretty easily. 
http://www.mathworks.com/help/matlab/ref/nargin.html
I have continued diving deeper in Google and haven't found a real answer but [this](http://www.mathworks.com/matlabcentral/answers/132578-figure-positioning-trouble-on-ubuntu) provides a workaround. You must first set `'Resize'` of `'off'` (either with `get/set` or the newer way) and then it will work. I just made that small change in my codes that auto-resize. Not a great fix but just barely acceptable workaround 
For starters, your question doesn't quite make sense, because the tails of a Gaussian theoretically extend to infinity. The basic formula for a Gaussian is e^(-x^2). If we want to normalize it to unit area with standard deviation *σ* and mean *μ*, we employ 1/sqrt(2\*pi\**σ*^(2)) e^((x-*μ*)^)^(2)/2*σ*^2 One way to put the Gaussian "between" your limit values x1 and x2 is to say "let's put a Gaussian halfway between the two, and have x1 and x2 be four standard deviations away from the mean. In this case, you'd have the following: mu = (x1+x2)/2; sigma = (mu-x1)/4; Now you can quickly employ your function: x=linspace(x1,x2,1e3); y = 1./(sqrt(2*pi*sigma^2)) .* exp(-(x-mu).^2/(2*sigma^2)); plot(x,y);
Sure, the intention is to build an automated testing harness that takes in pairs of functions of unknown (but specific) arity (both input and output) and applies patterns of arguments to both to ensure that they have the same behavior over the tested inputs. I'm taking an "intro to matlab" course, it's extremely easy but a little pedantic and some of the functions are not fully specified, but a .p file with the solution is provided (with the suffix "_soln"). The purpose of this function is to minimize the time I'm spending on testing the homework, while increasing the chances I'll catch any mistakes. The code for this is here: %% Test harness function % This function attempts to call pairs of functions with several different % test values and tests to ensure that they return the same results function allPass = testAll(functionNames) allPass = true; for name = functionNames solutionName = strcat(name{1}, '_soln'); nameLambda = str2func(name{1}); solnLambda = str2func(solutionName); if nargin(nameLambda) ~= nargin(solnLambda) fprintf('Wrong number of input arguments in %s\n', name{1}); allPass = false; continue %fail end if nargout(nameLambda) ~= nargout(solnLambda) fprintf('Wrong number of output arguments in %s\n', name{1}); allPass = false; continue %fail end %% with 0 output arguments we trivially know that the output will be the % same, so we do not have to test. This also avoids needing to handle the case % of 0 output arguments in testSingle. if nargout(nameLambda) ~= 0 if ~testSingle(curry(nameLambda), curry(solnLambda), nargout(nameLambda)) fprintf('Failed test for %s\n', name{1}); allPass = false; continue %fail end end fprintf('All tests passed for %s\n', name{1}) end end %% Need to pass outArity in because of limitations in MATLAB's anonymous % function implementation function pass = testSingle(f, g, outArity, appliedArgs) randomTests = 20; %specifiedValues = [0, 1, -1, pi, 2, -2, 3, -3, 0.5, -0.5, 0.25, -0.25, i, -i, sqrt(2), -sqrt(2)]; specifiedValues = [0, 1, -1, pi, 2, -2, 3, -3]; pass = false; if nargin &lt; 4 appliedArgs = []; end for value = specifiedValues % could return a function or the values, need to check first and call the % function again later. It's sad, but this is the best I could come up with fOut = f(value); gOut = g(value); newAppliedArgs = [appliedArgs, value] if isa(fOut, 'function_handle') nextF = fOut; nextG = gOut; if ~testSingle(nextF, nextG, outArity, newAppliedArgs) return %fail end else [testF{1:outArity}] = f(value); [testG{1:outArity}] = g(value); testPairs = [testF', testG']'; for pair = testPairs if (~isequal(pair(1), pair(2)) &amp;&amp; ~all(isnan(cell2mat(pair)))) fprintf('got %d expected %d.\n arguments: %s\n', cell2mat(testF), cell2mat(testG), mat2str(newAppliedArgs)) return %fail end end end end pass = true; end I've not yet worked out how to handle input argument types. But I'll probably modify the code later to pass in a list of lists of input arguments to test. (Instead of having a hardcoded definition for `specifiedValues`). The reason why I thought currying is a good idea the fact that calling a function with a variable arity doesn't seem to be strictly possible without writing a 10 entry if else tree, and because I'm trying to test every combination of arguments that actually becomes a 10 level deep for loop. Whereas currying I can apply recursively and it makes the code **much** shorter and potentially less confusing. And to reiterate, I am a complete beginner at Matlab. So if there is a better way to do any of this, please let me know. I'm a C++, Haskell, Python programmer by training and trade.
I wrote a set of small FP utils for matlab a few years back, here's how I did it: https://github.com/adambard/functools-for-matlab/blob/master/%2Bfunctools/partial.m
I actually did try to implement this using `varargin`, but I couldn't make it work. Here's my best try on that, perhaps you could explain where I went wrong? function fOut = curry(fIn) fOut = fIn; % can't curry a vararg function (nargin = -1) or a function with less than % arity of 2 if (nargin(fOut) &lt; 2) return end fOut = @(bind)(curry(@(varargin)(fIn(bind, varargin{:})))); end When applied to a test function of arity 5 successively it gives me the following output: &gt;&gt; arity5test2 = curry(@arity5test) arity5test2 = @(bind)(@(varargin)(curry(fIn(bind,varargin{:})))) &gt;&gt; arity5test3 = arity5test2(1) arity5test3 = @(varargin)(curry(fIn(bind,varargin{:}))) &gt;&gt; arity5test4 = arity5test3(1) Error using arity5test (line 37) Not enough input arguments. Error in curry&gt;@(varargin)(curry(fIn(bind,varargin{:}))) (line 14) fOut = @(bind)(@(varargin)(curry(fIn(bind, varargin{:})))); Whereas the curry function in the main post gives me this: &gt;&gt; arity5test2 = curry(@arity5test) arity5test2 = @(bind)(curry(@(free1,free2,free3,free4)(fIn(bind,free1,free2,free3,free4)))) &gt;&gt; arity5test3 = arity5test2(1) arity5test3 = @(bind)(curry(@(free1,free2,free3)(fIn(bind,free1,free2,free3)))) &gt;&gt; arity5test4 = arity5test3(1) arity5test4 = @(bind)(curry(@(free1,free2)(fIn(bind,free1,free2)))) &gt;&gt; arity5test5 = arity5test4(1) arity5test5 = @(bind)(curry(@(free1)(fIn(bind,free1)))) &gt;&gt; arity5test6 = arity5test5(1) arity5test6 = @(free1)(fIn(bind,free1)) &gt;&gt; arity5test7 = arity5test6(1) arity5test7 = 12.9300 
256 shades of grey?
Yeah, because the program checks how many shades of grey there are on a range from 0 to 255.
Hahaha, my friends loved it as well that's why I posted it. Came up with it on the spot really.
What error(s) are you getting? Post them here.
Use gist or something similar instead of google docs for sharing code. 
Hahaha wow, I didn't know that. I saw the initial picture, where it was waist up and thought that was the original. Damn
Ah, [Lena](https://en.wikipedia.org/wiki/Lenna)... Makes me appreciate the rather neutral default images built into /r/ImageJ so much more... *** **True story:** When I was in first year undergrad, my next door neighbour in the dorm was a PhD candidate who was finishing her degree in engineering. She studied error rates and image compression, I think. One time, she showed a few of us undergraduates her work, and this image was among them, used as a *standard test image*. Igor, a fellow first year, and rather cocky, looked at the image, and immediately said, "That's porn, isn't it?" To which the soon-to-be-Dr replied, "Yes, how did you know?" Igor simply said "The look in her eyes told me." I was quite surprised by the origins of this ***standard*** -- but in first year one just presumes that there must be some good reason for it...
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Lenna**](https://en.wikipedia.org/wiki/Lenna): [](#sfw) --- &gt;__Lenna__ or __Lena__ is the name given to a [standard test image](https://en.wikipedia.org/wiki/Standard_test_image) widely used in the field of image processing since 1973. It is a picture of [Lena Söderberg](https://en.wikipedia.org/wiki/Lena_S%C3%B6derberg), shot by photographer [Dwight Hooker](https://en.wikipedia.org/wiki/Dwight_Hooker), cropped from the [centerfold](https://en.wikipedia.org/wiki/Centerfold) of the November 1972 issue of *[Playboy](https://en.wikipedia.org/wiki/Playboy)* magazine. Nearly one year later, the same photograph can be seen to appear shortly in [Sleeper](https://en.wikipedia.org/wiki/Sleeper_(1973_film\)), a science-fiction movie directed by Woody Allen. Given the nature of the image and its source, several academics have criticized its continued use in scientific publications and [higher education](https://en.wikipedia.org/wiki/Higher_education) as both sexist and unprofessional. &gt;==== &gt;[**Image**](https://i.imgur.com/kUMAzhh.png) [^(i)](https://en.wikipedia.org/wiki/File:Lenna.png) - *Image of Lena Söderberg used in many image processing experiments. \(Click on the image to access the actual 512×512px standard test version.\)* --- ^Interesting: [^Lenna, ^Lombardy](https://en.wikipedia.org/wiki/Lenna,_Lombardy) ^| [^Upsala-Lenna ^Jernväg](https://en.wikipedia.org/wiki/Upsala-Lenna_Jernv%C3%A4g) ^| [^Lena ^Söderberg](https://en.wikipedia.org/wiki/Lena_S%C3%B6derberg) ^| [^Lenna, ^Oklahoma](https://en.wikipedia.org/wiki/Lenna,_Oklahoma) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+crask2m) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+crask2m)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
I got this after a Java update. IIRC I solved it by reinstalling Java. 
take a look at the rot90 function: http://www.mathworks.com/help/matlab/ref/rot90.html
'
just applying this directly to the matrix will make the pattern "discontinuous", so will not work
I'm not sure, but do you want a circular shift? This would also be discontinuous. % If there is one row per degree, then shifting 90 rows is 90 degrees rotated = circshift( pattern_image , [ 90 0 ] ) If you want to circular shift in phi, which looks like it wouldn't be discontinuous because of symmetry, swap the 90 and 0 above.
You could use sph2cart to convert your spherical coordinates to Cartesian and then sphere or surf to plot the result. 
Ok, so what's at theta=0 moves to theta=90. What happens to the content at theta=90 in the original image. Is this a circular shift rather than a rotation?
and then i just miss rotation and back to spherical.. thats, what i cant figure out
Hi, sounds like you need to apply a rotation matrix to all your coordinate data. I've never done it in spherical coordinates but have implemented them a lot in cartesian: http://en.wikipedia.org/wiki/Rotation_matrix will get you started - the 3d section is what you need it sounds like. You could derive the spherical equivalent pretty easily, and I bet there's some online reference that I'm too lazy to find for you! Rotation matrix in spherical coordinates. Hope that works. 
most software dealing with antenna patterns are pretty specific on what kind of input it wants/needs.. and it is almost always, theta 0-180 deg and phi 0-360deg. the way it is now, [pic](http://imgur.com/6ED6MEW), makes a continous spherical pattern like [this](http://imgur.com/bdHzErh) after conversion to cartesian, but the maximum gain is at theta = 0deg along positive z axis. if i just shift everything by 90 deg in the spherical matrix, it will no longer be "continous" along theta angle, there will be a big jump from max gain to minimum gain across 90 deg theta. if this makes sense? in the 3d plot, max gain is pointing along positive z axis, i wanna shift it to be pointing along x axis, and then convert it back to spherical coordinates in an NxM matrix. So yes, i will probably have to figure out the rotation matrix for this.
It's known to be a problem that becomes very costly (computationally) as the magnitude increases, which is why it is often used for encryption. EDIT: btw, the inbuilt function factor(n) will do it for you. Compare the speed of your algorithm to it: function f = factor(n) %FACTOR Prime factors. % FACTOR(N) returns a vector containing the prime factors of N. % % This function uses the simple sieve approach. It may require large % memory allocation if the number given is too big. Technically it is % possible to improve this algorithm, allocating less memory for most % cases and resulting in a faster execution time. However, it will still % have problems in the worst case. % % Class support for input N: % float: double, single % integer: uint8, int8, uint16, int16, uint32, int32, uint64, int64 % % See also PRIMES, ISPRIME. % Copyright 1984-2012 The MathWorks, Inc. % $Revision: 1.14.4.5 $ $Date: 2012/10/15 20:09:54 $ if ~isscalar(n) error(message('MATLAB:factor:NonScalarInput')); end if ~isreal(n) || (n &lt; 0) || (floor(n) ~= n) error(message('MATLAB:factor:InputNotPosInt')); end if (isfloat(n) &amp;&amp; n &gt; flintmax(class(n))) error(message('MATLAB:factor:InputOutOfRange')); end if n &lt; 4 f=n; return else f = []; end if (isa(n,'uint64') || isa(n,'int64')) &amp;&amp; n &gt; flintmax p = primes(2.^(nextpow2(n)/2)); else p = primes(cast(sqrt(double(n)),class(n))); end while n&gt;1, d = find(rem(n,p)==0); if isempty(d) f = [f n]; break; end p = p(d); f = [f p]; n = n/prod(p); end f = sort(f);
Your notes are essentially specifying something known as the relaxation method. For further reading you should look up the metropolis algorithm. I am a physics student at the university of Strathclyde in glasgow and we have done a computational lab using this method. I have modified my code in order suit your problem. I also have code for more efficient methods (achieve convergence faster) if you are interested. I'll check my code over now and send you it in my next comment.
First of all, my code assumes a square and not a rectangle, but that should be easy enough to modify. Second up, the tolerance is a function of the grid size because a larger grid requires a more precise tolerance. Any questions feel free to ask. Finally, the line of the while loop looks horrible, but all it does it compares the change in each element, identifies the element that changes by the most, computes this change as a %, and then compares that to the tolerance. You may wish to change phi to a different name, as used this solver initially for the Laplace equation and not heat, but it still works. http://pastebin.com/sH47qFkj 
...what issues are you having with xlsread?
A trick that you should learn is to use the Data Import Wizard. Get it set up looking exactly how you want, then, instead of clicking "import," click that drop down arrow and select "Generate Function" or "Generate Script." You'll see how it's done.
&gt; Here, do this thing that I swear is super helpful but I won't give you any information on how to do it!
Using the .mat file you uploaded - check out surf(zz,yy,xx) Now it's pointing along the X axis. So maybe you could just convert back to spherical coordinates swapping Z and X in the conversion which would have the effect of performing the rotation e.g. [azimuth,elevation,r] = cart2sph(Z,Y,X) instead of [azimuth,elevation,r] = cart2sph(X,Y,Z) 
The idea in general seems sound, what exactly do you need some help with. Creating the matrices or combining them into a single image?
my first idea aswell.. results look like [this](http://imgur.com/pKah2lI) not very pretty..
Your approach is the one I would take. However, if you apply the gray() colormap, it will make the overlap areas brighter, not darker. Thus you'll have to tweak the colormap so that the overlap areas get darker instead of lighter. (**doc colormap** for help)
If the issue is that they're logical values, then you can make them numeric with the unary `+` operator like this: A = gf(+(rand(5,3) &gt; 0.5)); % construct A while det(A'*A) == 0 % while A'A is not invertible A = gf(+(rand(5,3) &gt; 0.5)); % re-construct A end
[I googled that for you:](http://www.mathworks.com/matlabcentral/answers/94822-are-there-any-examples-that-show-how-to-use-the-activex-automation-interface-to-connect-matlab-to-ex)
Fuck off. Saying "google it," while it may give you a good answer, isn't how you help someone.
I figured out the Latex part, I can just use latex() to have it format, perfect! But how do I have Matlab display the formatted Latex?
Simply put: Everywhere in the code for xlsread/xlswrite, replace `actxserver('Excel.Application')` with a try-catch block with `getactxrunningserver('Excel.Application')` in the try block and the original command in the catch block. The try-catch is necessary because `getactxrunningserver` throws an error if the application is not already running, but `actxserver` opens a new instance of the application regardless of what it is already open (which is why repeated calls to xlsread/xlswrite have so much overhead). Alternatively, you might be able to avoid the Matlab actx wrapper and instantiate the COM object directly via: `COM.Excel.Application`; if I recall correctly, that can be used without the need for the try-catch, since it returns any running instance of the application or, if none is found, opens a new instance and returns it. But I'd have to check the behavior to be sure. Also, if I recall correctly (I haven't read the code for xlsread in quite a while), the first call to `actxserver` in `xlsread` is already in a try-catch block to handle when `actxserver` throws an error (if Excel is not installed, for example), to switch to "basic mode". You'll want to be sure not to suppress that branch, unless you don't need/want the basic mode option. There are a couple of other gotchas, too--since you're grabbing any open instance of Excel, you could be grabbing a visible one (if multiple instances are open, the OS decides which is returned by `getactxrunningserver`). This shouldn't generally cause problems, and you can always make it invisible again via the `Visible` property, but it's good to be aware of it. Also, when opening Excel outside of Matlab, Excel seems to grab any open instance as well--and make it visible. I haven't found any way to block this behavior, though I haven't looked too hard for one. Also of note: the COM object exposes many features not avaliable in xlsread/xlswrite (effectively, anything/most anything you can do in the Excel gui--format cells, copy and paste cells, create charts and pivot tables, etc.). The details are not documented in Matlab, but the implementation is straightforward from the documentation in the Developer--Visual Basic tab in Excel (not shown by default, but can be enabled via the ribbon preferences). There are some interesting quirks--for example, blank cells are read as NaN, but NaN values are written as 65535 (which is `intmax('uint16')`; especially puzzling since Excel and VBA only use signed ints, afik), but nothing too crazy. Last: if you want more info, it's better to ask than to gripe. I didn't originally go into detail for a few reasons. First, there's no point in my explaining how a COM object works in Matlab if no one is interested in using it or if everyone interested is already as familiar as I am. Second, simply googling "matlab excel com" brings up lots of information, and googling "matlab excel com leave open" brings up Matlab Central and file exchange discussions on the exact modification I suggested, so I didn't think it necessary to recap it all here. Last, I don't have Matlab on my phone or home computer, and I don't get on reddit at work, so I'm going from memory to answer questions here: sometimes, I consider it better to be somewhat vague than to give precise, potentially-inaccurate instructions, particularly since I tend to assume that anyone interested can 1) read the referenced code, 2) ask for clarification/additional details as necessary and 3) Google some of the terms in my response under the assumption that someone has heard of them before. 
&gt;Introduced in R2015a Time to upgrade then! Thanks!
You don't need to upgrade if all you need is the repelem command. Just do something like: ind = []; for i = (1:length(v)) ind = [ind i*ones(1,v(i))] end
Thank you for your answer . I just tried it and got the following error : Cell contents assignment to a non-cell array object.
image or imagesc
If i got you right: you want to plot all results next to each other? Maybe this is what you are looking for? im=imread('cameraman.tif'); R0 = [5, 10, 50]; im_filtered=zeros(size(im,1),size(im,2), length(R0)); for k = 1:length(R0) % The following line should be your filter im_filtered(:,:,k)=im.*uint8(randi(size(im,1),size(im,2))); end % Rearrange the 3D-Array to a 2D-Array -&gt; all results next to each other answer =reshape(im_filtered,[size(im,1),length(R0)*size(im,2)]); figure imagesc(answer) I just made some randi-thingy to simulate different filters.
Thank you! Now that I see the answer it looked so simple ! It is much more elegant than my temporary fix, which was copy paste for each filter parameter. :D
I don't think you need a loop for what you're trying to do. If you're trying to set all the values in an array below an amount to a certain amount you can just index them: R = imread('theImage.tif'); R1 = R; R1(R&lt;5) = 5; R2 = R1; R2(R1&lt;20) = 20; and so on. You could also assign the values to 0 instead of 5 and 20 if that's what you're trying to do (darken rather than lighten the image).
 &gt;&gt;help spy
imshow(A,[])
Do you mean the image as opposed to the domain of the function defined as the matrix-multiplication? That will also depend on the domain of the function (i.e., your set of inputs of the function), not just the matrix by itself. I don't know how to calculate that analytically / automatically for the general case, sorry. But to get an indication you could run over a reasonably exhaustive range of input values and collect the set of output values you get, but that's a poor man's estimate of course. 
Yes this ia what Im looking for! Not sure how to do it still but thanks
Well, I don't know if this is helpful, but you can explore things with something like the code below. The domain is a unit circle and you can see how that domain (the set of points in the unit circle) gets reshaped by A to become a set of points in an ellipse. (Edited to add color to show which points are sent where.) function test A = [1 2; -1 0]; col_elements = []; domain_elements = []; for phi = 0:0.02:(2 * pi), for r = 0:0.02:1, this_x = cos(phi) * r; this_y = sin(phi) * r; domain_elements = [domain_elements; [this_x this_y]]; r = 0.25 + (1 + cos(phi)) * 0.5; g = 0.25 + (1 + sin(phi)) * 0.5; b = 0.25 + r * 0.5; col_elements = [col_elements; [r, g, b]]; end; end; image_elements = domain_elements * A; figure; subplot(2, 1, 1); scatter(domain_elements(:, 1), domain_elements(:, 2), 0.1, col_elements); axis equal; subplot(2, 1, 2); scatter(image_elements(:, 1), image_elements(:, 2), 0.1, col_elements); axis equal; 
Just mark the first line as a break point, run the code and then use the stepping functions that are provided by the Matlab editor during debugging. There are buttons for stepping through the code linewise (Step), stepping in and out of loops (Step In/Out) and running the code until the cursor position (Run to Cursor). Look for these [buttons](http://imgur.com/loDu5yP).
F10 and F11 are your friends
Highlight the line you want to run and press F9
Yes, this is exactly what I'm talking about :) Haven't figured it out but it's not a problem anymore, thanks anyways!
Cellfun is not vectorized though. It's just a wrapper for a for loop.
Yeah I know. I'm not sure if there's a fast vectorization procedure for this. Let me think for a bit.
FYI I posted a solution but haven't tested it extensively.
Well done! As it turns out, that code is quicker than a for loop or the cellfun method. I used a test vector v=mnrnd(300, ones(100, 1)/100). Repelem is probably superior though. I'm not on a R2015a computer now, so I can't test it. 
Hello, this album contains my whole Simulink/Simmechanics assembly: http://imgur.com/gallery/OltLk/ The whole model is 1.13 m high and 0.68 m wide. The actual board is 0.89 meters high and 0.64 m wide and is made out of plexiglas. To prevent the board from swinging it is fixed with aluminium frames on each side. **weights:** * plexiglass board: 2.68 kg * plexiglass (top, 2 on each side): 0.691008 kg * frames (sides): 1.9224 kg * flywheel: 1.5 kg * motor: 1.3 kg * frame (top): 0.6912 kg in the second picture you can see the equations I used. * ue = the transmission of the motor * k = the motor's driving constant * Ra = Resistance of the motor * Ja = Moment of inertia around the motor/flywheel * J = Moment of inertia around the pendulum assembly * m = mass * w_s1 = velocity of the basic joint * w_s2 = velocity of the flywheel * l = disctance of the balancepoint (here i used the whole surface - because it is no stick= 92.33 cm (disctance of the balancepoint z axis) * 64 cm (width) in the third picture you can see, that the only equation I used is to describe the angular acceleration around the basic joint. **When controlling it, i compare this angular acceleration with the acceleration of the flywheel.** The board then swings around (the angular position can be seen in the scope- last picture) *If my equations are right, I would like to control the whole assembly via the voltage input. In picture 5 you can see a model i copied from a paper and in picture 6 the equations this guy used.* **After knowing how to control it via the voltage, I would be very pleased if one could help me with the modelling of the controller.** If you need further information, please let me know!! best Regards, AUSTROBIEST 
solve() gives you a symbolic answer (because this is the exact answer). Therefore you have to convert it to a double (double precision float, google if you don't know what this means). You can do this using double(). eval() is also possible to use but its use is not recommended, see [this](http://www.mathworks.com/help/matlab/matlab_prog/string-evaluation.html). So with double() you can do this: A=double(A); B=double(B); to get numerical values. 
Most of this I'd kind of come to some kind of understanding of, great to see it put succinctly though. And I figured the syntax of eval() would just be eval(A) (like, as you said, double()), but it keeps giving me an error. This is the frustrating point I've kept coming back to periodically over hours now. double(A) gives me a column vector, eval(A) gives me this error: Error using sym/eval (line 11) Error: Unbalanced or unexpected parenthesis or bracket. Error in week10assessment (line 7) eval(A) I don't even have a line 11, by the way. It ends at eval(A) on line 7.
Yep, in this case eval() does not work, for the same reason that copy pasting the expression does not work, its a mupad expression (see edit above). Like I said, eval() is not recommended in these cases :P. Tell your prof about it. PS line 11 refers to the function sym/eval, click on the link and it will open that function (or type 'edit sym/eval').
Yeah, I think he's made a mistake here. I'm going to go with double() and try and bring it up with him. Genuine thanks for all your help, I really appreciate it.
np
You want a triangulated surface mesh... Check out the Matlab function trisurf. You can import the relevant info from the stl file using the Matlab Central function STL_Import
Ok, so I think I misunderstood originally. If you want to generate additional points inside your mesh, that's not straightforward and I'm not sure I can help. If I revise my sample code: [points triangles normals]=import_stl_fast('yourfilename.stl', 1); h=trisurf(triangles, points(:,1), points(:,2), points(:,3)); set(h, 'EdgeAlpha', 1) %set to 0 instead, to remove edges) set(h, 'FaceColor', 'k') axis equal that's as good as that's gonna get. If you want to generate points inside the mesh (with the understanding that you need to define more: what spacing? how?) that's more complicated, especially for general meshes - and is outside of my expertise. Your STL file defines the surface of the mesh but not the interior in any meaningful way.
Add another input that selects between the two. You'll have 2 input vectors for constructing the interpolant and another vector specifying the output points. The fourth input can be this switch. function yy = interpolate (x,y,xx,method) switch method case 'Newton' ...stuff case 'Lagrange' ...other stuff end end
Yes. If you plan on using Simulink my condolences to you! It is horrible.
This is possible? Matlab can be interactive like that? I want to know how to do this with data points in 2D
OMG this is amazing! What other secrets does Matlab have that I don't know about?
If you run get(gca,'YTick') You can see that the problem is that barh is only leaving you with one y-tick. This is probably bad design on the part of Mathworks. Thus, when you run set(gca,'YTickLabel',zz); Only one of the labels is displayed. Fortunately it is an easy fix for you, all you have to do is specify the values for the y ticks in addition to the text you want to display i.e. just change it to set(gca,'YTick',y,'YTickLabel',zz); 
Doesn't have the toolbar, connecting the blocks is not as easy/convenient as in the Windows version, crashes frequently, looks ugly in general, performance is crawling, need a third party software ([X windows system](http://www.x.org/wiki/)) etc. I believe it's gotten significantly better since R2014a .
I think it may simply be bad/quite-confusing design. I've had more frustrations than success in trying to make/customize bar series.
Which MATLAB release are you using? It seems that most of your grievances are related to the GUIDE toolbox which comprises of 0.001% of the entire Mathworks solutions.
Look at the size of result at each step of the loop. Does it match your preallocation? If you run the preallocation step does this eat your RAM?
Without your actual input it is impossible to really determine anything. If I was to guess, your dimensions in padarray() look sloppy - if you are operating on vectors, you should reshape them to a consistent format at the very beginning - I would recommend a column vector, i.e. signal = signal(:) So that way you are guaranteed the shape of the vector, and you can write the rest of your code accordingly. Your code looks to be written assuming that the signal variable is a row vector. For example, if signal is a column vector rather than a row vector, padSig becomes a 2D matrix rather than padding the vector. This scenario would quickly consume much more memory than intended. 
This wasn't the problem, but thank you anyways. I feel pretty stupid. The problem was I didn't realize my input signal was a 314k by 1 Matrix. This led to this massive misbehaviour. Once I fixed that by using signal' it works fine..
Thank you so much! This helped me out a lot, worked perfectly!
I need to simulate a car race. I want to simulate how the car would complete a race track that I've designed depending on the differential / control algorithm that I design for it. So yeah, I am trying to automate the robot to drive around it, and specifically want to measure its response and the effectiveness of the algorithms I use. This would give me the ability to tune the parameters. The car basically takes in input data from a line-scan camera. My understanding is that I'd have to build the model of a car. But that's all I know. If you can even offer starting points to follow, I'd greatly appreciate it.
How much fun you are going to have. You can do it, but it is much more involved than you think it might be. Say you have a track you have made up, is it going to follow the centre line or not? Is it going to try a "Racing line"? and if it is, is it going to go for a minimum curvature, minimum distance or both? This was 1/3rd of a final year engineering project of my friend this year, so you may struggle. When it comes to the driving of the robot race car, assuming you aren't going to a 6 degree of freedom model, and are using something more simplistic (seen as it is a robot, so probably small and you can negate things like weight transfer etc.) you need to consider how fast the cars going to be going at every point, is there a preview distance (can it see ahead of where it is?) and if there is how does this affect the current parameters? This was another third of my friends report. If you don't have a preview distance how will you work out corners and how much steering input you need? or even the throttle, is it going to be a binary input or not? Are you likely to just used steps in steering to try to meet a line on the ground, I don't know to to begin to simulate this if I am perfectly honest. I would start looking at racing line optimisation and driver modelling to give you a decent idea what you are getting into. If possible it may be easier to just test it on a load of tracks you have made.
Simulink would be the better tool. That's more or less what it was designed for.
Can you advise on how to proceed? I've been looking at it and tryibg to find tutorials but can't make heads or tails of it.
Thanks for the reply. If I wanted to go into the Data array to plot data, how would I call the data? I haven't dealt with situations where an array is within another array. 
Thanks for the link. Much appreciated!
You would call Data{x}(y). Of course you don't necessarily need to use cells here. If the data files are different sizes and you want to store all that data in the workspace a cell makes sense. If on the other hand all the data files are the same size you can write them to a 3D array. ... Data(:,:,n) = load(inputfilenames(n).name); ... If you just want to plot the data ... Data = load(inputfilenames(n).name); plot(Data(:,1),Data(:,2)) ... Which would plot column 1 against column 2 of the current data file.
Write your equations of motion. http://blogs.mathworks.com/seth/2008/05/23/how-to-draw-odes-in-simulink/
Yep. I wrote one to do all of our data processing at work: http://www.mathworks.com/matlabcentral/fileexchange/22829-file-list
 Subscript indices must either be real positive integers or logicals. Error in tf4/fractals (line 19) term = x(params,C(i),t(i)); Error in fminsearch (line 190) fv(:,1) = funfcn(x,varargin{:}); Error in tf4 (line 6) estimates = fminsearch(model, start_point); This is the full error message pointing out an error in lines 19, 190 and 6. I assume that the error in line 19 is the major one which causes the other two, but I could be wrong. Using dbstop if error takes me to the same line (19) and seeing as its my understanding that it is the value of i being non integer that throws the error, I used the openvar command on it, but it shows a value of 1 as intended. If it helps, the code in its entirety is: function [estimates, model] = tf4(C, t, data1) model = @fractals; start_point = rand(1, 3); estimates = fminsearch(model, start_point); function [Error, x] = fractals(params) k = params(1); b = params(2); n = params(3); x = log(k) + b*log(C) + n*log(t); Error = 0; for i = 1:20 term = x(params,C(i),t(i)); Error = Error + (data1(i) - term)^2; end end end
So don't know what C or t is, nor do I know what "params" is (and I mean I don't know if they're vectors or matrices or scalars) but I'm assuming they're matrices, and that x is a three dimensional variable. Regardless, params appears to be a vector with three scalars in it and you're using it to try to index into x (a "no-no", and not a positive integer or a logical). I would try to create this function in a script first so you can see what your variables look like at each step, and once everything works right, put it into a function.
It seems that the file you are trying to access is open and used by another application. Kill that process and try again. 
but it isn't, and no matter what i call it or where i try to save it I still get the same error
Make sure your MATLAB's current directory includes the file of interest. Or attach thr full file path when you define the filename variable. 
You need to call a new figure: figure, plot(....
Set HandleVisibility to callback or off. Search for HandleVisibility at http://www.mathworks.com/help/matlab/ref/figure-properties.html See also: [Command-line Visibility](http://www.mathworks.com/help/matlab/creating_guis/gui-options.html)
You can't plot against the output from datestr(), so you'll have to plot versus the numeric date values from datenum(). Once you do this, you can use set(gca, 'XTickLabel', ....) commands to change what's shown on the plot. OR You can also use datetick() to format the labels for an axis as dates. If you're using a recent version of MATLAB (14b or later, I think) you might try the **datetime** data type. 
When I use datetick it just gives me 00:00:00.000 across the whole plot. I'd like to be able to see my major xticks and when I zoom in on a certain part of the plot be able to see minor xticks
There are an infinite number of points inside a 3D closed surface. Which ones would you like to generate? Would you like a finite Cartesian grid?
MATLAB plots to what it calls the `Current Figure`, which will most likely be your GUI if it's the only figure window open. It will not plot to a new window unless you specifically call `figure`, which opens a new figure and sets it as the `Current Figure`. This is why I almost always specify the axes handle when I'm making calls to [`plot`](http://www.mathworks.com/help/matlab/ref/plot.html) and other similar functions.
See: MATLAB's [function precedence order](http://www.mathworks.com/help/matlab/matlab_prog/function-precedence-order.html). The reason you are getting the warning is because your `azimuth = azimuth` line invokes `azimuth` as a function to specify `azimuth` the variable, just like the warning tells you. If you want to keep `azimuth` as a variable, initialize it as a number (e.g. `azimuth = 0;`), which MATLAB will utilize rather than the built-in function as the function preference order states.
What are the other output options from Solidworks? (Don't have an installation handy.) There may be a better format than *.stl If I follow you correctly, you're tying to convert a CAD drawing into a mesh of points that follow the shape. That's exactly what CFD mesh generation programs do. I found this list: http://www.robertschneiders.de/meshgeneration/software.html We used GAMBIT in class many years ago, but I think that's not free. And I don't remember anything about how to actually run it. Look through the list and see if any of those works for you. I suspect that there should be a range of options for how fine of a mesh to generate, where to put the points, etc. You *should* be able to select between a range of output formats, hopefully as simple as a list of XYZ points in a csv file.
The list of file format options when saving are: .prt; .sldprt; .sldlfp; .x_t; .x_b; .igs; .step; .stp; .ifc; .sat; .vda; .wrl; .stl; .eprt; .pdf; .u3d; .3dxml; .psd; .ai; .xaml; .cgr; .prt; .jpg; .hcg; .hsf; .dxf; .dwg; .tif; I appreciate the sharing of that link. Looking through it now, and hopefully will find something very relevant.
What I would recommend is using a program like notepad++ and doing a find and replace for an entire folder of files. Essentially find all cases of "azimuth" in all of the files within a folder and replace it with another variable name. Just be careful you know exactly what folder you have selected.
It only tosses up a warning, not an error. You can operate on a singular matrix, there's just some operations which don't work out. I don't know what kind of output it's supposed to generate, but it successfully puts out a graph for me, and the airfoil quivers generated look fine. No axis labels, title, and a legend on the first plot though. 
One can tackle this problem by adding a very small value on the diagonal of the matrix. However, if this is reasonable depends on your problem and what the matrix represents - this trick is mostly used when you handle covariance matrices, for example.
 Ylim([10^floor(log10(min(x))) 10^ceil(log10(max(x)))]);
I dont know if it will work the same, but i used .wrl to transfer a geometry from CATIA to Matlab. This was to have a virtual reality object. Hope it will help
I have noticed one caveat though. I was able to execute the "close" command in the beginning of the GUI code so when I call the GUI while the GUI window is open I could prevent multiple instances. Close function does nothing after changing the handle visibility. Any ideas how to avoid multiple window instances now?
I feel like I was able to do it through another program; thank you very much for the suggestion though!
Figured out what I was doing wrong with the mesh voxelisation; was using a different USAGE function. Now, just need to figure out how to plot the 3D volume. Thank you very much!
I didn't really do anything, cheers all the same! I hope you get it figured out, I'm away from my laptop so can't fire up Matlab right now.
If i understood what you want correctly, then you simply need to increment the `ctr` again when you are done an iteration through the first loop.... ctr = 1; for i = 1:x for j = 1:y xlRange = [strjoin(xlsColNum2Str(ctr)), num2str(1)]; xlswrite(xlFullFile, data, xlSheet, xlRange); ctr = ctr + 1; end %%%%%%%%%%% ctr = ctr + 1; %%%%%%%%%%% end ... also your not doing anything with `i`.... did you mean to have: xlRange = [strjoin(xlsColNum2Str(ctr)), num2str(i)]; ??? 
This is correct...
An actual answer, as opposed to my "well it looks ok". Definitely this!
Thanks. This seems to resolve my error issue...now to go and parse through the code and see why its not displaying the pressure coeff correct. Thanks so much for your help.
You want a singleton gui. There's an example of using the tag property to implement singleton behavior here: http://www.mathworks.com/matlabcentral/answers/99123-how-can-i-implement-singleton-behavior-for-a-programmtically-created-gui
FYI, `xlswrite` (and `xlsread`, for that matter) starts a new instance of Excel, perms the file, saves the file, closes the file and closes Excel--every single time you call it. If your loop is large (or if your file is large, or if your copy of Excel has add-ons that take an appreciable amount of time to load), a loop calling `xlswrite` will spend a huge amount of its time opening and closing Excel and the file--much more time than is spent actually doing work. Fortunately, the code is easy to hack (or download a version from the file exchange) to keep both the instance of Excel (i.e., the COM interface returned by the call to `actxserver` in the xls function) and the file (referred to as a workbook in the code) open and un-saved between write operations--if you want to greatly improve the performance of your code, that will take ages of the run time (just remember to save and close the file when you're done; closing the COM interface can be done programmatically or via the taskmanager in Windows, but it's not critical to close it unless you need the resources--by default, Windows will automatically use and make visible any running instance when opening a file that would require opening Excel, and the integrate is automatically closed on reboot). If you want to get part of the benefit with minimal effort, simply keep the COM interface open by wrapping all calls in the xls functions to `actxserver` in a try-catch block that first attempts `actxgetrunningserver`--or put that call at the top of `actxserver`, as suggested by [Undocumented Matlab](http://undocumentedmatlab.com/blog/fixing-matlabs-actxserver).
Hello, in simple terms, the command 'squeeze(sum(OUTPUTgrid,1))' sums up all voxels in the x-direction. If you want to visualize your 3D-Matrix, try this: sizeX=90; % put your length here sizeY=100; % ... sizeZ=150; % ... [OUTPUTgrid] = VOXELISE(sizeX,sizeY,sizeZ,'sample.stl','xyz'); %Show the voxelised result: figure(1), cla; isosurface(OUTPUTgrid.*2.0, 1); rotate3d on; view(-45,25), axis tight, axis equal; camlight lighting gouraud colormap copper grid on; If you want to plot intersections through your object, try this: figure(2),cla; subplot(1,3,1), imagesc(OUTPUTgrid(:,:,45)); % xy subplot(1,3,2), imagesc( shiftdim (OUTPUTgrid(:,50,:),2)); % xz subplot(1,3,3), imagesc( shiftdim (OUTPUTgrid(75,:,:),1)); % yz colormap(gray) Where 45, 50 and 75 are arbitrary values, depending on where you want to intersect your object. I hope this helps you with your problem. 
&gt; actxgetrunningserver I have edited the `actxserver` as suggested but it always errors out and continues normally. Never makes it to `actxgetrunningserver`. Error: The server 'Excel.Application' is not running on this system. Any ideas? 
Why use matlab even?
Welp think I figured it out. After writing the current position *is* at [the end of file.] (http://www.mathworks.com/help/matlab/import_export/importing-binary-data-with-low-level-i-o.html#br4luzp)
I have the shuffle in my startup.m so I don't forget.
This seems like the best option. On my own code however I'm stuck using a horribly locked down version of MATLAB hosted on citrix, so I have it in a file named StartupFile2BypassBullshtCitrixRestrictions.m that I run manually every-time I boot matlab on my laptop. It might be a little wordy, but it is makes the time spent on hacks to get around not having the ability to add to the matlab path feel more worthwhile.
This did happen to me. But luckily it was only a 36 hour program and easy to notice so I learned my lesson cheap. I seed the generator with a time stamp and process number to fix it. Edit: I'm also not running it on my computer but a server so it needs to be seeded every run, not every time I open Matlab. 
When I was learning MATLAB, our teacher told us that when he first started teaching the class, he was horrified to find almost all the students produced the same "random" answer in his homework. He at first thought there was some mass cheating going on, but then he fired up MATLAB himself and got the exact same results. Since then he always requires the students to set the seed to the current in homework if it involves random numbers.