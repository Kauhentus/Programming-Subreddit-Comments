I've always had good experiences with MathWorks support. Your Rubik's cubes are awesome, by the way.
please work on your 64bit compatitibility. Its so hard to compile without knowing exactly what to do, even then I get errors on a lot of the machines I try to set it up on. Overall, nothing bad to say about customer support or your consultants.
No. 2012. I might have been running 2011 on the mac laptop. Xcode 4 was definitely not supported. 
So it seems, or you can do what I suggested to install gcc. Maybe if matlab automatically linked to known issues when it fails, this wouldn't be so much of a problem.
Thanks for the feedback! I will certainly pass this along to the dev team.
Glad to hear it, and I've seen the rubik's cubes floating around our offices from time to time. They're pretty sweet.
It took me forever to figure this out, the line tool is incredibly useful for graph demarcation. Just make sure to use the hold on/off so that it renders in the same figure.
Did you copy/paste that directly from matlab, because it has an error. You're missing the closing parans on the second call to line.
I must have deleted it by accident, it is there in my script.
I do Modelling and Simulation in a big systems company etc. It's going to be the professional version licensed by usage data.
Good to know, thanks!
This is not a first order problem, try differentiating once more ;)
Have you tried using the filexchange submission "vline" and "hline"? http://www.mathworks.com/matlabcentral/fileexchange/1039
Amazing
It's not showing up because you're trying to plot to 0, which doesn't exist in log space. Choose another (positive) value instead. I would probably do something like: plot([x x],get(gca,'YLim'),'-k') I'm surprised matlab don't give you an error stating that it was ignoring the values. I'm pretty sure it would if you plotted the data first then changed the yscale to log after the fact. 
m(t)=Ce^(-kt)? 
Alright, that's what I was afraid of. Thanks everyone! 
Any specific toolboxes that you run into 64 bit compatibility issues with, or is it across the board?
That's the solution to dm/dt=m(t)
Came here to post this - I've used these so much and for as long as I've been using matlab, I forget they're not built in.
I have to weigh in here. You don't need matlab to solve this. 1) you have the correct answer. 2) You actually don't have 2 BC's in the usual sense. The constant C is your usual constant from solving the first order DE - you'll get one constant for a first order, 2 for second order, etc (the reasons for this might take me a bit too long to explain and I'm not sure of your background). The "k" constant has nothing to do with the process of solving the DE, it's your proportionality constant for mass loss due to decay. Simply plug in each BC into your solution, and you'll get 2 equations and 2 unknowns (C and k). Then you can solve for both constants and you have your solution. This method will be in a decent calc or DE's text - see [Stewart's Calculus](http://www.stewartcalculus.com/) or [Nagle, Saff and Snider)[http://www.amazon.ca/Fundamentals-Differential-Equations-Kent-Nagle/dp/0321145720] - I used an earlier edition of this book during my undergrad and it was great! Enjoy your course!
[SAP Toolbox](http://neural.cs.nthu.edu.tw/jang/matlab/toolbox/SAP/) is pretty good.
I know I don't need Matlab to solve this :p It was part of an assignment where I had to solve some DE on paper then do it in Matlab. The prof assumed everyone had Matlab experience...
I've received a large amount of feedback regarding mac/linux/64 bit compatibility issues in this thread. I'm going to submit all of your thoughts to our dev team for consideration since multiple users are concerned for a number of reasons. Our dev team is very much interested with the needs of our user base, thus the pre-releases which we send out to identify bugs. I'm in CS so i can't promise anything as far as development is concerned, but of all the places i've worked this company cares the most and tries the most to make things better for our user base. Thank you for your feedback, it will be heard I promise. Our company considers everything when working towards future designs. 
If this is a homework problem, you should have been given (or you're expected to figure out) how to find the inverse of a matrix A provided that you can solve Ax=b (hint: you solve an augmented system). Once you know how to do that, all you have to do is use Cramer's rule to solve Ax=b a bunch of times. Since you know what b is going to be, maybe you can come up with a nice way of doing this all at once--algorithmically speaking. To implement this in Matlab, you'll need to read up on how to represent [matrices](http://www.mathworks.com/products/matlab/demos.html?file=/products/demos/shipping/matlab/intro.html), how to compute [determinants](http://www.mathworks.com/help/techdoc/ref/det.html), and maybe how to perform certain [matrix operations](http://www.mathworks.com/help/techdoc/ref/arithmeticoperators.html) (also in the article linked on matrices). Finally, you might want to double-check your work by having Matlab compute the [matrix inverse](http://www.mathworks.com/help/techdoc/ref/inv.html). If you're completely new to programming, this is going to be a slightly more difficult exercise for you. You'll have to tread through several articles on the Mathworks website and test out some preliminary code in order to get the grasp of things. It's an unavoidable investment. Good luck.
Ok,. try imgur link, hope it works
Think of it as if you have a 3-dimensional array with an X, Y and Z-axis. Your X and Y-axis are literally just that. Your Z axis is time. Each still image in your .gif is another slice in Z. So what you want to do is: using the "ind2sub" and "find" commands in conjunction, to find the pixels of interest (green, yellow, red etc.). Then you have 3 variables, an Nx1 column vector representing the indices of the X, Y, and Z axis, with N being the number of points that correspond to that color... So basically what this gets you is all of the POINTS in your 3-dimensional array that correspond to that particular color. Then you can plot these points and fit a surface through them, and hopefully you can take it from there. One important thing to note is that green, yellow and red are different values in your array. That's what you'll be finding. 
I'm wondering how to do something like this in an image with a lot of background noise. To be clear, I have fluorescent microscopy images of viruses tagged with two different markers (so there are two channels). There's a good amount of background noise and perhaps a few dozen moving particles per frame (for now, once this starts going well, I'll move on to slides with a few hundred per frame). Right now, I'm running a spatial bandpass filter to get rid of the really high and really low frequency parts of the image, and then detecting the particles based on areas of increased intensity. This is great until the background noise gets really bad, and it can or until the viruses fluoresce below the threshold because the markers have been overexposed. Any tips on this stuff?
MCR lacks any multi-threading capability.
Nice page! But what is this IDL?... 
Hey there - When you say run a mask through - what do you mean exactly by that? Do you mean a 2D convolution? How is the mask determined? (I am somewhat of a noob in DIP but learning rapidly) Thank you sir! 
Do you mean for the filtering? If so, I'm taking the difference of two different convolutions, one with a Gaussian kernel and the other with a boxcar kernel. The software to do much of this wasn't written by me, but I am modifying it a little. The software I'm using is [here.](http://physics.georgetown.edu/matlab/) I'm not trying to determine the psf, I'm not sure if blurriness is the problem really.
I'm not sure if a gaussian would work, I think the resolution might be too low to reliably fit the points to anything specific. Would that matter? I might take a stab at locating them with it anyway.
Interesting - I ask because I am trying to put together a list of programs/software packages I can start to use to play with image processing, and I missed this one. :-) Would you say its easy to use, or rather, how do you think it compares to MATLABs DIP package? Thanks!
I uploaded the code.
I've done it successfully with a gaussian that was not more than 12px diameter at the bottom, maybe 5px FWHM. You'd be surprised.
You don't exactly apply the mask, sorry I'm being a bit colloquial. regionprops( bwmask, image, properties ) goes through each connected component in bwmask. For each component, it calculates properties such as centroid, convex hull (you tell it which you want), and if necessary, reaches into 'image' to pick out the values of the pixels in the connected component, eg to calculate the weighed centroid. I'll try to put a figure together over the weekend, bit rushed at work &amp; home at the mo, sorry!
http://blogs.mathworks.com/videos/2012/06/05/learning-matlab/
Google "Antonia Hamilton's matlab for psychologists". Download and complete the 10 lesson tutorial. Hands down the best intro for neuro imaging and general psych/physio uses. 
solve accepts a string as an input (needs single quotes around the first argument). If you just need a numerical solution, you can probably just use fzero (in fact it is usually so fast for such a simple problem that it may be just what you need if you don't actually require a analytical solution). Example: solve the equation x/2+3 == 0, initiate the search for a solution at 0 X = fzero(@(x) x/2+3,0)
So, you want to only output the count biggest 'island'? Not the shape, locations, or any information on the smaller islands (like your two-1 islans at 7:8,4)?
Looks like you got a workable response below, but to code something yourself would probably require some loops (to check the neighborohood) and a counter, shouldn't be too crazy. Edit: of course you will have to put in place something to make sure you don't count any point in an island more than once, complicating things a little.
Pretty good actually! I posted the code I have so far. You can test it, and if the link in the code is not working you can replace it with imgur link. I got the positions of "rain", now I must write some code to handle "single frame rain"; rain that is there for only one frame, I'm using inpoly from matlab file exchange to detect that. Next step is to get previously mentioned code (inpoly) to work. Oh yes,.. I know how that is, I should have studied for an exam but it was more fun working on this...
 A = myotherfct(fct(x), other, inputs, here); ?
I rewrote your code using a for-loop that extracts data from the M matrix, creates a contour plot of the data, and saves an image. Respective filenames and titles are created for each plot. I can't verify it works because I don't have your data, but the updated code should be close to what you need. Original code: http://pastebin.com/hbttK2aV Updated code: http://pastebin.com/sPrqL4fX
The function you are using an anonymous function and is passed through as a variable. The way you call the function is the same regardless of whether it's been passed through another function or not. If you want to pass a function (not anonymous function but subfunction or a function in another file) you have to prepend @. A=myotherfct(@subfct,x) For example ******************************* fct=@(x)sqrt(x)+x^2 output=some_other_function(fct,x) output2=another_function(@some_other_function,fct,x) function output=some_other_function(fct_with_new_name,x) output=fct_with_new_name(x) end function output=another_function(subfct,fct,x) output=subfct(fct,x) end 
Thanks for the help!!
I was thinking it had to be harder than this. I was looking at MATLAB code that handled the written function in a way that didn't seem to work when I tried it (not sure why). Thanks again, this worked as expected! 
Your welcome. 
The problem is that the input is an array, so I would be making a matrix, but each array is a different size making matlab complain about the matrix mismatch. Usually you just make a larger matrix full of 0s to start with, but I don't want to have 0s after each array... I'm having issues with the eval too though. I've been trying to use it was xlsread with no success. 
What is a cell array?
So your x-axis is time, your y-axis is amplitude, and your z-axis is ...? 
Can you give a more specific example of what you need to accomplish?
My waveforms consist of distance traveled as Y axis and time bins as X axis. So on time bin 1 there was 3 distance traveled. etc etc. There are 144 time bins. I have 24 waveforms. I need to plot all of the waveforms on on graph where I can pick out each waveform. The way the surf(variable) graph opens is that it has time in 1-144 in y, x is different waveforms, and z is distance traveled. That is fine, it is ALMOST what I need. Except I need separation between the waveforms. 
might I suggest imagesc() ? It's 2-d, but I strongly prefer it over 3d plots, if there's no real information to be extracted from the third dimension...
http://blogs.mathworks.com/loren/2006/06/21/cell-arrays-and-their-contents/
I think this is closer to what I need to accomplish and your assumptions are correct. I need to be able to pull an image for each y. Now I just need to figure out how to incorporate what you posted into my code. Any tips would be appreciated and thank you so very much!
I was not expecting such a thorough reply and I am very grateful! I'm currently going over what was written to see if it does what I am needing. albasri nailed it when they mentioned that I need to create an image for each y. I forgot to mention that part (sorry). Thanks again for your time/help and any tips would be appreciated.
Actually, this is exactly what I need. Would you please elaborate?
Sure, no problem. The updated code above will save an image for each of the y## variables in your previous code. In the updated code, the for-loop iterates along the columns of M to generate each y## term (labeled yy in the updated code) and then plot it. For each y## plot, specific titles and filenames are generated. I just noticed one mistake in my line 29. I was accidentally modifying the position vectors located in the first row and first column of each y## data set. It has been fixed [in this code](http://pastebin.com/8ZKwPeaJ). 
xlsread(**'filename'**,'d2:d10000'); use filename instead of 'filename'. 'filename' creates a string with the text "filename"
ohhhh, thanks!
thanks
1) They're all strings, even if you cut off the last character. 2) str2double
Got it, thanks!
I think you need the 's' argument in the input function call to allow strings/chars. var1 = input('var1: ','s'); var2 = input('var2: ','s'); var3 = input('var3: ','s'); Then use string indentifiers (%s) in sprintf to construct the filename. filename = sprintf('%s_%s_%s.txt',var1,var2,var3);
I'll look into it, thanks for the suggestion
this is perfect! it accomplishes what i need much more robustly filename = uigetfile('*.txt')
I much prefer to do the full [path, file] that way everything is absolute. You can also have it so that you can select multiple files.
Every time my advisor tells me to use existing code, but I know it will be better for my understanding in the long run to write something myself, I just do it on my own and show up with the working code (he can't complain then). Just a thought. 
The bottom approach will cause a running average of the data, but at the same rate. The other option is a reorder (or is it called reshape?) On the array to turn it into a 5xN array. Then do a dimensional mean on it. Or, use a fft to determine the spectral character of the noise and use a custom filter to remove it. This would be more effective but may cause distortion depending on the data 
Filtering using the fft is almost always the wrong thing to do.
I think GP is saying to use an fft to determine a good bandwidth.
Assuming that you have the time stamps, I would use grpstats. Create a single number with year (yyyy), day of year (ddd) and hour (hh) like this: yyyydddhh, like 201214315, for DOY 143 at 15 h. You could use the month and day instead of day of year. Now use this vector, lets call it ydt, to group and make the hourly averages of your data, like this: Output=grpstats(data,ydt,'mean'); If there's no time stamp, then the solution should be filtering, resampling or smoothing. 
the other dumb thing you can do is pad out the data to get it to a length that is a multiple of 6 (call the new length N), run a reshape() to turn it into a (N/6)x6 matrix and then run it through mean() along the row dimension. This will bin the data in the 60 minute intervals that you want. I like the boxcar filter that nibot mentioned (it's the example in the documentation for filter) and I usually use this, but it's a running average that will yield a point for every one of the points that already have-- this is different than binning which is what I described which will yield one point for every 6 points (binning 6 points into 1). The boxcar is more general. It actually gives you the binning results as well if you pick out every 6th point.
Something derped for Figure 19.
I tried but it didn't gave me the "feel" ...If you understand what I mean..
My friend, you're missing a space in there. On your second item, you typed "2.get" instead of "2. get". This caused Reddit to consider the first two lines of your comment to be one single list item, and then it continued the numbering beyond that. If you add the missing space, then it will be recognized as a list item and your comment will appear as intended.
shit! baby steps :D
How are you doing step 5 - cross-correlation? Im curious.. :-)
you can also use num2str. for i=1:n M{i}=importdata(['filename' num2str(i) '.txt']); end My personal favorite is reading all files in a folder (great for batch read) (1) place .m script in same folder as all .txt files (2) write these lines files_name=dir('*txt'); no_files=length(files_name); for i=1:no_files temp=files_name(i).name; m{i}=importdata(temp); end 
Crazy. I imagine someday we'll be walking through airports and security cameras will be instantly processing all our irises as we go, like they used to (perhaps still do?) scan body temp to check people for colds, when SARS was around. Certainly keep us posted, sounds like a super cool project.
Eyeballing your data, [I reproduced the plot in Octave](http://skeeto.s3.amazonaws.com/img/example.png). Here's the script, http://pastebin.com/5pYuxxR8 The plotting function is `bar`, set to `'stacked'`. 
see "help find" in this case "find(x==5)"
Edit : I didn't read your last two lines... Im stupid :p look at the find() function. 
Thanks! I feel a little slow because I'm pretty sure I saw that somewhere when I was googling and glossed over it or something....
I'd suggest looking at "histc" where you can specify bins however you want. You could log the data first and perform the histogram on the logged data (but change the XTickLabel to the more natural description). For plotting look at using "bar". You can edit the plotted figure then once you are happy generate the code (in File) so you can speed up replotting.
how about montage ?
I think that [this function](http://www.mathworks.com/matlabcentral/fileexchange/8891) might be of help.
thanks. But i was able to find another program with a very elegant solution General discrete distribution simdiscr.m Suppose probabilities p=[p(1) ... p(n)] for the values [1:n] are given, sum(p)=1 and the components p(j) are nonnegative. To generate a random sample of size m from this distribution imagine that the interval (0,1) is divided into intervals with the lengths p(1),...,p(n). Generate a uniform number rand, if this number falls in the jth interval give the discrete distribution the value j. Repeat m times. uni=rand(1,m); cumprob=[0 cumsum(p)]; sample=zeros(1,m); for j=1:n ind=find((uni&gt;cumprob(j)) &amp; (uni&lt;=cumprob(j+1))); sample(ind)=j; end Thanks though
Do any of your methods reasonably group hairs by follicle? If so, what I would do is count the pixels in each group and see if you can do a quick and dirty grouping of number of hairs by pixel count. 
poking... liking... 
So as I understand it, you have a text file with 307,200 rows. Each row representing a pixel. There are 3 columns separated by a comma and those represent column/row/intensity of each pixel. To import the data use [load](http://www.mathworks.com/help/techdoc/ref/load.html) or [importdata](http://www.mathworks.com/help/techdoc/ref/importdata.html) or just use the toolbar across the top. There's an import data function under file I believe. It should look like this: goat = importdata("refined.txt"); % goat is now a structure array and should contain all your points as they were written in the txt file. % we'll need a counter, let's call it "n" n = length(goat.data(:,1)); % n should now equal 307200. I could type that in, but I like robust systems % depending on what version of matlab you have, it should be able to skip this next line, but it doesn't hurt to be safe. pic_array = zeros(max(goat.data(:,2)),max(goat.data(:,1))); % That should create a 640X480 matrix of zeros, or any array size you might have. You could just cheat and say zeros(640,480) % Now for the while loop. This will change your 307200X3 data structure into a 640X480 array while n&gt;=1 column = goat.data(n,1); row = goat.data(n,2); inten = goat.data(n,3); pic_array(row,column) = inten; n=n-1; end %% That should do it. I'm doing this all from memory, so I think I have the syntax right. If not, it should be enough to get you started. You should be able to copy and paste what I wrote right into an m file if I did it right. I couldn't properly indent the while loop, so be careful of that.
Awesome, thank you! That makes clear sense to me. Sorry about the formatting, but you interpreted it right. I just noticed that my output file has the first pixel labeled (0,0,X) rather than (1,1,X), and consequently the last pixel is (479,639). If I'm understanding correctly, this will mess up the position the intensity value is entered into my zeroes matrix by 1 position in both the x and y direction. Do you agree that this could be fixed by just adding 1 to every column and row value, like so: column = goat.data(n,1)+1; row = goat.data(n,2)+1; inten = goat.data(n,3); Thanks again! I'm pretty new to Matlab, this is a huge help!
That should work. Just remember that (1,1) in matlab refers to the top left element of a matrix. That may or may not be the case with your data, (0,0) may refer to the bottom left pixel of your image.
 pix = zeros(640,480); %create empty array t = load("textin.txt"); %load all data (might need to use a delimiter keyword) for i = 1:length(t), % loop over data pix(t(i,1)+1,t(i,2)+1) = t(i,3); %offset and store the pixel values end pcolor(pix), shading flat 
You could try implementing [a scheduler](http://www.mathworks.co.uk/help/toolbox/stateflow/ug/bq6ccs_.html). There are many variations you can use, I am pretty sure one of them will fit what you need. 
Stateflow is the devil. You can always just use a multiply block and an if/merge blocks depending on your 'condition'.
Not gonna lie, scheduling in Simulink can get really annoying but in most cases it gets the job done! if/merge is much more customisable as well
I have been looking that up but I can't seem to get the example model to work. I have having some trouble figuring it out right now.
looks like elements_per_sample may not be an integer value or may get converted somehow. Since its 4 decimal accurate, Id put in a k = round(k + elements_per_sample); and call it quits. Or make sure to declare elements_per_sample prior to the for loop to an integer value like so: elements_per_sample = ###; for j = 1:total_samples ... end
I hope I got your idea right. So: I would create a square wave and a block of your arbitrary amplitudes (repeating sequence or whatever). Then I would multiply them using the Product block, with a sample time equal to the period of the square wave. Hope that helps!
I finally got it to work using something similar to this. I was just stuck on trying to find a single block that could do what I needed, instead of that really simple solution.
Unfortunately, a good bit of the software is already written in Matlab since that was what my boss and advisor thought we ought to do. ImageJ handles the images splendidly despite their size, I might add. In fact, a lot of what I've been doing is implementing ImageJ functionality in Matlab. Sigh. I'll note also that Matlab handles files up to around 700mb just fine (well except when plotting over the image, then it's slow at that size).
Do you need to do stats on the whole stack or can you split it into subchunks? For example, if you're object-tracking, you could just work with 5-10 frames at a time, dropping the oldest and adding a new one as you go.
I'm guessing the answer is no, but can you tell your boss a slider is a bad idea in MatLab and it's easier to open them in FIJI for that purpose? Or, if your particles are reasonably large /bright, could you make a second set of images in low-res that is easier for panning, then just do processing on a handful of full-res images? (This seems totally unnecessary with FIJI so accessible. . .)
Yeah, basically he wants everything all in one. I appreciate all your help though! It may not be possible to do what he wants in Matlab.
Yeah, wish I could be of more help. I do some particle tracking stuff but only read in a few frames at a time, so never have memory issues and thus have never tried to solve them. If you figure out something cool I'd love to hear the solution! Out of interest, what are you looking at? I'm typically looking at centromere-labeled yeast and mammal cells and tracking centromere movement over time.
Are you interacting directly with the CData values? On my not fast machine, once the data is in memory, updating the CData (and thus what the figure is showing) is very fast. &gt;rgb = imread('ngc6543a.jpg'); &gt;tic,imgObj = image(rgb);toc Elapsed time is 0.029489 seconds. &gt;tic,set(imgObj,'CData',rgb-100);toc Elapsed time is 0.008061 seconds. Are you pre-loading all the images? That could make a big difference too. You have more than enough ram. 
I am interacting directly with the CData values, which is why I thought it odd that it would be so slow. I load everything into memory, and each frame I think should be stored adjacently in memory. It works fine with something that's 700mb, but the 2gb file really slows everything down. I was running imagesc every time to update before, and it's faster than that, but still too slow.
Hmmmm, how much memory is matlab taking up when you load the whole 2GB? Is your OS paging the memory to disk? If it works with 700mb then it should work just as well with 2gb. 
(may be a silly question) Are you running 64bit or 32 bit windows? Is the computer actually putting the stack into ram? You could try converting the image stack into an avi sequence and making a player for that.
Is there some reason why you can't modify the original file? Or make a copy of it and modify that? Because based on [this page](http://www.mathworks.com/support/solutions/en/data/1-2J9WR8/index.html?product=SL&amp;solution=1-2J9WR8), there's no way to do what you want without modifying the file.
I can edit the source code, but I'd prefer not to do so ( it's a common tool for MCR-ALS and modifying it would make the results not as transparent.)
I don't believe an AVI sequence could be swiped back and forth like you're talking about, though I'm no expert on the [movie features of Matlab](http://www.mathworks.com/help/techdoc/ref/movie.html). I don't know if there is a perfect way to identify if part of Matlab is being paged. I'd probably compare the output of the Matlab [Memory](http://www.mathworks.com/help/techdoc/ref/memory.html) command to the RAM usage shown by the OS. If the OS shows a much lower number, you're getting paging which would probably explain the extreme slowness you're seeing.
not sure if my approach is suitable for you, but you could reshape() your data vector into six columns and n rows and then mean() across the 6xn matrix to get a vector of length n
Degner is right. Just modify the function to expect whatever is now going in as user-input as an argument instead. After all, that's the whole point of having a function, right?
Mhm, it looks like Matlab is using more memory than there is physical RAM, I'll have to see why that's the case as there shouldn't be that much being used! Are variables in functions cleared when the function terminates?
Yeah, best to try to keep everything in physical memory. &gt;since 8gb ought to be plenty. True, though remember you don't have 8gb for Matlab. You have 8gb for everything. OS is non-trivial. Bunch of tabs in chrome, services, etc all start to add up. Close everything you're willing to close and see how much physical memory is free. About 80 to 90% of *that* is what you have to work with. I could go on and on. Any function calls you make end up making a full copy of any data passed. With large data, play around with the precision you're using. If you're storing everything as doubles and they only need to be UInt16 or something, then you're quadrupling the amount of memory you're using. As a quick test, you could always just try importing half of the images (or whatever it takes to stay in physical memory). If that solves the problem, then it is simply a memory management issue. If you're being paid to do this, then the company may just want to invest in more RAM as RAM is cheap and sometimes throwing hardware at the problem is a sufficient fix.
In general, I'd recommend putting plot commands in a script (I usually keep a temp.m script in my working directory for this purpose) so that you can easily tweak them till they're perfect and avoid this problem. That being said, I'm guessing it's too late for that, and you need an actual undo feature... I have no idea how to do that, but luckily a guy named Ben Mitch does, and [he posted a fancy little function for it](http://www.mathworks.com/matlabcentral/fileexchange/4084) on the MATLAB file exchange. It looks like it's even gotten some positive feedback. Hope that helps
Thanks for the link - Ill be sure to dld it! What do you put in this temp.m script you are speaking about btw?
Add a varargin or structure parameter that can optionally accept a value, and update it so that it only prompts if no default is supplied. That's what I'd do, anyhow .
if you want to delete the nth row of A matrix: A(n,:)=[]; for column A(:,n)=[];
 help find Use that function to find the position/index of the value you want to delete. Proceed as above
Do function calls really copy the data? Is that to say the inputs are passed by value rather than by reference (pointer)? There's another computer with better hardware that I might have to try. Right, I recognize that it can't all be for Matlab. I'll have to mess around with the precision and sacrifice where I can, using double precision uses way more space than some of the other types, unsigned ints, for example.
http://pastebin.com/wETN3nNB http://i.imgur.com/wCvJv.jpg Curve fitting toolbox has a whole ton of fit types but I don't think anything really fits this good without being random.
Close, A(A(:,x)=&gt;3&amp;A(:,x)=&lt;5,:)=[];
The solution posted is good - here's one that uses unique instead of manually comparing values: A=[2012 1 26 2 11; 2012 1 26 2.5 13; 2012 1 26 3 14; 2012 1 27 4.5 3; 2012 1 27 5 9]; [ dates, ~, idxs ] = unique( A(:,1:3), 'rows' ); % preallocate your arrays! out = zeros( size( dates, 1 ), 4 ); for idx = 1:size( dates, 1 ) out( idx, 1:3 ) = dates( idx, : ); out( idx, 4 ) = mean( A( idxs==idx, 5 ) ); end maybe not more readable at all, but it passed ten minutes 
in fact you could change the for loop to for idx = 1:size( dates, 1 ) dates( idx, 4 ) = mean( A( idxs==idx, 5 ) ); end
matlab has a native date-time data type you might want to investigate (I haven't used it much)
Thanks for the suggestion. I'm testing it out right now on our cluster. edit: glasspusher has posted some computation times comparing the for and parfor approaches.
Whatever you want. I use a temp script when I'm doing a bunch of concurrent commands so I can tweak them and just re-run all the commands instead of having to click through them individually in the command history.
Yep. That's about the best way. IF you know your main signal you can do some other fancy stuff (this is where you get creative) such as using filtfilt to filter the data at the main signal frequency. This gets rid of any noise. But it also knocks down your amplitude. however it should knock down both amplitudes proportionally so the ratio doesn't change.
Why?
the phase_shift comes out being a vector. What do I need to do to get it to be only one value? 
Knowing why or what he actually wants to do may help us help him, as there might be a much faster way of doing what he actually wants done. Unfortunately /r/matlab is a little too thick to realise this and they've downvoted your very pertinent question.
Yes, I encountered the same issue. The vectorized method works better than the loop method for reasonably sized data sets, but when the data becomes large enough they severely lag behind the for-loop approach. 
I agree this is a valid question. I was originally trying to not oversaturate my post with details and leave it as a generic programming problem. I wholeheartedly agree that to diagnose the problem a step further, the background information would have been helpful. I'm working on simulating a Fourier transform infrared interferometer. I'm been trying to keep the code open to handling very complicated phase and amplitude spectrums, which may not be realistic to measure physically in real life, but suitable to computationally analyze. This is what initiated the need for such high orders of N.
This is an EXCELLENT point. I think that two things become important here: (1) the wavenumber must be symmetric about the origin and change linearly with amplitude and (2) special care has to be given to the values of k and x to accord with Shannon-Nyquist's sampling theorem. The arbitrary data I chose for the sample case I made up doesn't satisfy these parameters. Fortunately, my actual simulation code does satisfy these requirements. After fiddling with fftshifts in my simulation to get things correct, the reconstruction of I becomes I = N*fftshift(ifft(fftshift(B))); I rewrote this spectral approach into my code and verified that I get the same end result. I've compared some times below: N For-loop I_time Spectral I_time O(10^1) 0.045633 0.003251 O(10^2) 0.079413 0.003777 O(10^3) 0.371581 0.003642 O(10^4) 19.331869 0.009396 O(10^5) -- 1.069775 O(10^6) -- 16.898539 The spectral approach is clearly much faster. Thank you very much for this input. I've got it all working now and this will be the approach I'll continue to use.
The parfor trials may be wrong as I haven't played with it much. Using MatLab pools will prolly gain you the most. 
I encode all my videos separately from Matlab since video encoding in Matlab has always been poor, especially with `getframe()`. If you're interested in that angle, note that you're already doing half of that by saving each frame to disk. Instead of bitmap, save to a PPM then use [ppmtoy4m from mjpeg tools](http://mjpeg.sourceforge.net/) to create a y4m raw video video stream from the frames. Last, point x264, ffmpeg, or whatever encoder you like at the y4m stream to encode your video. 
In my experience creating 3d meshes via patch() is excrutiating. I’ve moved on to PTB-3 with LoadOBJFile, MOGL, and Screen('AddFrameToMovie')
A single is 4 (32bit) bytes in matlab, double is 8 (64bit) as seen [here](http://www.mathworks.co.uk/help/techdoc/matlab_prog/brh72ex-2.html). So your calculation just shows that doubles would not fit in 6GB
Unfortunately, the answer is no. This and the lack of zero-indexing are the two things that really annoyed me when I started using Matlab from C++. It's not really a big deal, just an annoyance, and of course the program has MANY redeeming qualities :)
This is the only way. Kinda slow if you are coming from C++. But you will get used to it. 
On the other hand Octave has `x++` and `x+=10`
Vetted by who? Not saying the octave project has a lot of manpower, but they are a well orgnaized open-source project.
Industry. Matlab &amp; Simulink meet a whole lot of strict regulatory stuff. The list of toolboxes dwarfs Octave's
If you need those particular toolboxes, many don’t, and my go-to toolbox is open source as well, and highly respected.
Funny American, we have a institutional license with full toolboxes and this annoying floating network license shit. Whenever I install Matlab I deselect all toolboxes besides Statistics and Image Processing. Only, as a Linux user, Octave is way more ergonomic and itegrates into the system. I don’t need this desktop GUI and java crapola. Even plots look better in Octave.
&gt; Whenever I install Matlab I deselect all toolboxes besides Statistics and Image Processing. Well thank god the all the Engineers in the world only are doing statistics on processed images. Have you even looked at what other toolboxes are available. Maybe wrap your head around the notion that there are people out there that use those daily and $20k a seat for those Matlab tools is pennies for what they're worth. &gt; Octave is way more ergonomic and itegrates into the system. I don’t need this desktop GUI and java crapola. Pro life tip: You can do that with Matlab too. &gt; Even plots look better in Octave That's like saying you have a better car because it's shinier. &gt; Funny American, This has to do with what? 
Base Octave replicates base Matlab API and that is all I need. I don’t do finance, I don’t do simulations, I don’t do whatever they offer for niche applications. We code our stuff ourselves. &gt;&gt;Octave is way more ergonomic and itegrates into the system. I don’t need this desktop GUI and java crapola. &gt;Pro life tip: You can do that with Matlab too. Ok, does Matlab support libreadline? No. How do you delete a word in Matlab console (i.e., Ctrl-Backspace or Ctrl-W)? You can’t. I wrote two emails in a span of years to paid Matlab support. This is a trivial fix. They just replied to apologize. So I use Octave. &gt;&gt;Even plots look better in Octave &gt;That's like saying you have a better car because it's shinier. Well as I said they match the API, so I can do the same, and it’s antialiased as well. And it exports usable vector graphics. Not this print job routed through ghostscript EPS crapola. &gt;&gt; Funny American, &gt;This has to do with what? Well I assumed you are silly because you pointed out since I prefer something simple in favor of something luxurious I must be poor. This is the flipside of the American dream.
&gt; whatever they offer for niche applications. We code our stuff ourselves. You know, I used to do research in Academia. We used to code stuff ourselves, and took pride in it. Now I am doing research in industry. We have shit to do, and a lot of money is at stake, and top-notch research talent is expensive. Spending a few thousand dollars on some software that enables people to get that stuff done faster, and to focus on core research, is well worth it. I had this discussion the other the day who claimed matlab was too expensive. I quickly rattled off over a dozen software packages that were anywhere from 2x-25x more expensive than matlab that we had licenses for. Not trying to brag, or long-cock your love for octave. Just saying that there are a lot of industries where top talent is easily $200k per year. Spending a few grand on matlab to not have to re-invent the wheel is an absolute no-brainer in terms of a cost-benefit analysis.
Not sure why you got downvoted. Matlab can be prohibitively expensive, especially when you want to use the parallel computing toolbox across dozens or hundreds of computers.
I think you need to be a bit more open minded about software
Good one. Why is it then that people act borderline offended when I mention that Octave, a small but respectable Matlab clone, supports the syntax constructs that OP asked about?
Are you trying to make a Bode plot? If so, search the help file for Bode. 
This. Code::Blocks is just an IDE. It replaces M-Editor. But what do you plan on using your matlab for? If it's just generic data processing you might just look into python.
Here's a video that should be informative. Its not a perfect analogue but it demonstrates how to make interactive plots using the mouse. http://blogs.mathworks.com/pick/2008/05/27/advanced-matlab-capture-mouse-movement/ The basic principles are the same though. Create graphical objects and then manipulate them in callbacks that are executed by the user interaction. 
MATLAB can definitely handle an application as you described. Check out the documentation for [GUIDE](http://www.mathworks.com/help/techdoc/creating_guis/f6-15783.html).
ah thanks for that, I'm pretty much a novice to MATLAB so that may be over my head, but assuming I can get my boss to buy it I should be able to figure it out from that
Why not?
Why don't you use an array? You are doing this hack to get something like x1 x2 x3 x4 x5...why not just use x(1,:),x(2,:),x(3,:)... etc? If you want them all to be different sizes, then use the struct syntax {}.
Agreed. Code like for j=1:15 eval(['x' num2str(j) '= [];']); eval(['y' num2str(j) '= [];']); eval(['z' num2str(j) '= [];']); eval(['E' num2str(j) '= [];']); eval(['D' num2str(j) '= [];']); end is just a 15x5 array of empty matrices. Replace it with X = cell(15,5); and then set X{i}{j} = hits.data(k,l) as appropriate. OP, if you need more guidance than this just say so.
'coz the code generated is even by MATLAB terms inefficient ( [look at the discussion here, where even Loren of "Loren on the Art of MATLAB" chimes to say that she doesn't use GUIDE](http://www.mathworks.com/matlabcentral/newsreader/view_thread/131226) ), byzantine and quite unwielding. You can make a GUI similarly with just 5% of the code that's much more readable and debuggable if you lay out the GUI yourself, not to mention better versatility. One shortcut though is to use GUIDE to just generate the figure script which will layout the controls and then strip off all the stuff except the actual uicontrol commands (and even its callbacks) and use it yourself after that..
I have tried a few times to get into MATLAB GUI programming, both with GUIDE and with code. Everytime, I just can't get do it. Everything just seems incredibly crude and hacky and unmaintainable. I've been programming in matlab everyday for about 12 years, and have lots of GUI programming experience (in C++: win32 API, MFC, Qt, VCL forms, wxWindows, and Visual Basic). I've even programmed GUIs in 80x86 assembly language making raw calls to the win32 API. And still, matlab GUI programming leaves me dizzy.
Well tell that to [him](http://www.reddit.com/r/matlab/comments/wk7n1/increasing_by_1/c5eomst). I unsubbed because of nasty attitude displayed. None of your quotes were intended trollingly. But if they appear as such, tough luck.
How about a data structure? data(2).x = []; data(2).y = []; etc.
True, its not very systematic compared to any other languages, but then MATLAB barely graduates as a language in many ways too. While I haven't done that many GUIs in other languages, we maintain a fairly exhaustive microscopy image analysis software inhouse in the lab purely on MATLAB code (it's comparable to ImageJ in its capabilities) and while its not as fast as it could be if it was pure Java (which we are now trying to do, but its more complex than is in Java), being able to show an image with a single command is definitely a good thing for someone who wants a GUI fast..
Keeping the same basic structure as best as I can: x= cell(1,15); y= cell(1,15); z= cell(1,15); E= cell(1,15); D= cell(1,15); for i=1:size(hits.data,1) DT = hits.data(i,2); x{DT} = [x{DT}, num2str(hits.data(i,11))]; y{DT} = [y{DT}, num2str(hits.data(i,12))]; z{DT} = [z{DT}, num2str(hits.data(i,13))]; E{DT} = [E{DT}, num2str(hits.data(i,6))]; D{DT} = [D{DT}, num2str(hits.data(i,7))]; end
MATLAB can definitely do it -- you need to use GUIDE and make a GUI. Should be a simple (few hours) coding job, even if you're trying to learn how to use GUIDE. 
you are going to want to use callbacks or listeners. Callbacks are simpler to get into. the idea is that you run a function to set up the main GUI that might call a function to set up a secondary GUI. the second function finishes and then the first one does. After this is done a GUI element can be clicked and will call a third function that can manipulate both GUIs if you set it up right. The UserData field in all of the GUI elements is very useful for passing data. I hope this helps
if it isn't a secret post your data() matrix save it to a .mat and I could probably find the best way.
As one response mentioned, you can use UserData, but you can also use AppData. If you have the AppData saved, you can access it from any GUI window using getappdata. You do whatever you need with it, then setappdata. Once it is set, you can access it from the original GUI
Matlab basically does both pass by value and pass by ref. But you can't control it. See more info [here](http://www.mathworks.com/support/solutions/en/data/1-15SO4/?1-15SO4). If you're modifying the data in the function, then it's pass by value. If you don't modify it, it just passes the ref.
Run it through a loop starting from the end and working to 1. Change the logical conditions all you need. for I=length(In):-1:1 if In(1,I)==3 In(:,I)=[]; end end 
Why are you trying to convert it to 5fps and 8bit? You could get more accurate data, and the runtime complexity should be pretty much the same depending on how much processing you are doing. Reading k frames with n pixels and doing a per-pixel delta compression on each one would probably be just about as much work as reading k frames with n pixels and writing k/5 pixels out then doing delta compression. If you are having real performance problems, consider writing it in C/C++, but it seems to me that it should probably be pretty fast.
OH. I see your problem. I think. Is it PC[zero]2t, or PC[letter O]2t? Your code is inconsistent, it seems!
do yourself a favour, and change your default programming font to something better, particularly one that has zeros with the little diagonal bar across it. I use "consolas", because it's on my PC. http://hivelogic.com/articles/top-10-programming-fonts/ If you do a search for "programming fonts" you'll find lots of discussion online!
flip up requires a 2d matrix, you are passing a 3d matrix to it, as each i,j has 3 k positions for the different channels. (Run the script with a debug marker on the flipup line - look at the bw matrix before the flipup code runs it'll be something like 43423432x342343x3, you need to pass a matrix without the final x3) You need the flipup line to be something like bw = flipud(bw(:,:,1)); i.e. all i rows, all, j columns and one k . or bw = flipud(bw(:,:,2)); or bw = flipud(bw(:,:,3)); or use the function im2single() on bw first (i.e. add the line : bw = im2single(bw); ) I haven't run your code so I don't know which is best. But I bet this is why you're getting the error, and I bet this will fix it..
As tangled_foot said, flipud only works on 2D matrices. The command flipdim allows you to flip any dimension array along any dimension. FWIW flipud(X) is the same as flipdim(X,1) if X is 2D. What you'd want for your variable bw is bw = flipdim(bw,1); Or you can just convert it to a grayscale image right from the start, making life easier: I = rgb2gray(imread('start.gif')); Or you can go straight to binary: I = im2bw(imread('start.gif')); 
Would you mind posting your code? It's hard to understand what your approach is if we can't see the code.
Would something like this help? There are also some file exchange scripts for reading unicode text, have not used any so wont link in case they are utter shit, but a google search should point you to several
http://www.mathworks.com/matlabcentral/fileexchange/18956-read-unicode-files 
Something tells me converting it [from a jpeg to a gif and trying it again isn't going to make much of a difference](http://www.reddit.com/r/matlab/comments/ws2v6/help_matlab_extract_waveform_from_jpeg/)
What happens when you try it with your image?
did you put in values for 'NPEAKS', 'MINPEAKDISTANCE', and 'MINPEAKHEIGHT'? It seems like if you play with those parameters, you should get the function to pick out the relevant peaks in your data. Hard coding this would be a pain. I make one for an airy function where the user selects the peaks and it took a while to do and it's clunky. 
Your second line only needs one =, but I'm not really sure I'm understanding what you're trying to do so I can't really comment beyond syntax.
Not quite. The way you've got it written now, if the entire first column of the two matrices is the same, then it will replace the column. If you want to do what you're saying you probably want to do something similar to this: %An example using matrices A &amp; B for i = 1:numel(A(:,1)) if A(i,1) == B(i,1) A(i,:) = B(i,:); end end What this does is iterate through the first column of the A matrix and sees if that value is equal to the B matrix at that location. If the numbers are the same, it replaces the entire row of A with the entire row of B. You'll have to change the code around to accomodate what you're working with. One thing you'll have to watch out for is matrices with different dimensions. In the example case, if A is larger than B, the script will crash once it gets past the size of B. It's early and I haven't had my coffee yet, but I think this is kinda what you're looking for. EDIT: Fixed the code a bit.
are you certain it's not missing data?
I imagine we'll have to know what were looking at first
Not sure the meme but it'd get captioned like this: Asks for help optimizing, doesn't post code.
I am a climatologist and use matlab to work with terabytes of historical weather data and make nice gorgeous plots that can be used by land managers , etc. I am a phd candidate at UNR in reno working at the desert research institute 
what was ch0cal before you hit the button? 
Is [this](http://www.mathworks.com/matlabcentral/newsreader/view_thread/280624) helpful?
set(gca, 'YTickLabel', num2str(get(gca, 'YTick'), '%.8f')); This is a bit of code from the link. Due to the '%**.8**f', it should produce numbers with precision to 8 decimal places.
So firstly you'll want to hit it with a gaussian just to remove some of the HF noise - have a play to see what works without damaging the important information. Secondly - don't use thresholding, use edge detection - I've found the canny mehtod works quite well on images like this. Then, you get a nice B&amp;W image which you can stick through bwmorph with bridge and skel, or whatever, to get the final structures. You might need to do some other morphological operations before this (if you get tramlines from the edge detection for instance, you'll need to fill them up before using skel).
(Since callbacks are all just .m files you can add debug points to them)
FMINSEARCH/FMINBND are optimization functions avaiable in matlab (without neeeding the Optimization toolbox). For your case, that may suffice based depending on how your constraints are.
Since I do get a "value" back for Ch0cal, though, I don't think Matlab sees this as an error.
It outputs the file into a format with a brief header and then the columns below that delimited by spaces, how would I get dlmread to skip that header?
C1 is a cell of floats in this case. It is by far the most powerful of matlab text read functions but you do not need it if you just want the element data. In the specific example you posted: data=dlmread('input.txt','\t',[5 2 10 6]) Will extract all your data in a simple to use array
would you mind explaining what the \t and the [5 2 10 6] signify? It's easy enough to copy and paste the code but I'd like to have some semblance of an idea as to what it actually means, what it's doing, and how I'd be able to adjust it to a different problem in the future, save me from having to come back and pester more people for help.
I already explained in the other post, also you might want to do a help dlmread in matlab to read the proper documentation. MATLAB has insanely good help files
People would be more inclined to help you if you at least posted your attempt at solving the problem.
Yes, if you have the symbolic toolbox you can use the variable-precision arithmetic (vpa) function to set the minimum number of digits to carry. You can look up some info for it [here](http://www.mathworks.com/help/toolbox/symbolic/vpa.html), it's quite easy to use.
Yeah, I just checked with my copy of MATLAB. Symbolic toolbox will cover ya for large integers. I was able to do prod(sym(1:1000)) and get the correct answer.
as darkscout suggests, add a debug point just before end and see if ch0cal has the right value then it might be that ch0cal is not getting reset because it is only getting set in the scope of the function
Symbolic toolbox, for sure. Just keep in mind - it's not very fast. It links the MATLAB functions to a binary library which is basically a wrap around the Mupad symbolic math library developed some time ago, with no intent for high performance.
This may be way off base but is [sage](http://www.sagemath.org/) something you'd want to look into?
If you don't mind me asking (since otherwise I would have to buy this toolbox) what would be your code to factor a number, n, 50 digits long? Normally (if matlab allowed it) it would just be factor(n). How would you do it in this toolbox? Edit: http://www.mathworks.co.uk/help/toolbox/mupad/stdlib/ifactor.html Would that be what I'm looking for?
I'm a bit confused still on how this can be used. Am I right in thinking that MATLAB cannot factor large numbers right now because whatever internal algorithm it uses it is unable to store numbers with a certain amount of decimal digits to be able to complete it? How big of a number could I factor if I set d as 2^26, assuming I have a computer quick enough to factor it? Does this toolbox have a store of more primes? Thanks
Is there a way to port it with no hassle of rewriting it? :)
Yeah I think that's it. As an aside, I would be shocked if your university does not have a copy of this toolbox. Most engineering departments get full matlab almost for free, because they want to hook students on it. Check with your EE department. Alternatively, you can probably at least download like a week trial or something from math works to test it out. 
Check out http://www.esrl.noaa.gov/psd/data/gridded/ ... You will need to know how to read in NETCDF datasets via MATLAB. Just google that. I have a lot of plots just let me know what you would like to see :) 
&gt; setting up the matrices seems like a bit of work Are you joking? It's possibly the easiest thing in the world. It's the whole reason matlab exists. &gt; physical modeling course. You're probably going to use Simulink.
You should know that the only way to get good at something is by doing that something a lot of times. You will get frustrated at some point by your code not working and not being able to figure out why. When this happens step away from the project and go take a walk. It's never good to obsess over code. Other than that, there's nothing to it, there really aren't that many tips and tricks for matlab other than relating to your character. Just remember that matlab will do what you tell it to. 
[MathWorks' Website](http://www.mathworks.com) has lots of information including [a page dedicated to physical modeling in academia](http://www.mathworks.com/physical-modeling-edu/?s_cid=HP_MI_edu_physicalmodeling) and [the general academia page](http://www.mathworks.com/academia/index.html). You can check out [a bunch of free tutorials as well](http://www.mathworks.com/academia/student_center/tutorials/). If you have the money, you can attend the [physical modeling course](http://www.mathworks.com/services/training/courses/SLPM-M_1.html), if you'll actually be using SimScape. There are also MATLAB courses.
Ah, that's not quite what I meant - smoothed_image = imfilter( image, fspecial( 'gaussian', 20 ) ); edges = edge( smoothed_image, 'canny' ); replacing 20 with the width of your choice.
Matlab never tells you if you create a variable that is already the name of some function. The number of times I've had a script fail from using something dumb like min = whatever and then I wonder why the funciton min doesn't work three lines down. Oh and always check for semicolons.
Check the NIH websites. Specifically, for analyze(). spm might handle dicom. 
Why does it take forever? How large is each image? Are you surpassing the amount of memory the computer has and forcing it to [page memory](http://en.wikipedia.org/wiki/Page_(computer_memory))? That would certainly slow everything down a lot. Edit: In fact, because your loading from file, the bottleneck should probably be more related to your hard drive speed instead of how much memory you have. Unless these DICOM images, which I have little experience with, are heavily compressed or require a lot of computation to load, which I doubt. 
Check the documentation on the function imagesc(). I know that it can put a colormap on at least a two dimensional image. There is probably some related function to put a color map on a three dimensional image. Although you may need to assign some color value (charge = 0) to the dead space outside the spheres. It would be nice if this dead space where transparent
Adjusting some code from the sphere help document... figure; %new figure [x,y,z] = sphere; %generate the x, y and z coords for points on a sphere cblank=ones(size(z,1)-1,size(z,2)-1); %generates an array of ones compatible with colouring the sphere vals=[1 0.5 0.2]; %colour values surf(x,y,z,cblank*vals(1),'EdgeColor','none') % sphere centered at origin hold on surf(x+3,y-2,z,cblank*vals(2),'EdgeColor','none') % sphere centered at (3,-2,0) surf(x,y+1,z-3,cblank*vals(3),'EdgeColor','none') % sphere centered at (0,1,-3) daspect([1 1 1]) colorbar %add some lighting camlight left; camlight; lighting gouraud
You can find some [free tutorials](http://www.mathworks.com/academia/student_center/tutorials/) on MathWorks.com. If your employer will pay, they have [training classes](http://www.mathworks.com/services/training/) listed on their website, both in-person, online, and self-paced. There is also a [big list of books](http://www.mathworks.com/support/books/index_by_categorytitle.html?category=17&amp;sortby=title?category=17&amp;sortby=title) on the website. Or just use google and search for [MATLAB tutorial](https://www.google.com/search?q=matlab+tutorial&amp;ie=utf-8&amp;oe=utf-8&amp;aq=t&amp;rls=org.mozilla:en-US:official&amp;client=firefox-a). A lot of teachers out there have their class materials out for all.
YW - post back a dummy figure when you've plotted it all :)
Does the .exe accept command line arguments? dos, system and sprintf.
Hmm, would hitting "enter" be sending a carriage return/line feed string perhaps?
Piping output around might be an option - have a look at &lt; &gt; and | as command line operations, if you can get it working from the command line you can get it working from in MATLAB. Alternatively, autohotkey I believe is the go-to option for hotkey scripting.
Any follow-up info on this? I'm rather curious what the issue turned out to be or if you've found a solution.
I assume you actually meant x^2 +2x+1 not x^2+2x+1. I'm not sure I understand what your problem is, because (x+1)^2 == x^2 +2x+1, so it really doesn't matter how you calculate it. In fact, the first way should be faster.
^ this guy gets it
Okay, thanks for the initial tips. I'll look for some tutorials. If you have any lying around too that would be stupendously awesome!
I am creating a polynomial solver. I need the expanded form.
You could probably get all three done with randomized algorithms.. [RANSAC](http://en.wikipedia.org/wiki/RANSAC) would probably work with 1 and 2. For 3, you could do another randomized algorithm: 1. Throw a dart at the points, i.e. pick a random point *P* (not one of the points in your data set). 2. find the four nearest points *P1, P2, P3*, and *P4* in your data set to *P*. If they are all less than *D* distance from *P*, then they are inside one of the rectangles. *D* is the length of the diameter of one of the rectangles. Alternatively, you could calculate the angles of the quadrilateral formed by *P1, P2, P3, P4*, and see if it approximately a rectangle. If it turns out *P* was not in a rectangle by either (or both) of these tests, go back t 1. 3. Calculate the centroid of the rectangle *C* = (*P1* + *P2* + *P3* + *P4*)/4; 4. Add *C* to your list of centroids. If it's already on your list, then your random point *P* fell inside a rectangle that was already computed. (run this like 10 million times, i.e. enough to be sure you get them all)
There are a ton of MATLAB resources on the internet, and a lot of books, some specifically for beginners. The problem is there is a lot of info that is probably way over your head that you would have to sift through to start picking it up. If I was in your shoes, I'd find a good intro to MATLAB book on amazon with good reviews and work through it.
i resorted to mathcad
I think the mathworks is a good place to have a link sure, but really the github here would be for contributors only I'd think. It doesn't have to be the first thing people see.
What you want to do is, at the beginning, draw ONE blue line. Also, when you draw it, get its handle: hblueline = plot(blueX, blueY, '-b', 'LineWidth', 8); Then, any time you want to update the blue line with new data, just change its data. So you're not drawing anything new, you're just changing it: set(hblueline, 'XData', newBlueX, 'YData', newBlueY) Tiny example: h = plot(rand(1,5)); pause(1) for n = 1:10 set(h, 'XData', 1:5, 'YData', rand(1,5)) pause(1) end
Thank you! The gabor patch is immaterial to this discussion per se. Let's just call it a visual stimulus that needs to be flashed at certain points when the sound is being played. Whenever the visual stimulus is flashed, the sound should be filtered accordingly. I'm not a mathematician, so I don't really know what to do with that equation. I thought to get a filtered sound, you convolved your filter with the sound? That doesn't look like a convolution. Will it still do the job?
You can create a .txt file with the commands necessary in the file. SomeFile = fopen('..\location\commandsfile.txt') fprintf(SomeFile,' your commands \n') fclose(SomeFile) system('ExternalProgram &lt; commandsfile.txt','-echo') pause(2) % to give your comp time to create the file Then you need to setup a while loop that checks if the external program is still running. flag = 1; while flag == 1 flag = CheckIfRunning('ExternalProgram') pause(1) end This is how to check if the program is still running from the task manager: http://www.mathworks.com/matlabcentral/answers/6030-how-can-i-detect-how-many-instances-of-matlab-are-currently-running-on-my-machine 
The easiest way to do this is with the plotyy function. It leaves a bit to be desired, but it will do what you want. EDIT: unless you are saying (as your title implies) that you just want to add axes and not replot your data, then I am not sure. EDIT EDIT: Something like this to just add axes: hold on h1 = axes; set(h1, 'YAxisLocation', 'right'); set(h1, 'YLim', [ymin ymax]); set(h1, 'Color', 'none'); assuming you have your figure open and want the new axes on the right with limits ymin and ymax.
Yeah, just add a [second axes](http://i.imgur.com/aHckY.png) that you don't plot anything on. f = figure(); ax(1) = axes('parent',f,'xtick',[],'yaxislocation','right','ylim',[-50 50]); ax(2) = axes('parent',f); plot(ax(2),1:0.001:10,sin(1:0.001:10)); That first axes is hidden behind the second and gives you the second y-ticks on the right. You can set them to anything with the ylim, ytick, and yticklabel properties. 
Can you post a segment of one of your imported/loaded data? (pastebin or similar, please) Also, please confirm that it is stored in cells (run WHOS, the class column should say CELL). If I am understanding correctly, you have a mix of numbers and chars and you want to parse out the numbers into several lists/vectors. Then plot the vectors against each other?
Thank you for answering! I'm not sure if I can post the experimental data anywhere. If you can't help because of that, thank you for attempting. The class says "spec_data" (short for spectroscopy). So nevermind on it being in a cell? Essentially, yes. I use the "eval" command to extract the data I need from the data set ex: "measurementDateTime = 8/9/2012 11:14:23 AM measurementDateTime =" ect. x 100 But all I want is the numbers (ex: 11:14:23). 
&gt; using matlab for the first time after avoiding it like the plague in undergrad Undergrads take note. &gt; I have a large number of data sets exported into Matlab. Where did this data come from. How was it exported to Matlab. &gt; showed me the eval function to use it as a loop Someone should take him behind the shed and beat him with Matlab R13 instruction manuals. There is almost ALWAYS another way. If you give examples we (I) can help. I'm not so good with word problems.
&gt; Using this software, he exported the data in an .xml file. Matlab reads XML files naively. 
Can you share a .mat file that contains a small subset of the data, in whatever format it is you're trying to work with? "spec_data" sounds like a custom class, and it's difficult to guess on what to do with that. Based on your pastebin text, it looks like a structure data type, so maybe the structure syntax will work: x(1).meanMua % gets the meanMua value of the first data point y=[x.meanMua] % collects all meanMua values into an array, stores in y As for the timestamp data, you can definitely get a time value out of that string without using eval. Look into the datestr and datenum functions. Matlab uses what it calls "datenum" values to represent time, and the datenum function parses strings and returns datenum values (you need to give it a format string, which is something I hope you're generally familiar with from, e.g., printf). 0 corresponds to "january 0, year 0 00:00:00", 1 corresponds to january 1, year 0, etc, and fractions represent fractional days.
You probably meant natively, but you're right either way.
Yeah, the whos command will display as one of the columns 'Bytes'. This is the amount of RAM the variable is currently taking up. Also, to answer your other question &gt;Does matlab do a lot of compression when it saves things to disk? Yes. If you're storing a *.mat file, it does some level of compression on the data by default ([reference](https://www.mathworks.com/support/solutions/en/data/1-PM5NN/index.html?product=ML&amp;solution=1-PM5NN)). Your data probably has a fair bit of repetition, which is why your mat files are smaller than the raw data in memory. None of this applies to non-mat formats. Raw text files or CSV files are not compressed. In fact, a raw text file often takes up more space than the data does once loaded to memory. 
&gt;How do I make a function that takes truecolor images and converts it to grayscale, with variable weights for RGB data? without the built in rgb2gray function? Color images are just NxMx3 matricies. You could do something as simple as this. imGray = weight1*im(:,:,1) + weight2*im(:,:,2) + weight3*im(:,:,3); You could also throw in a normalization factor to keep them on an Int8 or int16 scale depending on what you want. imGray = ( weight1*im(:,:,1) + weight2*im(:,:,2) + weight3*im(:,:,3) )/3; &gt;How would I write a script to test this function? Not sure what you want here. Could test it however you like. Generally by feeding it an input with a known output. &gt;and make it more user friendly such as with text input to specify the name of the original image file and the values of the weights alongside basic error checks for valid file names? and weight values? Look into the matlab 'input' function. This will allow you to request user input. You'll have to test the input they give your own way, depending on how strict you want to be. &gt;How can I then write a function that converts the grayscale image to black and white with a user specified cut off value for the black and white? Maybe just use logical indexing. Once converted, you can just say imGray(imGray &gt; cutoff) = cutoff or imGray(imGray &gt; cutoff) = 0 Depending on what you want to do with those values that fall above your cutoff.
The Workspace Browser (gui/panel) can also display variable sizes (in addition to the default columns of: name, min, max, etc). http://www.mathworks.com/help/techdoc/matlab_env/f10-51778.html#bqxyuj8
Awesome, ill test them out in the morning (late evening here). Thanks :)
If you wanted to use strcmp() or regexp() you could always use num2str(), but it's usually an unnecessary step (but could be worth it with regexp() because it's totally awesome). A simple method would just be to loop through your input data and find where it is the same as whatever criteria you have by using some logic (if A == B then blahblah) or isequal(). Without seeing the exact data I can't say what the best solution would be, but this is a good place to start.
oops, forgot about find()!
find() is a good place to start, but the most important thing to remember with this sort of question is that the == operator can be used to form an 'index matrix'. You are more concerned about the row with the matching data, not the actual location of the matching data. Take this example: X = [ 8 61 2 ; 7 41 15 ; 5 41 2 ] If you're wanting row 2 (because the user put in '7'), you can get an index of all the rows where the first column is 7 with the command: I = X(:,1)==7; % Select column 1 from all rows of X, test if == 7 'I' now contains I = [0 ; 1 ; 0]. You can get the rows itself by using the format: X(I,:) % Select all columns from rows in I, this returns [ 7 41 15 ] 
Thanks for the help. 
Thanks for the help. Unfortunately, xlsread returns a cell array, not a numeric matrix, and I can't use cell2mat since some of the returned values are strings. I know this is probably a stupid question, but how would I change those strings to NaN after the xlsread so that I could use cell2mat and then find?
Yes, you can change the strings if you go through your cell array and change any strings to NaN (if ischar(x) == 1 then x = NaN). What syntax are you using to read in the excel file? If you're just using one output argument, you should get an array of doubles. As far as I'm aware, the only way you could get a cell array from xlsread is if you're using the text or raw outputs.
Sure. Sorry I didn't frame the question with more detail. I'm not looking for something the general public can use / something I can make widely available on the app store. Let's say I want to demonstrate that my algorithm 'works' to a few of my peers. I know you would suggest a Matlab GUI at this point, but I also want to find out how feasible it is to develop the algorithm further, whether it runs in the 'real world' so to speak, and whether mobile phones can handle the computation and so forth.
I may be a little too late, but here goes. LMS filters are pretty stable, and generally the only reason they blow up is that your step size is too big: the filter may find the minimum of your error function and overshoot it, causing this divergence behaviour. Try reducing your step size a lot. This will make convergence slower but surer. If that doesn't work, and if you know some other details about the implementation, I would suggest that you check if the error function is quadratic or at least strictly convex so that your algorithm does converge to a minimum. You can try sweeping over a range of parameter values and plotting the error function to check if it is convex. 
My suggestion would be to do a bit of cursory research on android development. I think you'll find your options for language are pretty restricted.
You can generate c-code from MATLAB using 'MATLAB Coder' that can run completely independent from MATLAB. I personally don't know how to create an app for a phone but you could call the functions in the generated code from a hand written main-file. http://www.mathworks.com/products/matlab-coder/
You could maybe use [MATLAB Mobile](http://www.mathworks.com/mobile/).
Great. Thanks.
There are also some apps that let you run matlab remotely. Then you could just execute your code from the phone and view the results. 
I apologize for that. The brackets aren't in the code. I just used them in my post to sort of show it as an example. It's written a=min(b) in the code. Any suggestions for that?
Hmm beats me... Only thing that comes to mind is maybe there is a bracket or keyword out of place that is making MATLAB think that 'a' is a function. Just out of curiosity, is this declaration on a line of its own? Or is it maybe nested inside of a function call?
I managed to fix the original problem, but now I have a question about min/max, if you can help me with that. In my function, b is [260; 261; 262], so when I perform a=min(b), I should get 260. Instead, I get [50 54 48]. Any advice on that?
Could you explain how I would verify that? I tried a ctrl + f but didn't find anything.
Ok. I did that, and this is what I got. %MIN Smallest component. % For vectors, MIN(X) is the smallest element in X. For matrices, % MIN(X) is a row vector containing the minimum element from each % column. For N-D arrays, MIN(X) operates along the first % non-singleton dimension. % % [Y,I] = MIN(X) returns the indices of the minimum values in vector I. % If the values along the first non-singleton dimension contain more % than one minimal element, the index of the first one is returned. % % MIN(X,Y) returns an array the same size as X and Y with the % smallest elements taken from X or Y. Either one can be a scalar. % % [Y,I] = MIN(X,[],DIM) operates along the dimension DIM. % % When X is complex, the minimum is computed using the magnitude % MIN(ABS(X)). In the case of equal magnitude elements, then the phase % angle MIN(ANGLE(X)) is used. % % NaN's are ignored when computing the minimum. When all elements in X % are NaN's, then the first one is returned as the minimum. % % Example: If X = [2 8 4 then min(X,[],1) is [2 3 4], % 7 3 9] % % min(X,[],2) is [2 and min(X,5) is [2 5 4 % 3], 5 3 5]. % % See also MAX, MEDIAN, MEAN, SORT. % Copyright 1984-2005 The MathWorks, Inc. % $Revision: 5.16.4.5 $ $Date: 2006/01/18 21:58:53 $ % Built-in function.
Is that correct?
 which min -all
Use pastebin for all of your code. You can't 'word problem' describe an error because 90% of the problems are in the syntax.
You're entering them as strings, don't do that. ['260'; '261'; '262'] is NOT the same as [260; 261; 262].
a = min(num2str(b))
That changed nothing. It still returned [50 54 48] as the min for [260; 261; 262]. You used num2str, but I want to convert it FROM a string. How would I do that? Matlab keeps suggesting char, but I don't think that's correct. 
a = min(str2num(b)) my bad
followed by display(a), it displays the minimum correctly. However, when I use a later on, it gives me an error, and when I type a in the command window to check it's value, it gives "Undefined function or variable 'a'.". What should I do about this? 
There is not.
My apologize dude. Like I said in my edit to the original post, I managed to figure it out. I appreciate your help. 
there's a minimum at 0.0042 and a maximum at 1 figure ezplot(x,[0 0.01]) figure ezplot(x,[0 1.1]) figure ezplot(z,[0 0.01]) figure ezplot(z,[0 1.1])
Awesome! Thanks for this :)! Sending it round work.
Is there any way to "push" it past the 0.0042 value and pick up the 1? Thank you Mick
Assuming you mean [BBEdit](http://www.barebones.com/products/bbedit/index.html?utm_source=thedeck&amp;utm_medium=banner&amp;utm_campaign=bbedit) for Mac. It's the second hit on google: http://www.esm.psu.edu/~ajm138/matlab_utils/
There's an app called addi for Android that runs m files if that's what you're asking. Then there's addiplot for graphs. 
from the sidebar &gt;matlab code tricks, discussion, questions; but we don't do your homework! However, usually if you are specific on your questions and reduce your post to the amount of information needed to answer that, people will help you out
Hi swissmike...let me clear things up...I'm really only asking for one thing...I've posted my code thus far so that hopefully demonstrates effort and initiative... Here's the snippet I need help with... while(abs(y-real)&gt;error) y(n) = y +(-1)n(1/factorial(2n+1))x^(2n+1); n_digits = abs(ceil(log10(abs(y-real)))); fprintf(['y = %16.',num2str(n_digits),'g\n\n'],y); n=n+1; end How do I turn y(n) into a vector that contains all the y values calculated from the inception of the while loop's execution? I don't think preallocation helps as the length of the vector will differ each time depending on an external input (error tolerance threshold). Everything else is pretty much smooth sailing.
PASTE BIN. No one is going to help debug that spaghetti code. If I can't copy and paste it into a matlab function and run it as is my will to help approaches 0. Also. Don't use num2str. Use sprintf or fprintf properly.
Generically, I would have done something like... v = [y,:] But within the context of this loop I'm lost. 
why won't that work?
ok, I tried... v = [y,1] and it spat out 2 value for v before the dimension mismatch error popped up. Then tried v = [y,n] This actually does make sense as I don't actually want n columns but matlab still gave a 3 row element array for v before crapping out. 3 different elements compared to v = [y,1]
9 billion points is way too big. You don't have the RAM and Matlab will crawl and/or crash. You won't get any information you can't get by just doing short-time fft's anyhow.
I don't suppose you can link me to one or more of those blog posts, can you?
In matlab you can have two kinds of classes. Classes that inherit from the handle class and classes that don't. The difference between classes and objects is like this. There is a class of things called dogs. Your pet sparky is an instance of this class, an object of class dog. When you put a non-handle object into a variable, it's as if you put some primitive data type into the variable. The value of the object is copied and the new variable is assigned that value. When you put a handle class into a variable, nothing is copied. The first variable stores a reference to the original object and now the new variable stores a reference to that same object. If you change something in the object pointed to by either variable, the object pointed to by the other one (the same object) is affected in the same way.
I too had difficulty figuring the thing entirely out, but I'll just throw in my interpretation. &gt; Using the terminal nodes 'x' and '1.0', and the functions +,-,* (multiplication), % (protected division), and 'sin', find a function that is equivalent to 'cos(2x)' in the range [0,2pi] using 20 samples equally spaced. The second part of the question is relatively straightforward. Express cos(2x) in terms of sin(x) and arithmetic operators. IIRC, the formula is cos(2x) = 1 - 2*(sin(x))^2 The first part of the questions asks you to evaluate the LHS of this expression, using the variables 1,x and provided arithmetic operators. I am not entirely too familiar with trees and nodes, but I suggest looking at Example 1 here and see if you can make any sense of it. http://pystep.sourceforge.net/ 
Sounds like a genetic tree problem. The "Terminal Nodes" are the possible inputs to the functions. The tree is made up of connecting node A to node B via an operator (the allowed functions). So, you might have this tree: ___*_______ | | x ____+_____ | | sin 1 | x If you can read the terrible ASCII tree, that'd represent the equation x * (sin(x) + 1) You're trying to evolve a tree that meets the requirements of the problem. On a related note, if you're being assigned a genetic tree problem and are unclear about the use of 'nodes' and 'branches', you may be in a bit over your head.
 % A = textscan output A = cell2mat(A); B = A(2:3:66); % 66 because 3*22 C = A(3:3:66); A = A(1:3:66); would be fast edit: % A = textscan output A = cell2mat(A); B = A(2,:); C = A(3,:); A = A(1,:); d'oh!
Eww, for loop.
So the code worked, but how did it reduce the size of b? Also, doesn't this skip the averaging part I want to do with b_store?
Sadly I do not. My teacher for the class was not really helpful either; she would give us assignments and tell us to figure it out on our own. The example code in the help section was my greatest tutor.
When comparing strings, you can't just use ~= or other logical operands. If you do, it compares the two strings character by character. When they're not the same length, it throws an error. Instead, use strcmp(fid,'wolf.jpg'), which compares them character-by-character if they have the same length, otherwise returns a logical 0. Good luck! 
you could also use the plot tools... says the lazy matlab user (i.e. me).
Mathematica is great for HW because of it's ability to find exact analytical results, but this won't really help when you take a test (usually). I found MATLAB more useful when processing data (think Labs) where I used to use excel which was far more difficult to work with.
Ah, I used Octave (too cheap for MATLAB!) back in the days when I was in the lab - nowadays my masters is computational so I use Fortran mostly and MATLAB for plotting because my supervisor really likes it, ours not to reason why.. :P
I have a crapload of data to process and its dimensionality was way too much for me to organize in 2d excel spreadsheets so i said fuck it and moved everything to matlab. Now i code alot more, as opposed to gui clicking in excel, but I Control EVerything and i Like it, and its way easier to organize my complicated data.
I never thought MATLAB was useless, but I used to rank it as one of my *least* favorite languages. Honestly, the first reason is because it is not a language one can really use at the hobby-level - unlike C, Java, Python, etc., the startup costs can be prohibitive for an individual (excepting students, which is like saying "the first one is free"). The second reason is that I've seen a lot more Simply Bad code written in MATLAB than in any other language, including Basic. I have since learned that this is likely because MATLAB is used by many Engineers Who Are Not Software Engineers. You know, the people who use "descriptive" variable names like "mm", "a", "b", "alpha", "omega", etc., and simply have no idea what indentation is. To be fair, I think Mathworks help set this precedent with it's IMHO terrible indentation defaults &amp; standards. To compound this, even if said engineer knows how to program well, often the scripts I see start out as rapid development prototypes (which MATLAB does excel at), and suffer from bad programming practices due to being written originally as a quick fix to plot some data, pull data from a file, optimize something, etc. This can be compounded *even further* by the fact that until recently (2008ish, it looks like), MATLAB had no concept of class definitions, packages, etc. Even today, most of their toolboxes and "standard libraries" seem to exist in a global namespace. I have no idea how namespace conflicts aren't more common. All that said, I have used MATLAB more than any other language for the past couple years (much to my protest at first), and I can honestly say that it is a remarkable language, once you learn it's shortcomings and quirks. It has the capability to tie in easily to Java, .NET, COM, and C, among other languages, and that alone makes it "not useless". It is great for plotting and number-crunching when you have large arrays of data, and though I love Python, MATLAB code is just easier to pass around to other engineers in the company (I work for one of the companies on the list in the OP), due to the fact that nearly everyone I work with has MATLAB installed already, or can get it installed easily. One of my fellow engineers is fond of saying that the question to ask is not "Can you do that in MATLAB?", but rather, "How long will it take to do that in MATLAB?"
 if ~exist(filename) continue end or if exist() do stuff end would be the 'polite' way of doing it. Try and catch is more the python's "getting forgiveness is better than permission" method. Edit: Second ideology is faster fid=fopen(filename if fid==-1 continue end Now I'm talking about 17s vs 3s for 36828 files. (00-99, 1-12, 1-31) http://pastebin.com/KrStJ3Gx.
Came here to post this. Try/catch will change your life!
Dude that did the trick, thanks!
A single `&amp;` is a bitwise operator. While it will probably work fine here it's better to use the boolean operator `&amp;&amp;` when that's the intention since it properly short-circuits. 
Yeah I was just getting lazy. Sorry. Thanks though
A [CFAR](http://en.wikipedia.org/wiki/Constant_false_alarm_rate) algorithm should do it.
In your Matlab interface, on the left side you should have a file browser/explorer. Navigate to the path where your .m file is. For example, say your .m file is located in My Documents/MATLAB/Soft_Needles/xy.m, then make sure that the matlab file explorer is in the Soft_Needles folder
http://imgur.com/MR3z6 Im trying to find the folder using the left column but it doesnt work still. 
http://imgur.com/MR3z6 Im trying to locate my file like you said but its just not working for some reason. 
Are you talking about a spectrogram? the Signal Processing Toolbox has that command, but I'm sure you can find [spectrogram MATLAB code out on the web as well.](https://ccrma.stanford.edu/~jos/sasp/Matlab_Computing_Spectrograms.html) If you're looking for the magnitude of a frequency band over time, you're going to have to compute the fft at different times using small chunks if your signal. This is called the [STFT (short-time Fourier transform).](http://en.wikipedia.org/wiki/Short-time_Fourier_transform) The STFT is the idea behind the spectrogram. You're looking at the frequency content of small chunks of your signal at different points in time.
I've turned off the suppressing of output and I can see that the first run through yields a negative answer, and that number is raised to the 1.5th power the next run, yeilding imaginary numbers. No matter what I set initial conditions to, it always seems to generate imaginary numbers. 
Well do the math by hand. What creates the negative number?
There are the proper multiplication signs as well, they just didn't copy over :)
I tried both of those and still no use... 
This is really good advice. I would use a while loop instead of a for loop, but that is a more or less nominal change.
But I'm going to add onto *alphabets{j}* several times, so I don't want to replace it's vale each time by saying = input(j:1) I explained what I wanted a little better in another comment t6o make things more clear. Thanks! 
EDIT: I fixed it, it was dumb but I should have had alphabets{i} instead of j. But now when I run vigenere('BHJKLQWERTYZA', 2) my output only comes out to be 'B' '' '' '' '' '' '' instead of 'BH' 'JK' 'LQ' 'WE' 'RT' 'YZ' 'A' I don't know why it is not appending the rest of the letters. Here is my full code: function vigenere(input, keylength) alphabets = cell(1, ceil(length(input)/keylength)); for i = 1:length(alphabets) alphabets{i} = ''; end input = strrep(input, ' ', ''); %Removes spaces from input if any for i = 1:keylength for j = i:keylength:length(input) alphabets(i) = strcat(alphabets(i), input(j:1)); end end display(alphabets) Thank you for all of the help so far
If you want to split the input string into a cell array with each element containing two characters (or keylength number of characters?), you might not need a nested loop. Try for i = 1:length(alphabets) alphabets{i} = input((i-1)*keylength + 1 : i*keylength); end This will return an error if your final element contains more than keylength number of characters (as in the example you gave, where the final element had only one character. To fix this, you could use the following: for i = 1:(length(alphabets)-1) % Stops one iteration earlier alphabets{i} = input((i-1)*keylength + 1 : i*keylength); end i = i+1; alphabets{i} = input((i-1)*keylength + 1 : end); I hope this helps, if not, I probably don't understand the requirement yet.
Thank you guys it really has helped a lot, I am used to C/C++ and COBOL. I never would thought people would actually help me with a syntax error! 
You could use Python. See http://stackoverflow.com/questions/8172931/data-from-a-matlab-fig-file-using-python or the related links on that page.
If you are, as implied by your username, a University of Florida engineering student, then I'd recommend you visit the computer labs and use MATLAB there. Alternatively, just buy the student version. 
I don't know if this is the issue, but I have encountered a similar low-res result when setting the 'PaperSize' property of a figure but forgetting to also set the 'PaperUnits' property. If the units are inconsistent with the size I set, then a low res image results. Maybe you can check to see how your figure properties change before and after the call to fill3, if at all. Use get(h) where h is the figure handle to see them.
You can also just save the figure in a different file format in MATLAB. You don't have to save it in .fig format.
Ya, I'll have to sort otu how to do that. Shouldn't be to bad! Thanks!
Ya, I'll likely end up doing the former. It's only a few figures for lab reports for a control systems course. Thanks :D
If you're in engineering I'll point you to 2 DIY resources for your MATLAB problems: http://www.mathworks.com/matlabcentral/cody http://www.mathworks.com/matlabcentral/answers/ I would suggest doing cody and trying to help people on answers to get better at MATLAB. If you're good at MATLAB you'll quickly see how applicable it can be to all your classes and especially data analysis for lab work. It's worth getting to know and once you know it life becomes easy. As for your question, it looks like you have some issues with input vs output so I'll try to help you get a better grasp of that. A MATLAB function can be seen as an I/O relation. You put something in and something else comes out. For this problem A goes in and B comes out, you setup the first line properly opposite for that. I'll try to help you on the syntax so you can try to figure out the actual problem on your own, or get close enough so I'm not doing it for you. [m,n] = size(A) &amp; size(B); m &amp; n &gt; 0; % this line is all wrong B does not yet exist and I'm really not sure what m&amp;n&gt;0 is supposed to do. Try this [m,n] = size(A); %That's all You took some shortcuts that you can't use in MATLAB, 2k does not equal 2*k and this is true in a lot of languages. You also need == not = when you compare Try this if n == 2*k %do stuff else error end Finally, it looks like you pulled the sortrows straight outta the doc. I don't think the doc does what you think it does. Look at the examples for sortrows in the doc, not just the syntax. I'll be happy to help if you make progress and continue to get stuck, but you really gotta work your own way through most of this or else it'll never click. MATLAB is pretty forgiving and it's just about as easy as it will get in terms of a 'programming' language.
So, if there are four ranges zero &lt; a &lt; L L &lt;= b &lt; M M &lt;= c &lt; N N &lt;= d &lt; inf How should that logic be written? 
In the lines .25 &lt;=n&lt;=.5 and etc ... Remove the first portion of .25&lt;= Same in .5&lt;=n&lt;=.75 It is super redundant, this may or may not help. On phone atm, need laptop to fully understand what is wrong.
You can't do 4&lt;a&lt;5 in matlab (or you couldn't). 4&lt;a &amp;&amp; a&lt;5 And it also will just enter the first one it matches. So you could easily get away with if a&lt;.25 elseif a&lt;.5 elseif a&lt;.75 else end
this not the best response but you've got a typo somewhere if you didn't make a,b,c,d vectors and mutated the value each iteration eg a = a + 1 and if you used a switch case bloc it might be easier to see your code should work the way you said so it's some minor mistake that is getting you
This turned out to be it. At first I was confused about how that would be redundant, but I see now. Thanks for helping me perfect my matlab-foo.
I am glad that tutoring for over 1 year can help even those on reddit. If you have any other basic matlab questions shoot me a message with the situation and question.
Stuff like "0.25 &lt;= n &lt; .5" from the OP's code would, if it follows C conventions (which MATLAB mostly does, IIRC), evaluate from left to right. So it would be equivalent to entering "0.25 &lt;= n" followed by "ans &lt; .5". If you follow the chaining above, the test for incrementing b evaluates true only when "0.25 &lt;= n" evaluates to 0. I.e., it evaluates to "n &lt; 0.25", which is already the first condition in the if-else statement. Thus, anything that would pass the test and increment b is already going to pass the first test and exit the if-else statement. By the same logic, the test for incrementing c is actually picking up all the stuff that b is *supposed* to be testing for! I.e., it evaluates to "n &lt; 0.5", but "n &lt; 0.25" is filtered out by the first part of the if-else statement. So, it's picking up everything between 0.25 and 0.5! Anyway, it's clear that d is catching all the stuff that is being missed by the current faulty comparisons, because the part for d uses a simple else rather than "elseif n &gt;= .75". Change that and rewrite the comparisons for b and c to use &amp;&amp; comparisons, as darkscout suggests, and the program should be fine.
&gt; Stuff like "0.25 &lt;= n &lt; .5" from the OP's code would, if it follows C conventions (which MATLAB mostly does, IIRC), It WOULD, but I believe that in older versions don't always follow C convention. (That or our teacher just hated us using them).
Alright, thanks a bunch, I was getting really frustrated with this and going nowhere. I'll let you know if I make more progress.
&gt;Primarily the attributes of the markings I am interested in include the 'coordinates' of each mark within the image, and the overall area of each mark in pixels. If I could feed in an image, and have it output a table of the aforementioned attributes for each marking found, I'd be pretty ecstatic with my result. You should look at the following functions: [edge](http://www.mathworks.com/help/toolbox/images/ref/edge.html) (probably want to use canny option) [bwlabel](http://www.mathworks.com/help/toolbox/images/ref/bwlabel.html) or [bwconncomp](http://www.mathworks.com/help/toolbox/images/ref/bwconncomp.html) [regionprops](http://www.mathworks.com/help/toolbox/images/ref/regionprops.html) (look at area, filled area, and centroid) &gt;Am I missing some useful method or function for reducing the issue of the non-uniform illumination? [graythresh](http://www.mathworks.com/help/toolbox/images/ref/graythresh.html) generates a threshold that edge will take as an argument optimized for the image at hand &gt;How much easier does this process get if my pictures are higher resolution or better lit? (Do I get more bang for my buck from getting a better camera? Or should I simply focus on better lighting?) You should focus on making your shooting conditions as consistent as possible. &gt;How difficult would it be to automate\script the process (ie. I throw in an image and receive a table with the information i'm interested in?) Who knows? Try and find out. Let me know if you want me to elaborate on any of this. 
If the illumination remains constant, but non uniform, you can flat field by capturing an image with no features and then either performing an image subtraction of division operation. Alternatively, instead of capturing a background, if you have enough images, just average the image stack to 'blur' out the features and then use that as your background.
As the questions seems to have been answered, here's the non-for loop version: a = histc( rand( 1, 100 ), [ 0, 0.25, 0.5, 0.75, 1] );
edge could be your saviour here - if you have anything other than even illumination your bw thresholding will fail. However, if you do go down the edge route, you'll need to use some extra functions to join up the missing edges before filling in and putting through regionprops: bwmorph has close, thicken and thin which can be useful, and of course infill with 'holes' as the option will fill in the found edges. You'd be wise to crop out the table and tape measure before you start any of this of course. 
Script it. find_system(gcb,'ReferenceBlock',oldname) Then just loop through those and use set_param(block,'ReferenceBlock',newBlock)
I don't think it was condescending - most people posting problems on /r/matlab do not provide context to their problems, and it is often the case that the context allows for a much better solution than would otherwise present itself from the given information. For instance - without knowing the context we still can't establish with the histc function would be more efficient than using a series of if statements - which it almost certainly would be. Also, who knows if you have other optimisations that you haven't spotted yet - everyone is here because they enjoy* working with Matlab code and helping others with problems they've already solved themselves. *for a given value of enjoy
how is this matlab related? may I suggest you post this instead to /r/cheatatmathhomework
Probably because no one uses it!
In one of the matlab books, I found that if you want to compute numerical integral with infinity limit (using quad), you should use very high number instead of Inf (let's say 99999 is fine) Another option is using symbolic toolbox if you possess it, it allows using Inf as a limit
How about spending some time making a native Cocoa front end for OS X? Or a GTK+ for Linux? Because as well as it works on Windows the Java "write once use everywhere" gui absolutely blows under X11.
Gee, thanks. :P
What bugs, and have you tried reporting them?
Oh, don't worry. When your license runs out in a year you can purchase the new version!
The bugs are all due to matlab's poor figure rending for export. They have been around for years with many many attempted workarounds made by users published online. Bug may be the wrong word, fundamental design flaw may be better. I have no motivation to attempt to get this fixed, as the open source software I use works, and is responsive to changes. EDIT: Technical: the figure renderers (opengl, painter, zbuffer) all have different "limitations" for certain figure features, preventing me from creating a figure with the features I want
My company is running 2007b+... don't worry though, they're starting to switch to 2009.
Actually, thinking about this problem more, I did not describe it perfectly. * The maze is 3D * There are isolated areas and connected areas * Must solve for the total number of voxels that represent the CONNECTED areas...This includes any dead-ends that may occur, but does not include any areas that are ISOLATED from the solution. 
Why not switching to Scilab ( www.scilab.org ) ? It's fairly close to matlab (it shares some roots with matlab, back when it was a lab project) and you can quickly become quite efficient in Scilab if you know Matlab. I found it more difficult to transition to python/numpy/scipy/matplotlib I switched 10 years ago and I am quite happy about it.
The simplest way is to define `b` first: `&gt;&gt; b = 2.001` (enter) then enter the formula to see the result `&gt;&gt; (-b) + ...` (enter) then re-define `b`: `&gt;&gt; b = 4.001` (enter) then enter the formula again, (or hit the up arrow key until the formula appears again and hit enter). 
Thank you so much. so I don't actually need to define a new function?
You don't have to if you just want to know the value for those two numbers. If you want to use it repeatedly, you'd probably be better off defining a new function.
You seem to have accidentally the Reddit link. Also, if you put four spaces before an equation or code it'll format it correctly. Or for longer stuff use pastebin.com
I think I need to do this systematically. "You must write the commands for each problem into an m-file (e.g. problem2a.m). Just entering a sequence of commands at the Matlab prompt (&gt;&gt;...) and printing this out is not allowed. " How would I go about defining a new function? Thanks again
So how do I start writing this function? I want it to have an input variable of b. i keep trying function [y] = quad(b) and getting red text Thanks so much!
Under the file menu there should be a 'new' function. Or you could right click in the area where all your files are and say "new &gt; function".
Gah. Not another crummy ribbon UI! It looks awful in their promo videos. I wonder how it looks on OS X. Somehow I can only imagine it's much worse. Also note that they jumped the major version to 8.0!
Well, you're asking it to plot them so what are you telling it to do? (and please use pastebin).
I am using a script that asks the user to input various information like initial position, velocity, angle, acceleration and time. Initial position and acceleration are structures of .x and .y that are asked for seperately. The script calls on a function I wrote that uses the kinematics equation s_f = s_i + (v_i * t) + (.5 * a * t^2) I call the function in a for loop and plot that data. Any ideas on how to get rid of the noise that also got graphed? ( The small dots along a roughly x=y line.) If it would help to post my script and function code I will but do not know a good place to do so.
MATLAB isn't the first thing that comes to mind for real-time applications, though I don't doubt it's possible. Since you have a good idea of what your target signals should look like, I'd propose taking Hamming windows of the input signal and running them through a filter bank consisting of one filter centered on 500 Hz and another on 800 Hz. This is similar to the approach used in automated speech recognition, so you can find a lot of info on implementation around the web. In particular, you'll want to look at endpoint detection to find the end of the 800 Hz whine, so you know when to respond with your recording.
'Clown' is quite a scare :-) They're sample pictures that get installed with MATLAB, for use with some of the help examples
for one: vectorize ur function. take advantage of matlab's advanced matrix computing abilities. you have already done most of the work, just use the ".*" operations in your function, and replace the t^2 with t.*t (that is just one of my preferences, doesnt make much difference here) and call the function via: [positions, velocities] = kinematics(initial_position, initial velocity, acceleration, theta, times); and since you dont have to use the loop anymore, just plot it via: plot(positions.x, positions.y, 'ro') now as for the plot having dots... dont use hold on you dont need it. just use the plot command above. using hold on without further using hold off is a bad idea because it will just add more and more points to a graph that already exists rather than creating a fresh one every time. my suspicion is that you accidentally plotted x vs. x at some point and just havent created a new plot since then because you keep using hold on and never having hold off hope this helps
also, you dont need to be so wordy with your variables (just another preference of mine. if its a scientific computation and scientists will be reading the code, they will be able to intuit the meaning of the variables. if it isnt obvious, add comments. granted, you shouldnt just use "a", "b", "c", ..., arbitrarily) and you should never use clf from within a function. what if the person running the function had valuable data stored in memory? all gone. use clc if you are going to use anything here. P0.x = input('Initial x-Position: '); P0.y = input('Initial y-Position: '); v0 = input('Initial Velocity: '); theta = input('Launch Angle: '); ax = input('Acceleration in x-Direction: '); ay = input('Acceleration in y-Direction: '); tspan = input('Time span over which to calculate trajectory: '); plotopt = input('Plot trajectory? (1 = yes, 0 = no): '); if (plotopt) nsteps = input('Plot how many points?: ') - 1; else nsteps = 100; end dt = tspan/nsteps times = [0:dt:tspan]; [P,V] = kinematics(P0, v0, ax, ay, theta, times); if(plotopt) plot(P.x, P.y, 'ro') end fprintf('\nThe final x-position is: x = %f\n\n', P(end).x); fprintf('The final y-position is: y = %f\n\n', P(end).y); fprintf('The final x-velocity is: v_x = %f\n\n', V(end).x); fprintf('The final y-velocity is: v_y = %f\n\n', V(end).y);
strange, oh well for your purposes, the loop probably doesnt hurt anything. however, if you wanted to do millions of calculations, the loop would take a MUCH longer time than the vectorized operation. glad it works tho! 
This happened to me not 2 hours ago for the first time. I thought I broke something. Thanks for settling my soul. 
another tip, for the detector, make two paths, one for the 500 hz, and one for the 800 hz. set up some logic that sets some signal high when the 500 hz goes off, and then sets another signal high if the 800 hz goes off when the 500 hz detector is going off.
 t.*t Is faster. But again, prolly won't make a difference here
Thank you, sir! This all is quite helpful. I think that my supervisor is rather stuck on using MATLAB for the implementation, but the suggestions you made were helpful nonetheless!
Thanks for the response! I'll try and answer your questions as best I can. My experience with MATLAB (and that of my two partners) isn't what you'd call extensive. We're all electrical engineers, and unfortunately haven't HAD to use MATLAB in the past. We're in the process of learning it now. As for the hardware, I unfortunately don't have the specifications on hand - my supervisor already has the hardware system built and actually listens to these mating calls as they happen in real-time. He then presses a button on his laptop that releases the female response. My only job is to write a MATLAB program that automates the process and thus doesn't rely on human (my supervisor's) reaction time. The 500Hz pulse is VERY short, and the subsequent 800Hz whine generally lasts between 50-200ms. We're very worried about our sampling frequency, because as aforementioned we only have about 250ms to respond to the male before it loses interest.
As a person who does lots of Matlab at work and tries to learn Haskell at night, I find this a pretty neat little package. I can definitely verify that anonymous functions are slow, but I find them to be unbearably slow if they are closures that contain large amounts of data. At my job, I have a StructUtils class that has Filter and Map functions that operate across the (field, value) pairs of the struct. I've found them pretty useful. One question: what is the utility of apply? Whenever I have a cell array of args I do this to pass them into a function, which seems easy enough already. fxn(args{:})
Your text says T ranges from 1 to 8, but your code says it ranges from T=0 to 20. (Also, the initial values of x and y are different in your code). So when you evaluate dx/dt = y^2 / 5t, when t=0, you get infinity &amp; nans. Also, I would set `t` and `N` like this t = [Ti:h:Tf]; N = numel(t); to make sure N is a whole number. Also, the update equation for `x` should probably be a function of `y(I-1)` instead of `y(I)`, since in theory they should be updated simultaneously.
Yip this was pretty much my problem. I'd cocked up my initial conditions by getting two different problems confused. That will teach me not to do this kinda stuff on no sleep.
A\y should be faster.
and more robust.
1) You should probably do your own homework :) The command you need to use to open a .mat file is load. Type "help load" at the command prompt to learn about it Then you will have the variables from the mat file loaded into your workspace. You can then use the "save" command to save another .mat file with only those variables or all the variables in your workspace as you require. Type "help save" at the command prompt to learn how to use save. The matlab documention on worldmap is pretty detailed and graphics oriented so it is better to look at it online than from the command prompt: http://www.mathworks.com/help/map/ref/worldmap.html Note that this function is part of the mapping toolbox, so you need to have that installed. Your campus computers probably have it otherwise you wouldn't be asked to do this kind of question. Anyway you can type "ver" at the command prompt to see all the toolboxes installed, make sure mapping toolbox is listed or else you are in trouble. Here is the very first example from the mapping toolbox help. Probably good enough to get you started. (coast is the mat file that has the long and lat data in that example). Example 1 Set up a world map and draw coarse coastlines: worldmap('World') load coast plotm(lat, long) 
Please do
Oooh, didn't know this, thanks for the clarification. Appears you're right: http://www.mathworks.co.kr/matlabcentral/newsreader/view_thread/260563 There must be some way with dotting and matrix manipulation to actually linearize it, but damned if I know what it is. Have you ever worked with bsxfun? Our lab's resident code jockey uses it a lot. http://blog.accelereyes.com/blog/2010/04/05/converting-matlab-loops-to-gpu-code/
I'm not familiar with bsxfun, give it a shot with a small subset to see how well it helps. What are your thoughts on PARFOR? You have access to it? Given the huge amount of data, I would highly suggest it. It would effectively speed up your code by xNumWorkers. So on a typical PC these days you'll get ~x4 (with a little slowdown from distributing the task) but could potentially look at the doc for it to find out how to achieve more. With the new release there's distributed computing server and production server but unless you have the $$ for it (and would use it a lot) they are not really what you want.
Yeah, I've used hist before, but didn't consider it in this context. Very clever!
Thanks, working through that now, if you dont mind, I have 2 more questions: 3) using a .shp file, how do I write a program that would allow a user to input any two locations (from the .shp file i.e. cities) &amp; calculate the spherical distance &amp; the distance calculated with the default geographical ellipsoid for comparison. 4) finally, how do I then write a code to produce a line that joins these 2 locations on a map with the "plotm" function?
What are you trying to do with it? I.e., what are you using it for?
you don't need all those loops. Remove the while loop, then put a "break" in your if statement to get out of your for loop. for k = 1:N sum = sum + 1/k^2; if sum &gt;= 1.6 &amp;&amp; sum &lt;= 1.62 smat = sum; nmat = N; break; end end disp ([smat nmat])
Do those indices do any difference? I see those indices as replaced variables. Correct me if I'm wrong, but I'll try it out. Thanks!
But it still displays the max value for N, which was my problem initially. Although I see that you terminated the loop as soon as the sum hit 1.6, and that works. However, I want to continue the loop between 1.6 and 1.62 and show the value for which N applies to that sum. Thanks for your reply!
&amp;&amp; should be AND while || is OR. i think the difference between &amp; and &amp;&amp; is that &amp;&amp; doesn't even check the second term if the first is already false. i always use &amp;&amp; :) the while loop said only to increase sum if sum was less than 1.6. so when sum hit that value it didn't keep increasing in the next iterations. thus making the "if" part pointless because sum didn't change from then on. also you set nmat=N; instead of nmat=k; so it always gave you 100 no matter what. 
The indicies make a very big difference. If you do smat=1 and then look at the value for smat, it will return smat = 1 If you do smat(4)=2 then the return of smat will be 1 0 0 2 Indexes tell MatLab where in the array you want to store the value. It's not smart enough to realize what does and doesn't need to be incremented within the for loop.
i don't see why you would need an while loop at all. the sum should be increased each iteration no matter what and then the if term picks out the relevant ones. edit: ditto, yay europe :) 
Ah, ok. How about: for k = 1:N sum = sum + 1/k^2; if sum &gt;= 1.6 &amp;&amp; sum &lt;= 1.62 smat = [smat; sum]; nmat = [nmat; N]; elseif sum&gt;1.62 break; end end disp ([smat nmat])
What progress have you made on the problems? Where are you stuck? More info is helpful in trying to decide how to respond. 
 function [pr]=prime(m,n) error(nargchk(2, 2, nargin, 'struct')) if any([n,m]&lt;0) error('Inputs must be positive') end if any(mod([n,m],1)~=0) error('Inputs must be integers') end if m&gt;n error('Second input must be larger than the first') end N=m:n; pr=N(isprime(N)); Pastebin: http://pastebin.com/HnZ982rh This is off the top of my head. I don't have matlab on this computer. May have some bugs. 
this is the best solution. i was too lazy to change it to vectors yesterday, but even then it wouldn't have been as elegant. didn't know one could use L like that.
Anytime something results in a logical you can use that instead of the index to pull out the variables. So a=1:10 a(1,3,5,7,9) a([1 0 1 0 1 0 1 0 1 0]) Should result in the same thing. Now typing it out it's longer but if you're doing stuff like we are it's faster than doing a "find" on the logical array. So a=1:100 a(a&lt;45)=37 will set all values of a less than 45 to 37. You can also get really fancy. Such as if you want to throw out all data greater than 3 standard deviations away from mean. a=rand(1000,1) M=mean(a) S=std(a) a(a&lt;(m-3*S)|a&gt;(m+3*S))='' Depending on how readable I want the code sometimes I'll just put it on one line. If it's just a one off script I'm writing to test something things can get ugly. a(a&lt;(mean(a)-3*std(a))|a&gt;(mean(a)+3*std(a))) 
cool, thanks
Unfortunately I am not allowed to use the built in functions, but I ended up figuring them out anyway, thanks for the help and advice though!
Ended up asking for help from a TA, thanks though!
I'm a bit confused about what you are discussing. My familiarity with finite difference method is from modelling - namely, it's a method used to solve differential equations with reasonably rectangular boundaries. If Y is a function of X, there's no reason to solve a DE, you already have the function. I think we'll need more info here.... As for your other question, I find the matlab help to be pretty good and google to be even better for solving matlab problems. A few things: X.*Y is the command for multiplying each element of X with the corresponding element in Y - this is what the '.' does; here, the size of X and Y must be equal X*Y this is vector/matrix multiplication; if X is n by m, then Y must be m by n You can change * for other operations like ^ or /. I hope this gives you just a taste of what you need.
First thing I saw was the absence of indices. But also I think you need to reset your sum variable to 0 somewhere, either first or last in the first for-loop.
not exactly sure what you want to do but usually for finite differences you build an "difference matrix(?)" its an diagonal matrix based on whatever scheme you are using. the toepliz function is usefull for this. below is an example with an 2nd order central difference scheme. D=(1/(2*h))*toeplitz([0;-1;zeros(N-3,1);1],[0,1,zeros(1,N-3),-1]); edit: for example: N=1000; L=2*pi; h=L/N; x=linspace(0,L,N); D=(1/(2*h))*toeplitz([0;-1;zeros(N-3,1);1],[0,1,zeros(1,N-3),-1]); y=sin(x); dy=D*y'; plot(x,dy); 
A pretty straightforward implementation of a first-order central differencing scheme is given below. It implements forward- and backward-differencing at the boundaries where the finite differencing stencil exceeds the vector index. N=length(X); dYdX=zeros(1,N); for i=1:N if i==1 dYdX(i)=((Y(i+1)-Y(i))/(X(i+1)-X(i))); elseif i==N dYdX(i)=((Y(i)-Y(i-1))/(X(i)-X(i-1))); else dYdX(i)=((Y(i+1)-Y(i-1))/(X(i+1)-X(i-1))); end end plot(X,dYdX); 
You might be able to use [polyfit](http://www.mathworks.com/help/matlab/ref/polyfit.html) to come up with a polynomial expression for the data points. After that you can use the [polyxpoly](http://www.mathworks.com/help/map/ref/polyxpoly.html;jsessionid=af08631d7cf0e532880a45ba15a8) to find the intersecting point.
Can I just say that your assignment is completely right. If you are using for loops in Matlab you are doing it wrong. A vectorized code will run faster as long as you have to ram. &lt;/rant&gt; Odds are you won't be able to use the if format. If you post the bit of code you're having trouble with I might be able to help.
I assume you will need to use the "any" and "all" functions. Without any other clue as to what you are trying to achieve I feel like we wont be of any more use here.
I can give you a hint. You can return the indices of a vector like so. X(X &gt; 5) Returns all the indices where x &gt; 5 I think.
It has gotten better, but vectorization will still almost always be faster. On the other hand, it's often worth coding your inner-most chunk in C or Fortran as a mex function, if you care about speed. 
One general comment that might be useful to you. You can compute FFTs with data that is not on a uniform grid, and get DTFT samples off the grid, in a fast manner using so called Non-Uniform FFT (NUFFT) algorithms. Not sure what all you are trying to do, but these techniques can be very handy in some applications. There is code out there on the web. 
Haha! Where did you find this?
compressing austinEd's a bit: tf = x &gt; d; mass = ( 2*k_1 + ( tf.*k_2 ) ) .* x; .* is the elementwise operator, so k_2(i) is only added if tf(i) is 1, ie if x(i)&gt;d(i). *edit, wait, only x is a vector? in which case tf = x &gt; d; mass = ( 2*k_1 + ( tf * k_2 ) ) .* x; will work
check out arrayfun or cellfun. 
You need ./ since T is an array. K=[k_initial*exp(-Q./(R*T))] This fix will let you run the code without any error but I don't believe that the column of answers it gives is what you are looking for.
K has no value prior to the line. I am trying to turn it into a vector (I think) by incorporating the vector(array?) T.
It seems like normxcorr2 is a bit of overkill, especially since you probably don't need to check the extraneous boundaries such as the bottom right pixel in the 3x3 template matching the top left pixel in the 3xN image2 submatrix. Since you're only trying to find the position of the maximum correlation, as opposed to the correlation value itself, why not use something like a sum squared error instead? In this case, you can perform a single sse at the start, for each row. Then for each window, the squared errors have already been calculated and you just need to sum them up and find the max location. Check out the box filter on how to do this quickly. Also, you haven't given any code, so we don't know what you have already vectorized, or other areas available for optimization. For example, do you read image2's row at the inner loop or the outer loop? How do you find where the max is? Based on your algorithm I'm assuming you're only interested in the horizontal disparity. You might be trying to solve something other than what your algorithm aludes to, so some other things you might want to check out: [disparity](http://www.mathworks.com.au/help/vision/ref/disparity.html), [xcorr2](http://www.mathworks.com.au/help/signal/ref/xcorr2.html). 
I signed up. could be good.
I would highly recommend creating MEX implementation of the function, or using similar existing function (maybe disparity as zsakuL suggested). If you need to make this function with pure MATLAB, you could try these optimizations: * Transpose the images and search best matching row for each column. This makes traversing the memory much more cache friendly and will probably give you quite good speed boost. Also change order of the for loops to: for column: for row, where column is column of transposed image. * Instead of normxcorr2, you could try if it would be faster to calculate the normalized correlation by separating it to few point wise matrix operations (this closest thing to vectorization I can think of). For example sum of pixel neighborhood is just convolution of the image with ones(3), and this result can be reused for each pixel in the row/column. Only heavy operation would be convolution of the row neighborhoods with the particular 3x3 template for which the maximum correlation is searched. 
Wait. So you want to do a normxcorr2 between two 3x3 images (which are just small ROIs) at a time over a large number of such ROIs? Can you explain more about why you do this? Normxcorr2 while useful is not a very efficient function IMO, I think you can override that and write the same functionality via more efficient code, which should cut down on the time. First though we will probably need to see what you want to achieve by this code..
[Here is some test code](http://pastebin.com/yu3rVnLK). First optimization did not speed up the code very much. The second one is about 40 times faster, but the code seems to have a bug which affects the accuracy of the normalized cross correlation. Sorry about the messy code.
FYI the dot means 'do this to each element separately'. Without it, matlab tries to do matrix division, which requires the matrices to be the same size. Works with other operators too. http://www.mathworks.co.uk/help/matlab/ref/arithmeticoperators.html
Because the error reads "Invalid shapefile" that tells me it is in the wrong format or it isn't there. Is this new to MATLAB? I don't have it in ver. 2009b
It's definitely available, a mate of mine working on the same thing was able to get it working, but we both agree, that our code in the respect of the shapefile is identical
 K=[k_initial*exp(-Q./(R*T))] 
[Here is an example of the current output.](http://imgur.com/bepPF) Many of the vehicles have found their way outside of the desired square region of [0,400] X [0,400].
I think you intend to model z = a*exp(b*x), and you're trying to find a and b. You can take log of both sides and get a linear model ln(z) = ln(a)+ b*x, and use linear regression. You already have z and can compute ln(z). The rest is just matlab syntax. You want [x(i) 1]*[b; ln(a)] = log(z(i)) for all i. So stacking up, you can do X = [x0 1; 32.1 1; 57.4 1]; lnZ = log([z0 avg1 avg2]); Then you can solve X*parameters= lnZ, where parameters = [b; ln(a)], using the backslash operator (which does a least squares fit): parameters = X\lnZ; b = parameters(1); lna = parameters(2); a = exp(lna); Now see if it worked! clf plot(x,z,'ks-') hold on plot(1:100,a*exp(b*(1:100)),'-') 
awesome thanks
1. The square brackets create an array 2. the bit_stream component: I am guessing that bit_stream is an array, bit_stream(ii) therefore displays the element indexed with ii, and (bit_stream(ii)==0) should return 1 or 0 depending on if the statement (..) is true or not 3. [time t] creates a matrix/vector with the elements time and t. To be more specific I would need to know the size of matrix/arrays time and t
To expand on the "==" stuff, the code that OP posted is using [logical indexing](http://www.mathworks.com/company/newsletters/articles/Matrix-Indexing-in-MATLAB/matrix.html). This is a quick way to "filter" out parts of arrays in MATLAB.
Think of it this way. a = [0 1 2] returns: a = 0 1 2 Then a = [a 3 4 5] Returns a = 0 1 2 3 4 5 etc..
So it's simply concatenation? Well, that explains it. Thanks.
Thanks for the explanation. I am a beginner in MATLAB though I do a lot of C++ and Java. I always get those brackets mixed up.
A postdoc in my lab had it. I think he got it from a Mathworks seminar too. I also think he once told me that he found a bug in one of Matlab's functions, he reported it, and they sent him a Mathworks t-shirt! I've been trying really hard to find a bug so that I can get one too.
Done, thanks!
Any help would be greatly appreciated.
This code runs just fine on my machine. Can you elaborate on the problem you are having? Also, use pastebin (website) or code formatting (see the little formatting help box below the text entry windows on reddit) so that reddit doesn't mess up your code. 
Previous definitions interfering, probably.
Maybe you can use switch. k=1 p=1 while k=1 switch p case 1 %somefunction p=2 case 2 %somefunction p=1 end end Basically 'p' is the player, and when a player is done executing a function you change 'p' to the other player. 'k' would be the turns, right here i just assumed infinite turns. You can use for loops if there is a specific amount of turns.
Yes I tried something like that with for loops. It seems to work but it does not seem optimal.
You might try the "circshift" function. It will shift the elements of an array circularly. So [1 2 3 4 5] can then become (depending on your input arguments) [2 3 4 5 1] You can circshift each time a player makes a move, and the player whose move it is will then always be in index 1.
In matlab the best speed is achieved by avoiding for loops or logic statements, have a look at the solutions posted below.
Sorry, formatting issues! football=@(x) xXtan(theta)-(((0.5)X(x^2)*g)/(v0^2))X(1/(cos(theta))^2)+hq; v0=50; g=32.2; x=60; hq=6.5; hR=7; TolMax=.0001 a=2; b=3; imax=20; TolMax=0.00001; fa = football(a); fb = football(b); n=(log(b-a)-log(TolMax))/log(2) if fa*fb&gt;0 disp('Error: function has the same sign at points a and b (same side of the solution)') for i = 1:imax xNS=(a+b)/2; toli=(b-a)/2; FxNS=F(xNS); fprintf('%3i %11.6f %11.6f %11.6f %11.6f %11.6f\n', i, a, b, xNS, FxNS, TolMax) if FxNS==0 fprintf('An exact solution x=%11.6f was found', xNS) break end if toli&lt;TolMax break end if i==imax fprintf('solution was not obtained in %i iterations', imax) break end if fa*FxNS&lt;0 b=xNS; else a=xNS; end end end end function [theta] = football( x, v0, g, hq ) y=x*tan(theta)-(((0.5)*(x^2)*g)/(v0^2))*(1/(cos(theta))^2)+hq; end 
Also, I think you can remove all the "(cantilever, cantileverder,Xest, Err, imax)" at the top after NewtonRootMethod. That stuff would be there if the function were reading in the variables when it was called. But you are setting them all in the function. As a former structural engineer I can tell you, if you don't find the maximum deflection is at the end of the cantilever, you did something wrong.
Matlab always tells you exactly what is going wrong. And in both of these posts I can't suggest anything but quit being lazy. How is football supposed to return Theta if you have it in the equation? How is it supposed to use theta if it's undefined?
Thanks for the input, I was definitely getting the deflection wrong...
Thanks for the response, I promise you I spent several hours on these problems before turning to reddit for help, I'm not the smartest student, but I'm trying to grasp these concepts. I should probably try to relearn some basics of matlab, because in these situations, I am simply not knowledgeable enough to even use the error messages to my advantage. 
FIGURED IT OUT!! open myfile.exe; pause(0.2) %to let the program load import java.awt.Robot; COMMANDS = Robot; COMMANDS.keyPress(java.awt.event.KeyEvent.VK_4) COMMANDS.keyRelease(java.awt.event.KeyEvent.VK_4) pause(.2) COMMANDS.keyPress(java.awt.event.KeyEvent.VK_ENTER) COMMANDS.keyRelease(java.awt.event.KeyEvent.VK_ENTER) pause(.2) and so on . . . . v
Start your code with a 'clear' in the future. It essentially resets matlab and gets rid of any already defined parameters/vectors/etc.
Don't get the point of being "certified" for anyone other than in a teaching profession that would be teaching others. Sure its good to know the program, but being actually *certified* in it seems pointless.
I'm amazed by your genius, sir! That was damn epic. [My reaction upon reading this](http://i.imgur.com/SUuXts.jpg)
I would put this on the same page as CAD program certifications. It's essentially a method for employers to differentiate if you actually know it versus just putting it on your resume. For a lot of jobs, this won't be a big deal. However, there may be some positions (probably not entry level) where knowing MATLAB in and out is essential and it may be useful. Perhaps most important, you can probably get an employer to pay for something like this. Paying for it yourself would be very expensive.
Thank you very much. That helped tremendously 
 function y = colranked(x); y=0.*x; N=size(x,2); for i=1:N y(:,i)=i.*x(:,i); end end 
clear all bdclose all fclose all close all I have all of the above in a function called 'newprob'. Which when I start working on a new problem I run. (I stole the name from the TI-89 function that does similar things).
This one is good: http://projecteuler.net For matlab, I like to do each problem two ways - one with just mathematical know-how and solving, and another using specialized Matlab functions to increase my familiarity with the function database.
Why not expanding your Matlab-fu to new horizons like Scilab ( http://www.scilab.org/ ) ? It is similar to Matlab in nature but is different in the details. You could try to port some modules you like from Matlab to Scilab. This way, you get a broader picture of the common base in Matlab and Scilab ans you can add a new line in your vitae...
I haven't used it enough to say whether or not it would be worth your time, but you might want to check out: http://www.mathworks.com/matlabcentral/cody 
Holy awesome! Thanks!
How is this different than F10?
I guess it's different in that I didn't know about F10...
Pretty much Cody. It'll make you a much better coder.
I keep a folder called "myfunctions" on my laptop and have it synched to my lab computer and clusters. Inside it, I put any useful code that I've created or found over the years. In my startup.m I have addpath('myfunctions') so that no matter what computer I'm using, I always have my personal arsenal of functions.
These are pretty simple, but I like to add two scripts to my default Matlab directory: caca.m and crap.m caca.m is 'clear all; close all;'... nothing fancy but I save lots of keystrokes that way crap.m is similar, short for Clear, Rehash, And Pack... use it all the time to restore Matlab to something close to a just-launched state (e.g., if I have recently allocated a bunch of memory and had the script crash). 'clear all; close all; rehash; pack;' I know rehash isn't needed that often, but it doesn't hurt and it makes my acronyms more amusing. I know, I'm juvenile...
Ok, thanks very much. I was starting to think nobody knew what it was.....
its pretty annoying because its so time consuming
I hear ya, even the first one was giving me problems. I had the right code and everything, but for some reason retyping it fixed it for me.
Pretty simple: you're calculating the numerical approximation of the function at 9 points between the boundaries. So, in the for loop, you are approximating the value at each of the nine points and then calculating the difference between the previous approximation and the current one. The "magic" happens when you write h to h_old; this stores your previous approximation for the next run through the loop so that you can compare the two approximations and calculate the tolerance. This code assumes convergence, because there's nothing to check to see if the tolerance is growing, rather than shrinking. The "convergence" condition is if your last approximation is within 1e-6 of the current approximation. And if you're unsure of the whole finite difference method, I'd check your text book, wikipedia, or Wolfram's MathWorld.
And that's why I should hit refresh one last time before I post any help, your post is way more clearly written than mine. Have an upvote!
Thank you! I was having trouble understanding what was happening with the h_old vector, and why it's set equal to the h vector at the end of the loop. This clears up the confusion for me!
I think you need to be clearer about what you want help on. What is the problem you are having? How to use function handles? What do you mean that you can use it with an "exact" function but not with a random function? Why is "a" an input argument, but on the second line you assign it to something else entirely?
pastebin.com
Thousands separator in the Workspace table: http://undocumentedmatlab.com/blog/customizing-matlabs-workspace-table/
Personal way to do things that need to take multiple inputs. Make it recursive. Loop through the inputs and call the function again. Edit: Not on my phone any more. At a beginning do a: if iscell(input) for i=numel(input) output(i)=InteriorAngle(input{i}) end return end And then drop the curly brackets on the switch statement. Also, doing curly brackets is the matlab way of doing multiple inputs into a case statement. Oh, and the reason it's crashing matlab and locking it up is because you have a recursive argument. Everytime it reaches the switch statement, it goes back and runs the script again which just goes back and run the script again until your program is locked up. function output = InteriorAngle(varargin) % Determine the interior angle for different types of multisided objects. % Can be called with multiple inputs or a cell of objects. % % Example: % output=InteriorAngle('triangle') % output = % 180 % % output=InpteriorAngle('triangle','square','pentagon') % output = % 180 360 540 % % output=InpteriorAngle({'triangle','square','pentagon','triangle','triangle','decagon','dodecahedron'}) % output= % 180 360 540 180 180 1260 0 if iscell(varargin{1}) varargin=varargin{1}; end if numel(varargin)&gt;1 output=zeros(1,numel(varargin)); for i=1:numel(varargin) output(i)=feval(mfilename,varargin{i}); end return; else input=varargin{1}; end % http://www.reddit.com/r/matlab/comments/113o2b/helpmy_function_is_crashing_matlab/ switch input case 'triangle' output=180; case 'square' output=360; case 'pentagon' output=540; case 'hexagon' output=720; case 'heptagon' output=900; case 'octagon' output=1080; case 'decagon' output=1260; otherwise output=0; end
yeah I went for a walk and I figured it out like 30 mins ago. The problem was that when I put them together it'd give me a matrix of 6x1. But then I used reshape and reshaped it to a 2x3 matrix
Why not just do it the right way and cut down on code? 
I think you want to change switch InteriorAngle(input) to switch input otherwise you're just recursively calling the function within itself immediately and never returning. You're probably reaching a recursion limit or hitting the computers stack limit and crashing. 
because I didn't feel like flipping through the book to find it :/
But you managed to find reshape? Knowing how to correctly format matrices is going to come in a whole lot of help. [rand(2,1) 10*rand(2,1) floor(15*rand(2,1))+5]
V is a constant (voltage) g is a user inputted resistance for resistor 1*0.01 h is the resistance from above *10 Thankyou for your feedback! I figured it out though. Scrappy_dude's suggestion worked :) 
I'll make a note of that. I knew I had to vectorize something, but I couldn't remember how/which variable to vectorize; so then I asked you guys.
This.
Thanks so much! Now that you've said it, I definitely get why this would be an issue. Thing is, I never would have figured that out myself...matlab just isn't clicking for me =/
There's also the **home** command which clears out the command window, but retains the scrollback buffer.
It should work: fname = 'my_custom_file.txt'; fid = fopen(fname); *just don't put ticks (') around the variable's name*
http://www.reddit.com/r/matlab/comments/113o2b/helpmy_function_is_crashing_matlab/c6j0u6z
You could just practice with random integers and check your work with Matlab's dec2bin function (or bin2dec for the other way).
You can [ask google](https://www.google.com/search?q=85+in+binary).
Another fun thing to expand to is binary decimal (yea probably not the right word, but 0.125 and the likes) numbers. Still f*cks me up when I try to figure it out. EDIT: 0.125 is easy (0.001) but 0.2, that will f*ck you up man!
if you want to get better at matlab, you can try using the Cody online tutorials: http://www.mathworks.com/matlabcentral/about/cody/ They are a series of increasingly difficult puzzles to solve using matlab. pretty fun.
[What Every Computer Scientist Should Know About Floating-Point Arithmetic](http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html)
I ran what you wrote, it worked perfectly! I really appreciate it. I'm heading out right now unfortunately, but I might want to pick your brain later on what exactly this program is doing later. Thanks again!
No problem, was gonna write an explanation but trying to finish a paper at 7am here, so I will let you look it over and fill in the blanks after work.
sorry its a mess i copied and pasted it from my Matlab program. basically i have a set of wells. I wanted to create a contour plot that shows that rise and fall of the water elevations over time. 
Thanks so much for putting up the screen shot. It's fine that you dont have access to Matlab at the moment. Whenever you are ready I can email you the original file. Thanks so much for your help. Also another question I have is how do you convert the data and time to appear as a date and time in Matlab from excel? I guess when you see the excel file you'll see how I sorta had to bend things a bit to make things work. Thanks again.
What's your equation of motion? I am familiar with the dynamics you're talking about but I'm having a bit of trouble following what you've coded. Am I correct in stating that you are trying to plot the displacement response? And are you familiar at all with state-space methods? If not, I think you might would be a bit more intuitive than what you're doing. 
both work fine for me.
Maybe you're missing a toolbox.
Hey, thanks for the reply. With Alcebiades suggestion, [here](http://pastebin.com/sd2BGjBG) is my full code so far. The general equation of motion for a system with Coulomb damping for half cycles between time when velocity is zero is x(t) = A1*sin(wn*t) +/- uk*N/k depending on which direction the motion will be going next. I am trying to plot displacement, but I'm not familiar with state-space methods. I'll do a little research and see what I can find. Thanks for the suggestion.
I'll give you a brief summary. State space is essentially taking one equation of 2nd or higher order and making it into several equations that are 1st order and dependent on each other. For instance, the differential equation for your system should look something like this: x''+(uk*N/m)*sign(x')+wn^2 *x=0 (I think you have uk*N/k in your code, but I am fairly certain uk*N/m is correct) With the differential equation above, you could introduce a variable "v", where v=x'. That gives you one first order equation. You can make a second equation, then, by taking v'=x''=-(uk*N/m)*sign(v)-wn^2*x This doesn't seem like anything big, but what you have now is a pair of equations that tell you, for every velocity/position pair, exactly how velocity and position are changing with respect to time. That makes it incredibly easy to simulate your system without having to solve it analytically. For example, using a time march, you can solve for x(t) and v(t) with: x(t+dt)=x(t)+dt*x'(t) v(t+dt)=v(t)+dt*v'(t) Coded in Matlab, it would look something like this: % Parameters: wn=5;N=1;m=1;uk=1; x0=1; v0=0; dt=0.001;duration=10;steps=duration/dt+1; t=0:dt:duration; % Time march: x=zeros(1,steps);v=zeros(1,steps); x(1)=x0;v(1)=v0; for i=2:steps x(i)=x(i-1)+dt*v(i-1); v(i)=v(i-1)-dt*(wn^2*x(i-1)+(uk*N/m)*sign(v(i-1))); end % State-Space plot (velocity against position) subplot(1,2,1) plot(x,v) % Time-displacement plot subplot(1,2,2) plot(t,x) I don't have Matlab on my laptop so I can't test that at the moment, but give it a shot.
Also, looking over your code, you may be interested in two functions: ceil(x) is a rounding function that specifically rounds up (its counterpart is floor(x), for rounding down), and sign(x), which simply takes the sign of x (output is 1 for positive, 0 for 0 and -1 for negative).
its 2011a, so I guess that explains why the symbolic parts aren't working. However if I try to do it by directly calling a function it gives the same error. When you do something like gradient(@functionname) where I have a .m file function I still get the same error. Edit: I guess even using gradient(@functionname) is still asking it to solve symbolically.
If you look at the documentation of the gradient function in 2011a, you'll see that it'll only calculate the numerical gradient of a matrix. It doesn't handle symbolic objects or function handles.
I should also mention that you can use jacobian in 2011a to get the answer you're looking for. 
In the MATLAB editor, go to: File-&gt;Page Setup On the [FONTS tab](http://i.imgur.com/eBkVO.png) you can change which font is used to print your code. The setupin that link printed pretty well for me.
this is a late reply, but whenever i make growing arrays, matlab generally lets me know its not a good practice. a better way would be to determine how big 'I' will need to be before you run the loop.
make sure you are familiar with linear algebra (Khan is great for this), and work through the initial tutorials already in the documentation (magic square everything). it seems like for all of the topics you mention, the built-in tutorials are great. of course, if this is below you, then i don't know anything off hand that would work well. i tend to look for examples and work through them.
open it up an assign it a handle. Then use the "set" function to change the font sizes. Something like h=open('figurename.fig'); set(h,'FontSize',12)
http://www.mathworks.com/help/matlab/examples/index.html MATLAB doc videos. The Mathworks have some killer documentation. Take advantage of it. Videos, long extended demos/examples, excellent function doc. get familiar with the online "Doc Center". There's a ton of excellent content here.
The sidebar on the right-hand-side has something called [I wrote a basic MATLAB crash course (pdf)](http://dl-web.dropbox.com/u/22654/matlabcrash.pdf). Sounds like what you're looking for.
The log spacing in the plot is a mode of the axes object. I don't see the log data residing inside any of the objects. If you want to try this, use the inspector: h = semilogx(abs(fft(signal))) inspect(h) % the line properties inspect(gcf) % the figure properties inspect(gca) % the axes properties If you want log data, just use math and make log data: x = (1:length(signal))'; y = abs(fft(signal)); plot(x,y) and to make the ticks logarithmically spaced, do this: set(gca, 'XTick', log10([1:10, 20:10:100, 200:100:1000, 2000:1000:10000])) set(gca, 'XTickLabel', {0,'','','','','','','','','',10,'','','','','','','','','',100,'','','','','','','','','',1000,'','','','','','','','','',10000})
I read your reply in [Manny's voice](http://www.youtube.com/watch?feature=player_detailpage&amp;v=yIgqjTN9_TE#t=114s) I'll try that, thanks
&gt; for loop Boo! 
yeah I know about the argument to logspace... which seems a weird way to put it to me. But yes, my problem here is that the data I get get isn't long enough for do this scale conversion post-fft I guess
mate thanks tonnes! That's done the trick. Did a bit of tinkering to make it work in my system. Your completeness really helped! Ah, so happy to understand and be confident with that aspect of my code now. I had something working before that did *something* but this is much better!
I have to use the other form that uses, a0,an and bn. Found here: http://universe-review.ca/I13-15-FourierSeries.jpg
Same difference: A(1)cos(1iwt)+A(2)cos(1i2wt)+A(3)cos(1i3w*t)
I fixed the issue without realizing this, but you're right. The C should have been pre-multiplied, not post.
http://www.ae.illinois.edu/m-selig/ads/coord_database.html Any of these .dat files is a typical way of storing airfoils. [1,0] is the trailing edge. The coordinates then sweep over the upper surface to the leading edge at [0,0]. Then the coords sweep the lower surface (negative y-values) to the TE again. 
This is exactly what I was looking for. Thanks. 
Is that your actual code? It doesn't run at all... there are a lot of minor issues which you can debug yourself easily. Once you've gone through these by following the problems thrown up in the command window, I'll be happy to look at it :)
 epsilon=input('Enter number between 1 and 5') x_array = -2*pi:.001:2*pi; Real=sin(x_array); Approx_Sum = zeros(1,length(x_array)); epsilon = 10^(-epsilon*10) Tay_Count=0; while max(abs(Approx_Sum(1)-Real(1))) &gt; epsilon Tay_Count=Tay_Count+1; Approx_Sum_add = (x_array.^(2*Tay_Count-1))/factorial(2*Tay_Count-1); Approx_Sum = Approx_Sum + ((-1)^(Tay_Count)).*Approx_Sum_add; end plot(x_array,Real,'r',x_array,Approx_Sum,'b')
Ah cheers, sorry about that swmrh91.
As a followup, I'm assuming your username is a BTBAM reference and if so, good on you my friend.
The confusing point of the problem is that I must receive an input epsilon that can be any number between 0-5. I am supposed to compare at every single point, but if we try to define some n vector MATLAB seems to overflow its stack. However we have tried the Approx_Sum = x_array and sadly the graph then zeros out for the approximation. So we are still befuddled. And truly thank you so much, this has been a problem we have been working on for several days with no avail.
Oh right, sorry I had also found some other mistakes. You were using n - 1, for example, when you should have been using n + 1. Here, take a look at the code I modified to make the approximation work: epsilon=input('Enter number between 1 and 5') x_array = -2*pi:.001:2*pi; Real=sin(x_array); Approx_Sum = x_array; epsilon = 10^(-epsilon*10) Tay_Count=1; while max(abs(Approx_Sum(1)-Real(1))) &gt; epsilon Approx_Sum_add = (((-1)^(Tay_Count))/factorial(2*Tay_Count+1)).*(x_array.^(2*Tay_Count+1)); Approx_Sum = Approx_Sum + Approx_Sum_add; Tay_Count=Tay_Count+1; end plot(x_array,Real,'r',x_array,Approx_Sum,'b')
Thank you, thank you, thank you!!
Thanks for your help! baby.mp4 is stored in the right folder. I used the command you suggested in the command line, and got this: Undefined function or variable 'dataDir'. Also, I am using matlabR2012b (trial version). 
Ahh I forgott to mention you need this part as well... the one at the top, sorry about that dataDir = './data'; resultsDir = 'ResultsSIGGRAPH2012'; mkdir(resultsDir); 
Thanks again. Tried that, now I'm getting the exact same error message as in the original post. Processing ./data/baby.mp4 Warning: No video frames were written to this file. The file may be invalid. In VideoWriter.VideoWriter&gt;VideoWriter.close at 289 In VideoWriter.VideoWriter&gt;VideoWriter.delete at 238 Invalid MEX-file '/Users/ryanstclair/Downloads/EVM_Matlab/matlabPyrTools/corrDn.mexmaci64': dlopen(/Users/ryanstclair/Downloads/EVM_Matlab/matlabPyrTools/corrDn.mexmaci64, 1): no suitable image found. Did find: /Users/ryanstclair/Downloads/EVM_Matlab/matlabPyrTools/corrDn.mexmaci64: file too short Error in buildLpyr (line 87) lo = corrDn(im, filt1', edges, [1 2], [1 1]); Error in amplify_spatial_lpyr_temporal_iir (line 57) [pyr,pind] = buildLpyr(frame(:,:,1),'auto');
repmat
I was able to find out exactly how to use it with the function browser, but once again thanks for helping me find the function I needed
Yeah I got hung up on the fact that I used values from 0 to 4pi to get my zeros in excel. I feel pretty silly now haha. Thanks for the help though I really do appreciate it. And yes, it's definitely a BTBAM reference and Periphery is also awesome!
The only thing to worry about with imagesc is that every time you call it it will rescale the colormap to fit the max and min of your data. If you are plotting data at different times or whatever that might be a problem. 
I get the rotor position of the motor. And I have to trigger currents based on the output of the second PI controller in 60 degree segments. So 0-60 give a pattern, 60-120 another pattern of switching signals. Rem(radtodeg(pos),360) to account for multiples of 360. Then I divide it by 60 to assign a sector, 0:0-60 1:60-120 and so on. Fix is so I can get a whole number
I tried that and It still seems like it is trying to print on a larger piece of paper. It cuts off the title at the edge of the page and the letters are still big. Is there somewhere to change the paper size? It used to print just fine, and one day it just decided it was going to do this to me.
Thanks. I actually had a bit of trouble with seeing little color change due to my low starting temperature, I will try imagesc.
How are you changing the function? Anonymous function handles or by actually modifying the text of the .m file?
No, matlab will run the old version. This is because the new code isn't compiled, nor saved, until you run the program. Just because you change something in the editor doesn't mean that the m-file changes at the same time. Hope this is what you wanted to know.
Good point. Luckily, imagesc allows you to specify the color range across which you'd like to apply your colormap: x = 10*rand(5); y = 20*rand(5); imagesc(x,[0 20]), colorbar figure, imagesc(y, [0, 20]), colorbar 
That half second or two blip it takes before running your code is it recompiling the m-code to 'native'. Notice if you have a very long function the first time you run it it takes a while longer than subsequent runs?
You should look at the `eval` function: http://www.mathworks.co.uk/help/matlab/ref/eval.html
Do you have a script file that is like this: a=function(1); b=function(2); c=function(3); and you are saying that while it runs "function" with parameter=1 you changed the function.m file and saved it? I do think that when the script goes to the next line and runs b=function(2) it will use the new function.m.
checking over the code- will this loop actually sort the elipses in size order before drawing/exporting? That is mostly what I'm having difficulty with.
No, the loop doesn't sort the ellipses. I've added some code which takes care of that: resolution = 1000; % resolution for elipse n = 6; % number of elipses to draw minA = 1; maxA = 10; % upper and lower bounds along x minB = 1; maxB = 10; % upper and lower bounds along y theta = linspace(0, 2*pi, resolution); % parameter x = cos(theta); x = repmat(x, n, 1); % circle x coords y = sin(theta); y = repmat(y, n, 1); % -"- y coords xstretch = minA + (maxA - minA)*rand(n, 1); %random factors ystretch = minB + (maxB - minB)*rand(n, 1); x = bsxfun(@times, x, xstretch); %stretching &amp; compressing y = bsxfun(@times, y, ystretch); areas = pi*xstretch.*ystretch; % calculate areas [~, order] = sort(areas); % get order (smallest to largest) order = order'; % this is important for the FOR loop %% alternatively you can rearrange the coordinates as follows: % x = x(order, :); y = y(order, :); % then the loop will have the following form % for i = 1:n % ... % end %% figure, % open figure window and configure for best results set(gcf, 'Units','normalized','PaperType', 'A4', 'Position', [0 0 1 1],... 'PaperOrientation', 'landscape', 'PaperUnits', 'normalized',... 'PaperPosition', [0.05 0.05 0.9 0.9], 'Color', [1 1 1]), mx = max([maxA, maxB]); axis([-1, 1, -1, 1]*mx), axis equal, axis off, %set axes hold all, j = 1; % index of elipse (in a list ordered by area) for i = order % loop iterates over the values in the array xy = [x(i, :); y(i, :)]; % coords of elipse i phi = 2*pi*rand(); % random rotation angle R = [cos(phi), -sin(phi); sin(phi), cos(phi)]; % rotation matrix xy = R*xy; % rotate elipse plot(xy(1, :), xy(2, :), '-', 'linewidth', 2), % draw ith elipse print(gcf, '-dpdf', sprintf('elipse%d', j)), % write to file j = j + 1; % unfortunately matlab doesn't have a ++ operator end
Go back to your account page and download it again. 
perfect, the code works. much obliged for your help
agentq512 nailed it...but I'll expand a little. Changing the colorbar or colormap is pretty simple. There are several color spectrums native to matlab... http://matlab.izmiran.ru/help/techdoc/ref/colormap.gif just call it like you normally would, with the color scheme in parens Finally, perhaps something like pcolor or contourf or contour would also be helpful in visualizing this data. Setting Clim to certain limits set(gca,'climmode','manual','clim',[minval maxval]); will allow you to create multiple maps that are comparable as they will have the same color scale
But how do I deactivate Matlab on my first computer so that I can activate it on my new one?
I'm not aware of anything you can look at to tell other than the results (maybe think about adding a line to the results that tells what version ran). What happens is, MATLAB compiles the code of "function" at the time you run it, at that point it is set. Any change you make after it starts running won't affect the model you've already started. But a script file like the one I show is just running the function 3 separate times, so MATLAB compiles it 3 times and any changes along the way will be picked up by the next run. That's different from if you had a program that called a function 3 times within it. In that case, when you start the program the function is compiled by MATLAB and it won't matter if you change it till the next run of the program. 
Audio book? 
If you just want to get the data in (even though it'll be in columns), you can still use textscan, just have enough %s for the longest row. It'll automatically fill the missing data with empty values. Another option: for ii = 1:numrows a(ii,:) = textscan(fid,'%s',maxColumns,'Delimiter',';'); end this will read in the data row by row, but each row will be stored in a separate cell and they won't have the same length. The method you choose will depend on what you want to do with the data... usually it makes sense to keep it in columns. edit: formatting
Thanks I figured it out.
Thanks for the answer! This hinges on me knowing the max number of columns, which I don't necessarily know. I know I can guess or use some silly high number, but the main intent of my question is to find out if there's something robust enough to accommodate a data set where I don't have any idea of the shape of the data.
Thank you for the help I havent had the chance to try it out yet, but I'll find out later tonight.
&gt; matlab code tricks, discussion, questions; but we don't do your homework!
You can't. You have to actually create the function that leads to the built in function
Okay thanks for the help. 
Then I assume you can't use sort() ? If not, you need to sort the inputs first. There are many different sorting functions, does your prof want you to write one?
Using this works for the max altitude, but the time being spit out is not in the interval.
Are 'vector' and 'time' the same length?
Ah, in that case use one of these: http://www.mathworks.com/matlabcentral/fileexchange/10946-readtext http://www.mathworks.com/matlabcentral/fileexchange/9034 I haven't tried the second one, but the first one does what you want. Just type a = readtext(filename,';')
 if x &gt; 0 if round(x)==x if isprime(x)
do i just type this into the input function???
They're hints. Not the solution.
We have to write the function for the sort function for the built in min()
thank you so much!!!
thanks for the start :)
It's what I did in the end :P Cheers. 
I'm not necessarily disagreeing with you, but why should it be forbidden?
That does indeed seem like a overly non-transparent way of doing it. I just hope the referees somehow get to check to code.
Assuming when you say "I want to find the minimum value for X that is greater than 0", you mean the value of X that minimizes the function min. func=@(X)(magnitude*cos(phaseanglerad)+X*cosd(90))^2+(magnitude*sin(phaseanglerad)+X*sind(90))^2; xmin=fminunc(func,x0); Where x0 is your initial guess (this only matters if your function has multiple local minima; yours doesn't so you should be fine with guessing whatever).
How would you approach it using plain English / pseudocode? I'm happy to help with MATLAB syntax if you have an algorithm in mind.
Here's some help with the function definition that will take in any number of inputs: function minOut = mymin(varargin) % varargin is a MATLAB keyword that says "I have no idea how many inputs I'll have" % varargin is a cell array with length equal to the number of input variables sent into the function % the variable nargin (automatically created by MATLAB) in the function tells you how many input arguments were given. % an example on how to access the contents of varargin: first_input = varargin{1}; second_input = varargin{2}; % ... last_input = varargin{nargin}; end
[The Internet Archive Audio Books Section?](http://archive.org/details/audio_bookspoetry)
I used 2 loops, right here it says to use 1 loop, not sure how strict the grader will be about it, but at the very least this should give you an idea of how to approach the problem. http://pastebin.com/q7yE9whv
Thank you very much.
Although, this seems to be changing. There was a Nature (I think) editorial, a few months back that emphasized to importance of sharing computer code, too.
It is from my distant memory.. but seach for the "Step" block... you should be able to set it up for what you are looking for... please let me know if it worked :)
Thanks a lot, I'll try that tomorrow morning :) On an unrelated note, your username implies you have a good taste in music :P
my code is s=input('enter the initial amount of money added to the account: '); raise=input('enter the raise in pecent: '); inter=input('enter the annual intrest rate in percent: '); amount=s; k=0; while amount&lt;1000000 k=k+1; amount=amount*(1+(inter/100))+((1+(raise/100))^k)*s; end fprintf('\n in %g years, your account will have $ %8.0f.\n\n',k,amount) X=0:1:k; y=s:amount*(1+(inter/100))+((1+(raise/100))^k)*s:amount; figure plot(x,y) xlabel('year') ylabel('amount') title('amount of money in account') fprintf('\n\n %12c \t %12c\n','x','y') fprintf('\n %12g \t %12g',[x;y])
I hear on this, but seeing a lot of shady behavior on the part of reviewers in my field (engineering), I can see the merits of not publishing code along with the paper. As a less than ideal solution, the algorithm description should be clear enough that, as a reviewer, you could work through the steps using an arbitrary input. If that doesn't work, put it in your review. "The fault is with the way that the algorithm is described by the authors". 
You might also be interested in Welch's algorithm adapted to a logarithmic frequency axis: http://dsp.stackexchange.com/a/2098/64
Hm. These are good reasons.
The error is because x and y are different lengths so they can't be concatenated into one matrix. I'm assuming the code got messed up so it doesn't copy/paste correctly for us, but I'm only getting 1 y value and 8 x values for my inputs (80,000, 10%, 2.5%). Put 4 spaces before each line so reddit treats it like code and not formatting. Or use pastebin. Your x needs to be lowercase, I'm assuming it's just a typo on reddit otherwise you wouldn't have gotten far enough to get your error message.
I finally found a minute to check this out. You can use textscan for this as long as some part of each line of data will ALWAYS be there. So I assume that this part: &gt; 0;12345;FIRSTNAME1;LASTNAME1;;COURSENAME;00:07:00;C;0; will be consistently-formatted and always present. The rest of each line is assumed to be variable, so we tell textscan to lump it all together. fid = fopen('blah.txt','rt'); D = textscan(fid, '%d;%d;%[^;];%[^;];;%[^;];%[^;];%[^;];%d;%[^\n]'); unParsedData = D{end}; fclose(fid); % parse the variable-sized data for n = 1:length(unParsedData) % do something here to separate that stuff out end As far as the parsing goes, I guess you could use regexp or even textscan again if you can infer the length from the string. Maybe count the '+' symbols so you know how long it is? FYI this symbol: %[^;] means "read everything until you see a semicolon and return as a string."
Try posting all your homework problems in a single thread next time. Or maybe try actually doing your homework and don't post them here.
You don't. Matrix/vectors are numbers. The closest you could do is a cell array. If you want to print it out you can use fprintf.
Check this thread: http://stackoverflow.com/questions/6553691/display-matrix-with-row-and-column-labels There is no straight forward way really, you cannot have a matrix with string and doubles. You will need a cell or some other defined struct. If you want it for printing, just save A={'Title 1','Title 2',...} can use print formatting to save your data in a file or the console.
try using structures. Not quite what you are asking, but very close.
The 2012b ui makes my eyes bleed. You'll pry 2012a from my cold dead hands. 
Here is a solution I have used. % n is the number of columns of data which will be in my table % stats is a matrix where each column has the results of some statistics run on that column of data, which is a variable in my input. In this case it is 2xn % vars is a 1xn cell structure containing my variable labels % The first step is to make the output table, with the first column labeled xn=n; % I need the original n on the final step. n=n+1; table=cell(3,n); table (1,1) ={'Variable'}; table (1,2:n) = vars(1,:); table(2:3,1)={'p-val','Ranksum'}; % Convert data matrix and put in table stats=num2cell(stats); table(2:3,2:n)=stats(1:2,1:xn); 
It really does seem like an improvement when you get used to the new UI.
I recently switched over to 2012b, and I don't see much difference other than the GUI. The guts of the program are basically the same, and they didn't re-organize any of the menus too drastically...
Unless you have a reason not to, I'd use the latest version you have available. There's bug fixes, stability improvements, etc... Why not?
2012b is full of bugs and the ui is ugly as sin. However, I've been very happy with 2012a.
The frequency axis is scaled by integer fractions of the sample frequency divided by 2. Since a Fourier transform splits the frequency axis into negative and positive values ranging from 0 - Sf/2 (Sf = sample frequency), you'll need to have a sample frequency of 30*2 GHz in order to plot an fft frequency range of 0-30GHz. This means your **time** domain x-axis should be something along the lines of: fs=1/60e9; x=(0:(1/fs):(T+1/fs)); where T is the timespan you want to use. Note that our sample rate is now 60GHz. (Note I made the vector an even length to avoid some shifting problems). To properly scale a frequency axis, we can do something like: f = Fs/2 * ( (-length(x)/2 : 1 : length(x)/2 - 1) / (length(x)/2) ); which will give you a frequency axis of -30Ghz - 30GHz
Some code isn't compatible with newer versions of MATLAB. For example, I think things like boolean(A) used to check whether A is a boolean; now it should convert A to a boolean (I don't have any MATLAB installed right now so I can't check).
If your signal is (t,x):=(time,signal), the way I setup my FFT is always like this: NFFT= 2^nextpow2(length(x)); %fftlength Fs=1/mean(diff(t)); %get the sampling frequency (assumes that sampling time is uniform + discretisation noise perhaps) f=Fs/2*linspace(0,1,NFFT/2+1);%FFT actual information goes from DC to Nyquist Frequency X=fft(x,NFFT); %X=f(x), where f the fourier transform X=X(1:NFFT/2+1); %optional for ease of plotting to keep the positive part of the FFT plot(f,abs(X)) %the actual plot function PS: I saw orad already posted how to get the actual FFT working, if you want to zoom to specific parts of your FFT you can use: xlim([Fmin Fmax]); You cannot check a frequency higher than half your sampling frequency and if you do it means your signal is undersampled and as such aliased. 
Thanks for your help! For the sample code that you gave me, my x is = -(t-to)/tw * exp (-((t-to)*(t-to))./tw^2) (differentiated gaussian pulse). to is just a constant (timeshift) and tw is also a constant. t is my input vector. So my question to you is if I add my x in the code that you gave me, what do i put for (signal) in the first line and also what do i put for my input so that the output have valid results for 0-30ghz? thanks again
Oh sorry, yes the first line should read: NFFT=2^nextpow2(length(x)); My bad, gonna change it above as well! Since you want Fs/2 to be 30e6, this means Fs=60e6 and therefore you want: t=0:(1/60e6):Tmax; %where Tmax is your maximum time
Anything you want really, can be a second can be a millisecond. Ideally you want your sugnal to have a mean of 0 with the start and end value to be the same. If a signal is periodic you want to fft exactly one period. There are a lot of signal processing subtleties concerning fft but unless you are going to publish or use in a commercial application you can mostly ignore them. PS: Do a plot(t,x) with different Tmax, when you feel your signal is well defined (1 period, all the late values have converged etc) use that value to setup your time.
I tried with Tmax = 1 and my computer froze. I think its because my vector T is too big. Suppose I only want to see the signal at 20Ghz +- 100 Mhz is the plot command all I change or do I change elsewhere. Basicaly, I'm trying to get the code to run since the code currently crashes my cmputer. ------- Tmax = 1; t=0:(1/60e6):Tmax; %where Tmax is your maximum time to =1; tw = 1; x = -(t-to)/tw .* exp (-((t-to).*(t-to))./tw^2); NFFT=2^nextpow2(length(x)); Fs=1/mean(diff(t)); %get the sampling frequency (assumes that sampling time is uniform + discretisation noise perhaps) f=Fs/2*linspace(0,1,NFFT/2+1);%FFT actual information goes from DC to Nyquist Frequency X=fft(x,NFFT); %X=f(x), where f the fourier transform X=X(1:NFFT/2+1); %optional for ease of plotting to keep the positive part of the FFT plot(f,abs(X)) %the actual plot function 
My suggestion is to get rid of the first 3 lines so that you only have the one long combined anonymous function and the quad function: Pow_C_Function= @(t) (exp(-alpha * t).*(x5(1)*cos(omega_d*t) + x5(2)*sin(omega_d*t))). *(exp(-alpha * t).*(x6(1)*cos(omega_d*t) + x6(2)*sin(omega_d*t)) + V_In); Energy_C=quad(Pow_C_Function, lower bound #, upper bound #)
Ok I couldn't sleep...had to try it. Glad I did - it works!!!! Yayyyy thank you GhostGlacier
Did you ever try plotting (t,x) as I told you? If so you would see that for the parameters you provided the centre frequency of the function is less than 1 Hz. Try 20 times that in sampling frequency (20Hz) and you will get a nice and smooth frequency spectrum. Also you will need Tmax&gt;4seconds because that is when the function stabilises and therefore all the information is revealed to us. Try [this](http://pastebin.com/EC7k0kXw), pay attention to plot(t,x) above all.
Thanks for responding. I've posted the two programs [here](http://www.reddit.com/r/matlab/comments/11wcwx/serial_communication_using_matlab/c6q91j7) in my reply to three-...
I'm using 2010b but this occurs when I use hyperterminal on a different (older) laptop. So I'm guessing the MSP is the culprit but I don't know how. 
Ah, hyperterminal was fine in my case. Sorry. Good luck!
Thanks, I'll try these out tomorrow.
Thanks. It would have been nice if it was Matlab's fault and not mine. :D
Check prices [here](http://www.mathworks.co.uk/store/priceListAccessLink.do) if you want commercial no limits individual it can get [fucking expensive](http://www.mathworks.co.uk/store/productIndexLink.do) The prices vary greatly depending on what you want to use the software for (research/commercial/student). If you have (access to) a university address the student edition is cheap but it used to be only 32bit (not sure nowadays). Toolboxes not included in your bundle are sold separately. If you want MATLAB just to have fun (wont use it for commercial apps or research) you should consider looking into other means of acquiring it.
Those are alternatives in the same way that a pickup truck is an alternative to a semi/lorry. They have the basics down and for most people that should be fine. They just want a way to quickly automate 1+1. The true power of matlab comes with all of the toolboxes: http://www.mathworks.com/products/ And then there is Simulink and AutoCoder which are pretty much unmatched in their capabilities. 
Octave. Or just make the plunge and go Python.
I'd also point out that while many of the toolboxes are great, there are many that have perfectly reasonable if not better free alternatives. Mapping toolbox comes to mind. As does wavelet analysis, at least to the extent that I've used them. 
Ok he has crossed posted in 2 different sub reddits asking how to import a file from csv. That does not reek of coating excellence. Not to mention that numerous model for purely mathematical and theoretical. And have not yet been implemented.
I'll concede that there is non-zero probability that there are reputable theoretical researchers out there with 0 programming experience. Outside of professors (who have ample supply of capable programmers) I have never met one though! Best of luck to OP with his endeavours!
I know, but all it says is; parameter undefined. So I put a breakpoint at the line where I run sim, check whether the parameter is defined and it is. So between the lines it's either not reading the right workspace, or something else. 
So you're saying he's an excellent programmer that knows how to do all of this but is hung up on something like how to read a CSV? I've known people that have done PhD level stuff with equations in Excel. it's worked but you'd never get through this level of data with them.
Is this inside of a script or a function? I think simulink might eval from base rather than the workspace.
Seems like it, i didn't know about the 'options' input of sim() but i've forced a workspace now and it seems to work, model is running! 
http://www.mathworks.com/matlabcentral/fileexchange/27814-linkage-solver/content/linkage_solver/documentation/fourbar.html Might help.
While some one mentioned finite element methods, I think finite difference is the way to start. You'll be wanting to solve the heat equation in 2 dimensions. here is what google found for me: http://www.math.toronto.edu/mpugh/Teaching/SamplePrograms/heat.html
For my assignment, It is ok to use the simplified version of the heat diffusion differential equation. Would what you have discussed still apply in that case? 
For loops aren't the hard part. The hardest part was getting the correct diff matrix setup. My way is probably the fastest and will scale very well to any sized matrix. See my code in my post.
That is way too complex for what this calls for.
It's not that hard, and it'll be accurate. It's also a fun exercise :)! It's up to OP and their experience/knowledge.
Was my initial thought as well, doesn't work, preserves the dimensionality of the b array 
Why would they need to know the reverse sorry (interested)?
Wow this is great thanks!
Surf looks weird and is hard to read since that is just a 3D plot. Contourf is like a topo map. You can do it, just replace contourf with surf.
This works, but as mentioned in another comment, the 'comet' function is more towards what I was looking for. Thank's for the help though!
also, example: v = 1:10; comsum(v) comsum(fliplr(v))
Read the documentation for polyfit(). When you return mu it centers your fit parameters to the mean and scales by the standard deviation which will give you different results than if you just return p (uncentered, unscaled). This probably is not what you want to do. If you're trying to quantify goodness of the fit just use the data available to you in the S struct.
In the opposite direction as in 1/20000^4 +1/19999^4 + ... +1/1^4
Just to add: you could always use polyval() to evaluate the fit at your x values and then compute any statistics you like between the real data and the fit data. You could even wrap it up in your own function MYPOLYFIT() which returns only the data you really care about.
N = 2e4; ind = 1:N; Y = 1/N.^4; sum = cumsum(Y); rev_sum = cumsum(fliplr(Y)); Will give you the partial sums in the direction you want. You really don't even need that for loop at all.
Yup, you're on the right track. You'll want to start by padding your bomb matrix with zeros newArray = zeros(m+2, n+2); newArray(2:m+1, 2:n+1) = oldArray; Then, you'll want to check each element of the new array (not the edges though) to decide whether it's a bomb or whether you need to sum the surrounding elements (do this inside an appropriate for loop, only if it's not a bomb) countArray(i-1, j-1) = sum(sum(newArray(i-1:i+1, j-1:j+1))); 
what does variable m and n represent? sorry i've been mauling over this for a quite awhile and my brain is somewhat frozen
nope i am purdue right now....funny thing tho i did get accepted to georgia tech!
yea i know...i hard coded everything and it took quite a while. I know there is an easier, simpler way but we never really learned it yet. The only things we did so far were if, while and for and now we just started on GUI stuff. And also it is an introductory class to Matlab as well. so yes i am on this struggle bus! :) Although after doing MATLAB for a month straight, I do enjoy it quite a bit. Except histograms, excel was much easier. 
... and for ease of interpretation ... doc fftshift
Your code is atrocius :) It's unreadable. But, I plugged it in, and with some formatting, it seems to work as expected. I'm sure you got some good experience working with for and if statements. FYI - here's a simple implementation - probably "the most naive normal way of doing this in matlab". Give it a read through. Understanding how this works could definitely help you further down the line in Matlab (and pretty much any other coding language). function countArray = mineSweep(oldArray) %pad array with zeros [m,n] = size(oldArray); newArray = zeros(m+2, n+2); newArray(2:m+1, 2:n+1) = oldArray; %sum surrounding bombs &amp; assign to new count matrix countArray = zeros(size(oldArray)); for i = 2:m+1 for j = 2:m+1 if newArray(i,j) countArray(i-1,j-1) = 10; else countArray(i-1, j-1) = sum(sum(newArray(i-1:i+1, j-1:j+1))); end end end 
thank you... how did you do the formatting like that? and the texts like that? i will take a look at it soon.
Why not just put them in a loop?
If you want expressions, you are better off using Mathematica
It seems to me that this problem might not be that hard if your data is already in a convenient format. Can you show us the structure of your data (pastebin) or provide a sample?
Though the comet function undoubtedly seems like your best bet, just thought I'd add that, for the way pause is being used here, [drawnow](http://www.mathworks.com/help/matlab/ref/drawnow.html) is also useful.
One thing to remember is that arrayfun, like cellfun, essentially just performs for-loop operation on the function with the inputs you provide. It is not actually linearized for faster operation.
Reply to one of my comments if you post your sample, this way I will get an orange-red envelope
Pro-tip. If you're dealing with a mess like that, you're probably doing it wrong.
Yeah, I need it to be done analytically for reasons that go beyond the scope of this posting. I could expand on them if you guys want, but it is pretty boring. 
Perhaps it's purely symbolic and he doesn't have any numbers? 
Can't you just apply the chain rule five or six times?
 0.651.*cumprod(ones(1,17).*1.034). Or if you don't know the end point a=0.651.*cumprod(ones(1,100).*1.034) a=a(a&lt;1.15)
Is this for robotics or inverse kinematics? 
Create this monstrosity in symbolic toolbox and use the diff function to create a symbolic.derivative. It should automatically group like terms.for you (if not even figure out some possible identities as well). Use the subs function to solve for the derivative as desired.
Ha, works though. Also, thanks for the cumprod method - cool one!
This
Fair enough. I'm starting to experiment with using the GPU in matlab, and I'm trying to figure out how parallelized the gpu version of arrayfun is, or if I'm better using somethign like parfor
Do you have sample numbers for what all the constant could be? Basically p and q converge to something?
I'm getting p=0.690740673208823 q=0.0374652311297208 from clear all; r21 = 1.3441; r32 = 1.3309; eps32 = 0.007; eps21 = 0.009; s=sign(eps32/eps21); q(1)=0.0375; for i=1:100 p(i) = 1/log(r21).*abs( log( abs( eps32/eps21 ) + q(i) )); q(i+1) = log ( (r21.^p(i) - s)./ (r32.^p(i) - s)); end As that is what it converges to. It doesn't matter where you start q. I started it at 1000 and got the same result. (Hence converging)
You're a lifesaver. Thanks heaps. Turns out I forgot to increment the counter in q so it wasn't iterating correctly.
You don't have to have a counter. I just did it so I could see how fast it was converging (And you could even put in code to break when dQ or dP was less than a number such as abs(q(end)-q(end-1))&lt;1e-5. All you really need is q and p and you can drop the (i) parts.
What did it do?
No error messages, it just outputs my "hw7" array into the command window and nothing else. I know the code isn't done well, but it just has to make a graph and it's almost identical to others I've done with no problem. Anything that could be stopping it from producing a graph at all?
It output my array "hw7" into the command window, and didn't make a graph.
I'm presuming that hw7 actually is a matrix with at least three columns, otherwise that is issue one. Second, I'm pretty sure (not positive) that MatLab doesn't assume multiplication when stuff is next to parenthesis (like your SE2 line assumes). Explicitly put in the asterisks. If those don't solve the problem, try just plotting plot(R,SE) to make sure that that works, before attempting all the plotting simultaneously. Remember, highlighting code + F9 is a good friend for debugging.
No errors, nothing? Also use pastebin or put 4 spaces in front of the code.
While not ideal, none of those should prevent his code from running. The bad references to D and D2 will though.
If you highlight lines in the editor, then hit F9 ... it'll execute the highlighted commands.
can u post hw7
Try to post the actual code, put 4 spaces in front of each line. Also, the first few entries in your input array would be handy, cant test without knowing order of magnitude of the inputs. I can't tell if the reddit formatting is hiding something.
.98 -108.900214266 -108.53497564 1.62 -108.569705702 -108.58934842 1.34 -108.80100288 -108.692201601 1.2 -108.863328617 -108.669726595 1.12 -108.938264624 -108.665050946
yeah and the original expressions your post is not formatted code
yer kidding right yer not even gonna give it as an expression? sigh....
Well, the "clear" should be removing hw7 from the workspace when you run the script. When I plot that data, the axes are sized WAY wrong to cover the data. Remove explicit axis commands until you know your code is working right, just so when it plots things at -110 you still see it.
could it accept a vector, and just loop over the vector within the function? function([1]) , function([1,2,3,4])
check out 'nargin' too.
There are several FOSS systems that are very similar to Matlab, including Octave, which is intended to be totally syntax-compatible. Why not use one of those? http://lavica.fesb.hr/octave/octave-on-line_en.php
I'm very new to matlab, so while loops still confuse me. I know there is something very wrong with mine here, do you think you can help me out? while x&gt;=0 n=log2(x); n=(floor(n))^2; k=x-n; end y=num2str(k);
There is a ROTATE function, http://www.mathworks.com/help/matlab/ref/rotate.html
Conceded. 
I totally agree, google needs to by Ponies and incorporate them into google docs
Was your file called "hw7.m?" If so, THAT is the issue. MATLAB first looks for variables named whatever you tell it (like &gt;&gt; hw7). Thus it would display it in the command window and never even find the code. Name your file hw7_code.m or something and try to run THAT instead. (Yes, I see that mentioned that you got it to work. But how?)
Binary numbers are numbers in base 2 instead of base 10. In base X when you reach X you write 10, when you reach X^2 you write 100 - so in binary 2 is 10, 100 is 4, 1000 is 8 etc. Instead of "hundreds tens and units" you have "4s 2s and units", but the principle is the same. For the conversion you want to work out what the biggest power of 2 (1,2,4,8,16,32,64,128,256...) that is less than your number, that'll give you your first digit and you can then repeat to get the next biggest power of 2 and the next and so on, and adding all of them together. marrkantonio talks about log2 and it's important to see how that relates to binary numbers - take a look at log2 of the powers of 2 and you should see the obvious pattern.
No. It seems that when you compile main it will simply compile whatever is in user_script currently as well and somehow attach that onto the executable.
I don't know exactly how to do that but to do a title I would generally just use fprintf to do that and just space your titles to fit the other output correctly. 
Easy enough to orient them how you want using the variable window. You can split the window to have a columns view or a rows view.
If you have headernames, your second matrix is either not a matrix or not x1 or its only header chars instead of full names. The easiest way is probably (H=header, D=your data matrix): for i=1:numel(H) display([H(i) '\t\t' M(i,:)]) end
There is an interesting link on reddit today about heatmaps with a lot of examples: http://www.reddit.com/tb/12mq4e With regards to your problem; is adjusting marker size an option? Basically paint only one pixel, but with a broad brush
 &gt;&gt; A = rand(12,1); % fake matrix 1 &gt;&gt; B = rand(12,3); % fake matrix 2 &gt;&gt; [A,B] ans = 0.8147 0.9572 0.6787 0.6948 0.9058 0.4854 0.7577 0.3171 0.1270 0.8003 0.7431 0.9502 0.9134 0.1419 0.3922 0.0344 0.6324 0.4218 0.6555 0.4387 0.0975 0.9157 0.1712 0.3816 0.2785 0.7922 0.7060 0.7655 0.5469 0.9595 0.0318 0.7952 0.9575 0.6557 0.2769 0.1869 0.9649 0.0357 0.0462 0.4898 0.1576 0.8491 0.0971 0.4456 0.9706 0.9340 0.8235 0.6463
I believe that your xe, ye, and ze are vectors. In this case, you can find a discreet derivative by subtracting the values that are 'dt' away from each other (similar to what I think you're trying to do). Note that you would use dt to offset the index, which will result in calculating the derivative for the entire vector. Also, the length of dxe will be length(xe)-dt. dt = 1; dxe = (xe(1+dt:end) - xe(1:end-dt)) / dt; Just replace xe with ye and ze for the other vectors. edit: should be divided by dt, not 2*dt
Though the functionality of the block is what we were looking for, implementing it into our model is an issue. Thanks though! It was a good recommendation. =) 
Thanks a lot. I went with xe0=xe(1:end-1); dx = diff(xe)./diff(te); plot(xe0,dx) I think the output looks just right.
How bout making a second array of all randoms (-1 or 1) and then replacing the 0's in the first array with the corresponding values from the second. tempArray = randi(2, size(X)); tempArray(tempArray == 2) = -1; X(X==0) = tempArray(X==0);
This would turn all the 0's to all 1 or all -1. I think OP is looking for the -1 or 1 to be randomly distributed among all the 0 instances.
How about using a try-catch? rowOne = 1; rowTwo = 1; counter = 0; try while rowOne &lt; N while rowTwo &lt; N rowTwo = rowTwo+1; H = CenterPosition(rowOne, :); V = CenterPosition(rowTwo, :); T = H-V; if T&lt;(2*R) rowOne=N+1 rowTwo=N+1 counter = counter +1; error('JustBreakingTheLoop'); end end rowOne = rowOne+1; rowTwo = rowOne; end disp(counter) catch exception if ~strcmp(exception.identifier,'JustBreakingTheLoop') disp('error occurred!'); rethrow(exception); end end
Thanks guys! This was super useful. I got it working. :) 
This is absolutely not the correct way to do this. It throws a completely unnecessary exception and does an unnecessary string comparison. It will work, though.
Lol I know. But this is matlab, I think we throw programming conventions when we embrace this to begin with.. I generally get really pesky with this breaking out of many loops thing, so many extra if else statements! Once I had to break out of 5 nested loops and it was so maddening the number of ifs, I just said fuck it and threw an error.. Never looked back since.. One interesting thing is many internal matlab functions actually use this method. Remember seeing try catch used as legitimate ways to figure out things in lsqnonlin method for eg.
haha i do that enough as it is. I just want something quick and easy that might encourage me to learn what it is i am looking for rather than just looking for an easy solution to copy/fit to my work.
I usually don't get quick copy/past solutions, rather I end up finding the MATLAB page for the actual function I need, then I learn it and use it. This method led me to find, unique, and logical indexing (oh god that was such a god send).
MATLAB help or doc rarely fails me.
There's also one for iOS but I don't have a license to MATLAB. I use it at my university's computer labs. At home I have an open-source free version called FreeMat which does almost everything MATLAB does in my experience.
Help is the bomb but sometimes I find it's not very intuitive in explaining syntax. But that could just be me.
Honestly for the basic things I want to do it gets a little more technical than I want. But yeah, all of my tests have been open book (ie we can use the help function) and I have yet to fail a question for not understanding or being able to figure out matlab, but rather, Ive failed some for not knowing the engineering.
It's pretty hard to parse out that error, the way that you've typed it. It's hard to tell if some of the warnings are just script feedback, or actually errors. Best bet would be to take a screen shot (use snipping tool if you've got windows) and post it. Given a cursory look, though, it appears that it can't find your data folder / video files. make sure that they're in the '/Users/ryanstclair/Downloads/EVM_Matlab/data/' directory. 
help &lt;functionname&gt; If you don't know the name of the function, open up the help. It really is fantastic. 
The first thing I'd do is to download or extract the source code again, to make sure that the file (corrDn.mexmaci64) is not corrupt. Has this ever worked on your computer? I don't have a copy Matlab on a mac, so I can't test the code. Perhaps you could try it on a different computer (ideally different OS), as it could be related specifically to compilation of the mex file. EDIT: Also, you could try to recompile the mex files. run the file "compilePyrTools.m" found in the ./matlabPyrTools/MEX directory. Eg. run('./matlabPyrTools/MEX/compileTools.m'); You may need to install a compiler first, see here: http://www.tech-recipes.com/rx/726/mac-os-x-install-gcc-compiler/ Then run your reproduceResults.m script again.
While I agree with others, the help function is quite useful, it's also very bad at discovery. I've written out dozens of functions only to find a couple months later that there was a much smarter/easier way to do it. (For instance bsxfun is nearly unfindable without reading Matlab reader articles and it can change how you write code. Sparse I've only even seen mentioned in passing once or twice and it can dramatically speed up certain functions.) Unfortunatley, do to the cleaness of the Matlab documentation very few quick guides to all functions exist. Also, the number of tools available in Matlab makes it nearly impossible to have a 'guide for all situations'. For instance, I often have a few of the guides for speeding up Matlab functions open when optimizing. I've yet to find a good graphing guide. Basically, I got nothing. Edit: but maybe something like this: http://www.cs.cmu.edu/~tom/10601_fall2012/recitations/matlab_quickref.pdf or this: http://cismm.cs.unc.edu/wp-content/uploads/2011/01/Quick-Reference-Guide-Matlab.pdf
That's how I feel. Help can tell me everything I need to know about a function but it doesn't often teach me new ones that work better. Thanks for the info, I'll check out those links.
Is your OS 64 bit (sorry I can't tell, I'm a windows guy!), and is Matlab also a 64 bit version? I tired running this on Windows 7 (64 bit) with Matlab R2010b (also 64 bit) and got a different error, and I think it might be because the video files were created with a 32 bit codec. If you're using a 64 bit version of Matlab it could be causing problems.
You sound pretty savvy. Why don't you do both and see which would work the best for your application? Both methods would only take a few lines of code, I'm sure. It's hard to know how to handle your specific data, because we don't have it, and we don't know your intended outcome. Also, see what others in your field do and copy them. As far as filters go, in biomechanics the most common smoothing filters are butterworth, but filling in gaps, etc might be an issue. I did this type of processing for my masters, and it's as much of an art as if us a science. 
Function HW9_2a is expecting a *function pointer* to be passed to it. You are trying to pass it the *output* of a function. Try: HW9_2a(@RHS_9_2_a) (the @ makes it a function pointer) Or you can see HW9_2a uses "feval" so you should also be able to use: HW9_2a('RHS_9_2_a') When you just write: HW9_2a(RHS_9_2_a) MATLAB tries to call the RHS_9_2_a function first...but does not have any arguments to pass to it. Hence the error. Have fun.
Interestingly the link to this post doesn't work. Your post is upopenable without clicking the comments button. It appears to me that you submitted the link http:///r/matlab while also submitting a link to /r/matlab. A lot of how to move forward depends on how large your matrix is. Can you give me an approximate size? Also, how do you define a peak and a valley? Are they one stdev above a local region? 2stdevs? 3? Or is a peak just any point that is higher than points around it? How much higher? Do noise points count as peaks? Assuming your definition of peak is "Higher than points around it", which is what you appear to be using, consider turning your line: elevation_data(j,k)=maxarray; into maxarray(L,:)=[j,k,elevationdata(j,k)];L=L+1; (obviously you will need to define L as 1 before your code runs) similarly do the same with the line: elevation_data(j,k)=minarray; into minarray(M,:)=[j,k,elevationdata(j,k)];M=M+1; This will output an array of coordinates and heights of max and min points. Unless, your problem is a speed problem. Then we can use the fact matlab is much much faster at matrix operations than at loops. We can replace your whole loop with something like this: elevation_data_trimmed=elevation_data(2:(size(elevation_data,1)-1),2:(size(elevation_data,2)-1)) ; % this trims of the edges of elevation_data elevation_data_left=elevation_data(2:(size(elevation_data,1)-1),1:(size(elevation_data,2)-2)) ; %generates a matrix of all values left of elevation_data_trimmed elevation_data_right=elevation_data(2:(size(elevation_data,1)-1),3:(size(elevation_data,2))) ; %generates a matrix of all values right of elevation_data_trimmed elevation_data_top=elevation_data(1:(size(elevation_data,1)-2),2:(size(elevation_data,2)-1)) ; %generates a matrix of all values above of elevation_data_trimmed elevation_data_bottom=elevation_data(3:(size(elevation_data,1)),2:(size(elevation_data,2)-1)) ; %generates a matrix of all values below of elevation_data_trimmed (The above could have been more efficiently achieved with a for loop but I wanted to do it verbosely so you would understand what we were doing. I also strongly advise you open the variables and confirm that they are what I say they are. Continuing the code below) Peak_matrix=(elevation_data_trimmed&gt;elevation_data_left).*(elevation_data_trimmed&gt;elevation_data_right) .* ... (elevation_data_trimmed&gt;elevation_data_top).* (elevation_data_trimmed&gt;elevation_data_bottom); %generates 1s where there are peaks Valley_matrix=(elevation_data_trimmed&lt;elevation_data_left).*(elevation_data_trimmed&lt;elevation_data_right)... .*(elevation_data_trimmed&lt;elevation_data_top).*(elevation_data_trimmed&lt;elevation_data_bottom); %generates 1s where there are valleys [Prow,Pcol]=find(Peak_matrix); Temp=find(Peak_matrix) %gives linear index maxarray=[Prow+1,Pcol+1,elevation_data_trimmed(Temp)]; %gives you indexes of peaks and values [Vrow,Vcol]=find(Valley_matrix); Temp2=find(Valley_matrix) %gives linear index minarray=[Vrow+1,Vcol+1,elevation_data_trimmed(Temp2)]; While this is a ton of fairly complex code, it should be much faster. Of course, the speed gain from all of this is going to be too small to notice, unless you are working with a truly massive matrix, but it's good to know another way to do it. 
It happens, I still sometimes spend a while trying combinations of brackets to get the right output. Also when you load excel files you can use: [a,b,c]=xlsread(filename.xls) To get the numbers (as doubles) alone in the a matrix, the strings in the b, and the cells in the c. It's useful if you need to do more complicated or fast operations.
No problem. This was a... interesting problem.
Matlab usually provides a install manual in the DVD. Or just open up a terminal sudo /pathtomatlabfolder/install Or sudo "drag and drop the install file found in the matlab folder to the terminal". It should be familiar from there 
have you already installed Matlab? The default install folder will be /usr/local/MATLAB . Check if you have already installed it. If you have installed it and want to run it sudo "drag and drop /usr/local/MATLAB/Matlab version/bin/matlab" 
Did you just download it or did you install it?
Run: /usr/local/MATLAB/R2012b/bin/matlab There should also be 'matlab-support' in your repos (I use Debian) so that you can actually get it in the menu. Open terminal and run apt-cache search matlab | grep matlab 
https://help.ubuntu.com/community/MATLAB
You're my hero. I will forever love you :)
if you type: get(gca) or get(gcf) in the workspace you get a list of all the properties you can work with for respectively the axes and the figure. to change the property you want use set(gca,'property','value') in your m-file
The line next=prev is a problem in this loop. It should be prev=next. Essentially you are writing next at the beginning of the loop, then performing a mathematical operation then writing next again. The problem it would appear, is that this next is never going to be used as it will be rewritten again. If you flip it my way, you will have the previous written as the current (which you are calling next) after you use it. **More importantly, your function doesn't do what you want it to do.** Right now it will essentially output (if you make my changes): T(t(n-1),t(n))*T(t(n-2)t(n-1)). If you want it to actually work the way you want it to, you need to make the next=prev line into prev=Pr. This will then set prev to the result of the calculation of the loop and then on the next iteration multiply it by the 'next' value. This should produce the value you desire.
this is excellent advice, I thought I had some sort of reason why I had to run my matlab as root but I think I was confusing myself. Everything works fine non-root. Thank you, I stand corrected, I am pretty new to using Ubuntu as my primary os.
Urgh, you know you're gonna get ripped off big time buying a tower in stores on a whim like this. Please try your hardest not to :)
This goes double for a scripting environment like matlab, where you'll probably be running other peoples code pulled off the internet.
... Just curious.. Why are you using the 32-bit version when I go to the downloads there is only a 64 bit version since r2011b. Are you just using a really old version? 
I'm using r2012a, Linux and online downloads. It only offer for me to download 32-bit windows and Linux and 64-bit Mac. 
sorry I read it too quickly r2012a is the last 32-bit version. [This is what I'm seeing](http://i.imgur.com/iPyGR.png) Just interesting. 
it's part of the purchase program with my school but it looks like they just got the full version. It still seems odd that they wouldn't include a different bit version though. 
No what's that? Edit: I read it. My school sucks :( My school also provides Matlab for free through a virtual desktop, but they tell no one about it. I know because I searched through their servers. And they made it impossible to actually download or send your programs on it; just basic testing. 
It makes me so mad that the answers with code are always so obvious once you are given the answer. Thank you very much for a very clear comment. You're right, I do need to use 'prev=Pr' instead of the 'next = prev' line. I like to think I would have figured that out myself upon testing the function but I really do appreciate you pointing that out for me as well. 
this doesn't seem to work for a string like: 'Filepath C:\Chromel\data\Chem3211\Section A4 (Friday)\TeaExtracts11092012.SEQ\3DFIELD.CHL\1376.dad' this produces a 2x1 cell in which the first cell has a 2x1 cell inside. :-\ 
The way the method works is there will always be a 2x1 cell in the first cell of the 2x1 cell. The data is incorrect though because I assumed that there would be a ":" after the fieldname. In this case, the ":" is part of the path and it is parsed incorrectly. You'll have to give me a standard format for the line in order for me to help you!
[It's already been done, so you can just check out that code.](http://www.mathworks.com/matlabcentral/fileexchange/26161)
genvarname
I'm not exactly clear on why you need to turn the filename into a variable name (if that's what you're saying). Personally I would just keep a list of all the filenames in one variable (probably as a cell array) and have a second variable (probably also a cell array) where each element of the array is what you got out of the importdata statement for that file. E.g.: function [files data] = makedata() x = dir for i=3:length(x) files{i-2} = x(i).name data{i-2} = importdata(files{i-2}) end
The function returns the structure by default if you have only one variable being assigned the output. I.e. x = polyfit(data) Then you can just type x in the command window and it will show you the structure. The structure has all of the information in it, and you can extract what you need from the structure. I'm not sure of the syntax exactly, but I'm sure you can get that from the help site
you could always just do a for loop. for i=1:n for j=1:n if ..... a(i,j)= 
If you read /r/mat lab much you know I hate loops. But for a novice that's just confusing. 
Right. I have no clue how to construct the piece wise code. Could you help me out?
Can you define a separate matrix that has the index values as its elements and then use raise your original matrix to the new matrix element by element? A=1:M; bb2(1:M)=r.^ A; Sorry, omit the space before the A. I'm not sure how to format this properly. 
I'm not 100% sure I'm understanding, but how about this x = bb2.^ (1:numel(bb2));
result = bb2 .^ (1:M)
Haha, sorry I don't follow your comment history enough to know you hate loops. Don't take it so personally. Yes, his question is simple and my code is terse, but a) if he was interested in vectorizing code and wanted to become more familiar with Matlab or b) if someone else reads this and is interested in not using loops then this answer seems perfectly reasonable. 
[Cody](http://www.mathworks.com/matlabcentral/cody)
Gentleman, scholar, etc. Thanks very much!
I tried to swap the multiplication with the bsxfun() command, but it seemed to make the code slower: [Profiler Link](http://i.imgur.com/E7DDK.png) Compared to the original profile (linked in the OP edit). I did add the lines initializing r and Xhat though. Thanks for catching that
help ODE45. You basically turn it into a state space matrix and go from there. It automatically determines spacing to be most efficient.
":=" in matlab is simply "=" Also change: "di" to "d(i)" and all relevant instances (same for "xi+k" to "x(i+k)").
This isn't what you asked for, but for orbital propagation it might be better to use a [symplectic integrator](http://en.wikipedia.org/wiki/Symplectic_integrator). Basically, a symplectic integrator is a [geometric integrator](http://en.wikipedia.org/wiki/Geometric_integrator) that approximately conserves the Hamiltonian, whereas Euler's methods and RK4 (and most numerical schemes in general) do not. Since the Hamiltonian is the sum of kinetic and potential energy in the case of orbital mechanics, it would be useful to have an integrator which conserves it. 
Interesting suggestion. I'm not familiar with symplectic integrators and have not worked much with dealing with Hamiltonians, but I will definitely look into it. Do you know of a good resource for how to formulate the Hamiltonian for an orbital mechanics problem? You say it's the sum of the kinetic and potential energy, but I'm not completely sure what form it should be in (I believe it should be a matrix? What dimensions, etc?)
If you want to do this in a single line, you can do it this way: &gt; reactionTime=cellfun(@(x) x.reactionTime,trials); Note: if your struct field (e.g. reactionTime) contains a vector and not a single scalar, the cellfun result will be returned as a cell matrix of the same size as the input variable (trials), and you'll have to use the "'uniformoutput',false" tag in there. You can do this in that case: &gt; reactionTime=cell2mat(cellfun(@(x) x.reactionTime,trials,'UniformOutput',false)); You might have to put some transposes in there if the direction of your arrays are a little off.
This is exactly what I was looking for. Thank you.
This isn't bad at all: &gt; [X,Y,Z]=meshgrid(X,Y,Z); % X, Y, Z the sampling along each dimension and you have selected point pt = [x0,y0,z0] and radius r. You want to find all points lying within the sphere of radius r. You can do this, namely find the distance from every point to your selected point: &gt; dist=sqrt((X-x0).^2+(Y-y0).^2+(Z-z0).^2); Assuming you have data in a 3D matrix, you should be able to simply retrieve it with the following by grabbing only those locations that have distance less than r: &gt; sphere_data = data(dist&lt;r);
Matlab sets up the iterative limits before it enters a for loop, and you can't modify that. You can change the current index if you want, such as: flag=true; for i = 1:10 if(i==8 &amp;&amp; flag), i=i-1; flag=false; end fprintf('%g ',i); end fprintf('\n'); This will run i=7 twice, and you'll get this out output: 1 2 3 4 5 6 7 7 9 10 Note that without the flag, the loop would stay at i=7 forever. Other than that, you'll have to use a while loop like Jynxo suggested.
Your Te and Lambda vectors are not the same size. They need to be. 
Thank you so much--I realized that was my mistake a few minutes after posting. I appreciate the help!
I think the function "deal" might work. But yea, array of structs seems better anyway.
More constraints = more iterations. Long ones still have the same iteration periods.
You could try running the profiler for both(if you have some sort of working code).
The answer depends on the structure of your problem as well as on the algorithm you are using to solve it. If you are using a naive implementation of a Branch and Bound algorithm for solving your MILP, it is generally very important to formulate your problem in order to yield the smallest possible integrality gap - the distance between OF of your original problem and its LP relaxation. In that case, combining constraints will almost always result in worse computational times, provided these constraints include non-continuous variables. In your simple example, if the solver you are using, when relaxing the domain constraints for x_1 and x_2, keeps the lb=0 and ub=1, the integrality gap due to these constraints will be zero and your choice will not be critical. Now, there are also implications on how fast your LP relaxations will be solved, but if you have a sufficiently complex problem, that usually is less important than the effort to traverse the tree.
I'll give you some hints. After you have loaded the image, you can as you say convert from rgb type to grayscale. Try for example: rgb2gray Then you can convert it to double (from [1,255] scale to [0,1]): im2double What you now have is a 470 (rows) by 628 (columns) matrix with intensity values for each pixel (intensity between 0 and 1). You can sum through one dimension with sum(matrix,dim). To learn more about the functions you use type help sum for example to get info on the sum function. Also write your script in an .m-file. You shouldn't work in the command window. Suppress output by putting ; at the end of lines. 
I know this sounds bad, but it's my educated opinion. At work currently so can't really provide much evidence :). Would love for someone to agree/disagree with me.
What have you done so far? Have you read [this page](http://www.mathworks.com/help/stats/bootstrp.html)? Also, check this out: http://www.variation.com/cpa/tech/changepoint.html
Thank you for the response. I have read that page many times over. I can't seem to get the bootstrap to work properly. I think one of the main issues I'm having is that I don't know which bootfun to use. Also the [bootstat, bootsam] seems to only look at the number of rows there are and return a 36x1000 matrix of random numbers 1-36. That is the size matrix I'm looking for just not the numbers I'm looking for. I was given the total energy consumption. So far I've calculated the Heating and Cooling Degree Days as well as the best fit line equation for both. Using the best fit line I found the predicted consumption and the corresponding 36 errors. I then plotted the errors to get the CUSUM chart. I did all of this in excel because that's what I knew how to use. However, I need to add the errors to the best fit line equations and repeat 1000 times. Not sure where to go from there. Thanks for the additional link, it helped my understanding of the topic a little more. But not too much with the Matlab programming.
Your code has a few errors.. For instance, what is this "d" variable? Moreover: *det = det(k)* means that _det_ wil no longer be a function afterwards, but a variable. (It's not like in C++ where you can overload stuff)
Update: After talking with my professor for some time I managed to create some of the necessary functions. However, I can't seem to get the bootstrapping to work the way it's supposed to. Apparently I need to bootstrap the error terms once to get a 36x1 matrix of new error terms. 
Wow.... Expert programmer needed indeed. Anytime you're going to make multiple of something that needs to behave you should probably make it object oriented. Beyond that.... you should look into how the GUI and callbacks work.
That's fine. Basically you can use help/doc to lookup the basics of gui building ("guide" is a command to get the gui building visual interface). Look into the basics of object-oriented programming. Presuming that your coursework has taught you the basics of that mode of thinking, then MATLAB object oriented programming should be quite easy to pick up from the documentation. It seems straight forward to write a class which is a car that has the properties described and operators such as change lanes. This class can then be interacted with. You can probably do this in a fairly brute force "director" kind of implementation with an all knowing global management. Alternatively, you can probably look into events and listeners in order to construct a more elegant solution. Hope this helps.
If you're a student you can get windows 7 for free. I guess this is 5 days old but there is a plethora of software you can get for free. Just google "free student software [school name]".
I think that's the point, right? 
Basically I need to load those 941 files into matlab. I'm just not sure what i'm gonna do about the file name... the format of the files is like this: qush-a-Ind(year)-(4 day interval).sir Right now in the code it should create 941 days but I'm not sure how I'm going to cycle through the file name data sets.
It looks reasonable, but your `day` variable starts off as an array but then you access it with `{}`. Also, it makes way more sense to just copy/paste code on to pastebin or even in to here: % herp derp names = dir('*.sir') Also, you could just try it...
I'm working on a similar project right now where I have to analyze around 500 image files per data set. I would recommend doing all the image operations inside your for loop where you have a single image loaded. Otherwise, it would be pointless saving 900+ images into your memory while they are not being used. I do not have any experience in terms of optimization, but this makes sense to me. I'd love to be corrected if I am wrong. 
 beep off; se also: [this](http://www.mathworks.com/help/matlab/ref/beep.html).
wow. upvote for dedication.
If you want the solution to be permanent, add it to startup.m in your default Matlab folder.
Quick n dirty: for i = 1:length of number f(end-(i-1)) = mod(floor(b/10^(i-1)),2); end
another way... f=[]; b='1010001'; for i = 1:length(b) f = [f str2double(b(i))]; end 
b starts out as variable, not string. A bit adjusted: b = num2str(b); % Convert variable b into string b for i = length(b):-1:1 % Runs through the entire string, backwards f(i) = str2double(b(i)); end Running through the string backwards ensures f immediately is assigned its final size, reducing computation time. (doesn't matter much for this example, but it matters if f ends up being very large.)
 x_str = '00100101010101001'; % your data x_num = double(x_str==double('1')) ; double('1') gives you the numeric value 49. This is the ASCII code of the character '1'. MATLAB allows you to use '==' on a string and it's comparing the ASCII value of every digit to 49. The output is a logical array which tells you true or false whether each digit is '1'. Convert back to double and you have a numeric vector of 1s and 0s.
 b = 1010001; s = num2str(b); f = double(s)-48; Might still be an overkill, but I suppose it's simpler (and more efficient) than the other suggestions here.
 files = dir('*.sir'); dayV = zeros(0,length(files)); for i=1:length(files) dayV(i)= loadsir(files(i).name); end why doesn't this work...
First, you're right about 'dayH' being improperly sized for the output from 'loadsir.' Are you guaranteed that the output from loadsir will always be 1360x3600? If so, you can preallocate dayH: dayH = zeros(length(fname),1360,3600); Otherwise, no preallocation. In that case, you may want to consider a cell array for dayH. Either way, assuming preallocation, you'd then call dayH(i,:,:) = loadsir(fname(i).name); within your loop. Now, as to optimization, there isn't much you can do with the chunk of code you've provided apart from converting the 'for' loop to a 'parfor' loop. Your biggest speed up will be from optimizing the contents of 'loadsir.' Generally, while parsing input data, your best option speed-wise is to use MATLAB's 'textscan' function. It's much quicker than reading lines and looping till the end of a file. 
dayH initialization is wrong. You're creating a zero length matrix. Also, since you're returning a 2d matrix, you should either make dayH a cell matrix: dayH = cell(1,length(fname)); %be sure to use curly brackets in the for loop. or a 3D matrix dayH = zeros(length(fname), 1360, 3600); for i = 1:length(fname) dayH(i,:,:) = loadsir(fname(i).name); end
So it was crashing so I put a breakpoint in the for loop. It says, &gt;Cannot display summaries of variables with more than 524288 elements. I guess it's because 1360X3600 = 5,000,000 about? 
Earlier I was not in front of a computer with Matlab and I was looking at this code and thinking... "how the fuck would that work?" But I just tried it out and I am shocked that not only does it do exactly what I wanted, but does it so elegantly. It actually took me a little bit to figure out HOW it even worked because simply reading Matlab's Help on what "Double" does, I never would have imagined it would have been useful for my purposes here. Thanks!
Nice! I remember peopled were talking about this on ##matlab a few years back. If I remember correctly it was when socky (was that his name) the bot was running rampant insulting people. Any plans to post the code on github? 
Sorry for the formatting, I'm a reddit amateur. 
Ive used this In the past with some success. http://www.mathworks.com/matlabcentral/fileexchange/13188-shade-area-between-two-curves/content/jbfill.m One issue Ive had is if I try to apply a transparency using alpha(), I can not export the figure in a vector based (ie publication quality) format. This was extremely frustrating for me. My workaround was to add the shadi g in illustrator post hoc. 
This is a nice demonstration. Does anyone know of some matlab code that allows you to connect and send commands to a .net com server? This would be very helpful for me. 
I disagree with the notion that this is unreadable; this is more or less THE solution used to convert digits 0-9 from string to actual numbers, in ALL languages on modern (i.e. ASCII) machines. Combine that with MATLAB's storing strings as just another kind of vector, and you've got strayadvice's code, which is pretty much perfect and the best solution here.
You can pretty easily use patch graphics to color shapes, yeah. Take a look at the patch documentation.
I was not aware of that. Thanks for the heads-up!
Yes, but each is handled differently. A variable (say double-precision), is a single element, while a string is a series of elements. If you have b = 1010001; and try b(3) you get an error, since in the matrix that is b, there is no third element. However, if you have the string b = '1010001'; then b(3) will yield a result (to be precise, the string '1'), since the string b does have a third element.
Ended up making a structure. I was being dumb. Thanks for the help!
When I logged into MATLAB's page to check I saw the student version (R2012a) as the usual $99. That includes MATLAB and Simulink. Not sure if it makes a difference but I'm in the US. I'm not sure where you're seeing $500 but I would certainly not pay that much for a student version.
Yup, right now wavread is trying to read the file song.wav in the current work directory. The variable song is already a string, so simply inputting the variable should fix it.
I recently worked on a very similar problem. A friend of mine who I was working with wrote his own RKF45 integrator(which was very similar to the ODE45 function that matlab has), and then we found an [ODE87](http://www.mathworks.com/matlabcentral/fileexchange/3616) function on mathworks, so we used that instead. AFAIK using a higher order integrator allows you to get more accuracy per function call, so that may be a possible avenue for speeding your program up. Also it seems weird to me that you've got a RK4 method which needs only 3 function calls per step. The wikipedia article on Runge-Kutta describes the RK4 algorithm as having 4 function calls per step (as far as I can gather, anyway).
(i = (s-(s-3)):s) isn't this the same as just i = 3:s? 
I said that it evaluated the acceleration at 3 different "locations". :) The midpoint of each step is evaluated twice, so you're right about calling it 4 times. I just meant that two of those times was at the same point I'll look into that ODE87 algorithm though. Thanks for the suggestion
Does linsolve work for you?
Ah, my mistake. Have a good one.
Look up commands moviein, movie, getframe.
If you're just animating with MATLAB (= not trying to write out a movie file), you can use something like this: hf = figure; % save the figure's handle ha = axes; % save the handle of the axes object while somethingsomething % can also use for loop plot(ha, x, y) pause(0.5) % pause some time after each update. otherwise you won't see it. end EXAMPLE: hf = figure; % save the figure's handle ha = axes; % save the handle of the axes object t = linspace(0,2*pi,1000); for freq = 0:10 plot(t, sin(2*pi*freq*t)) pause(0.5) end 
http://www.mathworks.com/matlabcentral/fileexchange/19322-saveppt2 Not exactly sure if that's what you're looking for. It lets you control PowerPoint through .mfiles. Word, Excel, etc are all pretty similar.
Try interp1: http://www.mathworks.co.uk/help/matlab/ref/interp1.html
Replotting using the plot() function repeatedly in Matlab is actually relatively slow. Instead, you want to simply update the data that's currently on the plot. This way, Matlab doesn't have to call all of the object creation functions that go with plot variables. Here's some quick code to do your assignment. Let me know if you don't understand any of it: x=linspace(-2*pi,2*pi,1000); figure; p = plot(x,sin(x),'linesmooth','on'); grid on; framerate=30; % number of frames per second, approximately num_seconds=10; % how many seconds do we want this to last? num_frames=num_seconds*framerate; % calculate how many frames we want a = linspace(0,8*pi,framerate*num_seconds); % run loop for i = 1:num_frames set(p,'YData',sin(x-a(i))); % update y data drawnow; pause(1/framerate); % wait to update end
I'm not sure what you are trying to do. Can you clarify? Also, your code has a lot of errors... RN=randi is missing arguments, and TotalNumberofOdds isn't defined, and you are accessing the first element of Counters for every loop... Anyways, is this something like what you want to do?? clear all; close all; N=1000; RN=randi([1,7],[N 1]); for i = 1:max(RN) count(i)=sum(RN==i); end bar(count) ylabel('Number of wins (out of 1000)'); xlabel('Horse Saddle Number');
they save but won't reload.
Ahh okay - I understand most of the matrix mathematics in Matlab and the syntax in this situation made it harder for me to follow; but I see it now. I understand, the pause is what slows the program down between updates in order for the viewer to see the change in the graph. So, if I'm understanding this correctly, if we were to take out the "pause" and assuming the time for the graphical update were zero (perfect world here), we wouldn't see the graph change at all?
Don't load them all in at once
941 * 1360 * 3600 * 8(bytes per double) = 36857088000 bytes, or 34.32 gigabytes. According to [this](http://www.mathworks.com/support/solutions/en/data/1-IHYHFZ/index.html) you should be able to create the array if you're on a 64 bit operating system running version 7.5 or later. But that's huge, and it's almost certainly a better idea to load them in smaller batches than try to manage a 34 gigabyte array. 
You can check how matlab does it using: open dec2bin To print the number formatted the way you want it try using: fprintf('%0.0f/r/n',ToBinary(x)); From a first view, you can optimise your code by changing the for loops to while loops (you are currently doing the same amount of processes whether you are converting 2 or 2^100). Your algorithm itself is not very efficient (to run 1000 numbers it took me ~0.5sec whereas dec2bin does it in less that 1ms for example) Another comment, your code does not work for an array X, e.g. if you want to change [3,4,5,6] at the same time, although you probably do not care about that!
So the files are split up in years. I guess I could run it for each year? About 100 files per year. That would only be like 3.6 gigs
It would help me greatly if you could try to give a more elaborate example using your own words of what you are trying to do. 
sub2ind/ind2sub will convert between the formats you want I believe.
&gt; I can't define p twice, as it overwrites. If BOTH of those statements are true (i.e. p = a(1-e^2) and p = H^2/mu), then you very much CAN define it twice. How else would you enforce both of them being true? Note, in vector A above, you are not entering individual variables - you are entering expressions. such as: A(1) = p - a*(1-e^2); A(2) = p - H^2 / mu; (solve() equates the symbolic vector argument to a zero vector, and solves the resulting system of equations).
Thanks a ton. I've been able to build a vector of formulas that I can solve. Now my main problem is handling input. That's just a bunch of flow control though. thanks for all your help!
Do you actually need every single element of that array at the same time? Can you run the program separately per image, or can you run it separately across the same pixel for all images? Is there any way at all in which you can break up the data into smaller blocks and still get the same result when processing it? Can you downsample in any of the dimensions? We have no idea what your program is doing, so there is no way to help you find a better way to do whatever it's doing.
I'm having trouble mapping the odds (7:1) and the final outcome (a uniqe position from 1-7 for every horse) mathematically. Do the odds of all (seven) contestants add up to one? What do the odds indicate - chance of winning? If so, can you even extrapolate from the chance of winning to a horse's finishing position other than first place?
The odds generally go over 1 which leaves room for the house to win. The odds can be converted into a probability of winning by dividing. 7:1 is then converted to 1/(1+7) , the probability of that horse winning. As for the position aside from first place I don't think the odds would be able to predict that. A more detailed program would be able to but for this I'm simply trying to find first place finishes.
Question: what is the data type coming out of loadsir()? If it's anything other than double(), you're wasting time and space initializing dayH as double (the default in MATLAB). You can initialize zeros of a different type with: X = zeros(5,4,3,'uint8'); If the data from loadsir() is double, you might consider casting it to 'single.' This will double the number of elements that you can have in memory. dayH = zeros(length(fname),size(tmp,1),size(tmp,2),'single'); ... ... dayH(i,:,:) = single(loadsir(fname(i).name)); ...
Hmm ok. It's just I want to eventually crop these pixel arrays down smaller somehow
reshape ?
Beignet gave the correct answer (note "rIndex" means "row index" and "cIndex" means "column index"). Another way to do it is a bit more manually, but you can do it in a single step. B(A+(0:length(A)-1)*size(B,1)) = 1; This is exactly what "sub2Ind" does. Note that this works because Matlab can index into matrices by going down the first row, then down the second row, etc. All sub2ind does is what we've done in that step: the first column is indexed by its row, the second column indexed by its row plus the number of the rows, the third column is indexed by its row plus two times the number of rows, etc.
Hi, sorry I'm late to the game. I see people recommending using plot() every iteration of the loop. Do not do this--it's computationally much more intensive than simply updating the XData and YData each iteration. Do something like this: p=Plot(longitude, latitude,'LineStyle','None','Marker','.') for i = 1:num_iterations new_longitude= stuff; % put calculation in here new_latitude = stuff; set(p,'XData',new_longitude,'YData',new_latitude); drawnow; pause(1/framerate); end That'll update the plot much more smoothly.
It sounds like you don't need a 3d array at all. Why are you using it?
because I'm loading multiple files. But I cropped the array down now to the area I need so It should work better.
thank you
Ok so I downloaded SDK7; and now matlab recognizes it as a compiler! So to import code from VS c++ 2010, I have to send it to SDK? I'm a little confused on how I get the code from Vs to SDK to matlab btw thank you for taking the time to give some help
You're still missing the point. If you only need one file in memory at a time, which you claim is the case, then you do not need a 3d array. You can load one file, process it, delete it, WITHOUT creating any kind of 3d array, then move on the the next file. From the information you've given, this is the right solution to your problem.
ahh darn! I thought it worked but it actually just changes it from &lt;engine.h&gt; to &lt;correngine.h&gt;. I'm still not allowed to use the engine functions
Are you still getting compile errors or linker errors? What do you mean it changes from engine.h to correngine.h? You will also need to add the _correct_ library directory from the matlab path, depending on the platform you are on and also link the correct libraries, libmat, libeng etc... I can't remember the exact names without my matlab computer here.
Thanks for the help! I'm not sure if anyone would be interested. But last night I also found this solution. It's interesting, though I'm not sure sure how efficient it is. `y = [3;4;6;3];` `matrix = eye(max(y));` `matrix = matrix(y,:);` 
ok, I'm just wondering where do you find the files to add? I've been to trying to include the Matlab extern files, but I can't find the address on my computer. Where did you learn all of this? I'd gladly devote the time to learning all of this instead of asking questions on a forum but I can't find a guide to the process of all of this
By the way, it's a little hard to see what I did, but it's pretty simple. Basically, this is what happens: B has 10 zeros, which means each additional row we're accessing, we add 10 more A = 1 2 3 4 + 0 10 20 30 -------------------------- = 1 12 23 34 So in my above comment, we just made this into a single command. We have A, the top row, plus this: (0:length(A)-1)*size(B,1) In this case, that means this: [0 1 2 3] * 10 = 0 10 20 30 which gives us the second row.
ok, I've just seen it happen in videos and it doesn't seem too hard, they just never explain how to add the matlab libraries and where to add them, which is where I'm stuck
Here's how I ended up solving it clear all; close all; N=1000; RN=randi(1000,N,1); Counters=zeros(1,8); for i = 1:N if RN(i) &lt;= 130 Counters(1)=Counters(1)+1; end if RN(i) &gt; 130 &amp;&amp; RN(i) &lt;= 330 Counters(2)=Counters(2)+1; end if RN(i) &gt; 330 &amp;&amp; RN(i) &lt;= 430 Counters(3)=Counters(3)+1; end if RN(i) &gt; 430 &amp;&amp; RN(i) &lt;= 510 Counters(4)=Counters(4)+1; end if RN(i) &gt; 510 &amp;&amp; RN(i) &lt;= 710 Counters(5)=Counters(5)+1; end if RN(i) &gt; 710 &amp;&amp; RN(i) &lt;= 740 Counters(6)=Counters(6)+1; end if RN(i) &gt; 740 &amp;&amp; RN(i) &lt;= 800 Counters(7)=Counters(7)+1; end if RN(i) &gt; 800 &amp;&amp; RN(i) &lt;= 1000 Counters(8)=Counters(8)+1; end end bar(Counters) title('Monte Carlo Horse Race Simulation (1000 Races)'); ylabel('Random number of wins (out of 1000)'); xlabel('Horse Saddle Number');
We used very similar methods. Yours is much more readable. Glad you solved it!
Appreciate your help! Thank you!
If [a b c d] is the vector A, this only changes A to be [1 2 3 4]. I need to change the individual variables a b c d to be 1 2 3 4, respectively. So that they show as such in my workspace and variable editor.
thanks man, gonna try out now!
From the documentation: "format does not affect how MATLAB computations are done." In particular, format rat just displays a rational number that's close to the floating point value. It can be helpful if you want to find the exact inverse of a small matrix with rational entries, but you can't rely on it too much. Matlab isn't really designed to do exact calculations, because for matrix decomposition problems it's either generally impossible to find formulas in closed form. For computing eigenvectors/eigenvalues, there are no exact formulas except for small matrices. The algorithms are iterative and the best you can hope for is a solution within round-off error. Well, for small systems, you can use the symbolic toolbox to force the calculations to be done symbolically. Like this: [u,v]=eig(sym(A)) Check that it diagonalizes exactly: u*v/u - A
great thanks. It works, does the sym calculation work for SVD as well? I can't get it to work...
got it thanks! 
tyr10n, just one question, the matrices that I am working with are 455X455 real symmetric matrices. I am finding the computation time to be significant when using the symbolic toolbox, is there any way to make the computation time shorter?
TotalOutput = TotalOutput + IterationOutput; ?
You won't be able to use the symbolic toolbox for a problem of that size, unless it's diagonal or something simple like that. In general, there is no closed form solution for eigenvalues of matrices size 5 or greater. The best it can do is give you the characteristic polynomial. Is there some reason you need a symbolic answer?
Thanks for the replies. I'll try some of these when I'm back in college next week.
I'm trying in a blank workspace, but when I do [a b c d] = [1 2 3 4] I get the error, "Too many output arguments". If I name A = [a b c d], first defining a b c d as 1 2 3 4, and then try A = [2 3 4 5], It only changes A to be [2 3 4 5]. The individual variables a,b,c,d are still 1,2,3,4. 
but using ode45 is no? i can break it down into single equations; since the matrix is 7x7 i can get 7 equations. How i can use MATLAB for this is beyond me however. 
Yeah, so basically this is what I'm trying to do. I need to diagonalize a matrix "R" where R is symmetric and real. Now suppose (P^-1AP) diagonalizes R where the eigenvectors of R form the column vectors of P Now I need to use P to form another matrix A which involves the computation where A = P^-1XP where X is a new matrix that is symmetric and real. A will be used in other computations where I need to solve for the eigs of A. I dont know if I am being very clear but basically I am trying to implement equation 2-35 on this paper http://www.ece.unm.edu/summa/notes/In/0195.pdf on pg. 30. I am realizing when I do this, I am getting imaginary eigenvectors/values which is not the case if i do symbolic toolbox, but since my Rmatrix is very large, i'm trying to figure alternative ways to do this that are not time intensive. ps. thx for ur help thus far! edit: I guess a better question for me to ask is, are there any simplifications I can do to make my matrix smaller if it is a square symmetric real matrix for symbolic eigenvalue computation?
Generally, the frequency you're interested in is 1/T, where T is the duration of the phenomenon you're looking for. the Q and S waves are the shortest duration parts of the signal. I don't know what the duration of these is. When I was looking though, I found this: http://en.wikipedia.org/wiki/Electrocardiography#Filter_selection This says that the Low Pass filter has its cutoff frequency at 40 Hz. Good luck.
You might try to concatenate zeros to the beginning 50 spaces... it would preserve the lengths. Ynew=[ zeros(1,50) Y(51:length(Y)) ]; Or whatever value that Y's index, instead of 51, contains the first of the good values. 
Just wanted to say thanks for the plot fft command. New to matlab and kept getting polar values when plotting but had no idea how to convert it! Have an upvote. 
I've used dlmwrite here and there but it's pretty limited. As far as I know, there's no way to do this with it. But seriously, it isn't hard at all to do it yourself with a simple for loop. I wrote one today in a few minutes... and another one to read in CSV files, as I was tired of the limited abilities of csvread and the crazy syntax of textscan. I've found unless you have some compelling reason not to, it's often easier to just roll your own rather than bending over backwards trying to get the built-in functions to do something for you.
Unfortunately, I'm pretty sure there is no way to do what you want to do with dlmwrite. This is partly due to how delimited files are actually stored and interpreted. As I understand it, here's what you want to do. 1) Write column 1 and 2 to the file with precision %.0f 2) Write column 3 to 8 to the file with precision %.3f You want the result to look something like this Ply Theta Thickness E11 E22 nu12 G12 1 1 0.001 0.02 0.02 0.02 0.03 2 1 0.001 0.02 0.02 0.02 0.03 3 1 0.001 0.02 0.02 0.02 0.03 This is fundamentally impossible using dlmwrite and -append. To understand this, you have to keep in mind what matlab is doing when it is outputting a delimited text file. The key point is that, once in the text file, matlab really does not interpret the contents and has no concept of what the actual internal structure is. When you '-append' to the file, it treats everything before the end of the file &lt;EOF&gt; as basically a big string of zeros and ones. This would not be a problem if you wanted to append rows to the file that had a different precision. Because the strategy for most delimited text files is to store the data row-by-row, it is easy to add another complete row at the end of the file. But because of the linear nature of files, it is difficult if not basically impossible to add data column-by-column. For example, your first dlmwrite command using the example data given above, would write out data like this. Ply Theta Thickness E11 E22 nu12 G12 1 1 2 1 3 1 This data is laid out in the file in linear order with new lines (&lt;cr&gt;&lt;lf&gt; or just &lt;lf&gt;) delineating each row. In the file, it looks like this. Ply Theta Thickness E11 E22 nu12 G12&lt;lf&gt;1 1 &lt;lf&gt;2 1 &lt;lf&gt;3 1 &lt;EOF&gt; Now, if you wanted to you could append another row to the file. It is as simple as appending &lt;lf&gt;4 1 to the end of the file. Ply Theta Thickness E11 E22 nu12 G12&lt;lf&gt;1 1 &lt;lf&gt;2 1 &lt;lf&gt;3 1 &lt;lf&gt;4 1 &lt;EOF&gt; But adding *columns*. This is the tricky part. To do that, matlab basically need to interpret the data in the file. It needs to understand a bunch of stuff. Delimiters. Header formats. Maybe data formats and encapsulation (is each cell contained in double quotes for example). It would then need to insert just the right data at the right locations. Ply Theta Thickness E11 E22 nu12 G12&lt;lf&gt;1 1 &lt;HERE&gt;&lt;lf&gt;2 1 &lt;HERE&gt;&lt;lf&gt;3 1 &lt;HERE&gt;&lt;lf&gt;&lt;EOF&gt; This is WAAAY harder than just adding data to the end of the file. It actually requires reading in the entire file, understanding its structure, and then re-outputting the old contents with the new contents added. This would be extremely prone to error and would probably cause way more problems than there are ever use-case scenarios for this. **But what is coffset and roffset there for? ** I don't use these often, so I'm just going off the documentation, but it looks like they are just used to basically add white space to the file. coffset is a positive offset that adds whitespace before the first column of every row. coffset does the same by adding extra newlines &lt;lf&gt; to the top of the file. They aren't meant to work like you are trying to use them, though I understand your confusion as the documentation uses very weird terminology. From the documentation. &gt; The data is written starting at the first column of the first row in the destination file. I don't know what they are talking about. You're writing to a delimited text file. There's no such thing as the first column or row. It's just the start of the file. Very confusing if you didn't know better. **What can I do?** Ah, here's the fun part. ~~As MattTheGr8 pointed out, you'll probably just have to use a loop.~~ To get the different precision as you want, you can use fprintf with the right format string and even avoid the loop! fid = fopen('ABDOutput.txt','W+'); fprintf(fid,'\nPly Theta Thickness E11 E22 nu12 G12'); %Make this all one matrix if you can omat2 = [(1:length(t))' lay' t' repmat([E11 E22 nu12 G12],length(t),1)]; fprintf(fid,'%.0f\t%.0f\t%.3f\t%.3f\t%.3f\t%.3f\t%.3f\n'); fclose(fid); fprintf will just re-use the format string until it runs out of data and should give you your desired format output! 
The frequency cutoff that you want is entirely dependent on the frequencies contained in the signal you're looking for. Find out the width of the smallest feature of the waveform that you care about. Set the filter cutoff frequency to at least 2x less than that. Here's a quick m-function that'll simplify things a bit: function data = lowpass_filter(data, sampling_rate, cutoff_freq) %-------------------------------------------------------------------------- % note: 'filtfilt()' runs the filter forward and backward, doubling the filter order order=4; [b,a] = butter(round(order/2),cutoff_freq/(sampling_rate/2),'low'); data = filtfilt(b,a,double(data)); It's nice having the function because butter() requires that you normalize your signal by the Nyquist frequency (1/2 the sampling rate).
One is the opposite of the other. So polyfit will fit X data to Y results with N orders of coefficients. Polyval will take P coefficients, X data and N orders of coeficcients and refit them. So you have data you created with X=1:100 Y=.918723.*X.^3+.2398283.*X.^2+.9823298.*X.^1+.928398.*X.^0+rand(1,1) So it's mostly accurate but there is that random bit at the end. So you use polyfit to recreate the data. P3=polyfit(X,Y,3) That means the biggest x^### is 3. If you wanted to fit it to a 2nd order model you would use P2=polyfit(X,Y,2) Lets do both and compare. And for the hell of it a 4th and a 1st order too. P4=polyfit(X,Y,4) P1=polyfit(X,Y,1) So now with those coefficients you can recalculate what Y should be based on the X values. y1=polyval(P1,X); y2=polyval(P2,X); y3=polyval(P3,X); y4=polyval(P4,X); Now lets compare. plot(X,Y,'r*',X,y1,X,y2,X,y3,X,y4); legend('Actual Data','polyfit(1)','polyfit(2)','polyfit(3)','polyfit(4)','Location','SouthEast') So as you can see from P3 and P4, they're near identical. P4 just had a leading coefficient of damn near 0. So P3 and P4 are pretty good estimations of what is going on. P1 and P2 kinda suck but you're trying to estimate a 3rd order polynomial with a 2nd order. 
OK, I'll throw you a bone here. I'll give you an example of how to break down the equations to state-space form (system of first-order ODEs) and how to use `ode45`. I'll only use a single-degree-of-freedom system; it's up to you to extend this example. Suppose you have a spring-mass-damper constrained to move in only one direction, `x`: mx'' + cx' + bx = p(x) There are two state variables here: the position (`x`) and the velocity (`x'`). You can tell there are two state variables because this is a 2nd order ODE. We can convert this 2nd order equation to a system of two 1st order equations as follows: Let x1 = x and x2 = x' =&gt; x1' = x2 x2' = (-c*x2 - b*x1 + p(x1))/m Now we can write this in matrix form. I'll use MATLAB notation instead of matrix notation here because I can't use LaTeX on Reddit (that I know of): d/dt[x1; x2] = [0 1; -b/m -c/m]*[x1;x2] + [0; p(x1)/m] Let `A = [0 1; -b/m -c/m]` and `B=[0;p(x1)/m]`. Let `X=[x1;x2]`. Now the equation reduces to: dX/dt = AX which is (a) the state-space realization of the dynamical system in question; and (b) the form needed to run `ode45`. ====== `ode45` is essentially a variable-step Runge-Kutta numerical solver, and it's the first solver you should always try when simulating a dynamical system. From the [MATLAB documentation](http://www.mathworks.com/help/matlab/ref/ode45.html), the code prototype to use this is [T, Y] = ode45(odefun, tspan, y0) where `odefun` is going to be the state-space system you just built and is of the form `y' = f(t,y)`. So you might write code as follows: myODE = @(t, x) A*[x(1); x(2)]+[0;p(x(1))]; Note that the solver expects `t` to be a variable, even though never use it. `ode45` and the other solvers can solve time-variant as well as time-invariant dynamical systems. You need to include it in the function prototype even if you don't use it. Suppose you want to simulate the first 10 seconds; so let `tspan = 0:0.001:10`. Also suppose that initially you're displaced at 5 meters to the right but you're at rest, so `y0 = 5`. Putting it all together, [t yout] = ode45(myODE, tspan, y0); I don't have MATLAB in front of me otherwise I would plot for you what the output would be, but rest assured that this system will oscillate with damping until it comes to rest. ====== This should be enough to help you get started. There are a couple things to note that's different for your problem: - If your system is 7 degrees of freedom, then you'll have 14 state variables. Your matrix `A` will be a 14x14. Assuming the degrees of freedom are independent, you should obtain a block diagonal matrix. - Your system is time-variant because of the forcing function `p(t)`, dependent on time instead of on the state variables. This doesn't really change the formulation of `A`, only `B`. `B` will be dependent on time instead of on your state variables now. Based on the formulation, you'll see the `B` vector have a pattern of [0; p1(t); 0; p2(t); ... ; p7(t)]. Hopefully this is enough for you to start. Good luck.
Don't have a MATLAB installation in front of me, but I don't think you even need the loop with fprintf. Set the format string, file ID, and pass in the whole matrix. It'll re-use the format strings until it runs out of data. It _should_ work.
I figure it must be. It seems very similar to knapsack, but I was just wondering if there was some decent implementation of it out there. I'll give this guy a try. Thanks. 
I don't know anything about exponential-gamma convolution, but if MLE() doesn't have what you want, you might look into the NLINFIT() function in the statistics toolbox. You may also check out the Curve Fitting Toolbox.
SO I actually don't know anything about Matlab's GUI system, but maybe this is helpful: generally, a callback is just a function that you write but that you yourself don't call; it gets called by someone or something else. I.e., you define a function or piece of code and tell the computer that it should be saved and executed whenever certain conditions are met or a certain event happens. Then, the computer calls the function for you whenever those conditions are met or whenever that event happens. Of course, to do this, you need to write some sort of code that tells the computer e.g. which function to call, when, say, the user clicks on a certain button. So if you wanted the "insultUser()" function to be called whenever the user clicks the button marked "I am great", you would need to declare this by somehow associating the "insultUser()" function with the "I am great" button. It may be that in matlab this association is made via calling some GUI function (in other programming languages, this is common, you also might see a macro invocation, or even an external data file being used). Of course, you can't pass the "insultUser()" function as an argument to any other function directly; as I understand it the purpose of a *handle* is to, given the "insultUser()" function, provide you with a variable that represents the "insultUser()" function—that variable then CAN be passed to another function, thereby informing matlab of what to do when the user clicks the "I am great" button. Hopefully you didn't already know all of this!
Despite what matlab says, eventdata is used in certain cases. I only know a couple examples, but it's worth it to check the eventdata variable any time you use a new kind of Callback. If you create a UI table and you right click it in GUIDE and choose 'View Callbacks and choose CellSelectionCallback it will create the following line in the associated .m file. function uitable1_CellSelectionCallback(hObject, eventdata, handles) In this case, eventdata is a struct containing a field,'Indices' which contains a matrix of all the cells that were selected. This field can be stored into handles referenced later. Another example is a UI panel, specifically one that is designated as a Button Group. If create a 'Button Group' (not a real class, just a special version of UI panel) and create two radio buttons on it and then right click on the button group and select 'SelectionChangeCallback' from 'View Callbacks' it will create the line function uipanel2_SelectionChangeFcn(hObject, eventdata, handles) The eventdata contains three fields, 'EventName', which in this case is the character array 'SelectionChanged'. 'OldValue' and 'NewValue' are the other fields which contain the handles to the radiobuttons that were simultaneously selected and deselected. You can use this info to operate on the buttons without having to store the relevant handles yourself. function uipanel2_SelectionChangeFcn(hObject, eventdata, handles) set(eventdata.OldValue,'Enable','off') You can do this same thing without eventdata, but it's much less elegant, function uipanel2_SelectionChangeFcn(hObject, eventdata, handles) oldHandle = get(handles.uipanel2,'UserData'); set(oldHandle,'Enable','off') newHandle = get(handles.uipanel2,'SelectedObject'); set(handles.uipanel2,'UserData',newHandle); I really want MatLab to get it together and make eventdata a relevant input for most every kind of callback (i.e. button information on a ButtonDownFcn)
[Doug's Matlab videos](http://blogs.mathworks.com/videos/) are a great intro to these types of things. The [*Advanced MATLAB: Handles and other inputs to GUIDE callbacks* video](http://blogs.mathworks.com/pick/2008/04/17/advanced-matlab-handles-and-other-inputs-to-guide-callbacks/) covers most of your questions nicely. The [*Advanced MATLAB: Capture mouse movement* video](http://blogs.mathworks.com/pick/2008/05/27/advanced-matlab-capture-mouse-movement/) may be helpful for your axis marker question. *Edit* **handles** You can think of Matlab as having two types of objects, value objects and handle objects. Arrays and structs are value objects. If you create a function and pass an array to that function and edit that array within the function, then the array will be copied inside the function and modifications to the copy will be made, so you cannot expose the modifications unless you return the copied array from the function. If you pass a handle object to a function and edit it, then the object itself is modified and no copy is made. So once you modify a handle object and return from the function your modifications will be visible without the need to return the object from the function. If you type: \&gt;&gt; doc handle You'll see I pretty much copied the first two paragraphs.
Handles is simply a struct to all things GUI-related. It gets passed to callback functions so that you can access various items. Every GUI item will be included in the handles struct, which is created upon initialization. For example, let's say you have a button with tag "button_1" and a text field called "text_field_1". The button's callback function might look like this: % --- callback for button_1 % note: "hObject" is a reference to the button itself (since it's button_1's callback) % "events" contains stuff like type of keypress, usually useless except in a few cases, e.g. buttongroups % "handles" is the struct to everything in the GUI function button_1_callback(hObject, events, handles) % we want to change the text field to something. we can access the textfield via handles set(handles.text_field_1,'String','I just clicked the button!'); Ta-da. See how handles works? Now let's go one step further and record a variable into our GUI. For quick reference, "handles.output" refers to the entire figure(same as using gcf, but it's safer in case another figure has opened in the foreground). So, this time let's increment the string every time the button is clicked. function button_1_callback(hObject, events, handles) % this is how we grab saved data to the GUI incr_value=getappdata(handles.output,'incr_value'); if(isempty(incr_value)), incr_value=0; end % the first time, we may not have a value stored % increment the value by one incr_value=incr_value+1; set(handles.text_field_1,'String',sprintf('incr_value = %g',incr_value)); % save the new value of incr_value to the GUI setappdata(handles.output,'incr_value',incr_value); For situations where speed may be in an issue, it might be preferable to initialize global variables in your functions, so they don't have to be loaded via the setappdata() and getappdata() functions. If you'd like more assistance on your particular problem I'd be happy to help.
Note that there are also undocumented uitabgroup() and uitab() (but still supported) constructors that also use eventdata.
This isn't really something that requires matlab, this is basic probability. I'm assuming the question is, "what are the chances of getting the same side six times in a row with only six throws." Obviously, if you have an infinite number of throws, the chance of throwing the same side 6 times in a row is 1. Assuming it's just 6 throws, then each side has 1/6 chance of showing up. The first toss can be any of the six sides, but the five remaining tosses must be the same side each time, and each time have a 1/6 chance of showing up. Thus the answer is p = (1/6)^5 = 1.2860e-04, which comes out to a 0.01286% chance.
Quick tip: four spaces before text turns it into code, like this code goes here As far as your error is concerned, your loop is a bit like this: for i=1:1200 M(1) = M1; ... q(i) = M(i)*i/Iy; ... M(i) = value; end The first iteration you set M(1), read M(1) and set M(1) again. The second iteration you set M(1), read M(2) (ERROR!) and set M(2). You probably want the last lines of your loop to be X(i+1) = value; Z(i+1) = value; M(i+1) = value; etc.
You sir are my hero, that did it. Also, thanks for the tip, I was wondering why it was doing that.
Now everything is blowing up, you have any idea why that might be?
Can you elaborate a bit on the 'blowing up' part? Also this part seems weird if i &lt; 1; %Input for elevator deflection %based upon time step dele = 0; since i will never be smaller than 1.
In order to use **quad**, you need to translate your function into a function handle. Let's assume that your user is nice and always gives a valid, clean function expressed in terms of a single variable **x**. First you need to get the contents of the text box (I think you already have this one figured out): functionText = get(handles.integral, 'String'); Next you need to translate this into a function handle. There is a great function **str2func** which can translate a properly-formatted string representation of an anonymous function definition into a true function handle. You just have to append the string '@(x)' to the front: functionHandle = str2func(['@(x)',functionText]); Now just feed it into **quad** with the limits: I_quad = quad(functionHandle, b, a); I forgot to add that in order to use **trapz** you need to get this far, too. Let's create x and y as inputs to **trapz**: x = linspace(b, a, 100); % span from b to a in 100 elements. change for better precision y = functionHandle(x); Now integrate: I_trapz = trapz(x,y); **TL;DR: You need to learn how to use function handles for this sort of operation.**
The piece of code combined with lack of knowledge about what the code is supposed to do makes it hard for me to find the root of the cause. I do have some general piece of advice though. * describe what each small piece of code is supposed to do * incrementally write your code, testing each increment throughout the process. Keep comparing: what values are expected, and what values do you actually get * in the code above the variable W is used before it is defined, which suggests that you run your code with the results from previous runs. It is generally a good idea to put a 'clear all' before your code I.e. keep it clean, clear and manageable.
system('perl something.pl') Look at system command. 
Use the function: isnan This function checks to see if the value is not a number (nan) value = str2double(get(h,'String')); if ~isnan(value)... % The value is a valid number, do stuff else % The value is not a number (letter, symbol, etc), do stuff end
I think he is already doing that.
You could always create the Perl file using fopen/fprintf/fclose, run it, and then delete it.
You can take the string from the edit box, convert to the [ascii](http://www.asciitable.com/) code values, and then compare: thisText = get(handles.editbox, 'String'); thisAscii = double(thisText); % uppercase letters are 65-90, lowercase letters are 97-122 allLetterInput = all((thisAscii &gt;= 65 &amp; thisAscii &lt;= 90) | (thisAscii &gt;= 97 &amp; thisAscii &lt;= 122)); % digits 0-9 are ascii 48-57 allNumberInput = all(thisAscii &gt;= 48 &amp; thisAscii &lt;= 57); 
If OP wants to actually perform experiments in MATLAB to estimate the probability, s/he could do so. It would require simulating the flip of the coin over and over to calculate the probability of hitting the same side 6 times in a row. To generate a boolean random number, we can use the RAND() command and compare with 0.5: one_coin_toss = rand(1,1)&gt;0.5; % 0 is tails, 1 is heads 
Thanks, I had forgotten about the '-e' option. In general I was able to get your idea to work (and for Windows/DOS one needs to use double quotes after the -e switch), but since I also need to pass in @ARGV I had to mess around with Matlab's eval() function. Given some more time I might be able to get that to work.
&gt; "...the chances are of getting the same side six times in a row when **throwing a coin** ..." OP is throwing a coin. I, too, was working on die-throwing code in my head when I saw "six" and "side" together. But the code is nearly identical whether S = {T,H} or S = {1,2,3,4,5,6}. Just the probabilities of each throw/roll will be different. Also, **randi** is a great option for producing random integers in a given range. It saves scaling and rounding.
Yeah, good point; should have used randi(). Here's updated code to allow for both N-sided dice (2 = coin flip) and also using randi: % Generate simulated coin tosses num_tests = 1e7; % let's run this 10 million times num_sides = 2; % number of sides to the die (2 = coin) num_tosses = 6; % number of times we throw during each test die_tosses = randi(num_sides,[num_tosses num_tests]); % this generates random numbers from 1-2 with equal probability % find the rows that are all equal d=diff(die_tosses); % find difference between adjacent tosses % find the locations where all of the differences are zero (this means all items were the same) and count them num_same=sum(all(~d)); % report what percentage of tosses came out the same pct = num_same/num_tosses*100; fprintf('%2.5f%% die tosses were the same.\n',pct);
Because handles doesn't exist?
You have to call it in a callback function or something. You can't just put it at the end.
What is this line for?. If you're setting handles.DebriefQ1 to 0, its referring to the [root object](http://www.mathworks.se/help/matlab/ref/rootobject.html). Its got no String property. Presumably, you should have handles.DebriefQ1 = uicontrol(... );
Error using get Conversion to double from struct is not possible. Error in Questionnaire2&gt;DebriefQ2_Callback (line 85) Answer_DebriefQ2 = get(handles,'string');
Now: get(handles.DebriefQ1) (this is how you debug when it throws stuff like this. Because if it complains 'string' doesn't exist see what does exist);
yes, exactly. that's why I'm puzzled.
Then nothing makes any sense.
exactly... 
Remove the close all command, does it still throw the error?
I believe MATLAB itself had native CUDA support, depending on your video card, may be worth looking into something similar for SIMULINK.
You make it sound way to easy! But yes. That's what I need to do. Unfortunately I'm still not getting it.
Thanks! I keep running into trouble using the str2func thing because I think it automatically adds the @ to the variable. Everytime I try to use the GUI it comes back with the error: Error in @(hObject,eventdata)integration('calculate_Callback',hObject,eventdata,guidata(hObject)) Error while evaluating uicontrol Callback Would it help to create a seperate input text box allowing the user to input the variable used in the function seperately?
An extra box for variable entry could probably avoid confusion. You'd have something like: functionText = get(handles.integral, 'String'); functionVariable = get(handles.varBox, 'String'); functionHandle = str2func(['@(', functionVariable, ')',functionText]); Or to avoid the messy concatentation, you can use sprintf: functionHandle = str2func(sprintf('@(%s)%s', functionVariable, ,functionText);
I think the problem with the multicore project is that the way I am currently running the simulation is through simulink (normal mode) which acts as a separate entity and doesn't share any information with matlab until after the simulation has finished. Could I somehow use the accelerator or rapid accelerator mode in simulink to get the multicore system to work?
handles is a variable that's passed to callback functions, and it's a struct containing all of the GUI information. By default, handles.output refers to the figure window. handles.X will refer to the X component of the GUI. You shouldn't need to create your own "handles" variable, and doing so will be nonsensical, as it will point to nothing. Callback functions almost always have the following form: function button1_callback(hObject, eventdata, handles); hObject refers to the specific GUI component that owns that callback function (in my example, button1). "handles" refers to the struct containing all other information, so if you want to change the string, just refer to that handles variable, as in: function button1_callback(hObject, eventdata, handles); str = get(handles.DebriefQ1,'String'); 
Of course they are. You can have 90th order derivatives. But you have to word them in terms of 1st order problems. That's how the linear algebra works. It's not a matlab problem.
You need to break your problem into a system of 1st order problems. So you have y'' = f(x,y,y'). Instead define u = y'. Then you have two equations u' = f(x,y,u) y' = u 
Also, if anyone want's to look at the assignment here it is: http://www.it.uu.se/edu/course/homepage/bervet1/fht12/miniproj/magnetfalt.pdf but it is in swedish
Exactly what I said. Reddit: tis a silly place.
It makes sense that would work. i was just hoping I could access the second derivatives that the solver was probably calculating anyway. It's nice when your software saves some coding.
It does return a 2d array, but it's N * 1 * M, not N * M (* 1) which is obviously a more manageable form. The [reshape](http://www.mathworks.co.uk/help/matlab/ref/reshape.html) command is well worth a look at to solve your problems... Edit: Also the size of DATA in your example is 3,3,N so (:,16,:) is out of range because 16 &gt; 3.
&gt; Our problem comes when we restart Matlab Nothing persists between matlab sessions. If you want something absolutely global you need to specify it in your startup.m
You're welcome. eval is a dangerous thing to use. 
It seems to me that you are misunderstanding the purpose of global variables. Global variables are used to store values that can be used across any MATLAB scope. When you close MATLAB, the global variable is lost. To use a variable from one session to next. you need to save the variable in a mat file using the "save" command and then load it back in the next session using the "load" command. For more help type in &gt;&gt; doc save in the MATLAB command prompt
&gt; Returning N1M seems stupid to me When you do M(:,1) and M(1,:) with some 2d array you expect a column vector and row vector accordingly - if it always returned a row vector it'd be really annoying! The same logic applies for higher dimensions. ~~I don't have a working MATLAB or I'd play with reshape, but I think the syntax youre after is something like ...~~ [This](http://www.mathworks.co.uk/help/matlab/ref/permute.html) is actually the command you're probably after, having looked into it. permute(S,[1 3 2]) for some S=D(:,2,:) should do what you're after.
Good to know!
I will check that out thanks. Yeah matlab is built with generic functionality in mind. I want my problems solved by it now in my way regardless of what is useful for most people. :) Thanks again,I feel lazy asking these questions but i've been banging my head against them too long.
Use the 'squeeze' command. When you ask MATLAB for DATA(:, 16 ,:) it won't give you a MxN 2D array, but a Mx1xN 3D array. When you 'squeeze' that array, MATLAB removes that singleton dimension giving you the desired MxN 2D array.
thanks for the info. the thing is, i have a set of predefined values for R that varies from value to value. in other words, it's not a step function or anything like that. it's data collected from an excel file.
I'm not completely sure what you mean. You want an animated graph? or am I misunderstanding your goal?
Use [pastebin](http://pastebin.com/) for your code, rather than using an image. Nobody is going to bother typing all that out. Also, show us a picture of the graph that your code generates. It might be something very basic that you're missing.
Please clarify exactly what you mean. I'm imagining a large blank figure (its own window) with a small picture of a cheetah in the upper left corner initially, and then the cheetah moves around in some sort of loop-de-loop motion within the figure window. Is this correct in that it is exactly what you want?
How can I import the two images into GUI - then trace a path so that one moves on top of the other?
Here is a little demo I put together a while ago. It has 3 parts: * display 2 images in space * display several images in space with transparency/alpha variation * animate 2 images around the figure **Note that these are moving the images INSIDE the axes window. Other methods posted here move the axes window instead. Both are valid methods and it depends on what you're doing.** Hopefully it helps. %% 1. place two images on surfaces out in space % make the surface hf = figure; ha = axes; X = [0,0;0,0]; Y = [0,1;0,1]; Z = [1,1;0,0]; s1 = surface(X, Y, Z); view(54,16) % add the image try I = im2double(imread('street2.jpg')); catch ME msgbox('Image file street2.jpg not found. Please use another image file') end set(s1, 'CData', I, 'FaceColor','texturemap') % add another image X = [0,0;0,0]-0.1; Y = [0,1;0,1]+0.2; Z = [1,1;0,0]+0.2; s2 = surface(X, Y, Z); %I = im2double(imread('gantrycrane.png')); set(s2, 'CData', I, 'FaceColor','texturemap') grid on title('two images floating in space') %% 2. place 10 images out in space at random points % also use random transparency hf = figure; ha = axes('Color','k'); hold(ha,'on') for n = 1:10 X = [0,0;0,0]+randn; Y = [0,1;0,1]+randn; Z = [1,1;0,0]+randn; s = surf(ha,X,Y,Z); hold on set(s, 'CData', I, 'FaceColor','texturemap') set(s,'FaceAlpha', n/10) end grid on view(54,16) title('10 images placed randomly in space with random transparency') %% 3. move images around the figure on calculated paths figure ha = axes; hold(ha, 'on') t = linspace(0,2*pi,100)'; y1 = sin(t); z1 = cos(t); X = [0,0;0,0]; Y = [0,1;0,1]; Z = [1,1;0,0]; s1 = surf(ha,X,Y,Z); s2 = surf(ha,X,Y,Z); try I1 = im2double(imread('street2.jpg')); catch ME msgbox('Image file street2.jpg not found. Please use another image file') end I2 = max(I1-0.5,0); set(s1, 'CData', I1, 'FaceColor','texturemap') set(s2, 'CData', I2, 'FaceColor','texturemap') grid on view(90,0) axis([-2 2 -2 2 -2 2]) for n = 1:100 set(s1,'YData',Y+y1(n), 'ZData', Z+z1(n)) set(s2,'XData', X+0.01*(rand-0.5),'YData',Y-y1(n)+0.1*randn, 'ZData', Z-z1(n)+0.1*randn) pause(0.1) end ('two images moving around the figure on calculated paths')
try throwing an 'axis tight' command at the end. That will adjust the axes limits so that your data fits exactly inside.
Thank you! I got the plot to update now i just need some kind of stop for the while loop.
Hi, so I just read your post below. So it sounds like you have a background image, and then a point (or small image) move across the background. This is actually pretty easy to do; Matlab can plot multiple things on top of each other. Let's ignore the GUI aspect right now, and deal simply with the electron moving across a background. Suppose that we have two images: **background_image** and **electron_image**. Let's set up a quick case whereby the electron moves from the bottom left to the bottom right automatically, and a specified rate (approximately). Here are the image files I used: * background: [background_image.jpg](https://dl.dropbox.com/u/3983762/image_background.jpg) * electron: [electron.jpg](https://dl.dropbox.com/u/3983762/electron.jpg) Here's some code that's commented that sets background_image.jpg as the background, and moves the electron across the screen. I set some background transparency for the electron to look a little prettier. % Creates a figure with a small foreground image moving across a static background image scrsz = get(0,'ScreenSize'); width = scrsz(3)*.9; height = scrsz(4)*.9; left=(scrsz(3)-width)*.5; bot=(scrsz(4)-height)*.5; figure('outerposition',[left bot width height]); % set up axes a=axes('position',[0 0 1 1]); % load the background image, make sure axis remains fixed % set white to transparent so our electron looks pretty background_image=imread('image_background.jpg'); [bg_height,bg_width]=size(background_image); imshow(background_image); hold all; % load the foreground image at [0,0] electron_image=imread('electron.jpg'); [height,width,~]=size(electron_image); % set white transparency AlphaData=sum(electron_image,3)/255&lt;2.5; % note: axis limits will be in "image" format, which means the following: % [left bottom top right], where top = 0, bottom = height ax=axis(a); h=imagesc(0,bg_height-height,electron_image); set(h,'AlphaData',AlphaData); % move image through trajectory num_frames=100; % note: the image is positioned according to its top-left corner x_trajectory=linspace(0,ax(2)-width,num_frames); y_trajectory=linspace(ax(4)-height,0,num_frames); % run through, update position of electron each iteration for i = 1:num_frames set(h,'XData',x_trajectory(i),'YData',y_trajectory(i)); drawnow; % note: graphics probably won't update unless you do this end
Create a function to do it for you. function varargout = store(varargin) if length(varargin) == 1; for i = 1:length(varargin{1}) varargout{i} = varargin{1}(i); end else for i = 1:length(varargin) varargout{i} = varargin{i}; end end This should allow you to call the following [a,b,c,d] = store([1,2,3,4]) or [a,b,c,d] = store(1,2,3,4); and have the associated variable(s) stored into the output vector.
that helped make it look better but i'm thinking it has to do with something in my equation. The value's are dropping out because it's plotted using the loglog() function, and some of those values are negative so matlab ignores them.
I have gotten solutions for a single result of 0 to .1, but there were still fluctuations in the z values. I'll try implicit ODEs next. Is there a way to increase the step size within the ODE solver? I am not looking for exact values, just positive/negative/zero.
Have you ever studied numerical methods? Do you know about accuracy and stability? 
this is what I have so far, based on what you have been trying to do: you need to save the function I have written (called currentfft) in your matlab directory. It takes the fft for a window around the current sample being played by the audioplayer http://pastebin.com/vVmf4Zd3 after you save the function, make your player as usual player=audioplayer(Y,FS) then set the TimerFcn property of the player to execute currentfft(player,Y,FS) as a callback every set period of time (TimerPeriod) player.TimerFcn='currentfft(player,Y,FS)' a TimerPeriod value of about 0.025 seemed to work well player.TimerPeriod=0.025 use get(player) to check the values for the properties then just use player.play There are cooler things you could do than just this though. It is nice to have the running fft but it is somewhat hard to interpret as it is now. If we play with the window it might make a nicer looking trace. anyone have more suggestions? How about selective filtering using sliders and a nice gui? I was trying to use a spectrogram also but it takes too long to compute and isnt really the correct tool for this application.
Wow! okay, thank you! I followed the instructions and named a file named project with the code here: http://pastebin.com/0SyhSV4G and it has the file you gave me above but nothing opens up. the sound just plays...
try playing the player normally and running currentfft(player,y,Fs) from the command line while its going
Nope. still nothing. Appreciate all the help thought!
okay i got it to work but now the y axis jumps all over the place. i tried commenting back the axis thing but then it didnt work.
cool so when it is jumping around try to figure out good numbers for max and min for the y axis. the syntax for the axis command is axis([xmin xmax ymin ymax]) try to plug reasonable values into ymin and ymax
i tried axis([0 25000 -100 10]) but it breaks the plotting and doesnt display anything. any idea why?