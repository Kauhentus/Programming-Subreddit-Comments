You can get pre-compiled binaries from a lot of places, so you generally don't need to compile for source.
What can you do in Psychtoolbox that you can't do in Psychopy?
Ah. Welp, learned my lesson. 
The closest I've come with cosimulation with MATLAB and circuit simulators is writing the output of one into a text file and reading it with the other. If you use a shell script to control both, then you can control matlab without the gui like this: matlab -nodisplay -nosplash -nodesktop -r "initvars=[...];script;exit;"
.mat is typically a compressed file of the variables you have saved. By default the save command saves your entire workspace. Try load &lt;filename&gt; from the command screen in the correct folder. See the help or docs on commands save and load. And yes, no code saved unless you somehow had your code in a string in your working memory. (Using eval command is possible, but a bad form.)
Not for cv2. Try it.
Correction: **There is no "+" button to click.** Thread OP awards a point to another user by leaving a comment that starts with +
That's one of the limitations I was wondering about. Install Python, etc. on your machine, store it on github, and you're good to go no matter where you go. The proprietary licensing of MATLAB seemed like a major barrier. That goes for learning, too - learning Python has been pretty straightforward because there are so many open source tutorials, and you just need a free text editor on your machine to try them.
That's a Windows problem, not a Python problem. I do hear your point. What if Python *weren't* a nightmare to bootstrap in a corporate windows environment?
&gt; What if Python weren't a nightmare to bootstrap in a corporate windows environment? That's a big IF. And I don't think you understand what sort of resistance you're going to be up against. I tried to roll it out to a small group of people. Zero people bit. My boss told me "Our technical debt is Matlab, I hire matlab engineers. There is no one here to maintain it if you leave". If you can convince a company, best of luck to you. I tried and failed in more than one group of engineers. Scale that to an engineering company in the tens of thousands. Trust me, I've tried. I was 'president' the Python Advocacy Group at #Corporation. Ask legal to go through all licenses and tell you what you are and aren't allowed to use. We've been told we can't submit big fixes because the solution "May contain proprietary information to #Corporation". Get IT (at a time when IT is being cut) to decide upon an install method. Then you have to convince people to use it. I made my own Python distro based on WinPython that made it so you had everything you needed in a .zip file. It a company of 50k+ I got 20 downloads. 20. I held "Python 101" seminars and got 1-2 people to show up and most just sat on e-mail. A lot of people are too busy doing their job to take time to learn something new. There are still curmudgeonly old engineers that still hate to use Excel and and type with 2 fingers. Getting buyin of Python is by far the hardest part. And I understand why, It took me quitting my job and doing nothing for 9 months to finally sit down and learn Python because of how busy I was *doing work*. It was like relearning to type. It took me 1 month to get back to my old typing speed going QWERTY -&gt; Dvorak. It took me ~15 (9 of those mostly full time) months to get back near my Matlab proficiency. It's why VBA was *everywhere*. Because even the admins had Excel. I've seen things done in VBA that should never have ever been done in VBA. Because somewhere some engineering grad student learned VBA and Excel and they never learned another language ever. 
so what youre saying is that i should make sure my codes have to make sure than f(xl)*f(xr)&lt; 0 and it also has to have a certain interval edit: just wondering are there two different roots to this problem or is there only one?
+ Thanks for the clarification!
Here you go, a table for you to fill out. Everything that pays my paycheck has nothing close to being equivalent. And that's been par for the course with everything I've randomly searched for. | MATLABÂ® Product Family | Python Module | | | |:---------------------------------------------: |:-------------------: |:--------------: |:----: | | MATLAB | python | | | | Parallel Computing | | | | | Parallel Computing Toolbox | dask | numpy's prange | | | MATLAB Distributed Computing Server | celery | dask | | | Math, Statistics, and Optimization | | | | | Symbolic Math Toolbox | SymPy | | | | Partial Differential Equation Toolbox | SymPy | | | | Statistics and Machine Learning Toolbox | statistics | scikit-learn | | | Curve Fitting Toolbox | | | | | Optimization Toolbox | | | | | Global Optimization Toolbox | | | | | Neural Network Toolbox | | | | | Model-Based Calibration Toolbox | | | | | Control Systems | | | | | Control System Toolbox | control | | | | System Identification Toolbox | None | | | | Fuzzy Logic Toolbox | | | | | Robust Control Toolbox | | | | | Model Predictive Control Toolbox | | | | | Aerospace Toolbox | | | | | Robotics System Toolbox | | | | | Signal Processing and Wireless Communications | | | | | Signal Processing Toolbox | | | | | DSP System Toolbox | | | | | Audio System Toolbox | | | | | Communications System Toolbox | | | | | Wavelet Toolbox | | | | | RF Toolbox | | | | | Antenna Toolbox | | | | | Phased Array System Toolbox | | | | | LTE System Toolbox | | | | | WLAN System Toolbox | | | | | Image Processing and Computer Vision | | | | | Image Processing Toolbox | Pillow | | | | Computer Vision System Toolbox | cv2? | | | | Vision HDL Toolbox | None | | | | Image Acquisition Toolbox | | | | | Mapping Toolbox | | | | | Test and Measurement | | | | | Data Acquisition Toolbox | | | | | Instrument Control Toolbox | | | | | Image Acquisition Toolbox | | | | | OPC Toolbox | | | | | Vehicle Network Toolbox | python-can | | | | Computational Finance | | | | | Financial Toolbox | | | | | Econometrics Toolbox | | | | | Datafeed Toolbox | | | | | Database Toolbox | | | | | Spreadsheet Link (for Microsoft Excel) | | | | | Financial Instruments Toolbox | | | | | Trading Toolbox | | | | | Computational Biology | | | | | Bioinformatics Toolbox | | | | | SimBiology | | | | | Code Generation | | | | | MATLAB Coder | Cython? | | | | HDL Coder | MyHDL | | | | Vision HDL Toolbox | cv2 | | | | HDL Verifier | | | | | Filter Design HDL Coder | | | | | Fixed-Point Designer | | | | | Application Deployment | | | | | MATLAB Compiler | Cython? | | | | MATLAB Compiler SDK | | | | | Spreadsheet Link (for Microsoft Excel) | xls-wings | | | | MATLAB Production Server | flask, django, etc. | | | | Database Access and Reporting | | | | | Database Toolbox | sql-alchemy | | | | MATLAB Report Generator | upyter notebooks | | |
The number 1 reason I haven't taken the time to do cv2 tutorials. I can leaf through Matlab's computer vision examples at lunch.
this is really helpful. The "some guy on PyPi" is a funny example, for sure, but what about engineering students? Why learn MATLAB when Python is free and faster to learn?
If a hot liquid in a container is left to cool, its temperature will gradually approach room temperature. The temperature of the liquid is expected to follow the mathematical model T = A + B*e^(mt). Plot the data points along with the mathematical model &amp; include labels &amp; title. Use fplot to plot the function, and plot for the data points. A=30 B=40 m= -.276 sorry i'm new to reddit 
How do I plot just the points along with the function? 
Check out the function 'hold'. Usually, plot the first thing, call 'hold on', plot the second thing, 'hold off'. Basically, it lets Matlab know that you don't want it to erase what has already been drawn in the figure window.
There's just [one root](http://www.wolframalpha.com/input/?i=roots+of+x%2F(1-x\)*sqrt(2*3.5%2F(2%2Bx\)\)-0.04). Well, there are different approaches to deal with the singularities. First, you need to know where the singularities are (i.e., in your case, the x-values for which the denominators in the fractions become zero). Then you can check the user specified interval xl &lt;= x &lt;= xr if it contains any singularities. If so, you can either ask the user to provide a different interval or you can divide the user specified interval into different sub-intervals which are separated by the singularities. I guess in your case it would suffice to demand the search interval to be between -2 and 1, since for x &gt; 1 the function does not cross the x-axis anymore.
+ Yes, it is possible. I just +1'd you right now.
A GUI for "almost everything" would be a huge advantage.
Here is the link you'll need most. http://uk.mathworks.com/help/matlab/ref/function.html?searchHighlight=function I dont know the equation so not sure where it comes in, but think about it in terms of the journey of data. Write down on paper the inputs that are going into the function, what's happening to them, and what the answers should be. to get you started - Type *edit myHomeworkFunc*. When that opens type *function myHomeworkFunc()*, this will get you ready for working on the function. The things that go into the function are the elements before the equals sign, the user defines them. User defined items go in between those brackets. So you'll have *function myHomeworkFunc(variable1, variable2, variable3, etc)*. From here, what happens inside the function is basically just algebra. Where previously you'd be adding mach to G or whatever, rather than using numbers you are using variable names. A complete function adding, multiplying and dividing 2 user defined numbers would be something like. function myFunc(x , y) adding = x+y dividing = x/y multiplying = x*y Save that and then in the command line type *myFunc(9,3)* or any other combination of numbers. This is what you need to replicate with different maths.
&gt; You mentioned you yourself want to do Python Because my Resume wasn't set it stone when I graduated. I also know Perl, PHP, Javascript, C, C++, Java, Matlab and could make my way through Fortran if needed. Because that's what tools I use are written in. &gt; for a lot of engineering work I wouldn't exactly say I use Python to do engineering work, I use Python to do work that needs to be done for engineers. There's a big difference. Python has replaced Excel/VBA for me. When I did the [Controls Tutorials](https://github.com/DadAtH-me/ControlsTutorials_Python) for Python I found out that that Python is sorely lacking in anything that Matlab has a toolbox for. And I mean years if not decades of engineering man hours behind in most I've researched. That's not saying it can't get there some day, but that day is not today or even this year. &gt; For example: Science, Technology and Math; or economics, finance and business. If Matlab has a toolbox for it for most people Matlab is going to be much, much easier to learn. Find a toolbox watch the intro video and try and find any video equivalent for Python. You have to remember time is not free. &gt; If you don't have toolbox limitations, what's the learning curve for MATLAB v. Python? Depends on how you think. Matlab is much easier for matrix stuff compared to numpy. Math uses ones based indexing not zero. As far as syntax, It's the difference between learning Spanish and Portugese if you only know English.
There is some configuration available in the preferences, but I don't know how much. You lose a huge amount of functionality by avoiding the built in editor. 
Yes, I know. That's why I am asking what I could do to improve the current Matlab IDE. As I have mentioned I am using Sublime Text and it's syntax highlighting is much better than Matab's but it is not productive. I also mentioned VS because when you change the theme in VS *EVERYTHING* changes according to that theme. While in Matlab playing with the colors in preferences only changes the text editor settings and not the whole environment.
http://uk.mathworks.com/help/matlab/ref/function.html?searchHighlight=function If you wanted to define an output variable it would be function [y] = cubic(a,b,c,d,x) and further in the code at some point you'd have *y=magic maths* but you can have it just: function cubic(a,b,c,d,x) And when you put together the equation in the function it'll just display things as you command it to - so 5+5 in a function will send 10 to the command line. Also, if you're having difficutlies with a function in matlab, type doc *function name* inthe command line and it'll take you to the documentation of it. So *doc function* for next time :)
It sounds like you haven't written the portion of the function that actually _does something_, if I'm understanding correctly. MATLAB is complaining that your function isn't yet doing anything to your inputs. Don't let this stop you, march onward! For writing your cubic function: the very first line of your .m file should be the line of code that defines the function. You've already got this part yourself: y = cubic(A,B,C,D,x) where y is your output and A,B,C,D and x are your inputs. Make sure that you save this file as "cubic.m". Now you need to write some code that _does something_ to your inputs A,B,C,D,x to create your output y. In your .m file, on a new line, start writing code that transforms your inputs into your outputs. As a random example, if you wanted to create some type of polynomial equation you could write something like this: y = A^5 + B^4 + C^3 + D; On another line, you could then write your code to plot with fplot. To run your function, first make sure that you are in the folder where you've saved cubic.m (or add that folder to your matlab PATH. If you don't know what that is, don't worry about it now. Just move to the folder where you've saved cubic.m). In the command window, type something along the lines of: y = cubic(10, 20, 30, 40, [-10:10]) This calls your "cubic" function, where A=10, B=20, etc... 
oh! some sort of reminder for people to say thank you and update us if they solved their problem would be great! either when creating the post or in the sidebar etc. ungrateful reprobates :P 
did this help?
A very important thing- when you define your function you have to write the word `function` in front of it, so matlab knows it's a function definition: function y = cubic(A,B,C,D,x)
yeah! Thank you!
Yes, put the "data" variable you provided in the problem statement at the top and it will work.
Ah, I got it. I just had to clear my workspace. I must have had conflicting variables or something. That's beautiful, thank you! So the number of coefficients used for each variable were dictated by: ? polyOrder=[10 15 20]; 
That is correct. Your data is not exactly polynomial. I would recommend looking at least squares fitting using non-polynomial bases. 
 (-1)^i or -(1^i) ?
(-1)
Still waiting /u/TheBlackCat13. /u/subroutines I guess he's got nothing.
That's good work with starting these lists. I would like to see both tables filled in difinitively. Perhaps there are others more knowledgeable about Python modules that could help TheBlackCat. Maybe I'll pop over to /r/Python and let them know someone in /r/MATLAB has [a list of things where MATLAB &gt; Python](https://www.reddit.com/r/matlab/comments/5292pd/python_v_matlab_roi/d7kfnd6?context=1) ;) ^(edit: /u/BioGeek /u/aphoenix /u/ivosaurus)
I will take care of it ,next time I post here.
This problem has happened to me not for the first time. I reinstalled,it did not work. I formatted my laptop and then installed Matlab ,it worked fine until recently. I really can not do without it. Did reinstalling work for you ? I want to know which version are you using, I will downgrade if I have to.
I had not. I will now.
* out of memory datatypes for large data * some deep learning * local functions in scripts * "timetable" datatype * various other stuff
It's funny, I actually hate new versions of matlab, because it makes it harder to find help info for the old version I use lol
google says this : http://www.mathworks.com/help/distcomp/run-built-in-functions-on-a-gpu.html Not sure that's what you meant.
That's a ton more than 2016a, excited about support for bsxfun.
:D But useless if our clusters aren't upgraded to 2016b!!
The contourf function still unacceptably tessellates eps files for no good reason.
What do you mean? I can make really nice vector graphics contours with contourf... 
There are many well-understood numerical methods for finding zeros (newton-rhapson, bisection, etc.) but an easy one is to take the derivative of the absolute value of your equation. Where you have an inflection point at zero is where your equation crosses the horizontal axis. It's even easier if you are allowed to use matlab's equivalent of the gradient function. 
Does it need to be 1i instead of just i. But I don't know much about matlab 
I wonder in what workspace the values inside those functions will be stored. 
/u/Weed_O_Whirler - bsxfun all the things
Or alternatively, would making each row a concatenated string he can use strfind with work? Assuming the pattern only needs to be found in each line 
On mobile but I think I have an easier to follow but not as fast solution. First, use the find feature to return the indices where the first number in your pattern is found. Second, create a sparse matrix containing only these indices/values followed by the values of subsequent indices (basically enough that would fill the pattern). Check these mini patterns if they match the main one. If not, delete the entry from the sparse matrix. Once done, your sparse matrix should only contain the pattern and it's indices. Display the indices in a matrix where everything else equals zero.
You're exactly right of course. It's even easier if it's a series of a single number like the example given. I was trying to abstract the answer to arbitrarily large matrices, where, since we essentially end up with a sparse matrix in the end, it would make sense to start there as well. Your code is definitely more straightforward though :)
It really is the best function
Yes, the method I used could be considered bisection method. I believe what he wanted was a code that only uses for loops and if statements and logic statements. It was a verbal assignment so it was not too clear. It is an intro course and the 2nd week. I kinda want help with optimization of the code I attached. Or at least a critique of what I have done so far whether good or bad.
It has to be -1i because the taylor series terms for cosx alternates between plus and minus. I have solved the problem in my edit.
Do you have experience with OOP in general? &gt; Firstly: Is there a way to have constants in a class, i.e. easily accessible from other class functions, that could be given a value from an external script? (For exemple: I have a constant that defines in how many spatial dimensions that the simulation will be run and I would like to be able to set that from the script that is running the simulation.) Easiest way would be to have a class [property](http://www.mathworks.com/help/matlab/matlab_oop/defining-properties.html) for this constant that you would instantiate by passing in a parameter to the constructor. By default, the properties are "public" (don't know if MATLAB uses that word), so the object's functions and outside functions can both access that parameter. &gt; Secondly: Related to the above, I would like to add the possibility to run the simulation under the influence of a potential (a scalar function) depending on the objectâs position which in the best of worlds would also be set from the script thatâs running the simulation. I.e. I would like some kind of way to parse a function, in its mathematical sense, to a matlab function and use that until something else is parsed. I'm not completely sure what you're asking. Do you want to pass in a function to another function? You can do this through [function handles](http://www.mathworks.com/help/matlab/function-handles.html).
You can do [idx, val] = min(x(:)). This turns x into a vector and passes that to min, and idx will give you the index of the minimum. Then you can either use that to index x, or you can manually convert it to matrix indices.
Look up min() 
Check out sum(), you can define which dimension you want to sum up to. So it's easy to get sum of all rows or all columns. You can use the result of this to get answers for 6 and 7. In addition you can use sum() *on* sum() to get the total sum. Printing of data can be done with fprintf() commant, in order to get integers on your desk you need to use the input argument of "%d" and to get strings you use "%s". For floats it would be "%f" but you don't need those. To add together matrices you can just use the format c = [a, b]. This form is used if you have two matrices / vectors with the same number of columns. To concatenate matrices with the same number of columns you use the ";" operator instead of ",". For the last one you can use the export() command. Edit: a word.
You can set the variables as static. That way, all instantiations of the class sees the same variable.
Thank you so much! Ive done all of that and gotten to: http://pastebin.com/7ujwKbnV Im stuck because I realized that I dont know how to show the plant number. Did I screw up the whole thing? Should I go and put in plant number into the original array and edit all my code? Is there a faster way? Thank you! 
You can't set the constant properies of a class, but you can set the constant variable as a handle class. classdef myClass properties (Constant) h = constHandle; end properties (Dependent) a; end methods function a = get.a(this) a = this.h.data * 2; end end end classdef constHandle &lt; handle properties data = 1; end end &gt;&gt; obj1 = myClass; &gt;&gt; obj1.a ans = 2 &gt;&gt; obj1.h.data = 3; &gt;&gt; obj1.a ans = 6 &gt;&gt; obj2 = myClass; &gt;&gt; obj2.a ans = 6 
Thanks! I will consider the method you suggested. Unfortunately I'm not currently using ode45, or its ilk, because I haven't fully understood the required structure of the function to allow for 6N equations. It's clear that for a general simulation one cannot explicitly write each differential equation and I haven't gotten around to fix my understanding in the area. :(
Assuming that the vector x can be of any sequence of integers, what you really want is a function to randomly choose an index into the vector. e.g. So, if length(x) is 7, you want to generate an integer index from 1 to 7. Look at the function [rand](http://www.mathworks.com/help/matlab/ref/rand.html) which returns a uniformly distributed random number from 0 to 1. Good luck!
Are you referring to making this work with any size vector? Understand that a software based random number generator will typically produce a random decimal x where 0&lt;=x&lt;1. Then you multiply x by the range you want. This means you can generate a random number then multiply it by the size of your array to get a random element of any array. 
anyone can help?
Currently on my phone, use the sparse function!
Actually I was referring to static data: http://www.mathworks.com/help/matlab/matlab_oop/static-data.html Apparently it's also called constant data. I haven't used it myself. Global would imply that it's global outside of the class/object.
looking into it now. Thanks!
 f = @(x) 300000./(1+(300000/(10000-1)).*exp(-0.08.*x)) - 1.2* 75000*exp(-0.045.*x)+10000;%suburb 20% larger this is my new function. am i supposed to take the 1.2*city - suburb or the other way round? edit: ok nvm figurd it out. thanks man :)
If you have a full grid of data (x y value pairs are evenly spaced with no gaps), you can make a 3D matrix. From there, you will need to loop over all t frames and display one frame at a time. If you are looking to write a movie file, you can use [VideoWriter](http://www.mathworks.com/help/matlab/ref/videowriter.html#examples) before you start your for loop.
Thank you! This will work for my application
Also, if you want to eliminate loops for the construction of X, you can use a 3D matrix: k = 1:2*s+1; m = 1:40; [kk, mm] = ndgrid(k,m); X = repmat(permute(sin(t(mm + kk)), [1 3 2]), [1 2*s+1 1]); Then you only need to loop over the movie creation code: for m = 1:40 axis([-s s -1 1]) contour3(xspace,yspace,X(:,:,m),200) M(m) = getframe; end
Thank you for this! I will try it out now .
i dont understand what u mean, may you please write it in a code format?
No. We do not do your homework for you. 
+1 ^(I think that's a thing)
You first
You built yourself a gaming rig lol.. I would code it in a different language if speed is your concern.. You can then use your processed results to do your final display in MATLAB if you want... Additionally you listed a powerful graphics card and two monitors, I'm sure you can get away with less.. You also haven't said anything about what type of processing you intend to do with the data, so any advice given will be limited.. Last but not least it probably would be best that you just rent out server space and do your processing there if this is a one off thing, now a days it is extremely cheap to do
All you'll really need is a fast processor and lots of ram if you want to do large number crunching. And when I mean a lot of ram. I mean a lot. I once ran a matlab simulation off of a server that required 500gb of ram... That's what happens when you simulate a 9 planet solar system for 25000 years at a data recording rate of once every 10ms...
This build looks good. I built myself a similar rig last year, and it performs well. I basically agree with everything /u/MrTesla said, *mutatis mutandis*. * If you want to perform GPU computing just make sure this GPU is [CUDA-enabled](http://www.mathworks.com/discovery/matlab-gpu.html). * I'd get a 1 TB solid state; they are only ~[$250 if you went with Crucial](https://amzn.com/B01IAGSDUE) instead of Samsung. * I have that same CPU cooler. It looks awesome in pictures, when it's by itself, but in retrospect I wish I would have went with something much smaller and simpler. The problem is that it's a brick, and will stick out directly normal from your CPU, and takes up a ton of space. Let me take a picture of mine... [here ya go](https://i.imgur.com/foWtRuN.jpg). It makes cable management and everything else happening around your mobo more difficult. If you go with something like this [Corsair Hydro](https://amzn.com/B00A0HZMGA), you get the same copper plate with liquid cooling, but move the fan element out of center of the tower, to a location where it should be. I'd highly consider this since you are only going with a mid, and not full tower. * I like the modular PSU, but I'd almost want to beef that up a little, to like 800W. * CPU looks good. For $50 more you get a decent [benchmark bump](https://www.cpubenchmark.net/high_end_cpus.html) for the 3.6 i7-6850K. Then again, you might have already said that, a few times. Overall though, pretty solid build. MATLAB is just an excuse to build this right? No shame in that. When it comes time to actually use MATLAB for analyses I would highly recommend converting whatever you can to MEX files. Like MrTesla mentioned, MATLAB is not the fastest tool available, and may not be the right tool if you're concerned about how long it will take to process your data. Optimizing the lang/software/code used to process your data will result in speed-ups orders of magnitude greater than simply running the same code on a more powerful machine. I experienced this first-hand; I was simulating particle diffusion on ruffled membranes in matlab using standard functions. To run one simulation (~20k steps for 1k particles) it would take about 10 minutes. I went out and build a new rig, and it went down to ~6 min. I converted some of my functions to MEX/C and it dropped to about 45 seconds. 
I have solved my own problem yet again! I simply use: D_vector = repmat({D}, 1, n); A = blkdiag(D_vector{:}); instead. Sorry again for those who clicked on the post lol. 
^--- This.
also Matlab is certified, and works with a lot of hardware, camera's etc etc and therefore if you merely use programming to create an output its better to just learn one that does more. Being more like other languages is neither a positive nor a thought. If I programmed because I was a programmer then yea matlab would not be my language of choice for the reason you gave. 
Thanks for replying! By SOR do you mean [successive over relaxation method](https://en.wikipedia.org/wiki/Successive_over-relaxation)? Do you have more resources for me to read? I don't quite understand whats h, rhs and how did you pick w?
Yes, you can. I just learned this in the past 30 seconds by searching the documentation after seeing your question. Check the documentation under "language fundamentals" -&gt;"special characters" Edit: http://www.mathworks.com/help/matlab/ref/specialcharacters.html?searchHighlight=comment Learn to read documentation. It's not hard. 
It's handy for commenting out big chunks of code. Or for writing large descriptive comments about what a function or script does. 
Thanks
By 1D I suppose you mean 2D images? You need to come with examples or much more concrete specifications if you want real feedback regarding the task Either Matlab or Python would be suitable for general image processing. Whatever you are comfortable with. It does however sound like you have very limited programming experience. Without more information it is impossible estimate how challenging it will be; but, my suggestion would be to get a bachelor/master-project or a PhD-student / professor from an image analysis group to help you out. If the problem really is simple enough for you to solve after a basic Matlab course, I would just download ImageJ and see if that solves the problem.
Take a look at the isprime() function. Unless this is an assignment where you MUST use a loop, no looping is needed.
There's quite a good open source image analysis program called [imageJ](http://imagej.net/Welcome) which can do all sorts of measurements and post processing on images. I have used it for analysing various things in microscopic images. May be worth looking into to see if it is capable of what you need. I don't think it will be an "automatic" process though. Edit: I just saw that it can integrate with MATLAB I think. Even better.
What I would suggest is to initialize your B vector to all 0s and only flip to 1 when you find a prime. Also, you aren't doing anything in your above when your if-statement passes true, only doing something when it's false. I also think you may need to restructure your if-statement... for starters, I think you mean A(i) and not just A. As you have it now, rem(A,j) returns a vector of size(A) whereas I think you just want a scalar (single value) output to check == or ~= 0. Finally, while good and quick for pseudocode, don't use i or j as iterators, they're both natively the imaginary unit (i.e. sqrt(-1) ). I use ii or jj, or ilon (iterating over longitudes)
Well... go back from j=2:whatever to 1.... rem(1,1)==0 and will pass through your if-condition *e: Actually don't. EVERY number would then pass on the first j for-loop Knowing that this is an exception, but you can't hard code for it (i.e. the code that checks if 1 is prime should be used for ALL numbers in A), you can check if i == j AND if i is odd (code to check if rem(A(i),2)==0 ). If you structure your if-statement for these two conditions correctly, you should be able to use it for ALL i and it should work for both i=j=1 and i=j=2 but only select the i=j=1 case.
Incredible! Thank you!
Thank you for the detailed post! Unfortunately all the i7-6850k's are sold out at that low price. Might wait to see if it is restocked. I'll have to save up a bit more to up the SSD and cooling. I have no idea what MEX files are, but it looks like I will be learning this is the very near future. Very thankful for you post! Very 
I'll likely throw more RAM into the machine if the application becomes more RAM intensive. Upping the SSD as well!
It looks like you've increased the font size and line width. These settings can be changed if you saved the images as **.fig** files. Matlab can open up them back up and allow you to modify nearly anything that isn't tied to the original data.
My Masters thesis involved the use of Matlab for automated image processing to measure morphological features of biological organisms. So yes, it's fine. A useful textbook is Digital Image Processing using Matlab, by Gonzalez. An alternative would be OpenCV. 
Thanks for the tip about java+ImageJ! I really outa do more with java, I'm still such a rookie.
Yes I see what you mean, I have researched the method and applied it to my code, but my input is around 2048*2048... which is not ideal at all. I think I will research on multigrid method now. Do you know if BICGSTAB or GMRES are suitable for my situation?
Adding to your answer imagej has the ability to write macros. These macros are wicked easy to write as you can record your steps using the macro recorder then press one button and turn them into code. Though the Imagej language, because it is based on using open images as 'variables' is a touch janky. But I still teach it to nonprogramming labs that need basic image analysis on biggish data sets.
Ah, excellent. Thanks for the tip! I've been pretty impressed with it's capabilities. 
...and the lazy people simply use [polyder](http://www.mathworks.com/help/matlab/ref/polyder.html) ;)
Yeah multi-grid is your only realistic choice in that case. Even BICGSTAB or GMRES are going to eons to solve. I have multigrid code sitting in my computer somewhere. I'll post it if I find it. Having said that try SOR. It might take ~1 hour to solve but it is far better than any method I can think of other than multigrid. Here is the SOR code that worked although it takes a minute to startup: M = 2048; p = zeros(M,M);pprev = ones(M,M); rhs = zeros(M,M); rhs(1000:1048,1000:1048) = 1; w = 2/(1+sqrt(1-cos(pi/(M-1))^2)); k = 0; h = 1/ M; while (norm(p-pprev) &gt; 1e-10) k = k + 1 ; fprintf('%i\t%f\n',k,(norm(p-pprev))); pprev = p; for i = 2:M-1 for j = 2:M-1 a = 0.25 * (p(i+1,j) + p(i-1,j) + p(i,j+1) + p(i,j - 1) - h^2*rhs(i,j)); p(i,j) = w*a+(1-w)*p(i,j); end end end surf(p,'linestyle','none')
If you always only have one large peak, you could go from max and traverse 'down the peak' until you reach the first point that is *less* than MAX/2 and then take the point just before.
What about something using sortrows(A)? This should sort the A matrix but preserve the rows so that the (x,y) points are the same. Then, use find down the A(:,2) to get the half max. 
Sounds like you were entering code directly into the command window, not the editor window. If you had used the editor you would have had to save the code before you could have ran it. The 'audio file' is a .mat file that saves matlab workspaces and data, not an audio file. Use the load command to load this back into matlab. The commands you typed would have been saved into the command history.
Python is a more general purpose programming language than MATLAB, it has more advanced language features. MATLAB is "matrix laboratory" and started as a thin scripting language on top of LAPACK/BLAS in the 80s and it has done a great job at being backwards compatible, so this somewhat limits how fast the language progresses. For example, I can still run the first MATLAB code I wrote as an undergrad from 16 years ago and it does fine, and this is some fairly decently sized PDE constrained optimization project. I prefer MATLAB because the syntax of the language is tailored to numerical linear algebra and matrix manipulations, which I do a lot of. I find python to be a tiny bit more verbose than MATLAB in this regard. The downside of MATLAB is that the language is a bit more limited and it doesn't scale well to larger projects - no compiler to find errors so errors have to be found and fixed at runtime, one external method per file, OOP is somewhat awkward. Both are worth learning, absolutely. As a side note you won't get python programmers to shut up about how much better Python is than matlab.
Never seen something like txt1 = '\leftarrow TG'(100,15); I don't think that's correct syntax. Comment out that line and see if it works. Just google how to make an arrow in matlab, there's a command for it. annotation('arrow',x,y)
This seems like an error in how you handle floating point numbers. The value of 'c' won't increase by exactly 0.001, since that can't be literally expressed in binary. Since you're incrementing in a loop, these errors add up. In your example, the loop should ideally run 453000 times, so that floating point error can be multiplied by that much. Depending on the broader goals of the program, the best option may be to change how you search for the value of 'c'. Using built-in functions is always recommended, in particular fzero(): c0= 0;%initial guess fun= @(c) a+b+c; c = fzero(fun-d,c0); If, however, you want/need/decide to use the marching method you're using, you'll get the most accurate answer by changing your loop condition: while ( abs(sumabc-d) &gt;= (inc/2) ) ... end Note that this approach will lead to an infinite loop if 'd' is less than your initial guess. I'm assuming that's a condition that can never happen, but a more robust program would have some kind of protection for that condition.
 find(monthly(:,3) == max(monthly(:,3)) If the result of that has length &gt; 1, then use the first one only. 
once you have the max point, you could iterate forward and backward until you have max/2. Or as /u/InstrumentalVariable mentions, sort the array and from that get the range you need
The issue here would be immediately obvious after reading the first little bit of the documentation for find(). 
If you have three things plotted... plot(x1,y1,'b') plot(x1,y2,'r') plot(x1,y3,'g') legend('blue','','green') ..should NOT have your red line within the legend. Alternatively if you save the handle of each plot (hP1=plot().... hP2=plot() ) you can also do the above with legend([hP1 hP3],'blue','green')
thanks for the code! 1 hour is too long for what I am trying to do lol, if you have the multigrid code that would be amazing! So far I have found a python tutorial on multigrid method but I am not too fluent in python. [Here](http://zingale.github.io/pyro2/) is the link.
 find(monthly(:, 3) == max(monthly(:, 3)), 1, 'first')
I would suppose you would model the object moving over the trap doors for a set amount of time (one oscillation should be enough). Since a trap door would have the most luck catching the object where it spends the most of its time, you would find the time it takes the object to move between each of the trap doors. The point where it takes the most time would be the ideal place to open the trap door for your split second. In mathematical terms, you would find the equation for the position of the object with relation to time, and find the delta time for each trap door location. Luckily, this equation has already been given to you so your task is made much easier! Try finding the time it takes for the object to move between each trap door (easily automated with matlab) and your ideal location should be where the time is highest. 
The best way to learn MATLAB is to just try to mathematically solve problems and after repetetive usage you should grasp it.
Get rid of T and mu from the input as you have already defined it within the function. Dont use i, use something else as you are using i for looping. Lets call Ti. Then what you need is a for loop with an if statement like so if Ti &gt; T(i) &amp;&amp; Ti &lt; T(i+1) %then use T(i) and T(i+1) and mu(i) and mu(i+1) to compute mu(Ti); break end
This is generally called serialization or pickling. It might make more sense to ask a C# forum. 
I don't know about a matlab specific textbook (unlike the ode suite, large portions of the optimization / root finding functions are not written in matlab anyway). [Nocedal and Wright's book](http://home.agh.edu.pl/~pba/pdfdoc/Numerical_Optimization.pdf) covers it all, though.
So, what I ended up doing was changing all of the "triangles" (connected, individual lines) corresponding colors. So 3 lines = 1 color to show that they're the same. Then, I made one line from each triangle a "handle" (which is basically a variable object in any programming language, it looks like) and used those handles for my legend. As recommended by the user who replied :)
Thanks for replying, I think I'll incorporate this strategy into my future code. Thanks!!
Haven't found the code yet but here is something I created a while back that might help: https://www.reddit.com/r/CFD/comments/53tprp/multigrid_vcycle_visualization_solving_phi_in_pde/
Thanks for your comment! I'll give this a look over when I'm in the office tomorrow.
Yes sadly. That's what happens when MATLABs JIT doesn't have card details in it's files somewhere, which is why the new 1000 series gpus give that issue; the 1000 series architecture is entirely unfamiliar to the latest matlab versions. Hopefully 2016b fixes that. Once you run it once though it should execute again much more quickly...although for me it will only do that in scripts or the command window whereas functions still have the high latency calls...I've just taken to bypassing it with some hard coded kludges to avoid the whole mess for now. Dunno what you're doing with it so YMMV on that one. 
Let me make sure I've understood correctly. From what you're saying, it sounds like selecting a GPU device by calling gpuDevice(i) will always have a long latency, and the first call to a GPU function after selecting the GPU will have a long latency, but function calls *after* selecting the device and *before* the device is reset / re-selected should execute quickly?
Hm. That's odd. If I execute the command gpuDevice(1) several times in a row, it takes a minute (actually 3 minutes) each and every time.
Here you go x=[1,2,3,4,5]; %example input n = length(x); %length of input vector mu = sum(x)/n; %compute the mean %to compute the standard deviation, refer to https://en.wikipedia.org/wiki/Standard_deviation#Uncorrected_sample_standard_deviation %option 1: use some matrix operations sigma = sqrt(((x-mu)*(x-mu)')/(n-1)); %divide by (n-1) for unbiased std %option 2: no matrix operations temp = x-mu; %first subtract mu from data temp = temp.^2;% square each entry sigma = sqrt(sum(temp)/(n-1)); Edit: got unbiased and biased mixed up. code is fixed now.
I don't see why it would? Should work. Values are squared before the final square root computation. You can check yourself by using the std() function. 
I have tried things. I wrote X=1 Y=2 X+5&gt;5,y+9&lt;10 And it came back 1,0 But I think it has to be one expression. 
I've noticed this too. It's a real pain in the ass when you're trying to synchronize shit.
I get the same delay with gpuDevice(1), but just gpuDevice works as I described. Probably has to do with the way it stores results. Also I wouldn't be surprised if the MATLAB version # leads to different behavior. Nvidia drivers can have an effect as well; a recent release broke gpuDevice on my laptop for detecting the old 675M on it... The joys of progress. 
Hmm, I'll try to explain again. Think about it, I have some data like: X = [1,1; 2,2; 3,3; 4,4; 5,5; 6,6] and the classify of it D = [-1;-1;-1;1;1;1] how can I do the X1 to be the elements that D call as -1 and X2 to be the elements that D call as 1?
 X1=X(D==-1,:) X2=X(D==1,:)
If you just want a single columns values where D applies, change the : to a 1 or a 2 to get either column. 
Or, if you have the stats toolbox (I think) use `ksdensity`. Or [`kde.m`](https://www.mathworks.com/matlabcentral/fileexchange/14034-kernel-density-estimator)
Typo? Shouldn't it be k=(k0).* I think you dropped an asterisk
x_t(1) works fine for me.
Do you see anything wrong in the way I executed it then?: http://imgur.com/a/IOrLw
Thanks!
 Error using load Unable to read MAT-file U:\lena512.mat. Not a binary MAT-file. Try LOAD -ASCII to read as text. Error in Image1 (line 9) load 'lena512.mat';
I looked over my data and separating the histogram and pdf worked as far as I can tell, thanks for the help!
That last poster didn't have the right syntax, should be: load('filename.mat','-ascii'); Not sure if that will solve you're issue, but the syntax for *that post* wasn't right to begin with. It was close, may also work (if your file is ascii) as: load filename.dat -ascii; Seems the ascii bit was misplaced and you don't need single quotes if calling it outside of a () call. Also, is that file in your current path? If not you'll have to point to the path as well, not just the file name.
Yeah I just realized that. And it was just a formatting problem. Thanks!
http://www.mathworks.com/help/matlab/ref/inputdlg.html The Mathworks website has code examples available. What have you tried so far and what is causing problems for you?
I tried to use the docs but I didn't quite get how to index the result. I tried inputVal=inputdlg('something blah'); if(inputVal&lt;0) do stuff end Input value is a cell which I don't quite understand how to index as a double. The If is what is causing the trouble. 
You probably can get away with B for the A+ model. I don't remember what the upgrade was but there's a chance it may work. Other than purchasing a B model, if you can get your hands an older version of Matlab you should be OK.
 f = @ (x) (6 + 3*cos(x)); a = 0; b = pi/2; n = 5; h = (b - a)/(n - 1); p = max([0:n-1]); %This outputs individual iterations %for i = p % output = i * h %end holderArray = zeros(1,p) for i = 1:p holderArray(i) = i * h end That should be what you're after I think. You need to create an empty vector or matrix for it to put the values into. Also, in your for loop, it should read 'for i = 1:p' I also changed P to 'p=max(etc)' because otherwise your loop is saying "for 1, to 1,2,3,4 etc" rather than 1-4. Max just returns the max of that vector, I don't fully get the maths so I just cludged it with Max rather than changing any formulae. If wrong let me know, but I think that should be what you're after.
so if dt = 0.02 and z(dt) = 0 you are basically saying that z(0.02) = 0 You are trying to assign array indexed at 0.02, but that doesn't make any sense. Array indices must be **real positive integers** (1,2,3,4 ....). You should introduce a new variable strictly for indexing arrays (counting).
The issue is that subscript indices must either be real positive integers or logicals. That's not an arcane or unclear error message. It means exactly what it says. You're trying to use something other than real positive integers as an index to an array. What would that even mean? If I give you a list of 5 numbers, and then ask you to tell me the value of item 2.7 in that list, what would you do? 
have you used the command "mod"? it should take any values above 360 and repeatedly subtract 360 until it's within range
Are you really evaluating a vector with 2*pi*[0:500]? It should be clear that this vector contains only integer multiples of 2*pi which, in Â° is nothing else than 501x 360Â°. Therefore, wrapTo360 converts all the elements of the vector to 360Â° and nothing is wrong with your program. There's probably something wrong with the initialization of your vector.
 mod() 
Find a problem to solve. Write code to solve it. Repeat. 
Oh that's awesome! So where did you pickup these MATLAB skills? Eng student here. I think the majority of us here are eng/compSci students stuck with HW questions haha. This looks promising. Thanks a bunch.
As /u/winperator said, the vector of values you are trying to convert to degrees is: [0 2pi 4pi 6pi 8pi 10pi ... ]. The output is assuredly going to be [0 360 360 360 360 360 360 ... ]. I think you have a mistake in the vector of input angles that you are giving the program (2*pi*[0:500]). What is the vector of values that you want to have?
I suspect a typo in your code. Maybe an open bracket. I've had this situation before, it's annoying to find. 
You should try to do it without a `for` loop: a = 0; b = pi/2; f = @(x) 6 + 3*cos(x); n = 7; h = (b - a) / (n - 1); x = a:h:b wS = h/3 * [1 2*ones(1,n-2) 1] ; wS(2:2:end) = 4*h/3 ; IS = sum(f(x) .* wS) MATLAB is more efficient without loops. Ps: same for trapezoid rule ;) I edited the formatting and added `a`, `b`, `f`, `n`, and `h`.
Thanks! I can't seem to get that code working though. Also can you please explain it to me? Ugh all my function files don't work anymore :(
Illegal use of 'end'
Still having trouble...any chance you can type it again with formatting? Sorry...but I'm having heaps of trouble :/
Not until tomorrow... the "end" must have been yours though.
You can find out for sure where the slowdown is by running your shorter version of it using profiler 
Does your file end in .m?
It's unlikely the fft is the bottleneck, but if it is there's not much you can do about it unless you're able to run the fft on your GPU. the standard fft code in Matlab is about as optimized as it gets. 
Use the profiler to actually see what is slow. Type 'profile viewer' into the command window, and then the command to run your code into the window that opens. In the meantime, if I was to guess, I'd say reading the large file is likely slow, and you could save lots of time by not reading the whole thing - try to only read the 100K points you actually use (see documentation for fread() for how to do this)
I put it into my MatLab and the sections work...but, you need a semicolon after fplot(f,[0,500]) 
I will look into this now. Thank you.
I will look into the profiler now and the fread documentation.
Also what's fft1D? Is it just a wrapper for built in fft()?
It's a function where fft() is inside the function.
No worries, glad you could speed it up :) 
do you have a question or an interesting result? or is this just a code dump? 
I don't have Matlab at the moment to test this, but: [It looks like matlab unsigned integers saturate and don't wrap around.](https://www.mathworks.com/matlabcentral/answers/92782-how-can-i-force-integer-operation-results-to-wrap-on-overflow-in-matlab-7-8-r2009a) [This page agrees.](http://www.cs.utah.edu/~germain/PPS/Topics/Matlab/uint8.html) [This question could get you started on dealing with the overflow in images.] (https://www.mathworks.com/matlabcentral/answers/278085-matlab-imfilter-uint8-overflow) [This may also help, depending on your desired behavior.](https://www.mathworks.com/matlabcentral/answers/92782-how-can-i-force-integer-operation-results-to-wrap-on-overflow-in-matlab-7-8-r2009a) (Each sentence is a different link)
Maybe try checking how you defined "show_data" before.. Matlab is case sensitive, for instance, or perhaps you mispelled it.
The line 31 part of the error message would be a link. Press that and check in the file that opens, what the variable show_data is.
Yup, ctrl+F should work.
None of these will help OP, reading FTW! edit "Do not include any other text on these lines."
Likely just as good, if not better than paying money to be taught how to use it in a lecture at uni haha... But at least you can get a degree by paying all that money.
Tip for future in that context * means something, generally what you would say is cp ~/lenna.mat /new/file.dest
There was a time when I was going to learn matlab but never followed through. This account is subbed to mostly science/tech/math subreddits anyway, it's not really adding any unwanted clutter to my frontpage.
i found cody very confusing,actually.Most of the times, it didn't recognize some basic commands, giving me "error" but in matlab they worked pretty well.Not as good as i expected :(
&gt; int /*I can comment in between syntax*/ i = 0; has other things on the line The idea you are suggesting says "Do not include any other text on these lines." Those two things are not compatible.
You can believe whatever you want but your suggestion does not answer what is in the post above. Seriously guys Reading isn't hard ;)
I will test. Thank you
One way to do it -- wordArray = {'this','is','an','array'}; randomWordIndices = ceil(length(wordArray).*rand(10,1)); wordArray{randomWordIndices} I'd guess you're either hitting issues with how you're generating randoms or in trying to use the random number to select a word. Where's your code having problems?
+1 Amazing dude. Thanks so much!
You're brute forcing this problem, which is going to be a terrifically slow method. You have about 1.8 trillion combinations to test, using your method. Plus, there is no guarantee that a solution exists using integers only. First off, something I don't recommend (for this problem, we'll get to that later) but may be useful for future studies- you are calculating `a_1^5` every time you change any of the other numbers, but for the first 100 billion times (for example) it's the same value. So, really you'd speed up your code dramatically doing something like this: for a_1 = Nmin:Nmax a_15 = a_1^5; for a_2 = Nmin:Nmax a_25 = a_2^5; ... This way, you're only calculating the fifth power of something once for every value. This change alone would speed up your code dramatically. However, this brute force method is (in general) a terrible way to implement such algorithms. What you want to do is use an algorithm that "tracks down" the correct answer. The most basic form of this is [Stochastic Gradient Descent](https://en.wikipedia.org/wiki/Stochastic_gradient_descent) which uses the idea that you can solve for zeros by finding the minimum of a derivative of a function (and while you might think you're not solving for a zero, you sure are if you move that a_5 to the other side). This method moves your solution down the gradient of your function, always looking for the minimum, until it finds a zero. This allows you to find the solution without having to test every possible outcome. And of course, this being MATLAB, you don't have to write the tool yourself. MATLAB has it built in. According to what toolboxes you have, you probably have lots of options, but the basic one, [fminsearch](https://www.mathworks.com/help/matlab/ref/fminsearch.html) will handle this problem easily. 
I am not aware of a built in function for this- but since you have an easy way to evaluate the integral (using `integral`) and you already know the derivative (it's just the integrand), then gradient descent should work quite quickly. 
[fzero](https://www.mathworks.com/help/matlab/ref/fzero.html) can do this. You'll need to rearrange your equation so the right hand side is zero. [integral](https://www.mathworks.com/help/matlab/ref/integral.html?searchHighlight=integral) can help you compute the integral.
Good catch. I was recently using it for machine learning, so it was the one in my history that I found first, and just wasn't thinking clearly enough. Yes, a [regular gradient descent](https://en.wikipedia.org/wiki/Gradient_descent) is a better first start for this. 
FWHM doesnt apply well to a 2 term Gaussian unless their addition is close to Gaussian (similar mean and stdv). Are you sure you want to find the FWHM for 'gauss2'? `f.b1`is the mean of the first term.
Matlab doesn't support indexing matrices by Excel notation--after you read a block of cells with `xlsread`, you need to use Matlab notation (integer index values) to access the elements. Try: seto_w = x(:, 3); Or: seto_w = x(1:148, 3); Instead. Note: when you pass `'A1:D148'` to `xlsread`, you're passing a string that is used when accessing the COM object used to communicate with Excel (or, in basic mode, the string is simply interpreted by Matlab as an address/range). Once the data is read into Matlab, you need to access elements of the variable with integer or logical indexing--the same as if it were any other variable created naively in Matlab. 
Jesus christ why. 
Could you please explain the last 3 lines? Thanks! I'm trying to convert this to a trapzoid rule function and a 3/8 rule function. Much appreciated! I've been really struggling.
 AxesH = axes; Figure2 = figure; copyobj(AxesH, Figure2); hgsave(Figure2, 'saved.fig'); http://uk.mathworks.com/matlabcentral/answers/86693-save-axes-plot-as-fig-in-a-gui
These lines? wS = h/3 * [1 2*ones(1,n-2) 1] ; wS(2:2:end) = 4*h/3 ; IS = sum(f(x) .* wS) The two first lines build `wS`, the vector of Simpson's rule weights that looks like: [h/3 4*h/3 2*h/3 4*h/3 ... 4*h/3 h/3] The last line computes the integral which is the sum of `f` evaluated all points `x(i)` and multiplied by the weights `wS(i)`. Take the semi-colons at the end of lines to see the numerical output of each of them.
Algorithm for trapezoid integration! a = 0; b = pi/2; f = @(x) 6 + 3*cos(x); n = 5; h = (b - a) / (n - 1); x = a:h:b; wS = x([2:end-1]); wS_new = [f(a), 2*f(wS), f(b)]; I_trap = sum(wS_new)*(h/2) YES BOYS! I really appreciate your help, thanks so much!
Are A and B vectors? If they are, then `bsxfun` should absolutely work. Otherwise, `find` and `accumarray` should be able to do it.
A few years, mostly MATLAB now.
Actually, what about `S = bsxfun(@plus, A(:), B(:).');`?
It does not work, because it does not take into account when one of A(i) or B(j) is zero. 
No, the opposite. The point is that bsxfun(@plus, A(:), B(:).') will only deal with the cases where they are both nonzero.
We're probably gonna need more info. My best guess is that * it's nothing to do with the switches; * you've correctly defined the function with a header line like function [retval1, retval2] = DoStuffWith(inputs) * you're hoping/expecting it to return some kind of structure with the two retvals. If that's your issue, the answer is simple: you just have to explicitly ask for both return values, by calling it like [ans1, ans2] = DoStuffWith(inputs) See also [http://stackoverflow.com/questions/4188139/matlab-multiple-return-values-from-a-function](http://stackoverflow.com/questions/4188139/matlab-multiple-return-values-from-a-function). 
I'm starting in academia, and I'm not familiar with python, but I think you should give it a try just because it's open and free (whereas MATLAB is expensive). I plan to learn it myself soon :)
Will [this](http://pastebin.com/fvTq62gP) help?
Thank you so much.
Ylabel(k _m _a _x) should also work (no spaces in between underscores).
Seems like the code works fine. How are you calling the function? Here's my test output. &gt;&gt; clear all &gt;&gt; [A,T] = reschematic(); Enter scheme = GMcB_low &gt;&gt; whos Name Size Bytes Class Attributes A 10x7 560 double T 1x701 5608 double You could also condense the A and T assignments to a single switch statement. It's also nice to throw in an "otherwise" case to catch typos and the like. http://pastebin.com/g0i5KeWB
You, sir, are a life-saver! I've been stuck here for like a week now because my stupid professor doesn't know shit. Turns out I was just calling it wrong. Maybe I should lay off the weed for a while. Anyway, thank you so much! If I had had gold, you'd be gilded by now but unfortunately, I'm poor. Lots of love? edit: u/dbulger, this goes for you too. I thought both comments were from the same user. My bad.
If the numbers are large enough, you can do: `A = rand(50,1);` `B = rand(30,1);` `E = log(exp(A)*exp(B)'); ` `% Since log(e^(A+B)) = log(e^A*e^B);` It is (up to arithmetic calc precision) equivalent to: `for k=1:length(A)` ` for j=1:length(B)` ` C(k,j) = A(k)+B(j);` ` end` `end` Maybe it will even work with sparse matrices.
I think I'm going to try to uninstall and reinstall
Because it works just as well without eval? Why would you put eval there? Just so you can use extra quote marks? You should almost never use eval, and certainly not when it serves no purpose. 
FYI for those who don't know, starting in 16b, plus automatically does implicit expansion so A(:) + B(:).' would be sufficient. 
Something like this maybe? r = zeros(1, length(m) - 1) for a = 1 : length(r) r(a) = m(a + 1) / m(a) end plot(r) Just an advice: It is always good to alocate a vector first using functions such as zeros() or ones(). Changing the size of a vector during runtime (when adding new elements at the end) can significantly slow down your code. Edit: a mistake
Ah, I've got it now. Thank you for your help!
No problem, good luck!
I'd have both callbacks point to the same function. I can't say if it's the most elegant solution, but it's always worked well enough for my use cases. Something like... ... 'Callback', {@updatePlot, handles, x} function updatePlot(hObject, eventdata, handles,x) r = handles.slider_handle_radius.Value; f = handles.slider_handle_angle.Value; % more code here plot(handles.line_handle,x,y);
Either that or have a local function that both callbacks call. In this case you would use the callbacks to set the value of r and f, which you would then pass to the local function which takes care of the plotting. This way if you need to change properties of your plot, you only do it once. 
I didn't want to make a new post if it didn't require one, but could someone help me with another problem? I have [this](http://i.imgur.com/OOEFsM4.png). The matrix is the easy part, but I'm not quite sure how to the actual calculations. Would I be able to use the loops to add all the rows and then another one to add all the columns or am I completely misthinking the loops? 
You're on the right track, I think, but I'd add some more options to that fit. I like to set up fits using `cftool` before going to the command line. I think you'd be better off using the `normalize` option. [curve, goodness, output] =fit(Xdata', Ydata', 'smoothingspline','SmoothingParam',0.99,'Normalize','on'); From there, you could go with numerical methods to find your inflection points. Calculate derivatives with a sufficiently small step size and your fitted curve. You should check out `diff` for that. Next, identify the zero crossings in your derivatives as needed. An easy way to do this: Z(Z&lt;0) = 0; Z(Z&gt;0) = 1; Z = abs(diff(Z)); find(Z)
Something like this? A=magic(9); a=0; for i=1:9 for j=1:9 a=a+A(i,j); end end
Oops, I forgot to say that I got it. [Here](http://imgur.com/a/7m18W) is what my code looks like. Thanks for the reply though!
Just ignore cs = cs2(1+an) that formula is incorporated in the Cost function. and yes y = D. Ask your homework giver to be more consistent
I'm assuming you want to save off your `inv(A)*b` calculations? If so... Every `inv(A)*b` is a `1x1000` vector, and you have 10 of them. So, outside of your for-loop, you can make an appropriately sized array: c = zeros(1000,10); And then, inside your array: c(:,i) = inv(A)*b;
Also, you'll get better numerical results if, instead of inverting A, you factorize it and use the factors for division. This will be much faster than normal matrix division, but more accurate than inverting and multiplying. Yours is symmetric and positive definite, so R = chol(A); x = R \ (R'\b); You could also just concatenate all your `b`s and solve multiple linear systems at once n = 10; b = rand(1000, n); x = A\b;
This (above answer) is the proper way to do it if you know how many times you'll run your code. If you don't know how many times your loop will run, you can expand an array through an append operation: `A = [A; newVector]`. If `A` is, say, `5x1000`, the `newVector` would need to be `1x1000`. This can really slow down if you work with large arrays. If you don't know if your outputs will be the same size, you could use a cell array instead: `A{idx} = output`. This would work much like Weed_O_Whirler's answer.
While this works, you should really try your best to avoid it if at all possible, the easiest way being to calculate the largest possible times you may run your loop, pre-allocating to that size, and then chopping off the unused part. 
Thanks, but I don't think this is quite what I was looking for! In my example I want to make a vector (or some kind of collection of numbers) from the elapsed times I got from the Tic Toc command. The vectors and matrices in my example are just part of a calculation I'm measuring. It could be anything really, as long as it's a single numerical output.
I'll look into that tomorrow, thanks!
What have you started with? Any code? We don't do your HW here... Do you understand the problem outside of coding it? Are you stuck with how the method works/is structured? We don't know much, other a bare bones post that looks like "do my hw". If you share code, please put 4 spaces (i.e. tab in the MATLAB editor before you copy), that will preserve your formatting: here*is*no^formatting versus*pretty*looking^formatting
Maybe implement one of [these graphs](http://mathworld.wolfram.com/HeartCurve.html) in matlab (whichever one has an equation most likely to be recognised), including all the plotting statements and some sort of 'thank you' annotation in the middle, and send a card with that on the front instead of a picture? Write the URL of a gist with the code in it inside so they don't have to type it out if they want to see the whole thing...
The assignment is to create a matlab function that checks any user given function for roots where f(x)=0 on a user specified interval, within a given tolerance using the bisection method that within an iteration cuts the boundary in half, searches both the left and right side for the function to change sides and then continues cutting in half searching for f(x)=0 until it has found it within the given error bound. Here is what we are given in the lab handout: Exercise 1 Implement the method of bisection in a Matlab function Bisection.m. The calling sequence of the function should be [x,errbnd]=Bisection(f,a,b,tol) Bisection.m must have the following features: â¢ It must check that the inputs a and b are acceptable (which means that f(a)f(b) &lt; 0). If there is an error, the code should invoke the Matlab error function to print an error message and exit. It should also handle the special case that f(a) = 0 or f(b) = 0. â¢ The code estimates (if possible) a root of f with an error of at most tol. â¢ The code should print the progress of the algorithm at each step in the form k: [a,b], current estimate: x, error bound: bnd where k is the iteration number, [a, b] is the current interval on which f changes sign and bnd is the bound on the error in x. â¢ The code must avoid going into an infinite loop if the value of tol is unreasonable. â¢ Bisection should return the estimate of the root and the bound on the error in the estimate. â¢ Finally, like all Matlab functions you submit, Bisection should include âhelp documentation.â 
Ohh!!! I just tried typing in P = nearest(p) under p=((l+u)/2); but it didn't work. Any suggestions?
Here is what I have compiled so far, not everything is in order yet. I understand the mathematics behind everything, but knowing what variables to call what parts and what order everything needs to be in is what is stumping me. function [x,errbnd]=Bisection(f,a,b,tol) % This function implements the method of Bisection to finds the root of a % function, f, between interval a and b, with an error at most tol. % [x,errbnd]=Bisection(f,a,b,tol) a0=a; %setting all my variables initial values b0=b; x=0; x0=(a0+b0)/2; fxk=f(x0); fak=f(a); fbk=f(b); errbnd=0; k=0; % k is going to be the amount of iterations of the algorithm n= ceil(log(((b-a)/tol)/log(2))-1); % this is an equation for k I found algebraically based off of a,b,tol... %that I know is going to come in handly later on, but not exactly sure how. if f(a)*f(b)&gt;0 % this initially checks for if there is no roots on the interval error('There is no single root on this interval! Try a different interval.') end if n == inf %this checks to see if floating point numbers might cause infinite iterations. error('The value of tol is unreasonable! Try a greater value of tol.') end % this is where I start checking with midpoints if the root is on the left side of the midpoint, %right side of the midpoint, of if the midpoint is indeed the root. while errbnd &gt;= tol if fak*fxk&lt;0 b=x0; x = (x0+a)/2; errbnd = x0-a; elseif fxk*fbk&lt;0 a=x0; x = (x0+b)/2; errbnd = b-x0; else fxk==0 x = x0; errbnd = 0; end % here I think I should have all the values set before it returns to the top of the while loop again x0=(a+b)/2; fxk=f(x0); fak=f(a); fbk=f(b); k=k+1; % x(k+1)=(a(k+1)+b(k+1))/2 this was psuedo code that I wasn't sure how to implement for setting the root % to the x value that the function has as an output. %this is what must be printed in the command window for each iteration. fprintf(1,'k:%d,[%12.5e],[%12.5e], current estimate: %.5n, error bound: %.5n',k,a,b,x,errbnd) end end
None intentionally or for specific tasks. We are using vision and image processing toolbox and various functions. But none with the intent or previous knowledge of GPU acceleration. Which is why I'm wondering if we can see a boost in performance with a GTX 1060 compared to the GTX 960M. Even 20% is enough for us to to go for the newer mobile GTX 1060 6GB used in the laptops. But more CUDA cores than pixels?!?! 1920x1080 for two streams is 4147200 pixels combined........We can't afford that.
uhm are you sure? I replaces the p assignment with p = nearest(((l+u)/2)) and there are no errors.
something like this: function output = funcHelpInterposeSp(input) output=[]; space=' '; lengthStr = length(input); for i = 1:lengthStr thisChar = input(i); output = [output thisChar space] end end 
Thanks for your response. The added parameters make the curve a much nicer fit! The part I'm having the difficulty with is actually running any sort of derivative function on the curve data; I'm not sure how to use the [parametric?] representation of the curve to get actual real values back out so that I can run the diff() on it. Am I right in assuming that I can get the smoothed Y data back by applying the curve to my x values? so: SmoothY = curve(Xdata); Running diff(SmoothY) or diff(SmoothY,2) still results in more points than expected, so clearly I'm doing something wrong. 
I can't call it in the normal way because of the variable I said earlier. The code will crash. Your analogy doesn't work since that would result in a loss of quality at the end. It's more like dialing your friend next door using local and international area codes unnecessarily. Nothing is lost, it just takes more time. Do you have the answer rather than essentially saying, look it up? Because I have looked it up and I found that eval was the way to do it when you have a number you want to include as a piece of text. Also very helpful when naming variables x1 xa x6st or whatever. Do you know something better that I don't?
You don't need to make any assumptions about that being the business model. That's been their plan for a long time. There's a reason the student edition was a hundred bucks. I agree that python is a really good alternative, up until you look at simulink and embedded coding. For that, Mathworks has everything locked down pretty damn well.
I for one welcome our new python overlords. 
It depends a bit on what you're going for. I'd approach it by approximating the derivatives over a finer range: h = 0.001; X = min(Xdata):h:max(Xdata); Y = curve(X); Yp = diff(Y)./h; When you calculate `SmoothY = curve(Xdata)`, keep in mind that you have multiple instances of the same value of x in Xdata. Even with a smoothed curve, that's going to create locations where `diff(SmoothY)` returns 0 -- it just subtracts adjacent values, right? That leads to problems. You could address that somewhat by trying `SmoothY = curve(unique(Xdata))`, but I think the more rigorous numeric approach is to step over the range as above.
Disclosure: I've never done any kind of task that was actually faster using the GPU over CPU, but that's just because of my lack of programing skills. Anyways, for most compute operations (when it comes to simulation packages like ANSYS) the main bottle neck is VRAM (hence why Teslas have 24 GB of VRAM). Idk what memory requirements you have, but I do know that the 1060 is quite a bit faster than the old 900 series GPUs. Whether you need the extra speed, idk. 
okay so for question 1e, im supposed to minus the total cost from 1d and total cost from 1a right but the thing is it doesnt pass the root at y=0 edit: figured it out thanks man. im having some trouble understand the question 1.c) : http://imgur.com/a/iLoyt They asked us to create a vector D for a specific range, does that mean that we have to calculate the value of x for each vector D or we continue using x = linspace(0,120,121) which was given in the earlier questions. 
Do you still need assistance? Believe it or not, I just wrote a bisection code for one of my classes just last week
yes! I am very much in need of help! Gosh, I'd be ever so greatful if you could lend me a hand. I am so new at matlab.
I thought getting the error message meant that it has crashed. I had no idea i didn't need the eval there until I tried it. I realise now that it must have been something else that had the error message and I've just assumed this case is the same. This labeling works without the eval now, however that only because I've replaced \textrm with \max which works so much better. I don't know of any way to label my variables other than rvec?m? (or sometimes with even more reference numbers). These are all different sizes so I can't just merge them all into one giant matrix or array. eval seemed to work well so I went with it. What should I have done? It's probably very clear to you that I've had to learn all this by myself. You'll be happy to know that I just searched for eval in my code and I have 10,309 eval's! For kicks I also found out that I have 13,727 if statements, isn't that fun?
An error is not a crash, it's an error. It tells you *exactly* and *clearly* what went wrong. You need only read what it says. Almost every use of eval is the result of a mistake. If you need eval, you're likely trying to do some you shouldn't, and/or you've made a mistake in how you organized your code to begin with. Indexed variable names are an example of this. If you find yourself wishing you had indexed variable names, you have already fucked up. Go back, see what you did that makes you want indexed variable names, and fix that mistake. It will likely be a fundamental issue with the way you're storing data. Any time you have a valid need for indexed variable names, you should use an array instead. Worst case, you can use a cell array. Cell arrays can be abused as well, but it's not as terrible, and cell arrays have plenty of valid applications. Eval has essentially no valid applications outside of a few unique cases. 
Use `csvimport` or `textscan` in combination with `cell2mat` in order to turn your cell array into a regular array. 
Is this a linear system? If so, you're asking about basic linear algebra/matrix operations. This is the core functionality of Matlab, which it was designed for from the start. 
Once you do that, you should be getting a set of fit parameters. You can solve for FWHM directly from those parameters. If I remember correctly it's 2 * sqrt(2 * log(2)) * sigma Where sigma is the standard deviation. 
What's your problem? I told you I had to teach this myself and I've done the best with what I found. You've told me that cell arrays exist and I'll use those when I can. You haven't given any reason why eval is bad besides saying that there's too many commas. The computational results are fine and agree with predictions, stop being so aristocratic. Is there other downside that I haven't already mentioned before?
Read the documentation for cells. foo = mycell{N}; should extract the Nth entry from the cell array into a regular array. If you're getting one cell array, do something like: foo = mycell{:};
There's no guarantee you'll get to compare n5. Take this example: N1 = 4 N2 = 6 N3 = 100 N4 = 8 N5 = 999 Obviously N5 is the largest, but you never get to compare it with your structure - your code stops as soon as the first case of your if conditionals it met (in this case, elseif N3 &gt; N4). If you are looking to return the max, why not use the max() function? If you can't use the max(), just compare N1 to N2, N3... and so on, and store the max separately.
In 16b: &gt;&gt; replace('abc','',' ') ans = 1Ã7 char array a b c 
Just do you know, you're not calculating the `max` here. If n1 is bigger than n2 (and even if all the other numbers are bigger than n1), you exit out without computing the rest. Also, as you can imagine, if you had more than 5 numbers, this method would be unmanageable. As a rule, if you want to find the max of something, you start with a max which you know isn't the max (say `max = -inf`), and then you cycle through all of your inputs, and compare them to `max`. If they're larger, you make a new `max`. So something like: max = -inf; for i = 1:length(n) if n(i) &gt; max max = n(i); end end
I managed to work it out by calling gw(x(1), x(2)) in the function inputs. The part that had me confused was the fminsearch help suggested I set one of those equal to a certain constant.
On mobile so I can't post the link directly, but I think Mathworks has a pretty good explanation of neuronal networks on their website. Search 'MATLAB' and 'neural networks' on Google and something should come up
Calm yourself deary, this is only reddit.
sorry. I will calm my balls. It's just never easy to see a person coming to you with a problem without reading the error msg first.
Thanks! I got somewhere but I'm still stuck on extracting the coefficients. look at [this](https://i.imgur.com/cu2URkM.png) for instance (no A, b or f in the divisor subexpressions btw). I now have all the variables I want completely separate from other variables but now what I'm stuck on is separating all the ones with A, b and f in different places the factoring the respective variable from them. Any ideas on how I could do that?
I'm not familiar with your your exact problem, but I know in the physics community, tensors are almost always formated in that form (the diagonal being a value compared to itself and the rest having its inverse also be present in the matrix). Have you checked the matlab help section on this function? Tons of matlab functions have different ways that it'll output answers, so you might be able to either format the function differently or add an extra setting to the function to force it to output a scalar. 
&gt; a .dat file &gt;dat file O shit
You can use that function to compute the correlation between multiple pairs of vectors simultaneously by passing in a matrix with a dimension &gt;2
I just did that now I'm getting the error "clasname input must be a class that supports randi"
Yes, if you type `help randi` you'll see how to use randi and see you're not using it properly. Tip: you can make a string array, and then use randi to randomly select an index, and then use that index to select one of your strings. Also, you compare strings with `isequal`
This is the answer. It is not uncommon (in some fields) to want a whole correlation matrix expressing the all the pairwise correlations among a large number of vectors. FYI, Matlab has (at least) two other correlation functions, corr and corr2 (one or both of those might be in the Statistics toolbox, can't remember for sure). One of them (I think corr2, but again, not totally sure from memory) does what OP expects and just gives a single r-value when you pass in two vectors.
Thanks for the suggestion. I tried defining the function on it's own line, and it didn't change the timing at all. Unfortunately the inputs to my function are different in each iteration of the loop, and it can't be vectorized. If it could be vectorized then a single call to a high dimensional fminsearch would probably work well as you suggest.
Something like words = {"hack","sack","back","fack"}; word = words{randi(length(words))}; Also... Use strcmp rather than ~= (but you have the right idea).
I think this is what I did, no? The dummy function is the first argument to fminsearch: @(tmp) nll1D(Y(:,i),X,Z,tmp)
I don't know much about point cloud operations, but there's a whole branch to applied/computational geometry related to it. As a naive approach, you could convert this into a surface fitting problem by cutting your point cloud in half (say left and right sides) then fit each to a surface and treat your final result as a piecewise composition of the two fits. 
Where are you stuck, exactly? What have you tried for parts two and three? You've got to break the problem into smaller chunks than this. 
Yes, sorry, I tend to use "merit function" and "error function" synonymously, even though traditionally they'd have opposite sign. I see what you're saying but I suspect it's just an issue with how execution time is accounted for. Some of the time spent inside the m file is probably being attributed to the anonymous function call. You could test by replacing your merit function with something trivial, like a polynomial, and calling it in the same way. If it still takes a lot of time to call the anonymous function, then it's real. If the anonymous call suddenly takes only a miniscule time, them it's just an accounting effect. 
It is probably worth pointing out that there is a significant difference between what most will think of when you say "Neural Network" and what's described in the paper, which is looking at a network of Integrate-and-Fire neurons. "Neural networks" are generally a technique in machine learning that look to learn some input-output function using "neurons" that pass weighted input through a non-linearity, and get a lot of neat properties based on how you wire those neurons. The paper you're looking at is attempting to simulate actual neurons using an Integrate and Fire model. Rather than the simple models of neurons in "neural networks," the model used here attempts to model how a neuron works in a semi-realistic fashion. The network here isn't used for some functional purpose, but rather to try and learn something about how the brain works. These models aren't so useful in machine learning, but are maybe more useful in neuroscience. This looks like this might be useful to you, but I haven't actually read through it: http://neuroscience.ucdavis.edu/goldman/Tutorials_files/Integrate%26Fire.pdf
If you're using Matlab post-2014b (I think), you could use the following. % Sample lines X = 0:pi/100:4*pi; for idx=1:10 Y(:,idx) = sin(X) + idx; end % Plot sample data figure; h = plot(X,Y); % Generate colormap numLines = length(h); cmap = colormap(parula(numLines)); % Apply colormap to Line array for idx = 1:numLines h(idx).Color = cmap(idx,:); end You could extend this to any property accessible via the `Line` properties, including `LineWidth`.
nothing since there is an error, the program is forced to terminate
Most likely you haven't assigned any values to i and j in line 3. By default i and j are the imaginary unit (i.e., sqrt(-1)) and you can't have complex indices.
&gt;the error is happening at B(i,j) Do you mean it is at line 3? Did you define `i` and `j`? What are you trying to do with this line? You do not need to predefine variables in Matlab, though you can for speed. In this case, you should do: B = zeros(1024,100); though again, you do not need to do this. Then again, presumable you already have a variable `B` since you are trying to find where it is below a value. (which, by the way, you can do with: B(abs(B) &lt;= 0.01) = 0; and it will be worlds faster) Also, do yourself a major favor that is also really simple. Be good about indentation (and always indent inwards). It will make your code much more readable both for you and others. That kind of thing is invaluable when it comes to debugging.
Print the values of i and j before line 3, that will probably reveal your problem 
i know that will be worlds faster but we have to do one file with if statements and others using what you showed. Our end goal is to see which one is faster. This is why im using tic toc function of matlab too.
That's why you should check what the values are *before* line 3. Hint: ```disp([i, j])``` on line 2
Being that /u/TMAXheat is still new, I will take this time to piggy back off your comment and give him/her some other good-practice comments. Do not use i or j as indices as they can mean the complex number. It is just good practice to avoid it. Personally, I use ii and jj. Because so many people do break tip #1, when dealing with complex numbers, use `1i`. 
That's pretty much exactly what I thought `collect(expr, {A, b, f})` would do. Unless the other subexpressions have A, b, or f in them, in which case I'm not sure it would work.
Wait, sorry, can you explain the line: B(abs(b) &lt;= 0.01) = 0; 
+ wow it was that simple. Thanks heaps. Do you know if it's possible to get the gauge to update in real time?
You'd have to loop your fscanf command to read the serial port as many times as you need and update the value of cg accordingly.
The signals toolbox contains an RMS function. If you don't have that you can make an anonymous function to calculate the RMS of a vector: rms = @(p) sqrt(mean(p.^2)); Then you can use logical indexing to get the RMS over the times you want: rms_during_spike = rms(y(x&gt;5 &amp; x&lt;10)); rms_outside_spike = rms(y(x&lt;5 | x&gt;10));
You may also be interested in [fastcorr](https://www.mathworks.com/matlabcentral/fileexchange/22358-fast-correlation-between-two-vectors/content/fastcorrelation.m?requestedDomain=www.mathworks.com).
+ Yes, different input arguments generate different cache files.
First, not to be pedantic, but it have to be uppercase to be the same variable. Anyway, `abs(B)&lt;= 0.01` returns a logical index of ones and zeros that correspond to the elements of B that are less than or Equal to 0.01. Then, you're telling ~~Marla~~ Matlab to set those to zero. Read up on Matlab logical indexing and/or array indexing and splicing in general. Things like this make a HUGE difference in performance. **edit**: Fixed autocorrect error
I'd look into timer objects and specifically the callbacks for them. This can be a little tricky to implement, but you can set the object to call a function every X number of seconds, or rather how often you want to update the gauge. 
&gt;I love to teach Matlab ..yet all you do is post your book spam here and do not contribute in anyway with users.
This is an open forum, if you feel more one on one interaction is key, sure that's amazing, that's how I learned most of my skills. I don't appreciate the hostility, I hear your points, all are valid , if you dont like my links or posts simply don't open them.
Is there a reason you're using polyfit? [Finite difference](https://en.wikipedia.org/wiki/Finite_difference) would be the easiest way to calculate the derivate.
Why do you want to plot it logarithmically? The fact that it crosses 0 suggests that the logarithm might not be a useful transformation to apply. Please give your reasoning.
Try the function diff
You could consider plotting separately in different colors the + and - aspects... ln(x) is only defined for x&gt;0, so you could try something like x = %logarithmic sine data figure; hold on; plot(ln(x(x&gt;0)),'color',[1 0 0]) plot(ln(abs(x(x&lt;0))),'color',[0 0 1]) plot(x(x==0),'color',[0 0 0]) To get your +tive data in red, -tive data in blue, and any 0 as black. I would suggest to not plot a continuous line, but rather use a name,value pair and plot the data as a symbol.
I'd love to help you but I'm getting far too confused. Can you fix your formatting and remove your comments? Just show the lines you're executing (use double line return to show a new paragraph). Also an image of your output would help.
When i=1, v(i,:) already has 3 elements in the first row, but 'i' is 1x1, so dx(i) is also 1x1. You can't assign a 3x1 quantity to a 1x1 array. You probably mean dx(i,:). The line before works because on line 17, your force is a 1x1 scalar, so your acceleration is a scalar, so a(i,:) is 1x1. If your code is doing what I think it is, it's also probably not quite right, because your force should be a vector quantity and hence should also have 3 elements (you probably want to have a vector in the same direction as x, but with the magnitude you calculate on line 17)
In the line dx(I) = v(i,:)*dt, you're multiplying a vector by a constant right? That might be throwing you're issue. Are you trying to multiply each element in v and store dx(i) as a 1x3 vector also? In that case you need v(i,:).*dt, the 'dot' specifies to multiply each element in v individually rather than treating it as a vector. As you're trying to multiply a 1x3 vector by a 1x1 vector which you cannot do.
Why is this a Monte Carlo simulation? This looks like something I would integrate with [ode45()](https://www.mathworks.com/help/matlab/ref/ode45.html). ^^^^Also, ^^^^you ^^^^dropped ^^^^this: ^^^^)
AFAIK (chemical engineering background, not physics), the 'age' of any individual atom doesn't affect the decay process. The instantaneous odds of decay for any individual are constant over time. The exponential behavior of the population naturally emerges from that time-invariant property; you don't need to track atom age. I read this problem as defining a half-life as 1 unit of 'time'. When you add additional atoms from t=5:15, nothing about your half-life term has changed (lambda's constant). If the Monte Carlo behavior you're trying to simulate here is to examine a small number of atoms such that you can't make a continuous approximation (ie solve with `ode45`), you've got options. You could either track a population size (just a scalar value), or you could make an array where each element represents an atom. You could check `rand(size(population))`, compare `ans &gt; 0.5`, and use that to create that 50% odds of decay with each half-life. Scale that probability as needed for your simulation's time resolution; remember that the scaling there *won't* be linear. There's no physics need to track anything more than your population size. You could do so to, for example, display the distribution of atom ages at any time in the simulation, but the properties don't change.
I've checked both of those, and neither of those are causing a problem.
It sounds like interpolation is the keyword you need
Like any programming language, it's best not learned in abstraction but in practice. You have a tasked designated to you. What is the first step in the task? Load the data. So, look up how to do that. Next? You probably want to look at the data in some way, raw data, so look up the different ways to present data in MATLAB... Different types of graphs and how to format them. Then, once you've gotten that down, you can start to play with more complicated functions - who's necessity should become obvious as you work more with the data. (Because honestly no one here knows anything about your data) The useful thing that I'll tell you is not to write in the command window, but start a new .m file - because it's a pain in the ass to manually load data each time. You'll get there in no time.
https://www.mathworks.com/help/matlab/ref/griddata.html Might work for what you're trying to do.
I've tried: syms k S1 = symsum(a^k, k, 0, 50)
I see beginners in MATLAB want to use symbolic math for everything- even when it doesn't need it. MATLAB is primarily a numeric calculator, and if your matrix A is defined numerically, there is no reason to use the symbolic toolkit. I recommend simply defining `A` and making a variable (maybe `A_sum` or whatever) initialized to zero, then running through the summation in a for-loop. Of course, there are some more clever ways of doing it to avoid the loop, but when first starting off in MATLAB, you might as well do it the straight forward way. 
I was actually looking to re-define a Z axis as that's my axis of propagation, though it was "neglected" in the initial setup. So the dimensions for the setup with the for loop would start with: N_z = 40; %number of screens D_z = 50; %length of each screen D_1d = (0:N_z-1)*D_z; %1-D axis of propagation (2000 meters) D_0d = N_z*D_z %dimensionless length of screen then for ii=1:N_z expression from initial code and obtain results. Here's the best representation I could make using a for loop: http://pastebin.com/gtgFAHUz In order for my final outcome to be dimensionally satisfied I have to add my result from the first iteration itself(jj), but I feel that's neglecting the legitimate value I seek and is instead just providing me the result of the first iteration. I could have the code actually right and just be misinterpreting it.
Yea I could do that but my professor specifically states to only use fprintf to display the entire matrix. Thank you though!
Honestly, I think the Python SciPy stack would be a better place to start. Since this is the Matlab sub, hear me out. Yes, Matlab could probably be provided to him by the university, or he could get it for very cheap. But the SciPy stack is completely free. The SciPy stack has more overall functionality, and it's built on Python, one of the languages I always recommend to beginners due entirely to the fact that it's very simple to learn. The syntax is similar to written English, there are tons of resources available, and it's an incredibly versatile language. Anything you want to do in Matlab, you can do in Python with the SciPy stack. For those worrying about syntax, it's very similar to Matlab. Don't worry about "the skills needed for Matlab", because all that's really needed is an understanding of math and basic formal logic. Your primer in C++ should be enough for both Matlab and SciPy. Finally, working consistently with Python will give you a good computer science base, and a specialty with a single language. You'll be able to automate tasks in future, and even if you don't, you have another tool in your belt. Matlab is a wonderful tool, but it's also very specialised, expensive, and situational (excelling at linear and matrix functions). If I've convinced you, check out the [Anaconda](https://www.continuum.io/downloads) distribution of Python. I believe it's built on Python 2.7, but you don't need to worry about versions yet. That's a completely different can of worms. As for editors, I recommend [PyCharm Community Edition](https://www.jetbrains.com/pycharm/). It includes everything you'd want in an IDE, and plenty more. There are tons of options, but this is a fantastic place to start. [O'Reilly has a good selection of free ebooks](http://www.oreilly.com/programming/free/) that can help you once you get past the initial hump. [Code Academy](https://www.codecademy.com/) has a great beginners guide to python lesson, and they can teach you basic API use there too. Happy coding!
If you have access to matlab, then go ahead! You're overthinking this -- you can learn anything you want.
The easiest way would probably be to loop through the data and use fprintf to print each line out. You can reference more than one variable per fprintf call.
You're allowed an arbitrary number of inputs to fprintf, just be careful if the As are not all the same length. First print the header, then all the data, tab separated. fprintf('\tProduct ID\tQuantity\tUnit Price\tTotal Price\n') fprintf('%7.2f\t%7.2f\t%7.2f\t%7.2f\n',A11,A22,A33,A44)
Wouldn't it just be x4=100,000 and x1=x2=x3=0 ?
fun = @(x)-((10*x(1)^.4 )+( 8 * x(2)^.5 )+(12*x(3)^.3 )+( 16 * x(4)^.6 ) ); x0 = [0,0,0,2]; A = -[1, 1, 1, 1; 1, 0, 0, 0; 0, 1, 0, 0; 0, 0, 1, 0; 0, 0, 0, 1]; b = -[100000, 0, 0, 0, 0]; x = fmincon(fun, x0, A, b) this is formulated code thus far trying maximize the top function 
I have 32 GB and regularly use 20+. If they're asking for 32 I'd say go for it. The cost of memory is much smaller than the cost of wasted hours if you get less than that and it turns out not to be enough. 
I mean 2x may be overkill, but if they have they have the money for it go for it. ML has a pretty good parallel toolbox, and theres a lot of gpu functionality too for things like image processing.
How do you know that it isn't correct? If your input data has large values it will get rounded to 255 or 0 at the end. 
Yup, but maybe the next problem he has to change the function? 
It exceeds matrix dimensions because you have x and y backwards in your original code. Also you should vectorize this and use logical indexing to eliminate your for loops. 
Must you use for loops? Matlab isn't the greatest with for loops and you are seeing the problem here. It seems like you may need to rethink your problem solving and step outside of Matlab. I've worked on similar problems and I know that they are possible using [Bonsai](http://www.open-ephys.org/bonsai/). Bonsai will easily track the movements of an animal in realtime and enable things to happen based on the animal's behavior. For example I tracked a mouse in an open field and depending on it's position we changed the sounds that it could hear. That is, it's position triggered a different sound. But instead of triggering the audio, you want to trigger the laser. The thing about Bonsai is that it runs continuously (in a for loop) and all you have to do is set the baud rate. Thus, when certain events happen, it can externally trigger sounds, lasers, LEDs you name it. The good news is that Bonsai is open source. The bad news is, it only works on PCs. If you are interested in knowing more, send me a PM with your email and I can send you code samples. Good luck **Edit:** Maybe you don't have to step out of matlab. Why do you need a for loop for the voltage pulses? I suspect that the problem is, you only want to have the laser turn on when the animal is in a certain location, but you don't want the laser on tonically because that could be very bad for the rat's poor brain. Instead I think you want to pulse it. Now once the laser is triggered for one pulse (likely 1 - 5 ms) with an interpulse interval of say, 50 ms, then you set a timer for the next laser pulse (t = t0+55ms). If the rat's position stays within the ROI then the next laser pulse is triggered. If not, the laser resets and goes back to square one. Did I solve it? I think I did :D
+ Yep, first thing I thought of too. The problem is that the pulse generation needs to be done at a specific Hz frequency (e.g. 20 pulses per second). The loop is not fast enough to get an image from the camera and process the ROI and still generate a reliable wave-form at a anything above 5 Hz. I'm happy with updating the animal location at 5 times per second, but need to update the DAQ at least 30 times per second ( a loop updating the DAQ by itself can perform over 100 updates per second; fast enough to make both sine and square waves with good resolution). 
+ Thanks for your reply! &gt; I mean, both nodes as far as I know are running asynchronous code, and may even complete at different times. When you want to update the other node, the other node can be anywhere in the self contained loop. At that point, the nodes are apples and oranges. It's very much ok for these two "nodes" to be running asynchronously. One loop doesn't need to know what the other loop is doing, or how far along it has gotten. All I'm looking for is the ability of one loop to abort/break the execution of another loop.
**[I made a quick video of what can be accomplished using the parallel computing batch function.](https://www.youtube.com/embed/_SIy9LQ7ZL0)** ----
Thanks a lot for your amazing response :) I've managed to add colours to my lines, by I need them to vary in dark colours. i.e black to dark purple. Any idea on how I do that? Also when it comes to lines being different i.e having spaces or being dotted, is there a way to vary them in a similar way? I mean by using the same for loop, but instead of .Color = cmap to have something else. Edit : Well don't worry about it. I found the way to set different linewidths, but I don't know how to do the linestyle in the loop. I mean by using 1:8 to change the -- to something else.
I can't try it at the moment, but you can probably use char() with the ascii number or whatever it's called for the character you want. A = input(['A (', char(ascii number for Omega), ')=']);
I have code for some software I'm working on that creates a list of facets from a binary or ascii STL file. It's written in VB.Net but you should be able to translate it pretty easily off you have a head start in MATLAB. PM me if interested
Also, just to add, this is personal preference but I've always preferred cell-arrays of structures to structures of cell arrays personally. It means that each sub-object is self-contained. I am not 100% sure of the memory mapping of Matlab though so this may not be ideal.
I a 100% agree with your sentiment, but: &gt; Anything you want to do in Matlab, you can do in Python with the SciPy stack is a bit misleading. Both tools have certain things outside the domain of the other. Google around for plenty of examples. But still, I agree that OP would be better using Python unless he or she *has* to use Matlab for a class, etc. Especially if you already know C++, you're used to (a) object oriented and (b) 0-based indexing, two of the hardest things I struggle with when I move between the two (yes Matlab does have objects but it is nothing like using them in Python)
Also, if OP wants, he or she can still use C++ for numerical computing. Certain *much* more overhead but it has lots of benefits too. Also, checkout [`Eigen`](http://eigen.tuxfamily.org/index.php?title=Main_Page) to get some mutli-dim array functionality.
This is doable without parallel computing. I need some more details though about the pulses: when the animal is in ROI 1, do you send the whole sequence of pulses or just one at one voltage? What if at t1 the animal is in RO1 and at t2 it's in ROI2, does that reset the pulse sequence or does it continue at the following voltage? Or is it the case that the pulse sequence is always being sent as long as the animal is in RO1 and it just starts over when you reach max voltage and it stops completely when it enters ROI2? (does it then reset it continue when it re-enters ROI1?)
The STL file format is definitely what you're after. 
You should be able to use any ascii character. There are tables of ascii characters out there if you Google for them. Using char() like the other poster suggested would be a fine way of encoding them. This is actually one of the ultra-rare appropriate uses of eval()! You win a prize for finding it, but be careful as it is still highly error prone. 
As far as i have researched you cant :'(
Yes. That is what is contained in an STL file. 
+Will it work if the length of my strings don't match the length of my numeric values? I'm trying to assign values like 0, 0.045, 1.23 to strings like 'October' or 'March'
Yep, although it will likely be easier to use a cell array of strings rather than a character array for this purpose. Example: &gt;&gt; a = [0.045,1.23,0]; &gt;&gt; b = {'March','October','January'}; &gt;&gt; [S,I] = sort(a); &gt;&gt; b(I) ans = 'January' 'March' 'October' If you absolutely must use a character array, you can do it like this: &gt;&gt; a = [0.045,1.23,0]; &gt;&gt; b = {'March','October','January'}; &gt;&gt; c = char(b) c = March October January &gt;&gt; [S,I] = sort(a); &gt;&gt; c(I,:) ans = January March October
+Thank you so much! 
Ok i fixed it 
Hey there mate. Any idea how I would pass two vectors into this? In the form of simpson(x, f)? How do I convert my data points into functions? Polyfit? Thanks!
probably, just try to write simpson as an m file or an anonymous function which takes both f (the anonymous function f), and x (the vector of points). However, this seems too much: I'd rather write it as `simpson(f,a,b,n)` where `a` and `b` are your bounds, and `n` is the number of points between them.
By default, Matlab represents images as a set of three 2D arrays, where each array contains values of one of the RGB channels for each pixel of the image. All Matlab does is just storing numeric values for each pixel. It cannot handle transparency meaning even if you saved your adjustment layer separately and import it into Matlab, it would obscure the background completely. https://www.mathworks.com/help/matlab/import_export/supported-file-formats.html You can see here that the mentioned image formats do not support layers either.
Repeat the image 3 times across the third dimension to get the grayscale image into rgb format. Then use [`rgb2hsv`](https://www.mathworks.com/help/matlab/ref/rgb2hsv.html)
If you're looking to read a multi-layer file into Matlab without doing any extra work, you're pretty much out of luck. As /u/CelestialStructure suggested, Matlab doesn't read in any such formats. And such formats actually aren't that common -- layers are a property of certain proprietary image formats of image-editing software (most notably Photoshop) and of some vector image formats, but it's not standard in any of the common raster image formats (BMP, JPEG, PNG, etc.). Photoshop format is kind of a nightmare and is not technically an open format, although various software attempts to have at least partial compatibility with it. TIFF can do layers, but I believe that is only through an "extension" to the format that is not universally supported. However, sort-of-contrary to what /u/CelestialStructure said (unless I misread his/her meaning), there is support for *transparency* in Matlab -- just not multiple layers within one image. For example, Matlab can do PNG images with an alpha (transparency) channel that indicates how opaque each pixel is. But only for a single image plane, not multiple planes stacked. So if you have multiple layers represented within Matlab, you could most definitely write out each one as a separate PNG, and then it would be easy to manipulate them in Photoshop or whatever if you read them each in and re-stack them in the correct order. It is also pretty easy to flatten/composite multiple images with transparency layers in Matlab -- the math is pretty easy, just basic multiplication and addition. But if your main issue is that you already have a multi-layered image file in a proprietary format (like Photoshop PSD), then yeah -- there's no easy way to get that exported straight into Matlab. You're stuck with just saving each layer as a separate PNG (or other file format that supports an alpha channel, but PNG is probably your best option).
I think this thoroughly answers my question. I actually do already know how to handle transparency directly, but only because I was curious about how it worked at some point and tried to recreate it myself. The main issue is dealing with the idiosyncrasies of different file formats, and it sounds like that's a lot more trouble than it's worth. Thanks for your help. 
 doc sort 
Umm... perhaps this is a stupid question, but if the image is grayscale, wouldn't the saturation be zero everywhere? And the hue meaningless? I'm sure you could have good reasons for doing this, but... just checking. Because a color model like HSV only applies when you have, you know... color.
Now to answer your question. If you was `T` from 200 to 1000, you can use `xlim([low high])`. But you only define `T` from 0 to 500 so you'll have lots of extra space. Is there any chance you were supposed to do 500 steps between 100 and 1000? Regardless, I personally prefer something like: T = linspace(100,1000,500); so that I do not have to think about the increment and instead can just think about the bounds and the number of steps. But whatever works for you ...
If you type `help isequal` you'll see that `isequal` takes two inputs (the two things you want to compare). It will work for strings. However, if you want to compare multiple strings, you should use `strcmp`
You can specify the window location and size, so that way you can set it to a corner and use your screen resolution as the size. But if you share your code with someone else, it would look different.
Taking that approach setpixelposition(gcf,get(0,'ScreenSize').*[0 0 1 1]); Or you can use the java method, which might throw warnings. 
You could either insert it symbolically into matlab if you have that toolbox, or just define an array of values for X, compute an output array for F, and the plot those two arrays.
It doesn't work, maybe I am using it wrong. Can you tell me if I should write it after or before the line which plots, or if I need to give some specific name. Thanks for your time.
You want to run this after you've initially made your figure. Have you previously modified this figure's position property? ... or the units property of either the figure or screen? If you just run get(0,'position') do you get a 4x1 array?
Because log(x) goes to -inf when x goes to 0
Thanks a lot, I solved it with your help. I defined my graph and on the next line I typed set(... Thanks for your time.
You need to use the asterisk for multiplication. Your code is trying to pass w in function j. F = 1*(1+j*w); The command for arctangent is atan(). edit: formatting
For something like instructions I find using a pop up msgbox() the most clean.
set(gcf,'units', 'normalized', 'position', [0 0 1 1])
Save yourself a bunch of heartache and use atan2() or atan2d()
as in the helpdlg func? Ideally I'm thinking about situations where you might need a lengthy annotation beneath a graph, or say a word perception task with large sentences on screen where you still need access to other GUI components.
I think you'll want the second option 
Properly formatted: function [ Largest] = Stress_on_the_curve_( strain,stress ) load('materials_data.mat') uts = 0 for i = 1:length(stress); if stress(i) &gt; uts; uts = stress(i); end end display(uts) strain=strain(length(stress),1)
`strcmp` or `strcmpi` Matlab is not know for great string handling. It can get cumbersome!
Thank you so much.
Hey, I was in a similar spot a year or so ago, I think I deleted my bookmarks for the tutorials I used, because I can't find them. BUT From what you are describing, you will only need an understanding of how to create data sets from external data, and how to plot that data. Matlab has a huge "manual" so to speak. Any question you will have can usually be answered with a well written google search, and then heading towards the mathworks website. They have tutorials written by the creators, as well as a questions area where users ask and answer questions. In my few years of Matlab experience, I've never had a question that hadn't been answered online (for free) :) Good Luck! 
Also, I just saw the sidebar of this subreddit has "places to learn Matlab" and "Matlab Resources" Could start there.
You have 6 unknowns, just use 6 equations. It sounds like the 7th is not needed.
I mean, this is just what /u/Jpldude told you. Take out the seventh equation. Good luck!
 No problem. Just as a general tip, when you get that error message again, always check the dimensions of your matrices. Write them down and check that they are indeed comformable. Sometimes it's something as simple as you forgetting to transpose one of your matrices. Now, not having a go at you, more of a cheeky comment. But with a username like FermatsRiemann, you need to step up your game haha.
Haha, yes, i blame my tiredness. Its late friday night here in sweden. Now i just need to do a bar chart of this whole ordeal. 
Check the dimensions. Could be that one is a row vector and the only one a column vector. If that's the case, re-define your vector x=x'; 
To reply to your whole question: I don't know what you're planning to graph here. If it's your answer to the vector x. Then you want your X argument to be just an index vector and your Y argument to be your x vector (the one you obtained before). I would define an auxiliary vector ind=1:6; and graph bar(ind,x)
fopen stem plot 
 %% If your system is over-defined, use the best-fit approximation x = (A'*A)\(A'*b) 
Hey, I do the same. I've quite some experience with using MATLAB for ephys data and I write my own routines. You can PM me if you want.
Same here. What kind of stuff do you do?
Hiya! I do the same. What kind of rig well you be using? Plexon, Tucker Davis.. ? And what do you want to use MatLab for? Sorting? Data acquisition? Data analysis? The Chronux toolbox may be of interest to you. I don't know of any specific tutorials that I used, but I'd be happy to provide some pointers, once I know a bit more about what you want to do.
Can you group them up just by class, then take 70% from each group, and combine?
Wut
I have a sinusoidal wave that decays as a function of position, the decay is somewhat rapid, and so I figured I could use a different plotting method to better visualize the data 
Thank you!
If you have two classes (let's call them A and B), is every image from either class A or class B?
Thanks! I'll take a look :)
How many images do you have? The reason I ask is to find out if brute forcing it could a possibility. Just randomly split the images in two groups 30% and 70% and check the A and B contents of each group. If it's correct, great, if not (which it likely won't be) then have it loop back to the start and try again.
If you want to see a working example, check out inpolyhedron on the file exchange.
One way to do this from basic principles is to assemble the list of planes that create the solid (defined by their outward facing normals), and the test point should result in a negative value for all of the plane equations for each surface.
Try fixing a couple of things first: * 20compA. You're missing an operator there.. 20*compA? * use * instead of x for multiplication: 8*3 instead of 8x3
First off I would like to thank you for your response, so I made some adjustment and I am now able to plot q. I left q in terms of q(t) and defined t in my fplot(q1[0,100]. q is plotting just fine. I am not not able to plot Q now.
The function int is part of the symbolic toolbox. Are you sure that's what you want? For numerical integration the function you want is [integral](https://www.mathworks.com/help/matlab/ref/integral.html). 
I'm not sure that comparing the lengths will always work. There could possibly be a case where adding the 7th point will cause one of the original 6 points to no longer be on the boundary of the convex hull. The length would be 6 in this case, even though the point was outside the region. In general you can compare equality of non-scalars with isequal(k1,k2) or isequal(k1,k2,k3,...). It works with numeric arrays, cell arrays, structs, handle objects, etc. One more thing: I'm not entirely sure how convhull orders the vertices. isequal(k1,k2) would return false if k1 and k2 contain the same vertices but in a different order, which is not what you want. To be safe I would do if isequal(sortrows(k1), sortrows(k2)) ... end 
Thanks! That was the one!
The gramm plotting toolbox has a few goodies for neurophysiologists like raster plots and PSTH: [gramm Github page](https://github.com/piermorel/gramm) ... But it's also general purpose enough that you can use it for almost everything (similar to ggplot2 in R): no need to write for loops to plot grouped data in different colors or in different subplots anymore! It will also take care of averages and confidence intervals for you.
Looks like s is size n, x is size n-1
Try using plot() with Q and t arrays as arguments instead of fplot() qi = 10000; D = 0.01; t = [0 : 100]; q = qi .* exp(-D .* t); Q = (qi - q) / D; plot(t, q) hold on plot(t, Q, 'r')
You also need s=zeros(nâ1,1)... But yeah, x is size 99 and s larger
**Come on!!!** The error message should help you out here. Thought process should be as follows: run the code. You get: Matrix dimensions must agree. Error in bla (line 8) plot(x,s-log(x),'*') Line 8 is plot(x,s-log(x),'*') Now, the error says something about the dimensions. Let's think on this! * What are the dimensions of `x` * what are the dimensions of `s` * Is it is `plot` error or an `s-log(x)` error. Test it &gt;&gt; y = s-log(x); Error using - Matrix dimensions must agree. Do a bit of debugging... &gt;&gt; disp(size(s)) 1 100 &gt;&gt; disp(size(x)) 1 99 Go from there! (btw, you define `x = 2:n; `. Does that make sense now?)
Did you design this? Mind sharing some details on iterfacing the STar Wars toy, MATLAB, Arduino, and Mindstorms?
Matlab has a computer vision toolbox but it might not be included in your license. I would recommend looking at http://opencv.org/ which can be used with Python or C++.
TL;DR I knew that I could make arduino read the brain toy and MATLAB read the arduino. Since my robot is ran on MATLAB I figured that I could make brain toy a controller and it worked! I didn't design this per say but I pieced it all together. Basically what you can do is open up the toy and solder wires to the tx and ground pins on the EEG chip and connect those wires to the rx and ground of the arduino. There is a brain library on github that allows the arduino to read the values from the neurosky chip in the toy. Then all you have to do is have matlab read the serial values from the arduino. The values will be in ASCII characters and translate to a char array in matlab i.e. (0, 50, 50). The first value will be the connection (0 is good 200 is bad), the 2nd is your concentration(0= none 100 = max), and the 3rd is your meditation (0=none 100= max). You can use str2num to convert the char array into a matrix where you can pull values for logical statements i.e. if brainmatrix(2) &gt;=50 do this.... As long as you have the mindstorms tool box in matlab the robot will respond to matlab commands. Unfortunately the eeg reader is a cheaper model so it can only distinguish between states of concentration and meditation. If i wanted to do more commands (turn, ect..) I would need to get a better reader which could pick up more brain states. 
Dude. Use the simulink autocoding library to target the arduino. Run a simulink model (or another arduino) for the TX side to have a (semi-) standalone process. Very cool though!
Maybe it is a FIR filter? Do you mean convolution?
Lol I figured it out. Thanks guys 
You must be in the same class as /u/Triton95. He had the exact same problem yesterday. You shouldn't be using symbolic math for this problem. Instead you should define P as a function handle and use the function [integral](https://www.mathworks.com/help/matlab/ref/integral.html). Get rid of `syms v` and change your last two lines to the following: P = @(v) (R*T)./(v-b) - a./(T^(1/2)*v.*(v+b)); integral(P, 0.025, 4.0)
awesome so clutch, Thanks! And I'm definitely going to find /u/Triton95 irl tomorrow lol
It will be very hard for us to help you without seeing your code. I recommend sharing it with pastebin, and adding it into your question.
Lol just in case you didnt know it isn't due til next Tuesday! 
Try preallocating your [cell](https://www.mathworks.com/help/matlab/ref/cell.html).
Will do, thanks!
A `.m` file is code. Are you sure it is not a `.mat` file ? Without more information or ideally a copy of the file it will be hard for anybody to help you.
Look into event functions in the documentation. The solver looks for time steps when the event function equals 0 and can simply mark the time and keep going or terminate the simulation.
It is a .m file, not any sort of a data file, hence the confusion. I'll post it once I get to work though I don't know what it'll really add.
When I run it, nothing pops up anywhere. I'm reasonably certain it's just a data file that's .m for some reason. Here's the first little bit. I'm trying to extract variables found within the smiData items. &gt;% Simscape(TM) Multibody(TM) version: 4.8 &gt;% This is a model data file derived from a Simscape Multibody Import XML file using the smimport function. % The data in this file sets the block parameter values in an imported Simscape Multibody model. % For more information on this file, see the smimport function help page in the Simscape Multibody documentation. % You can modify numerical values, but avoid any other changes to this file. % Do not add code to this file. Do not edit the physical units shown in comments. &gt;%%%VariableName:smiData &gt;%============= RigidTransform =============% &gt; %Initialize the RigidTransform structure array by filling in null values. smiData.RigidTransform(138).translation = [0.0 0.0 0.0]; smiData.RigidTransform(138).angle = 0.0; smiData.RigidTransform(138).axis = [0.0 0.0 0.0]; smiData.RigidTransform(138).ID = ''; &gt; %Translation Method - Cartesian %Rotation Method - Arbitrary Axis smiData.RigidTransform(1).translation = [0 0 -15.499999999999996]; % mm smiData.RigidTransform(1).angle = 0; % rad smiData.RigidTransform(1).axis = [0 0 0]; smiData.RigidTransform(1).ID = 'UCS[Vert Sept 15*:*S1:SMLINK_ALL1]'; &gt; %Translation Method - Cartesian %Rotation Method - Arbitrary Axis smiData.RigidTransform(2).translation = [0 -27 -14.999999999999998]; % mm smiData.RigidTransform(2).angle = 0; % rad smiData.RigidTransform(2).axis = [0 0 0]; smiData.RigidTransform(2).ID = 'UCS[Vert Sept 15*:*S1:SMLINK_ALL2]';
If you have finite data, just do cumtrapz on the entire thing! You can then truncate the array after your meet some criteria. You can't do an infinite integration on finite data though. Unless you have something that keeps on generating data until you ask it to stop. Then, I would code a simple while loop and just use a simple sum to estimate the integral. Then, once you hit the trap, keep going for a bit and then use something like `trapz` or, better yet use [`simps`](https://www.mathworks.com/matlabcentral/fileexchange/25754-simpson-s-rule-for-numerical-integration/content/simps.m) for even higher order integration. **Addendum**: Just to be clear again, you will have to decide what is "close-enough" to zero with some kind of tolerance. For example, as long as you have a running sum of some kind, you look to see if the change is below some percentage as you add more terms. Also, you should put some though into how you want to size your arrays for speed. You can just append every time but that is slow. At the same time, you can preallocate but you may ask for too much. Personally, I would risk asking for too much, but alternatively, you can preallocate a bit and then when it gets something like 90% full, add more to it
It's not a data file. It's a plain old `.m` script. It creates a struct called `smlData` which it fills with data. 
How do I get the information out of smiData?
Hough lines detects lines... You have curves for a board. First you should change the parameter under houghpeaks to 4 line (from 5). You can also decrease the tolerance and increase the fill gap to try and get 4 full lines and manage your curved lines better. Really what you should do is calculated the 4 intersection points from the returned lines and segment your image into 9 sections based on these points.
The results of the FFT should not change, but the clarity of your result will depend upon the sampling rate. You would need to input the parameter of your original signal into the setup shown in the link I shared. If **fmax** is your desired max for the frequency plot, this is determined by the number of sample used to generate your time signal. If your sample interval is 0.1s than you can only hope to capture up to 50Hz accurately. There is some control over this when you use **fft(S,n)** where **n** can be a value larger than the original sample count. This is most often the next highest power of 2 after the native sample count. 
Nothing?
I think that's closer than what I've got so far. Would that not intefere with the values of my x and xdot matrices though? I need to change the values in both of those because the point is really that the x values should be changing and eventually converge onto a point. But I think having a matrix the size of the time step might ultimately result in messing up the matrix product.
When I was making that, I was just sort of throwing out ideas because I was lost. My loop skills are awful, so it's not like I had any solid direction in what I was doing. I had to run out for a bit, but I'll get back to my computer soon to try to fix the flaws you pointed out. My problem is that I don't know how to make it so that just the paired values in the original data are calculated. I emailed my professor, but the only hint I got was to use nested for loops.
You need to read up on array indexing. Specifically, how do you assign values to different rows and columns in an array. I(i, j) = k % Assigns the value of k to row i and column j of the array I. After you've played with that, step through your for loops line by line and try to write it what you think it is doing. You can always skip the semi colon at the end of a variable assignment to watch what the script is actually doing.
Thanks for the tip!
"just throwing out ideas" is a terrible way to operate. Code is not some kind of mystical incantation, where you simply find the correct sequence of random characters which convinces the homework spirits to grant you the answer. Code is a very clear and precise sequence of instructions for the computer. Before you start writing instructions, *think about what it is you want to happen*. If you don't know how to write instructions for the steps you'd like to be done, *read the documentation*. If you were to give me instructions for purchasing an apple, you might think about it and say: 1. exit the house 2. close the door 3. walk to the car 4. enter car 5. execute subroutine driveTo(grocery store) 6. exit car 7. enter store 8. get(apple) 9. go to register 10. execute subroutine purchase(Apple) 11. end. You would **NOT** say: 1. grocery Apple 2. Apple 3. sqrt(-1) 4. driveTo(door) 5. Apple 6. end. 7. j 8. enter subdoor routine yes Why wouldn't you say that? Because you'd *think* about how to accomplish the task, then you'd put it into words. Do the same with code. You must know how to do the task, and how to form the words. There is no substitute for either. 
Oh damn, you're right. I can't believe I was doing sum. Total brainfart there. Should be mean. Also i will change it to be a 2d matrix. Thanks. Also thanks for the formatting help! 
Do you mean a matrix that is actually different at each instant of real time? No programming language is able to do that, nor will any ever offer such a thing. Maybe you mean you want to *model* evolution over time of some value? You can use a loop for that. Read the documentation on for loops and matrix indexing. 
In your answer to 7 (a) you are using ode45 to solve over a range of x using three different initial values. I think you have confused tspan (which should be a vector containing the values of the depended variables where you want to calculate the solution - in your case x) and y0. 
drawnow
Put a discrete pause in your loop. Matlab will refresh the figure. for (i=lowerTemp:tempIncrement:upperTemp &amp; lowerTemp &lt; upperTemp) ... pause(0.01); end Actually, as I look more carefully at your code, I don't see the specific function call to plot. I presume that is happening outside your function. If so, the pause / drawnow go with the plot call. Hope that answers your question.
&gt; pause(0.01) It still won't recognize that these are supposed to be all plotted together as y values rather than individual lines.
Yeah, you guys are right. The plot must be happening outside the function and acting on only the final value. Perhaps the 'heatcap_Mb' variable should be a vector that is updated to store the newly calculated value each time through the loop. Looks more as though the solution should be something more along the lines of this. tempVec = lowerTemp:tempIncrement:upperTemp; heatcap_Mb = zeros(size(tempVec)); for i = 1:length(tempVec) thisTempVal = tempVec(i); if lowerTemp &gt;= upperTemp break; end &lt;calculations&gt; heatcap_Mb(i) = .... end Also, the function's output variable needs to replaced with ***heatcap_Mb*** if that is the desired value to plot.
https://imgur.com/a/2FiMa This is all of it in its entirety. Its acting on each heat capacity, but its taking them as different values so each value is a new plot. https://imgur.com/a/951sL I'm new to matlab if you couldn't tell haha and this code shouldn't be too complicated
First, you have a niggling problem in your code- you're changing the input, lowerTemp which I wouldn't recommend doing in this case. Just use something like: tempUsed = lowerTemp + (ii .* tempIncrement); &amp;nbsp; Second, I'm a bit confused as to what you're trying to accomplish in this code. Do you want to make a smooth plot from lowerTemp to upperTemp in tempIncrement increments of a specific heat capacity? If so, then my suggestion would be to just set up a vector for Temp and basically use the last line in your for loop. Do you want the plot to update at each point? Then I would do something like the following: figure; hold on; for ii = lowerTemp:tempInc:upperTemp heatCapacity = A + B.*(TempUsed) + C.*(TempUsed.^2); TempUsed = TempUsed + (ii.*(tempIncrement)); plot(TempUsed, heatCapacity, 'rx'); drawnow; end 
Thanks for the help, I feel like I'm getting somewhere now haha. It's still for some reason not giving me like a smooth curve with each output of the for loop as a y value but rather each one as a whole new plot. https://imgur.com/a/951sL
It sounds like you already got the help you came for. But in the future, please indent your code with four spaces so that you get the following: hold on for (i=tempUsed:tempIncrement:upperTemp &amp; tempUsed &lt; upperTemp) %The formula for heat capacity vectorheatcap_MB = heatCapA + heatCapB.*tempUsed + heatCapC.*(tempUsed.^2)+heatCapD.*(tempUsed.^3) %tempUsed will create the value for the current temperature being used tempUsed = tempUsed + tempIncrement; end hold off fplot(vectorheatcap_MB) xlabel('Temperature (Celsius)') ylabel('Heat Capacity (kJ/mol*K)') end
Do you know how to code a for loop in matlab? I think once you figure that out, it should be relatively straightforward to code the nested loop. Try it / google around, and if your attempt doesn't work come back here.
Geogebra has a slider feature. (The slider controls the value of a parameter, which can be a part of a formula.) Example: https://ggbm.at/vx9DfTpg In MATLAB, you can do a loop that would increase t by small amounts and redraw the graph each time (and then wait, say, a hundredth of a second), which would result in an animation. Example: for t=1:.1:10; fplot(@(x)x*x+t,[-2,2]); axis([-2 2 0 15]); pause(.01); end;
The built in matlab help and documentation are always a good start... Especially if you know the function you're interested in. Type 'doc nargin' and ' doc switch' in the command line. There should be some examples of use in there.
I've looked at the MathWorks entries, thanks for pointing me to them. So if nargin == 0, it should show an error because there's not enough information. But if nargin == 2, how would it know if the temperature I give to convert is in F or C? This function is supposed to convert F into C and vice versa, so how would the function know which way it is converting?
To check/compare two strings you may look into the strcmp() function...
In addition to what fwhx said, you *can* create a gui with a slider that will re-plot something every time the slider moves, but it's not a turnkey process. 
 doc linkaxes
&gt; doc linkaxes Solved! Thank you so much this is way better than the hacky solution I came up with.
 A=[10 20 30 40 50; 60 70 80 90 100; 110 120 130 140 150; 160 170 180 190 200; 210 220 230 240 250]; n = 3; padder = ((n+1)/2) - 1; M = padarray(A,[padder padder]); k = ones(n); r = size(M,1); % num of rows c = size(M,2); % num of col for x = 1:r for y = 1:c if (x&lt;floor(n/2) || x&gt;(r-floor(n/2)) || y&lt;floor(n/2) || y&gt;(c-floor(n/2))) continue % this skips the boundary points end Area_in_M_covered_by_kernal = M(x- floor(n/2):x+floor(n/2),y-floor(n/2):y+floor(n/2)); %do something with Area_in_M_covered_by_kernal end end if i run that i get: Subscript indices must either be real positive integers or logicals. Error in test100 (line 14) Area_in_M_covered_by_kernal = M(x- floor(n/2):x+floor(n/2),y-floor(n/2):y+floor(n/2)); 
It's likely the conditionals were poorly formulated and you're still passing indices through that you don't want. This is an overly complicated method if you just want to exclude the outer boundaries of your matrix
Ahh, I see. I had to do something like this a while back. I think I detected with standard deviation in the window. Are you worried about taking a long time to filter your whole image? Or are you worried about lowering the resolution of the whole thing when you only care about a few noisy pixels? If it's the latter: you could median filter, then subtract the median filtered version from original to get noise. Then logical index to pick out pixels that you want to replace in the original image with the median filtered one based on large noise.
This is completely trivial to do with a median filter an a small amount of extra code. It's so simple that I'm finding it hard to give a hint without doing the work for you. If you can median filter to remove the noise, how might you use that to determine which pixels are affected by it? 
+fwhx thanks a lot, that really helped me, I would like to plot on the same plot another function which is the opposite of this one and the same time variable. I just inserted something like this : for k = 1:15 for t=1:.1:10; hold; fplot(@(x)x*x+t,[-2,2]); fplot(@(x)x*x+t,[-2,2]); axis([-2 2 0 15]); pause(.01); end; M(k) = getframe; end figure u = uicontrol('Style','slider','Position',[10 50 20 340],... 'Min',1,'Max',16,'Value',1); movie(M,15) But I want to capture the animation , so I added an outside loop and the getframe command , also a slider , but the window of the animation is not working , and the first one for the plotting I have the first plot blinking , how can I fix this ? 
You could use a cell array to carry the names, or dynamic structure field naming, or just a structure with a "name" field. 
Why not apply median filter and then subtract filtered image from the original. The difference is the noise, no? Edit -- assuming by 'detecting noise' you mean finding places where noise happens.
 files = dir('*.csv'); for iFile = 1:length(files) doStuff
This looks very helpful! Thanks, I'm going to sit down and try it out tomorrow.
0&lt;t&lt;2t? 
Heres something to get you started. A=## B=## t=[0:.01:2*pi]; x=A*cost(t); y=B*sin(t); plot(x,y) 
And here's how to use a slider to scroll through your movie (assuming M already contains a bunch of movie frames): uicontrol('Style', 'slider','Position',[10 50 20 340],'Min',1,'Max',100,'Value',1, 'Callback', @(hObj, evt) image(M(int8(get(hObj, 'Value'))).cdata) ); 
Wow, thanks a million! And how to interpret this: pos(last(i-1)+1:last(i)) where i is just a counter (it is in a loop) Becuase now 'pow' is a function which accepts arguments.. how? I have tried to find a source for more information, but again without success.. hopefully my question doesn't bother you.
Well... it looks like you're just multiplying the indices with S. I presume you want to multiply the appropriate 3x3 square in A by S. .... and where are you going to store this? window would only be 3x3 and updated every loop (i.e. not saved). If you wanted your whole A*S saved you should initialize an array (I would do NaNs) the same size as A and access it with the same indices. Other notes: ix and iy are only a single value, I assume you want the whole 3x3 area? To get that from A, access A (and your window if youre saving each 3x3) as A(ix-1:ix+1,iy-1:iy+1). Final note: using 2:nR-1 gets rid of the need to make a padded array. As you have it now, it looks like you'll access padded(ix-1:ix+1,iy-1:iy+1) or pad (1:3,1:3) Which would give you the top-left corner as 0 0 0 0 # # 0 # # Whereas if you accessed A as such you'd get numbers for all 9 spots. Important question (I guess): do you want your edges to include calculations with these 0s? ...or were you trying to start with index (2,2) where all 9 are #s from your original A matrix. I'm trying to help your code AMD get you to think a bit harder/deeper about how you're structuring it/what you ultimately want calculated (and with what). Sorry so long winded
Yeah so basically im trying to multiply the the 3x3 square in A by S and save the values. I have to pad my array with 0s based on the value of B. So since B is 3 im starting at (2,2) of the matrix M. I should start at (2,2) which corresponds to (1,1) aka 10 in Matrix A. If B was 5 id start at (3,3) since theres two layers of padding.
Well if you start like that your calculations at the edges aren't going to have as many entries as the interior (unless that's your intent). See my above example- starting at 2,2 (or 1,1 in A) only uses 4 values, and along a side you have 6 values, whereas an interior point would use all 9. Also a point to consider, if you're trying to make this robust such that you can use B=5 you'll have to abandon the hard-coded for lines and code them appropriately to get your indices. As to your calculation, you pull out a 3x3 region to do some calculation, and when you're done, is that one value representative of the central point or is it for 3x3? If the 2nd, how does that mesh when you e to the next point, which would then overwrite parts of your last calculation? At any rate,, if it's 1 value you can use the same indices from your for loop. If you put 3x3 back in, use the same indexing you do to get the values from A (or your padded matrix).
Look in the side bar :-) 
The colon notation gives a range of elements in a vector or matrix. In this case from i-1+1 to last(i) https://se.mathworks.com/help/matlab/ref/colon.html
think i got it, thanks.
Yeah i have to do the calculations with 0s. So i multiply them and avarage it and extract one answer representative of central point. I then move to 2,3 and do the same. Thus using the 5 by 5 as an example I would have a 5 by 5 array with the answers from the central points.
You have an extra end. Worked just fine for me. %% Define Program Variables A=[0,10,3,6,5,8]; l=length(A); n=(l-1); %% Loop To Swap The Elements When Sorting for s=1:n; for j=1:n; if A(j)&gt;A(j+1); B=A(j); C=A(j+1); A(j+1)=B; A(j)=C; %disp(A) end; end; disp(A) end
I wish I was smart enough to do your homework for you. 
I'm an intro student... The guys at the tutoring center couldn't even help me on this because they had no clue what to do. There's no help on youtube either.. I'm screwed
Try. Give us something. We can't understand it for you, but we can help. Code something up and post it. 
Youtube? Really? Get off the internet and [sit down and study](http://youtu.be/wxj8jJMZSCY) !
So take a look at how you index M. How many things are you getting? ... and how can you alter that to change what you want? Not just hard coded, but can you make it robust as well (such that I could handle a 5 filter, or a 7 one). Remember, it was set up initially to just handle a 3 filter...
You can use the SimMechanics Toolbox in Simulink without much background knowledge. For example: https://www.youtube.com/watch?v=aXn-Ptrdn24
And the reshape function can be used to reshape the string 'One if by land' into a 2x7 matrix. Come on, think!
On line 37 you define the function 'f' of variable 'x' but have no 'x' in the definition, only the constant vector y which is the solution of the ODE. For the fzero approach you are trying, you need to turn the constant vector into a function- have a look in the documentation at 'interp'.
i dont exactly understand how im suppsed to do that. is 0.4*polyval(p,?) - ode correct?
What do you mean by 'second function inside'? The hold command just controls whether a picture is erased before a new one is drawn. You can have two different curves on the same plot at the same time, but you'll want to redraw both of them each time the parameter is incremented. If I understand correctly what you're trying to achieve, then, yes, use "hold on;" between drawing the two curves, and then do "hold off;" so that both of them can be erased when the parameter value is changed.
Whoa, easy there. I meant to show you that char arrays were really just numeric arrays underneath. You're making the problem way too difficult. msg = 'One if by land' m=[110,2221;213 4769]; encodedMsg = m*reshape(msg,2,[]) decodedMsg = char(reshape(inv(m)*encodedMsg,1,[])) For the most part you can treat character arrays just like numeric arrays. 
In my experience the GUIDE thing is usually more trouble than it's worth. I'd recommend just working out where you want things to be and setting the position properties manually. 
I think you're going to need to open matlab from the bash environment. In unix you just call path/MATLAB.app/bin/matlab but I'm not sure how it will work in windows, you also might just call something like 'open path/to/matlab'. From there in unix, you can utilize all bash functionality from matlab with something like eval('!some command') or system('some command'). The getenv command is unique in that it will actually pass environment variables from the system to the matlab workspace. Without using the getenv command, you need to call str = evalc('!some command') which will capture the command prompt output as a string, which can be parsed for the information you want to bring into matlab. This method has its limitations obviously. To my knowledge, passing information from matlab to bash must be accomplished by converting commands to strings and calling them with system or eval.
The next point,x=340, is 60 points away from x=280.
Could be a memory issue
Possibly, but the computer has 32gb of ram, which didn't look full on the resource monitor. Also, there were no ram/java heap memory warning on the output. It's strange, I can set the loop to continue where it left off: loop = 276447232:99999999999999 and it continues to run. Of course I also have to comment out the RunningCounter initialisation line so that it continues where it left off.
 %The puzzle starts at number 11, not 1, so current number is always 10 more than loop index. thisNumber = loop+10 you could just start at 11 :-), i know that is not your question
Something else you could do for a little performance increase is use linear indexing as a way to not have to run the find function unless there's a match. Using "any(CurrentMatchesForloop)" or "numel(CurrentMatchesForloop)&gt;0" each should be a tiny bit better than checking the size. CurrentMatchesForLoop = RunningCounter==loop; %If we did find a match, display where we got that match (which number and the index of the loop) if(any(CurrentMatchesForLoop)) CurrentMatchesForLoop = find(RunningCounter==loop); for displayLoop = 1:size(CurrentMatchesForLoop,2) fprintf('\nFound a match for digit %d at loop number %d! \n',CurrentMatchesForLoop(displayLoop),loop); end end
You can create a [function](https://www.mathworks.com/help/matlab/matlab_prog/create-functions-in-files.html) and run it on two different data sets. Without any more context, it would be hard to help beyond that.
Two issues when I try to run your code. First, the variable *e* is empty before you try to evaluate line 33. Second, line 1 in statevec.m doesn't have the correct syntax. It should be function dydf = statevec( f, y ); % dydf = dydf_rhs( f, y ); 
 close all clear all clc t = [0,10,20,30,40,50,60,70,80,90,100,110,120,130,140]; C1 = [10.15,6.80,3.60,2.17,1.25,0.75,0.45,0.28,0.18,0.11,0.08,0.05,0.04,0.03,0.03]; C2 = [10.15,7.95,6.84,6.02,5.49,5.00,4.60,4.22,3.99,3.68,3.43,3.21,3.00,2.81,2.64]; C3 = [10.12,8.46,7.38,6.68,6.06,5.55,5.12,4.75,4.42,4.17,3.90,3.68,3.45,3.24,3.07]; C4 = [10.10,5.60,3.20,1.84,1.02,0.60,0.35,0.17,0.09,0.04,0.02,0.01,0.00,0.00,0.00]; plot(t,C1,'x'); ylabel('TIME'); xlabel('VOLTAGE'); figure semilogx(C1,t,'.'); % p= polyfit(C1,t,1); % is there a log fit....Function??? % p % hold on %plot (C1,p(1)*(C1 + p(2)),'-'); Ignore
You could use your knowledge of logarithms to simplify your problem. Pfit = polyfit(log(t+eps),log(C1),1); I hope that's enough to get you going in the right direction. I guess there are some curve fitting toolboxes and stuff you could use. 
Semilogx is only a plotting function. It does not solve a fit for you. Given the data, the semilogx graph should result in some linear relationship, indicating your data has some exponential relationship. So for example, if we know there is some exponential relationship and is natural base: In other words, C1 = A e^kt, assuming it has no horizontal or vertical shift. You can expand the formulation to have the shifts, which makes the problem more difficult, so I am keeping my explanation brief. So what we can do is take the logarithm of both sides and turn it into a linear equation: log(C1) = log(A e^kt ) log(C1) = log(e^kt ) + log(A) log(C1) = kt + log(A) This is basically the linear form y = mx + c. So now we use polyfit to solve it as a linear equation, where "x" is t and "y" is actually log(C1). The coefficients you get out are of polyfit are: "m" = k and "c" = log(A) Rearrange and you will have your coefficients for C1 = A e^kt. Hope that explains your problem =]
Hmmm ok. But what if we don't want to use interpolation? Is it possible to cut the data up, so that the time interval matches? If so, how i do go about doing it? :\
Are there any other alternatives? For example, cut the data from so that the time interval matches, and we compare the correlation for only the data in which the interval matches?
As a few checks, I would use Matlab's built-in vandermode matrix function and compare that to yours (tip, check how they define it. You may have to flip one). Assuming that is correct, then check your solution math. Already something seems fishy to me (though I may be wrong). If `V` is the Vandermonde matrix, `c` are the coefs and `f` are the functions, this should solve: Vc = f so therefore, c = V\f; Now, here is where Matlab is both awesome and awful at the same time. That should give you a solution, but you have to read the documentation and hope it is telling you what you're getting. If `V` is square and the system is well-posed, it will solve it (ie `inv(V)*f`). If the system is under-determined, it will find a least-squares minimum (`inv(V'*V)*V'*f`) though, here again, Matlab will do it a more numerical stable way (good, I guess but opaque). If it is over-determined, it will actually do something akin to, but not the same as, compressive sensing and try to give you a sparse solution. You could try to solve the normal equations yourself (see [Wikipedia](https://en.wikipedia.org/wiki/Linear_least_squares_(mathematics\)#The_general_problem)) but again, you have to be careful about numerical stability. Monomial bases are notoriously poorly conditioned, especially for higher-order terms. Tip: if you really want to get fancy, look at Polynomial Chaos Expansions. They solve it on an orthogonal basis which also gives you a lot more nice properties but there are also more restrictions and assumptions. And, just as Matlab is smart about `\`, it is also smart about polyfit. How is it smart? Well again, the opacity of Matlab is a bit frustrating. You can [read the docs\(https://www.mathworks.com/help/matlab/ref/polyfit.html) and hope it is there (seems to use the vandermond method) and/or maybe look at the source code. Also, if (and **only if**) you are solving the global polynomial interpolant (ie, exact at all known points, and `V` is square), can you use Lagrange polynomials. Nice since you do not have to solve the system, but also restrictive
As I also answered OP above, (but without doing the work for him/her) this only works if they time vectors are aligned. Also, please do not do people's homework for them!
Column1|Column2|Column3 :--|:--|:-- 1990|6|21.2 1990|7|22.5 So Data set A is in this format above, corresponding to year, month, temp data which goes on till the end date Column1|Column2|Column3 :--|:--|:-- 1985|4|21.2 1985|5|22.5 So Data set B is in this format above, corresponding to year, month, temp data which goes on till the end date so sorry, I'm rather slow at this. How does intersect work in this scenario?
I don't think that a couple lines of code constitutes doing their homework. I don't have any reason to think that this is a homework problem. Maybe it is. It seemed to me that OP knew what the preferred solution looked like, some kind of intersection of the data, but lacked the Matlab fluency to put it into effect. These two lines of code are no different than what would be found in the documentation. 
Alright! Thank you so much!
+ Thanks! I was thinking of converting to a orthogonal basis but seemed a bit hardcore and extreme option to me. I used lagrange polynomial just to check whether my least square polynomial is performing as it is supposed to. Cause if you are interpolating on n points with a polynomial of (n-1) order, it should give the same interpolation as the lagrangian method would. Right now I am reading into the Matlab documentation. Hope I find something. It is indeed very frustrating how sometimes Matlab can be both handy and opaque at the same time. 
You should attempt to center and scale your data before doing your linear regression- it seems to fix the problem. Even when you run `polyfit` on this data, it recommends it. In case you don't know, centering and scaling means to take your x values, subtract away the mean from all of them, and divide by the standard deviation (of course you have to do this to your input x's for evaluation as well). 
I read the rules and had already followed them but worded it poorly, the original problem actually asked us to find the parameterized equatinos which I already did. I suppose I could just limit my question to how to graph it because that is my main problem. Thank you for your consideration I have edited it.
**EDIT**: Nevermind, I've solved it. Thanks. Hi, many thanks for your response. I made the changes you suggested, as well as debugging my event function file, and the code now integrates. However, in the output, since y(8) is so large in comparison to y(1) through y(7), y(1-&gt;7) are all reporting as 0. Do you know of a way to force a scaling to, say 1^-4, on the values obtained in y(1-&gt;7)? I have attached my new code below: Main file: http://pastebin.com/u9xc6Xnm Events function: http://pastebin.com/8P9x2zRW Function file: http://pastebin.com/sD1zxZCH
I copied and pasted your code and it worked fine for me. Maybe try resetting your work environment with clear all? The message you received is: One if by land
Clim of the colorbar right? Yes I have. :(
I have my own Nx3 matrix for colormap. 
did you look at the matlab documentation for the command *min*?
I'm not sure I understand, it looks like you want a different colormap...
Pilot and Matlab user here :) Unfortunately I don't think you really can get around using regex. Given that the number of modifiers is finite (TS, -RA. Etc) you could theoretically brute force it but that would get ugly really fast. I would suggest taking an hour or two to try and learn some regex. It can be intimidating at first but once it clicks it is actually pretty straightforward. Learning regex has been an invaluable skill for me. I have written more text parsers than I care to think about (aerospace codes such as NPSS or other NASA codes love to output things in human but not machine readable ways) and regex is the underpinning of all of them. Regex can even help you with daily coding by improving search/replace. My 2 cents
Have you looked into using the MATLAB Import Data tool? It allows you to separate variables in each line using any delimiters and automatically import them. This is of course assuming that the METAR data file has one sample per line. 
Wouldn't you just include your counter above along with whatever script you put in your while loop? You seem to have answered your own question here...
Above your while loop, set some variable (pants) equal to zero. Then, inside your loop, write a statement that pants = pants + 1; The value of pants at the end of your script will tell you how many times 'while' ran, as it will be iterated by one on each execution of the loop
Looks like that code should work, although it's weird to use sqrt(-1) as a loop index. i = j = sqrt(-1), so it's better to use something else, like n, m, or k. I suspect you have a typo or something in your actual code. Try putting in some extra code for debugging, such as disp(myfilename) Directly before the call to readtable(). This will let you be absolutely certain that the file name is correct. 
What about reducing the number of Colors in the color map? Like NewCmap = mycolormap(1:10:end,:);
It may be because I just started today trying out MatLab, but when it's just when I write, and make a mistake, [this shows up](https://gyazo.com/8388f086859d0fe822d2ab73035575cf) I was just wondering if there was a nice way to remove it, since I find it annoying to have when working :) Thanks for the reply btw.
Just so you understand, this is exactly the same as the loop counter k in the example in your OP.
You probably already understand this, but just in case: you don't have to re-insert everything. The contents of the variables you've entered into the command line are all still there. I'm assuming you understand that, and what you actually want is the contents still visible in the console. I imagine you will have less desire for this over time, but in the mean time, here are a few things you can do: * `display compact` to get rid of extraneous whitespace * `A=whatever; V=whatever; A*V` to display multiple steps in one command, then use the up arrow to revisit these * once you have a good, related group of commands that you want to reuse several times, combine them into a function
Have you considered using uints as a bit mask and using the bitget and bitset functions? For example x = bitget(uint8(126),1:8); % returns [0 1 1 1 1 1 1 0] x = bitset(x,1); % returns [1 1 1 1 1 1 1 0] If you wanted all 256 possibilities in uint8 you make an array x = uint8(0:255); % get the third bit from the 30th row b = bitget(x(30),3); Maybe not exactly what you're looking for, but maybe gets the juices flowing. 
I would add one thing to that, since dec2bin returns char array, and it seemed like OP wanted ones and zeroes N =3; dec2bin(0:2^N-1)-'0' % returns 0 0 0 0 0 1 0 1 0 0 1 1 1 0 0 1 0 1 1 1 0 1 1 1
I work for a huge mega-corp and they are very stingy with licenses. 
I copy the commands into a script as I go. It's simple, and works for me.
Also don't be discouraged by this sub... People always downvote noob questions unnecessarily. I guess they forgot how they felt when they started to learn programming.
The example solved the problem you asked about tho. That's what he is saying. 
Just about everything in Matlab defaults to double. Unless you're actually constrained for memory it's easiest to just go with that.
For some numerical methods a uint64 will be more precise than a double. If I recall you can't do better than 2^-52 with a double, but with a uint64 you get all 64 bits. 
Something a little like this: n_runs = 10; % I made up this variable, put in your own here int_val = 1; % this is your initial value val_vec = zeros(1,n_runs); % this is going to store your values for ii = 2:n_runs val_vec(ii) = your_func(val_vec(ii-1)); % this does what you asked end
&gt; val_vec(ii) = your_func(val_vec(ii-1)); % this does what you asked &gt; sick - this is what I was looking for and it worked. thank you!
Make `area` an array. Replace `area = 0` with `area = zeros(1,31)` then put each value into `area(index)` (Note: you'll have to catch the `index = 1` case, but you can say `area(index) = area(index - 1) + disk`)
I changed i to k and I am put in the extra code for debugging. I am absolutely certain the file name is changing correctly. Still does not solve the problem though. This is driving me nuts lmao.
Hi there, Is there a reason you need to use MATLAB? You can easily find this using (FIJI) ImageJ and analyze particles with near 100% circularity. The script writing will be much more concise with FIJI since it has an auto writing function for macros. 
Turns out that the code is actually working. I was looking at the wrong row in my data file and expecting the values from measurement1 to measurement 10 to change. They were actually static =.=. Thanks dude, I would not have noticed my mistake without your help :D
Is there a good reason to use globals here? 
It looks like you have a good solution from /u/limanyin, but it never hurts to have more than one suggestion. You could check out imfindcircles, which is a circular Hough transform. It would allow you to do minimal preprocessing on the image, as it takes a true color image and has many options for subsampling all of the circles it finds.
Dynare also has a [forum](http://www.dynare.org/phpBB3/) where you can ask questions.
Thanks so much! I'll look into this too!
Haha no there's not particular reason other than I know MATLAB a lot better than ImageJ. I actually tried ImageJ first, but I don't know how to even ask for user input or fit circles or any of that. Though would not be totally opposed to a website/literature if you know of some! I'm always happy to learn more about ImageJ!
Consider using the Matlab build in documentation scheme. You just need to comment your code according to the mark up scheme and then press publish. Matlab will generate HTML static pages in which you can put explanation, examples, images, even latex equations. If you are writing some sort of code toolkit for a specific research this is the way to go, this allow people used to matlab to find information of the usage using the help and doc commands just like with matlabs functions. And allows you to keep the coding process connected to the documentation process. https://www.mathworks.com/help/matlab/matlab_prog/publishing-matlab-code.html https://www.mathworks.com/help/matlab/matlab_prog/marking-up-matlab-comments-for-publishing.html
It's better if it is in the main write-up, that way everyone sees it. 
Do you have any matlab experience? Your code is very bad. It seems you have never used it besides a google search. Look up if statements again. Also, summarize the problem statement. We don't want to read all of that for you. 
When I tried to assign the variables in the main script as globals they did not show up in the workspace in debugging mode when the code entered into my first function. So I am unsure what the value of using global variables is. But it might be useful, maybe someone can provide more insight into creating global variables and using them inside of functions.
I learned it by doing it. It was briefly covered in a class a long time ago but I didn't know any of it. I just set out to actually use it in a few places. Slowly, I read more and more, picked up newer and better tricks, and went from there.
I suggest you look up the `mod` and `rem` functions, in addition to the logical `and` and `or`. Instead of solving your homework completely, I'll give you something that will impress your TA, but you can't use since you haven't really learned it yet :P isleapyear=@(x)~rem(x,400)|rem(x,100)&amp;~rem(x,4)&amp;x&gt;1582; if isleapyear(x) disp('Leap Year') else disp('Not a Leap Year') end To answer the comment below: You need `x = input('Enter Year: ')` first.
that shows an error on line two 
Yes! If it can be done without loops: Do it without loops! The new JIT engine has made loops much faster in the newer versions of MATLAB, but nevertheless.
Experiment! Learning by doing is the way to go with all programming. I've been a TA for several years, and the students that had the most progress were the ones who tried random stuff, not only to solve the tasks at hand. Start with something simple: For instance: Create a list `1 2 3 ... 10`. Make a simple loop that prints the numbers `1`, `2` . Try to do matrix operations (multiplication, summation etc.) with and without loops (check out `.*` and `.^2`). Check out different indexing schemes. And: **pay attention to error messages**! They are your friend in MATLAB!
An if statement that just verifies that none of your saved offsets are within 3 of any other saved offsets?
Look to see if it's possible to convert the string to an array, and then store the position of the searched letters in another array. Then check your new search to see if the positions of the new numbers are the same as the ones of your old :) Hopefully I make sense, a bit tired
You may actually want ceil() rather than round(). 
Thanks guys, I think I have made something that will work for this specific application
`int64()`
+ ooh good idea. I might throw together an instructional "this is what a matrix is, this is how to think about the flow of information" etc. and then have code bits as you said! Thank you! 
I can think of a good beginner loop practice project! Create a function called coinFlip(x,y,z). X will be your starting number and each time a coin flips you either +1 or -1 (heads or tails) to x. If that number is still between y and z (say, 3-12) then it flips again and again and again til it is outside of that range. Then it returns to you how many times the coin was flipped (and extra points for making it plot the 'path' it made)
Maybe something like [this?](https://github.com/avramidis/PLOS-ONE-Figure-format)
https://coursework.mathworks.com/
Try: x1 = [260:280]; y1 = zeros(size(x1)) + 20000; plot(x1,y1) Matlab plots `(x,y)` pairs. The first element of `x1` with the first of `y1` only you have just ONE element of `y1` and 21 of `x1`.
This is a great idea! 
I don't believe you are giving a good faith effort to take advice. I recommend a function to use, and instead of coming back and saying "I'm not allowed to use this function" or "I tried the function, but I got this error" you put up code that isn't really close to working. 1.) Format your code by inserting 4 spaces, it makes it much more readable 2.) If you want a numeric answer, there is no reason to use `syms` it just makes MATLAB run slower 3.) Q2 isn't being updated inside your loop. It only ever has one value. This won't work 4.) If you put Q2 inside the loop, you still will only find a solution if an integer solution exists. What would you expect the solution to be an integer? 5.) As I mentioned previously, try to use `fzero` for this. 
Hey brother, So you can do a couple things here depending on what your different tables look like. First, if your tables have similar columns, you can add on each individual tables to each other to make one big table. Say you have a Table T1, and then another table T2. You can make Table T3 by combining the two: T3 = [T1;T2] Your table might change sizes on every loop unless you preallocate the size of the table before your loop, but i'd imagine you don't care too much about minor speed changes. So another solution if you want seperate files is to change the string in your writetable command every loop. If your command looks like this: writetable(T,'mytable.csv') just use the counter "i" or whatever in your loop something like this: writetable(T,strcat('mytable_',char(i)),'.csv',) so then you'll get a new table loaded each go around. Sorry, i'm pretty heavily caffeinated, so I hope this helps you to some extent. Also, i'm new here, so i'm not sure how answer formats work, so i hope the mods are nice... 
Plus we don't even know what the colors need to be encoded as or how this is represented so even if we wanted to help OP cheat on homework, we couldn't.
apologies. I was on my way to class when i sent this so it I rushed my comment. I have to use a while loop. Ill try what you have suggested. Thanks edit: I really do appreciate that you have taken the time to help me edit 2: Ive just solved it! Your fourth point made me think of what the actual value could be, so i used trial and error and guessed to see how small it could be. By using a smaller Q1 to start as well as the addition to Q1, a solution was found. THANK YOU
If you want to make division and multiplication operate on each element of an array, you need the elementwise operators `./` and `.*` instead of plain `/` and `*`.
I think I had this same problem for awhile but I don't remember how I fixed it. I do remember that setting up mingw is pretty easy. I now do the more complicated route of actually doing my debugging and compiling in visual studio by following the instructions [here](https://www.mathworks.com/help/matlab/matlab_external/compiling-mex-files-with-the-microsoft-visual-c-ide.html).
I'll second the suggestion for export_fig, but the built-in hgexport command is also helpful for saving high quality image files from a script: http://stackoverflow.com/a/17903339
Looks like your friend is writing in a different syntax than MATLAB, C/C++? If I were to follow your guideline, here's how you will approach it. 1. The size function tells you when to stop your for loops. 2. Indexes are defined as (row,column). For loops can only count up or down by whole numbers, ie: 1,2,3,4... or 3,2,1,0,-1... It makes more sense to count up in most applications. 3. You can take advantage of these whole numbers to look up the index number. Say our matrix size is [3,5] for row = 1:3 for column = 1:5 matrix(row, column) end end When it runs through the loops, it will call out the following matrix(1,1) matrix(1,2) matrix(1,3) matrix(1,4) matrix(1,5) matrix(2,1) matrix(2,2) matrix(2,3) The nested for loop will run until 5, then it will start again on row = 2. So it's your job now to determine when a number is greater than the previously read number ie: is matrix(1,2) greater than matrix(1,1)? is matrix(2,3) greater than matrix(2,2)?
If they are linear equations, then you can use linear algebra to solve. For example, y1 and y2 are the different unknowns of your equation 2y1 + 2y2 = -15 3y1 - 16y2 = 23 You would set up your matrix by making a [2x2] matrix which would look like A = [2 2; 3 -16] and a [2x1] matrix b = [-15; 23] From linear algebra, Ax = b, where x represents your unknowns.. MATLAB has a back-divide function that will solve for x. So x = A\b instead of x = A/b. Doing so, your solutions are y1 = -5.105 and y2 = -2.3947. When you plug it back in, indeed 2* -5.105 + 2* -2.3947 = -15. If they are nonlinear, ie, like exp(x) or x^2 ... you'll have to look elsewhere lol. 
is it possible to have it solve symbolically
Sure, use 'syms' function to define your coefficients. syms a b c d e f A = [a b; c d]; b = [e; f]; Then your solutions come out in MATLAB to be y1 = -(b*f - d*e)/(a*d - b*c) y2= (a*f - c*e)/(a*d - b*c)
Is this publishing though? How do I do this for the quick and easy Publish to PDF?
Is this publishing though? How do I do this for the quick and easy Publish to PDF?
Depends. I've made some codes to make even my one-offs look great. But that's just me. I use export_fig for all matlab stuff now. I used to go crazier but I don't have the time anymore
[Here's](http://i.imgur.com/MN051bv.png) what I got. Your constants a and b will be 0.2731 and 8.244e-20. I achieved this by using fminsearch function to minimize the error function between the theoretical function and your data set. The fminsearch requires two initial guesses for each constant. I used an initial guess of 1 for your first constant and 1e-20 for your second constant. 
Homework problems like this one really annoy me because they teach students the wrong way to do Matlab. The reason Matlab is so useful compared to something like C is that it lets you avoid doing things like nested loops. For instance your problem could be done with the following two line function: function [row, col, val] = max_of_matrix(A) [val, ind] = max(A(:)); [row, col] = ind2sub(size(A), ind); end Unfortunately it looks like you have to use loops. The other comment describes them well but there are a couple of things I'll add that are specific to your problem. On step 3 ("Initialize the variable that will hold the maximum value to zero"), I would initialize it to `-inf` instead of zero. Otherwise it won't work if the matrix consists entirely of negative values. In general it's a good idea to make sure you know how your code will handle special cases. It's probably unnecessary for your homework, but you might want to think about how your solution will handle inputs with things like NaNs or complex numbers.
Apologies on the late reply; That looks great mate! It's the saturation current through a PNP Diode (Io) &amp;amp; the temperature in kelvin that was recorded at, data Taken from actual measurements. So I get rid of the lsqcurvefit &amp;amp; use the fminsearch, instead? Thank you so much again If your anywhere near New Zealand pm me &amp; I'll send you some of my beef jerky ð
&gt; p=findpeaks(x) It gives me ''Too many output arguments'' error. I'm totally confused. 
Maybe [imgradientxy](https://www.mathworks.com/help/images/ref/imgradientxy.html) is worth a look? If you're looking for more of a DIY approach, I'd have a look at the horizontal and vertical Sobel filters used in [Canny](https://en.wikipedia.org/wiki/Canny_edge_detector) or even something along the lines of [HOG](https://en.wikipedia.org/wiki/Histogram_of_oriented_gradients) or [EOH](http://robertour.com/2012/01/26/edge-orientation-histograms-in-global-and-local-features/).
While I agree with you in principle, if a question like this is hard enough for the student to need to seek out help, it means they are still learning basic coding logic. If you need to learn basic coding logic, there aren't many problems to ask someone which doesn't have a built in solution using a library somewhere. 
&gt; you are actually minimizing the sum of squared errors (SSE) which I don't entirely understand anymore but that's how it's done in curve fitting. Just so you know, you don't have to do this, but it is considered "standard" for a couple of reasons. The first, you need to make sure your errors are always positive, and squaring them is the easiest way to do so. If your error could be signed, then you could find a solution which had as much positive as negative error, and thus your error would be minimized even if each error was very large. You could take the absolute value of the error, but... The second, the SSE is what x = Inv(A)\*b solves. Since we often use that method to solve for regressions, the SSE became a standard. And finally, the power you use will slightly affect your solution. The higher the power, the more your fit will try to get away from any single, large error. The SSE is sort of the accepted standard, but if you look into curve fitting papers, they will talk about choosing the power you want to use based on your data-set. There are times in my curve fitting I will use absolute value, and other time the fourth power. It all depends on how sensitive you want your fit to be to outliers. 
**Formatted for others** &gt; I'm studying on spline algorithm for my project. When I try running the code. I got ''Index exceeds matrix dimensions'' error. Here is my code. function s = getspline(x) textFileName = ['DataFile#' num2str(129) '.txt']; dataRaw_phase= dlmread(textFileName,' ', 'D17..D217') ;%faz dataPhase = ((dataRaw_phase)*pi/180); %aÃ§Ä±dan radyana, faz deÄerinin dÃ¶nÃ¼ÅÃ¼mÃ¼ (Open to radians, the value of the phase transformation) dataS=(dataPhase); dataT=(ifft(dataS)); x=dataT; x_transpose=x'; N = length(x); p = findpeaks(x); p_transpose=p'; s= spline([0 p N+1],[0 x(p) 0],1:N); &gt; I suppose there is problem with the x(p). p is 63131 and x is 2011. How can I solve the problem? What line is the error being given at?
MATLAB Simulation Code: M = 100; %square grid size (MxM) ulid = 0; %lid velocity Re = 10^5; %Reynold number h = 1/M; %grid spacing dt = .4*h; %stable DT 1/(h*predicted max velocity) nu = 1/Re; %standard kinematic viscosity (mu/ro) w = zeros(M+1,M+1); %vorticity p = zeros(M+1,M+1); %streamfunction x = linspace(0,1,M+1); y = linspace(0,1,M+1); %x,y vector [X,Y] = meshgrid(x,y); %X,Y matrix B = -2*(2000*X'-1000).*exp(-1000*(X'.^2-X'+Y'.^2-0.2*Y'+0.26)); %External Force u = zeros(M+1,M+1); % x velocity v = zeros(M+1,M+1); % y velocity vm = zeros(M+1,M+1); % magnitude velocity wxm = zeros(M+1,M+1); wym = zeros(M+1,M+1); wxp = zeros(M+1,M+1); wyp = zeros(M+1,M+1); %3rd order upwind differentials vt = ones(M+1,M+1); %turbulent viscosity for boundary treatment vt(3:end-2,3:end-2)=0.25;vt(4:end-3,4:end-3) = 0;vt=vt*4/2000; %Initialize variables for Thomas algorithm for solving poisson system a = zeros(M-1,M-1,M-1); b = zeros(M-1,M-1,M-1); c = zeros(M-1,M-1,M-1); d = zeros(M-1,M-1); for i = 1:M-1; %Define as per discrete poisson wiki a(:,:,i) = -eye(M-1); c(:,:,i) = -eye(M-1); b(:,:,i) = -diag(ones(1,M-2),-1)+diag(4*ones(1,M-1),0)-diag(ones(1,M-2),1); end for i = 2:M-1 %Precompute the first step of thomas algorithm before hand to save computation time b(:,:,i) = b(:,:,i) - c(:,:,i-1)*a(:,:,i)/b(:,:,i-1); end % important Variables t = 0;k = 0;w(M/4:M/2,M/4:M/2) = 0.0; %initial conditions fprintf('Initialization Complete!\n'); while t &lt;= 500%for k = 1:10000 k = k + 1; %%%compute vorticity at boundaries w(1,:) = -2*p(2,:)/h^2; w(M+1,:) = -2*p(M,:)/h^2; w(:,1) = -2*p(:,2)/h^2; u(:,M+1) = -ulid*2/pi*atan(100*(x-(0.5*exp(-t)+0.5))); %lid velocity Profile w(:,M+1) = -2*p(:,M)/h^2-2*u(:,M+1)/h; %%%transport/diffuse vorticity along velocity (can be used for Passive transport) i = 2:M; j = i; u(i,j) = (p(i,j+1)-p(i,j-1))/(2*h); v(i,j) = -(p(i+1,j)-p(i-1,j))/(2*h); vm(i,j)= (u(i,j).^2+v(i,j).^2).^.5; i = 3:M-1; j = i; q = 0.5; %Compute upwind differentials wxm(i,j) = q*max(u(i,j),0)/(3*h).*(w(i-2,j)-3*w(i-1,j)+3*w(i,j)-w(i+1,j)); wym(i,j) = q*max(v(i,j),0)/(3*h).*(w(i,j-2)-3*w(i,j-1)+3*w(i,j)-w(i,j+1)); wxp(i,j) = q*min(u(i,j),0)/(3*h).*(w(i-1,j)-3*w(i,j)+3*w(i+1,j)-w(i+2,j)); wyp(i,j) = q*min(v(i,j),0)/(3*h).*(w(i,j-1)-3*w(i,j)+3*w(i,j+1)-w(i,j+2)); i = 2:M; j = i; w(i,j) = w(i,j) + dt*(... -u(i,j).*(w(i+1,j)-w(i-1,j))/(2*h)-v(i,j).*(w(i,j+1)-w(i,j-1))/(2*h)-...advective forces (wxm(i,j) + wym(i,j) + wxp(i,j) + wyp(i,j))+...upwind diffusion for stability (nu+vt(i,j))/h^2.*(w(i+1,j)+w(i,j+1)+w(i-1,j)+w(i,j-1)-4*w(i,j))+B(i,j)); %viscosity diffusive forces %%%compute streamfunction %delta^2 p = -w d = -h^2*-w(2:end-1,2:end-1); %Use Thomas algoritm for i = 2:M-1 d(i,:) = d(i,:) - d(i-1,:)*a(:,:,i)/b(:,:,i-1); end d(M-1,:) = d(M-1,:)/b(:,:,M-1); for i = (M-2):-1:1 d(i,:) = (d(i,:)' - c(:,:,i)*d(i+1,:)')'/b(:,:,i); end p(2:end-1,2:end-1) = d; %update time t = t + dt; %plot if mod(k,25)==0 subplot(1,3,1:2) imagesc(x,y,w');caxis([-4 4]);hold on;set(gca,'Ydir','Normal'); contour(X,Y,p',15,'color','black'); axis equal;xlabel('x');ylabel('y');grid on;grid minor quiver(X(1:2:end,1:2:end),Y(1:2:end,1:2:end),u(1:2:end,1:2:end)',v(1:2:end,1:2:end)',... 'color','white');hold off;axis([0 1 0 1]);%,'ShowArrowHead','off' title(strcat({'Re: '},num2str(1/nu,'%2.f'),{', t = '},num2str(t,'%2.3f'),{', Size = '},num2str([M M],'%i x %i'))); subplot(1,3,3) AX = plotyy(y,u(M/2+1,:),y,v(M/2+1,:));grid on;grid minor;xlabel('y-axis'); title('U and V Velocity along y at x = 0.5');set(get(AX(1),'Ylabel'),'String','U-Velocity') set(get(AX(2),'Ylabel'),'String','V-Velocity');axis(AX(1), [0 1 -1 1]);axis(AX(2), [0 1 -1 1]) frame = getframe(gcf); %writeVideo(vid,frame); end %print stats i = 2:M; j = 2:M; fprintf('Iteration: %i\tTime: %2.3f\t\tNorm of du/dt: %e\tKE: %2.3e\n',... k,t,1/dt*norm(u(i,j) - (p(i,j+1)-p(i,j-1))/(2*h),inf),h^2*sum(sum(vm.^2))); end; %close(vid) % code by u/ansariddle
Try y = @(t) t+2 Idk if that's the problem, but that's the way I've always done it and I've never had that problem.
Thanks for sharing the code, it looks sick! I will try this out when I get into the office on Monday :) 
Last line gives the error. P and x vector sizes not equal.this can be error reason. I do not know how can i fix. 
Well, if p and x aren't the same size... what are you hoping to have happen when you type `p(x)`? If you can answer that, we can help you figure out what to do. 
How I'm reading your question: You want to create a SuperClass with a method that, when called, generates the code (in an .m-file) for a brand new SubClass which inherits from SuperClass. ***** How would SubClass extend or be different from SuperClass? If it would just be a generic subclass, it would be simple enough to write a function that printed the boilerplate for a class to a file and save it with the appropriate name, but why do you want to do this with code? If you would have a substantial amount of additional code in SubClass, that could become rather complicated, but of course you can write programs to do complicated things (compilers exist, after all). I don't really understand what you hope to accomplish. If you want to generate a SubClass that differs from SuperClass in some easily definable and parameterized way and use it at run time, the correct answer might be that you need to make SuperClass accept the parameters and perform the function of all of your theoretically possible SubClasses. The other option is that I've completely misunderstood your question and I'm talking to air.
It looks like your anonymous function is defined in terms of `A` and `B`, but you don't define those variables until after defining the function. Since you don't pass `A` or `B` into `f`, their values need to be available when you define `f`. Note that `f` will use whatever constant those variables held when you define it, even if you change the variables later. For the function file, is there anything else in that file? The function should be in its own file called "bisection_txh192.m". (I guess R2016b allows functions within a file, but that's still very new so you might be on an earlier version).
Off the top of my head I'm not sure. But I can double check when I get home though. 
I dont understand "root=bisection(f,xl,xu,maxiter)" if you are tring to call your "bisection_txh192" function you would write "root=bisection_txh192(f,xl,xu,maxiter)" btw if you want to find roots you have a function called "fzero"
I would use matlabs math toolbox. To make a symbol write "syms". Here is information about how to use it https://se.mathworks.com/products/symbolic/
Awesome stuff, I'm taking fluids course right now so this is really neat to see in code form.
x is 201X1. p is 6313X1. It seems nonsense. Does p suppose to be 201*1 too? Because, p calculates max values. Am I wrong?
I will try this, reeeally cool :) Thanks for sharing!
 y = x - (f(x)/fd(x)); This line? and whereabouts? 
I am told that f(x) = ex â 1/x, x0 = 1, nmax = 100 and tol = 1e-6 
Thanks a lot! That explanation finally helped me figuring out what's going on 
Thanks for the help ;) 
The output is "Output argument "y" (and maybe others) not assigned during call to "newton"". 
To use disp the bit inside the brackets needs to be a string, not a number. Try disp(num2str(i1*0.1))
The first part is pretty simple: get frequency from radians/sec to hertz, then multiplying by an angle. sort is then used to sort from highest/lowest, frqs being the frquencies and indices being the index of that in the vector. Fs is very likely the sampling frequency, making this a DSP type problem. Now, the second part I can only speculate on. rts is probably a data vector with either negative or complex components, and you get the abs of that so the log can calculate correctly. -1/2 * (Fs/(2 * pi)) can perhaps be used to get the Nyquist frequency? [Here is the doc on lpc](https://www.mathworks.com/help/signal/ref/lpc.html). Its an optimization based method, the lpc command finds the coefficients in the linear predictor (this all seems to be linear) based on the equation in the documentation. In the roots of the lpc equation, I *think* you have zero mean error. Its used for some things like finding the formant frequencies, like [this](https://www.mathworks.com/help/signal/ug/formant-estimation-with-lpc-coefficients.html) EDIT: in atan2(imag(rts),real(rts)), you have the imag over the real, this gets you the phase. That's why there's an angle (phase) multiplied by the sampling frequency, this helps you get the data in phase.
Are you sure you are not overwriting your data every time?
At which point do you write to the .txt file?
That code I wrote in the last comment is where I write in the .txt file and it's the last code I have written in my m-file.
You're welcome!
My biggest problem is when I try to apply it to y=x(sin(x))^2 it tells me that "Inner matrix dimensions must agree" 
This is what I have so far. http://pastebin.com/YfRb3SA6
Is it alright if I just DM you the code? It's too long to post here. 
&gt; Some of the times I have tried to run the code it simply gives me an error "Maximum recursion limit of 500 reached." Is there a fix for this too? We'd have to see your code to see what is causing this- you must have some code calling itself. 
My guess is, you're overwriting the data in your text file, instead of adding to it, but we'd have to see more code to know. 
I posted a link to my code above. Thank you!
I posted a link to my code above. Thank you! 
It sounds like your code is calling itself, and as a result is only overwriting the text file, not appending to it. 
At some point you're going to have to start doing your own debugging. We don't have any secret knowledge here. When you get an error message, **read it** and research/solve the problem. Error messages aren't arcane incantations, they literally tell you what went wrong, and on exactly which line of code. 
Do you know either in general or specifically what I should do to append it instead of overwrite it?
I'm guessing that your code writes the first block of data to the file and then calls itself... Whereupon it writes the first block of data to the file and then calls itself... Whereupon it writes the first block of data to the file and then calls itself... Whereupon it writes the first block of data to the file and then calls itself... Whereupon it writes the first block of data to the file and then calls itself... Whereupon it writes the first block of data to the file and then calls itself... Whereupon it RECURSION LIMIT REACHED 
Not true. 
The error message is pretty clear: &gt; Output of the function must be the same size as the input. If FUN is an array-valued integrand, set the 'ArrayValued' option to true.
Blender might be something to look into.
Hmm, that makes sense....originally I was looking at designing without any OOP. Then I figured it would be good practice to utilize classes in some way. I likely over corrected. In my head I was thinking of instances (which I'm still not sure how to create on-the-fly), but in initial research landed on SubClasses to accomplish my goal. I'll try and find a closer resource to assist me in a design that makes sense. You've been very helpful, thanks a bunch.
It will do whatever your code does before it calls itself. Code isn't magic. It's impossible for you to not know what your own code does. Just read it. It will do exactly and only what you tell it to. If your code writes the first data set before calling itself, it will **write the first data set**, and then call itself again. 
The reason your proposed algorithm doesn't work is because MATLAB's for-loops are really for-each loops. What that means is, it creates the vector right at the beginning (so, if you say `a = 1:3` it creates `a = [1,2,3]` right away, and then cycles through. In general, you want to do something like: k = 0; while true k = k + 1; more stuff? end
The extreme points you want to find are the end points and any peaks (concave or convex). You could try the derivative method or double derivative method to find the peaks. After this you need to compare all the points of interest to find the max and min values.
Does this help? t = 0:0.1:10; fun=@(t)(t-floor(t)+(pi*t)-floor(pi*t)); A = 0; B = t(end); i1=integral(fun,A,B); fprintf('The integral from %0.1f to %0.1f is %0.3f. \n',A,B,i1);
Updating a loop variable inside the loop is usually considered a no-no in Matlab because of the way Matlab handles loops (see Weed_O_Whirler's explanation). However, for what you're doing here to generate the matrix A, you're not trying to update the loop counter, just your matrix-index-counter, so it works, but it's poor practice and you should really use some variable other than *i* to set your off-diagonal elements As for your original question: it looks like your loop is solving the same problem each iteration, instead of actual iterating to a solution. For each iteration, you find the vector *y*, use it to calculate the error, and if the error isn't small enough yet, you do the same step again. I don't remember Jacobi iteration off the top of my head, but I assume you should be using the result of each iteration (*y*) in the next iteration (instead of *x0*?) so that you converge to a solution
Okay, let's just point out the fact that I'm not really sure what I'm doing and it's 90% intuition and 10% knowledge. Don't worry about me being a coder in the future with no basics whatsoever, because I'm surely not planning to go this road. So there is that. 1.) But my first plot is what I want - a reference to the actual sine wave made via Taylor series, it has values from -1 to 1 on y-axis and 0-200 on x-axis. This part isn't really that important, I just made it for myself. 2.) In figure(2) it would be lovely to see an approximation of sin made by the 'n' value of the Taylor series, ideally in the same span of xs and ys as in figure(1). I understand why it doesn't work, I just can't figure out what's the right thing to do. By the way, thanks for the help so far, I know I'm not making it any easier :). 
You can get the ratio of values larger than some threshold like this: This is for the rgb version, each element is one of the rgb channels of some pixel. ratio = sum(sum(sum(im &gt; threshold))) / numel(im); This is for the greyscale, each element is a greayscale value of some pixel. ratio = sum(sum(im &gt; threshold)) / numel(im);
The Taylor series is a function of 'x' and so it is wrong to sum up the function values for all x. The problem was not that to the right side of the '=' you had a vector, the problem was that you were trying to assign that vector to a scalar 'result(i+1)' 
Trying to write code to do a task is 100% worthless if you don't have any idea how to accomplish the task in the first place. Code is simply a list of instructions for the computer. You will never be able to come up with the right instructions if you don't know what you're asking for in the first place. 
Just an FYI, you might have good luck with ImageJ and any of the dozens of add-ins that do this kind of thing. 
Here's a few things I noticed right away: On line 4, `plot(sin(x));`, you probably want to make that `plot(x, sin(x))`. That way you're plotting sin(x) on [0, 4pi]. If you leave out the x argument then it will plot (1, sin(x(1))), (2, sin(x(2))), etc. In future you should try to avoid using `i` and `sum` as variable names since these can be mistaken for the imaginary unit and Matlab's sum function. As for your error, I think I understand what you're trying to do and why it's not working. Is there a reason why you need to store all of the partial sums? If not, then you could get rid of the `result` variable and replace your loop with: for i = 0:n sum = sum + (((-1)^i)/(factorial(2*i+1))).*x.^((2*i)+1); end That should work now, but to make it clear that `sum` will eventually be a vector the same size as `x`, I would change your line 5 from `sum=0;` to `sum=zeros(size(x));`.
Oh you can definitely batch process in ImageJ, but you might be right... 
Yes you can use linspace here... a1 = linspace(-2,2,50); a2 = linspace(-2,2,50); t = linspace(1,10,91); for kt = 1:91, for k1 = 1:50, for k2 = 1:50, fplot(@(x) a1(k1) * x ^ 2 + a2(k2) * x ^ 3 + t(kt) * x, [-2 2]); axis([-2 2 0 15]); drawnow; end; end; end; 
Understand P' when i have x*x matrix, it's transposing. But it do the same for polynomials (1*x) or?
Not sure what you mean with polynomials but yes, you can transpose a 1\*x vector. Actually ' is doing a conjugation but if you aren't dealing with complex numbers it's the same. Only transposing is done via .'
As I'm sure you read on the documentation, P(:) will return P in a one dimensional vector using the column-major ordering of the elements of P. In the same way that P(2,2) is the same as P(4) when P is a 2x2 matrix. 
`Inf` is infinity. n=1; for a=1:Inf n=n+1; end But of course this will keep running forever. Edit: `1:Inf` will throw an error if you call it in the command line because the output is too great. It will *not* throw an error in the for loop, but MATLAB will truncate the loop to 9223372036854775807 iterations, which is the greatest signed 64-bit integer value. You can check this with `intmax('int64')`.
Alright, just to be clear, is this the code I should have now: clear all; % Erase all existing variables. for index = 1:10 Main %name of .m file disp(index) end %clc; % Clear the command window. clf; % Clear the previous figure graphed. Or should I not have clear all in there at all? When I tried to run the above code it just continued running with no data appearing in my .txt file :(.
Does 1:Inf Actually work? I feel like that's got to throw an error...
Thank you very much! It works just fine and I took out some very valuable lessons out of your (and others) comment(s). I hope I won't bother any of you ever again! :) 
Here's how I would do it: 1. Google "matlab decimal year" 2. Click the top result 3. Put a tiny bit of effort into trying to understand the words in front of me 4. If stuck, google term I am stuck with (hmm.. how do I convert what I have to a "DateString"? Maybe I should have left those excel dates in that weird numeric format?) Sorry to be a dick about it, but you clearly didn't even take step 1 in trying to solve your own problem. 
What have you tried so far? 
Look into datetick: http://www.mathworks.com/help/matlab/ref/datetick.html
Your code for the turbulent Fanning factor looks off. You don't want or need `fzero` for this. You're on the right track by breaking this down into component functions, though. You can define simple functions like these in a single line as shown below. Also note that you can supply multiple arguments to a function. You want to pass in both the roughness ratio and the Reynolds number in the turbulent flow formula, so write a formula that uses two variables. f_laminar = @(Re) 16./Re; f_turbulent = @(Re,rr) (-1.737.*log( ... use Re and rr ... )).^(-2); You've got your plot set up fairly well, but you're looking at a huge range on your x axis. You can use `semilogx` to address this with a log scale. figure; hold on semilogx(Re_lam, f_laminar(Re_lam)) % Plot F_f in laminar flow domain
It is possible by using the [saveas](https://se.mathworks.com/help/matlab/ref/saveas.html) function.
yes I know the upper and lower limit , and i have 8 coefficients that needs to go from one value to another.
Maybe not for free, unless it's part of an academic project or competition or something. They do have home licenses though, or depending on how long you need it you could also use a trial version. 
My apologies if I misunderstanding this, but is there a reason why can't use something like a ramp and a quantizer block? The ramp might not be the appropriate input for your application, but assuming the gain increment is fixed, i think this could help. 
Scilab is not compatible, but similar to Matlab. Includes a Simulink-like program, IIRC.
Engineering student, lots of Matlab experience but never worked with the Trading ToolBox. Would be willing to take a crack at it.
such as markercolor, marker, etc. I want to see a list of all of these things that can possibly be adjusted.
I went ahead fixed the error in my original submission. It should run now in matlab. &gt; could you please explain what is the k? The k's in the code are index variables. Traditionally i's, j's, and k's are used as indexing in for loops. I don't like to use the i's, and j's in matlab because they also denote complex numbers in matlab, so I skip right to using k's in matlab. Just my personal style. You don't have to use index variables, but I thought it would make the code cleaner and easier to read. You can just use linspace directly in your for loops. I have provided a code submission where this is exactly done. Perhaps this is easier to read. for t = linspace(1,10,11), for a1 = linspace(-2,2,10), for a2 = linspace(-2,2,10), fplot(@(x) a1 * x ^ 2 + a2 * x ^ 3 + t * x, [-2 2]); axis([-2 2 -15 15]); title(sprintf('t = %5.3f, a1 = %5.2f, a2 = %5.3f',t,a1,a2)); drawnow; end; end; end;
Really more of a math question, but you can find the misfit function described [here](https://www.eoas.ubc.ca/ubcgif/iag/tutorials/invn-theoryintro/optimization.htm). You want the RMS of that, so calculate your function and then take the RMS of it, and you should be done. 
You are correct. I went ahead an made some edits to my post to reflect this correction. Thanks. edit: You might want to check out those edits and let me know if they accurately reflect your corrections.
what do you know? are you looking for m? b? LS.x = linspace(0,x(end),100); LS.y = m*LS.x + b; plot(x,y,LS.x,LS.y) 
Hi there, do you know the difference between a value (yours) and a handle class? If not (see here: https://uk.mathworks.com/help/matlab/matlab_oop/comparing-handle-and-value-classes.html) the handle class is what you are looking for. Try changing your first line to "classdef Workout &lt; handle". Also this allows you to even further simplify your code: Armday = Workout(); add_lift(Armday,'Curls'); etc. 
A couple of things to consider * you need to convert the angle from degrees to radians. Either multiply by pi/180 or use the deg2rad function * its simpler to use the mod(count, 4) to do the toggle bit. mod(count, 4) will return 0 when you want to add the nth term and 2 when you want to subtract the nth term.
Your OS should have stored prior versions of your files as you worked. http://www.howtogeek.com/209080/how-to-restore-previous-versions-of-a-file-on-any-operating-system/
Hi, check out this document regarding custom dialogs: https://uk.mathworks.com/help/matlab/ref/dialog.html?searchHighlight=dialog. It is essentially the same as building your GUI with the difference that you will use uiwait(dialog) to stop the program from executing while the user deals with the dialog. Regarding the search: this can be easy or slightly more difficult if you want to integrate stuff like fuzzy matching etc. However, as a start I'd just get the folder content using dir and then use regexp with the search term using a cellfun call on the dir content. Then you could output the matching files to a listbox and let the user to the final selection. Hope this helps!
Or if your files were in Dropbox all previous versions will be saved..
There is now a 'Matlab drive' functionality at mathworks you can use, save all your work there, and version history (I assume the latter, as I haven't actually used it yet ;)). I know this is too little too late.
have you tried [prime decomposition](https://en.m.wikipedia.org/wiki/Integer_factorization#prime_decomposition)? 
+Thanks! Ill take a look 
Start with the number, and recursively divide the number by inscreasing primes. if the remainder is zero that is a prime factor of the number. you only have to check divisors &lt; (n/2) for each iteration, so you have a stopping criterion. Also when you get 1 for your answer you are done. 100 is a good example, 2 leaves you with 50 2 leaves you with 25 5 leaves you with 5 5 leaves you with 1 And you're done. 2-2-5-5 is the prime decomposition. You can find primes any way you like but the Sieve of Eratosthenes is a common algorithm. There are a lot of methods for finding primes.
This is unlikely to work the way you want in the long run. You want a fair assessment of your work and the freedom to pursue your eduation without accusations about your integrity. Take your homework and this desire to the department chair of the instructor. If this fails then go to the dean. Go to the dean of students or the admin as a last resort.
When using cftool, you specify the x and y data from your workspace. I think what you are looking for is to set the 'X data' to t, and the 'Y data' to x. This will be automatically plotted for you in the cftool interface, and then you can choose a linear fit for it to get the gradient and intercept.
Best way to deal with this is make a hashtable, where each integer from 1 to 52 represents a card. function deck = getDeck(); %% its best to hard code this table I believe suit = ['H','C','D','S']; card = ['2','3','4','5','6','7','8','9','10','J','Q','K','A']; for i=1:52 deck{i,1} = [card(mod(i-1,13)+1),suit(floor(i/13.1+1))]; end end function [SuffledDeck DeckOrder]=shuffleDeck(deck) [~, DeckOrder]=sort(rand(1,52)); SuffledDeck =(deck(DeckOrder));; end &gt; so the numbers that were in group h would represent hearts and s resprents spades etc... *To get (draw) the next (ith) card from the shuffled deck*: - card = deck(DeckOrder(i)) *To get all hearts*: - hearts = deck([1:13]); - **OR** i=1; hearts = deck([(52*i/4)-12:(52*(i/4))]); *To get all spades*: - spades= deck([40:52]); - **OR** i=4; spades = deck([(52*i/4)-12:(52*(i/4))]); 
If you go to the [next folder level up]( http://cis.poly.edu/~mleung/CS6673/s09/nnd09/) in the link you posted you'll see that there's a whole library of functions that are (likely) all interrelated - including nndfgflg.m. I'd download the entire folder (all the m files, anyway) and put them all in your data mining folder. You'll have to rehash the toolbox after you do this. Unrelated aside: I've been told that spaces in path names can cause issues for Matlab; I've personally never had a problem but always use an underscore in the path names just to be sure. Could be a total non-issue, just something that jumped out at me. 
He has to prove you cheated. Ask him for his proof VIA your university academic office. If he cannot prove (plagiarism) then he as no case.
Probability because his code is much cleaner than his classmates, also maybe it mirrors some stack exchange stuff. Just a hunch though. 
Yeah my hunch is she is no dummy, and instructors don't relish the thought of accusing people of cheating. There are algorithms to find cheats.... Not saying you definitely cheated OP, just saying I hope you haven't replicated some weird bits of code that are online, by coincidence. :) 
They are 95% confidence intervals. You can be 95% sure that your fitted coefficients are within the bounds of the values in the parentheses.
In addition to the example of using the if block, I think there is a command error(), which is better suited than display because it actually gives a proper warning. How do users input these x values?
The best way to validate function inputs is [*validateattributes*](https://de.mathworks.com/help/matlab/ref/validateattributes.html) If you want your function only to accept scalar values between 400 and 600 you can use validateattributes(x, {'numeric'}, {'scalar', '&gt;=', 400 '&lt;=', 600}); When the values are out of the specified range, this will throw an error informing the user about the values that were expected. Note that you can change 'scalar' to 'vector' or '2d' depending on whether or not your function can handle vector or matrix inputs. EDIT: If don't you want your function throw an error but rather output "Not defined" you can return NaN for those inputs. Assuming your output y is the same size as x you can use y(x &lt; 400 || x &gt; 600) = NaN; at the end of the function.
Yes, V=null(L), the columns are orthogonal to L and can be checked by L*V.
Ah great thank you! That sent me down the right rabbit hole. Are we supposed to post the completed codes that work?
Thank you very much!
Hey welcome to matlab! Try and copy the code above to matlab and use your workspace to see what each section does (maybe remove the functions and have everything as a script), feel free to ask questions about what each thing does... im happy to help. Maybe the `mod` function is new to you, its a function that calculated the remainder of a division of integers. Its useful in looping around vectors...
Here is what my final plot needs to sort of look like: https://imgur.com/N9D0QrF
I was wondering what was happening here...but with the link Golden_Hunter provided, I see you turned the class into a handle class. Thanks for taking the time to look at it and help out.
Seems like a fun problem. Just to chime in, I would have solved it a different way, though yours seems fine. Its always good to learn other ways of looking at things so I though I would share the idea. I would start with Deck=[repmat([1:13]',4,1,[ones(13,1);ones(13,1)*2;ones(13,1)*3;ones(13,1)*4]] This gets cards 1:13 with suits 1:4. Then I would add generate and sort a list of 52 random numbers. bb gets the index of the sorted list. Then display deck based on that list. [aa,bb]=sort(rand(52,1)) Shuffled=Deck(bb,:) sorry for any mistakes above, bu you get the idea.
So solution I sorted figured out was to isolate the uiaxes in a panel, then just delete the panel's children. Not the cleanest solution but it seems to work; function DropDownValueChanged(app, event) numberOfChannels = app.DropDown.Value; delete(app.Panel.Children) for i = 1:str2double(numberOfChannels) testAX(i) = uiaxes(app.Panel, 'Position',[10 i*150 200 100]); end end
Thank you!
Thank you both!
Your 'so far' plot looks correct for the example data you provided. There's just an issue with the axis limits that prevents you from seeing most of the trajectory. Try first eliminating your call to 'axis' to see the entire trajectory you're currently plotting. If you want the trajectory in the 'should look like' plot, you'll have to change your data. Try something like: 8 60 12 315 16 70 10 120 to get the blue lines. You could also use vectorization to make your code more concise. i.e. x=vector_data(1,:).*cosd(vector_data(:,2)); y=vector_data(1,:).*sind(vector_data(:,2)); replaces the first for loop Also look up the documentation on 'cumsum'.
See if an anonymous function will work for you. https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html Also, almost any function can be passed as an object by prepending '@'. https://www.mathworks.com/help/matlab/matlab_prog/creating-a-function-handle.html
Ps to convert your doubles to datetimes (which ymd can then operate on), read up on the datetimes function to do so. It can read many different formats into datetimes data. Documentation here: https://www.mathworks.com/help/matlab/ref/datetime.html
Thank you!! It was just datetime combined with ConvertFrom, and it was solved.
The different methods weight the residuals differently, so the resulting changes in the reported R^2 value is expected. It's hard to comment on the expected magnitude of differences without looking at the data. A dataset with a number of outliers may well be significantly affected by changing the method in use. I also wonder about your manual calculation of the R^2 value. Are you making sure to use the correct weighted residual values in that calculation matching `cftool`'s method for fitting?
Yea Ill do that I'll run everything line by line too see what's going on
According to the [`inputdlg` documentation](https://www.mathworks.com/help/matlab/ref/inputdlg.html?requestedDomain=www.mathworks.com), if you make inE1 a cell array of strings, each string will have its own input. You should learn how to find stuff like this in the documentation. Literally all I did was google "inputdlg".
try this? https://www.mathworks.com/matlabcentral/answers/53954-how-do-you-create-a-surf-plot-in-cylindrical-coordinates
https://www.mathworks.com/products/matlab/
&gt; why did you change the deck matrix to a "char" string ?? By complete error. My mistake, its already a char so there's no point in casting it... I edited the answer... 
Hey, no problem at all. I would avoid using global-variables in general unless you absolutely need to. But im not sure i understand the problem with passing your suffleddeck variable to other functions? Could you explain in a different way what you are trying to do? (maybe post your code on pastebin) 
I have been trying to get it working on Ubuntu for last week. I've gotten everything to work so far besides getting gpu setup
First step is to figure out which while loop is getting stuck in an infinite loop. You have two options: learn how to use the debugger and place a breakpoint on one of the statements after the inner while loop (for example, put a breakpoint on `imf{end+1} = x1`), or place a statement to print something to the command window after the inner while loop (it doesn't really matter what you print, you're just trying to see if execution is reaching that point in the code). I highly suggest you learn how to use the debugging features, as it will make inspecting code like this to figure out why your loops aren't terminating much easier.
how can i strip off the leading character?
No. Matlab is closed-source proprietary software.
Thanks a lot !! I'll check these links.
Some MatLab functions can be accessed by typing *edit functionname* in the command window, but relatively few.
Thanks a lot for this extensive answer. Seeing edit magic it also helps a lot, even thou most functions seen this way only show comments. Still it's nice to see all this, especially C code, I don't really know Fortran so not much use of that even though it's open source. Still thanks a lot for your help. 
good call on the all zero odd terms. I would probably re-cast the problem so it only did even terms, then did "odd" evens and "even" evens, if that makes sense...
&gt; I simply get an error Hey, um... that error might help us help you. My uninformed guess is that you have some kind of row vector vs column vector issue.
Ah yes, sorry, I understand now, thanks again
One thing that sprung to mind, theta should be on the x axis as the independent variable. Also in your pasted code you put "plot(SigmMax", should that be "plot(SigmaMax"? Other than that it would be helpful to see the specific error message
The error tells you **exactly** what the problem is. It even tells you what line it happens on. That's literally what error messages are for. 
Turn off caps lock for starters.
Are you trying to use a matlab variable within the simulink model, write data out from your simulink model into matlab, or something else entirely?
I've created the variable `Temp` in the MATLAB command window. I'm trying to increase it by 1 or decrease it by 1 based on the result of the `if...else` if block. Is this something easily possible in Simulink?
In whatever simulink block you're trying to modify with the variable, simply type `Temp` instead of a value.
Master? You can't.
I didn't expect to circumvent anything, was just asking for help on what I needed. Turns out I was missing a toolbox that is usually pre installed. 
That wasn't it! Thanks a lot
This sounds like you'd be better using python or something to be honest
You cam use psychtoolbox!
Can you post what it is you have so far? I can probably figure it out but I'd like to see where you're working from. What measure are you wanting to increase/decrease by? In the mean time, here is a quick script that shows how the properties of the sound function work. Creating a tone of 'f' frequency, for 'T' seconds, at 'K' sample rate. function [y Fs] = tone_vector(f, T, K) A = 1; %0-1 for amplitude Fs= K; t = (0:(1/Fs):T); y = A*sin(2*pi*f*t); play(y, Fs) So the bit you are wanting to change is the *y=Asin(2pi f t)* where *A* is amplitude. The norm for A is 1, and this will just play the sound at the maximum through whatever setting your sound card is at. Alternatively, check out Psychophysics toolbox, specifically http://docs.psychtoolbox.org/BasicAMAndMixScheduleDemo
mark as solved please :)
That was just my though but my experience with python is limited at the moment and we are having a deadline in the near future. But next semester we are going to focus a lot more on programming and simulation in python :)
also code so far is here. Right now I am using a setup where my two signals to be mixed (first is a car recording and second is some binaural generated music that is added on top of the car noise) up and down arrow keys are used to adjust the gain of the music signal: clear all close all clc; frameLength = 2048; fileReader1 = dsp.AudioFileReader(... '/Music_3D/Song8_3D.wav',... 'SamplesPerFrame',frameLength); % Choose car scenario: % city_smooth_road_open-window-left.wav % city_smooth_road_open-window-right.wav % city_smooth_road.wav % cobblestone_40_10s.wav % highway_90_10s.wav % highway_110_10s.wav % highway_130_10s.wav % highway_exit-to-enter_110-to-0-to-130.wav % highway_tunnel_90_10s.wav fileReader2 = dsp.AudioFileReader(... '/CarRec/city_smooth_road.wav',... 'SamplesPerFrame',frameLength); deviceWriter = audioDeviceWriter(... 'SampleRate',fileReader1.SampleRate); scope = dsp.TimeScope(... 'SampleRate',fileReader1.SampleRate,... 'TimeSpan',16,... 'BufferLength',0.75e6,... 'YLimits',[-1 1]); %figure to take keyboard inputs h_fig = figure; %a contains current keypress a='empty'; %gain of music Gain=0.0; while ~isDone(fileReader1) signal1 = fileReader1(); %Music signal2 = fileReader2(); %Car noise PS=Gain*signal1; %adjust level of music PS=PS+signal2; %add fxied car noise %read key set(h_fig,'KeyPressFcn',@(H,E) assignin('base','a',E.Key)); switch a case 'uparrow' Gain=Gain+0.025 case 'downarrow' Gain=Gain-0.025 case 'return' close all; return; otherwise a='empty'; end; a='empty'; deviceWriter(PS); scope([signal1*Gain,signal2]); end release(fileReader); release(deviceWriter); release(scope); 
Okie doke, I don't know DSP at all but I do know where we keep previous DSP scripts at work and I have a bit here on adjusting gain from a slider http://pastebin.com/ub8iNcJi If dsp makes sense to you I assume that dump will make sense also, just sub out the *gain=get(handles.slider_BGgain,'Value')* bit for your keypressfunc and I hope that would work?
will definitely be quicker for the user to interact with if this is a sound level preference type test. I've a sneaking suspicion that we have colleagues in common if this is your area of study. Only a handful of acoustics courses :P
The Live Editor hides your figures by turning default figure visibility to off. You can force it to be shown by manually setting the visibility property to on: f=figure ('Visible', 'on');
+
haha I know many people who were there/visit occasionally. Beset of luck with the studies.
Sorry I wasn't clear in the original post. I panicked because I had an assignment due. It was a simple typo. Anyway, thanks for the help.
Your post has been removed. Please [read our rules for submitting homework](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/), make the necessary changes and then reply to this message. I will then re-instate your post. 
So, you have your equation that solves for viscosity depending on weight (10-70) and T(100-220). If you can make a for loop like: for i =1:13 %this is going through grade by increments of 5 for j =1:120 %temp by 1 degree VISCOSITY(i,j) = blahblah*GRADE(i)/TEMP(j); %each grade's viscosity is calculated for each bulk temperature end end will give you your matrix of viscosity for every grade at every temperature. You should then be able to use the **contourf(GRADE,TEMP,log(VISCOSITY))** to plot. I am sure there are more efficient ways to handle the data, hopefully this helps.
check if i-n &gt; 0
Before each one? Wouldn't that make the code a bit clunky? (Note I have several checks for each piece and would have to add this several times for each piece). I have tried adding it on using and but that doesn't seem to solve the issue. Thanks though
Nothing requires you start an index at 1. Instead, start `i` at like 9, and then in the "worst case scenario" when you do 9-8 you're still at a valid index. 
Cheers for that toolbox! Most likely what I want to use for next semester where we are going to have a lot of listning-tests
A lot of what I do is going from Excel =&gt; MATLAB but the other way around I haven't been able to find much, if any. I just resorted to copying and pasting from MATLAB to Excel, is this too much of a hassle for you?
First, some general comments. You should consider switching to `cell` arrays to make your code more extensible and easier to manage. time{1} = time_1; time{2} = time_2; % etc You also don't need to repeat the `hold on` command. figure; hold on plot(x,y) plot(x2,y2) % both of these plots will go to the same figure Okay, now on to your actual question :) You need to identify the order of your traces and then assign them each a matching color. % Generate some sample data numTraces = 30; for idx = 1:numTraces x{idx} = 1:1:randi(90)+10; y{idx} = rand(1) .* sin(x{idx}/20 + rand(1)) + rand(1)*10; end % Generate an appropriate colormap cmap = colormap(parula(numTraces)); % Find the max values and sort the traces peaks = cellfun(@max,y); [~,traceOrder] = sort(peaks); % Plot the traces in order of max value figure;hold on for idx=1:numTraces traceColor = cmap(idx,:); trNum = traceOrder(idx); plot(x{trNum},y{trNum},'color',traceColor) end Output figure: http://i.imgur.com/7b5ubqt.png 
There isn't nearly enough information here for us to help you. Your description isn't detailed enough for us to understand. Try sharing your code on pastebin, and ask a more specific question.
There's a command, `eval`, that can automate this kind of conversion to a cell array when you've already got the named variables. % convert time_## variables to time{#} cell array for idx=1:36 eval(['time{' num2str(idx) '} = time_' num2str(idx) ';']); end I'd love to know if anybody in the subreddit knows a better way to do that conversion -- `eval` commands are generally slow, hard to understand, and hard to maintain.
Looks like it went a bit too fast there, but that's exactly what I meant. I'll try this tomorrow and get back to you. Thanks for the info! 
Yeah, we're trying to make our entire process automated. We have other scripts that act as functions and we're going to be putting it all together
This is exactly what I wanted to do! I'm having the most trouble with creating the 'raw_updated' file. I need to replace specific values in the original raw file, but I'm still looking for the best way to do this. I haven't given up yet! edit: Yosh! I got it. Thanks for the advice!
Typically it would help if you gave the output. Since this is homework I'm not 100% comfortable just giving it to you. You need to step through and really consider what the program is doing, not what you intend it to do. I'll give you a hint: what is the length of the value 10?
Currently you're defining i as being a variable between the values m and n, which means that if you define vec(i), vec(1) to vec(i-1) will be zeros. I think the most efficient way to solve your homework assignment is to loop through variables m through n, adding the integer corresponding with an iteration if that integer happens to be a prime. Your focus should be on finding out whether a number is a prime or not. Just contact me if you're still stuck.
You could write up both of the codes and use tic/toc.
To plot the data: &gt;plot(x,y,'*') To find the coefficients &gt;polyfit(x,y,3) Then use your equation y = Ax^3... and your new coefficients to solve for a vector yy that is the polynomial fit of a vector xx. xx could be something like &gt;linspace(0,2,100) To round to 2 decimal places on your coefficients, &gt;round(coefficients*100)/100
yeah I had already found the coeffecients its getting it to out put in the Ax^3 format that I'm having trouble with. 
Oh! Well then take a look at poly2sym(coeff).
Hi thank you for your reply, I think I'm getting somewhere and I'm learning things such as the cell array. But when I copy and paste this code starting with "% Generate some sample data" to a new script in Editor, save it under " reddit_test.m" and Run it, I get this error: Error using cellfun Undefined function 'max' for input arguments of type 'cell'. Error in reddit_test (line 12) peaks = cellfun(@max,y); I tried to copy and paste this into my original document that I sent named "falling_loadm.m" and changed the following: % Generate some sample data numTraces = 36; for idx = 1:numTraces x{idx} = time; y{idx} = force; end Please let me know what needs to be changed. Also, know that I did switch to cell arrays. Now I have "force" and "time" of 1x36 cell arrays each.
It's a great error. It's the best error, everybody thinks it's the best. Listen, just get this error and it's gonna huge. Really like no other error. 
I'm really new to matlab, and we've only used Simulink when we use it, anyway, is this what you meant? http://pastebin.com/TuEvpHN5 I'm unsure on how to proceed from here. I have the vectors for x, y and theta with time from Simulink. Should i start the ship in the initial values (x,y, theta) = (9000, 160000, -pi/8). Then substract the new x and y value for each step? or replace them? EDIT: I've done some more testing, and have the current code: http://pastebin.com/ntf2Bp66 This gives me error in the xData zData Array, wrong shape or size. EDIT:EDIT: I've done even more and got something that almost works, but the rotatation skewers the whole ship.. http://pastebin.com/ZUW6VEeH 
"In" is a 1x3 vector. "B" has nine elements. It is possible that "In1" is finding an index in "B" that exceeds the size of "In", which is going to throw this error in your if statement when you try to find that element of "In". I'm guessing you meant: In = A(i:i+2, j:j+2); ? Also, and not that it matters too much, but the indentation is just driving me nuts.
&gt; In = A(i:i+2, j:j+2); Yes, that was it. Thank you very much! And sorry about the indenting, I'm still trying to learn the quick and easy way to properly write code on reddit.
`cellfun` is a tricky beast, so let's break down this command. That should help explain the error message you're getting. `peaks = cellfun(@max,y);` is used to take a cell array, `y`, and pass `y{1}`, `y{2}`, and so on to the function `@max`. So the output will be `peaks == [ max(y{1}) max(y{2}) ...]`. With me so far? The `max()` function returns the largest value of a vector, but it doesn't know how to handle a cell array. `max([1 2 3]) == 3`, but `max({1 2 3})` will produce that error message. Make sure `y{1}` is a matrix -- `[1 2 3]` format -- and not another cell array -- `{1 2 3}` format. Normally, keeping everything as matrices is simpler for anyone new to MATLAB. Cell arrays let you handle vectors of varying length, which is what I assumed to be the case in your data from your plot.
Alright, this has sort of been solved but now the end product ends up being dilation and not erosion so there's that
Thanks a lot. I didn't want anyone to tell me what to do but just to steer me in the right direction. I appreciate your help.
No prob. I'll probably get over the indentation thing eventually.
You might be able to use daspect to do it. You'll probably have to fiddle with the parameters to get it how you want. Try daspect([4 1 1]) to start. 
Do you know any well known authors that are looking for code sources and examples? I really think I have some good material to work with here. Just look at it. 
champion! just what I needed. thank you
No problem. Took me a long to even learn how to step through a program. Hang in there, it gets easier.
So what is the end goal of this multiplication? because order matters when multiplying matrices. for example lets say the initial column vectors were 5x1, and the matrix was 5x2, you could transpose the RV product to a 1x5 by doing (R.*V)', then multiplying the matrix (since 1x5 agrees with 5x2), will get you a product vector of 1x2. Now if you wanted to keep the dimensions, and multiply the column vector to each column vector of the matrix, you can do (R.*V).*Jo, which will give you a 5x2 matrix where each column was element-multiplied by the column vector RV. e.g. VR = [1; 2; 3; 4; 5] Jo = [1 2;3 4;5 6;7 8;9 10] c = (VR.*Jo) 1 2 6 8 15 18 28 32 45 50 is this what you are looking for?
figures 1 and 2 weren't successful, but cracked it at the third go. This is how science works.
did you get a solution to this?
best
ok
I'm not entirely sure I'm following what you're saying here. Say I've got various sliders or what-not spitting out data and this is needed elsewhere. I get the idea of saying just getting the structure of guidata and adding the data in there but how will this then be accessible through the difference callbacks, or even across figures? 
Character arrays are really numeric arrays. What happens when you convert the output of `dec2bin` to double?
What Matlab functions are you using?
Because it's a handle. If both GUIs have a handle to the data, they both have access to the exact same data. 
I must be missing something completely then. http://pastebin.com/Ky9UWDG7 Just throw together the simplest gui for returning a value of a slider when the button is pressed. In the button callback it can't find H as I expected. Do you know if there are downsides to assigning app data to root as set/getappdata is a very quick and clean way of doing this as far as I can tell. Dont know what that top section is meant to do as it throws an error.
I had to switch from mobile so I could more easily type. I program a lot of GUIs. My first bit of advice: ditch GUIDE. It's the worst. Now, I've shown you how to explicitly define your data model. Now it's time to build a GUI. I like to use nested callback within the function that creates the GUI. This is something that you can't do with GUIDE. Below is an example GUI. I use the basic pattern all the time. function GUIOne(data) %GUIONE display a GUI for GUIDATA %% Build the VIEW fig = figure; % configure as you see fit % You have to do this if you want to avoid having references to you handle floating around % when you're done with the gui set(fig,'DeleteFcn',@deleteFcn) hc = uicontrol(fig,'style', 'slider',Value',data.time,'Callback',@myCallback); % Build up the rest of your GUI. I like to use uiflowcontainer % and uigridcontainer. They make it super easy. %% Define Callbacks function myCallback(varargin) val = get(hc,'Value'); data.time = val; end function deleteFcn(varargin) clear('data',mfilename) end end 
The first block of code I gave you is a class definition. I can see that I chose a bad name for that example class, as there is a function called `guidata`. Rename that class to MYGUIDATA, or whatever you want. Create an instance of that and pass it into your gui function. Read up on [object-oriented Matlab](https://www.mathworks.com/company/newsletters/articles/introduction-to-object-oriented-programming-in-matlab.html).
Sorry mate, I've totally lost you. No worries though thanks for helping anyway!
+
Rather round-a-bout and brutish, but... You've got 8 bit numbers (0-255 in base10). Using dec2bin gives you a char string, but not necessarily 8 in length. But this char gives you the bin values from right to left, and you can pad the rest (i.e. the starting 0s). What I can see working is doing dec2bin and working from end:end-1:1 to convert using str2num the output char from dec2bin into your Nx8 array for binary representation of N numbers. Again, rather brutish, but should work in theory. There are likely more elegant ways...
http://imgur.com/a/JP973? Here's the sample code of what I'm going for. r and v were row vectors and he said specifically that they should be column vectors in the assignment. The second 2 pictures are to show dimensions and how Matlab is rejecting any simple operation I'm going for.
Beautiful explanation. I was just messing up your 'x' and 'y'
Beautiful comment, and [it now works perfectly](http://imgur.com/a/tPC11). Thank you. Going further with this, how can I make a legend in such a way that isn't like 36 lines with colors but maybe like a color bar range of colors showing the maximum values the code referred it to? What I was doing wrong is I was leaving your `x` and `y` in the code, but I switched them out to my `time` and `force` respectively.
Perfect, so try to run this if ~iscolumn(R) R = R' end if ~iscolumn(V) V = V' end RVJo = (R.*V).*Jo Where those first 2 arguments make sure the R and V are 11x1 column vectors, then R.* V results in a combined 11x1 column vector, then multiplying (R.* V).* Jo will give an 11x241 matrix where each column of No was multiplied by the column (R.*V). See if that helps your problem
`colorbar` gives a colored legend. `caxis([min(peaks) max(peaks)])` scales it by those values. HOWEVER, this is misleading. It suggests the color was chosen based on the max value reached instead of the *order* of the max values. A more appropriate axis would be `caxis([1 numTraces])`. Alternatively, you could change how the colors are picked.
Okay, so since I posted this question I realized I was not testing with a disk as a structuring el, rather a disk with a hole in the middle. so I added A(i,j) into line 7. Now it is no longer an edge detector, but it leaves an outer border as it erodes. Still looks pretty odd. 
You can also use dir to access folders like: folders = dir; dirFlags = [folders.isdir]; % Only folders folders = folders(dirFlags); for q = 1:lenght(folders) FolderName = folders(q).name; cd(FolderName) % cd to folder, remember to cd back files = dir('*.txt'); % All .txt files in folder % Do stuff with files, maybe in a for loop like mentioned above end 
Thank you both, the cd step is crucial. Makes sense. Thank you.
You do not have to actually change the working directory, you could find all the .txt file in the folder by concatenating the path files = dir([FolderName '/*.txt']); 
I went by my professor's office hours today. He said he used a ones matrix the same way I did for his version. Thank you for your help though :)
I figured you had more Matlab experience since it sounded like you were setting something reasonably complex up in Simulink, but your progress looks really good! &gt; the rotatation skewers the whole ship Not sure what you mean? The rotation should rotate (but not deform) the whole ship - at least, that's how I interpreted "theta". If you don't have `axis square` set, it might look like it deforms a bit because the axes are scaled differently. It looks to me like your rotation is correct (depending on your definition of theta).
I wasn't sure `textscan` could handle this, but it looks like `%q` will read text fields that are in double quotes like you posted. Open the [`textscan` documentation](https://www.mathworks.com/help/matlab/ref/textscan.html), and Ctrl-F "Text Array".
MATLAB relies on jdk7, jdk8 will not work with it. What Ubuntu release are you running? It appears 16.04 and later no longer provide openjdk-7-jre in the repos, and it must be installed from external sources. The second answer [here](https://askubuntu.com/questions/761127/how-do-i-install-openjdk-7-on-ubuntu-16-04) will help you install it. Otherwise, ensure that you have correctly set the MATLAB_JAVA variable. This can be checked with: echo $MATLAB_JAVA If the output is empty, this variable is empty. It can be set with export MATLAB_JAVA=/usr/lib/jvm/java-7-openjdk-amd64/jre Then, execute MATLAB from the same shell with whatever command you use to call MATLAB, usually matlab In the MATLAB command window, run version -java and verify that the output contains "OpenJDK". If all is successful, you should no longer see the MEvent. CASE! error message. For a more permanent solution you will need to research how to set environment variables on Ubuntu for graphical applications at login.
What does A(i-1, j) == A(i+1, j) == A(i, j-1) == A(i, j+1) == 0 mean? Since you're doing this for homework, have a crack at putting brackets around this expression to work out what is actually being done, remembering that `==` is being evaluated from left to right. It might help to consider the example 1 == 2 == 3 == 0 which returns `true`
Ah, that makes a lot of sense. Thanks a lot! Yeah, we only use Simulink to set up our equations, and simulate it without writing a sentence of code. I should definitely learn some matlab. 
There's no way to know. If they're trying to communicate, they sure as hell aren't doing it correctly.
[removed]
If people have problem's with someone's question or answer, they really should contribute. This is why the sub defaults to not having a downvote option. But a quick browse and you can find loads of good questions with plenty of downvotes, yet no replies as to what made it bad to begin with! 
Yup I am doing that, thanks for your help. I've got to run to my next lecture but I will likely be back :P Thanks
Thanks. That looks like what I was thinking, I understood, just wasn't able to write it. Thanks a tonne.
You didn't ask, but if you're dealing with files in Matlab, check out a Matlab version of `glob` [on File Exchange](https://www.mathworks.com/matlabcentral/fileexchange/40149-expand-wildcards-for-files-and-directory-names/content/glob.m). It is an awesome tool for dealing with lots of files of potentially long names. For me, I like to automatically append the date &amp; time on my file names so I do not clobber them later. This is a huge help!
Let me preface with saying that I am not talking about the trolls. There are always going to be people who downvote everything. Now, you said: &gt; people asking questions as this is literally what this place exists for. I think there are a lot of views on the reason this sub is here. Is it to share news, tidbits, thoughts, etc? Or is it to ask questions. I personally think it is both. But, we do get a lot of questions that could be easily answered with a bit of searching, or even just some critical thinking. I would love to see a separate community like /r/beginner_matlab or something like that. There will always be cases on the border of what is beginner vs more advanced, but there are also tons and tons and tons of questions on here that are not in the grey area. A strong moderation to move those questions there (and delete them here) would make it less painful in this sub. Again, blatantly downvoting is trolling but when you ask a question that can be answered with a little bit of effort on your part, or you just post your homework, then being downvoted is well deserved.
Well I've tried using circshift and a for loop to try and create a simple plot that updates every second of a point moving randomly. r1x = [1,1]; %starting position hold on axis([0 100 0 100]); for T = 1:200 plot(T,r1x(T,T),'b*') r1x = circshift(r1x,round(20*rand(1)),round(20*rand(1))) pause(0.1) end I get an error but I'm not sure where to go from here. Let's say the circshift works, random scatterings of points are created and towards the end of the y-axis. How do I update the plot so that the old points are deleted, and how do I make the points seem less like random scatterings over the entire plot and more like a racer with a clear path through the 2D axis? I doubt the if conditions will be too bad as I can just add them ontop when I've got the basic functionality down, which I'm not sure how to accomplish. 
[removed]
Give enough information so that anyone could replicate your problem. Until then no one will be able to help you.
A few things: 1. *rlx* is a 1x2 vector, but the call *rlx(T,T)* is trying to return the element from the *T*th row and *T*th column of rlx, which doesn't doesn't exist for *T*=2 and beyond. 2. *circshift* shifts the elements of an array along a specified dimension. I don't think it's the function you're looking for. What you really want to do is something along the lines of rlx = rlx + round(20*rand(1,2)-10) which updates your current position to a new position that is somewhere within ten spaces either way in both axes. 3. If you want to update the plot so that old points are deleted, you want *hold* to be off.
No prob!
You already defined x at the top of the script. Your loop should instead use: for [variable] = x
 % the function of y changes based on x's value clear close all clc % x = (-0.0005: 0.00001: 0.003); for x = linspace(-0.0005,0.0005,100) y = (4000 * x); plot(x,y,'b*') hold on end for x = linspace(0.00051,0.0015,100) y = (-0.5 + (6000*x) - (2000000 * x^2)); plot(x,y,'g*') hold on end for x = linspace(0.00151,0.003,100) y = (3 + ((4000*x)/3)- ((4000000 * x^2)/9)); plot (x,y,'c*') hold on end
Wow, thanks for this. I am an idiot. What I am trying to say is if the pixel I'm evaluating plus the pixel above and below and on each side is 0, then make that pixel in D = 0. Can you quickly explain why 1 == 2 == 3 == 0 is true?
Hint: it's the same as ((1 == 2) == 3) == 0 
Thanks for your response! I tried using `%q`, and this works for "Russia, Asian part", but names containing a space like United Kingdom will result in 'United' because the string is cut off at the space. Basically the solution would be `%q,` if the name starts with ", and `%[^,],` otherwise. But I don't think textscan can handle these kind of conditional formats. The easiest solution is probably to use `%[^,],` and fix the names that have been split in two afterwards.
What I understand from it is this: Does the phrase 1 equal 2, equal 3? No it is false
Going from innermost brackets outwards 1 == 2 is false false == 3 is false false == 0 is true So that's what gets returned. If you want x and y to both be zero, you might think it is x == y == 0 but what you actually mean is x == y &amp;&amp; y == 0 However, it's usually clearer to write x == 0 &amp;&amp; y == 0
I agree, all I want is X and Y coordinates mapped as an image as the result. IDK if its easiest to use MATLAB or if you have any other suggestions with what program could use to complete this task.
The character '3' has ASCII code 51. Try using str2double.
You need to find a collaborator. This is not a trivial problem.
Off the top of my head, I would use a recursive method looking something like this: * Loop through all of the bills you have * If the current bill is less than the total dollar amount, call this function with the dollar amount reduced by the amount of the bill and the number of bills reduced by one. This returns a list of combinations. Append the current bill to each combination and add them all to your master list of combinations. * If the current bill is equal to the dollar amount and the number of bills is 1, add it to your master list of combinations * At the end of this, you will get a bunch of combinations that are the same bills, but in different orders. If you don't care about order, I would sort each combination and then sort the list of combinations. This puts duplicates next to each other, which you can now go through and remove. My method is not very efficient, but I think it's easy to understand. This problem is a variant on the knapsack problem, which has a number of solutions, none of which are particularly fast (it cannot be solved in polynomial time). Dynamic programming would probably be your best bet if you really wanted to write something efficient. I'm not sure how much the restriction on the number of bills modifies the asymptotic limits of the problem though.
have you considered a binary threshold? otsus method? A key question is whether, for each frame of the video, you are interested only in a detection of the pixels that contain eels or whether you want to use a tracker. One is an instantaneous measurement for each frame and has no bearing on past or future values while the other uses history to give an optimal result. if the deals are sufficiently separated from the background in color space then he detector is the easiest solution.
Yep, that looks like it should work. You should be able to use the array you make in the first step to index into an array of actual bill values and make everything else really easy.
Oh, I see. Yes, almost right. But, it outputs as separate. I need to output both ln and fn together and in lowercase. That is my main problem
You can concatenate strings as follows: str = [str1, str2] or you can use the strcat function: str = strcat(str1, str2) 
Computer vision of this sophistication is a PhD thesis on its own. Also, don't edit the examples that come with Matlab. That's a terrible idea. 
Hey I have concatenate them as following http://pastebin.com/tTaT4HhK But, now what can I do so that the second string (fn) only outputs its first character?
 num_rows = factorial(7 + slots - 1)/ (factorial(slots)*factorial(6));
Yeah you probably should get rid of the input lines. Just change out your function line at the top with the one I gave you. And your variables for first and last name are the firstName and lastName variables in the function header I mentioned. You can call your function by just typing it into the command line with the inputs you want: "username(barack,obama)" and it should output the answer that you've set as the "output" variable (again see function header) in your code. Remember you have to be in the same directory as where you saved your function to run it from the command line.
The way you wrote it out should give you a clue. For instance, the first 7 entries could be written as: output(1:7,1) = v(1); output(1:7,2) = v(1:7)';
One thing I'm looking at now is this. If v = [100 50 20 10 5 2 1], and I have only 2 columns, they'll follow this pattern (which is obvious but I'm going to start here and try to generalize for any given number of columns): Col 1 7 entries of v(1), 6 entries of v(2), 5 entries of v(3), 4 entries of v(4), 3 entries of v(5), 2 entries of v(6) and 1 entry of v(7) Col 2 v(1:7) followed by v(2:7) followed by v(3:7) followed by v(4:7) followed by v(5:7) followed by v(6:7) followed by v(7) I don't know how to generalize this for say.. if the user says, 35 columns/slots (which would be ridiculous at nearly 4.5*10^6 rows and 35 cols.. but still..) If I have 3 columns/slots, the first column will instead have 15 times v(1), 14 times v(2), 13 times v(3) etc for total of 84 rows. ***Edit: The more I look at this, the more I think it's not possible without the use of functions I've not heard of yet.***
Thanks!
I'd recommend opening the txt file through Excel, which will convert it into a nice table for you. Then just use xlsread('filename.xlsx') to load the data. Takes less than 5 minutes http://i.imgur.com/4zPQX1E.png
Yep that's right :) Another way of thinking about it is to realize that `==` is just a function, `eq()`, but it's special because you can call it using the symbol `==` and putting it in between its arguments. That is, a == b eq(a,b) are different ways of writing the same thing. So 1 == 2 == 0 is the same as eq(eq(1,2),0) whereas x == 0 &amp;&amp; y == 0 is the same as and(eq(x,0),eq(y,0)) 
 V = [100 50 20 10 5 2 1]; S = 2; n = length(V); B = []; I = ones(1,S); while sum(I) &lt;= n*S A = V(I); B = [B;A]; ii = length(I(I~=n)); if ii == 0 break end I(ii:S) = I(ii) + 1; end B
Please don't just do homework for people. Helping is fine, but we should provide tips, not solutions. 
To be fair, this was only one step, the only step I couldn't figure out, and one that I may not have figured out at all on my own. But I understand why you are asking in general for something to not be done for someone and rather helping with tips/resources/etc. The full solution to my original homework problem: function combinations = currency_combinations(dollar_amount, num_bills) % Takes inputs: A dollar amount and a number of bills % Outputs: All combinations of requested number of bills % that add up to the requested dollar amount % Format is an array where each collumn represents a dollar type % and the rows represent each valid combination. The numbers representing % how many of that dollar type. The columns are ordered thusly: % $100 $50 $20 $10 $5 $2 $1 dollars = [100 50 20 10 5 2 1]; % Creates all unique combinations for specified data set 'dollars % and specified number of bills 'num_bills' /notmycode/ combos = dec2base((0:7^num_bills-1)', 7) - '0'; combos = sort(combos, 2); combos = unique(combos, 'rows'); combos = dollars(1 + combos); % creating an empty array of needed size combinations = zeros(1,num_bills); % sum of each combination to compare to dollar_amount row_sum = sum(combos,2); % how many rows we have to compare iterations = length(row_sum); % used to add solutions to combinations array k = 1; % compare sum of row to dollar_amount and if solution found, add to array for n = 1:iterations if row_sum(n) == dollar_amount combinations(k,:) = combos(n,:); k = k+1; end end % convert array for HW ex. [100 100 20] -&gt; [2 0 1 0 0 0 0] % Not written yet % for when there is no solution if k == 1 combinations = []; end end
/u/Weed_O_Whirler is right, I really shouldn't have just posted a solution like that. Same for /u/sings_in_the_shower (whose solution is much more efficient than mine, btw). OP, if you are going to use one of our solutions, you should try to describe what every line is doing. That way your instructor (and more importantly you yourself) will know that you actually understand it.
That's certainly my goal right now. It'll probably take me a little while to interpret how your code, or sings_in_the_shower's code works. I'm a noob with MATLAB and my class is a 1 credit hour beginner MATLAB course. We haven't even learned sort, dec2base, or unique.. though they seem pretty self-explanatory. I'm really curious how my professor expected us to do this assignment in the first place considering we've only been told about very few functions. 
Since OP has already been helped, my solution: v = [100 50 20 10 5 2 1]; [x, y] = meshgrid(v); combos = [x(:) y(:)]
Something something [relevant xkcd](http://xkcd.com/1425/).
[Image](http://imgs.xkcd.com/comics/tasks.png) [Mobile](https://m.xkcd.com/1425/) **Title:** Tasks **Title-text:** In the 60s, Marvin Minsky assigned a couple of undergrads to spend the summer programming a computer to use a camera to identify objects in a scene\. He figured they'd have the problem solved by the end of the summer\. Half a century later, we're still working on it\. [Comic Explanation](https://www.explainxkcd.com/wiki/index.php/1425#Explanation) **Stats:** This comic has been referenced 898 times, representing 0.6709% of referenced xkcds. --- ^[xkcd.com](https://www.xkcd.com) ^| ^[xkcd sub](https://www.reddit.com/r/xkcd/) ^| ^[Problems/Bugs?](https://www.reddit.com/r/xkcd_transcriber/) ^| ^[Statistics](http://xkcdref.info/statistics/) ^| ^[Stop Replying](https://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=ignore%20me&amp;message=ignore%20me) ^| ^[Delete](https://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=delete&amp;message=delete%20t1_d9lfhqm)
Maybe you have to update the gui like you have to do with plots sometimes? Try adding a line with "drawnow ;" before the if statement
That's it! Thanks!
Here's a quick and very dirty way to assemble the combinations: Total=20; numBills=2; bills=[1 2 5 10 20 50 100]; cell_of_bills={}; for index=1:numBills cell_of_bills{index}=bills; end combinations=combvec(cell_of_bills{:})'; I will let you figure out how to prune the unacceptable combinations (it took me two more lines of code using Total as the goal amount). Although this method gets exponentially worse with increasing bills and starts to fall apart around 9 bills (roughly 40.3 million combinations). -ItDoesNothing
This is pretty kool. It's not something that'd work for me but it's interesting. What you have there is permutations w/ repetition with S = 2. I could make it S = 3 if I added a variable -&gt; v = [100 50 20 10 5 2 1]; [x, y, z] = meshgrid(v); combos = [x(:) y(:) z(:)] I guess this concept might could be used if I got rid of the duplicates.. and had a way of specifying the S value (number of columns) on the fly. Still, I haven't ever used meshgrid (It's a 1 credit hour class so don't be too surprised by that) so this is really kool.
Yea, I did see that. Even downloaded it but then decided not to use it. It is a start since it does all the permutations but I'd have had to delete all the duplicates (1 2 and 2 1 would be considered duplicates since I want combos not perms).
Undefined function or variable just means you haven't defined the value you're trying to reference. When you run a function in MATLAB, it has a separate workspace from the script or function you call it from. This means that when you call it, it doesn't know what you're referencing with 'kO'. The easiest way to fix this is simply to include each of the variables in the function input, i.e. function dxdW = balancemat(W, x, kO, CO0, etc.) In the future, you can check for errors like this by using the debug tool, and placing a breakpoint where you hit an error. Then you can check what variables and functions are present, and figure out what the next step has to be in the command line interface. Also, the reason the other case you tried worked is that it is an anonymous function, which runs the function within the current workspace instead of creating its own.
 a= ones(10,5) b= rand(6,5) a(3,:)=a(3,:)+b(1,:) This example I made up should help.
Just got the whole system of ODEs working, but thanks for the reply. Yeah, now that I recall, when I was using Simulink I would sometimes input the variables into a MATLAB function block and would declare them all like you said. Will keep it in mind for the future! ;)
You could sort r and then count the number of times the difference is zero. c = sum(diff(sort(r)) == 0)
an interesting approach would be to create a histogram by taking advantage of the HIST() function. help hist N = hist(Y) extra hint: To reduce the number of bins (M) to exactly what you are looking for, you would want to have same number of bins as there are unique elements of your array. N = hist(Y,M), where M is a scalar, uses M bins. 
It seems that you are being super thorough and any normal person could understand what you are saying and fix it. With that said, I am not normal and can not figure it out. I had to import excel data and use all that information. I tried what you have suggested but still can not figure it out. If you wouldnt mind, could i direct message you a copy of all my code?
[memmapfile](https://www.mathworks.com/help/matlab/ref/memmapfile.html)
it replies "It's your karma". for the lazy. :)
vectorizing the code will usually give better performance than parfor, though, if it's possible to do so
The problem is that `springc` starts as a string, thus `springc &lt; 0` tests each character of the string to see if it is less than 0. Thus, `springc &lt; 0` actually returns a vector, not a single number, thus it cannot be use as a logical condition. 
If saving and loading data is a big time sink, I wanted to suggest you try re-casting and/or compressing the data. Do you have a lot of data stored as doubles that could be stored as singles, or even int16? Just going from double to single would cut the amount of data that has to be loaded into memory in half. You can also find data compression algorithms on the file exchange. For example, you can easily find implementations of the "zip" algo, which can compress data down to half or even a quarter of its original size. If you decide to try data compression, when storing the data, use the "hidden" MatLab built-in getByteStreamFromArray, which turns any MatLab variable into a uint8 vector (convert back using getArrayFromByteStream). Then compress that uint8 array, and save the resulting array. Also: Are you often loading large files / variables when you often need only part of what you're loading?
If you're used to working with other programming languages I'm guessing you may have anticipated the answer to be 12. However, since indexing of values in Matlab starts at 1 instead of 0 (like most programming languages), b(2) is 11.
Is this an exam paper from Murdoch University? I had that unit last year.
I tried playing around with parfor last night and found a fairly large speedup on a nested loop. I used to time each cycle of the loop with tic/toc to provide information on how long it was running for and how much longer it needed to complete the loop. That no longer works due to what you mention about a=a+1, I need to rewrite those chunks. It seemed as though what normally took around 80 minutes was dropped to about 20-30 minuets on a pool of 6 cores. I think a portion of my Monday will be rewriting a lot of the code to make use of everyone's suggestions. This is all great stuff.
I'm having trouble seeing how vectorizing code would make it harder to "see" intermediate results. The kind of recursive process that you would want to see intermediate results for, I would think, wouldn't be vectorizable anyway. But even so, I would ask the question: For the time consuming but vectorizable portions of your code, is the speedup from vectorization great enough that you could afford to do an entirely separate calculation to get the intermediate result?
Hmm, reaching back to linear algebra, I think you can represent your system of equations as a matrix and check to see if the the determinant is non-zero or something. I can't really remember the details, but I'm pretty sure there is some matrix method that will prove whether this system is solvable or not.
Yeah, I'm not sure. I think you can do linear matrix transforms on non-linear equations just fine, but that's really reaching for me. Maybe ask the guys over in /r/math...
Thanks! I'll try researching more on the while loop, hopefully i can get it to work. =)
You might be able to do it with fsolve. Write function F = homework(x) Your equations will be F(1) = - x(1) - x(2) - x(4)*x(12) + constant. Then in another file do fsolve(@homework,initial conditions). All your initial conditions will all be zero if you decide to leave the constants in the function file.
Good to hear! I tried it myself but couldn't seem to get solutions to the last three equations lol. EDIT: just kidding, changing those initial guesses like you said to something non-zero helps. 
please + the answer and mark as solved if it helped!
I suck at maths so can't tell you about that. But I can tell you to check out *doc cosd* cosd needs an input argument (I'm guessing you want the cosine of delta?) currently you are multiplying it by various variables. This will be the same for sind. So when using them they need to be like *cosd(*variable*), sind(*other variable*)* After that, you'll find no output when you call it. Either -thetai and thetai need to be unsurpressed (untidy) or you need to put *SunRays = -thetai* / *SunRays = thetai* (tidy). Overall tip, the great thing about matlab over other things computer related is that the error messages are actually trying to help you. It's not a microsoft "you're boned, good luck" message, I think most people are conditioned to see error messages as just something pointless. But if it returns "error cosd, not enough input arguments", click the word that is underlined (cosd) and look at the documentation to see what it's requirements are regards input arguments! Hope that helps. 
Don't have Matlab installed atm so can't check your work, but; If it were me, I'd cycle along the entire list, have a variable to store the previous value (1 or 0), have a variable 'count' to store how many in a row, have a variable 'result' to be your final answer, check to see if the next value == previous value, increment count, else result = [result; count previousValue] (will add "how many in a row" of "1 or 0" to the bottom of the list). Then make sure to reset count to 0 after adding each new row.
edit: I've some what managed to do what u instructed. However, i can't run it for more than 3 iterations. http://pastebin.com/embed_js/QXLj3w1w Would those unnecessary symbolic variables create any problems in the coding? Cause im kinda using it to help me when writing the equations, so i won't have to remember the values of each variables. Thanks!
I think others have addressed it, but why are you trying to solve this symbolically rather than numerically? I saw you mentioned that you suspect there is a solution due to the set up. May I ask why? Many (interesting) physics equations which model real life do not have analytical solutions (I know, kind of mind boggling). That doesn't mean they don't have solutions; it just means they are not a closed-form analytical expression. If they did, most computational scientists would be out of a job.
Happy to help! Here are images showing why that `caxis` choice is dangerous. Your data's distributed in a way that makes it look fine, but consider what else the code generates. Choosing color by order and `caxis([min(peaks) max(peaks)])` shows the problem: http://i.imgur.com/l3qq956.png Choosing color by peak value instead with the same `caxis` shows the fixed approach: http://i.imgur.com/5DwawOJ.png To select color that way, I made two sets of changes. First, you'll want enough levels in the colormap to discretize your range instead of having one per dataset. % Generate an appropriate colormap numLevels = 128; cmap = colormap(parula(numLevels)); Next, you need to find where each peak value falls in the colormap range. You can do this by scaling the peak values to the `[1 numTraces]` interval, done in two steps below. Since we don't need to plot the traces in order, that step is removed from the old code. % Plot the traces with color set by max value figure;hold on for idx=1:numTraces peakRatio = (peaks(idx) - min(peaks)) / (max(peaks) - min(peaks)); peakRatioIdx = round((numLevels-1)*peakRatio) + 1; traceColor = cmap(peakRatioIdx,:); plot(x{idx},y{idx},'color',traceColor) end
`doc text` ;) Identify the point you want to annotate (`find` may help) and you can use `num2str` to convert any value to a text string for the label.
Hm.. haha it's hard going from specific lines of code on what to do to vague general terms but thank you! I'll do my best
Thank you. It is interesting . But format is so bad.. Is it possible to download it in pdf??
Yes, it is.. Please learn how to google something, you stupid.. http://www.rsipvision.com/ComputerVisionNews-2016November/files/assets/common/downloads/publication.pdf
On the bottom left corner. I agree with you it has some very interesting articles (at least in my field), but the layout is just weirdly inconsistent. 
Is there a way to make it a scatter plot? 
I can only use one x vector in the scatter function. Is there a way to use scatter but with X1 and X2? 
So you will want to have multiple scatter functions. Possibly like this: scatter(x1,y,'g') hold on scatter(x2,y,'r') 
Okay. Thanks for the help 
It sounds like `handles.figure1` is actually an *axes* handle, not a *figure* handle. Have you tried using `set()` on the `Parent` object of `handles.figure1`?
I have, but I keep getting an error saying that they need to be logical or positive integers.
hold on is the clutch part
Haha, I just found this recently trying to integrate velocity and position from acceleration data. 
why not?
sad but true
What you are trying to do is an optimized convergent solution, which can be a little tricky and may not even exist. Lucky for you, it does! Firstly, you can cut the while loop short since you are only looking for F and G, you can place the end statement after you find those values to compare. Now for optimizing, this is where it gets fun. You want something to compare against, so I created variables called Fprev and Gprev, to store the previous F and G values. Next, I made the dx1 and dx2 change very small, 0.0001. This will give us a good convergence step to work with. Now for optimizing, we don't know if adding or subtracting that value from x11 and x12 will make it converge, so we will start with both adding. But we need a way to change that sign if the code sees that we are diverging, which is where this comes in: if (round(abs(F) - abs(Fprev),6) ~= 0) &amp;&amp; (~mod(iterations,2)) if (abs(F) &gt; abs(Fprev)) dx1 = -dx1; end end if (round(abs(G) - abs(Gprev),6) ~= 0) &amp;&amp; (~mod(iterations,2)) if (abs(G) &gt; abs(Gprev)) dx2 = -dx2; end end So what does this say? Well follow it along. First, it checks to see if the difference between F and the previous F value is not equal to 0... (round(abs(F) - abs(Fprev),6) ~= 0) If this is true, then check if the iterations is divisible by 2... (~mod(iterations,2)) ... because if we change the sign every iteration, then they will continuously cancel each other out, and wont converge. If both of these conditions are true, then check to see if F is greater than the previous F value. if it is, then we are not converging, so we need to step in the opposite direction... dx1 = -dx1 and repeat this for G. In the end, it converges to x11 = .0840 x12 = .9338 [Here](http://imgur.com/a/K5yqu) is a nice little convergence plot for you too! and [Here](http://pastebin.com/gUB8GbxG) is the updated code. This is a really hard problem so I thought I'd lay it out as thoroughly as I could. EDIT: ideally you'd want to decrease the step size as you get closer to the convergence, so you can play around with a way to do that if you want!
In order to solve a system of equations, you need as many equations as you have unknown variables. Lucky for you, MATLAB's solve functions is incredibly smart, and knows how to manipulate the equations to solve for every variable. doc solve How you set this up is pretty easy. First, declare symbolic variables. Then set up the arguments as shown: syms variable1 variable2 variable3 [solution1, solution2, solution3] = solve([equation1,equation2,equation3],[variable1,variable2,variable3]) where equations are equations are set up like this: equation1 = (type equation here) == (type rest of equation); so in this case, one of your equations would be syms V1 V2 eq1 = 11*V1-2*V2 == 30; I'll let you go from there :) Edit: words
No worries. Don't be afraid of the documentation qs it's bril and Matlab is pretty good at helping you figure out your mistakes. Remember to flair the question as solved and + any comments that helped!
Introduced in R2014b. I looks like a better way of doing "memmapfile" if you have an older release. 
I don't know what your asking but if you want to get your graph to look like Plot A then you need to impulse the closed loop transfer function not a step. A step response looks very different to the graph you have there.
can you have 2 keypressfcns tied to a single fig? Would need to have two defined keys as pressable and passing to different functions and I've not figured out a way of getting that to happen, let alone make one play a sound when depressed, but not when left alone.
right, but here is where I'm wanting to avoid either having an if or while loop which is the way I've done keylogging in the past and I can't find anyone else doing it much differently to that yet I'm wanting to act.. I guess real-time?... so that one or both buttons can be pressed, settings can be changed and buttons pressed again etc etc.
+ righto! will have a bit more of a fiddle and if need be, I'll try and make an automated programme run the aspect of the button presses though not ideal.
You mean like Tai's method? /s
Have you tried adding y1 and y2, and just playing the output at Fs?
You have been banned from r/planetside.
Well, to get a certain tolerance, you have to go out a certain number of terms in the infinite series... that's just how the math works. (In fact, for a 10x increase in # of terms, you get almost exactly a 10x increase in precision. E.g. for 10,000 terms, the error is about 9.55e-5; for 100,000 terms, the error is about 9.55e-6; etc.) If you are looking to speed up your code in general, though, here are some tips: * Stop doing `disp` every run through your loop. Printing stuff out to the screen is a zillion times slower than doing the actual calculations. You could potentially speed up your code by a factor of hundreds just by doing this. * Similarly, stop storing values in `A` every run through. Partly because you don't seem to use the values in `A` anyway. Partly because increasing the size of a matrix is another super-slow operation in Matlab. Partly because there is a bug in your `for` loop so it isn't working the way it should anyway. So just cut out that entire `for` loop and you will speed things up quite a bit. * Edit: Whoops, just re-read and remembered that you need what's in `A` eventually for something else. Well... I'd still get rid of it until you figure out some of the other stuff. And if you NEED to save all those values, at least you can clear up the bug that's in your loop. And it will also save a lot of computation time if you pre-allocate `A` to be at least as big as it eventually needs to be (e.g., `A = zeros(10000000, 2);`) so Matlab isn't constantly having to resize it. Storing a value in an already-big-enough matrix is WAY faster in Matlab than extending the size of a matrix by a single row in order to add a new value. Now, if you want to get really smart about it, you actually don't need the `while` loop either... or at least, not unless you want to get down to pretty small tolerances. I can actually do the first 100 million terms of the sequence in a *single line* of code that takes about 1 second to execute, giving me an error of around 9.56e-9. The downside is that the memory requirements of doing it my way go up with the number of terms pretty steeply; doing 100 million terms takes about 800 MB of RAM, although only for that 1 second that the code is actually running. (Note: if I actually wanted to save every value in the sequence instead of just the final result, that would require me to continue using that 800 MB of RAM beyond the 1 second that the code was actually executing.) Still, to go up another order of magnitude would not work great and at that point I'd have to employ a new strategy. I won't give you the full one-line solution since this is homework, but here are some lines of code to evaluate in Matlab to get your thinking started: 1 ./ (1:10) (1:10) .^ 2 sum(1:10) Good luck!
PS: The Matlab debugger is your friend. Learn to use it! Set a breakpoint at the top of your script. Then step through every single line of code, one line at a time. Each time you step through a line, inspect the values of any variables that were supposed to change on that line. (Matlab makes this pretty easy... for smaller values, you can just hover your mouse over the variable name while stopped in the debugger and get a little popup with the value of the variable.) As you step through and inspect the variables' values, see if things change when you don't expect them to, or don't change when you do expect them to, or change in some way you don't expect. Then figure out why!
Thanks for the response. I should have mentioned I'm required to use a while loop for this problem. I'm required to run this code for a tolerence up to 10^-12 in 10^-1 increments. After 10^-6 the code starts taking more than an hour to compute an answer. At first I was simply going to let it run overnight, but a classmate with a similar problem let me know that a TA had written a code for him that brought the number of iterations needed way down(for example, with a tolerence of 10^-4 my code goes through 9549 iterations, whereas my classmates was around 90.) The A matrix stores values needed to plot Nth iteration vs Pi for another part of the assignment. I need to disp the running tally of the iteration and pi estimate for the 10^-4 tolerence but not for the higher tolerences, so I will see if that decreases the time needed significantly. Thanks for your code, I'll see if I can incorporate something similar for my own problem.
did you take the second output? which is to say did you do this: [xO,yO] = circcirc(0,0,10,11,0,2) and **NOT** this: THIS IS WRONG: xO = circcirc(0,0,10,11,0,2) 
Yes, unfortunately I'm required to use that formula.
That is strange. I wouldn't predict it-- each time you run the code, it should read the current position of the servos. That being said, I've never used the arduino libraries with Matlab. I would check there first-- I don't see you setting the default angles anywhere. Print out the results of readPosition() calls? See if it's what you expect each time. If not, figure out why. 
Hello, thank you for replying. It moves to (10, -20.3, 10) (please see lines 50-52) each time it runs. The readPosition calls are generally in the right direction (some very slight % offsets). The robot is on top of a grid that is used for coordinates.
Have you tried using, for example, `assume(0 &lt;= Pan &amp; Pan &lt; 2*pi)` to set limits on every variable in your trig terms? I don't have a good sense for how tractable this system of equations is, but setting boundary conditions is probably where I'd start.
Don't you remember the days when you could read the doc all day without realising the answer is right in your face, but you fail to see it because coding comes with sooo many specific terms with specific meanings that documentation is just a bunch of difficult words? You're right, the doc is the answers 99% of the time (thats how i solved this), but maybe some tips on how to read it would be more helpfull.
No worries! Just trying to keep it beneficial for students. It's great to see more people interested in helping out.
Thanks a lot! That's exactly what I was looking for.
What is the other data in the cell array? Numbers, strings, both? 
Try using the fact that NaN is not equal to itself. You can use a loop and an if statement to check each cell. 
Check out the last post I made on [this thread](https://www.reddit.com/r/matlab/comments/5bf8ny/need_help_with_creating_an_iterative_code/). run the code that's linked at the bottom and read my explanation of what's going on and see if that helps you. 
You can't store a vector of length 44100 into the element v(n). Here's what I would do. Take your square wave equation outside the for loop and make it a function of n and signal length. Looks something like this v = @(n,dt) 1/n*sin(n*2*pi*f*dt); Within the for loop, just evaluate the new harmonic # along with the dt vector, which looks like y = y + v(n,dt) Lastly, the square wave is an odd function, so you need to sum every other harmonic, so your for loop looks like for n = 1:2:Nh Your n = n +1 doesn't really mean anything btw as far as computations go. The for loop keeps track of n. 
Working from memory here, but this should be pretty close. theGivenNumber = pi; usersDecimalPlaces = input('What number of decimal places? '); usersDecimalPlaces = int( usersDecimalPlaces ); formatStr = sprintf('Your number is %%0.%df\n', usersDecimalPlaces); fprintf(formatStr, theGivenNumber); The idea is that you create one string using the desired number of decimal places, then pass that string into fprintf to generate the actual output with the given number. I might have a typo because I'm not sitting in front of Matlab, but it should be something along these lines. For example, if the user were to input '3', then the code above should yield fprintf( 'Your number is %0.3f\n', theGivenNumber) 
Look into setting the variables in your ~/.xinitrc file. Add export MATLAB_JAVA=/usr/lib/jvm/java-7-openjdk-amd64/jre to the end of this file. Log out, and log back in (or reboot). Launch MATLAB from the application drawer, and verify again that the output from version -java contains OpenJDK.
Thankyou this worked perfectly, I had been confusing myself with the for loop alot! thanks for the advice :)
remember to mark as solved and give +'s where deserved :)
brilliant
well, probably it does not give you only ones, but the first 10 digits (or something) are 1.00000000 so you only see the ones. How about displaying it after you subtract 1 to the result array? 
 &gt;&gt; sprintf('%3.32f\n', exp(5*1e-9)) ans = 1.00000000500000000000000000000000 or &gt;&gt; exp(5*1e-9) - 1 ans = 5.0000e-09 Seems to be working for me
I will look into this, thanks for your help!
Thank you. Will do!
Thanks, it'll take a bit to wrap my head around that
When you tried it, did the result help you understand? 
I figured it out actually, it removes all indexes between (j-1) and (j+1) So for [1:10] if i did [1:0,2:10], the only index between 0 and 2 is index 1 therefore after removing index 1 i will get a vector [2:10]
Nope. What happens if you do A = (1:j-1) B = (j+1:n) C = [A, B]
The basic concept would be: 1) generate a list of the file names using the dir() command. 2) create a 'for' loop that iterates through each of the names in the list 3) within the loop, use 'load' or 'read' commands to load each file, one per iteration (look through the docs to find the appropriate method for the file types of your stored data, and for skipping lines/strings) 4) perform the operations you need within the loop, and save output to variables or write to save file
That's the same thing
Exactly. Did you see what is happening to create that result? 
Yeah that helps me understand more, thank you!
 z='3*x1^2 -2*x1*x2 +x2^2 -1'; % formatted first line Tricky issue. `C` is a cell array, so we should check the `strfind` documentation. &gt; * If str is a string, strfind returns a vector of type double. &gt; * If str is a cell array, strfind returns a cell array of vectors of type double. This means `temp == {[]}` where you're expecting `temp == []`. The vector is empty, but the cell array has an empty vector inside so the cell array *isn't* empty. That's why you're getting an unexpected answer from `isempty()` in that case. I think the best way to fix this is to do `temp=strfind(C{i},'x');` instead so that you're getting the output you expect. *Alternatively,* you could do your `isempty` test on `temp{1}`.
One other note on code formatting: I personally prefer to write `if isempty(temp)==0` as `if ~isempty(temp)`, just seems easier to read to me. I'd love to hear if others think there's a best practice on that.
Very informative responce. I haven't been using matlab for long so i may need to read again about the way cells and vectors work in this program. the entire output during the original run was: [3] , [1x2 double], [2], {[]} this is why i was confused over why it was suddenly returning a cell instead of a vector the C{i} made it work, Thanks again!
Yep! It's odd how the brackets are displayed in the output; all 4 of those were always elements of a cell array. Confused me at first looking at this as well.
i like to write != or ==false more, maybe its just because that way it shares the same formatting as other conditions so it's easier to compare when looking back.
I have been given this as a project to complete and am struggling a little. I have created the three-phase inverter on Simulink and fed the output to the AC machine. I am struggling progressing from here for a couple reasons and am curious if anyone could help! 1. How do I, from a fixed DC source, use an inverter as a soft starter? 2. Using the table of characteristics given for the AC machine, is it appropriate to use X=2*pi*f*L to convert the values to inductances for Simulink or can I not do this method as it isn't a true AC source into the machine? 3. How would I go about adapting this model to show direct on line starting and easily switch this to soft starting?
Do you really need to do this via string manipulation? This seems like a terrifying way to handle this. 
Check out the documentation for polyval and related functions. 
Another option suggested to me in person was to write it out as a PNG file using saveas() and then read it back to a string using fileread(). The programmer in me balks at going to disk just to work around a limited API but then again the RF weenies who wrote this thing in the first place apparently needed to pop up a display window in order to create a graph. 
I know I already said it but really thank you for helping me out and taking the effort here. I had a look through the code and it makes sense to me for the most part. I'm quite new to matlab so this may be a silly question, but on lines 41 and 44, why do you use two if/end as opposed to one if/elif? Also onto the more interesting stuff, I realise my initial assumption about my problem was wrong. I thought I was going to have to deal with two changing variables, but I believe it could be many more than that. What I want to happen is for the end user to specify a terrain, and then ask the end user how many pylons they would like to optimise the run for. To give you a better idea of the terrain and what I'm trying to optimise, heres a link to one of the sections http://pastebin.com/PyeRVxAr. Mind you the code isn't great... I doubt I will have the time to actually do the optimisation for my report, so I'll probably just go with user defined terrain and some other options the user will have to customise the programme. However, I am very curious about solving this. My initial thought was perhaps for n pylons over a certain 2D terrain, I could shift the pylons by some dx (maybe 1m) and then recalculate the imbalances. But with more pylons I feel like computation time will massively increase, especially since the imbalances depend on how the pylons are spaced relative to each other. I hope I explained the problem somewhat reasonably. EDIT Sorry here is the catenary_plot function that the script needs, in case you decide to run it! http://pastebin.com/qbUHdPGk
Try imwrite(img,'MyPhoto.png')
Ahh, I see! And yeah that's a good framework to work with, it just feels a bit overwhelming considering there might be 10 or more variables these depend on. I believe this is classed as a multivariate constrained optimisation problem? If so perhaps something like Lagrangian multipliers or something... 
This could definitely be a challenging task, but I think if you outline exactly what needs to converge and what variables change we can get to a descent solution. Now since this could take a while, you probably should stick with a GUI interface for now. I definitely recommend you start with the AppDesigner (if you have version 2016). Its a super handy tool with a lot of functionality that is easy to use and navigate. My entire summer was spent with optimization and creating GUI interfaces so you are in a lot of luck lol. 
i enjoy these types of experiments. some comments on your benchmarking methodology. 1. i would either use matlabs built-in 'timeit' function or take an average of many iterations of the same thing. several results appear in the noise of a standard deviation. 2. since you're benchmarking, you want to ensure matlabs not getting in the way by trying to be helpful. it does all sorts of voodoo behind the scene to anticipate and optimize execution. that is, use 'clear all' between each test. 3. goes without saying that you're benchmarking is at the mercy of the os, so the more you can do to reduce interrupts the better. last, i don't think 'arrayfun' is intended for the usage you demonstrated. matrix operations make no sense for arrayfun. but imagine you had an array of 1s and 0s and you wanted to test whether a given 1 was surrounded by 0s. that's the kind of thing 'arrayfun' would make easier, albeit not necessarily faster. 
Bsxfun does different things than arrayfun. They're not really comparable. 
Hi Golden_Hunter, I see what you mean now, thanks. I thought eventdata.Newdata was the current data of my table. What I do initially somewhere else in the code is: I get a file with uigetfile, assign it to a cell array handles.mydata with functions fopen and textscan, then costruct a structure handles.circuit and use this structure array in my algorithm. So, if I call get(hObject,'Data'), and say newdata=get(hObject,'Data'), would this newdata be a cell array like mydata(my table consists of cell arrays), or what would this be and what do I need to do in order to get it work with the structure handles.circuit ?
Do it in Java if you don't want to write to disk. 
Had to deal with this issue a while ago, I ended up using a [cell2csv](https://www.mathworks.com/matlabcentral/fileexchange/47055-cell-array-to-csv-file--improved-cell2csv-m-?requestedDomain=www.mathworks.com) function after getting frustrated with the writetable method.
Aside from fprintf as others have suggested, you may want to reconsider using a cell array to begin with. If your data is quite structured column-wise eg. A column of dates, a column of strings, a column of numbers etc. then a Table is probably a more appropriate data structure to use. In that respect, maybe writetable() isn't hacky, its using a cell array that's hacky. For the reason that a cell array both imposes very few constraints on what data can go in the cells (eg. Different sizes arrays, different data types) but also doesnt provide any tools that leverage regularities in your data. 
Thank you, works perfectly That Solved the issue. But while working I have realized that I need to load the files in a function. [pol{n} foil{n}] = xfoil(importdata(coord_seligFmt\Flist(n+2).name),' ',1); I have tried [pol{n} foil{n}] = xfoil(importdata('coord_seligFmt\Flist(n+2).name'),' ',1); And some other combinations with '. I am unable to have the matlab recognize the file when it is in a different folder. I would prefer to have it in that folder for organizations. What is the syntax to have the file recognized in that folder? Also what do I call what I am trying to do? I tried looking it up but have no relevant results, prob since I don't know what to look up. Solved. Answer for those reading is importdata(['coord_seligFmt\' Flist(n+2).name]) 
Nice work. Most of my experience with Matlab is just fighting to get syntax right.
Not sure where you need it, but exp(randn) is log normal distributed..,
There are lots of ways to do this. If you have the statistics toolbox, there are functions for generating all sorts of randomly distributed variables. You can also create a variable with a particular distribution by transforming variables of another known distribution. For certain distributions there are simple formulae for this, as noted by the other commenter.
BTW you double posted this. 
Are you familiar with StackExchange and StackOverflow? They are excellent forums for figuring these types of things out.
Break down your error - it tells you what's going on. It's up to you, the user, to correct things. This is debugging, and is important to be a good programmer. Plus you learn from your mistakes. Second argument must be a scalar or vector of length 2. Look where you define E - is it a scalar (single value)? - is it a vector of length two (has two values)? .... from where you define E, using linspace (), I'm going to guess it's neither, as it looks to be a vector length 200. I've never used fzero () myself, but if I had to guess, I'd guess the second input (and how your error reads) provides the function where to look for a root (an initial guess; or bounds for looking). It seems like you're trying to pass in all x values you use to make your function. *e: just looked at the fzero () doc page (Google "matlab fzero"). The 2nd input does look to be a guess for the zero. This is also a part of debugging- google/or ask matlab for the documentation of functions in your error. You can also see an example of the usage.
I'm not sure I understand what you're trying to do, but a common method of comparing frequency responses used for system identification is through a weighted cost of magnitude (in dB) and phase (in deg) differences. You can find the equation for this cost function here: https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20000080000.pdf (Equation 7). Typically cost &lt;50 indicated a good match. 
Hi, sorry not been on reddit over the weekend so slow reply. If you assign a cell array as your initial data for example: figure h = uitable('Data',[{3},{3},{3}]) get(h,'Data') you would get back a cell array. If you however assign a numeric array to your uitable you will get a numeric array unless the user has edited the table in such a manner that this is not possible anymore. I hope this help!
Code: whitebg(1,'k') N = 1e5;mu = 0.274219718; %(AU^3) / (solar mass * (month^2))* 1solarmass r = abs(3+0.5*randn(1,N)); %AU th = rand(1,N)*2*pi; %radians x = r.*sin(th); %AU y = r.*cos(th); %AU u = -y./r.*sqrt(mu./r)+0.01*randn(1,N); %AU/month v = x./r.*sqrt(mu./r)+0.01*randn(1,N); %AU/month dt = 1/25; %month t = 0; %month while t &lt; 50 r = sqrt(x.^2+y.^2); ax = -x*mu./r.^3; ay = -y*mu./r.^3; x = x + u*dt + 1/2*ax*dt^2; y = y + v*dt + 1/2*ay*dt^2; u = u + ax*dt; v = v + ay*dt; t = t + dt; plot(x,y,'w.','markers',1);xlabel('AU');ylabel('AU') title(sprintf('t+%.2f months',t));axis equal;axis(1*[-6 6 -3 3]);grid minor drawnow; end **EDIT**: Any physicist here? I wanted to ask if there is a way to do this in a relativistic framework without much changes?
I only checked with octave, but y = pi/2 - 4/pi*cumsum((-1).^nn' .* cos(nn'*xx)./(nn.^2)', 1) should also work in matlab. `y(n,:)` will then contain the n-th partial sum for all xes 
There are many different ways of doing this. When working in the frequency domain, often we look at either the Hankel Singular Value (HSV) or H_infinity norm of the error G-G_approx, or relative error G^-1 (G-G_approx) (note that the relative error is only well defined for square systems). 
i'll echo @eatmy... to make an animation fast you should be blitting, which is to redraw *only* what changes frames to frame. by calling plot3, matlab is spending a lot of wasted time redrawing all the non changing part. the way to achieve this in matlab is by updating the line data directly, XData, YData, ZData. 
And this is how you get expelled from school. 
We will not cheat at your homework for you. If you ask for someone to do your homework for you for money again, you will be banned from the sub. 
Won't x(1) always be the same? 
I think the only symbolic variable is n, which I think needs to be that way to work with the symbolic summation function. Is there a better way I should be doing this? lt does not get assigned a numerical value until after the fitment so that one cannot be changed.
&gt;Right now, I'm getting an error that says array sizes much match It should also give you some line numbers. Which line is this appearing at? Put a breakpoint at that line. Are the arrays the same size?