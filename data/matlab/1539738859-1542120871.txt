Mind if I ask who the author of this book is? I have searched it but have found several different books with the same title
Does each node have only 2 arms? Kinda sounds simple to me. You create a Class Node initialized with a unique ID and in the class you have a left and right node ID variable that links to the other Nodes. Then you build in some traversing code to travel the links. Or am I missing something here? 
Is the function on your path? 
You spelled it wrong in the function There's an extra n "renynolds."
I also spelled fprintf wrong. Thank you lol
You are lucky it is Matlab, because their documentation for basic stuff is halfway decent so you won't be needing to spend half your time at Stack Overflow.
Check Activity Monitor to see what stuff is hogging your "% CPU" when MATLAB is running.
I agree, the "help FUNCTION" command will help a lot, but without internet access for Googling simple things, learning MATLAB will be an extraordinary hindrance. Learning MATLAB does require lots of practice.
There's a difference using element-wise operations on matrices (using .\* or .\^ notation) and matrix multiplication (using just \* or \^ notation). &amp;#x200B; u =y and v = -x works because they x and y are both \[101x101\] matrices.
"textscan" returns a \[1xN\] cell array. So you need to assign the fourth column of the file which contains the state names (the fourth element in the cell array "file") to a variable "states\_provinces": &amp;#x200B; states\_provinces = file{4} &amp;#x200B; Then find all indices at which "states\_provinces" is equal to "California". "states\_provinces" will be a cell array of strings, so: &amp;#x200B; indices = find(strcmp(states\_provinces,"California")); &amp;#x200B; And then use those indices to find the cities whose locations are in California: &amp;#x200B; cities\_in\_california = file{3}(indices); &amp;#x200B; I suggest reading up on cell arrays.
.^ i tried earlier made no difference. what it needs to do is just plug in the x and y fo that point on the vector field to get u and y.
First of all I'm going to tell you, I realised you might feel frustrated, but don't despair. Most academic papers aren't exactly forthcoming in their implementation details, unfortunately, and also many of them have the habit of coming up with their own non-standard notation, as it seems to be the case here. As for the problem you're asking about, I don't have access to the paper and it's a bit hard to understand how to implement it just from the equation you pasted, as the notation is a bit muddy. That inverse Nabla operator makes me think of a reintegration operation (being the inverse of a gradient an integral). It's also not clear what the index _i_ is. If it's the _x_ and _y_ dimensions, then it's possible that you can implement the inverse nabla using the `cumsum` function in the appropriate direction. Using your code above: cumsum(res_x ./ sqrt(res_x .* res_x + e), 2) cumsum(res_y ./ sqrt(res_y .* res_y + e), 1) (Note the dimension of the sum: I used 2 in the first line because the _x_ direction on Matlab images is actually the second dimension. Also, note the use of the `./` element-wise division, the `/` you're using in your code is incorrect.) The Jacobian matrix with respect to the transformation parameters is crucial. I don't know what the transformation parameters are, you'll have to understand that, and then you'll have to take the derivative of the image with respect to those parameters.
 ooh the "./" could be it too, didn't try tat the .^ without the ./ did not work, will report in the morning. cheers
&gt;​u =y and v = -x works because they x and y are both [101x101] matrices. with the longer equation, are u and v stil not the same sized matrix? 
&gt;​u =y and v = -x works because they x and y are both [101x101] matrices. with the longer equation, are u and v stil not the same sized matrix? 
:) Glad I can help!
Use "whos" to tell if x, y, u, or v are same-sized matrices: &amp;#x200B; whos x,y,u,v;
Thanks for reply &amp;#x200B; How can you write Jacobian matrix while neglecting transformation parameters?
I've been using R2008 and R2010 for the last three years. A few months ago, I decided to try R2018 on the same decent i7 computer... Ridiculously slow, and that's a fresh install! Booting alone takes a minute, as compared to the a few seconds for the older versions. Anyone with an explanation, please enlighten me
I think you have mistake in `mean` part, because result is a vector not a single number... You can do this with help of convolution. A = randi(10,80);%generate random matrix threshold = 5;%set threshold A\_conv = conv2(A,ones(3)/9,'same');% create matrix with averages A\_threshold =A&lt;threshold; % create binary matrix A\_result = A\_threshold .\* A\_conv + \~A\_threshold .\* A; but result is not totally same because here you are not averaging previously computed average values...
Yeah, I should probably type mean(ROI(:)). I thought about using that or something similar to the nearest neighbour method, but since I only want to correct a specific number of entries, I am not sure if it is viabke for my case. (I don't want to introduce some distortion on the matrix)
Won’t both methods still yield sub-threahold values? If several values next to each other are sub-threshold then the averages might be sub-threshold as well
Seems interesting I will have to read through that one. But this is quite sophisticated and way out of my league I think haha I thought I can do a simple double for cicle or something like that. I don't know which other request you mean. I would like to discretize a vector which represents the marching position of water in space. And each position should have neighbor nodes or points where the water can move into. And this, somehow express it as block unit which reads the neighbor fields which I could connect as many as I wanted.
You think you could write me an example? for starters I thought only about 2 arms to have this +++ structure, but eventually later I can make it more sophisticated.. but I'd be more than happy to have something simple to start with :)
how do i do that
 Vdot(2*N+1,3*N,1) That's certainly not helping you make a 1-D array. You must have certainly meant Vdot(2*N + 1:3*N, 1) Right?
haha shit man that's what that error was, thanks a lot mate. lets just see if I can make sense of the rest of it. wish me luck
You're welcome. Best of luck!
The first key to efficiency in matlab is vectorising for loops. In some ways, this makes your code particularly well suited. The key is logical indexing, which will allow you to operate on all the elements in a matrix that satisfy a certain condition. However, the approach that you use may include some entries which have been modified and some entries that have not been modified, which makes it difficult to reproduce the exact behaviour efficiently. As other posters have pointed out, your approach to correcting errors may not be doing what you think/want. For one, it assumes that the mean of the surrounding values will evaluate to an acceptable value. Without knowing the nature of your data/problem, the most apparent solution to me appears to be replacing all values below a given threshold with that threshold value. This is as simple as the following line: A(A&lt;threshold) = threshold; If you are confident that your original approach of replacing with the average of the surrounding values is appropriate, and also that the boundaries don't need correcting, then you can get similar behaviour with the below: ROI11=A(1:end-2,1:end-2); ROI12=A(1:end-2,2:end-1); ROI13=A(1:end-2,3:end); ROI21=A(2:end-1,1:end-2); ROI22=A(2:end-1,2:end-1); ROI23=A(2:end-1,3:end); ROI31=A(3:end ,1:end-2); ROI32=A(3:end ,2:end-1); ROI33=A(3:end ,3:end); mnROI = (ROI11+ROI12+ROI13+ROI21+ROI22+ROI23+ROI31+ROI32+ROI33)/9; B=A(2:end-1,2:end-1); B(B&lt;threshold)=mnROI(B&lt;threshold); A(2:end-1,2:end-1) = B; The above code has the difference that it will operate on the entire matrix, so if A(3,4) is corrected, then A(4,4) will not use the corrected value in its own correction. The above code could probably be made cleaner - and possible faster - with higher order matrices, but this approach should work, and I expect it to be faster.
What exactly are you observing? Is your code running slower than previous versions? Is the interface lagging? Does the program take longer to start? "Working extremely slow" is a vague statement that won't allow anyone to really help your specific issue.
You want to return a cell... so you need 'uniform',false And you need to figure out how make the anonymous function inside cell fun return exactly what you want (i.e. not the first character, but the string with the first character replaced).
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/xnqzvdz.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20e7y3zz4) 
I can help if I'm available when you are assigned homework!
*thousands of mathematicians collectively cringe*
barf
Do you want to be able to select points on your graph, or associate selected points with whatever the output of your SOM function is? If it is just selecting points, try ginput. If it is selecting a point and associating with your SOM plot, it would be helpful to know what the SOM function returns in your use case. 
Thank you a lot. Since the matrix I am working with is 3-dimensional, maybe I could find a way to make it cleaner. But this is an huge advance.
Why don't you just post your questions here? That way, you can get help from everyone instead of one person?
Depends on the goal of your code and how you want the sub-threshold values corrected. If you specify these criteria I might be able to help you improve the code, however I fear lots of loops
I read the Wiki for DMX512, and it sounds like an industry standard communications protocol for manipulating stage lights over a serial port. I would start with the matlab 'serial' function (disclaimer: I have never used this library, this is something I would default to python for) and look at the Wikipedia page for [serial port communications](https://en.wikipedia.org/wiki/Serial_port). Once you have a basic understanding from that, I would dive into the manuals specific to whatever lighting setup you have. A lot of general concepts in serial port communications will need to be adapted for the specific communications protocol for your lights, but on a basic level they should function no differently than any other serial device. 
Clean up your code to make it more readable. Use descriptive variable names: nobody is going to comb through your code to figure out what "a," "b", and "z" are. Just as a rule of thumb: if you ever find yourself wanting to name a character a single variable: don't. Also, if you start a line with four spaces, it generates a code block. And you can keep going four spaces in to indent. Like this python example: for count in range(0,10): do_stuff() And on the subject of indentation, do this to indent your code. Things inside of loops things inside of if-statements always get indented. Not trying to be a dick here, but you'll get more people willing to help you if they don't have to fight your code to figure out what it's doing.
Im not at a computer with matlab 2018b atm, but my main computer runs matlab 2018b on linux mint and running `mex -setup c` set things up just fine. It admittedly uses a newer version of gcc than is technically supported, but I havent seen any compilation issues yet. That said, I imagine you could set these using setenv('CC','gcc-6') setenv('CXX,'g++-6') setenv('FC','gfortran-6') 
I'm relatively new to Matlab so any feedback is helpful! 
Hi! Thanks for replying. I guess I should explain what I'm doing a bit more. The input to my SOM is a 3xn matrix, and I have a separate cell array with the individual names of the samples which each column in the cell corresponding to each column in the SOM input. I have already been able to identify which neuron a specific column has been related to using vec2ind on the network. Once I plot both the neurons and the input using plotsompos, I use my update function that matches the X, Y, Z values of the selected data point, and find the column that matches those values in the SOM input, and use the cell with the sample names to identify which sample was selected, and display it as text in the popup tooltip. What I want to do is to if I click on a neuron using the data cursor instead of an input to the SOM, I want to know which neuron it is, the number specifically. Because what I have read if you use plotsomhits, the neuron number starts at the bottom left going to the right per row. Is there a way to know which neuron is in a specific X, Y, Z position after training?
Yep, serial isn’t too bad. Pull your hair out at first until you get the properties sorted out. [Here](https://www.mathworks.com/help/matlab/matlab_external/getting-started-with-serial-i-o.html) is the Matlab intro for serial I/O. Find a sheet of properties/commands for the lights and you’ll be set. 
Matlab makes doing this surprisingly tricky, BUT not impossible % c = cellstr array % cMod = char vector of replacements. numel(cMod) and numel(c) should be the same % N = the index of the letter you want to replace in all the cells in c % convert cMod into cellstr array the same size as c cMod=reshape(cellstr(cMod(:)),[size(c)]); % replace letter in c with the corresponding letter in cMod c = cellfun(@(x,y)(cat(2,x(1:N-1),y,x(N+1:end))),c,cMod,'uniformOutput',false);
`a^b` is a matrix operation. My guess is you want a elementwise power `a.^b` y = @(x) x.*tan(a) - (g.*(x.^2))./(2.*(v.*cos(a)).^2); &amp;#x200B; PS. Next time copy the error message in your post, it's easier to understand whats your specific problem and others don't have to make guesses
Does your computer have a SSD? Im guessing it doesnt. Assuming an old school spinning platter HDD, the reason it is so slow is (probably) because the newer MATLAB versions have a "program files" install directory that is filled with an absurd number of small files (Im not using windows anymore, but when I was I think mine had the better part of a million individual files). Accessing this many small files is absolute hell for a spinning mechanical HDD. Matlab 2010 is from an era before you could count on most computers having a ssd, and is almost certainly more optimized for running on a HDD. PS, if you dont have a ssd go get one. Assuming your i7 is relatively recent (say, Haswell or newer, maybe even Sandy Bridge or newer) its worth getting a ssd, since that will almost always be the answer to "why is ____ slow". If its older than sandy bridge id wait since you are probably due to replace the whole system sooner than later.
 imagesc([-180:10:180],[-4:0.1:4],reshape(z,37,81))
Cheers man. Noted regarding the error message. It wored when changning it to a elementwise operation. But don't understand one thing. Why was it neccessary to convert it to elmentwise operations? I thought, if I remember correctly(which i'm obviously not), that it was applied only when mulitplying vectors, not scalars?
Hey, OZIZZ, just a quick heads-up: **neccessary** is actually spelled **necessary**. You can remember it by **one c, two s’s**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Hey CommonMisspellingBot, just a quick heads up: Your spelling hints are really shitty because they're all essentially "remember the fucking spelling of the fucking word". You're useless. Have a nice day!
What's happening?
everything is slow
thanks
1. You don’t need symbolic variables to do this 2. What have you tried? Show us code 3. Do you understand how heaviside functions work? Can you write the problem without using matlab? If you understand how they work, re writing piece wise functions using heaviside is actually very easy. If you can write this without matlab, on a piece of paper, it is incredibly trivial to write in matlab. Get it done on paper and I’ll help you get it into code.
Follow weed o whirlers advice, post here. People are glad to help. You’ll get much more input and insight from the group.
well first thanks for helping me. It doesn't work using imagesc. I just tried it and output doesn't match the image it should. But let me take what you gave me and try it with surf &amp;#x200B; 
Using imagesc() works like a charm. Just have to resize z. This makes sense when you see the periodicity in the x,y data, which I was not seeing at first (I thought y was random so at first I used a 3D scatter plot). &amp;#x200B; Turns out you can also make this work with a 3D scatter plot, but imagesc() is much cleaner and simpler. 
You need to be more specific. If you can't figure out how to be more specific about your problem, you probably shouldn't be coding.
What exactly do you expect that to do? Why cumtrapz? Have you read the documentation for it? 
Great thanks. pcolor() actually worked even better. I can smooth out the image with shading interp
&gt; throwfunction = y; Why? &gt; I get an error... but i'm not sure why. The error message itself is literally just a message that tells you why. It's even written in red text. 
&gt; That one computer with the i7 I was talking actually has 250 GB EVO 850 SSD. Any chance that you tried this out in early 2018? I have a laptop with a sandy bridge i7 and a 500gb 850 evo, and the first ~3 months of the year it was basically unusable for any I/O intensive task. This is due to the meltdown patch, which was especially rough on sandy/ivy bridge systems. Its much better now, but it took a few months to get to be usable in any I/O intensive task. Its also worth noting that R2018a was a bit of a rough release, and there were (at least) 5 updates / patches released before 2018b got released. A few of the issues fixed (e.g., using symbolic variables) could and did cause matab to freeze up until the update was installed. So, that could easily have been a factor too. At any rate, if that was by chance when you tried it, its maybe worth re-trying. You may have just chosen a particuarly poor time to switch to a new version of matlab with higher I/O demands (but, under normal circumstances, fine for a 850 evo). With things running smoothly id think that 2018a/b should offer a decently large performance improvement over 2010
As stated in another comment, the loop initialization should be changed to i = 1:length(t). This won't changed the result though, since after the loop finishes, x\_f is a scalar (your plot isn't empty, it contains exactly one point). You want x\_f to be a vector, so in each iteration of the loop you should assign the result to an element of this vector: `x_f(i) = 1/w*(w^2-wo^2))*((w*sin(wo*i))-(wo*sin(w*i)));` Since you know the size of x\_f, it's good practice to pre-allocate it (before the loop): `x_f = zeros(size(t));`
&gt; x_f=(1/w*(w^2-wo^2))*((w*sin(wo*i))-(wo*sin(w*i))); You could do for i=t But you would still only get the last value of x_f. To fix that do: x_f(i+1)=(1/w*(w^2-wo^2))*((w*sin(wo*i))-(wo*sin(w*i))); and plot(t,x_f) However, not that it's not a good idea to use "i" as a variable name, since it's used for complex numbers as well. But really, there's no need for a loop. just do: t=0:1:500 x_f=(1./w.*(w.^2-wo.^2)).*((w.*sin(wo.*t))-(wo.*sin(w.*t))); 
Well maybe thats the problem. For a line integral wouldnt you want the dot product of the line direction and the vector field, which gives the magnitude of the vector field along the line direction?
maybe? but probs not b/c of the numerican method integration method https://imgur.com/a/D4pcCYZ 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/QTzJPLW.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
Thanks for the help it works now. Didn't see the mistake with the ";" instead of ":" \`function \[x\_f\] = worksheet23(t) w=1; wo=1.02; t=0:500; for i=1:length(t) x\_f(i)=(1/w\*(w\^2-wo\^2))\*((w\*sin(wo\*t(i)))-(wo\*sin(w\*t(i)))); end &amp;#x200B; plot(t,x\_f) &amp;#x200B; end' &amp;#x200B; This is the plot now [https://gyazo.com/8cd56d67fbdacb05605397e7de8db72f](https://gyazo.com/8cd56d67fbdacb05605397e7de8db72f) all the question asked was: The displacement 𝑥(𝑡) of a forced, undamped, oscillating spring mass system is given to be 𝑥 = 𝐹0/𝜔(𝜔2 − 𝜔0 2 ) \[𝜔 sin(𝜔0 𝑡) − 𝜔0 sin(𝜔𝑡)\] Where 𝑭𝟎 is the amplitude of the forcing function, 𝝎 is the natural frequency of the system and 𝝎𝟎 is the frequency of the forcing function. Write a function m-file forced.m that, for defined values of 𝝎 and 𝝎𝟎, produces a plot of the variation of 𝒙/𝑭𝟎 for value of t in the range 0 ≤ 𝑡 ≤ 500. Use this m-file with the defined values 𝜔 = 1 and 𝜔0 = 2, 1.2, 1.02 in turn. The plots produces should illustrate the phenomenon of beats for the case 𝜔0 = 1.02, with the amplitude of the oscillation exhibiting a sinusoidal oscillation. &amp;#x200B;
Hi, I'm a bot that links Gyazo images directly to save bandwidth. Direct link: https://i.gyazo.com/8cd56d67fbdacb05605397e7de8db72f.png Imgur mirror: https://i.imgur.com/UaAVrdO.png Direct link: https://i.gyazo.com/8cd56d67fbdacb05605397e7de8db72f.png Imgur mirror: https://i.imgur.com/iJccXcg.png ^^[Sourcev2](https://github.com/Ptomerty/GyazoBot) ^^| ^^[Why?](https://github.com/Ptomerty/GyazoBot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/u/derpherp128) ^^| ^^[leavemealone](https://np.reddit.com/message/compose/?to=Gyazo_Bot&amp;subject=ignoreme&amp;message=ignoreme)
i think it has to do with the fact that I defined my box in cartesian coordinates but matlab matrix has top left as 1,1 and the vertical axis is x and horizontal is y is all fked up
&gt;Actually, it would cause an error instead of plotting a single point with no marker, so a slight change! Why would it? It certainly doesn't in R2017b. As far as I can see, OP's version runs the for loop for one iteration, in which it prints the length of t and sets x\_f to some value. My version runs the loop 500 times, each time setting x\_f to a new value based on the current value of i.
You might find [this example](http://www.mathworks.com/help/gads/optimize-an-ode-in-parallel.html) interesting. It uses genetic algorithms and patternsearch, but you could do something similar with [fmincon](https://www.mathworks.com/help/optim/ug/fmincon.html).
You pass two time parameters, `ode23` expects a vector `[t0 tfinal]`.
Tried it, but I'm getting the exact same errors. Thank you for your time though!
Your loop indices are not correct. You need to use i as an index for referencing values in your t vector and saving values in your x\_f vector.
Glad to hear it helped! Interpolated shading is a gorgeous feature. If you're ever interested in 3D presentations, check out surf() and waterfall() plots too.
Yeah just post here!
first off, run `doc fft` and read through it. Itll answer most questions. fft zero pads the end of the signal. If you want different behavior you should manually zero pad it `lFFT = fft(Lo_D, imgFFT);` should probably be `lFFT = fft(Lo_D, size(imgFFT,1));`. Same for `hFFT` note that fft returns frequencies in the following order: `[0:df:nyquist-df,-nyquist:df:-df]`. You can make it return `[-nyquist:df:nyquist]` using `fftshift(fft(...))` and `ifft(ifftshift(...))`
This isn't an answer to your question, but looks like data from a rodent behavioral experiment. Hope you got some cool results! 
You can either use the plot browser, or try &amp;#x200B; cmap = lines; q = allchild(ax); q(1).FaceColor = cmap(1,:); q(1).EdgeColor = whatever and so on
I would tend to think that things would be *much* faster if you used a single axis and applied the shifting/scaling directly to the data being plotted. This can all be done using vectorized operations and then a single call to `plot`, so you dont get caught up using a bunch of slow single threaded function calls (like, id guess, `ylim`) Heres an example to get you started, should you decide to try this. It controls y-axis spacing between the curves and the magnitude of the curves. As is these are both uniform across all the curves, but it wouldnt be too difficult to make them non-uniform and based on user input from the GUI. % x = [1 x N] vector of sample times % y = [M x N] array of M frequencies collected at N sample times % open figure ff = figure('units','normalized','outerposition',[0 0 1 1]); aa = gca; % determine amplitude scaling and spacing ampScale = 2; spaceScale = 10; % make fake data for example x = [0:pi/10:5*pi]; y = sin(x)+randn(10,numel(x)); % apply amplitude scaling (remove mean --&gt; scale --&gt; add mean back in) yMean = mean(y,2); yMod = bsxfun(@plus, yMean, ampScale.*bsxfun(@minus,y,yMean)); % apply shifts to seperate curves yMod = bsxfun(@plus, yMod, spaceScale*([-floor(size(y,1)/2):floor((size(y,1)-1)/2)]')); % generate plot plot(aa,x,yMod) 
I did not mention this in the original post but I plot each signal on separate axes so that I can easily use datatips to grab amplitude values at certain times from each time series. I would like axes for each individual time series.
To be honest, if it is at all possible, id convert the data to binary. That way when you read it next time itll be almost instant. That said, I wrote up a small function to read csv data without relying on `csvread` (or any other function that ready ascii characters). Instead it reads the data as binary and then uses eval to parse it. It might work better for you. function data = mycsvread(fn) %% quickly reads csv data from file `fn` and exports as doubles % read data as binary (uint8) fid=fopen(fn,'r+','native'); data=fread(fid,'uint8=&gt;uint8'); fclose(fid); % replace unsupported characters (e.g., newlines) with spaces data(~any(bsxfun(@eq,data(:),uint8([32,44:57,101])),2)) = uint8(32); % parse data using `eval` data = eval(['[',char(reshape(data,1,[])),']']); end
You may need to make a choice between "having access to convienent features that using 20 axes provides" and "having the GUI be responsive but less feature-rich (or re-creating the features yourself so that they work with a single axis)" The only thing I can think of that might help using 20 axes is, assuming you have the parallel computing toolbox, is to use `parfeval` to asyncronously update properties in a given axis as they are requested. It should be possible to set this up so that only the figure handle (and not the full figure + data) gets passed to the workers, which will prevent rampant memory usage. im not sure how exactly would be best to set this up, but if it were me that is where I would start.
[http://spiff.rit.edu/classes/phys312/workshops/w6b/superpos/add\_waves.html](http://spiff.rit.edu/classes/phys312/workshops/w6b/superpos/add_waves.html) &amp;#x200B; I would look into wave addition. It looks like as long as they are the same frequency you can add them together. &amp;#x200B; If your resultant wave is still noisey I would suggest applying either an Adaptive Median or Adaptive Averaging filter. If you google those on the Mathworks website they have functions for using those filters. Averaging is more powerful, and will remove noise faster with a smaller window but Median will still preserve the original edges of your wave well. 
Have you considered using a custom data cursor? Instead of displaying the YData for the selected signal, you can look up what the Y data \*should\* be and display that instead. &amp;#x200B;
This. Refresh data not plots.
I don't think it would make a lot of sense due to the fact that the questions themselves are categorical, and that the responses are mixed. I would separate them into two groups. The first can have quantitative responses, which you could plot as individual histograms. I would suggest against plotting them as scatter-plots all on the same axes, as you would need a different axis scale for each question, and even if you only have two those are generally not very readable. I think the biggest question is: what are you trying to show with your data? If you answer that I think it would be easier to answer your question. 
So start with thanks for replying! Any help or nudge in the right direction is very appreciated. &amp;#x200B; Honestly either way would work. I'd be concerned with material usage if one way or the other had more material off the geometry (wasted Carbon fiber scraps aren't cheap), but I was also thinking that starting in the middle and working your way out from the middle might be the easier way to solve it.
I don't remember exactly what I did, honestly. I know the installer requires an x server to be running. When I got error messages, I just searched them finding Ubuntu and wsl tutorials
Hey, I've tried PLECS, thanks for the advice, looks like it worked fine for a 48V pack : https://imgur.com/a/uHBSUEq . Sounds controlled, right?
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/3MPy6ka.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20e82wu0k) 
This is a combination/permutation problem. You don't need matlab to solve it, you can solve it algebraically. I don't quiet understand the constraints on the combinations you have for your specific problem, but check out here for more info: https://www.mathsisfun.com/combinatorics/combinations-permutations.html https://en.wikipedia.org/wiki/Permutation 
Thank you so much for the tips and tricks! Have a nice weekeend! 
Well, frick.
I'm happy to give feedback though if you know what you're trying to convey with your graphs. Not trying to discourage you, just not sure how much help you'll be able to get here!
If everything else fails, FIR filters might do the job 
why not just if statements to seperate out which function you are actually calculating based on what x is
Try this vals=[1,2,3;10,11,12;4,5,6] p=perms(1:3) [vals(p(:,1),1),vals(p(:,2),2),vals(p(:,3),3)]
If i understood correctly, you have a periodic function. Take a look at the mod function, that should help.
Best way depends on the final thing. Can you give details about that? 
To keep things simple: 1. use `xcorr` to determine which shift gives the maximum cross correlation between the signals, and use it to optimally align the signals 2. add the signals where they overlap, keep one signal or the other where they dont. For a shift of 10 samples, this would look like `yMean = [y1(1:10), (y1(11:end)+y2(1:end-10))/2,y2(end-10:end)]` 3. Assuming you are going after the low frequency part and all the high frequency stuff is noise, you should probably implement a low-pass filter. (you might even want to do this before combining the signals). If youd like you can use [this functioon I wrote](https://pastebin.com/D03F17GE). The syntax for a low pass filter is `myFreqFilter(data,SamplingFreq,[lowPassFreq,lowCutFreq])`
Great reply, thanks!
you probably want something closer to this: if evalin('base','~exist('markerData1x'',''var'')') assignin('base','markerData1x',struct); end contents = cellstr(get(hObject,'String')); markerChoice = contents(get(hObject,'Value')); if (strcmp(markerChoice,'Heel marker')) evalin('base','markerData1x = s.RHeelBottomX;'); end
Yeah sort of, but I would like matlab to find a value to the spring stiffness constant that would cause acceleration to a defined speed within a defined time? I’m struggling to grasp what I am trying to minimise here? 
wow!! thank you
makes sense now, thank you
The solution to the differential equations x'' + d/m x' + k/m x = f - k/m L + 1/m F(t) isn't the acceleration of the masses, it's the position function for each mass, which you're trying to drive to zero (or -1 and 1 or whatever your reference positions for your mass are). You're trying to find some `k`, for which when you solve the differential equations, you get positions `x_1(t)` and `x_2(t)`, functions of `t`. You'd like `|x(t_0) - x_ref| = 0` for some time `t_0` after damping all oscillations (via your spring constants, and/or existing dashpots/friction/whatever). This is still true even if you introduce `v(t) = x'` to make the system first order for the solver. The example shows how to solve the diff. eq's in parallel at each solver step. My suggestion of `fmincon` isn't mandatory, just the way I would probably approach the problem. As I said, you're welcome to pick your own solver; [there are many](https://www.mathworks.com/products/optimization.html)!
Another vote for logical indexing.
You need to read the documentation for diff. 
Hey so thanks for replying. I legitimally tried all of those solutions; still didn't help. At this point I have no idea what could be causing the problem. It really sucks though. Wonder if it's a Vega thing, coupled with this Lenovo laptop, Ubuntu, and Ryzen. Ugh..
I would suggest using [input](https://www.mathworks.com/help/matlab/ref/input.html) with an argument of `'s'`, then [str2sym](https://www.mathworks.com/help/symbolic/str2sym.html). Then you can use [diff](https://www.mathworks.com/help/symbolic/diff.html). If that's too messy/complicated for you, you could use [eval](https://www.mathworks.com/help/matlab/ref/eval.html)... Here are some thoughts from [prominent MATLAB experts on the topic](https://www.mathworks.com/matlabcentral/answers/51946-systematic-do-not-use-global-don-t-use-eval). TL;DR: generally don't. Making a function handle out of the input with [str2func](https://www.mathworks.com/help/matlab/ref/str2func.html) is also a solid approach and your classmates are definitely onto something.
&gt;You may need to make a choice between "having access to convienent features that using 20 axes provides" and "having the GUI be responsive but less feature-rich (or re-creating the features yourself so that they work with a single axis)" Since I need these "convenient features" for analysis, I would rather rebuild this GUI with these features in a software/language that has less overhead than try to work within the constraints of matlab. Would you happen to know a system like that? Something like dislin, for example
I did, but got kinda confused by it. I tried using it like [this](https://imgur.com/a/hymbQiX). Is this the wrong approach for taking partial derivatives? 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/WNx0oGF.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20e84zkt9) 
You're most welcome.
The function documentation shows the algorithm used: https://www.mathworks.com/help/wavelet/ref/idwt2.html#f10-750897
Hmmm. I didnt. Then, ı need to generate impulse pulse train using pulstran, then convol with gauss. I will try. Thank you 
I appreciate that you want this done right rather than just done quickly, so Ill do what I can to help. The main problem is that MATLAB is not very efficient when it comes to updating plots - this is all single threaded and takes *much* longer than the backend calculations do. One thing that may help a little is to use `axHandle(nn).YLim = [newYLim]` instead of `ylim(axHandle(nn),[newYLim])`. On my machine tis makes the backend compute go ~6x faster, though when you add a `drawnow` call to update the plots it ends up only about a 10% reduction in time. Also, i found a ~2x improvement by minimizing the `drawnow` calls so that it is called once to update all the plots that need updating, rather than calling it after updating each individual plot. I put together a little test clear all close all clc for nn=1:32 ff(nn)=figure; fa(nn)=gca; plot(fa(nn),randn(1,1000)); end t1=0; t2=0; M=100; fprintf('\n\n') nChar=fprintf('%i of %i Complete',0,M); for mm = [1:M] tic for nn = [1:32] ylim(fa(nn),[-10*rand 10*rand]); %drawnow end drawnow t1=t1+toc; tic for nn = [1:32] fa(nn).YLim = [-10*rand 10*rand]; %drawnow end drawnow t2=t2+toc; if mod(mm,round(M/100)) == 0 fprintf(repmat(['\b'],[1 nChar])) nChar=fprintf('%i%% Complete',100*mm/M); end end fprintf('\n\nylim(ff, [...]) took %.3f Seconds\nff.YLim = [...] took %.3f seconds\n\n',t1,t2) This produced % drawnow inside of loop (called after each individual image update) ylim(ff, [...]) took 25.158 Seconds ff.YLim = [...] took 22.079 seconds % drawnow outside of loop (called after each batch of 32 image updates) ylim(ff, [...]) took 12.432 Seconds ff.YLim = [...] took 10.973 seconds % no drawnow ylim(ff, [...]) took 0.641 Seconds ff.YLim = [...] took 0.147 seconds I also tried a few tests with the parallel computing toolbox and they were all slower. Not terribly surprising....I typically find anything involving `parpool` to be horribly inefficient (hense why my 1st suggestion was to vectorize things). Maybe these things will help a little. Hopefully they help enough. Im not sure what more can be done though, unless you combine things into a single axis and vectorize or find a multithreaded version of `plot` (which very well might exist somewhere on the matlab file exchange, idk) &gt; Would you happen to know a system like that? Something like dislin, for example Im not intimately familiar with it, but the only thing that comes to mind is the numPy package (python) and the matplotlib library that integrates with numPy. I know a lot of the functions in nnumPy and matpolotlib are based off of matlab (in terms of functionaliity, not necessairly in terms of the underlying code). I dont know how it would compare for plotting efficiency though, nor do I know how easy it is to get it to make a GUI. It may be faster simply because it will get pre-compiled rather than being processed on-the-fly like what MATLAB does. (on that note you could get the same benefit by using a MEX function to implement the update, which also might be faster).
Try: table.A = A.Data(i).info.pressed; [Documentation for nonscalar structure array](https://www.mathworks.com/help/matlab/matlab_prog/access-multiple-elements-of-a-nonscalar-struct-array.html) [Documentation for nested structures](https://www.mathworks.com/help/matlab/matlab_prog/access-data-in-nested-structures.html) Depending on how you've stored your data, you may need to index with curly braces or simply assign a vector at once (also in the documentation linked).
Symbolic piecewise function 
First off, you appear to be treating it like you're in symbolic mode (which is almost certainly not what you want), and hoping the program just magically knows how to do the math for you. Here are my recommendations for you: 1. Unless your functions are exceptionally difficult to differentiate, you should do them by hand. 2. Look into how to define functions, because all you're doing here is assigning a static value to f1 and f2. They aren't functions that would accept input. In every iteration, the values need to be updated, and right now they don't do that at all. 3. Keep an eye on what's being stored in your variables, it'll help you catch issues like I pointed out in #2 above.
(excuse lack of formatting: on phone) If they're already strings you can do something like newArray= []; for i=1:n:size(strArray)-n newArray(end+1)=str2num(strArray(i:i+n-1)); end Where n is the number of strings you want to join. No garuantee it works, like I said, I'm on my phone. 
In image processing, do everything you can to avoid for loops, and try to vectorize our operations. For instance, you can use Threshold=150; copy=mean(image,3); copy(copy&gt;threshold)=3; 
This is a terrible application of symbolic variables. 
Thank you very much, I’ll get working on that example 
Your code actually returns an error (and then goes on to plot empty axes): Error using \* Inner matrix dimensions must agree. The exp function and sin function each operate on a 1x101 vector (size of t), so each also returns a vector of the same size. Then you try to multiple two matrices of size 1x101 which doesn't work. Use the .\* operator instead to multiply those vectors element-wise.
Thank you so much !!! That's perfect. As a side note, I've run into another problem regarding if statements elsewhere. Would you be able to help?
Would also add to this: it looks like they want you to use a linear system of equations. Check out here: https://www.mathworks.com/help/matlab/ref/mldivide.html
That's for symbolic calculations. You're doing numerical calculations here. If you want the derivative of your expression, just calculate its derivative. 
sure
Thanks for the help everyone! I’ll give these a go. Some great info to help get me started!
Scripts and functions are very similar in MATLAB. The top of your editor you write something like this: function variable_outputs = function_name(variable_inputs) And then, after that, you just write the same types of commands as you would for a script. Here, they are saying that the height and weight should be inputs into the function- so instead of you asking the user to type them in using `input` instead you hand them in. So you would write something like this: function [bmi, weight_class, optimal_weights] = bmi_calculator(wt, ht) 
Thanks for the help, so I went and worked with the image but it still is not working the way I hope. So I should be changing the white background to another kind like a gray one but still keep the colored balloons in its regular form. &amp;#x200B; Now, when I do the code, it changes values but the entire image becomes gray instead of just the background. %Read and display original image Image = imread('balloons.jpg'); figure; imshow(Image), title('Party balloons!') %Getting histogram figure; [pixels, gray] = imhist(Image); bar(pixels); xlim([0 gray(end)]); %Thresholding threshold = 90; %Making a copy to alter copy = Image; %Getting the x and y of the image [x, y] = size(Image(:,:,1)); for i = 1:x for j = 1:y intensity = (Image(i,j,1) + Image(i,j,2) + Image(i,j,3))/3; if intensity &lt; threshold copy(i,j,1) = 150; copy(i,j,2) = 150; copy(i,j,3) = 150; end end end %Displaying image figure; imshow(copy), title('Copy') &amp;#x200B;
use the `solve` function in matlab and try something like this : clear all; close all; clc % Coordinates x = [-2, 0, 2, 4]; y = [-20, 4, 68, 508]; %Call the function values = mysolver(x, y); fprintf('a= %4.3f | b= %4.3f | c= %4.3f | d= %4.3f\n', values(1), values(2), values(3), values(4)) the function `mysolver`: function [val] = mysolver(x, y) syms a b c d % The system to solve eqn1 = a * x(1)^3 + b * x(1)^2 + c * x(1) + d == y(1); eqn2 = a * x(2)^3 + b * x(2)^2 + c * x(2) + d == y(2); eqn3 = a * x(3)^3 + b * x(3)^2 + c * x(3) + d == y(3); eqn4 = a * x(4)^3 + b * x(4)^2 + c * x(4) + d == y(4); solutions = solve([eqn1, eqn2, eqn3, eqn4], [a, b, c, d]); val = [solutions.a, solutions.b, solutions.c, solutions.d]; end if you execute the main program you'll get : a= 7.000 | b= 5.000 | c= -6.000 | d= 4.000 &amp;#x200B;
Are you asking for the equations to be reduced or for help using **fminsearch()**? You have two equations and four unknowns ( **a**,**x**, **y**, **θ**). Fminsearch allows you to evaluate a function over a range of values which, in this case, means x and y should be varied to find the min value of a. As such, attempt to eliminate θ from one of the equations by turning equation two into the form of: sin(θ) = ? Then isolate θ and plug and chug with Matlab.
Sorry, I'm really not good with matlab at all, are you saying I solve for theta and then I plug that who thing in for theta on the other equation?
Disclaimer : I've never confronted a problem like that, so consider the following as a suggestion not a solution, I hope it will help you. First, rewrite your system so you'll get something in term of cos^(2)( θ ) and sin^(2)( θ ). cos^(2)( θ ) = 4(a-x^(2)\-y)^(2) sin^(2)( θ )=(4/9)(2-x^(2)\+y)^(2) then, adding the two equation will give you cos^(2)( θ ) + sin^(2)( θ ) = 4(a-x^(2)\-y)^(2)\+ (4/9)(2-x^(2)\+y)^(2) =1 In matlab you create a function like this function res = g(x, y, a) res = 4 * (a - x^2 - y)^2 + (4 / 9) * (2 - x^2 + y)^2 - 1; end using fminsearch you can solve this equation fval = fminsearch(@(v) g(v(1),v(2), v(3)),[0 0 0]) &amp;#x200B;
You have four equations and four unknowns. Set up a matrix where each row represents ax^3 + bx^2 + cx + d = y, for each x, y pair.
What have you been taught about solving systems of equations? 
I'm trying to remember. I think it might do something weird. I would try setting it directly with the set(gca,'ylim', []) command. I'm curious so I'll test real quick: Ok, after some testing. Using the set(gca... format is about 3 time faster than calling ylim. 
I’m having a real struggle trying to solve this, would it be okay if I PM’d you for more help? No problem if not 
Please help with homework, don't do homework for people. 
I think it's no different than what you do now, except instead of asking the user to type in a weight and height, it's an input to the function. 
Please only assist people with their homework, don't do it for them. 
To be fair, this statement more-or-less aplies to most uses of symbolic variables in MATLAB. That said, That said, I could actually see this being rather useful as for use in, say, gradient-based inversion algorithms where you have an analytic expression for the error function, if it was modified to do something like the following: input analytic expression of function you want the derivative of (as a string) convert to symbolic function get analytic derivative simplify (optional - might take more time than it saves for very complex functions) convert simplified symbolic analytic derivative to an anonymous function evaluate anonymous function numerically to get derivative at requested sample location
C++ has `std::fread`. It is basically equivalent. 
fread reads data. The same function exists in c++. You will specify the number of bytes to read, which will be 2\*count\*sizeof(float). fopen also exists. In your C++ code you will need to open the file before calling fread. Start here, take a look at fopen, fread and fclose. [http://www.cplusplus.com/reference/cstdio/fopen/](http://www.cplusplus.com/reference/cstdio/fopen/)
&gt;&gt; cc = 19 yy = 99 y = [cc,yy] cc = 19 yy = 99 y = 19 99 sorry my question is more like just integer 
fprintf?
Well it sounds like you wouldn't need to call fread at all? If your C++ application already is capturing the pieces of data, they must be stored in memory somewhere. I can probably help with what you're trying to do, but this isn't a MATLAB question at all - just a C++ one.
Take a look at [str2num](https://www.mathworks.com/help/matlab/ref/str2num.html) and [num2str](https://www.mathworks.com/help/matlab/ref/num2str.html) if you want to do that.
I think you're right. I just didn't think the whole problem through. Sorry for the trouble.
No problem - feel free to PM me if you get stuck in your C++ app.
I second this. You can use ```num2str``` to to cast the integers as strings, then your concatenation will work.
Huh?
Yep. Start with asking the user for input, then calculate the averages based on the user input, then output a message to the screen, and finally plot the data you have.
I am kinda new to this whole matlab programming, could you guys provide me a link i.e., how to approach this problem?
https://medium.com/quick-code/top-tutorials-to-learn-matlab-for-beginners-d19549ecb7b7
Thank you, I tried your suggestion. Additionaly, ı added standard deviation factor to my gaussian function to adjust the width of signal. Anyway, I successfully, created my gaussian train. The problem is, how can ı obtain higher order differentian without using for loop. I guess, I missed the point. Now I am trying to using convolution property. Last line of your suggestion about derivation, it is not workin. Am I misunderstood? Thank you for your help :)
Thank you, I applied the conv property. It works, but my final question is, how can I adjust the repetition of the pulses. In my opinion, I should increase sampling frequency of dirac train or data sequence length. Also, I can decrease the pulse width. But none of them works, I just see max three repetition of higher order gaussians in my plots , what else should I? Any opinion? Here is my code, Thank you for kind help, redditors! It meant a lot. clc clear all close all tau=linspace(-10, 10,240); %% my pulse duration aa=1; t = linspace(-60, 60,240); %% define entire domain data length c=5; %% defines width, you can observe from FWHMi kind of duration x1=((t-tau).^2)/(2*(c^2)); gauss=aa*exp(-x1); dt = t(2) - t(1); higher_order_gauss=gauss; for k=1:1:20; higher_order_gauss=gradient(higher_order_gauss,dt); end fs=100; % %frequency of the impulse y=zeros(size(t)); y(1:fs:end)=1; pulse_train=conv(y, higher_order_gauss,'same') 
Assuming the vectors are the same length, and that the indices correspond to the same time, you can use the find command to determine where the difference changes sign: Difference = Vector1-Vector2; Index = find(Difference(1:end-1).*Difference(2:end)&lt;=0,'first'); Note that the vectors are unlikely to actually have the exact same value, which is why we test for a sign change, rather than testing for zero. Note that this won't work if the locations 'bounce'; if mass 1 approaches mass 2, then upon hitting mass 2, it reverses directions, then a different zero finding approach will be needed.
We haven't talked about ode solvers so I don't believe so. I do know that I'm going to have to use ode45 for the numerical solution though.
Since you only have two cases, you may just want to use an if statement with the modulo. Try something like if mod(num,2) fprintf(‘odd\n’) else fprintf(‘even\n’) End
What work have you done so far?
From the way the question was worded, I think this is a problem to teach the user how to use switch/case
Ah, we’ll never mind then. This isn’t really a great example use of switch imo
It looks like you're on the right track, but the documentation for dsolve says that multiple equations should be expressed as a vector.
That's a whole lot of code to pick through. If you're going to ask a question like that it's usually a good idea to create a simplified example that demonstrates you're problem clearly. Doing that often solves your problem anyway. At least, have you tried basic debugging techniques? Maybe printing out the variables involved in the while condition at each iteration? 
Are you talking about a particular function? Not quite sure what the question is. Gray levels/grayscale just means that at each pixel location, an image has a 1-dimensional bit depth. That is, if it's an 8-bit image, each pixel has a range from 0-2^8-1. So you have a single number from 0-255 at each pixel. The mean of the image would be the average level (also from 0-255) of all the pixels in the image. For an RGB image, you have three 8-bit numbers representing each of the color channels (Red, Green, and Blue). Each can be from 0-255. To calculate a mean gray level, you would need to first convert it to grayscale (Grayscale(i,j) = (R(i,j) + G(i,j) + B(i,j))/3. Then you could do the same calculation of average gray level for the entire image by just averaging across all pixels. Technically order of operations shouldn't matter as it's associative, so you could just do a triple mean of your color image. 
Could potentially a sampling error. Are they summing over the same angular resolution? 
The square brackets join three strings together, so if rtstr='hello_' and sys='world_' then the string formed by the square brackets would be 'hello_world_filename'. If they're not variables, then rtstr and sys must be functions...
The brackets are an ugly way to combine strings to construct a file path name from strings. It's a bad habit people develop until they learn about `fullfile()`. 
As a general rule,, it is usually good practice to construct while loops like so: maxIter=&lt;...&gt; curIter=0 while (condition) &amp;&amp; (curIter &lt; maxIter) &lt;do stuff&gt; curIter = curIter + 1; end if curIter == maxIter warning('WHILE LOOP CONDITION WAS NOT MET! \n\nMaximum Iteration count (%i) was exceeded!!!\n',maxIter) This automatically exits the while loop if it runs for an unreasonable number of iterations and throws a warning to let you know. If it *should* be eeting the condition theres probably something wrong with the code. If I had to guess, `Qh` is goiung to effectiovely 0 in the inner loop before its condition is met, so it doesnt alter `E_Qc` and the outerloop effectively re-runs the exact same thing over and over again. Thats just a quick guess though.
FYI - if you are going to use this in any actual codes, Id recommend using `mod(round(num),2)`, otherwise any floating point roundoff errors will result in the number automatically being declared odd, even if the number is, say, `num = 2-eps`
thanks! 
Hmm...are the solid angles of both the beams the same size?
Try using array with time values. i.e 2d array where dimension is time and the other is velocity values. Eg. Let 'a' be an array such that a(1,1)= time ( first time sample) a(1,2)= velocity (value of velocity at 1st time sample) Do this for all the time samples and velocity values Also you can google "time series format in simulink" Hope this helps and doesn't confuse you even more.
Strrep string replace
You can't with a `for` loop in MATLAB. In MATLAB the `for` loop is actually a `for each` loop, thus manipulating the index variable actually has no impact. You'll have to do with via a `while
That shouldn't be TOO too bad. Thank you so much!
Write a for loop to take the specific values you want from the matrix and put them into arrays. 
How do you mean that? To take an entire row and put it into an array?
Never going to happen sorry. Matlab want a license for every person using it for analysis - hard to make a web service with that model. 
Its not. Just replace for nn=1:N ... end with nn=1; while nn &lt; N ... if ~resetCondition nn = nn+1; else nn = nnResetVal; end end
Have a for loop, fir example: for ii = 1:length (matrix) NewArray (ii) = Matrix (1,ii); end Play with the logic to get it to work out exactly how you want it to be set up. 
This isn’t true at all. You can absolutely deploy standalone apps that don’t require a license on the host machine as well as web apps. Just google “deploy web app MATLAB”. 
As a general rule, try any really obvious answers before posting to see if they work. In this case im not sure there is much more of an obvious answer than `plot(M)`, which basically does exactly what you want so long as `M` is a 2D array (it groups columns, not rows, but that is fixed with a simple transpose)
as an alternative to this, if you dont like the idea of having to cast back and forth from numeric--&gt;char--&gt;numeric, you can do x = &lt;num1&gt; % should be an integer y = &lt;num2&gt; % can be integer or decimal xy = (round(x) * (10^(1+floor(log10(abs(y)))))) + y This figures out how many digits are in y, then multiplies x by 10^numDigits and adds them
Bud, no one here is going to do your work for you. Go try to write it yourself and come back when you have specific questions you want answers to.
I would start with the google for "shannon coding matlab" and go from there.
I tried the obvious answers already, Plot(M) as well as imagesc(M). The thing is i want it to visually be the way i described. But thanks, i will try this new plot you said
R u working at NASA, thanks
[Here you go](https://medium.com/@gordon_zhu/how-to-be-great-at-asking-questions-e37be04d0603)
Actually....
im not familiar with using groups in excel, but assuming you can pass matlab a char vector of `'Data:Outline:Groups'`, you could parse it using the following x='Data:Outline:Groups'; N=1+sum(double(x==':')); c=cell(1,N); for nn=1:N-1 c{nn} = regexprep(x,'^([^\:]*)\:.*$','$1'); x=regexprep(x,['^',c{nn},'\:(.*)$'],'$1'); end c{end}=x(1+double(x(1)==':'):end); This will produce `c` which is a [1 x 3] cell containing {'Data'} {'Outline'} {'Groups'} 
Will try! I used the spikes in an example for an identity matrix, since there is only going to be one value, but what i'm really hoping for is a gaussian distribution. Because i have these big values going along the main diagonal but besides them decreasing values on each side. So it would be something like hills all along the main diagonal.
I appreciate the reply but I'm looking for how to retrieve the Group levels out of Excel. 'Data: Outline: Groups' is just the location in Excel of how to apply the groups. Sorry if I was unclear. I found a set of formulas in Excel to populate the number of the level in an adjacent column, which i can read into Matlab, but this method would force all the BOMs to be edited.
So, something like this? x=exp(-[-3:0.2:3]'.^2); N=numel(x); N2=floor(N/2); x=repmat(x(:),[1 N]); for nn=[1:N] x(:,nn)=circshift(x(:,nn),nn-N2-1); end x(abs([-N2:-N2+N-1]'-[-N2:-N2+N-1])&gt;N2)=0; lSpacing=0.2; figure plot(x+lSpacing*[-N2:-N2+N-1],'LineWidth',2)
Your indexing of X and Y inside the plot-command looks very weird to me. You say that Y is a matrix of 500x13. In the first iteration you access Y(1). What is that supposed to be? Maybe you mean something like Y(:,i)? Similarly the indexing of X is strange. I think checking that might already help you.
That was it! Thanks for your help
So it does not what it is supposed to do? Great! 
Thank you for the feedback. I was able to parse the data and create a basic model using a different approach (I converted the day into strictly day number and adapted the time of day into a % of day passed). 
When you say “save” do you want to save it to a file or just append it to an array (add it to an array in your workspace)?
Append it to an array 
In that case, you can initialize your array using myArray=[]; Then inside of your loop, you can keep appending using myArray=[myArray,num]; Just a heads up, it can be slow to continuously resize an array. If you have an idea of how big it will need to be, then it’s better to preallocate it ahead of time
Ok got it. I want myArray to be a row vector with a size of X. X will be determined by a number in which the user inputs. So if I input the number 8 then I want the vector to show 8 iterations/values. How can I do this?
Im not clear on how you’re calculating the 8 numbers, but let’s say that you wanted each element in the array to be the previous element divided by 2. For example, if the user inputs 8, then the array would be myArray=[8,4,2,1,.5,.25, .125, .0625] To achieve this, we would first preallocate the array as myArray=zeros(user,1); Next, we’ll add the first element (change this based on what you want in your array) myArray(1)=user; for I=2:user MyArray(i)=myArray(i-1)/2; end
I've done this, there are some limitations but seems to be getting better by release. Appdesigner is pretty intuitive for building gui as well. You do need the compiler package, but the web app can be used by others without Matlab via browser.
You betcha!
Can't see your other comment for some reason; yes it's working like I want it to. Now I just need to figure out how to get the RGB scale on it
Those aren't strings. When you say "remove the space", what do you mean? You want a numerical value that is given by the concatenation of the digits in the decimal representation? 
The distance between the first and second points is 0.8507. It's pretty straightforward. Works like the documentation says it should. 
What part of it is tripping you up? have you tried it? You can either copy and paste the cells into the variable editor, or import data using the button on the top bar. Either way, just fft() the vector
https://www.mathworks.com/matlabcentral/answers/308231-fft-from-csv-data-file Basically I used the codes . And changed the FS as well as imported the csv file . I’m able to plot the graph in time domain. But when I fft, I just get a straight line horizontally . 
Perhaps what you need to do is a PSD, a Power Spectral Density.
Why PSD ? 
Best way is to use the Import Data tool on the home top bar, then with the data properly separated, generate a script using the top right button
Try using textscan as it lets you set any number of header lines that it will ignore when it reads the file. For example, say your file is called my\_file.txt: filename = 'my_file.txt'; sine_data = textscan(fopen(filename),'%f,%f,%f,%f,%f','HeaderLines',3); time = cell2mat(sine_data(:,1)); input = cell2mat(sine_data(:,2)); output = cell2mat(sine_data(:,3)); The second line assumes 3 header lines and outputs a cell, which can then be broken down into column vectors for each of your .txt columns.
&gt; Now I just need to figure out how to get the RGB scale on it You can define color as an RGB triplet using plot(x,y,'color',uint8([R, G, B])) where `R`, `G`, and `B` are integers between 0-255
Out of curiosity, is that 3-component geophone data? At any rate, I put together a little something that should accomplish this (I figure I can make use of this capability from time to time too). I think it works properly in all realistic use cases, but id make double check it is outputting the correct data. The method is a bit different and not as straightforward as using the text scanning functions, but those functions have a tendency to be rather inefficient and slow with I/O. This *should* (probably) be faster most of the time. function [data] = myCsvRowRead(filename,rowsToRead) %% reads selected data rows from csv file specified by filename % rowsToRead identifies the data row index (e.g., rowsToRead=N --&gt; reads the Nth row with data (not text/headers) that is in the file) % all data columns are read for a given row. If you dont need them all you can discard them after they are read % if all rows read have the same number of data columns, output is a standard array. Otherwise it is a cell array of size [numel(rowsToRead) x 1] % open file for reading if nargin == 0 || isempty(filename) || ~ischar(filename) warning('Missing or invalid filename.') return else fid=fopen(filename,'r+','native'); end % determine the start byte of each line and whether or not it is data or header text isData=false(0,0); byteStart=[0]; while ~feof(fid) dCur = fgetl(fid); byteStart = [byteStart; ftell(fid)]; isData = [isData; ~isempty(regexp(dCur,'^[0-9\.\,\-\+eE \t]+$','once'))]; end numBytesInRow = byteStart(2:end)-byteStart(1:end-1); % map data line number to the actual line number in the file [lineNum,lineNumMapper]=unique(cumsum(double(isData))); lineNumMapper(lineNum==0) = []; N = numel(lineNumMapper); fprintf('\n%i rows of data have been detected\n',N) % setup which rows to read. This example has the 1st 30 rows, but this can be whatever so long as values are integers between 1 and N if nargin &lt; 2 || isempty(rowsToRead) rowsToRead = [1:N]; end % sort and remoe duplicate rows [rowsToRead,~,rowsToRead_reverseMapper] = unique(rowsToRead); Nr = numel(rowsToRead); % extract start byte and low length in bytes for each row byteReadStart=byteStart([lineNumMapper(rowsToRead)]); byteReadTotal=numBytesInRow([lineNumMapper(rowsToRead)]); % move to 1st row and setup cell arrayfor the data fseek(fid,byteReadStart(1),'bof'); data = cell(Nr,1); % read data are uint8's, replace unsupported characters with spaces, and parse with eval for nn=1:Nr data{nn}=fread(fid,[1,byteReadTotal(nn)],'uint8=&gt;uint8'); data{nn}(~any(bsxfun(@eq,uint8([9, 32, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 69, 101]).',data{nn}),1)) = uint8(32); data{nn}=eval(['[',char(data{nn}),']']); if nn &lt; Nr fseek(fid,byteReadStart(nn+1)-ftell(fid),'cof'); end end % undo sorting and de-duplication to return what the function call asked for data = data(rowsToRead_reverseMapper); % if all rows have the same number of values, convert back to standard array if numel(unique(cellfun(@numel,data))) == 1 data=cat(1,data{:}); end % close file fclose(fid); end
Readable(), possibly in combination with detectimportoptions() should do the job. Can't be more precise I'm on mobile, reply to this comment if you want me to be more precise. 
Explore pwelch my friend. You will find peace thwr
The second and third one is from audio system toolbox which optimised for recording
I first thought it was a "difference" joke.
multiply your binary by 2 and subtract 1
Take your binary array, double it, then subtract 1 from each element.
Awesome! Thanks!
Awesome! Thanks!
There should be a "down arrow" in the top right of window that's separated from the others. Click on that and there should be an option to "dock". I believe that should fix it for you.
I actually regret answering this. You should REALLY stop and think why you had to ask this. It might be the most basic question I've ever seen (not trying to be a dick). * Do you really not understand how to take a number from the range of 0 to 1 to the range of -1 to 1? Maybe you're using MATLAB before you understand some very basic arithmetic concepts. Study up * Do you not understand how to perform operations on arrays? This is very basic and googleable. * Is there some programming construct that's stopping you here? Are you unable to properly print the result or assign it to a new variable or something? Also very googleable and self-teachable. * Too lazy to do any of the above? You need to fix that to have any success in life
[A screenshot if that explanation wasn't clear enough](https://imgur.com/gallery/KVPpMpS)
Yes, it worked!!! Thank you so much.
Thanks, I actually take this type of feedback pretty constructively. I probably should've searched for the answer on my own instead of asking. Sorry for taking up your time. 
I have changed PieData to = \[PE\*100\] and this seems to have worked, not sure if this is correct practice however?
try: help pie the answer to your quetion is in the second sentence...
Check the documentation for pie. If your data adds up to less than 1, you get a partial circle. So multiplying by 100 works, or you could just do pie(PieData./sum(PieData)) to begin with.
Thank you very much this is exactly what I was looking for, worked perfectly!
I prefer to use doc pie As this opens the help documentation in a different window with better formatting and illustrated examples. 
huh, neat. 
Have you considered using printf?
Read up on [supervised learning.](https://www.mathworks.com/discovery/supervised-learning.html)
&gt; because i need to be able to fprintf afterward I'd say yes. :)
No need to be sorry - I just try to think back to when I was in school and one thing that really helped me a lot was periodically doing some introspection and understanding how I'm learning best and how I can learn faster. So just hoping triggering these thoughts help you as well.
Matlab can convert numbers to logic. I believe 0 is zero and everything else is 1. You could possibly set up a function that uses your real numbers and outputs them into numbers yiu can use for logic. 
&gt; Have you considered using `help fprintf`? ftfy 
I think changing D^2 to D.^2 might fix it
I just tried your suggestion to read a tab separated txt file, the generated import script is rather large. Do we need to keep such a large amount of information?
I tried but it didn't work &amp;#x200B;
Yes! Actually more like the diagonal going from the top left to down right but exactly like this!
Doh. Check your parenthesis. They're not balanced. 
I checked them and fixed the issue. It just gives me the error for &amp;#x200B; `Error in Tension (line 3)` `T=((Lb*Lc*W)/(D.*sqrt((Lb^2)*-(D.^2))));`
&gt; Actually more like the diagonal going from the top left to down right add a line with `axis ij` after the plot command
Hi all, &amp;#x200B; Thanks for the feedback, these are all good suggestions in general for code management. The issue ended up being an incorrectly placed "reset" variable for the inner while loop. So after a certain number of iterations, the value stored for the inner while loop would always return FALSE so that inner loop wouldn't run and therefore was breaking the rest of the loop. &amp;#x200B; Thanks again!
Not sure if you're interested in sports, but you could go looking for a database of sports statistics and I'm sure make some interesting analyses.
It looks like the error is the division. Replace '/' with './', and it should work. I tend to use elementwise multiplication and division by default to avoid these types of errors in general. Also, I suspect there is an error with the negative within the square root. I would double check that part of the equation, since taking the square root of a squared variable is redundant anyways (i.e. sqrt(Lb.\^2.\*D.\^2) is the same as Lb.\*D).
It looks like the error is the division. Replace '/' with './', and it should work. I tend to use elementwise multiplication and division by default to avoid these types of errors in general. Also, I suspect there is an error with the negative within the square root. I would double check that part of the equation, since taking the square root of a squared variable is redundant anyways (i.e. sqrt(Lb.\^2.\*D.\^2) is the same as Lb.\*D).
It looks like the error is the division. Replace '/' with './', and it should work. I tend to use elementwise multiplication and division by default to avoid these types of errors in general. Also, I suspect there is an error with the negative within the square root. I would double check that part of the equation, since taking the square root of a squared variable is redundant anyways (i.e. sqrt(Lb.\^2.\*D.\^2) is the same as Lb.\*D).
Look at the steam tables for thermodynamics.
I have a dataset that I'm analyzing for research purposes, if you want I can share it. It's a few GB in a csv Send me a PM.
I was going to suggest something similar. The pressure-temperature-density curves for a supercritical fluid are available from NIST: [https://webbook.nist.gov/chemistry/fluid/](https://webbook.nist.gov/chemistry/fluid/) One particular advantage of this is that you can specify the resolution of the source data, which would allow you to compare your interpolated values to the NIST reference values. There are regions of these curves which can be interpolated with a simple linear function, while other regions will require more advanced techniques. As an example, [here's supercritical carbon dioxide at 7.5 MPa](https://webbook.nist.gov/cgi/fluid.cgi?P=7.5&amp;TLow=288&amp;THigh=388&amp;TInc=1&amp;Applet=on&amp;Digits=5&amp;ID=C124389&amp;Action=Load&amp;Type=IsoBar&amp;TUnit=K&amp;PUnit=MPa&amp;DUnit=kg%2Fm3&amp;HUnit=kJ%2Fkg&amp;WUnit=m%2Fs&amp;VisUnit=uPa*s&amp;STUnit=N%2Fm&amp;RefState=DEF).
More specifically, if I have the centre of the circle, and the location of the brightest spot, how do I compute the light source direction from them? 
Do you play magic the gathering? I know of an insanely in-depth dataset with amazing documentation, and a curator of it who could use the help.
You could start by training with the [treebagger class.] (https://www.mathworks.com/help/stats/treebagger.html) Or maybe play with the data using the [classification learner.](https://www.mathworks.com/help/stats/classificationlearner-app.html)
I am not sure if all major US cities have similar programs, but Philadelphia [publicly hosts](https://www.opendataphilly.org/dataset) a variety of datasets based around the function of the city. Perhaps a city near you does the same?
You will probably need to use a ./ too. Does it say what the error is?
The SRTM is a topography map of the entire world in varying resolutions. You can read about it [here](https://www2.jpl.nasa.gov/srtm/)
Using the quiver function, you mean? If so, I usually reshape my (say) velocity grid to make u and v vectors and add an element of desired velocity in the (say) beginning. Also add the coordinates where you want to put your legend vector. So, U = [. 5 u] ; V = [0 v] ; X = [xleg x] ; Y = [yleg y] ; For a horizontal positive (to the right) vector of 0.5 mag, u, v being zonal and meridional componets (vectors), x, y being lon lat vectors. Xleg, yleg being the legend vector position. 
This is extremely specific. Matlab is used for an enormous number of different things, not just whatever it is you do. We can help with Matlab, but it would only be luck if anybody here can help you with the actual mathematics of such a specific technique. I even have some photogrammetry background and I don't exactly know what you need here. 
What's your command for plotting the result?
Damage numbers in destiny based on overall power level and the gun power level 
Thank you! but this is assuming theres only 3 lines of header, and there are multiple header lines unevenly spread across the file
Did you plot it vs the correct frequency domain?
It's nice that it's very common with your sub-sub-field, but it's not common in the world in general. You seem to be under the misconception that Matlab is a tool primarily for people who do photometric stereo recovery of shape. It is not. It is used widely in multiple fields of science and engineering. This is not a subreddit about photometric stereo recovery of shape. It's a sub about Matlab, so while we can help you use Matlab, it is 100% on you to understand the actual mathematics that you are trying to do. We can't help you write code to do something you don't know how to do. 
Thank you for this! But the problem is that it doesn't distinguish the different subsets of the data. I ended up using Import Data and manually selecting each data set. Took me about 20 minutes but yea. 
Do u have audio system toolbox?
was using matlab 2015a, without audio system toolbox. Am upgrading to 2018b to try using audioDeviceReader and audioDeviceWriter to see if theres any difference.
Well at least the tools from that toolbox is optimised for real time audio 
Im currently getting the error, 'No audio input device detected', when using audioDeviceReader('Driver', 'ASIO') &amp;#x200B; any ideas on why this is the case?
For an intro class: the difference will be mostly slight changes in UI.
I’m expecting to use it quite a lot in the future. Because I’m doing a masters in movement sciences. Will there be more differences after it gets more complicated?
It's pretty much identical on all three platforms.
The only significant differences I have found are: - Some toolboxes are only for Windows, e.g. the DAQ toolbox. - If using mex files and MATLAB Coder then you will need to build different files for each system as the compiled files are not cross-platform.
Thanks for the information!
You're looking for the function `xlswrite` I believe
Maybe using a helper variables in the for loop would clarify things a little. For example you could have Dx=x(i)-x(i-1); Dy=y(i)-y(i+1); Now you can call the Pythagoras function to get the length of the i,i+1 segment with seg_length=pythagoras(Dx,Dy); Then you just loop it like you did before and sum the lengths together as needed.
Hmm. May I ask why you write Dx and Dy, is it to differentiate it from the parameters x and y that we have inside the parantheses? And the call of the Pythagoras function, that you call seg\_length, should it be in the loop?
Thank you for this thoroughly answer. Yeah, I think the math behind this is kind of hard to interpret. But I think i understood your explenation on what is going on. If I understand right, in a polygon with N vertices (if i understand this as a point? I'm not sure if i got it translated right), there are also N line segments (if i drew it out correctly..). To calculate the perimeter of a polygon i have to multiply the number of n lines that it has, with the length of each line, and the length i get from my pytagoras function. 2. Will look more closely at indexing (thank you for a very concise tip). And no, I would not say that it makes sense to write x-(x+1)..
Use isvarname() to check if your proposed column titles are valid, and type 'help isvarname' to get an idea of what it looks for to decide if something is valid or not.
That sounds like a bug. Does the input data or kernel have NaN in it? If not, certainly a bug. Alex
The proposed column titles are vaild, however when I use this line of code: T1 = table(\[S\_T\_C\_3\],'RowNames',{'Force','Stiffness','Compression','Potentiaal Energy'},'VariableNames',{'S1','S2','S3','S4','S5'} I get this error: The VariableNames property must contain one name for each variable in the table &amp;#x200B; I only have 5 columns though so I do not understand why this would be the case?
What type is your dataset variable? Matrix? Cell array? 
What type is your dataset? Matrix? Cell?
A 4x5 double according to the workspace! (Apologies if this isn't exactly what you're asking, I'm very new to MATLAB)
Remove the 'VariableNames' property from your code to just leave: T = table([S_T_C_3],'RowNames',{'R1','R2','R3','R4'}); And run it and you'll see the table is created with only one big column, which is why you're seeing the error (5 names for 1 column) Just type "array2" in front of your "table()" command (so it looks like "array2table") and it will work as you're expecting.
Blimey this has worked fantastically! Thanks a lot for your time, I don't think I ever would have worked that one out!
[This ought to help](https://www.mathworks.com/help/matlab/ref/mldivide.html#bt4jslc-6)! As always, the documentation for MATLAB is excellent, and will often answer just about any question you run into.
&gt;To calculate the perimeter of a polygon i have to multiply the number of n lines that it has, with the length of each line, and the length i get from my pytagoras function. No, not in general. Are all sides of a polygon the same length? Consider a triangle that is not equilateral. 
It just makes it a tad easier to understand :). Yes it should be in the loop, each loop iteration goes through one segment. When i=1 you will get Dx=x(1)-x(2) and Dy=y(1)-y(2). Then the pythagoras function will give you the length of that line segment. When i=2 you get Dx=x(2)-x(3) and Dy=y(2)-y(3) and again pythagoras gives the length of that segment and so on and so on. This means that you calculate the length of a segment at each iteration and you have to either keep track of them or just sum them all up to get the total length.
Oh ok thanks!
Piss off you clown
Usually kernels are odd, have you tried 511x511 or so?
You do [gaussian elimination](https://en.wikipedia.org/wiki/Gaussian_elimination)
I'm sorry for asking, but how would i solve them as y=ax+b? Or what should I search to find how to do that? This wasn't given anywhere in my notes and we have to do this on our own? Can you write me an example or show me where i can see one? &amp;#x200B;
I'd try writing the maths on paper first. It's nearly always easier to figure out what you need to do before you start trying to code it. If you start with y(i) = ax(i)\^3 + bx(i)\^2 + cx(i) + d i = 1,2,3,4 that'll give you the 4 equations you need to solve and you can work from there.
So, getting this fully working was tricky and I still may have overlooked a few edge cases, but this works on all the test files ive thrown at it. This automatically breaks the data up into sections, where a new section is started every time it goes from a row being data to a row being not data. It will collect the data headers from each section, and will analyze them to try and extract any labels for the data columns. It can deal with column labels than span multiple rows, as long as every label uses each row. Output is a structure array seperated into the data sections that the requested rows fall into. Each struct in the array has fields for the section #, the full header for that section, the extracted data labels for that section, and the data from the rows that fell into that section. It sounds like youve already loaded it, but if youd try it out and tell me if it works id be very curious. Ive been working on a data I/O package i intend to release at some pooint and I think ill include this code, so id like to have it working in as many use cases as possible. Codes a bit long to post, so [here is a link to it on pastebin](https://pastebin.com/EPk1E3eg)
Thank you for helping! So far I have: y = 2.29 + 2.97*x + U I want to find the number to put in for U (error term, aka. residual)
U = y - 2.29 + 2.97*x quick maffs
Smoke trees Yeah, thought about that too, but I don't know Y, since it depends on U
In my field (Areospace Engineering) MATLAB is the standard and I haven't seen that standard slipping at all. I think there's a couple of reasons. First, momentum- everyone uses it so everyone needs it to collaborate with other people. Second, it's certified. Results calculated with MATLAB are trusted correct. Finally, expensive for a person and expensive for a company is just so different. MATLAB costs $700 a year with all the toolboxes I use. That means my company has to save a couple of hours of my labor before it pays for itself. When you look at it that way, "almost as good" just doesn't make sense. 
y and x is your input for your regression. I am not trying to be rude, but I think you should read more in your book as it doesn't seem to be a matlab problem.
This isn't really a Matlab problem but rather a statistics problem... What are the y and x in your regression? 
You can't specify the derivative if you use smoothing splines. This is because smoothing splines are constructed to minimize a certain error functional and it can be shown that in the absence of noise this is minimized by natural splines. Hence the minimizer with noise included also uses natural splines with an additional term for minimizing the least squares distance. 
Yeah.... Plus when you can't even teach the old guys metric trying to teach them 0-indexing isn't going to go well. Aerospace worships Matlab and I'm 100% ok with that.
The best workaround I found for setting end conditions was by putting dummy data at each end. 
Would an acceptable alternative be to first use a Savitzky–Golay filter and then fit a natural spline with end conditions (i.e. csape)?
Okay, I was considering something like that. If I append a data point to each end, is there any clever way to calculate where to place the point to get the desired derivative at the first and last real data points? I'm imagining some kind of clunky iterative process, but I could be missing something.
Octave would be the closest open source product to MATLAB. https://www.gnu.org/software/octave/ But I think R and python are both gaining momentum in the scientific community
MATLAB has a) inertia, b) stellar documentation, and c) good support. Mathworks really works on training, and is usually happy to come run training sessions. They are aware of open source tools, and how much Python has shaped the ML land. Mathworks has been releasing more and more tools. It seems that Mathworks is looking to move away from Matlab as a programming language and IDE, and more as a tool. Most of the new stuff they release are GUI tools. There's a reason for that. They want it to be a one-stop shop. Have some data? Load it in our tool, run a quick visualization, and start messing with it. (Insinuating: No need to mess with versions, importing, coding the tool, etc.) Python will slowly take over, but its going to be a while. CS moves quickly, but most folks in ECE land are a bit slower to adopt.
No. natural splines automatically imposes the derivative at the boundaries as well (it is the choice F''(a) = 0 = F''(b)). What I think you would have in mind is to smooth the data and use clamped splines (i.e. specify the second derivatives at the endpoints explicitly). How well this would work depends completely on where your data came from and why you need to specify the derivatives. I would be highly suspicious of this method. The reason is I imagine you are in 1 of 2 cases: Case 1: Your data is actually noisy. In this case you should not impose derivatives yourself. Even if you know the exact second derivative at the endpoints, imposing this will drastically change the shape of your resulting spline and almost certainly increase the error. The fact is, interpolants are not robust with respect to differentiation (i.e. you should never differentiate an interpolant constructed from data with lower regularity than the derivative you want to compute). Case 2: Your data is not actually noisy. In this case you shouldn't use smoothing splines at all. Just use clamped splines and impose your boundary derivatives. 
And, of course, automatic code generation. 
I think MatLab is on the way out. The giant problem that MatLab has is that you only get what mathworks develops or what you make yourself. There's not a lot of sharing of code online, at least nothing close to the extent that online collaboration happens with something like Python. The big thing MatLab has going for it is that a lot of people use it exclusively and universities get it cheap/free to teach to students. More and more students are gravitating to open source though, and the universities are changing their tune. In the end, I think companies will start to find that there are enough open source libraries that adequately cover their needs and a young and enthusiastic generation of coders who are accustomed to open source that paying for an expensive enterprise license for MatLab just won't make sense anymore. 
The fileexchange works really well, in my experience.
The residual is the data minus the fit. I think you have a severe misunderstanding of what you're doing. You should check your textbook, class notes, or talk to your teacher. 
Since 0.3 and 0.4 aren't integers, I'd assume that means you're expected to use floating point numbers. 
To give context, I'm trying to analytically fit some noisy measurements of a particle path (time series of position). &gt; No. natural splines automatically imposes the derivative at the boundaries as well (it is the choice F''(a) = 0 = F''(b)). Good point. I did meant fit a clamped spine. My data represents a section of an arc which maintains some level of curvature before and after my data begins and ends. That's how I know my end F'' shouldn't be zero. There is definitely noise as well. &gt; interpolants are not robust with respect to differentiation I agree with this. Do you have a recommendation for a better method? Finite differences are even worse when there is noise in the data.
Hey, I'm not sure if you care at all, but since you took the time out of your day to try to help me I figured I'd at least share what I came up with. [https://projector.tensorflow.org/?config=https://gist.githubusercontent.com/YFurse/a99d7ff2c6fda009ca96dc36c0722a5f/raw/7336ddd82e8e1d3e431526ade7aecf25fd435d5e/template\_projector\_config.json](https://projector.tensorflow.org/?config=https://gist.githubusercontent.com/YFurse/a99d7ff2c6fda009ca96dc36c0722a5f/raw/7336ddd82e8e1d3e431526ade7aecf25fd435d5e/template_projector_config.json) &amp;#x200B; I'm still not sure how applicable T-SNE and/or PCA is to my dataset, but this sort of visualization was exactly what I was looking for. 
&gt;x = x\_coordinates; &gt; &gt;y = y\_coordinates; What's the point of these lines? &gt;y = a\*x\^3 + b\*x\^2 + c\*x + d; This is an assignment. You're asking Matlab to exaluate the expression on the right and assign it to the variable on the right. Is that what you want? You already assigned a value to y. Surely the Matlab editor has underlined your previous assignment to y and informed you that it will never be used, right? Don't ignore those warnings, they're there for a reason. &gt;First of all I don't think it will recognise the x &amp; y values from the 4x1 cells as 4 sets of individual values, so I need to sort that out somehow. Yes. The documentation explains how to manipulate variables like cell arrays. &gt;Secondly, I keep getting "Undefined function or variable 'a'." error. I'm not sure what to do about this? That's because you never defined the variable a. Isn't a what you're trying to calculate? So you won't be able to use it in any expressions until you have calculated its value. If you're trying to fit a polynomial to some data, try searching the documentation. You might start search terms like "polynomial fit" and see what you find.
&gt;name = 'Input coordinates'; You never use this variable. 
You are trying to calculate numerical values for a, b, c, and d, right? Then why are you using symbolic variables? You're not looking for a symbolic result, so you don't need symbolic variables. 
&gt; Line: 40 Column: 41 &gt; &gt;Invalid expression. When calling a function or indexing a variable, use parentheses. Otherwise, check for mismatched delimiters. I have a suspicion that there's something wrong on line 40. Maybe a missing parenthesis or something. Just a guess. 
Nice! Glad you found something, thanks for the update! What are the axes here? And how were you able to convert them to ? As long as you have some constant and repeatable way of converting the axes from categorical to continuous data, I don't see it being much of an issue. Multiple Factor Analysis may be what you're looking for to compare the categorical variable impacts. 
Well I am out of idea about this Just make sure u setup all ur devices before running matlab 
To massively over generalize, Matlab is mostly used by engineers, R by statisticians, and Python by computer scientists. There is a lot of overlap, but those are the largest communities using each language. Matlab allows for very rapid development due to its excellent documentation and having so many built in functions. There is no searching around on the internet for libraries/functions. It's all at your fingertips in the IDE (only exception is if you don't have access to a toolbox you need). Python is a more general programming language with wider applications beyond science/engineering/math. Basically, you can do anything in Python you can do in Matlab, but it may take longer to develop your code. On the other hand, there is a lot you can do in Python that you can't do in Matlab (web development, scripting, etc.). R is very powerful for parsing and analyzing unstructured data, which is why many people use it for data science and statistics. It has less application for engineering and scientific computing where Matlab excels. tl;dr R is too limited to replace Matlab for many science/engineering applications. Python can do anything Matlab can, but development often takes longer (depending on the project).
&gt; That means my company has to save a couple of hours of my labor before it pays for itself. Yeah that's the thing people overlook with respect to the cost of Matlab. Time is money. If you are working on a large project, Matlab pays for itself pretty quickly.
I have used Matlab extensively for school projects/labs. RN I don’t have any so I am trying out Julia, while using Python for one of the research projects. The thing I don’t really like about Matlab is the performance, compared to Python/Julia etc, although it’s getting better. Matlab editor is terrible compared to open source editors, like VSCode and Atom. The latter have more customization options to make them easier for eye, extensions to change keybindings and to add widgets, etc. I ended up combining Atom editor with Jupyter to make a pseudo IDE for Matlab (before I switched to VSCode). I did try Matlab Editor Plug-in but the keybindings are not as friendly to Mac. I sometimes prefer the characteristics of open-source programming languages as they are more *nix friendly. Having a package manager and a vibrant community fit my style better, I.e. I prefer GitHub to FileExchange. Plus, Python would be my go-to scripting language just bc it has a fast start up time and better overall performance, and I can’t really run Matlab in a Raspberry Pi without having a 16Gb hard disk and extra money for a license. Like others said, i would likely see myself using Matlab in the industry tho, since it has a lot of momentum. Python is gaining momentum, but its hardcore programming nature would be a barrier for average MechE/Aero guys to adopt. 
Firstly, props to you for even making packages, man. I would imagine the number of people that would benefit from it would be countless. Also, I tried using the updated code and it gave me this error. &gt;&gt; myCSVread('Section 30.txt',31451) Index exceeds array bounds. Error in myCSVread (line 148) dataSection_dataColLabels{ns} = cell(0,dataSection_numDataCols(ns)); Not sure if my input was wrong. 
I definitely agree you should not do finite differencing. Personally I would just fit it with smoothing splines and accept the derivative error. Your other alternative is to use a smoothing spline but give up 2 degrees of freedom somewhere in order to impose the derivative conditions. This will likely give you the best possible approximation but the cost is you will have to figure choose which variables to free up and implement your own spline algorithm. If you have a very large dataset this might be prohibitive since your implementation will probably be quite a bit slower. You can also get the additional degrees of freedom by taking higher order splines, but again I think you would have to implement this yourself also. One way to check whether this will really have a dramatic impact in your case is if you have a model for the dynamics which are generating the time series (even a rough one), you can simulate some time series data, add in some bounded noise (which should exceed your actual expectation for the amount of noise in your data), and explicitly measure the C^2 error using all 3 methods (clamped, smoothing, filtering + clamped). If any of these is within your error tolerance for the simulated data, then I would probably use the best of the 3 and call it a day. 
In cases where solutions to a linear system aren't unique, you have 2 possibilities. There are infinitely many solutions or none. You can not determine which case you are in just by looking at number of equations vs variables (although generically you can since singular matrices are "rare" as are solutions to underdetermined systems. Anyway, you can still "solve" the equations in this case. If you are in the infinite solutions case, then you have a hyperplane of solutions whose dimension matches the rank of the degeneracy in your matrix (e.g. the multiplicity of the zero eigenvalue in the square case). But this is easy to solve since you can make arbitrary choices for these free components and solve uniquely for the rest. This produces a solution. Apparently MATLAB chooses zeros for the arbitrary coefficients. If you are in the infinite solutions case, then you can consider the collection of vectors, b - Ax, where x ranges over all vectors in your space. This vector is never zero, but it varies continuously so it has a minimum. This is a unique vector, x*, which satisfies |b - Ax*| is minimal. In other words, it finds the vector which comes closest to satisfying the equation. The method is based on the Moore-Penrose inverse (google it). 
hi i solved the connection problem, however, now when I enable ASIO, there is no output sound. i.e. `deviceReader = audioDeviceReader('Driver', 'ASIO', 'Device', 'ASIO Fireface USB', 'SampleRate', 48000);` &amp;#x200B; however, when ASIO is not enabled, there is real time output sound with noticeable latency. `deviceReader = audioDeviceReader('Device', 'Analog (1+2) (RME Fireface UC)', 'SampleRate', 48000);` &amp;#x200B; any ideas how to successfully enable ASIO, in order to reduce latency?
change both the / into ./ 
I made an edit to my original comment you should check out, I've been in your position before where I had to learn the difference.
Will do!
I think you could probably just convert it to seconds after the fact... s:ms = 1:1000...
I only use free software if I can but I used to use matlab a lot. In my field there is a large and definite shift towards python, and rightfully so as it's infinitely more flexible. I still use octave for quick number crunching since that is more convenient for me. Only reason to use matlab is if you have some institutional inertia or if there is a toolbox/simulink you really, really, really need.
Brilliant response, thank you!
Wow, that's quite a lot japles. Hope I don't have to count them one by one
Already tried to retrieve the duration in ms that way but seemed to always just get the sec by a factor 1000 Thought all this time the problem was lying in the script but just see the files I received were truncated and rounded to seconds! Much thanks 
Tried to retrieve the duration in ms that way but seemed to always just get the sec by a factor 1000... Thought all this time the problem was lying in the script but just see the files I received were truncated and rounded to seconds! It's silly really Thanks ExtendedDeadline
Any idea how I could calculate it not using symbolic variables?
Ahh yes that is just some leftover code I had copied from one of my previous answers, I will remove this, thank you!
Changed most of the code since this part, but may have to rework it since it is producing more errors, will look into "polynomial fit" today, thank you very much for your time and all your answers!!
Its hard to say the exact cause without seeing the actual exact layout of your csv files, but im guessing either 1. something was missed during the header parsing, causing `dataSection_numDataCols` to have too few values, or 2. you entered more data rows than the file actually had regarding #2 - the code was setup to only count rows that contained data when evaluating `rowsToRead` - any header rows were ignored and the code pretended like they didnt exist. If your file has N rows, then (assuming it has 1+ lines of headers) it has less than N data rows. I added a switch to easily change behavior between this and behavior where all rows are counted when evaluating `rowsToRead` (see the `rowCountType` variable near the top of the code immediately under the help section. That said, neither of these things *should* throw an error, so i added some safeguards to hopefully automatically handle this situation. It is hard to say how well they will work without the actual data thaty caused the error, but i give it at least a 50/50 shot of working lol. I also added a few optimization and some extra options for selecting rows within certain data sections (seer the help text for info) [Heres the updated version](https://pastebin.com/CAt0nML7) side note: if this throws an error also, try running it without specifying and rows. When called as `myCSVread(filename)` the code will try to load and parse the entire file. Seeing if this works (or where is fails) might be useful.
have you tried var.Properties.VariableNames = {'x2' 'x1'} ??? The results seem to pretty well match the data (based on the few points you listed), but have axes flipped If you are trying to see the frequency with which certain results appear, use histogram(variableSpecifyingReturns)
Using histfit solved my problem. Thank you for helping out!
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/F5GxGps.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20e8hgi00) 
I think that’s the number one complaint right now. It’s gotten a little better since 1.0
Question makes no sense
Ow my cells
Hey! No problem! I am actually unsure about something with the error term. So this may be more of a theorethical backround problem, than a Matlab problem. Am I even supposed to get a number for the error term? Should it be like this: y = 2.29 + 2.97*x + U Or like this?: y = 2.29 + 2.97*x
I don't know what MATLAB is doing here. I'm surprised it's not giving an error (unless you defined *a* beforehand. Do you know what rank means? This is really more of an algebra question.
y = 2.29 + 2.97*x, this is your predicted value from your regression. Some textbooks refer to this as y^ (yhat). So y is the data and yhat is the prediction. So y - yhat gives your error term. Writing it out completely y = yhat + U = 2.29 + 2.97*x + U
 % percentile pLow=0.025; pHigh=0.975; % find index in data iLow=(numel(data)*pLow)+sqrt(eps); iHigh=(numel(data)*pHigh)-sqrt(eps); % find data values. Linear interpolation between values. dataS = sort(data); vLow=dataS(floor(iLow))*(1-(iLow-floor(iLow))) + dataS(ceil(iLow))*(1-(ceil(iLow)-iLow)); vHigh=dataS(floor(iHigh))*(1-(iHigh-floor(iHigh))) + dataS(ceil(iHigh))*(1-(ceil(iHigh)-iHigh)); % plot histogram(data) % plot best fit hold on ylimCur=get(gca,'YLim'); plot([vLow,vLow],[0,realmax],'k','LineWidth',5) plot([vHigh,vHigh],[0,realmax],'k','LineWidth',5) set(gca,'YLim',ylimCur)
[MATLAB is a terrible programming language](https://www.rath.org/matlab-is-a-terrible-programming-language.html). This post sums it up better than I ever could.
Would it be possible to show the above line in plot legend?
I see it declining. I work at an aerospace software company and most of our codebase is Matlab (state estimation stuff), but everybody on the team wants to move to something else. Matlab is harder to maintain and collaborate on imo. I still use it in my personal projects for prototyping though. I think somebody on this sub said "Matlab is great for when you don't know what you're doing", which is why it's so great for students. It's a powerful language for completing technically complex tasks without requiring a lot of comp sci knowledge. If you're looking to start a project, and you haven't already committed to Matlab, I'd say go open source.
I think youll be quite happy with that machine. (For refference, a few months ago I build [this](https://pcpartpicker.com/list/JFwTNQ) for seismic data analysis, and while it isnt quite up to the enterprise-grade status the machine your talking about it is closer than most machines. A few thoughts. Feel free to take em or leave em. * get a 1tb 970 pro. Its faster (by a little), will help ensure you dont run out of space, and since quickly pricing out those specs on dells website is looking at $20k+ you can afford the few hundred more. * if you do a lot of AVX-heavy operations (especially matrix-based operations) the xeons will blow away any epyc chip. Even without AVX512 they have a significant advantage using AVX2+FMA3. With AVX512 they just fly. I get ~3.2/1.6 TFLOPS (single./double precision) on my i9-7940x....But, if you dont use much AVX, epyc might be a decent option. Youll still have the NUMA issue to deal with (in my experience MATLAB is entirely NUMA blind, but that was running on an ancient linux kernel, so newer systems might do better) * If you do a lot of matrix based stuff, link MATLAB to the most recent MKL version. I have some codes that do this automatically when you start matlab that id be happy to share if your like. With AVX512 enabled cpus you very well may see a noticable improvement, since many of the newest updates to MKL have to do with improving AVX512 support/efficiency * idk what OS you plan on using, but Windows was unstable as hell on my machine. In your situation id probably go RHEL, but thats just me. * Id throw at least 3 more of the save HDDs in (i know you say no custom stuff, but adding hard drives really is easy and much cheaper to do yourself....just saying). I say 3 more since that gives 4 total, which allows raid 10 (mirroring + striping) to increase data protection and access speed. Id also go for at least 7200 rpm drives, more if you can. My machine uses `zfs` to manage my 10 x 8 TB raid6 array, and it has works quite well so far. It also (to my surprise) seems to utilize AVX512 , at least in its raid 6 (what it calls raidz2) mode. * If you can id consider throwing in a m.2 optane drive or 2. My machine has 2 32gb ones - one for a permanent swap decive and one for the ZFS ZIL SLOG (kind of like a write cache for the array) * The gv100 should be fantastic for deep learning, due to its tensor cores (basically, these make mixed fp16/32 matrix operations hardware accelerated, and these operations are pretty common in many machine learning methods) * if its going to be accessed a lot remotely and transfer a lot of data (the MySQL part makes me think this is likely) get the x550-t2 dual 10g NIC upgrade. It would be silly to have all that power and be limited by network I/O
Try looking up the bisection root method, this is the method you are looking for.
Actually I may have no idea about what I’m talking about, I solved it by hand and I found the solutions. Thank you anyway guys
I don't know what the axes are to be honest. My understanding, though, is that they definitely don't represent any of the original variables. Beyond that I have no idea. I know it's not quite right, but what I did was: I assigned an integer value to each category within each variable. Then normed the entire matrix containing all of the data by a factor of 10, so all of my new variable values are close to unity. After that, I just fed them into the embedding projector and it "worked." From what I've read I think my next step is to go back and properly encode (one-hot encoding?) my categorical data with unique binary identifiers, so that there is no cardinal (?) relationship between categories. For example if Google Play, Soundcloud, and Pandora are 2, 6 and 4, respectively, then the average of GP and SC would be Pandora, which doesn't make any sense. I have been procrastinating on the one-hot encoding, but I will try over the weekend before my report is due. If I'm unable to do it, it won't matter anyway because this is far beyond the scope of the class I'm doing the report for. Anyway, thanks for the help. Glad to hear back from you!
Absolutely. The best approach would be to save it as a single string and then pass that to the legend. mystr = ['I have ' num2str(x) ' dollars in the bank.']; legend(mystr); 
I have multiple legend entries, would there be any modifications to the above?
Yes, but it is no different from any other string you want to put in a legend. Check out the Matlab documentation for [legend](https://www.mathworks.com/help/matlab/ref/legend.html), which shows you all of the ways you can make legends with multiple entries. These include a comma-delimited list of strings, a cell array of strings, a combination of graphics handles and strings, etc. 
Thanks!
Do you mean I2C? I think that works with matlab. Basically you're reading from the serial port though I'm guessing. You can actually do the fft on the arduino, but your right, any frequencies of interest would require too many samples for the arduino to handle. On another note, this likely won't work well using USB. If you're trying to use a simple signal, send your output from the arduino to the pc's audio jack so you can get a 44.1k sampling rate or whatever using the pc's sound card. Then you can just record from there using matlab or whatever audio program. Source: been there done this 
To pick up on the namespace issue, and break out into a larger issue I have with MATLAB (heck, maybe incorrectly), how do I as a developer pass around a library? There's no package manager. What happens if I make changes/fixes/improvements? How do I distribute them? What happens if I named a class/function the same as someone else did in their code but who wants to use my library? 
[BW,xi2,yi2] = roipoly(___) also returns the coordinates of the vertices of the closed polygon, xi2 and yi2. source: https://www.mathworks.com/help/images/ref/roipoly.html
You want im2double() I think, then just multiply by the correct ratio and add. Something like: (val1-val2)*X + val2 where the val's are your intensities. 
Cheers dude! My company won’t let me run Linux, everything has to be windows based. Yeah I will prob get more hard drives and run them in some sort of raid setup and the 1tb pro 970 is a good idea. Yeah if you could send me your code that would be fantastic! I’m fairly new to MATLAB but have experience in other programming languages.
It depends what type of boundaries conditions and geometry you're working with. Finite-element methods can basically handle any PDE, but they're pretty sophisticated and deserving of their own course. I'd start [here](https://www.mathworks.com/help/matlab/math/partial-differential-equations.html) and consider how your equation relates to the standard PDE form on that doc page (I'm not sure how applicable this is, but it's still a start point).
A few weeks back I [made a thread with a batch script for windowd](https://www.reddit.com/r/matlab/comments/9hz8r5/codeshare_an_almost_fully_automated_function_for/). I just went back and added a few more details. Basically, 1. make sure you actually install MKL 2019 2. in a terminal, find the `mklvars.bat` script. It will probably be under something like `%MKLROOT%\bin\mklvars.bat`, where `MKLROOT=&lt;mainIntelInstallDirectory&gt;\compilers_and_libraries\windows\mkl\` or similar. 3. Call this using `@call "%MKLROOT%\bin\mklvars.bat" intel64 mod ilp64 verbose` 4. Run the following commands to set environment variables: SET "BLAS_VERSION=mkl_rt.dll" SET "LAPACK_VERSION=mkl_rt.dll" SET "MKL_THREADING_LAYER=INTEL" SET "MKL_INTERFACE_LAYER=ILP64" You may need to specify the path to `mkl_rt.dll`. If it uses the same type opf path as linuux, it should be in `%MKLROOT%\lib\intel64_lin\mkl_rt.dll` 5. Run the matlab executable from the same terminal you just set up MKL in. 6. The mklvars `verbose` flag should have printed a buch of environment variables to screen. MATLAB likes to overwrite some of them on startup. To restore them, run `!env` from within matlab, figure out which ones are missing.changed, and restore tham using `setenv` in MATLAB.
If you really want to use the USB connection, then I would suggest checking out the serial() library. You won't be able to process your data in real-time, but I bet it is fast enough to just read values off the serial port and store them at those sample rates. As for passing 32-bit values, that is not exactly trivial when using serial ports. It is going to require multiple read/writes over the serial port and some bit shifting to send and receive 32 bits (4 bytes). There is a decent example of it [here](https://forum.arduino.cc/index.php?topic=70809.0) that I suspect will work reasonably well with a hard wired connection, but you may want to define a start and stop byte or do a checksum to make sure you are not losing any info. &amp;#x200B; All that said, if you are not already somewhat familiar with serial port communications, and don't really need to learn them, I would do what /u/CaptainLethargic suggested with the audio jack, and just record with an [audiorecorder object](https://www.mathworks.com/help/matlab/ref/audiorecorder.html). &amp;#x200B; As for processing that data on the back end to get frequency/amplitude info, check out the fft() function. MATLAB has some [great examples](https://www.mathworks.com/help/matlab/ref/fft.html?searchHighlight=fft&amp;s_tid=doc_srchtitle) of how to use it on their website.
I saw in another comment that you are new to programming. Luckily, the Matlab documentation is very good, and includes examples. [Here](https://www.mathworks.com/help/matlab/ref/while.html) is the page for while loops, which includes some examples that are similar to yours. I agree with the other commenter that your life will be a lot easier if you can spend some time learning the basic programming principles and then come back to this assignment. 
First, if I understand your problem, then the error is simply using the wrong index for 'newSortedLinkPairs' in the comparison. Instead of: if newPAID(3,e) == newSortedLinkPairs(2,ee) I believe you want if newPAID(3,e) == newSortedLinkPairs(1,ee) Second, if you find this function runs slowly, you should try vectorising (unless this is for an assignment about writing for loops). Try the above code, and see how long it takes, then compare it to the one line below, which I think will do the same thing as your for loops: newPAID(3,newSortedLinkPairs(1,:))=newSortedLinkPairs(2,:);
Because your data is not evenly spaced along each axis (like the images you attached) throwing the data into the standard `surf` function will make it look something like this mess: [https://imgur.com/a/xyDWSNg](https://imgur.com/a/xyDWSNg). I would start by watching [this](https://www.mathworks.com/videos/surface-plot-of-nonuniform-data-97466.html) video, which talks about dealing with non-uniform data. In general though, use the `help` function whenever you have an issue with a function. Take the time to read what the function is expecting for inputs and compare that to what you're trying to pass into it. Debugging your code to solve the problem will teach you more about MATLAB than anyone on Reddit can.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/MK1PKml.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20e8impxm) 
May I recommend the Teensy 3.2 for your project? It can be programmed using Arduino but is far more capable. You can easily set it up to be an USB audio device to stream data to your computer. You can even set it up to perform the FFT locally and stream frames of frequency information. Honestly, your project would take less than 10 minutes of drag and drop programming. Not bad for a $20 board. Check out the [Teensy Audio Library](https://www.pjrc.com/teensy/td_libs_Audio.html) for more.
Check the documentation page for surf(), especially the section "Input Arguments."
triangulate it and use patch. Even when it is equally spaced, surf looks like such shit compared to patch that I would do this anyway. 
I was able to use several legend entries written like your example code, thank you. ['I have ' num2str(x) ' dollars in the bank.'] Can I reverse the direction of the legend icon (the lines)? Here is what it would look like (legend icons are on the left of the text, changing the direction to the right) - https://i.imgur.com/TO6TWxa.jpg
Thank you for the answer, by the way it does support I2C but I also need I2S which is a different library that my microphone requires
But how would that go into my code?
Ah okay, well there's a documentation on a matlab interface for I2S via raspberry pi if that works for you 
Galerkin method, or in any case some form of projection methods. [https://www.wire.tu-bs.de/lehre/ss14/pde2/PDE2\_Tutorial\_2\_Galerkin\_method.pdf](https://www.wire.tu-bs.de/lehre/ss14/pde2/PDE2_Tutorial_2_Galerkin_method.pdf)
So could I possibly fix it by taking the floor/ceiling of the index expression?
Since index is just an arbitrary index, you could just replace that line with: index = index + 1; You’d have to initialize it before the for loop e.g: index = zeros; In this way, you are guaranteed that index is an integer and you wouldn’t need to depend on how many number of indices you need in your array. The first value of index would be index = 0 + 1 = 1; and it would increment by 1 afterwards.
Take off the t = t+0.005; line since it's a for loop and the step is already put in
Thank you for your input. Can you suggest any code example of triangulation and using patch? 
Are `T_gas` and `P` functions of time or just z? If they're only functions of z and don't change with time--assuming you're trying to solve for `C_i`\--this is a relatively straightforward PDE to solve, of the form `dC_dt = a*dC_dz + b*C + d`. You can use a finite difference method, like Euler's Forward / Explicit, to discretize both space and time. You then stick it in a loop to march through each time step until you reach steady-state or you get bored. If you're using Euler's forward method, each time step would look something like: `C_next = C_now + dt * (a * gradient(C_now, dz) + b * C_now + d)` This is my favourite book on PDEs: [https://www.amazon.ca/Numerical-Methods-Partial-Differential-Equations/dp/0128498943](https://www.amazon.ca/Numerical-Methods-Partial-Differential-Equations/dp/0128498943) but it's probably at the library!
Do this instead: t_array=0.005:0.005:20; for index=1:length(t) t=t_array(index); //your stuff here// y(index)=energy; end there is no need to save x as you already have saved the entire t array. In general I would advise to only use the index as the for loop counter as well. 
Damn, that's a lot of code for a simple feature. Thank you for digging that up though.
Is `numel` better (i.e. more efficient) than `length`? 
No idea, I just got into the habit of using numel for vectors because it only needs one argument.
So you want to index **y** by the length of **x** and then you make that index count one element higher than the length of **x**? Why are you doing all of that if you want to return the shifted values in **y**? Just make a new index from the actual length of **y**.
&gt; Debugging your code to solve the problem will teach you more about MATLAB than anyone on Reddit can. This cannot be emphasized enough
I've lived in Matlab daily for the past 12 years to do medical image processing. Python offers \*much\* weaker native support in that problem space (i.e. Numpy, PIL, scikit-image, etc), instead relying on external C-based libraries for cutting edge codes (e.g. OpenCV, VL-Feat, etc). Such external libs do run faster than Matlab's, but don't integrate with the Matlab IDE at symbol level, limiting REPL, debugging, and data inspection. Matlab leads competitors with a very well integrated IDE which supports rich resources for both straight execution and interactive REPL. AFAIK, no Python IDE rivals this, unless it's one of the commercial ones. That said, Python does seem to be improving at a faster rate than other tools. Perhaps in a decade its available code base code base will rival Matlab's, but I suspect it'll take at least than long, at least for image processing.
thanks it works now, atleast i think after checking some values.
[~, idx] = sort(data(3, :)); sortedData = data(:, idx); 
i need to preserve all the columns
Deep learning on ramp uses image processing, https://www.mathworks.com/learn/tutorials/deep-learning-onramp.html
You should make a for loop and iterate through however many input charges are given. Sorry. Mobile. for index =1:j E(index)= calculation (with indices); ... end You actually don’t need to store them. I think that’s what your prof might be suggesting. E = 0; for index = 1:j temp = calculation ; E=E+temp; end same for Q Right? 
 I originally had it set up the same as that: for index = 1:n temp = (k)*(Q(index,4)*(r-Q(index,1:3)))/((norm(r-Q(index,1:3)))^3) E = E + temp end But since Etotal is given as zero above, would I be using Etotal instead of just E for the second to last line? i.e: Etotal = Etotal + temp ? Also could you elaborate on what you mean in the last question about also Q? unless you meant V?
Pretty sure I got a message from you and now it’s gone for me for some reason it said something about r? 
With the help of transpose and [sorrows](https://www.mathworks.com/help/matlab/ref/sortrows.html) this is a 1 line problem
You should *have* listened in class too.
 Enter number of charges in the system:\n--&gt; 2 Enter observation location [x y z]:\n--&gt; [1 2 3] Enter position of charge number 1 in the format [x y z]: --&gt; [1 3 5] Enter the charge value of charge number 1: --&gt; 10e-9 Enter position of charge number 2 in the format [x y z]: --&gt; [5 3 1] Enter the charge value of charge number 2: --&gt; 5e-12 The total electric field at point [x y z] = [1 2 3] is... error: Etotal(2): out of bound 1 error: called from emagproject1 at line 44 column 1 &amp;#x200B;
Etotal is a scalar but you're referencing Etotal(2).
Ah, thanks for finding that. If i understand, numel of a 2x3 matrix would be 6, while length would be 3. Right? By it looks like if you know beforehand which dimension you want to check you should just use size(array,dimensionl
You're missing a `)` at the end of the tempV line.
Oh shit it worked lol, thanks m8!
You need to include the command you used to import the data in the script. You'll also need to send the file. Alternately, you could [save](https://www.mathworks.com/help/matlab/ref/save.html) your data as a .mat file, and send that, using [load](https://www.mathworks.com/help/matlab/ref/load.html) to import it instead.
I think you mean data*. You can save any variables currently in your workspace by either right-clicking them and selection "save as" or by using the command line. Once the variables are saved in a more matlab compatible format, just add a couple lines of code to your script to import the variables you've saved when the script is run. I'm sure you can preserve the names of the variables when doing this as well.
https://se.mathworks.com/help/matlab/ref/colorbar.html
Yes, the title has a typo. Sorry. I figured out how to save the variable, but I don't really know how to use that without having to send two separate files. Wouldn't your method necessitate sending the saved variable as well as the file?
Is there a way to do it where I only have to send one file? Like include the saved variable in the file? &amp;#x200B;
Ok I don't know where on that page it says what I want. When I have the data cursor on the plot it doesn't display the colormap value associated to the point it's on. It just displays the x and y coordinate. I want to also show the colormap value. 
All methods will necessitate this. If your dataset is small enough, you could hard code it into your file... But I don't see the point. Just zip the contents of your working directory and have the recipient upzip them?
If you want, you can copy/paste the data and massage it into a matrix/cell array format, but I wouldn't recommend it. You could also just zip the two files into an archive. Technically only one file, but now the other person has to unzip it.
Do you mean just copy/paste the saved variable file into the main file?
Yes, but if you just copy/paste raw text the script won't run. You'll have to organize it into a format the script will understand, and assign it to the variable you're already using. Much easier to just send the data file.
If the person I'm sending it to has the file that I'm importing data from, is there a way for me to write the file so it imports the data when the script is run?
Indeed. Have the other user put the script in the same directory as the file in question, and ensure that both parties have the same name for the file. Then the code you've already written to import the data will work on both computers.
I think you want the documentation for text() instead.
Okay. But my file doesn't import the data when the the script runs. I imported the data first into the workspace and then used the variable that it saved the data as. How do I write it to import directly from the code?
Okay. That works. Thank you.
You're welcome.
Hello, can someone help me with a MATLAB program to simulate an M/M/1 queue? We know that the time between arrivals in a poisson process is exponentially distributed so I used to inverse cdf equation of an exponential random variable to generate an array. In a follow up to this question, we are supposed to do the same but with an Erlang random variable with k phases (i.e. sum of k i.i.d. exponential random variables). Thank you for all and any help. I'm really struggling with simulating a queue.
You need to modify the data cursor callback function. Here's an example: [https://www.mathworks.com/matlabcentral/answers/68079-how-to-add-additional-info-to-the-data-cursor](https://www.mathworks.com/matlabcentral/answers/68079-how-to-add-additional-info-to-the-data-cursor)
[https://arxiv.org/pdf/1206.1901.pdf](https://arxiv.org/pdf/1206.1901.pdf) page 14 has the Matlab code
You could try [Stan](http://mc-stan.org/users/interfaces/matlab-stan).
Just checking back and realized what you're issue is. You can use the annotation function I cited above, and insert the value from the indices you want (this assumes you know the exact location). Once you have the indices, you can get the exact value of the location by just using num2str(DATA(Xposition,Yposition)) As a side note, I'm not sure why the cursor tool isn't displaying the cell value automatically as it should. What sort of image data are you working with?
Awesome, thanks!
Thank you so much! 
Thanks for the info. 
Great! Will check this out. Thanks for the quick reply. 
This means the string '1 35' is sent to the serial device. What the device does with that, I can't tell you. Read the documentation for the device you're working with. 
The Matlab procedure for this is straight forward. Just write a transfer function, import your sound as an array, convert the output array to wav. The trouble is actually figuring out the transfer function for the circuit, which I can't really help you with in this case. As others have said, real time programming is a pain with Matlab. If you have or your department a few grand lying around, you could always try something with Quanser. Alternatively, Matlab does compile to C/C++, which would allow you to get a real time setup with the right hardware. Lastly, it's very important to remember that part of what makes analog music gear great is that it does not function perfectly. If you program an effect exactly per the circuit, you're liable to get a very full, sterile sounding tool. Many free vst plugins, particularly MDA, are created like this. But don't let that dissuade you.
This is exactly what I was looking for. Thank you for posting it. I havent fully read through it yet (though nplan to), but it looks like it is a rather nice overview of HMCMC, which is an added bonus as well. The bulk of the optimization and picking hyper-paramaters and such is more than I need atm, though if my initial tests work Im sure that info will be very useful. Side note: in case you were curious, Im testing is a method I came up with to estimate the gradient of the error function (potential energy in HMC) using the already collected samples. [my initial results look fairly promising](https://imgur.com/a/2HRp06L) - the computation is effectively free when compared to the expense of typical forward modelling operations in the problems I deal with. Now to see if it scales well with more dimensions. Side question: my method to estimate the gradient direction inherently normalizes the gradient. Do you by chance know if I can get away with just having the potential energy gradient direction and not it magnitude? I imaging I could figure out a decent approximate magnitude too, but i haven't yet.
This is not the answer you want but if you need strict time requirements this method and MATLAB are not the way to go about it. I would recommend a dedicated serial interface software for grabbing the data and then post processing it in MATLAB. Really you want to be polling the connection at a given baud rate, with the polling function taking much less than your period. Having the sample rate depend on code execution is risky.
It's maybe not what you want to hear, but I would bet that **drawnow** is what makes your loop so slow (use profile to confirm). If speed is a concern, just remove it and do your plotting once the loop is done. Basically in Matlab, you have to choose between speed or live visual output (whether plot or disp), but can't have both.
Is there a reason why you cannot use a simple velocity verlet scheme to approximate the trajectory? from that you should be able to solve for dx/dt and get the magnitude of potential energy change? &amp;#x200B; There is also an approximation in Szabo and Ostlund, Modern Quantum Chemistry for the hamiltonian with respect to the error function. I used this to do a simple hatree fock computation once and, without normalization, my energy values did not match the theoretical values. I am a little limited in scope when it comes to what you appear to be doing, but, based on this, I would say you need to normalize to get the correct energies. &amp;#x200B; I have a velocity verlet python scheme I could pass along to you. I used it with a lennard jones potential, but you could easily adapt it to fit your potential equation (as well as adapt it to matlab-it's fairly simple). If that could help at all, let me know! Your data looks promising though, wishing you luck!
This is incredibly vague and reads like a homework question than a technical question. The images show an inversion of the RMS values from quiet to loud and loud to quiet. Is that what you mean by flipped?
If you read over the paper provided, on page 27 it goes over how you would scale the HMCMC with dimensionality! Since I am not sure how your gradient is calculated, I can't really provide you much of an answer. Based on the information you gave, my only idea would be: Since -(du/dt) = Fx = m\*(d\^2x/dt\^2) then: d\^2x/dt\^2 = -(du/dt)/m \~in matlab you could use odeint to solve that differential by first calculating du/dt (this would be your potential energy gradient). Set up a new function of that gradient with respect to (x,t). Define x0 = x\[0\], x1 = x1\[1\], x2 = -du/dt/m Potential = function (x, t) x0 = x[0] x1 = x[1] x2 = -(du/dt)/m return x1, x2 %set initial conditions for position and velocity %(assuming vi =0 and position = xi) initial_conditions = xi, 0 value = odeint(potential, initial_conditions, t) here you would need to plug in some initial xi value. I don't know how you're calculating this so I am not sure if you have one.. but I am just assuming you do. next: Position = value[:,0] Velocity = value[:,1] Your magnitude of acceleration is just velocity/t. since acceleration = d\^2x/dt\^2 which equals -(du/dt)/m, you should be able to get your magnitude of potential by doing momentum = -value[:,1]*mass %Velocity = value[:,1] Let me know if that helps at all!
Do you mean inverted wave form? Or inverted spectrum? First, very easy - Load your wav file, take your data vector, make all the negative values positive, and all the positive values negative and it will be an inverted wave form. 
Have you seen the find() function? It tells you which elements in a vector meet a condition that you specify. Give it the right condition and it'll tell you which numbers you need to average...
I started writing some code and realized there are a lot of ways to do this like most coding projects. vectorIN = linspace(1,100) ii = 1; validSum = 0; for I = 1:length(vectorIN) if vectorIN(I) &gt; 0 if mod(vectorIN(I),7) == 0 MultofSeven(ii) = vectorIN(I); ii = ii + 1; end else continue end end Avg = mean(MultofSeven)
That gave me an answer of zeros. It is supposed to look like this % returns average of 14 and 28. -7 is not included, because it is negative. disp(avgpositive7multiples( \[ 2 14 28 -7 5 \] ) ) &amp;#x200B; 21 &amp;#x200B; also I made the function -&gt; function Avg = avgpositive7multiples\[vectorIN\]; not sure if that is why? 
In case you're curious, here's the one line version that I was hinting at in my comment: &gt;&gt; x = 1:100; &gt;&gt; mean(x(mod(x, 7) == 0 &amp; x &gt;= 0)) ans = 52.500
Thank you! I was trying to put that in function form and I keep having the same issue though. &amp;#x200B; function avg = avgpositive7multiples(x); x = 1:100; mean(x(mod(x, 7) == 0 &amp; x &gt;= 0)) &amp;#x200B; in the command if I do disp(avgpositive7multiples( \[ 2 14 28 -7 5 \] ) ) instead of returning an answer of 21 I get 0
Remove the `x = 1:100;` line, that was my test data. &gt;&gt; x = [2, 14, 28, -7, 5] x = 2 14 28 -7 5 &gt;&gt; mean(x(mod(x, 7) == 0 &amp; x &gt;= 0)) ans = 21 &gt;&gt;
sca is the shorthand for Screen('CloseAll'). You would do something like this: KbPressWait; sca; This waits for a keypress and then closes the screen. See various demos (help PsychDemos) or Peter Scarfe's PTB demos for examples
Please don't simply do homework problems for people. 
So transparency is a bit difficult to work with in matlab in general. One option is the function here: https://www.mathworks.com/matlabcentral/fileexchange/16233-sc-powerful-image-rendering However, for your case, I'm assuming what you'd like to do is have an image with the '0' areas of the mask removed. My method for that is the following: 1.) Prepare binary mask, cmask (needs to have the same dimensions are your data matrix). 2.) Convert '0' values of binary mask to 'NaN': cmask(cmask == 0) = NaN; 3.) Multiply element-wise by your matrix of interest in the imagesc command: figure;imagesc(data.*cmask); This will render an image where the '1' area of the mask will follow the colormap scale your use, while the 'NaN' values of the mask will be black.
This is a good example for using indexing rather than loops or find functions. First, eliminate the negative values, as they are not useful. Let's call V your input vector. V(V&lt;=0) = []; Second use the [modulo](https://www.mathworks.com/help/matlab/ref/mod.html) function to find the remainder. You now have a new vector which is 0 if the number is divisible by 7, and some non-zero value if not. Z = modulo(V,7); Finally, average the index values where your original vector has a non-zero value. V_avg = mean(V(Z==0)); So there you have it, the whole function in 3 lines of minimal code. You always want to avoid loops and search functions if possible when working with matlab. Plus, reducing the amount of code helps readability.
u/wg90506 has a perfectly workable answer, but I think your problem is slightly simpler than that. &amp;#x200B; Presuming you have the logical mask where 0 is transparent and 1 is visible (you say you do), you can do something like this, I think: `imagesc(myImage, 'AlphaData', myLogicalMask)`
Huh was not aware, thanks!
I haven’t tried this method yet, thanks. My memory tells me this is a good trick when using pcolor. We’ll see.
Thanks. However, this Inexplicably didn’t work! The image is returned unmasked with a transparency of 0.5. Or close to the average of my mask, maybe? I am using 2017b not sure if something is awry with this version?
you also know that those equations for y2, y3,... are not going to be a straight line right? remember y = mx + b? you have those as parabolic right now
So the issue with your code is that for y2-y6, the outputs are scalars, while your x variable is a vector. To plot x vs. y2, for example, they both need to have the same number of elements. So make your y2 line say “y2(1:length(x))=“ This will assign that constant value to every value of x from above. Your plot command should work as is.
lol the yikes made me crack up because yeah I get it. Yeah, I understand that the plots aren't going to be straight; I just meant to plot each so that it is one above the other like so.
hahah it was supposed to. Let me know if that worked out for ya! and gotcha
You actually don't need the `logical(ones(100) .*`. If you just do `img &gt; 0.5` it will compare each element and return a 100x100 logical array for the mask. But thanks for pointing out `'AlphaData'` with `imagesc`. I didn't know about that before.
Yep. Thanks. I had defined thought my array was logical, turns out It was int8. Very important that it is logical! Got it to render correctly..!
Can you provide an example of code that won't work?
&gt; If you read over the paper provided, on page 27 it goes over how you would scale the HMCMC with dimensionality! Sorry, I meant "test if my gradient approximation method scales with dimensionality", not if HMCMC does. I know HMCMC does, and its my understanding that high dimensional model space problems are actually ideal for HMC, since using a purely random-guess MCMC method with a three-dimensional model space takes forever to adequately sample the model space, but should be much faster with HMCMC since the gradient info helps guide it through the massive model space to the areas it actually needs to densely sample. &gt; Since I am not sure how your gradient is calculated I cant give away all the details, but you can think of it as a finite difference approach that uses previous collected MCMC samples (which dont require re-running forward computations) instead of using the "standard" differences (which would require `N`/`2N` additional forward computations (depending if you use central differences) for a N-dimensional model) This inherently is a point computation, not something that gives a function, so i dont thikn the ode methods would work, but I think what you posted may be quite helpful. I just need to figure out a analytic solution (which I would want to use rather than the ode solver anyways, for efficiency). Side note: I had forgotten just how nice using "conservation of energy" was for relating different quantities. Makes problems so much more intuitive... 
This looks interesting. For the moment I would rather keep things in matlab for simplicity since this is still in the "trial and error / development" stage (and since my matlab is better than my python), but Ill definitely have to look into STAN more at somepoint
One suggestion: your ii=1 while ... temp(ii,:,:,:)=readframe(...) ii=ii+1; end would be much more efficient doing something like this % optional numFramesGuess = ... % preallocate if exist('numFramesGuess','var') &amp;&amp; ~isempty(numFramesGuess) &amp;&amp; numFramesGuess &gt; 0 useNumFrameGuessFlag=true; temp0=&lt;read 1st frame to get size&gt; temp=zeros([size(temp0),numFramesGuess],'uint8'); else useNumFrameGuessFlag=true; end ii = 1+double(useNumFrameGuessFlag); while ... % add to the LAST dimension to make each addition contiguous in memory temp(:,:,:,ii)=readframe(...); ii=ii+1; end if useNumFrameGuessFlag &amp;&amp; ii &lt; numFramesGuess temp=temp(:,:,:,1:ii); end
Counterintuitively, the function to draw circles in the rectangle function...
It might do so... If the function worked at all for me, haha. I'm just not sure what I'm supposed to do to get it to work in the first place. :( 
Check the documentation - e.g. [here](https://se.mathworks.com/help/rf/ug/circle.html). Looks like you'll first want to use smithplot, get the handle h, and then pass that as a parameter to circle, e.g. amp = read(rfckt.amplifier,'default.s2p'); fc = 1.9e9; h = smithplot circle(amp,fc,'Stab','In','Stab','Out','NF',10.396,h); legend('Location','SouthEast')
Stan has a matlab interface by the way.
Of course, you’re right. I was in the mindset of trying to make the values as clear as possible. 
Why not? It isn't my responsibility to make sure they learn a lesson. I am not getting paid to teach, and I have not been trained to teach. It is the student's job to learn and form good study habits. I remember being a student and going to the internet for help as a last resort. If it got to that point I was stuck and probably short on time. It would have been nice for someone to just give me an answer and cut me a little slack. When someone asks me a question, I try and give them the correct answer because that is the best I can do. I would also argue this person is able to glean a great deal from seeing different ways to write this code.
+1 for vectorization. OP, learn to use Matlab! If the dimension of `temps` is large, this code is several of orders of magnitude faster than yours. I also wonder why you iterate 1,000 times. `Vi` seems to converge rather quickly. Why don't you try this? Vi = (R .* temps) ./ P; diff = 1; tol = 1e-8; while (diff &gt; tol) volume = (R .* temps) ./ (P + (a ./ Vi.^2)) + b; diff = max(abs(Vi-volume)); Vi = volume; end 
Nitpick: would it be better to use short-circuit &amp;&amp; here? Probably wouldn't make a noticeable difference unless x was really long.
If I'm understanding your suggestion correctly, short circuit doesn't work here. Bitwise is needed because both sides of the &amp; are logical vectors that we're using to do logical indexing of the input vector, and the short circuit AND only works on scalars. Sorry if I've misunderstood you. Would be interested to see how you'd code this using short circuit AND (I know how I'd do it, just wondering if you have a better way).
Thank you!! I was about to come back and say it wasn't quite working properly, however I was forgetting to subtract the fixed p value, making my code try and solve for the V at p = 0. I guess I was just confused when looking at fsolve as to what the second input was supposed to be, I didn't realize it was just a starting point for the computer to begin solving from. Thanks again for the help.
Okay thank you guys appreciate the help!
Did you read the [documentation on vpasolve](https://www.mathworks.com/help/symbolic/vpasolve.html#bt51ety-1_2)? It explains how to set ranges. In fact, I would recommend reading MathWorks' documentation on [solving equations numerically](https://www.mathworks.com/help/symbolic/solve-equations-numerically.html#budigrq-6) in its entirety, as it will help you with all of the issues you're having.
You're welcome. Come back with some code and any error messages you're getting if you run into more trouble.
The first hint in your assignment prompt tells you what is missing from your code.
If you type `1./factorial(1:3)` in your command window, notice that you get a vector out, but you want a single number output. A tip, you may find the command `sum` to be helpful. Also, notice that the equation isn't 0 + the terms you're calculating, but 1 + those terms. 
Oh! My mistake, I misread that. Hm. I understand. Could you maybe try a simple velocity verlet scheme to get the trajectory instead? And yes, agreed there. 
That input for approx eulernumber (3) is just an example. the n is supposed to be any positive number 
I understand, but it will still illustrate the point. No matter what term you input- you will get a vector out, not a single number
Try: sum(1./factorial (0:n))
Is it because it will never use the true value of pi in any computation? It must use some truncated valhe of it as pi whoever many decinal places that may be
How does a computer store numbers? Are there any numbers a computer can't represent exactly? You can read more about this topic [here](https://www.mathworks.com/help/matlab/matlab_prog/floating-point-numbers.html) or [here](https://en.wikipedia.org/wiki/IEEE_754).
**IEEE 754** The IEEE Standard for Floating-Point Arithmetic (IEEE 754) is a technical standard for floating-point computation established in 1985 by the Institute of Electrical and Electronics Engineers (IEEE). The standard addressed many problems found in the diverse floating point implementations that made them difficult to use reliably and portably. Many hardware floating point units now use the IEEE 754 standard. The standard defines: arithmetic formats: sets of binary and decimal floating-point data, which consist of finite numbers (including signed zeros and subnormal numbers), infinities, and special "not a number" values (NaNs) interchange formats: encodings (bit strings) that may be used to exchange floating-point data in an efficient and compact form rounding rules: properties to be satisfied when rounding numbers during arithmetic and conversions operations: arithmetic and other operations (such as trigonometric functions) on arithmetic formats exception handling: indications of exceptional conditions (such as division by zero, overflow, etc.)The current version, IEEE 754-2008 published in August 2008, includes nearly all of the original IEEE 754-1985 standard and the IEEE Standard for Radix-Independent Floating-Point Arithmetic (IEEE 854-1987). *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
+ The other commenter has mentioned it as well. Is it just that since it's floating point, the system never ended up dividing by zero as it stepped through - just something very, very close to zero?
Well, you get the singularity error, even while getting a finite, non-zero answer. The answer to your question is related to the following: Why does it not give exactly zero for the answer? That's where those links I gave you come in! [Here's another one](https://www.mathworks.com/help/matlab/ref/pi.html).
 sum(tril(A.*diag(f),2)) ?
Loop over each gray level and use the find() function 
i appreciate the response, my understanding is that the find function takes the position of all non zeros is there a way to return a desired value into a vector? &amp;#x200B;
Hint: `quad` is a numeric approach, meaning it evaluates the function at specific values. Consider what values the function gets evaluated at for your 2 use cases.
to be honest, problems like this are really much better solved in mathematica. If you havent figured it out yet and are willing to type up the equations in a format Mathematica understands id be happy to run it through and see if it gives me an answer. Note: main syntax differences are * functions are uppercase and use `[...]`, e.g., `cos(...) --&gt; Cos[...]) * arrays look like `[[x11,x12,x13],[x21,x22,x23],[x31,x32,x33]]` 
I thought you could just replace the &amp; with &amp;&amp;. Because if the number isn't divisible by 7, you don't need to check if it's positive (or vice versa).
:D
Nice! I like the use of matrix multiply. Should be faster and more efficient indeed.
Not sure if OS makes a difference with performance, but I usually prefer windows with MATLAB. RAM depends on what type of simulation you do. If you do large matrix operations or load large data sets, the bigger the better. Do some typical simulations for your case and display memory information in MATLAB to get an idea, also observe the size of your variables in the workspace. Video card doesn't matter much, unless you do machine learning or want to accelerate some functions with GPU. Then your best bet is high end nvidia GPU. I would say at least GTX 1080 if you want a reasonable acceleration for ML. Another thing to consider is CPU, if you parallelize your code, then more physical cores are better. 
OS? Probably doesn't really matter. Max out your memory, get an M2 SSD for your OS partition, and get an Nvidia graphics chipset for CUDA.
More memory is always better, and CUDA is necessary for GPU calculations. My workstations at the office have Quadros. I do my school work on a 2011 MacBook Air though. MathWorks has a list of what features/modules are and are not available on different OS.
&gt; Which OS runs matlab the most efficiently? hard to say without running tests on actuial hardware. I recently switched my desktop from windows 10 to linux and matlab is running at least 50% faster, though my desktop and windows *really* did n ot get along. YMMV. &gt; How much of a difference does having 32GB vs 16GB RAM? If you dont need more that 16 gb of ram at once? little to none (youll be able to cache more data in memory for faster access, but thats about it) If you do need more than 16gb at once? A HUGE difference. More ram is tremendously useful iuf youre running out, and not much help if you already have enough. &gt; large datasets Define large. a few GB? a few hundred GB? a few TB? &gt; Does having a high end video card make a difference in the speed of running analyses If you have the parallel computing toolbox you can offload some tasks to the GPU. If the task is embarrasingly parallel and compute intensive enough to saturate the GPU and make up for the I/O to/from the GPU you might see some good improvement. If you dont actively use it it wont be all that much better than integrated just for, say, making figures and other graphical tasks. OTHER THOUGHTS * as someone who owned a "power laptop" for 5+ years, I can confidently say Id rather have gotten something ultra-portable and a desktop. cost/performance is better on a desktop, and you can even set things up to connect to it remotely to run things on the desktop via the laptop. Just something to consider. * If you think you will be using matrix operations a lot, I would stick with intel over AMD. Rynex has a lot going for it, but one area it is really lagging in is AVX, which is heavily utalized in matrix operations (and a few other high-performance codes, e.g. `fft`).
So far none of the suggestions are close. It has nothing to do with floating point numbers or decimal representations of pi. Here is a hint: Try the same computation on the interval [-pi,pi] and [-1,2].
&gt; Id rather have gotten something ultra-portable and a desktop. Yeah, as long as you live somewhere with decent internet, a high performance remote desktop + cheap laptop is almost certainly cheaper for the same performance. This is what I do for daily work.
Intel CPUs perform better than AMD due to some of the low-level library support. take a look at this thread for a good explanation: https://www.reddit.com/r/matlab/comments/9hz8r5/codeshare_an_almost_fully_automated_function_for/e6gk4px/ as others have said, if you're interested in GPU computing in matlab you'll need to go Nvidia.
 Thank you a lot for the offer 🙇‍♀️
Good call on adding a stopping condition to check if the code converged. Usually (if I remember to add it lol) I will combine this with my code and do something like Vi = (R .* temps) ./ P; diff = 1; tol = 1e-8; kk=0; kkMax=1000; while (diff &gt; tol) &amp;&amp; (kk &lt; kkMax) volume = (R .* temps) ./ (P + (a ./ Vi.^2)) + b; diff = max(abs(Vi-volume)); Vi = volume; kk = kk+1; end This works well as an added safeguard against "getting stuck in an infinite loop" in case the convergence condition is unattainable. It isnt so important when running the loop on 1 object (like this code is doing), but if you run it on 1000's of different objects its real easy to have a couple that just wont converge.
&gt; velocity verlet I wasnt familiar with this scheme, though looking into it it seems almost identical to the leap frog scheme. I havent worked out the math, but I wouldnt be surprised if they were (at least to 1st order) identical and use a change of variables (where velocity verlet is based on equations for relating position/velocity/acceleration and leapfrom is based on impulse momentum theorem. At any rate, ill definitely have to look into it more, but [I am getting close to getting my code to output accurate magnitudes and directions](https://imgur.com/a/iS20tGw), so I think I maybe could still use leapfrog. The one part im still trying to work out is if I can still figure out the gradient without having the value at the actual sample location (id have this for the first computation, but all the rest of the leapfrom steps would require a forward computation. The "standard" way (in my field) around this is to assume error is locally quadratic, but id rather not use that unless I have to...
This usually happens when you try to print a non-character as a character. Are you trying to print a number using printf but with the %s format specifier?
You might be better off asking in a C++ sub
So, was my first guess correct that the wider range of X values allows the system a greater margin of error? The hints on the worksheet say "think about how Simpson's rule works," which as far as I can tell doesn't support that explanation. 
For some reason instead of generating the code for rgb2gray it's generating code calling this function from a library. You should add C:\[matlab_install_folder]\extern\lib\win64\mingw64\libmwrgb2gray_tbb.lib . to the list of files to use at the linking stage (I don't think I have ever used Dev C++, so I'm not sure how you will do that, but there should be a way to do that. Some kind of "project configuration", or maybe in the "ressources" tab that exist in the screenshot) I may be able to help a little more if you tell me: - how you generate the code (which configuration options, using the coder graphical "app", or the codegen command) - do you have embedded coder available, or only matlab coder?
Well, sounds like your script returns a character, so you are having a data type issue. Maybe you're summing a ship name field instead of a ship mass field of that cell structure? The number value of 䪜 appears to be 19100.
Maybe find out how to read a QR-code to begin with. Afterwards you can use it on the information you get from the image.
No. Look at which behavior happens if you try it again on the interval [-2pi, 2pi]. 
Gotcha. So it's because the function isn't centered on 0 anymore, so stepping from a &lt;= x &lt;= b doesn't include 0, just the numbers to either side?
This is pretty close. 
&gt;I wasnt familiar with this scheme, though looking into it it seems almost identical to the leap frog scheme. The velocity verlet and leap frog schemes will both generate identical trajectories and I am not aware of any difference in performance. I.e. if you worked out the math, they should be exactly the same. &gt;The one part im still trying to work out is if I can still figure out the gradient without having the value at the actual sample location (id have this for the first computation, but all the rest of the leapfrom steps would require a forward computation. This is why I thought I might recommend you look into velocity verlet over leap frog integration. Velocity Verlet provides both the positions and velocities synchronously (at the same time-steps) and also requires only the initial positions and initial velocities to initiate. Leapfrog, on the other hand, requires the 'future'/subsequent positions in order to find the current velocities, which makes things messy. 
Thanks cegras and jkool702. This is just what I needed. It is still not quite right as it's adding A(1,1)\*f(1,1); A(1,1)\*f(2,2); A(1,1)\*f(3,3), etc. to each row of the new vector but I'll just subtract it off at the end.
The error tells you that your lower bounds are not doubles, which is a disingenuous way of saying you forgot to provide them. Check the [syntax](https://www.mathworks.com/help/optim/ug/linprog.html#d120e80520) closely; you'll see that there are no signature options taking 6 parameters. Fix your bounds (you can use -inf and inf, if you'd like) and that problem should be resolved. The next problem you'll have is that you're looking for 10 `r` values, but providing too few inequality constraints (i.e. your `A` is not `numel(b)`x10). You'll need to scale that up to the right size, and do so consistently (instead of changing the number of elements every loop).
From the sidebar: &gt;The effort you put into [asking a question](http://www.catb.org/esr/faqs/smart-questions.html#intro) is often matched by the quality of our answers. If you give us some more detail, we'll be able to help you better. Show us the code you've written so far, specifically describe what you don't understand, ask more direct questions, etc. As suggested, you might want to [read up on how qr codes work](https://en.wikipedia.org/wiki/QR_code) to get an idea of how to implement the process in MATLAB. The sub isn't for doing your homework, so you should make a serious attempt at implementing it. If you're not making a strong attempt at the code, we likely won't help much. Part of coding is figuring how *what* to do. Figure that out, and then when you have specific questions about *how* to do it, ask those questions.
Thanks for the reply. i actually modified it to this. c = linprog(-r,[dot(ones(1,i),c(1:i))],[rho*I*J],[],[],[1],[C],[],options); Now the error that i have is what you mentioned: The number of columns in A must be the same as the number of elements of f. I dont understand on how to scale it up. I will need A to be a vector with 10 columns as there are 10 r elements but how do i do this. The A constraint is the problem. Do i need the for(1:I) loop or doing it without would be fine? Optimization eq: Max I' (c(i)) : 1&lt;c(i)&lt;=C(i) and summation(1:i)\[c(i)\] &lt;=Rho\*I\*J Please help if possible.
you are right i dont need the loop. I will get rid of it. What should i put in for the A part for the summation inequality? B = rho\*I\*J.
Only you know the answer to that question. I have no idea what constraints your problem needs, as I'm not the one formulating the problem. This is something you should have worked out before starting the code! Generally, inequality constraints are used to ensure the 'boundedness' of your variables in relation to some other important parameter(s) related to your specific problem. For example, in a transmission network expansion problem (which is a mixed integer linear program), you want to be sure that none of the power lines in the system carry more power than that for which they are rated. To that end, you ensure that `|P_line| &lt;= P_limit` for all lines in the system. In what way do you need to bound `r` with respect to `B`?
I have determined the issue to be a line later in the script which attempts to `disp` an integer. The character displayed is 19100 as stated by u/avataRJ and this integer is relevant to my script's inputs, so it makes sense, though I now wonder why only this one is displayed as a Chinese character instead of the usual hollow box...
I was attempting to `disp` an integer (19100 when i = 2), having forgotten to include it within the inputs of the `num2str` function. The script works great now. Any reason why only this number displayed as a Chinese character?
Yes, I believe MATLAB is trying to send me a codified message in the form of ancient Chinese characters to help me save the world from imminent danger. In all seriousness, thanks for the info :P
Yes, with the definition of `s = tf('s');`, you can use `K = Kp + Ki/s;` to define a PI controller. What error did you get? The pasted code runs fine on my end (after changing the `K` in `[K,pole]=rlocfind(sysL);` to a `k` to avoid overwriting the TF). Whether or not that does what you want it to do is a different question.
Next version of this code will do the text conversion automatically instead of producing the plot. It will also need to compensate for clock error between the sender and receiver which should be fun to figure out how to do (I'm thinking, look at where transitions are made from 0's to 1's or vice versa and see how close that transition is to the next bit sample and if it's not \~1.92ms/2, then make an adjustment). 
If you have a bounding box, that means you have the corners for all the vertices. Calculating the area of a box (a kind of [parallelogram](https://en.wikipedia.org/wiki/Parallelogram) ) is as simple as multiplying the base times the height. If you have a more complex polygon, may I suggest you take a look at [polyarea](https://www.mathworks.com/help/matlab/ref/polyarea.html) in the documentation. 
Oh, yeah. That does it. disp tries to guess the data type. You were trying something along the like: disp(['Ship dry mass is: ' shipdispdrymass]) Now, since 'Ship dry mass is: ' is a string, or more properly, an array of characters (which are stored as numbers in the memory and only interpreted as letters when told that this vector is text), MATLAB assumes that everything else in that same array is also text. The other number values probably are not mapped to a character, or at least not to a character that exists in the font used by MATLAB and are shown as the generic "box". By chance, 19100 is mapped to the Chinese character. /y/OnlyOneCannolo explained how the mapping works.
The sample code they show in [the guide at sparkfun](https://learn.sparkfun.com/tutorials/mpu-9250-hookup-guide?_ga=2.261572941.1706652614.1541013543-1481996846.1541013543) demonstrates calculating the time between samples, then checking if the time is greater than some minimum sampling time value before processing: ... myIMU.delt_t = millis() - myIMU.count; if (myIMU.delt_t &gt; 500) ... If you could arrange your program to make use of this strategy (including the actual dt value for any finite differences), you should be well on your way. If you need more specific help, please feel free to ask a more specific question.
Is that something to be done throught Matlab or through the arduino program?
Either, but unless you're already measuring and recording the relative or absolute time at each sample, you'll have to at least do that first if you want to set it up in MATLAB. You can calculate the time difference between successive samples easily once you're there. Bottom line: you'll somehow need to collect time data alongside your measurements in order to properly correlate them.
Huh, TIL, thanks for pointing this out. Matlab treats axis inconsistently depending on the number of dimensions in the array - in other languages the column index is the critical one, so my habbit carried over here. 
Since I haven't declared a length and a breadth for the bounding box , will boundingBoxArea = boundingBox(3) * boundingBox(4); work?
Once you load them in, you can use the [reshape()](https://www.mathworks.com/help/matlab/ref/reshape.html) function. 
I'm not sure exactly what you are trying to do but here is what I'm thinking. Getting the column of trials is easy: trials = FileA(FileB); Then you want to cut out these observations from the second column: remaining_data = FileA; remaining_data(FileB) = []; 
With regards to why Linux ran so much faster than Windows for you ... A performance difference that big is probably not *due* to the operating system itself. Matlab gets performance boosts if you have the right software dependencies. It's probable that your Linux was already configured with these dependencies, or handled installing them automatically, while your Windows used the less performant default versions.
KbPressWait also returns a keycode (second output). You can convert from the code (a vector) to the key name with KbName: [secs, keyCode] = KbPressWait; keyPressed = KbName(keyCode); if strcmpi(keyPressed,'escape') % exit code goes here; I usually use some flag: exitNow = true; end Assuming this is in some sort experiment / trial loop, you can then have something like: if exitNow break; % get out of the loop end and then you'd have all of your cleanup code after (sca, etc.)
Thanks! Frankly, i use matlab first. So i am unskilled. My main question is this. How can i find a K value in a stable area using a 'for' statement.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/jIUbM2g.png** **https://i.imgur.com/nfaI0Nz.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
Your x equation is a scalar output. You need to form a vector of x values, the length of t. One way you could form both of these in the same for loop if you’d like is: k = zeros; for t = 0:0.000005:0.1; k = k + 1; x(k) = (your function of t); T(k) = t; end Followed by your plot code with the ‘T’ vector replacing the ‘t’ in plot. This isn’t the most efficient way but it should make it clear what the difference is between your code and what you’re trying to do. There are other possible methods/shortcuts too!
Oh shit! I didn't know the return arguments of `KbPressWait`. Nice!
I think, from your comments below, you've already figured this out, but I wanted to add to the conversation for anyone who finds this in the future: x_b is likely where the error is. You'll need to use `t.*exp` instead of `t*exp`. This is because `exp(-156.56*t)` is the same size as `t` (i.e. 1xN, N = (0.1/5e-6) +1), so you can't just "matrix multiply" (the default use of `*` in MATLAB) a 1xN by a 1xN. You likely want to "element-by-element" multiply. 
Google "Matlab OnRamp" it's a free 2-hour self paced course they offer newbies
1. Read the documentation. 2. Try stuff. This was sufficient to become one of most capable Matlab users in my industry (for whatever that's worth). You don't need special classes or tutorials. Just try stuff and learn from your experience. And read the documentation. Of course, you have to also have the necessary mathematical skill, but that's not a Matlab issue. 
&gt;The TA basically did these 2 questions for me \^ when I asked for help. He couldn't explain it because he had to go to his class. So experiment with his solutions until you understand them. Alter them. Try running small sections of his code. Inspect the value of the variables at different points of the code. Change it, see what the result is. 
Ah right- I didn’t quite understand, because you said you wanted two columns. Are the intervals regular? Otherwise your matrix will have a different number of elements in each row
I agree with this. Perturbing a script with different inputs and slight changes is the best way to understand how it works
 Looks interesting...I started on MATLAB and am trying to transition. Haven't watched yet, but the links didn't work for me though, so here are some new ones... Sorting [https://youtu.be/WqohqSY00mQ](https://youtu.be/WqohqSY00mQ) Inversion [https://youtu.be/SG54AhrUtD8](https://youtu.be/SG54AhrUtD8) CSV I/O [https://youtu.be/C_lwyA0kKjU](https://youtu.be/C_lwyA0kKjU)
I’m very interested in the comparison of plotting capabilities if you’re able to compare those. I use MATLAB for plotting data all the time, though I’ve often heard that Python can produce good vector graphics as well. I don’t know Python well at all, but I’d be willing to learn it if its plotting capabilities equal or exceed MATLAB’s. I can’t watch the videos at this moment but if you touch on this in any of the ones already posted just let me know and I’ll watch that one!
Yeah, sorry, I misspoke. The end result would be much, much more than two columns.
You are not summing them, adapt your f1 line such that it is `f1 = f1 + ...`
Similarities and differences in usage of indexing in matlab, and list comprehensions in python might be an interesting subject. 
&gt;Sorting https://youtu.be/WqohqSY00mQ &gt; &gt;Inversion https://youtu.be/SG54AhrUtD8 &gt; &gt;CSV I/O https://youtu.be/C\_lwyA0kKjU Thanks for the good links! I grabbed the like to the edit page by mistake.
In that case `reshape` can help, as another poster said
Forgot to put it in the main post, but I get this when I try to run it &amp;#x200B; `Matrix dimensions must agree.` &amp;#x200B; `Error in FILENAME (line #)` `if A=='Yes'` &amp;#x200B; Also, sorry I didn't use the inline code thing. I didn't realize it was a thing until right now when I went to post this comment
If you are using a version after 2016b, use `A=="Yes"` instead (note the double quotes). For earlier versions use `strcmp(A, 'Yes')` (this also works in later versions but is not as clean). `A=='Yes'` does an element-by-element comparison of the sequence of characters in `A` and the sequence of characters in `'Yes'` and gives you a vector of `1` and `0` values for where they match and don't match. You can think of it as doing `A==['Y', 'e', 's']`. This only works if the sizes match, as with any matrix. `A=="Yes"` and `strcmp(A, 'Yes')`, on the other hand, check whether the whole sequence is the same. `strcmp` directly compares the whole sequence of characters rather than doing it element-by-element, returning a `1` if the whole thing matches (different sizes of course do not match), and `0` if it doesn't. `A=="Yes"`, on the other hand, first converts `A` to a string, then does a whole-string comparison. This is because using double quotes creates a string variable rather than a character array. For character arrays, `==` is element-by-element, while for strings it checks the equality of the whole string. And operations with strings automatically convert character arrays to strings, so `A=="Yes"` is the same as `string(A)=="Yes"`. 
Matlab indices start at 1. Your FOR loop should therefore start at 1.
The double quote thing works great for what I need it to do. I would give you gold but I'm a poor college student and can't afford that. Thanks! 
# SOLVED!
Also, I just tested it with user input and the base algorithm works well. Now I just need to code the individual aspects of the program to make it function properly. Wish me luck!
This has been the best explanation of the difference between "" and '' that I've seen and probably clarifies why I've had so many issues with strings.
You might be able to solve it with `k(1 + 1/s)`, but you gain flexibility by finding the coefficients independently. How do the two parts of your PI controller affect system stability? In other words, what does the proportional component do to the TF, and what does the integral component do to it? How would you find the solution by hand? Your system has five zeros to begin with, and you are going to add another with your PI. With only 3 finite poles (including the pole from the PI), what is necessary to ensure stability? The [for loop](https://www.mathworks.com/help/matlab/ref/for.html) itself is easy to implement, but you need to know the answers to those questions if you don't just want it to be random guessing. This is almost certainly a homework question, despite the lack of flair, so I'm hesitant to give you any more direct advice; however, I hope that pushes you in the right direction.
Regarding the matrix inversion, I think you could also include comparing the performance of `\` and `/` (i.e. `mldivide` and `mrdivide`) and numpy's equivalent (I think it's [numpy.linalg.lstsq](https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.linalg.lstsq.html)).
Okay, thank you. Those are excellent learning questions. I especially appreciate the part where it directs you to the documentation. Pro tip: you can use `help &lt;name&gt;`, `doc &lt;name&gt;`, and once you've typed the function name in the editor or command window, right-click -&gt; 'Help on &lt;name&gt;' to get to the documentation for any function. If you open the Help Browser (which you can do at the bottom right of the window that pops up from the right-click method), you can also browse broader topics on the left side of the window, finding new things you didn't know about or learning more fundamental info about the general idea of what you're looking at. The first question is just algebra. You could write the solution by hand easily. It's just a matter of translating it to code. It requires you to understand (at minimum) [variables](https://www.mathworks.com/help/matlab/matlab_env/create-and-edit-variables.html), [conditional statements](https://www.mathworks.com/help/matlab/matlab_prog/conditional-statements.html), and [functions](https://www.mathworks.com/help/matlab/function-basics.html). Note that each of those links is more than just a syntax reference; they also explain how each topic is used, and provide examples for you to learn from. The second question has a small surprise in it, if you're not used to programming. Did you know that [the base trigonometric functions in MATLAB expect input in radians](https://www.mathworks.com/help/matlab/trigonometry.html)? There are a second class of functions with a `d` appended to the end for input in degrees (e.g. `sind`). The questions on [for loops](https://www.mathworks.com/help/matlab/ref/for.html) are good for getting you into more fundamental programming tasks. These fundamentals include [data structures](https://www.mathworks.com/help/matlab/data-types.html), control flow ([iteration](https://www.mathworks.com/help/matlab/matlab_prog/loop-control-statements.html) and conditional statements), functions, and [objects](https://www.mathworks.com/discovery/object-oriented-programming.html). You'll definitely enjoy MATLAB for your linear algebra class, but despite it not being the *best*, you might also find some use for the [symbolic toolbox](https://www.mathworks.com/products/symbolic.html) in your calculus class too. It can be handy to check your work on integrals and derivatives, both definite and indefinite. Personally, I prefer WolframAlpha for that, but the functionality is there and will help you learn MATLAB more quickly. I've given you some examples of MathWorks' own documentation, and hopefully some encouragement to keep at it. You've also got the Cody Challenge, linked in my first reply to help you practice and learn new functionality. Finally, you have the sidebar of this sub, and the sub itself if you have specific questions. There are lots of folks to help you here if you bring some code that doesn't work and any error messages you're getting. Good luck!
What do you need from the figures, specifically? Figures are really just mat files with their extension changed. If you make a copy of the figure file and change its extension to .mat, you can open it as a .mat file and should be able to get the raw data out if you want. Of course you can't exactly reproduce the figure that way, but you can re-plot the raw data.
Good call! I've been needing a reason to dust off my Diff Eq books. 
When you return multiple outputs, they go in `[]` not `()`. Also, you're missing an `=` in line 11
I used to use the `inv` function a lot too, but if you're using MATLAB a lot, I really recommend getting comfortable with the `\` and `/` operators. It's sometimes order of magnitudes faster, and actually more accurate. 
Wow I’m dumb, thank you!
you defined a variable "size" . MATLAB thinks you are indexing into it. Change the variable name if you want to use the function "size".
&gt; Matlab treats axis inconsistently depending on the number of dimensions in the array - in other languages the column index is the critical one I wouldnt call it inconsistent, just different. A big like how big/little endian are different, but both consistent. COlumn-major vs row-major indexing varies landuage to language. * Notabe row-majopr languages include C / C++ / objective C and pascal. * Notable column-major languages include MATLAB, fortran, R and julia. * [a bit more info and other language support for row/column-major indexing](https://en.wikipedia.org/wiki/Row-_and_column-major_order) Side note: looking over my code, the coment on "adding to the last dimension" is ambiguous. You want to loop over the last dimension such that on every iteration yopu add data that fills the innermost dimensions. e.g. you want to do the following % M is a for 4d array for n5=1:size(M,5) for n4=1:size(M,4) for n3=1:size(M,3) M(:, :, n3, n4, n5) = &lt;...&gt; end end end This way, every `M(:,:,n3,n4,n5)` is a contiguous chuck of data in memory^(\*\*), and on each iteration the new chunk of data starts (in memory) where the last chunk ended (in memory). ^(\*\*)NOTE: "memory" here is reffering to the vatrual memory addresses MATLAB actually sees, not necessairly the physical emory addresses (which, due to things like ASLR, may not actually be contiguous chunks). Nevertheless, this is still probably the most optimal scheme for generally reading/writing data in sequential and contiguous chunks of physical memory. 
**Row- and column-major order** In computing, row-major order and column-major order are methods for storing multidimensional arrays in linear storage such as random access memory. The difference between the orders lies in which elements of an array are contiguous in memory. In a row-major order, the consecutive elements of a row reside next to each other, whereas the same holds true for consecutive elements of a column in a column-major order. While the terms allude to the rows and columns of a two-dimensional array, i.e. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
The lazy way is A=lower('Yes or no?'); switch(A(1)) case 'y' % yes case 'n' % also no otherwise % error end "lower" converts to lowercase, and then compare just the first letter. Error state in case you get something else as an answer.
Dammit, I didn't notice this. Such a stupid mistake. Thanks.
Nice explanation of chars vs strings. One side note: you *can* use `==` with chars, you just need to add a couple extra parts `strcmp(x,y)` is effectively equivalent to `( ( numel(x) == numel(y) ) &amp;&amp; ( all(x(:) == y(:),1) ) )` `strcmpi(x,y)` is effectively equivalent to `( ( numel(x) == numel(y) ) &amp;&amp; ( all( any([(lower(x(:)) == lower(y(:))), (upper(x(:) == upper(y(:)))], 2), 1) ) )` 
Yes, I know it is possible, but it is generally not an approach to use in practice, and certainly not for a beginner. My explanation was already really long and I didn't want to draw things out any further. That is why I also didn't get into characters as numbers.
The most robust way i can think to deal with this is defaultVal=true; % or false validYesResponeStr = {'yes','true','1'} %cellstr array, can be customized validYesResponeStr = {'yes','true','1'} % cellstr array, can be customized validNoResponeStr = {'no','false','0'} % cellstr array, can be customized if ((ischar(A) || isstring(A)) &amp;&amp; any(reshape(strcmpi(A, validYesResponseStr),[],1),1)) || (isnumeric(A) &amp;&amp; A == 1) || (islogical(A) &amp;&amp; A)) % valid 'yes' response A = true; elseif ((ischar(A) || isstring(A)) &amp;&amp; any(reshape(strcmpi(A, validNoResponseStr),[],1),1)) || (isnumeric(A) &amp;&amp; A == 0) || (islogical(A) &amp;&amp; ~A)) % valid 'no' response A = false; else % invalid response warning('\n\nWARNING: Your response was not recognized as a a valid yes or no response. Using builtin default response of %d. \n\n',defaultVal*"YES" + ~defaultVal*"NO") A=defaultVal; end PS, i typed this directly into reddit without running it, so my apologies if it is missing a parenthesis or something somewhere.
`%` is used in MATLAB to begin a comment. You might notice the editor showing everything after the first `%` sign in green. For the modulo operation you can use the `mod()` function (type `help mod` in the command window).
Hey bro, I solved the problem now. Thanks for your help, I had no prior experience in MATLAB until this evening. About your edit, I didn't phrase the question correctly. I had to find the how many divisors within 1:200 exist, my answer says: 84. Thanks bro. My code: `counter = 0;` `for i = 1:200` `if mod(i,3)==0 | mod(i,7) == 0` `counter = counter + 1;` `end` `answer = counter;` `end` `disp("There are " + answer + " multiples of 3 &amp; 7 between 1 and 200.")` &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B;
 for i = 0:3:200 Would speed it up a little
No, I didn't have the eighty columns option checked. I didn't know about double clicking the variables in Workspace though, that's pretty much perfect for my application so I will be using that from now on. Thank you!
A more complicated method might be to use fprintf and customize the output. 
You're welcome, enjoy!
doc format
One tip since your new to matlab - try and learn to vectorize things. MATLAB is fundamentaly based on manipulating arrays, and most operations that work on a scalar work on an array too. As an example, you should be able to also get the answer doing nnz( any( [mod(1:1200,3) ; mod(1:1200,7)], 1) ) the stuff in the brackets produces a [2 x 1200] logical array with 1's everywhere it is divisible by 3 (top) or 7 (bottom) `any(...,1)` looks at the 1st dimension and returns true if any of the values in it are true, retuning a [1 x 1200] vector `nnz(...)` gives the number of non-zero elements I.e., a count of all the "true" values)
You should be able to double click the variable in the workspace and examine it that way. It's also useful for a quick copy paste into excel. 
The message refers to your indexing, not the data in the matrix. When you say: C(j, i) = ... The numbers `j` and `i` need to be real, positive integers. If your for loop iterates over `ny-1 = 0` or `nx = 0`, then you'll get the error. Further, when you say: ...+C(j, i-dx)... You're telling MATLAB to use a non-integer value to index into C, since `dx = 0.01`. Resolve all such issues and you'll be in good shape.
This is correct! OP, in the future, you could try setting a breakpoint at the line that's causing you trouble, and looking at the values of the variables you're trying to use at that moment. 
You are right that this is a matter of line endings. Your unix script only has &lt;lf&gt; as line endings. Your windows script expects &lt;cr&gt;&lt;lf&gt; and has trouble parsing things. It probably still looks visually correct since MATLAB is somewhat cross platform. Use a text editor like notepad++ that has an EOL (end of line) conversion feature.
From the look of the generated waveform, if you zero pad symmetrically at the beginning and the end, you should be fine. Better yet, why not simply define your time vector to be the same length as your generated signal, instead? For a single input: t = linspace(0, signal_freq*num_cycles, length(u));
in linux (or in windows via WSL) there is a program called `dos2unix`. It will take care of converting the document from unix style to windows style (or vice-versa).
It means that you have included (either explicitly or implicitly with the options that you used with mex) files to use both [the matlab c api](https://www.mathworks.com/help/matlab/cc-mx-matrix-library.html) and the [matlab data api](https://www.mathworks.com/help/matlab/matlab-data-array.html) (a more c++ish way than the C) but as stated in the doc and in the error message, you can only use one. By curiosity, which modern oop functionality that you want is missing in matlab?
Update: Looked some more. Turns out nchoosek(A,n) is exactly what I needed! Never mind, problem solved.
&gt; nchoosek That is a weird way to spell binomial coefficient.
It depends on what you are doing. matplotlib is good if you want something similar to MATLAB, if you want really fine-grained control of what the plot looks like, or if you want to make plots for publication. If you want to easily make complex statistical plots, seaborn is better. If you want highly dynamic and interactive plots bokeh is better. If you want to do data exploration holoviews or pandas is often better. If you want to plot massive amounts of data datashader is better. These all provide capabilities beyond what matplotlib and MATLAB have.
You will probably enjoy [logical indexing](https://www.mathworks.com/help/matlab/math/array-indexing.html#d120e1410). That ought to get you moving again.
Well I had already *briefly* glanced at the documentation for nchoosek (since it was in the "related" section at the bottom of the documentation for I think perms), but quickly moved on because the first section seemed not to describe what I needed. But that section wasn't for vectors but for scalars. The section for vectors described exactly what I needed, and thankfully I looked back at the documentation thinking I might've missed something
Logical indexing is definitely the way to go, as the other poster said. Here is a hint: suppose you want to extract elements of a vector `x` which meet a certain condition `cond1`. If you were doing a loop you would do it something like this, in pseudocode: for each element of x if x(i) satisfies cond1 append x(i) to v end end But its much easier to do it in Matlab. You just write v = x(cond1) assuming `cond1` equals 1 in the `i`th element if `x(i)` satisfies `cond1` and 0 otherwise. To do two conditions: v = x(cond1 &amp; cond2)
+ OK so the idea is fantastic (thank you to you and to /u/angrmgmt00). So this vector with 1s in odd indices, 0 otherwise is a little tricky. What I've done is Googled a solution, and the answers are... interesting. I have been introduced to the Toeplitz matrix, which can be easily modified to be a row vector = [1, 0, 1, 0, ...] of size 'n'. The thing is, Toeplitz seems like a somewhat obscure function that is way outside the scope of a basic course. Is there a better way?
Thank you very much!
You're very welcome. Good luck!
In order to get developed code or MATLAB related work you can visit [www.dengsolutions.com](https://www.dengsolutions.com) where you just contact on contact detail they will resolve this..
I'm going to buck the trend here and say logical indexing is not the answer. I would considering regular indexing. If you can generate a sequence of indices, you can use them to index the vector. The don't even have to be in ascending order. For example to reverse a vector you can use: x = rand(30,1) i = length(x):-1:1 y = x(i) Simply apply the same technique to finding every other element.
&gt; a program called `dos2unix`. It's available on OSX via [homebrew](http://brew.sh).
Zero isn't a positive integer. Read error messages. 
Haven't used audio files much. What does the documentation say? 
&gt; Read error messages. I don't understand what the error meant. Usually when you count things in anything thats computer related the first position is the 0th position. Clearly in Matlab thats not how it works. Just saying Read the error message isn't helpful, if I understood waht it meant I wouldn't be here.
Can you post example plots of what you’re getting bs what you’re expecting? That being said, I have a vague memory of the sinc function not behaving like I would have expected. I remember needing to divide or multiply the input by 2*pi. Maybe play around with that.
When you say a tensor, do you mean an array? If so, you can access a specific range of elements using something like data(11:14), which will only include the 11th to 14th elements
It means array indices must be positive integers or logical values. 0 is not, in any language, a positive integer. 
This is what I get when I run my code : https://imgur.com/o1ynSXn This is what I wanted : gssc.esa.int/navipedia/images/thumb/0/07/SRC_Fig_2.png/420px-SRC_Fig_2.png 
&gt; It's not written in Greek. Fun fact, this would've made it easier lol. &gt; I'm not sure what you mean by this. Most languages are indeed 0-indexed. Thats what confused me, I expected to count the array from 0, and I did not understand what 'array indices' meant because every time i've heard of indices I think of something to the power of something else. Not that the index in the array starts from 1. 
&gt;Thats what confused me, I expected to count the array from 0, and I did not understand what 'array indices' meant because every time i've heard of indices I think of something to the power of something else. That's a reasonable expectation coming from experience in other languages. Until bright red text shows up informing you that the array index must be positive. 
its the word indeces that fucked me up.
I just double checked my notes, and I've got it as +sin(beta). I'll double check and run it again -- at this point I'm willing to try anything. That being said, that shouldn't affect the outcome of the calibration, right? I would still recover the R matrix that is incorrectly generated by such an error? Thanks for the compliment. I re-worked my post on stackoverflow and copied that over here. They were not happy with my original post. It's a little frustrating. I feel like the biggest hurdle to finding solutions over there is the constant gate-keeping regarding post format....
I don't know if affect the outcome, but I guess not
It's a search algorithm. Look up how the algorithm works, and just go through step-by-step by hand.
Will do. Thanks 
[You can do a lot with cfit objects](https://www.mathworks.com/help/curvefit/fit-postprocessing.html)! The `cfit` object itself generally has the formula and coefficients used to fit the data, which are accessible by function calls, [as described in the documentation](https://www.mathworks.com/help/curvefit/evaluate-a-curve-fit.html#d120e14617). One way to average might be to evaluate each `cfit` at points in the domain (ex. `myFit1(xVals)`, `myFit2(xVals)`), then take the average of the results.
The wikipedia page is a good place to start
How about posting your system specs and what you're doing with Matlab? Is it freezing on open, or are you running bad code, or is your PC bad? Or all of the above?
Logical indexing is fine, but you could do this with regular indexing for cheaper, as another commenter mentioned.
Thanks for suggesting. I updated. It’s basically slow for everything and my computer works really well with all other apps.. 
You didn't answer my question. What is your PC hardware? Is it slow on idle or only when running code? If it's code, try doing a run+time to see if something specific in your code is the issue.
It’s slow on everything with matlab, especially slow when I run the code. But sometimes it get stuck even if I’m just typing. How do I do that?
Different approaches: " Combine the datasets and fit through the entire thing * Use a spline for each dataset and generate points at the same increments so that you can take the average of the two datasets * Generate the fits first, apply fits over same ranges, average those datasets and generate new fit (plot each step of the way to see how things look)
Have an 8700k and it kept crashing and freezing. Found out it was just bad code
Try a different code. Try the same code on a pc. Let us know. 
Check the benchmark, see how it compares (Run `bench`)
Generally you need to do the actual work and get the data yourself.
Unless there's a public dataset for what you need, but then this isn't the place to ask. Maybe OP can ask in r/machineLearning or something.
Oh okay, thanks anyways.
Sorry for the confusion , is actually sum of different power of 2
Let's take a look: num = 0; nsquares = 4; for num = 0 : (nsquares - 1) squared = 2.^(num) ; ngrains = sum(squared) end This code does the following: 1. declare and initialize iteration variable to zero 2. declare and initialize iteration limit to four 3. begin a for loop, re-declaring iteration variable and initializing it to zero again 4. declare and initialize a scalar quantity 'squared' as two to the power of the iteration variable, performing the operation [element-wise](https://www.mathworks.com/help/matlab/matlab_prog/array-vs-matrix-operations.html) despite using two scalars 5. declare a new variable, and initialize it to the "sum" of a scalar quantity (aka just the quantity), then output to the command window 6. proceed to next iteration count, return to step 4, repeat until iteration variable reaches iteration limit minus one You can see why this won't work, right? You'll need to use a vector, and you'll need to assign the value of `squared` at each iteration to [the appropriate place in the vector](https://www.mathworks.com/help/matlab/learn_matlab/array-indexing.html). After the loop, you'll have a set of (three, as you've written it) [values to sum](https://www.mathworks.com/help/matlab/ref/sum.html).
Like this? This will sum the four values produced by squared when you run the loop. num = 0; nsquares = 4; ngrains = 0; for num = 0 : (nsquares - 1) squared = 2.^(num) ; ngrains = ngrains + squared; end
You might benefit from reading [the comments on another question](https://www.reddit.com/r/matlab/comments/9sui15/how_can_i_select_k_as_pi_controller_in_the_case/), which seems to be the exact same assignment. What course is this for, intro to feedback systems/computer control systems?
Thank you so much, this totally work. I didnt think of that. Thank you for your time 
A simple example: myVector = zeros(1, 4); for idx = 1:4 myVector(idx) = idx; end This will give vector [1, 2, 3, 4]. It's all there in the documentation I linked you.
It's Matlab.
Happy to help :-)
You should put the for loop before the if
is this looking better; &amp;#x200B; &amp;#x200B; function isPos = isGoingUp(dailyReturns, i, n) isPos = true; for j = i:-1:(i-n+1) if dailyReturns(j) &lt; 0 %|| i &gt;= 0 || n &gt;= 0 isPos = false; break end end end &amp;#x200B;
&gt;honestly, I have no idea what I've done in my code This is the core problem here. You're just typing code at random that seems vaguely related to the problem you're trying to solve. Don't do that. It will never work aside from random dumb luck, and even then you won't learn anything. Read each line of your code and think about what it does. If you're not sure, read the documentation, and experiment in the console, until you are sure what it does. Think about what you *want* to do, and then write code that does it. It's not a magic spell, it's a list of very specific steps that will be executed. Write the steps that you want to be done. If you don't know how to write those steps *figure out how*. You have to know what code to write before you write it, not the other way around. 
You're also going to have a lot of trouble trying to use an array called dailyReturns when you've also got a function called dailyReturns. You should decide whether you want this to be a function or an array and stick with that decision. 
Read the documentation. 
i tried different code... it was still the same.... 
How to do that? I’m not sure 
How can I check that? 
Literally just run `bench`
What have you tried? These instructions are extremely detailed and you just have to translate them into code. To start you off with the maze: maze = repmat('0',maze_size,maze_size); will make the appropriate character array 
I’m just unable to make sense of the code, I was able to start off the first function but got stuck after just a few lines. I’m at the point where I’m not gonna be able to do this without a lot of help 
As bad as it sounds, my only real hope is if someone is willing to translate the algorithm into the code 
Have you looked at matlab's documentation? This assignment is 100% telling you what to do. All you need is to look up if statements, random numbers, and displaying output.
I have but it just makes me more confused, my instructor hasn’t done a good job explaining 
if you're this far lost, you should talk to your teacher for help. you should want to learn! not just hand int he assignment
yeah without just straight up doing it for you there’s not much that can be explained here - it’s literally written out what to do. Look up the terms used in the extensive documentation and go from there. Also look at MATLAB Onramp for some basic interactive learning. 
yeah without just straight up doing it for you there’s not much that can be explained here - it’s literally written out what to do. Look up the terms used in the extensive documentation and go from there. Also look at MATLAB Onramp for some basic interactive learning.
Alright thank you
You can simply try things and figure out what they do. There aren't many worthwhile "demos" or "tutorials", in my opinion at least, because it's so easy to read the documentation and experiment. Just write stuff and see what it does. for n = 1:5 disp(n) end See what happens. Modify it. See what happens. Read documentation. See what happens. Besides if you're having trouble understanding loops, you're 100% overthinking it, or expecting it to be some kind of arcane magic incantation rather than just a set of instructions. All a loop does is run a chunk of code a bunch of times, with a different value for the loop index variable each time. That's it. There's literally nothing special about it. There are no special rules. It just does exactly what it says on the tin. 
Yeah it’s the instructions that tend to stump me, but I’ll take you’re advice 
The same applies to the rest of the language. It simply does what you tell it to. It does what the documentation says it does. 
If you're using Magnet, BetterTouchTool, or similar apps, try disabling them. They've been known to cause issues in 18b. &amp;#x200B; [https://www.mathworks.com/matlabcentral/answers/422244-why-do-buttons-and-the-editor-in-matlab-r2018b-respond-slowly-on-macos](https://www.mathworks.com/matlabcentral/answers/422244-why-do-buttons-and-the-editor-in-matlab-r2018b-respond-slowly-on-macos)
So, you mean, if i use the statement such as k=\[0:100\], i can find k? But followed difficulty is, in the case PI controller (kp+ki/s), how to use for loop statement. I study alone this so i am difficult to overcome my unskilled. 
Thank you! That's what I did and it works fine. 
You're welcome.
Do you want a single figure to contain all your plots or do you want a number of figures, one for each plot? In the first case, you must insert figure; before your loop and within your loop, include hold on; to hold on to what you've already plotted. After your loop, you should insert hold off; to release the hold on the figure.
Your imgur links don't work. That being said, as a mechatronics/robotics person, you need to learn how to use MATLAB and other programming environments. You can self-learn it, like I did. It's not impossible to learn it on your own.
Have you tried just running this function on its own, with a simple input value, to check its behavior? Also, I'm not quite clear why you need to use arrayfun here. That function looks like it's easily vectorized. 
When you call figure with no arguments, you will create a new figure, with no plots. Even if there are empty figures, figure will always create a new one. When you call a figure in a loop and you want to iteratively write to it with hold on, you should either * Always write to the same figure number, such as by always using figure(2), or figure(10), etc. * Only call figure once before you iterate through potential plots There's an alternative option, which is to maintain your data from iterating the loop with a matrix, structure, or cell-array. You can then do plotting after your loop without worrying about how to iterate through plots and figures.
I presume that you've not coded before at all? Do you know how to solve the problem by hand? I found this [book](https://www.sciencedirect.com/book/9780128045251/matlab) useful when I learnt MATLAB - I know you say you don't think it would be useful, but I can tell you that you find uses for it in places you didn't expect - unfortunately there aren't really any shortcuts getting the solution to this homework without learning at least some MATLAB first. The second imgur link doesn't have the solution programmed in MATLAB - it looks more like mathematica which is why your screen doesn't look the same - though I think you should be able to solve it in a similar way using the [symbolic toolbox](https://uk.mathworks.com/help/symbolic/). I can't really offer any advice on the underlying mathematics of your problem since I'm a chemical rather than mechanical engineer. 
And removing `close 'all';` avoids removing all figures, and hence, losing their state.
Thanks for the input. I update the code and repo for some of the changes. Had to keep f-strings, variables for the run, and I don't mine the append function over +=. import numpy as np from time import time from numpy.linalg import inv n = int(1e3) trials = int(1e1) run\_time = \[\] for i in range(trials): A = np.random.randint(1, 100, (n, n)) t1 = time() inv\_A = inv(A) run\_time.append(time() - t1) print(f"{i+1} runs complete") print(f"Average runtime: {np.mean(run\_time)}") 
It's clear you're very young. All engineers in the twenty-first century need to know some basic programming. I bet mechanical engineers in the R &amp; D part of the automotive industry do some scripting once in a while. Plus, you might have to change fields at some point. It doesn't hurt to know how to program. One of my best friends is a mechanical engineer who does computational fluid dynamics work in rocketry. He spends more time doing C++ programming than I do.
You can use whatever editor you want to write your scripts. There are many more configurable text editors that you can make behave however you'd like such as Visual Studio Code, Sublime, Notepad++, vi, etc. Then run the scripts in Matlab.
Feedback system i study with my friend. I cannot take Control Engineering lecture so i study it.
`NaN` is a double value. Look it up in the documentation. 
I have 2 years ago in basic C, also I have the symbolic toolbox installed. No problem, thank you for the response.
whoo.. I cannot solve this problem. It is not my hw. So actually i want to get your advice in detail. I used sisotool. I added (1+s)/s as PI controller to my example in control and estimation tools manager. Cosidering step response plot whether it is stable, i tried to find K clicking updated plot. I found the range of K 7.28e+0.2\~ 0.0192 because when K=0.0191 it is unstable in step response graph. &amp;#x200B; But i cannot have confidence whether this range is correct.
Okay, since you're already plotting the root locus, try taking a look at that instead. The root locus shows how, as the gain is increased (i.e. as `K` is increased), the poles migrate toward the zeros. Since the system is improper (i.e. the number of finite zeros is greater than the number of finite poles), there are 3 natural poles at infinity to make up the difference. The number of poles and zeros is *always* equal. Since there are three such poles, they come in from infinity at 360°/3 = 120° increments, and since the gain (for now) is positive, we know one is going to come from 180°. The other two are then easily found at +/- 60°. Do you see those on the plot? For the system to be stable, all poles must lie in the left half-plane. As the gain increases, the poles move toward the zeros, and looking at the RL, you can find out when and where that happens (gain, frequency), by clicking on the RL and moving the cursor left and right until you find the point at which they cross the imaginary axis. Using this method, you can easily determine if your range is correct; but remember, ALL poles must be in the LHP simultaneously. As I mentioned to your friend, if you don't want to use independent Kp and Ki for your controller, you cannot independently adjust the gain and frequency at which this occurs; you have to adjust them both at once. Mathematically speaking, can you state conditions that would ensure the aforementioned? Think of the open loop transfer function K*sysL, and its zeros and poles in the complex plane. Pro tip: You can see them directly by using the [zpk command](https://www.mathworks.com/help/control/ref/zpk.html). If you can answer that question, you can figure out how to set up your loop to [break](https://www.mathworks.com/help/matlab/ref/break.html) when you've reached the correct condition.
I use a lot of Boolean flags in my scripts for determining if I want to plot or not. For instance, sometimes I have scripts which I want to plot them sometimes, and other times just want data out. Or like you, sometimes I have data, sometimes I don't. You can create a flag, something like `plot_A = true` and then you may have many different reasons you don't want to make the plot, and so as you do the checks (for instance, the data isn't in the file) you say `plot_A = false`. Then, before the plot command is called, you just say if plot_A % do the plot commands end
I took a programming class 2 years ago. Haven't used the skills since. I strongly dislike programming so I doubt I would take a job that main task is. Now I'm not saying it's not useful, but the time I would spend on learning Matlab I could've furthered my skills in SolidWorks which is something that I use and I know will probably be use in the professions I would like to work in, or learn HyperWorks which would be beneficial also. I'm also not saying that I'll never use it or require it. I get what you are saying though, but right now I'm not in the right set of mind? to sit down and learn it and actually be able to retain what I learned.
For your first question: How to decide if data is available or not: first, declare your data-for-plot variables as empty, before loading or operating on them: `data_for_plot_A = [];` Then, when your script has to decide whether to plot or not, you can check if the data is empty or if it actually exists. You can use other checks such as `exist()` or `isNaN()`. if ~isempty(data_for_plot_A) plot(data_for_plot_A) end For your second question, you can debug on error by enabling the debugger: dbstop if error And once you don't want it anymore, you can disable it. dbclear if error
You're very welcome to upvote answers which are helpful to you.
Friend, use the Editor so that you don't have to paste/edit in the command window over and over. From the Home tab, click "New Script" at the top left. Save the file as &lt;whateverYouWant&gt;.m. To run it, while in the Editor, you can press F5, or click Run at the top. That will help you get through this faster/easier. As to how you can put in multiple values at the same time, you can do this a couple of ways. You can define a vector and re-formulate your equations to use element-wise operations, or you can loop over the elements in the vector. [Create a vector](https://www.mathworks.com/help/matlab/learn_matlab/matrices-and-arrays.html): myVector1 = [1, 2, 3, 4]; myVector2 = 0:2:6; myVector3 = linspace(1, 100, 100); [Looping](https://www.mathworks.com/help/matlab/matlab_prog/loop-control-statements.html): myResult = zeros(1, 100); for idx = 1:100 myResult(idx) = idx; end [Element-wise operations](https://www.mathworks.com/help/matlab/matlab_prog/array-vs-matrix-operations.html): x = [0, 2, 4, 6]; y = [1, 3, 5, 7]; z = x.*y; w = x.^2 + y.^2; u = y.*cos(x*pi); When in doubt, google "matlab &lt;thing you want to do&gt;" and you will most certainly find answers. You can also see how any function works by typing "doc &lt;functionName&gt;", "help &lt;functionName&gt;", or after typing it in the editor window/command window, right-clicking it and selecting "Help on &lt;functionName&gt;". Good luck to you.
I admit that's another reasonable work around. I'll likely have to consign myself to the fact that it's not going to ever be as customizable as I'd like, and balance that with how much I prefer to write code and quickly test run it in the same program.
look at the function strrep. you may be able to avoid a loop..
Thank you so much. Was able to get it to work with the element wise operation. Yeah been using Google for a lot of this, and thank you for the extra tips.
You're most welcome. A word to the wise: I didn't comment on your other post, but I did read it. I can promise you this won't be the last time you'll tangle with MATLAB. Early investment into learning it will only have a positive impact on your future as an engineer. To that end, there are a handful of links in the sidebar of this sub that might be good to bookmark and fool around with from time to time (I'm a huge fan of the [Cody Challenge](https://www.mathworks.com/matlabcentral/cody/problems?sort=&amp;term=group%3A%22Cody+Challenge%22), for example). Best of luck in your course and your degree! :)
Tell me, what does `double(‘a’:’z’)` return? Does that give you any ideas about how to proceed?
Two things that will help you: If you want to find the indices of a given value A in an array J, you can use: J(J==A) to return a second array which is the same size as J and logical 1 if the element is equal to A, and logical 0 if it is not equal to A. Second, if you want discard certain indices B from array K, you can use K(B) = []
MATLAB's documentation is superb. You won't go wrong with their introductory videos. 
Didn't even realise they did that Cheers dude
Not really a tip, but if you ever need to export a nice figure for a report or something, you should get the export_fig function off the file exchange: [Link](https://www.mathworks.com/matlabcentral/fileexchange/23629-export_fig/) It is probably the single most useful function I have ever used with matlab.
Buying the home version will be cheapest, but the toolboxes are still pricey. Once at school, check if they have an academic license you can use.
Could you please explain me the alternative option? I have read online, but I do not understand how to properly maintain the data with a cell-array. If I am correct, `ysine` is an array with as many cells as the number of intervals in the vector t. How can I save each value of `ysine` in another array? Do I need a loop or can I simply define an array with the same number of cells and equal them? Sorry I am a newbie!
Thank you, I will do that! &amp;#x200B;
Also, I will remove the `figure` in the loop. Thank you!
The idea is simple enough. Instead of generating a plot within the loop, save the data in a variable every loop. &gt; How can I save each value of ysine in another array? You can store it just like any other variable. I would suggest you use a cell array, which uses the curly brackets {}. A cell array will let you store variables of different lengths, so you can support different lengths of time vectors which the toolbox might generate. An example would be counter = 1; while (someCondition == 1) ysine = lsim(sys, signal, t); results{counter} = ysine; counter = counter + 1; end results will be a cell array which you can iterate through again later to create plots. This allows you to iterate through generating data and generating plots separately, which would give you more versatility in what you do with it. Plot some of them, plot all of them, do some further analysis before plotting, etc. 
Take an undergraduate Numerical Methods or Scientific Computer class, which is what I suspect you maybe doing. I came in those classes knowing nothing about Matlab and learned quickly. Googling in between just to do homework expedited the learning process for me. 
What i have learned, the Best way for begginers is playing with the program... And apply some what if... In each New example... 
You could also just start playing around with GNU Octave. Similar syntax and functionality (though from what I understand, not as good performance). And it won't have all the toolboxes. But, again, it's just a free way to get started. 
I do not understand how the code you have written works, what does counter do? From what I know, results{counter} means that a cell array results = counter; is created. &amp;#x200B;
Cheers
I've looked at python and I think I need to learn that as well
%% attempt With strrep... function kryptertMld = substitute() txt = input('write in a text: '); inn = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}; ut = {'#', '.', '~', '1', '_', '&gt;', '-', '*', '&lt;', '=', ':', '4', '\', '8', '+', '2', '?', '7', '!', '3', '0', '9', '6', '@', '&amp;', '5'}; kryptografi = strrep(inn, ' ', ut); kryptertMld = kryptografi end the problem now is if i fex. write in 'a', i get the Whole "inn"-variable out..
Once you have a license, you have free access to MATLAB Academy. Highly recommend following that prior to taking your course. It is interactive and progresses sequentially at a good pace; you'll be off to a flying start. 
Oh nice I've never coded before so that could really help Thanks
I wrote my own CSV data reading function, since I wasnt particuarly happy with how MATLABs was implemented. Depending on the specifics of your data you may need to tweak it a little, though for fairly common csv data it *should* do everything automatically. The only required input s the filename. The other 2 let you select certain rows from the data to load. [Here is the code](https://pastebin.com/H6LDEagV). Let me know if it worked or not.
&gt; you can use: J(J==A) to return a second array which is the same size as J and logical 1 if the element is equal to A, and logical 0 if it is not equal to A. You have an extra `J` in there...`(J == A)` will do this, but `J(J == A)` will return a linear list of values from `J` that correspond to indicies where `(J == A)` is `true`
Thanks. I will try it now.
https://se.mathworks.com/help/matlab/ You search for a function or something you want to do, and it has detailed explanations, examples, and even sample code and output. Ex: https://se.mathworks.com/help/matlab/ref/plot.html
You're right, thanks for correcting my mistake!
Why, what error do you get?
Error using load Unable to read file 'FILE'. No such file or directory. 
A couple of questions: What tool are you using to read in this data? fscanf? csvread? readtable? Is that data itself screwed up? If it is a csv, does it have multiple commas some places? If space delineated, multiple spaces? If the latter, have you tried some of the advanced import functions (like treat subsequent delineators as one)?
And what’s your input
``cd 'D:\' `` doesn't work?
Nope, I've tried that, the error is: Cannot CD to D:\ (directory access failure)
load('FILE')
Where file equals 
FILE is my data file that I want to load
I'm fairly new to matlab and don't totally understand the path mechanic, but I can access that directory when opening files. I'm not setting file = to anything, just using the load command
the input to load() needs to point to your file
Include the code, please!
Is that file in the current working directory?
D:
Ehm, not entirely sure what you want. But presumably something like: if (t(n) == 1) &amp; (sum(t==1) == 5); ... would do the trick? Not very efficient, mind, and you should probably just move that condition outside the for loop.
&gt; not entirely sure what you want Seconded. I made a guess too, and got a totally different idea than you...
You could always use the old fashioned [intermediate value theorem](http://mathworld.wolfram.com/IntermediateValueTheorem.html). Since polynomials are continuous, just show that you can get a negative number and a positive number, and voila: Q.E.D. As for why your equation won't plot, you don't have it in a form that MATLAB easily understands. You need to rearrange by subtracting 4000 from each side, then use `T = 305:500;` (or your favorite flavor of interpolation such as `linspace`) so that you can `plot(T, f(T))`, where `f = @(T) &lt;your equation here&gt;;`. You'll also need to use [element-wise operation](https://www.mathworks.com/help/matlab/matlab_prog/array-vs-matrix-operations.html) for the power of 4 on your variable. When I do all that, I see that you are most certainly correct; there does exist a root in that interval. :)
When I means a tensor, is a three dimensional matrix
` t = [1 2 1 3 2 1] result = [] For n = 1:length(t) result = [result (t(n) - 1)*ones(5,1)] end`
I think it’s the *hold on*. I’ve never used isosurface, but for other plots I would draw it once and name it, then replace the data for ydata, xdata, etc
I already tried this sadly. Here is a [screenshot](https://imgur.com/BZ6Ko3A) without the hold on. Its the same with 
So, this is a super roundabout way of dealing with this, but it seems to work (at least in the test case i tried) % sample data [xx,yy, zz, shape]=flow; scale=1; ff=figure; isosurface(xx,yy,zz,shape); aa=gca; % hold(aa,'on') axis(aa,'vis3d') grid(aa,'on') daspect(aa,[1 1 1]) axis(aa,[-scale scale -scale scale -scale scale]) xlabel(aa,'x') ylabel(aa,'y') zlabel(aa,'z') d=0.05; for jj=1:1:1000 ff2=figure('visible','off'); P=gca; hold(P,'off') patch(P,isosurface(xx+jj*d,yy+jj*d,zz+jj*d,shape)); b=aa.Children; ii=1; while strcmp(b(ii).Type,'light') ii=ii+1; end lighting(aa,'flat') aa.Children(ii).XData=aa.Children(ii).XData+d; aa.Children(ii).YData=aa.Children(ii).YData+d; aa.Children(ii).ZData=aa.Children(ii).ZData+d; aa.Children(ii).Faces=P.Children.Faces; aa.Children(ii).Vertices=P.Children.Vertices; aa.Children(ii).VertexNormalsMode='auto'; aa.Children(ii).MarkerEdgeColor='auto'; clear P drawnow pause(0.01) fprintf('%i\n',ii) end 
The clf solved it! Thanks for your help
Some ideas that may or may not work: * Run MATLAB as administrator * Whitelist MATLAB in your firewall * Look for "startup.m" in your computer's files and look for a statement like `connector on` or `connector off` then try running the opposite statement in the command window and re-running the live script (dubious at best, but hey we're trying things) * Try [MathWorks' support](https://www.mathworks.com/support.html)? localhost should be reachable on any computer with a functioning network stack; it's the loopback address, which refers to the addressed device you're using (in this case, your computer's network adapter). If you're on a windows computer, open a command prompt and type `ping localhost`. If you get 4 replies, your MATLAB environment is likely at fault. If not... something is dreadfully wrong with the computer. [Here's how to do it on a mac](https://www.macworld.co.uk/how-to/mac/ping-test-mac-3524076/), if needed. Best of luck.
Thank you very much for your answer! Nice solution
To piggy-back off this, if you're comfortable with numerical analysis OP, you can modify the function slightly and run some fixed-point recursion until you have a value of T that yields a value close enough to 0
That’s amazing! Thanks for the help!
I will be using a secant method with a set tolerance to find the root. That’s also a good way, though!
Hey, thank you so much for the response. I'm using a Mac, and so I believe I'm already the "administrator" for this. My firewall is turned off, and MATLAB is whitelisted (if it were on). Seems like "ping localhost" doesn't work on either my school network or my home network. That might be what I need to investigate. "ping google.com" works just fine, along with "ping 127.0.0.1" which is the localhost "address" from my understanding. If you have any other insight that'd be much appreciated.
You're welcome. Enjoy!
Run just the first set such as AA = isosurface(xx,....). Then inspect the object AA to find where the data is stored. Try to *set* the data to a second dataset and make sure it refreshes the way you want. Once you have this down, you can include only the data-refresh part in a loop over your other values.
Update: tried writing my own fixed-point iteration script for it, but it diverges so fast I'm having a hard time (been so long since I took Numerical Analysis, I forget how to rewrite functions to avoid this problem). So I just used the method mentioned by another commenter, repeating it with a smaller and smaller interval whose bounds are the last negative and first positive value from the previous result. If you're curious: the result I got was 325**.**986726592 (off of zero by less than 10^(–10))
I got the same answer! I only need a tolerance of 10\^-6 though. It's also interesting to keep tabs on the relative error throughout the process.
 handles.fileID1 = 0; setpref('dsp', 'portaudioHostApi', 3); handles.fileID2 = fopen('output.pcm', 'w'); microphone = audioDeviceReader(48000, 'Driver', 'ASIO', 'Device', 'ASIO Fireface USB', 'SamplesPerFrame', 1024); speaker = audioDeviceWriter(48000, 'Driver', 'WASAPI', 'Device', 'Analog (3+4) (RME Fireface UC)', 'SupportVariableSizeInput', true, 'BufferSize', 64); tic; while (toc&lt;10) audio = microphone(); speaker(audio); fwrite(handles.fileID1, 32768*audio, 'int16'); end release(microphone); release(speaker); fclose('all'); &amp;#x200B;
It's in .swp format (radar data) but I have a program that can read that in the same directory 
Yeah definitely! It's fun to see your work gradually converging in matlab
clc clear all for q = 1 w = 12:-4:-4 r = w for e = 1:2 w = w + 2 t = w end end A = \[r;t;w\] &amp;#x200B; I got A 12 8 4 0 -4 16 12 8 4 0 16 12 8 4 0 but idk how to change that second line in the matrix A
Try this mask = (jeff &gt; 6) N=numel(segment_starts); for nn=1:N segment_starts(nn) = segment_starts(nn) - nnz(mask(1:segment_starts(nn))); segment_ends(nn) = segment_ends(nn) - nnz(mask(1:segment_ends(nn))); end Jeff_mod = Jeff(mask); I havent tried running it, but i think this should shift all the indices by the correct amount
Thank you. Your advice is useful. But i am difficult to write for statement yet. But i belive that i will better than now.
notice that as you move along each row the values decrease by 4 and as you move down each column the value increases by 2 so we need something that looks like &amp;#x200B; A(i,j) = 2\*i -4\*j; &amp;#x200B; putting in i=1 and j=1 into this gives us -2 but we need 12 so we add 14 as a constant. &amp;#x200B; A(i,j) = 2\*i -4\*j + 14; &amp;#x200B; checking this mentally with a few other values shows that this works now we need to nest this within two for loops to fill produce the values of i and j to fill A &amp;#x200B; for i = 1:3 for j = 1:5 A(i,j) = 2\*i -4\*j + 14; end end
Why int16?
I finally understood how and it works smoothly! Thank you.
Nested loops are slow if you are trying to expand this to something much larger. I like: A = [12:-4:-4; 14:-4:-2; 16:-4:0]; disp(A) 
Load(‘path/file.ext’)
Thank you for your suggestions guys. I finally solved the problem using just a simple for-loop :) 
set(h, 'visible', 'off') where h is your handle
Does it have the same problem when publishing to .doc or .html? I've not had this exact problem, but I've had trouble publishing directly to .pdf in the past, and have since used .doc publishing almost exclusively. Albeit most of those problems were with LaTeX not showing up correctly, but it's something to try!
We pretty exclusively publish to .PDF but I'll see what happens with a different file type. There's nothing unusual like LaTeX in the figure. On their machine, I wrote a script with nothing more than figure grid on still produced the error. I have a couple ideas but I need the new release on my machine before I can attempt anything!
Error message?
What I am supposed to do is turn the original t vector into t = 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 ...... and so on for every number, like I said I can get the right result but with only single digits and not the five for each. It seems that concatenation might be the correct approach, but I'm not sure how I could do it with a for loop.
Based on experience and the reading on MATLAB performance I've done, I would err towards any solution that does NOT require variables changing size on every loop (does MATLAB not throw up a warning about this?), and then making the code as readable as possible. For me this means using a mask variable; i.e. option 3, above. Though I'd probably do: `for nn = 1:N` `mask = [x(1:nn) &gt; 0, false(1, N-nn)];` `y(nn) = sum(x(mask).^2);` `end` Because I find that easier to understand what's happening (so, personal preference), and in my experience has the exact same performance as \* with a reshaped or transposed vector. (at least with R2016b and above). If x were trapped in an object or cell array, it would make sense bringing it down into a temp variable--even if it changes size--if you're using it more than once in the loop. However, if x is just sitting in the workspace using a well named mask would be my preferred approach.
No, I am not getting an error message. It just pulls up the code for ode45.m and never moves past that line.
For starters, your initial condition is a row vector and your vector field returns column vectors. Both should be columns for ode45. 
From the way I understood the explanations I was looking at, if I use a column vector for the conditions, each row corresponds to high order conditions. For example row 1, row 2, and row 3 would be conditions for y, y', and y'' respectively.
So I can just copy all my code to it from previous computer, right? Do you know about the speed? 
MATLAB works great on windows. 
Thanks!!
The only thing I’ve run into is the xlswrite function doesn’t work well on Mac. 
&gt; option 3 Option 3 is typically my preferred approach too, though sometimes eliminating the temp variable just isnt a feasible option. &gt; Based on experience and the reading on MATLAB performance I've done, I would err towards any solution that does NOT require variables changing size on every loop Agreed...this was the basis for cases 4 and 5, for use in situations where there isnt a good way to eliminate the temp variable. &gt; (does MATLAB not throw up a warning about this?), Not the way its used here. On my system at least, the following happens: % Gives a "variable changes size n every loop" warning for nn=[1:N] x(nn)=nn; end % Gives no warnings for nn=[1:N] y(1:nn)=[1:nn]; end for nn=[1:N] z=[1:nn]; end &gt; in my experience, [`sum(x.^2)`] has the exact same performance as * with a reshaped or transposed vector. (at least with R2016b and above). On my system theres a decent boost using the vector-vector operation for large x values. For example, if `x=randn(1,1e9)`, then the vector op is ~2x as fast on the first invocation and ~4.5x as fast on subsequent calls (after it been setup by the JIT compiler). That said, the difference is ~0.126 seconds vs ~0.56 seconds, so unless you do this a huge number of times with a ton of data it doesnt matter much. It matters much more for matrix-vector operations though
Yeah, your problems are... significantly larger than mine, hahah. And you're right, re-checking things, by far the quickest way was x \* x.' for my limited testing. I swear I had some code somewhere that had sum(x.\^2) as fast as the vector-vector options, but that must've been a complex 2D matrix situation or a MEX-related fever dream. Interestingly, now that the focus of my work is on 2D and 3D systems, the trickiest part to performance optimization is making sure to iterate down columns, which can get confusing with the constant reshaping.
Wild! I don't know what to tell you about that, I've never seen that happen in 6-7 years of using MATLAB. Sincerely not trying to be rude or condescending, but you know that errors show up in the command window and not in a message box like other Windows programs, right? I don't know your level of familiarity with MATLAB, so I've got to check. I'm really hoping you didn't know that, and there is a message sitting in the command window right now and we can figure out what on earth is happening!
From [the documentation](https://www.mathworks.com/help/matlab/ref/ode45.html#bu00_4l_sep_shared-y0): &gt; Initial conditions, specified as a vector. `y0` must be the same length as the vector output of `odefun`, so that `y0` contains an initial condition for each equation defined in `odefun`. The ode45 solver only accepts systems of first-order diff.eq.'s; you'd have additional equations (rows) from substituting a new variable for the second derivative, third, etc. Since `length(ones(1, 5)) == length(ones(5, 1))` I think you're safe.
It depends quite heavily 
Seems like you *did* know where to start! You just got stuck quickly, and that's okay. I'll give you a push! In [the documentation](https://www.mathworks.com/help/matlab/ref/fprintf.html#btf8xsy-1_sep_shared-formatSpec), you'll find a section on the input argument `formatSpec`. If you scroll down a bit, you can see some "escaped" special characters (meaning they have a '\' before them). One of those should solve the issue you're having with things being on the right line. As for the column, it should always start at the far left (column 1). As long as you input your values sequentially, you ought not have a problem there.
Yeah, I do know that errors appear down in the command prompt. Don't worry about feeling condescending. I did most of my undergrad programming in C++ and then a little bit in Matlab and Python so I'm not super familiar with Matlab. As such, I'm 100% sure I am just doing some really stupid mistake. When it gets stuck, the command prompt does have a K&gt;&gt; which is apparently some kind of debugging mode.
Yeah that's usually indicative of having reached a brea**K**point. :) Does it say 'Busy' or 'Paused in debugger' in the status bar at the bottom of the window? If it's paused, do you see any `Inf` or `NaN` values while mousing over the variables in the ode45.m file in the editor? I mean if it's at a breakpoint, we might be able to see what's going on with the values there. Also... what happens if you just click 'Run' or hit F5 in the editor when it does that? Same thing?
I added the full code at the bottom of my post. If you want to try running it yourself, feel free to try and see what happens.
Cool, thanks. I get an error! &gt; Error: File: HWhelp.m Line: 21 Column: 2 Invalid expression. Check for missing or extra characters. Unfortunately, that doesn't tell us much, because that is a blank line. If I delete said line (improper line break/carriage feed/etc. for my encoding, I guess), it runs and provides a plot of two constant values. Progress!
Completely depends on the application.
The more you know! You are welcome.
It says "paused in debugger". I just realized if I click continue about a million times, it eventually gets to the plot and gives me a figure (theres nothing on it). Then, it gives me the following error: "Error using ode45 (line 87) Not enough input arguments. See ODE45" So I am going to go ahead and look into that.
Fascinating, considering the result I got (see my other comment). What version of MATLAB? Maybe a difference in parsing between our versions; double check the documentation to see if it matches that which I pasted in the other comment thread. Glad we at least got you an error, finally!
My version is R2018a. I'm not sure what CRLF is. Is it some kind of output I should get and if so where do I find it?
Haha, sorry that was me correcting a stupid mistake I made. CRLF is short for Carriage Return + Line Feed; it's the two generic commands that create a new line and place the cursor at the first position in the line (like a typewriter). Okay I'm on R2018a as well. No clue what the difference is, but at least now you have a troubleshooting path. Check back if you run out of ideas!
The filesep function should return the correct separator too.
I believe the Unix separator will work on Windows but not vice versa
Thank you for your answer. But what about a chemical reaction? 
You're a bit of an ass, aren't you?
I know nothing about modelling chemical reactions with differential equations, so won't be able to help you there.
- Says "The more you know!" without giving any concrete (or even weak, half-formed) examples or applications of their controversial viewpoint - Mistakes someone calling him out for being an ass for being someone else they were talking to, responds emotionally - Makes assumptions about someone else's educational status with no reason to - Tells others to "get used to" not enjoying being told facts they don't believe (wtf does that even mean? shouldn't at some point a professional be knowledgeable enough to defend their perspective?) Some high quality shit right there 😂 Good luck with the music career 
Programming skills are useful with solid works, as well. Even if you only ever use excel and solid works throughout your career (unlikely), learning to code will be important, and perhaps mandatory.
Ha I’m a physicist but I do play guitar. You’re gonna love the real world when you leave school lol.
It can absolutely make a difference, the point I'm making is that it won't make a significant difference in a manner other than some coefficient of slowing/speeding up your algorithm. Simple scripting that takes a couple minutes will still take about a couple minutes... computations that take a day will still roughly require day/days to run... Anything more computationally intensive would likely be run on a server/cluster that runs on some Linux distro anyway! So for personal, technical computing -- I still argue that there is no significant difference. At least as far as OP in concerned.
Matlab works mostly the same. The biggest difference I can think of is the memory function and xlsread/write which both work with Windows and not Unix. You should use CSV anyways....
I think the comment was referring to the same code on a windows and a Mac computer. 
as buffer size increases, the period for the oscillation of the feedback volume increases, the converse occurs when buffer size decreases, but i cant go below 64 as clicks and pops will occur.
As someone who started coding Matlab in about 1986, I tend to recommend doing things the old fashioned way. For this, I would recommend writing your F derivative function in a separate file, rather than this crazy newfangled anonymous function thing. Then you can get that F function working and debugged properly before you try to use it with ode45.
thank you this seems like it is going to help a lot 
To add to everyones comments, working tech support for mathworks for almost two years, MATLAB is actually more stable on Windows than it is on Mac. 
It depends on the situation. There is no excuse for this ignorance when you can google things.
Assuming I don't have google.... Can you hit me up with some documentation? I'd love to stop being ignorant.
I was thinking the same thing. "floor" function should help too. Something like: tens = floor(change/10) change = change - 10*tens ...repeat all the way down 
That’s rough buddy. In case this comes up for you again, dlmwrite or csvwrite work just fine on Mac. 
So the part where it says in your 3rd article (first one that mentions operating system performance): &gt;Operating Systems &gt;MATLAB performance is similar on Windows®, Mac OS® X, and Linux®, although differences can occur among platforms for the following reasons: &gt;MathWorks builds its products with a different compiler on each platform, and each has its own performance characteristics.MathWorks incorporates third-party libraries into its products that may perform differently on each platform.The operating systems perform differently, especially in the case of disk- or graphics-intensive operations. &gt;In general, performance differences in operating system releases (for example, between Windows 7 and Windows 8) are negligible. Doesn't mean anything to you? 
Something to try- before your plot command in your script, add in `pause(2)` to pause for a couple of seconds, and then see if it plots properly. That would mimic going through your script with a debugger. If that works, we can try to go through more options to see why you need it. 
Oh ok. I have a feeling that will work. Let me try it
So your solution worked. I will say I had to use it in multiple places. The reason I had to do it in multiple places is due to the fact I am making multiple plots. So I had to do it for each of the problem plots. 
What have you tried?
First of all, Vallado's code is available for free online on his book's website. So you can download, unzip his directory and take a look at his code. Second of all, the equation you're trying to solve is in the second image you attached: \[math\]M = E - e \\sin E\[/math\].
Apologies if some of the code doesn't directly compile in MATLAB. Might've mixed in some python in there. Consider upvoting if this answer was useful.
Have a look at nargin. An alternative is to use inputParser. Both standard MATLAB, both can help you here.
I tried nargin, it said I ran out of memory
Can you post your code?
Just did in an edit; sorry for shitty format, I am unsure of how to put in code format
Just call nargin with no arguments, don't pass your function to it. As an example, put disp(nargin) at the start of your function and see what it outputs.
Thanks a ton dude, it worked! I had no idea I didn't have to pass my function.
No problem.
I fixed up a coupole things for you in your code. A few things I went with my best guess on what you were trying to do. %Import raw data [num, weekly_dates] = xlsread('timeSeries2018.xlsx','B3:B1442'); weekly_dates = datenum(weekly_dates, 'yyyy-mm-dd'); weekly_price= xlsread('timeSeries2018.xlsx','C3:Q1442'); vp = 10^6; %Fixed portfolio value %returns from price index [m,n] = size(weekly_price); weekly_return=(weekly_price(2:end,:)-weekly_price(1:end-1,:)) ./ weekly_price(1:end-1,:); %VaR weight=repmat(1/n,n,1); covar=cov(weekly_return); sigma=sqrt(weight'*covar*weight); %Weighted return weighted_return=weekly_return*weight; %sigma EWMA sigma_ewma=sqrt(ewma(weighted_return, 0.94)); %Volatility updating, historical Simulation std_return=weighted_return.*(1./sigma_ewma); var_95_hull=varhist(std_return1,0.95,vp); % std_return1 -- typo? VaR_estimation = var_95_hull * std_return; function [sigma] = ewma(returns, lambda) sigma(1) = [returns(1)^2,zeros(1,length(returns))]; %variance for t=2:length(returns)+1 sigma(t) = lambda*sigma(t-1)+(1-lambda)*returns(t-1)^2; %EWMA end end If this the literal exact function youve been using? If so then it has a few major issues. 1) you use stuff before it is defined. e.g., %VaR weight=repmat(1/n,n,1); covar=cov(weekly_return); sigma=sqrt(weight'*covar*weight); Literally none of those variables had been previously defined when this appears in the code. 2) an extra `end` in for i = 1:length(weighted_return) std_return(i)=weighted_return(i)*(1/sigma_ewma(i)); end % &lt;--- what is this ending end 3) should ` var_95_hull=varhist(std_return1,0.95,vp);` be ` var_95_hull=varhist(std_return,0.95,vp);`? 4) do you really want to weight each point based on the average variance, or weight each point based on the variance and then use those to average the points? Id recommend going through line by line and working out exactly what each does, and then seeing if that is what you want it to do.
I always plug the [Cody Challenge](https://www.mathworks.com/matlabcentral/cody/problems?sort=&amp;term=group%3A%22Cody+Challenge%22) when people ask how to learn. On the surface it's just a set of 96 simple tasks, but when you complete one you thought you absolutely nailed, and then see that there are solutions with *vastly* better optimization than yours you start to wonder "How??" At first it just gets you super-familiar with the language, but it can lead you to some really big jumps in skill, too. Aside from that, always keep the documentation handy, read related function links at the bottom of the article, and in the help browser or website version, use the menu on the left-hand side to go "up a level" to learn broader topics or different ways to do the same task. Don't be afraid to bust out some Google searches for "matlab how to &lt;do the thing I want to do&gt;" and if there is a link from Loren's blog, read the heck out of it! Enjoy!
You're welcome, I hope you enjoy it! Another good idea is to think of a project you'd like to complete, and just get straight to work on it. You'll learn quite a lot figuring out how to do all the little things that make up the solution, and since it's something you wanted to do to begin with, the investment will be gratifying rather than grudging. Best of luck to you!
Well I do have a project I want to complete: the ones from my classes. The thing is, I know too little to even start. So the basics from Cody's will help, I think! After, I'll embrace the project. Thanks.
You're not indexing your variables in the loop. You're simply replacing them. Add an index (1-based, not 0-based) and you should be back on track. e.g. v(idx) = v(idx - 1) ... Small note: try to avoid `i` and `j` for your index variables, since they both represent the imaginary number. Generally not a problem, just rather odious in MATLAB syntax. :)
A related option is to put `drawnow` statements where you might have put pauses. For performance reasons, Matlab's graphics engine allows a queue of plotting, axis, xlabel, etc. commands to build up, and waits until a "good" time to actually update and rerender. This means other commands can execute while the plot is incomplete (e.g. asynchronous updating), and in older versions I sometimes ran into timing problems where the Matlab state would glitch before the plot queue emptied. This got especially bad when focus would shift (e.g. a different axes became current before the old one was done). `drawnow` force flushes the queue, stopping code execution until all graphics have been updated. Putting in a `pause` likely accomplishes the same thing since that is a "good" time to update, but I believe the update is optional for the engine, and in any event, `drawnow` will go as fast as possible, without a fixed lag as with `pause`.
Sure, any time. I guess that second round of advice applies better to learning a *new* language, e.g. transitioning from C# to Python. I'm sorry I missed the mark on that one, and I wish you all the best in your studies.
So when will the 'Kool Funktions' pack be released on FileExchange? I think this will be the third of your functions I've got sitting in a folder waiting for their need to arise. :)
Very useful, thanks!
Yes, this is correct. The other problem I am having is that I need to get the mean for a range of variables in each vector. So in this case, I want the mean for a, b, c, but only for the numbers less than 3. So the mean of a, grabbing only the values 1 and 2, in b grabbing only 2, and so on.
Try something like cellfun (@(y) mean (y(y &lt;= 3)), x)
Matlab actually can do fast loops these days. The first loop is very slow, because your "endpoints" variable is growing each loop. You do already know how large it will be. Parentheses are superfluous in the for statement, and in any case the for statements are mostly unneeded. Just do th1= 0:inc:130; th2= -40:inc:120; th3=-100:inc:100; To limit code length and improve readability, we do: n1 = length(th1); n2 = length(th2); n3 = length(th3); Actually, we want those to be in different dimensions. For up to two dimensions you could use just ' (transposis), but now we use reshape: th1= reshape(th1, [n1,1,1]); th2= reshape(th2, [1,n2,1]); th3= reshape(th3, [1,1,n3]); And then we use repmat to make the matrix sizes match (probably could combine with the above, but I want to take you step by step): th1= repmat(th1,1,n2,n3); th2= repmat(th2,n1,1,n3); th3= repmat(th3,n1,n2,1); Now we've got the full matrices there, and can simply do: a = -90+th1+th2; a2 = a+th3; Looks like your endpoints matrix needs to be pairs of numbers, where ep = zeros(n1,n2,n3,2); ep(:,:,:,1) = cosd(th1)*L1+cosd(a)*L2+cosd(a2)*L3; ep(:,:,:,2) = sind(th1)*L1+sind(a)*L2+sind(a2)*L3; Now you've got all your data in a four-dimensional table. Plotting that should be something like for i = 1:n1 for j = 1:n2 for k = 1:n3 scatter(ep(i,j,k,1),ep(i,j,k,2), 15, 0, 'filled'); hold on; end end end ...as of the time of posting this comment, my copy of Matlab is still crunching that plot. The rest completes near instantly. Probably worth a look if that can be vectorized at least on one axis?
Editing the comment has some issue, so one more note: In Matlab, single % is a comment. %% starting a new line is a section divider
Reading the documentation would help with that. 
You're trying to plot vectors in 3 dimensions. So you need to use the appropriate plotting function. figure; plot3(x1,y1,z1); % where x1,y1,z1 are the x,y,z coordinates of the first vector. &amp;#x200B;
Do you assume we use three dimensions because of A = \[F1; F2; F3\]; ? That was just the attempt to put my three vectors in a Matrix and plot my vectors this way. &amp;#x200B; [https://de.mathworks.com/help/deeplearning/ref/plotv.html](https://de.mathworks.com/help/deeplearning/ref/plotv.html) I got the information from there. &amp;#x200B; Originally the vectors should be two dimensional
Thanks for the suggestion. I think I had to put it in a for loop because the scatter function wouldn't take my matrix as an input. My endpoints matrix is of the form: 18 29 27 38 45 65 ... ... But scatter(endpoints(:,1),endpoints(:,2)) gives me the error: CData must be an RGB triplet, an M-by-1 vector of the same length as X, or an M-by-3 matrix. Looking at the documentation, I cannot figure out why scatter isn't taking the two arrays as sufficient inputs. 
The problem is not with the nested loops. The problem is with the scatterplot. You can see it if you check the time needed for code execution with `tic` and `toc`. You don't need a loop to plot multiple points, you can write: `scatter(endpoints(:, 1), endpoints(:,2))` &amp;#x200B; &amp;#x200B;
I figured it out, if anybody is interested in the full solution: alpha = 60; beta = 30; vF1 = 2.25; vF2 = 7.5; vF3 = 4.5; &amp;#x200B; &amp;#x200B; F1 = \[cosd(alpha)\*(vF1) sind(alpha)\*(-vF1)\]; F2 = \[sind(beta)\*(-vF2) cosd(beta)\*(-vF2)\]; F3 = \[-vF3 0\]; &amp;#x200B; plot(\[0 F1(1)\],\[0 F1(2)\]) plot(\[0 F2(1)\],\[0 F2(2)\]) plot(\[0 F3(1)\],\[0 F3(2)\]) &amp;#x200B; R = -1\* (F1 + F2 + F3); &amp;#x200B; plot(\[0 R(1)\],\[0 R(2)\]) &amp;#x200B; hold on axis(\[-5 5 -5 5\]) grid on &amp;#x200B; you have to plot the vectors this way: &amp;#x200B; plot(\[Origin x\],\[Origin y\])
If you look at your link, you are in the *deep learning* help section, and as such, attempting to use a deep learning function (plotv). 
Also, thanks for the tic-toc tip (hah). The problem is indeed in the scatterplot, the for-loop takes a negligible amount of time.
Nevermind I figured it out. Another commenter introduced me to the tic-toc approach to find where my function was taking longest and it turns out the scatterplot within a for loop was a huger bottleneck. The code now runs very quickly :) Thank you a lot for your time!
Nevermind I figured it out. Another commenter introduced me to the tic-toc approach to find where my function was taking longest and it turns out the scatterplot within a for loop was a huger bottleneck. The code now runs very quickly :) Thank you a lot for your time!
Again, thanks for the info on the tic-toc method. I have figured out what the error was and my code is running fast now. Thank you so much for your time!
I never did a plot like this in my lifetime. figure hold on plot(vector1) plot(vector2) plot(vector3) The vectors have to be 1 dimensional. 
Umm isint this a simple function? 
But how would I plot with all the unknowns?
https://www.mathworks.com/help/matlab/matlab_oop/enumerations.html
It's not clear what you're asking. What have you done up to now?
Ok, I need to plot this [https://imgur.com/a/8ZCSXJH](https://imgur.com/a/8ZCSXJH) and get a graphic where theta is the variable. Something like this: &amp;#x200B;
Since I am only concern with theta, I'd consider a range from 0-360º. Cosine will be between 1 and -1. I'd use that assuming constant values for the other variables and then plot how theta changing impacts the overall expression
This is not even a MATLAB question. It's simply a question of understanding how to plot a simple function. You manipulate your original function p to obtain the expression as given on the y-axis label of your example plot. Once you get that, you plug values of theta from 0 to 180 degrees into it and then plot theta against the result.
Bingo.
Ok, but how do I translate that into MATLAB?
I just had an idea, that I think I might actually use... Why not create a package with a bunch of tiny functions that only return the constant? e.g. `function p = pi(), p = 3.14159; end` That way you can keep them organized all in one place, similar to creating an object with a separate folder / package, but also have the same usage as a variable in the workspace. Now, I imagine this could slow things down if you've got a ton of them being called in a gigantic loop ten million times but... yeah.
Wait, do I just need to plot the cosine function?
Amazing! Thank you
Reading that, it is the same thing as what I am doing, but without package import support, it just makes life "clunkier" than I feel it should be. Was hoping there was a more elegant way (or perhaps a tool someone had written to make it easier). 
&gt;why does using NaN instead of zero (i set a variable equal to 0) cause one of my graphs to display improperly(in a manner similar to not using drawnow)? I have three graphs that plot very similar yet different variables and I use NaN for something that I feel is completely separate. I use NaN because sometimes there is missing data. So one thing is that if possible, updating may solve your issues. I believe with later versions of Matlab they have it so it will ignore NaN data. If upgrading isn't an option (or doesn't work), the other is to just remove those data points when you plot, using something similar to I(isnanI) = []. You'll need to apply this to the variables representing both axes of your plot data. As per your second question, I personally like to create separate plot commands so that I have more programmatic control over the plot linestyles. So if you have two sets of y data for one set of x data,: plot(x,y1,'linstylecommands');hold on; plot(x,y2,'linstylecommands'); And you can specify whatever linstyle commands you want.
Oh that makes sense. I just need them to overlay. So your method for my needs is fine.
What do you mean by "plot and `fzero` function? Are you wanting to plot the iterations of the function? Why is your `b` from -2 to 2? We need more information to be able to help
I'm sorry, but I still really don't get what you're trying to do. Can you show me a picture of what plot you're hoping to get?
Are you asking about editing colors of plot lines and adding text at specific points on a plot? 
text(x,y,'yourtext'); I think there is a pull down menu on the figure as well.
Thanks that’s what I was looking for. I was searching using the wrong terminology.
Thanks for the reply! I didn't know that about &gt;!i !&lt;and &gt;!j!&lt; in Matlab! I ended up getting help from a tutor and a professor on my campus and together we figured it out! &amp;#x200B; &amp;#x200B;
You're welcome. For future reference, it's the grave accent (same key as the tilde) for `inline code callouts`. :)
A = [1;2;3]; B = arrayfun(@num2str,A)
oh wow thanks (language is retarded, why the @ ??). but that's not what i want lol. i want to map [1,2,3] to ["1", "2", "3"] 
Try to read the documentation on arrayfun and you’ll quickly come to realize that not the designers of this language are the idiots. arrayfun needs more than just the function name as its first input argument. Just a heads up, num2str may result in a string of all numbers (ie. “123” as per your example). Try to work with a struct or cell filled with strings instead, if you like individual strings as a result. 
the language is definitely designed by idiots. ive used better languages obviously so i realise im working with a bad language here with no obvious design. Literally deciding that a vector of strings shud be concatanated but not if they're some other type
You can transpose before and after, but if you feed a row vector (A = [1,2,3]) then it will concatenate (B = ‘123’). The output is what you want, just in column form rather than row. I don’t get too deep into why the syntax is the way it is, I just learn the syntax. Sometimes it becomes evident and sometimes not. But you will get lower quality help using words like *retarded* and *idiots* in reference to a fundamental tool - developed over decades - and used by millions of people across many disciplines worldwide. It’s not perfect, but obviously useful. I think if you frame the problem as *your understanding* of the syntax, and not *the syntax* that is wrong, then you will get higher-quality help here. Honestly this is applicable to most areas of life. 
i tried the transpose 'trick' immediately but here is what happens &gt;&gt; arrayfun(@num2str, [1;2;3])' ans = '123' 
Write MEX function in c++ and link to libpcap for promiscuous mode.
...so what better language have you written lately? Also, @ is used to create a handle to the function. Many languages don't naturally treat functions like objects because it creates overhead each time you use a function.
the overhead claim is ridiculous. 
I'm out. Here is what you came for: A = \[1,2,3\]; B = A'; C = arrayfun(@num2str,B); D = {C}'; legend(D) or the compact version: A = \[1,2,3\]; legend({arrayfun(@num2str,A')}'); &amp;#x200B; &amp;#x200B; &amp;#x200B;
Thank you, this does work for the newton-raphson method, though I don't think so for bisection where I need to eval the function for two variables 
I'm still learning numerical analysis but umm, isn't bisection still a function of one variable?
I'm not sure, but at one point I have to code if f(x1)*f(x2) &gt; 0... so if there is a way to use eval there I don't know it
sorry I actually didn't understand how to incorporate your solution but I found a simpler way to do it by inputting the function as a string and then using str2func! 
Funnily enough, I do have a "funktions pack" of sorts that, assuming i ever manage to get around to finishing fixing the last few bugs, I plan on releasing. Its not random functions though, its a package designed for reading and writing seismic data files. Its not the only one, but its close to an order of magnitude faster than the best option currently available for matlab. &gt; I've got sitting in a folder waiting for their need to arise. :) Since your making a collection, ill throw in a bonus function for ya. [myColormap](https://pastebin.com/abetiSXL) allows you to define color maps using a few sparse "color anchor" points and automatically interpolates between the selected colors. Inputs can be standard color indicators (e.g., 'b' for bluw, 'w' for white, etc.) or RGB triplets. You can optionally specify the number of discrete color samples you want between individual color anchors. For example, you can make a rainbow colormap using myColormap({'m','r','y','g','c','b'}) or a red-white-blue colormap using myColormap({'r','w','b'}) 
Glorious, glad you found something that worked for you
Have you tried x = abs(3*w*1i + 4) xMod = sqrt(real(x)^2 + imag(x)^2); I only very rarely ue the symbolic toolbox, but id guess that has a decent shot of working.
i got the impression if i don't use a vector i can make it work but that feels wrong to me to use another data structure. do you not see why that would be a bad feel for someone learning the language? the answer seems to be impossible unless you use whatever that weird thing with curly brackets is doing there.
I dont know of a fix (i almost never use the symbolic toolbox), but I have a guess *why* this happens. My thought is that once matlab gives you an answer it wont let you manipulate it in ways that might invalidate it. I.e., you may know that what you calculated on your own works for the problem, but MATLAB doesnt know that. &gt; how would you recommend plotting a piecewise function? for numerical problems id do plot(x(x&lt;a),y(x&lt;a)) % lower half hold on plot(x(x&gt;a),y(x&gt;a)) % upper half % make a vertical line connecting the 2 halves plot([max(x(x&lt;a)),min(x(x&gt;a))],[a a]) 
It is similar to what you proposed, one difference is that `WeekDays.Tuesday` creates a strongly-typed object of the enumeration class, as opposed to just a generic number (kinda like `enum` in C/C++). Your way is still useful is you want to create a collection of related constants that have different types (e.g both strings and numbers). An enumeration have the same type for all its members. You can do meta-programming on a strongly-typed class, think reflection to get a list of enumeration names and values. MATLAB provides convenient converters to refer to enum members: val = WeekDays('Tuesday'); arr = WeekDays({'Monday','Wednesday','Friday'}) You can get a string representation by casting `char(val)` which returns the string 'Tuesday', or similarly `cellstr(arr)`. Enums also define relational operators, so you can compare `WeekDays.Tuesday == 'Tuesday'`, put them in `switch` statements, perform set operations `ismember`, `setdiff`, etc. The above was a case of a simple enum where you define the class with no superclasses and no properties. These are useful when you only care about having descriptive names for enum values, but don't really care about having an underlying value. MATLAB also allows you to subclass built-in classes (`double`, `int32`, `logical`, etc.), in which case you inherit their mathematical and arithmetic operations, and can be easily coerced to their numeric values. You'd use this kind if you care about having an actual value corresponding to each enum member, something like: classdef Bearing &lt; uint32 enumeration North (0) East (90) South (180) West (270) end end There's also a third way to define enum classes which encapsulate data in properties, where each enum value is an instance of that class with specific values for each of the class properties. See the [docs](https://www.mathworks.com/help/matlab/matlab_oop/enumerations-that-encapsulate-data.html) for more info. Example: classdef Colors properties R = 0 G = 0 B = 0 end methods function c = Colors(r, g, b) c.R = r; c.G = g; c.B = b; end end enumeration Blueish (18/255,104/255,179/255) Reddish (237/255,36/255,38/255) Greenish (155/255,190/255,61/255) Purplish (123/255,45/255,116/255) Yellowish (1,199/255,0) LightBlue (77/255,190/255,238/255) end end You can even have enum classes inherit from `handle`, think mutable vs. immutable enumeration members. 
 for q= input (... Think about how this statement behaves. Check your indentation too
Yeah, the dbstack command will give you information on the call stack.
Thanks!
If you read the OP, that's the part that's not working as desired. Taking the `abs` first is overly cautious; the second part is really all that should be needed, assuming `x` already holds the complex number.
Seems like you have or are constructing a vector named lwagesLooks, with (in the end) three elements, whose elements equal the y values you mention. The x value is thus not necessarily 1,2,3; they are just the first, second and third element of the vector. If you would plot it against any other vector of 3 element those elements will determine the x-values. &amp;#x200B; Trying to hire someone hot?
No. Neither `x` nor `y` are included in any of the expressions. Assuming `beauty` is a structure and `lwage` is a vector, it takes the mean of the vector over the points described by the indices in `looksHom` et al., then assigns the result to one of three places in `lwagesLooks`.
This is basically a trig/geometry problem. I think you could probably sort out a way to do it other than brute force (taking points on each circle and checking distance, then searching points around the closest two, until you find a minimum. There are at least a few observations to get started: - the circles will not intersect if 1. The distance between the center points is greater than the sum of radii 2. The distance between the points plus the radius of the smaller circle is less than the radius of the larger circle (one is inside the other, but not touching) - if they intersect, the two points will lie on a line perpendicular to a line drawn between the two center points. - there is only one intersect point if the distance between the circles is equal to the sum of their radii I’m not going to work this out, but there is probably a relationship between the radii, the distance between circles, and the distance along the perpendicular line to find intersection points. If you can’t find that, then maybe an fmin search of distance between points where the angle around each center point are the variables. 
Imagine poor OP when he tries out strcmp and it solves nothing. lol.
This is actually a bad idea. Use an argument to specify how the function behaves instead.
Imagine poor OP when he tries out strcmp and it solves nothing :'( Literally the least of the issues. If we really want to tackle ancilliary mistakes let's start from the poor indentation and avoidable nesting due to the use of "else if" instead of "elseif".
I'm imagining someone trying to debug why the function won't output a graph by trying it in the command window and being very frustrated...
after plotting, call the "axis" function. One way is: axis([xmin, xmax, ymin, ymax]) Example: x = linspace(-5, 5) y = sin(x) plot(x,y) axis([-10, 10, -2, 2])
Oh wow thank you so much!! 
I've replaced my if statements with switch case and yes, it works! Thank you! I didn't use strcmp because I had to stay within what we've learned and it may have made me stick out lol Oh, yeah, I'm sorry. My professor did in fact let us know about using ctrl-I to make it easier to read. It just went over my head to do that for this code. I'll keep it in mind now! :) 
Oh... This is the first time I'm hearing about strcmp. So I jumped straight to == to compare. I used switch case for my issue and I was able to resolve it. The other people also suggested strcmp but I saw an easier way out of my problem and took it. I appreciate your time regardless! 
Another fellow Redditor suggested the usage of strcmp as well or switch case. I opted for switch case since I've never seen strcmp before and the application of switch case would be really helpful toward my understanding and in correspondence with the material that'll be cover on my exam Wednesday. I'll keep strcmp in mind though for future references. Thank you! 
You have to do a bit of shepherding to keep everything tidy. Assumptions are a step in the right direction, and will often be enough, but when they're not, you can also use [substitutions](https://www.mathworks.com/help/symbolic/subs.html). You can actually add assumptions to a set of symbolic variables at once: syms a b x y z real And you can modify assumptions later: assumeAlso(a &gt; 0) % adds positivity to a assume([x, y], 'clear') % clears all assumptions on x and y Doing this helps, but it's a bit more work than with WolframAlpha, for example, which adds assumed cases in its response to the query (e.g. 'assuming x is positive' and 'assuming a, b, x are real'). You can avoid some of the gotchas if you use `IgnoreAnalyticConstraints`, as well. The Symbolic Math Toolbox is a deep system that is a little clunky from time to time, but you can make it sing if you dig deep enough! [Take a look through the documentation](https://www.mathworks.com/help/symbolic/formula-manipulation-and-simplification.html) in your spare time if you want more.
You added a "for each" loop without knowing. What is the intended purpose of that for loop? Your code would work just fine without it. That for loop will take, sequentially, the first object in q, in this case the first character inside the string typed with "input", then the second character (if there is one), and so on. That's the only reason your code was not working. When you assigned "VS" to q the "for each" loop would execute, and q would be equal to "V" in the first run, then "S" in the second. That's why the two statements where printed. (You would have learned all of this by your own if you had debugged your code... you've been a bit lazy here.) PS: replace "else if" with "elseif" to avoid confusing nesting and plain out logically wrong indentation. Corrected code here: https://pastebin.com/TXmdhxNK 
What have you tried already and which part specifically are you stuck at?
So far, I've tried used the mod function to see if the values of i would divide exactly into some positive integer n. For example, I used mod(n,i) to check for divisibility. The values of i that left no remainder would be the factors of n. The part I'm having problems with is how I would go about extracting the largest value of i from the loop and assigning it to the output variable.
PS: Run your original code and assign [3, 23129] to the radius input when asked. 
So you probably know that divisors come in pairs, right? Can you think of a way to use that so you don't need to check them all? If you can do that, you can just stop after you've found the first divisor.
Sorry for my ignorance, but I'm confused as to how I would go about doing that. If n was 10, wouldn't I stop at the second divisor since the largest factor of 10 other than itself would be 5?
Try searching from n/2 to 1, first number u get should be ur answer
If n=10, what would be the first (smallest) divisor? And how can you use tyhat smallest divisor to get the largest divisor?
I see what you're getting at. I could get the largest divisor by dividing n by the smallest divisor. I just added a break statement and it appears to work now. Thank you for your assistance.
Nice work, well done. :)
I think you should set the framerate before you close the file.
Tried that, that returns half a page of error basically telling me to close the file before I touch the properties of the object. 
glad it helped
AHW HELL YEAH Thanks man, it's 1145 PM here and I was nearing complete despair. Should have tried that myself, learned a lesson have a great one!
Have you put a little thought into trying this yourself? What, mathematically, does it mean for two circles to intersect? 
To each his own, I guess.
Hmm... Honestly not experienced enough to do this in Matlab. But your code can find a match between the first pixels. Inside your for statements and inside the if statement you could throw in another for statement that then counts from the first instance pixel comparing. For (whole big picture) If(find first pixel match) For(area same size as small pic starting at first match) Compare all pixels until either all match or don't. 
Yeah. Sorry I'm not of more help. If I had Matlab open with your code I could do more.
THANKS!
You can also try: plot(x,y) xlim([-1,1]) ylim([n,m])% where you replace n and m with whatever
If you wanna make it slightly better, you can use strcmpi which is the same as strcmp but ignores the case of the letters. Someone might put ‘vS’ or ‘Vs’. The drawback tho is that you would have to write strcmpi == vs and not strcmpi == VS. 
Use Logical Indexing: grade = cell(size(Final)); % Because you can't put characters into a vector with numbers grade(Final &gt; 80) = {'A'}; grade(Final &gt;= 70 &amp; Final &lt; 80) = {'B'}; grade(Final &gt;= 60 &amp; Final &lt; 70) = {'C'}; grade(Final &gt;= 50 &amp; Final &lt; 60) = {'D'}; grade(Final &lt; 50) = {'F'};
Hey, sorry this is a little late. But thank you for taking the time to reply with this information.
Doesn’t this require a function? 
You need to add V(i), not i, to sumPositive. i is just the index, V(i) is the actual component of the vector. 
Your if V&gt;0 part checks for all elements if they are greater than zero. This will return a vector the size of V with ones and zeros. To check if the i'th element is greater than zero you have to take the i'th element of V. V(i)&gt;0 will return a single one or zero which is what you need in this case.
Thank you for your help!
If you want to get fancy and efficient, you could do `sum(V(V&gt;0))`. Don't even need the for loop. It's called using logical indices. But it does sound like you're required to use a for loop for your specific assignment, even though in matlab you really ought to avoid them if possible. 
Thank you! I actually ended up using an If statement. I just changed some code before the one above. 
You want fprintf(), not disp()
Using a loop for this task is a horrible habit to teach students. Tell your professor he should be ashamed. 
How did you go about doing this? I'm curious as I am in the same situation
This is what I have so far but its not working and I dont know how to continue. please someone help %Lab8.5 f = figure; myaxes = axes(f); myaxes.Units = 'pixels'; myaxes.Position = \[100 120 325 280\]; choosePlot = uicontrol(f, 'Style', 'text', 'String', 'Select Solution', 'Position', \[240 40 120 20\]); plotChoices = char('Wind' , ' no wind'); plotoptions = uicontrol(f,'Style', 'popup', 'String', plotChoices ,'Position', \[240 20 120 20\]); constantAngleX = uicontrol(f, 'Style', 'text' , 'String', 'Angle with X', 'Position', \[400 40 120 20\]); constantValueX = uicontrol(f, 'Style', 'edit', 'Position' , \[400 20 120 20\]); ConstantVo = uicontrol(f, 'Style', 'text', 'String', 'Inital Velocity', 'Position', \[400 80 120 20\]); constantValueVo = uicontrol(f, 'Style', 'edit', 'Position', \[400 60 120 20\]); buttonPlot = uicontrol(f, 'Style', 'pushbutton', 'Position', \[50 15 150 40\], 'String', 'Plot Now!', 'fontsize', 20, 'callback', {@plottypes, plotoptions, constantValueX, constantValueVo}); function plotbuttonangleX(object, eventdata, constantValueX) constant = get(constantValueX, 'string'); THD = str2double(constant); end function plotbuttonVo(object, eventdata, constantValueVo) constant2 = get(constantValueVo, 'string'); Vo= str2double(constant2); end function plottypes (objects, eventdata, plotoptions) what2plot = get(plotoptions, 'values'); THD = plotbuttonangleX(THD); Vo = plotbuttonVo(Vo); if what2plot ==1; g = 9.81; t = 0:1:2.\*vo.\*sind(THD)/g; vx = 0 voy= vo\*cosd(THD); voz = vo.\*sind(THD); vz = voz - g.\*(t); x = vx \* t; y = voy \* t; z = voz \* t - .5\*g\*(t.\^2); plot3(x, y ,z) hold on plot3(linspace(0,0, length(y)), y, z, ':r'); grid on xlabel('x(m)') ylabel('y(m)') zlable('z(m)') xlim(\[-3000, 3000\]) ylim(\[0, 6000\]) elseif what2plot ==2 g = -9.81; t = 0:1:2.\*vo.\*sind(THD)/g; vx = -30 voy= vo\*cosd(THD); voz = vo.\*sind(THD); vz = voz - g.\*(t); x = vx \*t; y = voy \*t; z = Voz \* t -.5\*g\*(t.\^2); plot3(linspace(0,0,length(y)), y,z,'-b'); grid on xlim(\[-3000, 3000\]) ylim(\[0, 6000\]) xlabel('x(m)') ylabel('y(m)') zlable('z(m)') end end 
So you can't use a vector as a parameter %f for a fprintf function. % represents a scalar value so you need to be explicit in using that symbol. The data is basically buffering itself inside the fprintf function and you'll just keep getting data overflowing to the console. It sucks, but it's what it is. 
So you say "it doesn't work" but what doesn't work? Do you get an error? Does it looks funny? 
Yes, I get an error that says 'Dimensions of arrays being concatenated are not consistent.' The arrays that I want to display are both in a 20x1 matrix so that's why I'm confused.
Hey! Thanks for the reply. I just tried it now and it didnt work. I got the correct number of the word 'Student' however non if the numbers were written.
I just added it to the disp() function without thinking about its size! Thank you for the observation. However, I tried it now but it still displays the same error. I set x equal to a 1X20 char x=\['Student '\]; disp(\[x num2str(grades(:,1)) ' : ' num2str(FinalsAverage),'% ('... num2str(letter\_Final) ')'\]) I also tried changing x to a string by x = convertCharsToStrings(x); but that didn't work either. &amp;#x200B;
You could always do it in a for loop for i = 1:length(ID) fprintf('Student %.0f: %% %.0f(%s)\\n', ID(i), Final(i), letter\_Final(i)) end
how many tabs of chrome have you got opened?
0, I closed all other program except anti virus 
Are you running simulink as you're typing in the command window? I had an SP4 with the same spec with an i7 and had no problem evening running SLDRT.
Is the error the root sum of the squared residuals? Have you read the documentation for the norm function? Do you notice any similarities between the two? 
Are u talking about the Live Editor or the regular Console?
Yeah, I've noticed that too on a few computers. Not sure why tho, try increasing Java memory in the settings (just a hunch). Are you noticing any mem usage outside of the normal range? As in, check Task Manager before and after you start Live Script.
Sorry, I think I'm confused. Can you write a sample of what you're wanting your output to look like? Not the code- just what you're hoping the display command will display. 
I think the prompt is asking you for [a function](https://www.mathworks.com/help/matlab/ref/function.html), so you'll need to wrap most of that script up in one. You can do it in the same file like this: x = &lt;something&gt;; inc = &lt;something&gt;; Y = log10_bywhile(x, inc) function yOut = log10_bywhile(xIn, incIn) &lt;your code here&gt; end To allow the number of inputs to your function to change (so you can use a default of 0.01 for `inc`), you'll want to check out [varargin](https://www.mathworks.com/help/matlab/ref/varargin.html) and [nargin](https://www.mathworks.com/help/matlab/ref/nargin.html). If you want to make it more interactive, you can check out how to use [input](https://www.mathworks.com/help/matlab/ref/input.html). Hope that helps.
 % data in cell 'c' maxN = max(cellfun(@numel,c)); % pad end of data in each cell with NaN's up to maxN c_mod=cellfun(@(x)(cat(1,x(:),nan(maxN-numel(x),1))),c,'UniformOutput',false); % transform to array c_mod = reshape(cat(1,c_mod{:}),maxN,[]);
Just to be clear, in the paper methods they stated that they used ode45 too?
yup. i don’t have the exact quote at hand but the paper says “ode45 with error control”.
So your requirement to stop the loop is if your two terms are exactly equal. But if you are iterating through by adding 1 to x each time, x==y may never be true for any whole number of degrees. 
This looks like you are just rootfinding, which matlab has built in functions for. If you can set it up so that you have a single equation in terms of x (plug in v to your y equation and replace y with x), then you can solve for x.
The equations are nonlinear in terms of the angle &amp; v and explicit expressions cannot be derived.
[Never test for equality with floating point numbers](https://floating-point-gui.de/errors/comparison/). Especially the at you're doing it- simply increasing x by 1 every time- there is no guarantee that 'x' will ever equal 'y'. Instead, figure out how close you think `x` and `y` should be able to get, and then say something like `if abs(x - y) &lt; delta` But really, MATLAB is great at solving things like this. Look into `fzero` to solve these sort of problems quickly. 
that makes sense as long as its within 0.2% it should be alright. cheers
It doesn't matter if explicit linear equations can be derived, MATLAB can solve it numerically. Add this to the end of your script: x = fzero(@(x) this_root(x, W, rho, S, CL, T, CD), x); v=sqrt((2*cosd(x)*W)/(rho*S*CL)); y=asind((T-0.5*rho*(v).^2*S*CD)/W); disp(['y= ', num2str(y)]); And add in a sub-function: function error = this_root(x, W, rho, S, CL, T, CD) v=sqrt((2*cosd(x)*W)/(rho*S*CL)); y=asind((T-0.5*rho*(v).^2*S*CD)/W); error = x - y; 
There's nothing inherently wrong with solving them in a for-loop. However, we'd have to see your code to understand what could be done to speed it up. 
Well, my response time is about to slow down, since that site is blocked at work. 
This is how I want my output to look like: Student 693272: %77.0 (B) Student 765930: %60.8 (D) 
Have you tried passing a number to figure()?
It’s not holding the previous graphs. Write hold all inside the loop and hold off at the end. Hold all automatically recolors the subsequent data. You should probably make a legend for what the data is though 
^This. MATLAB works much more efficiently doing matrix calculations over single line symbol equations. Given you're only using one symbol, surely something like: for i:1:length(M) solw(i) = pi*((w1(i).^4 - (d.^4))/(32*w1(i)); end would be sufficient, with extra 'if' statements after to determine real solutions if required (I don't know your initial inputs). This may be a few extra lines but should speed up the code, and also rid you of silly things like defining *D* as positive (which is irrelevant if you're already feeding absolute values to it).
You're calculating a numerical result? Stop using symbolic variables. 
Everybody is pointing out that you should never test for exact equality in a situation like this, and they're correct; but they're ignoring that even if the equality test was successful, your loop will never terminate. You never, under any circumstance, set bo to a value less than one. Your loop only ends if bo takes a value less that 1. 
You're welcome. It's very nice of you to say that. :)
I would suggest using the instruction 'matlabFunction' to generate either a file or an anonymous function. Then you can use the result to do whatever you need. Evaluating a symbolic expression with data and casting the result to double may be working also but the computation time. Is usually terrific. 
Yeah, it's really what these other people said- if the result you want at the end is numeric, work with numbers. MATLAB is 100x's (no joke) faster working with numbers than symbols. Only use symbols if you're looking for a symbolic answer
I have no idea how to do this. I was hoping there would be a simple way to evaluate the functions for the initial conditions that I have and just let it iterate. Computation time isn't really a big concern right now. I just want to evaluate the Jacobian and the function
In the first result, the outputs are technically identical on the range for each respective function. However, because for the atan function has a smaller range, it has to use the equivalent that is within it's own range. This equivalent is the angle that is greater than -90, plus 180. Check out how atan2 is calculate [here.](https://en.wikipedia.org/wiki/Atan2) What you're seeing in your second result is something called phase wrapping. It's another error that can occur when the value of the function exceeds the range of the function. Because the range is limited from -180:180, the values below -180 must be 'wrapped' to their correct positive value that is within range. You can use the [unwrap](https://www.mathworks.com/help/matlab/ref/unwrap.html) fucntion to correct this easily. 
Thanks for the reply! It looks like if I use the second result, with the unwrap function, and then add 180 degrees, it produces the same result as atand. The only difference is some slight error around the point of the unwrap. Thanks so much for the help! I really appreciate it.
Do you have an experience with if statements to place NaN values where angle now == 180? Your fix worked great, but the issue is now my output has a bunch of 180's from adding 180 to the angle when it should be a NaN. I've tried to write an if statement that follows: if output(L,4) == 180 output(L,4) = NaN output(L,1) = NaN output(L,2) = NaN output(L,3) = NaN; end Basically, if the fourth column in the output matrix is 180, all 4 variables should be reported as NaN. I'm not sure this is the correct way to set up this kind of if statement, but any help is greatly appreciated. Thanks again man! 
No worries man! Thanks for the reply. I'm pretty confident I can piece something together that will work well enough. Thanks again!
Just try Ezplot(f) Hold on EZplot(z)
oh shit that works! Thanks!
Oh, I see. I am still dealing with the same issue, even with the hold on because I have multiple subplots so that is another issue I am dealing with as well
Split this into two parts. First, figure out how to display the text that you want - I would suggest sprintf, though you could also use num2str and display. Second, think about how you want to iterate so that you can write this in as few lines a possible. As an example, say you instead want to display the first 10 squares of 5. Rather than hard coding each individual square, let the program do the work for you: for i = 1:10 5^i end You just need to find out what the best way to represent the numbers you want to display iteratively (which is the point of the assignment so I'll leave it to you).
Take a look at the strcat func
I’ve noticed speed issues when using a network license over a slow internet connection + VPN. If your license supports License Borrowing, you can try that.
What’s license borrowing? 
https://www.mathworks.com/help/install/license/borrow-licenses.html