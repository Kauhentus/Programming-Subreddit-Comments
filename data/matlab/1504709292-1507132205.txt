[Here](https://stackoverflow.com/a/24643248/5171120) is a great answer from Stack Overflow.
So, in a truly fair comparison, MATLAB will always be, at best, equal in speed to C++/Fortran. However, for a lot of linear algebra operations (which is really MATLAB's bread and butter), the MATLAB routines are so optimized that unless you really put a lot of time into it, you'll never beat them. My buddy is working on his phd in physics, and had to do some very large (like, 10,000 x 10,000) matrix inversions and matrix exponents. In theory his c++ code should have run faster, but the optimizations in the MATLAB code made it run much, much quicker. 
There is not a standard. There are so many ways to do anything in MATLAB that there shouldn't be an authority telling you which way is correct.
&gt; the MATLAB routines are so optimized that unless you really put a lot of time into it, you'll never beat them. The MATLAB routines are nearly unbeatable fast where Mathworks rely on external very optimized libraries: BLAS (MKL, ATLAS, GOTOBlas) or FFT (FFTW), their own written code sucks mostly and can be beaten easily. For much code of them are faster variants available on fileexchange
Okay, so I figured switching the positions of the function and for loop would do it, since it would now read what dl_squared is before using it in the for loop. And... IT WORKED! It plotted graphs that tell how much larger the top part is, for all 7 heights. Could not have done it without you, so thank you so much, you're an absolute genius. 
Where's the rest of your code? Can you please format it?
Create a mask that [only selects the object](https://xkcd.com/1425/), copy only the masked pixels, then paste the scrambled image back to the masked region. 
While all ways can be correct, a style guide like pep helps with coding in teams to make codesharing easier. Things like line length, naming conventions, indentation style, etc Matlab doesn't have this because nobody really uses it (and should not use it) for professional software development unlike programming languages such as c++ and python
I never understand why people insist on reinventing the wheel. The [Madgwick filter exists, and it's free, and it's written in C and Matlab, and those implementations are already optimized](http://x-io.co.uk/open-source-imu-and-ahrs-algorithms/). If you were *at all* worried about *your* implementation of a pose estimation algorithm, the *first* thing you should do is compare your results against a known working method. Is 200 degrees in 2 minutes a lot? [Not really](https://electronics.stackexchange.com/q/172114/76598). Random drift is.... random. If it were predictable you could make a function that predicts it and then corrects for the drift. The description of your test is vague at best. You put it on your hand and wiggle your hand. How is it oriented? About which axis are you rotating the unit? *Where is the code you're using to get those results?* 
Does it work now, because that's all i've got for the code
Take it one step at a time. First make sure that your data is being loaded as you expect (it's probably not). Stop after 'Files=...' and check that it is the proper construction. If it is, set k as a number in the range and check that it is a data format that plot() will accept. From here you can wrap it in a loop and troubleshoot combined plots.
Also, indices start at '1', so k=0 will give that error.
How is this a Matlab question?
Use [dir](https://www.mathworks.com/help/matlab/ref/dir.html?requestedDomain=www.mathworks.com) to grab the names of the files, and [dlmread](https://www.mathworks.com/help/matlab/ref/dlmread.html) to transfer the file data into variable.
Thank you for this, you were right in that my 'Files=...' isn't loading what I thought it was loading (I think), but I'm guessing here is where I state the matrix dimensions? All x values are the same so I'm guessing I have to write something like a = 1 : size(x:2) (I think?!), but I'm very confused!
I'm not totally clear what the data looks like, and what form it is in, but if the files are in the current directory, you should try using 'load(filename)'. Pick one file name, try to load it and assign it to a variable, and then look at it to determine if there is header info or anything else that needs to be fixed. Build your script off of this file, and once it works, you can expand it to a list of filenames (check out 'dir').
Thank you for this, I've tried and still very confused to be honest, I can't get dlmread to read multiple files
You used an atan2 to compute the angle which is defined over [-pi,pi] no wonder you such a drift... also the speed of rotation and the combined axes or rotation are badly dealt with the complementary filtre.
Use dlmread inside for loop (for each single file).
Yeah, back in the day in undergrad everyone just blasted multi thousand line matlab scripts with so much shitty code...
The [Matlab Automotive Advisory Board](https://www.mathworks.com/solutions/automotive/standards/maab.html) publishes a style guide, although it is more aimed at Simulink. 
Use the 'floor' function.
Thank you!
Use num2str, manipulate the string, and then str2num
What about Simpsons method? Is there a specific behavior you expect this data to have? Fitting a model is always best if you have one. I'm not sure what you're trying to say about the curve fitting toolbox. It's got plenty of tools for fitting, if that's what you want. You'll have to write the script yourself, it's not going to do that for you. 
Write a function that can evaluate the accuracy of the resulting vector, returning a boolean flag (True / False). Call it something descriptive like Error_Too_Large. Then let that flag control the loop Error_Too_Large=true; While(Error_Too_Large) [Perform Jacobi Iteration] Error_Too_Large = Error_Testing_Function(Vector); End You can also use simple Boolean to add a fail-safe to avoid infinite loops, but one step at a time. 
iterate until the last ten digits are the same as the previous iteration
This looks pretty promising at first glance. I'll take a closer look tomorrow when I'm sober, but thank you for pointing me in (what looks like) the right direction. Not sure what you mean when you say "Fitting a model is always best if you have one." An exact solution equation for the curve exists but only applies in very uninteresting scenarios. Anything worth studying around this problem is never going to be described by a single continuous function, period. As for the curve fitting toolbox, I was a bit confused after trying a few things in there... unsuccessfully. I was trying to force it to find a function to fit the curve, or at least come up with a spline, but it seems that that's not really the road I need to be headed down. I'll look into Simpson's method tomorrow morning, and thanks again.
If your data is evenly spaced I think you can implement Romberg integration the way this lecture says https://www.math.usm.edu/lambers/mat460/fall09/lecture29.pdf
Lol, glad I could be of help. Best of luck with the project!
Piecewise fits work just fine, and should still let you directly calculate an integral. I'm talking about a model fit because you talk as if you have one. You mentioned knowing at least the first and second derivatives, which implies knowledge of some functional form. 
Wow, what a terrible idea. 
...Alternatively if you wanted to floor the number to 2 dp you can do floor(n*10^d)/(10^d) n is your number If d is positive then you floor based on the number of decimal points you wanted
That's true. Also works for rounding to the nearest N: N*round(x/N) For example, to round 54 to the nearest factor of 10, 10*round(54/10) ans = 50
Looks like you'd only get one sound. What were you expecting? You're extracting the variable y from the last mat file you loaded, scaling it, then saving it. Looks like expected behavior. 
I know I only get one sound, but how do I assign all of those sounds into a wav file
I've actually used the Madgwick filter here and the first two pictures are the results got. As for the test description. I put the IMU on index finger of my right hand in such a way that the Z-axis is pointing downwards, X-axis is pointing left (towards the thumb) and Y-axis is pointing towards my wrist. I then place the hand flat on the table. So during the flat phase I'm expecting the roll, yaw and pitch angles to be somewhere between -7 and 7 degrees roughly (since the IMU is on the finger and hence not lying perfectly flat). Then I raise my hand and slightly flex the fingers, effectively rotating the IMU about the X-axis. So during this flexed phase I'm expecting the roll angles around 30 degrees. I repeat flat/flexed cycle 10 times. As for the code I'm using standard Madgwick's implementation: %% Madgwick Filter AHRS = MadgwickAHRS('SamplePeriod', 1/200, 'Beta', 0.041); madgwick = zeros(time, 4); for t = 1:time AHRS.UpdateIMU(Gyroscope(t,:), Accelerometer(t,:)); % gyroscope units are already radians madgwick(t, :) = AHRS.Quaternion; end madgwick = quatern2euler(quaternConj(madgwick)) * (180/pi); % use conjugate for sensor frame relative to Earth and convert to degrees. 
Hi sidam8, I actually haven't used atan2. The fusion algorithm uses the Gradient-Descent model to compute the quaternion out of accelerometer data.
I have used Matlab for professional software development. It was used to generate physics based models for other engineers to perform analysis. We had an internal style guide for members of the framework/modeling team.
Wanted to mention as a sidenote, if you want to display (but not actually alter) your numbers to 2dp you can type: format bank This puts it into currency format which is 2 dp, can be a simple way to compress lots of extra decimals.
I don't know why I though I read you used a complementary filter. I was talking about the roll jumping from +180° to -180°. it's come from the conversion from quat to euler angles. Are you sure there is no offset of your gyro when the IMU is immobile? Are you alors sure there is non shenanigans on the units of the gyro rad/s or °/s? Is all that is already verfied change Beta value that should change how much trust you put into your gyro. Also for the yaw it will be very difficult to have accuracy on this axis without magnetometer. Hope this will help! Good luck
It's still 'back in the day' for many undergrads or new grad students joining labs. Source: have rewritten many, many scripts with huge lists of hard coded file and index references to utilize the awesome and cryptic powers of the for-loop.
Oh. I assume you'd just concatenate them into one array. 
I have a general knowledge of the form of the curve, but unfortunately that's about it. This is for a concentration profile of a given substance in a in a sphere which is diffusing out, but the actual starting concentrations are never homogeneous and the temperature is constantly changing. The only time I ever have a continuous function to describe the curve is when the initial concentration is homogeneous and the temperature is constant.
If x is positive left, y is positive toward you, then z **must** be positive up for a right-handed coordinate system. The gyros and accelerometers use a right-handed coordinate system. The chip isn't oriented how you think it's oriented, which may explain your data. Look again at your roll angles - they're not jumping around a lot, you're just limited to +/- pi, as /u/sidam8 said. What looks like is happening to me is that your filter is taking time to converge on a solution (which you can watch happen in [Sebastian Madgwick's video](https://www.youtube.com/watch?v=BXsGWoOMtmU&amp;t=12s)), and then you're getting good results. The problem with your results is that instead of being in the range of 0 +/- 7 degrees like you're expecting, you're getting 180 +/- 7 degrees. This is because, again, I believe your chip is upside down. The output is bounded to +/- pi because, again as /u/sidam8 said, you **are in fact** using atan2 - it's used in the `quatern2euler` function. Also as /u/sidam8 said, I believe the post originally stated that you were using a complementary filter (they're not crazy). Your yaw is going nuts because you can't stabilize yaw without a magnetometer (compass) reading. On that axis, without some means for correction, you're forced to drift at whatever the gyro drift rate is. When you call `AHRS.UpdateIMU`, you're doing so with the `(Gyroscope, Accelerometer)` inputs. You could use the overloaded `(Gyroscope, Accelerometer, Magnetometer)` function call and stabilize yaw with your magnetometer outputs. So, you have: 1. Yaw drift because you're not using your magnetometer, 2. Stable pitch after the first ~6k samples, which is the first 30 seconds at 200Hz sampling rate, and 3. Stable roll at about 180 degrees +/- 10-ish degrees. Everything looks fine to me. Turn your IMU right side up and try again. Use the magnetometer if you don't want drift on yaw. 
My mudder always said "If God takes away a man's legs, he don't deserve to feel good."
all those solutions require continuous functions, which, again, I don't have
Thanks a lot for an elaborate reply! It's the first I'm working wth IMUs so I'm still a bit lost... As for the axes, you're right. I made a mistake when writing the previous reply - the y-axis is actually oriented away from me (not towards my wrist). The chip is upside-down, that's true (I'm sorry, I should have mentioned that), but for the final application I need it to be that way. I don't understand though why putting the chip upside down makes my roll angle to be around 180 degrees instead of 0. Is there a way to correct for that without flipping the IMU? 
How would I do that?
One good resource a lot of people have pointed me to is The Little SAS book. Good luck, I found SAS to be really counter-intuitive, but maybe that's just databases in general.
If you want to flip the IMU without turning the physical device over, try just inverting your data set. Accelerometer = -Accelerometer; Gyroscope = -Gyroscope; Magnetometer = -Magnetometer; Your roll angle is 180 degrees and not 0 because it is expecting gravity to point **down**. Generally speaking, accelerometers are more accurate in the long-term, gyroscopes are more accurate in the short-term. The accelerometers sense gravity and that is used to provide an absolute reference for the accelerometer readings. Yaw doesn't typically get this because the gravity vector is *parallel* to the yaw axis of rotation; the *projection* of gravity onto the z-axis is *zero*. This is why you need an IMU. The stabilization period for the Madgwick algorithm is the accelerometers "using" gravity to correct the orientation of the algorithm. It's akin to a low-pass filter on the accelerometers combined with a high-pass filter on the gyros. Try to ignore the low-frequency (drift) on the gyros and also try to ignore the high-frequency (noise) on the accelerometers. Keep the high-speed rotations and low-speed gravity vector in the results. Anyways, back to the point - your roll angle is 180 degrees because that's the orientation required to get gravity to point in the correct direction. 
Aw shucks :( you sure? I admit I didn't completely read the pdf but it seemed to me that you only needed the values of the functions at evenly spaced points which you do have (looking specifically at page 2)... oh well
I agree with /u/FrickinLazerBeams that something like Simpsons rule or piecewise polys in general should work well... Piecewise functions don't try to model the whole function at once. They split it up into lots of small subsections and then approximate each of those small subsections with, for example, a polynomial. Since you already have discreet data-points you can model the space between these data-points with these piecewise function to give you one continuous curve which approximates the underlying function. This is true whether or not the underlying function could ever be written analytically. Given polynomials are very easy to fit and integrate you can then express the entire integration as a single formula. This is essentially what: * Trapezium / Midpoint Rule do for 1st order piecewise polynomials * Simpsons Rule does for 2nd order piecewise polynomials * The other compound Newton-Cotes formulae do with higher orders Note you don't want to go to too higher orders, because you can encounter Runge's phenomenon where the piecewise functions oscillate more than they should and give inaccurate readings. I find that the various formulae aren't often expressed in an easy to implement format, for now something like this should work well for you: S_simp = dx*(sum(yi) - sum(yi([1:4,end-3:end]).*[31 -11 5 -1 -1 5 -11 31])/48); where yi is your data and dx is the spacing i.e. L/(n-1)
It's a basic array operation. Check the documentation, it's fully explained. 
Matlab is a pretty poor environment to do this work. You're probably better off trying to use a midi sequencer. If you're insistent on using Matlab, what do you mean you want to make a "music file?" Something that only works with Matlab, or a .wav/.mp3 or similar file? Are you trying to create a project that automatically reads sheet music or are you saying you want to hand transcribe the sheet music?
Thank you so much for this explanation! Inverting my data set does indeed solve the problem! I'm still observing the drift on the yaw angle, even though I'm using magnetometer data to correct for it now, but I guess this is simply an issue of calibrating the magnetometer properly. Giant thanks once again! 
Glad to hear it, glad to help! Magnetometers are fickle; if you're getting drift on that axis then it could be calibration or it could just be sensitivity to nearby power electronics, potentially including power electronics that are powering the chip. Try getting it outside, or at least away from laptops, power cords, metal walls, cell phones, etc. Good luck with your project!
Are you just trying to feed inputs to a model from the command line? You can interact with a Simulink model using the `sim` command. You can't use the C code generated from a Simulink model in a MATLAB function unless you use the shared library target and call the init/step/term functions with something like `loadlibrary` and `calllib`. Mex files have to have a specific structure that Simulink codegen targets don't provide.
I am asked to do by my teacher to translate one music sheet Just by reading its notes and inputting their corresponding frequencies on matlab. We were ask to program it on matlab so i have no other choice. And yes it is something that only works with matlab. Also have you heard of a program that automatically reads sheet music? Hoho that would make my life easier. Edit: also I'm sorry for my vagueness. Look at the m file i uploaded if you have time that's the type of program we were asked to do 😬 
 No, there's nothing I know of for Matlab that reads sheet music. It would be a neat project on its own. If you program the note frequencies, you'll wind up with something that sounds like tuning forks. Musical instruments have overtones that generate each instrument's *timbre*. It's how a trumpet and a saxophone can each play the same pitch and you can tell them apart. To get a set of overtones, you'd need to add multiples of the base frequency. So, if you were playing a 440Hz A, you'd add 2x, 3x, 4x, etc. to the base 440Hz. The *scaling* of those harmonics is what sets the timbre. You can try finding the harmonics of a piano online or you can play around with them yourself. Download site looked sketch af so I didn't download anything earlier. 
if this is my code, for the 440Hz A, where should i add it? Fs= 8000; quarter=0:1/(Fs-1):0.5; A=0.5*sin(2*pi*440.000*quarter);
dude, what a downer! this is about the signal processing, not replacing decades of synthetic music technology, ctfo 
It seems to work using y=cat(), but It doesn't work with the pauses included.
Thanks for your reply. I'm trying to feed inputs (and initial state) to the model via a function or script. Problem using the sim command is that is not well suited for per-timestep evaluations, but more for initializing a longer simulation with certain parameters. I run my simulations at 100Hz so using the sim command would be very slow. What about calling Simulink in a different way? Simulink can run in rapid accelerator mode (which would be very fast(tm)), which is effectively C-code?
[step 0](https://www.google.nl/search?q=matlab+take+input+from+keyboard&amp;oq=matlab+take+input+from+keyboard&amp;aqs=chrome..69i57j69i58.496j0j4&amp;sourceid=chrome&amp;ie=UTF-8) leads to [step 1](https://nl.mathworks.com/help/matlab/ref/input.html) [another step](https://www.google.nl/search?q=fprintf+matlab&amp;oq=fprintf&amp;gs_l=psy-ab.3.0.0i67k1j0l3.30469.32452.0.34385.7.7.0.0.0.0.90.389.6.6.0....0...1.1.64.psy-ab..1.6.387...0i131k1j0i10k1.DqDSKn7B9Lw) leads to "Write data to text file - MATLAB fprintf - MathWorks" might lead to thinking "wait.. thats not what i want". So then you go [back to basics](https://nl.mathworks.com/help/matlab/ref/input.html) and read carefully
I can think of a few reasons why you get this result. maybe the other values are not exactly the same. Try rounding them to some precision. maybe you've overwritten mode. run which mode to check if the right mode is called. it can be a variable in the workspace, or a function somewhere (thats matlab for you) 
Wrap your array in square brackets []. What you're showing above is a comma separated list so the variable is only being assigned the first value (from what I remember).
Sorry, it is rapped in [] in the code, I just converted it to CSL to fit it in reddit more comfortably. 
&gt; I could loop through and search for if, That is what i'de do (sort of) , and i don't think it such big a nightmare as you might think. Take a matlab file into a string (or something), and go ham on deleting stuff you know you don't need, untill counting is easy. Remove all comments (any line starting with %% , or anything between lines starting with %{ and %} ) make sure each line in your string is one codeline (check for semicolons and commas not between brackets) remove all lines withouth keywords ('funciton','while','for'.etc) remove all leading whitespaces, because screw them. then, from the top of my head, i think counting and comparing keywords that need ends with actual ends is easy. Also if (more probably, when) this approach misses stuff, it's probably straight forward to add some more "ignore these" rules to the approach above.
Check the last not empty line. There are a few things that could be there: 1. A `%}`. This marks the end of a block comment. It has to be `%}` and only `%}`. If there is a start of a block comment without a terminator then the function errors out. 2. A line that starts with `%`. This marks a line comment. 3. An `end` statement. 4. Something other than 1-3 above. If you find case (1), then scroll "up" until you find the start of the block comment, go up one more line, and then repeat the check. If you find case (2), scroll "up" one line and repeat the check. If you find case (3), the function is *probably* terminated with an `end`. If you find case (4), append an `end`. The function might have an `if` statement or loop at the end, which would mean there's an `end` statement that isn't the end of the function. I think there's two robust ways of handling this: the intensive way and the lazy way. The intensive way would be to write a script to run through and count all the possible statements that *require* an `end` statement, and counts the `end` statements in the file. You should handle line/block comments gracefully, etc. The lazy way would be to just add an `end` statement to the function, then try to run the modified function in a `try...catch` block. There's a super easy way to check the function without running it - check the number of inputs. So, here's a sample script. First, make a dumb function: function reddit disp('Function runs.'); end Then, check the number of inputs: &gt;&gt; nargin('reddit') ans = 0 Okay, good so far. Now, append an `end` statement on the end of the file: function reddit disp('Function runs.'); end end Now do this: &gt;&gt; nargin('reddit') Error using nargin This statement is not inside any function. (It follows the END that terminates the definition of the function "rdt".) So to make use of that error, wrap it up in a `try...catch` block: errorMessage = []; try nargin('reddit'); catch errorMessage end Now you can do the following: &gt;&gt; errorMessage.identifier ans = 'MATLAB:m_statement_not_in_a_function' So, put it all together: &lt;open reddit.m, append an 'end'&gt; errorMessage = []; try nargin('reddit'); catch errorMessage end if ~isempty(errorMessage) if isequal(errorMsg.identifier,'MATLAB:m_statement_not_in_a_function') &lt;open reddit.m, delete the appended 'end'&gt; else % Bigger problems here - something else is wrong with the function. end end
Of course, if there's a script that has sub-functions defined in the same script, then this isn't necessarily going to catch everything. Personally I think if you have a code block that's used enough to warrant making it a function, it should be a function that lives in its own file. Then you can use it in other places. If you want a "private" function that can't be used somewhere else, then maybe what you really want is a *class* that can protect its members and methods. If that's the spaghetti you've got to deal with, then you'll need to do the keyword checking. 
It's not a preference setting, just a type representation error. You can force zero by setting a limiting value and converting everything below that to zero if it matters; alternately, you can just cast it as an int.
You are running into machine precision here, not much to be done. This shouldn't really be a problem unless you are doing things symbolically. 
Comments would start with `%`; the section breaks `%%` would also count as comments and would also be removed. 
Why are you calculating a determinant? If you want to check if a matrix is singular, rank() is better: https://stackoverflow.com/questions/13145948/how-to-find-out-if-a-matrix-is-singular
Ugh just add four spaces to format it. And you haven't posted code that runs in Matlab - you left off the brackets. And `mode` should return the most frequent value in your matrix; `Gilist = [1.8734, 28.9436, 28.9436]` would have been sufficient. And the call (as you wrote it, but wrapped in `[]`) works fine for me - returns 28.9436, but you didn't state which version of Matlab you're using or any other supporting information. [Jeez](https://www.youtube.com/watch?v=c-k9VE-eEY4&amp;t=20s).
Video linked by /u/shtpst: Title|Channel|Published|Duration|Likes|Total Views :----------:|:----------:|:----------:|:----------:|:----------:|:----------: [Airplane! - Where did you get that dress?](https://youtube.com/watch?v=c-k9VE-eEY4&amp;t=20s)|Andrew Lucas|2011-12-27|0:00:29|198+ (100%)|69,168 &gt; A great scene with Stephen Stucker from Airplane! (1980). ... --- [^Info](https://np.reddit.com/r/youtubot/wiki/index) ^| [^/u/shtpst ^can ^delete](https://np.reddit.com/message/compose/?to=_youtubot_&amp;subject=delete\%20comment&amp;message=dmqguj1\%0A\%0AReason\%3A\%20\%2A\%2Aplease+help+us+improve\%2A\%2A) ^| ^v2.0.0
Multiplications and divisions in computers are made using multiples of 2, including inverse numbers (0.5, 0.25, 0.125, 0.0625, etc). This happens because of the floating point precision used by your computer. For instance a 64-bit system should be more accurate than a 32-bit system (assuming Matlab uses 64-bit float for that operation). Nevertheless, you will never get a perfect zero unless you truncate it separately at the end.
In all seriousness, this is almost certainly the right answer. `mode` doesn't mean what you think it means. 
Do you know why the answer would change across matlab versions? I could see that causing some big problems when upgrading your software
Thanks for the help The best resolution to the problem I could find was on MATLAB Docs website &gt;&gt;A(abs(A)&lt;1e-10)=0 This sets an unnecessarily small number equal to zero 
Right. Think about how that array represents a sound, and how you'd represent a pause. 
What about flooring the value if result is less than 1?
Oh I think I understand. You want to have Simulink update the state and outputs of the vehicle model, but then you want to take those values and feed them into your MATLAB-based controller? So your plant is in Simulink and your controller is in MATLAB code? I think I'd actually start with trying to move your MATLAB code to Simulink (in addition to MATLAB Function blocks, you could use a MATLAB S-Function or a MATLAB System block to get a bit more control.) An alternative is generating a DLL from the model and iteratively calling your model_step() function followed by your controller code in a MATLAB function. Unfortunately, you won't be able to manually control the time step duration in either case. I haven't tried Rapid Accelerator (or, more specifically, the rsim target) much, but I think it's similar to the DLL solution. So you could try it out if that's more familiar to you. If you can figure out a MATLAB representation of the Simulink model that'd make things really easy, but I'm guessing that's not really feasible for you in this case.
Yes, I think it could work. The strsplit function does a decent job of ordering the character array of the matlab file as lines which can be searched separately and eliminated as you suggested. But what about the inline commenting style? For example x = 12; %assigns 12 to variable x to end the loop Which is easy enough to find by itself but becomes difficult when it is combined with a printf statement that also has uses % e.g sprintf('%d',x); %displays the contents of x before the loop end Thoughts? This is why I began thinking its a bit of a 'nightmare' to use this approach.
Thanks for the response. As much as I detest 'lazy style' programming, I think your suggestion might be the way to go - perhaps with appending the function to the main file then trying to run the whole thing using the nargin function. If it fails append end to the m file and try again. /u/shtpst is a bit on the money here, where if the function file I'm appending also has sub functions, then just appending end to the bottom of the file won't help. I'll need to do that for each sub function as well, which doesn't seem trivial to me at the moment. 
Numerical precision may vary between systems, e.g. 32 v 64 bit installs. Worth checking the value of eps.
Same idea as the above code. This is a better format of an answer to the problem A = [ 1 2 3 4;2 3 4 5; 3 4 5 6; 4 5 6 7] T = det(A) T(abs(T)&lt;1e-10)=0 It's not that big of a problem, it just got under my skin 
Yeah I would've take for granted an issue like this not being so looked over for mathworks
First, get rid of the ax.Position = [-.15 0 1.5 .997] Next, add this (taken from the documentation on 'Save Figure with Minimal White Space', https://www.mathworks.com/help/matlab/creating_plots/save-figure-with-minimal-white-space.html) ax = gca; outerpos = ax.OuterPosition; ti = ax.TightInset; left = outerpos(1) + ti(1); bottom = outerpos(2) + ti(2); ax_width = outerpos(3) - ti(1) - ti(3); ax_height = outerpos(4) - ti(2) - ti(4); ax.Position = [left bottom ax_width ax_height]; if you 'gcf' command, you'll notice that you get: **Position: [560 528 560 420]** So you'll need to adjust these final two numbers in the array to be the same. Use, for example: set(gcf,'position',[560 528 420 420]) This should make the figure square, and the previous commands are telling the axes to fill the figure
Did you initialize 'a'?
Also, what is *n*? Shouldn't that be *subindex* instead?
Because I'm not sure you want `a` or `a0` here's a script for both N = 10; n = 1:4:N; a = zeros(size(n)); a = 4 ./ (n .* pi); a0 = zeros(1,N); a0(n) = 4 ./ (n .* pi); that gives a = 1.2732 0.2546 0.1415 and a0 = 1.2732 0 0 0 0.2546 0 0 0 0.1415 0 
So you need to increment your score. When would you do that? When the user gets the question right. Fortunately, you already have an if statement that checks for that condition, so just put it in the body. Also, are you supposed to not be able to see the numbers you're adding? 
Thanks for that Mengesh, but U have n=1:N % Specify the total number of terms in the approximation N = 100; % Define coefficient index vector n = 1:N; % Set all coefficients initially to zero a = zeros(size(n)); % IF n is 1, 5, 9, ..., then coefficient is 4/(n*pi) subindex = 1:4:N; a(subindex) = 4 ./ (n .* pi); % IF n is 3, 7, 11, ..., then coefficient is -4/(n*pi) subindex = 3:4:N; a(subindex) = -4 ./ (n .* pi); Since I have *n* in my expression, somehow my expression 4 ./ (n .* pi) is affecting this?
Hi. Yes I did. You can see in my code below.
Change a(subindex) = 4 ./ (n .* pi); to a(subindex) = 4 ./ (n(subindex) .* pi); Note that `n(subindex)` is the same as `subindex` as /u/kleinerDienstag stated. Here's a prettier version % Specify the total number of terms in the approximation N = 100; % Set all coefficients initially to zero a = zeros(1,N); % IF n is 1, 5, 9, ..., then coefficient is 4/(n*pi) n = 1:4:N; a(n) = 4 ./ (n .* pi); % IF n is 3, 7, 11, ..., then coefficient is -4/(n*pi) n = 3:4:N; a(n) = -4 ./ (n .* pi); 
Sorry I am really new and bad at this, where exactly do I have to put it exactly ? Are you saying that I should put it after the disp ? 
Mengesh, I still get an error *Metrix dimensions must agree*. Here is my full program: https://gist.github.com/anonymous/8cfa9cedccde6433809d7c99ca3da88e 
Before or after the disp, just as long as it's in the "for" block.
You're taking the sum of the next row at the corresponding column points. You can loop over rows by doing: for j = 1:size(M,1) display(M(j,:)); end So you want to check whether the elements in the current row is greater than some threshold, and then take the sum of the next rows for the columns where that is the case. I suggest looking up [indexing](https://www.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html) for that. 
I have to use looping for it, so I've tried: a = [1 2 3; 4 5 6] while (a (1,:) &lt; 3) disp (a (2,:); end
I also don't want to delete anything in the matrix because I need to do other things to it
Thank you!!!!
it still doesn't work... [here](https://imgur.com/a/ZExd0) you can see how i did it more properly. 
You want to initialize the score array outside of the for-loop. Right now, it's being overwritten with zeros on every iteration. Also, you want to update the score when the user gets something correct, so move that inside the "if user == z" block. That should fix it.
The remaining error comes later in your code. Line 34 has several problems. My best guess would be that you want something like this: f(k) = sum(a(n) .* cos(n .* omega .* time(k))); If you want to debug these errors yourself, the interactive command window is your friend. There you can easily test individual parts of the problematic command to track down the problem.
Ah yes, thank you. I forgot about the *sum* command.
OMG thank you very much. This was driving me nuts. Thanks a bunch
You're getting this error because the first index you try to access in the loop is Files(0,:), which is a subscript index that does not exist.
You're zeroing out the score each loop and not storing it. Remove the first two lines of the loop where you make the score 10, then erase it. Put score(index)=10 in the "if user == z" statement, and put score(index)=0 in the "else" statement. So if they get questions 1, 4, 5, and 10 correct, the score array will show [10 0 0 10 10 0 0 0 0 10] Then you put f = num2str(sum(score)), then disp(f)
Maybe try a recursive function? [Something like this.](http://www.matlabtips.com/recursive-functions/)
I think the way I would do it is have a separate input for each of the parameters that you want to the user to have control over, but only give them the options that you have equations for. For example: -- Input 1: What shape is the section? Enter (1) circular, (2) rectangular, (3) I-beam...etc. The user can then input the number. If they input anything that is not an acceptable number, like "A" or "6" or "square," just write an if/else condition that outputs something like "invalid entry" and restart the same input. After they input their first answer, you can then use another if statement that says something like: if input1 == 1 (ask user for input 2, i.e. diameter of the circular section) elseif input1 == 2 (ask user for input 2, i.e. width of the rectangular section) (ask user for input 3, i.e. height of the rectangular section) From this point, there are probably a lot of ways that you can handle it, but I would make sure that the user enters a numeric value, then you can just use the constituent equation for the sectional properties with the users input as the values. This would be more efficient than parsing an excel sheet for matching the values, and allows the user to input essentially any value to find the sectional properties (rather than being limited to what you happen to have stored in your spreadsheet). However, this obviously assumes that you know the formulas for your beams. This is what I would do, based on my understanding of the problem. Let me know if I've missed something, or if something I wrote doesn't make sense. 
Thank you for your comment. However, I am aiming to be limited to my spreadsheet for this project and am trying to avoid having to input the parameters for each shape. So when I need to look up a shape, I can simply enter it in and all of its properties will spit out.
So you're hoping that the user will enter the exact shape that you have as a string in your array?
Not exactly. I would like for the user to be able to change the shape and I am wondering if it is possible to change the string manually with something similar to the input function.
I'm not sure how large your database is, but if it's not too big, you could use the command **strcomp** in a for loop to compare the user input string to the list of strings that you have, and when it finds a match, output the index of the match. Obviously, if the database is huge, this gets cumbersome.
thank you very much for your help! It's all working now 
I think this exercise is meant for a traditional programming language, where you have to explicitly defined the type of the number array. In MATLAB all numerical variables not explicitly defined otherwise are defined as doubles so shouldn't have any rounding errors. MATLAB can also sum the vector in a single line with no loop with vector addition and AFAIK you can't change the order of addition as the use of doubles by sum() prevents the errors the exercise wants to show you. Tl;dr Use explicit definition of the data types to see rounding errors.
Just define "a" to be an array prior to calling the function. a = [5:5:40]; Volume = VTetra(a); However, that said you're missing something with your function. You need to declare what you're outputting. I'll let you figure that out. :P
Would it be possible to define an input which is valid for any list of numbers? Do i need to change the formula for the volume for this? I don't really get the whole output thing. It just makes Matlab print out ans= when all i really want is volume= anyway. Edit: It should be working now. I can do it in the interactive mode, but when i type it into a function it does nothing. https://snag.gy/l6hZxn.jpg
It's how you're defining your function. You're putting a into it your function calculating the volume, then nothing else. You need to output it. You do that on the top line (I'm pretty sure, it's been a while since I've used MATLAB). I don't want to explicitly tell you want to do otherwise you won't remember what you're doing wrong. 
The problem is when a was just any number, i didn't have to specify an output, it would just print out the volume for me because of the volume= line
Seems like the only change i had to make was replacing ^3 with .^3. I got it to work now actually, only thing that bothers is that the output is ans=, even though i defined it to be Volume= in line 1.
Because your function has no output! You need to return an output for a function to give the result to the workspace that called the function. function output = function_name(inputs) output = inputs + randn(length(inputs));
https://snag.gy/lKSc0M.jpg As shown in the picture i got the function to calculate the volume, and i defined an output in the topline, however the output is still displayed as ans=
Because you just called the function without assigning the output to any variable in the workspace. Therefore by default it is assigned "ans" which is overwritten each time you run a command. vol = VTetra([1:1e-10:2]);
It's printing a value to the screen, but not outputting a value. There is a difference. The question you are asking is crazy simple, go read the documentation on functions. Or even just open a "new function" using the drop down boxes in matlab, it will be pre populated with the correct format for having an output, and you can go from there. 
You need to put the whole function, everything from the `function` up to the `end`, into the file. That error message is what you would get if you only copied the `function` and `end` lines, without the actual code for what the function does.
Damn, I should've known that. Thanks!
Why are you using symbolic variables to do numerical calculations? 
I found out a way to do it! Here is what I plugged in after xlsread %Choose section shape here Section_we_calculate=input('Write a section shape and write as a string \n (W_section Example:''W44X262'')\n %If section is in array, it lists 1. If not, answer is 0. my_section = ismember(Section_we_calculate,Section) %check if program has shape. If my_section=0, it ends program if my_section ~= 1 disp('Shape does not exist, rerun program and choose new shape') return; end %Find datapoint in array x=strmatch(Section_we_calculate,Section); From this point, I extracted the dimensions and am able to use functions to calculate the properties. Thanks for your help yesterday, once again!
I am totally Jon Snow, but I wonder whether there's a more fundamental / non-technical error somewhere, that makes the integral not make sense. If you display / plot the ddWP function does everything look OK? I also don't have the toolboxes to check, but I do notice your final loop starts at zero, so you're integrating from 0 to 0 which can give problems. You're not only getting the error in that first step? If it is something technical that might differ between computers, maybe eps (the minimum-non-zero-value) is different on different systems and that has an effect, but it still seems a like a "pathological" edge-case if that matters so much.
Yes exactly that: the Simulink file is the plant and the controller (and the logging/rest of program) is MATLAB-based. Is there any documentation or guide on what you describe with "DLL solution"? Unfortunately I'm not familiar with any of that... I guess I'm going to make my MATLAB code into Simulink, which did not have my preference but might be the easiest way still. Thanks!
Please look at the [rules for submitting homework](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/). This post is just too open-ended for anyone to be able to offer any good help. I'd rather see terrible code than no code at all. Then we can truly see what you're trying to accomplish. 
Sorry I didn't see this page on the list. I will edit my post with where I am now in this homework.
Press f1
Eh, thought I had replied to this earlier. Anyways, where is the *signal processing* work to do? It looks like there's about 300 notes on the page that OP linked. Those notes (frequency, duration, start time) all need to be entered somewhere in order to *start* doing any signal processing. It would be a reasonable *signal processing* assignment if OP were *given a signal to process*. Manual entry of a couple pages of sheet music is *busywork*, not *signal processing*. 
What do you mean? That code is screenshotted from a youtube vid lol, but the video wasn't explaining anything, and the problems he did was in german lol (so I didn't understand the questions..) But it looked somewhat relevant to a problem I'm trying to do, if I could just understand what the code does...
I guess I'll just ask you directly, the original problem: Ok so the first problem was to write a program that runs the jacobi method 100 times, this is what I've done: http://imgur.com/a/Pd9in . Then in the next problem I have to write a method that solves the problem to 10 decimal accuracy (what does that mean), and it how many steps does the method use (how can I find that out)? (Use the 1-norm to measure the error)? What is the 1-norm and how can I implement it, and what meaning does it have for this problem in particular? So I assume I need to write a new function use a while loop, so it stops when it reaches 10 decimal accuracy? But how do I set up the condition for the while loop? And what do you reckon I put inside it?
 M_new = zeros(size(M)); M_new(I) = M(I);
 I(find(I)) = M Couple problems: 1. You have more entries in `M` than there are `1`s in `I`. 2. As it stands, you haven't defined `b` to be anything, but I assumed it wasn't a symbolic. If you want to do this with a symbolic matrix, you can do the following: sym b; I = &lt;your definition of I&gt;; M = repmat(b, sum(sum(I))); I = sym(I); I(find(I)) = M; If `M` is a double (i.e., `b` represents an actual value, not a symbolic variable), then you can just do what I stated above (again, assuming there are an equal number of variables in `M` as there are `true` index values in `I`). :EDIT: Ah sorry, replied before the edit that showed `M` as being a matrix; I thought it was a vector input. If you're trying to use `I` to mask `M`, then you do it the way /u/ChosenUsername12 said.
The answer above shows updating `I` with the values. You might just want to *use* `I` to place variables in a new matrix, but that's a trivial reassignment: newMatrix = I; newMatrix(find(I)) = M; That's it! How it works: `find(I)` returns the indices for all non-zero entries in `I`. This means that `I( find(I) )` selects every index in `I` where `I` is not a zero. `I(find(I)) = M` is a shorthand notation for `I(find(I)) = M(1:numel(M))`. That is, this will *linearly index* `M` and assign the results to the selected indices in `I`. This is kind of important because Matlab indexes matrices by *column*, not by *row*. Try this: M = 1:9; M = reshape(M,3,3).' I = eye(9) I(find(I)) = M Those results are probably unexpected. Again, Matlab indexes by *column*. M = 1:9; M = reshape(M,3,3) I = eye(9) I(find(I)) = M That probably looks better, but **the point is that the orientation of `M` matters.**
Every single one of those questions has the same answer: this isn't really a Matlab question, it's about understanding what you were taught in class. If you don't know what your teacher meant by the assignment, you probably should have listened in class, or you should ask your teacher. 
 fprintf('What is %d x %d?\n', tables(1), tables(2));
C = M.*I; Or C=M; C(~I) = 0; I would avoid using find, since it can slow things down a bit.
There should be a sticky for this. OP gets bonus points for using eval instead of an anonymous function. 
Basically, the while loop will execute the update function (line 12), until the difference between the current result (x1) and the previous result (xi) is less than some defined tolerance (10e-6). If you want to see how the values change with each iteration, slap a breakpoint in there and step through the loop one iteration at a time. The value x0 is originally used as an initial guess, but serves as a placeholder for the previous value of x as you move on to the next iteration. The initial value of x1 is just set to 1 so that the difference between x1 and xi is greater than the tolerance of the loop. You could make pretty much whatever number you want. Hopefully this helps, but I think the easiest way to understand a new algorithm already implemented in code, is to throw some break points in it and see how each variable changes step by step.
From the comments, it seems like the problem is implementing the Jacobi and Gauss-Seidel iterative methods for solving systems of linear equations (Ax=b). **Chapter 7.3** of *Numerical Analysis, 7th ed., Burden* provides a great overview and proof of these methods. The general idea is that we can solve for *x* by using the iterative form *x{k} = Tx{k-1} + c*. This means that after more iterations (ie as *k* goes to infinity), *x{k} -&gt; x* Intuition should tell us that after many iterations, the difference between one approximation for *x* and the next becomes very small: *||x{k}-x{k-1}|| &lt; E*, where *E* is some tolerance level. For these iterative methods, it's appropriate to have a stopping condition. In this case it's when the difference in approximations is less than some tolerance. Line 13 and Line 14 are important because they become *x{k}* and *x{k-1}*, the terms used for checking if the error is less than the tolerance (*Line 11*). I typed up a program based on the Jacobi method that accepts the matrix *A*, vector *b*, and a tolerance as parameters. function [ x_k ] = jacobi(A, b, tol) D = diag(diag(A)); L = tril(A, -1); U = triu(A, 1); % Initialize the iterative vectors x{1} = zeros(length(b), 1); x{2} = -pinv(D)*(L+U)*x{1} + pinv(D)*b; % Begin iterating k = 2; while abs(x{k}-x{k-1}) &gt; tol k = k+1; x{k} = -pinv(D)*(L+U)*x{k-1} + pinv(D)*b; end x_k = x{k}; end With this implementation, you can set the tolerance to 10 decimal places of accuracy (ie tol=10^-10 ).
I just need someone to point me in the right direction, thanks in advance. So I've been using Matlab for some weeks but it's the first time I create my own function, which is basically a capital stock series. delta and k0 are given and I sub T-i is an array with some numbers that I already have. How should I code the sumatory? 
Is there more? You just type the equation in. You can even use `sum` for the sum.
This is what I've written so far: function y = capital( I_Array, k0, delta, t) k=zeros(length(I_Array) - 1, 1); i= 0; for t= 1 : length(I_Array) - 1 k(t) = ((1-delta)^t)*k0 + sum(((1-delta)^i)*I_Array(t-i)) t=t+1; end :( :( 
y is never assigned so replace it with k. You don't need to increase t yourself, Matlab does it for you when you write for t=1: length (l_array)-1. If you want to increase it in steps of two you can write for t=1:2: length (l_array)-1. Edit: I suggest reading the documentation, that usually helps. links: https://se.mathworks.com/help/matlab/ref/function.html https://se.mathworks.com/help/matlab/matlab_prog/loop-control-statements.html?requestedDomain=www.mathworks.com
Thank you very much but do you know how let the user choose between 1 and 10. He also need to do only one table (2x1, 2x2, 2x3 etc) and I can't make it work 
Thank you so much!
Thank you :) I've got one last question, hopefully. How can I find the y value on this interpolated plot for every 0.0001 x interval? I thought I'd make fx = dl1./dl2 And find fx(1), fx(2), and so on, but that will just be finding value at whatever interval the graph is plotted with. What interval is that, by the way? Thanks. EDIT: Also tried: index = find(xi==0.0001); Y_point = fx(index) But that fails, giving: Y_point = [](1x0)
Maybe [this link](https://www.google.nl/search?q=matlab+Can+I+transform+a+duration+array+into+a+string%3F&amp;oq=matlab+Can+I+transform+a+duration+array+into+a+string%3F&amp;gs_l=psy-ab.3..0i67k1l4.48494.50911.0.51023.14.12.1.0.0.0.103.692.10j1.11.0....0...1.1.64.psy-ab..2.12.695...0j33i22i29i30k1j0i22i30k1j0i131k1.ynhRgSlmfW4) has the answer
Once you have a peicewise polynomial stored as we do you can use the ppval function to find the 'y' value at any given 'x' value, or at a whole range of x values. I chose to use xi values stretching from 0 to 1600 with a length of 3001 (so an interval of 0.5333) but you can change that to whatever you want. You say you want an interval of 0.0001? If so change these lines: n = 3001; xi = linspace(0,1600,n); To this: xi = 0:0.0001:1600 But be aware that with an interval of just 0.0001 all the way to 1600 you'll have vector that is 16,000,000 long! Which is a tad excessive! If instead you meant you wanted the total length divided into 10,000 equal pieces you'd be better off with: n = 10001; xi = linspace(0,1600,n); which would correspond to an interval of 0.16. Does that make sense?
 d = duration(seconds(45)) s = string(d,'hh:mm:ss') s is now "00:00:45" alternatively you can also do c = char(d,'hh:mm:ss') c is now '00:00:45'
Heya, so I'm not entirely sure I follow your question, but will do my best to answer it! When you say you have a series of points "in a plane that is radial to the z-axis" I assume you mean in the x-y plane? So like a triangle in the x-y plane? e.g. xi = [1 4 7]; yi = [1 5 1]; zi = [0 0 0]; patch(xi,yi,zi,'blue'); view(3); axis equal vis3d; You then say you want to revolve it around this axis?? But doing so would not create a toroidal 3D shape, it would all be planar. Do you meant rotating around either the x or y axis instead? e.g. if we were rotating about the x axis you'd have something like: n = 101; th = linspace(0,2*pi,n)'; xj = xi.*ones(n,1); yj = yi.*cos(th) - zi.*sin(th); zj = zi.*cos(th) + yi.*sin(th); Such that each column of xj, yz, zj corresponds to one of the original points rotated through n (in this case I chose 101) positions forming the curves you were talking about. From this point you mention you want to calculate the volume? If you're looking for an approximate solution you could use something like the disk method or shell method https://en.wikipedia.org/wiki/Solid_of_revolution However given your shapes are fairly simple and formed of straight lines why not do the whole thing analytically using solids of revolution, i.e. work out the formula for the volume enclosed by a line from "a" to "b" being rotated about some axis, then summing up the solution for however many lines were in your original shape. Note that some of these volumes may have to subtracted from the total to faces that face towards the axis of your revolution, then you don't even have to bother coming up with your 3D point cloud? Using our example from before we're revolving a planar x-y shape around the x axis and a quick back of the envelope integration shows that the integral of pi y^2 dx for a line from a to b is pi/3 (ya^2 + ya*yb + yb^2)*(xb - xa) i.e. % point-cloud of simple shapes xi = [1 4 7]; yi = [1 5 1]; zi = [0 0 0]; % calculate volume yb = [yi(2:end) , yi(1)]; Vol = sum((pi/3)*( (yb.^2 + yb.*yi + yi.^2 ) .* diff([xi , xi(1)]) )); disp(Vol);
**Solid of revolution** In mathematics, engineering, and manufacturing, a solid of revolution is a solid figure obtained by rotating a plane curve around some straight line (the axis of revolution) that lies on the same plane. Assuming that the curve does not cross the axis, the solid's volume is equal to the length of the circle described by the figure's centroid multiplied by the figure's area (Pappus's second centroid Theorem). A representative disk is a three-dimensional volume element of a solid of revolution. The element is created by rotating a line segment (of length w) around some axis (located r units away), so that a cylindrical volume of πr2w units is enclosed. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.27
Thank you for your answer. By the radial thing I meant that is contained in a plane that also contains the z axis. But as you have made the same except in another axis, the idea remains the same (this isn't my native language so my explanations are a little bit quirky, sorry). About the second part of the solution. Thinking about this today I came with a similar but longer solution with a loop within so this comes very helpful in order to make the script faster. Thanks ^^ And about the volume. What I'm trying to achieve is that MatLab treats it as a volume. For example that if I plot it I get a continuous surface -right now with my code what I get are a lot of very near curves: %Xcoord,Ycoord,Zcoord contain the points and the rotated ones for i=1:long %long: amount of points used M=[Xcoord(i), Ycoord(i), Zcoord(i)]; for j=1:acc %acc: number of rotations that the points have already suffered M=[M;Xcoord(i+j*long,1),Ycoord(i+j*long,1),Zcoord(i+j*long,1)]; end plot3(M(:,1),M(:,2),M(:,3)) end Or that if I intersect it with a curve I get the intersection point easily. Indeed I'm not sure if this part is posible but at least I would like to give it a smooth look to the plot. Right now is awful. EDIT: Just in case you didn't know or helps someone I used the rotx, roty, rotz function that makes the rotation for you.
Guessing you managed this already but, just in case... Use the input function to create variables containing the name and age. If the variables are called name and age, then the code to print them in the Command Window would be: fprintf('my name is %s and my age is %d', name, age) You use %s because the name will need to be entered by the user as a string, and use %d (or alternatively %i) because the age will be an integer.
Ahhhh I see! Try the surf command :) It should work I think! surf(M(:,1),M(:,2),M(:,3)) You might also be interested in 'mesh' (and possibly 'patch' if you try to do anything more involved)
I think the third input in surf has to be a function but I'll check it whenever I get to my PC. I'll take a look at *patch* also :)
Fairly sure it doesn't, I've definitely made for example spherical surfaces and whatnot before and I don't think I had to patch it all myself. Anyways, give it a go and if not I can propose a patch solution.
Thanks for the help. I ended up just yolo copy and pasting my code that this is modified from, and it worked. I assume there is just some hidden naming/arithmetic error hidden somewhere in there. 
Read the screen for what? The camera? Browser? Everything? There is support for android hardware but it's limited from what I remember
Frame length is the number of points used in each subset of model fits. So if order is 2 and frame length is 10, you're fitting a second order polynomial to each set of 10 consecutive data points. So larger frame lengths at a given order should produce smoother results. I haven't played with the function but believe a model order of 0, assuming the function will let you do that, should give the same results as a moving average of frame length points.
Isn't that what the file extension stands for? Scalable *vector* graphic?
Having trouble with what?
Got it, thanks for the response, that was just what I needed!
OP, where you at with this thing?
fair enough, lots of tedium, but most signal processing involves some sort of manual translation 
OP, this is a good question and you've got your answer. Thanks for posting the solution you found - I'm sure someone will find it helpful. But please use a more descriptive title! "Quick coding question" doesn't tell anybody anything. I feel that something like "Handling user input" would be much more helpful for everyone else.
It does, but you can import rasterized images to an SVG anyways. Maybe OP' Matlab version does strange things and rasterizes the figures before inserting it into the SVG. I also used Matlab to export SVGs with multiple 100,000 data points and never had an issue. But that was 2017A. Maybe OP uses 7.1 or something very old, that does not know, how SVG works. 😁
what happens is that the values blow up in the exp, and get smaller again when you do the log operation. So you do exp(somethingbig) = inf, then log(inf) is still inf. What you have to do to calculate this is to rewrite the formula, for instance usign the [logarithmic identities](https://en.wikipedia.org/wiki/List_of_logarithmic_identities#Summation), or decide that the +1 isn't adding much in those cases where it goes wrong, omit it and rewrite it by canceling the log and the exp. 
I'm sorry to tell you, but quiver is the way to go.
how would I use quiver for 2D shapes? does quiver require contouring first? I tried: [DX,DY] = gradient(x,y); quiver(x,y,DX,DY) 
you'de have to calculate the normal directions fromt he vertices, which given a line of points, is (i think) the oposite of the bisection. given angle ABC you can calculate the bisection direcition as the mean of the of the normalised vectors AB / |AB| and BC / |BC|. the oposite is the negative of that. 
and I would have to do this with each individual point? 
That is what matlab excels at, doint matrix operations. This might get you started: %dummy data x = [0 1 3] ; y = [0 0 2] ; %cycled vertices to enable diff verts = [x x(1);y y(1)] difVerts = diff(verts,[],2) ; %normalise the difference vertices using the vector length ndifVerts= difVerts ./ rssq(difVerts) ; figure(1) ; clf; plot(x([1:3,1]),y([1:3,1])) hold on ; axis equal quiver(x,y,ndifVerts(1,:),ndifVerts(2,:))
You were right. Thanks! I have Taylor expanded log(1+x) around x=0. I use that to compute all the values where my normal function doesn't work anymore. It gives me accuracy up to 1E-300, which is more than I needed! Thanks so much kind stranger!
I feel like this misses the point. If the calculations you're performing depend heavily on the floating point accuracy of your results, you need to re-write your code so that it doesn't. 
I may misunderstand your point; the conclusion agrees (I think) in that we don't necessarily have to require the *same* output from MATLAB and C++, as long as (1) both are *sufficiently* accurate (which admittedly depends on the particular use case) and (2) in use cases such as Monte Carlo analysis, the *distribution* of outputs is essentially the same. But if you're saying that code should be re-written to... what? Not use atan2(), or any other transcendental function? 
This is really interesting and brings to light a lot of issues that many, especially those who do not come from a theoretical CS background, may miss. I think the most poignant point is the following from the article: &gt;&gt; (0.1 + 0.2) + 0.3 == 0.1 + (0.2 + 0.3) % false I do think this is all important to consider, but then again, for the example: &gt; Consider a more realistic, more complex Monte Carlo simulation of, say, an aircraft autopilot maneuvering in response to simulated sensor inputs. In a particular Monte Carlo iteration, the original MATLAB implementation might successfully dampen a severe Dutch roll, while the MEX version might result in a crash (of the aircraft, I mean). I think you need to step back and decide what you're actually doing. Theoretically this is a valid point. But from an engineering perspective, you should not be operating anywhere near a parameter space where you're this far from (dynamic) stability. In fact, I would argue that if this were the case, you are likely pushing the limits of (numerical) stability of your chosen scheme. Again, I am not saying that /u/possiblywrong is wrong (though I'm told it is possible). I am just saying that you need to keep the theoretical and practical applications in mind. By the way, tip to those who are new to dealing with precision issues. If you want to compare equality of two numbers, `a` and `b` in matlab, it is much better to examine: abs(a-b) &lt; 10*eps(a); where I use the pre-factor of 10 as a buffer for floating point precision. (though in many cases, you want it to be *much* higher) &gt;&gt; a = (0.1 + 0.2) + 0.3; &gt;&gt; b = 0.1 + (0.2 + 0.3); &gt;&gt; a==b % false &gt;&gt; abs(a-b) &lt; 10*eps(a) % true 
&gt; I think you need to step back and decide what you're actually doing. Theoretically this is a valid point. But from an engineering perspective, you should not be operating anywhere near a parameter space where you're this far from (dynamic) stability. In fact, I would argue that if this were the case, you are likely pushing the limits of (numerical) stability of your chosen scheme. This came up in the comments on the post as well, so I think I was unclear by waiting until the end of the post to "resolve" this. The idea was to consider an analysis where we are trying to *measure* the envelope of stable/successful/whatever performance, and to do so we need to simulate points in the parameter space where things work (with high probability), and points in the parameter space where they don't (with high probability). You're right that floating point precision had better not affect where the "edge" is between those two subsets of the parameter space. My point at the end is that that is not the same thing as demanding ulp-level agreement in Monte Carlo iteration #137 of the simulation; in fact, even more extreme "divergence" in behavior of *that particular iteration* is ok... as long as the *distribution* of performance across all, say, 1000 iterations still looks the same, as long as the knee in the P(success) curve still occurs at the same location in the parameter space, etc. 
Basically, you can draw the first image, then call 'hold on', and then plot the second. Remember to call 'hold off' when you are done, or subsequent graphics will be drawn in the same axes. Such as: Z = 10 + peaks; surf(Z) hold on image(Z,'CDataMapping','scaled') hold off 
It's not evaluating, it's just replacing theta with the value you have entered. To the machine, R(0.2) is just as symbolic as R(theta). I reckon it should be double(R(0.2)), where "double" evaluates the input with double precision. "single" uses single precision and I also thing that "eval" could also work, but more experienced members will have to double check my answer.
Just to get the application right: you have a lot of spectra at discrete time points. Within each spectrum you occasionally get peaks at multiple frequencies. You want to find out which frequencies tend to show up together. I'll assume when generating the spectra the underlying data signal has been binned appropriately so that each spectrum can be looked at individually, i.e the multiple frequencies happen in one spectrum. Then you just need to look at each spectrum and find the peaks. Let's say for this example you have ten possible discrete frequencies in your spectrum. For counting the simultaneous frequencies you use a matrix that is ten by ten that represents the connections.The row index and the column index corresponding to the frequency index. So say if in the first spectrum you have peaks at the frequencies 2,3,7. Therefore you add +1 to the entry at the second row, third column and the second row, seventh column. If the second spectrum has the peaks at 1,2 you add +1 to the first row, second column, and so on. With all the spectra done you'll get a connectivity matrix that tells you which frequencies occur together. Perhaps you need to enforce symmetry since 1,2 is the same as 2,1 but if you keep the peaks in ascending order it should be fine. Might still want to do it for display purposes so you don't have just the triangular matrix, depending on taste. The matrix can then be visualized using imagesc() or something like that. 
this works thanks
You could make playerResponse corispond to a number such as 1 and 0 then have that in the if/then
if you have vectors `a`, `b` and `c` and you want a vector which is all of those in a row, you say `v = [a,b,c]`
 reshape(vertcat(a, b, c, d), 1, [])
I realize that, but I'm wondering if there is an easier way where I could just directly refer to the strings instead of having to go the roundabout way
First off, inside `if` statements, you use `==` and `=` (one is a logical check, the other is assignment). So, if you were doing a check on an integer you'd say if t == 5 'do something' end However, with strings you shouldn't use `==` at all, but `isequal` So you'd say if isequal(playerResponse, 'yes') 'do something' elseif isequal(playerResponse, 'no') 'do something else' else 'Error message about how only yes or no is allowed' end
There are a few ways: First, you can use a [`switch`](https://www.mathworks.com/help/matlab/ref/switch.html) statement. This is particularly useful if there are more than two possible responses: switch playerResponse case 'gopher repellent' dosomething case 'rubber chicken' dosomethingelse case 'head of navigation' dosomethingother case 'root beer' beatlechuck end Second, you can use [`strcmp`](https://www.mathworks.com/help/matlab/ref/strcmp.html) (case-sensitive) or [`strcmpi`](https://www.mathworks.com/help/matlab/ref/strcmpi.html) (case-insensitive) to check for character equality: if strcmp(playerResponse, 'yes') dosomething elseif strcmp(strplayerResponse, 'no') dosomethingelse end if strcmpi(playerResponse, 'YeS') dosomething elseif strcmpi(strplayerResponse, 'nO') dosomethingelse end Third, You can use [strings](https://www.mathworks.com/help/matlab/matlab_prog/create-string-arrays.html) instead of character arrays for the target, but this only works in R2016b and later, and it works differently in R2017a than it does in R2016b. For R2016b: if playerResponse == string('yes') dosomething elseif strplayerResponse == string('no') dosomethingelse end Or for R2017a (or later, presumably): if playerResponse == "yes" dosomething elseif playerResponse == "no" dosomethingelse end First, note I am using `==` rather than `=`. `==` is the equality operator, `=` assigns a value to a variable. Second, note that `playerResponse` does *not* have to be a string, it can be a regular character vector (but if you make it a string it will probably make your life easier). Third, note that the R2016b version works in R2017a, but it is ugly and MATLAB will complain if you try to put it in a function or script. Also, if you want to do a case-insensitive version of the `switch` approach or either of the `string` approaches, you can wrap `playerResponse` in [`lower`](https://www.mathworks.com/help/matlab/ref/lower.html): switch lower(playerResponse) case 'gopher repellent' dosomething case 'rubber chicken' dosomethingelse case 'head of navigation' dosomethingother case 'root beer' beatlechuck end if lower(playerResponse) == string('yes') dosomething elseif lower(playerResponse) == string('no') dosomethingelse end if lower(playerResponse) == "yes" dosomething elseif lower(playerResponse) == "no" dosomethingelse end If you are going to do everything in a case-insensitive manner, it is probably better to convert `playerResponse` to `lower` as soon as the user enters it. This will save you time and avoid accidentally leaving it off somewhere.
Since you obviously want a numeric answer at the end, you should start with a numeric rotation matrix. MATLAB sucks at symbolic math, and should only be used when you want a symbolic answer. So, in your case, define a function which takes an input, `theta`, that returns a rotation matrix, `R`, and then multiple a vector by it. 
Rule #0 -- or rule #1 in MATLAB, I guess -- is "Don't compare floats for equality." Yet half of this thread consists of people doing just that. This mistake is so elementary that those who find themselves making it really *do* need to go all the way back to the model they're working from and make sure they understand it.
I know that, but I need their elements to be staggered when they combine, not in a row.
FYI, EQ with string is faster than strcmp. function profFunc txt = 'hello'; tic; for i = 1:1E7 x = strcmp(txt,'world'); end toc; tic; for i = 1:1E7 x = txt == "world"; end toc; end &gt;&gt; profFunc Elapsed time is 3.842784 seconds. Elapsed time is 1.856010 seconds.
Ah, I misread what you were asking. Sorry
The condition of your `while` loop is the same as the condition for your `if` statement. Because the `if` is inside the `while` loop, the `if` only ever gets executed when that condition is true. That means the `if` will take the first branch every time.
...you wouldn't happen to have a solution to my question though, would you? And no worries.
This doesn't do what I ask. I can already put both images on the same axes. However, if i change the colormap, both images are changed
You can use imrotate to rotate the matrix about its center point. To rotate about some point besides the center you can pad your image (maybe using padarray), rotate, then crop. 
You are an absolute gem &lt;3
You are an absolute gem &lt;3
I disagree, but can you describe exactly where the "mistake" is? As the commenter on the original post points out, with /fp:strict (on Windows), and appropriate restriction of floating point intermediate precision and rounding flags, *and* with an algorithm absent of any use of transcendental functions, comparison of results down to the ulp *is* justified. And even if we aren't talking about regression testing, "never compare floats for equality" is simply not true. The implication would then be that the expression `x &lt;= y` (when x and y are both doubles) is never useful, and should always be replaced with some "softer" comparison, which simply isn't true in all sorts of cases (time-synchronized distributed simulation, ballistic propagation, etc., just to name a couple of specific examples). 
 function eps = macheps k=1; while k&lt;100 if (1 + 2^(-k) &gt; 1) k=k+1; elseif (1 + 2^(-k) == 1) eps = 2^(-(k-1)); return end end It works! Thanks for the help, that solved it! 
&gt; That is, double-precision addition is not associative Would you help me to understand this please? I googled it and found [this forum post](https://stackoverflow.com/questions/12096852/precision-loss-with-double-c). It says "In a typical implementation, a double has about 15 digits of precision total. It doesn't matter much whether those are before or after the decimal point, it's just a total of 15 digits." Is that why you lose associativity?
Hello all, I need some help reproducing this type of high pass filter. Please excuse my ignorance on this subject, I am an ME and have always had difficulty understanding these filters. Basically the red line is the original data and the purple is a high pass filter that "Passes Frequencies above 5Hz". I am hoping someone can help create this in Matlab. I have been researching this issue and the closest thing I have found is; &gt;&gt; a = .5; xfilt = filter([1-a a-1],[1 a-1], x); where x is my raw data(a cell array). however I am not exactly sure where the a = .5 comes from. Any insight would be much appreciated!! 
but even when its not in a loop and im using linspace to vary the 'Me' variable. but that 'i' might be the issue for the loop possibly, ill try another letter! Edit: i get the loop working with all real numbers by changing that to another letter, but it refuses to plot now.. 
Is that purple line the time domain form of the filter? If so, I think you should get your result just using the conv() function, with one input being your time domain filter signal, and the other being the signal you want to filter. Not sure how deep your knowledge of DSP is, maybe simple convolution isn't an option here. Otherwise, have you looked at the built in filter types in the signal processing toolbox? I would just go down the list there and see if anything looks right. There are a number of different tradeoffs for different filter types, so it really depends on your application.
You are probably trying to avoid that but if it's a system of linear equations you could try to bring it into matrix form by hand and then Matlab can solve the Ax=b for you
I get an imaginary value for Me = 5 as well. Can you give some typical values for the given constants (Cstar, g0, gamma)? By the way gamma is a built in function, you might want to use an other name for that constant.
What i'de do is make a colormap that is the two other colormaps on top if eachother and manipulate the data (add a constant to one of the image' data) to be in the right part of the colormap. Another appraoch would be to use image' AlphaData property
So, I'm not going to give you a lecture on how filters work, because there are a lot of resources on the internet (even the matlab documentation) on how that works. Which, atleast in my country, is still a core course for mechanical engineers. Instead, the easiest and quickest way for you will be to use the filter function. filtered_data = filter(b, a, unfiltered_data); Will take in your unfiltered data and apply the required mathematical equations, which it constructs from your b and a variable. These are vectors containing the coefficients of the difference equations/transfer functions. So to get your coefficients, use one of the designer functions for this, where you can specify your filter types and frequencies etc. Take a look at butter() or fir1() etc. Just try some and see what happens. Keep in mind how you input your frequencies though, often you have to input your cut-off frequencies as fractions of your nyquist frequency. In your example of a = .5; xfilt = filter([1-a a-1],[1 a-1], x); They do the same thing I described, only they construct the filter themselves. I really recommend you try to learn this stuff at some point, because its a core engineering skill. But if this is only a one-off just do whats the quickest and dirtiest/easiest.
I would have guessed it was the other way around. Still, OP may not have that option depending on the MATLAB version.
thanks
Yes. The exact value represented by a double is effectively a *rational* number (i.e., a ratio of two integers), where the denominator must be a power of two. Consider the expression in the example in the post, (0.1+0.2)+0.3. The problem is that none of these three summands (1/10, 2/10, or 3/10) is able to be represented exactly with a denominator that is a power of two. So when you type 0.1, you don't really get *exactly* 0.1, you get exactly 3602879701896397 / 2^55 which in decimal is exactly 0.1000000000000000055511151231257827021181583404541015625. Similarly, 0.2 == 3602879701896397 / 2^54 0.3 == 5404319552844595 / 2^54 where the equality is in the sense of, "both the left- and right-hand sides have the same 64-bit double representation." If we add (0.1+0.2), *then round to the nearest 64-bit double representation of the sum*, then add 0.3, and round again, we get a different result than if we added 0.1 to the (rounded sum of 0.2 and 0.3). 
Thanks for the response, I am not sure what you mean by "time domain form of the filter". The red is the unfiltered data and the purple is the output after the filter is applied. If I am mistaken, let me know and I can continue to research your answer.
Thanks, I think this is the answer I needed! I'll give it a try using the designer functions. I got through my courses at school without really understanding and it's about time I go back and really pay attention to it!
cstar = 1440 gamma = 1.4 g0 = 32.2 i got everything working thanks to u/radecki, it was the use of 'i' in the for loop that was making it not work. that being said i didnt post a for loop and i havent been able to get what i posted to work.. buta for loop works now and all is well!
Have a look at the documentation for array slicing. You can slice into an array like this: A=rand(5,5) B=A(2,:) In your case you want to do the slicing on the assignment side, you should be able to figure that out yourself.
The `reshape` solution above is the most straightforward method
You might want to try doing your plot outside of the for loop. Also, what you're doing with the for loop is defining a new value of y each time it loops, not creating a y vector to plot. Instead, you can define your x and y vectors without the for loop or use a for loop and a counter as a vector index. Without the for loop It might look something like this: x=-10:1:10 y=(x.^2) +5*x+6 plot(x,y, '-k') The period before the carat in the second line is for doing vector algebra without having to use a for loop, very useful. Hope this helps! Edit: Reddit auto formatted the carat, but basically I typed x-period-carat-2 to square the x vector
That fixed it for me! Thank you!
Can we classify this as a case of [rubber ducking](https://en.wikipedia.org/wiki/Rubber_duck_debugging)?
**Rubber duck debugging** In software engineering, rubber duck debugging or rubber ducking is a method of debugging code. The name is a reference to a story in the book The Pragmatic Programmer in which a programmer would carry around a rubber duck and debug their code by forcing themselves to explain it, line-by-line, to the duck. Many other terms exist for this technique, often involving different inanimate objects. Many programmers have had the experience of explaining a programming problem to someone else, possibly even to someone who knows nothing about programming, and then hitting upon the solution in the process of explaining the problem. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.27
Would seeding the rng not have worked?
Good bot 
Thank you LordFckHelmchen for voting on WikiTextBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
Try subtracting the mean from your data, i.e. tempMatrix = xcorr(xData{i,1} - mean(xData{i,1})); Also you may need another loop as I believe xcorr only works for vectors and you said xData is a cell array where each element is a 201x49 matrix. 
2 questions: Would the purpose of an additional for loop be to create a new, separate matrix of 201x49 which is defined outside the cell array which would behave properly with the corr function? Also what would subtracting the mean do? It's my understanding that the corr function uses Pearson's correlation by default which takes the sum of the differences of each point with it's mean. Thanks for your response :)
You'll want to read up on denormals. See [this blog post](https://blogs.mathworks.com/cleve/2014/07/21/floating-point-denormals-insignificant-but-controversial-2/#c8c04c6a-78d0-462c-a5c0-3ac8320dae47) by Cleve Moler. 
The purpose of the additional loop wouldn't be to create a new, separate matrix but rather input a vector into corr function; i.e. for aa = 1:length(xData) for bb = 1:size(xData{aa},2) tmpCorr = corr(xData{aa}(:,bb)); Etc... end end As for subtracting the mean typically one only cares about looking at the auto correlation of the fluctuating component of a signal. What I believe you are referring to is that corr will normalize the correlation by the standard deviation squared of the signal, hence you should get values between -1 and 1. 
+ Thank you, this was very helpful!
More information is needed to set this up. It appears that 'y' is a range of values. You would need to set y to be a vector or values prior to writing out the equation. From there, it is just making sure you have parentheses in the right location. For square roots I typically just put the section to the 1/2 power and the command for ln is log. Let me know if you were looking for something different in a response. 
Whether y is a scalar or a vector, the following should work: K = (1.2./y).*(sqrt(16*y.^2 + 1) + 1./(4*y).*log(sqrt(16*y.^2 + 1) + 4*y)).^(-2/3); EDIT: Made spacing consistent.
Thank you! My bad for not clarifying that y was a vector 
No. It's a floating number precision error. This isn't a MATLAB thing, it's a programming thing. When dealing with floating point numbers, accuracy is never perfect because it's impossible to exactly express decimals as doubles. This is why if `a` and `b` are both doubles, you should never say `if a == b` instead you should say `if abs(a - b) &lt; eps` However, I'm guessing you actually want to know the rank of your matrix when doing this, in which case you should be using the `rank` command. 
That command says multiply `0` by every element in the vector which is created by `ones(1,N)`. So, you'll really get a vector of zeros (so, really should just use `zeros(1,N)`
sounds good, thank you. 
If you want a vector of ones that starts with a zero, use f=[0,ones(1,N)];
 f = [0, ones(1, N-1)]; Unless you want N+1 elements. 
Shit, good catch. Definitely right, thanks for seeing that
You want [jsondecode](https://www.mathworks.com/help/matlab/ref/jsondecode.html).
If you look at your last plot function you really use X1 as the x-coordinate and X2 as the y-coordinate. Consider that your coordinate sets for your solution is (X1, 0) and (X2, 0).
Keep in mind basic elementary math rules such as order of operations.. X1 = (-b) + (b .^2 - 4*a .*c)^(1/2) / 2*a; X2 = (-b) - (b .^2 - 4*a .*c)^(1/2) / 2*a; Won't do what you think it does. Also your last plot command plot(X1,X2,'-o'); Will only plot a single point. Because x1, and x2 are just single numbers.
How are we supposed to know what a "weighted graph of sorts" is?
&gt; I want to create a function in Matlab function to find the best possible path across the map Okay. &gt; If there is a tie for the path with the lowest cost, you may return any valid lowest cost path. Okay. What is your question?
I can think of two options: You can use three points and find their average line and then find the vector perpendicular to that line. Then plot that vector as perpendicular to the middle point. However this is also an approximation. Or you could use the parametric formula you used to compute the points for your plot. Then you can derive the formula of the normal vectors all along that curve and just plot them at the same points you plotted the original curve. Of course this only works if you have the parametric form of the curve.
What do you mean when you say you want "normal vectors?" &gt; I need to show vectors at the point, not between. "Normal" is a fancy word that basically means perpendicular. You're asking to make a vector that is perpendicular to a point. How long should these vectors be? Maybe what you're asking for is a vector that bisects the exterior angle between two lines? You should really try drawing what you want and then explaining what factors should drive what you drew. I don't think what you're saying means what you think it means. 
For future reference, we WONT do your homework here. IF you want help asking how things work, we will be more than willing to help. 
Can you elaborate on what you mean by a weighted graph? Try the surfplot command and use view(2). This may be what you are thinking of. 
 You can look into pathing algorithms like A* there are still some unanswered questions though. If there is a path that snakes around all at the same elevation, bit it's way longer of a path, would that still be you're ideal solution? Do you want to reach an answer that is provably close to optimal or one that absolutely is ideal? Etc If you can define be the problem more specifically, I'd be able to help more. 
 He can also use interpolation to create an equation even if all he has is an absurd number of points. I'm not site whay kind of interpolation I would use, but regardless it should give a parametric equation which can be used so ce it has a derivative. 
Probably close to optimal should be fine. Thanks again for the suggestion of A* but yes I would like some more help please.
What counts as a valid move? left to right with +/- 1 in the rows along the way? Can a move go vertically without moving horizontally?
You basically have a graph of nodes and vertices, and you want to find a shortest path - try this https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm
Helpful links, starting points: https://www.mathworks.com/matlabcentral/fileexchange/20025-dijkstra-s-minimum-cost-path-algorithm https://www.mathworks.com/matlabcentral/cody/problems/1049-path-of-least-resistance 
Sorry friend, I did not ask this for homework. But I wont post questions anymore. All I expected was someones experience, but if this is not the right place for things like that, I will remove this post if you would prefer that?
I did this recently, and just ended up implementing the fruchterman reingold algorithm. That seems like a rather steep course prep task, though.
Assuming you're using a recent version of MatLab, look at the documentation on the "graph" and "digraph" functions, and the associated functions for operations on graphs (including shortest path). I'm not sure if those functions can accommodate non-square matrices, but if not, you can always just pad it with extra zeros.
One way to do this would be to convert the map to a graph (where the nodes in the graph are the locations, and the edges are connections to adjacent locations), with edge weights being equal to the difference in the nodes' elevations. Then you can use MatLab's shortest path algorithms to find the optimal path between any two points. Take a look at the "graph" function documentation.
How would I begin such a function? 
Yes and a move can go vertically without moving horizontally. 
Once you know the normal vector, you can draw it wherever you want. 
np I gotchu fam
Use the patch command. Set an angle of 270 degrees plus/ minus the angle required to achieve your fill depth, then plot it. If you're animating, just be sure to save the plot handle and update it using set XData/YData.
To be clear, patch lets you fill the shape with an arbitrary color. 
I need to make an algorithm that is going to model this system. Numeric solution would be great, but I do not know how to translate this to numerical equation. Do you know some way to do it? Thanks a lot man :)
&gt; I've been trying to use less loops and I can't figure it out. Any advice? There is also permute, a way to transpose in 3D
http://lmgtfy.com/?q=matlab+read+excel
The problem here isn't that you're doing too many operations, but that you're subtracting things that are close in value. For example, if you have 7 digits of precision for your intermediate results, and the two terms being subtracted are the same up to the sixth digits, the result has only one digit of precision. This is sometimes called "catastrophic cancellation", or more generally "[loss of significance](https://en.wikiversity.org/wiki/Numerical_Analysis/Loss_of_Significance)". You'll need to re-arrange the formula so that you're not subtracting things that are close in value—which might in fact make the formula more complicated. One common trick is to both multiply and divide by some expression that (a) doesn't suffer catastrophic cancellation itself and (b) will simplify after the multiplication. If you have A - B, then A + B is often a good candidate. **Edit**: To clarify, you do the multiply, divide, and simplify algebraically (by hand), not numerically. The resulting formula can then be evaluated numerically.
Is he subtracting? Or is this supposed to have a -x in the exponent, as reddit has formatted it? Either way, you're correct in principle. The only reason it matters is because you talk specifically about subtraction, when it would actually be division in the alternative case. The concept is the same, but OP might get confused. Edit: after looking at the raw text of his post, without formatting, I think you're right it's meant to be subtraction. This is a classic example of the this issue in the case of subtraction. 
What you are looking for ist usually called the type of the variable. I don't have Matlab in front of me at the moment but there should be a function called typeof() or something like that. Just use the documentation, Matlab's is quite extensive. Im pretty sure the function you want to write already exists as a built in function but I'll assume this is for homework.
This is more of a math problem, but I'll give it a shot. Suggestions from senior members are always welcome. Firstly, you'll have to think of the properties of integers. Let's consider a real number n. It's obvious that if n is an integer, 1 divides it exactly. Secondly, think of what happens when n is rounded to the nearest integer, let's call that number m. If n is an integer, it's easy to conclude that m=n. Otherwise, m~=n. You can get the same result if you use the floor or the ceiling function actually, since the round function is a combination of both. One last piece of advice. NaN, inf and - inf are not integers. I'm not going to tell you how to write all of that in MATLAB though. That's your job. :)
This is covered in the documentation. I just checked and it works as expected. Just provide the sampling frequency to the function, like it says in the documentation. 
Are you trying to check the data type of the input? Or whether its value is an integer? If the former, check the documentation. There are functions for this. If the latter, think about the mathematical properties of an integer and how you would write a statement that is true only for integers. I'm not sure why you would use disp or sprintf for this. Those functions are for displaying text. 
It worked, thank you!
Hey, thank you! So I figured out the animation itself and the fill-line moving up and down the circle as time changes by using the line command with end points that are on the circle based on angle/height. What I can't figure out is how to use patch/fill to fill the space below the fill-line. It's not super vital because it gets the message across with just the fill line, but when I try to use the patch command like this: patch(fillline,tankoutline,'b') I get a "not enough input arguments" error. Fillline and tankoutline are the line and the circle, respectively.
The semicolon separates rows in an array/matrix, whereas commas separate columns in an array/matrix. A = [1; 2; 3] translates to a 3 by 1 matrix. Meanwhile, a = [1, 2, 3] translates to a 1 by 3 matrix.
It defines a vector which contains A vectorised with an extra value which is the last value of A again. The semi colon starts a new line in the vector. 
If your end goal is to sanitize inputs in case a real is inputted or something, you could check to make sure x - floor(x) is zero to working precision.
This is so simple to figure out that you'd really be better off experimenting in the console than asking others to explain it to you. The greatest strength of any interpreted language is that you can just type stuff in the console and see what happens. If you're not doing this in Matlab, you'll never be able to learn effectively. 
Thanks for the in depth response. I've been a little busy lately so I haven't been able to work on this script for a week or so. I tried using the "pull and save" idea with the guidata command as you've outlined and ran into the original error. I believe there isn't a logic error in terms of trying to access a deleted object etc. For now I may just pursue a different method of clearing the handles (ie not outright deleting them). Your input however is much appreciated!
Try something like: patch('Faces',1:max(size(fillline)), 'Vertices',fillline,'FaceColor','flat','FaceVertexCData',[0 0 0]); A couple notes: 1. `Faces` wants to know which vertices comprise a particular face. You can have a multi-faced (multifaceted) patch as one object. I use `1:max(size(fillline))` here because everything should be on one object, so the points in your face are just 1 to the number of points you have. 2. `Vertices` expects a set of vertices, where each **row** makes up the x/y (and z, optionally) point of a particular vertex. If you have your stuff setup where each column is a vertex, you'll need to transpose it. Remember to use the `.'`and not just a single quote. 3. You can do coloring with just `FaceColor`, I think, but I always use `'FaceColor', 'flat'` followed by `'FaceVertexCData'` to be whatever color I want. You can also use spiffy things like `'FaceAlpha'` followed by a value from 0-1, but that only seems to work for me if I use the FaceColor/flat pair. No idea why this is, and patch documentation is confusing as shit (at least to me). For what it's worth, as I went back and was re-reading some of my old code to find my own usage, I ran across some places where I had used `fill`, so FYI that's a command you could use, too. I think the difference there is that you can use `patch` for 2D or 3D plots, but you can only use `fill` for 2D stuff. `fill` looks to me to be an "easy mode" wrapper for the `patch` command (probably because their documentation is so crappy on patch). Fill looks like it is more akin to `plot`, but again you can only do 2D. Basically, if you're looking for something that works now as an assignment, maybe `fill` is better for you, but if you're going to be using Matlab long-term, I would highly recommend you bite the bullet and learn to use patch. It's really as easy as adding a third column to your `Vertices` to make a 3D patch (once you get over everything else lol).
this looks promising. thanks.
Looks like the help function is working as intended. 
Indeed. OP: Put the comment that you need to print in the first two commented lines. or, compare your code with that a of newly generated function. But the help function is working as intended. 
Instead of the X-FLOOR, just use MOD(x,1)==0 Checks for exactly the same (Does the division by 1 yield any remainder?)
Getting snippy/upset isn't going to help anything. &gt; But I won't post questions anymore. Okay fine. &gt; I will remove this post if you would prefer that? I don't care. &gt; All I expected was someone's experience Okay. You're trying to take the inverse Laplace transform; this will yield a *continuous time* solution. I think the trouble you're having is that you're trying to solve the entire equation at once. The alternative would be to build up your steps at each point in your process. So, for example, instead of having the PID section all as one Laplace domain equation, you could just stay in the time domain and do the steps - integrate, differentiate, etc. Keep that result, use it as the input to your plant. Keep the plant in time domain. The other easy alternative is to look at the [Z-transform](https://en.wikipedia.org/wiki/Z-transform#Relationship_to_Laplace_transform). I linked to the section in the Wikipedia entry that relates the z-transform to the Laplace transform. Basically, you wind up with equations in `z` instead of equations in `s`, but here powers of z represent shifted samples. So, for instance, `z` would be `x_(k)`, `z^(-1)` would be `x_(k-1)`, etc. Substitute the given expression in z for all of your s entries, then divide top/bottom of everything by the appropriate power of z such that you don't have any positive powers of z (which would imply `x_(k+1)`, or a *future sample*), and then you have a discrete version of your problem. All of the z_ values become x_(k-_) (shifted samples), and then it becomes pretty straightforward to implement in a software setting. **If you're looking for some other advice, you should really review your "question" with a critical eye.** Nobody here has been working on your problem. Your question boils down to, "I gave Matlab these inputs and got these outputs, please help!" Your question is literally about understanding the output, but **why did you use the Laplace/inverse Laplace transforms to begin with? What are you doing with programming that took you to the Laplace domain?** The seemingly unwarranted switch to Laplace domain is probably what's leading others to assume this is a homework problem. This was my first point above - If the (inverse) Laplace transform isn't doing it for you, don't use it. If this isn't college work, then you're free to solve the problem whatever way suits you. If this is college work, then, like /u/Test-Please_Ignore said, we're not doing your homework. 
Also, PS - If you want to **reply** to someone, then you should click the **reply button** under their post. If you don't use the reply button, then nobody gets notified that you're writing here. Adding responses here doesn't "bump" your post like it would on other sites. 
(/u/FrickinLazerBeams), That's odd, I'm pretty sure the MATLAB documentation shows that the help command displays the comments DIRECTLY underneath the function command.... Anyways, if i put with the code above, it prints all the other stuff like name and id. I don't need that. I'll try again a little later but when I put it directly above the function (not with the initial code block) it wont print. It only prints the student name and honor code and all that stuff.
Thanks man alot for trying to help. But first solution you gave me is not an option, because I tried it that way already, and Laplace transform does not let you do that. I do not know z transform that well so I could use it to solve the problem. When it comes to using Laplace transform, every system can be described with differential equations. When I model this system that way, there is nothing I can do with it, so I translate it to Laplace domain, so I could get some time domain results that I can calculate in my program. Does not matter. Thank you for advice :)
&gt; Every system can be described with differential equations Right &gt; When I model this system that way, there is nothing I can do with it What do you mean? This isn't a state feedback controller; it's just PID. The input to your PID section is the control error (reference minus feedback), and then you integrate/differentiate, apply the gains, and sum to get your control signal. The control signal is an input to your differential equations. Differential equations tell you how your system evolves. If everything is in the time domain, *and you're not trying to get a continuous solution*, then you just apply the inputs and current conditions to your differential equations, numerically integrate, and apply those results to your current conditions. The output then feeds back to the control error. Again, I'm not sure what it is that you're trying to do that you can't do. Unless you're trying to get continuous time solutions, which generally aren't actually required, then you can do everything just by plugging in the appropriate values at every point in your diagram. You know the initial conditions, you know the reference signal. Iterate iterate iterate.
It does print what's under "function". Are we being trolled? 
But it doesn't, that's what i don't get. edit: https://www.mathworks.com/help/matlab/matlab_prog/add-help-for-your-program.html this is what i want, but it only displays comments above my code, not below it, and the comments above my code are things like name, date, student honor code,etc - stuff that doesn't need to show up in the help command.
So i got but there's another issue. It only prints what's on top or bottom, with first preference to bottom. But then how do i keep the code block on top? I even tried blocking it "%{....%}" but it still doesn't work.
You'd have to set up models (in terms of differential equations) to describe the system. Technically you'd build the diff. eq. as a model in Simulink. The type of ball, diameter, density would be the coefficients of the diff. equation. The "how" it is pushed would be the pertubation of the diff. equation (which makes it inhomogenous) -- what ever method is best here (Euler-Lagrange Equation by using a Lagrangian, sum of forces, sum of torques, etc.. Either could be a dirac delta for a hard smack (ideally speaking I'd guess -- I'm just a computer engineer with a bit of knowledge in phyiscs and adjecant fields) an accelerating push would be a constant force over time (for a certain time), a gentle push would be something like a slowly growing force which a cap or something I'd assume. If you for example use the method of summing forces each force would be a seperate sub-module in simulink (one for gravity, friction, etc.). By that you could have modules for each "object" and part of the system you want to simulate. EDIT: I just understood that you want to build the GUI yourself. Sorry for my answer. But once you have done the models and have a working simulation where only coefficients and constant need to be changed in an UI you'd build the GUI using the Matlab Variables which can be used in Simulink by adding constants or using them in a gain block or elsewhere. So you have variables in the Matlab space, which can be used in the Simulink model, which can be used in the file which is you UI which can start the simulation and change the Matlab variables
This is a clever solution. With the function being isInteger(N) writing return = (N==round(N) &amp; N~=0) also gave me what i wanted. However i need to specify that N must not equal 0 both when using mod and round. I guess i could use the round function with division by 2 to check if the number is odd or even. If the division by 2 yields no remainder it should be an even number.
I will give you two hints: 1. `max(x, [], dim)` gives you the largest value along dimension `dim`. So if `dim` is `1` it gives you the largest value in each column. 2. `[val, ind] = max` gives you the maximum value `val` and the index of the maximum value `ind`. By combining these two for each dimension you can get what the question asks for.
This doesn't even make sense. What is the question? What have you tried so far? Where is your code? We won't do your homework for you. Check the documentation. 
I don't find a reason to do that TBH. Can't he just use "find" to solve the problem in one line? 
I don't know what you're talking about. That documentation is pretty clear that help text is only at the top of the function, immediately after the function name. It's doing exactly what it is supposed to do. 
This is unbelievably lazy. I'm not even going to bother telling you to read the documentation. 
You did not initialise, neither change the value of the variable i. Also, since you set ry(1)=0, the while loop would never run. I recommend using a for loop here.
I just copied and pasted your code and it did replace 4 zeros with 4 ones. Keep in mind that if the random number gets repeated you will see a number of ones less than N since that position was already a one. This was the output: board = 0 1 1 0 1 0 0 0 0 0 1 0 0 0 0 0
Oh...in that case, why won't mine show an output? It only shows the file name
Just type board in the command line after run, or write it to the end of your script (without semicolon).
stick a i=1; before starting the while loop and a i=i+1; right before the end of the while loop. You will also have to change the while condition to make your loop run. If ry(1)=0 and your code will run while ry(1)&gt;0 then your while loop will never get executed. Also as a side note: try to check your code again, I ran it with those changes and ry seems to be monotonically increasing, meaning that it will always be &gt;0 and your code will not stop. I say this after 175584 iterations
ooohhh wow okay. Thanks!
It basically does what you want, but note, that in some cases randi() will generate the same number twice, thus there will be less zeros replaced than N.
I'm noticing that now, it's not staying constant. Is there a better way to do this to keep it consistent?
You could generate a random permutation of the numbers, and take the first N number from it. Something like this: N = 4; board = zeros(N); rp = randperm(N*N); board(rp(1:N)) = 1 
U make it seem like it's clear cut. I have typed in every function and can't get it to work
so your x is a vector. That's why you need the periods to specify element wise operations. I guess you could do a search and replace for the * and / and ^ in the input with .* and ./ and .^
Exactly. Why do treat 0 as a special case?
The sidebar has some links
Dude, you seem to have picked up the habit of just copy pasting your assignment from you posts in "cheatatmathhomework". This isn't a sub that just does your homework for you. It will however help to guide you in the right direction and help figure it out. Just explain in your own words what the problem is and what you have tried so far. And no, " I tried every function" is not going to cut it. You must have thought of some approach when you tried out functions. Tell us what you tried and what happened. The task you are supposed to do is fairly easy, you just need to combine one or two concepts. If I told you to find out what value the maximum value within a vector was, would you be able to find it? What about the same for a matrix?
1. This is **extremely** clear cut. 2. I really doubt that you actually "typed in every function". 3. If you actually did try to solve this yourself, tell us what you did, why you thought it would work, and how it failed. 4. Instead of "typing in every function" how about you search the documentation for pages related to what you are trying to do? Perhaps you could search for the term "maximum"? 5. We *still* won't do your homework for you. 
Say you have a matrix M = [1, 2; ... 3, 4]; You can do one of two things. You can do **matrix** operations, like: M^2 = M*M Or you can do **element-wise** operations, like: M.^2 = [1^2, 2^2; ... 3^2, 4^2]; For reference, the first case, `M^2`, is *matrix math* that works out to be: M^2 = [(1*1 + 2*3) , (1*2 + 2*4); ... (3*1 + 4*3) , (3*2 + 4*4)]; Those are clearly *not the same*. The period indicates *element-wise* operations, *just like the error message says.*
Min Max Scatter Done
yes I know that is how you get the maximum and minimum value but how do you plot a red circle around it and a black square around the other one?
Use scatter, you can set the color and shape of the point. The simplist way I can see is scatter all of your points. Then hold on. Find min, scatter that black square, find max scatter that red circle. 
Look at the documentation for scatter: https://www.mathworks.com/help/matlab/ref/scatter.html You can set options for the shape and color of the markers.
Plot the data, call 'hold on' so that subsequent plots will appear in the same graphic, then plot the individual points while changing their [marker style](https://www.mathworks.com/examples/matlab/mw/graphics-ex66812662-specify-line-style-color-and-markers), call 'hold off'. This can be accomplished in a single line, by treating them as different data sets, but plotting one after another is ok to start with.
You typically pre-allocate arrays with the right size and then assign in the for loop the value to the right indices. example: iivalues = 1:5; jjvalues = 6:10; x = zeros(length(iivalues), length(jjvalues)); for ii = 1:length(iivalues) for jj = 1:length(jjvalues) x(ii,jj) = 2*iivalues(ii) - 3*jjvalues(jj); end end
Thanks for all the help 
&amp;&amp; instead of &amp; 
You have two assignment operators in your statement. Instead of filteredHeight = flatHeight(flatHeight &gt; 50 &amp; flatHeight &lt;20) = 0 Try filteredHeight = flatHeight filteredHeight(filteredHeight &gt; 50 &amp; filteredHeight &lt;20) = 0 
When doing that it just displays the flatHeight matrix which i originally defined.
Because your internal logic statement is never true. Currently you're saying that whenever filteredHeight is greater than 50 AND filteredHeight is smaller than 20, then set it 0. Nothing can be simultaneously greater than 50 and smaller than 20. Did you mean greater than 20 and smaller than 50?
I want both the numbers which are less than 20 and the numbers which are greater than 50 to be set to 0. Said differently: i want numbers between 20 and 50 to stay as they are, and all other numbers set to 0.
Then you want the OR operator, i.e. you want numbers greater than 50 OR smaller than 20 to be set to 0. [Matlab's OR operator is |](https://www.mathworks.com/help/matlab/ref/or.html).
I switched out &amp; with |, but the result is still the same, it just prints out the flatHeight matrix the way i defined it originally.
MATLAB can be pretty slow at reading .CSV files, which you do in the initialisation of the GUI. How long does it take to read those files outside the GUI? What if you read the files, and save the resulting arrays as .mat files? Those are a compressed binary format which will be quicker to read.
You're going to have to post what exactly it is that you have. Also, try to understand what the code is doing and what might be going wrong/why you're not getting the output that you want. A useful thing is so-called rubber duck debugging - explaining to yourself (or a rubber duck) in plain language what the code is doing.
https://pastebin.com/YXz9yKqM I think whats going wrong is that when i try to replace the numbers which are not in the interval i want with 0, this doesen't actually change the value of the variable linked to the matrix. By the way, the comment i put in the script is just an error that i got earlier.
No. You cannot short circuit logical operators in a logical indexing statement in MATLAB. Also, he doesn't want &amp; at all 
Don't read the CSV files every time you run the GUI. Process the CSV files into a format that Matlab can read more quickly, such as a pre-formatted .mat file with the data read to go.
&gt; flatHeight(flatHeight &gt;= 20 | flatHeight &lt;= 50) = 0; You're changing flatHeight, not filteredHeight. It's worth spending some time thinking about your code before asking for help. This is a pretty obvious error, even for beginners.
So I should save the .csv to .mat and replace them for line 45 to line 57 Is it possible to put them as work space variables in the GUI or not?
Yup that was the problem. I'll keep it mind next time. Thank you for all your patience and help.
I felt like it was a good idea ☺️
I have put them in the .mat form and no difference with speed
IS there away of loading them, so that the GUI doesnt need to re-read them with every iteration?
Yes, one way is to put all the data in e.g a struct in the init and set that struct as the UserData property of the gui.
hmmm having no luck will keep trying Thank you any way x
Use the profiler to see what parts of your code are taking the most time
You are missing year in your calculation of compounded interest. Let's make year a vector [0:100]; As a guess we will stop after 100 years of life. and lets call your recurring deposit initBalance. initBalance = 5000.*year+5000; balance = initBalance.*(1+rate).^year; We have the accrued balance for 100 years. Now let's find the big bucks. bigBucks = find(balance &gt; 1000000, 1); happyYear = year(bigBucks);
Haven't run your code (always reluctant to download stuff from the internet), but if I had to guess, I'd say that it looks like you're screwing up with indexing. For example, you have x2=csvread('215_Back_x_co.csv'); When I look at that csv, it's a column vector. Okay, no problem. BUT, when you go to plot it, you also call `Ztop(:,:,1)`. That says to me that you've got a 1D (column vector) of `x2` values but probably a 2D **matrix** of `Ztop` values. This could wind up with Matlab trying to interpret you to mean that you want a plot of every x2 and y2 value for each column in Ztop. I would suggest you check the sizes of x2, y2, and Ztop(:,:,1). I would expect to find the problem there.
Ahh yes the Ztop(:,:,1),this was used as the colour indexing, wasn't needed. However Ztop , is selected for a given frequency in Ztop is a single column vectors The Ztop x2 y2 are all equal sized single dimension column vectors, and they are used in scatter plot, where x2,y2 are co-ordinates and Ztop is colour I dont think this is the problem.. And making the Ztop run along its normal matrix hasnt sped things up un-fortunately Thank you though 
Question: What do the columns represent? Different Variables? Give randsample a go for randomly sampling your matrix. testReal = randsample(measFeats(1:100,:), 0.1.*numel(measFeats(1:100,:))); % Samples 10% of measFeats(1:100) without replacement testFake = randsample(measFeats(101:200,:), 0.1.*numel(measFeats(101:200,:))); % Samples 10% of measFeats(201:200) without replacement 
Answer: Yes! Sorry. The columns are different variables tested in the data set. Question: What is the use of numel? I'm seeing it all over the place and the documentation is going over my head. Edit: Also, it's saying (for randsample) that the population has to be a vector. Isn't a 200x6 matrix, by default, made up of vectors? 
numel is the number of elements within the matrix (m.*n). Since the columns are random variable you may treat this problem slightly differently, by randomly sampling %10 of each column. for ii = size(measFeats,2) testReal(:,ii) = randsample(measFeats(1:100,ii), 0.1.*numel(measFeats(1:100,ii))); testFake(:,ii) = randsample(measFeats(101:200,ii), 0.1.*numel(measFeats(101:200,ii))); end In this instance numel(measFeats(1:100,ii)) is equivalent to length(measFeats(1:100,:)) is equivalent to size(measFeats(1:100,:),1) This method will respect each variable, as to not introduce bias into your sampling.
Np. I'd try wrapping sections of code in tic/toc statements to see what section of your code is taking a long time. Something like: disp('Section 1'); tic; &lt;section 1&gt; fprintf('%.2 ms elapsed for Section 1.\n', toc*1000);
This would be an easy solution if all the compositions of all the streams were known or all the flows were specified. However, both compositions and flows are unknown. Also resolved to this message Warning: Trust-region-dogleg algorithm of FSOLVE cannot handle non-square systems; using Levenberg-Marquardt algorithm instead. &gt; In fsolve (line 298) In Assignment2 (line 495) 
Don't guess - profile. To analyze a GUI, type 'profile viewer' which will open the profiler window. Then press 'Start' without entering any text in the command box. This will cause the profiler to just analyze everything that runs. Then type 'Reddit_GUI' in the command window, use the slider a bit etc. and then stop the profiler. So you can see that most of the time is spent in `dlmread()` so moving away from CSV files should make a huge difference. Similarly, if you want to know why the slider is so slow, you just look at the analysis for SliderVal_Callback. This says that even though you might start the GUI using 'Reddit_GUI.m' when you move the slider, it is 'COMNEONE&gt;SliderVal_Callback' that gets run. If you look in COMNEONE.m then you can see that SliderVal_Callback() actually loads all the files again every time you move the slider! So it's just the same issue again. I don't know why you said somewhere else that changing to .mat files didn't make a difference, it makes a huge difference... x = csvread('215_Front_Velocity.csv'); save test x &gt;&gt; tic;csvread('215_Front_Velocity.csv');toc; Elapsed time is 3.224071 seconds. &gt;&gt; tic;load('test');toc; Elapsed time is 0.331991 seconds. The best way to approach this problem IMO would be to store the loaded files in the GUI itself. Just load them in externally, pass them to your function as an argument e.g. H(1) = csvread('215_Front_Velocity.csv'); H(2) = csvread('215_Back_x_co.csv'); Reddit_GUI(H) which will see them arrive in `COMNEONE_OpeningFcn` in varargin. Then add it to the handles struct before it gets saved by `guidata()` e.g. handles.H = varargin{1} and then your slider callback can access them through handles
Your division in y should be element wise, so ./ What you are actually doing is solving the equation ay = b, where a = (x+5).\^2 and b = (4+3*x.\^2) for y, in the least-squares sense. Since a and b are of the same size, y will be a 1x1 matrix (aka a single value). If you're ever getting weird plotting stuff like too many or not enough lines, always check the dimensions of the arguments to the plot command. Also remember that it plots columns as series so if you have a matrix of row vectors for multiple lines you need to transpose to get it to plot correctly (e.g. If you have 3 functions of x and x is 20 points, you need to give a 20x3 matrix for x and y to plot, not 3x20)
Oh perfect, got it! One last question: How do I then remove the items in the test lists from the real lists? I'm trying to use a trick that my friend gave me, which would look like this: trainingReal(find(ismember((trainingReal, testReal))) = []; But it's telling me that I can't subscript a table using linear indexing. Is this just a matter of going row-by-row? 
Fairly safe bet that I would be running the current version of matlab, don't you think? I also didn't ask how my question could be best opitimised in order to pander to pedantic twats. JEEZ!
Is your variable trainingReal a table rather than a double? I am going to assume trainingReal is the 90% of the data. ismember is the right approach, but I would avoid it in case testReal appears within measFeats multiple times. This would remove data which are intended to remain during your cross-validation. An alternative approach is to randomly sample indexes rather than actual data points. Let's Make an Array of indicies: IX = [1:200]; IX = IX(:); IX = repmat(IX,1,size(measFeats,2)); Now we randomly sample Indicies, store them, then grab data. for ii = size(measFeats,2) testRealIX(:,ii) = randsample(IX(1:100,ii), 0.1.*numel(IX(1:100,ii))); testReal(:,ii) = measFeats(testRealIX(:,ii)); testFakeIX(:,ii) = randsample(IX(101:200,ii), 0.1.*numel(IX(101:200,ii))); testFake(:,ii) = measFeats(testFakeIX(:,ii)); trainingRealIX(:,ii) = measFeats(find(~ismember(testRealIX(:,ii),IX(:,ii)))); trainingFakeIX(:,ii) = measFeats(find(~ismember(testFakeIX(:,ii),IX(:,ii)))); end This approach is a bit loopy, and I'm sure you can refine it. I think this answers your question. Where the result is a matrix containing a random 10% of the measurements and the training set which contains the other 90%. 
You could store each tried configuration from within the loop. Instead, it much more efficient to approach the problem from a different direction. You basically want to insert a '1' in each row at a random column. Something like the below: n=8; B=zeros(n); P=randperm(n); for i=1:n; B(i,P(i))=1; end disp(B)
I don't recommend trying to compare your current iteration of board against the previous iterations, because that would probably require saving off all of the previous boards, which would either need to be saved to a buffer or you would continuously change the size of the array storing each board, which would also slow down your run time. Then to see if the current board has been used before, you would essentially have to loop through this buffer to see if your current board was equal to any of the previous boards. This would all take a super long time to run, and wouldn't really help improve your results. Alternatively, I whipped up this little algorithm that I believe does what you're looking for that took on average 2e-4 seconds to run. Hopefully the comments explain how it works (hopefully my variable names don't anger anyone). N = 8; avail_inds = 1:N; % Create a vector of the possible row indices board = zeros(N); % Initialize the board to 0 for i = 1:N % Loop through every column rand_num = randi([1 length(avail_inds)]); % Pick out a % random integer that's between 1 and % the number of possible indices still remaining rand_ind = avail_inds(rand_num); % Choose an available row index % using the generated random number avail_inds(rand_num) = []; % Remove the row index from the % vector of available row indices board(rand_ind,i) = 1; % Set the chosen row of column i equal % to one end
This is a lot better than what I did :/ Just call me Inefficient McGee
Thanks!
Nevermind figured it out, Thanks!
somewhere you use the syntax of subscript indices, like you do here: T_w(i) but what uis between the brackets is not an integer bigger or equal to 1. looking at your code, you probably forgot another operator. You'll have to look for something thas has the same structure as the snippet above, (variable and then something in brackets) that you either do not intend to be a indexing operation (probably your case) or, where the index used (the thing inside the brackets) is not a good value (e.g. 0, 1+2i, 0.34)
Yea that's what I thought too after googling the error. I rechecked it a few times now but I can't seem to find it. I performed the first run (i=1) manually and that turns up the same error: https://pastebin.com/H6fB049f Now I manually fetched the indexes in the command window by typing T_w(1), G(1) and T_e(1), they show the required values just fine... In other words I have no clue whats wrong. Could it be something with the equation itself?
Hi great feedback, #how do I load them externally? Its very confusing 
Did you solve the problem? 
Within the loop you are missing a multiplication symbol. You have something like cp_w(...) when it should be cp_w*(...) Currently Matlab is interpreting the stuff in the parentheses as index for the cw variable
its this bit: cp_w(sigma*T_w(1)^4*eps_lent*A+G(1)*eps_lent*A+hc_w*A*abs(T_w(1)-T_e(1)))
Thank you, this gave me a list of steps to start learning and I'm working my way through them. Now to figure out a way to model a utility system transmission grid... *sigh*. BTW, I'll be using [this](https://blogs.mathworks.com/pick/2012/06/01/use-matlab-guis-with-simulink-models/), method #3. I started picking apart the code yesterday and think I can get it to work. First I'll build an oversimplified model of the system I need to work on, then I'll figure out how to build a GUI to change variables. Thanks!
Aah yes that was it! Many thanks :)
Just like in my example, load them in command window and then pass them to your program as arguments
 &gt;&gt; myVar = 'This is a string.'; &gt;&gt; for i = 1:length(myVar) disp(myVar(i)); end T h i s i s a s t r i n g .
Not sure what the problem you were having was. For future reference, posting a generic "I can't get it to work" is next to useless as far as helping you troubleshoot a problem. You can't get it to work as in you get an error message, or you get an unexpected result? *What* is the error message, or *what is the result you were getting and what were you expecting?* The code works fine for me as you have provided it. For the record, A,B,C,D are **not** column vectors. They are row vectors, because each element is in a row. If you want a column vector, you should *either* separate each entry by a semicolon (to start a new row) or take the transpose of the row vector. Remember that the transpose operator in Matlab is `.'`. A single apostrophe (without the period) is the *conjugate transpose* operator. 
Thanks man! Realized my issue was using the double quotes " instead of the single!
I guess, technically, the double quotes makes it a proper string. Single quotes makes it a character array. I've been using Matlab for about 10 years now and I've never had a chance where I wanted to use a proper string, though. A character array is... an array. You can index it like any other array. Again, I've never had use for proper strings, but at a glance it looks like the "string" functions I've always used with character arrays also works with strings. For example: &gt;&gt;myVar = 'This is a string'; &gt;&gt;strfind(myVar, 'is') ans = 3 6 or &gt;&gt;myVar = "This is a proper string."; &gt;&gt;strfind(myVar, 'is') ans = 3 6 So, either way, it seems you get access to all the string functions, but you can also index with a character array. I don't know if Matlab has strings (double quoted) for legacy support or something else, but again I've never had chance to use them. I'd suggest using single-quoted "strings" (character arrays) for everything.
I have been trying to get something similar working for a while now (I even asked here on this sub https://www.reddit.com/r/matlab/comments/5vy1sb/help_solving_matrix_equation_system/ ) I will try to use /u/radecki 's solution, it seems something that can help me. Maybe I used incorrect terms when I asked? I have been learning Matlab on my own, which doesn't help a lot either. But this gave me a lot of insight, thanks!
Or calculate it analytically? year = ceil(log(1000000 / balance)/log(1 + rate)); disp(year);
Heya, so I'm not aware of a comprehensive list, but personally I'd try some of the following: * Purely concave/convex functions e.g. x^2 , x^4, sqrt(-(1-x)^2 + 1) [from 0 to 2], (x-1)/ln(x) [from 0 to 1] * Discontinuous functions, e.g. sawtooth, step * Functions with higher derivative discontinuities e.g.bump functions / transition functions etc * Functions with singularities e.g. ln(x) [from 0 to 1], ln(x*(2-x)) [from 0 to 2] * Functions which have known malicious behaviors e.g. Runge function, Weierstrass function, Cauchy distribution (and other heavy tailed distributions)
Oh and various probability distributions too. Easy to look-up, there are lots of them and you can choose the ones that fit your criteria e.g. finite/semi-/infinite support, with/without singularities, etc.
Right, makes perfect sense. Thank you :)
yeah well can you help me with that ? I looked though many videos and forum but didn't find anything 
To really define a vector in MATLAB, it takes 3 numbers: starting number, ending number and step. So, if you want to make [1,2,3] you should type `1:1:3` (start at one, step by 1, end at 3). Of course, you've found you can actually just do `1:3`that's because if you only use two numbers, MATLAB assumes your step is "1". But when you want `[3,2,1]` your step isn't "1", it's -1. MATLAB doesn't assume that, so if you put `3:1` it says "well, my starting number is already past my ending number, so no steps necessary." If you want `[3,2,1]` you need to define your step (-1 in this case). 
Do you have to do it on matlab? Many audio editing programs out there
Yes I have to do it through Matlab it's a school assignment 
Thanks a lot for this explanation. 
The string datatype shipped in 16b and double quotes were enabled in 17a. When you use char to represent your characters you have to use a cell array to handle multiple pieces of text. String is meant to replace the usage of cell arrays of character vectors but can also be used in place of char. String is typically faster (sometimes by a lot) and uses less memory than cell arrays of character vectors. String works in all the old text functions like strfind and MATLAB is adding more support for string with each release. If you are trying to do character manipulations there may be a new function that does exactly what you want (extractBefore, insertBefore, join, replace, etc.). If you really want to get at the characters of a string, use curly brace indexing and then index into the characters. &gt;&gt; str = "Hello World"; &gt;&gt; str{1}(7) ans = 'W'
Neat, thanks :)
I will certainly add these to my own list. Do you think this would be something useful to put in a repo so others can use it?
Erm, possibly actually yeah! When I'm testing I tend to just come up with as malicious functions as I can on the fly, or at least ones which are likely to reveal problems with whatever algorithm I'm testing. But it might be nice to have a reference list to check yeah! Out of interest what sort of functions did you have in mind already?
Not many. My professor recommended we start with humps(), sign(), and abs(), so that's about where I was before you replied.
Ah right! Well they're pretty much along the same lines, perhaps a tad less malicious! I take it you're only implementing over a finite domain then? If so not all of my suggestions will work, at least not without a change of variable, example below. Although tbh that will kinda defeat the purpose of a lot of the integrals e.g. heavy tails etc. % integration by substitution, [-inf inf] to [-1 1] x = t/(1-t)^2; Jacobian = (1+t^2)/(1-t^2)^2; Good luck with your project!
The first thing came to my mind is Fourier Transform. Convert the sound wave to frequency and zero the low frequency and convert it back. 
What's specifically wrong with it - it looks fine to me *except* you need to check the other diagonal as well (e.g. by transposing the board and repeating the check)
I guess that's what's wrong then? My output just isn't putting only one '1' in each diagonal. So how would I go about doing that...would I HAVE to transpose the board? Or could I just add a fourth condition?
Just add a fourth condition and do spdiags(board’) instead of spdiags(board)
I added ||any(sum(spdiags(board'))&gt;1) but it didn't affect the output
Ah my mistake, try it with `rot90(board)` instead of `board'`? 
It's absolutely beautiful to see the correct output. Thank you so much!
No worries!
Not sure I understand the question, but what's wrong with disp([A,B,C,D,L])?
Once you read the audio data in, you'll have a vector or matrix containing the samples. This will be a single column for mono, or an nx2 matrix if it's stereo. (If it's some less common multi-channel format, I guess you might have more columns.) I'll assume it's mono, and your audio data is in a vector called "y". You could, as you say, use a loop, as in for k=2:2:length(y) y(k)=0; end but it's actually more efficient to "vectorise" this, as in y(2:2:end) = 0; Either way, you can now either listen to it (with something like sound or soundsc iirc), or write it (using audiowrite). Incidentally, this is going to sound awful. The high-frequency noise created by darting back down to zero every second sample is going to drown out the original signal. If you have to listen to this, I'd recommend that you turn your volume down very low first.
Thank you, from your help I was able to solve the entire problem. Also, Happy Cake day.
I think you want some transposes in there, since A\B\C etc are row vectors. 
The auxiliary question is: why the hell is an array (matrix) of objects considered itself as an object of the class of its elements...?
[A;B;C;D;L]'
In matlab, [everything is a matrix](https://nl.mathworks.com/help/matlab/matrices-and-arrays.html). Even a scalar is a 1x1 matrix (of double(s)). see for instance size(1) Knowing this, it makes sense that a user defined object is always matrix of said objects, and if you have 1, you just have a 1x1 matrix.
Have you read [the doc on operator overloading](https://nl.mathworks.com/help/matlab/matlab_oop/implementing-operators-for-your-class.html) ? it probably has your answers
Yes I have, and I cannot seem to find the answer there. I don't need *times*, because I don't need to multiply matrices element-wise. In fact, I shouldn't need *mtimes*, because I do not want to redefine matrix multiplication logic. But it seems there is no way to do what I want in MATLAB. What seem to have to do is overload *mtimes*, unnecessarily reimplement the calculation of elements of the resultant matrix, replacing the + and * operations with my own logic. And I'll have to do the same for *times* if it turns out I need it, which is even more redundant. Or I can extract the + and * into methods, which are called from *times* and *mtimes*, in which case they will be nothing but what they originally were, except + and * are some different operation... How come this doesn't come out of the box? (edit: performance?) It just seems strange that there wouldn't be a way to overload the operation used between elements (which are the instances of the class that has the operator overloaded, not the matrix as a whole; in my mind at least - apparently not quite so in matlab) without having to change (or reimplement!!) the logic of selecting the elements on which the operations are performed.
Fair enough. But then isn't there a "missing" operator (that is hidden, as it is only used internally by the matrix operators) to be overloaded, something like *eltimes*, which changes the operation performed on individual elements by *times* *mtimes* or whatever? What I mean by "missing" is wouldn't it be logical to expect something like that? EDIT: I guess such a feature would impact regular performance of matrix operations severely as well, and is probably the main reason for the lack of it?
Well, what you wanna do is quite specific. You neither want to do element wise multiplication, nor matrix multiplication. You want to do an operation that is similair to matrix multiplication, but follows slightly different rules. I don't think its illogical that you need to define that yourself explicitly. Overloading a specific part of some operator isn't exactly overloading in any definition, right? Matlab uses specilised and optimised code for basic stuff like matrix multiplication (see for instance " edit mtimes" (hint: there's nothing there)), so it might not work in the naive way you seemed to be assuming before your insight in your other coment: &gt; EDIT: I guess such a feature would impact regular performance of matrix operations severely as well, and is probably the main reason for the lack of it? I think you hit the nail on the head there. mtimes is defined and highly optimesed for build in classes, and extending that to user defined classes is not straight forward nor always possible. I think the error in logic is that you concider(ed?) mtimes as some function that calls subfunctions based on the class inputting. A more better view would be to see it as 1 thing you can use or overwrite or not use, but not to change a bit. 
I found out scatter(x(1:end,1),x(1:end,2))
I think you're going to need to be more specific. What is the class you're using? How are you checking which constructor gets called? As far as I know, the only way you should be able to get mixed types in a matrix is to use a cell array. Can you please give a *concrete, reproducible example?*
&gt; Well, what you wanna do is quite specific. You neither want to do element wise multiplication, nor matrix multiplication. You want to do an operation that is similair to matrix multiplication, but follows slightly different rules. I want to do matrix multiplication, where the multiplication itself is defined by the type of the elements. If not for performance considerations, it would seem logical to have this kind of control. Just wanted to make sure I'm not missing some obscure feature.
I am using a user-defined class, dval, to perform automatic differentiation (in place of symbolic differentiation, to determine jacobian of nonlinear system). I don't have the exact code with myself right now. The matrix has elements that return dval, they are expressions describing the system. There are also elements that are constant (double). Matlab conveniently converts them to dval automatically (provided the constructor handles a single argument). However, when there are multiple consecutive doubles in a row, they get passed as a single argument to the constructor. The constructor goes something like this: function obj = dval(v,d) obj.value=v; if nargin==1 obj.derivative=0; else obj.derivative=d; end end
What he's trying to do is uncommon in Matlab, but is actually a standard feature of most modern programming languages. It's not totally insane to expect it here. There are good reasons why it might not exist in Matlab though. 
Since then, I'm starting to realise (due to other issues as well) that I should consider user-defined classes more as matrices themselves. So this constructor would work alright without having to explicitly instantiate multiple instances, and not even cause concatenation issues, if instead of obj.derivative = 0; I had obj.derivative = v*0; (or zeros(size(v)))), right? Is this the correct, "matlabian" approach?
~~I may have found something:~~ (background info: this is for automatic differentiation; class is called dval) function h = mtimes(a,b) h = dval(builtin('mtimes', a.value, b.value), builtin('mtimes', a.value, b.derivatives) + builtin('mtimes' a.derivatives,b.value)); end ~~Does this look correct? I'll try when I get back to Matlab.~~ Thinking about it, this was supposed to work without builtin, and simply using *, because value and derivatives are not of type dval. So what was causing the problem? Well, my assumption was, if everything is a matrix, including the object itself, I thought logically if you have an n x m matrix of objects of a class with properties a and b, then calling MATRIX.a would return an n x m matrix of the a properties. Tested it with octave-online (with a struct, not a class), but turns out this is wrong, and it returns a list of the values, which at most you can concat into a single vector... (which I guess I can go and break up into rows, ugly ugly ugly)? What the heck, matlab, why can you make no sense?
Meh. That actually makes perfect sense in the context of Matlab. I understand what you're trying to do, but if you expect Matlab to be Java you're going to have a bad time. 
Is there at least a way to do this latter? To get a matrix of properties from a matrix of objects? reshape([a.value],size(a)) Is this an ugly workaround? edit: according to some googling, reshape is virtually free performance-wise
I don't think there's a correct approach per se (this isn't Python; there are no equivalents to PEP 8, etc.). That said, if you're looking to retain flexibility, I would probably opt for the `obj.derivative = v*0;` instance, as that should have `obj.derivative` *inherit* whichever type `v` is. If you use `zeros(size(v))`, then the derivative is always of the type that `zeros` returns (double). So, your `v` could be `sym`, or `uint32`, or anything else, and if you use `obj.derivative = v*0`, then you retain that type. Passing in a matrix as your sample is written now may cause issues, though, because you're treating `obj.value` as `v`. That is, instead of a matrix of entries where each entry is of type `dval`, the *entire matrix* is the `dval` type, and its members are still doubles (or whatever the original type is). For example, if you wanted a matrix of `dval` entries, but you passed the whole matrix to the `dval` constructor, then I don't know that you could access the derivative of a particular entry *from that element*. For example, inputVar = rand(4,4); dvalObj = dval(inputVar); outputVar = dvalObj(1,3); outputVar.derivative I think you would get an error, because `dvalObj` doesn't assign a `.derivative` value to its members; it only assigns a `.derivative` value to the `dvalObj` itself. You might be able to get by with something like: function obj = dval(v,d) obj = repmat(struct('value',v(1)), size(v)); if nargin ~= 1 d = v*0; end for currentVal = 1:numel(v) obj(currentVal).value = v(currentVal); obj(currentVal).derivative = d(currentVal); end end This would setup `obj` as an array of structures, where `obj` has the same size as `v`, and each *element* of `obj` has a `.value` field and a `.derivative` field. Then you could do the snippet above: inputVar = rand(4,4); dvalObj = dval(inputVar); outputVar = dvalObj(1,3); outputVar.derivative That *should* work with no error now. 
I'd be stunned if anyone started using Matlab outside of college. Knowledge comes with classes, but experience comes with trying to use that knowledge (projects). The most challenging thing, for me at least, was learning the basics. I remember element-wise versus matrix operations and getting the damn plot functions to do what I wanted seemed needlessly complicated. Mistakes I make now are violations of coding best practices and nothing really to do with Matlab any more. Once you get the fundamentals down, everything else is pretty straightforward. The worst thing I do any more is using hard-coded constants ("magic numbers") somewhere in my code. Then I change 9/10 of those constants, fail to change the last one, and scratch my head for a week wondering what's going wrong. I'm in the habit now of having a "constants" section (use a `%%` to make a code section) where the hard-coded values go. Everywhere else in the code uses variable names. The best recommendation I could give is to try to *vectorize* your code from the start. Practice it when your code is small, when your results are easily verifiable, and then it will be second nature by the time you get to the point that the performance gains matter. `for` loops have a place, but I would argue that it's better to *practice* not using them, wherever possible. If you have variables called `x1`, `x2`, etc., you could probably get by with `x(:,1) = x1;` and `x(:,2) = x2`. 
&gt; I'm in the habit now of having a "constants" section (use a %% to make a code section) where the hard-coded values go. Everywhere else in the code uses variable names. Just a tip for if your projects get large to the point you end up having to define your constants in multiple functions: You can make a class which has constants in it, which you can access them from any function in the same path. Now, whenever I'm working on a new project make a class called `Contstants_proj_x` and define all my constants there, that way I can change them in one place. A fun example- I have the Earth's rotation defined in my `Constants_math` class. Then, when doing projectile motion, I can speed up of stop the Earth to do sanity checks that my code is working properly. 
Awesome, thanks for the tip!
I dabbled with MATLAB in college, but as a physics major we used Python (and vPython) much more. It wasn't til I started work at an engineering firm that I started using MATLAB in earnest. I started using it because in engineering firms, if you want to work with other engineers, you have to use MATLAB, they have the defacto monopoly on engineering prototyping. I got more experience by working on projects- which is really the way I recommend anyone do it. Once you have a basic knowledge of programming (what are variables? how do you use loops? etc) MATLAB is such an easy language to write in, you don't have to know a lot to start working on it. Use the built in help if you get stuck, it's excellent. I'm in agreement with /u/shtpst, I don't really make many MATLAB specific errors anymore. Just coding mistakes in general. To combine q 3 &amp; 5 since I'm just going to recommend people not make my mistakes. 1. Just because MATLAB lets you be sloppy, doesn't mean you should be sloppy. I have seriously sped up code over 1000 fold just following best practices 2. Continuing on with best practices- the MATLAB editor underlines things in yellow or red for you. Red means it won't work, yellow tells you is will work poorly. Mouse over them, read what they say and do it. I see so many people asking questions in here that I know their editor is telling them how to fix. And if you write clean code, there will be very little yellow/red, so it will actually stick out to you, instead of your whole script being underlined. 3. Know that so many MATLAB functions have options inputs and outputs. I've seen a lot of people write some convoluted code to get out the optional outputs that MATLAB already does for you. As a classic example, I've seen a lot of people use `min` to find the minimum value, and then `find` to find the index where the minimum value occurs. That index is the second, optional, output from `min` already. Or I've seen people remove all the `nan` values in their array before using `mean` instead of calling the function with the optional 'omitnan' parameter. 
Oh haha thanks for reminding me of the second min output, was trying to remember that earlier tonight.
Uni. Free software that is incredibly easy to develop in. The help browser is your best friend, learn the F1 keyboard shortcut. Also learn F9. We did some units where we had to do a bit of MATLAB, I enjoyed it and wrote some of my own little things for fun. 99% of what I do in MATLAB is just move data around, take it from a delimited file, organise it and plot it into a little map or grid. Or at least when I figure out how to use the scattered interpolant of whatever it's called... My Supervisor (and myself) want me to learn python, and I'm making a lot of headway. It really is more of a universally appreciated language, especially in science, especially as it is free. I really appreciate learning programming fundamentals, like the language independent stuff from MATLAB. Recommend: learn keyboard shortcuts. Arrange the windows to suit your needs. Comment everything, and use explanatory variable names. Use good whitespace to keep things neat. Understand MATLAB warnings and messages. Also, learn a few basic common code blocks. Most of my programs start by importing text data. Instead of typing out the path and filename each time, I wrote a cute little function (which I guess I could add it to the path actually) to open the file browser window and select a file of specific type, import it, and prompt for a file name (which defaults to the files name -4 characters). Also good to know is questiondialogues, etc. At the risk of just talking forever, the thing that really made me learn MATLAB was a huge extra curricular project - one that my program came 3rd in an international geophysics student competition, and got me a ticket to a conference in Canada :)
Which line gives you the error (when the error prints, it says a line number it is occurring on). Once you have that, put a break point at that line (click the 'dash' next to the line number in the editor) and re-run the code, now in debug mode. Now you can check what vectors are not of the same length. 
Hello, Thank you! This worked much better than the way I originally tried to do it. My end goal was to create something that would take each of 220 files (.bodex files), unzip them, and go into a sub-directory where the xml data was located for each file. Then, I wanted to collect the data for all 220 files and put it into a matlab struct. While I was able to do this, it takes a long time since I had to unzip each file one at a time in a loop since it seems that you cannot unzip more than one thing in the same directory with the same sub-folders. Is this true? I would like to make this code more efficient if possible. Thanks. Sarah
Ah, sorry, I thought I wrote that. The error is on calculating AVG_T (the line before the last line). The problem is there's probably something wrong with my code, and I can't figure out how to write the equation in matlab. Becuase with this code that was given to me, we turn the complete matrix a to a single vector that then has length equal to the sum of lengths of all 24 measurements. Then the matrix tmj is 1024x1 and Mjff is 1x24576... I don't know how to solve that :( 
Are you stuck with the coding? Or the problem itself? If it's the problem itself, Wikipedia gives a pretty basic run-down of whats happening and even the necessary formulae here: https://en.wikipedia.org/wiki/HSL_and_HSV#Hue_and_chroma If it's the coding, what exactly are you stuck on? What do you have so far? It's hard to help when we don't know what the problem is! Best of luck!
So far the only thing I have done is the I've uploaded the image which is in fcc? I have no idea how to change it to rgb or ihs.
If I were you, I wouldn't concentrate on the high-dimension visualization, but concentrate on analyzing and distilling the complexity that is inherit in an R^3 to R^2 into some insightful graphs that use level curves and perhaps contour plots. 
FCC? As in false color composites? These are where the image has been assigned colours from different inputs, so for instance you might have that infra-red intensity is instead shown as red, red is shown as green and green is shown as blue. But the image that your seeing is probably still stored as RGB values. Can you show us what the image looks like. And by uploaded it do you mean into Matlab? e.g. with I0 = imread('MyFirstImage.jpg'); image(I0);
Yeah thats what i mean, prompt = 'Please enter the image name with the file format '; plute = input(prompt,'s'); A = imshow(plute); This is how the the teacher wanted it done. https://photojournal.jpl.nasa.gov/jpegMod/PIA19952_modest.jpg thats the picture I'm using.
Okay, well you can read it into Matlab in terms of it's RGB values using imread: I_RGB = imread(plute); where RGB will be a 3D matrix with dimensions (height,width,3) so for instance you could just visualise the intensity of the red part with something like: surf(I_RGB(:,:,1)) Now essentially you want to modify this into HSI, so you can use the formulae in that wikipedia link, or whatever information your course gives you to calculate what H, S and I should be given R, G and B (respectively: I_RGB(:,:,1) I_RGB(:,:,2) and I_RGB(:,:,3) ) Does this make sense?
Yeah, I have the formulas too, I'll try them once I get back home. What does the surf do? Also, once I have the numbers calculated how can I get it to show the picture in HSI?
Agreed, if your output is based on a continuous function then something like the isosurface function will allow you to make the level-sets from one output and colour them based on another: isosurface(x,y,z,v,c); If you really wanted to visualise both variables on a single surface then you could take advantage of the fact that colours are effectively 3D not just the 1D available in traditional colormaps. If you specify the RGB values you can sort of show both at once... but it's not exactly easy to read, so would be more to show the general feel of the solution. e.g. the example below where the density determines the lightness and the hue is determined by the temperature https://i.imgur.com/vDapfMq.jpg Or you could do something similar by specifying the alpha values (transparency) as well... but looking through multiple surfaces gets just as if not more confusing. If you reeeallly wanted you could eliminate one of your spatial variables so just have a 2D slice and make a movie of it progressing through the third variable e.g. on the bottom of your domain and make a movie of how it changes as you slide it up, although tbh, I'm not a fan of movies if you want it to look professional!
Try the surf command and you'll see. But I was just suggesting it as a way to visualise one of the colors individually. In terms of showing the HSI image well... that kinda depends what you're after! You could use image(I_HSI) but that will treat H as red, S as green and I as blue so will look funky, however I'm guessing this is what your prof wants as he'll know what the funky image should look like. If you wanted it to show just like the original image then it needs to be converted back to RGB first so the computer can display it, luckily this is the next half of your project ;)
Yup, and this is why F1 should be any matlab users best friend. If you find yourself massaging input or output data from a function look it up!
Okay... tbh I've not fully looked at your code and have never done Machines Learning before. But when you're calculating the length don't you want the Euclidean distance? i.e. dx^2 + dy^2 whereas you appear to be doing dx^2 - dy^2 ?? Or have I totally misunderstood!
Humor me: what happens if you put `phi2(i,j) = 0;` immediately before line 119?
it became &lt; 0.00! &gt;&gt; whos('result') Name Size Bytes Class Attributes result 1x1 8 double 
You can instead not say `Mj1 = a(:)` and then loop through one row at a time (put semicolons between the different `lab` data sets) and do you multiplication. 
What about the line that you added? Is that one slow now?
I'm confused.. Why did you post the result of "whos" on "result"?
You got me pretty curious.. What do you think is going on?
I think that is the genius behind Hans Rosling(sp?). Taking complicated data sets and making graphs and animations that distill the information in a clear concise manner.
What are the dimensions of phi2?
I'm not sure, but for completeness, here are the things I've thought about: * Most likely culprit would be that `phi2` is not pre-allocated. Then assigning to `phi2(i,j)` would require allocating a larger array each time the loop runs. That **can't be the case here** though, because lines 109 and 110 access rows and columns beyond `(i,j)`, so that coordinate is already allocated. Also /u/ansariddle is better than that. Seriously, often posts cool CFD clips, sometimes including clean, fast code to generate the visuals. * A bit out there, but what if the JIT is doing something weird? It could be deferring the calculation of lines 116 and 117 to whatever set of instructions the profiler interprets as being a part of line 119. This would be very unhelpful profiler behavior. On the other hand, if the profiler were to prevent the JIT from doing it's thing, that wouldn't provide good information for actual run-time performance, so that wouldn't be helpful either. I wanted to see if assigning a fixed value to the same element in `phi2` was fast. If it is, this would show that it wasn't the assignment/accessing that element that was slow, but generating the value to assign. * Seeing that adding the `phi2(i,j) = 0;` line reduced the time spent on line 119 adds a couple more thoughts. Since we just assigned to `phi2(i,j)`, the next assignment to that same element *should* be blazing fast. If the first assignment is fast, then adding that line may have just changed how the JIT and profiler interact. But if the first assignment is slow, then that points to accessing the `(i,j)` element being slow. That would be surprising, as lines 109 and 110 accessed the 4 neighboring elements, 2 of which are adjacent to `(i,j)` in memory, so `(i,j)` should already be in cache. It would be very surprising (from what we can see of the loop) if the accesses in lines 109 and 110 were cache hits but the assignment in line 119 was a miss. So I'm interested to see time spent on the new line, `phi2(i,j) = 0;`. If it's slow, I have to assume that there's something bizarre going on with the memory accesses. If it's fast, I'd look at lines 116 and 117, which I suspect would have slowed down. If not, I'd want to take this directly to my company's MathWorks rep, because somehow we managed to reduce the time spent in this loop by over 80% by adding an assignment and that doesn't make any sense.
It didn't make much difference. 0.55 44512 119 phi2(i,j) = 0; 0.54 44512 120 phi2(i,j) = result; The little difference can be explained by this run being on a different PC. And yes it's all preallocated.
&gt; IT is doing something weird? It could be deferring the calculation of lines 116 and 117 to whatever set of instructions the profiler interprets as being a part of line 119. This would be very unhelpful profiler behavior. On the other hand, if the profiler were to prevent the JIT from doing it's thing, that wouldn't provide good information for actual run-time performance, so that wouldn't be helpful either. I wanted to see if assigning a fixed value to the same element in phi2 was fast. If it is, this would show that it wasn't the assignment/accessing that element that was slow, but generating the value to assign. 302x152. I have tried running direcltly and it does feel like a good second and hence its not profiler isn't slowing it down. 
just to show it didn't go imaginary or something wierd
I learned MATLAB outside of college on the job to use the Xylinx FPGA Toolbox. Okay, really it was Simulink so there was some cheating... It really simplified a lot of the Verilog writing, but we still had to write some M code, some C code for Vivado HLS, and some more Verilog/TCL in Vivado for testing and what not. My company was interested in using LabVIEW, but it's definitely not where MATLAB is for FPGA development.
You are ofc right. Thanks!
+ Sorry, been sleeping and working. The code that I had was somewhat reduced. So I figured it out with what you said, and looped through it, which fixed everything and thank you :)
I am just trying to get some help wherever I can, I tried many things but just don't get how to do this. 
oh I never heard of Fournier Transform, I will look into that. 
[removed]
I would argue that it depends on how you intend to display the data. If this is for a presentation, I think that I personally would sort one of the inputs (assuming a "z" input), then create a surface plot using the other two inputs as x/y values and one of the outputs as the z value. Then *animate* the plot by creating a new frame for each of the sorted values, where the title of the current frame gives the current value. Depending on your function, you could also *color* the surface plot with the second output. If you could post a data set then I could give you some code to generate the plots. 
What are you stuck on?
My guess would be maybe if this is in a function and `phi2` is an input. If so, it's because Matlab passes inputs by reference until you want to make a change to one of the values, at which point is generates a copy. From [this post](https://www.mathworks.com/matlabcentral/answers/152-can-matlab-pass-by-reference): &gt; If instead you are attempting to use pass-by-reference to avoid unnecessary copying of data into the workspace of the function you're calling, you should be aware that MATLAB uses a system commonly called "copy-on-write" to avoid making a copy of the input argument inside the function workspace until or unless you modify the input argument. If you do not modify the input argument, MATLAB will avoid making a copy. For instance, in this code: &gt; function y = functionOfLargeMatrix(x) y = x(1); &gt; &gt; MATLAB will not make a copy of the input in the workspace of functionOfLargeMatrix, as x is not being changed in that function. If on the other hand, you called this function: &gt; function y = functionOfLargeMatrix2(x) x(2) = 2; &gt; y = x(1); &gt; &gt; then x is being modified inside the workspace of functionOfLargeMatrix2, and so a copy must be made.
Just curious, but you have: result = abs(sqrt(-a^2 + 2*a*b - b^2 + 2*h^2)); result = (a+b)/2 + 0.5*(max(-result, result)); So, on the first line, you take the absolute value of the `result` calculation. On the second line, you call `max(-result, result)`. Is there something I'm missing?
some exposure to Matlab in college. didn't use it at all at my first job out of college (and I was there for almost 8 years; in fact, no one at that place used it). towards the end of my time there when I had free time between projects I started dabbling in Python and Scilab to update my skillset. using Matlab at my current job to try and automate some image processing projects. bit of a learning curve since I hadn't done much with Scilab and it had been ages since using Matlab, but making my way back to some kind of proficiency. the Matlab help forums are really useful. I've gotten plenty of assistance from there from fresh sets of experienced eyes.
[This](http://undocumentedmatlab.com/blog/undocumented-profiler-options) undocumented matlab post explain how to turn in JIT profiling.
[removed]
Please read our [rules for submitting homework](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/) and edit your post to be within our community guidelines. 
The xz plane is f(x,0) and the yz plane is f(0,y). This is really saying that now you have a 1D function, not a 2D function. So, re-write the function as 1D, and then plot (no longer using a surface plot, since it isn't a surface). 
But I don't want f(x,0), I want the projection? Like if you have a sharp gaussian pointing in z centred way far away from the x and y axis, the projection onto the x and y axis would still be a big spike whereas what you're suggesting would be nearly 0 across the whole axis. 
MATLAB uses F5 to run the entire script/program, as do many other IDEs (for example, Visual Studio). You can also select part of the script and press F9 to run only those lines.
Preferences --&gt; MATLAB --&gt; Keyboard --&gt; Shortcuts. Click the box that says, "Search by action name or shortcut," then press `F5`. Change it to be whatever you want. Being fairly new to any software, you should probably browse the available options and help documentation just for your own information if anything else.
looks like a new release just came out and they are featuring the new deep learning stuff. It's front and center on their homepage... https://www.mathworks.com/ 
That looks like it manipulates the figure, what I'm wanting to do is create a new 2D array with the data in it (or a 1D function with the information). 
If anyone ever finds this and needs the code, reply. I'll have it somewhere. For all the peeps in need
Thank you all for your suggestions. In the end I went with the solution proposed by /u/shtpst, slightly modified: a 2D scatter with input 1 and 2 on xy and output 1 as color, animated through input 3, whose value is reported in the plot title . Output 2 is show in text near each marker. Since my function is not continuous I had to use scatter instead of contour/surf plots.
thank you for making me discover Hans Rosling! Very entertaining and awe-inspiring to watch!
Ah, yeah I wasn't sure how your data is formatted, which is why I had asked for a sample data set. I bet your animation is pretty, though! :D
yeah, I'm aware and it's just me playing around a bit with real and imaginary values
Just take your set of data you used to generate the surface plot, but only plot y,z for the x projection, and only plot x,z for the y projection...
Glad you enjoyed him and his work.
If you have the function, you can use `integral()`, which is an adaptive numerical integration algorithm. 
phi2 is a 2D matrix
It looks like your result is a 2x1 vector. Which makes sense because it looks like you multipled a 2x2 with a 2x1
What do you expect the area under the curve, and what are you getting?
So... I'd recommend rederiving something like Simpsons but for the spherical integration. I don't have time to do it right now, but can sort it for you on Monday if you can wait that long. For now I'd say just multiply your v values by their corresponding 4 pi r^2 and apply regular Simpsons rule to the result: yi = 4 * pi * r.^2 .* v; V_simp = (r(2)-r(1))*(sum(yi) - sum(yi([1:4,end-3:end]).*[31 -11 5 -1 -1 5 -11 31])/48); It won't be perfect, but better than trapz by far. As I said, I can do you one better if you don't need it before Monday? And for what it's worth, your Simpsons formula was giving poor results because you were calculating the concentration for each shell based upon a solid sphere and subtracting your previous result. As a result the final solution was just based on a solid sphere with your near final concentration. You should really integrate each shell separately i.e. instead of using "4/3 pi r^3 v" use "4 pi r^2 v dr" and sun over all of them. Edit: oops put wrong formula in. Corrected now Edit2: So many typos! I hate typing on a phone.
ok man just go on with your life if you don't want to help me it's fine
*ok man just go on* *with your life if you don't want* *to help me it's fine* ______________________________________________________________________________ ^^^-english_haiku_bot
I think you should just focus on learning ML, Matlab is basically irrelevant. Anything you encounter on the way that you don't understand, you can look into. I've seen a few very basic ML concepts, and didn't find that they demanded too much math background to start with. My understanding is that the math gets very involved as you advance in ML, but my impression is that you would pick it up along the way, and that trying to build up your math background beforehand to help would miss the mark a bit. It's amazing what resources are available freely on the web. I simply Googled [stanford machine learning](http://cs229.stanford.edu/materials.html) and got to a treasure of lecture notes.
My next try would be Monte Carlo integration.
You can also see the variables where ans is a sym 2x1. So you're correct
seems that integral() requires a continuous function, which I do not have as I mentioned in my post. I only have a set of discrete, evenly spaced data.
Any implementation of Monte Carlo integration I can find for matlab requires a continuous function, which I do not have as I mentioned in my post. I only have a set of discrete, evenly spaced data.
My volume errors are in the 1E3 - 1E4% range, compared to the exact solution. The exact solution only applies in limited circumstances however, and I need my model to be able to integrate accurately without relying on it. 
All of the methods you discuss implicitly interpolate the data you have *somehow*. I was just suggesting Monte Carlo because it's an exceptionally simple way of integrating and should give you good results as long as you can sample the domain in an unbiased way.
I used ezsurf which does it from the function, I didn't have a set of data anywhere it was all "behind the closed doors" of ezsurf. 
Thank you for your response! And I can certainly wait until Monday, it would be hugely appreciated. I'm not sure I'm following the second paragraph, so bear with me. It seemed to me that integrating over a larger area would give a more accurate interpolation vs between two data points, but I'm pretty far out into unfamiliar mathematical territory at this point. So what you're recommending is something like vol = 4 * pi * r^2 * simpsons([v(1) v(1)],0,r(1),[]); for j = 2:n vol = vol + 4 * pi * r^2 * simpsons([v(j-1:j),r(j-1),r(j),[]); end instead of what I was doing above? edit: no i read it wrong. lemme try again in a little while.
The standford machine learning course on coursera, taught by Andrew Ng, is a pretty good introduction.
Number of iterations you can see in the fourth fzero output variable: https://se.mathworks.com/help/matlab/ref/fzero.html#outputarg_output As for time, you can try using tic, toc.
The neural network toolbox has a few tutorials you can work through and play around with. 
I think best lang to start with ML is Python. There are many libs for ML here like: scikit-learn, keras (very intuitive with GPU support) used often with google's tensorflow. Everything is free, you can find a lot more features, than in Matlab. I think you should start with some youtube series: https://www.youtube.com/watch?v=OGxgnH8y2NM&amp;list=PLQVvvaa0QuDfKTOs3Keq_kaG2P55YRn5v https://www.youtube.com/channel/UCWN3xxRkmTPmbKwht9FuE5A There are also many courses, like datacamp, but often there are paid. Actually I have started my ML experience at the university with Matlab, but I have moved to Keras and Tensorflow. I'm still doing some coding in Matlab, but most is in Python.
Tbh I found the documentation of the NN toolbox kind of patchy. Lots of "now enter this command with these parameters" with minimal explanation of the details. Maybe it would make more sense with more experience, but that's kind of useless for a beginner. On the other hand it was a great way to get a simple FF ANN together rather quickly.
true but it has a lot of built in data sets you can play around with easily rather than find your own/build your own. 
how do i use this output? This is my first time using matlab
You may have access to this course through your school. https://www.mathworks.com/training-schedule/machine-learning-with-matlab
I'm not sure exactly how you're applying Simpson's rule in your example, since it seems like you're switching to using random numbers in the last half. Could you clarify?
Logical indexing IS the shortcut. 
What radecki is describing in his last paragraph can be used to remove the quiet parts of the audio file. "Hisses" are things like white noise (or brown or pink) and you can use FFTs to get into the frequency domain to process them out of your original signal.
This has been here a while with no response. I don't know what it means to rotate a point; maybe no one else knows what you mean either. I mean, a point has no orientation, so rotating it does nothing, right? If you can clarify what you need to do, probably someone will help.
By assigning the output of fzero to an array which contains 4 new variables to store all the output given by fzero. [x,fval,exitflag,output] = fzero(___)
Good job you drew a dick. Probably going to be your first and last post here.
What do you want? You complain about downvotes but haven't posted a substantive question. Logical indexing - it's a thing. What more are you looking for?
&gt; I have to initialize some shape Okay &gt; have it rotate to a certain angle Okay &gt; I'm seeing a lot online about a rotation matrix Okay &gt; I can't multiply a matrix by a point Where is this coming from? You have some matrix of points. A row of x values, a row of y values, a row of z values. Call that matrix M. The new matrix, which is the rotated version of M is just N = R*M I can't understand the rest of your post. &gt; The only way I modify velocity is by changing time, and I don't think that's efficient Yeah, if you wanted to change velocity, you could, you know, change the velocity. Make vx and vy different. 
It's rotating about (0,0,0). You have to move the shape there, rotate it, and then move it back. Also if your shape is 2D you don't need to do 3D rotation.
what's an efficient way to move it to 0,0 and move it back?
Check out using symbolic math, it will not do anything really great though.. I feel that what you are trying to do is beyond what matlab will provide. You should be able to derive the mass of the arm at certain angles by hand and use code for input to quickly calculate for variations. 
I think you mis-read the question (or I am). I don't think he wants MATLAB to derive the equation for him, he said "when I derive the equation," he wants to implement what he derived in MATLAB. 
Yes this is what i meant weedowhirler, thanks! I was just not sure about the way i have to go about it, the formula is made up of forces angles and lengths so theres a few variables
So I thought I thought i understood what you were saying but I don't at all lol. This is the script I have atm to try to get the picture into RGB so I can switch it. prompt = 'Please enter the image name with the file format '; plute = input(prompt,'s'); A = imshow(plute); AA = imread(plute); %Fuction: r = AA(:,:,1); g = AA(:,:,2); b = AA(:,:,3); x = (b-g)./sqrt(2); y = (b+g-r.*2)./sqrt(6); h = atan(y./x); s = sqrt(x.^2+y.^2); i = (b+g+r)./sqrt(3); My error is at h though, but I'm assuming its coming from an error before that first.
Sorry, busy weekend, only just got a chance to respond! So there are lots of different formulations of Simpsons rule of which this is just one. Let's start at the beginning. These methods work by fitting polynomials to sub-sets of the data points, integrating the results, and combining them. The traditional 3 point Simpsons rule is essentially a step up from trapz as it fits quadratics rather than linear polynomials. Lets say we have a function evaluated at three uniformly spaced points i.e. f(0), f(1) and f(2). If we fit a quadratic to these points we'll obtain the following: f(x) = x^2 * (f(0) - 2f(1) + f(2))/2 + x*(-3f(0) + 4f(1) - f(2))/2 + f(0) If we integrate this between the range we have i.e. 0 and 2 we get: integral(f(x)dx)[0 to 2] = (f(0) + 4f(1) + f(2))/3 Which is where the classic 3 point Simpsons rule comes from. Now we have two choices, we have the integral from 0 to 2 so we could then do the same from 2 to 4 etc i.e. (f(2) + 4f(3) + f(4))/3 and keep going until the whole domain is filled. Or we can overlap the integrals, i.e. integrate from 1 to 3 then 2 to 4 and so on. This last approach is slightly more accurate and leads to a final solution that is neater. So if we do this we'll see we get: S = ( f(0)(1) + f(1)(4+1) + f(2)(1+4+1) + ... + f(j)(1+4+1) + ... f(end-2)(1+4+1) + f(end-1)(1+4) + f(end) )/3 We're almost there... but with our overlapping segments we've actually integrated over every inter-nodal space twice except the first and the last which never got overlapped. So we should integrate between 0 and 1 and between end-1 and end once more and then divide the whole thing by 2. The question now is what polynomial to use for the first and last integral. You could use trapezium rule... but we've been trying to be more accurate than that so it'd be a shame... you could argue we should use a quadratic as that's how accurate we've been so far... however, Simpsons 3 point rule actually gains an extra order of accuracy from the fact it has symmetrical coefficients yet the expected cubic error term is purely odd, so it would be best to actually use a cubic here and then we can guarantee its global accuracy for cubics and below. If we fit a cubic to points f(0), f(1), f(2) and f(3) and integrate BETWEEN 0 and 1 ONLY (sorry for caps shouting, it's important!) we get: integral(f(x)dx)[0 to 1] = (9f(0) + 19f(1) - 5f(2) + f(3))/24 Now if we add this integral (and it's reflection for end-3 to end) to the result we had earlier and then divide by 2 we find that our entire integration becomes: S_simp = (1/48)*(17f(0) + 59f(1) + 43f(2) + 49f(3) + 48f(4) + ... + 48f(j) ... + 48f(end-4) + 49f(end-3) + 42f(end-2) + 59f(end-1) + 17f(end)) I just rewrote the above into two sums, taking a factor of 1 out of every terms so that you have the sum over the entire array, and then a small modification for the end sequences: sum(yi) - sum(yi([1:4,end-3:end]).*[31 -11 5 -1 -1 5 -11 31])/48 In reality your points are unlikely to be at x=0,1,2 so you should stretch or squish the formula as needed, i.e. multiply it by dx where dx is your spacing between nodes. Does this make sense? There are loads of variations you can do depending upon what fits your particular situation... there's no reason you have to stick with the above method, it's one of the simplest but tends to do a decent job. Looking at your graph you seem to have the problem pretty well resolved so it should do just fine. If you decide to use more accurate formulae be aware of things like Runge's phenomenon and maybe use least squares or some variant thereof when defining your polynomials. My version of Matlab doesn't have the simpsons function that you appear to be using so I can't comment on it. Beware however of passing it ranges of your domain. The main errors in numerical integration tend to be due to the first and last intervals as you don't often have information extending beyond your integration range. As a result if you pass this simpsons formula v(j-1:j) in a loop over all j I expect the result will just become trapezium rule! Not what you're after!
For an object with a centre at P = (px, py), translate it to the origin using T1 = [ 1, 0, -px ; 0, 1, -py ; 0, 0, 1] Then rotate the object about the origin using R = [ cos(theta), -sin(theta), 0 ; sin(theta), cos(theta), 0 ; 0, 0, 1] and translate back to P using T2 = [ 1, 0, px ; 0, 1, py ; 0, 0, 1]. So the combined transformation matrix is. A = T2 . R . T1
When you say error do you meant an actual error message? Or h just doesn't look like you believe it should? I think you should probably use the atan2 function rather than atan. The difference is that if you're only passing in y./x then there's less information on the signs of the inputs. e.g. if y/x is positive is that because both y and x are +ve in which case the answer should be between 0 and 90 degrees, or because they're both -ve and the answer should be between 180 and 270 degrees. h = atan2(y,x);
So what is your specific question? From reading this, it seems like perhaps you don't know how to use MATLAB at all. If so, that's fine, but it's more than we can help you with here. I'd recommend checking out some of the tutorials on the right sidebar ([Here's the official one from Mathworks](https://www.mathworks.com/support/learn-with-matlab-tutorials.html)) which would be a good place to start. Once you have a start, you can post some code here and ask specific questions about your code. 
Rough day?
First off, this seems like you have more of a math question, not a MATLAB question. Can you describe, using equations or whatever, what you're trying to do? Because unless you can, you can't get MATLAB to do it either. Secondly, I would love to try to help you with your math, but I don't understand what you want to do. You have 4 points that all lie on a body? Or is that one point, which has been rotated to those four locations? (I don't think it can be the latter, because they have different norms, and rotations can't change norms of points). But if it's the former, I don't know what it means to do a rigid body extrapolation between points. 
Apologies. You're right, this question is less matlab specific than a maths problem. However, if you are happy to help that would be great. The four points all lie on a rigid body, and so their spatial relations remain fixed. Once I track the tool, I obtain four data sets, all Nx3. 1 set per marker. From this, I wish to estimate the tip of the tool upon which the rigid body is attached (see picture) https://i.imgur.com/7WtKTJq.png https://i.imgur.com/8cgcfHe.png The CSV file of xyz coords for all four markers are here: https://drive.google.com/file/d/0B391CinpkUw9ckt3MTlteUVwUkU/view?usp=sharing Thanks again! 
You want to use [drawnow](https://www.mathworks.com/help/matlab/ref/drawnow.html) and there are some good examples there. 
You need to develop a clear mathematical idea of what you're doing before you try to do it.
You're right. Unfortunately I do not possess the correct terminoloy to articulate my problem. In simple terms, What I wish to do is extrapolate a point on the vector between points A and C of the rigid body. Specifically, x- mm from C. Although apparently simple, a simple extrapolation along the vector does not preserve the correct rotational properties of the rigid body (the plane of A-D). Again, I am not confident that this description is clear. 
Thank you so much for the wonderful explanation. I'm not following 100% of it but it does make a ton more sense than before. I'm getting, at least, that I should be integrating over three points instead of two. In terms of the boundary nodes, I assume that the value of v at r=0 is at the same concentration as v at r(1), and I assume that the node at r=a (other model boundary) is zero (a = radial width). So those values are easily substituted in at the edges. Here is the simpsons function I am using if numel(f)&gt;1 % If the input provided is a vector n=numel(f)-1; h=(b-a)/n; I= h/3*(f(1)+2*sum(f(3:2:end-2))+4*sum(f(2:2:end))+f(end)); else % If the input provided is an anonymous function h=(b-a)/n; xi=a:h:b; I= h/3*(f(xi(1))+2*sum(f(xi(3:2:end-2)))+4*sum(f(xi(2:2:end)))+f(xi(end))); end so what I should be doing is something more like... vol = 4 * pi * r(1)^2 * dx * simpsons([v(1) v(1) v(2)],0,r(2),[]); for j = 2:n-1 vol = vol + 4 * pi * r(j+1)^2 * simpsons(v(j-1:j+1),r(j-1),r(j+1),[]); end vol = vol + 4 * pi * a^2 * dx * simpsons([v(j-1) v(j) 0],r(n-1),a,[]); [Here is a link to the full simpsons.m file I'm using, for reference](https://www.mathworks.com/matlabcentral/fileexchange/28726-simpson-s-rule-integration?focused=5186784&amp;tab=function). Basically it integrates the first term over the next two terms, and in my case the fourth term is empty since the number of nodes is already specified with the size of the input.
I may be mistaken, but I'm pretty certain you can extrapolate A-C to C-E. You might want to improve your estimation of each point though, I looked at the norm of A-C and B-D and they vary by ~20% which I'm guessing isn't supposed to happen. 
The attached CSV is part of the complete set here, where columns J-L is the x,y,z for the tool tip estimated by the devices' software. The tip estimate is very poor, hence I wish to estimate it myself: https://drive.google.com/file/d/0B391CinpkUw9d29CajRhUGVBamM/view?usp=sharing 
I don’t really see your problem yet. What do you mean when you say E would not follow the rotations of the body? If you define the point E by a combination of A and C it would be unambiguously defined in space and all rotations on A and C also properly change E. Are you calculating point E and then apply your rotations to the whole thing? Or do you apply the rotations to A-D and then calculate E? Edit: I just saw that you are not really working with rotation matrices but have a bunch of data for each of the points over time. From these points you want to determine the tip of your tool E. I think your problem is that a point alone only has three degrees of freedom, so no rotations. If you just use the extrapolation from A-C to calculate E you will get a point in space that will tell you where the tip is. But just the point E does not tell you anything about the rotation of your tool at that point. For that you need to involve the other points as well. So you probably want to calculate some sort of rotation about E and store that along with the position of E.
Heya, which bits didn't you get exactly... I can try to explain it again if you want. As for using 3 points rather than 2... yes that's better... but still not ideal! You seem determined to use a for loop and pass in your function in small chunks, why not just pass it all as one vector? i.e. vol = 4 * pi * simpsons(v.*r.^2,0,r(end),[]); Although whilst I'm here... that simpsons function is... okay, not great. Firstly it uses the method I alluded to where the intervals don't overlap, meaning that the final result has different odd and even coefficients, slightly less accurate most of the time and can be significantly out when the function has significant nyquist frequency components. Far more importantly however... I think it's actually only valid for odd length inputs! i.e. if you put it an input of length say 12 the formula never uses f(11) and uses f(12) five times more than it should! Personally, I'd recommend just typing this into your console and seeing if you get the correct result! If you get an error let me know what it says and we can go from there. yi = reshape(4 * pi * r.^2 .* v,1,[]); vol = (r(2)-r(1))*(sum(yi) - sum(yi([1:4,end-3:end]).*[31 -11 5 -1 -1 5 -11 31])/48); disp(vol) All I'm doing here is writing a temporary variable 'yi' to be equal to what you want to integrate wrt r, namely "4 pi r^2 v". The next line is just dr (i.e. the radial distance between your points) times the numerical integral by simpsons rule over the entire function.
Thanks for your persistence and patience with this. Rotation may not be the right term. What I mean is that, imagine that you pivot the tool while the tip is stationary. If tracking the rigid body only, it would not be possible to tell whether the tip was stationary, or in fact the tip was moving more than the rigid body itself. Perhaps this is not an issue at all. I just cant see how a pivoting movement with a stationary tip could be distinguished from a movement during which the tip movement is greater. The following picture demonstrates the tip calibration process (pivot) with a similar tool implemented by the position sensor's software: https://i.imgur.com/tk4Ka0l.png When calibrating the tool, the RMS error is never below 1.5, hence my intention is to estimate the tip position myself from the rigid body data. Do you know of a way to emulate this process from the xyz coordinates of marks A-C? Thanks again! ***EDIT*** I now see that the vector A-C WILL maintain the correct orientation as the rigid body is moved, hence the tip E can be simply extrapolated along this vector assuming that the rigid body is proper;y aligned so that the tool tip follows A-C. Does this sound correct? *********** 
Hey, thanks for pointing that out. there should be little variance in the norms. Especially given that the devise is used to track tools during surgery! 
What are you doing with the `1:K-L+1` bit at the end? Are you trying to do linear indexing? L and K are based on the size of S, but you use them on a term defined with San. I was going to ask why you used an inline function and arrayfun, but then I saw you're using cell2mat? Wtf is going on here? Are your inputs really cell arrays? What are your inputs, what type/size, and why are you not just using the built in sum function? 
Don't forget to remove your hold on before, or you will get the same result
&gt;What are you doing with the `1:K-L+1` bit at the end? Are you trying to do linear indexing? L and K are based on the size of S, but you use them on a term defined with San. My vectors only contain the values from k=L to K. I ignore the first L-1 values when I construct them. L and K are based of S due to the properties of S that I haven't included in the question. &gt; &gt;I was going to ask why you used an inline function and arrayfun, but then I saw you're using cell2mat? Wtf is going on here? Are your inputs really cell arrays? The output of arrayfun gives me cell arrays for some reason, so I convert to an array and it gives me the K-L+1 columns I want. &gt; &gt;What are your inputs, what type/size, and why are you not just using the built in sum function? S is a two dimensional array, as is SAn, everything else is vectors. I can't see a way I could avoid the inline function without making things a bit tricky to read and understand. I need to access SAn row by row, I don't think I can just do simple matrix manipulation and then sum it. If you look at line 17 I do use the inbuilt sum function. Regardless, I got resolve working. I had a mistake elsewhere that was causing c to be 16 orders of magnitude larger than it should have been.. it's all good now. 
I implemented drawnow and it's plotting each line one at a time which is kind of what I'm looking for but I need it to graph them all simultaneously to simulate the time passing - do you know how to do that? 
This seems like a dangerous implementation, in that it's not explicitly stated anywhere that this is to 2D what the 4x4 transform matrix is to 3D. That is, *this doesn't work if you are using z-values*. Consider the following: syms px py pz; T1 = [1, 0, -px; ... 0, 1, -py; ... 0, 0, 1]; pts = [px; ... py; ... pz]; So, you want to move `pts` from its center at `px, py` to `0, 0`? &gt;&gt;T1*pts ans = px - px*pz py - py*pz pz OP explicitly calls: pt = [pt1;pt2;z]; And so, there **is** some z-value(s). Now, for comparison, consider the 4x4 transform matrix, which is comprised of the block matrix `R` for the rotation and `dS` for the translation: syms px py pz; dS = [-px; ... -py; ... 0]; R = eye(3); T1 = [R, dS; ... 0, 0, 0, 1]; pts = [px; ... py; ... pz]; The "trick" with using the 4x4 transform matrix is that you need to append (and subsequently strip) a row of ones to the input `pts` matrix: T1*[pts; ones(1, size(pts, 2))] ans = 0 0 pz 1 If you're going strictly 2D, then you *can* use the answer given in the above post, **IF** you append (and subsequently strip) a row of ones beneath your x/y values, the same way that you need to pad the x/y/z values for the 4x4 transform. The corrected answer given above would be: syms px py pz theta; dS = [-px; ... -py; ... 0]; R = [cos(theta), -sin(theta), 0; ... sin(theta), cos(theta), 0; ... 0, 0, 1]; T1 = [eye(3), dS; ... 0, 0, 0, 1]; T2 = [R, zeros(3, 1); ... 0, 0, 0, 1]; T3 = [eye(3), -dS; ... 0, 0, 0, 1]; A = T3*T2*T1 This gives: A = [ cos(theta), -sin(theta), 0, px - px*cos(theta) + py*sin(theta)] [ sin(theta), cos(theta), 0, py - py*cos(theta) - px*sin(theta)] [ 0, 0, 1, 0] [ 0, 0, 0, 1] And again, you need to pad/strip a row of ones when using this, such that: pts = [px; ... py; ... pz]; transformedPts = A*[pts; ones(1, size(pts, 2))]; transformedPts = transformedPts(1:3, :);
Have you considered whether a dimensionally reduction algorithm like PCA would allow you to visualize data more usefully in R^2?
Can you share your code? What you want to do, in general, is inside the loop update the data in all of your lines, then use one drawnow command. 
Too many unknowns to give a quality snippet. Do you actually have a *time vector* that you can use? Are all your data sets the same size? First thing you would need to do is to load all of your data sets up front. A brute force way to do this would be: nFiles = 200; nSamples = 0; for currentFile = 1:nFiles name = sprintf('C:\\Users\\dell\\Desktop\\Dr. Hohenstein''s Research\\File Datas\\%d\\xCoords.txt',currentFile); x = importdata(name); if max(size(x)) &gt; nSamples nSamples = max(size(x)); end end x = nan(nFiles, nSamples); y = nan(nFiles, nSamples); for currentFile = 1:nFiles name = sprintf('C:\\Users\\dell\\Desktop\\Dr. Hohenstein''s Research\\File Datas\\%d\\xCoords.txt',currentFile); name2 = sprintf('C:\\Users\\dell\\Desktop\\Dr. Hohenstein''s Research\\File Datas\\%d\\yCoords.txt',i); tempX = importdata(name); tempY = importdata(name2); if size(tempX,1)&gt;size(tempX,2) tempX = tempX.'; tempY = tempY.'; end x(currentFile,1:numel(tempX)) = tempX; y(currentFile,1:numel(tempX)) = tempY; end The next step would be to setup the plot handles. Updating plots is *dramatically* faster if you don't (implicitly or explicitly) clear the figure window each time. Implicit clearing would be plotting data with "hold off" or similar, such that the plot is cleared. Explicit would be, of course, calling `clf`. So, that said: figure(1); clf; hold on; for currentFile = 1:nFiles plotHandles(currentFile) = plot(x(currentFile, 1),y(currentFile, 1)); end And now, update your plots: for currentSample = 1:nSamples for currentFile = 1:nFiles set(plotHandles(currentFile), 'XData', x(currentFile, 1:currentSample), 'YData', y(currentFile, 1:currentSample)); end drawnow; end This *keeps* the lines on the plot and updates their values instead of clearing and re-drawing them. Interestingly (for me, at least), is that this is faster even if you gave it a new set of points. I'm assuming there's some overhead in the creation of the metadata or similar with the line that eats up the processing time. The `drawnow` command is after the inner loop so you update all the plots at once, then *show* those updated plots. Update-show-update-show etc. until you're done with all the plots. Lastly, as I mentioned above, you have x,y. I don't know if that's actually t,y, etc. - I don't know if you have a *time vector* that you can use. Let's assume these points were sampled at some known frequency `Fs`. In that case, you could *make* a time vector: Fs = 200; %Hz, for example Ts = 1/Fs; time = (0:nSamples-1)*Ts; Just convert the sample frequency to a sample period by inverting it, then apply that to the number of samples. Now you have time. Now you can do something like: tic; while true elapsedTime = toc; currentSample = find(time&gt;=elapsedTime, 1); if isempty(currentSample) break; end for currentFile = 1:nFiles set(plotHandles(currentFile), 'XData', x(currentFile, 1:currentSample), 'YData', y(currentFile, 1:currentSample)); end drawnow; end This will plot everything in real time, automatically advancing however far is necessary to get the correct sample to display the data in real time. The `isempty` line in there checks for when you've hit the end of your sample record - if you have, then there will be no entries in `time` that are greater than the `elapsedTime`, and so the result of `find` will be empty. `isempty` then becomes true, and you exit the loop with the `break` statement. The inner loop there works the same as before - update all the plot handles with the current data, then invoke `drawnow` after all plots have been updated to refresh the graphic.
A couple post script notes: 1. I used `nan` to make the x/y matrices instead of `zeros` so the matrix winds up getting padded with `NaN` after the samples run out (assuming each file has a different number of samples). NaN values won't plot, but zeros will draw a line from wherever the sample set runs out back to origin. 2. Even if you don't have a sample frequency, you could still force the plots to run in some particular amount of time: tMax = 10; %seconds time = linspace(0, tMax, nSamples); Now plug that in for time above, and the whole plotting section will run in 10 seconds. This may or may not result in a satisfyingly smooth animation, though. If it's too jerky, then you should make the `tMax` longer, so you plot fewer samples between each increment.
Seems like maybe you would only care about checking if it's a leap year if you're in the month of February.
Are you using a built-in function or a third party function? This is tagged as a homework question - do you have a formula to use that you could implement?
Yup, and thats what i i tried to do with my if statements in the beginning of the code, however the case statements overwrite that. Putting the if stuff in the end of the code didnt work either. Preferably i would want do this all with switch case.
I think you want to modify case 2. I'm pretty sure something like this should work: switch A case 1 days = 31; case 2 if isLeapYear(B) days = 29; else days = 28; ...
Yup, this was the hint - *maybe you only care about checking if it's a leap year if you're in the month of February.*
Just put a return statement in the leap year if statement.
Days = 29 is the return statement.
I'm using the built in function in simulink. Not sure if I got the tag right though 
*I'm using the built in* *function in simulink. Not sure if I* *got the tag right though* ______________________________________________________________________________ ^^^-english_haiku_bot
Actually, I just plugged in the formula you gave, and it's just barely more accurate, by a fraction of a percent, vs simply multiplying the volume of each shell by its corresponding v value. The overall error in the volume calculation is still ~22% at low gas losses compared to the exact solution (where the problem is most exacerbated), which is way way *way* beyond what is acceptable here. Any other ideas? As an aside, thanks again for taking the time to help explain this to me. Honestly, this problem is fucking killing me. I am supposed to be finishing my PhD in something that is *not math at all*, and instead of writing up my papers and putting figures together, I am stuck trying to teach myself numerical integration at the last minute... which is not a bad thing but it's not exactly the kind of problem I want to spend *a month* spinning my wheels on when I have so many bigger things to worry about. And yet this is the road block that is holding *so many things* up. It's so fucking frustrating. I'm really honestly surprised that there isn't already a function out there to solve a numerical integration problem like this that doesn't require the input of a continuous function... I have asked around on the MATLAB answers webpage too and just got two people who started to discuss splines vs pchip and basically disregarded me by saying "I didn't really read your question at all lol but here are some interesting things I thought about re: what the previous poster said that are way further above your head than the original response, neat huh" wtf? no. edit: vol = 4 * pi * simpsons(v.*r.^2,r(1),r(end),[]) returns errors on the order of -1E4 for some reason?
On a new line after that write "return" that will stop the function from executing any further. Days=29 is assigning a value to a variable, not a return statement.
&gt; Here's where you can go to see my question because I can't be bothered to post it here. &gt; Here's where you can go see what I'm supposed to do because I can't be bothered to post it here. &gt; Here's where you can go see what I've done because I can't be bothered to post it here. &gt; Plz do my work thx I mean, really - you have the entire function, *in proper Matlab form*, not even pseudocode, with pointers on what the code is doing, along with advice from your professor on what to do. What more do you need?
I gave the 2D matrices because that is what OP was using. The equivalent 3D ones would work for homogenous 3D co-ordinates using exactly the same implementation. 
I would agree except OP gave: z = [0 0 0 1]; &lt;...&gt; pt = [pt1;pt2;z]; h = mat*pt; If `z` had been omitted and ones had been hard-coded, or if `z` were given as all ones, I would agree that OP was using 2D matrices. I understand that OP is only *plotting* 2D *results*, but there is a varied set of `z` values that OP is assigning which will cause the snippet you provided to function incorrectly.
For some reason my code runs but wont display the number of iterations. 
This is the place for : "Why does Newton Raphson work well?", or "My Newton Raphosn wont converge, could you perhaps tell me why?" NOT "pls do my HW thx."
**That** is a problem. Does the code even run? Lines 34-37 in the pastebin code has `J(1,1) ==` and nothing more, etc. So I would say that it probably wouldn't even run. That said, your functions don't terminate. Just because you have a comment line `%==========` doesn't mean the function is done. 1. Try putting `end` at the end of your functions. 2. Try putting your functions after the end of the body of your script. 
Could you check my code now? I'm getting a very high number for k, the iterations. https://pastebin.com/42xzyW1X
 Not sure what a very high number is, or what you're expecting it to be, but it looks like you're transcription of the problem is wrong. Instead of: R(2) = X(1).*X(2).^3 - cos(pi*X(3)- X(3)); I think you should have: R(2) = X(1).*X(2).^3 - cos(pi*X(3))- X(3); For clarity's sake, you might consider breaking out your terms at the start of that function: x = X(1); y = X(2); z = X(3); Then you can use x/y/z, like the problem statement does, which would make the rest of your code a lot easier to read. 
That's weird... the formula I gave you works perfectly for me in the few test cases I just ran i.e. 101 data points with: i) uniform v, ii) v=1/r and iii) v = 1/r^2. May I ask what test cases you're running and what do you anticipate the answers to be? It'd be really helpful if you could provide the data you're using for them too (i.e. 'r' and 'v') ... feel free to PM if you'd rather not paste it all here. I understand not wanting to learn something new at the end of your PhD (I'm writing mine up too!), if you send me what you have I should be able to see what's going wrong pretty quick :) I can understand how it seems that the numerical integration solutions out there won't work in your case, in truth they would, it's just a matter of using interpolants to create a continuous function from your discrete data. This is effectively what Simpsons method (and a few others) do for the particular case of uniform data, but it's all hidden behind the scenes so you don't realise! 
Here's what I have right now: https://pastebin.com/9mWUF6dc
It looks relatively functional but I'm getting [this](https://imgur.com/a/vEA7S) when my original (and correct final result) was [this](https://imgur.com/a/Jzqse)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/ul6SN1c.gifv** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dnif8rb) 
Failbot
I appreciate the offer and I'll PM you a cleaned up version of the code tomorrow... tonight I am grading instead. I get that it's just piecewise interpolations being fed into an integration scheme but I lack the background to understand how that's actually being done, and not having a symbolic function (or ever having worked with symbolic functions in matlab) makes really hard to apply/adapt the prepackaged solutions out there to my problem.
Removing this comment because it's wrong. 
Interesting. When I move the parenthesis next to isempty, it gives the same error, however it moves from line 11 to line 15.
Sorry I edited my comment while you wrote this: did the quotes work?
Alright, so without 's we are getting input argument error on line 11, which is "if isempty(s)". I broke it down to make it more readable. With quotes, same error but for line 19. Edit: I can't even format reddit posts.. Also, I really appreciate you taking the time to help. Thanks.
Really sorry, I'm being just an idiot. You don't need quotes inside isempty if the variable is defined, which it should be when you pass arguments to the function. Let me fix this for you since I'm really messing up. Hold on.
Yeah, I've done it every which way imaginable. It's no biggie. I'm going to beat Dr. Professor up tomorrow about it. Thanks for your help, though. Time for me to hit the hay.
When I remove your function header and run this as a script, setting the inputs to s = [] and r = 100, this works. How are you calling the function itself? You have to call it with IRA([],[]) if you want to set them both to be empty. I think I was looking for errors when your function is fine.
sorry! here is the pastebin... https://pastebin.com/WVGRMmhX
A common error, use breakpoints or go through your code manually a line at a time and check the size of the matrices. Also it would be useful to post all of your code so I can copy it directly and run it.
I'd have to see *your* version of the code and maybe source data to help debug. Not sure why the plots would be coming out like that. Maybe the source data is *really* disorganized, such that x/y sets aren't in the same format? The code I wrote above transposed x *and* y data if x was a column vector, but if one were column and the other were row, then you would get wonky plots. That or maybe there's some scaling issue that wasn't addressed in your other code? The net result is that it looks like your y-values are banding for some reason. I'd say it looks like a trig function problem, but your y values aren't +/- 1, they're just under +1 to a little below -1. **OOOHH I THINK I FOUND IT** The code I wrote above, I did all blind - no way for me to test it at all because I don't have any data sets in front of me. If you copied it directly, then in the data loading section, you copied: for currentFile = 1:nFiles name = sprintf('C:\\Users\\dell\\Desktop\\Dr. Hohenstein''s Research\\File Datas\\%d\\xCoords.txt',currentFile); name2 = sprintf('C:\\Users\\dell\\Desktop\\Dr. Hohenstein''s Research\\File Datas\\%d\\yCoords.txt',i); tempX = importdata(name); tempY = importdata(name2); if size(tempX,1)&gt;size(tempX,2) tempX = tempX.'; tempY = tempY.'; end x(currentFile,1:numel(tempX)) = tempX; y(currentFile,1:numel(tempX)) = tempY; end The problem there **is** where you're loading the y-axis data - you're loading file `i`, where you should be loading file `currentFile`. Replace: name2 = sprintf('C:\\Users\\dell\\Desktop\\Dr. Hohenstein''s Research\\File Datas\\%d\\yCoords.txt',i); with name2 = sprintf('C:\\Users\\dell\\Desktop\\Dr. Hohenstein''s Research\\File Datas\\%d\\yCoords.txt',currentFile); Sorry!
The code you posted runs fine for me, with no error (after I define a noteNumber). If you have an array of values for noteNumber, that would cause a problem. Otherwise, try using a `clear` to delete everything from your workspace and try the code again. 
You should read the documentation on `lsim` if you have questions about lsim. The quick way to get to the documentation on any topic is `doc &lt;topic&gt;`. For example, if you type `doc lsim` at the Matlab prompt you get the lsim documentation, which reads, in part: &gt; **Algorithms** &gt; &gt; Discrete-time systems are simulated with ltitr (state space) or filter (transfer function and zero-pole-gain). &gt; &gt; Continuous-time systems are discretized with c2d using either the 'zoh' or 'foh' method ('foh' is used for smooth input signals and 'zoh' for discontinuous signals such as pulses or square waves). The sample time is set to the spacing dt between the user-supplied time samples t. So, `lsim` doesn't use an ode45-type approach. It explicitly states it discretizes the system with `c2d`. If you're curious how that works - you can `doc c2d`, and read the documentation for that. The `c2d` documentation reads, in part: &gt; For information about the algorithms for each c2d conversion method, see [Continuous-Discrete Conversion Methods](https://www.mathworks.com/help/control/ug/continuous-discrete-conversion-methods.html). You can read there, in detail, about what exactly Matlab is doing when it discretizes your system. So, to your question - the difference between the sets of results you're getting probably has little to do with the choice of solver and more to do with the discretization process. If you were to read the next sentence in the lsim documentation, you would see the line: &gt; The choice of sample time can drastically affect simulation results. The documentation then goes into an illustrative example regarding the choice of sample time. If you want to reconcile your results, I would suggest you reduce the sample time of the time vector you provide to the lsim function. And, in the future, read the documentation! Matlab documentation is amazing &lt;3
This is definitely the answer - if the function is expecting inputs, you **must** provide the inputs. If the inputs are optional, then use `varargin`, as in: function [m, a] = IRA(varargin) Now you have **var**iable **arg**uments **in**putted to your function. The problem now is - if the user provides **one** argument, did they provide `r` or did they provide `s`? If they provided *two* arguments, which is which? Matlab addresses this issue in their own code by using "name-value pairs." For example, if you want to plot, you can `plot(x, y)`. There is some intelligent checking for commonly used values, but you otherwise call more in-depth plot functions with *name-value pairs*, such as `plot(x, y, 'Color', [0 0 1], 'LineWidth', 2, 'MarkerSize', 10)`, etc. So, you could call your function the same way. You could use `IRA('s', 100, 'r', 5)`, or similar. The user is required to *use the name* of the value they're trying to set, but then you can have none, one, or two inputs, and they can be in any order. Consider the following inside your code: [m, a] = IRA(varargin) % Set default values s = 100; r = 5; for currentArg = 1:2:numel(varargin) switch varargin{currentArg} case 's' s = varargin{currentArg + 1}; case 'r' r = varargin{currentArg + 1}; otherwise error('IRA: Invalid input argument %s.\n', varargin{currentArg}); end end This code looks at the number of elements (`numel()`) in `varargin`, and checks for a match of every other element. This makes the assumption that the first argument will be a name, the second will be a value, third will be a name, fourth will be a value, etc. For each name (`1:2:numel(varargin)`, or all *odd* entries in `varargin`), check if that name matches a name you're expecting. If so, the *value* for that name is the *next* entry in `varargin`, which would be `varargin{currentArg + 1}`. If you fail to match the current name to a name you're expecting, you hit the `otherwise` case in the `switch` statement, at which point you throw an error. Notice also that `r` and `s` are set to values above the `switch` case - if there are no supplied input arguments, then the entire `for` loop gets skipped and r/s remain the default values. They *only* get overwritten if a new value is provided. 
So, you got some correct answers already, about using `varargin` but from my reading of this, I would say it's more likely that your homework is expecting you to hand in empty variables instead of nothing for the default ones. I can't imagine your professor would expect you to discover `varargin` on your own. So, perhaps you're supposed to call it like this: [m,a] = IRA([], s) instead of just nothing.
MATLAB has a built in `inputparser` function, which you can use. You can find out about it [here](https://www.mathworks.com/help/matlab/ref/inputparser.addoptional.html). I like it because it is very robust, and allows for type checking and input validation. 
It more than just says "Matrix Dimensions Must Agree" it also gives you a line number. 
Oh wow! Thanks :D
A couple of things: Since `diameter` is your input, don't define it inside your function. It's an input to the function- it gets defined outside of your function and then passed into the function. Second, don't just tell us that you got an error, tell us what the error is. Now, in your case it is obvious what the problem is to me, since I've seen it a lot. But look at the error you got: Error using ^ Inputs must be a scalar and a square matrix. To compute elementwise POWER, use POWER (.^) instead. Did you try doing those things? Aka, either using `power(diameter/2,2)` or `(diameter/2).^2`? That's what it's telling you to try. Third, you want to return your results in `circle` not `diameter`. Fourth, you are writing over your results in `diameter` by placing the data in the same location. 
Thank you so much - the explanations really helped! And I got it to work :D
I have a question about your first point though. My textbook says that I should define diameter as an input in the function like this: (It said that you should always include the input in parenthesis) function area_circum = circle(diameter) Why wouldn't that be correct?
Hey, could you paste your code here? Would be easier for me to help if I know what you have done so far. Thanks :)
Indexing in Matlab is generally done with a [slice operation](https://en.wikipedia.org/wiki/Array_slicing), where you specify a start index and an end index. There is an optional increment value that defaults to 1 if you omit it. myRange = startIndex:incrementValue:endIndex; So, if you want to do something to the first 200 values, you can select all indices by: xt(1:200) This selects every element from 1 to 200, with the implied increment by 1 because the `incrementValue` is omitted. If your time vector `t` is a different size than 200 elements, then you'll need to select the first 200 elements of time as well. Then you can do the following: startIndex = 1; endIndex = 200; amplitude = 5; freq = 1500; xt(startIndex:endIndex) = amplitude*cos(2*pi*freq*t(startIndex:endIndex));
Okay so originally, I have my xt being a pulse function. That's this code here: clc; clear Deltat = 1e-5; T = 1e-3; tfinal = 5*T; pulsepts = round(T/Deltat); M = 10*pulsepts; fs = 1/Deltat; Deltaf = fs/M; m = 0:1:M-1; tsec = m*Deltat; k = 0:1:M-1; fHz = k*Deltaf; xt = zeros(1,M); pulse = ones(1,pulsepts); xt(1:pulsepts) = pulse; Xk = fft(xt); Xf = Deltat*Xk; magXk = abs(Xk); magXf = abs(Xf); subplot(211), plot(xt), grid xlabel('m'), ylabel('x(m \Delta t') subplot(212), plot(magXk), grid xlabel('k'), ylabel('| X[k] |') However now I need to make xt my cosine function listed above but only for the first 200 points Edit: that pasting is garbage and I'm sorry haha
I just wanted to add that the same colon operator will generate a vector of values, so you can use it for any vector. I would argue that the default increment of 1 is probably the most used. While it can be anything, you need to use *integer values* when indexing a matrix, so it *must* be a whole number when used for matrix slicing.
Oh okay. That helps! I'll give that a go. I appreciate it
That part isn't the problem. The problem is the first line of your function you say `diameter = [1,2,3,4,5]` which is not what you want to do. Diameter should be defined outside of your function, and then passed inside. 
Yeah it's a bit hard to read, no probs. In matlab you can "select" the element of the array you want by specifying indexes xt(1:200) = *your cosine function*(1:200); You must specify that you want only 200 values of the cosine as well or matlab will display an error. 
np :)
Awesome. Thanks, I really appreciate it
Well this one is quite easy. Ill try to break it down for you: In this Programm you have a matrix A and want to know how much all entries added together are. Suppose you have A = [1, 2, 3, 4 ... 5, 6, 7, 8 ... 9,10,11,12]; First the Code will initialize the variable for the end result total = 0; The you have a for-loop which will run over the first dimension (downwards). size(A,1) gives you the length of the first dimension of A, in this case 3. for i=1:size(A,1) Because of the for-loop the next part will be excecuted for every row of the matrix. There is another for-loop running over the second dimension for j=1:size(A,2) thi next part will be run for each entry (j-for-loop) in each row (i-for-loop) and will add the current value of the matrix to the sum of all previously viewed values total = total + A(i,j); end now you have ended the j-for loop because it has run through all entries in the row i. The i for loop will commence above working on the next row and now you end the i-for-loop because it has run over every row in the matrix end Propably the easiest way to understand that is to set a breakpoint on the beginning of the script (in the line total = 0;) and then press run. Now you can step through the code linewise by pressing F10 (i think) You can now hover the mouse over each value for each step and see it progress
You can find documentation with `doc &lt;thing&gt;`, as in `doc size`, where you can read: &gt; szdim = size(A,dim) returns the length of dimension dim. So, `size(A, 1)` would return the size of the first dimension and `size(A, 2)` would return the size of the second dimension. Matrices are defined as &lt;row, col&gt;, so `size(A, 1)` returns the number of rows and `size(A, 2)` returns the number of columns. The loop, then, selects a row, then runs a loop over each column. It then selects the next row, iterates over each column, etc. For each &lt;row, col&gt;, or `A(i, j)`, it accumulates a total. You could also do the same with `sum(sum(A))`. Again, try `doc sum` and read: &gt; If A is a matrix, then sum(A) returns a row vector containing the sum of each column. So, the inner `sum(A)` sums each column of A, which results in a row of sums, and then the outer `sum()` adds all of those columns (all of the "subtotals").
as for your second part of the question: "are the for-loops necessary here?" If you gave this code to me as your instructor I would scold you and tell you to write: total = sum(sum(A)); Its faster, less code and better to read and understand
Last I checked (which was years ago), sum(A(:)) was even faster. 
Welcome to /r/matlab. What is your Matlab question?
I think the best thing for you to do would be to draw a block diagram (flow chart) of how you think this code should work. Then put equations on that flow chart. Then try to write the code using that as a guide. Problems I notice in your loop: 1. First two lines in the loop - `cx` and `cy` are defined in a loop as a function of `pt1rot` and `pt2rot`, which are not updated in the loop. I'm assuming the `c` in those terms is supposed to be "current," but again - those positions are never actually updated. 2. The next line in the loop - `pose` is defined by the (static) `cx` and `cy` variables, and then also by some term `theta`. Guess what isn't being updated in the loop? `theta`. Your "pose" is comprised of three variables that are never updated. Doesn't matter, though - `pose` isn't ever used, either. 3. The next two lines in the loop - `xerror` and `yerror` aren't ever updating because your current positions aren't ever updating. 4. The next line in the loop - `thetaerror` isn't being updated because `theta` isn't. 5. The next few lines in the loop look like an attempt to limit the current rotation angle `steer` to something at or below some maximum `steeringangle`, but there's no absolute value check on that. That is, *positive* `thetaerror` terms are bounded, *negative* `thetaerror` terms can be as large in magnitude as they wish. 6. A bit later, you calculate `thetadot` (where does that formula come from?), but you never use `thetadot` to update `theta` so there's no point in calculating it. 7. The next two lines you calculate `x` and `y`, which appear to have no relationship to `cx` or `cy` and also don't accumulate. That is, instead of `x = x + xdot*dT`, you're just treating the **path** as though the object had *always* been moving at its current heading. This is done with the call to `time`, which is actually the current time. 8. Also in that operation (because it's totally hosed), you have some set of rotated points, `pt1rot` and `pt2rot`, and you are multiplying that by some distance, which is `xdot*time` or `ydot*time`, which again would be the current position delta *if the object had always been travelling at that speed and heading.* My point is you are *multiplying the two together.* You are multiplying a distance by a distance. This is of course incorrect. So again, everything I read here is botched, and I would highly recommend going back to a high-level algorithm first, then write the detailed equations of how you implement the steps given in the algorithm, then work on translating that to code. But again, as I hint in the top-level reply - [there's not really a *Matlab* problem here](https://en.wikipedia.org/wiki/Garbage_in,_garbage_out). 
Thanks! Sorry for dropping the ball on the documentation, I'm usually pretty good with that but I clearly got lazy in this instance. Thank you very much :) 
So I haven't calculated your exact numbers, but looking at it, you never define `I_d` if `V_ds == V_gs - V_th` Is it possible you're hitting that constraint? 
This. You have two if statements and if your conditions do not satisfy either one then I_d never is defined. It's good programming practice to make a catch all or initialize I_d as a zeros vector. In addition you're comparing a vector to a scalar and not on an element by element basis. The simple way to do what you want is to loop through on V_ds and element by element assign corresponding elements of I_d per your conditionals. Or be much cooler (and efficient) and do all of this with boolean indexing.
Do you need a symbolic solution? Or is this going to actually control a robot (and therefore need a numerical answer)? 
It's possible, I'll see what happens if I change one of those "&gt;" to "&gt;=" EDIT: No dice, same error.
Try initializing I\_d to some default value, since not all floating point comparisons follow normal math rules.
I've tried to make it more readable. You just hit 'enter' every time you see a ';'
Tried it, set it initially equal to 0. The plot that the file returns is just blank. It never tries to change I_d.
No problem :)
 Edit your post and put four spaces at the start of each line of code. 
For input to work as a string, you need to write it as the following: course = input('saystuffhere', 's'); The case statements with brackets also need apostrophes around them in order to represent strings.
Also, try invoking the input function that returns a string: str = input(prompt,'s') And your cases definitely need to be in quotes. 
So, as has been mentioned, neither condition is evaluating to true. Also as was already said, this is possible in floating point, if I'm not mistaken, even though it isn't possible in regular math with real numbers.
Thank you! it worked. Although it needed quotations instead of apostrophes. 
Thank you. I know this program is super easy but that's what happens when your teacher gives you a problem without showing how to use a string in a switch construct. 
I just learned about the trouble with floating point in a Python/Java programming class...tricky stuff. I suppose I'll just solve by hand for the V_x that leads to the switch between saturation and triode modes, and then just have two separate calculations stuck on one graph.
just repeating /u/shtpst, if you add 4 spaces to the beginnginging of each line reddit will display it as code: %This program accepts the course entered by the user %and tells them something. (Not really specified in the instructions) clear all; clc; course = input('Select a course from the following by typing in: English, History, Astronomy, or Psychology \n'); switch course case {English, english} disp('You have chosen English.'); case {History, history} disp('You have chosen History.'); case {Astronomy, astronomy} disp('You have chosen Astronomy.'); case {Psychology, psychology} disp('You have chosen Psychology.'); otherwise disp('Your choice is invalid. Please try again.'); end Error Message: Error in ChoosingCourse (line 10) course = input('Select a course from the following by typing in: English, History, Astronomy, or Psychology \n');
Particularly excited to try this: &gt; Generate CUDA code from MATLAB code for deep learning and embedded vision and run on NVIDIA GPUs. In particular: &gt; By using GPU Coder with Embedded Coder®, you can further optimize code efficiency and customize the generated code. Embedded Coder enables you to verify the numerical behavior of the generated code using software-in-the-loop (SIL) execution to verify the generated CUDA code as deployed on your embedded GPU. This should greatly speed up MIL/SIL simulations.
If it were me, I would be interested in finding out what values of V\_ds, V\_gs, and V\_th are causing this issue, since for most...well, possible values of the current, I would think this wouldn't happen. Maybe you have a math error elsewhere. EDIT: Wait, are these vectors? In that case, I think &gt; and &lt;= compare all the values and only return true if it is true everywhere...or something. So maybe it isn't a floating point issue. It's actually been a while since I used Matlab.
Thank you for taking the time to respond. It's piqued my interest and I will research it, but as the post below states, that's way over my head right now. Again, thank you.
You were absolutely correct. I was supposed to test the variable at IRA([],[]). That still returned an error when I did that. The assignment was turned in on time so I cant improve on the grade I will receive. But, I would still like to hash that error out.
Hey, you were correct about calling it with IRA([],[]).. I was just using IRA()
They're certainly keen on the machine learning stuff - also check out the text analytics toolbox, might be interesting. Live editor is improving but probably still horribly slow to use.
No worries :) The gist is, if you define the function to require an input, then those inputs are mandatory. If you don't want to provide a mandatory input to a function, then you can try using an empty matrix operator `[]` in place of an input, *but your function had better handle empty inputs.* If you don't care about a mandatory *output* of a function, you can ignore outputs with `~`. So, for example, your function is defined: function [m,a] = IRA(s,r) If you only care about getting the `a` value, and you only want to provide an `r` value, you can call it: [~, a] = IRA( [], r); This all still may be beyond the scope of what you're doing, but it's always nice to get tips. Later you may remember, "Oh yeah, I think there's a way to do ... " that will encourage you to try to look up the proper way to do it, as opposed to trying to roll your own. 
I'll give you a short example that you can tailor and/or ask more questions with. syms a b c d; myMat = [a, b; c, d]; myEqn = det(myMat) == 0; aSoln = solve(myEqn, 'a'); bSoln = solve(myEqn, 'b'); cSoln = solve(myEqn, 'c'); dSoln = solve(myEqn, 'd'); Now you have a solution for each variable *with respect to the others*. That is, it will tell you what `a` needs to be to drive the determinant to zero given an arbitrary `b`, `c`, and `d`. 
Does: X = linsolve(A+B, C) work? See https://de.mathworks.com/help/symbolic/linsolve.html 
I think there's a subtle problem here that's getting you the wrong answer. Going through your code: syms x f = @(x) sin(x) + 2.*cos(x) All good here - you can now provide a number to `f` and get an answer, as in: &gt;&gt;f(pi) ans = -2.0000 Then you go on to define a derivative: derivative = @(x) diff(f(x), x); The problem here is that you're passing the input value `x` to the function `f` there. This results in *evaluating* `f(x)` *first*, and then when you go to take the derivative, it also substitutes the input value for the second x. That is, when you call: derivative(1) That is equivalent to calling: diff( f(1), 1) and the answer there is `[]`. The way around this is substitute the input to your derivative equation into the derivative itself. If you were to try: derivative = @(y) subs(diff(f, x), y); Then you can do: &gt;&gt; derivative(1) ans = cos(1) - 2*sin(1) But that doesn't give you a *number*, it gives you a *symbolic expression*. You can get a number by using `double()` ([don't use `eval`](https://www.mathworks.com/help/symbolic/release-notes.html) - check Functionality being removed or changed). If you want a number, wrap the above in a `double()` function: derivative = @(y) double(subs(diff(f, x), y)); Now you do: &gt;&gt; derivative(1) ans = -1.1426 This is the long way to get to your answer. If you find yourself stringing together functions like this, you should probably spend the time to Google around and find the correct way. In this case, there is a function called [`matlabFunction`](https://www.mathworks.com/help/symbolic/matlabfunction.html) that will turn a symbolic expression into a function handle. Now you can do: derivative = matlabFunction(diff(f, x)); Done!
thanks i think this works!
I would instead use an if-else block and a series of strcmpi(course, string).
I spent a lot of time writing a `guide` program, only to have Matlab corrupt everything. I managed to recover, spent more time working on it, to then have Matlab corrupt everything again. Now I make my GUIs in a notebook. I use grid paper and sketch what I want the GUI to look like. I define widths and heights by name, and then use those names in the definitions of uicontrol objects. For example, I have a tool I wrote in Matlab to do some point cloud processing. I have two projections of the data, displayed as side-by-side figures. On the outboard edges (left of the left figure, right of the right figure), I have two sliders that I can use to set min/max values, and then I also have two sliders under each figure, also for setting min/max values. Those sliders drive a region "cube" that can be used to select, magnify, crop, etc. the point cloud. There are buttons that select what the views are; they default to the left plot being a top view and the right plot being a front view, but you can change it to any combination of top/front/side. On graph paper, I drew all of the uicontrol objects. I figured the total width of the window in the number of grid squares on the plot, and I could then define `plotSideMargin` as being how many squares wide the side margin was relative to how many squares wide the figure window was (again, all on grid paper before touching Matlab). I did the same for the `plotWidth`, `plotHeight`, etc. This allowed me to do the following: (note this is a partial, non-functioning snippet because the work I do is proprietary) function ProjectName % Initialize the base project. close all; ProjectGUI = figure('Visible','on','Units','normalized','Position',[0.1 0.1 0.8 0.8],'Name','Project GUI v1.5','NumberTitle','off'); % Disable Matlab figure tools set(ProjectGUI,'menubar','none'); % Setup GUI proportions. listBoxHeight = (1-plotHeight-1.5*plotBottomMargin); plotLeftPosition = [(0+plotSideMargin),(0+plotBottomMargin),(plotWidth-2*plotSideMargin),(plotHeight-plotBottomMargin)]; plotRightPosition = [(1-plotWidth+plotSideMargin),(0+plotBottomMargin),(plotWidth-2*plotSideMargin),(plotHeight-plotBottomMargin)]; % Generate the GUI. % - Axes handles.plotLeft = axes('Units','normalized','Position',plotLeftPosition,'YAxisLocation','right'); handles.plotRight = axes('Units','normalized','Position',plotRightPosition); % - Sliders handles.plotLeftvSlider1 = uicontrol('Style','slider','Units','normalized','Position',[plotSideMargin/4,plotBottomMargin,(plotSideMargin/4),(plotHeight-plotBottomMargin)] ,'Min',0,'Max',1,'Value',0); handles.plotLeftvSlider2 = uicontrol('Style','slider','Units','normalized','Position',[(plotSideMargin/2),plotBottomMargin,(plotSideMargin/4),(plotHeight-plotBottomMargin)] ,'Min',0,'Max',1,'Value',1); handles.plotRightvSlider1 = uicontrol('Style','slider','Units','normalized','Position',[(1-plotSideMargin/2-plotSideMargin/4),plotBottomMargin,(plotSideMargin/4),(plotHeight-plotBottomMargin)] ,'Min',0,'Max',1,'Value',0); handles.plotRightvSlider2 = uicontrol('Style','slider','Units','normalized','Position',[(1-plotSideMargin/2),plotBottomMargin,(plotSideMargin/4),(plotHeight-plotBottomMargin)] ,'Min',0,'Max',1,'Value',1); handles.plotLefthSlider1 = uicontrol('Style','slider','Units','normalized','Position',[plotSideMargin,plotBottomMargin/4,(plotWidth-2*plotSideMargin),(plotBottomMargin/4)] ,'Min',0,'Max',1,'Value',0); handles.plotLefthSlider2 = uicontrol('Style','slider','Units','normalized','Position',[plotSideMargin,0,(plotWidth-2*plotSideMargin),(plotBottomMargin/4)] ,'Min',0,'Max',1,'Value',1); handles.plotRighthSlider2 = uicontrol('Style','slider','Units','normalized','Position',[(plotWidth+plotSideMargin),0,(plotWidth-2*plotSideMargin),(plotBottomMargin/4)] ,'Min',0,'Max',1,'Value',1); handles.plotRighthSlider1 = uicontrol('Style','slider','Units','normalized','Position',[(plotWidth+plotSideMargin),plotBottomMargin/4,(plotWidth-2*plotSideMargin),(plotBottomMargin/4)] ,'Min',0,'Max',1,'Value',0); handles.pointSizeSlider = uicontrol('Style','slider','Units','normalized','Position',[(plotWidth+2*plotSideMargin),(plotHeight+3*plotBottomMargin/4),(4*plotSideMargin),(plotBottomMargin/4)] ,'Min',0.5,'Max',50,'Value',handles.markerSize); % - Radio button groups viewGroup = uipanel('Title','View Setup:','Units','normalized','Position',[plotSideMargin,plotHeight,(plotWidth-2*plotSideMargin),plotBottomMargin]); viewButtonGroup = uibuttongroup('Parent',viewGroup,'Units','normalized','Position',[0 0.5 1 0.5]); viewSparsityGroup = uibuttongroup('Parent',viewGroup,'Units','normalized','Position',[0 0 1 0.5]); handles.topAndSideView = uicontrol(viewButtonGroup,'Style','radiobutton','Units','normalized','Position',[(1/12+0/3),0,(1/4),1],'String','Top and Side','Value',1); % Remember, viewButtonGroup is the parent. handles.topAndFrontView = uicontrol(viewButtonGroup,'Style','radiobutton','Units','normalized','Position',[(1/12+1/3),0,(1/4),1],'String','Top and Front','Value',0); % Position is set relative to the parent, handles.frontAndSideView = uicontrol(viewButtonGroup,'Style','radiobutton','Units','normalized','Position',[(1/12+2/3),0,(1/4),1],'String','Front and Side','Value',0); % so 1 = 100% _of the parent._ (viewButtonGroup) handles.verySparseView = uicontrol(viewSparsityGroup,'Style','radiobutton','Units','normalized','Position',[(1/12+0/3),0,(1/4),1],'String','Very Sparse','Value',0); handles.sparseView = uicontrol(viewSparsityGroup,'Style','radiobutton','Units','normalized','Position',[(1/12+1/3),0,(1/4),1],'String','Sparse','Value',1); handles.allPointsView = uicontrol(viewSparsityGroup,'Style','radiobutton','Units','normalized','Position',[(1/12+2/3),0,(1/4),1],'String','All Points','Value',0); % Assign callbacks. set(handles.loadButton, 'Callback',@loadButton_Callback,'Interruptible','off'); % Housekeeping; mostly configuring groups of GUI objects. handles.ySlider(1) = handles.plotLeftvSlider1; handles.ySlider(2) = handles.plotLeftvSlider2; handles.ySlider(3) = handles.plotRighthSlider1; handles.ySlider(4) = handles.plotRighthSlider2; % Write all data. guidata(ProjectName,handles); return; The point is, you can define everything yourself in the script. It's a little tedious at first, but I very much prefer doing it this way now. I think the key thing here is making sure that you set `'Units', 'normalized'`, and then you can use a scale of [0, 1] to define a percentage of whatever the parent is. I say parent because, while the default parent is the figure window itself, you can set it to be anything. Note the radio buttons definition above - I define a `viewGroup` that creates a `panel`. I then define two button groups that take up bottom 50% or top 50% *of the panel*. Then I define a set of three buttons each that consume 33 percent *of the button group size*. I don't need to do the math to find an absolute coordinate for anything - again it's especially easy to do from a sketch because you can define objects to be proportional to their parent components. I think that, if you tried to do the same with the drag-and-drop mouse input, you'd have a hard time and might actually take longer to get everything *just so* than if you just sucked it up and wrote the values for everything. But that is advice I would give to anyone regarding anything even tangentially related to programming - you had better have an idea of what you're setting out to do before you start.
I write them myself. Cleaner more readable code FTW and no need to store a fig file. 
Plot first graphic hold on; Plot second graphic hold off;
https://nl.mathworks.com/help/matlab/ref/fft.html The fft documentation contains an example that seems to be close to what you need. Furthermore, this will give you some insight into the fft inner workings http://www.gaussianwaves.com/2015/11/interpreting-fft-results-complex-dft-frequency-bins-and-fftshift/ Also, your google search for cyclical data is confusing because the fact that it is cyclical is irrelevant for the Fourier transform. Try something like 'matlab spectral analysis' --&gt; https://nl.mathworks.com/help/matlab/math/basic-spectral-analysis.html If you're interested in the theory/math behind the transform take a look at this https://www.dsprelated.com/josimages_new/mdft/img1684.png The fft command basically computes the DFT.
+ Thank you for your reply! Is it problematic that I do not know the sampling frequency, or that the number of samples will differ between experiments? What strikes me as weird is that fft only takes into account the y data, and not the time. Is this correct, or have I misunderstood something? How can you then account for for a non-constant sampling frequency? 
I have always used App Designer, and have had fairly good luck. My main complaint is that the mlapp file generated is a binary and doesn't store in version control very well. I've taken to making a copy of the mlapp file and pasting it into a text file so I can do diffs. 
&gt; Is it problematic that I do not know the sampling frequency Normally this isn't a problem, you dont need the sampling frequency to perform the transform. However, if you wish to relate the results of your transform to something with physical meaning, you do need the sample frequency. Suppose you get a result like this https://www.researchgate.net/profile/H_Oezgueven/publication/233858387/figure/fig4/AS:300104444596236@1448561883970/Figure-4-Frequency-spectrum-of-the-laser-vibrometer-measurement.png If you want to label the peaks, like in the picture 33.75hz 67hz 101hz etc, you need to know to what actual frequency the peaks correspond. (the frecency axis is directly derived from the sample frequency, so without sample frequency you will get your data, but you likely cant say anything useful about it) &gt;or that the number of samples will differ between experiments? This doesnt matter. More samples means higher resolution, but you can basically perform the fft with any number of samples. &gt; How can you then account for for a non-constant sampling frequency? This is a fundamental requirement of Fourier analysis, the time between samples MUST be constant. You could try some interpolation such that you get a constant sample time, but this is actually 'faking' data, which will ofcourse negatively influence your result. Have you considered the 'primitive' approach? Count the number of completed sine waves and divide by the total time. This will give you a good approximation of the fast oscillation present in your data. &gt; What strikes me as weird is that fft only takes into account the y data, and not the time. This is basically the point of Fourier transform, you transform from the time domain to the frequency domain. Just like when plotting data in the time domain you dont need to account for the frequencies present in your data, you dont take into account time when plotting in the frequency domain. (Note that the time is present in your sampling frequency, so you're not discarding the element of time you're just using it differently) 
Thank you for your quick response, again. Since I currently don't have a way to adjust my sampling frequency to a set number yet, I will have to do it the 'primitive' way like you suggested. Do you think findpeaks() will work? Your answer cleared up a lot of other questions I had, so thank you.
No problem :) I've never used findpeaks so you'll have to try that yourself
Taking a quick look at your data, the time between samples is actually always around 16 ms (sometimes 15 17 18) but it is still fairly constant. Maybe you could find the true average (i've only checked the first ten entries or so) and try to perform the fft anyway. Note that this is pure speculation on my part (i've never tried something like this), and it may work only for this case (or not at all :p ) since the time between samples is fairly constant. If you do get a result, you could quickly compare it to the 'primitive' method to see if youre on the right track.
Yes, it does look like that. I've gone through all the values, and the sampling frequency has an average value of 16.67 , but it never deviates more than ±2 it seems. I tried changing the fs value in this script to 62, but I still get a very strange result. fs = 62; % sample frequency (Hz) t = 0:1/fs:10-1/fs; % 10 second span time vector x = data.y y = fft(x); n = length(x); % number of samples f = (0:n-1)*(fs/n); % frequency range power = abs(y).^2/n; % power of the DFT plot(f,power) xlabel('Frequency') ylabel('Power') This is from one of the examples you linked me. I think the error lies in the t value, but I'm not quite sure how to manipulate it without the script breaking, as I haven't fully understood that parameter. [This](https://i.imgur.com/XYS5aDh.png) is the result I'm getting.
I'm guessing your result is actually reasonable. Your huge spike at the start is likely due to your DC offset. Try removing this first and then plotting again. You might also want to plot power in log-scale: DCcomponent = power(1); power(1) = 0; semilogy(f,power);
Dont have time to fully check your code right now, but try setting the first fft result to 0. (it doesnt contain any frequency info, it corresponds to the static gain) basically add y(1) = 0; before you start plotting. Since this value is 1e7, it is possible your result is simply invisible on this scale. Also take into account your Nyquist frequency, if you sample at 62 Hz you can only display/detect frequencies up to 62/2=31 Hz. for some reason this is not accounted for in the first picture in the 'basic spectral analysis' example but it is fixed in the second picture you see. (goes from -50 to 50 Hz) 
I took /u/niechos approach, and added y(1) = 0; Then plotted power in log-scale, which gave me [this](https://i.imgur.com/qGdNYkA.png) Any ideas how to interpret this monstrosity?
Ah, alright. I added y(1) = 0; like you suggested, and /u/RustedPontiac suggested to plot it as semilogy, which gave me [this](https://i.imgur.com/qGdNYkA.png) thing. It looks like I'm close - are the two tops the frequency of the signal? I'm still getting that pesky value at 1e7-ish, which can be seen in the picture
Make the interface in GUIDE, then convert it to a programmatic interface via [fig2m](https://www.mathworks.com/matlabcentral/fileexchange/14340-convert-fig-to-matlab-code). That way I can make them easily in GUIDE, configure them how I want, then ditch all the things I don't want to deal with in GUIDE in the backend.
Are you sure you removed the first value correctly? I stated it wrong, add y(1) = 0; before power = abs(y).^2/n; % power of the DFT OR try /u/RustedPontiac solution just before the plot command.
Oops, that fixed it! Silly mistake, thanks for pointing that out.
As for your monstrosity, the jitter like behaviour is likely the result of us screwing with the sample time. (we introduced a lot of noise by messing with the data) you need to fix your frequency axis before you can sensibly interpret the results. (Nyquist frequency)
So what do you get? Im curious now :p 
Using normal plot now I get [something way more sensible](https://i.imgur.com/HAju1fJ.png) Zooming in on the first portion of the graph gives me [this](https://i.imgur.com/kpaTvXV.png) Like you explained previously I need to know the exact sampling frequency if I want to relate the results to reality, so I'm going to count the oscillations to check if the frequency matches somehow. EDIT: I found a top about every 32nd y-value using, using the 'primitive method'.
Notice that the peaks are mirrored (positive and negative frequencies) This is a bit of a shortcut (but thats fine if you're just interested in results): -You can remove the second half of the data, since it is only a mirror of what you already have -The remaining data should span between [0 fs/2] on the frequency axis 
Thanks, I just used xlim with the values you gave me, and it worked just fine. I zoomed in on [this](https://i.imgur.com/Oot0i7A.png) to get the top-value - just to be clear, this says that the frequency from my data was about 1.9 Hz? I can't thank you enough for all the help you have given me tonight! :)
Yeah this would indicate a strong 1.9Hz oscillation in your signal xlim is fine to hide the mirrored data. However I still think your frequency axis is wrong. (and you cant fix that with xlim) based on your 'normal plot' picture, the single sided spectrum (so without the mirror) goes from 0 to 62Hz. THIS IS IMPOSSIBLE!!! If you sample at 62Hz, you can only display frequencies up to 31 Hz. So basically you need to divide your axis by 2. try f = (0:n-1)*(fs/(2*n)); % frequency range
Thank you for your time and nice explanation :)
I'm not quite sure I understand what you mean when you say that I have to divide my x-axis by 2. Since xlim doesn't fix it, I take it you don't mean just removing half of it? Or do you mean I have to divide all the x-values by 2? Like this? f2 = f/2 plot(f2,power)
There are two things goin on right here 1) you have mirrored data, so you can remove/ignore/not display half of it, e.g. using xlim 2) your current frequency axis is incorrect, and your solution would indeed fix it. (If you've fixed it correctly, xlim([0 31]) should display exactly half your data, i.e. obscure the mirrored data)
Alright, thanks a lot! I just plotted the same thing side by side, one zoomed in. [Link](https://i.imgur.com/4H1Q3aC.png) Tonight I went from nothing, to finding the frequency (which I think is 1.898?), which was all I needed. Thank you so very much for your patience and help!
No problemo :) However I think you're still making a mistake somewhere :p Before you fixed the frequency axis, you found a value of 1.9. Now you claim youve fixed the frequency axis by dividing by 2, but you still get 1.9???
Uuuh, I think matlab didn't update my code right away before executing it. [This](https://i.imgur.com/zoxseSD.png) time it says 0.9482 , which should be half the previous value. Posting full code here just in case, and for documentation. fs = 62; % sample frequency (Hz) t = 0:1/fs:10-1/fs; % 10 second span time vector x = data.y y = fft(x); n = length(x); % number of samples f = (0:n-1)*(fs/n); % frequency range y(1) = 0; % remove first value power = abs(y).^2/n; % power of the DFT f2 = f/2 figure subplot(1,2,1) plot(f2,power) xlabel('Frequency') ylabel('Power') xlim([0 fs/2]) subplot(1,2,2) plot(f2,power) xlabel('Frequency') ylabel('Power') xlim([0 5])
Np. I figured it would be better to explain *why* the code isn't working than to just give you `matlabFunction` and be done. 
I'm excited that we can finally depend on `eigs` returning eigenvalues in descending order, instead of it normally being in descending order but not always. 
Script or function? Script basically executes every line one by one. As long as you load the necessary data in your workspace, and copy paste every command you did, it should be fine; variables will be in your workspace. If you wanna define a variable, when you write `a = eye(5);` you will get a variable called a that is an identity matrix in your werkspace after you finish running your script. You will have to remove the trailing &gt;'s. If you wanna access a variable used in a function, then output that variable. 
The issue is is that some variables are defined using functions and the polyfit command. Would it just be easier to paste my code?
Yes, just paste your code.
The argument to input is the message that is displayed to the user, now you have a line that will prompt the user to input something (the prompt message you have is '45.789'), if you just press enter without typing anything then you will get an empty matrix. This would be less confusing x = input('Enter a real number:'); Or if you want x to just equal 45.789 x = 45.789; 
Check documentation for input(str). The string in input(str) is nothing more than the text for a user. You are supposed to enter the number before hitting Enter.
For starters. The yellow highlighting is a warning. Matlab always tells you Why it is giving you an error (red) or a warning (yellow). Each line with a problem will have a yellow or red dash on the right hand side of the script editor. Mouse over this coloured box to get a description of the problem. If there is even 1 error in your program then a green square in the top right will turn either yellow or red. Again mouse over this to get a breakdown of all your problems. For your highlighted equals signs in your case it is likely because you did not suppress your output. If you type x = 5 in a script then the command window will print x=5 everytime it is run. This is not so bad in this example but if x is a huge tensor then this will be slow and horrible to use. To suppress your output add a semicolon to the end of each line that produces output. As for your error I can't guess at that without seeing the code. If you want more help share the code and share the error you receive from matlab. 
When you read the documentation for "input", what was unclear to you? It's easier to help if you explain what you are actually confused about, otherwise all we can do is just tell you what the documentation already told you, and clearly that didn't help. 
You can define a variable in a script just like you can anywhere else. What error do you get? The whole point of the error message is to tell you precisely what went wrong. It even tells you what line caused the error. Don't ignore them - fix the problem. 
GUIDE is a nice tool for learning or to throw something together in a pinch, but it's not well-suited for complex applications. You'll always be limited by the binary fig file (and yes, you can have it automatically converted to a disgusting mess of a script, but that's not manageable). It's also common to just stuff all your code into the accompanying m-file and use "handles" to store your data, but that becomes a complete mess for anything but the simplest GUIs. It also uses setappdata and getappdata, which can be very slow if your "handles" struct gets to be multi-GB in size. If you're serious about making GUIs, learn how to use the [GUI Layout Toolbox](https://www.mathworks.com/matlabcentral/fileexchange/47982-gui-layout-toolbox). Layouts allow you to gracefully mix fixed-size and variable-size components without having to explicitly specify anything's position. The GUI is created in a function that returns only the handles necessary to control the UI (i.e. don't include handles to static text labels), and you call that function in the constructor of a controller class. The controller object maintains both your handles and your data and callback functions are tied directly to the methods of the class. This gives you access to your data without using setappdata/getappdata. For more complex GUIs, you may have the main controller hold additional custom objects used to delegate functionality away to more specialized components. There's a bunch of ways to go about creating a GUI, and most of it comes down to your application. Is it just a one-off thing you need to do to solve a problem in the short-term? GUIDE is great for that. Is it something you plan on sharing with other people and/or maintaining over time? Then it's worth taking the time to write it programmatically and maintain it like any other piece of software.
You have a problem. You post a solution. What is your question? What about your code isn't working?
Can you draw a picture of what you want to do? I'm having a hard time imagining what you're asking for. 
Basically, I have this measurement: https://i.imgur.com/s7iD3vv.jpg What I want to do is sort of make a horizontal disection so that you plot these values in under the red line: https://i.imgur.com/0fVqWih.png?1 This (in this case) would result in a plot like this: https://i.imgur.com/l0OyAZQ.png But to average out a things, I want to combine a couple of vertical lines. *** A bit off-topic, but since I'm new to this: why do I see a lot of numbers displaying when I do imread() and they never seem to stop going?
I would use the delete key. Most people prefer backspace, I think; but both will work. 
&gt;A bit off-topic, but since I'm new to this: why do I see a lot of numbers displaying when I do imread() and they never seem to stop going? Because you're ignoring the warning that the editor is giving you. That squiggly yellow line isn't just for decoration. 
You're looking for the documentation on "indexing" and the function "mean". 
No that's a terrible idea. This is exactly what "switch" is for. 
This is MATLAB, which is already full of terrible ideas. 
I'm sorry, but I'm not getting any squiggly yellow line. Not when I run/edit my script, nor when I'm just using the command window.
No. That's what happens when you don't read the documentation. Your professor doesn't actually need a script to ask him what class he's taking. What he's trying to do is teach you how to problem solve on your own by learning something very simple, like a switch statement. He's hoping you'll read the documentation and teach yourself about "input" and "switch". This is how college is going to be. You should accept it sooner rather than later, and start trying to figure things out rather than expecting the solution to be handed to you. 
Not really. 
Then maybe you're not assigning the output of imread to a variable, which is another problem all together. Statements that do not end with a semicolon will produce display their output directly to the console. 
Wow, I'm fully retarded and didn't know about the semicolon. Thank you so much!
Any time you don't use it in the editor, you get a warning. Don't ignore the warnings in the editor, they're there for a reason. 
I'm not getting a real answer from my last line of code. and in the assignment it says to calculate both in degrees and in rad
What does that mean, "not a real answer"? You're using a symbolic variable. Matlab has no way of knowing if `a` is supposed to be real or not; this is why the `conj(a)` appears in the result. If you intend for `a` to be real, you can add the line: assume(a, 'real'); Then when you do: &gt;&gt; angle = acos(dot(v,w)/(norm(v)*norm(w))) angle = acos(((a + 1)*(a + 2) + 12)/((abs(a + 1)^2 + 8)^(1/2)*(abs(a + 2)^2 + 26)^(1/2))) But again - this is expected because you're using a symbolic variable. This **is** the real answer. 
Why not use IRC? Discord isn't open software.
&gt; I have a time series recorded for 30 days with 1Hz sampling frequency Okay &gt; and I need to observe data in frequency domain from 0.0001 Hz to 0.1 Hz. ~~You can't. You don't have any data in that range.~~ EDIT: I'm an idiot. Disregard.
alright, thanks for the info, im quite new to matlab and i have no way to check if what i am doing is correct.
Seems you try to write a symbolic function. You can define your function: angle(a) = acos(dot(v,w)/(norm(v)*norm(w))); Then you can use the function like angle(5) ans = acos((9*44^(1/2)*75^(1/2))/550) The answer is in symbolic format. To convert it to numerical, use ans=double(angle(5)); ans = 0.3481 If you want a function which you input all four vectors manually, it will be a whole new question.
He absolutely does. 0.1 Hz is well below his Nyquist limit of 0.5 Hz, and 0.0001 Hz is a period of about 2.7 hours, which will be quite well sampled over 30 days. 
Merge which spectra? The ones calculated using different windows? No there's no good way to merge them. Think about what windowing does and what a merged spectrum would be. I mean you could add or average them if you want to, but it would be pointless. 
If you don't want a symbolic variable in there, why did you put it there? 
It's a school assignment
Is the assignment to put a symbolic variable in there? Then why do you want to get rid of it? Is the assignment not to give a symbolic answer? Then why do you have a symbolic variable in there? You can't have it both ways. 
On the sidebar of this subreddit.
I thought merging spectras with different window lengths since the difference between my lowest frequency and the highest is very big. maybe large window loose some detail in higher frequencies. The data is aperiodic and I don't know if I'm doing wrong with large window lengths. However, I'm sure from the frequency band I should look from previous works I've read. But i don't know if it is some valid thing or something completely wrong. Maybe it's better to try choosing a window length as narrow as it can be but cover enough data for the lowest frequencies. Thanks for answering.
Ah shit, you're right. I don't know what I was thinking. Basic math - my only weakness!
but, be aware that the color reduction of the matlab export is quite poor. also the size is quite inflated. I received signifcant better results with intermediate processing: e.g. exporting as numbered PNGs, then importing as layers in GIMP and exporting as GIF there. The color depth reduction algorithms there are better. For size reduction use gifsicle. https://www.lcdf.org/gifsicle/ (sometimes I also used virtualdub, which also can import stacks of PNGs, for comfortable initial processing and better control over quality) 
If you're using a single window, it's only purpose is to eliminate the effects of the aperiodic boundaries. You want it as big as possible to include all the available data. If you're using something more like a Welch method, the window is effectively a smoothing kernel in frequency space. You want it at least as big as your lowest frequencies. Combining spectra with different windows is equivalent to choosing a window of a different shape. Don't bother. Just choose the right shape in the first place. 
Judging from the pictures you have there is an image and you want to plot the values along a single line of that image? If you have imported the image into matlab then you will have a matrix size a x b x 3, you just then need to plot every element along a specific x line, in matlab you do this with a colon, image(250, :) will return the 250th x element of image and all of the y elements. Here is the code you need. I = imread('img.jpg'); %read in example image (581x915 pixels) Ig = rgb2gray(I); %convert to grayscale figure; plot(Ig(241, :)); %plot at horizontal line 241 I used the measurement image you provided.
No, the Android does not count. 
No, don't do that it makes no sense. Window functions are always applied to the data you want to look at, in your case it's everything you have captured or at least so you can see the lowest frequency you want. Choose the correct window function for your application.
I tend to find it very useful. In what situations do you not like it? Any time I am plotting a bunch of data with a legend, I usually don't want to plot something and not show it.
Damn dude, you seemed pissed. Been in college for 3+ years, imma go ahead and say I know how college works. By your logic, professors dont have to teach, they just say "okay class figure everything out while I have coffee and complain about politics". Please tell me what "documentation' I missed so I can be sure to read it next time. Thanks in advance.
I thought about using a simple table array but I can't figure out how to edit it.
Post your error maybe?
What errors do you get? As far as I can tell, you only return 1 element from the function HW2P1Function. 
Method 1: Step 1: Learn Latex Step 2: Write a matlab script to generate the Latex for that table. Step 3: Compile the Latex into a PDF and do a screengrab. Method 2: fprintf(1,'\t\tTable1: Displays Output\n'); fprintf(1,'------------------------------------------------\n'); fprintf(1,'%-40s %3d\n','Total number of students',datum1); ...
His comment does not come across as super pissed; it comes across as super direct. You are going to have figure out how to learn things for yourself at some point in your career. Might as well figure out when you only have 3 years left of college. 
Sorry about that, I have revised my code to make it simpler and I will include the error code. My function: function [V] = HW2P1Func(R,d) pi = 3.14; if d &gt; 3*R V = 'Overtop' return elseif d &gt; R V = (pi.*(R.^2).*R)./3 + ... pi*(R.^2).*(d-R) elseif d &lt;= R V = (pi.*(R.^2).*d)./3 end end My Script: clc; clear; close; disp('Part A') HW2P1Func(.7,.5); HW2P1Func(1.0,1.2); HW2P1Func(3.2,3.0); HW2P1Func(3.1,3.1); %HW2P1Func(1,4); %Test for Overtop disp('Part B') Here is where I encounter trouble. I want to plot a couple of plots with (d, V) with R fixed at a value and V and d storing as a vector to be plotted later. I'm trying to run d= 0:0.01:2.8 and find the corresponding V from my function, but it returns "Assignment has more non-singleton rhs dimensions than non-singleton subscripts" subplot(2,2,1) R= .7; count = 1; for i = 0:0.01:2.8 d(1,count) = i V(1,count) = HW2P1Func(R,d) count = count + 1 end plot(d,V) title('Plot of height versus Volume') xlabel('Height d') ylabel('Volume V')
Try not to brag about what an experienced undergraduate you are when you get a job interview. It will not do you any favors. Professors absolutely do not have to hold your hand all the way to the answer. They provide guidance, but it is 100% appropriate at this level to expect you to answer some questions they didn't explicitly tell you how to answer. You should stop expecting to have everything explained to you, **especially** if you're already 3+ years into college. It's September, so I assumed you were a freshman in your first college class. A senior should not need this explained to them. I'm a little shocked you don't even know that the documentation exists. Press F1. 
I apologize. I'm just starting the learn Matlab. I didn't know you could mouse over an eroor to see what was wrong. Problem solved. 
A basic table with a caption will do \usepackage{booktabs} : \begin{table}[ht] \centering \caption{Displays output} \begin{tabular}{lc} \toprule Text &amp; data \\ Text &amp; data \\ % etc \bottomrule \end{tabular} \end{table}
When you have plotted data and then add a threshold or some ROI markers which just highlight the data. I don’t want these to appear in my legend....
Thanks!
I didn't like the process of using getframe and imwrite so i made an interfacing function that does all that. The way it works is most easily understood from the help example function [ imm ] = gifMaker( varargin ) %Creates gifs from figures or axes % [im] = gifMaker([h],im,[name]) % First call is done with im == [] ; % next calls with the return values im and map % final call with ofilename writes the file % % Protip: just look at the example below % %example: % figure(1);clf; % ha= subplot(1,1,1); % plot(rand(20),rand(20),'.'); % imm = [] ; % for i = 1 :10; % text(i/10,i/10,num2str(i)); % [imm] = gifMaker(ha,imm,10); % end; % gifMaker(imm,'testGif1') ; if isa(varargin{1},'matlab.graphics.axis.Axes') || isa(varargin{1},'matlab.ui.Figure') h = varargin{1} ; varargin = varargin(2:end) ; else h = gca ; end %write if numel(varargin) == 2 &amp;&amp; isa(varargin{end},'char') &amp;&amp; ~isempty(varargin{1}) ; im = varargin{1}.im ; map = varargin{1}.map ; name = varargin{2} ; imwrite(im,map,[name '.gif'],'DelayTime',0,'LoopCount',inf) %g443800 %init %numel varargin ~= nargin caus above maybe varargin = varargin(2:end) elseif isempty(varargin{1}) &amp;&amp; isa(varargin{end},'numeric') f = getframe(h); nFrames = varargin{end} ; [im,map] = rgb2ind(f.cdata,256,'nodither'); im(1,1,1,nFrames) = 0; I = 2 ; %append elseif numel(varargin) == 2 f = getframe(h); im = varargin{1}.im ; map = varargin{1}.map ; I = varargin{1}.I ; im(:,:,:,I) = rgb2ind(f.cdata,map,'nodither') ; I = I + 1 ; end if nargout &gt; 0 imm.im = im ; imm.map = map ; imm.I = I ; end end
Your function HW2P1Func returns a 1x2 matrix, whereas in your code you're expecting a single number (a 1x1 matrix) when you assign V at V(1,count) = HW2P1Func(R,d). EDIT: You generally should add in the post that this is homework.
If I understood correctly - something like this my_rand_number = rand; A = repmat(0.25*my_rand_number, 1, 10); B = repmat(0.1*my_rand_number, 1, 10); final = repmat([A B], 1, 50);
So what you want to do is to *repeat* some *matrices*. The documentation probably will tell you a bit about that
Thanks so much. Exactly what I was looking for. Great work. 
The subject I'm doing at the moment has 'Essential MATLAB for Engineers and Scientists' as its recommended reading. Might also be worth a look.
Please do not do peoples homework for them. 
Yeah I end up with the legend being data1, data2, data3, which is not helpful. Is there a way to name the data series when you make the plot?
Damn, I wish people would write that it is homework in the post, I wouldn't have posted the solution otherwise.
I'll start with a general comment - You define your loop to be `i = 1:length(d)`. That's fine - it should iterate through your vector. A couple notes on that alone already though: 1. If you pass a matrix, `length(d)` is equivalent to `max(size(d))`. You will **not** iterate through all the elements in `d`, just through the whichever dimension has the most entries (rows, columns, etc.). This may or may not be desirable, but you should know that's what it does. 2. If you want to iterate through every *element* in a vector/matrix, you should consider doing `i = 1:numel(d)` instead of `i = 1:length(d)`. In the case of a vector, the result is the same. Where `length(d) = max(size(d))`, the function `numel(d) = prod(size(d))`. Again, subtle but significant difference. Now, the next note: In your loop, after defining the loop to be `i = 1:length(d)`, you then proceed to call `d(1,i)`. In this case, `d` could be a row vector or a column vector - again, `length()` just tells you whichever dimension is biggest. But then, in your code, you're mandating that `d` *must* be a row vector because you're declaring that all entries *must* happen along the first row. This is a robustness issue. If you just want to go through all the elements in `d`, again you should declare the loop to be `i = 1:numel(d)`, and then inside your loop you can just call `d(i)`. You don't need to specify any row/column because Matlab uses [linear indexing](https://www.mathworks.com/help/matlab/math/matrix-indexing.html#f1-85511) for all matrices. Next note: you're defining `pi` to be `pi = 3.14`. The variable you used - `pi`, is actually already the definition of pi. You don't need to redefine it. It's a built-in constant. Final note now that segues nicely into your problem: You're defining an incrementing counter inside a loop. This is almost always a [symptom of some fundamental coding problem](https://en.wikipedia.org/wiki/Code_smell) somewhere else. If it were me writing the code, I would write something like: testValues = [0:0.01:2.8]; for currentTest = 1:numel(testValues) currentValue = testValues(currentTest); I believe this is dramatically more readable - the `currentValue` is the selection of the `currentTest` from the set of `testValues`. I've found that a lot of beginners (myself included) seem to prioritize brevity over readability, but the couple seconds you save by typing `i` instead of `currentTest` is lost the moment you have to debug. Then it's harder to glean what's actually going on in your code. For example, it would appear that you're trying to build a set of test values. You're calling that set `d`, and you're appending a value to `d` at every loop iteration. *Note that this is also giving you a code warning. Do not ignore code warnings.* If you use `testValues` as I defined above, then the entire set of test values is already defined *before* you start the loop. **The problem you're having** comes when you try to pass the `currentValue` to your HW function. On the first iteration, `d` is a singular value (the first test value), and so your function works fine. On the second iteration, you have **appended** the second test to `d`, so now `d` is *two* elements "wide." You pass that to your homework function, and the result is a value that is *also* two elements wide. The error you're getting comes from the fact that you have defined the output to be `V(1, count)` - that is, you're telling Matlab that the result of your HW function should occupy *one* element in `V`, but the output of your function is *two* elements wide. It can jam everything in the one element so it gives you an error. So, after starting with the previous snippet, consider the following: V(1,currentTest) = HW2P1Func(R,currentValue); end If you try this, it runs fine up to your last error - You alternate between the possibility of assigning a singular value to `V` or assigning a character array `'Overtop'` to `V`. I'm not sure what you're intending to happen here, but `'Overtop'` is seven elements wide, so you get the same issue as before. If you just want to *display* the word, try `disp('Overtop')`. If you want to give a warning (won't stop the program) or an error (will stop the program), then try `warning('Overtop')` or `error('Overtop')`. So, if you change `V = 'Overtop'` to: V = nan; disp('Overtop'); Then the program runs fine. `nan` is short for "not a number" and it also can take up an element in a matrix. If you assign `nan` to a single element of `V`, then that element won't plot when you eventually do plot `V`. This is the easiest way to handle invalid values. 
Hey! She was my professor for C++, and I really enjoyed the class. She was an effective teacher and gave us print outs of her book for free, so I only have good things to to say about her. 
I'm assuming it's homework because it's so basic. Even if it's not homework, OP still learns more if you get him to figure it out for himself. 
Thanks for your reply. It'll take me a while to understand it all, but I can understand a few things. I'm so bad at Matlab. I'm just trying to muddle my way through this course the best I can.
I'm sorry but I'm a little confused. In my mind, on the first round HW2P1Func(R,d) outputs V for the values d(1,1)= 0 and R = .7 It then assigns the Matrix V(1,1) position the value of HW2P2Func(R,d) V. Once this repeats and the HW2P2Func(R,d) outputs have all been assigned a place in V(1,count) and d(1,count) is full of i values I should be able to plot these two together. I guess my logic is flawed somewhere in there. I thought function output V was a single number. I'm not able to see how output V is a 1x2.
Do you just want element-wise operations, or do you want every possible permutation?
I'm honestly not sure of the difference between those. If I need to use every element in each column in a function, and there's four columns, then shouldn't there only be four possible results?
So the top comment explains very nicely what is wrong, HW2P1Func returns two values (a 1x2 matrix) because you *give* it two values, there is a bug in your code that make d a 1x2 matrix on the second run of the loop. To get a sense of what is happening I really suggest running each bit of code one line at a time.
You have four different resistivities. You have four different wire lengths. If you did each wire length at each resistivity, that would be 16 combinations. If you did each combination of length/resistance with each of the four possible wire diameters, then that's 64 total possible combinations. So there are 64 (4^3 ) permutations. Or, if you just want element-wise, then there are four outputs - one for each column in your vectors. 
It sounds like you need element-wise. I would **highly recommend** you read the [documentation on basic operations](https://www.mathworks.com/help/matlab/matlab_prog/array-vs-matrix-operations.html) and then review the [element-wise multiplication](https://www.mathworks.com/help/matlab/ref/times.html) and [element-wise division](https://www.mathworks.com/help/matlab/ref/rdivide.html) documentation.
I see what you're saying now. In that case, I just need element-wise. Thank you!
Just use the full path. data = csvread('C:\full\path\to\your\file.txt');
On graphs and such? Try the interpreter. Here's the [documentation link](https://www.mathworks.com/help/matlab/creating_plots/text-with-mathematical-expressions-using-latex.html) .
What did you put into the command window to get that error?
Jesus Christ I knew it was a dumb error. I was just running the code through the script editor...
Check out the instrument control toolbox, if your oscilloscope allows you to display data like this you will need it.
Is it possible to do it with the disp or print command?
Matlab Live Editor
To the command prompt? No 
Thank you!
It seems the l (as in letter L) is actually a 1 (as in number)....
It's supposed to be 1/T0 as in a recipricol. 
oh wait im an idiot thanks
At least up to ^3 you could try extended ASCII characters with e.g. char(253) see [link](http://www.theasciicode.com.ar/extended-ascii-code/superscript-two-exponent-2-square-second-power-ascii-code-253.html)
Honest question: How does this happen?
That’s why you switch to Julia which supports full Unicode everywhere. You can even use emojis as variable names :)
I've tried using that. It doesn't seem to work. I wonder why they don't allow this to be displayed as a string
I had to simply do it on figures, I'd love to learn the codes tho. For now I did it on Figures after I ploted them up. 
Ok, sorry, could not test it, maybe have a look at [this](https://de.mathworks.com/matlabcentral/answers/49878-problem-with-ascii-characters-in-matlab)
In my opinion, the help is very good for beginners.
You can use the line command to draw those lines on your graph. I didn't understand if you wanted the axes linear AND non-linear or the plots. The plots would be easy, just plot two lines.
okay here let me show you: https://imgur.com/a/ARMZF I want to plot these values, but I want Matlab to draw a linear line like the black line that I draw by paint, and I want Matlab to tak the rest of graph as a 2 or more degree poly, as the red line wich I showen. 
Same set of data, this time I have seprated them, but not looking smooth.... https://imgur.com/a/HfoBz
You can do this as two separate plots, using hold on.
It actually reduces to the correct expression if you do the following: -2*cos(x/2)*(cos(x/2)-2*sin(x/2)) = -2*cos(x/2)*cos(x/2)+4*cos(x/2)*sin(x/2) = -(1+cos(x))+2*sin(x) = -cos(x) + 2*sin(x) + 1 which is correct up to a constant term. I'm not really sure why it chooses this form over another, must have something to do with the approximating algorithm.
Yep I've done it, thanks. 
This is actually controlling a robot. The solution I am expecting for this real robot is numerical answers (and I know the answers). For other robots the solution may be symbolic, a relationship between angles.
Thank you, this helps tremendously.
If you're after a numerical answer, then why are you using symbolic variables? 
So you clearly know how to define the function handle. What's the problem? What have you tried? When you read the documentation on using function handles, what wasn't clear about it? 
Have you tried looking up the documentation on anonymous functions?
I don't guess im stupid lol, does this look like it makes sense? https://gyazo.com/c473a1d139cb110ff606465fe7fe776b
**[Fixed your link? Click here to recheck and delete this comment!](https://np.reddit.com/message/compose/?to=Gyazo_Bot&amp;subject=delete&amp;message=delete%20dnqod09)** ***** Hi, I'm a bot that links Gyazo images directly to save bandwidth. Direct link: https://i.gyazo.com/c473a1d139cb110ff606465fe7fe776b.png Imgur mirror: https://i.imgur.com/YExkB5S.png ^^[Sourcev2](https://github.com/Ptomerty/GyazoBot) ^^| ^^[Why?](https://github.com/Ptomerty/GyazoBot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/u/derpherp128) ^^| ^^[leavemealone](https://np.reddit.com/message/compose/?to=Gyazo_Bot&amp;subject=ignoreme&amp;message=ignoreme)
I need matlab to tell me which values of theta1, theta2.....theta6 cause the determinant of the jacobian to equal 0. I know the determinant of the jacobian is equal to zero when theta1=0, theta2=pi()/2, theta3=0, theta4,5,6 do not contribute. I know this by just by inspection of the robot because this is such a simple and symmetrical robot. I would like matlab to tell me the same thing. I would call that a numerical answer. I don't know how I would approach this problem without symbolic variables? In other robots the determinant of the jacobian might equal zero when theta6=theta2. I would call that a symbolic answer. Are we using the same terminology?
No, you have the input to your function inside the function itself.
Most of your remainder functions are using 1 not l. 
Wow I feel so stupid, they look the same in Matlab lol. Anyways thanks :)
No. Not at all. You seem to be writing random chunks of code in random combinations, hoping it will eventually work. Stop. Think about what the assignment is asking, and how you can do that. Then learn what tools in Matlab will do that. You need to have a plan *before* you start writing any code. 
A great lesson in using variable names that aren't meaningless. How about years, firstYear and lastYear?
Yes, but that's why I ask if this will actually be controlling a robot. Often there isn't a finite list of values that make the determinant zero. Like you've said, that will sometimes be a an infinite continuum, such as the locus of all points in parameter space where a=b. If you're looking to derive an expression that will be used in code, you're doing symbolic calculations, but they won't end up controlling the robot. The equation you derive and put in the code that controls the robot, will actually be controlling the robot. Robots need numerical results. You cannot feed a symbolic expression to a stepper motor. You'd approach this problem numerically by solving a system of equations. Potentially that answer would encode the equation a=b with a 1 in the appropriate entry of a matrix. 
&gt; how would one turn this list of temperature data into a nice fancy temperature distribution plot so as that I may compare it top the same simple mesh generated in ANSYS? I don't know, what do the ANSYS meshes look like? &gt; I would assume that I would need to add some sort of coordinate system with deltaX and deltaY as my axis Yeah maybe. Can you post a picture of what you want the output to look like and the code you used to generate your data? Put four spaces at the start of each line of code to format it as code. 
+ &gt;I don't know, what do the ANSYS meshes look like? Well, if I were to stick to the same boundary conditions as the question to make it a fair comparison it would be the same as the first picture, 12 total nodes mirrored around the centre. ie it would be set up in a 4x4 grid. &gt;Can you post a picture of what you want the output to look like and the code you used to generate your data? I'm being asked to turn my calculations into something like this: http://www.csm.ornl.gov/Internships/rams_02/RAM_websites/Valerie/heat.png Except it's obviously going to have much less granularity considering the extremely course mesh. There isn't really much code to speak of as it was just base calculations of the Matrix Inversion method of FDM. ie [T]=[A]^-*[C] with the matrix [A] made up of the nodal equations eg for T1 = (-4T1+ T2+ T3+ 0+ 0+ 0+ 0+ 0)= [C] (-1000). With [A] and [C] held in a data file. ie. A = data(:,1:end-1) % Pulling the matrix out of the data C=data(:,end) % Pulling the resultants out of the data Ainv=inv(A) %Inverting Matrix A T=Ainv*C %Calculating the Temperature at each node T = 489.3047 485.1538 472.0651 462.0058 436.9498 418.7393 356.9946 339.0520 Which are the correct values as far as I can tell, as I've also worked it out by hand (I'd forgotten how much I hated matrices). But all that tells me is that I can apparently just about multiply two variables together in Matlab without buggering it up. 
 New_XTickLabel = get(gca,'xtick'); set(gca,'XTickLabel',New_XTickLabel); https://www.mathworks.com/matlabcentral/answers/95023-how-do-i-change-the-x-axis-label-on-a-semilogx-plot-from-exponential-to-normal-format-in-matlab This fixed my issue
Try the surf, contour, or contourf commands to plot. P.S. color map jet gives the prettiest pictures, in my opinion. 
Typing up an idea for a 1D solution on mobile. Sorry for any format issues. A 2D solution would probably require a nested loop. index = [ ]; for (i=1:length(x)) index = [index, find(x(i) == Y)]; end
Almost all of these types of functions in MATLAB have optional outputs where they return the indices where things that happened. Always try typing `help functionname` in this case `help findpeaks` to see how to do this. 
What is your failure? Do you get an error? Is the answer wrong? 
Sorry, I should've elaborated a little more. The project instructions say to note if my outputs are different than the outputs of the built-in Matlab det(a) function. If they are different, it wants to know why. My outputs are perfect for some matrices (my determine function's output is exactly the same as det(a), the built-in Matlab function). However, on other matrices, like magic(5), for example, my outputs are a lot different than det(a)'s outputs. It's possible that these different outputs are expected, but if they are, I need to know the reason why they're different. I'm trying to find that reason, or errors in my code that may causing the discrepancy in the outputs.
Use it like this: [X, locs] = findpeaks(Y) 
If you don't modify the variable, then [MATLAB will not copy the variable](https://www.mathworks.com/matlabcentral/answers/152-can-matlab-pass-by-reference). It's called "copy on write". I don't think there is a way to do it explicitly. 
But I do modify it, to the extent that even its dimension changes. I want to prevent the copy since I clear the original variable after the function call anyway.
So I'm not quite sure what you're doing. But there's a couple of things: 1. Never compare decimal numbers exactly. [This writeup is for JAVA](http://www.java67.com/2015/09/float-and-double-value-comparison-in-java-use-relational.html), but it applies to every language. You should never say `if x == y` but instead `if abs(x - y) &lt; eps`. Your one example that does work is because you're only comparing integers, which doesn't have this problem. 2. I don't think every entry of `D1` and `D2` is supposed to be equal to the first entry of `D1`, I think the sum of `D1` and `D2` are supposed to be the same- and in your case they are. 
Thanks for the feedback. I actually was messing around with a check like you mentioned in 1, I just didn't remember that is was *necessary* (since programming languages store decimals kind of inaccurately). I'll take another look at that. I guess I probably should've posted the actual instructions for the function: https://i.imgur.com/qi1xzw8.png For your second point, I also noticed some patterns in my D1 &amp; D2 outputs. I think abs(D1(1)-D1(2)) was equal to abs(D2(1)-D2(2)) in the magic(5) matrix example, but I don't think that matches the given instructions. The wording isn't very clear. 
Passing by reference isn't going to get you this. If you're modifying the shape of the data then MATLAB likely needs to manipulate it in memory. There may be compiler tricks going on in the background but you're probably better off figuring out how to format the data so that it doesn't need to be rearranged rather than chasing compiler optimizations.
There are plenty of [numerical integration methods](https://www.mathworks.com/help/matlab/numerical-integration-and-differentiation.html) available in MATLAB. How would you do this on paper?
The only way in Matlab to explicitly pass by reference is to use a handle class. Usually, copy on write is sufficient--and I would seriously consider whether modifying the original array in the function is strictly necessary if you don't need it after the function return--but creating a handle class to hold your data would allow you to pass by reference. 
Not really homework post. More of a heads up on a project. Its ofteb been a bit of a brickwall trying to use Matlab online material. At the risk of sounding apologetic i would not have struck on this solution myself. And this solution helped me to search for other functions. In the end, using more of a loop style solution. X = rand (1000,1); M_A = 0.2 * unifrnd (0,1); M_B = 0.15 * unifrnd (0,1); i = 20: For a = 1: (length(X)./(2.*i)); b = 0; b = i*a; X(b,1) = M_B; X (b - i/2,1) = M_A; End It's also highly condescending to write of a post for simplicity. I'm an accomplished rower, I would not throw you in a boat and laugh as you fell straight into the water. A little advice freely given helps build a community. Thanks again though for help, it did help and it did help me learn. 
This. Rearrange your data or perhaps look into MATLAB datastores, tall tables, or v7.3 MAT files. They all allow for partial read/write AFAIK.
But all the function does regarding the variable is rearranging it then saving, after this it can be cleared from memory. The problem is that I have an 8 GB matrix I want to modify/rearrange and save, then clear it. But I wanted to do it with a separate funcion, but as soon as I do this with a function call matlab allocates 2*8 GB RAM which is an absolute waste.
I don't have to modify the original data the only thing I want is to prevent the copy of the data (edited the post for clarification).
hehe, not talking for op here, but I in the past have used 0(zero) in stead of o(o) for no reason at al. I'de like to blame my dyslexia, but I don't know how exactly.
It looks like you are used to a different programming language than matlab: -MATLAB uses 1 based indexing and not 0 based indexing -you’re created a vector instead of a matrix with randi -as you already concluded, matlab uses standard brackets for matrix access 
Thank you for your input, but changing the zeros to ones unfortunately does not fix the error message "Unbalanced or unexpected parenthesis or bracket."
Your problem statement wasn’t unclear the first time. Whatever you’re doing to the matrix is more than MATLAB considers itself able to do in place, so it needs to allocate a new chunk of memory for it. Passing by reference still isn’t a magic potion that’s going to resolve this. Again, you’re better off reworking your initial matrix so such a manipulation isn’t necessary or utilizing the on disc functionality that others have already mentioned.
Then I'd do like /u/ewjost said and try [contourf](https://www.mathworks.com/help/matlab/ref/contourf.html). I would reshape your `T` to conform with what`contourf(x,y,z)` is expecting. From the documentation: &gt; `contourf(X,Y,Z)`, `contourf(X,Y,Z,n)`, and `contourf(X,Y,Z,v)` draw filled contour plots of `Z` using `X` and `Y` to determine the x and y values. &gt; &gt; If `X` and `Y` are vectors, then `length(X)` must equal `size(Z,2)` and `length(Y)` must equal `size(Z,1)`. The vectors must be strictly increasing or strictly decreasing and cannot contain any repeated values.
Thanks both. I'll read up on applying those functions and see what I can produce.
Thank you so much!
Do you know how you would do this by hand? If you don't know how to do do something mathematically, Matlab will never be able to do it for you. So start by figuring out what to do, then just figure out how to express that process in Matlab. 
&gt; Mathworks link &lt;link&gt; doesn't explain really much about it. I mean, it documents the function and gives an example that you can follow along with in Matlab. Are you having trouble with the *Matlab function* or are you having trouble with the underlying ACF algorithm?
First of all, thanks for the reply. I am having trouble with ACF algorithm. This is why I am a bit confused if I should post this question in computervision subreddit instead. While my detector I train able to run smoothly. I just want to improve the accuracy of the detector I train with this function. I did read Piotr Dollar's journal I link above. But i was hoping if there is any other resource regarding this specific algorithm. I did google search quite a bit, but not much info found regarding this algorithm. And again, thanks for the reply. I will delete this question and repost to computervision or machinelearning subreddit if this is not the correct question for this subreddit . 
I know there are ways around this, quick and dirty solution would be to copy-past the code instead of a function call but it raises other problems. Since it is not even my code I hoped that I don't have to restructuring things within several thousand lines of code just to prevent this. Thanks for the help anyway!
If you do it like in the link you provided what happens is that matlab is asked to store some values in the variables i, j and k, and then to store i, j and k as a vector called m. On the next iteration of the loop it is asked to do the exact same thing and m is completely overwritten. The answer would be to store several vectors as a 2D matrix, you need to think of some way to address the different rows of this matrix on each loop iteration.
Thanks, I will look into this. This may not help with my immediate problem but it could solve other issues I have and even this problem in the long run.
I am personally no CV expert. I think that, even if CV experts did frequent this subreddit, you would probably be better off posting elsewhere anyways because the *percentage* of users here that would be CV experts here would probably be pretty low. If your question were about how to use the Matlab implementation, then it's debatable whether you should ask here or elsewhere, but I think that it should definitely be somewhere else because the question doesn't have anything to do with Matlab.
My bad. Sorry. I just thought that Matlab might have more information on this algorithm since it exists in Matlab library. Again, thanks for your patience.
I haven't done much :-/ You could probably leave the question here, in the event someone *does* know the answer. I'm not a mod. Good luck finding help!
**The answer to your problem is literally the first answer on that link you posted**. If you are still having "no success" then you need to post your code so that we can figure out what's going wrong.
I understand how to do it mathematically, but when it comes to the coding part I'm partially lost. title('Pendulum Angle as a function of time'); % Title xlabel('time(s)'); % X label ylabel('Pendulum angle (radians)'); % Y label legend('\theta_0=pi/12', '\theta_0=pi/9','\theta_0=pi/4','\theta_0=pi/2') % Legend i = 1; % Iteration theta_0 = [pi/12, pi/9, pi/4, pi/2]; % Theta_0's starting angles l = 0.75; % Length of the pendulum T = 0.3; % Exponential decay t = 0:0.01:10; % Time g = 9.81; % Gravity Color = ['b','k','g','r']; % matrix of colors for plot plot(t,y, 'linespace', 2, 'Color') while i &lt; 5 y = theta_0 * cos(sqrt(g/l) * t)*exp(-T*t); i = i+1; hold on end Here's a google drive link to the actual code I did, but I can't get it to work. It won't display the legend right or graph it correctly. https://drive.google.com/open?id=0B5uHm7T1iX9oU05xTGVmX3AwaWs edit: Here's the errors it's giving me: &gt;Warning: Ignoring extra legend entries. &gt; In legend&gt;set_children_and_strings (line 674) &gt;In legend&gt;make_legend (line 346) &gt;In legend (line 294) &gt;In Pendulum_Figure (line 11) &gt;Undefined function or variable 'y'. &gt;Error in Pendulum_Figure (line 21) plot(t,y, 'linespace', 2, 'Color')
&gt;Undefined function or variable 'y' Sounds like you haven't defined the variable 'y'. 
Also, how did you manage to write all your code backwards? You're trying to set the title and axis labels on plots that don't exist, then you're trying to plot variables that don't exist yet, then you're defining your variables. Is that seriously how you'd do things yourself? I doubt it. 
You can index h in exactly the same way that you are indexing f. You could also do this with a for loop. 
Really? When I run it the title label and the x and y labels are in the right place, but the legend is blank. And the graph itself is entirely blank, but one problem at a time. 
Yeah, a lot of those functions will create a plot if none exist. It's still common to make the plot first. It's just striking how you did everything in exactly the opposite order. How did you think you were going to plot y before defining it? Would you be able to do that by hand? If I say "plot y as a function of t" without telling you what the values of y or t are, what would you do? 
Ah okay, I see what you're saying. I was trying to find find y multiple times in the while loop, each time getting a different y since the theta_0 would be different for each iteration. I guess I did it wrong damn. 
Yeah that's fine, but you still can't plot something that doesn't exist yet. 
Damn. What would be the correct way then? I've already tried moving the plot(t,y) both after and in the while loop and I still get errors. 
for loop worked, thanks! Quick question, when i call this function in another script, how can I make it save h and the derivative to the workspace so I can work with them? Thanks!!
[removed]
Surely they are different errors? Read the error, consider how your code is causing the problem that is described in the message, then consider how your code should work so that the problem doesn't occur. 
Assign them as return variables. 
No, just an error for the legend: Warning: Ignoring extra legend entries. In legend&gt;set_children_and_strings (line 674) In legend&gt;make_legend (line 346) In legend (line 294) In Pendulum_Figure (line 9) and an error for the undefined y variable: Undefined function or variable 'y'. Error in Pendulum_Figure (line 19) plot(t,y, 'linespace', 2, 'Color') 
How can you get both of those errors? Execution should halt after you get one of them. Is the legend error occurring because you're calling legend before plot? 
&gt; Undefined function or variable 'y'. &gt; &gt; Error in Pendulum_Figure (line 19) &gt; plot(t,y, 'linespace', 2, 'Color') &gt; This is clearly happening because y is undefined when you call plot. That's literally what the error message says. 
yeah, lol I just solved it with some help from someone else. Apparently the matrices weren't the correct size and needed to be transposed, I moved the plot into the while loop, and had to move the labels and legends after the while loop.
Hey! Not sure exactly what you are asking for but here is a general rundown: To make the data to plot: for instance, the first question will have an exponential that levels off at y=5, so you could have: y=x^2 then x=[-10:0] will output x=[-10, -9, -8, -7,...,0] y=x.^2+5 will output y=[105,86,69,54,...5] plot(w,y) would plot this. Your second plot then could have: x=0:10; % outputs x=[0,1,2,3,4,5...10] y=5.*ones(1,length(x)); y=[5,5,5,5,5...] To make the plot: figure() %This opens a figure window hold on plot(x,y) %this will plot x and y of your choosing. plot(x2,y2) %this will plot the second x and second y of your choosing axis([-x,x,-y,y]) %will create a window the size you prefer just fill in what you want for x and y bounds. hold off Hope that gets you started! 
Matlab is faster at matrix computations than Python. Also some of the Matlab toolboxes don't have equivalent Python libraries. Other than that just use Python.
Matlab packages and documents things very well. It makes it very easy to learn and quickly create decent code - even compared to Python. Additionally, I'm not sure I believe that python will be faster than MATLAB when doing what MATLAB was designed for (numerical and matrix calculations). Additionally, given how controlled MATLAB is, it makes it relatively simple to port code to other users. I'm not saying you can't do that in Python, it is just less likely to work right out of the box. MATLAB also has a lot of support since you are purchasing it from a company, with Python I normally have to survive on the goodwill of strangers. I would note that Python is much more flexible than MATLAB. While I can get MATLAB to do a lot, and I really like it for numerical calculations, Python really is more of a "programming language". 
I think matlab and simulink are more common in industry for engineering. Having supported software is a big deal for companies. Also Mathworks and universities have relationships.
In addition to what others have said, a lot of the toolboxes that MATLAB has don't exist for anything else. An example would be Simulink, as well as the control system toolbox. I used both of these in my controls engineering classes
There's a lot of reasons I use (and need) MATLAB (how seamlessly it handles big data, how it is certified accurate, etc), but at the end of the day- expensive for a person is different than expensive to a company. MATLAB costs the company I work for $1000/year. That means, if it saves me 5 hours a year, they've broke even. Everything over that is saved money for the company. Suddenly that "almost as fast" and "almost as easy" becomes a real value proposition to a company like mine. And as for your "companies want people who know Python, not MATLAB" has not been true in my experience at all. MATLAB is used by everyone in my industry (Aerospace), but that's all I know. 
Also, if dealing with big data I have found to be much easier (read: seamless) in MATLAB than Python. 
Interesting I've found the opposite. In what way are you thinking?
Please post your code in such a way that it is readable. Also, I know the editor has a yellow underline tell you exactly what the problem is. Read the tip the editor is giving you. 
I fix it with a semi-colon and if you call hollow_sphere in the command window it says not enough input arguments 
Python is free
&gt; And as for your "companies want people who know Python, not MATLAB" has not been true in my experience at all. MATLAB is used by everyone in my industry (Aerospace), but that's all I know. Second that for my industry (semiconductor laser). Nobody at my company is familiar with python to an extend that they would trade MATLAB for it. It might have to do with the fact that local universities heavily train their students in MATLAB, and after all they are the biggest pool we're hiring people from. 
I completely agree, the fact that python is open source makes it by default superior. However these are the reasons I can come up with: * Toolboxes * Simulink * Inertia The speed argument won't last long, scipy is already very good and there is nothing intrinsic in matlab that makes it faster. 
Can you use pastebin or similar so we can read the code. Please include the function itself, the code you're using the call the function and what output you get.
Look at your code, find the part that is underlined and giving you a warning, then mouse over it to see what the warning is. The warning will tell you what is wrong, what will happen, and how to fix it. 
Mathworks Embedded Coder allows to automatically generate C code optimised for a lot of embedded processors from Matlab code and the HDL coder allows to generate HDL code for FPGAs. Nothing that will be ever possible with python.
&gt; S-Function block ... does not have a TLC implementation Took that, Googled "TLC implementation Simulink," first link was [Implement S-Functions](https://www.mathworks.com/help/simulink/sfg/how-to-implement-s-functions.html) from the Mathworks documentation site. There's a note there that says: &gt; **Note** &gt; &gt; For backward compatibility, the following table and sections contain information about Level-1 MATLAB® S-functions. However, use the Level-2 MATLAB S-function API to develop new MATLAB S-functions. So then I look at the table, look for Level-2 MATLAB S-Function, and *it* says: 1. Use the msfuntmpl_basic.m template to write a new Level-2 MATLAB S-function: See Write Level-2 MATLAB S-Functions for more information. 2. Write a Target Language Compiler (TLC) file for the S-function if you need to generate code for a model containing the S-function. The file, msfcn_times_two.tlc in the folder is an example TLC file for the S-function msfcn_times_two.m. See Inline MATLAB File S-Functions (Simulink Coder) for information on writing TLC files for Level-2 MATLAB S-functions. Looks like you did step 1, did you do step 2? 
What, no `evalin()`? :-P
Ditto from the controls people.
What do you mean when you say Matlab will only let you use 18 inputs? Do you get an error? What is the error? How did you configure the pins? Which pins are you trying to use? Please post more information. Also, FYI, the MEGA has 54 GPIO. A 5x5x5 LED cube has... (5x5x5) = 125 LEDs. 
omfg this question. "I'm a freshman, here's a link to my homework can you tell me how to do it?" *This is not a Matlab question if you don't have an algorithm to code.* 
There really isn't a reason to use it other than "everyone else is doing it", especially for school.
This sounds a bit like a homework question... Browse the matlab documentation, start with a basic function like det and it might point you in the right direction. The documentation is really quite good. Secondly does your matrix have a lot of zeros? If it does then check out sparse.
Jesus that's horrible. At least use assignin(), but either way, gross. 
yeah, is for a bidimensional heat transfer analysis by finite diffenrence method, so i got a lot of equations. I think that my best alternative is the gauss siedel method.
 x = A\b;
I would guess `fit` or `polyfit` would be the function you're looking for, to find the equation of the curve. It's up to you then to pick which elements you want to pass to those functions to fit the curve; it doesn't look like the curve you drew is a *best* fit for *all* x/y pairs. 
Maybe you should - Share your code - Show a picture of your expected result - Show a picture of the result you are getting With this little information, nobody can help you.
Bode results https://imgur.com/h1i52Tf My results https://imgur.com/T8BLbEl
Yup, those are different. 
Are those BVP questions? 
What problems are you having? Using "hold on" is pretty trivial.
right click and tick off phase wrap in the options. Also note that 720 is 0 in mod 360 ;) So you are good to go. 
Your phase is shifted between the two, and probably some noise
where did you purchase that matlab? I'll buy 100 licenses. A single seat license cost for our company is 11000 euros per year. And we only use it for Simulink (though we buy the full toolbox suite). We already ported everything to Python
Mostly inertia. Take data science. Before it took off, mathworks didn't bother much about AI and statistics people mostly used R and commercial toolboxes. Then (grossly oversimplifying it) with pandas coming in and NumPy &amp; SciPy switching gears, Python is by far the flagship of the domain. Given such a equal starting race, people don't use Matlab or non-domain people enter the race via Matlab because that's what they are used to. We shouldn't actually call it Python but better the scientific stack of Python. There are still a lot of corner places where matlab absolutely kills it (I'm talking about functions not the typical simulink argument) because they have been hiring the top notch experts all over the world, whereas we are coding things by reading their papers thus they also get a lot of insights which we don't have access. Also they can pay any amount to include SLICOT, HSL, NAG and other Formula 1 equivalent low level routines. I reckon matlab performance would still be dominating for about another decade but everything else is catching up pretty fast. Even Nick Higham mentioned considering releasing the papers with Python code in one of his videos. So it's not really a hype but an actual leap on behalf of Scientific stack. In my industry high-end motion control we are hiring software people not matlab users. the designers can do whatever they want but into the machine no matlab code is put whether it is compiled or just runtime library + .m code. Either they rewrite in Python or if it embedded they do C black magic.
I guess the problem is with the scale. I can put a graph on, but it will mess up the scale of the heat map. I'm going to play around with it more I guess. 
The heatmap axes scale is just integers from 0 to the size of the heatmap. So in your case it looks like the x range is from 0 to 7 (you're setting the XTickLabels anyway, so you should know what the values are!). Same thing for the y-axis. You just need to map your data to the heatmap scale.
You know you can set your own axis limits, right? &lt;plot your heat map&gt; myAxes = axis; hold on; &lt;plot your line&gt; axis(myAxes); 
Oh, a full MATLAB license is more than $1000, but a.) I don't have the full toolbox suite and b.) I said $1000/year, which is the cost to maintain a MATLAB license. The first time purchasing it 5 years ago was like $5000, but that was one time. 
&gt; And we only use it for Simulink (though we buy the full toolbox suite) Well there's your problem right there. You can look it up on the Mathworks website - [Matlab is $2,150 to purchase](https://www.mathworks.com/pricing-licensing.html?prodcode=ML&amp;intendeduse=undefined), [Simulink is $3,250 to purchase](https://www.mathworks.com/pricing-licensing.html?prodcode=SL&amp;intendeduse=undefined). That's to buy it outright for whatever the current version is. Then you can buy the [maintenance service](https://www.mathworks.com/services/maintenance.html?s_tid=plp_sms), which is much less per year than outright purchasing. Why on earth are you buying all the toolboxes if you don't need them?!
TLC implementation is required for a MATLAB S-function, but it is only an optional optimization for hand written C-Mex Functions. Again, this code compiles and runs fine, as is, unless it is within a For-Each subsystem.
you can't buy simulink standalone so that's one thing that you have to sum those second in a commercial setting the deal is much more complicated than retail price if you include redistro rights. And if you buy everything the money doesn't multiply accordingly because they have offers for full suite purchases
plot(x,y)
I mean, you didn't show us the code you wrote, so how can we know how to fix it? Also, if you want numbers as your answer, why are you using symbolic variables?
I tried doing that, but my error arises when I enter my y variable. The error arises in pertaining to this line of my code: full = p * (double(symsum( st * (1 - k) ^ m, m, 0, x ))); Error using sym/symsum (line 59) Upper bound for summation index must be scalar.
Sorry about that, I have updated the post. I am using a lot of symbolic variables because I would like to be able to change the parameters of my formula to fit different scenarios.
You can't plot with symbolic variables 
well, that code plots 2 curves... Have you tried copying it into the command line and hitting "enter"? It would seem that you're missing a couple asterisks though.
[sim documentation](https://www.mathworks.com/help/simulink/slref/sim.html)
Could you be more specific please? I don't understand exactly how to use it in my context.
[removed]
That documentation page is literally a comprehensive description of how to use the function with examples. If you want advice on how to implement it in your context, don't you think *you* need to be more specific where *you* are stuck? Post your current code and we can help you.
[Here](https://pastebin.com/dHEbBvvt) is the code up to now. The Simulink looks like [this](https://i.imgur.com/loMUXRe.png) for system 1. We want to use the matrices created in the script in the state-space block. The assignment instructions say to use sim, but we've never used it before and this is the first time we've used Simulink, we don't know what to do.
I don't see an attempt to use the sim function anywhere in your code. Try it. Get an error. Think about the error. Post it here, with your reasoning about why you think you got the error. People will help you! You aren't currently asking for assistance, you're asking to be fed the answer. I know the documentation is confusing - slow down, read it slowly. The answer is both very simple, and within the first page of text from the link above. 
that's not a matlab question, that's an engineering question. was all of the code you show in your post provided for you?
you don't need to use symbolic variables to do that. symbolic variables have their place, they really do. however, they should always be a **last resort** when writing a program `symsum` isnt working because in `symsum(f,x,a,b)`, `b` needs to be a scalar, and it apparently isn't. i don't know why, though. the easiest way to make matlab realize every x value is different would be to do your summation in a series: for ii = 1:n y(ii) = 10*x(ii) end y_sum = sum(y) 
1. your question would get better traction on /r/ElectricalEngineering 2. you have put exactly zero effort into attempting to solve that question. why should anyone help you with it? serious question. it takes time and effort to help people with their homework, and it's disheartening when you come on here and just ask for an answer, having done no work. 
**Here's a sneak peek of /r/ElectricalEngineering using the [top posts](https://np.reddit.com/r/ElectricalEngineering/top/?sort=top&amp;t=year) of the year!** \#1: [That about sums it up](https://i.redd.it/xvoe7ecr91uy.jpg) | [6 comments](https://np.reddit.com/r/ElectricalEngineering/comments/67tqer/that_about_sums_it_up/) \#2: [ONE OF US](https://i.redd.it/w10mk35bh3az.png) | [2 comments](https://np.reddit.com/r/ElectricalEngineering/comments/6nrbv3/one_of_us/) \#3: [Some nails we could all admire (x-post r/mildlyinteresting)](https://i.reddituploads.com/1c5fe5a346d947e3aaa84bdebbf18d10?fit=max&amp;h=1536&amp;w=1536&amp;s=7129f02bd860b8ea79809333542c4d28) | [4 comments](https://np.reddit.com/r/ElectricalEngineering/comments/5ui13y/some_nails_we_could_all_admire_xpost/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
'Matlab: A Practical Introduction to Programming and Problem Solving' by Stormy Attaway 'Essential MATLAB for Engineers and Scientists' by Brian Hahn and Dan Valentine Have both been mentioned in other threads. Also, check the links in the sidebar to get started (Places to learn MATLAB).
Nice! I'll look into it. appreciate it.
Sounds like a homework question 
Seriously?
Wow this subreddit has zero sense of humor 
Well, MATLAB does have functions to send and receive arbitrary network messages, so technically, MATLAB includes a web browser, e-mail client, and cloud services. (Some programming needed.) The instrument control toolbox does also have tools for connecting to Bluetooth devices and there exists a library for NFC, so if her phone is blasting her personal details "to whoever it may concern", it could be feasibly done. For proper eavesdropping, I guess it would be necessary to simulate a base station, force the phone to drop down to 2G (which has weaker encryption) and then try to eavesdrop. Even 3G networks should have sufficiently good encryption that an eavesdropper with just a laptop can't break it.
If they are running matlab to hack, she should adopt them, feed them with protein shakes and provide shelter. But no more TV!
For controls there are many options in Python. Not as complete as matlab but still quite sufficient for class use.
You can use Fourier transform for that data points. Use fft(), for dft. Dft is sampled version of the Fourier transform. And also Fourier transform is special case of Laplace transform. So try with fft. Hope this helps.
I’m not getting any error, I wanna use 30 pins, so it’s 5 grounds controled by 5 2N2222, and 25 positives. I think I figured out anyway. I broke my head but I found something in the arduino code and now i can use 30 pins. Thank you any way :D 
this should get you started . Read up on what [rng](https://www.google.nl/search?q=matlab+doc+rng&amp;oq=matlab+doc+rng&amp;aqs=chrome..69i57.1543j0j7&amp;sourceid=chrome&amp;ie=UTF-8) does , and find out what kind of data your patients thing should be. the sort rand line is one of many ways to shuffle an array. patients = 1:112 rng(SOMETHINGHERE) [~,sortOrderI] = sort(rand(112,1)) group{1} = patients(sortOrderI(1:floor(end/2))) group{2} = patients(sortOrderI((floor(end/2)+1):end)) 
There are better tools for this than matlab...
Look up linspace (or the colon operator :), that should get you started.
First, be sure that you have a [C/CPP supported compiler. ](https://www.mathworks.com/support/compilers.html) CMake is not actually a compiler, it is only a library of build tools. You still need an installed C/C++ compiler. I'm not sure how or if you can generate a MEX file using another tool, since a MEX file is binary. I am not sure if you should or can use CMake to make the MEX file, so maybe you should consider creating the MEX file as you normally would with MATLAB. Once you have a supported compiler installed, do "mex -setup" and see if MATLAB recognizes the compiler. From there, I would try "mex mexZED.ccp" and see what happens. Any errors you get from that should be specific to the build process which MATLAB is handling. Consider Contacting ZED's support as well. They should be able to provide direction, since it is their hardware. 
Welcome to the land of engineers, where ne'er a laugh was heard. 
&gt; I have tried my best to follow their instructions using Cmake but to no avail. So what happened? &gt; P.s I apologise in advance for the lack of clarity I apologize for the lack of an answer. 
Look up [this](https://fr.mathworks.com/help/matlab/learn_matlab/matrices-and-arrays.html). I've found [this](https://www.tutorialspoint.com/matlab/matlab_matrics.htm) website to be very useful when starting MATLAB. 
Cheers for the reply. I have gotten a bit further and downloaded the correct supported compiler, I feel I am nearly there. However I now get this error: "fatal error: opencv2/opencv.hpp: No such file or directory #include &lt;opencv2/opencv.hpp&gt;" After many google searches later, I still do not know what this means...I have ensured the 'opencv.hpp' file is in the directory.
You say you have a list of x,y data points: does that mean you have two inputs to the transfer function or one? I am going to assume you only have one, otherwise you would have a transfer matrix. You also need to know the sample time of your input data. If G is your transfer function representation of your filter, T is your sampling period and X is your input to the system you can do the following to get the output: &gt;&gt; t = T * 1: length (X); &gt;&gt; out = lsim(G, X, t);
Although the Fourier transform is related to the Fourier Transform, it doesn't produce the same results as applying the Laplace transform. This is very bad advice.
The X values that I have are times, so the XY represents a value over time. I need to apply my low pass filter onto that signal. 
in addition to the books: start trying to write your own code, learn to read the documentation, feel free to practice and experiment, and finally learn to read the documentation
So then in your case: &gt;&gt; out = lsim( G, Y, X );
Fourier transform is indeed special case of Laplace transform because,in Laplace transform we consider the magnitude and phase. Because s=sigma+ Omega. But in Fourier transform magnitude is zero. Hence e power j* Omega. In Laplace transform it is e power (sigma+ j *Omega). Please don't comment if you don't know. Look into books. 
Awesome. Didn't know lsim existed. Thanks so much! Will try this tonight. 
Yes, you are right I corrected my comment. Point still stands.
Okay you're right about data points. Result may vary alot. Sorry if offended. Thank you anyway. 
Glad to help :)
42 apples.
thank a lot, that was the reason
Really useful. Thanks!
format the code in your question better. explain what you're trying to do. also do you mean x=A\b or possibly x=A./b ?
That's a **highly** non-trivial task, depending how accurate you want the results to be. You could investigate a polynomial transform and probably get close, especially if you are willing to spend a lot of time selecting control points by hand. Either way though, this isn't something that can be explained in a brief reddit post, or done with a pre-built tool. You're going to have to actually understand the technical details of what you're trying to do, and write code to do it. Starting with the documentation for imtransform() would be a good idea. 
I'm not informed about your situations, but: 1. Yes Simulink requires Matlab, that's why I included it in my comment. My point was, even if you were buying Matlab + Simulink outright every year, without any site/volume discount, it should still only cost 5400 USD per year, or ~4600 EUR. 2. If you're buying large volumes, I would imagine you would qualify for a volume *discount*, so the total cost should be *less* than that, not more. 3. Maintenance fees should be even less than the outright purchasing. I cannot imagine a scenario where you could acquire a license for every Matlab toolbox for the same price as just Matlab + Simulink. Those toolboxes are generally *thousands each*. If you don't need them, stop paying for them, because you're definitely paying *something* for them.
You can put four spaces before a line to format it as code, or you can put a grave accent ` on either end of in-line code to tag it as code. Your question is hard to look at. &gt; Then would I multiply each vector by `1/2.^n`? What do you mean, "multiply each vector by?" Can you write out what you mean? &gt; So for `a` I would enter `1/2.^a` and proceed to add it to `1/2.^b`, `1/2.^c`, etc.? Is that what the question is asking you to do? To add (a) to (b), (c), etc.? *How would you do this on paper?* You need to have a plan before you go plugging away in Matlab. 