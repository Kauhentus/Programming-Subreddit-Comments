No worries, I love a good mystery. Glad you got it sorted. The word you are looking for is matrix though, not table. Just to avoid any future headaches. You are now RES tagged as "The Table Guy" and I will read all your posts in the voice styling of Ace Ventura. This should provide hours of entertainment for myself and be a source of annoyance for those around me. My week is looking up....
the reasoning behind making 50 or so functions in one file went something like this: A.) it's easier than copy/pasting 50 individual files. B.) it's easier to edit the code of the functions than navigating through the file structure and opening 50 files individually C.) for non-experienced matlab users, messing with the matlab path is confusing. Yes, it takes up some memory to import all those functions and as the project grows that parsimony might not necessarily be worth the overhead. In which case your class-based idea is actually fantastic. I'd originally started the project doing something similar (with classes), but since the lab I work at still has versions of Matlab dating back to before TMW added classes ('05 I think?) I shyed away from that approach. /u/Mimshot is right that I was trying to replicate Pythonic sort of behavior in matlab. Python has 'from * import *' which is basically what I was trying to do with the 'globalize' functions. Eventually I was hoping to have an 'import' function that could import every function in a given 'submodule' but I haven't implemented that yet. EDIT: Oh btw I'll try to add some examples to the github
Hi! I'm actually the author of this library. I'm a Python/C++ dev for a lab, but I program matlab pretty much every day. This repo has grown out of that as just a bunch of functions I've written over time to do pretty menial tasks (like simplify string operations and Excel input/output). Compatibility between matlab versions is also a pretty large force behind this project. My lab uses versions of matlab dating all the way back to the dark ages, and not all those functions (like strsplit, for instance, which was only added in R2013) are default in matlab. You're probably right that many of the functions could be implemented more succinctly/faster, but this is only a small project so far that I haven't had much time to devote to. If you do have some better ideas I'd encourage you to fork the github repository and make a pull request! 
I can run about 1.6909e+06 iterations / minute on my dinker of a laptop. If there isn't a magical solution (which it looks like is the case) then I'll install matlab on my server and run it for a couple weeks and see what happens!
Unless the laptop is really, really old that is probably wishful thinking. There are a few ways to cut down your search space. See my little sidebar above with Smartypants for a tiny discussion about that. This is an interesting little thought project. I'd be curious to see the outcome! If you do manage to come to some reasonable solution, please make another post.
Yeah the laptop isn't THAT bad (and the server isn't that snazzy). Interesting... I will be working on trimming the fat though for sure, the thought process above is much more straightforward and hopefully quicker
&gt; C++ dev This explains everything ;) And trying to shoehorn newer functionality into ancient version of MATLAB.... But mostly the C++ part. Kudos for your efforts. Contributing will be challenging given the need for such legacy support. 
Welp, herp-a-derp #2 for this discussion. You won't gain any benefit from my idea :\ Even if the two sides are 99 you're still well within the bounds for the center four (9801) so back to the massive brute force of the entire space :|
That is correct. I actually remember working that at a certain point too... Well damn. I guess I'll trim the fat I can find and then see if I can luck into one!
haha Paravastu's exam...someone post these answers!
If the column headers are in a cell array, use strcmp to find the index of the column you're interested in. If you are having more trouble than that, could you give more detailed info on the file format and other stuff?
Just took a peek through your code and uhh.... WAT. You are just picking random numbers and seeing if they work? That is a terrible idea :x You have no way to guarantee you hit the entire search space or to avoid repetitions...
That is true, but I also have a much lower chance of repeating it if I run on a 2-3 hour cycle without saving the iteration count (I was a bit lazy with that). When it gets put on the server it will have a more ordered system! But this is poor practice that I acknowledge haha
It's not a terrible idea if you suspect your search space has vast territories of unproductive areas, you have no good way to jump out of them, and iterating in the straight-forward fashion would leave them only after 10^12 years (etc.). Also, repetitions will be negligibly rare.
It is a csv file. So the column headers are across the row, with the corresponding data underneath in each column, I'm not quite sure what the strcmp command is returning.
There are arguments for and against blind iteration and random guessing. In the end both are terrible. Then again so is an exhaustive search of a space this size. Repetition chance is most definitely not negligible. The probability of a repeat goes up with iterations. If he hopes to exhaust the search space it has to be accounted for. Currently there is no tracking of what has been tried and no way to guarantee every possibility has been attempted (this is important since we have no proof a solution even exists). 
&gt; There are arguments for and against blind iteration and random guessing. Well... I just gave some for random guessing. I can't really think of any for blind iteration when the search space is so large... &gt; Repetition chance is most definitely not negligible. I mean, negligible in the fraction of CPU cycles that will be wasted processing things over again. The search space is so large, there is no way he will make a dent in it significant enough that he will end up wasting any significant amount of CPU cycles in this way. (And, consequently, he has no hope of exhausting the search space.) &gt; (this is important since we have no proof a solution even exists). I advocate the random approach, and letting it run while you work on such a proof and/or a more clever algorithm. EDIT: random guessing got me this: 1 6 1 0 5 6 6 6 5 3 4 7 7 0 9 0 0 1 0 0 1 2 1 2 0 1 0 0 5 4 5 4 3 9 0 3 9 0 1 0 0 7 0 5 6 0 8 0 0 1 0 0 2 4 2 4 2 9 0 5 8 0 2 0 I'm adding constraints to get rid of that zero-multiply in the 3rd column. It's cheating...
Just because we are highly unlikely to dent the search space (unless we score some cycles on Kraken...) you still have to consider the ramifications of IF you did since that is how the algorithm is currently defined. Given the scratch being put into it now, you are right almost none will be wasted. But if for some reason we managed to get further along it most definitely will add up. If I were to seriously approach a problem like this where I had little to no information for a decent starting point and/or where reasonable guesses could be made, I would take a hybrid of random guesses and iteration. Pick a random set, solve it, hold 3 corners constant, and iterate over the 4th for a bit. There has to be a clever metric for informing the next guess hiding in there somewhere too. There always is... I'd also wager a shiny nickel there are some spots to throw in a test or two to see early on if the thing is solvable (or a more elegant way to represent the data to solve it in fewer steps). I'm definitely filing this one away though. Fun thought experiment for sure. Sadly I have a presentation in 12 hours that I am nowhere near prepared enough for so I'm going to have to call it wraps for right now.
Minor aside: I love that this conversation is happening. Gotta love community driven discovery And I had that in my code yet forgot to write it. Thanks for confirming it's necessity!
I did exactly your hybrid approach to get my value, pick 12 values randomly, and iterate through the remaining four. I did it in C, and I get about 10 million / sec. Good luck on your presentation! Here's my code if you ever want to play with it later (EDIT: added 4 missing constraints, added code to save solutions &amp; progress to files): #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; int main(int argc, char * argv[]){ FILE *f; int x; int a11=0, a12=0, a13=0, a14=0, a15=0, a16=0, a17=0, a18=0; int a21=0, a22=0, a23=0, a24=0, a25=0, a26=0, a27=0, a28=0; int a31=0, a32=0, a33=0, a34=0, a35=0, a36=0, a37=0, a38=0; int a41=0, a42=0, a43=0, a44=0, a45=0, a46=0, a47=0, a48=0; int a51=0, a52=0, a53=0, a54=0, a55=0, a56=0, a57=0, a58=0; int a61=0, a62=0, a63=0, a64=0, a65=0, a66=0, a67=0, a68=0; int a71=0, a72=0, a73=0, a74=0, a75=0, a76=0, a77=0, a78=0; int a81=0, a82=0, a83=0, a84=0, a85=0, a86=0, a87=0, a88=0; int product; long long unsigned int nTries = 0, lastNTries=0; int found =0; a11=rand()%10; a12=rand()%10; a13=rand()%10; a14=rand()%10; a15=rand()%10; a16=rand()%10; a17=rand()%10; a18=rand()%10; a21=rand()%10; a22=rand()%10; a23=rand()%10; a24=rand()%10; a25=rand()%10; a26=rand()%10; a27=rand()%10; a28=rand()%10; a31=rand()%10; a32=rand()%10; a33=rand()%10; a34=rand()%10; a35=rand()%10; a36=rand()%10; a37=rand()%10; a38=rand()%10; a41=rand()%10; a42=rand()%10; a43=rand()%10; a44=rand()%10; a45=rand()%10; a46=rand()%10; a47=rand()%10; a48=rand()%10; a51=rand()%10; a52=rand()%10; a53=rand()%10; a54=rand()%10; a55=rand()%10; a56=rand()%10; a57=rand()%10; a58=rand()%10; a61=rand()%10; a62=rand()%10; a63=rand()%10; a64=rand()%10; a65=rand()%10; a66=rand()%10; a67=rand()%10; a68=rand()%10; a71=rand()%10; a72=rand()%10; a73=rand()%10; a74=rand()%10; a75=rand()%10; a76=rand()%10; a77=rand()%10; a78=rand()%10; a81=rand()%10; a82=rand()%10; a83=rand()%10; a84=rand()%10; a85=rand()%10; a86=rand()%10; a87=rand()%10; a88=rand()%10; while (1){ found =0; //Keep track of progress //nTries = nTries+1; if (((int)nTries/100000000) &gt; ((int)(lastNTries)/100000000)){ f=fopen("progress.txt","a"); fprintf(f,"Number of tests: %llu\n", nTries); printf("Number of tests: %llu\n", nTries); fclose(f); } lastNTries = nTries; //init outer columns of first row randomly do { a11 = rand()%10; a12 = rand()%10; a17 = rand()%10; a18 = rand()%10; product = ((a11*10 + a12) * (a17* 10 + a18)); } while (product &gt; 9999 || (a11==0 &amp;&amp; a12==0) || (a17==0 &amp;&amp; a18==0)); //calc inner columns of first row a13 = ((int) product / 1000); a14 = ((int) product / 100) % 10; a15 = ((int) product / 10) % 10; a16 = product % 10; //repeat for second row: do { a21 = rand()%10; a22 = rand()%10; a27 = rand()%10; a28 = rand()%10; product = ((a21*10 + a22) * (a27* 10 + a28)); } while (product&gt;9999 || (a21==0 &amp;&amp; a22==0) || (a27==0 &amp;&amp; a28==0)); a23 = ((int) product / 1000); a24 = ((int) product / 100) % 10; a25 = ((int) product / 10) % 10; a26 = product % 10; //make sure no columns are 00 if (a11==0 &amp;&amp; a21==0) continue; if (a12==0 &amp;&amp; a22==0) continue; if (a13==0 &amp;&amp; a23==0) continue; if (a14==0 &amp;&amp; a24==0) continue; if (a15==0 &amp;&amp; a25==0) continue; if (a16==0 &amp;&amp; a26==0) continue; if (a17==0 &amp;&amp; a27==0) continue; if (a18==0 &amp;&amp; a28==0) continue;/**/ //repeat for seventh row: do { a71 = rand()%10; a72 = rand()%10; a77 = rand()%10; a78 = rand()%10; product = ((a71*10 + a72) * (a77* 10 + a78)); } while (product&gt;9999|| (a71==0 &amp;&amp; a72==0) || (a77==0 &amp;&amp; a78==0)); a73 = ((int) product / 1000); a74 = ((int) product / 100) % 10; a75 = ((int) product / 10) % 10; a76 = product % 10; //repeat for eighth row //for these for values, we iterate. It seems to be faster than the random approach //possibly because less calculation is done before bailing. Additional iteration (back //into the 7th row) doesn't seem to add much. for (a81 = 0; a81&lt;10;a81++){ product = ((a11*10 + a21)*(a71*10 + a81)); if (product &gt; 9999 || (a81==0 &amp;&amp; a71==0)) { nTries = nTries+1; continue; } //first column, inner values a31 = ((int) product / 1000); a41 = ((int) product / 100) % 10; a51 = ((int) product / 10) % 10; a61 = product % 10; for (a82=0;a82&lt;10;a82++){ product = ((a12*10 + a22)*(a72*10 + a82)); if (product &gt; 9999|| (a82==0 &amp;&amp; a72==0) || (a82==0 &amp;&amp; a81==0)){ nTries++; continue; } //second column, inner values a32 = ((int) product / 1000); a42 = ((int) product / 100) % 10; a52 = ((int) product / 10) % 10; a62 = product % 10; if (a31 ==0 &amp;&amp; a32==0) continue; // degenerate row solution if (a41 ==0 &amp;&amp; a42==0) continue; // degenerate row solution if (a51 ==0 &amp;&amp; a52==0) continue; // degenerate row solution if (a61 ==0 &amp;&amp; a62==0) continue; // degenerate row solution for (a87=0;a87&lt;10;a87++){ product = ((a17*10 + a27)*(a77*10 + a87)); if (product &gt; 9999 || (a87==0 &amp;&amp; a77==0)) { nTries = nTries+1; continue; } //seventh column, inner values a37 = ((int) product / 1000); a47 = ((int) product / 100) % 10; a57 = ((int) product / 10) % 10; a67 = product % 10; //final value for (a88=0;a88&lt;10;a88++){ nTries = nTries+1; product = ((a18*10 + a28)*(a78*10 + a88)); if (product &gt; 9999) continue; if (a87 ==0 &amp;&amp; a88==0) continue; // degenerate solution if (a78 == 0 &amp;&amp; a88==0) continue;// degenerate solution a38 = ((int) product / 1000); a48 = ((int) product / 100) % 10; a58 = ((int) product / 10) % 10; a68 = product % 10; if (a37 ==0 &amp;&amp; a38==0) continue; // degenerate column solution if (a47 ==0 &amp;&amp; a48==0) continue; // degenerate column solution if (a57 ==0 &amp;&amp; a58==0) continue; // degenerate column solution if (a67 ==0 &amp;&amp; a68==0) continue; // degenerate column solution product = (a81 * 10 + a82) * (a87*10 + a88); if (product &gt; 9999) continue; a83 = ((int) product / 1000); a84 = ((int) product / 100) % 10; a85 = ((int) product / 10) % 10; a86 = product % 10; if (a73==0 &amp;&amp; a83==0) continue; // degenerate row solution if (a74==0 &amp;&amp; a84==0) continue; // degenerate row solution if (a75==0 &amp;&amp; a85==0) continue; // degenerate row solution if (a76==0 &amp;&amp; a86==0) continue; // degenerate row solution //now find inner 4x4 matrix values product = (a31*10 + a32) * (a37*10 + a38); a33 = ((int) product / 1000); a34 = ((int) product / 100) % 10; a35 = ((int) product / 10) % 10; a36 = product % 10; product = (a41*10 + a42) * (a47*10 + a48); a43 = ((int) product / 1000); a44 = ((int) product / 100) % 10; a45 = ((int) product / 10) % 10; a46 = product % 10; product = (a51*10 + a52) * (a57*10 + a58); a53 = ((int) product / 1000); a54 = ((int) product / 100) % 10; a55 = ((int) product / 10) % 10; a56 = product % 10; product = (a61*10 + a62) * (a67*10 + a68); a63 = ((int) product / 1000); a64 = ((int) product / 100) % 10; a65 = ((int) product / 10) % 10; a66 = product % 10; //check vertical-inner 4 columns for constraint satisfaction: if ((a13*10 + a23) * (a73*10 + a83) != (a33*1000 + a43 * 100 + a53*10 + a63)) continue; if ((a14*10 + a24) * (a74*10 + a84) != (a34*1000 + a44 * 100 + a54*10 + a64)) continue; if ((a15*10 + a25) * (a75*10 + a85) != (a35*1000 + a45 * 100 + a55*10 + a65)) continue; if ((a16*10 + a26) * (a76*10 + a86) != (a36*1000 + a46 * 100 + a56*10 + a66)) continue; found = 1; break; } if (found) break; } if (found) break; } if (found) break; } if (found){ f=fopen("solutions.txt","a"); fprintf(f,"FOUND: \n"); fprintf(f,"%i %i %i %i %i %i %i %i\n", a11, a12, a13, a14, a15, a16, a17, a18); fprintf(f,"%i %i %i %i %i %i %i %i\n", a21, a22, a23, a24, a25, a26, a27, a28); fprintf(f,"%i %i %i %i %i %i %i %i\n", a31, a32, a33, a34, a35, a36, a37, a38); fprintf(f,"%i %i %i %i %i %i %i %i\n", a41, a42, a43, a44, a45, a46, a47, a48); fprintf(f,"%i %i %i %i %i %i %i %i\n", a51, a52, a53, a54, a55, a56, a57, a58); fprintf(f,"%i %i %i %i %i %i %i %i\n", a61, a62, a63, a64, a65, a66, a67, a68); fprintf(f,"%i %i %i %i %i %i %i %i\n", a71, a72, a73, a74, a75, a76, a77, a78); fprintf(f,"%i %i %i %i %i %i %i %i\n", a81, a82, a83, a84, a85, a86, a87, a88); fprintf(f,"\n\n"); fclose(f); printf("FOUND: \n"); printf("%i %i %i %i %i %i %i %i\n", a11, a12, a13, a14, a15, a16, a17, a18); printf("%i %i %i %i %i %i %i %i\n", a21, a22, a23, a24, a25, a26, a27, a28); printf("%i %i %i %i %i %i %i %i\n", a31, a32, a33, a34, a35, a36, a37, a38); printf("%i %i %i %i %i %i %i %i\n", a41, a42, a43, a44, a45, a46, a47, a48); printf("%i %i %i %i %i %i %i %i\n", a51, a52, a53, a54, a55, a56, a57, a58); printf("%i %i %i %i %i %i %i %i\n", a61, a62, a63, a64, a65, a66, a67, a68); printf("%i %i %i %i %i %i %i %i\n", a71, a72, a73, a74, a75, a76, a77, a78); printf("%i %i %i %i %i %i %i %i\n", a81, a82, a83, a84, a85, a86, a87, a88); printf("\n\n"); } } return 0; }
The correct answer posted below isn't very clear, so here's how to multiply vectors A and B as you want to make the resulting vector prod. prod=A.*B;
[I posed some C code here](http://www.reddit.com/r/matlab/comments/1qvahg/would_love_help_creating_a_better_process_to_look/cdhop46). I get about 600 million candidates / minute on my laptop. No solutions yet, though...
Oops, I meant per minute... fixed. Mostly the speed of C. I don't think there's a super fast way to write this for Matlab.
The help files should tell you whet strcmp is doing: http://www.mathworks.com/help/matlab/ref/strcmp.html. Also check out strcmpi if you want to ignore capitalization. As for reading a csv file, check out csvread (http://www.mathworks.com/help/matlab/ref/csvread.html), rather than using fgetl. Sorry if I sound unhelpful, I'm on my iPad and don't feel like typing a lot :-P
Interesting. Well I am running it on my end as well.... it'd be sweet to find one!
Yet another painful MATLAB life lesson :p Sometimes it is a wonderful feature, other times it shoots you in the arse. 
Directions unclear. Penis stuck in keyboard.
I apologize if i'm wasn't clear and I'm not sure if this is different then what i was asking. The cell array begins with a column header (string variable name) on row 14. I want to find the column head from there and then name the array below as a separate array. 
matlab does by default matrix operations. Thus using '*' invokes matrix multiplication, which is not element by element multiplication. However, if you would transpose one of all the columns it would work, but for future reference, use the '.' before any other operator to override the matrix operation interpretation. For instance, '.\^' will square every element of a matrix instead of matrix multiplying the matrix by itself however many times
Read up on dlmread() and/or csvread() assuming your data is in a plain text files of some sort and the entries are separated by some delimiter. EX: headers = dlmread(filename, delimiter, [14 1 14 38]); data = dlmread(filename, delimiter, [15 1 345 38]); That will grab the 38 rows from the 14th column as your headers then everything else as your data. If your data is in an Excel sheet there are also functions to help with that. I think they expect the header to be somewhere sane like the first line rather than down on line 14 though. You'll have to play with that.
No, I wasn't giving you explicit instructions to follow, that's my bad. If you do something like: headerTF = strcmpi(headerName, data(14,:)); Where header name is the string you are trying to find. HeaderTF will be a Boolean vector that is true where the entry of data(14,:) matches headerName and false elsewhere. Then, to access the data in the column below the chosen header name: MyData = data(15:end, headerTF); That should get you the vector of values that is in the column below your header name of interest.
But.. but.. Ace Ventura was not in The Cable Guy! Ace is his own man, in his own 2 series (both equally brilliant and I can't choose a favorite). Jim Carey is the actor your looking for. caaaAAABBBLLEEE GUYYYY (knock knock knock) CABLE GUY!!
In an interesting turn of events, it would appear that R2013b added a table datatype. It is different than what you posted though. They act like datasets from R.
Ok... So I just got around to implementing this colormapping today, and it's *almost* where I want it to be. How I have it coded (using different variable names but same structure as yours above), the color map paints everything &gt; 0 solid red, everything &lt; 0 solid blue, and everything = 0 white. What I ultimately want is a gradient in the color bar. So say my range is [-100 100], I want -100 to be the brightest blue, then as I approach 0 I want to have the color still be blue, but successively lighter as more and more white gets mixed in. Around 0, lets say [-10 10], I want these values colored white. Then as values begin to increase, I want them to become gradually reder as more red is being mixed in, until the values ~100 which should be the brightest and most solid red. Was that a bit more clear? I'm not familiar with providing colors based on the [x x x] index scheme (though I know what it does). Is there any way to just modify from within the for i=1:m loop? * EDIT: I think I have found a way, though I'll need to work on how smooth/sharp the gradient needs to be. You've got to increment/de-increment the 0 indecies on the blue/red colors to form the gradient. http://www.reddit.com/r/matlab/comments/1qzd26/objectively_defined_user_generated_color_bar/
What is your f?
And they are amazing. I've been converting most of my analysis data structures over to tables from struct arrays and the code is just so much cleaner.
I might have found a way... or at least know how to make the gradient. In the link above, there is a for loop that generated the colormap using [0 0 1] %blue [1 1 1] %white [1 0 0] %red I just opened one of my colormaps that I had actually gone into the figure and defined myself with the GUI - to make the gradient from blue&gt;white, the 1st and 2nd index need to maintain the same value, and they need to transition from 0 &gt; 1. Then to get from white to red, the 2nd and 3rd index need to maintain the same value and transition from 1 &gt; 0. Just a heads up if anyone else finds this problem, or is looking for a way to do something like this.
My first inclination would be to play with caxis.
Presentation went decently enough. I love research seminars, no rigid goals to meet like a normal class. Participation and being mildly competent are enough to get through. I'll see about throwing that snippet onto some hardware around the lab just for giggles. 
It is definitely a nice change of pace. Much better than being a Google replacement like most days around here!
Ran it last night, found a bunch, e.g.: 2 2 1 4 7 4 6 7 0 3 0 2 1 9 7 3 1 1 0 1 1 0 1 0 3 5 1 4 7 0 4 2 2 4 1 7 0 4 7 1 0 1 0 0 4 9 4 9 6 6 1 3 2 0 2 0 6 7 1 5 4 1 2 3 (BTW: I found four missing constraints in the code I posted last night, which is now edited to include them) I'm going to modify it to find matrices without zeros along the outer two rows &amp; columns, and see if it can find any more.
Yes, `categorical` is a great addition, too. That you can filter on them in a table is also a plus. It's a much more Matlabish solution than enumerated types. My one big annoyance at tables is that when you slice a single element out of a cell array column it returns the cell, not the vector contained in the cell. This means you end up getting lines like `rowfun(@(signal, gain) signal{1}*gain, myTable(:,{'signals', 'gains'})` with that obnoxious `{1}` there to get the contents of the cell.
Hah, I remember those seminars. I found about 40 solutions last night (there were some missing constraints in the code I posted last night, now added). A lot of them involve 1 * something, which isn't that interesting. I tweaked it to skip over solutions with 0s in the outer two rows &amp; columns, running now... EDIT: Bam! 6 2 4 5 8 8 7 4 6 1 2 9 2 8 4 8 1 1 0 4 6 2 4 2 7 6 4 4 8 4 5 9 8 3 6 8 0 6 8 2 2 8 2 4 6 4 8 8 2 7 1 7 8 2 6 6 7 8 1 6 3 8 2 1 
You can spit polish a turd, but it's still a turd! 
Success \o/
Wow no way, I never thought I'd end up seeing one, much less in such a short amount of time. Thanks
No problem, it was fun! I've looked through 200 Billion and that was the only one so far. I'm not doing 12x12...
Haha I don't blame you! Do you mind if I summarize this comment thread on my blog thing? I'd give credit where it is due (and/u/matuba as well!)
Go ahead! I'll message you the code I used to generate it. I posed the solution to your blog, but if you're going to write it up better, just go ahead and delete that.
Derp. Went to copy/paste from putty to update on the iteration I was at. And naturally killed the process. *sigh* Sometimes I'm not very bright. Just restarted it. No solutions either way. Will update later.
I would like to say that your matrix looks like (primes indicate transpose): A E B F G E' C F' A' where A,B,C are 2x2 matrices; E,F' are 2x4 matrices; and G is a 4x4 symmetric matrix. By just picking A, B, and C (just 12 integers) you should be able to create these arbitrarily. Edit: B&amp;C must be symmetric. I made some crude Matlab code that spits these out fairly well. Most have a lot of zeros, but otherwise it runs fine. 5 6 2 9 1 2 5 2 4 0 0 8 0 0 2 0 2 5 0 5 0 0 2 0 5 3 5 1 9 4 9 8 9 4 0 9 4 0 1 0 2 0 0 4 0 0 2 0 4 8 2 5 9 2 5 4 8 9 5 3 4 0 6 0
I am little confused as to what the problem is exactly. unwrap will take care of the flips from -180 to 180 and vice-versa. Can you provide either plots or the full code/data set?
Was running two instances and they both hit the same solution. So I went and added a seed to your code so they wouldn't be duplicating work. My little tinker server is cranking along at something like 5 M/sec. Also put it on my dedicated workhorse and it is getting just shy of 25 M/sec per core (only running it on 2 cores currently). Will see what it generates overnight. Total of ~55 M test a second. Should get a few more hits for certain. Edit: And just as I hit post... 8 0 2 4 0 0 3 0 1 3 0 0 1 3 0 1 6 0 1 2 0 0 2 0 6 0 2 4 0 0 4 0 4 6 0 0 4 6 0 1 2 0 0 0 2 0 0 1 8 2 6 6 4 2 8 1 2 0 0 0 2 0 0 1 
Yeah, I got about 40 solutions found while running last night. [EnergyHobo spotted a pattern](http://www.reddit.com/r/matlab/comments/1qvahg/would_love_help_creating_a_better_process_to_look/cdi6lfq) that should make it easy to generate these in closed form. 
I saw that, very interesting behavior. They don't all fit it exactly though. It could help improve the selection of the initial guesses to be iterated against though. I'll leave that up to you and TRbarron though. In the morning I'll pass along whatever results are found by my runs to the two of you and you can go crazy :)
Ahh, I thought you had posted that edit as well. I just blindly copied your code, skimmed to make sure there wasn't anything nefarious hiding in there, then chucked it through gcc.
The reason is explicitly stated to you [by the warning](http://www.mathworks.com/help/matlab/ref/quadl.html). &gt;quadl will be removed in a future release. Use integral instead. However, quadl will continue to work until it is removed in whatever release it gets removed from. Is there an actual error that prevents your code from executing or is this it?
Oops! Here it is (and maybe check it too...): #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; int main(int argc, char * argv[]){ FILE *f; int x; int a11=0, a12=0, a13=0, a14=0, a15=0, a16=0, a17=0, a18=0; int a21=0, a22=0, a23=0, a24=0, a25=0, a26=0, a27=0, a28=0; int a31=0, a32=0, a33=0, a34=0, a35=0, a36=0, a37=0, a38=0; int a41=0, a42=0, a43=0, a44=0, a45=0, a46=0, a47=0, a48=0; int a51=0, a52=0, a53=0, a54=0, a55=0, a56=0, a57=0, a58=0; int a61=0, a62=0, a63=0, a64=0, a65=0, a66=0, a67=0, a68=0; int a71=0, a72=0, a73=0, a74=0, a75=0, a76=0, a77=0, a78=0; int a81=0, a82=0, a83=0, a84=0, a85=0, a86=0, a87=0, a88=0; int product; long long unsigned int nTries = 0, lastNTries=0; int found =0; srand(time(0)); a11=1+rand()%9; a12=1+rand()%9; a13=1+rand()%9; a14=1+rand()%9; a15=1+rand()%9; a16=1+rand()%9; a17=1+rand()%9; a18=1+rand()%9; a21=1+rand()%9; a22=1+rand()%9; a23=1+rand()%9; a24=1+rand()%9; a25=1+rand()%9; a26=1+rand()%9; a27=1+rand()%9; a28=1+rand()%9; a31=1+rand()%9; a32=1+rand()%9; a33=1+rand()%9; a34=1+rand()%9; a35=1+rand()%9; a36=1+rand()%9; a37=1+rand()%9; a38=1+rand()%9; a41=1+rand()%9; a42=1+rand()%9; a43=1+rand()%9; a44=1+rand()%9; a45=1+rand()%9; a46=1+rand()%9; a47=1+rand()%9; a48=1+rand()%9; a51=1+rand()%9; a52=1+rand()%9; a53=1+rand()%9; a54=1+rand()%9; a55=1+rand()%9; a56=1+rand()%9; a57=1+rand()%9; a58=1+rand()%9; a61=1+rand()%9; a62=1+rand()%9; a63=1+rand()%9; a64=1+rand()%9; a65=1+rand()%9; a66=1+rand()%9; a67=1+rand()%9; a68=1+rand()%9; a71=1+rand()%9; a72=1+rand()%9; a73=1+rand()%9; a74=1+rand()%9; a75=1+rand()%9; a76=1+rand()%9; a77=1+rand()%9; a78=1+rand()%9; a81=1+rand()%9; a82=1+rand()%9; a83=1+rand()%9; a84=1+rand()%9; a85=1+rand()%9; a86=1+rand()%9; a87=1+rand()%9; a88=1+rand()%9; while (1){ found =0; //Keep track of progress //nTries = nTries+1; if (((int)nTries/100000000) &gt; ((int)(lastNTries)/100000000)){ f=fopen("output_nozeros.txt","a"); fprintf(f,"Number of tests: %llu\n", nTries); printf("Number of tests: %llu\n", nTries); fclose(f); } lastNTries = nTries; //init outer columns of first row randomly do { a11 = 1+rand()%9; a12 = 1+rand()%9; a17 = 1+rand()%9; a18 = 1+rand()%9; product = ((a11*10 + a12) * (a17* 10 + a18)); } while (product &gt; 9999 ); //calc inner columns of first row a13 = ((int) product / 1000); a14 = ((int) product / 100) % 10; a15 = ((int) product / 10) % 10; a16 = product % 10; if (a13==0 || a14==0 || a15==0 || a16==0) { nTries++; continue; } //repeat for second row: do { a21 = 1+rand()%9; a22 = 1+rand()%9; a27 = 1+rand()%9; a28 = 1+rand()%9; product = ((a21*10 + a22) * (a27* 10 + a28)); } while (product&gt;9999 ); a23 = ((int) product / 1000); a24 = ((int) product / 100) % 10; a25 = ((int) product / 10) % 10; a26 = product % 10; if (a23==0 || a24==0 || a25==0 || a26==0) { nTries++; continue; } //repeat for seventh row: do { a71 = 1+rand()%9; a72 = 1+rand()%9; a77 = 1+rand()%9; a78 = 1+rand()%9; product = ((a71*10 + a72) * (a77* 10 + a78)); } while (product&gt;9999); a73 = ((int) product / 1000); a74 = ((int) product / 100) % 10; a75 = ((int) product / 10) % 10; a76 = product % 10; if (a73==0 || a74==0 || a75==0 || a76==0) { nTries++; continue; } //repeat for eighth row //for these for values, we iterate. It seems to be faster than the random approach //possibly because less calculation is done before bailing. Additional iteration (back //into the 7th row) doesn't seem to add much. for (a81 = 1; a81&lt;10;a81++){ product = ((a11*10 + a21)*(a71*10 + a81)); if (product &gt; 9999) { nTries = nTries+1; continue; } //first column, inner values a31 = ((int) product / 1000); a41 = ((int) product / 100) % 10; a51 = ((int) product / 10) % 10; a61 = product % 10; if (a31==0 || a41==0 || a51==0 || a61==0) { nTries++; continue; } for (a82=1;a82&lt;10;a82++){ product = ((a12*10 + a22)*(a72*10 + a82)); if (product &gt; 9999){ nTries++; continue; } //second column, inner values a32 = ((int) product / 1000); a42 = ((int) product / 100) % 10; a52 = ((int) product / 10) % 10; a62 = product % 10; if (a32==0 || a42==0 || a52==0 || a62==0) { nTries++; continue; } for (a87=1;a87&lt;10;a87++){ product = ((a17*10 + a27)*(a77*10 + a87)); if (product &gt; 9999 ) { nTries = nTries+1; continue; } //seventh column, inner values a37 = ((int) product / 1000); a47 = ((int) product / 100) % 10; a57 = ((int) product / 10) % 10; a67 = product % 10; if (a37==0 || a47==0 || a57==0 || a67==0) { nTries++; continue; } //final value for (a88=1;a88&lt;10;a88++){ nTries = nTries+1; product = ((a18*10 + a28)*(a78*10 + a88)); if (product &gt; 9999) continue; a38 = ((int) product / 1000); a48 = ((int) product / 100) % 10; a58 = ((int) product / 10) % 10; a68 = product % 10; if (a38==0 || a48==0 || a58==0 || a68==0) continue; product = (a81 * 10 + a82) * (a87*10 + a88); if (product &gt; 9999) continue; a83 = ((int) product / 1000); a84 = ((int) product / 100) % 10; a85 = ((int) product / 10) % 10; a86 = product % 10; if (a83==0 || a84==0 || a85==0 || a86==0) continue; //now find inner 4x4 matrix values product = (a31*10 + a32) * (a37*10 + a38); a33 = ((int) product / 1000); a34 = ((int) product / 100) % 10; a35 = ((int) product / 10) % 10; a36 = product % 10; product = (a41*10 + a42) * (a47*10 + a48); a43 = ((int) product / 1000); a44 = ((int) product / 100) % 10; a45 = ((int) product / 10) % 10; a46 = product % 10; product = (a51*10 + a52) * (a57*10 + a58); a53 = ((int) product / 1000); a54 = ((int) product / 100) % 10; a55 = ((int) product / 10) % 10; a56 = product % 10; product = (a61*10 + a62) * (a67*10 + a68); a63 = ((int) product / 1000); a64 = ((int) product / 100) % 10; a65 = ((int) product / 10) % 10; a66 = product % 10; //check vertical-inner 4 columns for constraint satisfaction: if ((a13*10 + a23) * (a73*10 + a83) != (a33*1000 + a43 * 100 + a53*10 + a63)) continue; if ((a14*10 + a24) * (a74*10 + a84) != (a34*1000 + a44 * 100 + a54*10 + a64)) continue; if ((a15*10 + a25) * (a75*10 + a85) != (a35*1000 + a45 * 100 + a55*10 + a65)) continue; if ((a16*10 + a26) * (a76*10 + a86) != (a36*1000 + a46 * 100 + a56*10 + a66)) continue; found = 1; break; } if (found) break; } if (found) break; } if (found) break; } if (found){ f=fopen("solutions_nozeros.txt","a"); fprintf(f,"FOUND: \n"); fprintf(f,"%i %i %i %i %i %i %i %i\n", a11, a12, a13, a14, a15, a16, a17, a18); fprintf(f,"%i %i %i %i %i %i %i %i\n", a21, a22, a23, a24, a25, a26, a27, a28); fprintf(f,"%i %i %i %i %i %i %i %i\n", a31, a32, a33, a34, a35, a36, a37, a38); fprintf(f,"%i %i %i %i %i %i %i %i\n", a41, a42, a43, a44, a45, a46, a47, a48); fprintf(f,"%i %i %i %i %i %i %i %i\n", a51, a52, a53, a54, a55, a56, a57, a58); fprintf(f,"%i %i %i %i %i %i %i %i\n", a61, a62, a63, a64, a65, a66, a67, a68); fprintf(f,"%i %i %i %i %i %i %i %i\n", a71, a72, a73, a74, a75, a76, a77, a78); fprintf(f,"%i %i %i %i %i %i %i %i\n", a81, a82, a83, a84, a85, a86, a87, a88); fprintf(f,"\n\n"); fclose(f); printf("FOUND: \n"); printf("%i %i %i %i %i %i %i %i\n", a11, a12, a13, a14, a15, a16, a17, a18); printf("%i %i %i %i %i %i %i %i\n", a21, a22, a23, a24, a25, a26, a27, a28); printf("%i %i %i %i %i %i %i %i\n", a31, a32, a33, a34, a35, a36, a37, a38); printf("%i %i %i %i %i %i %i %i\n", a41, a42, a43, a44, a45, a46, a47, a48); printf("%i %i %i %i %i %i %i %i\n", a51, a52, a53, a54, a55, a56, a57, a58); printf("%i %i %i %i %i %i %i %i\n", a61, a62, a63, a64, a65, a66, a67, a68); printf("%i %i %i %i %i %i %i %i\n", a71, a72, a73, a74, a75, a76, a77, a78); printf("%i %i %i %i %i %i %i %i\n", a81, a82, a83, a84, a85, a86, a87, a88); printf("\n\n"); } } return 0; }
My parachute just deployed, and my vectors are not yet multiplied. Send help.
Would this make it possible to do the 12 x 12 by doing A, B, &amp; C as 3x3's and G as a 6x6?
Potentially. Although it's not a complete solution since it mainly just works for the diagonal of G. You still need to do some searching for numbers that match on the nondiagonal terms of G; this could possibly flesh out one part of the solution space.
Thanks. I've decided to use "integral". There are more errors and the code is kind of confusing. Would you be okay with me posting it so you could take a look at it? 
I picked random numbers for all the variables and then ran each line, and everything looked fine and appeared to work as intended. So my follow-up to this is: are the variables F, R, T, etc. also made global in your other functions, like PsiD? What error or output do you get when you run, say, y = function2(20)? 
Of course, that's why we're all here. It's hard to diagnose the problem without all the code that causes it ;)
Right, so y is empty. Because we know the function's code works line-by-line with dummy variables, then it seems very likely that the problem is that the function isn't receiving some of the variables that you've made global. Are you sure that the other functions are outputting the global functions you use in function2? As another user said, feel free to post all your code! That will likely speed this process. 
Never thought about it being a mascot. That is an awesome use for it! 
I nominate this for the sub's new mascot, with the OP's permission of course. 
Sure, I'm fine with it if you guys really like it! :)
You may want to x-post this to /r/math, may get a little more coverage. That's pretty awesome. 
 5 0 0 2 5 0 0 5 8 9 4 7 1 7 5 3 1 0 0 0 4 0 0 4 3 3 0 8 9 1 2 7 9 8 4 9 9 8 5 1 2 7 0 1 8 9 0 7 2 4 1 3 9 2 5 8 4 3 0 3 8 7 0 9 7 1 5 7 5 1 8 1 0 5 0 0 7 5 1 5 2 0 1 0 0 0 5 0 1 0 0 7 0 0 7 0 0 1 0 0 5 7 5 7 0 5 0 0 7 5 1 5 3 0 2 1 0 0 7 0 0 1 0 0 1 5 1 5 8 0 4 1 6 0 5 2 8 1 1 7 8 2 2 2 5 0 2 0 5 0 4 1 2 0 0 3 4 0 1 7 8 0 5 4 4 0 6 8 0 3 0 0 0 6 0 2 6 0 5 2 8 0 8 8 0 3 0 0 0 3 0 1 8 1 6 7 2 3 8 3 0 1 0 0 3 0 3 0 2 0 1 2 0 0 6 0 4 0 2 8 0 0 7 0 0 1 0 0 2 3 2 3 0 1 0 0 3 0 3 0 3 0 2 4 0 0 8 0 0 1 0 0 1 1 1 1 3 0 2 8 8 0 9 6 7 3 4 8 9 1 6 7 2 0 0 4 8 0 2 4 5 0 4 4 0 0 8 8 9 0 8 0 1 0 8 9 0 9 0 0 0 9 0 1 7 0 2 5 9 0 3 7 0 3 0 0 0 9 0 3 4 3 2 3 6 5 5 5 6 2 3 2 8 6 5 3 1 0 0 2 3 0 2 3 8 2 2 6 2 4 3 2 4 8 3 2 6 4 6 8 0 8 0 4 4 8 5 6 4 0 1 8 4 0 4 6 0 9 0 2 8 8 3 2 9 0 8 1 0 0 9 0 8 5 0 5 9 5 0 7 5 0 4 0 0 0 8 0 3 2 0 4 8 0 1 5 9 8 0 8 8 2 0 9 0 5 0 0 2 5 0 5 5 5 5 3 9 0 9 8 5 7 0 2 8 5 0 5 0 3 0 1 2 9 4 3 5 8 2 2 6 2 3 9 0 2 0 0 0 4 0 2 0 8 0 0 9 6 1 2 3 5 0 9 1 0 2 6 5 0 4 6 0 0 9 2 0 7 0 0 3 5 0 5 7 5 2 8 5 0 3 8 7 5 4 6 5 0 6 2 2 0 0 5 2 0 2 6 6 1 2 4 4 0 4 0 6 6 4 2 9 0 6 5 9 5 4 9 4 0 5 2 6 0 0 0 0 0 0 0 9 3 6 6 9 6 7 2 3 3 1 6 5 0 5 0
I second the nomination (motion?).
Code please!
This is the best use of Matlab I have ever seen ;) 
Hi, Thanks for the response. We have tried unwrap but it appears that the errors are cumulative. We are taking spinal range of motion data using inertial sensors and there is obviously then a 'sensible' range for the data. When using unwrap on the raw data, there are values that go up to 20 radians. We have the raw data plotted and also a plot of the raw unwrapped data. How would you want us to upload it?
May I have it too! 
Eh, I'll go with the first one then.
Umm, how about not, since I need to do things that rely on the value of x, not the value of myFunc(y1,y2,y3). I'd end up calling the function 3-4 times.
But you defined x as the value of myFunc(y1,y2,y3). If you need to work with that number multiple times it would indeed be better to store it in x, but in the case of solely filtering out the multiple x=myF's;, this is an option.
Right, but it'd be filtering out multiple x = myF's in exchange for replacing all "do stuff on x" with "do stuff on myF" My goal was to eliminate the number of appearances of myF in the source code, not require more of them.
Sure! 
Yeah in that case I wouldn't advise my approach :P
Me too... why not just post it publicly?
I don't know, this is incredibly awesome, but I still like this one: % Grey axes axes('Xlim' ,[-7 7] , 'Xtick' ,-7:7,... 'Ylim' ,[-5 5] , 'Ytick' ,-5:5,... 'YtickL','' , 'XtickL','' ,... 'Ygrid' ,'on' , 'Xgrid' ,'on',... 'Xcolor',[.8 .8 .8], 'Ycolor',[.8 .8 .8]); hold on % Outer wings f1 = '(x/7)^2 * sqrt(abs(abs(x)-3)/(abs(x)-3)) + (y/3)^2 * sqrt(abs(y + 3/7*sqrt(33))/(y + 3/7*sqrt(33))) - 1'; ezplot(f1,[-8 8 -3*sqrt(33)/7 6-4*sqrt(33)/7]); % Bottom f2 = 'abs(x/2)-(3*sqrt(33)-7) * x^2/112 - 3 + sqrt(1-(abs(abs(x)-2)-1)^2) - y'; ezplot(f2,[-4 4]); % Outer ears f3 = '9 * sqrt(abs((1-abs(x))*(abs(x)-0.75)) / ((1-abs(x))*(abs(x)-0.75))) - 8*abs(x) - y'; ezplot(f3,[-1 -0.75 -5 5]); ezplot(f3,[ 0.75 1 -5 5]); % Inner ears f4 = '3*abs(x) + 0.75*sqrt(abs((0.75-abs(x))*(abs(x)-.5)) / ((.75-abs(x))*(abs(x)-.5))) - y'; ezplot(f4,[-0.75 0.75 2.25 5]); % Connect inner ears (flat line) f5 = '2.25*sqrt(abs(((0.5-x)*(0.5+x))/((0.5-x)*(0.5+x)))) - y'; ezplot(f5,[-0.5 0.5 -5 5]); % Inner wings f6 = '6*sqrt(10)/7 + (1.5-0.5*abs(x)) * sqrt(abs(abs(x)-1) / (abs(x)-1)) - 6*sqrt(10)/14 * sqrt(4-(abs(x)-1)^2) - y'; ezplot(f6,[-3 -1 -5 5]); ezplot(f6,[ 1 3 -5 5]); % Change line color and width set(get(gca,'children'),'Color','b','Linew',2) % Title and labels title('Batman'); xlabel(''); ylabel('') % Superimpose black axes with xy-ticklabels xlbl(1:15,1:2) = ' '; xlbl([1,8,15],:) = ['-7';' 0';' 7']; ylbl(1:11,1:2) = ' '; ylbl([1,6,11],:) = ['-5';' 0';' 5']; axes('Xlim' ,[-7 7], 'Xtick' ,-7:7,... 'Ylim' ,[-5 5], 'Ytick' ,-5:5,... 'YtickL',ylbl , 'XtickL',xlbl,... 'Box' ,'on' , 'Color' ,'none');
 % Reddit Alien hold on view([20 10]) % Head X=linspace(-2,2*pi,50); Y=linspace(0,2*pi,50); [Y X]=meshgrid(Y,X); x=-5.*cos(X).*-2.*sin(Y); y=-2.*sin(Y).*-2.*sin(X); z=-sqrt(40).*cos(Y); surf(x,y,z) % Antenna clc % Stalk R = .25; Rs = linspace(0, R, 4); SideH = 5; Sides = 0:SideH; Azs = 0:15:360; [AzMesh1, ZMesh] = meshgrid(Azs, Sides); XMesh1 = (R * cosd(AzMesh1)); YMesh1 = (R * sind(AzMesh1)); surf(XMesh1, YMesh1, ZMesh+5); clc % End R = 1; N = 10; Ang1 = linspace(0,360 ,N); Ang2 = linspace(-90,90,N); [Ang1s, Ang2s] = meshgrid(Ang1,Ang2); X = ([cosd(Ang2s) .* cosd(Ang1s)])*R; Y = ([cosd(Ang2s) .* sind(Ang1s)])*R; Z = ([sind(Ang2s)]+10)*R; surf(X, Y, Z); % Eyes clc for A = -2:4:2 R = 1.75; N = 25; Ang1 = linspace(0,360 ,N); Ang2 = linspace(-90,90,N); [Ang1s, Ang2s] = meshgrid(Ang1,Ang2); X = ([cosd(Ang2s) .* cosd(Ang1s)]-A)*R; Y = ([cosd(Ang2s) .* sind(Ang1s)]-1.75)*R; Z = ([sind(Ang2s)]+.75)*R; surf(X, Y, Z); end % Smile clc Space = linspace(-pi,0,50); [Thetas, Phis] = meshgrid(Space, Space); Xarr = (cos(Thetas) .* (7 + cos(Phis)))/1.75; Yarr = (sin(Phis))-3; Zarr = ((sin(Thetas) .* (1.85 + cos(Phis)))-1); surf(Xarr, Yarr, Zarr); % Ears clc for A = -9:18:9 Space = linspace(0,2*pi,25); [Thetas, Phis] = meshgrid(Space, Space); Xarr = ((cos(Thetas) .* (3 + cos(Phis)))+A)/1.25; Yarr = (sin(Phis)); Zarr = ((sin(Thetas) .* (3 + cos(Phis)))+4)/1.25; surf(Xarr, Yarr, Zarr); end % Body clc X=linspace(-2,2*pi,50); Y=linspace(0,2*pi,50); [Y X]=meshgrid(Y,X); z=(-5.*cos(X).*-2.*sin(Y))-10; y=(-2.*sin(Y).*-2.*sin(X)); x=(-sqrt(35).*cos(Y)); surf(x,y,z) % Arms clc for A = -2.75:5.5:2.75 Space = linspace(0,2*pi,50); [Thetas, Phis] = meshgrid(Space, Space); Xarr = ((cos(Thetas) .* (3 + cos(Phis)))+A)/.75; Yarr = (sin(Phis)); Zarr = ((sin(Thetas) .* (3 + cos(Phis)))-8.5)/.75; surf(Xarr, Yarr, Zarr); end % Feet clc for A = -4:8:4 X=linspace(-2,2*pi,25); Y=linspace(pi,pi/2,25); [Y X]=meshgrid(Y,X); x=(-5/2.*cos(X).*-3/2.*sin(Y))-A; y=(-3/2.*sin(Y).*-3/2.*sin(X)); z=(-sqrt(10).*cos(Y))-20; surf(x,y,z) end axis equal hold off
MATLAB's bin2dec() works on string representations of numbers. You can't throw a matrix at it and expect to get anything reasonable back. Since you call it a 'binary matrix' I'm going to assume it is a logical matrix, ie- each entry is a 1 or a 0. In which case you have some added leg work to get it in a format bin2dec() is going to be happy with. It is a bit hard to give advice without knowing more about what the data looks like and what is a reasonable answer to get back. Here are some tidbits that might help you work it out on your own though: bin2dec(10010); % won't work bin2dec('10010'); % works fine bin2dec(['10101'; '110101']); % doesn't work because each entry is different length bin2dec(['10101'; '11011']); % works fine because equal length Hopefully that helps you smush your data into a format appropriate for your situation.
[A little better photo of it](http://i.imgur.com/lVyzWLh.png)
..a what?
Good luck getting help with that, bro.
If it is just an image use imgur, if you care to upload the code and data dropbox; however, if you do not wish to publicize the data and the data is not too large, I can pm my e-mail address. 
If 'a' is your array, you can do max(a(a&lt;0)) 
 vals = [-10 -5 20]; max(vals(vals&lt;0)); That will give you the -5 from your example. Which is technically the smallest negative number, not the largest one.
if this is the case just loop through each element in the matrix and perform bin2dec on each element, put that into another matrix then call y_auxDec = M or something similar
Great, works well now the next part is that I was determining the largest negative number in an array from dimenions (1: rownum-1). My original syntax was [C,I]=max(ratio(1:rownum-1)) Now how do I add the parameter of ratio&lt;0 to this single statement?
Nice. I like the default colorbar. [Here](http://i.imgur.com/TLaJ4h0.png)
Personally, I use a global structure or a class depending on what I am doing. I usually have two globals global windows; global data; windows contains the uicontrol/figure/axes handles, and data keeps the parsed strings/matrices/cells. 
Why are you being a cunt?
I'm assuming by "array from dimensions (1: rownum-1)" you mean "along the rows of a 2d matrix" The two are vastly different ideas, but that is the best, most sensical situation I can extrapolate here. You can't use logical indexing anymore. It will turn your data into a vector and destroy any information about where things were in the original dataset. Instead you need to change your positive values to NaN and just use max along the ~~columns (default behavior when no dimension is specified).~~ rows. vals = [-10 -5 20; -3 0 -10; 12 8 -2] vals(vals&gt;=0) = NaN max(vals,[],2) Edit: Derped and gave columnwise solution, not rowwise as seems to be requested.
Again, each element is a single binary value. Doing that is going to give you exactly the same matrix as before. Without knowing what his data is, what it represents, and what he is trying to accomplish things are stuck. Is it 8-bit? 16-bit? Some crazy shit like 17-bit for some ungodly reason? 
That is just going to grab the first n values columnwise from his data. It won't do anything for finding the value from each ~~column~~row. Edit: Derped the dimension when originally reading reply.
You can set Display to 'off' in the options of the function, see [this link](http://www.mathworks.de/de/help/optim/ug/fsolve.html) and scroll down to Options. I hope this helps
Possible but still damn bloody hard. I changed the symmetry condition on B and C to diagonal form instead and got plenty of highly degenerate answers for 12x12 matrices. For example: 9 7 8 8 8 0 2 0 0 9 0 0 0 0 0 0 0 0 0 0 0 0 9 0 0 0 1 0 0 0 0 0 1 0 0 1 2 0 0 1 6 0 0 0 0 8 0 0 7 5 0 6 0 0 0 0 0 8 0 0 0 6 6 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 8 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 8 0 0 1 3 0 0 2 7 0 0 0 0 9 0 0 0 8 0 0 5 6 0 0 0 7 0 0 0 0 8 0 0 6 4 0 8 8 0 1 0 3 0 0 1 8 0 0 0 6 0 0 0 9 1 0 0 1 8 2 0 0 2 0 0 0 5 0 0 0 0 2 5 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 0 1 0 0 0 3 0 0 2 4 3 0 0 8 1 0 0 4 0 0 0 3 2 0 0 0 8 0 0 0 1 0 0 0 0 2 2 0 2 2 0 0 5 0 0 0 0 2 5 0 0 5 3 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 2 3 4 0 0 3 9 0 0 0 1 0 0 0 0 1 5 0 1 5 I ran though millions of iterations at a time and still barely got anything.
Now everything is ok ! thanks :)
how about max(ratio(ratio(1:rownum-1,:) &lt; 0)) then? The one thing I love about matlab syntax is that you often find smiley faces in your code
If I understand you correctly, you have a logical array A and you want an array B with the same values as A, but where each entry is of type 'double' as opposed to type 'logical'. If that is the case, you can simply do B = double(A);
Still won't work. See my above comment about what logical indexing yields. That isn't going to feed it row by row. It is going to take whatever block is defined by (1:n,:), strip out the negatives into a vector, and work on that. You lose all the row-wise results and end up with a single value.
Project Euler and MATLAB Cody (see side bar) have some items, but those are more puzzle and small task (respectively) oriented rather than full blown project ideas. What is your area of study? Any engineering (and what area), physics, chemistry, etc... background? Something purely linear algebra and oriented towards a novice is going to be challenging without knowing what other areas we can lead you towards.
[More free books! About all the things!](https://github.com/vhf/free-programming-books/blob/master/free-programming-books.md#matlab) Since we are posting free books... The above list on Github is absolutely AMAZING. Covers a SHIAT TON of topics, both general programming and language specific. 
I'm a math major who has limited experience with physics/engineering, but experience nonetheless.
Funny you should mention this. For my previous assignment, my class had to write a script that found the determinant, inverse (if applicable), eigenvalues, and eigenvectors of a user submitted nxn matrix. My professor probably wants this to be a level higher than that.
Me three! Please. (: Never mind. Read below, saw it. Thanks!
Maybe creating your own [Simplex Algorithm](http://en.wikipedia.org/wiki/Simplex_method)? That might be stretching the limits of the project though, since it probably isn't something you learned in class.
Nothing you can do to speed that up. That is as bare bones as it is going to get. Nothing you are doing has any faster alternative. Bubblesort is just a terrible algorithm. At worst case it is O(n^2). For instance, I just ran your function. For 100 items it took 0.012 seconds. For 1,000 it took 0.51 seconds. 10x the data 42x the execution time. For 10,000 items? 48.32 seconds. Again, 10x the data from before but this time a bump of 95x! So yeah, for 100k items, get ready for a long haul. Who the hell assigns one of the worst known sorting algorithms with a test dataset of 100k items? 
I don't see any way of making this run faster. I also ran it on my computer and got similar times as matuba. The only possible next step would be to do a parallelized bubble sort, where you split the list up into nodes, who each bubble sort it, then the sorted lists are merged using another algorithm. But I don't think that is what he expects....
He wanted us to figure out if we can see why bubble sort would be bad to use. I'm not going to finish running it and just write about how long it takes and how much it sucks compared to other algorithms taking much less time.. I just wanted to make sure I didn't mess anything up Thank you both
Just for fun, I benchmarked it for lists of length 10, 100, 1000, 2000, 5000, and 10000. Threw that into the curve fit toolbox. It gave a time equation of 4.84e-7*x^2. So for 100k items you're looking at 4,870 seconds (on my laptop). That's only 81 minutes. Checked a few other list sizes and the above equation gets within 1-2% of the actual computation time. So either you fucked something up or you're running this algorithm on a potato. Is this 100k item dataset provided? Or are you making it yourself?
You can access and work with a matrix in a cell just like any other matrix. c{1,1}(:,1) will give you that first column. Then you can do an element-wise multiplication with x, and sum the result. Stick that into D. Repeat for your other permutations there, and you're done.
 I like you more than the smell of Grandma's home-made apple pies 
This looks promising. From what I can gather most students are doing theirs over things not covered in class, so this might work very well.
Hi, Thanks again for the response. Here are the image links on imgur for the unwrapped and not unwrapped raw data. As you can see, the unwrap function does 'clean up' the flips but errors are introduced which appear to be cumulative even when changing the tolerances of the unwrap function. http://imgur.com/afMua9e http://imgur.com/y14SP4l I would be happy to email you the code and a set of data. The data is no more than a few megabytes and the entire code is around 200 lines long including comments.
Awesome piece of advice. Understanding indexing in matlab is essential for problems like these. 
GAH! Nonononono. Logical indexing is the proper approach. You also don't want to remove the value entirely. That will alter the trends in your data and make it harder to read/work with later on.
The code provided does not work. But to do it you would use the function called ''patch.'' 
It is going to be safer to find the points where z exceeds those bounds and set them equal to the bound. Removing the values entirely will still plot fine, but any subsequent use of them will be very difficult do to the gaps and irregularities introduced.
This is true. I wasn't sure what the OP meant with "getting rid" of the values. Deleting them completely will cause a pseudointerpolation anyway, setting them equal to the bound is the smarter choice
Doing it in place within the surf() call would be safe enough. No trashing the data so it is still usable afterwards and it will give the same appearance as you mentioned. Good compromise!
Save the handle to one GUI in the userdata field of the other. If you've ever used a GUI to communicate with a Simulink model, it's very much the same process.
I know this has been answered but there is another way too. See the following example code from [here](http://www.mathworks.com/matlabcentral/newsreader/view_thread/26844): x = (1:10)'; y1 = x; y2 = x.^2; [ax,h1,h2] = plotyy(x,y1,x,y2); set(ax,'XScale','log'); Sometimes Matlab does strange things and you need to set it to log as does in the example. In the above example, it is because they are using `plotyy` but the same idea applies
You could post it on [MATLAB Central](http://www.mathworks.com/matlabcentral/fileexchange/) if you haven't already.
I haven't; thanks for the advice :D
The hard part is coming up with something that would have a fair bit of actual linear algebra in it. You've apparently already covered the 'basic' linear algebra algorithms (inverse, eigen, determinant) so those are out... If it just needs to be something you write in MATLAB but doesn't really really hit on a ton of purely LA concepts, you can go down the list of standard CS learning algorithms/projects. Sorting algorithms, search algorithms, path finding. There are plenty of regression/minimization models you could write on your own, then compare to the toolbox implementations for accuracy/speed. Not sure if those would be sufficient for your class though. They would be at the right skill level (someone with a semester or so of thorough exposure) but may not fit from a topic stand point.
Here is my random script. A = randperm(10000); disp(num2str(A)); S = bubblesort(A); disp(num2str(S)); 
Welcome to the wonderful world of asycnhronous writes! You already have your file opened via fopen() to print with fprintf(). Now when you call save() it sees the file open and it waits but your script continues. The same happens for your other fprintf() commands. At the very end the script is ready to terminate and MATLAB finally decides it is safe for your save()'s to dump their data. The end result is the behavior you see. This can best tested using the following code: fidSV = fopen([fpathSV fnameSV],'w'); fprintf(fidSV,'%s\n','text to save #1'); fprintf(fidSV,'%s\n','text to save #2'); fprintf(fidSV,'%s\n','text to save #3'); fprintf(fidSV,'%s\n','========================='); save([fpathSV fnameSV],'lonSV','-ascii','-tabs','-append'); fprintf(fidSV,'%s\n','========================='); fclose(fidSV); save([fpathSV fnameSV],'latSV','-ascii','-tabs','-append'); fidSV = fopen([fpathSV fnameSV],'a'); fprintf(fidSV,'%s\n','========================='); save([fpathSV fnameSV],'dataSV','-ascii','-tabs','-append'); The first === will print, but save() for lonSV gets queued. The second === goes through. Then the file closes. This allows lonSV to finally get dumped. Then latSV can go since the file is still close. We reopen the file, the 3rd === goes. And finally nothing is left so the last dataSV is queued but immediately released as your script ends. You can add in some place holder fprintf()'s if they help you see what goes where. To fix it, you need to close the file handle before each save(), then reopen it afterwards. This is sloppy as hell and nasty to look at, but if you are dead set on doing it this way, here you go: fidSV = fopen([fpathSV fnameSV],'w'); fprintf(fidSV,'%s\n','text to save #1'); fprintf(fidSV,'%s\n','text to save #2'); fprintf(fidSV,'%s\n','text to save #3'); fprintf(fidSV,'%s\n','========================='); fclose(fidSV); save([fpathSV fnameSV],'lonSV','-ascii','-tabs','-append'); fidSV = fopen([fpathSV fnameSV],'a'); fprintf(fidSV,'%s\n','========================='); fclose(fidSV); save([fpathSV fnameSV],'latSV','-ascii','-tabs','-append'); fidSV = fopen([fpathSV fnameSV],'a'); fprintf(fidSV,'%s\n','========================='); fclose(fidSV); save([fpathSV fnameSV],'dataSV','-ascii','-tabs','-append'); 
PERFECT! This is *exactly* what I want. Good to know the little intricacies of the save() function.. Just had to add 5 lines to close/reopen the file for the fprint() commands.
Now that you know WHY your code is farked up, here is how to fix it (in a fresh, new post so it doesn't get lost). It is actually quite simple... Just keep using fprintf(). Voila! The command is there for a reason! It gets a bit tricky since you have two vectors and one matrix, but nothing that is insurmountable: lonSV=ones(1,15); latSV = 2*ones(1,6); dataSV=3*ones(6,15); fpathSV='./'; fnameSV='test.dat'; fidSV = fopen([fpathSV fnameSV],'w'); fprintf(fidSV,'%s\n','text to save #1'); fprintf(fidSV,'%s\n','text to save #2'); fprintf(fidSV,'%s\n','text to save #3'); fprintf(fidSV,'%s\n','========================='); fprintf(fidSV, '%0.2f\t',latSV); fprintf(fidSV,'\n%s\n','========================='); fprintf(fidSV, '%0.2f\t',lonSV); fprintf(fidSV,'\n%s\n','========================='); for i = 1:size(dataSV,1) fprintf(fidSV, '%0.2f\t',dataSV(i,:)); fprintf(fidSV, '\n'); end flcose(fidSV); This takes advantage of the fact that if you give fprintf() or sprintf() a vector/matrix it will apply your string format to everything in there. This can burn you though so be careful when you try it! For instance, had I just given it the entirety of dataSV it would all go on one giant line. Probably not a desired behavior. Instead we have to go row by row inside a loop. There may be a more elegant way to do it, but I'll leave that up to you (or someone else) to brainstorm. I'm done typing for now!
Please don't. I made a second post with a much nicer solution. While there is technically nothing wrong with doing that, it is an awful hack workaround for a situation that is easily remedied. It won't cause you any problems now, but if you were to do it a bunch things get unmanageable and the overhead from so many open/close operations will eventually bog you down.
That is a broader detail that isn't specific to just save(). It is MATLAB's way of keeping you from shooting yourself in the ass and overwriting data or sticking something in the middle where you may not have intended it. Ironically in trying to protect you from yourself (and not being very clear about it) it actually causes more problems than it solves AND makes it harder to detect those problems! Graceful failure is a nightmare!
This is how I've saved data arrays before.... I figured that the save() commands would be quicker, as it is probably already meant to be used with numerical data arrays, and would be quicker than a loop. Looks like it's back to the tried and true! Thanks again for the clarification. *Edit: would the excessive open/closing overhead issue be remedied if you were to clear the fid each time as well?
No, you are still opening and closing repeatedly. Generally that is a Bad Thing(tm) (as with using any other low level system calls repeatedly). On top of the open/closes you have, each save() also does it's own open/close. It really isn't a big deal considering you're just doing a few of them. it isn't going to take hours or anything. It is just a habit forming thing. The code is also much simpler and less prone to error if you aren't jumping back and forth between ideas. It is significantly easier to read and maintain which is the biggest argument I can make. While your thought process on using save() is solid, what do you think it does internally? Probably something extremely close to exactly what I posted ;) It might be a tiny bit faster since it can be implemented entirely in something lower level, but I'd be surprised if it was appreciably faster even for very large datasets.
Awesome, thanks. &gt;It really isn't a big deal considering you're just doing a few of them. And yes..... *&lt;shrinks away&gt;*, I am performing this operation ~4500 times, though not all at once, in batches of ~500.
***facepalm*** And this is why I discourage bad habits even in situations where they aren't going to really matter. Because someone, somewhere is going to take it to an extreme! Thank you for reinforcing my strict hardassness!
Again, running the exact code you posted above for bubbleSort() and this snippet to fire it up: 1k iters is 0.53 seconds and 10k iters takes around 50 seconds. The only reasonable explanation is your mac is running at the speed of potato. 100k should take a really long time, but probably not more than 80-85 minutes (for my laptop at least) At potato speed all bets are apparently off though...
I've been wanting custom CSS for our little subreddit for a while. Thanks!
You can get three major details out of the absolute value of the FFT. First you must divide the absolute value of the fft by N, the number of samples. Then at each frequency f there is a corresponding amplitude. Because of the symmetry of the FFT this amplitude is divided by two. How to use this? Look at a plot of abb(fft(y)), find the frequency of a peak, find the value of the peak and multiply by two. In the examples below, I use y=sin(2*t) and y=sin(2*t)+sin(10*t). You will see that the peak/s happen at 2, and 2 and 10, resp. In both cases the value of the absolute value of the fft is 0.5, or 1/2 the amplitude. t = linspace(0,2*pi,1000); N = length(t); y=sin(2*t); %y=sin(2*t)+sin(10*t); Y = fft(y,N); f = (0:(N-1))/N/mean(diff(t))*max(t); figure(1) plot(f,abs(Y)/N,'k'); figure(2) plot(t,y);
Well I just used a lot of get/set appdatas in the root directory. I know it's probably not the best programming practice, but it's the best my not-so-bright self can do.
What version of Matlab? It's been a long time since they required X11. R2013b works on 10.9 just as well as it did on 10.8 (that is to say: it only crashes about once a day)
http://www.commsp.ee.ic.ac.uk/~mandic../research/Complexity_Stuff.htm Also, for the future: 1. Go to google 2. Type in "multiscale entropy matlab" 3. ????????? 4. Profit
Yea some people in my lab had that problem. They just installed the update they recommended and it worked right away!
Silently failing to launch has often been licensing problems in my experience. 
Yes, I did. I had to go into the folder in which matlab is installed (go to applications, right click on your matlab installation, and click on 'show package contents'.) Double click on Activate and go through the activation process again. Worked fine for me after. I activated over the internet, but presumably this will work if you have a local license file. edit: This was the case with R2012b. I didn't have an issue with X11. 
Yes
Thanks ! I am going through the list. Introduction by Ross Spencer is amazingly useful for an intro book.
HG2 is Matlab's next generation graphics engine that will finally bring the graphics out of the dark ages. It isn't supported yet, but it is implemented and you can turn it on and play around with it. My friends at Mathworks tell me it's a complete overhaul of the graphics engine in MATLAB. I can't wait for them to flip the switch to HG2; probably in 2014a. 
Yes, very exciting and long overdue. I expected after they got reasonable OOP features built in that they would begin transitioning some of their clunky APIs to a more OO approach. But, the real quesition is, will it export to AI with a reasonable hierarchy?
Enjoy !
Thanks. This was helpful.
Looks like it's going to be cool, but it's still buggy. I was playing around with it just now and noticed lots of problems using `hold on;` and adding things to the plot.
I've never had such an issue. That was the same as my old setup and it worked fine. I have recently switched to cygwin-X, though. You might want to give cygwin a shot. Be sure to select ssh and x11 when installing (I don't think ssh is selected by default). And make sure you open cygwin-X, not cygwin if you need a window served to you (no Xming required).
Hmm.. So I have the contour for each z value. The way the contour is created is just that I have a bunch of x and y points and they all have a given z value. Is it possible to use matlab to find the area of the shape contained within all those x and y points? 
Try [polyarea](http://www.mathworks.com/help/matlab/ref/polyarea.html) and see if that works. Again, I'm no expert though.
Take a look at numerical integration
this post on the Mathworks site seems like it may have what you need: http://blogs.mathworks.com/loren/2011/06/13/calculating-the-area-under-a-surface/
This doesn't answer you question, but try matlab -nodesktop and just use the command window. It isn't ideal (unless, like me you prefer that view) but it may be a good test. (If you do use that, a few useful commands are `whos` that tells you what's in your workspace, `dbstack` gives you the error stack when you are in `keyboard` mode)
Is the data set uniformly distributed in the XY plane?...in other words is the dx and dy consistent?
It is not. But the points are extremely close to each other.
[Here](http://imgur.com/72UXjS2)'s another interesting one.
take a look at this: http://blogs.mathworks.com/videos/2009/09/18/revisited-integrating-to-find-the-volume-underneath-a-set-of-non-uniformly-spaced-data/ 
Needs more dimensions! Also, animation. You have to deliver on this...
The way I have been thinking of doing it is giving 6 variables (a,b,c,d,e,f) and setting them to zero. Then make a loop where for each iteration it adds one to f (the last number) and checks the sum of the first three and last three. If they are equal it records the value and count+1, if not equal doesn't record value. Then it continues adding one. However, I somehow need to tell it that if f = 9, then f = 0 and e + 1, and this is where it gets tricky. EDIT: Just discovered the cumsum function, going to try and make this work
~~Why should I put effort into a problem when you haven't done the same?~~ Edit: No fair making a follow up reply.
This is a start. Slight nudge: there is a type of loop that does the increasing of f ***for*** (&lt;--- hint hint nudge nudge) you. Using that multiple times will greatly simplify your solution using this approach.
So you've already found the obvious "try everything and see what works" solution. Kudos on that, but this is terribly inefficient. The first thing that jumps out to me is the case where the first 3 and last 3 digits are the same. IE- 234234. That case is obviously going to meet the criteria. The next step is realizing any permutation of that case will also match. IE- 234243, 234423, 234432, and so on. We can also permute the first 3 while holding the last 3 constant. IE- 432234, 324234, and so on. Now we're getting somewhere. But how can you exploit that? The fact that location is irrelevant (first 3 or last 3) gives some insight. There is no need to enumerate every possibility for each position, just for one. Now we are getting somewhere! How would you modify your initial test using an iteration through every single digit to take advantage of this little 'loophole' of sorts?
You already told me! Your original idea was to start at 0 and count 9. When you hit 9, increase the next place over, then go through that first one from 0 to 9 again. How would you do that using for loops? 
EDIT: see matuba's reply This seems to work. There are faster ways to do this but it gets the job done and if you're only running it once it's not a big deal. (n=55252) x = []; for a=0:9 for b=0:9 for c=0:9 for d=0:9 for e=0:9 for f=0:9 if a + b + c == d + e + f x = [x,(100000*a + 10000*b + 1000*c + 100*d + 10*e + f)]; end end end end end end end n = numel(x); 
This gets the number, but part of my task is to record each ticket # that has the matching first 3 and last 3 sums, unfortunately :(
Please promise you will never, ever concatenate vector entries like that ever again :| Or at the very least you will never do it when offering advice to someone else. Especially someone with extremely limited knowledge and experience who is probably already in the process of forming other bad habits on their own! Creating a counter variable and either assigning via one of these two: x(n) = 100000*a + 10000*b + 1000*c + 100*d + 10*e + f x(n,:) = [a b c d e f] is a significantly better choice. The choice depends on if you need each entry separately or not for later (irrelevant to this problem, but worth noting). Along with proper preallocation you can speed that up by almost 105x (from 2.2 seconds to .02 seconds). To demonstrate: tic x = []; for a=0:9 for b=0:9 for c=0:9 for d=0:9 for e=0:9 for f=0:9 if a + b + c == d + e + f x = [x,(100000*a + 10000*b + 1000*c + 100*d + 10*e + f)]; end end end end end end end n = numel(x); toc tic n=1; x = zeros(10^6,1); for a=0:9 for b=0:9 for c=0:9 for d=0:9 for e=0:9 for f=0:9 if a + b + c == d + e + f x(n) = 100000*a + 10000*b + 1000*c + 100*d + 10*e + f; n=n+1; end end end end end end end x(n:end) = []; toc 
Haha, I promise. I was going to edit in a better answer but I got distracted. 
if you look at x you will find it has the values (without leading 0s). Just double-click x in the workspace to open the variable viewer.
I'll let it slide this time... ;) On the plus side that is a damned good example of how terrible of an idea that is. I expected the speed up, but not that order of magnitude! Hopefully it drives the point home.
That's awesome!
I'm not entirely sure what you guys are debating over, BUT I just wanted to give a little update. While that is a working solution, I hit a wall and decided to take a completely different route. clc; clear; close all %--------------- Determine our 6 digit # and then split it in the middle B = 1000; A = randi(999999,1,1) LastThree = rem(A,B); FirstThree = (A - LastThree)/1000; numsolutions = 0; %------------------------- Calculate sum of first three n = 0; while (FirstThree/10^n) &gt;= 1 n = n+1; end for i = 1:n k = FirstThree - floor(FirstThree/10^i)*10^i; FirstThree = FirstThree - k; m(i) = k/10^(i-1); end sum(m); %-------------------------- Calculate sum of second three while (LastThree/10^n) &gt;= 1 n = n+1; end for i = 1:n k = LastThree - floor(LastThree/10^i)*10^i; LastThree = LastThree - k; f(i) = k/10^(i-1); end sum(f); % -------------------------- Test if sums are equal if sum(f) == sum(m); numsolutions = numsolutions + 1; end numsolutions So basically this generates a random number between 1 and 999,999 and checks if the sums are equal or not, so I have had a bit of success. However I am not sure how to apply this code section to a scenario where I have to check EVERY variable between 1 and 999,999. Any ideas? Also I really appreciate the feedback from you guys, this has been a really beneficial exercise.
Be sure to check out matuba's reply below, my code has a couple of bad practices that you should really avoid.
I've done both of these too. Here's a 3D one. http://imgur.com/VXRQl0Y I don't know what the best way of sharing the animation would be, other than just providing the code.
[This is a 3-body one that I made. It's only set up to do 3 bodies though.](http://i.imgur.com/wn6K5Nu.png) Also, I animated it which was probably the hardest part of it
Why not exploit the symmetry of the problem? Each set of three digit numbers can only add up to one of 28 different numbers (0+0+0 = 0; 9+9+9=27). Count up how many combinations add up to 0, how many add up to 1, etc. Then the total number of tickets that get the discount (out of one million total) is the number of combinations that sum to zero squared, plus the number of combinations that sum to one squared, etc.
So, what are your AbsTol and RelTol on the integrator that you used? Which integrator did you use? The n-body problem is one of the best known chaotic systems. As you change AbsTol and RelTol, integration tolerances, you will see vastly different results. So while this is really cool, you should be suspect of the accuracy of your results. As for animations, I can offer up some advice: 1. Use tsim=linspace(tmin,tmax,n) to get an evenly spaced time vector, then use this on the result on [t x], the results from your integrators. The uneven spacing often returned by the ode functions make the animations look unnatural. 2. Do not use any compression when using avifile, instead find a program that can convert avi's to flv's. I use ffmpeg on linux. 
I should have noted, the three things you can find: 1. Frequency components of a periodic signal. 2. Amplitude of said frequencies. 3. Average value of a periodic signal, this is returned by checking when w is zero. These are the more things you can find, but I find these to be the major things.
I used ode45 without changing any settings. Can you elaborate on using linspace to overcome the varying time step for animation? I'm not exactly sure what you mean by that. 
I was trying to keep it simple and build from the brute force search to more and more refined variations like that. Didn't want to overwhelm him! He also needs the list of combinations which limits how crafty you can be. At some point you have to go through the list so might as well do it as you search. That's what I was working to but the real world pulled me away and the brute force seemed to make OP happy so I let it be. 
I'm definitely filing this challenge away for later. You can pull a LOT of algorithm tricks out of it as well as using it to show quite a few things about MATLAB. Both good and bad!
Familiarize yourself with odeset, it will allow you to change different parameters and is very useful. As an example of why the tolerances are important, set up a basic two body problem for the earth and a satellite, i.e. mass of the satellite &lt;&lt;&lt; mass of earth. Set the simulation in motion without changing any tolerances and you will notice it will decay after about 5 orbits. As for the linspace example: You will get odeopts=odeset(...); [t x]=ode45(@odeFun,[tmin tmax],x0,odeopts,...); If you plot diff(t) you will see it varies all over the place. When you try to create an animation based off of this it will look strange when you replay it on a video that progresses at a constant rate. To get around this we use linear interpolation. tsim=linspace(tmin,tmax,n); n is going to be 1/(frame rate)*(seconds you wish to simulate for). This will create an evenly spaced time vector. Then we need to interpolate, you could use other schemes, but interp1 is really simple and typically looks fine. xsim=interp1(t,x,tsim); Then base your animation off of tsim and xsim. Let me work on an example and I will post it to youtube.
My approach to this would be much more math-y, so that you don't have ridiculous sets of for loops. Consider the first three digits: They can sum to any number between 3 and 27. For each sum, consider the sets of digits that are in non-decreasing order (so you're looking at 223, but not 322 or 232). Write a for loop that goes through all non-decreasing sets of numbers and indicates, for each sum, how many combos with 1, 2, or 3 unique digits there are. (so you should know, for instance, that for a sum of 3, there is one solution with 1 unique digit, and for a sum of 6, there is one solution with each of 1, 2, and 3 unique digits (123, 222, 114)) Now, for each sum, determine how many permutations there are. So just 1 for each 1 digit solution, and 3 for a 2 digit solution, and 6 for 3 digit solution. (so this would be 1 permutation for a sum of 3, and 1+6+18=24 for a sum of 6). Call this number n. A six digit number can pick any permutations from a particular sum for both the left and right half. So, for a particular sum, you have n * n six digit numbers. Now just add the n*n values for every sub between 3 and 27, and you have an answer! So in code: s = zeros(25,3) for i=1:9 for j=i:9 for k=j:9 sum = i + j + k if i == j and i == k s(sum - 2, 1) = s(sum - 2, 1) + 1 elseif i == j or i == k or j == k s(sum - 2, 2) = s(sum - 2, 2) + 1 else s(sum - 2, 3) = s(sum - 2, 3) + 1 end end end end count = 0 for m=1:25 perms = s(m,1)+ s(m,2)*3 + s(m,3) * 6 count = count + perms^2 end 
Check this out: http://youtu.be/4j4TZ1OZ-00 Notice how glitchy the first portion is. This is caused by the simulation time not scaling, or matching up, with the animation time. 
Is ode45 symplectic?
yeah so the first question was kinda complex i need to get thr as an output. W is a decreasing vector that needs the array T to go back into W. W is also a part of D. so basically, T is a part of W, and W is a part of T. can I still get T = D, and output thr (part of T) while T is needed to produce W?
It looks like you are setting up to just brute-force a solution rather than try to do the algebra and solve for an answer. Choose a value for thr, plug it in, see if it works and then choose another one.
Something is amiss, you want T=D, yet you are using T=thr*(Parasitic Drag). This will make your Throttle&gt;1 because induced drag is always &gt;0, but throttle is defined between 0 and 1. Yes, it is possible. Plug T into W, W into D, and find thr such that D-T=0. This can be done a variety of ways, Newton-Raphson, bisection, fsolve, etc. 
oh right i need to use thrust = thr*engine produced thrust my bad
actually, question - change of weight is described as fuel consumption * time * Thrust (weight loss/hour) how do i multiply two vectors together so that element 1 of thrust is multiplied by element 1 of time, multiplied by fuel consumption constant, to make element 1 of Weight, etc, etc, etc ?
I think what you are looking for .* (dot times). This is element-wise multiplication. When you start working with matrices be very careful of .* vs * (regular multiplication). 
Pretty much just curiosity, and to get used to using matlab's solvers. 
This code doesn't work, I know that. I'm trying other things right now like syms and loops...still can't get anything. 
Mathworks would not stoop to sticking reddit memes in their product, sorry. That used to be a picture of a [spy](http://undocumentedmatlab.com/images/spy.png), I'm mildly disappointed that it's been changed. 
CFS is a binary format and I have a program (biosig, which I install using an *.m file) that can even read smaller (1 MB) files, which results in some 525000 points in my case. However, larger files (100 MB) cannot be imported, and I have to use a command for importing the data piece by piece. And exactly this doesnt work... as far as I understand it, biosig is a collection of commands and the code for the specific command I want to use looks like (sorry for the lost formatting!) S = []; time = []; if nargin&lt;2, NoS = inf; end; if ~isnumeric(NoS) || (NoS&lt;0), fprintf(HDR.FILE.stderr,'Error SREAD: NoS must be non-negative number\n'); return; end; if (nargin&gt;=3) if (StartPos&lt;0), fprintf(HDR.FILE.stderr,'Error SREAD: StartPos must be non-negative\n'); return; end; tmp = HDR.SampleRate*StartPos; if tmp ~= round(tmp), % fprintf(HDR.FILE.stderr,'Warning SREAD: StartPos yields non-integer position\n'); StartPos = round(tmp)/HDR.SampleRate; end; else StartPos = HDR.FILE.POS/HDR.SampleRate; end; tmp = HDR.SampleRate*NoS; if tmp ~= round(tmp), fprintf(HDR.FILE.stderr,'Warning SREAD: NoS yields non-integer position [%f, %f]\n',NoS,HDR.SampleRate); NoS = round(tmp)/HDR.SampleRate; end; % define HDR.out.EVENT. This is used by EEGLAB. ix = (HDR.EVENT.POS &gt;= StartPos*HDR.SampleRate) &amp; (HDR.EVENT.POS &lt;= (StartPos+NoS)*HDR.SampleRate); HDR.out.EVENT.POS = HDR.EVENT.POS(ix)-StartPos; HDR.out.EVENT.TYP = HDR.EVENT.TYP(ix); if isfield(HDR.EVENT,'CHN') if ~isempty(HDR.EVENT.CHN) HDR.out.EVENT.CHN = HDR.EVENT.CHN(ix); end; end; I just need to get the syntax staight.. however what I really get are some of these error messages..
http://www.reddit.com/r/matlab/comments/1qq6ff/so_matlab/
You're likely better off with a [contour plot](http://www.mathworks.com/help/matlab/ref/contour.html) (or [3D](http://www.mathworks.com/help/matlab/ref/contour3.html)).
I looked at the documentation (which is not very helpful) and I didn't find anything about the limits. Please use http://pastebin.com/ for the code. It preserves formatting. Your code also doesn't show where HDR is assigned a value. I may be able to help you if I can see all the code.
No one is going to pay any attention to this until you fix the formatting of your post. Try sharing it via pastebin or reading the formatting help for reddit.
SSA and "the Gillespie algorithm" mean the same thing in my experience. Seems to depend on the sub-field which is preferred. Read the code to be sure though!
Thank you for your fast reply! Based on your post I tried to tweak the code because my 1 MB file (the one I uploaded) has only 1 channel, the dT is I think 4 microseconds (I record an electric signal with a sampling frequency of 250 kHz, and I would like to see all data points from 1 sec to 1.07 sec. So my code looks like: HDR = sopen('Cell 3AA.dat','r', 1); dT = 0.000004; tStart = 1; tEnd = 1.07; n = (tEnd-tStart)/dT output = cell(n,3) for k = 1:n %HDR is the original metadata from the sopen command %dT is the number of seconds per chunk %dT*(k-1) + tStart = tStart, tStart+dT, tStart+2*dT, ..., tEnd-dT [Si, HDRi, ti] = sread(HDR, dT, dT*(k-1) + tStart); output(k,1) = Si; %assign signals output(k,2) = HDRi; %assign header for this chunk output(k,3) = ti; %assign time vector for this chunk end sclose(HDR); %close the file This results in the error Warning SREAD: NoS yields non-integer position [0.000004, NaN] Error SREAD: CFS-format not supported yet. Assignment has more non-singleton rhs dimensions than non-singleton subscripts Do you know what this means?
I wasn't clear but dT is NOT the sample time but rather the number of seconds you want to load with each sread. The bigger problem is "CFS-format not supported yet." You can't use sread for CFS. You might be shit out of luck. Some alternatives: http://www.ced.co.uk/upu.shtml?contribu.shtml 
Ok so even you would confirm that it doesnt work? :) This means I have to contact the guy who wrote this. He is featured on the site you linked btw (CFS data into MATLAB: Biosig)... but thank you, kind stranger!
Look up the built in functions called tic and toc. I'm not near Matlab right now, but off the top of my head: tic; &lt;all your code&gt; time_taken = toc; disp "Time taken: " + time_taken + " s" 
But what do you do if the two structure arrays have the same set of fieldnames, just different numbers of entries in each one?
Yeah, as someone mentioned, tic and toc will measure the time elapsed. Tic starts the timer and toc will display the elapsed time since tic was called
I don't, and the reason for it is that I find it really good at its job. With live error checking and hints I feel more comfortable that using any other editor that can only give me highlighting.
An alternative I use is TextPad with syntax highlighting if the Matlab laptops at work are unavailable. It works pretty well but as inovision said, nothing beats live error checking and hints. 
I use Sublime text 2 to write Matlab code and I run it using the terminal (I'm on OSX). What I like about it is that it is more lightweight. There is much more functionality in the Matlab editor, but using sublime text 2 I find it easier to juggle across all my files. It also forces me to be more careful about how I code. I feel that sometime using a more "basic" setup allows a better understanding of what you do.
 disp(['Time taken: ', time_taken, ' sec']); *Edit: since time_taken isn't a string, should be: disp(['Time taken: ', num2str(time_taken), ' sec']);
A more brute force way would to just include one more loop outside of this all and loop over each row/col (whatever one needs the looping) and assign that row/col to a vector.
Thank you, I always mix those up! Typically I'd write it the way I did in my comment, get a red error, then open a previous script, swear, and then write it the way you did.. :D
I used the [MATLAB-mode in Emacs](http://blogs.mathworks.com/community/2009/09/14/matlab-emacs-integration-is-back/) in grad school since I used a Linux machine at the time and found it to be really great, but I don't necessarily think it's the best choice if you have zero Emacs experience. It's a great text editor and is really convenient if you're a command-line junkie like me, but it's definitely got a learning curve. That said, I do prefer the MATLAB editor overall.
Mathworks employees maintain Emacs's [matlab-mode](http://matlab-emacs.sourceforge.net/). It does autocompletion and integrates the Matlab debugger with Emacs's Grand Unified Debugger. Personally, when I thought Matlab was a necessity, matlab-mode was the only thing that kept me sane. Well, as sane as as you might think Emacs users can be. ;-)
Thanks everyone tic toc is exactly what I needed
That won't work, 'time_taken' isn't a string. fprintf('Time taken: %.3f sec\n',time_taken);
MATLAB's VideoWriter is fairly easy to use to crank out a video. Then throw it on YouTube, vimeo, dropbox, etc...
You're right. should be num2str(time_taken), is how I would code it
OP - just did some quick tests, and running code like: tic {your code} toc will produce the output "Elapsed time is 1.413882 seconds." If you do want to save the elapsed time, like you have, you could do what I've put abovve. as /u/DStoo pointed out, even my next step at being more correct with the disp() still wasn't complete, as time_taken is a double and not a string so it needs to be converted to a string (as my edit now does).
The discussion was about how terrible it is to do this: x = [x, newValue]; to put a new value onto a vector. It is a very, very bad thing to do because of the way MATLAB handles it internally. You should really pre-allocate a vector and specify which spot to put the new value into. As shown from running the test I posted, it ends up being SIGNIFICANTLY faster. Even for this smal, simple problem. As for why, consider the scenario of manually recording answers. His is what happens with the two cases: When doing x = [x, newValue] you are writing an answer on a sheet of paper. When a new answer comes along you get a completely fresh sheet of paper, copy the previous results, then write the new value at the end. Another answer comes, you copy that entire sheet to a new one, write the next result down. So on and so on. That is terrible! And that is what MATLAB will do. Instead, a smarter way is to say "well I think I'll have 120,000 answers, so I need enough paper to record those" Then as you get an answer you keep track of where it was written. When the next answer comes up, you write it in the next position. And repeat. That makes much more sense! At the end you might have extra space because you over-estimated the number of results. But that is fine, you can easily put back the paper (memory) you didn't use.
Again, there are a LOT of ways this can probably be solved. That is probably not the ideal approach, but the best I stumbled across based on my limited experience seeing similar things and a quick Google search. If I were to use the above, I'd wait for 4 points to be selected. Make them start, middle, middle, end based on selection order. Then ignore any further point choices until one is removed. Once one is removed, replace it with the next one chosen, then redraw. Wash, rinse, repeat. There is almost definitely a better way and I'm sure someone will come along soon and make me look foolish when they suggest it ;)
Haha do not worry about it. I really appriciate your help.
I use Textmate on Mac OS X to write larger projects. I write small assignments in the Matlab editor. The Matlab editor has some good features, and the main reason I use Textmate is that I'm used to it since I write all other code in the editor. I am more used to the shortcuts and it is also more lightweight on the screen. I like having several windows tiled and I prefer Textmate over the inbuilt editor when tiling windows. 
When you thought Matlab was a necessity? Have you since replaced Matlab with something else? If so, please do share.
But I have a reputation to uphold!
No, ode45 is not symplectic. It is a fairly general integrator. 
I should start charging a fee! That is actually a fairly simple bit of wizardry. The beginning should be easy enough to track: make up some fake data and quiver plot it. No big deal there. There is also the creation of a colormap on line 22 which is used later. This takes advantage of the MATLAB builtin colormaps and asks for a given number of discrete colors to be mapped. You can create your own or mimic that to use a built-in and specify a range of colors from it. Tinker at your own leisure with that. Lines 14-16 then take the quiver plot object and yank out the information about each arrow that was plotted. This is then processed inside the for loops (lines 24-33) to decide what to do. This is the portion you care about. From the description: "In the following plot, I modified each arrow's color depending on its angle against the x-axis, and headWidth that depends length." This bit happens on lines 26 and 27. The headwidth is simple enough: use Pythaegorean Theorem to find the length of each arrow. This value becomes the new arrowhead size. Easy febreezy. The color choice is a bit trickier. That requires you to actually remember geometry. Ugh, right? If you recall the mnemonic SOH CAH TOA to get the angle of a triangle: tan = opposite/adjacent Since he is going for angles from the X-axis, that makes the Y length the opposite and the X length the adjacent since everything is relative to the x-axis. Thus atan() returns the angle of that then convert to degrees and floor() to get an integer. Use that to lookup a color to make the arrow. For your case we need a new formula for the angle. The simplest idea is going to be adding 90 to the value gained. Why? [Check out this sweet MSPaint diagram](http://imgur.com/2VMSWE4) His formula gives the blue angle. That is relative to positive x-axis just like everyone knows and loves. For some ungodly reason you want relative to the negative y-axis. That is a simple shift of 90 degrees. So. Add 90 and Bob's your uncle! Blue is the angle being computed by that code. Orange is the angle you want. Feel free to draw more to convince yourself!
Emacs!
I think you want something like: cellfun( @(x)isequal(x,'x1'), T.bas ) That'll give you a logical array where `1` corresponds to cells containing `'x1'` and `0` corresponds to cells containing anything else. There might be a better way to do this, but at any rate, `cellfun` is good to learn about if you have never used it before.
I'm an [Octave](http://www.gnu.org/software/octave/) developer, which I consider a nicotine patch for Matlab addiction, and I hope [Julia](http://julialang.org/) or [Scipy](http://scipy.org/) can some day become the cure.
Do you need to buy a lego robot for this?
ended up using find(ismember(CELL,'x1')) thanks though!
The only thing MATLAB really brings to the table is a handful of nice toolboxes and Simulink. If you can do your work without relying on those there are plenty of other incredible alternatives. Python/SciPy/NumPy have come a very, very long way. With the recent addition of ggplot2 being ported to Python it makes for a very attractive alternative. Really and truly, most of the toolboxes are probably easily replaced as well. Simulink is really the big GOTCHA that Mathworks can rely on.
No you can choose other disciplines if you don't have a NXT near you.
Yes, I've tried octave, and it seems a pretty solid alternative to matlab. I've thought about getting into scipy as well, but haven't taken the leap. edit: Just looked at Julia as I'd never heard of it before, and I'm intrigued. I'll have to check it out at some point too. Out of curiosity, between scipy and julia, which would you say is easiest for a matlab user to get into?
strcmp or strcmpi are str's equality operator. It works on cell arrays.
If you have a nearby school, they may have some NXT's for use for the First Robotic Lego League (FLL). Our school district is heavily involved in the FLL and my university leases NXT units to students willing to mentor teams.
Just some clarification: Do you only want to output the rows that, when totaled, are greater than or equal to 89? 
yes
I think what you are looking for is z = nchoosek(v,10); y=z(((sum(z')&gt;=89)'),:) Essentially you place a binomial vector of ones (where your condition is true), and zeros (where your condition is false), as the row index. 
I see what you did and it is really close to what I need, and I hope you can help me with this: I have the following numbers: 360,270,400,380,290,400,420,380,480,330,370,290,500,450,360 and I need to know every combination(or at least a bunch of them) that when added will give me something between 4200 and 5000 hope you can keep helping me
How about: v = Columns 1 through 13 360 270 400 380 290 400 420 380 480 330 370 290 500 Columns 14 through 15 450 360 z = nchoosek(v,12); % 11 will work too but 10 is too short y=z(((sum(z')&gt;=4200 &amp;&amp; sum(z') &lt;=5000)'),:) 
You can use 11 12 and 13. So if you do: v=sort([60,270,400,380,290,400,420,380,480,330,370,290,500,450,360]); a = nchoosek(v,11); b = nchoosek(v,12); c = nchoosek(v,13); x=a(((sum(a')&gt;=4200 &amp; sum(a') &lt;=5000)'),:); y=b(((sum(b')&gt;=4200 &amp; sum(b') &lt;=5000)'),:); z=c(((sum(c')&gt;=4200 &amp; sum(c') &lt;=5000)'),:); You will get a lot more options. But the nchoosek function is order dependent. So if you shuffle v (Shuffle(v)) You will get different combinations of or these vectors you are creating. Therefore there are cases, when v is shuffled, that do not restrict you to 11-13. 
Might be worth reading this? https://www.mathworks.co.uk/matlabcentral/newsreader/view_thread/296028 There is a good resource here if you are willing to write the algorithm yourself: http://www.cs.berkeley.edu/~hling/research/paper/intersection.htm I am unaware of a file-exchange or built-in function that you can use straight up.
If you can take data point straight from the graph shown, you could use a least-square method to obtain your three coefficients.. E.g. Input Data: [xn,yn] N = length(xn); M = [sum(xn.^4 ) ,sum(xn.^3 ),sum(xn.^2 );... sum(xn.^3 ),sum(xn.^2 ),sum(xn);... sum(xn.^2 ), sum(xn), N]; Q = [sum(xn.^2 yn);sum(xn.yn);sum(yn)]; P = M\Q; c1 = P(1); c2 = P(2); c3 = P(3); Sorry for the formatting.
Thanks for sharing! 
Good to know. TIL something useful; thanks.
What have you tried? Where are you stuck? Where exactly does MATLAB come into the picture here?
Here is sort of how I have everything set up if that helps: %% Optimization of tfin and tgap using Fmincon function function [optin]=heatsinkfmincon(input0) %input0=struct('tfin',{0.001},'tgap',{0.0005},'Nfin',{80},'km',{380}); options=optimset('LargeScale','off','TolCon',1E-6,'TolX',1E-8); lb=0.0001; ub=0.01; [optin]=fmincon(@hsobj,input0,[],[],[],[],lb,ub,@nlcon,[],[],[]); output=heatsink(optin); end %% Object function for fmincon function [optout]=hsobj(input) output.Rtot=heatsink(input); optval=min(output.Rtot); end function [c,ceq]=nlcon(input0) output=heatsink(input0); initialout=heatsink(input0); c=[]; ceq=[(input0.Nfin-1)*input0.tgap+input0.Nfin*input0.tfin-0.119];%;initialout.Rtot-output.Rtot]; end Those are my three separate m-files ; Now I am getting the following error: *FMINCON only accepts inputs of data type double.*
You can't have a structure as your optimizing variable or output variable. You'll have to break out the Rtot and input variable. If you want multiple variables to be optimized, they should be put into a single array (you can call it input0, if you wish).
If it is a higher order ODE ( 2nd or above) , one approach is to first convert it into a system of first order ODEs. Then the output of that first order ODE system would be defined in a function file, that could then be numerically solved by passing it to one of several Matlab functions, such as ode45(), etc. depending on your boundary conditions. 
Thanks for the reply, i figured it out.
A. Assign the 10x7 data block to a Matlab variable , using Range feature in xlsread B. Each data column segment of 10 entires can be referred and passed to an averaging function using array(:,j) notation , where loop j = 1 : 7. There may be a way to avoid this loop by using vectorized code. Not sure. C. Repeat/Loop through 20 locations
&gt; B. Each data column segment of 10 entires can be referred and passed to an averaging function using array(:,j) notation , where loop j = 1 : 7. There may be a way to avoid this loop by using vectorized code. Not sure. [mean\(\)](http://www.mathworks.com/help/matlab/ref/mean.html) allows the user to average along the rows of A using mean(A,2), where mean(A) would give you the mean of each column. 
You can find SIFT features using [this code](http://www.vlfeat.org/~vedaldi/code/sift.html). The matches can be filterd using a RANSAC algorithm (find the Homography using a Normalized Direct Linear Transformation in the RANSAC). Using this homography, you can find your vector arrow.
you need a cost function that finds the chip temp based on the variables you're optimizing on. ChipTemp = f(tgap,tfin,Nfin,km)
When you use tic/toc, what you're doing is essentially running a stopwatch, time elapsed between those two lines of code. However, if you're trying to optimize some piece of code, you will want to use the function cputime instead: t = cputime; &lt;all your code&gt; cputime - t this will display the number of seconds that the MATLAB process ALONE was running on the processor. This is useful if you're running matlab with lots of things in the background, since tic/toc is going to give you different results each time you run your code based on what percentage of processor time the computer allotted the matlab process on each runthrough. Hope that helps.
Yes it does thanks
At what point does this become spam?
This looks like a job for regular expressions. http://www.mathworks.com/help/matlab/matlab_prog/regular-expressions.html
Okay so you have a 2D grid you want to evaluate these equations on. Are you using multigrid methods or are you trying to solve them in another way? Essentially - you discretize the operators first in the x direction and then in the y direction. Then you choose which direction you want to move in. Typically you will get a type of scheme. For instance pure laplace equation would yield a form of weighted mean of the central point fromt he 4 surrounding neighbours: http://en.wikipedia.org/wiki/Discrete_Laplace_operator. Depending on the equation and how you discretize you might get explicit or implicit methods - booth have their pros and cons. If I recall correctly implicit methods are very stable but dampens out variations in the solution. (the energy isn't preserved) but to be honest I haven't done this in a few years so my knowledge is rusty. Now that I think about it - the way you talked about overlaying the matrices, and mentioning steady state - I'm even more certain you are talkng about multigrid methods. In that case: http://www.youtube.com/results?search_query=multigrid+method&amp;sm=3 
Because x is not a scalar. cos(x) is also not a scalar and will be an array with the same dimensions and size as x. cos(x).*x will multiple each component of cos(x) with the corresponding component of x, and so is valid. cos(x)*x attempts to multiple the arrays cos(x) and x in a way similar to matrix multiplication, which is not possible as cos(x) and x have the same dimensions (it will sometimes work, such as if x is square matrix, but in general it won't).
So what you are trying to do is a finite-difference approximation of the 2D Reaction-Diffusion equation, meaning all derivatives are replaced by finite differences of some sort. There are multiple ways to approximate the derivatives (http://en.wikipedia.org/wiki/Finite_difference_method), that differ in complexity and accuracy of the results. Stability is also a major issue - if you choose your timestep wrongly (too large), you might end up with completely meaningless results (http://en.wikipedia.org/wiki/Courant%E2%80%93Friedrichs%E2%80%93Lewy_condition). Concerning the boundary conditions - you have multiple choices there, for example fixing the values of u and v on the boundary or having periodic boundary conditions. You should maybe get started with some simple finite-difference code - leave out the reaction and just code the diffusion part. I have some experience with FD code, so ask away if you have specific questions. Edit: Just to get you started, a simple diffusion finite difference code (central spatial differences, forward time differences). This is by no means a solution to your problem, but should give you something to see how to accomplish FD methods in Matlab. It is actually quite simple. % matrix size nx = 100; ny = 100; % edge lengths of discrete voxels dx = 0.1; dy = 0.1; % coordinate axes of problem space xLine = 0:dx:(nx-1)*dx; yLine = 0:dx:(ny-1)*dy; % diffusion coefficient D = 0.001; % timestep. Note: must obey stability criterion derived from spatial steps % and diffusion constant. Increase this value deliberately to see how the % solution "explodes". And: read up on stability :). dt = 0.001; % time to simulate tTotal = 100; nSteps = ceil(tTotal/dt); % initialize matrix with random values and add a peak in the middle to % diffuse away u = rand(nx,ny); u(fix(end/2)-5:fix(end/2)+5,fix(end/2)-5:fix(end/2)+5)=1; % define boundary values boundVal = 0.5; % average value of random data % initial plot img = imagesc(u,[0 1]); daspect([1 1 1]); colorbar; % timestepping for k=1:nSteps % Calculate the next value of u. The factor 4 is necessary, because % Matlab's Laplace operator del2 actually returns (del^2 u)/2/n with n % the number of dimensions (here 2) u = u + D * 4 * del2(u,xLine,yLine); % set the boundaries u(:,1) = boundVal; u(:,end) = boundVal; u(1,:) = boundVal; u(end,:) = boundVal; % update the plot set(img,'CData',u); title(sprintf('Timestep: %i',k)); drawnow; end
At a guess "hold on" is what youre after? it'll stop it erasing stuff when it does more stuff. subplot may also be useful.
"hold on" won't do much for displaying two images, that is for creating overlayed plots. subplot is one option. Concatenating the two images is another.
Use subplot: figure subplot(1,2,1), imshow(image1) subplot(1,2,2), imshow(image2) How "hours of searching" didn't bring this up shall forever remain a mystery. Googling "matlab displaying two images" gives hundreds of results with the exact same solution as above :| 
This is the internet, there is always a need to be snarky. Create the figure and subplots before hand and get their handle references. Use that to specify where your next set of images is displayed.
Another pro tip: if you've tried something and it failed, tell us for the love of jebsu. First and foremost I'm not an asshole to those that try to help themselves and show it (and claiming to have googled already does not count, 98% of the time it is painfully obvious that person hasn't googled a damned thing). I know (and so does everyone else) that generally any post here is coming from someone who doesn't know their ass from a hole in the ground when it comes to MATLAB and programming in general. Secondly, the issue you're having really isn't the one you originally asked for help with (and you are the third person today who has done that! imagine how taxing it gets over time). Apparently you had no problems getting two images to display at once. You DID have trouble getting them to display in the same window rather than spawning a new one. That is a separate issue entirely. With a separate reason for happening. And a separate solution. I really, really need to get around to writing a "how to not ask terrible questions" guide and spreading it far and wide. Not that your question was terrible, but it wasn't quite on point. Some of the others that come up now and then though... mother of all that is holy can they be bad :|
Thanks, I wanted to but i'm not sure how. How do i add attach a file? 
Cool thanks! I updated the description
That is awesome information! Do you think you would be willing to do a Skype/CrossLoop session to may be go through this simple code and help me "digest" and understand it a little bit? Again, I would be willing to compensate you for your time! Also, is it possible to do all of this in Octave (not enough $$ to get Matlab)? I wasn't sure how to get a graphical output in Octave like you can in Matlab, although I do know that a vast majority of the coding language is exactly the same. EDIT: ~~ Yes, my problem is with periodic boundary conditions. We also have a lambda value, that is represented by k/h^2 in my original problem, that must remain under 0.5 for stability. However, our professor noted that his model needed to stay under .1 for it to remain stable. I appreciate any more help/time you can give towards helping me understand all of this!!
I do believe it is multigrid methods...having trouble with the Youtube video, but my internet has been wacky all night, so im sure it is on my side of things. Ill watch it first thing in the morning! Thank you for your input! EDIT: ~ On the LaPlacian operator, I fully understand the "4 point" part of it. Whats difficult about this project is that the values at the boundary aren't really identified, so we have to use "imaginary points." This is of course impossible, so we instead use the central difference method to calculate an estimate of a particular mesh point along the boundary. We must do this twice over for those mesh points located at the "corners" of our 2D grid. I hope this makes sense, as its a little hard to explain in words instead of diagrams. 
Hope it helps! Basically what you do is that you create coarser grid from your original finer grid. You continue like this until you reach some minimal grid size - I think you smooth things along the way Sewell. I'm a bit rusty and only used it once but it's something like that
What kind of coundary conditions do you have? It sounds like you're trying to estimate the flow over the boundary i.e. neumann conditions am I understanding you correctly? 
Bingo. Neumann Zero-Flux boundary conditions. 
[Octave](http://www.gnu.org/software/octave/download.html) is a decent, free/open source replacement, maybe moreso for a newcomer who isn't aware of the better polish of Matlab. Be prepared to work in a terminal though.
I dunno, what do you want me to do? Cute isn't really something you can quantify. I messed around with it for 5 min and got this: http://i.imgur.com/IJRLLR5.png Is it :3 enough?
Okay - well I'll try to see what I can come up with during the day - no promiss though!
I'm not very familiar with Matlan. Perhaps you could try using Matlab?
Thanks mate, I will try that.
Yes I do! 
Unless you have an older version of MATLAB, you're going to have to rewrite his function. I'm not sure when the change was introduced, but diff() no longer works on character arrays. Given that his entire script relies on this syntax, it's about as much effort to make your own as it is to rework his.
How would you do it analytically? What have you tried? Why didn't it work? Do you want to use MATLAB's [function syntax](http://www.mathworks.com/help/matlab/ref/function.html) or do you want to prompt the user each time?
This is what the "all" function is for: C = all(AB,2); 
I thank you for your response gentlemen, but I solved my issue! Now I do believe that @excaza 's answer/way will be better in many ways, but still I decided to try, and managed to, do it using "impoint". And the results was okay, meaning the function doesn't update itself as im moving the external point. It recalculates when I've moved my points and tell the function im ready(with a doubleclick on one of the points). Felt obligated to write this, to thank you, and incase someone stumbled upon this post with the same issue! 
Matlan... the jeweled city of calculations.
Settlers of Matlan
This is the project I'm trying to do... "Get a computer program for distinguishing a randomly generated sequence of zeroes and ones from a cooked-up one. You are welcome to write the program yourself or use a ready one you find on the web or in some book. Test your program on the following two sequences: the sequence consisting of the concatenation of all numbers in binary form1 0110111001011101111000... and a similar sequence consisting of the concatenation of all prime numbers in binary form 0110111011111011 ... and comment on the results." I've been trying to figure how to do this for the past two days. :-/ Matlab is the closest I got. I downloaded diehard tools, but I don't understand how to format this input file. Fml. 
http://stackoverflow.com/questions/3097949/how-can-i-determine-the-statistical-randomness-of-a-binary-string
Sure but i'll need to sit with pen and paper myelf - I'll recommend you a book I thought was very good: "A Multigrid tutorial: second edition" - ISBN 978-0-898714-62-3 I am studying and working myself so I can't spend too much time on this, my plan was to give you just enough stuff and send you on your way :)
Basicall what you do is as the earlier user wrote that you replace your differentials with differences - here you can have forward, backward and central differences and all of them have different pros and cons. I think you usually do forward difference in the time partial derivative and in the space derivatives you can do a little bit whatever depending on stabillity. Some discretizations works better on certain problems. Anyway. for instance if we have the heat equation with no production in one dimension over a 1D grid from [0,L]: http://en.wikipedia.org/wiki/Heat_equation du/dt - a*(d2u/dx2) = 0 And neumann boundary conditions: du/dx(0) = 0, du/dx(L) = 1 ht : discret. step in time = (maxtime) / N hx : discret step in space = (L-0) / M replace du/dt with the forward difference: (u_i+1 - u_i) / ht, replace d2u/dx2 with a second order central difference, because your solution will converge faster then and is more stable: (u_j+1 - 2u_j + u_j-1) / hx^2 Do this for your original heat eq. and your boundary conditions as well, rewrite everything as "new time step value = old time step value + calculations", you now have a time stepping scheme: "Forward-Time, Central-difference scheme". I think it even has a fancier name than that. Anyway you rewrite your boundary conditions as well and simplify all equations, and this is the crucial part: you then place the first boundary condition eq on a new paper first, underneath it you write your new heat equation and under that your second boundary condition. Put in the ranges where these equations are defined as in the first is at n = 0, and the last boundary is at n=L and the main eq is inbetween. Put in the boundary values you have, simplify some more - and youll start to see how you can ceate a matrix out of this bad boy. Once you have mastered the 1D heat equation then search for "boundary value problems in 2 dimensions" and you'll see that one extra dimension is more or less the same thing. After that you speed it up with multigrid methods.
If this is for a class in university, you should know that it probably violates the student code of conduct (or whatever you call it there). Not only is it wrong to pay someone to do your homework from a moral standpoint, you are missing out on valuable experience that you may be expected to know. Also, $30 is next to nothing for what you want.
Dude, are you seriously offering to pay someone to do your HW? Even more so, for a group project? This has to be a joke...
I just downloaded it, and I'm going to take a read through it. Thank you again for all of your help. Im sending some Reddit Gold your way for your time! Mind if I PM you with any more questions?
Again, thank you for your time! I greatly appreciate it!
I wish I could help, I am also experiencing some Tolerance problems with ODE45 in a double pendulum simulator I am making. It works fine with most initial conditions but when I make the lengths or masses of either of the pendulums any less than 10% of the other pendulum it breaks. Also, at some initial conditions that the solver doesn't throw an error for it seems that it ends up "adding energy" to the system. So it seems to loose accuracy even when the equations don't throw a tolerance error
I think I am seeing a similar phenomena. The one solver I got to work was ode23, which does not give a tolerance area, but the solution appears to be pulled off after a certain number of time steps and pulled off from the actual solution. I am trying to solver for an asteroid's orbit. Apparently there is something called Verlet's method that can be used for solving Newton's laws of motions. This may be helpful for your pendulum. I tried writing my own script for Verlet's method, but I have yet to get it to work.
That would have been perfect! I managed to make my own though before haha, it was nowhere near as nice:P
Do you mean my command lines?
Yes. We can't help solve your problem if we don't know what is wrong.
If you are having errors, it may actually help to tighten the relative tolerance. If this doesn't work, try tightening the absolute tolerance as well. You can try different solvers if this fails as well. The other thing to do is to look at the eigenvalues of your system of equations. If the largest eigenvalue is &gt; 1000x your smallest eigenvalue, it may help to switch to a stiff solver like ode23 or ode23tb. You are claiming that ode23 is not giving you accurate solutions but your tolerances are are quite loose if the absolute tolerance is only .001. 
I'll have to defer to others on this one. I'm not really familiar with the math and unfortunately the motherboard on MATLAB machine decided the holiday was a good time to die so I can't work through it on my own.
You might want to crosspost this in [/r/ECE] (http://www.reddit.com/r/ECE/). There's a few regular Power engineers in there.
I'm just starting this little project so maybe a dozen times total last night, it wouldn't work from the start. Using the built in web browser I can access the page just fine and using excel connections I can pull the data just fine as well. Any ideas for checking where the problem is coming from?
Try Arda's (slightly outdated) fix [here](http://www.mathworks.com/matlabcentral/newsreader/view_thread/303771). Just be aware that, depending on the site's policies and how vigilant they are, you may get banned for making repeated requests.
I tried that and it didn't change anything. Also tried the [junk h]=web(url) h.getHtmlText suggestion which didn't throw an error but returned an empty set. The web browser displays it fine is there a way to maybe copy the text that is there? Any other ideas?
I have read a lot about microgrid. You can start with the CERTS 2006 project review. It is about 100 pages and is just the beginning. You need a lot of detail about the components dinamic response. The generator is the most important. You basically need to setup a utility grid tpye simulation study looking at several different cases of instability. It the non generator sources are a large part you will need to find a tuning method and have everything run in droop control. There is a lot to tuning a microgrid. Also, you will need reverse power protection on the generator or it may turn into a motor supplied by the wind turbine and break the shaft. I have been studying this as a personal side project with occasional microgrid stuff coming up for work for a year and I do not have a simulation functioning. I have built some components and stopped as I learn about tuning algorithms. The tuning algorithms (for a droop based system, I.e. no communication) require master or PhD level of controls knowledge. I only have a BS. So, I find myself having to learn new thing to pursue this project. If you want to read about it, I can recommend some papers. 
Simulink is definitely not the best way to go here. There are lots of power specific simulators that will serve you much better, while simultaneously being free for small scale use. I would recommend checking out powerworld (simpler but less powerful) and Etap (extremely powerful, but more difficult to use). Matlab and simulink *can* do what you describe, but there are tons of second a third order effects that you don't want to be writing a simulation for. 
Thanks, have done so.
Thanks for the info. I googled for that project review but I can't seem to find it? I hadn't even thought about the control process at this point, I was hoping that a simulation might take care of this side of things for now? Or am I being overly optimistic? Do you think this project is a bit too much for a noob to have a bash at? And yes I'd certainly welcome any papers you could recommend on the subject. I'm keen to educate myself on these subjects. Thanks.
Thanks for the advice. I guess I wanted to use the Mathworks products because they're so prevalent and wide in scope. I guess if I could do it in these then I'd learn along the way how to do many other things. That said, I've downloaded Power World so I'll see how I get along with that.
I'm guessing Z is a 2d matrix of altitudes, right? Let's pretend for a sec that it's all integer values of feet, say 0 to -10 feet. Then you could get the X-Ys within that grid with altitude = -3 ; %depth in feet [ R , C , Z ] = find( Z == altitude ) ; x_locs = X( R , C ) ; y_locs = Y( R , C ) ; Only there's a slight hitch: you'd have to use sub2ind to index into X and Y since those are vector indeces, but it should be pretty easy; I don't have the time to suss it out right now without the data, but I'm sure you'll get it. Now your data probably is not at discreet Z values; this means that checking for equality probably won't work, but you can have some kind of tolerance above and below, and check for Z being within that: altitude = -3 ; % depth in feet tolerance = 0.2 ; % halo around your specified depth [ R , C , Z ] = find( Z &lt; altitude + tolerance &amp;&amp; ... Z &gt; altitude - tolerance ) ; x_locs = X( R , C ) ; y_locs = Y( R , C ) ; And that should basically do it. Post a link to your data and I can double check it at some point.
You could try calling size(size(x)) at the beginning. 
I tried doing what you said, it gives skewed results, like in the first image it gives me 51 objects and in the second one it makes almost the whole image white giving me only 1 object. Any reason as to why it might do this?
Where is the error occurring? The code mentions a mismatch in matrix sizes when attempting to add the two matrices. Go back line by line and make sure the operations are doing what you think they are. There is likely some place where you increase the size of one but not the other. You must use size with ones in this case. Ones will create a matrix full of 1 of the size determined by the inputs. Giving it the matrix instead of the size will make a large multidimensional array because it interprets the inputs as dimension sizes. Edit: what is contained within the matrices you are sending to mesh? Is the matrix empty? If so, figure out where that is occurring and you will likely find your problem. If not, recheck the help on mesh and make sure the inputs are all correctly formatted. Also make sure that the zlim call isn't taking the plot out of range.
Look at help ndims 
Your first equation has a typo? Should that first = sign be a minus? Also, surround your equations with backticks \`\`, or indent them 5 spaces to format them nicely.
The quick answers: Your figure is not plotting because it's quickly growing to unbounded; put in mesh and a pause command in your plot to see this: u2v = u.^2.*v; f = a-u+u2v; g = b-u2v; u = u +gamma*dt*f + dt*(ue+uw+un+us-4*u)/(h^2); v = v + gamma*dt*g + d*dt*(ve+vw+vn+vs-4*v)/(h^2); mesh(x,y,u) drawnow pause( 2 ) After three iterations or so, your U matrix goes to a LOT of Infs, and by iteration seven it's all NaNs, so MATLAB can't plot it. Also, since this isn't a function and runs in the base workspace, you're dealing with figures and variables that already exist. Try adding this: %MeshDefinitions clc clear close all Now it should be easy enough to see your u growing out of control; put a breakpoint right after the u = u +gamma*dt*f + dt*(ue+uw+un+us-4*u)/(h^2); line to give yourself a variable to open, open that in the variable editor, and watch those values go nuts. In your initial data section, you assign U and V values twice in a row without them getting used. Are you sure of which one you wanted? My hunch is that this comes from the line u2v = u.^2.*v; because you're taking a value that contains a larger-than-one constant (a=92), and squaring it elementwise each time. I don't have time to look thoroughly into the mathematics right now, but you might consider subtracting a before you square it, and then adding it back in: u2v = (u-a).^2.*v + a; But V also grows pretty quickly. So your biggest problem is unbounded constants, I'd say. When you say "more gray, do you mean "more toward the mean?" If that's the case, there's an old trick that you can do for pertinent data. Let's say you know that the only stuff you care about in your data happens in magnitudes of 1.0 and above, and everything from 0.0 to 1.0 is noise, but you still want to retain it somewhat. If you raise all of your data to an odd power, the stuff bounded by -1 and 1 shrinks, and everything else raises. Now for some arbitrary threshold - say pi - you can just divide your data by pi, so now everything pi and above is above one and will be amplified by the exponentiation; everything bounded by -1 and 1 will shrink. A similar trick with negative powers may do what you want for greying the data that exceeds your steady state threshold. If you can show the equations you're trying to implement, I can take a better look after finals without having to research boundary value problems. Happy hunting!
Can you post your initial images and helper functions? My hunch is that your whole problem could be resolved - and your code greatly sped up - by avoiding the cell conversions, but it's a lot faster to do if I can play with the original files. The basic trick though, is that that third dimension in your picture is the R G B values, and should always be of size 3 when dealing with images. So then doing a size( y ) after you read it should give you the dimension you want, but actually eliminating several of the middle lines might knock it out for you. 
Hm, I guess it is an RGB picture, even though the picture is in greyscale haha. I did upload the images though, they are in the edit.
Aren't you suppose to call deval() after using the ode function? You do for ode45
I haven't really done that in the previous codes I've written if I'm going straight to a plot after the ode. But that shouldn't have an effect on the error on line 5, should it?
yes sorry, that first = should be a minus
http://homepages.inf.ed.ac.uk/rbf/HIPR2/open.htm 
I've made some changes to that code listed up there, [this](http://pastebin.com/G2qQH3nb) is the newest one where I get an error of: Attempted to access u(2); index out of bounds because numel(u)=1. Error in untitled1/event (line 89) if u(2)&lt;p(1) Error in untitled1 (line 50) nx=event(u(2),p); I'm not exactly sure how to fix this, I've been looking online and it may be the result of a variable being overwritten? Also, going on your suggestion of defining another function and calling it with ode23, I'm not entirely sure what you mean as far as what I would include in there.
If you debug your program, you will see that the error is really at line 89. At line 50, you are calling the event function passing not the vector u, but just one value (whatever is in u(2)). A more appropriate syntax would be event(u,p); at line 50. I think you are getting a lot of things confused in the program you are trying to write, in the document ([Link](http://www.jhu.edu/motn/relevantnotes/usingmatlab_ode.pdf)), page 8-19, you can find a basic structure for using ode functions, you can build on it. Last thing, you should probably call the *ode23* function from **outside** and not from **inside** the *untitled1* function if you are to use *@untitled1* as parameter.
Another thing, in line 98, there is a typo, you should replace event=5; by evt=4;
I really do appreciate all this help! [This](http://pastebin.com/DhWJH6Hy) is what I have now, and I feel its very close. I get the error: Undefined function or variable 'n'. Error in untitled1 (line 54) switch n From what I've researched, I've properly utilize the nested function which should return a specific value of 'n' dependent on the random 'u' value. The nested function should be called into the main function to provide that same value for 'n' to easily substitute into the 'switch n' part. Why does it not recognize the variable?
No problem. To have a deeper understanding of the problem with the variable *n*, check any documentation on **variable scope**. Basically, the *n* used in the function *event* is valid only inside this function, and is destroyed when the function is exited. To make it work, before the switch n you should call the function *event*, for example n=event(u,p); The two *n* variable are independent from each other, similarly to two person who would have the same name (for example John) but different life. You can easily rename the *n* in the function as *Toto* and it will be fine. I see that you have made a lot of modifications to your code that will give you some other errors (example, line 109, I suspect an incorrect syntax). Maybe if you tell me more about you problem I could help you further depending and my available time. 
[I still get the recursion limit error here](http://pastebin.com/brCKdqBf) I'm not understanding how to accurately create an exit condition to avoid the recursion limit. As far as my end goal here, I'm ideally trying to simulate a system of chemical reactions and plot the final measures of each at the end of the time period
In the simplest of the cases, you should have a function that looks like this, for the reactions: function StepResult=Example(t,States) Reaction1=States(1); Reaction2=States(2); Reaction3=States(3); Eq1=Reaction1; Eq2=Reaction2; Eq3=Reaction3; StepResult=[Eq1;Eq2;Eq3]; where *Eq1*, *Eq2* and *Eq3* are the differential equations. (In this example, the equations are **y=y'**). You should then have a **separate *M-File* file** with a code similar to this: timeSteps = [ 0:0.01:10 ]; % Integration between 0 and 10s every 0.01 seconds InitialConditions = [1 ; 2 ; 3 ]; % Initial state for each chemical, should be a column vector (with the ';' ) [ timeStamps , IntegrationsResults ] = ode23( 'Example' , timeSteps , InitialConditions ); % Integration % To display the reaction results in the same graph, different colors plot( t, IntegrationsResults( : , 1 ) ); hold on; plot( t, IntegrationsResults( : , 2 ) , 'g' ); plot( t, IntegrationsResults( : , 3 ) , 'r' ); I think you should start with that and when you get it working, you can concentrate on the options of the *ode23* solver.
&gt; even though i have correctly entered them using appropriate syntax You haven't. Your 4th row only has 3 columns.
It looks like your last row in both those matrices only has 3 unknowns, instead of 4.
&gt; I have checked again and i have definitely inputted the equations correctly into the matrices. Again, you have not. If you did, you wouldn't be getting the error. You should have the same number of columns in each row. One of the values may be zero. Please provide the equations.
Ah yes, I've actually already done the modeling of the system via ODEs. I was trying to find a solution exclusively using stochastic methods
If all of your other equations have 4 variables, and this one has 3, you have to put a zero in the location of the 4th variable. 
No, there is no problem with the question. Your last line is: 0w + 11x + 3y - 5z = 2
I'm going to be in lab in 20 mins, I'll write up a full reply then, you're going to need to turn these into first order equations then use ode45 to solve them
Yeah i figured that much. Ive got them in the form z' = Az With A being a 4x4 matrix. No idea whereto go from here tbh
So what's the problem? Look at the help for `ode45`.
okay so you need to have a few functions, one of them is going to contain your equations that need to be solved. The other one will cal the ode23 function. So you need to have a function like this http://pastebin.com/1EFNn1Sx This contains the definitions of the equations that need to be solved. These equations represent the equations found at the bottom of this screen. http://www.myphysicslab.com/dbl_pendulum.html See if you can find a parallel between your equations and mine and create your function accordingly. Next, you need to call your ODE function and deval the solutions struct. Here is an example of that http://pastebin.com/gyEyrNZe Try to change this code to match your functions, hope this helps!
Not sure that I completely understand. But lets see. Your domain is 0&lt;x&lt;c, and the function is defined in two pieces, z1(x) for 0&lt;x&lt;pc and z2(x) for pc&lt;x&lt;c ? You could merge them like this: x = linspace(0,c,1000); z1 = first_function(x); z2 = second_function(x); z = zeros(size(x)); z(x&lt;=pc) = z1(x&lt;=pc); z(x&gt;pc) = z2(x&gt;pc); Then you'll have one vector of z values called z and one vector of x values called x, which you can plot by: plot(x,z). That would work pretty well if your function is continuous at x=pc. Edit: Formatting.
Thanks so much man. Really appreciate it
no problem, I had a hell of a time learning this stuff just a few weeks ago when I was trying to make a double pendulum simulator, I got it working thanks to the help of some people on this forum and I've been meaning to pay that forward. Let me know if any problems come up
Thank you :)
Thanks dude. Im gonna read through it when im in the lab myself. 
Can you not just add couple of terms to each of the equations to obtain what you want? 
You were dead on with the zlim function! Good call! My a,b, us, and vs values were messed up to. Forgot to change them when I moved them over from a Neumann Boundary problem code set. 
Thanks a lot for your help, but now I've encountered another issue, I used the code you wrote there and generated one plot on the graph. I'm trying to use the results from that to plot the line created from the y = equation and the equations below and it wont work. Do you have any idea where I've gone wrong? It's telling me that the matrix dimensions must agree in the q equation but i don't know where I've gone wrong. Thanks.
Thanks very much for your help.
Sounds like you need ./ or .* for elementwise operations Perhaps you can pastebin the whole code?
Type "whos" in your terminal, see that variable "theta" is the wrong size! Are you trying to take the derivative of z for the argument to atand? You probably want atand(gradient(z,x)) there 
I did notice that it seemed to be one lower, yea it says it's 999 instead of 1000.
Can I ask how you change it lol.
I need to find the arctan of (dZ/dx) so I changed it to what you said and now the variable is the correct size but I'm not getting the correct graph shape...
Ah thanks very much, it's not often that I type on reddit.
Hmm, one more thing I just noticed: you should be consistent about radians or degrees. If you want to use cos and sin below, then use atan and not atand. 
Probably the simplest way would be to define an error function, and use gradient descent to reduce it. let: f1(x,y,z) = (the lefthand side of the first equation) f2(x,y,z) = (the lefthand side of the second equation) f3(x,y,z) = (the lefthand side of the third equation) then define the error function: e(x,y,z) = f1(x,y,z)^2 + f2(x,y,z)^2 + f3(x,y,z)^2 When e(x,y,z) = 0, then you have an x,y,z that satisfy the given equations. If you don't want to find the derivatives of e(x,y,z), you can approximate the gradient: delta = some small number, like 1e-8 grad_x = ( e(x+delta,y,z) - e(x,y,z) ) /delta; grad_y = ( e(x,y+delta,z) - e(x,y,z) ) /delta; grad_z = ( e(x,y,z+delta) - e(x,y,z) ) /delta;
I would edit the original post with a link to a new one, probably. What was causing the unbounded growth?
It means pass the ball iverson. Jesus. 
I think i should be able to manage. thanks alot man. if i get stuck i might have to take you up on those plot commands! 
If you're using eval(), everything that isn't a variable being referenced before the statement is evaluated needs to be a string. eval(['x' num2str(i) '(' num2str(count) ') = ' num2str(i)]); % or eval(['x' num2str(i) '(count) = ' num2str(i)]); ETA: Also, don't ever use i as a variable name. It can lead to some unintended conflicts with the complex number.
Ah thanks that makes sense! I'll give this a shot as soon as I get a chance and see how it goes. 
sprintf is probably a lot cleaner. I hate using num2str eval(sprintf('x%d(count)=%d',i,i))
There's a slightly easier way that avoids eval. Use structures. For a structure A: A.(sprintf('Name%d',n)) = stuff
Write your current answer. The others will advise you on it. No one will answer your vague homework question.
So I put down my current answer, and it essentially reiterates that I have no idea what I'm doing and I'm in need of some serious help. Also, this isn't a homework assignment so I'm not violating any academic codes. I have a test in two days and this is a supplementary question I was given to help me review. If there's any tips you can give me like how to get my user defined function to use the variables t and v to read values from data.txt, even that would help. Thank you for your suggestion though, hopefully that can help people understand the question a little more. 
What is the course? I find it puzzling that a numerical methods course this far along in a term hasn't gone over [finite differences](http://en.wikipedia.org/wiki/Finite_difference#Forward.2C_backward.2C_and_central_differences), since it's pretty fundamental. One should at least know how to do it by hand and then worry about whatever programming syntax later, which I'm not really seeing. MATLAB (or any programming syntax) not being part a formal part of a finite differences course I could maybe see, as it's often tacked on as an afterthought, but taking user defined inputs is [fundamental language syntax](http://www.mathworks.com/help/matlab/ref/function.html). Reading from text files can be accomplished many ways, the most common being the use of [fopen\(\)](http://www.mathworks.com/help/matlab/ref/fopen.html), [fscanf\(\)](http://www.mathworks.com/help/matlab/ref/fscanf.html), and [fclose\(\)](http://www.mathworks.com/help/matlab/ref/fclose.html). [textscan\(\)](http://www.mathworks.com/help/matlab/ref/textscan.html) and [dlmread\(\)](http://www.mathworks.com/help/matlab/ref/dlmread.html) are also common. My advice if you aren't too familiar with programming syntax is to start this problem on paper. This is almost always the harder part of a problem. Worry about the MATLAB syntax and [control flow](http://www.mathworks.com/help/matlab/control-flow.html) later.
What is the equation?
What happens to your xdot vector? 
I am not sure I understand your problem, but if you have two equal length vectors x &amp; y you can find the values of x when y is zero with: X(y==0)
This is the symbolic math toolbox.
I agree with this. To help a bit directly with MATLAB., you need yo import the data then convert it to a variable. MATLAB works well once all things are sorted and labeled. Conceptually you are diving past the basics. Functions have a set form to it which I don't see. You state no variables just an equation. Your inputs and outputs aren't even defined. You should definitely start at the basic function tutorials and then when that clicks try this problem again. 
You can use double(), eval() or vpa() around the solve function and it will give you a number of there are no symbols in the solution.
More than slightly, using dynamic field referencing is a significant improvement in efficiency. For normal code, after you run a function once in a session, MATLAB doesn't need to reread it unless it has changed. If eval statements are present, MATLAB has to reevalute them every time the function is executed because there's no guarantee that the expressions evaluate the same. It may not be much in the grand scheme of things, but it has the potential to be significant. Not to mention the improvement in readability. Unless you coded it 30 seconds ago you'll probably have no idea, at a glance, what the expression evaluates to. I wish it hadn't taken me 4 years to discover dynamic field referencing was a thing. It would have saved me from forcing myself to love eval() for so long :)
Try finding where the value where y=0 in the y vector and pull the value in the x vector corresponding to the index at which you found the y valur
http://www.mathworks.com/help/matlab/characters-and-strings.html http://www.mathworks.com/help/matlab/string-comparison.html Those should give you a good starting point. All of it will be helpful, but strcmp() in particular should prove very valuable.
thank you. so is there nothing available that I can use to take the approach I tried using? The approached I tried works if I'm looking for a particular Ward (a number) but not strings.
I'm sure there is a clever solution hiding in there somewhere, but MATLAB does some stupid shit when dealing with strings. Trying to compare two strings using == gives a vector with individual character comparisons between the two. You can do some craziness to get it to work, but it will end up being like using a chainsaw to open a box of cereal then eating it with a shovel. Just go with strcmp() and save some tears and heartache.
Add four lines before each line of code (plus 4 extra for indents) or surround it by \` to make `inline code` if that is more sensible. To display the output just move the disp() commands inside the loop :x Alternately remove the ; from the lines where ID and itcount are assigned and MATLAB will output the values for you. Both of the above are very crude and ugly though. Look into fprintf() to make slightly nicer output. You also don't need a ; after the while declaration. It isn't going to break anything by being there, it just looks ugly and serves no purpose.
Sorry I should have been more clear, what I need it to do is output the ID after each iteration into a matrix so each iteration can be plotted against the sequence number. Something like " ID(i) "
Save it into a matrix. Either create a new index variable to increment or piggyback off of one you're already incrementing. function Part6(ID) %This function divides by 2 if ID is even and multiplies by 3 and adds 1 %if ID is odd until ID reaches 1. %Be sure ID is a scalar. itcount=0; while ID&gt;1; IDguess(itcount+1) = ID; if rem(ID,2)==0; ID=ID/2; else ID=(ID*3)+1; end itcount=itcount+1; end disp (itcount) disp (ID) % (itcount -1) because it increments after a solution has been found % [IDguess ID] to add the final ID number to the guess array for plotting plot(0:1:(itcount-1),[IDguess ID]); 
A naive way would be to loop through the dataset and use a switch statement.
&gt;can someone create a function What fun would that be. Also, we don't do homework for people here. Suggestion I'll and others will give: try some code, if it doesn't work/you get stuck, ask a more pointed question here, other than "do my work for me". Also, it would be wise if you knew some basis on how to implement a Rienmann sum in psuedocode, not necessarilly in MATLAB.
Yes I can. Start [here](http://en.wikipedia.org/wiki/Riemann_sum#Left_Riemann_Sum), then go [here](http://www.mathworks.com/help/matlab/ref/function.html). Then come back and post what you've tried and why it's not working.
This just brought laziness to a whole new level. Show what work you've done, or at least your thought process about solving it. 
It seems pretty unstable. I'm not familiar with the subject matter, but you're going from your initial conditions to &gt;10^5 in 5-6 iterations, is that expected? I've been far removed from real math for so long I'll have to dig out my books in the morning.
Its a programming course, and we're using elementary methods like forward differencing to understand how to write functions. But thanks for the help, I'll try those functions out. 
No, unfortunately that is my problem. I should be running this for a few thousand iterations at least just to get a pattern to form. I have to use those a,b values, and my steady states for both u and v are set constants as well. I'm honestly not sure what is going on with it :/ I know I need a stability coefficient (lambda) of .01...so I have it calculating how many iterations it needs to do to make that stability factor happen, just like in my Neumann2 file. And thank you, I greatly appreciate any insight you can give!
There are many hundreds of lectures, tutorials, and explanations of numerical integration techniques floating around. They will give a much more thorough breakdown of what you need to be doing. You are on the right track, just missing a few bits. See where that gets you, try again, and let us know if you're still stuck.
I'm sorry, but how do you expect anyone to contribute an answer? 
http://www.mathworks.com/help/matlab/control-flow.html Read through if &amp; while loops. Either one of those should get you where you need to be.
http://en.wikipedia.org/wiki/Riemann_sum#Methods Is a good starting point for the math.
Thanks for your help!
I'm not sure what you mean. This is a MATLAB subreddit, where I've posted before for help and received it. 
I'm assuming you're talking about your text output. You need to use a newline character. disp('Results: ') fprintf('1st Shot: za1 = %8.4g xb1 = %8.4g\n',za1,xb1) fprintf('2nd Shot: za2 = %8.4g xb2 = %8.4g\n',za2,xb2) fprintf('Final Shot: za = %8.4g x = %8.4g\n',za,x(length(x))) fprintf(' t x dx/dt \n') disp([t x]) Please state your questions better next time.
Not that I know of. Is there something tough about the slider? Edit: You can use systune and define a desired step response. This is not yet done with a UI and is command line only. http://www.mathworks.com/help/robust/gs/tuning-control-systems-with-systune.html
You're right. My apologies.
There might be something useful here https://pay.reddit.com/r/matlab/comments/1rx42z/i_have_two_2dof_differential_equations_whats_the/
Hmm, I will try this out. The reason the slider is tough is the requirement is very tough to find with the slider; everywhere I slide it, it only makes the values farther away from desired or too small to the point where it's ridiculous. EDIT: I tried it, can't find a place to tune rise time, or settling time. It only finds overshoot.
&gt; eval(['x', num2str(i)(count), ' = ', num2str(i)]); Tried it just now, works like a charm! I will have to check about the sprintf method another time. For now this works perfectly for me though, I am generally only creating between 2-4 variables and it runs in a small loop towards the end of the program just to output some data that had been generated, so performance isn't an issue in the slightest.
You can try Simulink Design Optimization if you have it. It lets you explicitly define a step response and you can tune the 3 gains.
As was previously stated, convert each second-order ode into two first-order ode's. So given X=[y y' x x'], the MATLAB implementation would look something like: dX(1)=X(2); dX(2)=-a*X(1)-b*X(3); dX(3)=X(4); dX(4)=-c*X(1)-d*X(3);
You want all your data points to be connected? Are they ordered in succession already? Do you just want the plot() function?
Well I want the points to be connected and still have the circle parts for the data points, this is what my [figure](http://i.imgur.com/YdlGlLq.jpg) looks like now
Look at the help for "plot". You can choose your marker (circle, square, star, etc) and have a line connect all the points.
hey, try this plot(x, y, 'MarkerSize', 5) this will connect all of the lines together and while making the discrete points that you pass in show up as larger marks. You can also change the shape of the points, such as making them triangular or like an x shape. Look at the documentation for plot, it's vast and very thorough. 
State space that bitch.
As others have said and I suspected, I think you're just looking for plot(). Try what /u/realfuzzhead has suggested: plot(x,y,'b-o','MarkerSize',5) I've modified it a little, the &gt;'b-o' will plot a solid blue line with open circles at the data points you have specified. Now, I asked if your data was ordered, as the plot() function will just plot from one index to the next. x = [1 2 3 4 5] y = [1 4 9 16 25] will plot the line y=x^2 as you would expect. Now, if the x and/or y values were interchanged any way, the plot() function still plots based on the idx values and you most likely wouldn't see a typical quadratic function, for example: x = [1 5 3 2 4] y = [1 25 9 4 16]
you can do something like fprintf(' %e*exp(%e*t)', a,b); Look at the documentation on [fprintf](http://www.mathworks.com/help/matlab/ref/fprintf.html) and particularly at the [format specification](http://www.mathworks.com/help/matlab/ref/fprintf.html#inputarg_formatSpec). There is some pretty good examples on the page.
I appreciate the help! However, I was able to accomplish what I wanted by using the absolute value of a Fourier series so I am no longer stuck. But just out of curiosity, how do you get the function to restart using if and while loops? I have read through them and could not figure out how to accomplish it. Thanks again.
Use the plot command, not scatter. Use 'markerfacecolor'
You are not using the lognrnd function correctly. http://www.mathworks.com/help/stats/lognrnd.html I don't like being mean but it would've been obvious if you had looked at any of the values you generated. For instance, all your moduli are Inf. You need to call the lognrnd functions as follows muE = log(mE^2/sqrt(sE^2+mE^2)); sigE = sqrt(log(sE^2/mE^2 + 1)); E = lognrnd(muE, sigE, n, 1);
Just impremented it and am getting no error messages. One of my probabilities (PR2) is returning a zero value, but that is something I will have work out and that I dont think is an actual matlab issue, but an equation issue. Thanks again!
*Monte Carlo
By putting it inside the logic statements. As a basic pseudocode example (because I'm in my phone) using inelastic collisions: while kinetic energy is less than or equal to the kinetic energy threshold, do the kinetic calculations. Nested inside that, if y is equal to zero, perform the collision calculation to adjust kinetic energy and the velocity vector. You could also work with a timeseries. For t equal to your timeseries, do the kinetic calculations. Nested inside that again is your if statement for the ground impact, elastic or inelastic.
I don't completely understand what you are asking exactly, but I was filling in vectors of variable unknown lengths and just nested some for loops within a while loop (and a while loop within the for loop). This is probably pretty inefficient though. Just my 2 cents.
Its alright I figured it out, I wasn't being lazy, our professor has not taught us anything at all, he literally has a 1.2/5 on ratemyprofessor.
All you have to do is create three input lines asking the user to input LL, UL, and NR. Then create a for loop in which the start is at the LL and the end is LL-delta. Then plug the n into your function and increase your counter
&gt; I need to minimize a function Function length? Complexity? &gt; to accumulate the function What do you mean by "accumulate" the function?
I don't have access to the symbolic toolbox right now, but I'm wondering if the pretty() function cleans those up? Not sure, because that's not its intended purpose.
I'm new to MATLAB, so this question may sound stupid, but how would you tell the script when the lines has ended? I assume that at the last line, it would a blank afterwards, but how would you tell MATLAB to look for the blank?
Read the documentation.
So, I figured it out. I had to pull the numbers in by each character. The last part I need to do is take 2 lists. Basically this is finding all possible answers for the rational roots theorem. The code I now have is: a = [List of all prime factors here] b = The number I found primes for Example: a = 1 2 5 10 b = 10 All possible solutions would be 1/10, -1/10, 2/10, -2/10, 5/10, -5/10, 1, -1, 2, -2, 5, -5, 10, -10 I'm just not sure how to get those all to print. Yes this is homework and the I had part of the class tonight. The teacher literally had to change the project instead of teaching us how to read in the text each character at a time. I am now reading in: 0 0 0 0 4 2 -5 0 0 0 5 -2 3 5 instead of 4 3 -5 5 -2 3 5 This made part one easy.
Reading them in character by character is not the optimal solution, but if it works for your purposes I can't really argue with you. The next part with two lists is fairly trivial. Think about how you generated the solutions you just showed me. You have every permutation of a/b and b/a along with their negative counter parts. Should be easy enough to enumerate those with a loop right? I can't say I entirely agree with your example dataset there, but I'll ignore that since it isn't my problem and might just be bad example selection on your part.
Here is my complete way of doing this: fid= 'prog1_input.txt'; a = readData(fid); b = size(a,1); b = b + 1; x = 1; while x &lt; b; matrix1 = a(x,:); c = matrix1(7); num = abs(ii); str = primefactor(num); b = matrix1(matrix1 ~= 0); x = x+1; end; How I read in: function [ a ] = readData( fid ) bar= fopen(fid, 'r'); cellarray = textscan(bar,'%d%d%d%d%d%d%d'); col1 = cellarray{1}; col2 = cellarray{2}; col3 = cellarray{3}; col4 = cellarray{4}; col5 = cellarray{5}; col6 = cellarray{6}; col7 = cellarray{7}; m = [col1 col2 col3 col4 col5 col6 col7]; fclose(bar); end The prime numbers just have me pulling in the 7th number and then dividing the numbers by each prime number up to 19. I then create a list and remove the 0's. I now have a list called str that includes all prime numbers and then can use the first number as the numerator. Sorry I'm confusing.
You have readData()'s output defined as a, but you never assign anything to a. Why are you using a while loop to go through each column? A for loop is much more sensical (and easier to write). In your while loop I see you are grabbing each row individual from what you read in, then taking the last value (your constant for the rational roots). That's great. But where are you getting the first value? What is abs(ii) doing? You never define ii. What is primefactor? Why does this arbitrary value from abs(ii) go in there? Why are you now making b a vector? Comparing your x (a single value) to some arbitrary vector makes no sense, nor is it a smart condition for a while loop. In short: WAT!?
Here is my complete way of doing this: fid= 'prog1_input.txt'; %choose the file a = readData(fid); %Read the file b = size(a,1); %Find the size of the matrix created b = b + 1; %add one for the while loop that I shouldn't be using x = 1; %Where I want to start while x &lt; b; %start while loop matrix1 = a(x,:); %I choose the first line of the matrix c = matrix1(7); %Grab the last possible number num = abs(c); %get the absolute value str = primefactor(num); %this pulls the prime number b = matrix1(matrix1 ~= 0); %removes the 0's, This won't work because I only want to remove the 0's prior to the first number greater than 1 f = b(1); %this would be the first number, aka the numerator x = x+1; %keep the while loop going end; I'm terrible at naming convention and used random letters on my mind as i build it. I hate matlab, find it kinda boring compared to python. Sorry and thank you for the help 
Gah, makes my head hurt. Assuming your readData() returns the values properly, consider this: for i = 1:size(a,1) % iterate over every row line = a(i,:); % grab individual row line(line==0) = []; % remove all 0's first(i) = line(1); % grab first item last(i) = line(end); % grab last item end Removes the leading 0 padding and pulls out the first and last number. Does so for each line in your data file. Your solution above is going to (presumably at least...) do the same, but only give you the very last pair since you obliterate everything at each iteration of that convoluted while loop of doom. I still don't get the purpose of primefactor() nor what it actually does. Your comment doesn't fit in with the description of what you are trying to accomplish here. Assuming I'm even helping you solve the right problem given that we've switched gears four times so far. Using random names and letters is a really bad habit. As you can see it just causes confusion, errors, and general unpleasantness for everyone involved.
Certainly been done before. Have you even tried googling for "black scholes matlab"? I'm fairly certain there are implementations in the finance toolbox: http://www.mathworks.co.uk/help/finance/index.html As a mathematician, I also hope you understand the shortcomings of the model.
Use . before each multiplication, division, or exponential operator (e.g., .* or .^). 
If anyone finds this thread looking for something similar, http://www.mathworks.com/matlabcentral/fileexchange/17204-kernel-density-estimation works perfectly! :-)
This sounds like the right answer. To expand on WHY, if you try to use a matrix as a variable, MatLab automatically assumes that you're trying to use the ENTIRE matrix. The ".*", ".^ ", and "./" tell MatLab to go element by element in the matrix, so it will start with r(1,1,1), then go to the next one, then the next, etc.
If you put the user input within a while loop (right, since you don't know how many coordinates they will input), then you will be able to know exactly how many points you are dealing with after they are finished inputing, and everything downstream will use that value. I still think I am completely missing what the problem is though and apologize for that.
The problem is that MATLAB can't store variables dependent on other variables without defining the independent variable. If I knew the user would input, say, 2 points, I could easily use something like: [a,b] = fminsearch(sqrt((a-x1)^2+(b-y1)^2)+sqrt((a-x2)^2+(b-y2)^2),0,0) but since I'll have a changing number of sqrt terms added together, I'd need a loop for that. That means, though, that I can't use a generic a and b when I sum them, as MATLAB won't let them stay undefined. Right now, I'm just working around it by making a huge matrix of incrimental values and using the min(matrix) function to find the smallest one, but that uses wayyyy more memory than I would like to.
Looks like you need to register runtime parameters as tunable. You need a PostPropagationSetup function block.RegBlockMethod('PostPropagationSetup', @DoPostPropSetup); And in it do a AutRegRuntimePrms function DoPostPropSetup(block) %% Register all tunable parameters as runtime parameters. block.AutoRegRuntimePrms;
I was about to say, "Yes, this!" but it seems you're the OP so I'll just move along.
This is the package I use, and recommend to everyone: http://www.mathworks.com/matlabcentral/fileexchange/23629-exportfig Note, that it is not actually that trivial to create a nice image. Generally speaking, when writing the script to create the publication image, you want to explicitly specify as many normally-automated parameters (i.e., grid line style) as possible, preferably in a script. It is almost always better to use LaTeX interpreter for typesetting all of the labels.
Generally, I save a basic image in vector format (PDF mostly) and then edit in Illustrator. 
I see that, but my question is how do I declare y so that I can define the function in matlab to pass to ode45?
sorry [this](http://www.facstaff.bucknell.edu/maneval/help211/usingODE45.pdf) one might work better. the information you're looking for starts around page 7
I've found quite a few good scripts/functions from the [File Exchange Pick of the Week](http://blogs.mathworks.com/pick/) blog. New pick every week and you will find plenty of great things in the archive. Yair Altman's blog, [Undocumented Matlab](http://undocumentedmatlab.com/), has a lot of great stuff that you may not necessarily ever find through MATLAB's documentation. Hence undocumented Matlab! 
You need to write a function that returns a 2x1 matrix with the first element = x' and the second element = y'. The first input argument to this function is t. The second in put argument will be a 2x1 matrix, but this one containing x and y. 
Illustrator!! .eps works well too. Making a script is too time consuming when it will likely only be for one figure. The only thing the code needs to do is make everything mathematically accurate.
The best I've found is [GNUPlot](http://www.gnuplotting.org). GNUPlot itself is a script-based plotting program but it generally spits out very good looking plots. You use MATLAB to write your data out to a text file and then use GNUPlot to render it. 
Bah, Stuck again. Apparently that doesn't work with strings. 
Thank you! i'm trying this
Strings and RTW don't play nice together. I suspect the problem is 'num2str', which isn't in the RTW libraries. I got around that by writing my own. 
I could get an approximation of the amplitude using that but not the exact value.
If I'm reading correctly.... let's say that your script has 50 values of y1 and y2 that pass the final conditional and are between 0.999 and 1.001. Are you wanting to display each of them in the end as an array? Or each of them one time, immediately when they pass the conditional? This second way is how you have coded currently. If you want to display the values one time, at the end of your script, you'll need to fill an array with the values each time they pass your condition. &gt;How can I set up this script so that it collects the entire range of these values and calculates an average for them? I think the way to go about doing it would be to set up a matrix so that each value that I get returned is automatically added as a new element of the matrix and then simply display the mean of that matrix but I can't seem to get it to work. Try something like this: ans_y1 = []; ans_y2 = []; ans_p = []; for p = ..... %calc y1 %calc y2 if &lt;condition&gt; if isempty(ans_y1) ans_y1 = y1; ans_y2 = y2; ans_p = p; else ans_y1 = [ans_y1, y1]; ans_y2 = [ans_y2, y2]; ans_p = [ans_p, p]; end end end Here you have all values of y1, y2, and p that pass your condition stored into the ans_* row arrays.
And if you want to create a vector that runs from -1 to 5 in steps of 0.25, it's just x = [-1:0.25:5]; In terms of getting an answer (y) for each x value, the slow but stable way to do it would be to loop through every element in x and do the function to each one; the quick way to do it depends on exactly what the function is, but will probably involve elementwise operators (for example '.*' and './').
It works, I just checked it! Thanks A follow up question if you don't mind? What if I want to calculate 5 different rows using only 4 input variables. So I use 5 different operations on a,b,c,d to get 5 different rows. When I want to return my 5 rows I get an error saying I have too many output variables. Ideas? 
So you want a "derivatives" file. It must be a function (i.e. not a script). In this file, you want to accept as parameters, in this order: (t,states,any other parameters you need) You probably won't use t here, but you need to accept it as a parameter anyway. "states" is a vector which contains the current values of the state variables. You use elements of this vector to find your dx and dy. You will return, in the same order as "states", a vector of derivatives. So, simply: function [derivatives] = equation_dydt(t,states,a,k,l,b) x = states(1); y = states(2); dx = -a*x + k*y; dy = lx - by; derivatives = [dx;dy]; end Now, you need to run it with ode45. You need another file (an "outer" file that will run ode45 with your derivatives file). This can be a script if you like. Define intervals over which you want to run the simulation. intervals = [0 1000]; %Or whatever. Make sure this is long enough to reach equilibrium! And your initial conditions: statevar_initial = [1 0]; %Whatever you choose initial conditions to be You can define options if you choose to. If you want to leave it default, set it equal to [] . options = odeset('AbsTol',1e-10,'RelTol',1e-10); %or options = []; [TimeVector,statevars] = ode15s(@equation_dydt,intervals,statevar_initial,options,a,k,l,b); %And we can now load the statevars into separate x and y vectors to make it human readable. XVector = statevars(:,1); YVector = statevars(:,2); You can plot: figure hold on plot(TimeVector,XVector,'b','linewidth',2); plot(TimeVector,YVector,'r','linewidth',2); xlabel('Time') ylabel('State variable') label('X','Y')
You have to change your function A to return a fifth variable. So your function would change from: function [q,r,s,t] = A(a,b,c,d) blah blahblah end To: function [q,r,s,t,u] = A(a,b,c,d) blah blahblah end In the end it seems like you need to get two concepts: function returns and scope. Scope means that you can't access a variable defined inside of a function outside of it. This is why functions are different from scripts -- a variable defined inside of the function won't be accessible outside of it. This is good, because otherwise you'd need to know all of the variable names used in every MATLAB function you use to avoid a conflict! So to get a computed value out of a function -- that is, a function output -- we have pre-defined "return" values. Those, here, are q,r,s, and t. Whenever you change what the function needs to return, say you want it to return 5 values instead of 4, you need to change the function header as I have done above in addition to just computing the extra value (u).
Sorry what would that do? I essentially want this loop img=cell2mat(TopStims(1,1)); subplot(5,3,x)% **BUT WHERE x is replaced with one higher number each time** image(img) title(TopNames(1,1)) axis off
It does exactly what you asked about. 
Reread what I wrote and what you said you wanted to do. I have no idea how what you just wrote does anything near what you intend. Good luck.
I just reposted. I am sorry I am new to this and very stuck on loops. 
I don't see the point of the outer loop for i=1:15 x = 0; for y=1:3 for z=1:5 img=cell2mat(TopStims(y,z)); x = x + 1; subplot(5,3,x) image(img) title(TopNames(y,z)) axis off+ end end
Wow, that was really helpful, thank you. The only thing I'm not sure of is how to pick values for x and y (being states(1) and states(2) ). Is it arbitrary?
That's your initial condition, which is in statevar_initial. What ode45 does is repeatedly call your derivatives file to get the derivatives of your states variables, and then integrate them on its own (so you're not worrying about time steps, etc.). It passes the updated states vector to your derivatives function each time. So all you need to give it is values for the very first call, i.e. initial conditions.
Hello. Thank you but I worked this out :) thank you for your patience. 
I'm building an online graphing tool called plotly which has a matlab interface, check it: https://plot.ly/api/MATLAB/ I started building it in school, to make my figures for my research in EE: https://plot.ly/~cparmer2/308 You can edit the graphs entirely inside an online GUI, no styling scripts are necessary. For some more background, check out this post in undocumentedmatlab about the project: http://undocumentedmatlab.com/blog/plotly-graphs/#more-4455
I know how to do the derivatives, I'm just not sure where to input them in the GUI
Which part are you having a problem with and what all have you tried till now on your own?
Basically I created the blank GUI and created 2 static boxes and 2 edit boxes. From there I'm not sure where to input my functions 
I'm assuming you're using GUIDE. See the Matlab code file that is auto generated by GUIDE. E.g., say your GUI I'd called mygui and you type in mygui in the command window to open the GUI, right? Type edit my GUI This should open the Gui code. In this code scroll down to the bottom and you'll probably see a few empty functions. Those functions are called when a button is clicked. Now read the guide manual and learn about these functions. That'll help you.
Correction edit mygui
/u/Kiloblaster already answered your question but I thought I might mention that if at some point you want to skip a value from not being saved to your workspace, you can use ~. Say you want only q and r as output. You would write: [q,r] = A(a,b,c,d); But if you want s and t you cannot do [s,t] = A(a,b,c,d); % This is same as saving q and r in s and t respectively. Instead you need to write: [~,~,s,t] = A(a,b,c,d); This helps save memory and does not clutter up your workspace. You can also use ~ for skipping input values as long as they are not used in the function.
Right, there's a scaling factor you need to use related to the duration of the signal. 
I'm not very familiar with s_wplot but do study geophysics so know some seismics... From looking at the error message, it doesn't seem to like the way your data is spaced. Is there some kind of header file where spacing is defined and have you tried just plotting a small segment of the data as a test? If you're still having problems I can try and have a look tomorrow for you (I'm in the UK and it's late here)
I'm sorry, but how is this specific to Matlab?
Because Im trying to do this in MATLAB. I thought that was obvious. 
I'm just saying that this is a general programming question. A better way to put this question would be if you already have an algorithm which you need help coding in Matlab. It's not totally obvious.
I've had this issue before, and I'm very sorry for getting your hopes up but... I can't remember how I fixed it. I'll see if I can replicate it this week and will (hopefully) remember to come back here and let you know how I fixed it. 
Perhaps this is what you want? %% Matrix counter/ Truth tables etc. %i,e [ 0 0 1 ] % [ 0 0 2 ] etc. function arr = matCount(v, l) v_1 = []; for i = 1:l+1 v_1 = [v_1 v]; end arr = unique(sortrows(combnk(v_1, l)), 'rows'); end Where v is your input vector and l is the n dimension output. 
for any ANGLE* sorry
You should be checking the energy in the system. Are you using the linearized approximation (x''=-kx) or the nonlinear (x"=-sin(x))? The linearized approximation will give you an ellipse. 
My two equations were : w' = -(g/l)sin(theta) theta' = w I didn't use any approximations as far as I know;
I do understand some of the shortcomings of the model. However, I was wanting to make a new program from scratch, using Monte Carlo method. I did try googling for black scholes matlab, but it all seemed to be either premade programs or a plug and play equation/solver, not an actual model. Would you mind if I PM'd you with the problems I had in mind working, and see if you can provide any help in getting me going? I'm fairly new with MatLab.
It can. You have to define it everywhere you use it, though: global variableName This way any change to variableName in one scope will carry over to every other scope. You want to be *really* careful when doing this and 99% of the time if you are tempted to solve a problem using global variables there is a much better way to do it.
Yes, exactly, you need to define it everywhere it is used, and it can be altered in any one script or function, affecting every other script or function. But remember that if they're scripts (not functions), you probably don't have to do this. Scripts can see whatever is in the MATLAB window -- their scope is exactly the same as if you typed them into the main window (rather than running a file).
Decided to mess around with it again and managed to get it to work. All I had to do was add "www." to the url. Feel like an idiot for not trying that earlier. 
Sure, happy to help. Got experience with Matlab and PDEs - currently working in a postdoc using hp-FEM on Maxwell's equations :)
So in case anyone comes back to look at this I just wanted to say I've got everything fixed my code now appears as follows: %Given x1=.3; x2=1-x1; t=60+273.15; V1=75.14; V2=18.07; a12=775.48; a21=1351.9; %calculate paramaters for WilsonEQ A12=(V2/V1)*exp(-a12/(1.987*t)); A21=(V1/V2)*exp(-a21/(1.987*t)); %calculate activity coeffecients for WilsonEQ Act_cof_1=exp(x2*((A12/(x1+(x2*A12)))-(A21/(x2+(x1*A21)))))/(x1+(x2*A12)) Act_cof_2=exp(-x1*((A12/(x1+(x2*A12)))-(A21/(x2+(x1*A21)))))/(x2+(x1*A21)) %set tolerence and generate arrays to collect suitable results tolerence=.0001 ans_y1 = []; ans_y2 = []; ans_P = []; %iteration loop for P=0:.001:100 %calculates y1 and y2 %saturation pressurse are calculated by global functions y1=((x1*Act_cof_1*Psat_1propanol(t))/P); y2=((x2*Act_cof_2*Psat_water(t))/P); %generates an array of all answers fitting condition if (y1+y2&lt;(1+tolerence) &amp;&amp; y1+y2&gt;(1-tolerence)) if isempty(ans_y1) ans_y1 = y1; ans_y2 = y2; ans_P = P; else ans_y1 = [ans_y1, y1]; ans_y2 = [ans_y2, y2]; ans_P = [ans_P, P]; end end end %Displays average value of each array ans_y1; ans_y2; ans_P; y1_BUBL=mean(ans_y1), y2_BUBL=mean(ans_y2), P_BUBL=mean(ans_P) 
Check out the built in publishing capabilities of Matlab. You can process your code so that it automatically outputs as a nice html or pdf which you can turn in .
There's a shocker.
Where exactly are you stuck? Explaining all the GUI functionalities in Matlab would be a bit too much to write down without using any pictures. I would recommend watching some youtube tutorials on how to build a basic GUI. The principle behind the GUI in Matlab is the following: Each of the buttons/textfields/plots you put in via GUIDE has a unique tag and several values that you can read and write. GUIDE automatically creates a m-file that contains a callback function to each of the components you put into your GUI. Every time you change one of the components (write a number into a text field, press a button, click a checkbox etc...), Matlab runs the callback function for that component. Any code that you write within these functions will be executed. What you want to do is: in the callback function for your plot-button, run your ODE solver. You can get the values from your text field using something similar to value = get(handles.yourtextfiledtag,'String') where 'yourtextfieldtag' is the tag of each of your textfields (don't forget to convert this string to an integer if you want to use it as such). In a similar fashion (axes(handles.youraxetag);), you can get the handles to the figures or rather their axes and follow it up with plot commands of your choice. 
Yeah, I got stuck on incorporating the ODE solver and the GUI, such that it would read in the constants, without getting errors from the function file with the Diff Eq's (they are sets of 3 interconnected diff eq's stored as an output vector). Should the code to update the axes blocks be written in the callback for the plot button as well? This helps a lot though! Thank you. :) 
Do you need to pick initial conditions? For sufficiently small initial angle it will be indistinguishable from a sine.
Thats awesome! Here is the dropbox of the problems I'm working on. Not sure how to start this up in Matlab. Here is the main problem, and the two other problems that are pulled from it. https://www.dropbox.com/s/3zucgifexgaz5f1/5.5.JPG https://www.dropbox.com/s/11a9g3s0xkb20qr/5.6%2C5.7.JPG And heres the book they are pulled from if you need some review... https://www.dropbox.com/s/4vaen4jh485i3qc/Explorations%20in%20Monte%20Carlo%20Methods.pdf
I'm also going to be honest. I'm an undergrad, and I'm trying to finish up my last semester of school for graduation. I've been slammed with my other five 4000 math classes, and this 4350 financial modeling class has got me toasted. I dont want anyone to do it for me, but I'm definitely going to need some help getting started. I think once I can get the wheels turning, I can figure it out on my own. My brain is just too fried to get going and I have 5 other finals this week to study for too. This project is basically my final in this class. Again, I would appreciate any help you can give to get the wheels turning or any help you're willing to give beyond that!!!
&gt;if they're scripts (not functions) ... exactly why I use scripts mainly, functions for the repeated tasks. Thanks for the knowledge
Matlab is funky for functions. It requires that every function be in an file of the same name, and you can't call that function from the same script. %% FILE: function.m function [x,y] = f(a,b,c) % help details return sqrt(a^2 + b^2), atan(b/a) %%FILE: script.m [c,d] = f(1,2,3) % c= sqrt(3), d=atan(2) 
&gt; It requires that every function be in an file of the same name This is not quite true. Take a look at [local functions](http://www.mathworks.com/help/matlab/matlab_prog/local-functions.html), [nested functions](http://www.mathworks.com/help/matlab/matlab_prog/nested-functions.html?s_tid=doc_12b), and [anonymous functions](http://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html).
You could use plot functions to draw a resistor with the appropriate color stripes.
&gt; Should the code to update the axes blocks be written in the callback for the plot button as well? &gt; Yes. If it's too much code you can write another function that the callback calls though.
Great idea. Might do that!
Ok, so you should probably sketch out some pseudo-code to get it straight in your mind first. First thing to do is to initialise your values/variables, all of which are given in question 5. Then you'll want a for loop to simulate the 90 days. Within that loop you'll need to calculate the random walk step (use randn to generate normally distributed values.. the mean and variance is 0 and 1 so you don't need to adjust it), and advance the equation by a day.
So maybe have some like... %Initial Values/Parameters n=90 "put values here" %Start for loop for i=1:n Initialize random walk here with black scholes equation end Print (various values) Really rough start outline, but something along those lines? Again, complete coding noob here. 
I'm assuming FEM is Finite Element Method. I've only covered some Finite Difference Approximation methods, but Ive read up on FEM. Seems far more accurate, but very much so more complicated. 
That's a fair start. How are you going to advance the block scholes equation?
Thats what I wasnt quite sure about. I need to look the equation back over and see if I can figure that out. Need to look over Matlab coding some more as well.
Can you show us what the file contents look like? Just the first few lines should suffice.
Tab separated value?
I'm not an expert in the underlying math but I do use Matlab's built-in SVM functions svmtrain and svmclassify. Even if you can't use the toolbox for your assignment, can you look at the code of those two Matlab functions to get some ideas as to how Mathworks does it? (Assuming you have access to that toolbox -- I think it's Bioinformatics.) Also, a quick FYI: svmclassify also implements part of its algorithm in a hidden function called svmdecision that you can't edit from the Matlab command line... but if you go hunting around inside your Matlab installation, you should find it.
You need to overload the [`subsref`](http://www.mathworks.com/help/matlab/ref/subsref.html) method.
Well, I thought that was the formula for acceleration and you're using it like velocity. Also, shouldn't it be `r^2`?
2 things I noticed (one conceptual, one coding): 1. Check the location of the [Barycenter](https://en.wikipedia.org/wiki/Barycentric_coordinates_%28astronomy%29) of your system for the duration of the simulation and see if you notice anything. I believe your code is giving you correct results for the initial conditions it was given. 2. Once you've resolved part 1 above, you might want to adjust the tolerance used by ode45 using [odeset](http://www.mathworks.com/help/matlab/ref/odeset.html), ode45 is notorious for giving sloppy results for the 2-body problem (but it's NOT the reason for the spirals). The default tolerance is 1e-6, try adjusting it to a finer value.
What tolerance should be used for gravitational simulations?
I think what you want to do is contour(x,y,func(x,y));
Ah, of course. Thanks! :)
Yes, when you call the handle func you should provide it with the arguments it wants. The @ is just for making it a function handle.
It seems to me that you have already done the hard work in finding the equations that you need. My suggestion is finding the populations as a function of time. Make an array of times, increasing by a very small amount. t = 0:dt:tfinal. dt = 10^-3 (something small at least) tfinal = 100. Now you have 2 options. Just plotting the evolution of the populations as a function of your time. Then just look at the plot for the value At 0 time. Or you can have matlab look for it. Take abs(r(0)-r(t)) and minimize it. I hope this helps!
That's really weird. well at least it should be func(x,y). Maybe func expects arrays/doubles and you are not providing the right type?
I'm sorry that I can't solve your problem right now. Glad to hear you've been able to move on though
You can load the text file into matlab. If you insist on having the xls file you can even export your arrays from matlab to an xls
The gravitational force equation is F = GMmr/r^3, so after I plug in my variables (e.g. F=m1a, r=x2 - x1), then you have the a1 = (G*m2)*(x2 - x1)/r^3 equation. The r^3 in the denominator is usually radius of the earth, but I'm just looking at the distance between the two bodies.
Ellipses are the actual shape of the orbital path, but I'm not planning on using eccentricity in my model, so I'm keeping it to a circle. Either way, it's not working right now :(.
[F = G M m / r^2](http://en.wikipedia.org/wiki/Newton's_law_of_universal_gravitation) 
There are a couple ways to go about it, discussed [here](http://www.mathworks.com/help/matlab/data-import-and-export.html), and if you have 2013 (I don't remember if &lt;=2012 did this), it has a pretty extensive import GUI, where you can even save the steps as a script or function. (I did not look at your file, but in the future, dropbox is great for public links, or even put it on github or similar). EDIT: I just realized you just want to turn that text into an excel, regardless of Matlab. My suggestion is use something like notepad++ and regex to insert commas or something like that to delimit the columns, then open in excel.
Alright, that wiki article is missing a formula I thought it had. The location of the barycenter is also the location of the [center of mass](https://en.wikipedia.org/wiki/Center_of_mass). The plot you are expecting to see is the the location of the bodies relative to the center of mass. You don't need to modify your kepler2() function, it's just a coordinate change on your results.
I don't know of any specific tolerance, I just change it until the results look reasonable.
Thanks for linking me to the article. I did try it with the r^2 yesterday, but the plot made even less sense than it was making with r^3. From the lecture notes I was looking at from a class at Northwestern, the magnitude of the gravity is F = GmMr / R^3, where r = distance the object is from Earth’s center, and R = Earth’s radius. So maybe I have the r and R flipped? I'm not sure what R would be in my case, then, since both bodies are just point masses.
Hi, Could you please post your code? That makes it easier to fix. Right now I'm confused, because your code makes up values corresponding to a time that you haven't put in
Ack. I'm really sorry if I'm slow on the uptake--so I have been trying to do the coordinate change in my script, but I honestly can't say I know what I'm doing. Am I calculating a vector r to plot against the components of the q vector?
No. Do not ask people to install .exe files. Ever. 
Your function kepler2 is fine, no changes are needed there, all you need to do is calculate the location of the center of mass of your system. The plot you are trying to get is the position of your 2 bodies relative to the center of mass. The reason you're getting the spirals is because your two bodies have a net momentum which is non-zero, causing them to drift away from the origin.
Got it. It made sense after you sent the link to the center of mass wiki article; I just needed to plot it in the xyz-plane, and not just the xy-plane to see the results. Thank you so, so much! 
Roughly; I would imagine identifying the pupil as a single object then finding the area of that region using regionstats. Then take those area measurements and plot them over time and when that area is at it's maximum, then that should be when eye contact was made. Just spitballin' though!
Apparently a good cheap way to do this is to find the pupil and detect the sclera (white) regions around it, and check they are equal thickness to either side of the pupil.
Could you further explain your counter example or provide some clarification? Because I don't understand where you are suggesting the false positives come from. Conceptually, I assumed the camera was a point and the pupil was a freely rotating disc (a disc attached to a gimbal is probably better); the volume between the point and the disc forms a conic section and when the disc is perpendicular to the point is the maximal area. I assumed that would be considered eye contact. What did you have in mind?
If the subject never makes eye contact, there will still be some maximum in the data set. In general, if you look for a maximum in a data set, you will always find it. If you can assume eye contact will always be made then it will work, but if somebody only turns 3/4 towards the camera and then goes home, that 3/4 will be max (but not eye contact). Instead, I'd suggest a minimum threshold for circularity be met. 
That's a good point, I agree with your assessment. 
use a Heaviside function.... if: f = your function, and you're operating in 2 &lt; t &lt; 4, your code should be y = f * heaviside(t - 2) - f * heaviside(t - 4) which equates to: y = 0 (-inf to 2) y = f (2 to 4) y = 0 (4 to inf) * https://en.wikipedia.org/wiki/Heaviside_step_function * http://www.mathworks.com/help/symbolic/heaviside.html
Scilab is not a drop in replacement for matlab, so this might not be the best place to ask.
for context: this is the step in Gaussian elimination where we solve for the variable x for the linear system Ax = b, given x(n) = A(n,n+1)/A(n,n), via backwards substitution. *the n+1 term refers to the right side of the augmented matrix.
This might be what I'm looking for actually! t in this case is -T/2 &lt;= t &lt;=T/2 where T = 0.01
I have t as a linspace ranging from -T/2 to T/2, giving T as 0.01
I'm pretty sure it's not the most efficient way to do it, but this sort of thing is easily doable with a FOR loop. In fact, I used this exact technique in a power systems analysis assignment one time! 
help filter
no you didn't mention that. seems you also have a group leadership missing, don't blame the guy who didn't turn up, the people who did nothing but wait share the responsibility. Learn that and this project will give you more than a filter
This is the first thing the sidebar says NOT to do. We're not here to help you with homework, let alone a project that is due in 6 hours. Good luck
Agreed. Also, he really needs to get off reddit and spend some time working on the project. 
I say leave the thread up for schadenfreude value.
Glad I could help. 
Alright, I just think that matlab might not be ideal then. You'll be working with symbols and functions instead of arrays and numbers. Maybe consider Mathematica or Maple?
I just did a quick test with random data and your code, just prefacing it with clear all; a = zeros(24,3); a(:,1) = 1:24; C_L = rand(24,3); and it worked fine for me. Can you give some more details about the data sets? 
More MATLAB documentation copy+paste. Cool.
I'm actually stuck with Matlab - it's my uni work. The reason why I didn't state my values is because all I wanted to do was find a specific function in Matlab to allow me to achieve what I wanted, rather then being handed the answer on a plate. I appreciate all the help from everybody though.
Second confirmation that your posted code works just fine. I used /u/flyingbootable 's random data snippet to give it something to work with. This is using R2013a.
Alright, alright. You can always use the ugly method of putting an if-statement. If (out of range) value = 0 end something like that
and... it's gone.
I store sets of parameters in a struct: params = struct('FileNameWhite','whitefile23.mat',... 'PathNameWhite','C:\data\',... 'FilterIndexWhite','filterIndex23.mat',... 'param4','string1',... 'param5',242.432); And access them like: ` &gt; params.param5` ` &gt; 242.432` ` &gt; load(sprintf('%s%s', params.PathNameWhite, params.FileNameWhite);` Then there's just one variable holding all the parameters.
That seems like a good method. In MATLAB can you extend native classes? It would be cool if you could make a subclass of struct with methods to update and save all parameters. If not I guess you could make a wrapper class. Then you could make each parameter a class that would specify methods to update it from a GUI, like fileDirectory, filePath and variable classes that would present an appropriate dialog when parameter.update() is called. 
A few different ways. If it's something that needs to be saved as a preference and reused from there: https://github.com/jedediahfrey/matlab_pushover/blob/master/pushover.m You could always compare if a required structure is empty to prompt for what you use.
Thank you very much! 
IF you want to load it into Matlab first, you will use fopen, and then while that is open do fgetl on it (or at least this how I seem to do it). But there are plenty of ways to do this, described in the link in my last comment. If the goal is just to get the file in to excel, I would figure out a way to add commas or something else to the text file where you want there to be columns and then open in excel. To do this, I would use [regex in notepad](http://sourceforge.net/apps/mediawiki/notepad-plus/?title=Regular_Expressions).
Use your derivative rules d/dx [ f(x) - g(x) ] = d/dx f(x) - d/dx g(x)
JK, figured it out using global variables instead. Dur. Leaving this post up for anyone else with a similar brain fart. 
Your initialization choice for min_dist is the issue. Taking it as product of the max value of your two grid axis is naive and dangerous. If you have a grid on from -4 to 4 in x and y your default min_dist is only 16. Even with a small sample set, the sum of all those distances is going to grossly exceed 16 and your algorithm is never going to find anything that beats your default "best guess" so a and b will never update from being 0,0. To prove that if I make a grid from 0 to 1 and throw any more than a few points at this it will always return min_dist = 1, a=0, b=0. Dropping the number of points in p and it magically starts working again. Test case: [m, a, b] = optm(rand(20, 20), 0:.01:1, 0:.01:1) Tinker with the number of samples and see for yourself. it works fairly reliably with 2-3 samples, more than that and it falls flat.
So what should I use instead to initialize that?
Thank you so much! I hadn't thought of the fact that any point on that line will be a 'minimum point.' Problem solved!
1) You don't want "persistent." You want "global." But there is a much better way to do this, I'll link to my other post: http://www.reddit.com/r/matlab/comments/1sabnu/help_with_ode45/cdvw1u6?context=3 a,k,l, and b here are parameters passed to the function: function [derivatives] = equation_dydt(t,states,a,k,l,b) x = states(1); y = states(2); dx = -a*x + k*y; dy = lx - by; derivatives = [dx;dy]; end ... [TimeVector,statevars] = ode15s(@equation_dydt,intervals,statevar_initial,options,a,k,l,b); 
Okay. I just saw my code again and I had imported the same data set to three columns. for j = 1:3 C_L(:,j) = xlsread(file,1,'H2:H25'); %Imports Cl end instead of for j =1:3 C_L(:,j) = xlsread(file,1,'H2:H25'); %Imports Cl end I guess what confused me the most was that, instead of seeing an overlap of blue, green and red points (the colors of the three data sets), I was just getting red points on the graph (the third data set). Even if I had imported the same points from different I would have expected to see different colors pertaining to the the three columns of **C_L**. I hadn't thought of checking my data points. The next time this happens, I will also check if its an error in my data points by substituting my the vectors with other vectors of the same size. Thank you for your help. 
Global variables is kind of a dangerous way to do something like this, it's sort of a "hack" even though it works technically. I've outlined a more correct way above, though you can do whatever you want so long as it works.
I agree and thank you for your help. As I have already said in a reply to /u/flyingbootable, the error was in importing the data from Excel and not in my plotting code. 
Thanks!
As an alternative to picking some arbitrarily large value, you could initialize min_dist to infinity: min_dist = inf; Then the first distance you encounter will obviously be lower than the initial value. Or, you could test the first point of your search space before starting the for-loops, and use its distance as the initial value. Then just start the first for-loop from 2 instead of 1: for i = 2:length(xarray)
refactor your code the smallest functions possible, then you can test it properly and in Matlab: if you're looping, you're losing
Should be able to pick out those points if you calculate some derivatives of those signals and look at the slopes and curvatures.
We don't have `phi`, `time`, or `indices`, so we can't run your code. What is the problem you're having? There's a pretty simple formula to differentiate a polynomial.
i think i did something like this before where x is how many boxes it splits the function into (larger = more accurate up to a point) approx=[]; x=[4 8 16 32 64 128 256 512 1024 2048]; for k=1:10 [a]=(1:(4/x(k)):5); aa=(a.^2); approxl=( (4/x(k) )* (.5*aa(1) + sum(aa(2:end-1)) + .5*aa(end) ) ); approx=[approx;approxl]; end Result=approx 
well.. maybe some code would be nice... I know MATLAB has a guide to build GUI's... maybe that would be nice to look into :)
Pick peaks y and note the x values. Then plot(x,y). Matlab will linearly interpolate between peaks when plotting.
Is your interface in guide? Add a label. That label should have a property called "text" that you can set programatically. In your button function: my_label = handles.my_label; set(my_label, 'Text', 'You Win!'); 
Use findpeaks(). It identifies local maxima. [y_values,x_values] = findpeaks(data); will return y values of peaks in y_values, and their location on the x-axis in x_values. From there you can plot them normally and get a curve that passes through the peaks, or you can use a curve fitting tool if you want a nice smooth interpolation. 
You may need to add *drawnow* to force Matlab to update the GUI.
wait, so if I'm understanding correctly what you're trying to do is plot the probability that the (continuous time) waveform is a specific value. This is exactly equivolent to a histogram.
The pdf plot is a smooth curve, a hist plot is more like a bar graph with specified bins. I know I have to use the pdf function in Matlab, I'm just trying to figure out how...
One last question...sorry..Do I need three separate handles.my_label for each option(Rock-paper-scissor).
Can we see the function? 
The button callback gets passed a variable called "handles". It has a handle to each widget in the UI as a sub element.
Unfortunately my matlab doesn't accept imgur links as code. Put a debugger inside of the function and look at all of the variables. If you do the same thing in the same way you should get the same answer. Something isn't the same.
Sorry, I tried to paste it on reddit but it was formatting it differently b/c of RES. I'll try to upload them by text.
sure :)... 
I would start by trying to simulate a simple first order differential equation, such as: x' = a As a starting point I would look into the function ode45. 
I think you might be looking for [kernel density estimation] (http://www.mathworks.com/help/stats/ksdensity.html). Check out the examples on MathWorks 
Took me a minute. It's the reddit formating the .* operator, confirmed by the italics until you get to another of the operators. To OP: put 4 spaces before your code to break out of reddit formating.
You can use sprintf to generate the string for the filename, something like: filename = sprintf('PolynomialDataDegree%d',j) 
nice, this is what I was looking for. TY.
also, for file name: fname_sv = ['&lt;filename&gt;_' num2str(loopnum)]; will give you whatever &lt;filename&gt; is (as a string) and the loop number, ie: filename_1 filemane_2 &lt;etc.... &gt; if you have a number of files more than one degree, you may want to pad the filename with 0's for the file names less than the total degree. eg: ['&lt;filename&gt;' '0' num2str(loopnum)] % for when loopnum is less than 10 ['&lt;filename&gt;' num2str(loopnum)] % for loopnum less than 100 but grreater than 10 just to give you some idea
&lt;in google&gt; Matlab + pdf (read documentation)
Your question probably belongs in /r/DSP. To denoise a wavelet transform, you just have to set the (in the 1D case) later (or smaller) terms to 0.
Imagine you have a 1D wavelet transform. To denoise it, you set coefficients based on some threshold to zero. For AWGN, a good threshold can be something like T = sigma * sqrt(2*log(N)), where N is the length of your signal, and sigma is the estimate of the standard deviation of the wavelet co-efficients. (Use a robust estimate for this). This is called the Donoho Threshold btw. So find any abs(co-efficient) that is less than this value, and set it to zero. Then inverse wavelet transform. Congrats! You have denoised your signal. In 3-D, it is exactly the same. Take 3-D wavelet transform, threshold, set to zero, inverse transform. Done. 
You apply it to all of them. When you take the wavelet transform, you will be applying a global threshold. This means, you will be comparing all coefficients, the coarse and the detail ones, to some number, and then thresholding. If your threshold is good, you will be *effectively* removing most of the detail coefficients, while leaving most of the coarse ones. But you start off thresholding everything. 
Not sure, but how exactly was the file overwritten? How did the jpegs get joined in the first place?
Splitting the large file into multiple small ones is exactly what I need thank you. What exactly does this code do? Does it make a new file for each occurrence of FF D8? 
Worked perfectly! Thanks so much!
&gt; JPEG files begin with hex FF D8 and end with FF D9. So you could try to search the binary file for occurrences of FF D8 FF D9. I think you will want to look for `FF D9 FF D8` if you are looking for the boundary between two images splits = strfind(bytes,[255 217 255 216]) + 2; EDIT: nevermind.
Actually I changed it to FF D8 FF, because when I used FF D8 FF D9 it didn't do anything but FF D8 FF gave me all 262 pictures 
Well, either way glad you got it working!
Do the files themselves actually start and end with `FF D8` and `FF D9` respectively?
Just kidding looks like you were right after all! I had the pictures but they wouldn't open in photo viewer, changed it to what you suggested and viola it works. Thank you!
Happy to help, but /u/buq2 did all the work. Give him upvotes; I just noticed a simple and easy to fix mistake.
Yowza, well I guess that means the data is there somewhere. No idea how to retrieve it, though. Good luck.
I would recommend to avoid the Mac Pro as a computational workstation for Matlab. The lack of upgradability (RAM, cards etc.). Check standard workstations from the big suppliers - you will get much more bang for your buck for Matlab (I have used HP z800 and Dell Precision T7600 and they are both excellent)
Not from Mathworks. You could look at things like this: http://www.mathworks.co.uk/matlabcentral/fileexchange/30109-opencl-toolbox-v0-17 but they will be much less mature than the builtin stuff and of course there is the risk they will not continue to be actively developed. I know its not the answer you want but I really think in this case "don't use a mac pro" is the right answer - right tool for the job etc. It is not the right tool for a Matlab computational workstation.
This comment is beyond unhelpful. People aren't in /r/matlab because they have general programming problems and thought maybe Matlab would be the right platform. They are here because they are working on a problem that requires interaction with another piece of Matlab (like simMechanics, or xPC), has to fit into an existing Matlab codebase, or because they work at a place where Matlab is the platform to be used. Not every company lets you program in whatever you feel like. &gt; Matlab is great for prototyping with small linalg stuff and basic plotting. This was true in 1985.
If you can get your hands on the *MATLAB for Building Graphical User Interfaces* training manual from Mathworks' fundamentals course, I find it does a much better job than the GUIDE documentation. It lays out all of the fundamentals &amp; programmatic aspects before it even touches on GUIDE, which I think is a better approach for someone who is looking to get an in-depth understanding of what's going on rather than just looking for a one and done GUI. At a quick glance, [this](http://www.dtic.mil/dtic/tr/fulltext/u2/a440941.pdf) might be a decent option. Most of what turns up in a search is very GUIDE centric which likely isn't what you're looking for. ETA: Walking through [this documentation](http://www.mathworks.com/help/matlab/creating_guis/about-the-simple-programmatic-gui-example.html) would be a pretty good start as well
I'm liking the DTIC link. Any chance you know where the accompanying files are? It doesn't look like they transcribed the whole .m file for some of the examples.
Unfortunately, no. This is the first time I've seen it.
Ok so I found out what was happening, I am posting the solution there as a PSA. I wanted to save the (x,z) coordinates as a vector so I was using the "vector concatenate" block somewhere outside the subsystem. For some reason the vector concatenate assumed that each of the inputs were 1x2 vectors and was casting this on the upstream signal back into the equation of motion subsystem. The more you know...
Exactly as the first responder has said: you can specify the x and y input vectors for a set of data in just the same way you could plot distance as a function of time (and not just index): plot(t,x); and then for your work: contourf(UTC,z,T,100,'LineStyle','none') The 100 will plot 100 contours (or however many you want/deem fit) and the 'LineStyle' will erase the black lines. Side note: what kind of atmospheric science research are you involved in? *Edit: also to help you in the future, googling: Matlab + &lt;topic/function&gt; will bring up the Matlab help online, where if you already knew what/how contourf() plots but want to tweek it, you can learn things like the "LineStyle' bit as well as different colormapping schemes. It can also take you to the user file exchange where someone might already have coded and made available something you need: ex. a way to deseasonalize data.
Thank you! This worked very well, I appreciate the help. 
Thanks a bunch, this also works well. I really appreciate it. I am currently working with the AERI (Atmospheric Emitted Radiance Interferometer). It can capture vertical profiles of temperature/humidity with temporal resolutions of 10 minutes, as opposed to regular radiosonde launches that occur twice a day. Right now I am using AERI data to verify CAPS storm-scale ensemble forecasts. Ideally, it will be useful to see the evolution of the boundary layer and various convective indices throughout the day. 
What? Why are you trying to find ξ? If you are trying to find the number of intervals to hit below your tolerance, write a loop that calls the traperr function for different values of n, and tell it to stop once it's below whatever tolerance value you set.
I so badly want to publish this to the startup script for our company-wide toolset.
I don't have anywhere good to point you, but I agree there is a need for this. Too many resources out there jump right from the absolute basics to the incredibly technical/specific bits, without spending much time at the intermediate level teaching how to accomplish various sorts of general-purpose programming tasks with Matlab. I would guess this is because most authors of Matlab books and such assume that the average Matlab user is someone who has programmed before in another language but never in Matlab, and thus once they've got the fundamentals, they can translate over their intermediate-level programming skills from their other languages and skip right to the hard stuff. And this may often be true, but it's far from universal. Someday, I would love to turn my 10+ years of Matlab programming experience into such a book or website... but I don't know when I'd ever find the time... EDIT: I don't know why it didn't occur to me to plug before -- but I did teach a year-long undergraduate course called "Programming for Psychologists" that was sort of aimed at this. I made a podcast of it if anyone's interested. It is kind of specific to psychology/cognitive neuroscience research applications, but there is a lot of general-purpose programming info in there as well. The downside is that the year-long course taught first Python, then Matlab -- and it is cumulative, so you kinda have to go through some of the Python stuff first to develop those skills before translating them over to Matlab in the second semester. But if anyone's interested, I'll leave the link to the first class/episode [here](http://www.youtube.com/watch?v=6O7Gxzl-ekI).
Assuming "all possible paths" refers to a path starting and ending at unique endpoints, your right side drawing does not include all of these paths. After that, the problem sort of depends on how your problem is formulated. From an image analysis stand point, if you are working on a binary image, something along the lines of dijkstra could be utilized to find shortest path from end point A to B. So find all endpoints and then iterate through the combinations. 
&gt; 10+ years of Matlab programming experience Wow! If I may ask, are you more of a scientist/mathematician/engineer that also programs in Matlab, or are you more of a dedicated software developer? 
Please put 4 spaces before each line of code or use [pastebin](http://pastebin.com/) so we can read it.
At this point you need to stop looking at MATLAB specific content and branch out. Programming skills are largely language agnostic. You aren't going to find a large amount of higher level content directed specifically at MATLAB. The community is just too small to support it.
Thanks, I'll check out dijkstra's algorithm. So I should have mentioned, I am only interested in 'lines'/paths that begin and end at the end segments.
Yes, I must start and end at an open node. The lines that join/leave any other line can be at any angle, or any shape. And each line can have any number of child lines. You have some good pointers there that might actually help me speed up my existing code, rather than start again. I'm looking into that now!
&gt; You have some good pointers there that might actually help me speed up my existing code, rather than start again. I'm looking into that now! And that was my goal!! Good luck, let us know how the project works out.
Seems you've already gotten some helpful advice (pick any pathing/graph search algorithm out of the hat, throw every start/end pair at it), so I'll just add: sweet MSPaint diagram. High five for being awesome.
High five back. Haha, yeah MSPaint does have its uses.
I have been collecting personal notes on algorithms, one-liners, and the use of some of the more powerful matlab built-ins for years. It's in a document that isn't publicly accessible, but I can send it to you privately if you like. It's highly personalized, so it's hard to say whether it would be helpful to you - though I'd be glad to clarify any confusing terminology or syntax.
Cognitive neuroscientist -- we use a lot of Matlab (as do most scientist who work with large cube-shaped chunks of data, I suppose).
See, that's the kind of attitude that I think produces the problem. Yes, Googling is a good bet -- but only once you have developed pretty good general-purpose programming skills and have a decent grasp on what "Matlabbic" (my version of "Pythonic") programming should be. /u/matuba is correct that a lot of the skills are language agnostic -- but not all. Matlab is a pretty specialized programming environment, and there are some things to get used to that you won't see in other languages (mostly variations on the idea that EVERYTHING is a matrix of some kind of another). Yes, people use Matlab for all kinds of things and there's no use teaching hundreds of examples. But it would be nice if there were at least ONE resource in the world that taught general-purpose, intermediate-level programming skills using the Matlab environment.
I've taken it and the follow-on certification exam. Do you already know matlab? If yes: this course will be insanely boring, not to mention you'll be correcting the instructor on more efficient ways to code a number of the exercises. If no: you'll be drinking through a firehose. As with all coding languages, you learn best in a utilitarian manner; when you need something, you research it and implement it. MatLab has tremendously good help resources, both its built in help files as well as the online community. I took the course because it was paid for by my work and I can put that little "Certified Matlab Associate" .jpg on my resume.
meshgrid two linspaced vectors? that seems like what you're going for.
hm, not quite, because I need zeros in key places. Meshgrid also doesn't give me the structure I need in a way I can access without a loop. 
I'll give it a shot and time it with some large grids. The thing is that r may be quite large, and A could be enormous. Thanks for the tip!
I see you like to live dangerously ;)
Loop-free version as requested. bsxfun() is a gloriously badass little function once you can figure out how the hell to use it. v=[3;3;5]; x = repmat(1:max(v),length(v),1) x = x.*bsxfun(@le, x, v) Technically bsxfun() loops internally, so it is really a sham. But hey! No user facing loops, and that's what really counts right? Edit: Accidentally a few letters.
Damn, that's some slick code. Thanks man.
Why thank you. I wish I could be that clever all the time ;)
It sounds like the course would do you some good then. You'll learn about a lot of things you don't know (figures/handles, indexing, more array stuff incl cell arrays) and reinforce what you do know. Are you paying for it? We put 10 people through it at work and it ran like $21k for everyone. Ridiculous.
Yes, I'll be enrolling as an undergrad and paying for it myself. It costs around $300 (rough conversion). I've completed my mechanical engineering last year and I'm looking to make my way into simulation sciences etc. I think (read: hope) the course will give me some direction. 
The fact that the language is far more forgiving, and much easier to learn. Also, since JIT compilation became a standard feature in MATLAB, the differences between loops and vectorization have become smaller and smaller. No matter how you put it, vectorization, underneath the hood, boils down to loops.
&gt; No matter how you put it, vectorization, underneath the hood, boils down to loops. Yes, but *deep* under the hood it boils down to highly optimized SIMD loops.
Generally professional training is costly because it's meant to be paid for by an employer. If you're a student there are online resources to help you get started.
Very nice. What windowing system are you using?
You're going to pay $300 to have someone read the documentation to you? Bad life choice! Save your money, [go here](http://www.mathworks.com/help/matlab/), and have at it.
For writing a GUI, pretty much any language except MATLAB is better (except for completely trivial displays perhaps).
Try this script. It modifies the expected width and height of the image for one type of JPEG (baseline-DCT, RGB) and writes the result to a new file ('modified.jpg'): in_file_size = [1024 1280]; should_have_been_size = [720 1280]; % Read the files, make sure it is in correct format fid = fopen('img.jpg'); bytes = fread(fid); fclose(fid); bytes = bytes(:)'; bytes = uint8(bytes); % See: http://kd5col.info/swag/GRAPHICS/0143.PAS.html % Find JPEG marker SOF0 pos = strfind(bytes, [255 192]); pos = pos(1); %Assume that the correct location is near the beginning % Check for validity org_height = bytes(pos+5:pos+6); org_height = fliplr(org_height); org_height = typecast(org_height,'uint16'); org_width = bytes(pos+7:pos+8); org_width = fliplr(org_width); org_width = typecast(org_width,'uint16'); if org_height ~= in_file_size(1) || org_width ~= in_file_size(2) error('Size of the image in the file does not match expected size') end % Modify marker bytes_new = bytes; should_have_been_size = uint16(should_have_been_size); new_height = should_have_been_size(1); new_height = typecast(new_height,'uint8'); new_height = fliplr(new_height); bytes_new(pos+5:pos+6) = new_height; new_width = should_have_been_size(2); new_width = typecast(new_width,'uint8'); new_width = fliplr(new_width); bytes_new(pos+7:pos+8) = new_width; fid = fopen('modified.jpg','w'); fwrite(fid,bytes_new); fclose(fid);
Okay. Thanks! :)
Spamming is bad for your account.
Do you mean like: foo=struct('bar',[],'home',[]) for a1=1:10;foo(a1)=struct('bar',a1,'home',a1^2);end
Worked great cheers 
Pay attention to the subtle syntax difference. {} indicates cells and access the contents of the cell. () is what's used to create an array of something. In this case the something is your structure. So an array of structures. Cells are an entity fairly unique to matlab. I have found them useful when you want to treat data like a matrix but it is composed of different data types. 
It looks like this is a warning written by the author of spm_jobman. You can use: edit spm_jobman To read the code. Some versions of matlab actually turn the warning into a link into the code so you can click the link to go to the line. Otherwise you need to turn on line number to find the line or count lines. Use: doc To figure our what's going on in the code. It works like help. 
This may help. ezsurf uses surf. Surf will not display the last row and column based on its algorithm. Append a row of zeros and a column of zeros to overcome this. A(:,end+1)=0; A(end+1,:)=0; Will do this for a matrix A. 
Atrous wavelet decomposition maybe a good candidate. You can google for it. There are at least Matlab,Java,and python versions from Google search results.
I would suggest right before your ezsurf() call. Remember that you've "modified" your matrix A, and remove the empty padded row+col before you continue to process matrix A if you do so after the ezsurf() call. *Edit: Does this just occur at the edges where you would/should/can see from looking at the elements in matrix A you expect the extreme slopes? Because if this is occuring in the middle (ie. not edges) of your matrix A then /u/Scourched 's suggestion won't help.
Nevermind, I was thinking of Octave.
&gt;I have found them useful when you want to treat data like a matrix but it is composed of different data types. Me as well! I can save variable length variable names (Temperature, Pressure, RainRate, etc) and their gridded arrays all in one entity (the cell)!
It's also possible that the change is there you are just not seeing it. Look at ezmesh as an alternative. Another suggestion is to look at shading. I believe the command is shading So do a Doc shading To learn more. Another problem is Nans and infs. if A is your matrix try isnan(A) Isinf(A) These commands will check your matrix for Nan- not a number Inf- infinite Use doc on those commands. Look at your calculations at those points to see what's causing a nan or inf. doc will show you how to convert linear indexes to subscripts.
Google them. I think "matlab structure tutorial" would be a start. Look for example code run it, in debug mode, learn to love Doc Edit Look at mathworks file exchange for code to play with. But I highly recommend learning object oriented programming and using matlab capability in this area. Structures are nice. But then you have to build functions to go with them. Then there's m files lying all over the place. Oop is cleaner.
Damn, way prettier than I was expecting!
Oh look, more lackluster content. This time shameless plagiarized! A new low for the schmucks from Divilabs. 
Care to explain the backstory behind that comment? 
There are two accounts who regularly post links to that divilabs.com website. The 'articles' contain no meaningful content. 95% of the time it is some example they ripped off from somewhere else (frequently the MATLAB documentation itself!) with a few 'helpful' comments thrown in to add some semblance of original content In this case it is two files they found on the Mathworks File Exchange, wrapped a little filler text around a screen cap of the output, pointed out some AWESOME feature (you can pan and rotate a figure!! MIND BLOWING STUFF!!!), and then horked it out in a post for us to enjoy. All with no attribution whatsoever to the two authors who actually wrote the scripts being discussed.
According to me one not need to be an inventor of something for publishing an article anywhere! And after looking at the link, I must say that they havn't copied the code at least, which other websites are doing. If you have read the above post, they have only told how Plotting Result will be &amp; given up the even the 2 matlab website link which I found in their website even.
Oh look, another puppet account. Your posting is bad and you should feel bad.
No dear I am not puppet of any one! I just look around here for gud stuffs, anything new I will get to learn ..... a=imread('lena.jpg'); imwrite(a,'copied.jpg'); Oops its copied from somewhere.... Your Logic :) Gud Day!
Argh. The things people do for imaginary internetpoints.
Six month old account, no posts until now, same gibberish name style, same broken english. If it looks like a duck and quacks like a duck... And my issue isn't with the use of someone else's files/ideas. It is the complete lack of attribution. On this post, their others posts, and probably damned near everything on that horrid website. Go be daft somewhere else.
Everyone needs a hobby I guess.
haha it seems to me that you had a bad day..... Merry Christmas buddy...cheers.. :)
Keep experimenting with the software, surely you will learn more than in any courses. 
haha, u re in bad mood here also :)
So, Matlab isn't going to let you set a character string equal to an array of integer values. most likely what you want to do is use conditional statements (if,else,end) to go from the characters to the numbers so let's say that for each value of 'yes' you want to do something with with those numbers like print them to the screen, and that A is your matrix of characters and that B is your matrix of numbers if (A(1,1:3) == 'yes') B(1,1:15) end now... that's the easy way, but there is a more complicated way that would do something closer to what you're actually describing: matlab has an 'eval' function that will evaluate a character string as if it were code, so you can use this tool to create a variable that has the name defined in those strings... so using the same matrices as before you should be able to say something like: for i = 1: 5 eval({A(i,1:3),'= [', num2str(B(i,1),',' num2str(B(i,2),',' num2str(B(i,3),',' num2str(B(i,4),']'}) end and this should output something like : yes = [1 0 5 9] and so on So i should mention that i don't have a matlab in front of me so i couldn't check my code, things are probably spelled wrong, transposed, etc but this should point you in the right direction 
How do you want the final output to be structured? Do you want to keep the original matrices of strings and value arrays? Will you have one matrix that contains multiple arrays? Or do you want to create a new, separate variable for each row in your original matrix? (You probably shouldn't... it'd be better to contain all created variables into one structure of sorts) Also, what version of matlab are you using?
I'm going to take a stab at this not really knowing the ultimate scope, so let me know if this isn't what you're looking for. It sounds like the first thing you want to do is concatenate the array horizontally. So you can use strcat(matrix) for this. http://www.mathworks.com/help/matlab/ref/strcat.html Then, to make it easier to manipulate the string value, convert to cell array. Use cellstr for this. http://www.mathworks.com/help/matlab/ref/cellstr.html So, in your case, if you have your original matrix containing the chars (let's call it str_mat), it would look like this: str_mat = ['y', 'e', 's'; 'n', 'o', 't']; str_cell_array = cellstr(strcat(str_mat)) &gt;&gt;&gt;str_cell_array = 'yes' 'not' At this point, you have another matrix containing the arrays of values you want to the variables equal to. So let's say you have: val_mat = [1, 2, 3, 4; 5, 6, 7, 8]; You have a couple options... 1) You can create a new variable for each string in str_cell_array as a field of a structure. Then you want to set that variable equal to a row from val_mat. Let's call the structure that contains all variables foo_struct You can do: [n_rows, n_columns] = size(str_cell_array); for ii = 1 : n_rows foo_struct.(str_cell_array{ii}) = val_mat(ii, :) end At this point, your output will look like: &gt;&gt;&gt;foo_struct = yes: [1 2 3 4] not: [5 6 7 8] You can then manipulate the yes variable as a field of var_struct: EDU&gt;&gt; foo_struct.yes ans = 1 2 3 4 2) The second option that I thought of would be using map containers. http://www.mathworks.com/help/matlab/map-containers.html?s_tid=doc_12b In this way, you'd create an object whose keys would be the strings in the cell array, and the values would be the array rows from the values matrix. 
I suggest using the [backslash operator](http://www.mathworks.de/de/help/matlab/ref/mldivide.html) on your full matrix and getting a least-squares solution
when i try that i get this error: Error using \ Matrix dimensions must agree. Error in Project_b (line 77) x = A\B by the way my B is a vector with 29 rows
Are you sure A has 29 rows and 22 columns and not the other way around? If A hast 29 rows and B is a vector of length 29, there should be no problem. Try to output the size of A and B by writing size(A), size(B) before this operation is done to make sure.
Make b a column vector not a row vector.
Thanks alot! it finally works oh man that solution was so simple =D
Spotted it a mile away! I inherited a project earlier in the year that contained half row vectors and half column vectors. Any change I made was usually followed by at least two hours of cursing and screaming as I tracked down every other place in the code that exploded because of it. It was infuriating!
the second option is what i'm looking for, i'm going to try it out and see if this one works, i'll report back on it later, thank you! 
Edit: Misunderstood what commands were going away, see other reply for better solution. Tons of unneeded steps in there. t = dec2bin(A*2^K); bin2dec(t(end-N+1:end)); Still roughly half the speed of the built-in, but gets the job done. I'll keep brainstorming. I know there is another hack floating around in my head somewhere that I've just forgotten...
Ahh, just bitshift(a,k,n) is going away, we still get bitshift(a,k). That helps tremendously! bitand(bitshift(A,K),2^N-1) Every bit (har har) as fast as bitshift(a,k,n).
oh perfect! this is just what I needed. Thank you very much. 
Bonus...this is faster than bitshift(A,k,n): tic; for i=1:100; bitand(bitshift(A,k),2^n-1); end; toc Elapsed time is 0.000185 seconds. tic; for i=1:100.; bitshift(A,k,n); end; toc Elapsed time is 0.003155 seconds. Thanks again. 
Interesting. I timed them both but mine was about 10-20% slower. I am running 2010b at home though which may be why.
All those years of playing with embedded systems finally put to good use! I miss my old 68HC11 demo board.
weird, i'm running 2013b on my laptop (at home...maybe it's the air)
This isn't simply a matter of saving it to a new format and slapping it on to the phone. The language used is completely different, the API is completely different, the things you need to account for and handle are completely different. Seeing as you have no experience outside of MATLAB, I'd suggest starting with the basics: make a hello world app, then add a button or two, throw in some file i/o, make it save state when being closed. Then start adding piece from your project. Capturing mic input, rewriting your post processing routines, making the UI you need for the features mentioned above. I would suggest checking out /r/simpleios, /r/iosprogramming, and /r/learnobjectivec for starters. Not sure how good those subreddits are, but they are the only ones that pop up for ObjectiveC and iOS.
Objective C is a subset of C. So if you can get matlab coder to generate the C code then you should be on your way.
Still, since the underlying programming paradigm is different, and memory optimization now has to be factored into the algorithms, it's best just to have an experienced C programmer do it from scratch, using your code as the prototype and working together with them to solve inconsistencies.
&gt; Objective C is a **super**set of C.
If you have embedded coder and the stuff is done in Simulink (or you can get it done in Simulink) it's going to be much more optimized than probably any iOS application. Here's someone that has already done just that: http://www.gearslutz.com/board/product-alerts-older-than-2-months/728481-apg-composer-free-synth-sequencer-made-simulink-model.html
It has been done. I am the lead developer on an iOS app that does *exactly* this -- Matlab-based code running on the iOS platform. First of all, you have to convert from Matlab to C. iOS uses Objective-C, a strict superset of C. That's a pain in itself. Then, you have to conform to the API to access the mic and all that. That's a huge pain, and you'll have to delve deep into the docs. But, you have to do it all manually -- there's nothing automatic, although I've seen [Matlab-like C++ libraries.][1] You can not just export a `.prj` file and have it be read by Xcode -- if it was that easy, a lot of people would be out of work. &gt; the user interface just needs to allow the user to choose which track to play, and select from a few options regarding how the files are processed. That's tricky to figure out and have work right. Seems obvious, but it's hard to do. [functions]:https://github.com/scottsievert/iSparse/tree/master/matlab_algorithm/functions [1]:http://arma.sourceforge.net/faq.html
Designing a script / interface for your experiment might be relatively trivial, but would 1. Be time consuming. And 2. Be very specific to your needs / experimental design. I'd normally be interested, but I'm overly busy right now. I notice that presentation has a python API. You could use matpy to interface matlab with Python, thereby controlling presentation with matlab. 
You could compile the MATLAB and then call the executable in place / from Presentation.
yeah this pretty much works to the way i want it to, thank you so much... it's not as clean as i'd imagine, but beggars can't be choosers considering my weak programming background :(
What does the Matlab script do? Does it use any 3rd party toolboxes? 
well i mean, my intent is to eventually call upon these arrays assigned, i don't want to have to type up foo_struct.yes. i hope to eventually create a program where it asks, "what variables are you using?" i'll then input "yes" and it'll call upon foo_struct.yes. 
You can set the domain using: ezsurf(FUN,[XMIN,XMAX,YMIN,YMAX])
Multiply it together? Do everything in vectors.
You could calculate the sqrt of sum of squares for the two curves at each data point and set error bars to that magnitude.
To help us help you, would you mind properly formatting and identing your for-loops in your post? 
You could run a t-test for independent groups. This test is supplied in the statistics toolbox or you can run the stats by writing your own script/function. If you need more help or information, let me know. EDIT: a repeated measures ANOVA might be best. 
Difference between them? Speed Experienced - Speed Inexperienced. If you want a singular value the mean of squares would also work.
As previous posts have mentioned, you could simply subtract the two signals. This will give you a 3rd signal that is a measure of the difference between the two groups. After that...maybe look at it in terms of altitude and distance? Each reading has a corresponding unique distance, as well as an altitude. You could make a scatter plot of altitude readings, or a parametric curve of altitudes and output, with the parameter being distance. But I think you'd also want to look at it over time? Either way, cool data. The experienced riders have quite a lot of power variance.
If you want to go deeper than the above advice you could plot trail slope against speed or power and see what those plots look like. You might be able to show significant differences in the slope of the regressions, intercepts, or just differences in certain trail slope bands.
The two sample sizes are not the same and are testing for normality shows non normal distribution. We then ran a Wilcoxon rank sum test. Is this correct? We then found significant differences in all data but not in the Heart Rates of the two groups, which is why we don't use those data any further 
Sounds correct to me. 
How does subtracting the two help? Have tried but am not sure what it means - the new curve is sometimes &lt;0 but what does this mean? That the inexperienced riders are wating energy?
How would subtracting the two help? Have tried it but am not sure what it means. The new curve is &lt;0 at times - especially on descends. What does that mean?
I think one problem you have is that you haven't clearly defined your problem. What specifically are you interested in learning? People are giving you useful suggestions but you seem to want something more specific, yet haven't defined what it is.
Ok, think that might help - thanks. How do I then run an analyses which assume the true value is zero? And what would the result look like and how could it be used?
I think what you are saying is true. Am a total noob in this field and new to Matlab - seems like a miracle I've gotten this far... The purpose is to some how express the differences in pacing strategy for the two groups. So far I've written this: "The required assumption that the two groups were significantly different was confirmed by the Wilcoxon rank sum test (power output p=0.009; cadence p=0.036; torque p=0.009; km/h p=0.018). The experienced riders also proved to have a significantly shorter completion time (3,24 minutes) (p=0.018) Results for the two groups are presented in \ref{Table 1}. The experienced riders rode the trial at a higher speed than the inexperienced riders and rode with a higher mean power output, cadence and torque. Especially on descends the experienced riders rode at a faster pace with a low power output, torque and cadence in comparison to the inexperienced riders. At the first part of ascends this group of riders increased power output, cadence, torque to a higher degree than the inexperienced riders." Thanks alot for the feedback, you guys!
I'm honestly not sure of the best way to analyze this, my guess would be that you'd need something along a time series analysis since you don't have a small number of discrete points, you have a large number of observations over a given time period. You can read about time series here: http://en.wikipedia.org/wiki/Time_series If you just want a bare bones analysis you could do a independent samples t-test using the mean speed for each rider as each observation. Or you could bin the times so you have multiple discrete observation points (possibly binning based on where the speeds are steady instead of rising or falling rapidly). As my stats professor Robert Rosenthal always told us when we're considering two or more analyses, "Do all of them!" Exploring and learning about your data gives you better insight to what the data is actually telling you. There are a ton of ways to analyze the data, it all depends on what you're hoping to learn from it. 
Hey, thanks for your reply. It just shows stuff on the screen (Psychtoolbox) and responds to mouse clicks and keyboard input. I actually think I've gotten it figured out, at least enough to show the team at NYU, but I appreciate your reply!
So what you're trying to find out is the difference between the strategies.... By finding the *difference*. From your other posts it looks like this really isn't a matlab problem but a problem definition problem. You could take the first derivative and normalise it and look at where the professionals spent their time accelerating and decelerating. You could factor in the slope and the weight of the rider and calculate work expended.
Like acidnynex said, &lt;0 values are perfectly acceptable. If you subtract the new signal from the experienced signal and the value at a certain distance is negative, then you have that the experienced riders are putting out less effort. Which...makes sense right? On a descent, they'd know to save their energy. You might want to find the correlation between this differential signal (one subtracted from the other) and the slope of the hill? That could give a simple result. /u/acidnynex is right though, this is time series work. You might want to ask /r/statistics or something.
Avoid for loops in MATLAB, it is best to "vectorize". This means perform many operations at a time in a single batch. It should be quicker to generate a "compensation factor" vector and then multiply the compensation vector by the data vector rather than going element by element.
as other people have suggested just use a vector for the factor. example: factor_vec = (1:length(vector))*scale_value+start_value; scaled_vector = factor_vec.*vector; Here, vector is the vector you want to scale. The point in front of * is needed, so matlab does an element-wise multiplication and not vector multiplication.
Try using this: http://www.mathworks.com/matlabcentral/fileexchange/23629-exportfig Download it, extract it in the same directory as your m-file or add it to the matlab path. Then use it like this: export_fig('-transparent','-eps') This code should be put after your plot commands. EDIT: removed the useless gcf command.
It's not really possible to answer this question without knowing the data type(s) (beyond 'basically column vectors'), how you're loading it into MATLAB vs. Octave, and how you're processing it.
I use the same export function! One note is that 'h=gcf;' is only necessary if you are saving multiple figure handles to export all at once. The way I run is just having set(gcf, 'Color', 'w'); export_fig filename.eps after each of my figures. Or if you wanted transparent you could just export_fig filename.eps -transparent
They are basically matrices filled with double ( float) elements, here is one line of the code's output. The original data file is a bit bigger tho (91580 x 1975). &gt; 0.0045 18.02746446 0.3972119888 0.1296596409 I am just using a simple **load** command, I have included the script in the post description in any case. 
Try pre-allocating B. When you change the size of B by adding new elements to it, you're actually copying the array. Use the zeros command to create a matrix of the required size before populating it. 
Cool, have fun. I too have an intracranial EEG project going on the side (I primarily do rat ephys) -- it's fun stuff. Enjoy!
pre-allocating seems to be a good policy and I will keep it in mind for future usage, but the question is if there is a reason why octave would handle this code more efficiently than matlab. 
You said in your original post that you've not yet installed Matlab on your machine. Are you comparing the results from two different PCs? Also, I'm not familiar with Octave but there are a few optimisation that would make your code faster in Matlab. If Octave can do that automatically (Matlab doesn't) then that could speed up execution. 
Yeah, i use gcf because of my subplot use, else it would export only the last subplot in the figure.
Different CPUS with different OSes and different hard drives and memory and different user apps. 
Both Octave and Matlab ran on the same PC, with the same OS version and I had used matlab to run the same code on a slightly smaller data file. I did some work on my desktop, I changed the partition table a wee bit to future-proof it, so for "fun"... I thought I would start fresh with the OS.
Nope, same hardware and same OS. the only thing I changed was the partition table on the SSD where the OS is installed. 
Oh even better. Wait until you install matlab and find out for yourself and post the results with times
It's been a while since I last did an FFT, but a quick [calculation](https://www.google.no/search?q=1.5*180%2F3.14&amp;oq=1.5*180%2F3.14#q=65*3.1415%2F180) suggests that there may be a converting error somewhere (65 Hz ~ 1.13 rad/s). 
Post your code plz. You have to fix the x-axis by doing something like this: L = length(y); NFFT = 2^nextpow2(L); % Next power of 2 from length of y Y = fft(y,NFFT)/L; f = Fs/2*linspace(0,1,NFFT/2+1); % Plot single-sided amplitude spectrum. plot(f,2*abs(Y(1:NFFT/2+1)) where y is your signal. source: http://www.mathworks.nl/help/matlab/ref/fft.html
That's peculiar that the difference in performance is so great between the two. In general, I'll never use Matlab if I want code to run quickly and use resources sparingly. It's fast and easy for code prototyping but if I ever need to run efficient code, I'll use C. 
This question comes up fairly often in this subreddit: http://www.reddit.com/r/matlab/comments/1r5n8j/fft_help_finding_exact_amplitude/
Hmm, you are correct. Maybe i had that problem when i was using Matlab's own saveas command.
Has anyone tried periodogram for this?
I used this code as it goes...
Yes, but look at the normalization of the f variable.
You have to bite the bullet and do it by hand. Inverse Kinematics is black magic and once you learn to do it by hand it makes everything a lot easier.
:( ty for the response
Can't you just set sin and cos to new variables? Then solve for a1,a2 after that? cos(a1) = m sin(a1) = sqrt(1-m^2) cos(a2) = n
Umm,that's odd but clever,will try as I get home. Is it just for me or if I put in a system n equations in n-1 variables (of course one of equation is non independent from the others) I get an error saying that infinite solutions exist? 
You have one additional degree of freedom unaccounted for which your other variables depend on. Although it seems that should only happen if you have more variables than equations. Perhaps you have another equation dependent on the others.
It seems Matlab doesn't like it when you overdefine things. I haven't had to deal with solvers since my class a couple years back, so I'm at a loss what to tell you. Good luck!
No screenshots of it?
Please [see this post of mine](http://www.reddit.com/r/linux/comments/1tvyb2/phoronix_gnu_octave_38_has_a_gui_uses_opengl/ceckdnd).
Thanks for the response! It looks like I'll be learning some Objective-C. I didn't think it would be simple to implement, just a more simple user interface than most of the apps out there. I do have one question: if you have to convert all the Matlab code to Objective-C by hand, what is the benefit of starting with Matlab? is it just because it is easier to make sure your code is doing what it should?
Thanks! I'll check out these subs, and I guess see what I can start doing with Objective-C.
&gt;is it just because it is easier to make sure your code is doing what it should? * tools to see arrays: `plot`, `imshow`, etc * you see arrays as a list of numbers instead of their memory addresses (`float *`) * you have an interpreter. you can actively see what variables are what. * you don't have to compile -- the feedback loop is tighter * you aren't constrained to iOS limitations. * it runs fast -- not in a slow simulator * you write less lines. instead of `zeros(N,N)`, it's for(i=0; i&lt;N; i++){ for(j=0; j&lt;N; j++) x[N*i+j] = 0 } } * You can easily have and pass multidimensional arrays. Any one of these reasons is enough to switch over. You only write for the iPhone when you have a working Matlab script.
Hi there, Would you just be able to calculate some points from the normal form you have? Here's what I'm thinking: I have 2 lines, and have theta, and p for both. I want my x-axis limits to be from -5 to 5, so: %set up known values x1=[-5 5]; x2=x1; th1=-pi/4; th2=pi/3; p1=10; p2=6; %solve the normal form for the dependent variable y1=p1-x1*cos(th1)/sin(th1); y2=p2-x2*cos(th2)/sin(th2); %plot with the line function hold on line(x1,y1) line(x1,y2) %make the origin at the center pixel by setting xlim and ylim xlim(x1) ylim([-15 15]) %turn the grid on to see that the origin is centered grid on hold off 
Cool. That makes sense.
M needs to be of type double. imread() returns logical, uint8, or uint16 depending on the file type and bit depth.
Now it worked. Thanks :)
improfile is sampling along the linear path specified by x and y. To form the profile, improfile interpolates at N roughly evenly spaced points (neglecting the first and last point issue you brought up in your comment) along the line specified by X/Y. N must be an integer valued number, because there is no meaning to a fractional number of samples. In order to guarantee that the spacing between the samples along your line is 1 pixel, you would need the total path length specified by X/Y to be equal to the number of samples you specify in the call to improfile (N). hypot(diff(x),diff(y)) = N. So, this is only possible for carefully selected X/Y profile lines. Why do you want there to be a full pixel width of spacing between the samples along the profile? In general, finer spacing is going to produce smoother profiles.
If you have the image processing toolbox, I recommend taking a look at Steve Eddins' blog which discusses constrained shortest path problems in greyscale and binary images. The maze example will be of particular interest to you: http://blogs.mathworks.com/steve/2011/12/13/exploring-shortest-paths-part-5/ The Image Processing Toolbox is required to take advantage of the bwdistgeodesic and graydist functions discussed in the blog.
Have they had an intro programming class? Do they understand basic programming concepts? If so, that could make things much easier.... 
I understand your problem. In our 2nd year at uni we had to start learning Matlab for our engineering course. I did A level computing so I'd had programming experience in the past, but for the rest of my class, this was the first time any of them had to write code. Our lecturers sucked at explaining it, and just gave us a worksheet to copy the code on. I would recommend explaining just how stupid computers are, and that they have to include every logical instruction, no matter how trivial. Show them working scripts, how they work, and how it all fits together. Work it through line by line, explaining how loops work, why you need to declare your variables first, how you output an answer, how you suppress the lines etc. Show how the more common fuctions work. Show clearly how to use the help file, because they'll spend a lot of time here looking for specific functions. Don't get annoyed about trouble shooting (there will be a lot of it at first), and try to explain why the code isn't working, and how you would fix it. Hope this helps, let us know how you get on :)
I'd take a different approach. 2 hours isn't enough time to really teach anything useful at the same time it's too much time to try and keep a captive audience. I'd spend 30 minutes on "This is matlab. These are matlab resources" and then the other 90 minutes on cool shit done in Matlab and Simulink. JPL, NASA, Caterpillar, Toyota, Ford, everyone uses Simulink.
Yes, they have had a C++ class.
I had not mentioned that they are already familiar with basics of programming. I edited the post.
Hi! Author here. I wrote a small introduction about simulating a super simple mass-spring-damper system using it (http://rbaron.net/blog/2014/01/02/Simulating-dynamic-systems-in-javascript.html). This is only meant to be a fun weekends project, but I'm really interested in finding out what you guys think about it. Thanks!
In that case, I would show them how to use MATLAB in some applied context and demonstrate the usefulness of the canned functions/toolboxes, as well as graphical output. For simulink, I would build, compile, and run some sort of real-time process. When I have done this sort of thing for undergrads in biomedical engineering, I show them how to use the image processing toolbox for automated cell counting, and how to use simulink along with some basic instrumentation to wire someone into an EMG/muscle activity controlled pneumatic exoskeleton. That is a very field specific example, and whatever you do should be as well. Do you have a cool research application of simulink you could show them related to your own work? Does someone in your department? Maybe invite in a few different professors to discuss how they use simulink in their own research, or just give an overview of it yourself. It is not likely you are not going to get many people excited about programming by itself, but demonstrating its applications can be a good motivator. 
Your motivation makes sense. This is a classic case of when an operation fundamentally requires evaluation of image intensities at sub-pixel locations and you want to minimize interpolation artifacts to preserve the physical measurements in your data as closely as possible. By default, improfile is using Nearest Neighbor interpolation, so the good news is that new values aren't being introduced into your microscopy data through the interpolation. I don't think there is a "right" approach to this problem, I think it's a matter to taste. Bresenham is a thought, however it doesn't really seem very different than using improfile with the default nearest neighbor interpolation algorithm. Both will yield image evaluations at the nearest known sample value. Because you are using nearest neighbor interpolation, I don't think there is a good reason to enforce the unity spacing between samples along the path, but I might not fully have my head wrapped around the problem. Best of luck to you!
I have but haven't seen anything that can do what I want
There is this [function] (http://www.mathworks.com/matlabcentral/fileexchange/5379-geodetic-distance-on-wgs84-earth-ellipsoid) that seems to be working fine for some people. 
This function gives the distance between two coordinates. I would like to start with one point (latitude,longitude) and add a distance and an azimuth to get a second point (lat2, lon2)
Thanks!
This doesn't work with an ellipsoidal model of the earth as far as i can tell. I need to be accurate to around a cm over distances less than 1km.
So I was bored and I looked it up. The mapping toolbox should do what you want. You can use [this page](http://www.mathworks.com/help/map/directions-and-areas-on-the-sphere-and-spheroid.html) for azimuth and distance and then you can specify the ZGS84 ellipsoid by creating [this object](http://www.mathworks.com/help/map/ref/wgs84ellipsoid.html?searchHighlight=wgs84ellipsoid). You should look at [the "reckon" function](http://www.mathworks.com/help/map/ref/reckon.html?searchHighlight=reckon) for more info.
Take a look here: http://www.imc.tue.nl/. That's the training we followed as first year ME students at my university. We did it in 5 sessions of 2 hours each if I remember correctly. So you won't be able to cover all that in 2 hours, however we hadn't followed any programming courses before that.
I'm obviously unfamiliar with the application, but you have me intrigued. What could possibly require .001% accuracy? On top of that, handheld GPS measurements are not that accurate. Even differential GPS is +/- 10cm. Good luck in cracking this nut if that's truly the accuracy required.
You are welcome. The matlab documentation can be a bit hard to explore, especially for the more obscure toolboxes. What I found out is that the examples/general explanations are often worth reading even if they look like walls of text.
Im not so sure if fmincon is the best method for this. Try something like ssest (state space estimate) or tfest (transfer function estimate). If you are able to give more details I may be able to help more (what kind of data, structure of differential equation etc). EDIT: Or you can do something like explained here: http://www.mathworks.com/matlabcentral/answers/60726-estimate-differential-equation-parameters. This is closer to what you wanted to do (optimization problem), although i assume its a similar method to the underlying method of ssest and tfest.
&gt;They are already familiar with the basic programming concepts. But they are Mechanical Eng. students, so probably they have not done any serious programming other than their homework for the C++ course they have had. &gt;The problem is that they can easily pass the course without even opening Matlab after this 2 hour class, and that's what most of them will do. My intention is to encourage them to start using and exploring Matlab and Simulink, specially Simulink. Ok then, in which case, show them how easy it is to solve huge and complicated problems that would take them a long time to do otherwise. Show how it can find the determinant of a 8x8 matrix, Gaussian elimination method, Newton-Raghson method with 40 loops etc. That will get their attention and encourage them to pursue it, trust me. We Mech Eng students are lazy, we want to solve thing the easiest way possible!
See my edit, I assume that will help, since it is not a linear ode which means ssest is not applicable. Also your data is in the time domain I assume and you have only output data? So no input like torque/force and thus initial values generate the response? EDIT: So if you have this code: function err = odefit(exp_t,exp_y,p) [t,y] = ode45(@(t,y)odefun(t,y,p),exp_t,0) % i am using y0=0 you can choose whatever. err = sum((y-exp_y).^2); % compute error between experimental y and fitted y end p_estimate = fminsearch(@(p)odefit(exp_t,exp_y,p),p0); In your case p0 are the initial estimates of the parameters (I assume those values in your ode function are these), exp_t is the time data of the experiment, exp_y is the output. odefun=kaymodel in your case (remove the set values and put them as input (kaymodel(t,y,p) where p are the parameters). If you do this it should work (although 4 parameters may be difficult to estimate) . You can also give bounds for the values etc, see documentation of fminsearch
Nothing a bit of chain and product rule can't solve. 
I was assuming it was a second order *linear* equation. These can be rewritten in state space form or laplace form (transfer function), which are mainly used in control theory. Since my field is this, i knew these functions whereas I have only really used fmincon of the optimization toolbox for one optimization course I followed some time ago. However tfest and ssest are only applicable for linear differential equations, so you should ignore my first comment. 
Thanks for your help. I will give this a go when I get home. It's a non-linear limit cycle model. Note that really it is just an expanded damped mass-spring equation with nonlinear damping terms. This way, one gets an autonomous cycle in the phase plane. This is why there is no forcing function, that is, to maintain an autonomous eq. Though, forcings that are state-based are possible. 
try wolfram alpha for this sort of thing if you can
Very slick! I like it.
You are asking for the "forward" (vs. inverse) geodesic problem. I recommend [GeographicLib](http://geographiclib.sourceforge.net/html/index.html) by Charles Karney. It has Matlab wrappers; see geodesicdirect.m for the function you want. 
I have done this a few times - fitting reaction rate constants to match some chemical reaction data. I have always used lsqnonlin. First a general comment then I will explain the nuts and bolts. The success of your optimization relies on having a reasonable initial guess for the parameters. I would devise a way to graphically eyeball the closeness of your fit, then try a few guesses until you get something close, then try to optimize from there. It will also work best if you're only fitting one or two or three parameters. Optimization is a tricky thing, with local minima posing serious challenges. The nuts and bolts. Write a function that accepts as an argument a vector of your fitting parameters, and returns a list of residuals. The residuals will be something like (actual data) - (predictions). If you are fitting time data, you might have to choose a range of time increments and linearly interpolate the data and model results so that you can subtract them. This function that you write will contain your call to ode15 or whatever solver you are using. Because often your code will be split across a few .m files, and the syntax for lsqnonlin and ode15 have to be a certain way, you might have to define some global variables to pass information (say, some other constant parameters) back and forth. Then run lsqnonlin with this new function as the first argument. You will also need to pass lsqnonlin an initial guess as the second argument. Lsqnonlin works best in my experience when the parameters it's optimizing are all order 1, so you might consider scaling. I have also in the past tweaked DiffMinChange in the lsqnonlin options from optimset. 
When you say scaling, do you mean dimensional scaling? I've been reading about that and PI theorem recently. Full disclosure, I'm not an engineer/physicist. So my experience with that has been limited at best. Considering the equation I posted, do you have any insight on how I might go about it? I understand there is a difference between non dimensionalizing and scaling. If I'm saying this correctly, how would I go about scaling the equation so parameters are in terms of, say, cycles (stiffness/ angular velocity)?
First thought would be to solve in mupad using solve(cos(2*x)=0). This will give a solution set. And the period should be 2 times the spacing between the solutions
This of course requires that the function is periodic. And therefore it would be easier to do by hand. From cos(2*pi*t*f), cos(2*x) has a period of pi.
Don't all of the periodic functions satisfy f(x) = -c(d^2 f/dx^2 )? 
[Sounds like you're looking for a FFT. Good luck!](http://www.mathworks.com/help/matlab/ref/fft.html)
Try looking up comb filters too, they might help you automate the process.
I believe what ObiPioKenobi was trying to write was the equation for simple harmonic motion: M*x''+k*x=0. Dividing thru by mass (M), we get the angular frequency (omega=sqrt(k/m)). (Side-physics-note, 'k' is the spring stiffness because this is the equation for a mass connected to a spring. It is derived from Hooke's law.) Now that we have an equation for omega, we know that the inverse of frequency is the period. (Frequency in Hz is merely the angular frequency divided by (2*pi). ) The upshot of all of this is that the solution for the harmonic oscillator equation is x(t)=cos(omega*t+phi). Phi is just some arbitrary starting phase. For example, if omega 2*pi and t=0, if Phi was pi/2, we would actually have a sine wave. Ergo, the equation would be cos(2*pi*t+pi/2)=sin(2*pi*t). Now, 1/(omega (2 in your case) /2*pi) will give you the period in portions of a second.
It's part of the fuzzy logic area of matlab. Input is an input variable, MF is membership function and rule list is the fuzzy rules. 
Symbolic. 
Thanks for your answer. I am just working with symbolic equation, not with physical objects. What i am trying to do is to write code to extrapolate (following your example) the omega coefficient from a general (not necessarily sine or cosine) trigonometric symbolic function, in order to find the period of the function.
Is this homework or work related?
If the output doesn't have to read like PI (symbolically), you could try something like the following (it isn't finished and won't work with combinations that are found in periodic solutions to differential equations, e.g., Acos(omega*t)+Bsin(omega*t)) %%%%%%%%%%%%%%%% function [ period ] = perfind(arg,omega) %outputs period in terms of radians. if nargin&lt;2 omega=1; end if strcmp(arg,'sin') period= (2*pi)/omega; elseif strcmp(arg,'cos') period=(2*pi)/omega; elseif strcmp(arg,'tan') period=pi/omega; end end 
Your question seems pretty vague. If you're just trying to do a chunk of a circular arc (say, you have the range in degrees, from ang_start to ang_end), then it's as easy as: plot(cosd(ang_start:1:ang_end), sind(ang_start:1:ang_end)); as any point on the unit circle is (cos(theta), sin(theta)). Maybe this helps?
Could you post how you have your pw function programmed? My method is to make it a handle and characteristic functions for piecewise functions, and then just call plot and evaluate the function on the fly.
That toolbox isn't really what I'm looking for. I'm quite competent to program Matlab GUIs, but I want a tutorial I can give to someone else who knows a fair bit of Matlab at this point but has never done UI stuff before, so I don't have to hold his hand. &gt;If it's anything beyond displaying a figure or two and some buttons. do yourself a favor and write the gui in something else. How would that work exactly? What language would you use? Python/GTK? Now I need to teach someone a new language *and* the UI toolkit. Moreover, now I've got some other program, in another language, that has to communicate with my Matlab process. How do you propose to do that? IPC through sockets? Maybe create an adapter API in C and compile it through both MEX and Python's ctype? Now we've added a third language, two sets of language bindings, and a custom API that we need to maintain. Honestly, these "don't do it in Matlab" responses are the equivalent to going into a woodworking forum where someone asked how to cut a [dovetail lap joint](http://en.wikipedia.org/wiki/File:Woodworking-joint-lap.gif) and saying, "dude, just CNC it out of aluminum; it'll be so much easier." Well, maybe it would if we just cared about the part and not the context it needs to fit it into, but even that's not the point. You're adding noise without contributing to the discussion which was about *woodworking*.
Relax and take a breath. I've experimented with python sockets -&gt; matlab intereaction, but the way I'm building workflows now is XML / CSV files to transit data between the languages. It's also trivially easy to have matlab call external programs and get the output back from them. I've got matlab reading and writing to web services, python wxwidgets programs and various databases. In fact i'm to the point where matlab is hidden from my users because I launch my processing with --no-desktop --nojava in the background and get the output when it completes. I Also have a very complex GUI that is written in matlab and every time I have to touch it I die a little inside. Matlab does math great, but matlab does not do GUI's, databases, or XML great. I don't understand the fear of other languages I get from matlab programmers. It's just a tool, like a hammer. Use it for what it does well and use another tool for what it doesn't do well. 
It's not fear of other languages. I have Simulink communicating to a fairly complex C# program that runs a 3d simulated environment through sockets just fine. I also collect sensor data with a Python application and write binary files, that I later parse in Matlab to import for data analysis. However, write/reading files, XML or otherwise, doesn't help very much for any sort of real time application. What I don't understand is why one would add complexity unnecessarily. If I want a bunch of text boxes that update Matlab variables in a running simulation, why would I want to introduce a new language at that point? There's a big cost to doing so, so there better be a lot of value gained. In an extremely complex project maybe it's worth the trade off (can 6 Python UI programmers do the work of 10 Matlab UI programmers so as to justify hiring two more to maintain the interface?), but many times it won't be. Moreover, if I'm trying to train someone up from scratch (as often happens in academic research settings) adding a second language imposes a *huge* cost. I think your metaphor is off. Anonymous functions are a tool. For loops are a tool. Matlab vs. Python is a machine shop vs. a woodworking shop. Yes, some projects are better made in metal, but going out and buying a CNC metal lathe for a single complex joint is usually going to be overkill. &gt; I've experimented with python sockets -&gt; matlab intereaction, but the way I'm building workflows now is XML / CSV files to transit data between the languages. I've been pretty happy with the sockets interface at least through Simulink so, if you ever want any help feel free to ask. &gt; I Also have a very complex GUI that is written in matlab and every time I have to touch it I die a little inside. I hate to say it, but this suggests the GUI code wasn't organized particularly well. You're using the `UserData` field and outside functions rather than trying to keep the entire backend in your figure's corresponding `.m` file, right? &gt; Matlab does math great, but matlab does not do GUI's, databases, or XML great. Other than the lack of built in SQLite bindings, what about Matlab's database connectivity do you dislike? It seems pretty standard. I haven't found any language that handles XML great, but that's just me. Well, maybe PHP's SimpleXML, but all those DOM engines make me want to gauge my eyes out.
first off, I think its more in matlab's style to use the colon operator to reshape something into a column vector. In your case, you would do something like: test1=test1(:); This will collapse the array by columns. You can always make a random array to see precisely what the documentation means: test1=rand(5) test1(:) Don't put semicolons and then compare the numbers. From this it will be clear what collapsing by columns means. HTH. 
Thanks. But how can I find omega without having to input it by hand?
Somehow homework related.. I am trying to automate my analysis homework. I'm supposed to do them by hand, but I already perfectly know how to do it, and now it got boring. Plus, instead of getting bored, I'm constructively learning something useful.
 &gt;&gt; A = rand(2,2,2) A(:,:,1) = 0.6463 0.7547 0.7094 0.2760 A(:,:,2) = 0.6797 0.1626 0.6551 0.1190 &gt;&gt; B=reshape(A,8,1) B = 0.6463 0.7094 0.7547 0.2760 0.6797 0.6551 0.1626 0.1190 So, reshape works by grabbing the first column (all xlon at the first ylat and the first tmon), concatenating all xlon at the second ylat and the first tmon, etc.etc.etc up to all xlon at the last ylat and the first tmon. Then it concatenates all xlon at the first ylat of the second tmon, etc.etc. to all xlon values at the last ylat of the second tmon. This continues until all xlon values at the last ylat value of the last tmon have been added. So yeah, basically precisely as you've already said.
I wasn't implying you were afraid of other languages, but it's definitely a trend in the matlab world. This "learning new languages is hard so don't burn up time learning a new one so I'll just do it in matlab." a hand full of text boxes, etc, isn't a complex gui. that falls into the realm of "good enough" I absolutely agree in the "don't add complexity when not needed" That's why i said, other than simple GUI's. I can and have built a complex and attractive GUI in a day using python + wxwidgets that would have taken weeks (if possible at all) in Matlab. I started learning both matlab and python on the same day so it's not experience that is the difference. And yes I'm using UserData plus hundreds of outside functions. But between handicapped event handlers (only able to register 1 event handler per event) , GUIDE horribleness, lack of decent layout systems, and worst of all, the inability to scroll heavy widgets beyond the viewport. Matlab isn't just bad at complex GUI's it's flat out broken. No language's XML handling is great, that's why I'm moving to JSON, but python's is very tolerable. And yes matlab is a tool. Python is a tool, HTML is a tool. The point is recognizing that at a certain point learning a new tool can increase your productivity and effectiveness. 
Yes, on the surface of an ellipsoid (a flattened sphere), the Mapping Toolbox reckon function uses a translation of the NOAA/NGS FORWARD function. Meanwhile, the distance function uses a translation of the NOAA/NGS INVERSE function. It also computes azimuth, which can be obtained via an optional second output. The Vincenty method used in the NGS functions breaks down for nearly antipodal points. If you are working with such points, you should definitely check out GeographicLib. 
http://www.mathworks.com/help/symbolic/conversion.html
double(x1)
Thanks :)
&gt; I wasn't implying you were afraid of other languages, but it's definitely a trend in the matlab world. This "learning new languages is hard so don't burn up time learning a new one so I'll just do it in matlab." In fairness, Matlab programmers seem to get told to go use another language quite frequently in a way that others don't. I've never seen someone asking about regexps in Python be told, "go use Perl it handles regexps so much better." &gt; I can and have built a complex and attractive GUI in a day using python + wxwidgets that would have taken weeks (if possible at all) in Matlab. Maybe, and if I want to have 3D plots of some Matlab data imbedded in the GUI, maybe not. I think the bigger issue I have with responses like yours (and my frustration is directed at all of them, not just you personally) is the presumption that I have put no thought into what I asked for. I asked a good Matlab GUI tutorial not because I was starting a new GUI project and was wondering what language would be best, but because I maintain large codebase of mostly but not exclusively Matlab code that has, as one part of it, a few Matlab GUIs. I also, have a student without much programming experience prior to a few months ago who has been learning Matlab and I would like him to be able to modify the GUI code to tweak it for his experiments. So, when someone comes back and says, "do yourself a favor and write the gui in something else," with no context about the project, it not only doesn't help me, but also really suggests that you think you know more about my project and its needs than I do.
Even using double(x1) it's still giving the long string of text, any ideas?
Why would you not want to short circuit out of interest...
Thanks, I'll look into. 
Also, read the example in the docs: A = []; B = 1; if (A | B) disp('nothing to display') end if (B | A) disp('wtf?') end 
On top of this really good advice, you can also use setappdata and getappdata using the handles from form1.
Can you paste the code you're running in code format. (4 leading spaces) like this you see I'm finding it a bit tricky to see what you're getting at without the actual code. 
Amazing,thanks!
You can install [RES](http://redditenhancementsuite.com/) and then click on source under the post so you can copy paste the code into matlab. Just a tip, because many people here dont format the code.
Actually it was (for me) just to get a better understanding :)
Great reply jordigh
The difference is that `&amp;` and `|` are element-wise operators, so if you're giving them single elements, they obviously should have the same performance as `&amp;&amp;` and `|` whether short-circuiting is used or not.
Thanks. It seems to cover everything they need. It is really great for beginners...
 function [r,s] = my_input(varargin); r = []; s = input(deal(varargin)); if exist(s,'var'); r = eval(s); end
Thanks. How does exec differ from eval?
`exec` does something different entirely with a database connection. I meant to write `eval`. Fixed now.
Were the recommendations on the sidebar insufficient? What did you dislike about them?
I didn't know there was any. I'm on my phone so I can't see the sidebar. I appreciate your kindness rather than, 'check the sidebar dickhole!' When on my computer I'll check, thanks man. 
http://www.mathworks.com/matlabcentral/fileexchange/19322-saveppt2
I usually just output text files of my data (and sometimes image files if I'm doing image analysis) and then make my actual figures in R using ggplot2.
Well I'm in academia not industry, so my reporting is probably much slower than yours. Also, I prefer to do stats in R. I run simulations and do image analysis in Matlab, then move the results to R where I run my stats scripts and make pretty figures. But the real answer is probably simply that I started using R much earlier than Matlab and am still faster there for producing pretty graphs.
Are you looking for something like Crystal Reports for Matlab? An "automated" report isn't really a report, it's just the numbers spit out of your analysis, which you are probably running on a regular interval anyway, formatted to look like a report. Most of us are scientists or mathematicians so we may have a different perspective. Matlab *can* be used as a super-SAS, but I don't think that's how most people in this sub use it. For us, it's the answer that matters and when we write it up, we're going to add lots of text the explains significance, importance, and context that can't be automated. If you really must spit out ten pages of boiler plate to show what could fit into a graph and a couple sentences, you might want to look into LaTeX. You write your Matlab code to write a .tex file and then use LaTeX to format the PDF.
Matlab has a quite nice "Publish" feature. Commented sections get turned into text; with support for headlines, bullet lists etc.. Also, all figures are shown in line; and you can decide whether or not to include the actual code. Output formats are pdf doc ppt or even tex. You can find it in the "Publish" tab of the editor.
Not entirely. I'm working in finance and use Matlab for out back-testing, modelling etc. When we've finalised a piece of analysis we tend to want to write it up in the same format, branding, disclaimers etc. We are also often asked to repeat the work across various subsets or super-sets of the initial data. All I'm after is a nice way to output this stuff to a templated report. Even if the resultant data is just a chart and table I'd like to be able to present this in a nice clean, consistent format without putting it together by hand.
Ok thanks again.
The only things I've ever needed directly from MATLAB are plots and code, which are both pretty easy to get looking nice by themselves in a LaTeX report or something. But I've never had the need to automate the process of getting a complete report. There is something called the [MATLAB Report Generator](http://www.mathworks.com/products/ML_reportgenerator/) that can make nice looking reports from your data/plots and lets you use custom stylesheets and whatnot, but it takes some configuring. I've never used it myself so I'm not sure if it has all the functionality you're looking for.
As a phone redditor, I also just now learned that a side bar exists. 
Another question, I'm trying to plot the regression of both data. I'm using polyfit() and polyval() to get the line. I've still got this going on: hold on scatter(dataset1(anom1only),dataset2(anom1only),'.g') scatter(dataset1(anom2only),dataset2(anom2only),'.y') scatter(dataset1(anomboth),dataset2(anomboth),'.r') scatter(dataset1(gooddata),dataset2(gooddata),'.b') plot([min(dataset1) max(dataset1)],linefitALL,'--k') And I can see the 4 colored dots and ----- linear fit. Now, the data is normally viewed on a log-log scale, but when I try and do the following my plot only results in the 4 scatters and does not show the line. Note these two lines are after the 5 above: set(gca, 'XScale', 'log') set(gca, 'YScale', 'log') Any Idea why the line isnt showing? I also tried to do the set() commands after the 4 scatter, then call the linear fit with loglog() and it wasn't plotting..
Yeah, I'd look into latex or if you don't mind shelling out some cash the Matlab Report Generator /u/TheIsletOfLangerhans mentions.
I'm not sure exactly what your problem is, but I'll share my experience. I've worked with logistic population growth models (dynamic models) while studying fishery economics. There, I used the Hamiltonian to establish a system of ODEs. I wrote a stand-alone file, with x as a vector of variables, that modeled the ODEs. function [out1, out2] = fishery(x,params) out1=x(1)^2 + (x(1).*x(2)); out2=etc Then, I used meshgrid and quiver to generate a phase plane. Always nice to have a graphic. Next, I used a solver, like odesolve, to simulate paths with forward shooting or backward shooting, depending on what I knew. If you give me more details I might be able to be more helpful. 
Hey,cheers for replying!I want to script a code for logistical population growth model for bacterial growth in a culture across 127200seconds based on the equation dP/dt= λP(1-P/K) Where P=Population growing logistically with λ=Growth Rate,K=Carrying Capacity from an initial population density of P0 I want to display this as a graph through Matlab Worked out the ODE to be **r*P*(1-P/K)** but clueless about what to do from here and the only [link](http://www.stat.rice.edu/~mathbio/stat300/computations_for_growth_models.ppt) that has provided me with a graph so far is giving me 2 curves.
 lambda = 1; K = 1; dP = @(t, p) lambda*p*(1-p/K); % Diff eq P0 = 10; % Initial conditions TSPAN = [0 127200]; % Timespan for calc. 0 to 127200 [t, y] = ode45(dP, [0 127200], P0); plot(t, y); This might work for you. Remember to set the right values for K and lambda
Are you trying to display this curve in (P,Pdot) space or (time,P) space?
This is gonna sound rude so go ahead and down vote me but it seems like you should start by learning matlab. 
haha nah thats a fair comment.We've been taught basic (and I mean REALLY basic) Matlab and I've now spent a week trying to make progress through googling steps.Ive managed to learn and do around 70% of my work but couldn't get that last bit to work no matter what I found online.
Time,P
You can do it a bit more elegantly with logical indexing, which lets you avoid the find() function in many cases. Also note that your lines calculating anomIDXdata1 and anomIDXdata2 aren't quite, right, I think... you're only finding anomalous points that are greater than the threshold on the positive side, but not less than the threshold on the negative side. Also, even if you fix that, the code would only work with data that has a mean of 0. Try something like: stdev_thresh = 1; %or however many stdevs stdev1 = nanstd(dataset1); stdev2 = nanstd(dataset2); n_stds1 = (dataset1 - nanmean(dataset1)) / stdev1; n_stds2 = (dataset2 - nanmean(dataset2)) / stdev2; anom_flag1 = abs(n_stds1) &gt; (stdev_thresh * stdev1); anom_flag2 = abs(n_stds2) &gt; (stdev_thresh * stdev2); hold on; scatter(dataset1( anom_flag1 &amp; ~anom_flag2), dataset2( anom_flag1 &amp; ~anom_flag2), '.m'); scatter(dataset1( anom_flag2 &amp; ~anom_flag1), dataset2( anom_flag2 &amp; ~anom_flag1), '.y'); scatter(dataset1( anom_flag1 &amp; anom_flag2), dataset2( anom_flag1 &amp; anom_flag2), '.r'); scatter(dataset1(~anom_flag1 &amp; ~anom_flag2), dataset2(~anom_flag1 &amp; ~anom_flag2), '.b'); Note also that it might be more straightforward to use regular std and mean unless your datasets actually contain NaN's. Haven't tested this code, so could have minor bugs/typos... but this should be basically right. Edit: Found one issue, fixed it already.
On my phone at the top there's a "information button" which is an (i) looking thing. This brings up the sidebar and rules for subreddits I believe. Let me know if that works!
Perfect! Thanks! I was banging my head on getting this to plot correctly for the better part of yesterday afternoon. For the life of me I couldn't get the stdev condition right so that it would exclude those on the lower end. Thanks for the help!
Hah! Look at that! I usually ignore that sort of thing because I assume it's going to give me some licence nonsense about the app. Thanks for the tip! 
not that this is an 'R' forum but i think the help for the 'party' package, which does random forest in 'R' is pretty good and might give you some background
I concur. You need to sort of convert your function to polar coordinates, making this moreso a math problem than a Matlab problem. Choose your original x to be the phase phi (xmin = phimin = 0 rad and xmax = phimax = 2pi rad). Your original y becomes the radius r. You could choose the unit circle to be your new x-axis, meaning your original negative values will be between 0 and 1, and your original positive values will be between 1 and 2 for example.
I dont think you have to use camdolly. You can just calculate the center of the two masses and then substract that from their locations at each point. See below, I used made up data for x1,y1 etc: l=0.5; dt=0.01; t = 1:dt:200000*dt; x1 = 2*sin(t+0.1); %get x and y values for each point mass y1 = 2*cos(2*t+10); x2 = 2*sin(3*t+3); y2 = 2*sin(2.5*t+4); center_x = (x2+x1)/2; % get center of mass of the two masses. Assuming same mass. center_y = (y2+y1)/2; figure % axis([-l*1,l*100,-l*1,l*100]); axis([-l*10,l*10,-l*10,l*10]); hold on; %define figure size j = (1/8:1/4:1)*2*pi; %draw Trolly xd1 = 1*cos(j); yd1 = 1*sin(j); xd2=1*l+l*1.4*cos(j); yd2=1.2*sin(j); hd1=fill(xd1,yd1,'r'); %draw circle for each mass in model hd2=fill(xd2,yd2,'y'); for i=1:1/(dt*100):200000 %loop to animate model's movement set(hd1,'XData',xd1+x1(i)-center_x(i),'YData', yd1+y1(i)-center_y(i)); set(hd2,'XData',xd2+x2(i)-center_x(i),'YData', yd2+y2(i)-center_y(i)); xlabel(['Time = ',num2str(i*dt)], 'FontSize',10) %print time for each time-step at bottom of figure pause(0.01); end If they have not the same mass you can use this for the center calculation: m1 = 1; m2 = 2; center_x = (m2*x2+m1*x1)/(m1+m2); % get center of mass of the two masses. center_y = (m2*y2+m1*y1)/(m1+m2); 
The problem is that matlab doesnt know what your variables are. Therefore you should put them in a vector x. In this case x(1) = r and x(2)=tk. Easiest way to do this is to make a seperate function file (m-file) which contains the objective function (function you want to minimize). So your main file should be where you call the fminsearch function. For example: options = optimset('Display','iter','TolX',1e-7,'TolFun',1e-7 ); [x,fval]=fminsearch(@myfun,[0.1,2100],options) The options line is not needed but it's nice to see the iterations. You can also set the tolerance for the x values and function value. So if the difference between the iterations, matlab stops if it meets the tolerance values. The other file which should be placed in the same folder and should have the name myfun (same name as on the right side of the first line of it): function f = myfun(x) t=[1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,... 1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,... 2004,2005,2006,2007,2008,2009,2010] ; p=[12414719,12725252,13078930,13470393,13919514,14391743,... 14910724,15520093,16176418,16832384,17455758,18082137,... 18729453,19424376,20127590,20689516,21248718,21861011,... 22502140,23227669,23955822,24690002,25469579,26321962,... 27233661,28199390,29206503,30262610,31367972,32369558,33398682] ; H=1./(1+exp(-x(1)*(t-x(2)))); t=t'; p=p'; H=H'; e=(p'*p)-((H'*p)^2/(H'*H)); f = e; Note, I changed r and tk in the H definition to x(1) and x(2). 
For question 11, it's not even inputted correctly. The first equation = 1, the second = 2, thus the left hand sides are not equal to each other. Now, straight from the matlab help file on solve: syms x y S = solve(x + y == 1, x - 11*y == 5) for all of this, you can use the matlab help files or google something like: matlab solve. Good luck.
Hello, hope this helps. I do have a few questions and comments! * Are you trying to create the spots at odd and even coordinate positions with mod? * It also looks like you're trying to force j to be at a specific position while simultaneously marching through j on a for loop.. is this intentional? * Do you have a reason for setting daspect and axis every time you plot? You should be able to remove that from your loop. * Also, remove the hardcoded value of the axis function from 50, 50 to width and height. I'd think you could get away with a much simpler bit of code by eliminating these problems. You could just make "i" and "j" what you callout in your 'Position' specifier and it'd get rid of a lot of code: clc; clear all; colordef black w=0.8, h=0.8; %% size of staggered grid height = 99; width = 99; hold on; for i =0:height for j= 0:width rectangle('Position',[j,i,w,h],... 'Curvature',[1,1],... 'LineWidth',2,'LineStyle','-',... 'FaceColor','w') end end daspect([1,1,1]) axis([0,width,0,height]) if you're trying to make them at odd /even positions, make the stepsize be 0:2:width or 1:2:width, etc. Instead. For the text. There's probably an easier solution but off the top of my head I'd think you could make a crappy picture in paint that is 99 x 99 pixels, black and white, and has your text on it in the right position. Then save that as a jpeg. Import that image, and it will read in as an 2d array of 1s and 0s, which specify both location and color of the pixels. Use that as your reference to run the loop again, but only plot a dot if the pixel is white. That should give you a dot-matrix looking thing of your text. Does that help at all? 
Np, glad to hear its what u needed.
 datenum
http://link.springer.com/article/10.1007/s00158-006-0004-3 this article might be related. not sure though as i don't remember anymore (and don't have access)
what is the 'ddd' ?
If you have the toolbox: http://www.mathworks.se/help/pde/index.html Otherwise you might have to implement it yourself
Err, so what values are in your array? Is it something like this? But with 420 columns? 1 0 0 1 0 2 0 1 0 0 3 0 0 0 1 4 0 0 0 1 
What if there are multiple maxima? I need to eventually find the averages of all local maxima, etc. I suppose I could find a variation using max() with a loop to output an array?
Well, I mean, it depends what exactly you want to do. For example, use A = your_array; C = max(A(:,1:420),[],1) To get the maximums for each column, If you want to find out how many times each maximum occurred you can do for i = 2:numel(A(1,:)) B(i) = sum(A(:,i) == C(i)) end You could use arrayfun to get rid of the loop, but I'm not sure it'll make any difference on a small matrix like this one 
So this is flow-cytometry data or imaging? I don't understand how your data are formatted. Do the 420 datapoint vectors overlap in time? Are you just looking for the max value in each row?
You talk about initial conditions for when x=0, might it be better to call this t? I'm not the best at the general PDE solution process, but it would seem that *a(du/dy)+b[ (d²u/dy²) + (d²u/dz²) ]* is an [elliptic PDE] (http://en.wikipedia.org/wiki/Elliptic_partial_differential_equation). The simplest way I would approach this is to use a [Finite Difference Method (FDM)] (http://en.wikipedia.org/wiki/Finite_difference_method) to solve the elliptic portion. This then leaves you with just an ODE dependent on x (or as I would call it 't') only which should then be straight-forward to solve using a [method of lines] (http://en.wikipedia.org/wiki/Method_of_lines) approach.
I found [this file exchange code](http://www.mathworks.com/matlabcentral/fileexchange/12275-extrema-m-extrema2-m) to be very useful when I was doing something similar a while back.
If it were me, I would create 2 empty cell arrays, one for maximal values, one for locations. Then I would use a for loop to cycle through each row, use the findpeaks() command to locate maxima and their indexes, and store each rows respective arry in the cells corresponding to its row number. Something like this: function[Peaks,Locations,Peaks_count] = count_peaks(data_set) [N,M] = size(data_set); Peaks = cell(N,1); Locations = cell(N,1); Peaks_count = zeros(N,1); for n = 1:N; [peak_array,location_array] = findpeaks(data_set(n,:)); Peaks{n,1} = peak_array; Locations{n,1} = location_array; Peaks_count(n,1) = length(peak_array); end That code takes a data set as input, and returns two cell arrays, Peaks and Locations, with each cell containing either the local maxima values or locations of maxima respectively. It also returns an array with the number of maxima from each row in the variable Peaks_count. The nice thing about using cell arrays is that each cell can hold an array of variable size, so if you have more peaks in some columns than others, it won't kick back any sort of error. Hope that helps!
Why would the domain need to be rectangular for FDM? I mean sure if it's messy geometry you might need to refine the hell out of it, but I'm assuming the OP's needs aren't too great. For someone that has never solved a PDE numerically before FDM is very straightforward to understand compared to FEM/FVM which is why I recommended it. I would agree though that moire info about the orgin of the problem would provide useful context.
Also, why would you call it parabolic? The discriminant is &lt; 0.
Symbolic toolbox? Type: Ver Help To see if you have it.
I typed it here's what I got: &gt;&gt; ver help ------------------------------------------------------------------------------------- MATLAB Version 7.6.0.324 (R2008a) MATLAB License Number: 16**** Operating System: Microsoft Windows Vista Version 6.1 (Build 7601: Service Pack 1) Java VM Version: Java 1.6.0 with Sun Microsystems Inc. Java HotSpot(TM) 64-Bit Server VM mixed mode ------------------------------------------------------------------------------------- Warning: No properly formatted Contents.m file was found for 'help'. &gt; In ver&gt;disp_single_toolbox at 424 In ver at 81 &gt;&gt; What's the verdict? 
Cool! I got the toolboxes, unfortunately the "Symbolic toolbox" is not one of them :( Can you tell me more about it? Does it come with other versions of matlab? If I got version 2013 would I get it? or do I have to install it separately? 
It looks like your toolboxes might be messed up. You should see a listing of toolboxes there where the warning is. Try help and see if there are toolboxes there. You are looking for the symbolic toolbox.
Sorry, I should have googled: http://www.mathworks.com/matlabcentral/newsreader/view_thread/60193 None of the solutions are particularly elegant, though. 
Oh hi, virga!
Hi Mimshot! Your flair reminds me that I should update my flair. I've been solving f(x)=0 for quite some time now..
Done. Yeah, Poisson log likelihoods are the core of my existence.
&gt; "People usually do the work in Maple, and I mark it in Maple." What does she want it in. As in what does she want to see. That may go a long way in determining what to tell you to do. &gt; 'mathematical program of our choice'. Is this in writing anywhere? As does the project say "in the application of your choice"? Because if so your choice is matlab.
I also thought he was talking about a computer application when I read "mathematical program" the first time. After rereading I think mathematical program refers to a math problem in this case and not a computer program. EDIT: Well guess I'm wrong but I dont understand OP's conclusion that he should do it in Maple then.
The submission text says "your file should be readable by the software you have used to complete the work, therefore should not be a .pdf file." I think she wants to just execute the worksheet in maple so she can see if the code works or has been edited. A .mat file won't show my working, just the variables. I'm biting the bullet and redoing it in maple, she should have just specified why she wanted it in maple in the first place. 
&gt; I'm biting the bullet and redoing it in maple, she should have just specified why she wanted it in maple in the first place. Why? &gt; your file should be readable by the software you have used to complete the work, She wants your .m file. &gt; . A .mat file won't show my working, just the variables. How did you conclude to save a .mat file anyway?
Okay I guess it can be done in matlab, so I need to learn how to write .m files? 
There has to be something I'm missing. You managed to do a 4 month project in 3 days. You 'learned the basics of matlab' but don't know what an .m file is? 
No its me, seems I've just scratched at the surface of matlab. Looks like I've got to crack on! Thanks for your help! 
http://www.mathworks.com/help/matlab/ref/colormap.html You can manually specify the colormap, either from the preset ones or by making one completely customized. When providing a built-in colormap you can also specify the number of levels it should have. IE- colormap(jet(10)) will give you the same colormap as in your figure, but with only 10 possible levels. Technically what you have is a discrete map, it just has too many levels, but that's getting a bit pedantic. Play around with the above snippet and see how many levels gives the look you are wanting.
Thankyou very much this is exactly what I needed!
This isn't a Matlab question, this is a life question. Send her an email or catch up with her in class.
Hi! I know, shameless plug, but you may be interested in my Matlab blog's ODE series: http://matlabgeeks.com/tips-tutorials/modeling-with-odes-in-matlab-part-1/
Why not just make a copy of the function you want to run with a different/unique name in the same directory you are calling feval from? Its not particularly efficient, but it works...
This is already written. [Stack Overflow post](http://stackoverflow.com/questions/9028701/gaussian-elimination-in-matlab)
Hiya,this is much better than the lecture we had on ODEs!Recommended it to my coursemates! =)
Yes I did. Great. That's what I wanted to see. Thanks for the help. There wasn't much online about this. Any other neat Matlab tricks you know for data analysis? 
 dY=2*T - (T*Y.^2)/2 should be: dY=2*T - (T.*Y.^2)/2 Else T*(Y.\^2) will be a matrix multiplication. 
Glad you like it. Let me know if you have any questions.
moar info What's the code that you're running, how are you running it? Are you doing a script file or a function file? A function file creates a new scope but a script file doesn't.
http://imgur.com/a/2WZtW The imgur link shows what I am putting in, executing and the error
&gt; run my function file Sounds like a variable scope problem. Functions don't have access to the variable in your workspace unless you either a) make them global or b) pass them as arguments to your function. 
Thanks for the help, making them global didn't help. How does one pass the argument to the function?
Matlab uses a different workspace for function files. So the function file doesnt recognize the variables. There are two solutions that i can think off now. 1 Declare these variables global. You got to do that in both files. just put global variablename at the top of your files. 2 Or you can save the variables in a mat file and load them in your function file.
Thanks for replying, I tried declaring them global, to no avail. http://imgur.com/a/2WZtW I just inserted what was in the list of variables file into the funtion file. I think the reason it's not working now is that I'm using fsolve to solve the function, so the function itself is not actually running and therefore not actually calculating those variables, if that makes any sense?
You are telling MATLAB the return value should be stored in F, but you never actually store anything in F.
You never define F in your function file. The last lines are just statements, not a definition. You'll want somethine like F(1) = ... F(2) = ... F(3) = ...
In the function file at the end put F= before [. Also remove the ; before the last ]. so ;]; should become ];. There may be more errors, try this and tell us.
IT WORKS! Thank you so much, the fsolve function isnt giving me the answer I wanted, but I assume that's my fault. THANK YOU 
Your problem is you are telling fsolve() to use your function to do something. But your function is not returning anything. So fsolve() cannot do anything.
I strongly recommend you get something like [this](http://sine.ni.com/nips/cds/view/p/lang/en/nid/201986) for digital io.
The cheapest solution would probably be an arduino to send a serial command up to MATLAB.
That's a possibility. Do you have any additional info or a site you could recommend to help. Sorry, I can write code but know little about electronic devices, signals, etc. This project has been a real learning experience.
As fast as I can within reason. On detection it will be running a line of code that sends a serial command over USB to a servo controller to move some motors. So I'd like the delay between flipping the switch and the motors moving to be as small as possible, or at least measurable.
"as fast as I can within reason" is not a spec. &lt;10ms is a spec.
Then yes, on the order of 10ms is what I'm after. I don't need microsecond precision, but 1 s is too slow. 
I use [one of these](http://www.dspace.com/en/pub/home/products/hw/modular_hardware_introduction/modular_panels.cfm) for interfacing i/o with simulink and matlab. It is absolutely fantastic, but it might be overkill for what you're looking for depending on budget. Getting a panel for it would run you a couple hundred, and the controller card is another couple hundred. But if you can do something in matlab or simulink, you can turn it into a physical system with this thing, it's awesome.
The problem doesn't appear to be the actual line of code, but the attempt at running this model with undefined parameters at this stage of the code. Try this: 1) Set this line as a debug point so it stops before it attempts the sim command 2) Open up the model and hit the run button. I suspect you'll see that first error. Open up configuration parameters in the model and notice what it says for start time. I'm guessing drcAct or that evalin call. Change the start time to something that works. What's the evalin line supposed to be doing? Wouldn't just drcAct work on its own? PS: I put this line in a default models start time &gt;evalin('base',[drcAct,'(1,1)']) and got this error &gt;Error evaluating expression 'evalin('base',[drcAct,'(1,1)'])' for 'StartTime' specified in the Configuration Parameters dialog for block diagram 'vdp': Undefined function or variable 'drcAct'. 
&gt;I suspect you'll see that first error. Open up configuration parameters in the model and notice what it says for start time. I'm guessing drcAct or that evalin call. Yes, the eval call is in the start time field. I believe that line is supposed to find the start time for the simulation (well, duh), as this line (and a couple of similar ones) precedes the SIM command: data(:,1)=simResults.outVehVel{iii,1}(simResults.outVehDis{iii,2}&lt;plotEnd); I.e. drcAct is defined as 'data' in the initiation script and that is later used to take the correct start time from the script that calls the simulation. Seems to work perfectly fine until I try to use that script as a function. edit: Maybe a stupid idea but might it be that since the function hat its own workspace and the eval alsways goes looking in base, it simply doesn't see the perfectly well defined data(1,1) it's looking for? Thing is, I'm already calling the function in the base workspace, in fact that's what I tried first: simResults = evalin('base', calcEnergyConsumption(simResults, plotEnd)); edit: So yeah, removing the eval in the start time field and replacing it with data(1,1) solved it partly. Now I'm getting this: Error using calcEnergyConsumption (line 20) Error in 'EV_121218_v15/Driving Cycle': Initialization commands cannot be evaluated. Error in ParVar_v1 (line 150) simResults = evalin('base', calcEnergyConsumption(simResults, plotEnd)); Caused by: Error using calcEnergyConsumption (line 20) Undefined function or variable 'drcAct'.
Depends on the size of the convolution kernel (for any dimension). For large kernels multiplying in the frequency domain is usually faster. For a signal with N samples and a kernel with K samples, convolution by multiplying in the frequency domain (using the FFT) is O(N log N), while direct convolution is O(N K). Thus which approach is faster depends on wheter 'K' is larger or smaller than 'log N'.
It looks like it still can't find drcAct in the calcEnergyConsumption function. The problem is your evaluating calcEnergyConsumption in the base workspace and drcAct is only present in your function workspace. I would avoid using all these evalin calls. You're putting yourself into this nasty mess of workspaces. If you need access to data it should be a function output and anything the function needs inside is a function input.
FYI: I found a method that seems like it might work: clear all; clc I = imread('Outline.JPG'); [H, W, C] = size(I); data = rand(H, W, C); imshow(data); hold on; h=imshow(I); hold off; alpha = rgb2gray(I)&lt;32; % some of the lines aren't solid black, but slightly gray set(h, 'AlphaData', alpha);
Neural networks are typically represented as vectors and matrices and some other rudimentary linear algebra. If you're familiar with matrix and vector notation/operations then it shouldn't be too difficult. I learned the basics of neural networks from Trappenberg's Computational Neuroscience. That entire book comes with a lot of Matlab code where models, etc. are implemented.
I didn't look all the way through the matlab answers thread, but I generally just: cd /path/ Before defining the function handle, then dc back to the previous pwd. Not elegant, but it works.
Nifty. It's one of those things you didn't know you wanted.
[Here](http://matlabgeeks.com/tips-tutorials/neural-networks-a-multilayer-perceptron-in-matlab/) is a link that has nice explanation of a pretty standard neural network architecture. It also includes a nice, easy to understand, sample of code.
Hello! I recently got into it myself. I took Hintons neural network class on coursera and used the Internet to help myself implement nets in matlab. I had a specific problem as motivation, so I think that bolstered my opinion on what I got out of the process. However, I get the impression that coding and training these nets in matlab is the training wheel stage, particularly for large nets. I will say it was a fun and enlightening experience. Hope you enjoy it!
Type in 'nnstart' and then go on from there. There are many examples and demos and even example data. Once you have designed a neural net with the GUI you can let matlab generate a script of that net. Experimenting with that script will help you understand it. Nevertheless you should get some theory first. There are plenty of books and also lectures on youtube. Try [this!](http://www.youtube.com/results?search_query=machine%20learning%20caltech&amp;sm=3) for example.
There are a few options, the easiest one is to probably use [dlmwrite](http://www.mathworks.com/help/matlab/ref/dlmwrite.html). Something like this: %Processed data stored in an array called data %Store every 10th data point in dataFile.dat dlmwrite('C:/&lt;folder path&gt;/dataFile.dat',data(1:10:end)); If you need something more sophisticated you can use the fopen,fread,fwrite, etc. functions.
thanks for the quick response, this seems to be exactly what I am looking for
I guess you're looking for the modulo operator. if mod(x,2) == 0 disp(x/2) end Apologies if the syntax isn't exactly correct, but mod(x,2) is what you'll need. EDIT: end instead of endif.. 
You should be able to do that fairly easily. I don't know if this is the quickest way (there are a lot of functions in MATLAB) but assuming x starts out as an integer: if mod(x,2) == 0 %This indicates that there is no remainder disp(x/2) end
Thank You, it worked
Thank You
Structure manipulation functions. Check the help for more details. You want to use *setfield*. * setfield * getfield * rmfield * isfield * fieldnames * orderfields
Also check the `decimate` function.
Looking at this, I could feel myself asking "why, oh dear goodness, why". I suppose if you have a bunch of imagery, the Matlab image functionality might be alluring.
You are using your entire matrix's conditional results to perform a single action. that is why you are getting a single result. You need to read up on logical indexing. Just to help you out, here is how to do what you are wanting: a = 3; b = 1; c = [1 2 3 4 5]; v = zeros(size(c)); v(c&gt;b &amp; c&lt;a) = 1; 
You need regular expression matching. Here's [their example](http://www.mathworks.com/help/matlab/ref/regexpi.html): str = 'Here is a date: 01-Apr-2020'; expression = '(\d+)-(\w+)-(\d+)'; mydate = regexp(str,expression,'tokens'); mydate{:} Which outputs: ans = '01' 'April' '2020' So, your're wanting to do that with expression being something like: expression = '\(LINE \[(\d+),(\d+)\] \[(\d+),(\d+)\]\)' Then your 'mydate' variable would contain all the numbers from the machine output, which you could then feed to a plot statement. 
Ohhh, I get it! Thank you so much! Will try this!
Yep! It is a pretty handy behavior.
You're doing it wrong. If you really want to solve a system numerically, you don't use `syms` or otherwise attempt to solve a system analytically. The equation you want to solve uses an infinite series. Does this series converge? I assume yes - and since it does, you'll have to truncate the series at an appropriate point (`n==1e3`? `n==1e6`?). Use [`fzero`](http://www.mathworks.com/help/matlab/ref/fzero.html) to solve the system (or `fsolve` if you've got the Optimization Toolbox). Just subtract `Mt/minf` from both sides to have an equation compliant with what `fzero` expects. You will probably need to write the function in a separate M-file yourself to do that summation. 
What format do you want your data in? Is a simple (huge) column vector good, do you need to have the row and column setup like the txt file, etc? As always, the good ol' Matlab doc is a good place to look too.
Yep, this is the right answer. Regex was the first thing to come to mind, but sscanf is the way to go 
This is not a first hand account, but I have a friend who works at Mathworks Australia. In a previous life he was a civil engineer and obviously used Matlab in his day to day work. He worked at Mathworks for 2 years as their Director of Quantitative Innovation, while studying for his PhD in Finance. Last I heard he left to go back to civil engineering, but I heard only positive things about his work there. I think you should give it a shot and see how you like it in a few years.
Why don't you make an excel file for it, and then import the excel file into Matlab??
They advertise to my uni a fair bit, and claim to accept non-CS, non-maths grads.
My old lab had a technician who after working for a few years with us decided to go work for Mathworks. He had been working with some of their customer support pretty closely so when he applied through the normal web site he also asked them to pass his name along. He was a BME major but with a fair bit of programming experience. There's a lot of Mathworks jobs that require programming where the title isn't "developer", so you don't limit your search too early. 
does dlmread() work on it?
They hire a lot of ME and EE students here. MS seems to be a bare minimum.
I believe it's gonna need to be kept as is, with the columns and rows. Once analyzed, it needs to be outputted like this http://imgur.com/AdHaIb4 Each column is a different set of data. 