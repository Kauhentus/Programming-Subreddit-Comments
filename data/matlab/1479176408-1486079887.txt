So don't use symsum? Just compute the sum numerically. The regular sum() or trapz functions work just fine. 
Are you trying to find the coefficients a, n and lt? Also, I'm guessing the n under Equations is different from n for the summations, which could be a problem. I'd recommend changing it to i for summations. 
Depends on what your image actually looks like, but have you tried thresholding it? newImage = im2bw(oldImage) Should do the trick. In general though, this is a **hard** problem to generalise! OCR on handwriting is not great either. 
This is a very tough problem, one which is normally solved by machine learning. Is this something you're doing for fun or for a class? If it's for a class, what type of class? Knowing what sort of class you're taking could help us give appropriate advice. 
Since we do not have your model to reference, I can only provide some thoughts. If you have resolved the original error, then this is not really a question about a model error, but simply a question of how to visualize the outputs of a model. In that case most people use scope blocks, but there are other options as well. If you have simply made the suggested settings changes, but not updated the model to ensure it conforms to the expectations set by those settings, then you should read the suggested documentation, and use the model programming aids to help ensure your model is conforming. If neither of these are the case then the question is a little confusing to me, and more details could help clear up the question.
 i = j = sqrt(-1)
So while I haven't gone back to the models and just moved on to the HW we had, I think my issue was visualization, which I later realized to see the graphs I had to click the scope box. Thank you for your reply though!
Its for a image processing class. I am trying to do it without neural networking.
Yeah I found some great solutions that utilize neural networking, however I have to do this without neural networking.
Its just some text on a piece of printing paper. Also if I threshold it, the image becomes a logical right? OCR wont work on logicals i think.
OCR usually goes via logicals at some pint. You can revert it to a grey scale afterwards anyway by multiplying the image by 255 (might be another step required not sure). 
I mean, if I understand this right you can do something like: z1 = exp(i(15pi/16)); z2 = -1 * z1; [...] And that's it really. Everything else seems to be required as-is. Do you want to save lines? Sometimes, if you want 20 explicit results you have to have 20 explicit lines of calculations to get it, besides plotting, etc. 
There are two ways to do it: 1. Specify the time array going into ode45 (which I assume you are using). 2. Create a uniformly spaced time vector t_sam=linspace(0,20,20*1000); then use x_sam=interp1(t,x,t_sam);
Since 2016b you don't need bsxfun any more: http://blogs.mathworks.com/loren/2016/10/24/matlab-arithmetic-expands-in-r2016b/?s_eid=PSM_gen 
Use ss2tf(A,B,C,D) to get to transfer function and then use inverse laplace in matlab(https://www.mathworks.com/help/symbolic/ilaplace.html) 
If you need each term, you can use structures and a `for` loop for nice, compact code. coeff = [15, 15, 7, 7, 3, 3, 11, 11]; % numerator in exponent sign = repmat([1 -1],1,4); % sign of term figure;hold on for idx=1:8 z{idx}.val = sign(idx)*exp(i*(coeff(idx)*pi/16)); % calculate each value z{idx}.real = real(z{idx}.val); z{idx}.imag = imag(z{idx}.val); plot(z{idx}.real,z{idx}.imag,'o') end axis([-1.5 1.5 -1.5 1.5]) The true MATLAB way to approach this is with vectorization. sign = repmat([1 -1],1,4); coeff = [15, 15, 7, 7, 3, 3, 11, 11]; z = sign .* exp(i .* coeff .* pi / 16); figure; plot(real(z),imag(z),'o');
 &gt; How to ask the user to enter a xlabel, ylabel, and title of the figure to be plotted. in_title = input('Specify a title: ','s'); title(in_title) As for the spreadsheet, you could use the same `input` function to ask for the path to the spreadsheet. I would suggest validating it and/or wrapping it in a `try` statement.
findnearestneighbors function I would code it like others have stated but it may be useful to see how your code performs against the matlab one.
If you were given 40 random numbers and told to sum all of the ones divisible by 2, how you would you do this by hand? Start by writing out the steps you would take. Then, think about how you could implement those steps in Matlab. To get you started, how can you check if a number is divisible by 2? 
[https://www.mathworks.com/help/matlab/ref/sum.html](https://www.mathworks.com/help/matlab/ref/sum.html) [https://www.mathworks.com/help/matlab/ref/times.html](https://www.mathworks.com/help/matlab/ref/times.html) [https://www.mathworks.com/help/matlab/ref/mod.html](https://www.mathworks.com/help/matlab/ref/mod.html) 
+1 This is exactly right, OP. Matlab isn't about casting some magic spell that will do your homework. It does what you tell it to do. So how would you solve this problem yourself? 
&gt; how would you solve this problem yourself? Post on forums for enthusiasts until you can find someone who loves Matlab enough to do it for you. 
What is the input and/or initial conditions? 
[Cody Challenge](https://www.mathworks.com/matlabcentral/cody/?sort=&amp;term=group%3A%22Cody+Challenge%22) is not bad for learning. Also, Matlab has excellent documentation. If you need help with a function or want to see examples of how it is used, type "doc function" and replace function with whatever you want to learn more about.
Thanks!
Thank you!
Please don't do homework for people.
Your function file seems fine. You might be using it incorrectly (Don't hit run when this myfunction.m file is open. Make sure the file that is using this function is open. If you have put the function int the .m file that is using it, it will fail. MATLAB doesn't permit that unlike python) myfunction(1) should give you 1 1
Call the function from the command window. Type "out = myfunction(yourinput)"
they are indeed loaded individually. By "X number of images are stored as rows" I mean that each image has the first place in each column, or in other words, the first row of the matrix is used exclusively by all the images. Then, a number of numeric values are stored under each image, so that the following rows are occupied by numeric values. 
Thanks
It's very likely that the index is larger that the dimension of the matrix. Also, i = j =sqrt(-1).
A matrix is like a list of numbers with a certain number of rows and a certain number of columns. For example, a matrix with 2 rows and 3 columns is called a 2x3 matrix, and might look like this: 5 6 4 5 4 1 You can refer to a specific number in the matrix by talking about its position in the matrix. That position is its "index". So if my matrix above is called B, then B(1,2) is 6. What is B(7, 15)?
The documentation. 
You dont need to do this to solve this problem... but it can help for the future for memory/speed and might help fix some of the issues. 1) Pre-allocate the array. In your current code you dont have a matrix the size taht you need, so each time through your loop you are making it bigger. This is inefficient, and also might be what is causing your indexing issues... along with the fact that you have i being defined twice. Your pascal matrix is a square of size n*n. So you can create a matrix full of zeros that is n*n: pascal = zeros(n,n) 2) Now, the resulting matrix had all ones in the first column. Your second and third line can be re-done in one line.... and we dont need to do it in a loop (loops are very inefficient - avoid them if you can: pascal(:,1) = 1 That turns all of the rows (:) in the first column(1) into 1s. 3) Then, you can implement your lines 4-8 and they should work. for i=2:n for j=2:n pascal(i,j) = (pascal(i-1,j)+pascal(i-1,j-1)) end end Try to indent anything within a for loop to one level beyond the where the for and end are located. This helps you visually see what sections are within each loop. PS. I changed your value B for pascal... because it just seemed "right" to me. 
cellfun(@horzcat, force, time, 'uniformoutput', false)
Amazing, thank you /u/BCPull always here to save the day in /r/matlab
I think it he means w.*t2 and w.*t1
Your professor is probably not assuming you know Matlab. He's assuming that this is a college class and you will teach yourself how to use Matlab in order to complete the assignment. 
Surely you have covered some relevant material in class? I doubt the assignment is literally " find the closest mathematical expression of that signal". What subject have you been studying in class? What methods have you tried already? 
Assuming you meant W*t2. What i did is run this code and check the data (my way is selecting the A in the editor A and pressing f9, there are others), and i noticed that A is a scalar, where you probably needed a series, judgig by your plotting. My sollution is chaninging the vector division ( / ) to an element-wise division (./) . I recon this is the sollution you are looking for.
10/5 = 10 x inv(5) [A]/[B] = [A] x inv([B])
People are giving you a hard time, but I see your confusion- normally we think of the `/` operator as being like the inverse operator, that is `A/B` being `A*inv(B)`. But if you read the documentation, it explains what it is when the second input is not a square matrix. In this case, it is solving the linear least squares regression, and since it is a 1x3 divided by a 1x3, it is coming up with the one constant which most closely maps the second to the first. To see what's happening, let's set some examples: v = [1,2,3]; w = [2,3,4]; Notice how w is just a little bigger than v. Now, if you say: c = v/w you'll get c = 0.69. If you say c*w You'll get 1.3 2.0 2.7 Which is pretty close (and in the linear least squares description, the closest possible) to v. Since all the elements of w are larger than v, if you switch them, you'll see the answer is a little larger than 1 instead of smaller. Or, v/v or w/w will always be one. 
yup was just about to say this. doc / * If A is a scalar, then B/A is equivalent to B./A. * If A is a square n-by-n matrix and B is a matrix with n columns, then x = B/A is a solution to the equation x*A = B, if it exists. * If A is a rectangular m-by-n matrix with m ~= n, and B is a matrix with n columns, then x = B/A returns a least-squares solution of the system of equations x*A = B. 
just leave a comment of + beneath them!
Considering I am a sophomore in a junior class, I think he has a assumed that (most people have already have taken a class that had Matlab and were given resources then.) We are learning consol for the first time in this class and he is giving a lot of material so yes I think he just assumes
Use ginput to capture the intersection later process the image looking for a pattern that has a large correlation with the pattern you captured.
I'd like to be able to obtain the intersection of these lines for various tic tac toe boards and different orientations. I have the code to identify these lines 
Check out [this link](http://blogs.mathworks.com/loren/2011/08/29/intersecting-lines/) from Loren. I've used this code lots of times in my own applications. 
look at the very first line in that link, you'll see a link for System object: [vision.TemplateMatcher](https://www.mathworks.com/help/vision/ref/vision.templatematcher-class.html) which if you scroll down, it says * H = vision.TemplateMatcher returns a template matcher System object, H. This object performs template matching by shifting a template in single-pixel increments throughout the interior of an image. * H = vision.TemplateMatcher(Name,Value) returns a template matcher object, H, with each specified property set to the specified value.
Thanks again /u/MatlabGuy. One thing though, do you know how to retrieve my points from the struct? Without manually going in and looking, that is. 
looks like the point values are stored in cells within the struct. Try pt1 = lines.point1{1} and see if you can pull the values out. If you can, you should be able to iterate that easily. For theta and rho, they look like they are scalar values, so you should be able to pull them just by calling their cell theta = lines.theta rho = lines.rho
All good man!
When you read the documentation about structs, which part was unclear? That would be helpful to know how we can help you. 
 a([2 3 3]) % heh
He's not giving you the answer, he's giving you a hint. define a in your console and then try the line that he suggested and try to figure out why it swore at you....
This should help, http://www.jot.fm/issues/issue_2009_11/column2.pdf
you're an unhelpful ass, aren't you? ;)
Yeahh... without answering your question... Did you know you can make code look like code by adding indentation (4 spaces before a line) and that you can add newlines by putting empty lines in the comment text. This allignment is so bad i don't want to put in the effort to understand it
OP is likely not at his console. This is an exam question, .... he is currently taking. Kids these days. Parent OP did right though - provided a modified working example.
The word "If" at the beginning of this question was unnecessary, and makes no sense with the way the first = is used (you can assign things in an if statement but 99.999% it's a mistake when it happens)
I think that 'if' means "lets take", a more mathematical usage. The use of a matlab keyword for that meaning is indeed a bit confusing.
Try adding some break points in your code, run it and look at the value of i. You have 'i' in your loop 2 times, so check the value before and after 'for i=2:n' is it what you expect? Also are you supposed to have 'i' twice, or 'i' and 'o'?
I got rid of i=2:n, you were right I didn't need 2. I'm very new to this; are ";" or "pause" or "end" considered break points? 
type "dbstop if error" in your command line and run through the debugger
Educators should know better than to use English and programming syntax terms in potentially ambiguous ways.
I have several problems with this problem :P. For one, it runs fine for me. Secondly, How do you "click run"? you made a function (Pascales) that should be in a seperate file (Pascales.m), and you run it with A=Pascales(8), which you'de type (ctrl+v, or up and enter) into the console. Thirdly, (which might be your problem:O ), there are two for i=(...) loops, only one will do , delete the first one (going from i=1:n), that also makes sure P(:,1)=1 (which is independent of i) is executed once. as For why it works for me and not for you, maybe its caused by different matlab versions? In any case is nesting loops with the same iterator asking for problems anyway. Have fun
In numerical derivative approximations, you have to handle the endpoints (and points close to those) separately. As u/Weed_O_Whirler said, your problem is with the math. Try something along the lines of what they said though if i==1 " do something special, or nothing depending on how you want to handle things" elseif i==48 "do something else special, or nothing" else "do normal things" end However, based on your code, your d2(i) line is calling for values of y(i) that haven't even been created yet. y(i+1) hasnt been created when you are trying to find d2(i), but it is trying to use that value. Try populating all of y first maybe. Then handle the endpoints for you approximation.
Tip: Play around with the fftSize.
I understand whats causing the problem. d2(i) is trying to solve for values which dont actually exist, namely y(0) and y(49). I'm trying to get the loop for d2(i) to run independently for values for which are valid so where i&gt;1 and i&lt;48 I just dont know how to incorporate that into the code. ps Thanks for the help. 
Surely there are better ways of testing one's Matlab indexing skill, than an obscurely worded question. 
The variable "a" is a character array, where 'b' is the 1st char in the array, and 'm' is the 13th and last character. So, that means that a(13) = 'm', because you're calling the 13th index of the array "a". Therefore, if you fed "a" a row vector of [1 2 3 4 5], it would return the 5-character array 'basic'. So, this question is basically just asking what row vector you could feed it so that you'd spell out 'magic'. One sufficient answer would be b = [13 2 10 4 5], because those indices point to 'm', 'a', 'g', 'i', and 'c' from the original "a" vector.
You should set a breakpoint within the callback function that intends to call on the global function. The workspace pane at the breakpoint will tell you whether it is actually defined for the local (within the callback) workspace. From what I remember, you declare functions/variables as global when you create them, and you repeat global [var] within the callback function so that it will import the global definition into the local workspace.
You need to sample coherently. In simple terms, this means that each point taken should sample a different part of the waveform. This doesn't happen when the input frequency is an integer divisor of the sampling frequency. To ensure coherent sampling, make fin a prime number multiplied by the sampling frequency divided by the number of points. so fin = fs * nprime / npts you are using npts = 64, fs = 8k and want fin ~440, so choose nprime = 3 or 5.
Cool. Then first, evaluate y outside the loop, that's a big part of the problem. You could use another loop but it shouldn't be necessary. Then loop through the numerical part but just change your loop for I = 2 to n-1. 
If you calculate the variance and covariances, plus the means, you just fit a gaussian! You can then plot the curves since you'll know the form analytically
I don't know of a way to disable input to the command window, but have you thought about creating a simple GUI and running the matlab compiler to create a stand-alone application? Not all versions of Matlab have the application compiler, but you can check to see if you do by typing: ver('compiler') or by checking the apps tab and see if you have an app called "Application Compiler" You can read more about the compiler [here.](https://www.mathworks.com/help/compiler/index.html)
Do you have the points corresponding to each cluster separately? Or do you need to figure that out? In the latter case what you want to do is fit a gaussian mixture model.
Thanks, this is useful, the problem with transforming the data is that it would be great to be able to click and see the real values, but I may have to abandon that
[left, bottom, width, height], for example in normalized units [.1,.1,.8,.8] is centered on the screen with 0.1 on each side. Left edge at 0.1, bottom edge at 0.1, and 0.8 for width and height. This doesn't include things like title bar, tool bars, etc. For that look at "OuterPosition". 
^ he's right, but the lazy way is to increase the number of fft points, make it a 1000, your computer can handle it. 
Thanks for the answer! Changing fplot(f1) to fplot(f1,[0 10]) actually solved all my problems and now the plot(f1) version and fplot(f1) version give the same output. Without the [0 10] limit, I got this output: http://i.imgur.com/BsTsufg.png After carefully zooming in the two graphs were indeed the same.
Alright, thanks. I had actually never worked with matlab before... This is my first step in being able to solve systems of linear differential equations! (while also understanding what I'm doing)
I solved problem 2, but left problem 1 untouched. It works fine now. I have: w=1 hold on for z=[0.1 0.2 0.3 0.4 0.5]; f=@(t) w./(sqrt(1-z.^2)).*exp(-z.*w.*t).*sin(w.*sqrt(1-z.^2).*t) fplot(f,[0 20]) xlabel('t'),ylabel('y') end hold off which gives me exactly what I wanted
Have you ever searched for help on Stack Exchange? I feel like asking Reddit for Matlab help is like looking for strawberries in the desert and Stack Exchange is the strawberry market.
Looks like your function is producing a different number of outputs than you are providing in your y-value input. 
Thanks a lot for your help, I'm sure I just have some misunderstanding about what the assignment is actually asking. I've sent an email to my teacher and some others from my class but no one's responded yet. Thanks.
Figured out where I was confused, the 5th step meant that the actual 5-digit grouping was randomized (so if we had 11060, 12061, 13063 it could be randomized to 13063, 11060, 12061) not the numbers within it, so the 61900 is actually the 61st letter in the line.
Convert your number to a string and loop thru the characters to build your vector. Heres some code (it will not work for long strings without modifications): a = 365555; b = num2str(a); numLen = 3; count = 1; for i=1:3:length(b) c(count) = str2num(b(i:i+2)); count = count + 1; end 
access them individually, a string is just a array of chars c = '365555'; c(1) will give you '3' c(2) will give you '6'
A 2x2 A matrix and a 2x1 B matrix implies that there are 2 system states and a singular input (each input is a column). Thus your u, the input, can only be a singular value. If you want there to be 2 inputs, B also has to be a 2x2 matrix. In general, B must be n x m where n is the number of system states and m is the number of inputs. Your 1x2 u vector is being rejected because it doesn't make sense in the context of a single input system (and inputs should be in general row vectors anyway). More information on state space basics can be found here: http://lpsa.swarthmore.edu/Representations/SysRepSS.html
u should always be a vector, never a matrix, and it should be a row vector. Think of what the matrix multiplication is doing. If you have N states, in a row vector, the multiplication of B\*u must be a Nx1 vector. B\*u represents the contribution of the inputs to to the time derivative of the state variables. If there are N states, you must have N time derivatives, regardless of the number of inputs. That is why B is N x M and u is M x 1 such that B\*u is N x 1 for all M &gt; 0. 
Thanks, that's working really well!
Sure thing
While I've got you here... I'm under the impression that the SS block evolves the model over time, is that correct? I have two simulink models, one using state space and the other explicitly defining the system and integrating it over time and they produce different results. 
It's because you are violating a fundamental assumption of the state-space model as implemented in matlab: that it is linear. Matlab takes the A,B,C,D matrices to be constant through time. You can linearize the above system about a specific x1 but it is in general non-linear. The state-space model will be a linear approximation of the non-linear model and it will fail as the states move further away from the linearization point. It looks like you are modeling a pendulum. See this document for some more info https://courses.engr.illinois.edu/ece486/documents/lecture_notes/state_space_p1.pdf
Take the mean and then estimate the covariance matrix with 1/(n-1) * sum((xi-mean)*(xi-mean)T) where xi is the two component vector for each point. 
 s = '365555289489567452' str2num(reshape(s, 6, 3))
No problem :) It can be really easy to lose track of what assumptions are made and what information is lost when moving back and forth between state-space, transfer function, and other forms of representing dynamic system models. To be honest I wasn't a huge fan of simulink in the very little I worked with it. Maybe it's the old school programmer in me, but I much prefer to have everything in code and be able to manipulate all the data directly. Having to use their blocks for everything just annoyed me. That being said, I wasn't working on control systems which is Simulink's bread and butter, but just general dynamic system modeling (specifically linear stability models for jet engine compressor instabilities). It might be much nicer to work with when you are doing its bread and butter.
I guess what I meant more is that, as far as I can tell, which is limited mind you, most anything you can do in Simulink you can do in Matlab functions/scripts. All the same toolboxes are available, so when I say code I do still mean taking advantage of all the tools Matlab offers but doing so in script/function format rather than graphical/simulink format. I use the state space model functions for my work and have it spit out bode plots and what not.
Add it as an input parameter. It will be an input to the function, but the value will be taken from a variable of the same name rather than a signal.
Do you mean alter the signature like follows: function y = fcn(u,newpara1,newpara2) Sorry im not sure how you mean exactly...
https://www.mathworks.com/help/simulink/ug/parameter-arguments-in-matlab-function-block-functions.html
Your question has been removed. Please read our [rules for submitting homework questions](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/) and then respond to this message after you have made the necessary changes. At that time, I'll let this post out. 
Three tips to the EMD code. 1. How does the isimf function work? Shouldn't it be while (sd &gt; 0.1) &amp; ~isimf(x1) so that either tick? 2. Most modern implementations of EMD doesn't use the sum of the difference, but rather a fixed number of siftings, often 10 to 15. There is a lot of good literature on this. 3. For the while ~ismonotonic(x) line, from Wu et. al. paper "A study of the characteristics of white noise using the empirical mode decomposition method" we also see that the maximum number of IMF's can be set to log2(x).
Are you in biosystems? I literally just did that exact same assignment 
Doubt it, as I'm Danish :)
I will try and see if this could help.
Hmmm my project just consisted of that exact same question. Pretty crazy! 
ChemE with background in yeast here! On vacation, though -- no Matlab to test your code. You're modelling what's called a "diauxic shift." The term refers to the process of shifting from one carbon source to another. In the case of yeast and the glucose/ethanol switch, consider what's happening in terms of the enzymes and proteins involved. Glucose levels dwindle and the cells become stressed. Instead of using ADH1 to convert acetaldehyde to ethanol and then pumping the EtOH out, the cells will pump EtOH in and use ADH2 to convert back to acetaldehyde. This helps explain the lag sometimes seen when cells undergo diauxie. It's wasteful for the cells to make all proteins for all carbon sources all the time, so they wait for a stress condition to arise before making them. This leads to how, and why, I would model the problem differently. Rather than "replace glucose with ethanol as a substrate", introduce some new variables! Track an "ESR" variable, "environmental stress response", that will turn on when glucose levels drop. That represents the production of the proteins and enzymes that will enable EtOH consumption. Let your biomatter grow as a function of two terms: one will be based on glucose metabolism, the other on EtOH metabolism and ESR strength. Track your EtOH species in terms of production due to glucose metabolism and consumption due to ESR activation. This model will let the diauxic shift lag appear naturally, save you from adding non-physical logical expressions to your equations, and let each term appropriately represent only one set or category of species. Approaching each species in terms of how it's actually produced and consumed produces a model that's more extensible and easier for other engineers to understand than a model that plays tricks with switching what a variable represents. Hope that helps!
Thanks for the reply! So I replaced what I had with what you provided and it replicated the deflection for force 1 that I had, so I copied it for force 2, so thanks for the help simplifying that! However, I'm still having trouble combining the multiple displacements to get the total displacement. I should end up with 2 vectors with x unique displacements (force 1 from 0-9 and 9-31 and force 2 from 0-18 and 18-31), but I'm unsure how to add them together. I'm not even sure if I'm making sense anymore unfortunately ahah
Let's say the cell is called wav_cell and the double array is called name_array, and they have the same length. n_files = length(wav_cell); out_dir = '/some/path/' for file=1:n_files out_name = [num2str(name_array(file)), '.wav']; out_path = fullfile(out_dir, out_name); % write the wav here to out_path end
Thank you very much
That's really cool man. Also, that elevation data to topographical map, that's awesome. As part of this project (the report aspect), one of the suggestions I put in was using drones to map the terrain where the pylons could be place, and then create a virtual topo map. Using that and some software I thought could really reduce time and costs etc for the surveying of pylon placements, so thats really cool!
Read the documentation regarding matrix indexing, specifically "slicing". That, along with the zeros function should make this trivial. 
although... i'm reminded that the only function that is its own derivative is the exponential 
txt = fread(fid); % read the whole file words = strsplit(txt); % cell array of words % find indices of words with char you don't want delete = cellfun(@(x) strfind(x, badchar) &gt; 0, words); % remove those from the array of words words(delete) = [];
If you know the basics of plotting data in Matlab, it *shouldn't* be too hard to modify the code that you provided. I emphasize shouldn't because I've had some battles with animations in the past, mostly due to my platform (Mac). Most of that code is handling the loading, overlay, and saving of each frame. The part you want to modify are the lines that start with 'hline'. This was the original authors overlay. Since you want something else, you can get ride of them. The first two mentions - outside the while loop - are just setting up the object, so it doesn't really matter for you if they are there or not. The two 'hline' calls inside the while loop are where you will draw whatever plot you are looking to overlay.
You could ask Alpaslan Yufka (creator of the video) how he did it. Be sure to thank him in advance!
If you look at the documentation for `fread`, it shows that when only an fid is passed, it reads the entire file into a char array--that is, there's no need for any explicit loop. Note that newlines are read as characters (typically either 1 char: `'\n'` or two chars: `'\r\n'`); the array is not automatically broken into rows by line (do that by splitting on newline). The problem with `strsplit` is actually with how you're using [`fread`](https://www.mathworks.com/help/matlab/ref/fread.html#inputarg_precision): that the example code did not specify a precision/data type to read, so Matlab defaulted to double--so `txt` is a double array, not a char array. Using `fread` properly: txt = fread(fid, inf, '*char'); Which reads an infinite number of bytes from the file or until eof as char and does not convert to another data type. Note the `*`; it's important (keeps data as char rather than converting to double). That should let you pass it to `strsplit`; if not, the following are the most likely problems: 1) fid points to an invalid file (test by putting a breakpoint after the line where txt is assigned; if fid &lt;= 2, it's either invalid (&lt;0) or pointing to stdin (0), stdout (1) or stderr (2); you could also use `fopen (fid)` to display the name of the file) 2) fid points to the end of the file; test by checking `ftell (fid)` prior to using `fread` (should be 0 at start of file; anything else, something had been read; use `frewind(fid)` or `fseek` with appropriate arguments to get back to the beginning). So, your code now looks like: % Read the file and split on whitespace: txt = fread(fid, inf, '*char'); words = strsplit(txt); But I don't think that's actually what you want: it splits the text by whitespace (including both newlines and spaces between words, with no differentiation); it doesn't split the text by line or allow you to reconstruct the original text minus the words you want to delete. There are a couple of ways to handle this. One is to use `strsplit` to break on newlines (giving you a cell array with one line per cell), then use `cellfun` with `strsplit` to split on whitespace (breaking each line into words). But, while that allows you to reconstruct the original text if and only if they're is a single space between each word, the only other whitespace is newlines and you don't mind deleting pucntuation that isn't separated by whitespace from a word you want to delete...well, it's not ideal or versatile. A better way is to use [`regexprep`](https://www.mathworks.com/help/matlab/ref/regexprep.html). Regular expressions can take some effort to learn, but allow for extremely concise but powerful pattern matching in strings; additionally, many elements of regexp are common across languages: if you learn regexp notation in Matlab, you will quickly be able to construct basic regexes in perl or python, for example. For your case: you want to replace words containing a certain pattern (a specific literal character) with nothing (that is, you want to delete the word). The doc page for regular expressions (notice a theme?) tells us that `\w` matches any word character (A-Z, a-z, 0-9 or _), `*` is a quantifier for 0 or more matches, `*?` is the lazy version of the 0+ quantifier, and charcter literals can be matched, well, literally. Putting that all together, if we let `badChar` be a variable holding whatever character we use as a flag to delete words (or a string of letters to match literally), we could use the format string: fmt = ['\w*', badChar, '\w*']; Which should match any word that starts with any word characters, then contains badChar, then has any number of word characters. One thing this misses, though, is that you probably want to remove one of the spaces around the word, too: e.g., if your char to flag removal is 'z' and your string is: 'Bees buzzed outside.', you'd probably want the result to be: 'Bees outside.', not 'Bees outside.'. You could simply include surrounding whitespace in the match and replace with a single space, but that wouldn't yield the correct result for words adjacent to punctuation (e.g., 'Bees buzzed.', or 'Bees--buzzing outside--flew.'). You should be able to use tokens and a conditional match to match any leading whitespace, match the expression, then match and capture any trailing whitespace only if leading whitespace was found, then match any trailing whitespace; replace all with only the second captured whitespace: fmt = ['(\s*)\w*', badChars, '\w*(?(1)\s*)\s*']; newTxt = regexprep(txt, fmt, '$2'); If that doesn't work, you can try replacing in two steps (replace when both leading and trailing spaces are found with a single space, then replace when zero or more leading and talking spaces are found with no spaces), or--assuming your text has no instances of leading punctuation without spaces before a word to be removed--simplify the expression to ignore some edge cases: `fmt = ['\s*\w*', badChars, '\w*(\s*)']; newTxt = regexprep(txt, fmt, '$1'); Should handle all cases either surrounded by spaces or with a leading space and trailing non-space. You could make the regexp even more complicated--e.g., remove surrounding parentheses/brackets if only the word being removed is inside the parentheses/brackets--but this should handle the basic use case. 
Look up vehicle dynamics. There are models out there for vehicles with different types of tyres. Choose your tyre type(s) and code away.
O no thats not Alan, it's steve! Steve, Steve! This is a homework question, comments that give the asker the tools to do their own research are I think way more useful that just giving the answer. quite often do beginner coders accept a working solution "because it works", and don't take the time of trying to find why it works, or how it works, defeating the purpose of homework. And o yeah, it's also in the rulething in te right, "We are here to help, but won't do your homework or help you pirate software."
Did you actually read the OP?
Yes, xlsread will import the data in a usable format, but you may need to transform the data into a specific format depending on your desired plotting method. My approach would be to first just define a single set of points and plot it the way you want, then use xlsread to import the data, and compare the imported format to the input you used to make the plot (e.g. The imported values are in rows and you need to convert them to column vectors). You can also try uiimport for a little more control over the data format.
Well it depends but on the likely case the format is not 'ideal' it shouldn't be a major inconvenience to reformat. Look at the patch function, sounds it will be useful for you.
How did you make the board? Are you just looking for a random generator? Like randi([0,100]) will give you a random integer between 0 and 100. 
Thanks for your response. After these lines of code I get an error. fid = fopen('text.txt'); txt = fread(fid, inf, '*char'); words = strsplit(txt); &gt;Error using regexp The 'STRING' input must be either a char row vector, a cell array of char row vectors, or a string array. 
`txt` is probably returned as a column vector; transpose it (`txt'`) to a row and it should be fine. 
use plot3(x,y,z) do: t=0:0.05:1; n=0:0.05:1; th=whatever figure; plot3(t,n,th);
yeah that was the issue, i changed this line: txt = fread(fid, inf, '*char'); to txt = fread(fid, [1 inf], '*char'); would that be fine? Also if there are two badChars lets say, can i do this line as: fmt = ['(\s*)\w*', badChar1, badChar2, '\w*(?(1)\s*)\s*']; ?
Yes--using `[1 inf]` effextively transposes the array. Regarding the regexp: it depends. As you wrote it, it will replace words containing only the literal match of the exact sequence of characters (i.e., if your characters are 'a' and 'b', respectively, the regexp will match words that contain 'ab'--but not words that contain 'ba', or 'a' or 'b' standing alone). If you want to find any character in a group of characters--without regard for a particular combination or permutation--simply surround the characters with brackets (which tell the regexp to match any of the characters in the brackets). You can use quatifiers, ranges and negations as necessary (though, depending on how you construct the match, the negations may not function as you intend). For example, if you wanted to find a word that contains at least a 'b', 'c' or 'd' followed by at least one vowel, your could use the match string: fmt = '\w*[b-d][aeiou]\w*'; Or, if you wanted to find words not containing the letters 'b' or 'p' regardless of case, you could use: fmt = '[AC-OQ-Zac-oq-z0-9_]+'; Note that the simple negation (`[^p]`) wouldn't work, since it would match *anything*--including punctuation and whitespace--not just word charcters. For your case, if you have a string of characters and want to match any of them (up to, but not necessarily all of them, and not in any particular order): simply put them all in a single variable (or concatenate)--e.g., `badChars`--and add an open bracket to the left string and a close bracket to the right: fmt = '[(\s*)\w*[', badChars, ']\w*(?(1)\s*)'];
Yeah, you can write scripts in Matlab. It's really going to be more of a question of whether the other software you're using offers an interface that you can use to interact with it. 
I know I can open files with winopen (there are other ways to call other programs prolly as well). I'm wondering however how to make my MATLAB script explicitly use the 'save' function in another program it opens.
Appreciate the response! I used what you suggested and it looks better now. (regexprep(txt, '\s+', ' ')) So basically the issue now is I have this 1x40 char, newTxt. If I want to see newTxt(1) i only get a single letter. But I want to see the whole word in this case "road" but i only see "r". Would cellstr work for this? edit: Heres the text im seeing "Road And Traffic Signs PracticeTest And " but newTxt(1) = R and not Road
Hmm, I don't really know what kind of interface is it. It's a simple program written in Java with a 'regular' interface (File, Edit, Help tabs in the upper part). Program was designed to view, analyze and record EEG signals (for those interested, it's available [here](http://braintech.pl/svarog/).
It's a Java program designed to view, analyze and record EEG signals. My problem is that it's the only program I know that can open specific data files and save them to a matlab friendly format. You can find it [here](http://braintech.pl/svarog/).
Are the files ascii or binary?
Ahh, ok. I use Matlab to open files of inhouse software, so the extension doesn't really matter, however, blocks of nonsense characters in np++ is a problem. I'm not sure if Matlab can read stuff like Unicode or not, but I do have a little experience reading binary. I'll have to wait until work tomorrow when I can look at my Matlab library to find those functions. Edit: actually, it's a long shot, but use uiimport to see if you can read the file that way. If not I'll look into other options. 
Thanks for the function, I didn't use it before, but it didn't solve anything, still walls of strangely coded signs.
Assuming your Minesweeper is an NxN matrix, you can do the following: **mine_locations = rand(N);** % returns NxN matrix of random numbers between 0,1 **mine_locations = round(mine_locations);** % turns all values into 1s or 0s for mine locations
So what if I wanted to constrain say the pull back length and focus only on the launch angle? Is there a function, sort of like excels goal seek, that could tell me what angle would get me those co-ordinates?
You may have some luck with the [solve](https://www.mathworks.com/help/symbolic/solve.html) function? Just from what I can find with a quick Google search. 
I don't know of a built-in function to do this, but it should be trivial to write one yourself using the same sets of equations you used to calculate x and y--depending on the complexity of your model, either simple algebra or basic Calc should suffice. 
If the other program has command line options to you to pass in file to open and file to save, you can use the Matlab shell interface to run it; I've done this to run batch scripts and to run multiple instances of Winzip from Matlab on several occasions. If the other program provides a COM interface (like Excel or Outlook, for example), you can control it from within Matlab; how much you can do depends on the other program's implementation. This is how `xlsread` and `xlswrite` work, and it can be used to invoke a wide variety of interfaces on windows (wscript, powerpoint, word, Outlook, etc., all expose interfaces that can be used directly from Matlab, powershell, visual basic, etc.). If the only way to run the program is through that program's gui, your options are more limited. Matlab can use a java robot to control the program--I haven't done it and it sounds like it could be painful, but it might work. On the Matlab side: if the file format is well-defined and you have the spec, you can build a matlab reader for it. Technically, you can do this even if the file format is not well-defined or you don't have the spec, but it's...more difficult. Sometimes, even if the spec wasn't delivered with the program, you can find it by googling the file extension or the first few bytes of the file (usually in ascii or hex); there might even be a data reader for that file type on the file exchange. In practice, building a file reader from scratch ranges from trivial to very difficult--easy when you can see the data and the appropriate format, hard when you can't. The bottom line, though, is that more information about the program--name, documentation, etc.--is needed for anything more than generic advice. 
You would need to write one yourself, but it wouldn't be too difficult to do. But yes, as long as you constrain either one of the variables it would be very possible to solve it with a short script!
You want to use fzero. First, make it a 2 dimensional problem (since you're not modeling Coriolis or any cross forces) by making your two variables "range" and "up." So really, you're not inputting an x and y, but just a range. Now, you can only choose a pull back amount or an angle, since if you allow both to vary you have an infinite number of solutions. Say, you choose a pull back angle, now your job is to find the 2 angles (and yes, there will always be 2) which hit your target. Thus, you make your function that calculates how far your projectile go a function of your elevation angle (look up anonymous functions to see how to do this), and then make your cost function the range difference between what you want to hit and your current range. Seed one solution to start below 45, and the other to start above 45 to find both solutions. 
The easy way is just putting it into a loop. You start with th = 0 and then inside you say th = th + your calculation. If you want to do it a more matlab way, you can use the `.` operator and the `sum` command to do it all in 2 lines
Pass the function handle, as described here: https://se.mathworks.com/help/matlab/matlab_prog/pass-a-function-to-another-function.html
You can use anonymous functions as a function input f = @(x) x^ + 2*x + 3;
Importing is slower than permutations, so I would import upfront and splice later. 
Just enter f as (@x) 2*x + 4
Ye that worked thanks. I might consider using str2func though to bypass having to write out (@x)
Ye I've noticed that aswell, thank you though
So something like this: parfor n = 1:3 switch n case 1 K1 = WENO5(M,N,dx,dt,uc,vc,K,Ks,nu+1/2*vt); case 2 W1 = WENO5(M,N,dx,dt,uc,vc,W,Ws,nu+1/2*vt); case 3 E1 = WENO5(M,N,dx,dt,uc,vc,E,E*0,1/2*vt); end end K = K1; W = W1; E = E1; This still isn't working
or you can call @func 
I'm using 2016a.. the problem is that I don't know what activeX is or does or how to use it
in case anybody asks ignore where it says "rankine2" I'm trying to finish a project so I saved it as a different function and I'm just making 2 functions for times sake. However I would like to know the solution in general for future reference. Thanks.
Looks like you wrote it to produce one output and you're asking it for multiple outputs when you call it. Also, there's little benefit to making this into one function. 
Why not wrap it in a while (counter &lt; 2)? a la: http://pastebin.com/Ppb7Ak8p
I emailed my TA about it. He cleared it up. I am allowed to use while. Thanks :)
I'm not too familiar with multi-wall setups, but I can help you a bit. I would just focus on getting layer A to work first. * For the central nodes at least, 'i' basically represents the node number. You can think of 'n' as time layers, where each layer tells you the temperature of the composite plane wall after each time step. You can animate this all in the end if you really wanted to. Not entirely sure what P* is, but I'm hoping there's a delta_x and delta_t in there still. You'll need to create a vector of time, something like time = 0:delta_t:time_end * delta_t of 1 second is good enough, so your time_end determines how many layers you've got. You can set this to like 5 hours to get the transient response. Next, you'll need to establish the initial conditions by first creating a 1xn vector of your wall. Let's just focus on wall A for now. Your code might look something like T = 600*ones(1,n) % Kelvin Next, I would use 2 for loops, one to look at the node number and another to keep track of the 'time layers.' [Here's](http://i.imgur.com/p6eHIwN.png) an example of what it looks like in a table. The columns represent the nodes and the rows represents each time layer. In the example above, the left and right side of this metal rod for example, is held at a constant temperature of 30C and 100C. For you though, the left column is going to be recalculated each time through your Node 1 equation, and the right column is recalculated through the Node A equation. Your looping structure may look something like for k = 1:length(time) for i = 2:n-1 T(k+1,i) = (1-2*P)*T(k,i) + P*(T(k,i+1)+T(k,i-1)) end end * This is just for your node type 1, it looks like you'll need to calculate node type 2 first (ie, the left wall temperature after 1 second) before going through the central node calculations. That should get you started. 
Theoretically you can have signals which are more than +- 180 degrees phased. You'll see this in textbooks and theoretical papers. Bode Plots generated by MATLAB will show more than this, too. However, practically, we can't measure phases more than +-180, or 0 to 360, using the fft. We can't tell what the difference is between -20 and -380. If you don't do the unwrap, you'll see phase measurements snap from -180 to +180, because that's the limits of what the fft can measure. Unwrapping can be considered a personal preference. I don't unwrap because I don't like tampering with measured data. Other engineers unwrap because they want data which matches their pretty little Bode Plots. 
That's just not going to work. When doing gpu computing you want to think about loading as large of chunks of data on the gpu as it will store in ram, running the computation, and then reading back the results. Although analysis on the gpu will be parallel, the format of push, compute, pull is strictly sequential. A parfor is cpu parallelization, so you're trying to have all your cpus load data onto the gpu at the same time, but there's only one bus to connect between the CPU and gpu so that's not really a type of operation that would lead to speed improvements and so there's no point in the software supporting that type of computation. Are all your signals the same length? You might want to load all your signals into an array in a loop, then push that array to the gpu and take the fft along a dimension of the array.
Assuming all the files have the same dimensionality, you can use a for loop to step through each file and store the results into a 3D matrix.
Thank you, i'll look into that.
hmm, how about if you use tic at the start of the loop, toc before the pause, en use the T=toc ; pause(0.1-T) to wait a bit less,depending on how long the rest took :). But moreover, clean up your loop. that is; move everything that needs to be called only once outside of the loop (homework, so figure it out yourself ;) (may i recommend trial and error?)). Also, your plotting seems to be weird, you're adding whole lineplots from the first point ot the n'th to the ploth each iteration, LEAVING the original one. after N iterations, N plots are present in your plot, while only the last would suffice. There are sollutions to this. have fun ;) :P 
The link to your code doesn't work. It works best of you update the xdata and ydata with set.
That's strange it's working for me. 
Thanks I hadn't come across tic toc. I'm guessing grid and axis limits can be set outside the loop. I did originally have animatedline instead of a plot in a loop but I stopped when I couldn't figure out timing.
No, you don't need loops. I think you can get some ideas from this thread: [https://www.reddit.com/r/matlab/comments/5bj67z/tokenizer/](https://www.reddit.com/r/matlab/comments/5bj67z/tokenizer/)
More robust approach, yes
Thank you for this information. Removing the parfor and using just a for loop, I am still receiving the error, however the code looks a bit different index = ToF_FFT_indexSum(directory,f_span,dt,freq); for m = 1:10 sig = zeros(length(zspace),length(xspace),75000); for j = 1:length(zspace); for i = 1:length(xspace); R = ['R' num2str(-72000+4000*(i-1))]; Z = ['Z' num2str(-4000-4000*(j-1))]; file = [directory R Z 'Theta0Channel 4.dat']; fid = fopen(file,'r','b'); fseek(fid,8*(m-1)*7500,'bof'); sig(j,i,:) = fread(fid,75000,'double'); fclose(fid); sig = gpuArray(sig); sampleFreq = 1/dt; sampleTime = 1/sampleFreq; numSamples = 2^nextpow2(length(sig)); transformedSignal = fft( sig ); powerSpectrum = transformedSignal .* conj(transformedSignal) ./ numSamples; f = sampleFreq/2 * linspace( 0, 1, numSamples/2 + 1 ); sig_fft = real(powerSpectrum(1:numSamples/2+1)); sigAmp(j,i) = sig_fft(index(3)); end end ampInterp = interp2(G,H,Amp,Gq,Hq,'cubic'); contourf(Gq(1,:)',Hq(:,1),ampInterp,160,'edgecolor','none'); colormap jet colorbar('FontWeight','bold') title('Bz VLF','FontWeight','bold'); xlabel('X position [mm]','FontWeight','bold'); ylabel('Z position [mm]','FontWeight','bold'); daspect([2 2 2]) mTextBox = uicontrol('style','text'); Time = [num2str((m-1)*3e-6,'%10.2e'), ' [s]'] ; set(mTextBox,'String',Time,'Position',[320 730 100 20],'fontsize',12,'BackgroundColor','w'); set(gca, 'nextplot', 'replacechildren','fontsize', 12,'FontWeight','bold'); caxis manual; caxis([0 .004]); set(gcf,'Color','w'); set(gcf,'Renderer','painters') set(gcf,'Renderer','zbuffer') M(m) = getframe(gcf); end When using a loop with a fixed file, it works just fine. When I am opening and closing multiple files, this is not the case.
They both appear to be in dB actually. Thanks for your reply. edit: actually you are correct, freqs() is in linear amplitude
If anyone is interested and stumbles upon this post somehow: Given "b" and "a" coefficient vectors, the only differences between "bode(b,a)" and "freqs(b,a)" is that bode() appears to use more points (and is therefore higher resolution) by default, bode() is in dB while freqs() is linear amplitude, and bode() unwraps phase while freqs() does not. They also may have different axis limits.
I can't see your code, but if you have constantly updating values and/or a loop of some sort, I would suggest looking into the drawnow function
Sounds like you want Matlab movies. Replace the pause() with M(i) = getframe(gcf) to get the figure Then add: figure movie(M) after the for loop. And you could export to video with the VideoWriter class.
Try using a while loop instead. 
If you're going to half-ass your post asking for help and not provide any details, you'll find it unlikely people will go out of their way to help you.
What exponentia means is he can't run this code. You can do it bc you have a and b in your workspace. If you use "clear all", and then try to run the code you shared you'll see the same error. Secondly he's making a good point about using set. set is a function to change properties of object. In this case the object should be the plot, which you can access by using the first return value of the "plot" function, which is called a function handle. With "set(h,'XData',a(1:n),'YData',b(1:n))" you can update the data that underlies the plot you'r seeing, and with a subsequent drawnow you can update the view to represent the current data underlying the plot. Works perfectly, and is more efficient than plot, but imho a bit to complicated and unnecessary for this specific application.
Pick up a textbook and get at it. There's tons of resource material out there. 
Read the User's Guide first Edit: StackExchange is a great resource to search when you are trying to do something new or unfamiliar.
No problem man! I actually used this code to help another guy with his problem, which you can see [here](https://m.reddit.com/r/matlab/comments/5c4n8b/suggestions_for_an_optimisation_problem/). And I ended up [updating the code](http://pastebin.com/AB62qHCF) to include a better convergence system, so run this updated code and you should be good to go! Note I cut out the bottom half since so you'll have to add that part back in after the looping. 
no. this is harder than it needs to be. dir supports globbing. OP can simply do vtk_files = dir('/path/to/folder/*.vtk'); this will return a struct with each vtk file 
Thanks. The link to the code returns "This page is no longer available. It has either expired, been removed by its creator, or removed by one of the Pastebin staff." But maybe it's because I'm on my phone.
Doesn't your school have a required intro to programming (matlab) course? 
Yes, but it hasn't gone as in depth as I hoped. It has helped but it was a more general course, not specifically aerospace.
The specifics of Matlab for aerospace comes from the math behind it not so much particular parts of the language. I was the Matlab guy when I was in school. I essentially did nothing but Matlab for a year in grad school for my thesis. In my opinion there are 3 things you really need to nail down to be able to use Matlab effectively. You need to know that plotting functions front to back and you'll most likely have to learn this from some online tutorials or really just experimenting. You'll want an OK programming background, our program allowed for a few technical electives which I would recommend taking some CS courses to learn how to program not necessarily program Matlab. Finally just really learn the math that goes into the equations your working with. The other big plus with Matlab is how easy it is to perform some high level math operations, so learn the math and often times you can just search Matlab "your math operation here" and you'll get the documentation page. 
Hold a ruler up to the screen. 
Cleve Moler's Numerical Computing with Matlab is a must read. https://www.mathworks.com/moler/chapters.html
Oh. I guess I had the opposite. Oops!
[Answered!](https://i.gyazo.com/f6aa4c983d2371a161f7669679e5e081.png). &amp;nbsp; Didn't even need to create an empty vector and add things to it; just changed the values of the vector that was already there. 
You answered already, but yes.... the for loop is really a foreach loop. Every iteration sets the loop index variable to the next value in the input vector. This also means for i=1:10 fprintf ('%i ', i); i = i + 1; end Still prints 1 2 3 4 5 6 7 8 9 10 and not 1 3 5 7 9
Suggestion from a bit of an ignoramus, but have you tried using a smaller timestep?
Call yourself an ignoramus all you want, that worked Edit: Made it better, but still having some issues. 
You want to use `quiver`
Yep, this is the right answer. The RK4 method has a stability function, R(z), equal to the fourth order series expansion if exp(z) where z = h * lambda. For your SIR system calculate the Jacobian matrix and hence the eigenvalues for the equilibrium points. The eigenvalue with the largest real part is your lambda allowing you to determine the range of h for which |R(z)| &lt;= 1 (called the interval of absolute stability). 
/u/C0ncept8 see above
Interesting, but then why couldn't you do the entire calculation in a single step? I've always though every method has error, and smaller timesteps minimise this error. 2x 0.5s steps produce less error than a single 1 second step.
Okay, awesome got it to work! Thanks!
Here are some directions and example images for some clarity of assignment I'm working on. https://imgur.com/gallery/8wj18
I have no idea what I'm looking at, but its pretty cool - I'm an engineering student, but i don't think I'm anywhere near being able to do that sort of analysis on Matlab!
almost all analysis look complex if you don't know what you are looking at. I can probably plot some big ass graphs from some recent projects of mine and you'd think the same even though it's probably not that difficult. But yea I agree it looks pretty cool :)
It might be too obvious but if the two ways of processing are independent and you can spare the memory you could always run two instances of matlab at once
I want to, but I can't open more than one console, but I have seen people do what you say
Is that because of the license? I never had an issue with having two Matlabs open at the same time. At home as well as with network licenses at university 
For the lazy: function [position,isterminal,direction] = appleEventsFcn(t,y) position = y(1); % The value that we want to be zero isterminal = 1; % Halt integration direction = 0; % The zero can be approached from either direction [Link](https://au.mathworks.com/help/matlab/math/ode-event-location.html)
Okay thanks! Didn't know about this part of odeset :)
You should possibly look at doing the same calculation with matrices, rather than 3 nested for loops. Matlab is well optimised for doing matrix operations, I'm sure you'll find that it'll produce the same result in a fraction of the time. 
https://www.mathworks.com/help/dsp/ref/chirp.html
friend, your question is vaguely stated. i will try and parse your meaning... the reason you're getting the "inner elements" error when N != M is that you're applying a matrix multiplication to the result of the element-wise transforms ( log and sin ) on u and v. maybe you intended an element-wise matrix multiply? 
No offense, but this color scheme is p bad. [An old thread on the topic](https://www.reddit.com/r/matlab/comments/1jqk8t/you_should_never_use_the_default_colors_in_matlab/). I think that some sort of black-red-white or bronze color scheme would fit well since it's temperature that is depicted.
There's a third optional argument to the colon operator that indicates the step size and direction. 
I don't understand what you're doing with the "size" lines. 
MATLAB inherently treats things like vectors/matrices. If you want to do "element by element" operations, you have to use the `.` operator. That is, try `(pol_w)./(pol_x)`
Super sorry for the late reply! I wen't to see the professor the next day and apparently it was just a mistake on her side, so I passed. Im still astonished and really thankful of all the help given here!
Ohh, ok understood . Thank you :) 
You want to display the table values, or the box plot anova1() seems to output (never used this f'n). (Just watched a quick demo of anova1(), looks like both are a figure, table first, then boxplot). A brute force way would simply be to use copyobj() to copy either (or both) figure(s). You won't have a handle for either (made internally), so just use "gcf" as the handle argument. If you only want the table and not the boxplot, run "close gcf" first to close the boxplot and make the table the current figure. Once you've copied the object, I *think* you should be able to put it into a subplot... ..you may also try just getting the axes ("gca") if using gcf throws you too many problems.
You have created a 2x1 vector that represents the polar form of a complex number. Dividing one of these vectors by another will not accomplish what you want. I think it would be easier to work with the complex numbers as-is, do your additions and divisions and then if you need them in polar format convert them then. q = w/x+y/z; qp = Polar(q); If you wanted to do polar division with your polar format vectors you'd have to define a function to do so. pdivide = @(a,b)[a(1)/b(1) , a(2)-b(2)] You could define other polar format operator functions if you wanted to use your polar format vectors. Finally, I'd like to suggest you review what the `/` or [mrdivide](https://www.mathworks.com/help/matlab/ref/mrdivide.html) operator does and why you're getting a scalar out of your division operation. 
So lets suppose you have a matrix that looks like this 1 2 3 4 5 6 7 8 9 when looking at the middle element (5) the calculation should be dif=2+4+6+8-(4\*5) where 4 is the number of neighbours, so when looking at the top right element (3) the calculation should be dif= 2+6-(2\*3), or another example, looking at the middle right element (6) calculation being dif=3+5+9-(3\*6)
In particular I'm curious how to adjust se to fit any sized matrix, thank you
I had to work from your example because your code is not very readable. I'm sorry that I threw this code at you without explanation. In the mean time read about "2d convolution"... In essence the convolution of the matrix with something that looks like this: 0 1 0 1 0 1 0 1 0 just sum over the neighbors of the central pixel. Again, sorry for my lack of time.. It will work for any input and any size and will be very fast. Just change A to be you matrix. 
This might be obvious but the [fft function](https://de.mathworks.com/help/matlab/ref/fft.html) calculates the complex Fourier Transform of the signal and the [cceps function](https://de.mathworks.com/help/signal/ref/cceps.html) calculated the complex [Cepstrum](https://en.wikipedia.org/wiki/Cepstrum), which is the **inverse Fourier transform of the logarithm of the frequency spectrum**. It is essentially of convenient wrapper for ifft(log(abs(fft(signal))). Cepstral analysis simplifies the convolution of source signal with a filter to an addition and is used in speech processing and pitch tracking.
Yes, they are vectors of the same size. So what you are saying is that plot(receivedSignal(z==0),'g.') will put a green dot wherever receivedSignal and z are equal to zero, correct?
try something like this: Pos should be the number of zeros left of the integers. C=A C(A==0)=circshift(B,[0,pos])
awesome! Just what I was looking for! thanks
I really didn't either.
Thank you!
 A = [1,4,5,9,8]; randA = randi([1,length(A)], 1); randomNumber = A(randA) Generate a random number that is between 1 and the length of your array. Then retrieve that index from your original array. 
Got it. Thanks. Another question I have, I'm reading an image that is supposedly 615x410 size. But my matlab reads it as 410x615? ( as in shows in work space as a 410x615 double)
You want the transpose of what you have. Run the below as an example of how to take the transpose of an array. x = zeros(410,615) xTranspose = x'
This might work: rowmask = intmatrix(:,1) &lt;= 2000 &amp; intmatrix(:,2) &lt;= 2000; intcol1 = intmatrix(rowmask,1); intcol2 = intmatrix(rowmask,2); intmatrix = [intcol1; intcol2];
If you want it to plot receivedSignal where recievedSignal == 0 and z ==0, try this: plot(receivedSignal((receivedSignal == 0) + (z == 0) == 2, 'g.');
This may have already been solved, but if you want to randomize the order of a vector A without repeating elements, following would be useful, same concept could also apply to matrices: [~, RandomOrder]=sort(rand(numel(A),1)); B=A(RandomOrder)
thank you, thats great! I'll be sure to use this as it makes more sense to me and I think I'll have an easier time using this solution.
Can't see your code. But are your equations for the cone water tank correct? Have you modelled it as a cone?
Are you allowed to use ode45? If not I would suggest getting first order (rk1) to work and then focus on making it rk4. I have a feeling you might have to do 8+ steps with rk4 as it's not just velocity but acceleration as well
Not allowed to, has to be explicit RK4. Yeah, the trouble I have is using the state vector. I've found a code from the recesses of the internet the seems like a good example to follow. I'll close this if I do it.... If.... 
I feel like I'm missing something here, but in your `Derivatives `function, you never set `F_vec`, so that should be throwing you an error when you call it in line 27 of your code. Also, `Derivatives` is asking for the initial angle and initial velocity as inputs every time you call it, which means you have to type that in 4 times per loop. Have you copied/pasted your function incorrectly? It seems to just be lines 12-22 of your code. Also, it's best to show what happens when you run your code - the error MATLAB tells you would be helpful here.
Thanks for the feedback. I've written a different code that uses the 4 coupled equations of motion (no drag, so x'' is 0, I guess it's 3 equations of motion really), and it works, or at least produces a reasonable looking graph of the trajectory. My next step is to create a state vector containing the 4 equations of motion, so the RK4 loop is far simpler. This is the issue I have now, that I'm unsure how you change to the state vector exactly. The derivatives function was my attempt to follow the youtube video i was using, as it seems much cleaner and elegant to use a different file for a function. However, as I am still a Matlab novice, I had trouble understanding how to use it. My new code is here: http://pastebin.com/y06twVaM Thank you for helping
In MATLAB you can break up your code with `%%`s to create code sections. Then, you can have MATLAB run just that section. So it looks something like %% Comment about your code section code 1 section here %% Comment about your next section code 2 section here If you do this properly, your code sections will get highlighted in yellow, and your current highlighted section will be a brighter yellow. 
The shortcut in windows is ctrl+enter. I would try command+enter on the Mac and see if that works. 
Tried it, it runs all your lines even if you select only one. 
Problem solved! I was talking about 'evaluate selection', you can find it by selecting your line and then right-clicking. You can also see the keyboard shortcut when you do this. 
This intrigued me.... I started thinking about it. I started tackling it and this is as far as I got. There are 16 options for VBIN and PBIN combinations. I figured, if you can work out the number of rows that fall into each of the 16 categories, would be the first step. If you arrange these in a 4x4 matrix, this will show you the distribution of the data. From this you can probably work out what you need to extract. Here is the code: %% Make Data numberOfRows = 400; T = table(randi([1 4],numberOfRows,1),randi([1 4],numberOfRows,1)); T.Properties.VariableNames = {'PBIN','VBIN'}; %% Number of Each Element result = zeros(4,4); for P = 1:4 for V = 1:4 % find all PBIN that match idx = T.PBIN==P; % get the VBIN with matching PBIN matching = T.VBIN(idx); % find matching VBIN idx = matching==V; % get final that match both final = matching(idx); % assign number of elements to result result(P,V) = numel(final); end end r = array2table(result); r.Properties.VariableNames = {'P_1','P_2','P_3','P_4'}; r.Properties.RowNames = {'V_1','V_2','V_3','V_4'}; r
You can also just highlight a section of the code and hit F9 I believe (maybe F5 I can't recall exactly). That will output the result of the highlighted code. 
Thank you so much! You've been the only person on any forum to give me a helpful reply, haha. I see what you're doing with this: you're essentially creating a table of the counts of all possible combinations of PBIN and VBIN. When changing some of the variable names in the code to fit my own, the counts in the final table do do not sum up to the counts in the actual data. If you'd like I could send you the mat file. I just need to figure out if there's a way to find out how to draw 100 rows from the table where VBIN and PBIN have 25 instances each of values 1-4. I might be able to do some loop where it looks at the sum of VBIN and PBIN for 100 drawn rows (which should equal 250). Perhaps I'm not grasping how I can draw from the contingency table. Nonetheless, I *really* appreciate your input!
It's F9
It's not clear what you're asking. Bayesian statistics could be done in any programming language (or with pen and paper). Are you looking for a specific Bayesian model already implemented for you in Matlab? Are you looking for a tutorial on Bayesian statistics theory? Is there some R function that's "Bayesian" by your understanding that you just want to emulate?
In addition the the regular plot tool, there are a variety of others, including logarithmic and semi-logarithmic lots. For the diagram in your pic, instead of using the command plot(x,y); they used semilogx(x,y); [This MathWorks page](http://www.mathworks.com/help/matlab/creating_plots/figures-plots-and-graphs.html) explains all the different plot styles.
Presumably your input is a vector x = [..., -1, 0, 1, 2, ...]? I can't test, but I think in your statements you're comparing x to 9, but x is a row vector so can't be greater than 9. And similarly for the second statement. 
I would use logical indexing to first break up your vector. For example: x_big = x &gt; 9 x_small = x &lt; 0 and similar for your middle values. Then, you can evaluate each section independent. Or, you could use a for loop and check each value individually. 
I'm confused with what you want to do. What do you mean when you say "I have a numeric matrix that is 35040"? You have a vector which is of length 35040? Is it a 1D or 2D vector? If January is 1:31, why for January do you say 1:2975? I'm just not sure what you want to do. 
Just to add in case you run into it, Matlab sometimes loses the fact that you want semi-log when doing multiple plots with `hold on`. A fix for that is to then do: set(gca,'xscale','log') (where I use the backwards compatible `set` methods)
I do apologise, I will try an explain better. I have an array with dimensions: 35040 x 2, split as follows: DeciDays = file(:,1); TidalR = file(:,2); It is data for a year. What I meant was, between January and February there are 2975 rows, therefore: JanuaryDD = DeciDays(1:2975,1); JanuaryTR = TidalR(1:2975,2); Rather than stepping through this for the entire dataset, there must be a loop? But, as the amount of days in a month varies, there will not always be the same amount of rows between each month, correct? Is there a way around this? 
What's the error?
Your brackets are in different places for all the different calculations. For sum, factor^i is all being divided by 100. For Fs, only the i is being divided by 100 each time because it is inside the brackets
How do you know how many rows each month consists of? It's obviously not 1 row per day, seems close to be 10 rows per day, but not exactly. 
If you don't have a clue where to start, I'd recommend doing it the easy way, with a for loop. Find the length of your input vector, then create a for-loop that steps through each element of your input vector, then create `y` one element at a time (if you use `ii` as your loop index, then index `y` with `y(ii)`) and then your original code will work. 
thank you for the thoughtful resposne! I will be diving back in tonight!
Thank you for your response! 
I think I may have figured out a solution! If not, I'll definitely get back in touch. I really appreciate your help :)
the standard solution to this is using meshgrid to generated the datapoints, then evaluate the (vectorised!) function for those datapoints and use surf to plot. e.g.: fun = @(Xl,Yl) Xl.^2-2.*Yl ; [X,Y] = meshgrid(-5:0.1:5,-5:0,1:5); surf(X,Y,fun(X,Y)) *the above is untested, i'm not 100% sure about the input to meshgrid, or wether there are typos. otherwise it should be fine.
Well... For me it didn't hit exactly 0... But "sum" doesn't hit exactly 1. There's an error in the 5th or 6th decimal place; so essentially zero. If the suggestions in this thread don't some your issues, then perhaps it would be good to describe the problem you're trying to solve in general (outside of the code), and we can try to comment on your approach.
An alternative to fixed-sized chunks would be doubling the size each time you reach its limits. Potentially advantageous if you would need to add the fixed chunk many times.
When I first started doing this, I wanted to bring in the run numbers out of order and I wasn't aware of the dir command. So that's usually my go to way to define the filename. Instead of sprintf, we used the dir command to define the file names. X=dir ('./') makes a structure of all files in the directory. Since you did ('*.atf') it only took files that end in ".atf" (I assume you know this). Anyways, your variable dinfo is a structure that describes all those files. If you type dinfo you'll see all the field names. Name, filetype, filesize, something along those lines. So when I wanted the filename, I just called dinfo(i).name. That takes the ith file and gives you the name (as a string). Tldr, I got the string from the structure dinfo instead of making a new one with sprintf
OK thanks, makes sense. Thanks for all the help man I really appreciate it. 
I second this. They're also unique and findable with isnan(), which is important since it's usually plausible that the operations used to fill the matrix could produce an actual zero, not just a pre-allocated filler zero.
I'm a little confused by your question. Does your function take only 1 vector (a1, a2, a3) and return the same (o1, o2, o3) every time? Or, for each fixed input parameters (a1, a2, a3) is the output a 3 dimensional random variable whose distribution you want to characterize? Aka is your objective function deterministic or probabilistic?
Since you say you're new to Matlab, I'll tell you the greatest command anyone ever showed me. uiimport. Type it into the command line. Then it opens up any kind of data file (csv, xls, dat, txt, or any other ascii file, probably you're atf file), and it looks kinda like an excel spreadsheet. Then click on generate function. Now you have a function that will take out exactly what you selected. Here's why this is so useful. When I started my current job, I was tasked with analyzing 50 or so test runs. Each one of them was formatted the same way. Now, I needed to know the test conditions, I could set up a loop. Define the filename with dir or an sprintf (as I did for you originally) and then take out just what I needed from every file. I had one function for Mach number, one for pressure, one for temperature, and then one that would pull out a specific measurement for me. I want to know what gauge 85 did on every single run? Done. Oh, now you want gauge 106? Done. If they're always on the same line/column, it will work. Obviously if it's formatted different it gets complicated, but there are ways around that. 
I just found a fix to my own problem. It worked if I created my own function handle and called that directly rather than attempting to create a function handle implicitly in the uicontrol function.
Exactly what I wanted! I'll implement this and see what happens. I'll try Lagrangian diffusion to simulate accretion disk. 
I would recommend moving your c++ code in MEX function: https://www.mathworks.com/help/matlab/write-cc-mex-files.html
For posterity, can you post your fixed code?
This may actually be very helpful.... I am doing something similar to what you mentioned actually. I am recording the electrical activity of neurons and the .atf files are exactly what you mentioned. Data with different variables on columns (half-length of action potential, size, frequency, etc). In the end I want to extract all the different columns from all the different files and combine them. So ideally I would have one matrix for each variable from all the files combined. I'll will look into it, thanks! Also would you mind if I PM you in the future in case I can't figure something out? You were really helpful and if you have the time I would appreciate any help I can get. 
That was exactly my issue. Thanks!
That did the trick. Thanks!
 polyval 
It's [split](https://www.mathworks.com/help/matlab/ref/split.html) in MATLAB too. I'd try the following 1. Get the data 2. Split it 3. Find the index of the string array where strlength() == 4 4. Set A(index) = string('****') Some of the string functions are new in 2016b. You can do virtually the same process with char arrays, but you'll probably need to use a cell array to hold the split strings. 
Sure. Feel free. 
Can confirm
Your question has been removed, but don't worry, it's easy to get it back. Please [read our rules for submitting homework questions](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/) make the necessary changes and then reply back to this post once you've made the necessary changes. 
I think it would be [1 -1 1] Coefficients in decreasing orders of x
Yes, definitely. 
...Are you a TAMU student? We're doing this in ENGR 111 right now. :)
Howdy!
Thanks.
ah thank you it have changed it to 1:length(G), however i just realised i have misread the question and it is actually the min i am supposed to find, would it be the same if i changed it to if G(point) &lt; minimum ? and yeah im not allowed to use the max function onl y loops
Please share your updated code, since the code you have posted won't run, it's hard for us to know what you did incorrectly. Please either format your code using four spaces in front of each new line, or share it on pastebin. 
More Appropriate Title: "*Rough* Gravity Wave ~~Approximation~~ Visualization" Code: M = 401; N = 401; f = zeros(M,N,3); absorb = zeros(M,N); G = .01; M1= 1; M2 = 1; a = zeros(M,N); az = 45; el = 45; dx = 2/(M-1); x = -1:dx:1; y = x; [X,Y] = meshgrid(x,y); c = 1; dt = 0.125*dx/c; %explicit stable time step %compute absorption for i = 2:M-1 for j = 2:N-1 r = ((x(i))^2+y(j)^2)^.5; if (r &lt; .8) absorb(i,j) = 1; else n = 0.045; absorb(i,j) = 0.8^n/r^n; end end end t = 0;tspan = 10; k = 0; for k = 1:tspan/dt %FDM wave equation i = 2:M-1; j = 2:N-1; f(i,j,3) = (dt)^2*((c)^2*(f(i,j-1,2)-2*f(i,j,2)+f(i,j+1,2))/dx^2+... (c)^2*(f(i+1,j,2)-2*f(i,j,2)+f(i-1,j,2))/dx^2)+... 2*f(i,j,2)-f(i,j,1); t = t + dt; a = a*0; radius = 0.025; omega = 4; %positioning newtonian BlackHoles xp = radius*sin(2*pi*omega*t); yp = radius*cos(2*pi*omega*t); %assigning gravitational potential feild pot = G*M1./((xp-X).^2 + ((yp-Y).^2)).^.5 + G*M2./((-xp-X).^2 + (-yp-Y).^2).^.5; f(:,:,1:3) = f(:,:,1:3).*absorb; % near wall wave absorption f(:,:,1:2) = f(:,:,2:3); %Back Store %imposing potential on a wave feild a(pot&gt;c^2) = -c^2; m1 = f(:,:,1); m1(a~=0) = -c^2; f(:,:,1) = m1; m1 = f(:,:,2); m1(a~=0) = -c^2; f(:,:,2) = m1; fprintf('%i\t\t',k); if mod(k,10)==0 %jacobi Smoothing i = 2:M-1; j = 2:N-1; f(i,j,2) = 0.25*(f(i,j-1,2) + f(i,j+1,2) + ... f(i+1,j,2)+f(i-1,j,2)); f(i,j,1) = 0.25*(f(i,j-1,1) + f(i,j+1,1) + ... f(i+1,j,1)+f(i-1,j,1)); %plot h = surf(X,Y,f(:,:,3)','linestyle','none');caxis([-c^2 0]); axis([x(1) x(end) y(1) y(end) -1.1*c^2 0.1*c^2]); camproj('perspective') shading interp lightangle(-45,30) h.FaceLighting = 'gouraud'; h.AmbientStrength = 0.3; h.DiffuseStrength = 0.8; h.SpecularStrength = 0.9; h.SpecularExponent = 25; h.BackFaceLighting = 'lit'; set(gca,'Zdir','reverse') zlabel('Gravitational Potential'); title(['t = ' num2str(t,'%.4f') ' &amp; |v| = ' num2str(radius*omega*2*pi/c,'%.2f') 'c']); view([az el]); drawnow; % writeVideo(vid,getframe(gcf)); fprintf('\n'); [az, el] = view; end end %code by u/ansariddle
Not bad, I like it
Which text? There should be options in preferences to change the editor and command window font size. You can adjust the font size of any labels on your plots with `set()`.
Text for workspace, toolbars like home, editor, etc, and file directory
The editor can definitely be fixed via preferences, though I'm not sure exactly where it is. Not sure about the file directory or the toolbars, if those are adjustable I'm guessing it will be through the window manager or something like that. A quick, dirty, ugly fix is to just adjust your screen resolution when you use Matlab. That will at least let you look through the preferences for a way to fix it more easily.
Well what have you tried and what didn't work? Can't read in a string? Can't convert? Not to sound rude but did you google the different parts of your problem? One of MATLABs greatest strengths is documentation.
Looks like you are well on your way.
Cheers, bud! Code worked! The code you provided provided two extra rows giving me this matrix 0 0.0416 0.0831 0.1247 0.1662 0.2078 0 0.0416 0.0623 0.0727 0.0779 0 0 0.0416 0.0623 0.0727 0 0 0 0.0416 0.0623 0 0 0 0 0.0416 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 but then I just added Theta(n:n+1,:) = [] to remove the extra rows giving me this matrix: 0 0.0416 0.0831 0.1247 0.1662 0.2078 0 0.0416 0.0623 0.0727 0.0779 0 0 0.0416 0.0623 0.0727 0 0 0 0.0416 0.0623 0 0 0 0 0.0416 0 0 0 0 Thanks again!
Here is a way that I think can scale well: % create a matrix that randomly asssigns 2 different values (0 and 1) M = randi([0, 1], 10, 10) % now reassign the 1 to 255 M(M == 1) = 255; % if you need 3 values: 0, 72, 255: M = randi([0 2], 10, 10) M(M == 1) = 72; M(M == 2) = 255; 
First of all, no - read the sidebar Second - I would hope no one would randomly download a file off of some shady looking site, and not even have information on what the file is. 
No this subreddit isn't a paid, or even unpaid, tutoring service. You have to atleast make an attempt and let us know where you are getting stuck or confused. Try to ask a specific question. Not "do my homework for me" 
Can you give us a little more to work with? What outputs are you expecting? What is wrong with them? Are you getting error messages?
+Its input should be: freqfilter([1 -2],[1],[3 2 1 0 1]) and desired output should be 3 -4 -3 -2 1 im not getting any error with the code. its running but the output is 1.0000 -4.0000 -3.0000 -2.0000 1.0000 as you can see, its only on the first element that is wrong. where did I go wrong?
Computers intended for use as servers often have processors that are slower, but more durable and also more able to do many things at once. MatLab should work fine with Windows Server. It's much more likely that, as the other comments suggest, the pc running Windows Server is probably slower.
Next time please give thread an informative title instead of generic 'Help please' shit
The edges (basically just the bins for the histograms) in this case are generated from the range of drainage areas within the flow accumulation grid you provide to the slope area tool, so the negative lat lon values are not the issue. If you have not reprojected the DEM from a geographic coordinate system (i.e. coordinates are in lat-lon) to a projected coordinate system (e.g. utm or other transverse mercator projection with coordinates in meters) that might be leading to the problems (or it might lead to problems down the road even if you get past your histc problem). If you have not reprojected the DEM, then the drainage areas will be in degrees, so I'm not sure how that will work in the code when it generates the edges for the histograms. More importantly, fitting a relation to slope-area data to find a best fit concavity value when the area is in degrees^2 might give you weird results. Maybe with the log transform of the data it would work out, but slope-area fits are almost always done with areas in m^2.
Yes
Shouldn't even need a for loop, Matlab is optimized for matrix calculation so a better option would be: g = f([1:100]); Also it's good practice to not count with *i* in Matlab since it's reserved for complex numbers. 
*shudders with excitement*
You need to turn x and v into matrices. Currently they are only single value variables that keep the most recent calculation.
What does your desired matrix look like? You need to have a line that sets your boundary conditions. Like A(1,:)=0 etc.
 A = zeros(N*M); This creates a 256*256 matrix, you probably want: A = zeros(N,M); Could you elaborate what the final matrix is supposed to look like, or what the PDE is you are trying to solve?
plot(x,v) in your code is only passed two values x and v. In order to plot all values, you could do two things: ----------- **Option 1:** Turn x and v into arrays of values, so plot() actually has all values. So instead of overwriting your values for x and v, you append the new values to the already existing ones. Your code might look like this: v=0; x=[]; for dt=[0:0.1:14] x=[x, dt]; v=[v, v(end)+(horizaccel(dt)/10)]; end plot(x,v) Note, that for this to work you must declare x and v before you try to append new values to them. Also since v now contains multiple values you must account for that in your calculation, v(end) references the value of v with the highest index. ----------- **Option 2:** Plot the graph incrementally, while the loop is being executed. Since the plot() command with its normal behaviour erases previously plotted data, you need to change that, so the previous plots will be kept. This command will do that: hold on; In order to see the plot grow, you need to move the plot() command inside the loop and pause for a short time (the time you pause can be changed to whatever you prefer): pause(0.0001) Finally, your code might look like this: v=0; hold on; for dt=[0:0.1:14] x=dt; v=v+(horizaccel(dt)/10); plot(x,v) pause(0.0001); end ------------- Now you could be really fancy and combine the two options and get a growing line instead of growing dots. 
You have the matrix size right for 2D Poisson's, although setting up an iterative method would be much more efficient. Implement the boundary conditions through the RHS of the equation. Making it Ax=h^2 f - b (where h=dy=dx) Subtract off the boundary conditions for the elements of the RHS at the indexes that correspond to the boundary. In example if the left boundary is 100: 4U11 - U21 - U01 - U10 - U12 = h^2 f 4U11 - U21 - 0 - 100 - U12 = h^2 f 4U11 - U21 - 0 - 100 - U12 = h^2 f + 0 +100 (I may have messed up my directions, it depends on the index, but the point stands. Drawing pictures is helpful for mapping between) You might want to look into kron for making matrices like this. Its faster and easier to read than for loops.
Quick help: write informative titles
OK, this is right up my alley. This should significantly help you out: https://en.wikipedia.org/wiki/Discrete_Poisson_equation#On_a_two-dimensional_rectangular_grid Do you have to use the matrix method? There is another way of solving this using iterations with less than 17 lines of code and but the computation time will go up however it will still be less than a second. Assuming you are trying to solve d^2 (phi) = f what you can do is create `phi = zeros(M,N)` array. Put in all the boundary values: `phi(:,N) = 0 %top being 0` and such. Then run a simple Jacobi Iteration: iteration = 500; for k = 1:iteration j = 2:N-1; i = 2:M-1; phi(i,j) = .25*( phi(i,j-1) + phi(i,j+1) + ... phi(i+1,j) + phi(i-1,j) ) - 1/4*f(i,j)*dx^2; %update inner points end 
That link helps a lot. I guess what's really tripping me up is there's two sets of dependent variables (1st and 2nd angle) instead of just one like in the examples. Is valid to do a substitution to the effect of theta1=y1, theta2=y2, thetadot1=y3=dy1/dt, thetadot2=y4=dy2/dt...etc? I guess beyond that I'm having trouble visualizing how to arrange the matrices in such a way that I can do a simple backslash command to find theta1, thetadot1, theta2, and thetadot2 (the y vector shown on the second page).
Plotting including 3d. Varargin/varargout. Cell arrays, structures, fields. Good technique: don't use i for indexing. Use good explicit variable names, etc.. Basic array indexing tricks like 'end'.
Should have included plotting!!! Will definitely add 3D to the list. Best practices is a topic I'm going to try to cover when covering new topics, so when I introduce for loops I'll discuss why i isn't a good index..... Thanks for these!
Plotting, plotting, plotting. And cells. I commend you, let us know when you finish it!
why not i for indexing?
I would include how to use handles and subplots to explicitly define axes and what is plotted where.
Oh I'll surely be posting updates!!
Logical indexing should def be covered. For 2 reasons: first, it is very useful. Second, since it isn't seen in other languages, and can be confusing if you don't know about it, it should be covered here so they know what's happening
I think I understand what you're saying. I didn't end up actually using y5 and y6 anywhere within the equations. When I ran a quick script through matlab along with some initial conditions, the system did appear to give me sensible results. Is it correct to say that the y* vector that I solved for using A\b is simply the equations describing the thetadoubledots and thetadots(acceleration and velocity)? At that point I should be able to feed that vector to the rest of my program which will calculate position using other numerical methods.
[Here's a bit from what I've written so far](http://i.imgur.com/sjPGuaP.png). Do you think does a fair enough job or would more/less detail be desired?
Aha! another element that I'd wanted to add. I was thinking of compiling a list of the most common errors that I've seen, but I'll be sure to add a section on common causes for errors..... In line I've done something [like this.](http://i.imgur.com/hrC99oP.png) Thoughts? 
I think that this will be thoroughly covered under imaging in masking, I plan to essentially use masking as the doorway to studying logical indexing because images are a great way to understand what's happening because you can SEE the problem. 
&gt; Is it correct to say that the y* vector that I solved for using A\b is simply the equations describing the thetadoubledots and thetadots(acceleration and velocity)? At that point I should be able to feed that vector to the rest of my program which will calculate position using other numerical methods. Yes, *but* you should sit with this until it's *abundantly* clear. y is the state, which contains the angles and angular rates, YOU DEFINED IT that way. y\* is just the derivative of that state, and A\b is an equation that you found for that derivative. Your Euler/RK functions don't care about position/velocity/acceleration/etc, they just want to know what the derivative of the state is. You tell them what the derivative is with some function (in this case, A\b, but it doesn't even have to be linear). Then they integrate the derivative to spit out the state as a function of time. *In this case*, with the state you defined, your statement above is correct. Now, as long as you're working with physical systems like this one, the thinking you're using will apply and work well for you. But if you go to more abstract systems things like position/acceleration/velocity are going to start tripping you up. An even more general statement than the one I made above would be: **Your Euler/RK functions don't care about position/velocity/acceleration/etc, they just want to know what the derivative of the *function* is. Then they integrate the derivative to spit out the *function* over of the variable which the derivative was taken with respect to.** In your case, the function is a vector of positions and velocities.
I definitely know that feeling. Just wait until you take a controls course and you suddenly find yourself asking "Wait, why do I care when the Bode magnitude crosses 0?" and the chain of reasoning is six steps long, the first step of which you haven't concerned yourself with in the last two months. Glad we got you sorted though!
For small arrays, this works fine--but for large numbers of points, it will take significant time. It's far better to vectorize operations; even for small arrays, it's a good habit and makes cleaner code--even when looping over the values. x = [0:0.1:14]; v = cumsum(horizaccel(x) / 10); plot(x, v) If `horizaccel` is a function that can't be vectorized, you can either preallocate `v` and loop over it or use `arrayfun` to assign it. When you expand an array inside of a loop, Matlab reallocates memory for the entire array each pass--enough for 1 double the first pass, 2 doubles the second...and N-doubles the Nth time. For small arrays, the performance hit isn't very noticeable; once the array grows very large, though, the allocation time and memory fragmentation is significant. 
Most of what is out there sucks in terms of the free pdfs. I give my students a textbook that is decent enough by attaway, though it is awful for best practices.
Could you give an example of "crashing gracefully"? I'm not quite sure what you mean.
Vectorizing code is tricky...not the panacea some people sometimes say :)
Unless I'm mis-reading this, you're talking about debugging via the error messages from when you try to run the code. That absolutely must be taught as well, but what I'm talking about is the yellow/red highlights in the code editor itself. Things like if you type inv(A)*b it will underline it with yellow and say "calculating the inverse is slow and imprecise. Replace with A/b" (I don't remember exactly what it says, but something like that). While often times ignoring the messages don't impact your code too much, if you make a point to always fix them, then seeing the messages warns you "something probably isn't right." For instance, the one that saves me a bunch is when I have a yellow underline and it says "variable is defined but not used" and I realize that I didn't use the right variable somewhere- without that warning my code would still run fine, but it would give the wrong result. Those are, of course, the hardest cases to debug. 
Depends on your task, but generally the things that are referred to here: https://www.mathworks.com/help/matlab/matlab_env/recovering-data-after-an-abnormal-termination.html It was a while ago, but I had a project that crashed occasionally (there were a lot of runtime parameters so it was hard to trace the cause). And since it took around 30min to run, saving things along the way was useful.
The trouble here is that many non-MATLAB texts use i as an index and so when working a simple linalg problem they fall to habit
I'm glad to say I've never modified a plot in the GUI, hope to keep that streak up.
When you're used to vectorizing, it generally isn't tricky--it's actually expressive, enabling clear but compact code. There are some instances where it can be tricky (lhs indexing the cumsum of a negative find of a diff, for example), but those situations are relatively rare. 
Profiling functions is easy and amazingly informative, that would have been helpful when I was learning!
&gt;Computers intended for use as servers often have processors that are slower, but more durable and also more able to do many things at once. That's right, but not exactly. Servers generally have more, slower cores, which works well for parallel tasks. Unless he's using some MatLab functions that can take advantage of many slow cores, then he'd notice a slowdown.
You're welcome :)
Duuuude, don't overwrite a basic build in function (log in this case), i'll get you into trouble when you don't expect it:P. Otherwise, you said 1:size(data.ppn_wordpool,2) as an indexing input ot log. What you need there is only a ":", meaning all the data from that dimension. analysis.analysis_c = log(([data.cLength_pool] == 0),:); futhermore i would inline the realocate and the calculations: for iColumn = 1:size(data.ppn_wordpool,2) result.logc(:,iColumn) = sum( log(([data.cLength_pool] == 0),iColumn)); (...) end And then drop the loop: result.logc(:,iColumn) = sum( log(([data.cLength_pool] == 0),:),1); %where this 1 might have to be a 2, check it. aaaand, merge this with the last line percent_correct.logc = sum( log(([data.cLength_pool] == 0),:),1)/size(data.ppn_wordpool,2)*100; The resulting code would be, the for lood where you populate the log matrix (pleaase rename), and then 3 lines with the calculations. 
How to solve problems! Not just debugging but how to use the documentation and how to ask questions on forums! How many times do you see people ask questions where they post an unreadable section of code with vague questions like "why does this not work?". The coursera course of R for Statistical Programming - https://www.coursera.org/learn/r-programming - has a good little section on how to ask questions if I recall, would be a good pointer. Likewise, keep updated, I'm currently making something similar for students at my place! edit: and heavy reference to http://www.datatool.com/downloads/MatlabStyle2%20book.pdf 
Yes, that is what I meant. For exactly this reason, when I finally convinced my boss to spring for a new workstation, I went for a dual socket Xeon system (8x cores per socket) instead of a higher clock speed i7 system... It's been pretty bitchin', in comparison to the lame quad-core I was stuck on before. XD
I didn't mean it is tricky in that sense (though it can be for sure). I meant it isn't a universal good and is actually tricky to know when it will actually speed up code. Couple of SO threads about this. Also it can make code more or less readable depending on context. I tend to not go over it with noobs. I save it for more advanced students.
Stormy's is the best I've found so far --for the true noobs- -and I have looked a lot. Its main flaws are luckily mostly easy to fix by telling them about coding standards, good naming conventions, etc
Yes, doc and help are your friend
here's topics I would brush up on if I was doing a technical MATLAB interview: * cell array indexing (cells of cells, etc) * anonymous functions * nested functions * variable scope / workspaces (esp. w/ anon. and nested functions) * OOP classdef syntax * know your way around the documentation, if you don't know an answer, at least show that you can find it quickly * vectorization 
+ 
Your thread title has no explicit content for one . I typically ignore Help Me threads.
Your question is a bit unclear, so I'm going to assume you have everything you want already in variables, and you're asking how to save them to a new text file. # input_filename = graph, from your example # input_text = text from graph.txt, from yoru example # function_name = 3, from your example func = str2func(function_name); output_text = func(input_text); output_filename = sprintf('%s_%s.txt', input_filename, function_name); new_file = fopen(output_filename); fprintf(new_file, '%s\n', output_text); fclose(new_file); Or something similar. 
So just to clarify, i'm doing a project that's based on the Dijkstra algorithm, my function receives a .txt file with the nodes and weights, and after the function runs and returns all the shortest paths i want it to create a new .txt file with the name of the original file and with the node that the user chose added to it. EG: User chooses "Dijkstra.txt" and node 3, new file is named "Diskstra_3.txt" 
By the way, when I am using the Matlab on the server the CPU Usage under 7% even the Ram less than 13%. PS : The server has; [Dual CPU] Intel Xeon E5-2609 v4 @ 1.70GHz 8x cores each = 16cores, with a 64GB ram. 
If I'm understanding you correctly, you want to use [logical indexing](http://blogs.mathworks.com/steve/2008/01/28/logical-indexing/). As an example, say you want all the X's and Y's when your time is equal to 1. Let's say your times are in a vector named `time` and your X's are the first column of array `A` and your Y's are in the second. Then, you say: ind_1 = time == 1; % this creates an array of 0's and 1's X2 = A(ind_1,1); % this uses the array above to select certain rows Y2 = A(ind_1,2);
Thank you very much! Just a quick thing, imagine that the file is already named something.txt, how do o avoiding having ".txt" twice in the name? For example, if the file is names graph.txt then with your part of the function (which again I'm very thankful for) is named graph.txt_1.txt, is this avoidable?
Your question has been removed, but don't worry, it's easy to get it back again. [Please read our rules for asking homework questions](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/) and then reply back to this message when you've made the changes and I'll re-instate your post. 
Forgot to ask.. What kind of code is it? Which functions are taking the most time?
Thank you for the help! Is this the simplest way to do this? How would I shade the area between the two confidence lines as shown in the image I posted!
I really don't have experience with this, only compiled .exe, but there seems to be info here: https://beagle.whoi.edu/redmine/projects/ibt/wiki/Calling_Matlab_from_the_Linux_command-line
Once you have your CI's, I've always found it easier to simply plot the CI's with my data as lines, export to eps, and fill the patch in Illustrator or another vector graphics program.
https://lmgtfy.com/?q=Run+External+Commands+matlab
apparently the Mathworks recommendation is to freely use i or j, and to use 1i or 1j for imaginary numbers which cannot be overwritten.
Hint 1: if you want replies faster provide descriptive title not this generic Help Me stuff.
Alright I'll remember that for next time!
Thank you, but our two inputs do exactly the same. @model_colloc is just syntactic sugar for @(par) model_colloc(par). par0 is recognized as initial value but for some reason model_colloc is just evaluated at nothing but the initial value and gets stuck in some kind of endless loop.
Are i and j both 1x2 arrays? Or you're trying to make a single input that is a 1x2 array [i j]?
Sorry, I should've been more specific, it is a single input that is a 1x2 array [i j]. 
I didn't know this!! This is actually super refreshing to hear
You appear to have the outline of the coast. Have you tried using `hold on` and throwing an opaque `patch()` over the region outside of the coast? You can use the `axis` to get the limits of the plot to form the rest of the polygon.
The relevant search term, for the benefit of anyone who comes across this in the future, is "logical indexing"
Wow I didn't think the solution would be something so simple, thanks so much you're a lifesaver! 
After initially jumping to more complicated ideas before this hit me, I literally thought to myself: "Damn, that was actually pretty simple. I wonder if I would have come up with that if it had been *my* project."
Thanks for the tips, bud! I followed your steps involved and saw that my problem is just happening when j=3 i=2:num Unfortunately, not able to figure the source in the code. I was having the same problem with the Y variable in the original statement and following your steps I was able to see it was just solely because the problem in the X matrix. 
In addition to just trying your failing line on the command line, I would put a return condition when your i/j are when they fail, and just before print out every term in your equation, see what they are. Not sure if it'd help, but it couldn't hurt
Which means this line produces the error: x(j,i) = (y(j-1,i+1)-y(j,i-1)+dydxKm(j,i-1)*x(j,i-1)-dydxKp(j,i)*x(j-1,i+1))/(dydxKm(j,i-1)-dydxKp(j,i)); and producing nans with formula like this is usually the result of 0/0 (which in your case are complex, hence nan + nani) did you check if (given j =3 and i = 2 dydxKm(j,i-1) is unequal to dydxKp(j,i) and (y(j-1,i+1)-y(j,i-1)+dydxKm(j,i-1)*x(j,i-1)-dydxKp(j,i)*x(j-1,i+1)) is not equal to 0? if both are, you get a nan, which propagates (bc you use x(j-1) (and nan * 4 +1 = nan) also, you are checking x+1 in a loop populating x. The preceding code might make this a decent way of doing stuff, but it might also be a bug. 
Near [Sagittarius-A](https://en.wikipedia.org/wiki/Sagittarius_A*) simulation using [Einstein–Infeld–Hoffmann equations](https://en.wikipedia.org/wiki/Einstein%E2%80%93Infeld%E2%80%93Hoffmann_equations) approximation. Code: `trajectory.m` function [] = trajectory() hrToSec = 3600; mToAU = 6.68459e-12; G=6.67*10^-11; c = 299792458; M = 1.989e30*4.1e6; % Mass of BlackHole: 4.1 million M☉ tspan=[0 hrToSec*15.99]; % set time interval (do not increase tspan because trajectory reaches near singularity) z0=[1e12,0,0,0.403*sqrt(G*M/1e12)];% set initial conditions [px0 py0 vx0 vy0] [t,z]=ode45(@orbit,tspan,z0,odeset('RelTol',1e-6)); subplot(3,2,[3 5]); plot(mToAU*z(:,1),mToAU*z(:,2));title('Trajectory') hold on; th = linspace(0,2*pi,100); plot(3*mToAU*1.18167108e10*sin(th),3*mToAU*1.18167108e10*cos(th)) plot(mToAU*1.18167108e10*sin(th),mToAU*1.18167108e10*cos(th)) hold off; axis equal ;xlabel('AU'); ylabel('AU'); grid minor subplot(3,2,[1 2]); semilogy(t/hrToSec,(mToAU*(z(:,1).^2+z(:,2).^2).^.5),t/hrToSec,... t*0+3*mToAU*1.18167108e10,t/hrToSec,t*0+1*mToAU*1.18167108e10); legend('Trajectory','Innermost stable circular orbit (ISCO)','Event Horizon',... 'Location','SouthWestOutside');title('Post Newtonian Approximation of General Relativity - Near Blackhole Trajectory'); xlabel('hours'); ylabel('Distance from BlackHole (AU)'); subplot(3,2,4); plot(t/hrToSec,(z(:,3).^2+z(:,4).^2).^.5/c,'g-') xlabel('hours'); ylabel('velocity/(speed of light)');grid minor subplot(3,2,6); tc = (t(1:end-1)+t(2:end))/2; ax = (z(1:end-1,3)-z(2:end,3))./(t(1:end-1)-t(2:end)); ay = (z(1:end-1,4)-z(2:end,4))./(t(1:end-1)-t(2:end)); semilogy(tc/hrToSec,(ax.^2+ay.^2).^2,'m');grid minor; xlabel('hours');ylabel('Acceleration Magnitude (m/s^{2})') function dzdt = orbit(~,z) px=z(1); py=z(2); %position vx=z(3); vy=z(4); %velocity r = sqrt(px^2 + py^2); %radial position v = sqrt(vx^2 + vy^2); %velocity magnitude nx = px/r; ny = py/r; %normal direction of location dzdt = [vx; vy; %differential Equation G*M/(px^2+py^2)*((-nx)*(1+v^2/c^2) + (nx*vx+ny*vy)*4*vx/c^2); G*M/(px^2+py^2)*((-ny)*(1+v^2/c^2) + (nx*vx+ny*vy)*4*vy/c^2)]; end end *Einstein, A., Infeld, L., and Hoffmann, B., “The Gravitational Equations and the Problem of Motion”, Ann. Math., 39, 65–100, (1938).*
 dydxKm(j,i-1) is unequal to dydxKp(j,i) &amp; (y(j-1,i+1)-y(j,i-1)+dydxKm(j,i-1)*x(j,i-1)-dydxKp(j,i)*x(j-1,i+1)) &gt; 0 I ran the code again with your debugging method, but plugged in a '%' after each term on the X line and found that the problem is propagating after -----dydxKp(j,i)*x(j-1,i+1))/(dydxKm(j,i-1)-dydxKp(j,i)); whereas everything before that is giving me a value. 
Thanks for all the assistance. Appreciate it!
XD, relatable mate, I too was once like that. Just try to learn something new from every fuckup and you'll be fine.
Can't you eliminate the round indentation thing ("cylinder") as a very first step? Manually you could eliminate them by index (~350:750). Otherwise i think looking at the gradient of the surface. This will have a discontinuity in where the cylinder begins (check the gradient of the gradient). 
The code would help, but you should be able to figure it out yourself. Currently I believe your code is attempting to access the graphics root object, not the text box you created. If you have the handle for the text box, you can use get(handle) to find more properties of the text box, and sort through them to find the text you would like to set, where the 'String' field or something similar should be present. Additionally, the set command isn't always necessary, and if you have the handle for the text box, you can access its properties through dot notation, i.e. hfig.String = Time_elapsed. This allows you to check if the field is present whenever you initially write the code, if you type in hfig. and press TAB, a list of fields will appear.
You're also right about removing it as the first step. That's what the edge finder function does (checks gradient to find the edge of the groove) 
[regexp](https://www.mathworks.com/help/matlab/ref/regexp.html;jsessionid=ae93e7cfaa4e78f1182119127093) 
neat! What does the ~ do in the orbit argument
Tilda in this usage means ignore that input/output. I'm not super sure on what it means on an input, but in [X,~]=functionwith2outputs(Z) it just means discard the 2nd output
its placeholder for `t` (time) but since my ODE had no use for it, `~` had to be in place so z is not confused with t.
*Do not go gentle into that good night*
The third one just creates a string each time, which corresponds to the name of ur data in k.(...) - the num2str converts the number to a string that is linked with the word string... allows you to keep iterating of the name of your structure fields as strings. To be understand this, look up the help on each of the tools your using and it will make sense. 
They were showing you how this works with structures. The third example shows you how you would do it for the general case. A = ['hey','ho'] This just concatenates two strings. num2str converts a number to a string.
Ehm, sort of. Let me try to explain. k.myField = 1; creates a field on the variable k called myField. You can think of this as a variable inside a variable if you like. That field has a value of 1. The syntax in Matlab is such that k.'myField' = 1; is invalid. The correct syntax in Matlab if you want to create fields using strings is k.('myField') = 1; This is 100% equivalent to the first example (k.myField = 1). It's a different way of doing the same thing. The advantage of the second way is that you can create strings in every iteration of a loop. One way to create strings is to use the concatenation outlined above. For example: i=1; myString = ['myString',num2str(i)]; creates a string called myString which has the value 'myString1'. Play around with the square brackets in your Matlab interpreter. A = [1,2,3] creates an array of numbers. B = ['a','b','c'], concatenates a string ('abc'). That's how Matlab arrays behave. So now, again, if you want to use the stuff from the previous example as your field, you just go: k.(myString) = 1; This is now equivalent to k.myString1 = 1, which is what the round bracket syntax allows you to do.
+I think I get it now. Thank you very much for your help!
If they are single values, why are you using the dot multiplication? It's hard to troubleshoot in the form that you have provided. Your code requires data loaded to run that you haven't provided. Also: 1. Put your code in the main post. Indent every line by four spaces and it will appear in a more readable format. 2. Have you tried running your code with a breakpoint just before the last few lines, and then inspecting the variables in the workspace?
First things first. You should read the help about formating. Don't just copy and paste your code, it doesn't present well. About the code now. I do not think there is a need for you to use a function (the input isn't used). Write it as a scipt first. It would be easier for you to see how your variables change through a script since they will appear in your workspace. Also, be careful when you write decimals; it is preferable to always put the (implied) zero before the dot; it makes it easier to see mistakes. 
While it's slow, you can use eval(). It turns a string into a command, so something along the lines of: eval(['variable' num2str(ii) ' = ' num2str(math(ii))']); Would read as: variable1 = x, variable2 = y, etc etc.
My solid works expired after 1 year! I'm pretty sure when I activated my student license it said 1 year on matlab as well!
*Evil, you mean evil. Don't use this thing if you don't absolutely have to. Its way slow, prevents JIT compilation, code checking (the orange underline things), automatic code highlighting... Its main advantage of eval is that it is supermega flexible, but than again, matlab as a whole is too..
It's written in the question.The question stops at maths involved Maths involved is what i have thought regarding this 
i guess i haven't understood the problem Can u explain it please? 
Does it need to be the product of two TWO-DIGIT numbers or just any two numbers? Either way check out "factor()" - that should get you the prime factors. If it indicates that your current guess is prime ... Then you know you haven't got a solution so try a new guess. Otherwise you need to try all the permutations of combining the factors into two groups to see if you can get one where both groups yield a two digit product
It sounds like you are working through it by finding the max palindrome first... Have you considered working through it in reverse? (Ie, finding the possible palindromes from the given number of digits for a and b)?
Is this a homework question? as in, do you want an answer or help to find the solution? I have figured out a very hacky solution because I'm no expert but that was a fun puzzle. If you want me to explain how I got there let me know. If you want to have a stab at it without looking.... Think about the function rem. You can use rem to index so: N=8 K=1:8 D = K(rem(N,K)==0) Will return all the numbers between 1:8 that are factors of 8 as variable D. So if you know a number is palendromic (which I think you figured out), then you can find all the numbers that are factors of it. I probably explained that badly but do ask if you want me to explain. See here: http://pastebin.com/45AZj108 
How are you plotting them? 
%%Plots%% subplot(3,1,1) plot(t,uo(i-1),'r'); title('Displacement'); xlabel('Time, sec'); ylabel('Displacement, in'); %axis subplot(3,1,2) plot(t,vo,'r'); title('Velocity'); xlabel('Time, sec'); ylabel('Velocity, in/s'); %axis subplot(3,1,3); plot(t,Ao,'r'); title('Acceleration'); xlabel('Time, sec') ylabel('Acceleration, in/s^2'); %axis I've been trying uo for the first plot instead of uo(i-1) though.. just trying things :/
It seems like u0 doesn't have a value at t= 0, correct? I'd make a new time vector to match that, starting with dt rather than 0 Or plot(t(2:end),u0)
My second suggestion is cleaner. Change t back to how you had it and plot(t(2:end),u0). edit: oh... that didn't work?
no problem. you can't plot an X vs Y if they aren't the same length. In this case, t=0 didn't have a corresponding u0 value, so we just got rid of it.
your school is violating many rights of your intellectual property. Good luck with that. (They can't just tell you "We own it!!" because you made it with software they bought for students, who pay tuition, to use. That's like the Jobs' mortgage bank claiming they own Apple Computer because it was developed in the garage of the house they own. 
That is a nice analogy. But all d1 universities I know of have this same principle. Even one of my current professors just developed a new GMO free peanut butter treat. And my college has all the rights to it!! It's crazy, I know, but it's just how it is. 
https://nl.mathworks.com/matlabcentral/answers/99844-how-can-i-use-the-errorbar-function-with-a-logarithmic-axis-in-matlab
Centroids are easy to calculate in any number of dimensions, it's just the average coordinate value weighted by the intensity of each pixel (or voxel or whatever). This should be easy to calculate using ndgrid() and sum(). In fact you can make this more efficient by using sum() first to accumulate the data across each axis in turn and then calculate one dimensional centroids. 
By serial timestamp, do you mean a datenum? Those work just like any other number. If they're equal, then they're equal, if they're not they're not. You can absolutely use unique() on those. But the fact that you're running into this need is suspicious. It sounds like you e made some poor design choices to end up in this situation, and a better solution would be to restructure your code so this isn't an issue in the first place. Why is there any possibility of non-unique timestamps? Why aren't they simply generated as needed, when data is received? Or generated in sequence at the start? Or, maybe by "unique" you don't actually mean unique? Are you expecting dates closer than some tolerance to be treated as equal? In that case the easiest solution would probably be to round your datenums to your chosen tolerance prior to running unique. 
I'll give some more detail. This may not be the best or most efficient way to accomplish this, but it *should* work. I have code that is automatically called every hour on xx:45. When it runs, it makes a prediction for the next hour, and then runs on analysis on the previous complete hour. So the timestamps I'm working with are just the tops of the hour (xx:00). To generate these time stamps, I'm using: [yyyy, mm, dd, HH, ~, ~] = datevec(now); CurrentHour = datenum(yyyy, mm, dd, HH, 0, 0); Then that timestamp and the data is saved to a variable that holds everything. Let's call that "ArchiveData", and say it's 200x2. So then ArchiveData(end+1, 1) = CurrentHour-1/24; ArchiveData(end, 2) = data; If the code runs into an error one hour, it will have to be restarted and may run this section twice. Thus, using the "end" index is not ideal, because it could add the same hour onto the end again. That's why I'm trying to use unique() to check for unique timestamps, and delete duplicate entries. But to test, I've done ArchiveData(199,1) == ArchiveData(200,1), when 199 and 200 should hold the same timestamp, and it's returned false. I'm not sure how.
No, that's not what I'm saying. I get Matlab for free through my university. So the money spent for the software if on their end. I believe if you have paid for the student version then you will have the rights. 
Could you provide an example that outputs the automatic appending you note? I've never heard of this before and am interested in finding an answer.
 N = [1 2 3] D = [2 3 4 5] sys = tf(N,D,-1,'Variable','z') step(sys); xlabel('reddit') The xlabel is now `reddit (seconds)` 
No, I'm not sure. I'm told to equalise the area. Is there another way to do that?
+I got it now, setting it via t directly worked after all...I didn't realize I could access it directly with `t.String = ...`, I thought I needed some sort of setter interface function, e.g. chgTimeUnit(t, ...)
I think in older versions of Matlab you would have needed `set('String',...)`, but they've updated the handle interface to look more like normal properties. `t` is just the *text*. It's not aware of anything like time units, it's not aware of anything about your system, it's not aware that you made it with a call to `sys()`, it's not even aware that it labels an axis. It's just an object that displays some text.
hi You just need to save the variables in matlab in the workspace and then they should usable in simulink. No need to use fromworkspace.
The variables I am trying to call are not single values, there are single columns of data which I've saved in the workspace. Is it the constant block or input block or another that I use to call the variables and have the numerical manipulation take place for each value in the variable
It doesn't seem like there is a way to tell histeq to ignore certain values... One possibility is using the mask to put the values from the region of interest into a 2d array (save thier original positions in a similar fashion to remap later) use histeq on that array and then remap the new values to a new array of zeros with the same size as the original image. It sounds much more cumbersome to create the new image with new values than to compare the histogram of the masked image with the histogram of the histeq version of the masked image. 
In figure : Tools -&gt; Basic Fitting... Select "Plot fits" and press right arrow on the bottom of window .. Is that what you are looking for? 
Xfoil might be able to help you out here, I know you can edit the panel number, then I think you could print out the .dat file for the coords. 
It's hard to read your equation, can you maybe try to spell out what's a matrix, what's a vector, and what's a scalar? Edit nevermind , you fixed it.
Nice initiative! I just scrolled through it quickly but here are some things that directly came to mind. **Structure** * I would put basic plotting much earlier, probably directly after chapter 3. You can add a chapter with advanced plotting later. * At least to me, File I/O and User Defined Functions feels less important than Chapter 6, 7 &amp; 9. * I would structure it something like Chapter 1, 2, 3, 8, 6, 7, 9, 5, 4, 10, 11, 12 **Content** I think that you should put more emphasis on how to use scripts. Some things that might be worth mentioning: * How to comment. % or %{.... %} for multi-line comments * How to create and execute sections. %% and shift-ctrl to execute that section. * You can also run scripts without saving by pressing shift-ctrl. I use this all the time instead of writing multiple commands in the command window. I don't have time to read it in detail right now but I might come back with more comments later! 
I understand your reply, but for the algorithm i intend to implement, i must create gabor jets which include the gabor features and positions for each landmark (eye, nose tip, etc) so i should first define the landmarks or does the gabor filter do that? Another question, do i need to normalize the image at first or convert it to grey scale only. Thanks for your reply 
What you are looking for is a structure. Structures use dot notation to access the information along the tree, where the trunk is the main variable name, and each proceeding name after a dot is a branch. for example: tree = struct; tree.A0.Array = [1 2 3] tree.A0.A1.Array = [4 5 6]; tree.A0.A1.A1A.Array = [7 8 9]; and so on. You can dynamically name/ access variables using sprintf or a string array like this: for ii = 1:3 Tree.(sprintf('A%d',ii)).Array = [] end for ii = 1:3 Tree.(['A' num2str(ii)]).(['A' num2str(ii) 'A']).Array = [] end 
Good question. I'd say lump it into a parallel computing advanced section with gpuArray and other tools from the parallel computing toolbox. 
A Gabor filter is just a linear filtering operation. All it does is return the result of the convolution of the Gabor filter kernel and your image. You do the rest. Simply converting to greyscale should be sufficient. I'd probably normalize the Gabor features after extraction according to whatever normalization scheme is good for downstream classification. I should note, I'm not familiar with "Gabor jets". Pretty great algorithm name though. Best of luck to you.
You can go ahead and call the run function on your scripts in your callbacks from the GUI elements. [Link to documentation on run](https://www.mathworks.com/help/matlab/ref/run.html) Be warned though, scripts cannot run in parallel in matlab. (Unless you pull out parfor or a timer, and those are less than ideal solutions) 
hhhhhhhhhh Thanks for your effort 
Are you familiar with this? [http://psychtoolbox.org/](http://psychtoolbox.org/)
I've installed PTB but have never coded anything based on it. Is there any part of my code that can be replaced by the PTB functions? Thanks!
Could you post the link to the pdf, please? (I am not disabling NoScript on a page that tries to shove flash upon me)
Of course. Please try this: http://www.rsipvision.com/ComputerVisionNews-2016December/files/assets/common/downloads/publication.pdf
Go to line 52, see if you have as many opening and closing parentheses
Looking good, best of luck to you. I'm writing a similar thing for psychophysics studies and this is definitely a task that sounds easier than it is!
I think this is trivial but you are missing multiplications signs ( * ). If that's not the case, could you make your code look a little neater first ? I don't think any of the syntax is **currently** correct. 
Hey awin, im trying to edit he post and the (*) are in there but not coming up in the post apart from within the limit i've set. Will try again here I have plotted a sine wave T=1/23 t=linspace(-T,T,100) Mt=Mo/2*(1+sin(pi*t/T)) plot(Mt) I now want to add in the following limits 𝑀(𝑡) = 0 at 𝑡 &lt; −T/2 M(t)= 𝑀0/2*(1 + 𝑠𝑖𝑛 (𝜋*𝑡/T)) at −T/2 &lt; t &lt; T/2 M(t) = 𝑀0 at 𝑡 &gt; T/2
I'm assuming that the first part is now working (?) For adding the limits, I think you should try to loop of the length of the vector t. Then for each value, you could set a value to Mt using a conditional. for i = 1: size(Mt) if t(i) fulfils condition set Mt(i) as required. else ...... I hope this helps! EDIT: The plot works in general. Barring any syntax errors you might be making. 
thank you!
 * ** * * * * ***** Something like this? You could do a mask matrix, which is just zeroes except on the places where you want an asterix to appear. Then you loop through each row and column and when the loop encounters not zeroes (e.g. ones) it prints out an asterix. Just keep tabs on that you print a new line at the end of a row.
Revisiting this after spending alot more time working on my matlab I had a go writing this script from scratch and figured out what was giving me grief! writing v(n) tricked matlab and broke everything. Simply chaning it to v makes the whole thing work fine. There was an error with 1:Nh instead of 1:2:Nh but otherwise it was a pair of brackets that were ruining my life! Fs = 44100; Ts = 1 / Fs; %Sampling period t = 1; %time &gt;&gt; Remove dt = 0:Ts:t-Ts; %Signal length Nh = 19; %Number of harmonics &gt;&gt; Remove n = 1; %Starting number of harmonics f = 440; %Input frequency &gt;&gt; Remove %Yt = 0; y = zeros(1,t); %Prepare output for values for n = 1:2:Nh; % v = (1/n)*sin(n*2*pi*f*dt); %Square wave equation (without pi/4) y = y + v; %Add wave to y n = n + 1 end sound(y,Fs); %Output sound
Some hotkeys are different in Linux compared to Windows, but I don't remember which ones specifically. Either way, they can be specified in your preferences!
Code not screenshot
It doesn't matter the same technique will work just fine, only the values in the matrix are different. Matrix like this should work just fine: 1 0 0 0 0 1 1 0 0 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 
I know this doesn't help you necessarily but [here is what WolframAlpha gives](http://imgur.com/a/05oH0) as the solution to this integral.
It sounds like others have helped and explained how to fix it. But let me tell what caused the problem. There are a lot of `cos` operators in Matlab. If you look at the `doc cos` you will see: Other functions named cos codistributed/cos gpuArray/cos sym/cos This is one of the things I have come to love about working in Python. If I want to do a numerical cosine, I will do `np.cos`. If I want to work with symbolic ones, I do `sympy.cos` (well, usually if I care about symbolic I pull the whole name space). It is frustrating in Matlab because you are left to Matlab's path priority and/or its own built-in ways to determine what you want.
Thank you! I had a couple things wrong before even getting to the Matlab part.
Thanks, I messed up on the math before getting to Matlab which caused some issues too. I appreciate the explanation though; I don't have coding experience so it's nice to see. My math professor suggested I start with learning Python maybe I'll get on that over my winter break.
So, here's what you want to do: When using interp1, you would normally supply a set of "sample points" (this would be a vector of 'frames' in your case) and a set of values at those points. What you want to do is *omit the frame numbers &amp; data values* corresponding for the frames where the data is clipped. Here's how I would do it: Y = yourdata; % I assume Y is of size [3600, 1] M = max(Y); O = Y~=M; % Thus, O logically indexes the points in Y that you want to use. Its value is 0 where the data is clipped and 1 elsewhere. Xi = find(Y~=M); % Thus, X will contain all the indices in Y that you want to use. Xq = (1:length(Y)).'; % This creates a column vector containing ALL indices in Y, not just the un-clipped ones. Y2 = interp1(X, Y(O), Xq, 'spline'); I think that ought to do it. Let me know if that makes sense / if you run into further trouble. 
Two for loops, one counts ii, one counts jj within the other loop, then in the inner loop checks if ii is smaller than or equal to jj or vice versa. That should generate some sort of filled triangle with base and height ii and jj.
What's the problem you have with solving the BVP? Using the shooting method you start with a couple of guess values for y'(a) and solve the IVPs for these guess values (using the bisection method you will need to ensure your guess values produce solutions either side of the upper boundary value). Use the solutions for y at the upper boundaries to estimate improved guess values using the bisection method. Repeat using the last two sets of guess values to keep on improving y'(a) until the difference between successive estimates is less than that of a given tolerance (i.e. use a while loop to iterate till convergence). BTW the secant method is often preferred since it does not require the solutions at the upper boundary to be either side of the boundary value. 
How will that matrix look like if node 1 was later disconnected from node 2? You could overcome this by using a struct, but what you want to have here is a symmetrical adjacency matrix. Also Matlab has a graph and network analysis suite that is very handy. I totally recommend looking it up, it will help a lot! Initially a Watts-Strogatz network will have all its nodes connected to 'm' amount of nearest neighbors. ('m' is a positive and even, integer) A simple way to do that is by iterating through all your nodes and connecting them with m/2 nodes ahead and m/2 nodes behind. You will need two special cases. One for nodes 1 to m/2, where they need to be connected to nodes from the end of your list. One for your last m/2 nodes that need to be connected to the ones in the beginning of your list. Adding random edges is trivial. When in doubt, ask away!
Are you sure the fit isn't reasonable? Have you plotted it to check? 
Okay so something is going wrong with the fit. Since you know the correct values, have you tried testing your error function? If you call it with the correct answer, the error should be small, and it should grow as you move away from the correct values. Does it do this? 
Yes, I have. The correct answer gives the smallest error value I can find. It's still not super small, but it's the best it can get, since the given data isn't super precise to begin with.
Interesting. I have no idea why, but when I told the script to evaluate the function at the correct [a,b,c], and then changed it back to calculate the minimum again, it works as it's supposed to. However, it's not quite accurate enough: it gave me [a,b,c] = [1.3718,9.0470, 1.2699]. Is there anyway I can make it keep going so it's more precise? Edit again: Sorry, I should check what I say before I hit "save". My values of [a,b,c] that I just got actually fit slightly better than the given answers. Thank you very much for helping me get it fixed :)
[This is what you want](https://www.mathworks.com/matlabcentral/fileexchange/22409-stl-file-reader)
Thank you. I found and downloaded this but can't seem to get it to work and I'm not really sure why. Edit: To be more specific, I downloaded this program and dragged the .m file into MatLab. I opened it and followed the instructions. I dragged my STL file into MatLab and I ran "f = program(STL file). At first it was too big so I degraded the STL file. The second time a ran the smaller file it seemed to run. However, when I then entered "patch" the graph that came up looks like a 1:1 linear line graph; nothing like my complex structure. 
seriously, dude, you need to put some effort into describing what you have actually tried so far.
So far, I have this but I have no idea what I'm doing. function F = Problem_2 %defining necessary variables for calculations dx = 1; %stepsize for x dy = 1; %stepsize for y l = 3; %base h = 3; %height r = l/dx+1; %number of "i" data points c = h/dy+1; %number of "j" data points q = (r-2)*(c-2); %size of square matrix for calculating inner values count = 0; %creating the b vector b = 2*dy^2*ones(q,1) for j = 2:c-1 for i = 2:r-1 count = count+1; if i == 2 b(count) = b(count) ; end if i == r-1 b(count) = b(count) - 50; end if j == 2 b(count) = b(count); end if j == c-1 b(count) = b(count) - 200; end end end %creating the A matrix (a square matrix) for the unknown A = ones(q,q); A = A + diag(-5*ones(q,1)); A = tril(A,1); A = triu(A,-(1)); A = A + diag(ones(q-(r-2),1),(r-2)); A = A + diag(ones(q-(r-2),1),-(r-2)); for k = 1:q/(r-2)-1 A(k*(r-2):k*(r-2)+1,k*(r-2):k*(r-2)+1) = A(k*(r-2):k*(r-2)+1,k*(r-2):k*(r-2)+1) + flipdim(diag(-1*ones(2,1)),1); end %solving for the unknown z = inv(A)*b; %transforming the column vector to a matrix Q = zeros(r-2,c-2); for i = 1:c-2 Q(:,i) = z((i-1)*(r-2)+1:(i)*(r-2),1); end W = zeros(r,c); W(:,1) = 0; W(:,c) = 200; W(1,:) = 0; W(r,:) = 50; W(1,1) = (0+0)/2; W(r,1) = (50+0)/2; W(1,c) = (0+200)/2; W(r,c) = (200+50)/2; W(2:r-1,2:c-1) = Q; W = W' end 
 &gt;&gt; x = '2334' x = 2334 &gt;&gt; x = [x '7'] x = 23347 
Good to hear that you did it! hmm, I'm not exactly sure what you want to do?, do you want not just the green color, but different colors for the different faces based on some values? Did you end up using plot3 or patch to plot it? are the colors in your STL file? If they are, the header of the stlread, I linked to, says that you can get them out using: [v, f, n, c, stltitle] = stlread(filename); and then do: patch('Faces',f,'Vertices',v,'FaceVertexCData',c) to plot it. EDIT, and thanks for the gold! first time I've gotten that.
Usually Matlab will also tell you *where* in the code the error occurred. That would be helpful. I also tried to test the code myself but I can't because p is undefined. Also, instead of [1 1 1 1; 1 1 1 1; 1 1 1 1; 1 1 1 1] you can use ones(4).
**PLEASE** indent code with four spaces so it is readable! It isn't that hard and makes helping a lot easier pdot_1_1 = p(1,3) - p(3,1) - p(4,1)*((p(3,1)*p(3,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,1)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(3,1)*((p(4,1)*p(4,3))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,1)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); pdot_1_2 = p(1,4) - p(3,2) - p(4,2)*((p(3,1)*p(3,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,1)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(3,2)*((p(4,1)*p(4,3))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,1)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); pdot_1_3 = - 3*p(1,1)*n^2 + 2*p(1,4)*n - p(3,3) - p(4,3)*((p(3,1)*p(3,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,1)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(3,3)*((p(4,1)*p(4,3))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,1)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); pdot_1_4 = - 2*p(1,3) - p(3,4) - p(4,4)*((p(3,1)*p(3,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,1)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(3,4)*((p(4,1)*p(4,3))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,1)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); pdot_2_1 = p(2,3) - p(4,1) - p(4,1)*((p(3,2)*p(3,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,2)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(3,1)*((p(4,2)*p(4,3))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,2)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); pdot_2_2 = p(2,4) - p(4,2) - p(4,2)*((p(3,2)*p(3,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,2)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(3,2)*((p(4,2)*p(4,3))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,2)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); pdot_2_3 = - 3*p(2,1)*n^2 + 2*p(2,4)*n - p(4,3) - p(4,3)*((p(3,2)*p(3,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,2)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(3,3)*((p(4,2)*p(4,3))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,2)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); pdot_2_4 = - 2*p(2,3) - p(4,4) - p(4,4)*((p(3,2)*p(3,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,2)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(3,4)*((p(4,2)*p(4,3))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,2)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); pdot_3_1 = 3*p(1,1)*n^2 - 2*p(4,1)*n + p(3,3) - p(3,1)*(p(4,3)^2/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,3)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(4,1)*((p(3,3)*p(3,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,3)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); pdot_3_2 = 3*p(1,2)*n^2 - 2*p(4,2)*n + p(3,4) - p(3,2)*(p(4,3)^2/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,3)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(4,2)*((p(3,3)*p(3,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,3)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); pdot_3_3 = 2*n*p(3,4) - p(3,3)*(p(4,3)^2/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,3)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - 2*n*p(4,3) - p(4,3)*((p(3,3)*p(3,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,3)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) + 3*n^2*p(1,3) - 3*n^2*p(3,1); pdot_3_4 = 3*p(1,4)*n^2 - 2*p(4,4)*n - 2*p(3,3) - p(3,4)*(p(4,3)^2/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,3)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(4,4)*((p(3,3)*p(3,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,3)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); pdot_4_1 = 2*p(3,1) + p(4,3) - p(4,1)*(p(3,4)^2/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,4)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(3,1)*((p(4,3)*p(4,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,4)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); pdot_4_2 = 2*p(3,2) + p(4,4) - p(4,2)*(p(3,4)^2/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,4)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(3,2)*((p(4,3)*p(4,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,4)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); pdot_4_3 = - 3*p(4,1)*n^2 + 2*p(4,4)*n + 2*p(3,3) - p(4,3)*(p(3,4)^2/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,4)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(3,3)*((p(4,3)*p(4,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,4)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); pdot_4_4 = 2*p(3,4) - 2*p(4,3) - p(4,4)*(p(3,4)^2/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(4,4)*(p(3,3) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)) - p(3,4)*((p(4,3)*p(4,4))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1) - (p(3,4)*(p(4,4) + 1))/(p(3,3) + p(4,4) + p(3,3)*p(4,4) - p(3,4)*p(4,3) + 1)); f = @(t,p) [pdot_1_1;pdot_1_2;pdot_1_3;pdot_1_4;pdot_2_1;pdot_2_2;pdot_2_3;pdot_2_4;pdot_3_1;pdot_3_2;pdot_3_3;pdot_3_4;pdot_4_1;pdot_4_2;pdot_4_3;pdot_4_4]; [t,pa] = ode45(f,[100 0],[1 1 1 1; 1 1 1 1; 1 1 1 1; 1 1 1 1]); 
How would I use it to find the minimum value of x? Edit: Is it mldivide(B,a) ?
Seriously? You can't be bothered to use the documentation I linked, scroll a few centimeters and arrive at the working example with the title "Least-Squares Solution of Underdetermined System?... Solve a system of linear equations, A*x = b. A = [1 2 0; 0 4 3]; b = [8; 18]; x = A\b
I did scroll all the way down to it. The thing is that I probably blindstared me on the 'min' in my assignment. If I understand it correctly, calling x = mldivide(B, a) will give me the x for which ||a - Bx|| is minimal?
To the best of my knowledge, yes.
use a try-catch block around fminunc to catch the error when it gets thrown, thus ensuring that the code does not crash when you get this error. https://nl.mathworks.com/help/matlab/ref/try.html
My issue: https://www.reddit.com/r/neuroscience/comments/5irc8y/error_trying_to_load_meg_data_into_eeglab/ After right clicking, I selected "add to path--&gt;"add folder and all subfolders" and included all of the necessary plugins/toolboxes
Just remembered that you probably have to do c.data(:,1) instead of just c(:,1)
I've never used mat2gray before, so I just checked the doc. If you don't specify the range (using the same syntax as I did in imshow) it automatically scales the output image so that the minimum value is 0 and the max is 1.
&gt; I downloaded the latest MNE Nightly Linux 64 bit. I'm on Windows 10. You are on Windows and downloaded the Linux version of the toolbox? Did you try the windows version of the toolbox?
There are only OSX and linux versions. But yeah I was thinking that
Initial conditions, a secant method is a gradient decent thing that uses the current state (here value for x0, x1 and xn) to get the next state. Try calling secant with different values for x0 and x1, you'll probably get different solutions. also plot your function so that you can see what the right answers are: X = -20 : 0.001:20; plot(X,sin(X)-log(X)) ;
I think I can use the z-values, hopefully the decimals are all exactly the same so I don't miss a node or two because of rounding errors (SW isn't the most stable or consistent of tools...) I'll look into the interp functions, thanks!
Without seeing your code it's hard to know what is causing it but here is how you control it https://www.mathworks.com/help/matlab/ref/box.html
Use box. Not sure what the big deal is. If there is a bigger problem post a SSCCE. Screenshots are not very helpful.
 inner = y*(exp(x) - 1) inner2 = y^2 - y*(exp(y) - 1) inner3 = -1/6 Is the answer -1/6?
What version? I know when I went from 2014b to 2016a there was some changes to the plotting. 
Nothing in your question can't be explained easily by the relevant documentation. Rather than duplicating the documentation in a reddit post, I'm just going to tell you to read the documentation yourself. 
If you're about to turn in a project on linear programming and you "don't know much about linear programming", you've got bigger problems than we can help you with. 
Since you're giving them initial y velocities based on their mass, they will still orbit around each other but the center of mass (and hence the whole system) will have a net y velocity, which is why you are seeing your values grow to huge numbers. Try providing initial velocities such that the net of the system is 0.
Thank you very much. I had it to the point of realising that the orbits were okay, except the COM seemed to be moving upwards. I have now put y velocities in, with vy2 = -m1/m2 * vy1. 
Not sure I follow your question. If you're asking "Should I bound `0 &lt; x &lt; intmax('int32')` or should I bound `0 &lt; x`?", I'd go with whichever better fits your model (probably the latter). Is there an algorithmic reason to add bounds this way? I doubt it, but don't have subject-matter expertise there. My vague undergrad recollections suggest adding extra bounds like this wouldn't help if they're not near the solution. If they are near the solution, and you're not sure if you need them, that's a different kind of problem altogether. `intmax` is a representation of the computer's limits and `linprog`'s parameters should represent your problem. If your problem doesn't converge (for example, `linprog(1,1,0)`, minimize x for x&lt;0), adding a bound based on the computer's limits to get a solution isn't a great approach. Finally, `linprog` uses class `double` for its variables. `intmax` is only really appropriate for the integer datatypes; if you want to represent integer states for some of your variables (number of stages in a distillation column, true/false parameter settings in a model, etc), you should be using `intlinprog` to solve a "mixed-integer" linear programming model instead.
DreamToolbox may have some of the info you need.
ok thank you :)
Hmmm, I'll try to figure a workaround. &gt;Their equation could be slightly off and I may misunderstand what is intended there. For example, the variable of integration in equation 2 should almost certainly be t, not w. (Compare http://mathworld.wolfram.com/FourierTransform.html eqns 7+8). As for this I don't think there might be an issue since my supervisor claims that he's able to get the results. Nonetheless thank you for your help!
I've never used the command "solve" before, but "roots" would work too. 
I think it should work but you need to define T as a syn sym t
Just change the length of the arrow: quiver3(0, 0, 0, 7000000, 0, 0, 'color', 'black', 'linewidth', 5); For more help on quiver3: https://www.mathworks.com/help/releases/R2016b/matlab/ref/quiver3.html
Plug in the coordinates for New York. Does the vector land there? (It's hard to see where your problem is with this still.)
Changing the length of the arrow doesnt fix the issue. That arrow is the exact length of the radius of the earth at the equator, yet it does not come close to the edge of the referenceellipsoid. edit: the issue is that if i were to try and use the arrow to point at an orbiting satellite or an airplane the height would be wrong, or perhaps even below the surface of the earth.
Came here to tell you the auto scale bug. That was a frustrating demon to find when I did, sorry I didn't get here sooner!
&gt; Do you have a reference that describes this by any chance? No, I do not. Short of reading about their release history, I don't know of any page that talks about why they do it that way. The content of releases can vary quite a bit. 2016b made a huge changes by introducing the new tall data type and including support for in-script functions. But there's also smaller changes, such as how the Simulink Scope block performs. Check out the highlight videos from the last 3 releases to just get an idea of the scope. [2015b](https://www.mathworks.com/videos/release-2015b-highlights-107126.html) [2016a](https://www.mathworks.com/products/new_products/release2016a.html) [2016b](https://www.mathworks.com/products/new_products/latest_features.html) Don't forget to thumb through the [release notes for every toolbox.](https://www.mathworks.com/help/relnotes/) And be sure to check out 2017a when it releases in a few weeks. &gt; For users who didn't code the initial software, this can be a show stopper, hence why we stay with certain versions for a few years. You're missing the larger picture here. Sometimes, there are changes made to code, and that sometimes breaks your code. That's not just to stab you in the back - It's to improve the software. In addition, MATLAB plays nice by only having a huge release every 6 months. Compared to some python packages which will stop being developed at the drop of a hat, or change dramatically month-to-month, MATLAB does a pretty good job of keeping things stable and consistent where they can. 
http://lpsa.swarthmore.edu/NumInt/NumIntFourth.html This seems useful, with example Matlab code. Good luck! (If you use any code from the example in your final solution, cite the website or risk bad things.)
[removed]
dang you found a weak spot 
Just guessing, but you could have a look at what's going on with that date.m which seems misplaced in the Documents\MATLAB folder. Could be you saved some random gunk as date.m and now help / doc is using that instead of the proper m-file (since date is a built-in function already).
This could be due to a corrupt path as well. You could try &gt;&gt;restoredefaultpath &gt;&gt;rehash toolboxcache If this fixes things then use &gt;&gt;savepath Alternatively, this could also be due to corrupt preferences. You can regenerate them by following instructions here: [mathworks.com](https://www.mathworks.com/matlabcentral/answers/99625-how-do-i-regenerate-my-matlab-preferences)
I can link my MATLAB course here if you need basics from the ground up. 
Holy crap, that actually was the problem. There was an unfamiliar script named date. I changed the name to fakeDate and now everything works fine. Wooowwwww. Thank you for saving me some headache
I am not OP but i would like that!
I believe this has been the case for a couple of releases now. It is nice
Very very cool. Great information, thanks you. 
Yes, with the just-in-time compiler and other optimisations, it's often the case that for loops are almost as fast as vectorised code. So I do find it a bit dated now that people's first thought about making code faster is still to eliminate the loops, when that's not nearly so true these days. Even OOP in Matlab is fast now, I remember back in 2010 looking into using OOP in my Matlab code and I decided not to because it was an order of magnitude slower. It's worth bearing in mind though, that Matlab still carries significant penalties for function calls. If your for loop contains a lot of calls to other Matlab functions (not builtins like `+-*/` etc.) then you could still potentially see a big speedup from vectorising. 
Give it a shot. Code's right there
Oh man this is great, I have never noticed this. Does anyone know how far does this go? As in, in what circumstances should one vectorize now that the loops are so much faster? Because I suck at vectorizing. 
Vectorizing is super easy. Take the following for loop: for j = 2:N+1 for i = 2:M+1 T2(i,j) = (T(i-1,j) + T(i+1,j) + T(i,j-1) + T(i,j+1) - 4*T(i,j))/dx^2; end end; Here is the Vectorized Code: j = 2:N+1; i = 2:M+1; T2(i,j) = (T(i-1,j) + T(i+1,j) + T(i,j-1) + T(i,j+1) - 4*T(i,j))/dx^2; Basically you delete `end` and `for` from the for loop!
Thanks. Is there a way (even a slightly longer one) to do it without the shortcut? Im not sure we are allowed to use it.
The exact instruction are this: Cant use loops, cant use if, cant use recursion, cant use a 2d array, cant use str2num or num2str. I got around most of them but i dont think they want us to use setdiff considering we were never told it exsists. Is there no other way to do it?
If you do this: figure(1) clf hold on plot(x, y) plot(x, z) there is no box, but if you do this: figure(1) clf plot(x, y) hold on plot(x, z) the box is there. So "hold on" has to come after the first plot() command. Have been like this for all Matlab version i know of since 2007 :-) 
Perhaps I'm reading this wrong, but you could compare your arrays to the original, create a logical array out of each comparison and then delete elements based off the logical? 
I'm on mobile and don't know those commands off the top of my head but stupid suggestion: "edit dpmcdeco"?
The hold command needs to go after the axis as you want to hold the axis. As you can see on your picture you are overplotting the axis. Hope this helps!
Matlab is single context outside of the parallel toolbox. You can thread in a mex file but I don't see how that would be useful In a bench mark. I think you can trust this to be giving you decent single context benchmarking. 
Did you link it properly? Does the system have those linked libraries in the path?
Windows 10 64-bit, 16GB RAM (15.7 usable), Intel i3-3227U @ 1.90 GHz R2013a 0.1666 0.1744 0.1550 0.2305 0.6606 0.2628 R2016b 0.4878 0.2790 0.1805 0.2003 0.7947 0.6586
impressive difference amongst matlab versions. Does anybody know why?
0.2104 0.2463 0.0704 0.1803 0.4677 0.8546 R2011a on Intel I5-4300U, 12GB RAM, Windows 10 64-Bit 
0.5431 0.2471 0.2226 0.1321 2.9044 9.2036
I always have hated the inconsistency of sizing figures. For fixing fonts and for more complex formatting, I usually export as an .svg or .eps and edit using Inkscape (free vector graphics editor).
Yeah, it's maddening that the layout of figures is dependent on the window size and so forth. Nutty. I've even had the taskbar appear in an exported figure, which is how I know that at least some of the raster ones are essentially screenshots. Seems like such a basic functionality and yet it's so clunky. 
oh yes sry, i wrote a fake exemple to focus on my problem. There is my script: Ta=10; Tb=1; u=1; a=0.3; q=-1; T1=Ta; T2=Tb; x=(1:0.1:exp(1)); x=log(x); x=x'; n=length(x); A1=zeros(n,1); A2=zeros(n,1); A3=zeros(n,1); for k=2:n-1 A1(k)=(2*a*(x(k+1,1)-x(k,1))+ u*(x(k+1,1)-x(k,1))*(x(k,1)-x(k-1,1)))/((x(k+1,1)-x(k,1))*(x(k,1)-x(k-1,1))*(x(k+1,1)-x(k-1,1))); A2(k)=(-2*a*(x(k+1,1)-x(k-1,1)))/((x(k+1,1)-x(k,1))*(x(k,1)-x(k-1,1))*(x(k+1,1)-x(k-1,1))); A3(k)=(2*a*(x(k,1)-x(k-1,1))-u*(x(k+1,1)-x(k,1))*(x(k,1)-x(k-1,1)))/((x(k+1,1)-x(k,1))*(x(k,1)-x(k-1,1))* (x(k+1,1)-x(k-1,1))); end D=zeros(n,n); E=zeros(n,n); F=zeros(n,n); for k=1:n-1 D(k,k)=A2(k); E(k+1,k)=A1(k+1); F(k,k+1)=A3(k); end A=E+D+F; A=A(2:end-1,2:end-1); B=zeros(n-2,1); B(1,1)=(-A1(2)*Ta); B(n-2,1)=(-A3(n-1)*Tb); T=A\B; T=[Ta T' Tb]; plot(x,T); I want to transform the 2 loops into vector calculation
Mmm... OK. 1. You should place 4 spaces before each line when posting a long script here so that it formats nicely. (Use ` before and after for inline formatting) 2. You need `*` for multiplications (maybe it disappeared when copy-pasted to reddit?) 3. You just need one index to access `x` since it's a vector, not two: i.e., `A1(k)=(2*a*(x(k+1)-x(k))+...` instead of `A1(k)=(2*a*(x(k+1,1)-x(k,1))+...` 4. You use multiple occurrences of `x(k+1)-x(k)` and `x(k)-x(k-1)`, which is better replaced by creating the difference vector once `dx = diff(x)`, and then making, say, `dxp = [dx; 0]; dxp(1) = 0;` and `dxm = [0 ;dx]; dxm(end) = 0;` ("p" for "plus", "m" for "minus") and calling simply `dxp(k)` and `dxm(k)`. (Also create `dx2 = [0; x(3:end) - x(1:end-2); 0]` for cases where you need `x(k+1)-x(k-1)`.) 5. You use a big product 3 times, so again better to define it once: (Getting a bit ahead, vectorizing this product, i.e. `dddx = dx1 .* dx .* dx2`) 5. (personal preference) Make your code more readable by spacing out things a bit more 6. Once it's properly edited, the line for A1 should look like `A1(k) = (2 * a * dxp(k) + u * dxp(k) * dxm(k)) / (dddx(k));`, which is readily vectorized into `A1 = (2 * a * dxp + u * dxp .* dxm) ./ dddx ;` with no `for` loop needed anymore. (Don't forget to use a dot before multiplying (`.*`) and dividing (`./`) vectors element-wise!) 7. (personal preference) You don't need to initialize the `Ai`'s as a matrix of zeros after you have vectorized all of them (i.. don't need the `A1 = zeros(...)`). Hope this helps... 
You index with the : operator, and just do it. I'm on my phone, so I can't both see your example at the same time that I type something, but you can do something like: X(1:k-1) = 3*a(2:k) + 2*cos(a(1:k-2))
 0.2017 0.0767 0.0865 0.1336 0.3669 0.4142 -Desktop 0.2890 0.2127 0.0987 0.1379 0.4249 0.4437 -Laptop
0.0860 0.1356 0.0567 0.0944 1.4041 0.7077 Pretty damn fast! (2015 MBPr)
So you mean the following script? t = 0:0.01:10; s = log(t); trigger = zeros(size(t)); trigger(find(s &gt; 0)) = 1; f = figure ax = axes hold %all if trigger == 1 set(ax,'Color','red'); end grid on plot(t,s) [Now I have the numbers displayed correctly but the background is still plain white](http://imgur.com/a/NCpgB) I also found this function ([whitebg](https://jp.mathworks.com/help/matlab/ref/whitebg.html?lang=en)) in the documentation but I fail to only apply its result to a part of the graph. The *whole* background changes color. 
Linked libraries is what I mean. if you linked against anything and are on windows id just be a dummy and put the dll in the system32 folder. LD_LIBRARY_PATH is what you can use on linux. Setting the rpath to the linker is what you need to do. 
There's a menu called "export settings" or something to that effect, where you specify what font size should be used when exporting. It's in one of the drop down menus, I think "file", but I'm not at my computer right now so I'm not sure. 
&gt;for k=1:10 A(k)=X(k+1)-(X(k)*X(k-1)) end Matlab was literally built for this vectorization. You just gotta be more open minded. I did a lot of this abs theb my professor blew my mind by the speed at which he simplifued my calcs. A = X(3:13) - X(2:12) .* X (1:11)
ha! My macbook pro is just head of the #1. My $10k 32 core work machine comes in dead last. Granted, the machine was built to do parallel work, so it's not terribly surprising. Also, I access it over VNC so OpenGL is disabled. work linux box (R2016b): 0.8178 1.8362 0.1728 0.9718 2.7392 7.9539 Mac (R2014b):0.0857 0.0560 0.0475 0.1055 0.6532 0.8442
This was my mid 2014 MPBr: 0.0857 0.0560 0.0475 0.1055 0.6532 0.8442 I'm curious as to why your 2D comes out slower. What version of Matlab are you using? 
Also if you need more help and can try to help you as much as possible. I'm practicing to become a MATLAB tutor as is. 
Ok so these are the tutorials for my university course. There where about 15 I watched and they are super helpful in understading MATLAB. However I recommend working with MATLAB while watching the videos for the best results. I made a short game from these videos and a top or two from my professor so I'm sure you can learn quick. Speed the videos up as they lady narrating them (Professor Leroene) speak very slowly but clearly. Its a fun program to play with and is great for simplifying other stuff in life. Have fun and good luck! I'm hoping to be a MATLAB tutor soon so if I can help more let me know! Watch "ALL ERAU EGR 115 MATLAB VIDEO TUTORIALS" on YouTube ALL ERAU EGR 115 MATLAB VIDEO TUTORIALS: http://www.youtube.com/playlist?list=PLe0ohW0d1gLo2u7aBkJdU5U8yKi_dC1X8
&gt; for k=1:n-1 &gt; D(k,k)=A2(k); &gt; E(k+1,k)=A1(k+1); &gt; F(k,k+1)=A3(k); &gt; end Oh and for this one, you can use the `diag` function, which can take one or two arguments: * for `D`, use one argument: `D = diag(A2)` should work * for `E` and `F`, use two. (Try `E = diag(A1,1)` where the `1` shifts the diagonal up or down (use `-1` for the other direction), and see what you get, you can then "trim" `E` to fit your wanted size by using, e.g., `E(:,end) = []` which will get rid of the last column)
*calculation 
[removed]
I just ran the tests again to make sure I didn't bungle up the process somehow. However, I got fairly similar numbers the second time now. But, I did forget to mention the first time that the R013a version is 32-bit (whereas my R2016b is 64-bit). R2013a (32bit) 0.2106 0.1731 0.1504 0.2358 0.7104 0.2500 R2016b (64bit) 0.4952 0.2861 0.1753 0.1995 0.7242 0.6371
Some of his videos are here: http://blogs.mathworks.com/videos/2008/?s_tid=Blog_videos_Archive 
Here you go: k=1:10; A(k)=X(k+1)-(X(k)*X(k-1)) 
My technical knowledge is so low I don't even understand this response. The keyboard works fine, I just can't differentiate between the left and the right space bars on MATLAB. 
An arduino is a small board with a programmable microcontroller. Has 13 input/output pins you can put buttons to and a usb connection to talk with a pc. Its programmed in C++ but for a basic project like yours, you could very easily find the code already done as it has a very large community of people sharing their work. That would give you a very cheap fully customizable button box
encodedBlock is an array of doubles and you try to assign a cell to encodedBlock(3). If encodedBlock was a cell instead of an array this would work. encodedBlock = cell(3,1) encodedBlock{1} =... 
I think the solution you are proposing doesn t correspond to the image I posted. Or am I wrong ?
So what final solution do you suggest?
What?? That's ridiculous, they only make them in diamond encrusted gold or what? Anyways, if you decide to go the cheaper route but are unsure on how to do it, i'll help you for sure, heck, i wouldnt mind buiding it for you, 5% of the price and I'd still be making a good profit ;)
1.) Like nn_lyen said, the error is because your "encodedBlock" is a double array. The right hand side of that line will return a cell due to the mat2cell call. can't assign a cell to a double array 2.) A cell makes sense for a data structure like this, where you have different types of data that you want to store. So switch your encodedBlock to be a cell instead. The first 2 assignments can be the same. and the third can be whatever you choose. In this case below the assignment is an array of uint8's. encodedBlock = cell(1,4); encodedBlock{1} = upperMean; encodedBlock{2} = lowerMean; encodedBlock{3} = oneZeroBlock(1,1:blockSize) also check out dec2bin(), which would instead of the uint8 array, let you assign a bit array encodedBlock{3} = dec2bin(0,4);
[removed]
¡Muchas gracias!
[removed]
If that doesn't come with some software to let you remap stuff, I'd be surprised. On the off chance it doesn't, [here is a list of key remappers](http://lifehacker.com/5883003/the-best-key-remapper-for-windows) that are win7 compatible. I'm not familiar with any of these, but this would be a good place to start.
It's very difficult to understand where the price comes from for [these](http://cedrus.com/store/rb-series-response-pad.html). Unfortunately I can't use grant money to buy these from you. 
Thanks. I'll probably give that a try. Such a useless idea to have two big red buttons do the same thing (maybe it makes sense for gamers out there!). 
It becomes a problem if the duration is longer than 24 hours.
How does the date string format `'HH:MM'` become longer than 24 hours?
i did but i cant find new journal
It's to allow left handed and right handed gamers to be able to use space bar I assume 
Well, it's hard to tell without knowing what your loop does. But usually it helps to vectorize your code. 
I don't know how MATLAB optimizations work but you could do some manual loop unrolling (if possible), maybe it would help.
Let's say you have a vector of length five, and some direction. You can think of that as a magnitude and a unit vector, right? So, length five, in, say, the same direction in three-space as [ 3 , 4 , 5 ]. That means the unit vector of `[ .424 , .566 , .707 ]`, right? Now scale that by your magnitude, and you get `[2.12 , 2.83 , 3.454 ]`. Your `x = [7,3,5,8,-3,-2]` means a vector of magnitude 7 in dimension 1 (x?), 3 in dimension 2 (y?), 5 in dimension 3 (z?), 8 in dimension 4, and so on. So, the difference that you're noticing is terminology; matlab's dimensionality is the dimension of the matrix (`m x n` usually), but the dimensionality you're talking about is how the vector describes space. A useful way to tie the two together is that the vector you described, `x = [7,3,5,8,-3,-2]`, is six observations in 1-d space. So each observation is truly 1-d, but the collection of them has to be recorded in a `1 x 6` matrix. 
helpful - thanks!
I think you get the gist, but I wanted to point out that "directionality" is in some sense equivalent to "being a series of elements" - you can't add directionality to a scalar without specifying additional values. So your intuition wasn't exactly wrong, just a little bit confused.
you can always get yourself some cheap numeric keypad like [this](https://www.amazon.co.uk/Computer-Numeric-Keypad-Numpad-Keyboard/dp/B006W2HE6S/ref=sr_1_13?s=electronics&amp;ie=UTF8&amp;qid=1483064529&amp;sr=1-13&amp;keywords=numeric+keypad) which is basically just a small keyboard, and a couple of [buttons](https://www.adafruit.com/products/1194), take the board of the keypad out, solder wires from the buttons to the 1, 2, 3 and 4 keys and put everything in a [project box](https://www.amazon.co.uk/TAKACHI-LC135H-N-W-Enclosure-Compartment-Handheld/dp/B01IMUZODM/ref=sr_1_46?s=industrial&amp;ie=UTF8&amp;qid=1483064953&amp;sr=1-46&amp;keywords=plastic+box) and voila, you've got a button box that looks like the thing in your link and sends the keystrokes you want yo the computer, dirt cheap and no programming or custom electronics.
The numbers in the vector *are* the direction in which the vector points. You seem to have a fundamental mathematical knowledge gap. Your problem has nothing to do with Matlab. 
Don't take directionality so literally it's really just a learning tool. You can draw it in a space pointing in a certain direction. Watch the videos. 
&gt; The numbers in the vector are the direction in which the vector points. Right. The first number is how long the vector is in the x direction, the second is how long it is in the y direction, etc.. Ultimately these are just heuristics though...don't get all hung up on this, you really need to go study elementary linear algebra ... reddit and wikipedia can't patch up serious lack of knowledge as much as refresh your memory.... [edit: not you, but the op]
yes that wasn't aimed at you :) i was agreeing with you the op's problems are much deeper than matlab!
Cool. I wasn't offended, I just thought you might have hit reply to the wrong comment. 
Wouldnt Mt be 0.6 for nearly every value of i? Mo never changes from 0.6; you're setting the array Mt to 0 for the first value and 0.6 to everything else. As a matter of fact, I'm not sure what you're trying to accomplish with your loop. You already solved Mt in line 4 for one cycle, but you never say what you want to change between cycles.
Either the S-curve you have plotted is discontinuous, or you do not have a full period. Either way, to answer your question: hold on; ncycles=10; for a1=1:ncycles if (mod(a1,2)==0) plot(t+2*T*a1,Mt); else plot(t+2*T*a1,fliplr(Mt)); end end hold off; Appending it like I did is not a good way to do this. A good practice would be to pre-allocate t and Mt and then fill it in accordingly.
Try str2num() or str2double()
I've tried str2num(CODOB) and str2double(CODOB), however it is saying undefined variable. 
str2num is meant for changing something like "12" saved as a string into a number. I had hoped it would work for your purposes, but I guess not. I know I've done what you're looking for, but it was years ago. Maybe try abs('codob')
Read this: https://www.mathworks.com/help/matlab/ref/typecast.html
&gt; A benchmark is intended to compare performance of one particular version of MATLAB on different machines. It does not offer direct comparisons between different versions of MATLAB because tasks and problem sizes change from version to version. From the doc on bench
[removed]
Sorry for any bad grammar, not a native speaker. First of all, Matlab is not just a 'introduction to coding syntax'. It is a complete programing language that you can use to create very complex software. Regarding your main issue: You have not specified what exactly you struggle with but tackling a problem using Matlab, or any other programming language, generally consits of two steps: 1) Figuring out the algorithmic procedure that will give you the result you want 2) Implementing the procedure using the tools you choose (in your case Matlab) Dealing with these two steps sucessfully takes practice. I recommend looking up examples and solving as many of them as you possibly can. Especially the first step require a way of thinking that you really can only learn by working through examples on your own rather than reading some textbooks. By working through examples I mean programming them by yourself not just looking up the solution and thinking 'Ok I unterstand this one'. Some possible resources: https://projecteuler.net/ https://www.mathworks.com/support/books/book62199.html http://poincare.matf.bg.ac.rs/~djenic/literatura-matlab.pdf http://mc.stanford.edu/cgi-bin/images/e/e3/Darve_cme102_matlab.pdf There is a shitload of resources online, the problems do not really need to be Matlab specific. I do not know your exact situation, but changing major because of a stupid Matlab course seems silly to me. Good luck!
Read the Matlab tutorial and do all of the examples and exercises. If you can't figure out how to get some code to work, then read through forums like StackExchange. 
need more data. can you post corroborating numbers? where are you getting the memory usage from, task manager? how much total memory do you have? if you type 'memory' at the command line it should tell you matlabs current memory usage. show us the results of running 'memory' after each iteration of your script. try starting matlab from the windows cmd prompt with 'matlab -nojvm -nodesktop' and see if that makes a difference. this will limit your matlab instance to side effects of m-code only, isolating it from the jvm and the IDE. 
I think this maybe it. Thanks for the links, it was an interesting read.
I've taken the numbers from the processes list in task manager (which I now see may have been an suboptimal idea). By using memory command in Matlab I've noticed that the values, in case of properly written code (or code interrupted before reaching faulty section), were consistent and stable. Only when I run code generating errors that memory usage is rising. http://pastebin.com/5B0CSDmq 
Do you really think it's important to learn to code just for a subsection of a design course? What I'll do differently this time is practice, I've never practiced Matlab because I thought it's like math, once you understand the concept it's easy to follow the rest. And thanks for pointing out what's my problem is. I know I have to do something differently this time. I hope practicing would make be better at Matlab. 
[removed]
[removed]
I think the best way to introduce yourself to coding is to think how you would do it. G hand for one item. Then how to do it for two and the for many. Even complex things could be don't by hand. Just really, really arduously. 
if i understand you correctly you have a vector of numbers corresponding to the number of days since some start date day_num=[1,2,3....]; to convert these to matlab serial dates, add your day_num vector to a matlab serial date for the start date: start_date=datenum(year,month,day); date_vec=start_date+day_num; resulting date_vec will be a vector of matlab date numbers. you can manipulate that vector in various ways, e.g. datestr will give you the date string, datevec will separate into year month day components 
There's no function "month". Are you sure your assignment wasn't just providing pseudo-code, and expecting you to implement it for real? Or maybe you were given some functions in lecture, or a previous assignment, that included a "month" function? You might start by reading the documentation for the various date handling functions, particularly datevec. 
If you read the documentation for datenum() it should explain everything. 
EEE at UCL is fun. Pm me I can help you out if you need it. 
Yup, you need to have a "month" function that takes in a time and returns something else
[removed]
Dope, thanks!
You don't. For an extension of this concept, check out: https://en.wikipedia.org/wiki/Illegal_number
&gt; When you're trying to reverse engineer an unknown format, you generally have to try things until you get a reasonable result. That is, load the data assuming it is different formats each time, and just looking at it. if at some point it becomes a fibinachi sequence, or monotonically increasing you're doing it right. It's an assignment after all. check 'help fread" to see how to do that. tip: dont forget to fclose(...);fopen(.;..) after every fread(...) to reset the stream
gawd, people... the "finance toolbox" has a "month" function (https://en.mathworks.com/help/finance/month.html), but you probably do not have that toolbox. I think the functionality is a bit beyond your level to implement yourself, so your only choices are either, work at a university computer with that toolbox, OR, go to said computer, type "edit month", copy all contents to a file called "month.m" in your path, and repeat this process until you have included all dependencies of month, which may either be easy or impossible, i can't tell without the toolbox.
I am sorry that most commenters said that there is no "month" function in MATLAB. There is one and it is associated with *datetime* data type. The "time" vector is a double array, which could be composed of serial date numbers. What could have happened is that you have a MATLAB version prior to 2014b. Also, the command should be month(oisst_t1.time) not month(oisst1.time) 
The divergence of the gradient of a function corresponds to the laplacian, not the gradient of the gradient. See Wikipedia for more info: https://en.m.wikipedia.org/wiki/Laplace_operator
Or this
Ummm... "help fft" 
I'm taking a class in ancient greek right now, so go for it.
&gt; For just a given equation Do you mean that you have a specific function of time (e.g. h(t) = sin(2 pi t)) and you want to transform it to be a function of frequency (e.g. hhat(f) = (delta(f-1) - delta(f+1))/2i)? In that case you're better off using wolfram alpha, or consulting a table of Fourier transform pairs. The Fast Fourier Transform is an algorithm that works on sequences, not equations. Sometimes the sequences can be specified by an equation, and sometimes not. &gt; I am struggling to determine the frequency domain What do you mean by this?
Is it y = oisst1.sst(7,70,:);
Geia!! τα 3 πρωτα ειναι σωστα γενικα, απλα λιγο κοιτα που αλλαζεις σειρα στο κειμενο (ισως δημιουργηθηκε προβλημα οταν το ανεβασες)! το 4 θελει λιγες αλλαγες. θα το ποσταρω ολο μαζι μετα! 1) μηπως εχεισ κανενα τυπο για την μετατροπη εκπεμπομενης ακτινοβολιας σε ηλεκτροβολτ? μηπως ειναι αυτος: h(c/λg) = Eg &lt;=&gt; λg = 1.24 / Εg?? 2) η εκφωνηση απο την 2η Ασκ που ειναι ή δεν μας ενδιαφερει??
 %% Askisi 1 x=0:0.7:8 y=sin(x) %% Askisi 2 x = 0 : 0.3 : 9 y = x .^ 3 + 3 * x + 5 %% Askisi 3 A_4x4 = rand(4) A_4x5 = rand(4, 5) A_5x6 = rand(5, 6) a = A_4x4(:, [2, 3]) b = A_4x5([1, 3], :) c = A_4x5(:, 2 : 4) d = A_4x5([2, 4], :) e = A_5x6([1, 3, 5], :) In a different file named eV3nm.m paste the following %% Askisi 4 %for i=0:5 % or i = 1:6 c = 299792458; % m / s h = 6.62607004e-34; % J s eV = 1.602176565e-19; % J factor = h * c / eV * 1e9; % conversion factor / 1e9 because we want nm choice = input('Type "1" to convert eV to nm, or "2" for the opposite: '); if choice == 1 x = input('eV = '); fprintf('nm = %f\n', x * eV) elseif choice == 2 x = input('nm = '); fprintf('eV = %f\n', x / eV) else fprintf('\nInvalid choice!\n'); end choice2 = input('Type "1" to convert eV to nm, or "2" for the opposite: '); if choice2 == 1 x = input('Eg = '); fprintf('lg = %f [nm]\n', factor / x) elseif choice2 == 2 x = input('lg = '); fprintf('Eg = %f [eV]\n', factor / x) else fprintf('\nInvalid choice!\n'); end %end If you want (if nessesery) you can erase the comment indicator (%) from "for" and "end" to repeat 6 times. TESTED with : http://www.convertunits.com/from/N-m/to/electronvolt and http://halas.rice.edu/conversions and http://www.photonics.byu.edu/fwnomograph.phtml
Ευχαριστω παρα πολυ για τη βοηθεια! Αφου λεει "Βεβαιωθείτε ότι το script file σας δουλεύει σωστά χρησιμοποιώντας το για τουλάχιστον 6 μετατροπές." λογικα το % δεν χρειαζεται. Σωστα ειχα ξεχασει να την ανεβασω τη 2η εκφωνηση: Θεωρείστε ένα κουτί το οποίο είναι χωρισμένο σε δύο ίσα μέρη, με ένα τοίχο. Στο κουτί υπάρχουν νανοσωματίδια. Ο τοίχος που χωρίσει το κουτί έχει μια τρύπα η οποία επιτρέπει να διέρχονται τα νανοσωματίδια. Περνάει από την τρύπα μόνο ένα ανά μονάδα χρόνου(second). Θεωρούμε ότι το σύνολο των νανοσωματίδιων Ν, βρίσκονται αρχικά στον ένα χώρο του κουτιού και η τρύπα είναι κλειστή. Ανοίγουμε την τρύπα και τα νανοσωματίδια πηγαινοέρχονται τυχαία μέχρι να επέλθει ισορροπία. Στατιστικά ο αριθμός των νανοσωματίδιων στο ένα μέρος (α) του κουτιού σε συνάρτηση με τον χρόνο δίνεται από την σχέση: Ν_α=(Ν/2)[1+e^-(2t/N)] Να προσομοιώσετε το πρόβλημα με κώδικα MATLAB, και να παρουσιάσετε σε διάγραμμα την μεταβολή των νανοσωματίδιων σε σχέση με τον χρόνο. Ο συνολικός χρόνος της προσομοίωσης είναι 100,000 s. Στο ίδιο διάγραμμα να παρουσιάσετε και την παραπάνω θεωρητική σχέση. Να κάνετε την προσομοίωση για συνολικό αριθμό νανοσωματίδιων Ν= 1000, 10,000, 100,000, και να καταγράψετε μέσω του κώδικά σας το χρόνο που κάνει η CPU του υπολογιστή σας να τρέξει την προσομοίωση. Επίσης να αναφέρεται το μοντέλο του επεξεργαστή του υπολογιστή στον οποίο τρέξατε την προσομοίωση.
Do you want to perform fft on a recorded signal (e.g. in numbers? e.g. [1, 5 , 9, 8, 6, 3, 5, 6, 8, 9, 8, 7]) Or do you want to perform a fourier transform of an equation? (e.g. x(t) = sin(20t)/t )
Τι να πω φαινεται πολυ σωστο και τα αποτελεσματα λογικα. Στην σειρα 8 μπορεις νομιζω να παραλειψεις την τελεια απο το .* αλλα δεν εχει διαφορα. Οι χρονοι σε μενα ειναι &gt;Untitled For N = 1000, duration: 0.279639 For N = 10000, duration: 0.272893 For N = 100000, duration: 0.239883 &gt; Untitled For N = 1000, duration: 0.310945 For N = 10000, duration: 0.254353 For N = 100000, duration: 0.269273 &gt; Untitled For N = 100000, duration: 0.313967 For N = 10000, duration: 0.210848 For N = 1000, duration: 0.205035 &gt; Untitled For N = 100000, duration: 0.242959 For N = 10000, duration: 0.218288 For N = 1000, duration: 0.211283 μειωνωνται για καθε επαναληψη. Απορω γτ ζητησες βοηθεια? εχεις εναν αριστο κωδικα! Εσυ τον εγραψες?
on an equation x
Use `find`, maybe. If you want to remove a random one it will take a few lines, but something like &gt; A = [ 2 1 1 2 2 1 2 1 ]; B = 2; &gt; index = find(A==B); &gt; A(index(randi(numel(index)))) = [ ]; will do what you want
 n = 100; values = zeros(n, 3); values(:, [1 3]) = -1; values(:, 2) = -4; matrix = spdiags(values, [-1, 0, 1], n, n);
First question is why do you need this? Because you probably don't need this. 
I suppose that's about the only good reason. 
Got your PM :) If I understand correctly, you mean that you have non-zero signal values at negative times. However, your `yi` values don't inherently have a time associated with them; you could plot them at any `t` you like. If that's the case, `plot(t+tc,yi)` will shift your signal entirely into the positive time domain. If there's some deeper significance to the time than where the signal is being arbitrarily plotted, it's been lost on me for this one :) `gauspuls` seems to always center the signal at `t=0` as a convention, but it's not a function I really use. If you want to shift the signal, that can be done freely afterwards.
Alright thanks for your input. The objective I'm trying to achieve is to have the signal already in the positive time domain before the plot. In the assignments I learn, we make use of zeros so that we can do a time shift on the signal. However I consistently run into this error "Dimensions of matrices being concatenated are not consistent." tc = gauspuls('cutoff',5e6,0.5,[],-40); t = (-tc) : 1e-8 : (tc); yi = gauspuls(t,5e6,0.5); %Addition of the zeros, before I implement the shift yi1 = [yi; zeros(1,100)]; %This is where the error occurs If there's anyone else looking at the post, do provide your inputs as well, thanks! 
You're concatenating row vectors, but the semicolon is telling MATLAB to treat them as if you were concatenating columns. `yi1 = [yi zeros(1,100)];` would avoid the dimension mismatch. Also consider whether you want to pad before or after your pulse to shift in the desired direction. In any case, padding the signal with zeros will still require that you similarly adjust your time signal before plotting to avoid dimension mismatch at that stage.
Alternatively: 10 + 30*round(rand(),1);
Think i figured it X=exp(1i*(k*D.*sin(theta'))/2) Y=exp(1i*sigma') [m n] = size(X) A = reshape(X(:)*Y(:).', m, n, [])
I believe you are misinterpreting the subscripts "_{tx,rx}". Each equation is showing you how to compute a given quantity for a single transmit and receive pair (equation 5 is different, in that one you actually do have a separate quantity for each element). You should not have two separate quantities `dtx` and `drx`, but instead one quantity for the combined pair `d_tx_rx` (slight revision - you *will* need `dtx` and `drx` later, see my note about Equation 6). You need to do this for every possible pair. There are 64 elements, so you'll have a 64x64 matrix of distances. `d(13,43)` will be the distance from element 13 to 43 via a path to the point reflector. I notice that, right now, you appear to be working with a single tx/rx pair. I assume this is for debugging, so you can get the equations right and then worry about doing the computations for the whole array later. I think that's a great tactic. I'm going to suggest, however, that you actually compute all 64x64 distances, mainly because I think it will help you with some of the misunderstandings I see in your code. It should also help make the 3D matrices more obvious when you get there. For now, compute things using loops. It can be tough to both understand the equations and vectorize things properly at the same time, so for now punt on writing fast code and just use the loop until you understand what's going on. Then you can be a good Matlab student and find a clever way to vectorize everything. If it's too slow in the meantime, I suggest reducing the number of elements in the array. 4 elements might work nicely for debugging. In Equation 3, G is a *function* of `w`, so you don't want a fixed value of `w`. You're going to want to use a vector of `w` values corresponding to the elements of `Fw` (notice that `Fw` is also a function of `w`). Matlab will complain if you don't get the element-wise multiplication correct (you want the dot-multiply operator: `.*`). Re: Equation 4 - You don't need to use that in your code at all. I suggest you read the paragraph following the equation more carefully. Equation 4 is the general equation, Equation 5 is what results when you apply it to the situation at hand. Note about Equation 6: You're computing this correctly at the moment (for a single tx/rx pair). Note that the `dtx` and `drx` values are not the same as the `d_tx_rx` matrix values, but they *are* related: `dtx + drx = d_tx_rx`, or, closer to what it will probably look like in your code eventually: `d(tx,rx) = d(tx) + d(rx)`. I hope the subscripts are starting to make a little more sense? On 3D matrices: Equation 3 is going to give you your first 3D matrix. I don't know if there's a nice way to vectorize it, I'd have to sit down with it, but for now just do it in a loop like I said earlier. You'll get a vector first, and then you can [reshape](https://www.mathworks.com/help/matlab/ref/reshape.html) it into a 3D array with its first two dimensions having length 1. It will look something like: G = zeros(64,64,length(w)); % Creates a 3D array of all zeros. You want to pre-allocate so Matlab doesn't have to change the size of this array later for tx = 1:64 for rx = 1:64 Gtxrx = %Equation for G(tx,rx) here G(tx,rx,:) = reshape(Gtxrx,1,1,[]); % [] will automatically insert the correct value for the last dimension. You could also specify it yourself end end Finally: Why do you think the Gaussian burst is non-causal? Why can't you use it the way it is now? ****** I haven't looked at everything in your code carefully, there are probably other issues as well. I also haven't fully explained everything, but I think that should be enough to get you started. I gave you a little extra help with the 3D matrix thing, because I think your brain is doing something along the lines of "GAH 3D MATRIX!!1" and you're not applying what you know. The assignment you were trying is almost backwards - you were trying to *reference* something as though it was *already* 3D. Anyway, it's important that you figure out how to work things like `reshape()` from the documentation. It's fine if you don't understand it immediately, just open Matlab and play around with their examples until you can see how it works.
Well, the matrix *is* sparse... it's just not `sparse`.
Thanks, will look into it! 
Alright! It's better now! Thank you! 
Lol, that's true. 
Thanks I will give it a try!
I just realized it doesn't accept non-numeral input.
Can you please elaborate on "laplacian takes into account the direction and magnitude"..thanks
Out of curiosity, how many combinations are we talking here? In your example, we have 3 sets (A=1,2,3), each with 3 values. Let's change to 5 sets (A=1,2,3,4,5) with (B=6,7,8,9,10) possibilities for clarity of discussion. That would correspond to `6*7*8*9*10` combinations and each combination has `5` indices associated with it (one for each A parameter set). That's an array with `6*7*8*9*10*5` values. The values default to type `double`, so 8 bytes each. That's a bit over 1 MB. Using `uint16` instead cuts that to 2 bytes per value, but introduces its own difficulties. Let's look at a parameter matrix of size `100x2`. If we're talking 10 different Parameter A values, each with 10 possible Parameter B values, we're looking at an array with 745 GB of info (if I did the math right). That got big really fast! You'll need to do the math on the scope of what you're trying to do in terms of memory needs. You may need to break this down. You can substitute processing time for storage needs through looping like so. This should give you some ideas on how to proceed. A = 1:4; B = 5:8; C = 9:12; D = 13:16; AB = combvec(A,B); % 2x16 CD = combvec(C,D); % 2x16 ABCD = combvec(AB,CD); % 4x256 ABCD = combvec(combvec(combvec(A,B),C),D); % 4x256, same as above % ABCD nested combination gets big REALLY fast. % Instead, we can loop. looped = []; for idx=1:length(CD) looped = [looped [AB; repmat(CD(:,1),1,length(AB))]]; % For each possibility in CD, combine it with all of the AB possibilities. end % looped is the same result as ABCD. % Rather than store each combination in the loop, we could test for minima % This approach only needed 64 values in memory instead of 1024. So to go back to that 745 GB example -- if we broke that into two sets of indices and looped, we'd only need 8 GB of memory. Still quite a bit, but getting more manageable. Add an extra layer of looping and the problem's even more memory-friendly at the cost of CPU time. Again, finding the balance will depend on just how many combinations you're looking at. Combinatorics can be rough that way. If your number of parameters and possibilities is very large, you could easily get into numerical optimization methods territory instead. In that case, you'd be exploring a high-dimensional landscape via whatever algorithm is appropriate for your problem (especially tricky because it's not continuous) instead of enumerating each possibility (the current approach).
+ So between every data point have that set up, with the appropriate c values for it to perform the interpolation, then plot the contour slice over the top without the colour settings? edit: Realistically I need a banded distribution (like those shown in the figure), not a continuous one like I would get with patch of fill3.
[removed]
In order to plot the confidence bounds you are going to need to estimate the uncertainty in your fit estimate. Once you have that, simply plot your original data plus + uncertainty and original data - uncertainty to get confidence bounds. As for color, that's easy. You can specify arbitrary RGB colors with plot(data,'color',[R G B])
Hello, Thanks for the quick reply, I think if my math is correct I have something like 3e9 possible combinations which would mean about 24GB, I guess. Your solution works but I am yet to obtain the results because it will probably take a while. &gt;If your number of parameters and possibilities is very large, you could easily get into numerical optimization methods territory instead. Do you have any algorithms in mind so that I could take a look into them, if its not too cumbersome. Thank you very much. 
Why does the size of the row matter? Just get the entire file into a single string and then do the same thing you would do for a small row of characters. Maybe there are some characters that won't change? Newlines, if nothing else, should probably not be changed. So what you can do is store where those characters are in the original string and then change them back after you do the conversion.
What do you mean by "imported"? I know there are ways to import things into the workspace using the GUI, but I would probably use `fopen` and `fread` instead. If you've used the GUI, I'm guessing you probably have a cell array of strings or something like that. If that's the case, you should be able to easily write a loop to concatenate it. That's just for practice though, then use something like `strcat` or `strjoin` instead. If you're learning Matlab (this sounds a lot like a beginner Matlab homework assignment), I highly suggest you play around with all the methods I described. Look up those functions in the documentation and get to know them. Other relevant functions would be `fgetl` and `fgets`.
Sorry this isnt as helpful as it could be i am on mobile, At the end make an if statement for the target value. Which most of the script if it fails (except the clear all) 
 %% Generate noisy test data f = @(x) (1.*x.^2 + 3.*x + 5); % Sample function xdata = (rand(100,1).*5); noise = 25.*rand(size(xdata))-0.5; % To make the fit noisier ydata = f(xdata) + noise; %% Calculate and plot fit kfit = fit(xdata,ydata,'poly2'); % Find 95% CI bounds x_ci = linspace(min(xdata),max(xdata),25); y_ci = predint(kfit,x_ci,0.95); %% Plotting figure;hold on plot(xdata,ydata,'k.') % plot data plot(x_ci,kfit(x_ci),'r-') % plot fit line plot(x_ci,y_ci,'b--') % plot 95% bounds legend('Data','Fit','95% CI')
Thanks, I'll take a look at this in the morning and get back to you. :)
I've definitely seen issues with Guide figures on Mac if all components are not of the same units that will cause components not to be rendering even in Guide (Windows is unaffected by this bug). The fix is to open the Guide *.fig in Windows, select all the components and set their units to 'pixel', or your preferred units. 
More of the code? How about...some code? :)
It looks to me like a poor transition in the physical layout from one system, which could be a result of the platform, version, or just as likely, the different monitor size/resolution. I have spent hours perfectly arranging the elements of Matlab gui's, only to find out that when I open them on a different pc they look like trash or elements are off screen. I would venture to guess that your elements are still there, but have overflown the screen. You can look up the window resizing options to determine if they are absolute (pixel based) or scaled (a percentage of the window). Matlab uses the bottom-left corner of windows as reference, and it looks like you lost things on the top and right of your GUI. My guess is that the developer has either a larger monitor or more pixels than yours. There is an element inspector (maybe object browser?) that you can use to highlight different plots/boxes/etc within the layout. If you can find a way to select the elements that are off screen, you can directly enter the x-y positions to somewhere you know to be within your view (highlight something you can see and find out its position). Another option is to use a different pc/monitor, because once you move everything around, the original developer is probably going to hate it 😐
Why not try putting all the y_values in a 3xX matrix and using the min(Your_Val,[],2) to give you the minimum in each row, max() should behave the same.
Whoah, i did not know that :O, appareantly windows bans some keywords as filenames. [This forum](http://superuser.com/questions/206423/windows-7-can-not-rename-a-file-to-aux-svg-the-specified-device-name-is-inva) suggest to use a the command line tool "rename", which in your case might look something like (in matlab:) !rename aux.inf notaux.inf
Did you make sure you were in the right path? that is, you could see the target aux.inf in your current folder? If not, add the path to the command, see [this](http://www.computerhope.com/renamehl.htm) source. 
finally solved.. !rename \\?\&lt;full path&gt;\aux.inf notaux.inf
Just taking a guess here, laying in bed before getting up for work and away from a computer. I also don't do Macs. But. If I had to guess, if you're doing absolutely nothing differently and this is truly specific to OS version, I'd guess it's a permissions issue. The error is saying it's trying to get access to write to that file but it's been denied. Better code would be to check the value of "fid" after the fopen call to ensure it was successful before trying to write it. The file in question isn't read only or anything is it? If nothing else and this is something that needs to happen tomorrow, could you not use a different machine? 
Does the file you are supplying via the first parameter exist? Should it? Do you have write access to the file and to the directory its in?
I'm not sure not everything what you want to do is clear to me but at the very least: F=@(x) f + r*(max(0,g)) should be F=@(x) f(x) + r*(max(0,g(x)))^2 edit: I believe the above is related to [Lagrange multipliers](https://en.wikipedia.org/wiki/Lagrange_multiplier)
Absolute worst come to worst, open up MATLAB online and run the code. If it's not very intense, it should complete fairly quickly. Run a few tests and see how well it works before you decide to do a live performance with it, of course
yeah, this is an old assignment for me, I solved it doing exterior penalty functions, but I want to learn how to do it this way also, the task is to create our own minimization function so I cant use the fmincon
alright, I will check this out! :)
The other folks have already given the correct answer, but to be a bit more explicit: GUIDE's default `'Units'` property for graphics objects used to be `'characters'`, which are defined by the system's default `uicontrol` font. Per [the docs](https://www.mathworks.com/help/matlab/ref/figure-properties.html#property_Units) &gt; These units are based on the default `uicontrol` font of the graphics root object: &gt; * Character width = width of the letter x. &gt; * Character height = distance between the baselines of two lines of text. &gt; To access the default `uicontrol` font, use `get(groot,'defaultuicontrolFontName')` or `set(groot,'defaultuicontrolFontName')`. So, depending on MATLAB version, the first thing most folks will notice when opening a GUI in another OS is that the layout has been completely butchered. The default is now `'pixels'` (I don't recall when it changed). Why they ever thought `'characters'` would be a good default is totally beyond me...
yup, that worked great :D
this is what i wrote so far , i dont know if it would help function sinus(A,f) Fig=figure('Name','Redresorul Bialternanta',... 'units','normalized',... 'Position',[0.3 0.3 0.5 0.5],... 'NumberTitle','off'); uicontrol('Style','text', ... 'Units','normalized', ... 'Position',[0.01 0.95 0.1 0.04], ... 'String','A'); uicontrol('Style','edit',... 'Units','normalized',... 'Position',[0.01 0.9 0.1 0.04],... 'String',A,... 'Callback',['A=','str2num(get(gco,''String'')),close;sinus(A,f)']); uicontrol('Style','text', ... 'Units','normalized', ... 'Position',[0.01 0.85 0.1 0.04], ... 'String','f'); uicontrol('Style','edit',... 'Units','normalized',... 'Position',[0.01 0.8 0.1 0.04],... 'String',f,... 'Callback',['f=','str2num(get(gco,''String'')),close;sinus(A,f)']); T=1/f; t=(0:T/100:2*T); y=A*sin(2.*pi.*f.*t); subplot(3,3,1); plot(t,y); title('Semnalul de intrare');%imput signal grid on; x = imread('poza.png'); subplot(2,2,3); image(x);
Something like: rectified_y = abs(y) Should work if you're just trying to make the signal look like the picture, and I suppose should be ideally correct for a rectified AC signal.
It should create a file with the participants answers and time it takes for them to answer. All of the files have been excel. Thanks so much for your reply! 
Yes, MATLAB has an online portal. You might have trouble if you're reading files or outputting files, but otherwise I've had it work fine. It runs inside a browser. You can upload your files, or simply copy-paste the code. Alternatively I think Octave is a free software that runs MATLAB scripts exactly (don't know how well though). Your best bet is still to get another computer with MATLAB working on it. It's the safest and most reliable.
This makes so much sense! I'm inputting just a participant ID and their grade level but I don't know where it is saving to. Do you know how I would find or change that? 
How would you do that? Thank you!
You can transfer a license from one computer to another, yes. And if the file in question no longer exists where it expects it to, then yes - that would certainly be an issue.
Just ask it. If he's got time, then he'll be able to help, if not then someone else probably will.
I have completed it now, in a similar method to what you suggested but by using getframe instead (see below) to take an image and then impose that onto a surface figure('units','normalized','outerposition',[0 0 1 1]) contourf(x,y,c,... 'LineStyle','none'); box off set(gca,'visible','off') h = getframe; im = h.cdata; close(gcf) figure surface(x,y,z,im,... 'FaceColor','texturemap',... 'EdgeColor','none',... 'CDataMapping','direct') colormap(map) This gives me [this](http://i.imgur.com/XRx4UrF.jpg), which is what I wanted. Thanks for your help.
I doubt it really works on integrated graphics. You may not hit a seg fault right away, but it will crash. There are two issues that I know of when doing a linux install: proper folder permissions and using a standard c++ library object that actually works. I am going so assume you are familiar with chown for the folder permissions, then you have to link to a different libstdc++: cd &lt;MATLAB DIR&gt;/sys/os/glnxa64/ sudo mv libstdc++.so.6 libstdc++.so.6_backup sudo ln -s /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.&lt;build, just tab complete&gt; libstdc++.so.6
Good stuff. Bear in mind that the texture is probably going to be raster if you want to keep all your graphics to be vector, not that Mathworks give a damn about that lately. 
If it was then you wouldn't have had the issue unless there's a massive difference in screen resolution.
Possible, I'm using a retina display. No idea what it was made on. 
The `\` operator should work just fine. Sidenote: I would advise against making a bunch of anonymous functions; there's not much virtue in writing things in a single expression if it ends up being more difficult to follow. Calculate displacement and index it, don't multiply it by a mask. Also, some quantities probably get reused in multiple constraints and you don't want to recalculate them.
It is working for LINJE_a2 and LINJE_a3. LINJE_a1 makes a line in the wrong place. The loop that plots 3 balls work as intended.
Does the user need to interact with the output of RegionDetector? You say it identifies regions and then prompts for the next action, it's unclear whether the regions are saved somewhere else or if the entire purpose is to show them to the inspector right then and there. Does RegionDetector take very long to run? What is your desired workflow? Do you want to acquire a single image and then view its detected regions before going to the next image, or do you want to acquire a bunch of images and then look at the detected regions later?
Look at [uitable's properties](https://www.mathworks.com/help/matlab/ref/uitable-properties.html). Check out "Units" and "Position".
That's what I did! Thank you fellow idiot engineer :) 
Why are these two separate programs? Instead of saving the .bmp/.jpeg, you could just pass the matrix to a function that implements RegionDetector (go ahead and save it as well, if you need the documentation...).
Gotcha, I thought they were both Matlab. You could point RegionDetector at a directory, and have it monitor that for new files (looks like a decent way to do this on Windows would be this [FileSystemWatcher](https://www.mathworks.com/matlabcentral/answers/9957-using-net-filesystemwatcher-to-listen-for-new-files) thing) and automatically process any new pictures. You'd have to save all the pictures to the same directory though, or otherwise point RegionDetector to a new directory every time you switch.
I've read through your comment, and I have a few queries from it. I'm seriously bad at MATLAB and didn't want this for my FYP but I had no choice, so.... its gonna take quite a bit for me to understand everything in one go. Let me get a summary from this: Equation 1: You mean that instead of getting both Dtx and Drx values, I should be getting a combined one instead? Like you mentioned d_tx_rx. So it should be: dtxrx= sqrt((Xref-Xtx).^2+(Zref).^2) + sqrt((Xref-Xrx).^2+(Zref).^2); Also, if I'm going to replicate 64 elements, I have to create a range for it, correct? e.g 1:64 Equation 2: I assume that there are no errors here, I'm just using FFT to convert the signal to the frequency domain. Equation 3: Okay this is the confusing part. If I am going to use a vector, do I use the function linspace? From my understanding of &gt;You're going to want to use a vector of w values corresponding to the elements of Fw (notice that Fw is also a function of w) , I just have to use the range of values produced in equation 2 right? Also, does it mean that if I'm using a single element for now, I can have a fixed value for G(w)? Equation 4: Noted on this, thanks! Equation 5: I assume that this is correct as well Equation 6: Yes currently I'm using a single tx/rx pair as required by my supervisor, he said using 1 element is better for debugging for now. Where would I be implementing: dtxrx = dtx + drx Would it be in equation 1? Equation 7: No errors. Equations 8: No errors, using IFFT to convert the signal back in to time domain. As for the FMC, my supervisor said that the FMC data(3D matrix) should be retrieved at the end, but you mentioned that equation 3 would give the first 3D Matrix, how would this be implemented for my post processing? As for the Gaussian burst, my supervisor just said, "Your input signal looks Ok, but why there is negative time (non-causal)? So how would you implement negative time in practice?" What I learned in my most recent module is that we usually time shift signals that are non-causal to make them causal and implementable. Thanks for all your help, I've been stuck here for 2 months now and time really isn't on my side for this project. Would love to take my time learning the ropes of MATLAB, but I have to rush now. It sucks worse when my supervisor just replies me "Its easy and simple to code this" blah blah blah. 
Of course , maybe someday i can give back to the subreddit .
hoping so! I've been coming here since a complete beginner, and I still suck at it compared to many but I can stab my way through most problems and help a fair few people now as well!
https://media.giphy.com/media/1Z02vuppxP1Pa/giphy.gif 
I have a course for my degree about learning MatLab. We just used a AVHRR dataset to practise writing the codes for MatLab and learning how to use certain functions!
example=axes() example.XLim = [1,1.8e5]; example.YLim = [-10, 100]; example.XTick = [1:3600:1.8e5]; example.YTick = [-10:100]; Ticks work like vectors, remember how to make a vector of 1 to 100 in steps of 5? Exactly the same. XTickLabel is the command you were thinking of btw, it's only if you want to give specific labels to the ticks other than the numbers they have. 
https://m.popkey.co/9d830d/1VdkX.gif
ah goddamn it, this all popped up whilst I was writing my answer so now I feel all left out. http://giphy.com/gifs/love-funny-jim-carrey-bGCRttS05VC7K 
Yeah, I've noticed the quality takes a dive, trying to work around that as we speak.
You're using `line` like `line([x1 y1],[x2 y2])`. That's not right. You want to use `line` like `line([x1 x2],[y1 y2])`. The first argument is each of the `x` coordinates; the second argument is each of the `y` coordinates.
Thanks!
Say A is an n by n matrix with n eigenvalues that means that it is diagnalizable so you need to make something that only allows an n by n matrix, can see the size, calculate the amount of eigen values, probably an if statement for when it n = number of eigen values
I know there is a command to actually check that, but for the life of me can't remember what it is
there should be a function to get eigenvalues. Check if all of them are real and non-zero.
&gt; I'm seriously bad at MATLAB and didn't want this for my FYP but I had no choice, so.... This is important context to have. I will try to point you to the bits of documentation that you will need and/or explain things that you will have to use. &gt; I've read through your comment, and I have a few queries from it.... its gonna take quite a bit for me to understand everything in one go. I gave you a bit much for one comment, but I started responding to things and then kept seeing more, so it just kept going. Anyway, revising my approach a bit, I think this will work best if you start from the top and get each equation down before moving on to the next one. I'm happy to do this in the thread (here) where other people can potentially benefit from it, but it could get... detailed, so I understand if you want to move it to PMs. ******** On the Gaussian burst - I see you had another thread about that and it looks like you figured out something to do with it there. I'm just really puzzled by why the negative time is a problem. I think this is an incorrect use of "non-causal", which would imply that the signal at a given time depends on values that are not established until the future. For example, if you know about PID feedback control, using the derivative for control is actually non-causal, since the derivative changes depending on the signal's value a tiny bit in the future. Instead you use a backward finite difference (there are more complex methods, but now's really not the time) which is a causal approximation of the derivative. As the other guy mentioned, gauspuls just centers the pulse it creates at t=0, which happens to mean it starts at some negative value of time. But that doesn't matter, you could have the first time in your simulation be anything you want - ten million, negative pi - it doesn't matter. We tend to pick t=0 because it's intuitive and also because it means the time is exactly the same as the elapsed time since the simulation start, which is often more important than the value of time itself. Personally, I would just shift the time vector by `tc` like the other guy said. That way your entire signal is still the pulse and you don't have that "dead time" where it's zero. ******** Let's focus on getting equation 1. &gt; Equation 1: You mean that instead of getting both Dtx and Drx values, I should be getting a combined one instead? Like you mentioned d_tx_rx. &gt; So it should be: &gt; &gt; dtxrx= sqrt((Xref-Xtx).^2+(Zref).^2) + sqrt((Xref-Xrx).^2+(Zref).^2); Yeah that looks about right. Oops! I was thinking a 2-D array, but it looks like it's just a line. That will mean some of the stuff in my first post was a little funny, but it should make things easier. &gt; Also, if I'm going to replicate 64 elements, I have to create a range for it, correct? e.g 1:64 Yes, but there's a bit more too. Let's start from the top of your script. You define `No_elements`. Boom. Brilliant. That's exactly what you want to do. You should be able to change that one number and the script should generate the data for any number of elements you want. Now, the tricky part is actually using that number to generate everything else. Down below you define the reflector `Xref` and `Zref`, which is fine. Then you define `Xtx` and `Xrx`. I suggest you change those definitions to actually use `No_elements`. Knowing the number of elements and their `Elem_pitch`, you can calculate the x coordinate of each element easily. Well, you'll have to decide where the first element is too, but you can probably just use 0. Matlab gives you a couple of ways generate a list of numbers on a regular interval. You seem to know about [`linspace`](https://www.mathworks.com/help/matlab/ref/linspace.html?requestedDomain=www.mathworks.com) already, which is good if you know the endpoints and how many elements you want. There's also the [colon notation](https://www.mathworks.com/help/matlab/ref/colon.html), which you're (unwittingly, I bet) already using to generate the Gaussian burst. That works well if you know the endpoints and how far you want the elements to be spaced. Unfortunately, both of these require the endpoints. I would probably choose zero as the first endpoint, and then calculate the second endpoint, and pick one of the two methods. As you're trying to get that working I would recommend using just a few elements - 3 or 4 is fine. Then you can change `No_elements` to 64 and it should give you 64 x positions, no sweat. My interpretation of the paper is that each element both transmits and receives. If that's correct, then `Xtx` and `Xrx` will be the same. Now for `dtxrx`. First, I would compute `dtx` and `drx`, since you'll need them for equation 6 anyway. Those should be pretty easy to compute. You might notice that they're also the same if `Xtx` and `Xrx` are the same. Then you need to understand what `dtxrx` is trying to do. It's the distance between *all* tx/rx pairs. That means it has the distance from element 1 to the reflector and then back to each element (`No_elements` number of distances) AND the distance from element 2 to the reflector and then back to each element (`No_elements` number of distances), AND ... AND the distance from element #`No_elements` and then back to each element (`No_elements` number of distances). So that's `No_elements` times `No_elements` distances. The subscripts `txrx` are in correspondence with the indices of a matrix holding all of these distances. Look at the [mileage table on page 4 of this toll schedule](http://www.ohioturnpike.org/docs/default-source/Schedule-of-Tolls/2015_EZ_post.pdf) - the matrix you're creating is very similar to what's going on in this table. For now, it's probably easiest to put this in a loop. The `for` loops in my first post are rather similar to what you need. If you can get that down, I think the rest of it will begin to fall into place. 
I don't think you can make a matrix like that. You can make a cell array like that. And I could cook up a simple script to do that if needed. I'm on mobile and drunk, but could do it at work tomorrow fairly quickly. Edit: a= [1 2 2 2 5] b = a(a~=2); Gives b= [1 5] Build on that. 
hippie's right, you need a cell array for this: idx = { 'A' -1 0 'Under'; 'B' -1 -1 'No Work'; 'C' 0 1 'Over'; 'D' 0 0 'No Work'; 'E' 22 22 'No Work'; 'F' 3 2 'Under'}; result_idx = idx; [rn,cn]=find(strcmp(idx,'No Work')); result_idx(rn,:)=[]
post what you've tried. Matlab is used in a diverse range of topics so people might not be able to help because they don't understand the maths you've posted (i don't), but have the programming knowledge to help.
So what is it that's repeating here? You've already split your code into blocks, which is good, so try to make the first block into a for loop first. In the first block of code, your row is constant (100), but the columns are changing. Specifically, they're a range that keeps incrementing by a hundred. And for an extra special hint: your first block is 100\*0 + (96:104), your second block is 100\*1 + (96:104), your third block... you guessed it, 100\*2 + (96:104). Any way you can make use of that fact to write a for loop?
for loops are used when you are iterating through a certain variable in your code. In your case, you are changing 2 variables. Lets call them picture(ii,jj). ii changes from 100 to 500 with intervals of 100. jj changes from 100 to 400 with intervals of 100. (with subtracting and adding 4 on either side). Now use a double for loop and you're golden. for ii = something for jj = something something with both ii and jj goes here end end 
Your question is a bit vague to me but regarding: &gt;&gt;like how we can transpose a matrix from the x to y axis, using y=x' can we do this to get from x to z axis i recommend using reshape like a = rand(5) ; %create 5x5 dummy data b = reshape(a,[1,5,5]) ; %adds a singleton dimension at the beginning
then what is x? it can't be the location at each time, cause x and t are not the same size.
sooooo, do you have to integrate a function containing both x and t over t like so?: https://www.wolframalpha.com/input/?i=integral+of+e%5E(-x*t)+dt edit: in which case see [integral](https://nl.mathworks.com/help/matlab/ref/integral.html)
Hmm, what I'm doing is: * open Matlab * run psat * open simulink model through psat and run it, it works fine. I run Power Flow, it works fine. * then, I open the m.file in question and try to run it, and the error message pops in the command window in Matlab. That's basically it. I've never used Octave before. Is there anything I can fix to make this run? EDIT: This is what pops up in command window [Matlab 2012b] (https://snag.gy/id1OkG.jpg) Also, when I try to run the file it prompts me to select a directory. This is a remnant from the original code. I don't know which directory to select so I just choose the one I'm currently working in.
What is the context of the problem? If you are trying to get the neighbors so that you can linearly combine them and don't mind (or want to) maintain spatial information, you could use convolution (conv2()).
Don't despair. It will click eventually. Do you understand how the positioning works? Screen('DrawText',window,'Some string here...',verticalPosition,horizontalPosition) Will draw a string you specify at the coordinates you've given (specified in verticalPosition and horizontalPosition; the values are in pixels). If it is off centre, it's because your horizontalPosition is off. One possibility is that the coordinate you specify actually sets the start of the text, not the centre. So try shifting the horizontalOffset (for example, add/subtract 15 to the value; this should shift it by 15 pixels to the left/right).
Do you need the RGB information for determining connectivity? I'd generally convert to B&amp;W, use `strel` and mask out everything outside the region of interest, and use `bwconncomp` to identify connected pixels.
Hi, thank you for taking the time to reply. It seems to me that mean(A,1) takes the average of each column, which is why the output is a single 5 column row. Mean(A,2) appears to take the mean of each row, returning a single 2 row column. So how is it that mean(A,1) is taking the average OVER the rows, when if it did that, it would return a 2-row column? Or, is it the case that when you say "taking the average OVER the first dimension" what you mean is simply the mean function works it way from left to right, rather than from top to bottom (of the matrix)? 
Oh wow - so basically, perhaps the issue going on here with my misunderstanding is that I am familiar with one-dimensional vectors (from undergrad physics), but matlab is using multidimensional vectors instead. So, if I wanted to describe a vector in 3-D space that goes 2 units in the x direction, 2 units in y, and 2 units in z, I could represent that in matlab as vector = [2 2 2]..? Also in regards to me needing to learn linear algebra - I hear what you are saying, and will be taking a class on that in the future, however, I do know many folks who use matlab quite successfully in their research with no formal training in linear algebra, so your comment on that seems hyperbolic...
The 'end' signals that the if statement (usually referred to as a statement as opposed to a function) is complete. It's just part of the syntax that if statements require an 'end'. Not uncommon in other languages, though some don't require any end statement to if statements (e.g. Python).
Ahhh... Ok that makes sense. In the command window, Matlab doesn't know I'm "done" yet and that it is time to execute the code, unless I include the end statement. And thank you for the clarification about function vs. statement. It is a tad confusing which is which.
Functions begin with "function". 
&gt; One thing I'm unsure however is, which one is better? Neither! You can do whatever you like more. I'd like to point out that both ways you're computing the X values is giving you `[1, 2, 3, ..., No_elements]`, but that's not the correct X locations of the elements. You know that the pitch is only 0.63mm, so where are the elements? We'll worry about the gauspuls later. &gt; Computing dtxrx, drx, drx gives me all the same 4 values `dtx` and `drx` should be the same (there's really no need to store them separately, but you can), but `dtxrx` should be different. In fact, `dtxrx` shouldn't even be the same size as `dtx` or `drx`. ******* I'm getting the impression that you aren't thinking about what it is you're actually trying to compute. Up to this point in the code, it's just geometry. You're just trying to: * Get the position of each element (`Xtx`/`Xrx`) * Get the distance from each element to the reflector (`dtx`/`drx`) * Get the total path distance from each transmitter, to the reflector, back to a receiver (`dtxrx`) You shouldn't need the paper to compute any of this. [Here's a drawing](http://imgur.com/a/bdyXi) that might help? It's honestly not much different than what's in the paper, but give it a shot. Let's say you have 4 elements spaced 0.63mm apart. Where are the four elements? If you put a reflector at (Xref,Zref), what is the distance between that reflector and each element? (You're currently computing `dtx` and `drx` incorrectly). If you have just 2 elements, how many paths from an element, to the reflector, and back to an element are there? Write them all down if you need to. Then try 3 elements. Consider again the mileage table in my previous post, it's very similar to what you're trying to do! Rx is like a point-of-entry, and tx is like a point-of-exit.
[removed]
Simulate a distillation coloum
Practise with Project Euler problems (the syntax is quite similar to VBA). Do something using Image Processing! Make a rudimentary Optical Character Recognition algorithm. Make a game AI, something to play a simple game like connect 4 is a good beginning project, then you can increase the difficulty. 
Basically what mean(A,1) does is take the average over the first dimension, which are the columns. This means that each value in the resulting vector is the average value of a column, thus the resulting vector needs only to be one row heigh. This is wat is meant by average over a the first dimension. If it is still not clear, check the [manual page on matrix indexing](https://nl.mathworks.com/help/matlab/math/matrix-indexing.html), and if its still not clear, recheck the [documentation page of the mean function](https://nl.mathworks.com/help/matlab/ref/mean.html), but now with the assumption that it does make sense but you don't see it yet. Hope this helps. 
Chemestry student? How about solving the differential equations underlying a set of reactions? that must be very anoying to do in vba XD
Alright thanks! :)
I need to count all the pixels that have the same RGB values as the center pixel. My regions of interest include 3x3 and 4x4 matrices centered around the target pixel whose value is to be compared. They need not be connected, just the values need to be the same. All the pixels get to be the target pixel as I scan each row and column. Thanks for your help!
Try to simulate a nuclear power plant. I remember deriving all the equations for that system in my final year of undergrads for transport phenomena. Had a lot of fun with that. 
Matlab is a calculator on steroids. It can be used to simulate and analyze lots of data. Think of some ChemE course that you already took. You could put together some system of equations (based on your coursework) and use Matlab to simulate it using different sets of input.
"Not a valid project: &lt;file name&gt;"
Challenge accepted, thanks! :)
Right now I'm storing each variable in a data structure. Could I pull each variable, perform operations on it, store the results in an array and then put that array in a data structure? So I could quickly reference the item in the data structure to output a small array that shows the results of the stat operations? Code I have right now: &amp;nbsp; %// Declare empty structure s = struct() folder = 'C:\Users\wmkus\Desktop\Blah\blo\jo'; %// Place directory here %// Get all MAT files in directory f = dir(fullfile(folder, '*.mat')); %// For each MAT file... for idx = 1 : numel(f) %// Get absolute path to MAT file - i.e. folder/file.mat name = fullfile(folder, f(idx).name); %// Load this MAT file into the workspace and get the a variable load(name, 'a'); %// Get the name of the file, are all of the characters except the last 4 (i.e. .mat) data_name = f(idx).name(1:end-4); %// Place corresponding value of the variable in the structure s.(['a_' data_name]) = a; end
I've seen that. The file already has the updated header information.
Alright, now you're getting somewhere :) ***** &gt; I can't figure out how to get just 4 values when I tried using &gt; &gt; Xtx = 0:0.63e-3:No_Elements; &gt; &gt; This gives me 4700+ numbers as it's just incrementing 0.63mm from 0 to 4. Yep, that's what the syntax means. `first : increment : maximum`. &gt; for now I just calculated out the distance from from the starting element to the 4th element. &gt; &gt; Xtx = 0:0.63e-3:1.89e-3; %co-odinates of the transmitter Ok, that's good. BUT! How can you calculate `1.89e-3` using `No_elements` and `Elem_pitch`? Also, you should probably switch the `0.63` for `Elem_pitch`. No point defining the variable if you don't use it! ***** &gt; Next, from my understanding, having 4 elements would give me 16 combinations for dtxrx which is the distance from the tx to the reflector + the distance from the reflector to the rx. Yes! &gt; I tried utilizing the combination functions but I think think I'm approching this correctly. Currently, &gt; &gt; dtxrx = dtx + drx; &gt; &gt; with reference to the example I linked, this is just going to give me d1+d1, d2+d2, d3+d3, d4+d4, which are 4 of the possible 16 combinations that could make up dtxrx. Let's rethink the subscripts a little bit. Look at the 4-element example you did. You didn't really need to write `dtx` or `drx`, did you? Instead you had `d` and used numerical subscripts/indices (`d1`,...`d4`). That's because `tx` and `rx` really refer to those numerical indices. When you have `dtx`, that's really saying the `d` corresponding to the element `tx`. `tx` is just the number/index of the element. So in Matlab, you could just have one vector `d` and then use `d(tx)` to get the distance for that particular element, you just have to make sure `tx` is defined and is the number/index of the element that you want. All of this is equally true for `drx` (and `Xtx`/`Xrx`, for that matter). Let's see what that would look like if I used it to calculate `d`. Before I do so, I just want to point out that the way you're doing it now is actually *better* than what I'm about to show you, but this method will be easier to apply for some of the remaining equations. So then: X = 0:0.63e-3:1.89e-3; % Coordinates of each element (each can be both a transmitter and a receiver) d = zeros(1,No_elements); % Initialize d for tx = 1:No_elements d(tx) = sqrt((Xref-X(tx)).^2+(Zref).^2); end So now you just have 'd'. When you need to get the distance to a transmit element `tx`, you use `d(tx)`. When you need the distance to a receive element `rx`, you use `d(rx)`. (Also check out [`zeros()`](https://www.mathworks.com/help/matlab/ref/zeros.html?requestedDomain=www.mathworks.com) to see what I'm doing there and how that works.) Then let's look at `dtxrx`. What's going on with the subscripts? There are two of them now. If it works the same as `d(tx)` and `d(rx)` above, you'll need to use two indices to get a value out of it, like `dTotal(tx,rx)`. Do you see how you'll get all 16 elements now? Why did I call it `dTotal` instead of just `d`? If you call it `d` matlab will *replace* the previous `d`, which you're using for `d(tx)` and `d(rx)`, with this new thing. You can't have two things called `d` at the same time. So I just added something to the name. `d_round_trip` or something like that might be more descriptive. 
Thanks for commenting:) The folder contains quite a few .m and a couple .fig files. I think I need to put it in the same folder as the data like you mentioned because I was getting error messages about undefined variables when I just added it to the path. 
Did you supply a gradient? If so, could you have made a small mistake that makes it always return zero?
I'd step through it in the debugger, and see what error vector you're returning to fmincon. If it is all zeros, then you know the problem lies somewhere in your function. 
perfect thank you!
That looks right
What exactly does y_mov do? Is it just a place to store the data between loops?
Not sure what you want to know, but basically there are loads of different levels at which you can simulate neurons. For example, some labs simulate the molecular dynamics of ion channels, others use electrical models of neurons (e.g. Hodgkin-Huxley models), and others yet, like our lab, uses what are known as linear-nonlinear models to simulate visual neurons. These are really quite similar to what's being used in convolutional neural nets, but unlike people who do neural nets, we're really interested in understanding the nature of the computations that take place in areas like primary visual cortex. In terms of the actual simulations, these aren't very difficult. Our inputs are usually either images or movie sequences, and then we have spatial or spatiotemporal filters. These are roughly analogous to the receptive fields of the neurons (essentially which visual features drive or suppress the neuron). On top of that, we have output nonlinearities - these are simple physiologically plausible functions like a half-wave rectifier (+ an optional exponent). We also record from visual cortex and try to work out how to account for the computational properties of neurons in this framework (and to assess whether that is even possible, and if it is not, why not). With all that in mind, here's a very simple neuron: gaussian = @(x,a,m,s)(a * exp(-(x-m).^2 / (2*s.^2))); halfsquaring = @(x,gamma,theta)( (x.*(x&gt;theta)).^gamma ); x = linspace(-2,2,51) m = 0; s=0.1; a = 1;% rf parameters rf = gaussian(x,a,m,s); % receptive field N = 100; % number of images stimulus = randn(N,length(x)); theta = 0.1; % threshold gamma = 2; response = halfsquaring(stimulus * rf',gamma,theta); This is stupidly simple, really, and is basically a neuron's response to a bunch of normally distributed 1D pixels when it has a Gaussian receptive field. In real modelling, we use much more complex linear filters and nonlinearities, and we also use loads of these units, which are model simple cells. My models generally have spatiotemporal receptive fields and consist of anywhere between 3 and 14 units. We also convert the continuous "rate" value we get into discrete spikes, but do not simulate the underlying electrical properties. I don't know if that's particularly instructive at all.
ChemE grad student here. Simulink and your Process Control coursework go hand in hand. I use the Image Processing Toolbox on fluorescence microscopy images on the bio side of ChE. Aspen is a better choice for real applications, but you could write an .m for each unit op and simulate processes. Numerical optimization methods and solving differential equations comes up all over in ChE Design (minimize costs, maximize production efficiency, optimize heat exchanger networks) and classes like Physical Chemistry (reaction networks, model atmospheric chemistry). I've also used GUIDE (GUI designer) in MATLAB to build applications very quickly and the "mex" functionality to mix C and MATLAB code. There's so much flexibility in what you can do with it.
If you were doing something different you could use `imfilter` but I don't immediately think of a way to make that work here. The 'rolling ball' method you're looking for happens in functions like `imerode`, but I don't know of a function to automatically do that for you. Do you have the Parallel Processing Toolbox? Your problem is very well-suited to pushing this to the GPU. Here's code for that. This all ran in something like .1" on second execution; the first time through has some overhead for setting up the function on the GPU. The `arrayfun` call is really ugly, but it works. RGB = imread('peppers.png'); tic R = int32(RGB(:,:,1)); G = 256.*int32(RGB(:,:,2)); B = 256.*256.*int32(RGB(:,:,3)); I = R + G + B; I2 = padarray(I,[1 1],-1); [imW imH] = size(I); stack = zeros(imW,imH,9); % 3rd dimension is neighborhood for each pixel stack_idx=0; for idx=1:3 for jdx=1:3 stack_idx = stack_idx+1; stack(:,:,stack_idx) = I2(idx:end-3+idx,jdx:end-3+jdx); end end % Set up problem for processing via GPU gS = gpuArray(stack); gpuOut = arrayfun(@(a,b,c,d,e,f,g,h,i) (int8(a==e) + int8(b==e) + int8(c==e) + int8(d==e) + int8(f==e) + int8(g==e) + int8(h==e) + int8(i==e)),gS(:,:,1),gS(:,:,2),gS(:,:,3),gS(:,:,4),gS(:,:,5),gS(:,:,6),gS(:,:,7),gS(:,:,8),gS(:,:,9)); toc
I ran this on my system and every single time it showed me the blue screen saying "Your PC ran into some problem", even though I have an i7 processor and Nvidia 740m graphic card. Although this was a really helpful approach and I'll use my University's system from now on. Thanks for your help and I'll inform you on completion :)
Omg yes I should look into simulink some more, didn't think about it! Thank you so much :)
They are very intermingled, unfortunately. The file is a collection of received messages, which are either XML (plain text) or binary and then debug print out. Everything is in time order. Each binary message starts with an indicator code (which tells you which message it is) and then the next field is the length of the message. 
Well, the indicator code is in binary, but yes there are a fixed number of them. Each message, after the indicator code, then says the length of the message so I know that after that many bits there is either plain text or another binary message. &gt; I'd approach this as reading in as all plain text and then parsing out the binary What I'm not sure of is if I read this as plain text, how do I tell where the binary streams are? Is it somehow indicated? This is my first time really trying to do anything like this, so I feel like I am perhaps using wrong terminology or missing something obvious, but I'm very grateful for your help and patience. 
I haven't done much of this (and never dealt with XML) myself either. The closest I've gotten is text files with mixed text and floats and trying to split/understand them similarly. Could you post several lines/messages from your file as an example? It might help to also see what exactly your file looks like and what nuances it may have.
Can't test, is matlab correctly reading values higher than a certain value? Just set up something to read and immediately print the value to check. Off topic; I'd not use numel and num2str, just use log to get the order of the number. 
Log will be orders of magnitude faster, and will avoid a lot of errors. 
Ok thanks, I'll report back.
Your question has been removed. Please [read our rules for submitting Homework Questions](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/) and feel free to re-submit after following them. 
Awesome thanks! Is this the best way to require integer inputs?: while mod(int,1)==0
I won't give you the actual code to do it, but this can be done easily with loops. 
Makes sense, thanks!
X(D)=X(D)+1; simply means that whatever the previous value is for X(D) you would add 1 to that and save over the old value. 
D is the value of the sum of the 5 dice. So every time the sum of the dice equals a number, that element of X is increase by 1, recording the fact that the number has occurred again. 
I can see how this is confusing. He is taking the sun of the 5 random dice roles, then using that answer as an index into the vector X. Since the problem is to determine how often a particular sum shows up, the code is simply incrementing that index by 1 as way to keep track of the occurrence. After doing this process a bunch of times an approximation of the probability can be made. 
when the script begins X is an array of 30 positions, representing each possible solution for the sum of the die. D is equal to the sum of the roll. The array begins with each value equaling zero. X(D) is saying go to position D in array X. X(D) = X(D) + 1, is taking the previous value of X(D) (which begins at zero), and adds 1. So it is keeping a tally of how many times that sum is rolled. It has a maximum value of 100 (i = 100 or 100 rolls) at any position and the sum of all positions of X will always be 100. Try taking off the semi colons so you can watch it print what it is doing into the command window and start with say i = 10 so it is more readable. 
Thispost(1:inf) = cancer
Yea this is what I meant. I was unsure because I have never seen a question like this before so I wasn't sure if there was something Matlab specific. Since this class is mainly just about using programming to handle data I guess he jumps to different topics like this. I guess I will go with C++ to answer this kind of question then. I like Matlab but I dont want to take this course and pay an extra 120 bucks for the access key for the class.
It's spam, report it
I like that it is double spam: post is about sex, link is called **sexheck** (which is probably the least sexy name for a site ever: you might as well have called it **neverfuck**), but if you look at underlying URL it would take you to site called 'onlinesportsteams.com'. Which, also, is a shitty name, in that Family Guy parody of foreigners writing in almost-english kind of way: https://www.youtube.com/watch?v=vnUv2fhFy5E 
and the build in normrnd
"help round" and look at the see also
Please do not provide homework answers to the problem. Instead, please help the person find the answer on their own. 
[removed]
try googling: "matlab display number format control" or something.
You are filtering the output data in the code you posted. Looking at the page you are following there's a call to setBounds where you could presumably set a minimum weight of 0.05, but now all stocks must be included in the porfolio with at least a weight of 0.05. Because there are 30 stocks, your problem is over constrained. I think rebuilding the problem as a more general mixed integer linear program, with discrete indicator variables for whether the stock is in the portfolio or not and then linear constraints that the weight must be between 0.05 and 1 would get you there. Check out the wikipedia page on modern portfolio theory for the objective function for the MILP. 
When you say that "stats" is a structure, do you mean it is a struct? Or are they matrices of numerical types as your title says? Does size(stats) return the column/row dimensions you are expecting?
You can loop over files in a directory with dir and then use regexp to compare the filenames with a regular expression.
If he's looking for a 3D plot you could make a two plots. One would be magnitude of G versus s (and since s is complex, you'd use a 2D mesh grid to represent its real and imaginary components). The other would be the same thing but with phase. As for using a color map, I'm not too familiar with the matlab functionality but a quick google told me and you could again use a grid to represent your input values and plot the output as varying hue and intensity corresponding to the magnitude and phase, respectively.
 G=(xx.^2)/(xx.^2+6.*xx+18); Is this a typo? Don't you mean xx + 2 in the numerator? edit: I agree with the other commenters. You need to plot G over values of complex s, something like: ss = xx + 1i * yy;
I think I may have got it. &amp;nbsp; b=[1 2]; a=[1 6 18]; % fvtool(b,a,'polezero'); % [b,a]=eqtflength(b,a); %[z,p,k]=tf2zp(b,a); %text(real(z)+.1,imag(z),'Zero'); %text(real(p)+.1,imag(p),'Pole'); %supressed code provides pole-zero plot of the function %Lines supressed to allow Surf plot to be published on one page [x,y]=meshgrid(-4:.1:4); z=x+y*i; G=(polyval(b,z))./(polyval(a,z)); surf(x,y,abs(G)) it returns just what i was looking for (i think). http://imgur.com/a/gFE2S Thanks for the help.
Can you explain what you mean by direct? Matlab's fft command very efficiently computes the DFT values of a signal, and is probably what you want. I'm assuming that you are interested in uniform sampling of t and L.
Right, DFT does not have a concept of t and f(t), only fn, as far as i know. You have to do the CFT to DFT connections in your head, at least in matlab, IME
Read up on the FFT as a general tool - the matlab version couldn't possibly be more "direct", it's just also very general. You're not confused about matlab, you're confused about FFT - focus your research there. 
see [help genpath](https://nl.mathworks.com/help/matlab/ref/genpath.html) Thats why paths to toolboxes are usually added like addpath(genpath('/home/user/foo/'))
I perhaps didn't explain my question clearly; I know how genpath works, my confusion is in why the deepest folder needs to be on the path for this to work. Again, consider the comparison with packages: If I have a folder structure like: /home/user/foo/+bar/+abc/myfunction.m Then I can put *just* `/home/user/foo` on the search path, and call `bar.abc.myfunction()`. But I can't use the "partial path" feature to `fopen('+bar/+abc/myfunction.m')`. 
googleing: "If i have a matrix is there a way to calculate its diagonal form (if its diagonalizable)? matlab" [first hit](https://nl.mathworks.com/matlabcentral/newsreader/view_thread/292372) third response: &gt;[Q,D] = eig(A) will calculate the eigenvectors and eigenvalues of A. &gt;Q will be a matrix whose columns are the eigenvectors of A, D will have A's eigenvalues on its diagonals and will be zero elsewhere. Actually, now, D=Q'AQ &amp; A=QDQ'.
You can supply the view function with an azimuth and an elevation. this very well suits your request of "not need to be really fancy,". figure;peaks;for az = 0 : 5 : 360;view(az,30);drawnow;end
Just in time for my systems class... Thank you
+ Can you elaborate how I'd go about implementing x = max:dx:min? Currently how my code looks: http://imgur.com/a/d5baT 
Hmm, alright. However, whenever I input values in for X the workspace returns x and f as "1 x 201 double" and I'm not really sure what this means. 
It's worded weirdly, I don't think they actually want you to calculate the statistical range of x and f, just f(X) for the range of x that you have asked the user to define with the 3 inputs. I.e, just plot what you've already got. If they meant the actual range of x and f, I'm not sure why you'd plot them because there would just be 1 point on the plot, so I don't think that's what they want.
Ahhh, that's an awesome idea, and one that probably would have taken me longer than I'd like to admit, haha. Thanks so much man! 
Step 1) install gfortran Step 2) learn Fortran Step 3) write a *real* parallel program Just kidding. Although if speed is highly critical you should consider this.
You can do nearly anything that could be done with nested for loops with matrix math instead. Your code is pretty unreadable but I suspect yours doesn't require for loops either.
Eventually I did it by converting that excel data to 2 workspace variables. Then in the lookup table properties in the breakpoint parameter and the lookup variable parameter I just entered the names of 2 variables and that did the trick. I was honestly surprised how easy this was!!
Please put four spaces before each line to make it code. Your code: G = zeros(lim1,lim1); G0 = zeros(lim1,lim1); for count1 = 1:lim1 for count2 = 1:lim1 for count3 = 1:lim2 for count4 = 1:lim2 dX = xN(count3) - xF(count1); dY = yN(countYN) - yF(count2); dZ = zN - zF; r = sqrt((dX)^2 + (dY)^2 + (dZ)^2); G0(count2, count1) = FUNCTION(count4, count3) * r; G = G + G0; %this is the step which causes the error end end end end
Yeah you can do it on ODE45 but I think you'll probably be looking at a pretty stiff equation so one of the stiff solvers would be better. Really though, I never use the included solvers because it's so easy to write your own and I don't like the rules for the ODE functions. For this equation it's easy to write a second order centered explicit scheme. 
How would I plot it explicitly though?
I think I solved it. Here's my snapshot of the plot http://imgur.com/a/tSBWT And the code. Looks about right? lol function dxdt = mech423_hw1_function(t,x) dxdt = [x(2); -0.1*x(2) + 6*sin(t) - x(1)^5]; [t,x] = ode45(@mech423_hw1_function, [0 50], [3;0]); plot(t,x(:,1), '-o',t,x(:,2),'-o') title('Second Order Nonlinear Differential Equation'); xlabel('Time t'); ylabel('Solution x'); legend('x_1' , 'x_2')
Ok I'm back. Actually we'll just do it first order. You need a small timestep, but this shouldn't be a problem. 1. Just solve for x''(t). Since you know all the elements at t=0 solve for x''(0). 2. Since you know x''(0) you can find x'(dt): x'(dt) = x'(0) + dt*x''(0). And then you can find x(dt) = x(0) + dt*x'(0). 3. Continue doing this and save the results for x in an array. This is intuitive. If you travel at 5 m/s for 1s you'll go 5 m. Sure, when the dynamics are non-linear these quantities may change rapidly. But if you make dt small enough you'll still capture the behavior of the system. You can also probably get an analytical solution from the symbolic math toolbox with dsolve.
Actually I think I almost got it down using ODE45, however I'm a bit hazy on how the initial condition part of the function works. If my initial conditions are x(0) = 2, x'(0) = 3, is the end of the equation supposed to be [0;3] or [3;0]?
the function is y = 1000e^(-0.05t)+930
You can use the method above or other methods such as Newton-Rhapson method for a more efficient but harder to code solution. However, there is an analytical solution to this problem. (y - 930)/1000 = e^(-0.05t) ln((y-930)/1000) = (-0.05t) ln((y-930)/1000)/(-0.05) = t Solving analytically and numerically should give the same answer but the analytical solution will be more accurate and doesn't require writing a program. If you would like to go ahead and write the program I can help you with the bisection method.
thank, i didn't think it'd be this complicated lol for some reason i thought i could get matlab to just automatically solve it
It's actually not too hard and matlab may have some built in functions for these sort of problems. Either way here some code that should work for solving the problem: function [s,num_iter] = bisection(func,err,a,b) %bisection() finds the roots of a function (entered as @func) using %bisection with initial bounds a and b. err is the precision, or how close %s needs to be to zero before it stops. % %example: % [s,num_iter] = bisection(@func1,10^-5,0,10) %% setting up initial values % each iteration approaches s at a rate of (b-a)/2^n maxi = ceil(log(abs(b-a)/err)/log(2)) + 10; %creates max number of iterations based on err if a &gt; b %checks that b &gt; a holdvar = a; a = b; b = holdvar; end p = ones(1,maxi)*9999; p(1) = a - (a-b)/2; fp = func(p(1)); fa = func(a); fb = func(b); iter = 0; assert(sign(fa)*sign(fb) ~= 1, 'fa and fb have same sign, try differnt bounds') %checks that fa and fb have different signs %% bisection while (fp ~= 0 &amp;&amp; (b-a)/2 &gt; err) &amp;&amp; iter &lt; maxi iter = iter + 1; if sign(fp)*sign(fa) == 1 a = p(iter); fa = fp; else b = p(iter); end p(iter+1) = a - (a-b)/2; fp = func(p(iter + 1)); end %% set outputs s = p(p ~= 9999); %deletes unused values num_iter = iter+1; %% end This should work if you create a function: function y = func1(x) y = 1000 * exp(-0.05 * x) + 930;
Just use wolframalpha if you want a quick and easy way. 
Do you have the symbolic toolbox? syms t y solve(y == 1000 .* exp(-5.*t) + 930, t) Do you only need a numerical solution? y = foo; x0 = bar; t = fzero(@(t) y - 1000 .* exp(-5.*t) + 930, bar);
Use the function fzero. Feed it in as an input the function handle f(t) = 1000e^(-0.05t)+930-y_value. 
Are you saying that you want to find the inverse function x(y)?
what does syms do?
Would you happen to be going over calc 2 and taking egr 115 in the state South of Georgia?
If I interpret your question correctly you are looking for MATLABs capability for symbolic calculations. Without giving away the answer (since it would be deleted I learned), [this page](https://ch.mathworks.com/help/symbolic/solve.html) might help you to get to your answer.
Instead of using fopen and textscan, try [importdata](https://ch.mathworks.com/help/matlab/ref/importdata.html?requestedDomain=www.mathworks.com#inputarg_delimiterIn): file=importdata('C:\a\a.dat'," "); This " " should set your delimiter to space and it should read NaNs. If you have header lines you can also specify them in this command. 
Thanks a lot! It worked! Any idea if there are any disadvantages using importdata? Why are so many people using textscan instead of this?
Nope, know idea. It's my goto-function for numeric data import. But I guess there must be some situation where textscan is better.
your question is not very clear to me, but i think you're saying that when you plot the results you expect to see two ( or more?) figures, but only one shows up. the reason, nowhere in your code have you told matlab that you want more than one figure. without giving you the answer, you need to figure out how to tell matlab to create new figures. 
Hi. Your question has been removed, but only temporarily. Please format your code so that it is readable, and then message me back here and I'll release your question. To format your code, you can either use pastebin or use four spaces in front of new lines (and four more for indents), so that your code would look like this: function my_output = my_function(my_input) for ii = 1:3 'do stuff' 
Never do straight up equality tests on floating point numbers- this isn't a MATLAB thing, it's a programming thing. Most floating point numbers cannot be represented exactly in binary, thus they are approximated. They might be approximated really, really well, but they are still approximated. Checks for equality (which, `ismember` does internally) will frequently fail. Whenever you are doing a check for equality for floating point numbers (in any language) you must instead do something like: if abs(a - b) &lt; eps
Even that is kinda iffy, eps is sometimes too small to measure the difference. find(abs(c - diffc) &lt; 0.001) works, and gives you the index. ismember can work, but I think it works much slower when you get to larger datasets. Example, using diffc=0:0.002:5; c=2.4; : tic; find(abs(c - diffc) &lt; 0.001); toc; Elapsed time is 0.000630 seconds. tic; ismember(abs(c - diffc), eps); toc; Elapsed time is 0.004723 seconds.
That's all good, it works all the same whether its predefined or not. Only thing I have to recommend really is find &gt;&gt;&gt; ismember
my favorite command ever is uiimport Use this, then it'll open a spreadsheet GUI for you to select what you want. If this is a one time thing, just import it. If you will be doing this regularly (say you have 100 data sheets that all look the same but are for different test runs), then you can get it to generate a function that will read the values you want from the file. This has been a godsend for me. It makes it easy to automate all of your work if you're trying to analyze a number of similar ascii files. 
True, although eps is also a function, so you can scale the precision to the size of the numbers involved, like abs(a - b) &lt; eps(a) You can also use sqrt(eps) to provide some additional buffer. 
[removed]
+ %%create the random input clear all clc x=randi(10); a(:,1)=randi(10,[1,x]); l=randi(2,[x,x])-1; for i = 1 : length(a) k(:,1)=a(1:end)-a(i); end for i = 1 : x for j = 1 : x if(l(i,j)==0) k(i,j)=0; end end end %%now i "manually" do the first iteration to make sure it works g=sum(k')'; a(:,2)=a(:,1)+g; %%but when i try to "make it go by himself", it doesnt work ! u=2; while(a(1,u) ~= a(1:end,u)) for i = 1 : x k(:,i)=a(1:end,u)-a(i,u); end for i = 1 : x for j = 1 : x if (l(i,j)==0) k(i,j)=0; end end end g=sum(k')'; a(:,u+1)=a(:,u)+g; u=u+1; end i really dont understand why it doesnt work or how i could change it ! 
&gt; The "Deactivation Required" message indicates that your license file is invalid or expired. &gt; This message can occur for several reasons: &gt; * The Licensed End User or License Administrator manually deactivates using the MathWorks License Center. &gt; * MATLAB installation was moved to a different computer. &gt; * Computer was reconfigured and is no longer recognized by MATLAB as the machine that you activated on. &gt; Any of the above actions will cause MATLAB to require the user to deactivate the license on the local machine. &gt; To resolve this issue, deactivate and reactivate MATLAB. [Explanation of problem and relevant fix can be found here](https://www.mathworks.com/matlabcentral/answers/91951-why-do-i-get-a-deactivation-required-message-when-i-start-matlab?requestedDomain=www.mathworks.com)
You need to read up on the basics of Matlab and it's syntax. You specified a valid interval for the function, but your statement to evaluate y doesn't quite work. The following code will get the job done though. &gt; T = 0.2 &gt; t = linspace(0,2); &gt; y = exp(-t./T); &gt; plot (t,y)
I'm not in a position to test this today, but have you set a stop in the code and then stepped line-by-line? My guess would be that you are satisfying your 'while' condition before anticipated, and jumping out of the loop. It could also be that due to machine precision, your equality test is failing (0. != 0). It is better to use something like: if(a-b&lt;[very small #]). If you step line-by-line, observing variable values as you go, you should be able to discern whether things are defined as you expect them to be. If not, you can at least refine your question to the exact point where things go off the rails. 
thanks for your time ! i'm going to try with your suggestions and see what happens ! hopefully i'll be able to understand more about the problem ! 
[removed]
A function to remove the unconnected signals from Bus Selector should do. Here the Bus Selectors do not have some incoming signal (I had 5 signals incoming &amp; now only 3 are there. Hence I need to remove the traces of the 2 missing signals from the bus). Hope I have explained the part clearly.
i tried with dbstop and also tried changing the 'while' in a 'if', but nothing! im starting to think that i made a mistake in the implementation of the algorithm itself
In the future please link to a pastebin etc. It can be a bit annoying to have to go through and reformat code to make it work before we can even replicate the error. In this case it's only changing the 'y=' section so that it's in Matlab syntax, but for long stuff you'll find people just won't bother. But short answer... read the error message - Matlab has amazing error output, it will 99% of the time walk you through what is wrong. x isn't satisfying the function isVariableVector. Before the *for* loop, just type x and you'll see in the command line it just dispalys "x = ". there is no property inside x so it cannot check if it's a vector.
come on mod, delete this shit
Is there a reason you want to do that instead of saving the actual figure instead? I'm not sure I am interpreting your question correctly at all - there are at least two ways to interpret what you're asking.
I think I understand better now. The only way I know of to do this would be: 1. generate figure 2. use the 'print' function to save it 3. use 'imread' to import the image into your workspace the print function can be really slow, but I don't know what the alternative is, if any
[removed]
Trying to avoid saving then reading it again. Thanks anyways. 
Matlab isn't great for stuff like thus. I'd ask at stack overflow.
Try `getframe`
I think this is it. Thank you very much for the help! a=getframe(1); b=a.cdata; imshow(b) variable 'a' gets the data in a structure, variable 'b' extracts the picture image of figure 1. 
&gt; You need to do this for all the frames of the video to get the velocity. Let's say that the object has moved between two consecutive frames from position of [x1, y1] (in matrix indices representing the pixels) to position [x2, y2]. If what you mean is getting multiple averages of the velocity, this seems right. One thing though is if you get the difference in position, I don't think you would have to multiply vs dpi, just as long as you get the units right. Fps would need to still be in the eqn though. Could be wrong though since I'm just thinking about it and never did anything like this before. The only other thing that can have an effect is the medium you're going through, and the scale. I don't think typical newtonian mechanics work on micro scale, and the eqns may change a bit in a fluid (this would give you a rough estimate though of course). Besides that though yeah I agree with everything you said.
Use curly braces instead of square ones. Curly braces make a cell array of two strings. The square brackets concatenate the two strings into one string, because each string is really just an array of characters. 
Thanks for the suggestion! I'll give it a shot tomorrow
&gt; Screenshots code that doesn't reproduce the error Stop that. You're on a computer, use it to do computery things like type code.
well, going off the error message. What is blockSize? It's looking for that function or variable but cannot find it because it has not been defined. *doc evalin* for help. This isn't a workspace problem. 
absolutely. I'm not so fussed by it this time as the screenshot can tell us everything at this stage. But even for 5 lines of code, I'm not going to type it out to help someone when they could have spent 10 seconds creating a pastebin so we can fiddle with it.
Thank you, it helped that I don't get Complex Angels but, the Endeffekor still can reach points it shouldn't reach. The Lengths of everything is given but if I give an unreachable point as a desired Point it still gets to that point.
Well, you never recomputed Endeffekor after defining it on line 20 (please change the name to Endeffector, as a grad student researching end effector shape design, this bothers me on a fundamental level). You need to use the forward kinematics to compute the value of Endeffector given the values of the joint angles.
[removed]
If you want the same function to use different code depending on the form of the input struct, a good solution would be to change those structs into objects of different classes and to give each class its own `HourCalcFunction()` method.
Besides using objects as /u/redditusername58 suggested, I think this is personal preference. I am thinking of **both** the input as you asked *and* the **output** A lot of it comes down to what will be more easily understood by the user of the code? And do you plan to document it well? Personally, I think explicit and understandable is better! For example a function that returns a lot of variables, say `hours`,`days`,`minutes`, etc would be better handled with a structure. Then you can basically self-annotate your variables. Similarly on the input, if you have a complex function with lots of inputs, it is almost always better to do something other than expecting blank positional input (do you hear that everyone at my work!?!?!?! **Expecting optional positional input is dumb and error prone** and similarly **Optional positional returns makes life hard**). You are *much* better off expecting either `'NAME',VALUE` pairs (and optionally `'-FLAGS'`) or a structure. Then you can define your defaults and read in what is passed. Also, you can validate the input and allow for either pairs or a structure. As I said, checking the output for `nargout` and returning from that is ok, but also potentially error prone. If you return a lot of data, do not return it positionally, return it as a structure. These kind of things make your code easier to use (especially once you have an established paradigm) and much more robust to errors (user and otherwise) I hope my rant helped a little
BTW, there is a built-in Matlab tool for this but I do not like it. Here is my boiler-plate parsing code: function parse_variables_boilerplate(req1,req2,varargin) %% boilerplate_parsing -- Input just param,value and -flag % % Usage: % % parse_variables_boilerplate(req1,req2) % parse_variables_boilerplate(...,'param',value,...,'-flag') % % Inputs: % % req1 : Value 1 % req2 : Value 2 % % Options: '-flag' or 'param',value with [default] and (type) % 'param1',val % [Default] (numeric) Optional paramever,value pair % '-flag1' % Optional flag. Sets to inverse of default % %% Parse inputs % Defaults. flags will be flipped param1 = 'Default'; flag1 = false; % Specify allowed flags to prevent accidental or intentionally changes to variables allowed = {'param1','-flag1'}; % Parse iv = 1; while iv &lt;= length(varargin) param = varargin{iv}; % Optional check: if ~ismember(param,allowed); error(sprintf('Unrecognized Parameter: %s',param)); % Or warning end if strncmp(param,'-',1) % flag param = param(2:end); % remove - eval(sprintf('%s = ~%s;',param,param)); % flip the boolean else eval(sprintf('%s = varargin{iv+1} ;',param)); iv = iv + 1; % Extra increment end iv = iv + 1; end % Optional: Validation assert(isnumeric(param1),'''param1'' must be numeric') disp(req1) disp(req2) disp(param1) disp(flag1) 
Awesome! 
Thank you so much for that! That was really helpful. I couldn't replicate the first part of the response (the part before you called it a terrible plot) for 2 reasons: 1. I was worried that 'sort' would mess up the data points, as the lowest x doesn't necessarily have any relationship with the lowest y, etc. 2. I got an error that said &gt;Subscript indices must either be real positive integers or logicals. Either way, using the 2nd part gave me a [rather nice mesh](https://imgur.com/a/gFDfA), much closer to my goal. However, I noticed that the vertexes are all points on my collected data. Is there any way to make this mesh more 'organic' such that there are less obvious plane intersections, and allowing it to predict min and max points?
You've specified that you're evaluating in the caller workspace, which means the variable needs to be defined in the place you're calling the function from, not within the function
Unfortunately, unless you have more points to work with, it's really hard to make accurate predictions. Computers are only as good as the code and data you give it, and can't spot the trend lines visually like we can. They need lots of data for the algorithms to get good samples and make good approximation s to the curves. If you look at that first link I posted you'll see the example of griddata had around 100 points to work with. You can try messing around with creating a cubic splines? But I think you're going to run into a similar issue. 
can you link to a pastebin of the code so we can have a play with it?
http://pastebin.com/Yw8WHteF 
haha I don't want to be like "Oh I say, if only you had seen this dear chap"
I'm sorry i made you a victim in this, but it was a joke meant for Huwbacca. [context](https://www.reddit.com/r/matlab/comments/5q1ojb/struggling_with_simple_cvx_optimization_problem/) Still kinda true though
meta
Oops. Really sorry for not using pastebin. Here it is http://pastebin.com/BPVt1T61 ! Thanks!
Also note that this was all made possible by the fact that you shared your matrix
Ah, inner dimension mismatch probably means you're going in the right direction. Matrix multiplication requires dimensions to match up properly. Try the following changes: `p = [3 -6]` `minimize(p*x')` or `minimize(p*x)` (not sure how CVX handles x(2), but I'd expect one of these two to work)
Thanks, the solution you gave me worked! Really appreciate it.
Thanks for the suggestion! I didn't reorder the original values in p, but I tried using minimize(p*x') and it seemed to work. A new problem popped up with the constraint A*x &gt;= b. tried renaming it to A*x' and it still says inner matrix dimensions do not agree. I tried renaming b to b2 as a matrix with [0,0,-1;0,0,0;...] but that didn't work either :/. 
Are you wanting to break out of the loop if some condition is true?
break. for i = 1:3; fprintf('iteration %i\n',i) if i == 2; break; end end
What are you trying to do? And why did you define i inside of a loop iterating on i?
It sounds like you're having some issues with the matrix multiplication. Track your dimensions; you need to follow `MxN * NxP = MxP`. In `A*x &gt;= b`, Your `A` must be `5x2`, your `x` `2x1`, and your `b` `5x1`. The same math also governs making sure your objective function produces a scalar; `p*x` needs to be `1x1`. The following code works fine for me. A = [1 2; 2 1; 1 -1; 1 -4; -4 1] b = [-1; 0; -1; -13; -23] p = [3 -6] cvx_begin variables x(2) minimize(p*x) subject to A*x &gt;= b cvx_end
Expanding on this -- `sprintf` allows you to reference and format variables in the string to explicitly provide the `i` and `j` values. prompt = sprintf('Please enter the value for row %d, column %d of the matrix.',i,j) dlg_title = 'Matrix Entry' num_lines = 1 defaultans = {'1'} input = inputdlg(prompt,dlg_title,num_lines,defaultans)
I'm a beginner at best in programming so bare with me. Could it be that i and j aren't formatted to correctly fit into the sprintf( function? Maybe i and j somehow are strings and not numerical values so when called on in sprintf('.... %d....%d',i,j) it gives an error? I'd test it myself rn but I can't until I get to my computer with MATLAB
Can you post the error please? Btw, the approach you're taking to hunting down the problem is good. 
Yeah, this confused me too until I realized in MATLAB, for-loops are actually for-each loops. 
there is an assignment (giving a value to a variable, basically when you use =) where the right-hand side (rhs, the value to be given to the variable that is on the lhs) is of another dimensionality than the lhs. The following code produces the same error, but in a more clear environment. a = zeros(5,1) ;%is 5 by 1; note that a has 1 singleton dimension (the second one) b = zeros(5,5) ;% 5 by 5, no singleton dimension a(:,:) = b ; %error thrown here. So, what you should look for in your code, at the line number given in the console is a righthandside data thing e.g. exp(polyval(squeeze(pfit(i,n,:)), log(time))) of which the size, found by size(exp(polyval(squeeze(pfit(i,n,:)), log(time)))) does not correspond to the size of the lhs: size(present) 
Some code? Check that you use the correct handle.
Since you're dealing with integers, `%d` will produce a nicer output. `for`, when used like `for idx=1:10`, will produce a variable of type `double` (precise numbers). It's possible for other results like strings, but you normally have to be trying pretty hard to make that happen. If you could provide the whole block of code -- or at least show your `for` loop calls and the code producing the error -- that'd be helpful. I'm having a hard time imagining how to produce a cell error.
It could be a difference in algorithm selection. `eig(A,B)` is going to select one algorithm (Cholesky vs QZ) which can sometimes introduce error; see the `eig` documentation for some examples of that. You could try manually specifying the algorithm to see if that has an effect. Matrix left division in MATLAB doesn't calculate an inverse, instead using Gaussian elimination to produce its result. That should be more numerically precise than the alternative. It's not easy (for me, anyway) to give a definitive answer. Like EatMyPossum suggests, it's probably related to matrix-specific algorithm choices and machine precision. Consider that `mldivide` selects between 7 different algorithms for non-sparse matrix input -- there's a lot of hidden complexity in how MATLAB produces results. If you really want to dig into it, the functions `qz` and `chol` may let you look at intermediate results in the calculations.
&gt; Can send code, cut there is too much code to put onto this window. http://pastebin.com/ will let you copy-paste as much as you'd like. Provide the link here. If it's an external toolbox/code for the GA, that's likely fairly important to know too.
After running the script as instructed, the error was found on line 12.
Yeah, figure windows have a property called 'Docked' or something like that. The documentation should have the details. doc figure 
Not exactly what you're looking for, but in the Matlab Live editor your figures will appear either on the side in a separate column, or directly under the code generating the figure. like this: https://www.mathworks.com/content/dam/mathworks/videos/i/4822092091001/_jcr_content/renditions/Thumbnail.11.640.360.jpg 
the above answer is well intentioned but incorrect. your problem is that matlab does not do string comparison this way. you'll need to use 'strcmp' if strcmp(Colors{i}, 'blue') should be your condition. 
Or he could use string compare instead of == strcmp(Colors{i},'Red') Or something like that. 
Neat! I actually didn't know about that.
you haven't told us exactly what your problem is...
I learned it from Matlab. Check out the warning messages on the side and it'll often give you tips on programming more effectively. It's a great feature. Also, congrats! TUL. 
This worked. Thanks! 
you make me blush sir.
&gt; replicate hehh, replicate
[removed]
g is gravity, its 32ft/s. gamma is density, but its set at a value of one because we already accounted for it when we did our pressure conversions. otherwise it would be the density of water. I don't particularly like the way we are doing the math but its how my teacher wants it so its what I have to do. The pressure is in feet of water? I've never heard that and have no idea what it means and the teacher just looked dumbfounded when the class asked him what that meant. A1=12.566 in^2 A2=3.142 in^2 gamma=1 (already used to get the pressure conversion on paper) g=32 ft/s r=4 in H=20 ft The cylinder function I made works and I get the same answer I got when I solved by hand, same for the bernoulli derivation. The problem is line 21 and beyond. I'm trying to make a graph of the change in pressure from 0 to 25 in 5 degree intervals. I also need it to display the values for the pressure in the program. I'm not getting any errors at all, when I run the program it just prints out 0 5 10 15 20 25 I don't know how to get it to calculate a change in pressure and neither does the teacher. 
Ahh, I figured it was g, but I've never used g in the Bernoulli equation so it threw me for a second. (In aerodynamics you can generally neglect effects of g, but not with water). I'll look at this a little more closely when I get off of work if someone else hasn't answered it for you by then. Also, the units for pressure shouldn't matter as long as all of the units work out in the end, but it's definitely worth checking that they do. (I've never heard of ft of water either, but I assume it's similar to mmHg). Edit: yeah, feet of water doesn't make sense cuz then your velocity units won't make sense. Try converting that to something else. Maybe psf?
you're right, I was probably a little hard. Your method would work but would end up being cumbersome and vulnerable to error. The problem is, when you do == like that in Matlab it's comparing two vectors. if the language was C or python your suggestion would be absolutely correct. For the record I much prefer the syntax of python in this case over the syntax of using strcmp. for that to work in Matlab you would need something like if length(colors{i}) == length('red') &amp;&amp; all(colors{i} == 'red')
another note, I think this behavior has changed in the most recent version of MATLAB where they've introduced the string data type, that I believe will behave in this way. This is Matlab basically acknowledging that their previous syntax is cumbersome. 
Good stuff :) You should look into `msgbox`, `dialog`, `errordlg`, `helpdlg`... MATLAB has a ton of case-specific options. Edit to add -- you could also `disp` to print a string to the console. I use that to provide intermediate info during large scripts without the added clutter of dialog boxes. That also provides for later review. It all depends on what you're looking to do.
I'm going to look at it more when I get home as well. I knew it was weird sounding. originally our pressure 1 was in psi and our pressure 2 was in inhg, why they were different I'm not sure, the teacher literally made up the problem himself.
the way you wrote it should save two variables to the mat file, `ecg_database` and `filtered_sig`. If you apply `load` to that file then the two variables will be loaded into your current workspace. Do you want them to be combined into one file? You keep using the word database, but what do you mean by database? You might want to look at the matlab documentation for `cell` and `struct` data types.
You need to iterate through each element of cell array a. For instance [m, n] = size(a) will return m=1 and n=5, which is not what I think you want. for iter = 1:numel(a) [m, n] = size(a{iter}); ... end is what I think you're going for
Ahhhh I knew there was an expm but didn't realize there was also logm. That did the trick, thanks!!
Agreed. This isnt matlab. Op just solve the analytic problem. Youll see the answer then. 
[removed]
Since OP has already solved this -- `h = logm(M)/A` and `deriv = A * expm(A*h)`.
Don't click it, it's spam. Report it.
Thanks, surprised that it fixed it. My final usecase was however for something like this: Numerators = {[0 1 1] [2 1 -1] [1 0 -1];[-1 -1 0] [-1 1 0] [0 1 0]}; Obviously removing the curly brackets here wouldn't fix it. Have any suggestions for that one ? To add, then I have: Numerators = {[0 1 1] [2 1 -1] [1 0 -1];[-1 -1 0] [-1 1 0] [0 1 0]}; Denominator = [1 3 2 0]; G = tf(Numerators,Denominator); [A,B,C,D] = tf2ss(G);
Reported.
You have a function f(t) which returns an (x, y) vector. It's not exactly clear what you're asking, or whether you understand it mathematically yourself. If you want an arrow to show the direction of travel at a particular instant, you want the time derivative of your function. 
'plot2' is simply 'plot' for a 2d plot
two good answers already, it seems you need to bring the two answers together. What I understand what you're trying to do, you need to things. You need to plot the position of a point as a function of time. to get the arrow you'll name the time derivative at that same time. I believe there is a built-in for this try doc quiver 
You can directly use `ss(G)`. `tf2ss` is, as mentioned, used with num,den syntax. 
Then you can't separate them all by individual brackets. It has to be in this form: Numerators = [0 1 1; 2 1 -1; 1 0 -1; -1 -1 0; -1 1 0; 0 1 0]; Denominator = [1 3 2 0]; [A,B,C,D] = tf2ss(Numerators,Denominator) 
&gt; Numerators = [0 1 1; 2 1 -1; 1 0 -1; -1 -1 0; -1 1 0; 0 1 0]; &gt; Denominator = [1 3 2 0]; &gt; &gt; [A,B,C,D] = tf2ss(Numerators,Denominator) Thanks for that. While it does fix the error, it also changes for what I was looking for. It makes a system of the form of a single input, multiple output. For example, the A matrix which thus gets generated is 3x3, however with the original problem which is of a form like this: http://i.imgur.com/2vsmh3H.png The A matrix which should get generated is of the size 9x9. 
You may want to reformulate your problem. The output `x` from `intlinprog` is a vector per the MATLAB documentation; your objective function needs to make sense given that `intlinprog` wants to minimize a scalar value `f'*x`. You can reshape the output `x` via the `reshape` command to an array after it's output, but you're getting a vector. You can still choose to supply `f` as an array, but MATLAB internally converts it to a vector `f(:)` inside `intlinprog`. That affects how you need to think about your constraints. In other words: x(1:10) corresponds to the first viewer's movie selection and x(1)+x(11)+x(21)+... how each movie is distributed among the workers. Constrain those sets as appropriate. You mentioned this code: &gt; `[x,flag] = intlinprog(f,1:L*10,A,b,zeros(L,L*10),ones(L,1));` `zeros(L,L*10)` and `ones(L,1)` are `Aeq` and `beq`, meaning you added the constraint `0*(x(1) + x(2) + .. + x(100)) == 1` ten times over. You need to reformulate your `Aeq` to properly impose the constraint you intended here. This constraint as written is impossible to satisfy and why you're seeing that error message. You'll also need to add vectors for `lb` and `ub` to constrain your `x` vector to the range `[0, 1]`. 
Your question is too broad, and you're not providing enough information about what you don't understand. Try to be more specific, and clear, about where you are stuck - you will get much better help, and will get more out of the exercise. See the sticky at the top of the forum if you need help with this.
Again, too broad. You're not stating what you don't understand. The way you are asking this question is essentially "I have no clue! Please do it all for me. Thanks!". Here's what you do. You sit down and you start working on the assignment. You're going to get stuck somewhere (clearly). When you do get stuck, write down **exactly** where you are stuck, what you tried, and why you think it didn't work. Example: I need to record and plot data from the oscilloscope to analyze it, but I'm not sure how. I tried X, but I just get error Y. I think the error is because (reason goes here), but I don't know how to fix that. I looked at the documentation for X but still don't quite understand. Does anyone have any suggestions? See links below for details: *link to relevant code, files, and screenshots* I can't open your model - you are using a newer version of Simulink than I am, sorry about that. An imgur link could help.
The answer has to do with the "layout" function. MatLab's graph theory tools include several algorithms for getting X &amp; Y (and, as of 2016B, Z) coordinates for graphs. If you don't specify otherwise, when you plot a graph, MatLab will pick a method automatically. See the documentation for the function "layout."
Ah that's really helpful. Thank you very much, indeed.
See, I was having that issue with other documents, but I did what you said, and it fixed it with other documents. It still won't print MATLAB stuff correctly. 
Thanks for the input! I have tried it, but couldn't find any options to publish the code as formatted math text. Any other ideas?
Keep trying. You don't need to use `find` for this assignment. You're getting close to the answer. Start by making logvecA from the original vecA first. Why are you comparing logvecA to -1? Aren't you interested in whether the vecA values are larger than -1?
Would you mind posting a snippet of your code, please? 
Are you using the MPU-6050 on an Arduino connection? if so that is super funny because I am literally doing the exact same thing you are. 
You could try writing intHeat = double(int(heat, z, (-0.5*h), (0.5*h))) Or you could try, intHeat = int(heat, z, (-0.5*h), (0.5*h), 'IgnoreAnalyticConstraints', true) 
oh shit I got it. I'm rewriting script based on another program I wrote so that's why that happened.
thanks!
Out of curiosity, did it work?
Yep, double worked!
Yes, I am! You probably noticed that the data comes in in two's complement format, hence the if statement. I'm using an arduino mega, but writing all the code in C in atmel studio. A bit more of a challenge, but it offers much greater efficiency, and you get to learn a lot more about the atmega architecture and how everything works.
First things first. You are seemingly asked for a [function not a script](https://se.mathworks.com/help/matlab/matlab_prog/scripts-and-functions.html). Secondly, you need to understand [vector indexing](https://se.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html). So you'll have something in the form of function X = myARsample(c,phi,X0,N) Z =s*randn(1,N)); a loop to calculate X(n) from c, phi, X(n-1), N. end You should pay attention to the fact that your X values start with the input X0, but Matlab indexing starts at 1, keep that in mind when designing the [loop](https://se.mathworks.com/help/matlab/ref/for.html). Also, I think that you need either Z or s as input to the function as well, because how else will you know the Z values for calculating X? **** What are you trying to do with X0= fzero(f, )?
http://au.mathworks.com/matlabcentral/newsreader/view_thread/18085
I don't know the Z values, I just know the distribution of Z and the mean and variance of Z: *(0 and s^2)*.I don't know how to compute the loop, I was just thinking about X = myARsample(c,phi,X0,N); rng(0,'twister'); a = 5; %(just for example) b = 500; Z_N = a.*randn(1,N) + b; n= [1:N]; for n=1:N f=@(X_n) c + phi*X_(n-1) + Z_N; end But it doesn't works! With: X0=fzero(f, ????) I was searching the point where the function is equal to zero (https://it.mathworks.com/help/matlab/ref/fzero.html?s_tid=srchtitle). Thanks in advance. 
I'm going to be honest, I don't know anything about autoregression. I assumed X0 would be an input, are you sure you have to calculate it? Anyway, need to have some clarity re variable names, let's say the values of Z will be stored in *Z_N* and the calculated values of X will be stored in *X_N*. In that case function X = myARsample(c,phi,X0,N); rng(0,'twister'); a = 5; %(just for example) b = 500; Z_N = a.*randn(1,N) + b; n= [1:N]; %- don't need this if you continue with for n=1:N anyway %special case for n=1 (there must be a more elegant way tho) X_N(1) = c + phi*X0 + Z_N(1); % for n=2:N X_N(n) = c + phi*X_N(n-1) + Z_N(n); %must you use anonymous function here?? end X = [X0, X_N]; %I assume you need X0 as the first element of X end And values of variance and mean set within the function? Are you sure about that? Seems odd. You can probably pre-allocate X_N with X_N = zeros(1,N), which will be useful if N is very large.
i think if you use semilogx or semilogy it takes care of axis labeling for you. 
Figured out one hella convoluted way :) a = '10^{2}'; a_new = str2num(regexprep(a,'[{}]','')); Question now is how to vectorize it to take care of every label at once. Or, like, if you have a lot of labels, do this command for the first and last and use those two numbers for the logspace function as in the previous example.
perhaps log_axis = gca; log_labels = log_axis.XTickLabels; log_labels_first = str2num(regexprep(log_labels{1},'[{}]','')); log_labels_last = str2num(regexprep(log_labels{end},'[{}]','')); log_labels_new = logspace(log_labels_first,log_labels_last,numel(log_labels)); log_axis.XTickLabels = log_labels_new; Man, what a mess. I bet there is literally an inbuilt function that does this better, or even just a plot property or smth.
Write a function, *X = myARsample(c,phi,X0,N),* for generating sample paths *X0,X1, ... XN* from an AR(1) process: X(n) = c + X(n-1) + Z(n); n = 1:N; for given parameters *c* and *phi* and time length *N*. The random numbers *Z1;Z2, ...ZN* are independent and identically distributed normals with variance s^2 (i.e. Z =s*randn(1,N)). Then: (a) write a script calling the previous function for checking visually the properties of the sample paths of the process for di fferent values of *phi (|phi| &lt; 1, phi=+or- 1, |phi| &gt; 1)*. (Hint: use pre-allocation for the vector X: that is, before calling the generating loop in the function, set *X=zeros(1,N+1))*; (b) write a script that calls *M = 1000* times the previous function (so generating *M* independent sample paths) and counts the number of times N_K that each sample path exceeds a given threshold K. Apply your procedure to the case *c=0, phi=0.5, X0=0 and K=1* and create an histogram for N_K; (c) modify your function *myARsample* to stop the process when it becomes negative, i.e. X(n)&lt;=  0 and repeat (b). This is the project that I've to do: there aren't information about X0, so how can solve this problem?
In the linked example X0 appears to be from the same random numbers as the white noise. As I said, this is totally not my field, but I'm pretty sure that's how it's implemented in the sample code if I read it right. Surely you've taken statistics or econometrics or wherever this stuff is taught and can evaluate if this is a reasonable assumption :) Anyway, if this is indeed the case, you're ready to proceed to (a), where you basically just call the myARsample function in a script (a new file) and store the results.
&gt; I'm Yes, I've done both statistics and econometrics but I've never used matlab to compute this kind of exercise. If I suppose that X0 is an input, I can do the script: prompt = {'Enter c value:','Enter phi value:','Enter N value:' ,'Enter X0 value: '}; dlg_title = 'Input'; num_lines = 1; defaultans = {'','','',''}; answer = inputdlg(prompt,dlg_title,num_lines,defaultans); c=str2num(answer{1}); phi=str2num(answer{2}); N=str2num(answer{3}); X0=str2num(answer{4}); rng(0,'twister'); a = 5; %random choice b = 500; Z_N = a.*randn(1,N) + b; n= [1:N]; X=zeros(1,N+1); for loop_index = n X=c + phi*X0 + Z_N; end plot(X) It makes sense for you? 
Almost, but not quite. In the loop you are not actually iterating through anything. It ought to be more like: n= [2:N]; %You will want to start from 2, so that you can access n-1 (matlab starts indexing from 1, unlike most other progr.lang.) X=zeros(1,N+1); X(1) = X0; %Put the initial value as the first entry in the array for loop_index = n X(loop_index)=c + phi*X(loop_index-1) + Z_N(loop_index); %don't forget to index end But that's the loop. You don't have the function yet. The way I see it, the script that calls the function will be prompt = {'Enter c value:','Enter phi value:','Enter N value:' ,'Enter X0 value: '}; dlg_title = 'Input'; num_lines = 1; defaultans = {'','','',''}; answer = inputdlg(prompt,dlg_title,num_lines,defaultans); c=str2num(answer{1}); phi=str2num(answer{2}); N=str2num(answer{3}); X0=str2num(answer{4}); X = myARsample(c,phi,X0,N); plot(X) whereas the function will be basically function X = myARsample(c,phi,X0,N); the randomization and loop end The function and the script are both in their own .m file. The name of the function file should be myARsample.m, the name of the script can be whatever.
Building on /u/mrkarlis response, you can do this: log_axis = gca; log_labels = log_axis.XTickLabel; log_labels_new = sprintfc('%i', cellfun(@(string) str2num(regexprep(string,'[{}]','')), log_labels)); log_axis.XTickLabel = log_labels_new; Note that sprintfc is a built-in, but undocumented derivative of sprintf. The main difference to sprintf is that it returns a cell array of strings instead of a single concatenated string, which is pretty handy when you want to label a plot with more fine-grained control. 
geometric distribution?
YES! plotmatrix was exactly what I was looking for. Thanks so much. Ah looks like there's also gplotmatrix. That will definitely come in handy since my data does have two groups. 
I'm actually doing the register decoding on the arduino itself, then using fscanf to read the values directly. I've found it much faster that way for me. Here is the Arduino code... I included the code of "ardprintf" made by someone, so it acts like matlab's fprintf. made notation easier for me. #include&lt;Wire.h&gt; const int MPU=0x68; // I2C address of the MPU-6050 int16_t AcX,AcY,AcZ,Tmp,GyX,GyY,GyZ; #ifndef ARDPRINTF #define ARDPRINTF #define ARDBUFFER 16 #include &lt;stdarg.h&gt; #include &lt;Arduino.h&gt; int ardprintf(char *str, ...) { int i, count=0, j=0, flag=0; char temp[ARDBUFFER+1]; for(i=0; str[i]!='\0';i++) if(str[i]=='%') count++; va_list argv; va_start(argv, count); for(i=0,j=0; str[i]!='\0';i++) { if(str[i]=='%') { temp[j] = '\0'; Serial.print(temp); j=0; temp[0] = '\0'; switch(str[++i]) { case 'd': Serial.print(va_arg(argv, int)); break; case 'l': Serial.print(va_arg(argv, long)); break; case 'f': Serial.print(va_arg(argv, double)); break; case 'c': Serial.print((char)va_arg(argv, int)); break; case 's': Serial.print(va_arg(argv, char *)); break; default: ; }; } else { temp[j] = str[i]; j = (j+1)%ARDBUFFER; if(j==0) { temp[ARDBUFFER] = '\0'; Serial.print(temp); temp[0]='\0'; } } }; Serial.println(); return count + 1; } #undef ARDBUFFER #endif void setup(){ Wire.begin(); Wire.beginTransmission(MPU); Wire.write(0x6B); // PWR_MGMT_1 register Wire.write(0); // set to zero (wakes up the MPU-6050) Wire.endTransmission(true); Wire.beginTransmission(0b1101000); Wire.write(0x1B); Wire.write(0x00000000); Wire.endTransmission(); Wire.beginTransmission(0b1101000); Wire.write(0x1C); Wire.write(0x00001000); Wire.endTransmission(); Serial.begin(115200); } void loop(){ Wire.beginTransmission(MPU); Wire.write(0x3B); // starting with register 0x3B (ACCEL_XOUT_H) Wire.endTransmission(false); Wire.requestFrom(MPU,14,true); // request a total of 14 registers AcX=Wire.read()&lt;&lt;8|Wire.read(); // 0x3B (ACCEL_XOUT_H) &amp; 0x3C (ACCEL_XOUT_L) AcY=Wire.read()&lt;&lt;8|Wire.read(); // 0x3D (ACCEL_YOUT_H) &amp; 0x3E (ACCEL_YOUT_L) AcZ=Wire.read()&lt;&lt;8|Wire.read(); // 0x3F (ACCEL_ZOUT_H) &amp; 0x40 (ACCEL_ZOUT_L) Tmp=Wire.read()&lt;&lt;8|Wire.read(); // 0x41 (TEMP_OUT_H) &amp; 0x42 (TEMP_OUT_L) GyX=Wire.read()&lt;&lt;8|Wire.read(); // 0x43 (GYRO_XOUT_H) &amp; 0x44 (GYRO_XOUT_L) GyY=Wire.read()&lt;&lt;8|Wire.read(); // 0x45 (GYRO_YOUT_H) &amp; 0x46 (GYRO_YOUT_L) GyZ=Wire.read()&lt;&lt;8|Wire.read(); // 0x47 (GYRO_ZOUT_H) &amp; 0x48 (GYRO_ZOUT_L) ardprintf("%d %d %d %d %d %d %d",AcX,AcY,AcZ,Tmp,GyX,GyY,GyZ); delay(10); } and the matlab code is really basic. first read the values until it reads the whole line of 7, then you can use the main loop.. temp = []; while isempty(temp) temp = fscanf(s,'%f %f %f %f %f %f %f')'; end temp = fscanf(s,'%f %f %f %f %f %f %f')'; while 1 temp = fscanf(s,'%f %f %f %f %f %f %f')'; temp(1:3) = temp(1:3)/16384; temp(4) = temp(4)/340.00+36.53; end this gives more work to the Arduino and leaves more computing power on your pc for things like plotting the positions or something.
Yes :(
 help(input)
Now that's neat! 
Do you want pop-up dialogues? A GUI with drop downs or a selection of buttons? Just a text prompt and free-user entry in command line? https://www.reddit.com/r/matlab/comments/5pvc8v/the_skill_of_asking_questions_or_how_the_quality/
NSFW spam just in case anyone was curious and optimistic to the point of stupidity like me and thought it might be a good Matlab joke or something.
 for n = N output = myfunction(input); end In the most basic case. But you'll probably want to iterate through different inputs and save the various outputs as well, surely.
yep, u are right. I d like to obtain a vector with all the results X=[x1, x2 .... xn] and plot all the n results 
If the input is a vector and so is the output, do you even need a loop, do you even need a function? Perhaps it can all be done in one line of code.
for ii=1:N X(:,ii) = myfunction(a,b,c,d); plot (X) end i solved the problem with it .. now i'm trying to count how many times this function has a certain value (X&lt;g ) but i cant fit those values all in a big matrix 
Do you want to find the maximal number in an array and its index? myArray = [1 3 4 7 4 1 2]; [maxNumber, index] = max(myArray); will return [7, 4] as 7 is the largest number in *myArray* and 4 is sevens index. Try 'help max' for more info. 
You could use the "exist" function to see whether or not a variable exists.
Was actually just looking at that and playing around with it in my code. I'm using it like &amp;nbsp; %// Declare empty structure s = struct() folder = 'C:\Users\Mike\Desktop\Benchmarks\Replay Runs\Original\Run 5' %// Get all MAT files in directory f = dir(fullfile(folder, '*.mat')); %// For each MAT file... for idx = 1 : numel(f) %// Get absolute path to MAT file name = fullfile(folder, f(idx).name); try %// Load this MAT into the workspace, get Timestamp variable load(name, 'Timestamp'); catch continue end timings = diff(Timestamp) %Perform stat operations, define array containing results min_t = min(timings) max_t = max(timings) mean_t = mean(timings) std_t = std(timings) stats_t = [min_t, max_t, mean_t, std_t]/(1*10^6) %//Get the name of the current .mat, all characters except the last 4 (.mat) and most of run %number data_name = f(idx).name(8:end-4); %// Place corresponding array into the structure s.(['stats_t' data_name]) = stats_t ; end &amp;nbsp; But what's happened is it just ends up skipping every iteration of the for loop altogether. If I put continue in the try loop, then it continues to the next attempt at 'try' when I want it to skip to the next iteration of the for loop. When I place all of the code after try, it ends up still saving all of the variables that are returned by the for loop into the structure 's', when I want it to only save the results of the for loop into the structure for .mat files that had the Timestamp variable.
 is this for homework? you have a hard time finding anybody willing to tell you how to solve a problem if it's homework. We typically try to point you in the right direction and help you understand things that are confusing
The link is broken for me. In any case -- please provide info on what you're stuck with. What have you tried already? What code have you written? What about the problem is giving you trouble? Read over this post :) https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/
I somewhat understand what you're saying, Can you perhaps use code to explain?
&gt; Ok, so would setting y = u.* t^2 actually do anything in this situation? It shouldn't, no. Do it to get your professor off your ass. &gt; "The sample time propagated to 'untitled/Delay1' is not discrete but [0, 1]. Specify a discrete sample time in the source of the incoming signal." Your block, Delay1, is trying to inherit it's sample time from a previous block. But all the previous blocks don't have a specified sampling time, either. Something, somewhere, needs to be specified so that time sampling inheritance can work. Alternatively, you could use a fixed step solver.
If you run the code in the debugger, step by step, does `continue` get run, or passed over? If I was in your shoes, what I would try to do is make my code match the example in the documentation that replaces an error with a warning. Copy the syntax, structure, et cetera. 
&gt; I had thought about just having another function that opens a separate classdef but as far as I'm aware you can't pass input arguments to classdefs can you? If so, ideal. Your [constructor](https://www.mathworks.com/help/matlab/matlab_oop/class-constructor-methods.html) can definitely take arguments. I would probably make a class that inherits from `figure` and put everything you need for the trial window in there.
I think you might just need to move the catch to the bottom of the code you want it to execute
[removed]
My favorite definition for coherence is that it is a measure of a consistent phase relationship. Magnitude plays a role but mostly just to get better SNR for the coherent signals.
Use "max" to find the largest number and "find" to find all occurrences of that number in the list. 
Why not start here: https://mathworks.com/discovery/object-oriented-programming.html Should be good enough if you know your way around matlab
Thanks! Made it work! :)
Woah! Comming from a C, Python, Php background and being new to MATLAB I never knew you could implement classes and methods in MATLAB. Thanks! 
Added screenshot of my plot, not sure where to host a 25MB text file, I tried a couple sites that wouldn't work.
Two thoughts: one is that your data looks a little noise than the data shown in the 'ideal' example. You could apply a gaussian filter and smooth it out, that might help. Another idea would be to mess with the color map and see if you can get more detail out of it - if you sort this forum by best of all time there's a great post up there somewhere about manipulating plot colors. My initial thought was to interpolate your data over a finer spacing, but I can't imagine that helping if you already have 250000 data points. Sorry I don't have any more detailed advice, but that's where I would start. 
Yeah I agree with you noisy data is never going to look as good as the linked graph. /u/chris52735 do you really need to triangulate? If your points (X,Y) are on a grid you could use ` surf`and add an overlay grid for better visibility. With 250 000 points you probably don't need to use `shading interp`. You could look at the lighting (see ambient lighting [here](https://fr.mathworks.com/help/matlab/ref/chartsurface-properties.html)) but it often mess stuff up for me. Also using `axis tight `will make it look tidier I think.
What's the "chain game"? I googled it and got a couple of results but none of them seemed relevant. 
https://www.mathworks.com/help/matlab/ref/fimplicit.html 