Are you a student? If so, it will definitely be worth your time to find some journal articles outlining the modeling of a quadcopter, so that you don't have to do the whole thing from scratch. Use your schools access to read those articles and see what you can find. 
I don't know what kind of outputs your computer vision algorithm is giving you, but most likely, it seems as if you are going to need to develop the quad copter's system dynamics to get any sense of what it is doing. Typically, this is done by developing a mathematical model of quad copter, and then implementing a controller and simulating with matlab/simulink. I don't know how familiar you are with simulink, but that is definitely the way to go in terms of numerical simulation. There are plenty of examples of how to do this through matlab's support pages, so don't try to do this from scratch if you don't necessarily know what you're doing. You'll definitely have to tweak any existing code to apply it specifically to your system, but there's a bunch of stuff out there to get you started. Additionally, there are numerous journal papers going into the details of mathematical modeling/controller development for quad copters...
Why simulate it? Because I have no drone and need to show something at least :/ unrelated: Wow if I ever decide to pursue a PhD, I would love to do it on exactly the same topic as you did! Would you recommend it?
Well that depends on how you want your quad to react to the image it is seeing. Are you trying to focus on a certain point with the camera, avoid obstacles, or just maintain level flight?
A transfer function isn't enough for a quadrotor IMO as it's an inherently nonlinear system, both in terms of states and actuation. From a simulation perspective, you're better off using a nonlinear state-space model.
Thank you for your explanation, I think I got it! Actually I really need the case with 2 parts only for my exercise sheet, so your solution should work fine already :) I was quite interested how this can be generalized. I also did not know about the Stirling number, this should definitely help me. 
This is when you move it to something other than matlab. There is a reason why Fortran is still written today.
Do you mean something like this? 0 0 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 0 0 I'm confused by the question. 
This looks like a homework assignment. Is this even the complete question? And what have you written so far?
Hey parzen, it is, and i have a hard time trying to solve it and this is the complete question. i've looked for a loop function but am i right? Have a great day mate :D 
Thanks for the suggestion! The main reason I did it that way is because it was easier to correctly insert that output into the center part of the model space. However, I've been working on a way t modify the "G" matrix to compute the entire model space all in one go (including the edges). It still has a few bugs (the answer isnt quite right) but it is running without throwing any errors so I used that to test your suggestion (because its the entire model I can just leave it as a vector and not worry about reshaping or anything. Running the simulation for 500 time steps, I found: * The original method took (reshape + concatenation) took 80.7 seconds * Removing the reshaping but keeping concatenation took 81.0 seconds * Removing reshaping and concatenation (by breaking the "G" matrix into 2 matrices, doing Matrix-vector multiplication for each, and adding the result) took 71.8 seconds * EDIT: also, for reference, the original method shown in the linked code (where I do the edge cases separately outside the kernel) took 101.1 seconds So, while its not a "majority" of the time, its a ~11% improvement and I'll certainly take it. It also seems that the concatenation, not the reshaping is the issue that is more computationally expensive. Technically just removing the reshaping increased compute time slightly, but not enough to be statistically significant, so I'm going to assume that reshaping had almost zero effect. Hopefully, I will be able to work out all the bugs with this new "G" matrix so that I don't have to switch back to doing the edge cases separately since that would make this method much less efficient I imagine (since the edges aren't all at continuous indices, I would guess extracting them from and adding them back into a vector likely is less efficient than adding/extracting them from a matrix).
The logic described above is smart - bear in mind, though, that it would be faster to implement via logical indexing rather than in a loop.
You could look into [poly2mask](https://www.mathworks.com/help/images/ref/poly2mask.html)
Why aren't posts like this just deleted? 
That works but it's super inefficient. You can do it faster with meshgrid(), linspace() , and hypot(). [X, Y] = meshgrid(linspace(-1, 1, 500)) R = hypot(X, Y) circMatrix = R &lt; 0.5 Of course you can change the radius or grid size or whatever. 
Sure, that could work. Let's use rotz instead, since it rotates in the x-y plane (which is all you actually have): &gt;&gt; xy = rand(2,5) xy = 0.8147 0.1270 0.6324 0.2785 0.9575 0.9058 0.9134 0.0975 0.5469 0.9649 &gt;&gt; R = rotz(45); R = R(1:2, 1:2) R = 0.7071 -0.7071 0.7071 0.7071 &gt;&gt; R*xy ans = -0.0644 -0.5561 0.3782 -0.1898 -0.0052 1.2166 0.7356 0.5161 0.5836 1.3593
&gt; I used pcolor with shading set to interp I used to use this for quite a few things, but I have recently taken to using [imagesc](https://www.mathworks.com/help/matlab/ref/imagesc.html). Its a bit easier to work with (ex: you can define image bounds by just using the 4 corners of the image, no need to screw with meshgrid or ndgrid). Also, and you dont lose 1 row and 1 column off of your matrix like you do with pcolor. Might be worth checking out if you find yourself frequently using pcolor.
I'm just a small town girl living in this lonely world. Matlab has so many amazing functions that can do a ton. I only know basic programming, so I went with a generic numerical method. I feel like I learn something new every day about Matlab. What is hypot? Thanks!
Does it automatically detect the tab delimiter?
Mathwork's Aerospace toolbox has an entire Quadcopter project that could give you an idea of how to model a Quadcopter in Simulink. Idris Putro also has a good book on modelling and control. https://www.amazon.com/Modeling-Control-Simulation-Autonomous-Quadrotor/dp/3844318062 
If this dude can't figure out how to reply correctly to comments in reddit, I don't think he'll have much luck in whatever matlab/engineering course this homework assignment is from. Dude, you'll prob want to start [here](https://www.mathworks.com/help/matlab/ref/function.html).
I used imagesc with the original plot, but had that really annoying discrete plot. Can you use shading interp with imagesc? 
You really don't want to do this. There's a discussion on the Mathworks website: https://www.mathworks.com/matlabcentral/newsreader/view_thread/159440 There are some options provided there.
The freeze you see is the massive massive slowdown caused by your OS using the swap file. that is, it pretend a part of the harddrive is working memory and lets matlab use that, this is great if you want to not close chrome when doing something else, but not using chome, but not so much for matlab. The problem is that matlabs operations work really well when stuff is in fast memory, and not so much when its not. On windows, I usually work with computers with enough memory for all the things i want, so i set the swap file rather small (several hundred mb), such that when you try to get more memory than you have, it throws an error and stops (out of memory) in stead of letting it effectively do computations using a chalkboard. 
If I understand correctly, I think you can just use interp1. For example, if you have a dataset t and y which has more points than tmaster and ymaster, you could do the following: ynew = interp1(t, y, tmaster); I'm not at my computer right now, but I believe that is the syntax interp1 uses.
The documentation for export_fig states: &gt; By default, vector formats (i.e. PDF and EPS outputs) use the painters renderer, while other formats use the OpenGL renderer. However, I was able to resolve my problem my specifying the painters renderer: export_fig('filename.eps','-transparent','-painters'); I am still unclear about what is going on here, or why I was having problems. It seems that the objects were not being saved in vector format, despite specifying and .eps filetype. The fact that this was resolved when I manually changed the renderer to painters suggests that a different renderer was being used. But why would the function use a non-default renderer without me specifying to do so?
I usually go to eps and then delete all of the extra crap (layers). I usually do this from the "save as" menu. This nearly always works. 
I find that SVG export is often better than EPS or PDF if you want to edit in illustrator (especially in recent versions).
So first off, 'ind' is only giving you the absolute difference values, not the indices, or even the original values. Secondly, you need to consider what the output should look like. Say one column has 1 value that is closest, and another has two values. You can't just slap them together, unless you have a 6x6 NAN matrix and fill the spots as needed. You might want to consider either using cells, or have n different outputs corresponding to each column. Thirdly, I would suggest using a loop for each column. If you really do want the original values, first find the index, and then use that to return the values. Try something within the loop like this x(absolute(:,i)==min(absolute(:,i)),i)
Right click the vout and vin simulink signals then go to linear analysis &gt; output measurement and input perturbation respectively. Then click 'bode' to linearize the system and plot the frequency response. If you want to estimate the frequency response, go to the estimation than from the tool. Then more or less follow the steps from above though you will need to create an injection signal such as a sinestream. For doc help search for the functions 'linearize' and 'frestimate' 
+ Thanks for the suggestion. I'm unfamiliar with SVG file format, but it looks like a good alternative to EPS or PDF.
+Thanks for the suggestion. I've been told (and there's some opinions online as well) that the print command does not necessarily reproduce a figure that well (apparently it can mess with scaling or something). I think that this is why my colleagues suggested the use of *export_fig*. [However, it looks like export_fig may not have the same level of support anymore](http://undocumentedmatlab.com/blog/export_fig) (?): &gt;After several year of creating, improving and maintaining *export_fig*, Oliver is unfortunately no longer able to maintain this utility. I feel like I'd rather manually delete a few extra layers in Illustrator, as you suggest, than try to mess with an unsupported user-made function. I'll look at your recommendation for future figures.
The `find()` command is helpful, with two output arguments -- one for row and one for column. % Version with one value, like 5 as you supplied: a_mat = round( 10 * rand( 6 ) ) % data matrix b_const = 5 % value for comparison diff_mat_1 = abs( a_mat - b_const ) % differences [r1,c1] = find( diff_mat_1 == ones( size( diff_mat_1 ) ) * ... diag( min( diff_mat_1 ) ) ) % r1 and c1 are the rows and columns of your minimum solution. If there's % more than one in each column, you'll see a repeated index in c1. % Version with one value per column: b_vec = round( 10 * randn( 1 , 6 ) ) % row vector of values b_mat = ones( size( a_mat ) ) * diag( b_vec ) % matrix of that vector diff_mat_2 = abs( a_mat - b_mat ) % differences [r2,c2] = find( diff_mat_2 == min( diff_mat_2 ) ) % result The trick where I used `ones` and then post-multiplied it by the vector in question has served me well over the years. You could also use `a_mat .^ 0` there, but I figured that might add too much complication. Cheers!
Yeah, the multiple ones are the issues. But using a for loop or NaN matrices seems inefficient. However I could be wrong, I am a beginner as you can predict. The other comment has the best one I think. Thanks for the reply!
I can't say that I have a way to speed up ode solvers when you have to run them in series, but there are a couple things you can do. -Check the summary of ode options doc for other solvers that might work -Minimize the use of any other functions in the odesolver loop, you can use the profile viewer to examine them. -Use the waitbar function to show progress (i/500) Also, I'm not sure if this would work, but could you parallelize for each time step instead of for each point? Or if you're really desperate, the ode solver code is available in .m files, so you can remove unneeded sections (like handling varargin) and save as a ode45_The_Alpacapocalypse.m file for use.
Do you mean the variance covariance matrix of three column vectors A, B, and C? If so you can put them into a matrix and just use cov() as-is.
Sure, I was just thinking that you could run it in parallel where you use one time step for each iteration, so time_end would be replaced by time_end(i) and each ode would solve between 0 and that time. I might just be misunderstanding ode's though
Ah, that makes sense. Sorry I couldn't be of more help, good luck on your project!
[I wonder why cov(A,B,C) doesn't work 🤔🤔🤔🤔🤔🤔](https://www.mathworks.com/help/matlab/ref/cov.html)
Change the tolerances of the ODE solver so that it spends less time iterating each solution. It's not a huge difference in time but it's really the only thing you have control of. Also, try other ode solvers, depending on the differential equations different ODE solvers can have vastly different speeds
Hmmm. Yeah unfortunately I need a very small tolerance as the application requires lots of precision. I've already looked into the different solvers. I guess I'll just have to accept the fact that it may take a day or two to run :( Thanks anyway!
It looks like /u/subroutines [deleted] their account. That sucks.
Newton-Raphson is a numerical method. 
Oh, I gotta check back. Thanks.
Don't. Use. Syms. This is almost a daily thing on this subreddit. Your default in MatrixLaboratory should be to use areas and matrices in your code unless you are forced by very specific circumstances to use symbolic variables. I am honestly curious who is leading people to think syms are the right tool for something like this, because it's depressingly common. areas == arrays **
You mean as rows?
Because I'm just editing this code to fit my problems, I found it like this, my teacher didn't actually teach us how to use Matlab properly so that's all I can do...
Do you know of any code that doesn't have syms? I couldn't find one anywhere
Use chebfun 4 speed
It's because the PDF is truncated. You need to use a log-likelihood minimization in order to estimate the correct parameter.
Often measurment error will obscure a smooth surface that underlies what you're looking at. Correcting the data through smoothing is usually a pretty decent approach in cases of unbiased noise. There's a reason why non-parametric regression was developed.
It can happen. Have you verified that there is feasible space to begin with?
Per the help file, they should be columns.
no worries
Searching Google for "wdf file matlab" gives some results. It's a proprietary filetype that seems pretty unique, but at least one company offers a script to open them. Alternatively you could write your own script to read the file's contents with fread.
Yeah, so? That's not what I'm talking about. 
I'll be double checking feasibility today (which depends on how the function gets parameterized). When it happens, assuming there is a feasible space, do you know the usual cause? 
Here's how you can do it with poly2mask. nrow = 500; ncol = 500; radius = round(nrow/2); % Make circle polygon theta = 0:pi/50:2*pi; xc = radius * cos(theta) + round(ncol/2); yc = radius * sin(theta) + round(nrow/2); % Turn it into an image/matrix Icirc = poly2mask(xc, yc, nrow, ncol); % Plot close all; imshow(Icirc); hold on; plot(xc,yc,'r') 
Have you ever used Matlab before? Have you tried to work on this yet? What have you tried so far? Where do you need help?
Wow, no I didn't. That works great, thank you!
Do you know what a Fourier transform is? I'd read up on the [toolbox documentation](http://www.ee.ic.ac.uk/hp/staff/dmb/voicebox/voicebox.html) and try to get a feel for which functions may be useful to you.
If you look through jkool's sass, what he is saying is this - the function you created is most likely loading the data properly, however, once the function ends, the function workspace is trashed, and any *local* variables are deleted. This is what global does. It tells the environment that this is not a local variable - but global - and it should not be deleted along with the local workspace. My advice would be to put a *stop* right before the csv file is loaded, and then advance your code line-by-line, keeping an eye on the workspace variables pane for your data. You should see it appear after loading, and then disappear when you return to the calling workspace. Your job is to define it as a global variable so that it does not disappear when returning to calling function.
thanks a lot
Yup. 
Have you done your stability analysis by hand, eg, check if the control Gramian is positive definite or (more easily since your system is linear) check the rank of the control matrix is full. After that, then diagonalize your system and check your eigenvalues are all negative. You can also look at the condition number, which is the ratio of largest to smallest eigenvalues. If this is large your instability may be due to numerical round off. You might want to do a Lyaponov analysis to show global asymptotic stability. That is actually the best idea.
there is pseudocode ON THE WIKIPEDIA PAGE for newton's method that lays this out. https://en.wikipedia.org/wiki/Newton%27s_method Scroll to near the bottom.
You need to import the Java package or fully qualify it. You can write something like: x = java.lang.String('test string')
This is going to make my life so much easier. Thank you.
Try Chebfun.
The result you get is completely normal, none of these lines work as you intend them to: == is **not** what you should use to compare strings... try strcmp().
Thank you!
??
I can't explain it as well as wikipedia probably can, but if youre looking at how parameter changes effect a dynamical system, you probably want to produce a Phase Plane. Use the 'quiver' command in matlab
 ylabel('dE/d$\hbar\omega$d$\Omega$ ($\mu$JeV$^{-1}$Sr$^{-1}$)','Interpreter','latex'); works for me
What version of MATLAB are you using?
2017a running on Ubuntu
An error? Great, so now you know what the problem is, since the error message told you. Right? 
Thanks for your response. &gt;In order to concatenate to a cell array with the [] notation, all of the items being joined must be cell arrays I'm surprised to hear this, because a = {'a'} a = [a,'b','c','d'] works just fine. The only issue is with empty strings, for example a = {'a'} a = [a,'b','','d'] % this gives a = 'a' 'b' 'd', not a = 'a' 'b' '' 'd' 
Apparently, I was just plain wrong and [you can concatenate cell arrays with non-cell arrays in general - matlab just puts everything together as a cell array](https://www.mathworks.com/help/matlab/matlab_prog/combining-cell-arrays-with-non-cell-arrays.html). I don't see where the difference in behavior for empty items is documented, and I don't seem to be the only one who is surprised by this behavior and/or can't find the documentation for it [[1]](https://groups.google.com/forum/#!topic/comp.soft-sys.matlab/F4efdJ7ZJKw) [[2]](https://www.mathworks.com/matlabcentral/answers/20664-concatenating-an-empty-numeric-array-to-a-cell-array) [[3]](https://www.mathworks.com/matlabcentral/answers/77556-cell-array-concatenation-rules). I have tried with empty strings (as in your example), arrays (`[]`), cells (`{}`), and structs (`struct([])`). Using empty values of non-primitive types seems to fail by trying to convert the cell array involved into whatever non-primitive type you are using. My strong suggestion would be not to use this behavior. If you are concatenating to a cell array, make sure you are always concatenating cells. This avoids the "magic", and problematically inconsistent, behavior of the concatenation operation for mixed types.
what is x supposed to be?
My input signal, so in this case, my array from audioread().
It means that you define a variable but do not use it anywhere
You create yNeu and assign it a value, but you didn't use that value for anything after that. The warning will go away if you use the variable yNeu after giving it a value, or if you specify it as a return variable for Hauptfunktion().
_Very confused_ with what the problem is. Can you try and describe it in a different way? You have an array of locations, which are [lat, long, timestamp], is that right? And given an arbitrary new location, you want to find the closest location to the new location in the array? What does the time have to do with anything? If you could describe this as a function, i.e. what are your inputs, what is your expected output?
Thanks for taking a look. u/Idiot__Engineer was/is super helpful, so maybe reading his and my subsequent reply will clear things up. I also put up some sample data.
Thank you. 
Thanks. This worked. I wanted the function to just output yNeu, and i thought that would be accomplished by not putting a semicolon at the end of that line. Seems like Matlab wants to see an actual use of the variable. 
Thank you so much. 
you didn't even spell matrix right
Idiot_Engineer gave the typical approach to this problem. Depending on how many data points you need to find, that may be slow. For large data sets, I prefer to use Delauny triangulation. F = scatteredInterpolant(lat_netcdf(:),lon_netcdf(:),value_netcdf(:),'nearest'); queriedValues = F(lat_query,lon_query); I usually make a cell array of F objects. One for each time step, and find the closest in time F to use depending on the query time.
So, the lack of a semicolon tells Matlab to output the result as text to the command line. But, each function maintains a local workspace until the function ends. By placing the function's output in the definition, the function will push the variable's value to the workspace the function was called from.
What you need to do here is read through your code as the computer does. Make a table with your variables and their values, then update as necessary. When you get to the loop, go through each iteration, as the computer would. You should notice your mistake pretty quickly. 
https://nl.mathworks.com/help/symbolic/fibonacci.html
Got it! 
Are you using AppDesigner or GUIDE? My experience is with the AppDesigner, 2016b onwards. Within that, if you set a property N_CLICKS that iterates each time you interact with the uifigure, through button clicked callbacks; however, I'm not sure what the best way to monitor clicks on a non-interactive object would be. Is there an advantage to counting the number of clicks versus having an button that executes the code you want to run?
+aqu4man Thanks for the help man,i appreciate it
In my experience I've found DT to be faster than looping over every point and finding min distances. That said, I don't usually have the rectangular grid to go off of -- maybe that n+m distnaces would be faster in this case. Certainly the m+m version is a much better way than n^2!
I haven't tried to run the code, but I imagine it is because your anonymous function doesn't have any inputs. Usually the fmin____ codes expect something like this: fminsearch(@(v)three_var(v),v0) where v0 is your starting value
In my experience, there are still some areas that can massively benefit from vectorization. I recently was working on a finite difference wavefield modeling code, and when I transitioned from looping through all my model points to get derivatives to getting them using a single sparse matrix multiplication, the run time literally dropped down from a few days to a few minutes. Granted in this example there was almost no chance of auto-vectorization working, but this isnt the only example I've seen in post 2015b Matlab where vectorization massively speeds up code. Even running a simple test on multiplying a 1000x1000 matrix and a 1000x1 vector 1000 times shows that (on my machine, running 2017a) the vectorized version gives a pretty massive speedup n=1000; A=magic(n); b=[1:n]'; b2=b'; tic for xx=1:1000 x1=A*b; end toc tic for xx=1:1000 x2=zeros(n,1); for n1=1:n for n2=1:n x2(n1)=x2(n1)+A(n1,n2)*b(n2); end end end toc tic for xx=1:1000 x3=zeros(n,1); for nn=1:n x3(nn)=sum(A(nn,:).*b2); end end toc Elapsed time is 0.306790 seconds. Elapsed time is 20.000635 seconds. Elapsed time is 13.498146 seconds.
I really wish there was some way to declare a partially global variable. Something that allows a variable to be shared between some pre-defined list of functions and (optionally) the base workspace, but not completely globally shared. Unfortunately, I'm not aware of any way to do this. You can kind of manage it by using nested functions, but that is far from a perfect solution. (If you happen to know of a way, please do share).
Are you totally sure, that this is your code? `3y.^2` should produce an error (Unexpected Matlab expression), `xy` is not defined, … If I run [this](https://pastebin.com/kXyEbHUV) code, Matlab prints -3.0000 -0.5000 -0.2500 for me. 
How did you construct `y`? Is this a function? Is it a variable? And what is `x`? In your case, this should be `dx`, which should be a scalar. Your error points out, that `y(i) .* x` has more than one element, so `x` is most likely a vector.
i7 7700, 16GB, Intel HD Graphics Ubuntu 16.04 kernel 4.11 R2016b : 0.1293 0.0844 0.0457 0.0640 0.2809 0.2744 Surprisingly matlab 2D and 3D are faster with Intel Graphics than with my nvidia K620
Movie()
I didn't read much of your code (sorry but really tired atm to be looking at MatLab xD) but you do have 2 mistakes that are clear 1. for i=maxiter (..) I think you want this to be an if loop not a for loop. Otherwise you are stating that i equals to maxiter and as such you will display the message. 2. you either have no loop or you are not increasing i. As such if you make the if loop like I said in 1. i will never be equal to maxiter because you don't initialise it nor update it anywhere in your code. Let me know if you still have issues with it but if you could write the algorithm or pseudo-code you want to implement that would help us too so we don't waste much time EDIT: ok I read your code again. I think you need to do 1. like I said and put that if loop inside the while loop (either before or after the if loop already there. you could also include a break command inside this loop so that the it skips once the max iter has been reached
This is what i have now: https://i.gyazo.com/ec93bcfe5cbc70dd20f172c8c20b251d.png and something is still off! and thank you for all your help so far it really means alot to me!
You will need to re-run the m-file. The m-file just creates the parameters in the base workspace. If you edit the m-file, that will not edit the parameter in the workspace. So you can either re-run the m file or execute &gt;&gt;lenHouse = 3; in the command window. 
Thanks, but I re-run it several times, paying attention that the workspace parameters reflect the changes. It does not propagate to the simulation (or there is an error in the example model).
Did you try changing another parameter, like the thermal properties of the house or adjusting the flow rate to nearly zero? Does that give you a different output?
You're welcome. But I really recommend you try to understand what I did and what that means. If you lack the maths, I strongly recommend, you look into that again. This is a really important topic, especially in engineering and physics. I think [http://www.youtube.com/playlist?list=PLZHQObOWTQDMsr9K-rj53DwVRMYO3t5Yr](this) video series caputes the essence of calculus really good. It explains in detail, what derivatives and integrals mean and in one of the videos, he even talks about your problem.
I realize that you are new to Matlab; however, developing the critical thinking skills needed to solve problems like this is essential if you ever want to be proficient in Matlab. So, instead of just telling you the answer, I will tell you what I would do to figure it out if I were in your shoes. Hint: There are 3 main parts of this code in the main loop - the part that generates the figure, the part that converts the figure to a video frame, and the part that writes frame to the actual video you are making. The only part you need to fool with is the part that generated the figure. The rest of the code should work with any figure you want. Step 1: go through the code line by line, and determine which of these lines is actually responsible for generating the figure. step 2: replace this part with the code needed to generate whatever figure you want.
NICE! I will try it later
Because its you and no one responded i did some looking into. Seems like meshgrid and ndgrid are interchangable-ish for 2d and 3d, [except the order]points(https://nl.mathworks.com/help/matlab/ref/ndgrid.html#bvlju73-5) of the . [someone explained](https://nl.mathworks.com/matlabcentral/answers/99720-what-is-the-difference-between-the-ndgrid-and-meshgrid-functions-in-matlab) that meshgrid produces points in cartesian coordinates (that is, x varies in the second dimension (just like when you plot somthign with image), whilst ndgrid is more simple in that the first output varies first, than the second. I like their conclusion that meshgrid is usefull for plotting, because its in plotting frame, it's only 2 and 3d and the plotting functions assume meshgriddy input. Ndgrid is for anything else. Ow, and about efficiency, cant imagine its much different. ndgrid: if nout == 2 % Optimized Case for 2 dimensions x = full(varargin{j(1)}(:)); y = full(varargin{j(2)}(:)).'; varargout{1} = repmat(x,size(y)); varargout{2} = repmat(y,size(x)); else meshgrid: xrow = full(x(:)).'; % Make sure x is a full row vector. ycol = full(y(:)); % Make sure y is a full column vector. xx = repmat(xrow,size(ycol)); yy = repmat(ycol,size(xrow)); 
It was trained using over a million images. The algorithm is sophisticated but the better data you use, the better results you'll see.
+1 for helping in a constructive way
I mean I get *why* it exists....I did a little looking into it as well and saw that it exists because it better represents how things are plotted. I still dont like it. Lol. Admittedly, I'm biased because I *always* get it wrong on the first try when I try and use it. I remember that x and y need to be transposed, but forget if that is only in the inputs, only in the outputs, or for both. Honestly, using ndgrid and then permuting the output is much faster for me than trying to make sure that I am using meshrid correctly (and second guessing myselen I am because of how many times Ive gotten it wrong before lol). The other reason I think its silly to use meshgrid is because, imo, chances you really dont give a **** if the grids are ordered in an "intuitive" way, you just want them to get passed to the plotting function you are using. /rant Maybe I will just use ndgrid and permute from now on. I figure if I still havent figured out meshgrid by now its never going to happen lol.
Please read [our rules for submitting homework](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/) and modify your post so that people can actually help you. 
&gt;When I click RUN in Simulink, it takes around 90 seconds to build, push to arduino, establish serial connection, and run. If the metric of performance is dSPACE, then that sounds like a reasonable amount of time. It takes me about &lt;5 minutes to compile smaller models, and about 2 minutes to connect, flash, and run. That being said, what part of your process is taking the longest? If compiling is taking 99% of your time, then you know where your bottleneck is. 
&gt; don't bend the data IDK, a lot of good information can come from working with a 'clean' ansatz
That clearly not what I meant. Right? 
Two arrays have equal Fourier transforms if and only if the arrays are equal. 
Can you show your input and output?
We need to see your code. This is almost surely a problem in your code. Without your code, we won't know why it's happening. 
Are you supposed to be dividing by frequency? Shouldn't string length get shorter if frequency increases?
Oh wait a moment I see what you mean.
You don't have to use the debugger, but it will make your life a lot easier if you do. It's very helpful at answering the question "why isn't this doing what I expect it to?" So, I'll try to give you a new tip. You're now creating n random numbers, but those random numbers are between 0 and 1, and you could create a million random numbers between 0 and 1 and not expect to get a repeat. As a tip, I would look at the function [randi](https://www.mathworks.com/help/matlab/ref/randi.html). 
Matlab is the worst right?
I mean, I would recommend using spectral methods, it's much easier to code in boundary conditions like that.
I would recommend learning them. They're easier to implement and much more modern. 
Define a vector that is the value of the "custom function" for each cell array, sort that vector using sort, then use the sorted index list (second output of sort) to sort the initial bunch of cell arrays.
without further information just rearrange the characters. This works if your strings are of the same structure. s = 'Dk1254c456a' out = s([1,2,4,3,6,5,7,10,9,8,11])
If you can guarantee an even number of characters: a = char( randi( 58 , [ 1 16 ] ) + 64 ), b = [ a( 2 : 2 : end )' , ... a( 1 : 2 : end )' ]' , c = b(:)' If not, you'll have to do an end-1 and handle the last character as a special case. Left as an exercise to the redditor.
 ismember is exactly what you need. wavelength_matched = wavelength (ismember(wavelength,refwavelenght)) I don't know what you mean when you say you want to keep the values intact, just use a new variable...
Don't most modern math libraries use a lookup table for trig functions? I doubt it's actually evaluating a Taylor series each time you call a trig function. 
Sorry the code isnt an exact translation of the post. A = ifftshift(k_2d) = B. But even running isequal(A,B) returns 0. Why is it that the matrix elements are identical for both A and B though?
If you own the parallel computing toolbox, you could calculate the sum in parallel. Depending on the number of CPU cores in your machine, this will speed up the summation significantly.
No man I'm not saying "use first principles and approach it axiomatically." I'm saying don't do things that corrupt and distort the actual information content of your signal. 
Matlab gives you an approximation of sine that is accurate to machine precision. Use matlabs symbolic mathematics toolbox if you want exact results.
Check the doc for indexing, and for transpose. 
You sure it used tables? That seems like a really bad way to do it. Can you explain how that would be done without needing a huge number of entries for machine precision?
The way I see it, you have 2 things to solve. First is to draw the graphic and figure out how to update it after it has been drawn. You can erase and redraw each time, but this will be slow. I would recommend looking through the properties of your graphics object by calling its handle - get(h). Once you have found the data corresponding to the X/Y values of your markers, you can try changing them using set(). This should be much faster than redrawing. Test this outside of the GUI, just using m-file and command prompt. The second challenge is to integrate this change into a GUI slider. When the slider is moved, it will execute the code contained in the slider callback function. You will need a piece of code that gets the current value of the slider, and assigns it to a variable. If you understand the property-set method above, it is as simple as setting the desired slider value as the graphical location. In later versions of Matlab, there is also a linked variable approach, but I've never used that. Sorry I can't be exact as to the syntax, on phone in line for rollercoaster.
I don't know the details, but I know that they were implemented that way at some time in the past. I assume they choose specifically designed interpolating functions? I don't know. 
Okay thanks, got it working! The only other thing I want now is to display the current threshold value under the slider. Any tips?
Make a text box. Inside your slider callback function, set(textboxhandle, current slider value).
I do in the following fashion: first I create a figure with a slider: figure % open a figure hold on % hold figure until all sliders and caption are created % Create slider: sld1 = uicontrol('Style', 'slider','Min',0.001,'Max',0.3,'Value',0.001,... 'Position', [400 20 120 20],'Callback', @changeParmA) then I create a function to change a global parameter, like so: function [ output_args ] = changeParmA( source, event ) global parmA parmA=get(source,'Value'); callPlotFunctionFoo() end then the function that actually plots the graph can be anything. pay attention to *hold on* and *hold off*s of the figure or you may plot overlapping graphs. you can create as many sliders as you want and call the same plot function using several changePramA, changeParmB, changeParmC methods to change global variables values. [bonus: add a caption] % Add a text uicontrol to label the slider. txt=uicontrol('Style','text','Position',[200 20 120 20],'String','Parameter A');
of course! I knew I was missing something. I didn't remember to use three values in a row. nevertheless, let's make this be help for other people in the future thanks
https://github.com/tum-vision/fastms/blob/master/src/libfastms/solver/solver.h
So how would I get it to only be changing phi along the first axis?
You would write something like z = sin(phi.') * ones(1, length(theta)); Than you have the column vector of `sin(phi.')` repeated along the second dimension.
t is an array of the time from 0 to 180 minutes (3 hours) with steps of 15 minutes, nt is then the number of time steps (length of t vector). The N vector is initialized with zeros, and the first element is put at 1 (population is 1 at t = 0). Then, within the loop, for every time step after t = 0 (i.e. from time step 2 to the last time step nt) the population is doubled. So it's the old population times two (N(j) = 2*N(j-1)). 
Currently I have files = dir(\*.mat) for f = 1:length(files) load(files(f).name) However, if I have this right, this would just cycle through all 980 files without taking them in groups of 20
I'm an idiot, there's [literally a block for this exact scenario.](https://www.mathworks.com/help/simulink/examples/variant-subsystems.html). Leaving for posterity.
Cell array, you can basically use it like a matrix of matrices. Be careful though if you're running an older version of matlab (like I am) any cell conversions you might need to do can suck.
https://pastebin.com/caZ3D2Mb this shows what I am trying to do, and the error that keeps popping up
This is exactly what I was hoping for. Thanks!
Obj (the this pointer) needs to be the first argument to everything but the constructor, which ofcourse returns the obj. 
I normally wouldn't just give out the code because I think it's better to learn how to do it, but I'm pretty exhausted and I don't have the energy to write out how to go about coding it. x = linspace(-pi,pi,300); TOL = 10^(-8); n = 1; for i = 1:length(x) a = cos((2*n-1)*x(i))/((2*n-1)^2); asum = a; while (abs(a) &gt; TOL) n = n+1; a = cos((2*n-1)*x(i))/((2*n-1)^2); format long asum = asum + a; end fn(i) = (pi/2)-(4/pi)*asum; n = 1; end y1 = fn; y2 = pi/2; y3 = pi/2 - (4/pi)*cos(x); y4 = pi/2 - (4/pi)*cos(x) - (4/(9*pi))*cos(3*x); figure() plot(x,y1,'linewidth',1.2) hold on plot([-pi,pi],[y2 y2],'k') plot(x,y3,'c','linewidth',1.2) plot(x,y4,'r','linewidth',1.2) axis([-pi pi -0.1 3.2]) title('/r/matlab graph') legend({'Fn','\pi/2','\pi/2-(4/\pi)cosx','\pi/2-(4/\pi)cosx- (4/9\pi)cos3x'},... 'Position',[0.15 0.13 0.3 0.2]) legend('boxoff') Basically what I did was I created a domain (x) that runs between -pi and pi. I created a for-loop that goes from 1 to the length of x, so that for each i-iteration it uses a value of x(i). Since ∑cos((2n-1)x)/(2n-1)^2 converges to 0 as n approaches infinity, I set a tolerance (TOL) of 10^-8 so that after after a certain number of n-iterations, the value of (a) will be less than the tolerance and will end the while loop for that value of x(i). I created a recursive formula asum = asum + a, so that after each n-iteration, the value of (a) is summed with all the past values of (a). When the while loop ends, asum is put into the original equation fn(i) = (pi/2) - (4/pi)*asum. After that I reset the value of (n) back to 1 so that during the next iteration of the for loop it will sum the values of the function ∑cos((2n-1)x)/(2n-1)^2 from n=1 until (a) is less than TOL.
As others have said, cell arrays are what you're looking for, but I also highly suggest looking at structs. Here is a tip I wrote a while ago: &gt; This tip is probably hold hat to a lot of people here, but I will share it for those people newer to matlab. They are **matlab sturctures**. Sorry this got long, but if you're not familiar with structures, I think this is worth the read and will go a long way towards making your code and work cleaner and easier to understand &gt; &gt; ### Intro &gt; &gt; Matlab has many different data types, but perhaps one of the most useful us **matlab sturctures**. Think of them like cell-arrays (can hold any data type) but you can name the data. &gt; &gt; Let's say for example, you are generating data to plot and you want to store what you did. You could do: &gt; &gt; &gt;&gt; data_x = linspace(0,2*pi,100); &gt; &gt;&gt; data_y = sin(data_x); &gt; &gt;&gt; data_marker = '-r'; &gt; &gt;&gt; data_title = 'My Data'; &gt; &gt;&gt; data_phandle = plot(data_x,data_y,data_marker); title(data_title); &gt; &gt;&gt; save('data.mat','data_x','data_y','data_marker','data_title','data_phandle') &gt; &gt; But, now you have variables and it's not always clear how it all relates. Furthermore, the `save` command is long and you have to remember everything. &gt; &gt; Instead, use structures where the format is `data.variable` &gt; &gt; &gt;&gt; data.x = linspace(0,2*pi,100); &gt; &gt;&gt; data.y = sin(data.x); &gt; &gt;&gt; data.marker = '-r'; &gt; &gt;&gt; data.title = 'My Data'; &gt; &gt;&gt; data.phandle = plot(data.x,data.y,data.marker); title(data.title); &gt; &gt;&gt; save('data.mat','data'); &gt; &gt; Now, you have one variable, `data`. You can access any variable with the simple `data.variable` naming &gt; &gt; ### Advanced Usage: Dynamic names &gt; &gt; I am not sure exactly what this is called, but let's say you want to access a structure's data with the *string* representation of the name. For example, say you have a variable &gt; &gt; &gt;&gt; field = 'x'; &gt; &gt; To get `data.x`, you can do: &gt; &gt; &gt;&gt; data.(field); &gt; &gt; where the key is the `( )` around the string, `field`. &gt; &gt; ### Advanced Usage: `fieldnames` &gt; &gt; There is another matlab function called `fieldnames` which returns the names of fields. For example: &gt; &gt; &gt;&gt; fieldnames(data) &gt; &gt; ans = &gt; &gt; 'x' &gt; 'y' &gt; 'marker' &gt; 'title' &gt; 'phandle' &gt; &gt; So, you can also use this to loop over all fields &gt; &gt; &gt;&gt; fields = fieldnames(data); &gt; &gt;&gt; for ii = 1:length(fields) &gt; &gt;&gt; disp(fields{ii}) &gt; &gt;&gt; disp(data.(fields{ii})) &gt; &gt;&gt; end &gt; &gt; ### Why? &gt; &gt; There are any number of reasons to use these structures. First, they make your code and your workspace cleaner. As I said, rather than having multiple variables and having to keep track or type them out, you have one. Do with the one as you wish. &gt; &gt; Furthermore, you can add extra comments without polluting your workspace. For example, I may want to note what `data` represents: &gt; &gt; &gt;&gt; data.comment = 'Generated data for a test. Used sin' &gt; &gt; and now I know that the `comment` is allways stored and goes along with `data` &gt; &gt; &gt; ### Limitations: &gt; &gt; For some reason, at least when I last checked, Matlab does not like having structures with `parfor`. I assume this limitation is due to some implementation somewhere, but I just don't get it. Maybe someone else could explain it. &gt; &gt; It is crude, but I've writted wrapper before that take a structure, make all of the variables names as `structname__field`, done the `parfor` then wrapped it back. Not ideal and not memory efficient. &gt; &gt; ### Bonus: &gt; &gt; When loading a workspace, you can load it into a structure. Consider the following example: &gt; &gt; &gt;&gt; clear; &gt; &gt;&gt; x = linspace(0,1,100); &gt; &gt;&gt; y = sin(x); &gt; &gt;&gt; save('test.mat') &gt; &gt; I can load it as follows: &gt; &gt; &gt;&gt; load('test.mat') &gt; &gt; which will then populate my workspace with `x` and `y`. Or, I can do the following &gt; &gt; &gt;&gt; WS = load('test.mat'); &gt; &gt; which will then populate my workspace with the structure `WS` with fields `WS.x` and `WS.y`. This is great if you are comparing multiple saves or want to keep it all clean &gt; 
Okay, a few things here. First of all: sanity check on your results. Do they make sense? What *should* the logistic growth function show for those population sizes? K is your "k"arrying capacity; as time goes to infinity, your population should go to that size. Does that happen? So my test of your stuff says... you're not getting the right result. Why not? Your first thought should probably be that your implementation of the logistic growth function is wrong. Go check your notes on how that formula in `fun` should look again. Heck, you can even go to [wikipedia](https://en.wikipedia.org/wiki/Logistic_function#In_ecology:_modeling_population_growth) on this.
If I am understanding correctly you want to find the locations of the stationary points (maxima/minima) along each line as well as the points where the "curved" portion of each line begins and ends. If we knew the equation of the line (as in y=f(x)) then it would be trivial to find the stationary points as we know these points can be found by solving f'(x) = 0 and then substituting in the corresponding values of x into f''(x) to determine if it is a maxima or minima. For your case you want to do the same thing but instead of differentiating the equation of the line (which we can't do as we don't have it) you need to use finite differences to approximate the derivative values. I would suggest using the "diff" function to approximate dy/dx and looking for the points where this value is zero. It may be that you don't have a point that lies exactly on the stationary point so you might find that dy/dx does not go exactly to zero. The start and end points of the curve can be found by examining the sign of the gradient. (MATLAB also has a handy function for this called "sign"). Hopefully that should be enough for you to make a start. Good luck. 
First, there's no one mathematically correct answer. You are interpreting data, not measuring it. So what method is best depends on things like what your data describes, what kinds of noise are corrupting it, and what kinds of errors would be the worst to have in your result. A simple thing to try would be to start by finding the max of the curve. That's your red mark. Then find the minimum values and positions to the left and right of that. Maybe average the two minimum values, or maybe just take the smaller of the two. Then set a threshold for what counts as starting to rise, maybe 10% of the vertical distance from min to max. Find the point closest to that threshold between the left min and the max. That's green mark 1. Repeat on the right for green mark 2. That method is sensitive to noise, so perhaps some filtering first would help. But I don't know without seeing the data or knowing more about what matters. Useful functions are abs(), min() and max()
No, not confusing at all! :) Thanks for the response, I'll try this now 
thanks :) 
The code I am trying to write is: function d = pipe_sizing(Q) if (Q &gt;=0) &amp;&amp; (Q &lt; 3500) fprintf('We select pipe with diameter 1/2", DN15\n') elseif (Q &gt; 3501) fprintf('We select pipe with diameter 3/4", ND20\n') else fprintf('Error') end I get the "Expression or statement is incomplete or incorrect"
Seems to work fine to me. The only thing I can think of is that your .m script name is invalid. Though I saw your code in another comment and I would suggest changing how you define your limits. Otherwise 3500 would create an error function d = pipe_sizing(Q) if 0 &lt; Q &lt;= 3500 fprintf('We select pipe with diameter 1/2", DN15\n') elseif 3500 &lt; Q &lt; 9000 fprintf('We select pipe with diameter 3/4", ND20\n') else fprintf('Error') end When you call the function in the script make sure not to call it like d = pipe_size(3500) but just as pipe_size(3500) because you never assign d in the function. 
He should be fine not assigning d just as long as he calls the function like: pipe_size(Q) in his scrip and not as d = pipe_size(Q)
Thank you a lot, now it seems to be working fine. One thing though, I do not see any difference between the code I sent to you and your code.(it should be something trivial that I am missing)
Thank you a lot, really appreciate your comments and everything! xD Edit: I tried your code and it works fine except for when I try i.e. pipe_sizing(5000), I get the first comment instead of the second, as 5000&gt;3500. 
true, but doing it like this is still asking for trouble. If i see function d = pipe_sizing(Q) I assume i can get an output argument from that function. The only consequence of leaving that d there is that it reduces the clarity of the code. 
Find some partial examples [here](https://www.google.nl/search?q=I+want+to+display+22+images+in+sequence+via+PsychToolBox+and+randomise+them.+How%3F&amp;oq=I+want+to+display+22+images+in+sequence+via+PsychToolBox+and+randomise+them.+How%3F&amp;aqs=chrome..69i57j69i60&amp;sourceid=chrome&amp;ie=UTF-8#q=display+images+in+random+order+PsychToolBox), give it a go and return with your code for effective help :O
thank you kind stranger!
I suspect the long start up time is kind of like the long startup time for matlab itself. Compare the matlab startup time to python and then compare parpool to a `multiprocessing.pool` launch. 
I use the following to show visual grating to mice in case you need to generate any of these. As someone else said, you are best off modifying an example. The toolbox is very difficult to get started with. http://dylan-muir.com/projects/focusstack_stimserver/ 
After seeing so many new options like this, I'm curious: are there any pros/cons in terms of computational cost to using these different ways to hold data? Or are they comparable in terms of cost, and usage is just a matter of preference?
Also look up cellfun for when you want to run the same calculation on all these cells later. 
I said I was tired, not lazy. 
You can use the containers.Map object https://www.mathworks.com/help/matlab/ref/containers.map-class.html keys = {'0', '1'}; values = ['1', 'b']; myMap = containers.Map(keys, values) etc...
The difference between the code he has and the code you sent, is the fact that your expression for the elseif statement is on a newline in your code, wheras in /u/EatMyPossum's code he has it correctly on the same line as the elseif statement.
If you actually want individual variables with unique names, you could use eval
I appreciate it! When I get back to working, I will see what I can make out of this. 
Thank you for your help!
Don't confuse data with the signal. If I have a 1kz tone sample at 1 Ghz I can easily decimate by 500k and lose no signal information. So not violating nysquist is a general constraint, as is proper decimation and interpolation. If I do weird non linear things like op is suggesting to make my analysis "work" I will have distorted my signal and the analysis will be false. Just DSP 101. 
I was mistaken...as always, the devil is in the details, and conv2 has a nasty one (that is called padding). I tested this once and it worked: %make a lil' dummy matrix as an example M = ones(10)+1 ; M(4:8,4:8) = 0 ; theMiddlesMatrix = padarray(conv2(abs(M),ones(5),'valid')==0,[2 2]) ; MwithOnes = M + ( conv2(theMiddlesMatrix*1.0,ones(5),'same') &gt; 0 );
You might already know about [Cody](https://www.mathworks.com/matlabcentral/cody/). It's not exactly like codewars, but there are a few fun problems to solve
The nested for loops adapt to the size of matrix, since they run over the size(x,1) and size(x,2). In your specific case, I generated a matrix 30x110 size, filled with values and had some regions of 0's. You can adapt the working part of the code for your application.
Completely agree
Ok, that I agree with.
use your Choose2 sollution to both prevent recomputations and vectorize your code at once :O : The first two rows of your choose3 assuming its 89 long will be: row1 x row2 x row3 row1 x row2 x row4 which is just the first row of the choose2 sollution, multiplied by all the rows except the first and second. An efficient way to program your thing would be: calculate your 2 row multiplycombinationmatrix, multiply each row with the matrix, and from the result, eliminate all the rows that are silly (e.g. the first one would be row1 x row 2 (&lt;from the choose2 mat) x row1 
Thanks, this worked great!
+Awesome, all my files show up on the list, but how do I organize these files in one spot? This script gives an output of "Total Files Listed" and creates a text based list of all my files. 
I DID IT!!! THANKS :)
THANK YOU, I FIGURED IT OUT!! 
This is not really a Matlab question, though could be done (poorly probably) with it. Are you on a mac or linux? Then you could do in terminal assuming you're in the correct directory: find . -name "*.m" -type f -print0 | xargs -0 -I {} cp {} . Just to clarify, `find` files with a name `*.m` (so, matlab files) and are a file, not a directory. the `-print0` is in case you have spaces in the names, though I doubt this is the case. Then `xargs` takes the result (`-0` is again for spaces) and then replaces `{}` with the argument (as set by `-I {}`). Finally `cp` copies it. If you wanted to do it in matlab, check out `glob` from FileExchange (google it) and search for '`**/*.m`' then use `fileparts` to manipulate
If in Windows, in File Explorer go to the root directory of the file tree you are working out of. In the search block in the upper right of File Explorer type *.m Let it find all the .m files. Select all and copy to a new directory. Have done this many many times. Works well.
+Wow. This is so simple yet exactly what i need. Thank you.
Thanks for the reply! Unfortunately I have Windows but luckily /u/farnsworthiness found a simple way to select all .m files. 
Sounds like you've got it covered, but in general Matlab is capable of decent file handling - the movefile() command (or copyfile, if you'd like to preserve the original) will allow you to move each file (once you have the path) to whatever location you'd like. 
&gt; if mod(k,4) == 0 Well, that was a simple fix - havent touched Matlab in 4 years! Thanks a bunch! :)
If you answer a question and the asked deems it helpful, they can comment with a plus too raise the number on your flair. Basically, it's too keep track of how good users are at answering questions. Most people don't bother with it, but it's nice when they do. 
Thanks! That's basically what I figured but the mechanics of it were opaque. 
Ifft works fine with matrix data, so there is neither preallocation nor the loop needed, but you have to transpose the input matrix, because ifft works columnwise Edit: too much guessing.
Can't test right now myself, but try ImgResp=ifft(FreqResp')
Hmmm. I know how to do this in Python (use a thread and a timer) so I will backport it here. If I had to guess, you may be able to use the parallel computing toolbox with `spmd` block. You can have one process that is timing and the other doing the work. I do not know if you can forcibly kill the other though. Maybe use `labSend ` to send some kind of kill command? Or, if you simply want your program to ignore something after some time, do a check on the elapsed time?
&gt; What kind of programming do you do - which languages do you use, what problems do you solve? I analyse data for an internship in physics mostly at the moment, nothing too hard; just trying to fit gaussians on data to find maximum intensity of specific wavelenght. I generally use python since that's what we learn here, but for this specific part of the project, the team whom I work with uses in-house created scripts and functions on Matlab. I had started my own code on python but it would have taken me way too much time considering this is only an on the side interesting thing. &gt; How often do you solve problems using programming? I'd say quite often, many things are just too hard to do by hand in physics! But as I said prior, I usually use python. &gt;How did you go about troubleshooting this particular issue? Which solutions did you attempt prior to this post? I tried many things but they always ended in errors (different statements, different conditions, etc...). Forgot how to do modulo on matlab, forgot about continue, forgot about many things in fact... found my answers pieces by pieces but I honestly don't know why I struggled so much for a simple condition in an if statement. I then tried to google what I wanted but nothing satisfactory (this should be pretty basic and easily found...) was to be found. I know the logic is the same in the end, but I find python and matlab quite different. I use programming because it's a very powerful tool, not because I really like it - I'm more the pen &amp; paper type. As long as what I code works, everything is peachy! Once I encounter a bug tho... 
Grid on Grid minor Will get you started
[VBLTimestamp StimulusOnsetTime] =Screen('Flip',win); while GetSecs&lt; StimulusOnsetTime+5; % buffer for reaction time if buttons(0) break; elseif buttons(1) [clicks,x,y,whichButton]=GetClicks(1) RT=GetSecs-StimulusOnsetTime; RTtext=sprintf('Response Time =%1.2f secs',GetSecs-StimulusOnsetTime) end end what's wrong with this? GetClicks just won't run
Psychtoolbox? Don't use GetClicks(), use GetMouse(). See http://docs.psychtoolbox.org/GetMouse the example on waiting for a button press. In that while loop, add a timer eg. t=tic while ~any(buttons) &amp;&amp; toc(t)&lt;5 [x,y,buttons] = GetMouse end If you need the click counting in GetClicks, it shouldn't be hard to just add it to the loop above yourself. 
I tried to edit it in. Dont know how else to show you guys. 
It would be helpful if you can tell us which line of code is throwing the error. I can run it when I get to a computer, but someone may be able to help if we know which line to look at. Edit: I'm guessing it's your Stress calculation. Multiplying a 1x10 vector by a 1x4 vector is undefined behavior. You can fix that by changing the dimensions: x = x.' Will transpose x. 
Thanks for the reply. I agree it looks like crap compared to the loop (I'll probably add the loop code in the comments as an explanation of what's actually going on if I decide to vectorize my final code.). As for why I'm doing it - partly for the knowledge and mostly because I'm obsessive about optimizing my code. That and the fact that there's a good to fair chance the number of entries to be looped through will eventually number in the tens of thousands at which point it may be beneficial to vectorize. I don't have Matlab Coder at the moment but I've been looking into it since it would definitely make my life much easier. 
Interesting ! I'll have to read up on bsxfun then. But does it translate easily into C++ ?
yep, check out the [MATLAB compiler](https://www.mathworks.com/products/compiler/features.html)
[gui](https://www.mathworks.com/discovery/matlab-gui.html) [deploy](https://uk.mathworks.com/videos/getting-started-standalone-applications-using-matlab-compiler-100088.html)
It's only 500 Mb to plot a scatter plot. :) j/k I've never used this, but am curious about size requirements.
The problem with bsxfun is that it does not do a * multiplication, but an element wise .* Multiplication after extending the matrices, so that the dimensions match. If you want a matrix*vector multiplication for several pairs in dimension 3, have a look at mtimesx in the Matlab file exchange.
You're on the light end. The current [Matlab compiler runtime](https://www.mathworks.com/products/compiler/mcr.html) (R2017a) clocks in at 1.1 GB. While each app may be a few MB, end users will still need to install the MCR before running.
Why the downvotes?
The Fourier transform itself has no concept of optical wavelength. As you should have been taught, the Fourier transform is used in the optical propagation formula, but propagation is not just a Fourier transform. How do you write the formula for optical propagation? When you do exercises on paper, how do you apply a Fourier transform. 
You want a [sieve of Eratosthenes](http://www.javaist.com/blog/2012/06/09/sieve-of-eratosthenes-in-matlab-aka-prime-number-finder/).
All you should have to do is apply a 2D Butterworth passband filter for whatever range you want, and take the inverse Fourier of the result. I've used that to filter image noise in interferometer experiments and its worked perfectly. If you look around Mathworks you should be able to find a 2D butterworth bandstop function, then just apply 1-filter(args) to get a bandpass.
Na man I aligned the shit out of everything by accident
Thank you! Physics undergraduate, not much done on signal processing. So after doing a Fourier transform, do I get like 2 big spikes at 2 different frequencies? What's the go? I just derived the equations using Lagrangian mechanics and passed through a stiff ODE solver
You're not going to be able to see your spike on this graph. The period of your envelope is 60 seconds which is 1/60 Hz. The spike would occur before your first non-zero point in the x. You have no resolution around that frequency. I think you need a higher sampling frequency to have resolution in your fft.
How did that work out? Mind linking me? Never know when that might come in handy...
Thank you! This code was incredibly helpful. I was combining the two frequencies in my head, but I think I understand it now.
To improve on this: you want to define the size from your array from the start. This example given by CelestialStructure works but is slow. I'd suggest: arr = NaN(max(BWlabel(:),2); for k = 1:max(BWlabel(:)) selJ=BWlabel &amp; branch; [iy ix] = find(selJ &gt; 0); arr(k,:) = [yi ix]) end BTW, I do assume you are using the index k somewhere within your loop? The code you've given now doesn't make sense in a loop.
How complicated is f()? Computing the Jacobian by hand and evaluating it at your fixed point would probably be the most accurate. Otherwise there are numerical difference schemes for approximating a Jacobian at a point that you can look into.
Another simple question, I'm sure it's simple physics, but why do you take the imaginary part of im?
I figured out how to do the loop, now I am trying to 3Dplot it. My variables are n(p), that's the prime numbers within a given range vs the ID vs ID. They are obviously different lengths. What is a way that I can plot it? For example: The first iteration will have 3 primes and those are my z, while my ID(1) will be my x and y. The second iteration will have more primes vs ID(2)...etc. Here is my for loop: for i=i:limit N = RStart:REnd; P = isprime(N); N(P); count=numel(N(P)); P=[i,count]; Array(i,:)=[i,count]; RStart=REnd+1; REnd=REnd+(i+1)^2; i=i+1; end 
Transform data: Yp = ln(y) and ln(x-b) Append ones vector: Xp = [ones(n,1) ln(x-b)] Regress Yp onto Xp: beta = Yp\Xp a = exp(beta(1)) and c = beta(2) Hope this is clear- typing on mobile.
Just replace B with a vector and loop for each odd number. 
Can you post fuller code - it's hard to work out what is missing with just this fragment. From this fragment your logical tests are a bit odd - if ~buttons(0) You cannot address buttons(0) only buttons(x) for x = 1,2 or 3 You might want to test if ~buttons % test all three buttons are not pressed
Do you have the stats toolbox? I would try [nlinfit](https://www.mathworks.com/help/stats/nlinfit.html) for this.
Could you narrow down an actual question out of that? Is it about supervised learning, spectral analysis, Matlab implementation, or something else? What do you want from this subreddit, my friend?
Sorry! I agree, I should have been more specific. I guess this is potential matlab implementation for some of our spectral analysis at work. We currently use linear regression to predict results from samples so we're potentially looking into multivariate calibration models. Thanks! Edit: from this subreddit I'm looking for some tips to build a base to get started with doing this. Wasn't sure if I used the correct flair
Whoops. Good bot.
I calibrated an FTIR for 5 components for determining the performance of a catalyst. I utilized PLS regression and used the calibration data sets as "training sets" and was able to have ppm level resolution when quantifying the catalyst. I used MATLAB to do all of this. I could definitely help you out. What specific questions do you have? 
The S in SOR is for Successive, i.e. you won't be able to do this with parfor. Why are you trying to?
It is slow, just like it is very slow starting the program.
is it the download or the actual installing that's taking long?
depends on your definition of slow... takes about 10-15 seconds to start for me.
From what I gather from the command window, it seems like you aren't calling the function properly because you aren't giving it any arguments. Instead of prod = 2; Factor try prod = 2; Factor(prod) 
that was the exact problem thanks a lot!
type "dbstop if error" in your command line and run through the debugger, find the specific function causing the issue.. lookup what the functions parameters are and you should be good. The way the script is posted it is commenting out a lot, use pastebin to post scripts like this.
Are you downloading directly from mathworks?
You need to download and use the fit.m function from your class webpage, not the one from matlab. Coincidentally, your class has a function called 'fit', and the curve-fitting toolbox also has a function called 'fit', and they are not compatible. Download it from here: http://courses.washington.edu/matlab1/library.html And I would suggest placing it in the same directory as the script you are writing. 
You can't call the local functions directly, but you can call methods that themselves call the local functions. If you need to directly call the local functions from a subclass, you'll need to convert the local functions to methods (possibly static methods) or copy the code into the subclass file.
Thanks. That's what I figured. I ended up just calling the superclass constructor from my overridden method, but alas things got more complicated later. This has been my first foray into OO Matlab, and it's been less than pleasant 
I've never thought about this, but they're basically like private methods. I always think of matlab as great functionality built on top of a crappy language, but you can't fault it for not giving you access to a class's internals.
I know what it does in layman's terms, I've used it before. I just don't know exactly what the function is doing step by step, and Numpy doesn't have an equivalent function. And, not sure how to normalise.
Please see our rules for submitting homework help stickied to the front page. Without seeing your code it is impossible for anyone to help you. 
maybe [this](http://nl.mathworks.com/matlabcentral/fileexchange/25157-image-segmentation-tutorial) helps. which I found [here](http://nl.mathworks.com/matlabcentral/newsreader/view_thread/261251) using [this](https://www.google.nl/search?q=calculate+the+percentage+of+dark+spots+standing+out+from+the+background%3F&amp;oq=calculate+the+percentage+of+dark+spots+standing+out+from+the+background%3F&amp;aqs=chrome..69i57.167j0j7&amp;sourceid=chrome&amp;ie=UTF-8#q=calculate+the+percentage+of+dark+spots+standing+out+from+the+background+matlab)
Okay thank you, next time I will type my questions literally into the search bar.
Linearization is 99.999999% inelegant the rest is experience. 
Neural networks are not just magic boxes that can predict anything. How rich is your data? Is there meaningful information encoded in the angle and angular velocity?
Let me see if I understand this correctly. The isnan function will replace the Nan values with values from the vector provided they are in the correct order in the reference vector as I want them to appear in the set? This makes sense! An issue I see coming up with this is that I have to write the same value from a vector multiple times in a row at points, sometimes I write the same value 7 times in a row and other times I write it only once, and so forth. I guess that is why I was trying to approach it with a global variable perspective, but this definitely helps and gives me something to work on for a while!
the isnan command is just my lazy way of creating an index vector for the outvec. the important line is outvec(idx) = A(idx2) here you assign the dynamic values to the output vector. if you do not need to set all dynamic positions at every iteration you need to calculate the idx and idx2 vectors at every iteration, so you are able to set the values at the correct indices edit: the idx vector is in my example a logical vector, so it has only true and false values. if you use it to adress outvec, matlab gives out the values of outvec at every "true" position in the index vector, you can also use that for assignment, so in the quoted line above, only some values at outvec are changed. keep in mind that the number of "true" entries in idx have to be the same as the number of indices in idx2 or you'll get at assignment error (dimension mismatch to be exact)
I really appreciate your input on this, I am going to try to play around with it and see if I can get it working on a smaller problem first and then extend it to the set I am working on. Thank you.
that's right, I figured that out
then you could use [this](https://de.mathworks.com/matlabcentral/fileexchange/28343-column-converter-for-excel) 
one more thing, how can I convert my char to variable name (actually array name) every time? I mean I want a simple function which would turn 'A' to array name A=[...]
ok here's my late try. we need all possible combinations of the factors multiplied by the correct entry of TT.core, so try [A,B,C,D] = ndgrid(TT{1}(a,:),TT{2}(b,:),TT{3}(c,:),TT{4}(d,:)) ssum = sum(TT.core(:).*prod([A(:),B(:),C(:),D(:),2],2)) the ndgrid does all factor combinations, I guess you could use combvec as well, but I'm not sure if the order of the factors will match the order in TT.core(:). the example I tested: d = 2; f = 2; T = rand(d,d,d,d)*f; f1 = rand(d,1)*f; f2 = rand(d,1)*f; f3 = rand(d,1)*f; f4 = rand(d,1)*f; tic s1 = 0; for ii = 1:d for jj = 1:d for kk = 1:d for ll = 1:d s1 = s1 + T(ii,jj,kk,ll)*f1(ii)*f2(jj)*f3(kk)*f4(ll); end end end end toc tic [A,B,C,D] = ndgrid(f1,f2,f3,f4); s2 = sum(T(:).*prod([A(:),B(:),C(:),D(:)],2)); toc abs(s1 - s2) edit: because of random values the delta of sums is not a good check, because if you increase the number of values and the rand values are &lt;1 the sums become very small. I also added d and f for testing of higher dimensions and values and tic toc for performance test.
 ndgrid
thanks for getting back to me. no, no other experience, i'm completely new to all modelling! i've got the mathematical theory to why i want the model to do (particle to swim upwards at given swimming rate unless vertical shear velocities are greater than swimming rate in which case it gets carried by turbulent forces). so in depth cells (say 1m apart) ill compare the turbulence to the swimming speed. swimming speed &gt; turbulent velocity, particle keeps swimming, turbulence &lt; swimming speed. particle is entrained in the turbulence. it's just getting matlab to run that that's the issue
Tbh, i haven't done any OO stuff in matlab, but I think i got a solution. in matlab [everything is a matrix](https://nl.mathworks.com/help/matlab/learn_matlab/matrices-and-magic-squares.html), which means that if yopu have one of your objects, you have a 1x1 matrix with one of your objects. Realising this, you could always go for the implementation with the loop, in which the case for numel(obj)==1 is also handled :O
Yeah, that's true. This is the reason I came up with my code. But I thought this might be such a common problem, that there is an easy way right out of the box. :)
&gt; &gt; for i = 1:numel(obj) sooo your looking for an easier way than adding for i = 1:numel(obj) ob = obj(i) ; at the start of your function? idk, but this is about as easy as it gets when your making code. 
Followed a course on optimization (that used the matlab optimization toolbox) and we used this book. https://www.scribd.com/document/343082903/Principles-of-Optimal-Design-2Ed-Papalambros-Wilde-pdf Not sure what you mean with binary/integer programming but I thought it was a very good book on optimization :)
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/programming] [\[HW help\] How to create an array where every element is a single character from a .txt file • r\/matlab](https://np.reddit.com/r/programming/comments/6hp8m5/hw_help_how_to_create_an_array_where_every/) [](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))* [](#bot)
1) This does actually make sense. The inherent size of an array entry is double-precision float (8 bytes). &gt; 135 * 80 * 4786 * 114 = 5.8925e+09 &gt; 5.8925e+09 * 8 = 4.7140e+10 &gt; 4.7140e+10 bytes = ~43GB Does every entry in the matrix need to be populated? If not you can use sparse to save memory https://www.mathworks.com/help/matlab/ref/sparse.html (alternatively think of a way to store your data without a huge multidimensional array: graphs, trees etc, basically what sparse does behind the scenes) If every entry does need to be populated (doesn't seem like it given your post) you will need to think of a way to do 'big data' in matlab. https://www.mathworks.com/solutions/big-data-matlab.html 2) I believe my answer for 1 also addresses this question. In gerneral import data is a little heavier than xlsread (as it attempts multiple import strategies) but I doubt that is the leading cause of your problem 
Thanks for the awesomely detailed reply! I will do everything in a few hours when I get home. Except the 'diff' thing. Is there a reason to change it if my program already works fine? To clarify, my job is to extract and present data, not to create a data extracting program and present that. Plus, I don't want all the letter changes, only the two specific M-U and M-O changes I said. Does diff do anything specific that helps, or is it just to make my code look less cumbersome? Edit: also, you mentioned manually removing the first two lines. Doesn't fgetl already do that the way I've used it?
Habe a look at dir('nameoffile.mat') To get the modification date and at mkdir To create the folder and movefile To place files in that folder. You can use your loop counter variable to name the folders differently and a simple time stamp comparison to see if you need to create a new folder or put the file with the last.
file and directory manipulation is a fundamental application of matlab, and all relevant functions you may need are well documented at https://www.mathworks.com/help/matlab/files-and-folders.html
Use this [formula ](https://en.m.wikipedia.org/wiki/Generalised_logistic_function) You already know your upper and lower asymptote 
It seems that after several changes Yahoo Finance closed their API forever. The API was closed on May 15, one month ago already. I've tested several alternatives and found that https://eodhistoricaldata.com the best one for those who used Yahoo Finance. They provide raw data, adjusted closes and splits/dividends. They also have CSV output, with very similar format for Yahoo Finance users. Also there is a https://intrinio.com/ data provider, looks good, but they much more expensive, have no data for Mutual Funds and API is very different in compare to Yahoo Finance. Then you need to significantly change your code.
From the description I cant 100% tell what you are trying to do or what the issue is. I think that image is your best bet. What is wrong with the scaling? 
This may or may not be what you're looking for, but have you tried bar3?
One way is to use surf and set the orientation to the top (can't remember how off the top of my head). Other way is to create a bmp or png from your matrix. 
Rewrite the three equations into one matrix-vector product, with the vector containing the variables in question. Then use mldivide to solve the equation. Edit: of course the right hand side has to be a vector as well. To make it quick: [solution](http://i.imgur.com/q75BX9D.jpg)
Are you going to tell us what the error said? It tells you exactly what's wrong. 
This sort of thing usually sorts itself out for me if I restart Matlab -- give that a try yet?
Are you preallocating a ~3000x3000 before doing calculations?
If you can do some math by hand you could theoretically have the code compute the real and complex parts separately, then at the very end multiply by i where needed.
Mathworker here. You should put in a help ticket. But first, I have a few ideas about this. I have seen this before when Mac OS accessibility tools mess with MATLAB. I suggest seeing if you have any enabled, and try disabling them. I believe it's under system preferences-&gt;Accessibility. Unchecked everything and restart MATLAB. after you can re-enable them one by one to see what is causing the problem.
Doesn't the exp function broadcast over arrays? Can't you do something like exp( 1i * a .* b' ) Disclaimer: It's been a while since I've used Matlab.
Thanks for the suggestion, but I dont think this will end up being faster. Once the matrix of complex exponentials is generated, it is multiplied term-by-term with another matrix of complex numbers of the same size, and then this matrix is used in a matrix-vector multiplication with a vector of complex numbers. I'll try it out tomorrow, but I suspect Matlab would handle this more efficiently than I could. Also, as I mentioned in my original post, I tried doing this for just the complex exponential (by turning it into cos(x)+i*sin(x)) and it was slower. I had also thought of keeping everything in " a * exp(i * phi) " form until the very end, but I couldn't figure out a god way to do this that was more efficient than my current method. edit: fixed formatting of equations 
Is there anyway you can do analytical work to derive a formula that simplifies your calculations? For example, if you split your code up into the trig form, you can compute powers of this form quickly via pascals triangle, then apply the imaginary exponent only to powers that are multiples (cant remember the correct word) of 1 and 3. Sometimes the obly way to make the code faster is to do math by hand first.
&gt; In NumPy vectorized operations are not multi-threaded. So they will benefit from the explicit parallelization of the computation I described above. I don't know as much about how Matlab vectorizes computations, but I imagine it works similar to Numpy since it's all based on LAPACK. There is definitely some multithreading in Matlab's implementation of matrix operations. Saying that LAPACK isnt multithreaded is a bit of a "half truth". It isnt explicitly multithreaded, but the BLAS libraries it depends on can be multithreaded ([e.g., see here](https://stackoverflow.com/questions/30891296/are-the-lapack-routines-thread-safe)). Matlab uses Intel MKL for its BLAS library, so many of its sub-routines will automatically start and use multiple threads when they are run. This seems to result in about 2.5-3 out of 4 cores (on average) being used on my machine when strictly matrix multiplication functions are used. I also have tried out using the OpenBLAS libraries (I compiled them with gcc 7.1 on minGW and then used [mtimesx](https://www.mathworks.com/matlabcentral/fileexchange/25977-mtimesx-fast-matrix-multiply-with-multi-dimensional-support) from the file exchange to generate mex files to use them). This also seemed to average t2.5-3 out of 4 cores getting used on average, though if I compiled OpenBLAS with ~~OpenCL~~ OpenMP support the CPU utilization increased a bit (not much of a performance difference though). OpenBlas and MKL got similar performance overall. idk if you could do this, but I imagine that if you were able to compile and link new BLAS libraries in NumPy then I'd think you would be able to take advantage of some of the multithreaded BLAS subroutines. You are probably right on the complex exponentials. I mean, i was pretty doubtful there was a better method, since I couldnt find one on google or think of one myself. It was still worth asking though, since it is the single most time consuming command in the entire script....
Pretty cool. I didn't know that about BLAS. I'll have to check it out.
It is 2am here and I have to get to bed, but you can do something that might speed this up. You can use a truncated matrix exponential map (not the truncated taylor series) for T(i,j), but honestly that is a lot of work. If Q has a specific structure (or maybe you can figure out how to make it that way) such as being banded or sparse, you could call a specific algorithm to do the last step.
[the right direction](https://nl.mathworks.com/help/matlab/matlab_prog/vectorization.html) especially the section at the top labeled &gt;Vectorizing Code for General Computing
If it's heavily vectorised code, it may benefit from throwing it on a GPU. Pretty easy to do in Matlab.
Wait, do you want to "enhance" images, or do you want to segment them? Image segmentation is a very different thing.
Oh, well, in that case, I don't think you made your question very well. Histogram equalization may make an image look better to the eye, but may not actually help segmentation that much. There are a lot of tools in the matlab toolbox for image segmentation, and if you need further help, including more details about what you want to do and where your image came from, (better yet, with a sample image) may get you better answers.
This just popped into my mind but maybe you could use an auto-correlation to identify the regular structure? This would assume the data is not just a few sparse dots but enough to form an identifiable grid. But based on your pictures it looks ok. So you essentially shift a copy of your image across the image which would allow you to identify repeating patterns. That won't directly get you an grid fit but would give you information about the spacing and orientation of the grid. "If I shift the image 10px to the right and 12px to the top I get a correlation peak so that's the distance of two nodes of the grid". Maybe then find the highest intensity peak in your image and use that as an anchor point to construct the grid. Or combine it with one of your other methods to refine the estimates.
I was bored so I tried it out. Works great if you subtract the mean from the image first. xcorr2 takes under 3s on my laptop and produces a nice regular grid of correlation peaks. Due to the design, the region surrounding the center shows the most visible peaks with barely visible ones in the corners. I think you could easily run a peak finder on the central region and extrapolate that grid out over the entire image. Edit: Just remembered xcorr2 is from the signal processing toolbox. If you don't have that you can just use a convolution and rotate the second image by 180 degree. AutoCorrelation=conv2(data, rot90(data,2)); This uses only base matlab functionality.
So, how can I sparse 3D array for example?
Thanks for the suggestion on the matrix exponential map. I hadn't previously heard of these, but they look like they might be worth investigating. The way I wrote the last step is actually not quite right. I only need the diagonal elements of the matrix, so I multiply with ".*" and then sum across the 2nd dimension. I was previously constructing a sparse matrix to do this, but generating the sparse matrix was extremely slow, even when pre-defining all indices and using "sparse". Removing it increased the code by ~6x.
Where are the semicolons? Just kidding. This is awesome.
if they are convex, you can use convexhull to determine its boundary and then use [patch](https://nl.mathworks.com/help/matlab/ref/patch.html) to draw one. or maybe you can order the vertices counter clockwise using this code (assuming that v is an N by 2 matrix of vertices): v = bsxfun(@minus,v,mean(v)) ; [~,order] = sort(atan2(v(:,1),v(:,2))) ; and then use patch
Amazing! Thanks for giving me the patch function. That's exactly what I needed and a fast answer too! Thank you very much!
Okay, full disclosure i didnt write the frequency method so i'll have a thorough look at it and get back to you. I think the code is calculating grid shift vectors between images in the stack as well which isn't helping matters (the actual images are 1024×1024 and come in stacks of &gt;144). This is the reason i'm looking for the fastest methods and you are definitely not too late to the party. xcorr2 as suggested is proving useful (especially since I can run it on the GPU) but if you have other ideas they're very welcome. As you say, stripped back to basics, doing this in frequency space should be pretty quick so ill try building my own method. EDIT: So I looked at the code and the bottleneck seems to be in reconstructing the grid from the base and shift vectors of the the grid in each image. It is iterating over a huge number of possible spot locations and ruling most out so I'll look at doing that a bit more efficiently. If you're interested I can send you the code to have a look yourself but probably not worth your time. 
Were you able to solve your problem with that approach?
answer is [here](https://www.google.nl/search?q=matlab+strcmpc&amp;oq=matlab+strcmpc&amp;aqs=chrome..69i57j0l5.6207j0j7&amp;sourceid=chrome&amp;ie=UTF-8#q=case+insensitive+string+compare+matlab)
If you already have python (free, open source) experience why waste your time with Matlab?
Because the manufacturer indicated that the matlab dataset was feature rich, and I know very little about mat lab. It appears to have roi contour copy paste tools, which seem helpful, and the geometric transform tools sounded useful, but I wasn't honestly sure. Also my python experience has nothing to do with 3d models and I have no idea how they work. I was hoping It would be straightforward enough in matlab I could teach myself without being overwhelmed with theory. 
Is something like this close to what you're looking for? It will change the color when hitting enter while in the box, or clicking outside it (R2016a) function create_ui() f=figure; a = uicontrol(f, 'Style','edit',... 'Units','normalized',... 'Position',[.5 .5 .08 .06],... 'CallBack',@callback,... 'String','0'); function callback(eventdata,handles) value = str2double(a.String); if value&gt;=1 &amp;&amp; value&lt;=10 set(a,'BackgroundColor','green'); else set(a,'BackgroundColor','red'); end end end 
Thanks, I didn't think of that!
If you hit f1, a documentation browser will pop up. The documentation in Matlab is excellent. 
What toolkits or plugins or add-ons would I want to look for? Also are there classes I should be taking for this sort of silly manufacturing nonsense?
Given the fact that add-ons for Python a predominantly free and those for MATLAB usually cost 1000+$ stating what either of them support out of the box is disengenious.
That seems to be a very specialized task. Matlab does have a 3rd party tool called [STLread](http://nl.mathworks.com/matlabcentral/fileexchange/22409-stl-file-reader?focused=5193625&amp;tab=function), but honestly I have never tried to do 3D mesh manipulation with matlab. My advice for you would be to spend some time checking out both matlab and python modules (maybe [mayavi](http://docs.enthought.com/mayavi/mayavi/)). Choose whatever works best, if both work, use one to verify the results of the other. Additionally, when I used to manipulate STLs I used [meshlab](http://www.meshlab.net/) and/or blender. It maybe be worth while taking a gander at meshlab. Hope this helps
You should be using Geomagic to turning point clouds into a 3D model. http://www.geomagic.com/en/products-landing-pages/re-designx-wrap
Going to need more information than that to give you some pointers, specifically is there a real input to your system that gives you temperature? (like an external sensor you are connecting to your computer) and is there a corresponding system you are controlling with the computer to heat up or cool down the room? Or is this all virtual? If it is virtual what is the input? As an aside my experience programming with the GUIDE system is to start using normal scripts and get working versions of your program and functions as a script you manipulate, then once the math is working you can carry it to the guide system and create the necessary buttons and input boxes etc. To execute the predetermined functions. Starting in guide will just be a mess unless you already have a handle on the main code to execute the task first. 
Okay, well, to start I would write a script that can read the input of the sensor and display to the command window, then write separate script that can control the ac when you use hard coded values. This will be something you have to research and write depending on the devices you have. Matlab has numerous resources for this if you google and you will need the manufacturer data sheets to make sure you convert the input data properly. Once you have those codes written you can formulate a control system equation that takes the input and calculates the necessary output to the ac to reach the desired temperature set point. Write this as a simple script too, perhaps using a while true loop to make it continuous. From there you can use the guide toolbox to create an interface that allows you to start and stop the code using buttons, and enter a set point for the temperature. The key is to build it in steps and then add all the pieces together. Make your code as elegant as possible and the guide portion will be very simple. Hopefully this helps, no one on here will do your homework for you. I'm surprised that a homework project this ambitious is your first time coding? Seems like a stretch to me, but it can be done. 
So yes and no. I will probably be using xcorr2 to determine the exact offset of the grid I construct from the best fit lines approach and maybe as you said to refine the estimate. There's probably some barrel distortion and small error in the spacing between the lines so I'm thinking maybe some sort of iterative direct search approach based on xcorr2 and/or immse. We'll see
I found it by looking at the return types. Thanks!
How do i do that
As I said, no one here will do your homework for you, me included. If you are very new to matlab as you seem to indicate then I would start with some online tutorials (simply google matlab tutorials and you will find an abundance of resources) to familiarize yourself with the syntax and formatting of the language and then attempt this project. Using matlab in the way you desire is certainly possible and I have done similar in the past (using the guide to read inputs and control outputs) however it would be foolish to start there if you really have no coding experience. That's running before you can crawl. Learn the language first, then start applying it to your problem. If you get some script started and get stuck feel free to come back and let us know and we can try and point you in the right direction. Again, no one on here is going to write your code. 
Yes sir
Thanks for the response. I don't understand how I can create the moving vector arrows. For example say f_x = fmax*cos(omega*t) f_y = fmax*sin(omega*t) with the point where the vector grabs on also changing in time. I would imagine first I define the trajectory of the point and then I somehow make MATLAB draw this specific, changing vector on that moving point?
Do you just need to know to use the function [errorbars](https://www.mathworks.com/help/matlab/ref/errorbar.html)? If you need more than this, show us the code you have so far, as well as what is going wrong. It's hard for use to help you without you showing us what you've done so far. 
[Plenty of documentation on this already](https://www.mathworks.com/help/optim/systems-of-nonlinear-equations.html)
I think I understand what you're saying. Off the top of my head, my approach would be to do a nested for-loop where it goes through each of the numbers in the first column, i.e. 1, 2, etc. Then you go through each row and if the increment matches the column number you record the second column's value into another matrix like: for i = 1:length(column) %This makes it go through the whole column for j = 1:2 %For your particular example if column(i) == j %Save column(i) into a new array say a_i end end end This probably isn't the most efficient way to do it because it goes through the entire array multiple times. Saving the data into arrays might be tricky because they're all different lengths. Like in your example A1 has 4 elements but A2 has 2 so you can't store them all in a single matrix. I would recommend dynamically saving them into a structure but I think that's a little too complex so if your left column values don't go too high (i.e. only go from 1-5) I would just manually create 5 variables A1...A5 and then put in a if-loop. I know this was a little convoluted so feel free to ask me if you require clarification. 
Oh, no, I thought it was a different page than the one sent. I'll check it when I get home.
You can simply assign each to a matrix. A=[2 3 4] B=[5 6 7] x=A\B
Please post the code in a more readable format, if possible put the actual function you wrote and not "something like this".
Have you tried running the profiler and digging down into what the hold-up is? Given only your OU assignments and not the Poisson ones are causing this it must be the interesting things you're doing lines, and not the structure of the code you've pasted. Lastly, if when you paste code you indent by four spaces first this sub will format it like the original code making it easier to read!
[relevant doc](https://nl.mathworks.com/help/matlab/ref/struct.html). try running some examples from there to get started on how to acces structs
on that doc it says somewhere near the top: View the contents of each element. s.f which means, acces the contents named f of the struct called s. all you have to do is figure out the names of the fields you'r intrested in. do this by typing the name of the struct in the console and looking through the list of fields
You can do this by manually doing with the polyfit function does. First generate you x matrix (make sure you make it a column vector and not a row), and your y matrix. Remember to use .^ instead of just ^ Next create a vandermonde matrix (which you can learn about here if you're interested https://en.wikipedia.org/wiki/Vandermonde_matrix). For example, if the function you were fitting was c1x^4 + c2x, the vandermonde matrix would be [x^4 x]. I'll let you figure out how to make it for your particular polynomial. Next you get your coefficients by dividing the vandermode matrix by y (i.e. C = V \ Y). Now C is a matrix with your polynomial coefficients. You should be able to figure out the rest past there. Let me know if you need more help. 
Thank you so much!
Classic error. Make sure you dot divide in your expression for y. y=x./(1+x.2 ); Do this and you will get your three coefficients. I tried it your way and got a matrix of zeros so that's definitely the the error here. 
Yes it is a function I created and I've shortened it a bit to its essentials. I want this function to return a plot. But instead of doing: function plotLine(x,y) plot(2*x,2*y) end where the user would call the function in the command window for example as plotLine(1:10,1:10) I want the user to give a formule, for example 2*x^2 as an input instead of an value of x. So I would want the user to type this in the command window: plotLine(2*x,y) and the function to look like function plotLine(vx,vy) plot(vx,vy) end where x and y always have the same values, so instead of changing the values of the graph (x,y) I would like to change the formula (2*x,y) or (x^2, y-2) every time the function is called. So keep the values the same but change the formulas. So in the function x and y should always have these [x,y] = meshgrid(-1:.1:1,-1:.1:1); values. So that the function does not return no x found, when giving a formula as input. Hope I explained it a bit better now Thanks for your help
Filter uses a discrete-time implementation by default, but tf continuous-time coefficients unless you specify a sample time. Only when you specify a sample time does it convert to discrete-time. Change sys = tf(B,A) to sys = tf(B,A,1)
Not sure if you saw my previous comment's edits. I think I solved your problem. Let me know if it still doesn't work. Also, others have suggestions as well, which could work for you.
It's cause it usually works with a matrix but when the sizes don't match, the dot is used to turn it into a scalar divide, so it can divide element by element?
The problem you are experiencing could be as simple as you are maxing out your ram so matlab is having trouble finding space to store your arrays. I don't know what your input for tSteps is when you run this, but for every tStep you are adding 6000 points. Aside from that, if you don't know how to use the matlab profiler, it is as simple as using the commands profile on %%% run your code until completion here profile viewer 
I had read that at one point, but I couldn't find any documentation spur of the moment to confirm it. I shot from the hip, I guess. Thanks for the correction.
/r/spooky
That was the problem, yes. Sorry for the confusion! Tcoop's explanation fixed it though :)
That fixed it, thanks!
I'm doing image=imshow(grayImage, 'XData', newWidth);
Thank you :) I used the wrong callback to the button. I'm still learning so I really appreciate your reply. Have a nice day. 
I believe this has been done in R2017B. I read the release notes a week ago, let me see if I can find them. Edit: I read this in a document I received at work, I cant access that work email from home but I will personally message you the details on monday. I do remember the 512 bit vectorization taking up a significant section of the notes however.
Yair Altman has a good discussion on this: http://undocumentedmatlab.com/blog/math-libraries-version-info-upgrade
Are you looking for [`contour`](https://www.mathworks.com/help/matlab/ref/contour.html)?
I want the user to give a formule, for example 2*x^2 as an input instead of an value of x where x and y always have the same values, so instead of changing the values of the graph (x,y) I would like to change the formula (2*x,y) or (x^2, y-2) every time the function is called. So keep the values the same but change the formulas. You can wrap your formula with eval() and it will return the answer but x and y still need to be defined first. 
The only jobs I can think of that are cool and innovative that would let you do those things and are not military based is the F1/high performance car market. Other than that, find your luck with a small UAV startup. Maybe even ESA.
This is hilarious.
Don't think so. The plot looks roughly like the one linked. Now i want to have lines of the same temperature in it. For example one at Z = 5.6 going in the middle through the green are. [plot](https://uk.mathworks.com/matlabcentral/answers/uploaded_files/71308/pcolor_exp.jpg)
Can you somehow export that machine learning model from MATLAB? Or could you implement the raw code into the realtime embedded system?
There's a Raspberry Pi support package for Simulink that you probably want to check out. It generates C code for the model, transfers the code to the Pi, builds the executable there, and then runs it.
I still think you need contour. I generated some data and threw a [contour over a pcolor plot](http://imgur.com/a/AXGb7). My data is artifical and very regular, so I got clean contours. If your data looks more like what you linked, you will have closed contours that won't look as nice. But contour WILL give you the isotherms you're looking for.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) https://i.imgur.com/97c3rIl.png ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[state_of_imgur](https://np.reddit.com/r/u_imguralbumbot/comments/6i1huv/imgur_has_gone_to_shit) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20djdiaa6) 
You're right that's what I'm looking for. Thanks! I misunderstood you and thought you wanted me to replace the pcolor plot. 
First of all you need the plot handle and not the figure handle to assign the data. There is no such thing as data handles. It's just the data. No need for num2cell, just assign the vector to the xdata and xdata property of your plot and it should work.
XData and YData updates won't work with anything apart from vector data, if your data is in a matrix it will give you the error you're getting.
QuickTime doesn't "trim" the video, it just marks where the trimming was done, but the original untrimmed data is still present. The video file reader doesn't know how to handle this formatting as it's something unique to QuickTime.
Thanks for your reply. That makes sense. Is there a reason why the video file reader knows how to handle these files in the Mac version of Matlab? Or why other programs like VLC and Potplayer can handle the trimmed files? And is there any way to make the PC version of Matlab behave this way?
I'd guess that the Matlab video reader relies on some OS-level functionality that knows how to handle the QuickTime formatting on macOS (just a guess). I don't know the answers to those other questions, but there may be a way to save the QuickTime-trimmed videos in a way that makes it look like a normal video?
none of those worked for me but I've figured it out now, importdata with the appropriate delimiters got me there I was just being dumb
Ah, ok. I didn't read the unformatted code in OP that carefully... &gt; I'm not sure what you mean by set it individually. I decided to actually read the recent `set` documentation, and it looks like it does support something like what you are trying to do. &gt; I'm not sure why its throwing an error. Maybe giving us the error it's throwing will help.
So fig is the plot handle, I've just named it 'fig' sorry if it was confusing. So I need the num2cell for the dimension reshape. The reason I'm using it is becuase if I do the get(fig,'XData') it returns back: [1x3]; [1x3]; [1x3]; [1x3]; [1x3]; So thats why I am using the num2cell with dimension reshape. 
Yes I have a simple solution that allows you to get multiple lines at once using XData but I'll need to check it tomorrow so I'm commenting here now in an attempt to remember.
Ok i cant check if it works with matlab but i think you need to do 5 different set commands indexing the axes data field
thanks dude. just needed to add the {} in to make the NameArray a cell array :)
Thanks. I was having trouble installing the driver and noticed other sources mentioning read-only access, but perhaps once I get the dang thing installed I'll discover that it's not only possible but straightforward. 
Whether as a function or not, a for each loop should be able to get the job done for an arbitrary number of inputs. Making it a function might over time lead to wanting more flexibility in certain areas, but that should be possible to expand as time goes on. 
maybe you could remove points outside of a threshold then interpolate the values to stitch the surface back together
thanks for the help, I'll look into PIV, seems promising. I'm not sure how familiar you are with cross correlation (i'm just learning), but as the images are 2D, i am doing a 2d cross correlation (xcorr2 in matlab). this brings up two confusing things for me. 1. the 2dimensional cross correlation is computational heavy, when really i'm only looking for shift in the y coordinate. - is it possible to apply a shift in the y direction, instead of the x as well 2. i'm not sure how i understand the output from xcorr2, is my max value or xcorr2, corresponding with the x and y coordinates that results in the best match between pictures (i.e., the 'lag' between pictures). in this case I could just focus on the y coordinate as my vertical movement, and the time between frames as my time. mean velocity is what I will be looking for, the set up is to measure the flow rate of the foam, and as it is very noisy, a mean velocity is all i would like to acquire
I'm pretty useless when in comes to image processing in matlab, but do you need to do this live? If you only have a few samples post hoc, it might be easier to use the multi-point tracking tool in ImageJ and select the points manually since it seems like you don't have a good seed for the track point. You can also try Tracker, which is automated but again will face difficultly if you can't find a feature to track. You could also change the experimental setup and incorporate small particles into the foam that could be tracked easier. Hope this helps
I havent used the "sound" command before so this is purely speculation. If I had to guess though, it kind of sounds like the audio file is getting loaded into memory during those first few seconds (and thus playback is a bit glitchy). Any chance that you are using a HDD and your friend using a SSD? If this is the case, the best bet is probably to have Matlab automatically pause immediately after you start playing the file, give it a second or two to load, and then automatically restart. Alternately, (assuming I am correct about the HDD vs SSD thing) transferring the file to a SSD should help as well.
Cross correlation in 2D is commonly used for this type of analysis. It can be quite slow.
I don't know if it is possible to restrict xcorr2 to shift in just one direction. As for interpreting the output, you should be able to determine the shift by examining the distance of the correlation peak from the center. If you are only interested in the y direction it would be ok to just look at the shift in that direction. I guess the shift in the other direction could be used to check the quality. If it tells you the correlation suddenly shifted upwards by a lot you would know something is wrong if your foam is moving to the right. If the two dimensional correlation is too expensive and you don't want to do the shift by hand, maybe you can use a one-dimensional correlation for each horizontal line in your image and combine them together.
[this source](https://www.lifewire.com/g00/what-are-the-gmail-smtp-settings-1170854?i10c.referrer=https%3A%2F%2Fwww.google.nl%2F) maybe? 
with {} you get whats in the cell, with () you get the cell with its contents. a = {1 2 3 4} ; a(1) %will be {1}, a cell with a one in it a{1} %will be 1, the contents from the first cell I cell context i think i use the {} more than (), but they both serve a purpose. With a comma, the same rules apply, except a bit more complicated. {:,1} gives you all the contents of af the first column as if you inputted them seperated by commas, quite literally. this means you can pipe it as input to a function: differentViews = [0 0 45 45; 0 90 0 90]; for vi = 1: size(differentViews,2) subplot(2,2,vi) %plotstuffhere view(differentViews{:,vi}) end or put it in a regular array (depending on the contents of the cell ofcource) : a = [cell_name{:,1}] 
Not sure how I can use the information on this source. When it is described by MATLAB to use in the setpref function: 'myserver.myhost.com', from what I understand as myserver I can use gmail, but I am not sure what I can use as myhost, to put in the function.
[another source](https://answers.yahoo.com/question/index?qid=20091109102414AAPpYfR)
can you post a code snippet? Could be a number of things.
Yes, here's some simple code below that produces a sound at 400 Hz for 3 seconds. This code encounters the lag I described. fs = 200000; t = 0:1/fs:3; a = sin(2.*pi.*400.*t); sound(a,fs,16); 
No I am an Aerospace control engineer... unfortunately I love dynamics systems that moves or have to do with energy...I am good at it even if I know that cannot always find the job of your dreams, I keep studying and apply for positions I like. 
My script does include a button press actually and it still produces the described lag. Adding a pause(1) before the sound command is called didn't help. Having a sound emitted at a frequency of 0 has worked for me. So having... a = sin(2 * pi * 0 * t); b = sin(2 * pi * 400 * t); will clear out any of the lag. I was just looking for an answer as to why the lag occurred in the first place. Emitting a sound with 0 frequency will however solve the problem.
I don't know? Im certainly an extreme novice to matlab. What would be the benefit of doing that? I just want to run a different script dependent on the user input. Im sorry if I am not asking the right questions.
because if you don't properly compare the user input, you won't have the desired program behavior? what happens when you run your script? any errors? what happens if you clear your workspace (run clear all), then run your script?
Assuming the user is only allowed to select one option, switch-case is much more applicable than if-else. switch exintcont case 'Internal' run ('internalscript.m') case 'External' run ('externalscript.m') case 'Free Convention' run ('freeconscript.m') end
EDIT: I should have said: Thank you for getting back to me! Anyway, back to my post.... I'm sorry -- this is probably going to sound obnoxious, but I really don't understand! I divided my data matrix into three vectors (x, y, z). I entered the following command based on the instructions you sent: mesh(x,y,z) But Matlab returned the following error: Error using mesh (line 75) Z must be a matrix, not a scalar or vector. Can you help me to understand what I'm doing wrong?
&gt; (NOTE: As I said, I'm totally new to Matlab. I entered these commands based upon instructions I found using Google. I don't really know what 'delaunay' is! So, I apologize for how much of a total and complete newb I am at this.) I'm going to be slightly obnoxious and explain how you should get from your question to your answer. Teach a man to fish, and all that. Start with the [`trisurf` documentation](https://www.mathworks.com/help/matlab/ref/trisurf.html?requestedDomain=www.mathworks.com). If you read the descriptions, you see it talks about being able to set "patch" properties and that you can do `h=trisurf(...)` to get a "patch" handle. Scroll to the bottom of the page and find the "See Also" section. Notice that [`patch`](https://www.mathworks.com/help/matlab/ref/patch.html) is there (*click*). In the descriptions for `patch`, one of them references setting properties with name-value pairs. Click where it says [`Name,Value`](https://www.mathworks.com/help/matlab/ref/patch.html#namevaluepairarguments) in the description to go to a detailed listing of the available pairs that you can specify. If you read through the name value pairs, `FaceColor` has an `interp` option. I can't promise it will look better, but it might. ****** Another thing you might check out is [`scatteredInterpolant`](https://www.mathworks.com/help/matlab/ref/scatteredinterpolant-object.html), which will use the same Delaunay triangulation you're currently using to define the mesh in order to interpolate the data. You can interpolate the data points to a regular grid that has as much resolution as you need to capture all your features and plot that, which may look better. You'll have a bunch of "wasted" points in your sparse regions, but that shouldn't matter unless your data is huge - if what you've posted is representative I expect it would be fine. You could even export the interpolated data to a file for plotting with Gnuplot, if that's your preferred method of generating a plot. I don't know how much control you have with Gnuplot, but you should certainly be able to get a good interpolation in Matlab.
I do a lot of finite element meshing. Your data looks a lot like noise, not sure how to translate that into a surface mesh. What is it supposed to look like? You can try surface tesselation in [meshlab](http://www.meshlab.net/), its only a few clicks and you can coarsen/refine the mesh easily, along with test mesh quality a looooot easier than within MATLAB. Best of all its free and has a looot of online tutorials/forum help. MATLAB does grids well, and it can process meshes once you have them. From personal experience, creating complex geometry meshes is usually done elsewhere.
The result from griddata should be a matrix. You'd do something like this xq = linspace(0,1,100); (or maybe logspace or some other function that more closely resembles your sampling intervals) yq = linspace(0,1,100); zq = griddata(x,y,z,xq,yq); surf(xq,yq,zq);
&gt; I'm going to be slightly obnoxious and explain how you should get from your question to your answer. Teach a man to fish, and all that. You're an awesome person. Thank you for this lesson.
`griddata` assumes your data is *already* a grid, though not necessarily with fixed spacing. If /u/meslier1986 already has a grid, `mesh` or `surf` can be applied directly - there's no requirement for fixed spacing, as long as you pass vectors giving the spacing along each axis.
I entered: &gt;&gt; xq = linspace(0,1,100); &gt;&gt; yq = linspace(0,1,100); &gt;&gt; zq = griddata(x,y,z,xq,yq); &gt;&gt; surf(xq,yq,zq); I received the following error message: Error using surf (line 74) Z must be a matrix, not a scalar or vector.
Can you give me some example code? I'm still having trouble understanding what each command does.
[are you getting an error message? What does it say? Why are you using symbolic variables? Are you supposed to be implementing a numerical root finding algorithm?]
Thank you! I'll try working on it some more. For some reason it only returns 0 as the index regardless of the keyboard I use or how many I have plugged in. It may be related to the keyboard type? 
Hey makesmallthingsbig, Sorry I don't check reddit all that often! I actually would be interested in seeing the current frequency method if you don't mind code-sharing? As I said I'm not very well versed on this sort of thing, but it does sound interesting! I can't promise I'll get round to attempting to improve it / speed it up, but if I get a chance I'll give it a go!
+ Holy crap I just tried this out and it works. How does this syntax work exactly? Testing it out it seems like ARUN1XXX&gt;upper essentially returns a matrix detailing which positions it holds true or false for. Same with ARUN1XXX&lt;lower. Then the | is an element-wise or operation. That part makes sense. The part that gets weird is when you now select the indexes of the matrix ARUN1XXX with another matrix. Is there a word for this? Can you recommend any tutorials to generalize this concept?
It's using logical indexing to edit the original array. So in the parenthesis, it's returning a logical (1s and 0s) array telling us where the numbers fall outside of the threshold. Using this logical matrix as a index, it's now saying all locations in ARUN1XXX where the logical matrix has a 1 should be set equal to NaN.
I actually posted this on the official forums, but haven't gotten a reply yet. The array GetKeyboardIndices generates is essentially empty. "I'm attempting to create a program using and specifying multiple keyboards and I'm having trouble referencing a specific keyboard's device number in the KbCheck function. "[keyboardIndices, productNames, allInfos] = GetKeyboardIndices;" returns an array containing only a value of 0 with the product name simply listed as "Keyboard". The generated "allInfos" provides the same. https://puu.sh/wwLmn/50bea50d61.png "PsychHID('Devices')" returns an array shown here: https://puu.sh/wwLac/ddadba02e9.png I'm using 2 generic Dell keyboards and I'm running Windows 10 64-bit." 
The thing that kind of weirds me out, is that you are basically specifying a bunch of points and then assigning them all at once. Is there any information about how matlab handles logical indexing when the logical index is smaller than the matrix? Because I've tested it out and it works but I can't find a pattern.
Do you mean like low level how does it decide every little thing, or more like a what are the differences veteran matlab and python? 
Not quite "how it does every little thing" but like, what is the syntactical layout language (because it seems pretty type-dependent) how does matlab, for example, parse A(1:3) differently from A([1:3]) assuming A is a matrix. Does the interpreter parse [1:3] differently from 1:3 depending upon the context in which it appears? Basically instead of tutorials going "here's what happens when you do this" a tutorial that explains "here's what happens and this is because matlab is interpreting it this way" I think an analogy to python would be a tutorial that explained how assigning variable names to python objects simply creates a reference to that object, and then going in depth to explain how assignment works in general and stuff like that.
I think the most important thing to keep in mind about MATLAB as a programming language is that the base variable in MATLAB is a matrix. And the important thing is that it is a matrix, not an array. That is, all base variables must have the properties of a matrix, like in math. Thus, all entries must be of the same type and you must be able to perform matrix operations on them (thus, one condition is they must be rectangular. Thus, no jagged arrays). And one thing that confuses a lot of people, all base operations (+ - \* / \^ etc) are the matrix forms of that. Thus if A and B are both variables, MATLAB will always interpret `A*B` to be matrix multiplication of the two (of course, if A and B are both scalars, then matrix multiplication is the same as regular). Where this catches people off guard is if A and B are both `1xn` vectors, if you say `A*B` Matlab return an "internal dimensions must agree" error, because you can't matrix multiple two vectors. Thus, to get what you (probably) want, you must use the `.*` operator- which tells MATLAB to do element by element multiplication. While you might think this is overly restricting, it is actually the reason MATLAB can do a lot of the cool things you like about it (directly assigning sub-matrices, for instance). Also, if you need an array that acts more like an array in other languages, MATLAB has a cell array which can be of mixed type and jagged. **Edit:** I read through what I just wrote and couldn't believe how many "thus"es I had. It's terrible. 
This should have everything you need. https://de.mathworks.com/help/images/hough-transform.html Append this code to the example in the link. It will center and rotate the image, based on the longest detected edge. offset_long = lines(k_long).point1-lines(k_long).point2; if offset_long(1) &lt; 0 offset_long(1) = abs(offset_long(1)); shiftI = [zeros(size(I,1),offset_long(1)*2),I(:,:,1)]; elseif offset_long(1) &gt; 0 shiftI = [I(:,:,1),zeros(size(I,1),offset_long(1)*2)]; else % nothing to do end if offset_long(2) &lt; 0 offset_long(2) = abs(offset_long(2)); shiftI = [shiftI(:,:,1);zeros(offset_long(2)*2,size(shiftI,2))]; elseif offset_long(2) &gt; 0 shiftI = [shiftI(:,:,1);zeros(offset_long(2),size(shiftI,2))]; else % nothing to do end rotI = imrotate(shiftI,lines(k_long).theta,'crop'); figure imshow(rotI) hold on im_size = size(rotI); plot([im_size(2)/2,im_size(2)/2],[0,im_size(1)],'r--') plot([0,im_size(2)],[im_size(1)/2,im_size(1)/2],'r--')
I don't have a solid answer for you, but I do know bits here and there which may be helpful or relevant. * A majority of MATLAB is built on itself, in M files. But that's all built on Java, but there's also a ton of tie ins with C. When in doubt, think about how you would do it in M, Java or C. * Every single thing is a class object. Doubles, singles, integers, booleans, strings, etc. * Every (maybe?) class supports vectors and infinite dimensions. Matrices are (probably) a single class object. * Every operation is actually a function call: + is plus(), - is minus(), .* is times(), * is mtimes(), etc... * Every operation is a class method. You can actually make your own class definition and override what the operators do. Check out methods([]). &gt; Does the interpreter parse [1:3] differently from 1:3 depending upon the context in which it appears? Those are actually equivalent. If you use [1:3] you will actually get a notification that the brackets are unnecessary. MATLAB always starts by assuming you're using doubles. [] is actually a double. I imagine the actual implementation of [] is double(), and double called with no input returns an empty matrix. There is some parsing with the colon operator, since using a single colon assumes single unit spacing, while two assumes you're going to define the spacing. If you were going to parse "1:3" and "1:0.1:3", I would start by just treating the colon like it is separating the inputs of some function, and then the function has two different operations depending on whether there are 2 or 3 inputs. This is similar to how *args can be used in python. &gt; I think an analogy to python would be a tutorial that explained how assigning variable names to python objects simply creates a reference to that object, and then going in depth to explain how assignment works in general and stuff like that. It probably not nearly that complicated. It's only parsing operations in a particular way. 1:3 could just implement a string parser to determine the numbers on either side of the colon, and then do a for loop to create the vector, and store it in some memory location. MATLAB also doesn't open up it's built-in functions, so unless you work at Mathworks, you'll never really know how it's done.
I don't believe there is one answer for what you are asking, it depends upon the situation. On the high level, when you do: &gt;&gt; x = [1 2]; or &gt;&gt; x(1,:) This assignment and indexing may be done by a MATLAB .m file, or it may be done directly in C, as customers we don't know. The core of the MATLAB programming environment is written in C, which I believe is obfuscated and has changed with the different versions over time. Being able to do vector math quickly is part of MATLAB's secret sauce I believe. But much of the complete MATLAB system is actually written in MATLAB. So why I say those above functions are written in C is because, it's such as simple basic operation which happens so frequently, it probably is done in C. However if you do: &gt;&gt; sum(x) That might actually be written in MATLAB itself, in the form of a .m file, which gets compiled back into C, or they may also just use C and some math library within C. Various functions are written in different languages. Some image processing stuff, if you have an Intel processor, is [actually written in Fortran](https://software.intel.com/en-us/articles/intel-math-kernel-library-documentation). MATLAB is a hodge-podge of a ton of different tools and stuff happening at different times, depending upon which processor/machine you are using. There is also some kind of multithreading going on, not sure how that works at all.
Hmn. Perhaps the usageValue out of PsychHID('Devices') would work instead of keyboardIndices out of GetKeyboardIndices? 
a = fcn(u)
Thanks! I'm surprised that this is so complicated to do. I seem to have gotten working ok with gramm, which is nice. Seeing as you seem to know quite a bit about it, maybe you can answer this follow-up question (no worries if you don't :) ) How can I put two sets of data on the same gramm plot? I'm not talking about two subplots on the same figure. I want them superimposed on one another. I have vectors X,Y,x,y. I want to plot X,Y with a line plot as above (I've managed to do this), but then on top of this plot, I want to plot the points x,y with markers and no connections. Sorry if this is covered somewhere, but I can't figure out how to have both of them like this. Edit: I assume from your post history that you're the one who made gramm? If so, it looks really cool, so kudos on that!
On mobile, so please excuse formatting. So say you have a 2d matrix. The dim argument would specify whether you're filling every row (1) or every column (2). If you add another dimension to the input matrix, making it a 3d matrix, then you could use dim=3 All the dim sort is trying to do is "rotate" the material until the dimension you want is up first. Here's another way to think about it. You have a 4x5x6 matrix. And you care about filtering every column, meaning you filter 4x6=24 data sets, which are each 5 points each. You shift the dimensions so the 5 becomes the number of rows. You're basically measuring size and dimension from different origin. The rest of it is setting up the fft and filtering. The fft figures out the frequency composition. The F(~mask) line sets the magnitude of frequencies not in the specified range to zero. The ifft function reverses that and gives you the data without the undesired frequencies. And the last lines puts the data back in the right order. 
I wrote a pretty decent python interpreter in SML. It couldn't handle custom objects, but it could handle most of the basic stuff.
Then you already know how this is done, in concept. 
On mobile so can't test at the moment, but I'd try using. cell2mat(struct2cell(your_structure)) With the relevant options for each function to fit your data set. Might be some Mex file on the exchange that can do it faster. I did see some struct2mat functions on there. 
I'd imagine the details of their compiler are proprietary. 
Have you read the documentation for fzero? Because it's doing exactly what I'd expect given your inputs. Also, you should try plotting that function and see whether it actually has any roots on the given interval. 
Yeah, true. I ended up using gramm, as the other comment suggested, and taking the log of the values (they're all positive) gives a nice output. Thanks anyway
could i see the output?
You could also use the functions available with [FEATool Multiphysics Matlab FEM toolbox](https://www.featool.com) to create unstructured plots. For example if have grid points and cell connectivities, you can import the grid as described here https://www.featool.com/doc/grid.html#grid_imp that is fea.grid.p = % your imported grid points size[n_sdim,n_p]. fea.grid.c = % your imported cell connectivities size[n_nodes_per_cell,n_c]. fea.grid.a = gridadj(fea.grid.c,2); fea.grid.b = grid.bdr(fea.grid.p,fea.grid.c,fea.grid.a); fea.grid.s = ones(1,size(fea.grid.c,2)); Then if your solution corresponds to the grid points / nodes you can import it into the fea.sol.u solution field fea.sdim = {'x' 'y'}; fea.dvar = {'u'}; fea.sfun = {'sflag1'}; fea.sol.u = % your solution data as a column vector. fea = parseprob(fea); and then use either the Gui or the Matlab functions such as postplot(fea,'surfexpr','u','isoexpr','u') to plot surface plot and iso contour lines. Other plot options and Plotly output is also available as described in https://www.featool.com/doc/postplot_8m.html 
The part that is really slow is that 'd' is not pre-allocated. I don't know your data (is every `exp(i).count` the same size?) but you need some way of either knowing the size, or knowing the max size of your array `d` so you can replace `d = []` with `d = ones(max_size,n)` (and then you can remove the extra 1's at the bottom of your array if your array isn't of length `max_size`). This change is huge (and as a tip, I know MATLAB is warning you about this. Read those yellow warnings they give you). As for getting rid of empty rows. I'd do a trick where I create an intermediate variable, where I sum the rows of the array, and then filter where the sum is zero. 
Don't use variables with the same name as built in functions. 
If I understand the question correctly - is not super hard, but it is a little unintuitive. Suppose you have a = [(1:100)',rand(100,1)]; d = 1:100; The problem with just a normal plot is that the line object only has a single colour, so you can't change each segment without rendering them each as a separate line. However, you CAN specify line segment colour via the edges of a patch object! See the documentation for the 'EdgeColor' property, particularly on the 'flat' and 'interp' options. So for example, you could do patch('Vertices',a,'Faces',[1:size(a,1)-1 NaN;2:size(a,1) NaN].','FaceVertexCData',d(:),'CDataMapping','scaled','EdgeColor','interp'); Let's unpack the properties of the patch a little - We set the vertices of the 'mesh' to be the data points themselves - We set the faces to link adjacent vertices, to represent the line segments between them. So face 1 links vertices 1 and 2, face 2 links vertices 2 and 3, and so on. Normally, a face would have 3 points, and thus define a triangle, but with only two points, it will just render a single edge connecting them. We add a row of NaNs at the end to prevent the last point from being joined back to the first point - The secret sauce is setting the FaceVertexCData property to be your colour vector, d. This tells Matlab what value corresponds to each vertex. - Because our d value is a scalar, we want to convert the value into a RGB colour based on the colour map. So we set 'CDataMapping' to 'scaled'. You *could* equally well give an RGB value for each vertex, and skip mapping entirely, if you know exactly what colours you want. For extra control, check the documentation for other values for CDataMapping and EdgeColor. If you want the colour to change in a different way, just edit/change the colormap. 
Users are generally discouraged from using variable names that conflict with builtin Matlab functions and constants (e.g. *i*, *exp*). You could try something like the following. % Check if sample structure has empty occurances for ii = 1 : length(exp) ikeep(ii) = ~isempty(exp(ii).count); end % concatenate all non-zero rows d = [exp(ikeep).count]; N = sum(ikeep); % reshape arry to match expectations d = reshape(d,[],N)'; 
Are you sure it has roots? It doesn't seem to have a root(s).
If you want to plot this function handle, use fplot. fplot(fun, [2 3]); It will plot your function in the interval x = [2, 3]. 
I know but it does change the concavity, shouldn't there be at least 2?
Command Code: tic; d1 = K\f; %default toc; tic; c=symrcm(K); d2(c) = K(c,c)\f(c); fprintf('%e\n',norm(d1-d2)); toc; Results: Elapsed time is 1.154152 seconds. 9.092455e-13 Elapsed time is 1.129207 seconds.
Nope. Concavity changes twice, but those points are undefined for the second derivative, and that is possible. Consider the case where y = x^(1/3) for example. You still get concave and convex points, but the second derivative is undefined at a point where the change occurs. 
A great trick to get one field out of a struct array: d = [exp.count]; (this will give you the `horzcat` of all of the `count`s ignoring empty entries. If each `count` was a vertical array rather than horizontal, you'd be done in one line.) ncounts = length(exp(1).count); d = reshape(d, [ncounts, length(d)/ncounts])';
How does the elapsed time change if you exclude the call to symrcm and only compare the time for the linear solve? 
What about: d = exp(:).count; Also, don’t use `exp` as a variable name. What are you going to do if you want to exponentiate?
put a: spparms('spumoni',1); first and see what method it is using to solve your matrix. Might give some hints. Also, try increasing the size (with the same sparsity) of your matrix. It may be that a matrix that small isn't terribly representative.
Posting your code will help. The most likely things off the top of my head are: -calling with an array of indices e.g. FunctName(ArrayName([1:100])); when FunctName expects a single variable rather than an array -including zero in your indices -a calculation error leading to an index being NaN or Inf
I've posted it in the OP
You should print tseq to the screen and paste it here. There's a good chance in this case the array doesn't contain what you think it should.
Generally it helps to step through these things with the debugger so you'll see where it goes wrong. You say you know it goes bad at the summation step toward the end. Just place a breakpoint close to it and step through it. As a hint: at that point "sum()" does not do what you think it does.
Try this: k=1:K; noiseInv=reshape(1./noisepotr,1,[]); R=r(:).^(-6*k(:)) B=R*noiseInv; 
&gt;:) I am happy that you are happy. Spread the happiness around. [This doggo demands it.](https://i0.wp.com/s4.favim.com/orig/50/boo-cute-dog-pomeranian-Favim.com-452643.jpg)
I would put a breakpoint right before that line is called and check the variable sizes and values (for several iterations) to make sure that are the size you think that are and to make sure you arent dividing by zero or something similar.
I summed up the elements of a different array earlier in the code ('numarray') and that didn't cause any problems. They were all positive decimals. I've posted the contents of 'tseq' in the OP.
I used "sum()" on a different array (69 x 1) earlier in the code, and it worked with no problems. However, the elements of that array were all positive decimals. This array, "tseq" (1 x 69) has negative and positive real numbers as well as one element which is 0. Could that be causing any issues?
Jep, you used it before, that's where this whole issue started :) sum=sum(numarray) Looks suspicious, doesn't it? Matlab will happily allow you to shoot yourself in the foot by redefining base functions as variables. That line calls the function sum() on the variable numarray and then overwrites the function sum() with a variable sum that contains the result. The next time you want to use the function sum(), but since you overwrote it with a variable, matlab tries to index into that variable instead. That's where the error triggers. So just change the variable name to something different. You'll probably need to clear the offending "sum" variable from your workspace to restore functionality 
wow ._. i feel silly now. thank you so much!
You've created a variable named "sum". If you wanted to index that variable, how would you write that? 
Great, thanks!
It's just the residuals divided by the standard deviation of the residuals. Like a z-score. 
What you are looking for may be the MATLAB [context-free grammar](https://en.wikipedia.org/wiki/Context-free_grammar). This is a standardized representation of how the programming language is parsed. The most common format for context-free grammars appears to be [Backus–Naur form](https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_form). A lot of languages provide their language specification in this format. Unfortunately, there is no such thing for MATLAB. Mathworks doesn't publish one, and as far as I have been able to find there are no complete third-party ones available either. The closest thing I have been able to find is this [partial one](https://stackoverflow.com/a/12444091/3604159).
I don't really have a good way of uploading it... If you look at the example on [this](http://blogs.mathworks.com/images/pick/Sean/maingramm/grammexamples.html) page with the heading "Using a continuous color scale" (just ctrl+f for it), it looks basically like that, but all the colour variation is on one line.
3 dimensional or 2?
2D
To get the most out of delayed execution, you simply need to leave things unevaluated until you need the output. The more operations you delay, the more chances there are for things to get combined. Minimizing the number of passes through the data is then just a graph theory problem for MATLAB to solve based on the operations you execute and the variable you want to evaluate. But there isn't any way to directly control that optimization except for (indirectly) which variable you choose to gather into memory. Since the intention is that tall arrays let you write "normal" MATLAB code, most of the same recommendations apply. (Although it's worth noting here that unevaluated tall logical arrays cannot be used as the condition in a loop statement -- you need to evaluate it so that it becomes an in-memory logical first.) As for your edit pointing out that you run out of memory, make sure you create the tall array from a datastore and **not** from an in-memory array. You can tweak the ReadSize property of the datastore to control the maximum size of data chunks used when you execute calculations on the tall array (can be less than the ReadSize if file partitions are reached). Make sure the ReadSize is reasonable for your system and datastore should handle all of the file I/O to process the data in chunks so that you don't run out of memory. 
found this http://cdn.intechopen.com/pdfs/4267.pdf, but it doesn't explain how to find the time for each segment.
I appreciate the response. &gt; To get the most out of delayed execution, you simply need to leave things unevaluated until you need the output....But there isn't any way to directly control that optimization except for (indirectly) which variable you choose to gather into memory. I figures as much when I could find any reference to such a feature. I mean, as long as it will do something that is (close to) optimal. idk if you know or not, but does it also optimize repeated calculations? The documentation says it optimized to avoid redundend sweeps through reading the data, but didnt find anything on whether or not it would do extra automatic optimizations utalizing the delayed execution (or, for that matter, if it would even still do some of the auto-vectorization stuff that JIT does). &gt; As for your edit pointing out that you run out of memory... first, I am making the datastore first and then making he tall file from that. I am using a custom filetype and (since I didnt see any option to setup a new paramater to have fileDatastore control this) I set it to real the whole file in one go. The data is effectively a big 2D array, which I typically would only load a few rows at once. Is there something like a "cat" command that would let me seemlessly add on to the statstore using a loop? I have a feeling its the reading function that is the problem. On that note, I know its unusual, but I meant exactly what the edit text said....its not strictly that I'm running out of memory (I mean I do, but then swapfiles kick in and its pretty much seamless), but rather that I am rnning out of pagefile space even though ive set it literally as big as I can. I am hoping maybe re-doing the reading function will help, but if I am right in thinking that you need pagefile space for all the stuff you have in the tall array, then I'm not sure teres anything that can be done (unless theres a way to get windows to let you set more than 3x ram). alternately, I have access to afew Linux systems, so running t on there would also work,if they make it easier to deal with this issue.
&gt; idk if you know or not, but does it also optimize repeated calculations? Aside from the delayed execution I'm not aware of any tall-specific optimizations. But that doesn't mean there aren't any. &gt; I have a feeling its the reading function that is the problem. You can use a custom read function by changing the ReadFcn property of your FileDatastore, http://www.mathworks.com/help/matlab/ref/filedatastore-object.html &gt; I am rnning out of pagefile space even though ive set it literally as big as I can I have not had this issue and have run calculations on 300GB data sets using tall arrays so hopefully when you fix the read function this is no longer an issue. It sounds like this is happening because currently the whole file is being read at once.
[You can start with this example](https://www.mathworks.com/help/matlab/matlab_external/call-user-script-and-function-from-python.html). There's plenty of documention about it, although I don't know when they first started supporting it.
I played with this a bit and finally decided that trying to "link" them in any way was a pain. It was much easier to just write an intermediate bash script that calls Matlab and then use `scipy.io` to read and write matlab files and `subprocess` to call it It isn't efficient but I only ever used it as a stop gap until I managed to move everything I could to Python
sample rate?
The "raw" data that I will have to filter will have a sampling frequency of 500 Hz, if thats what you are asking me.
Try something like this... h=firpm(127,[0 1/250 6/250 21/250 26/250 1],[0 0 1 1 0 0]); freqz(h,1); I am pleasantly surprised that Matlab's parks-mclellan design algorithm just works with these design parameters. Way to go Mathworks! This design doesn't get you a 3 dB cut off at 6 and 21 Hz, but gives you a nice passband that is between 6 and 21 with linear phase. If you want something that gives you exactly a 3.01 dB cut off at 6 and 21, we can come up with something different.
http://nl.mathworks.com/help/stats/hist3.html
I believe you are not really passing the right value out of the double for loop. I think on line 43 it should read tnew(m,n)=... Unfortunately I have no access to my matlab to test it right now. Hope it'll work! EDIT: and I realized, in the same line, all t(...) should be replaced with told(...). Else you keep calling your initial array.
You're right that makes more sense, though it still isn't working. I'll keep at it.
See EDIT of my previous comment.
If someone could find could find an efficient version (with as much or more functionality) of [IPDM](https://www.mathworks.com/matlabcentral/fileexchange/18937-ipdm--inter-point-distance-matrix) in python or any other language I'd be over the moon. I've tried to implement it myself, put together other similar stuff and nothing compares to that in speed. It's especially useful for me as I work on very large datasets and I'd kill for as an-efficient version in python.
&gt; It sounds like this is happening because currently the whole file is being read at once. I suspect this is the case too. I mean, it would be kind of pointless to make a "big data" product that was limited to 2x-3x your ram because of pagefiles. &gt; You can use a custom read function by changing the ReadFcn property of your FileDatastore, I am already using a custom read function (to my knowledge Matlab doesn't natively support reading/writing to IBM floats, so I didnt have a choice but to use my own). What I dont know how to do is either: a) tell "fileDatastore" to pass a 2nd argument to the data reading function to allow for partial reading b) manually loop over the data and sequentially add data to the datastore. I havent had time to try experimenting, but I wonder if something like this would work.... for nn=1:N if nn == 1 DS=fileDatastore(...,nn,...); % pass "nn" to readfunction to control how much data is loaded else DS=cat(2,DS,fileDataStore(...,nn,...)); end end Unfortunately, the documentation on how to do this doesnt exist - the only readfcn example I could find was the one shown on that page, which only takes a single argument and loads the whole file into data. 
Thank you so much for your help, but I think that I do need this 3dB cut-off.
What exactly is the desired output? When I run it, it gives me an supply of figures and I have to manually break the script for it to stop feeding me figures. I took a look at the loop, and you did some strange stuff there. This is how I fixed it: for t = 1:nt for m = 2:npm for n = 2:npm T(m,n) = FoFac*T(m,n) + Fo*(T(m-1,n) + T(m+1,n) + T(m,n-1) + T(m,n+1)); end end Told = T contourf(T,20) end You initially had this: told = t; tnew = told; for p = 1:nt for m = 2:npm for n = 2:npm t(m,n) = fofac*t(m,n) + fo*(t(m-1,n) + t(m+1,n) + t(m,n-1) + t(m,n+1)); end end contourf(t,20) drawnow told = tnew; % Copy new solution to the old solution end hc = colorbar; hc.Label.String = 'Temperature, deg. C'; axis off end What's so strange to me is how you first define told to be equal to t, then you define tnew to be equal to told. why not cut the middleman and directly define one of the two? then you use told = tnew. however, what you don't realise is that your loop is working in your t-matrix! [t(m,n) = fofac*t... works in your t-matrix]. so the line told = tnew doesn't really do much, since neither told or tnew have been changed by the loop. Also I changed the variable names to make them more understandable. So this loop alone won't work in your script. This is the whole script: %======================================================= % Finite difference solution for conduction in 2D square %======================================================= %----------------- % Function Inputs %----------------- % npts - Number of gridpoints in each coordinate direction (40) % nt - Number of time steps (1000) % dt - Size of time steps [s] (0.1) % alpha - Thermal diffusivity [m^2/s] (0.001) function squarecond(npts,nt,dt,alpha) %--------------------------------- % Initial and Boundary Conditions %--------------------------------- Tinit = 0; % Initial temperature [deg C] Tblc = 0; % Bottom left corner temperature [deg C] Tbrc = 100; % Bottom right corner temperature [deg C] Ttrc = 150; % Top right corner temperature [deg C] Ttlc = 25; % Top left corner temperature [deg C] T = Tinit*ones(40,40); % Create 40 by 40 array of ones T(1,:) = linspace(Ttlc,Ttrc,npts); % Set linear temp range from top left to top right T(:,1) = linspace(Ttlc,Tblc,npts); % Set linear temp range from top left to bottom left T(end,:) = linspace(Tblc,Tbrc,npts); % Set linear temp range from bottom left to bottom right T(:,end) = linspace(Ttrc,Tbrc,npts); % Set linear temp range from top right to bottom right %------------------------ % Define other parameters %------------------------ npm = npts-1; Told = T; L = 1; % Length scale, [m] Fo = (alpha*dt)/(L^2); % Fourier number FoFac = 1-4*Fo; % Fourier factor Tnew = Told; % Array to contain the 'current' solution at time level p+1 for t = 1:nt for m = 2:npm for n = 2:npm T(m,n) = FoFac*T(m,n) + Fo*(T(m-1,n) + T(m+1,n) + T(m,n-1) + T(m,n+1)); end end Told = T contourf(T,20) end hc = colorbar; hc.Label.String = 'Temperature, deg. C'; axis off end I had to remove drawnow because that obviously made the script unusable. But what is your end goal? Draw the temperature profile at the end time?
[Change the data using set and don't call your top level plotting function everytime](https://nl.mathworks.com/matlabcentral/newsreader/view_thread/19396)
The desired output is to have the plot drawn at each time interval in order to visualize the heat transfer. I think it's the way my professor wrote out the guidelines that confused me. But some of the lines at the end of the code were plainly given by him, including the drawnow. &gt;We don’t want it to buffer since we want to create a real-time animation. To prevent buffering, include a drawnow statement on a separate line immediately after the call to contourf. I ran this without the drawnow, and it seemed to work just fine, but seeing as how he stated to use that, I need it in there. I think it is working now, just very slowly. I'll check my equation from my notes again and maybe the time steps. 
a plot drawn at each time interval?? but you have 1000 time steps... just create a 3D plot so you can plot time, temperature and location in one figure.
It's what the professor wants. I have it figured out now. with the 0.1 time step it takes too long to progress. I increased the time step and it looks much better now.
I have r2017a if that would work
I'm not sure what kind of stuff you have, but you can plot a spectrum of a freq response distribution using two simple commands: sys = frd(data, freq) spectrum(sys) Commands: [frd command](https://www.mathworks.com/help/control/ref/frd.html), [spectrum command](https://www.mathworks.com/help/ident/ref/spectrum.html) If you only input two frequencies, you are going to need a response to accompany this, otherwise you have no y-data to go with your x-data. If you input a start and end freq with the input command, you're still going to need to load your response, and its going to have to be in an array of identical length to your freq. Basically, if you have a 0:0.1:1 frequency array, you're going to need a 0:0.1:1 response array.
I just taught myself some of the basics of GUI a couple weeks ago for fun, so i'm not an expert by any means. Also, not quite sure what objective oriented means, butI will do my best to help though! Basically, the .m file for a blank gui tool will have 3 functions. Dont touch the 1st one. The 2nd is the function that is executed when GUI is first run. its gonna say _OpeningFcn. Not sure wgat 3rd does yet. Each callback element added to gui will add a corresponding callback function after the initial 3 fxns. They are executed only when the user activates the element in gui. What was the most challening for me is to remember that all variables in your main function are local, and dont exist in the gui tool file. Thus, any data needed for output in your function file needs to get assigned to an appropriate handle in gui tool. Hope this helps a little!
hmmm. There is [`scipy.spatial.distance.cdist`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.distance.cdist.html#scipy.spatial.distance.cdist) (and `pdist`) but I am not sure about speed or the ability to only give sparse results (which can be a BIG factor in large data sets). Looking through the `IPDM` code, it seems all they do is (a) rely on `bsxfun` which is already done in NumPy with broadcasting and (b) break it into chunks and process from there. I bet you could implement something similar and even throw `multiprocessing.pool` at it (could do `parfor` in matlab but the overhead and load time is painful to me). It doesn't seem to bad, but I guess it also depends on how much you care and are willing to do the work. Especially if, in the end, it is no faster (or worse, slower). There are *many* reasons to move to Python but execution speed being one is heavily task- (and code-) dependant
alright.... let me come up with something that gives you the 3 dB at 6 and 21 Hz. I am assumming your data is real data and not complex data
You want to use bwlabel to find connected components with neighbors 
wow, I just spent hours trying to figure this out and there is literally just a function that does is for me. Could you tell me what the 'connectivity' means. The documentation just references 4-connected objects and 8-connected objects. What does that mean?
4 connected means no diagonals. 8 connected means diagonals
A hand? You mean the positions, the muscles, the forces, the tissues, what? Simulating the whole thing and every individual component would take a team of people a year, using an enormous amount of measurements.
There usually are no general rules to these. Lots of Matlab functions were integrated piecemeal, by different developers at different times. You're best off just looking at the help page for any given function, they'll list all the input argument arrangements you can use.
Try starting with -softwareopengl and see if it works. If it does, you probably have an issue with your graphics drivers.
If your regions are labelled correctly, then you shouldnt have a problem. normal label matrix: 1100220033 1100220033 problematic label matrix: 1100110022 1100110022 
You could take a look at some hand reconstruction projects. Quick google led to this: http://www.jerde.net/thomas/hand_functions.html Edit: just tried it out. You can generate a random hand like this: draw_hand(rand(17,1)*50) 
It seems that way. What weird is that it is giving me non integer values of the perimeter for shapes that should have integer values, for example the image [1 1] has a perimeter of 1.96 apparently, while the image [1] has a perimeter of 0. I recreated the image in the example (the T shape) and it has a perimeter of 34.66, and I can't figure out how it is computing that number. 
MATLAB computes the length of the chain code (=perimeter) with the following factors: even line: 0.98 diagonal line: 1.406 corner: -0.091 [1 1] has 2 even lines: p=2*0.98=1.96 
Okay here is iteration two... Here is the code for the design that seems to work fairly well for the parameters you have provided.... https://pastebin.com/T4EbfeYd Definitely feel free to play around with the parameters such as alpha, N (number of filter taps), etc to fine tune the filter design. Your filter will end up in h. If you run the code as-is... you will get a bandpass filter that has this type of performance.... http://imgur.com/3uZmMIt I am going to drop some buzzwords in case you want to look up more information about this filter design technique. I am designing your filter using a root nyquist filter. I am sampling the root nyquist filter in the frequency domain and inverting it back to the time domain. I hope that helps. As you can see this filter design gets a little closer to what you need. I am an engineer by training, so usually in practice we develop a spec on how close the filter needs to meet your design criteria, and that's something you need to figure out. As you can see the current filter is -3.3 dB at 6 Hz and 21 Hz. Is within 0.3 dB good enough? Another way of putting this is that the true 3.01 dB points in this filter is at 6.15 and 20.8 or has a bandwidth of 14.65 Hz which is an error -2.3%. Good enough? If you want to get a filter with this design technique to be spot on 3.01 dB at 6 and 21 Hz, you will need to relax some of your design parameters. One thing you can do is increase your tap size to 500. This will make your cutoff frequencies become cardinal, and when your frequencies of interest become cardinal you have complete control over where they land with this design technique. You will also have more control over the pass band shape if you take your oversampling ratio from ~33 down closer to 1. If this doesn't meet your needs, there are a few more techniques we can do. They just require longer bits of Matlab code. I have settled on this particular filter design because the matlab code is short and easy to understand or get to an understanding with little or no DSP background.
I'm confused, you shouldn't be sequentially adding data to the datastore. The datastore Files property should be pointing to all of the data. It can be a single file, a bunch of files, a directory, etc... But either way the datastore doesn't actually contain the data, it has pointers to the data and instructions (via the read function) for how to load it one chunk at a time. Can you provide more info about your data, like the general format, size, number of files, etc...? 
Thanks, I have another question, if you can answer it. I've binned the data in such as way that certain bins are wider than others. Is there I way I can set it so that it display all the bins with equal width. Below is what I mean [ 0.0010 0.0025 0.0050 0.0100 0.0250 0.0500 0.1000 0.2500 0.5000 1.0000 2.5000 5.0000 10.0000 25.0000 50.0000 The way it is right now, I can't really see the .001 or .0025 bins because they are squished by the larger ones.
I don't understand the question. Where do you want to display this array? In the command window?
I mean when I used hist3, I use that vector above to define the edges on one of the axes. [Here's a picture](http://imgur.com/a/ByiBp) Feed rate is the axis that I want to change. Notice how, close to 0, all of the stuff is super squeezed together, I want to stretch it out and make the smaller bins visible.
axis([xmin xmax ymin ymax zmin zmax]) more info: https://nl.mathworks.com/help/matlab/ref/axis.html#inputarg_limits
Hi there! Firstly, good effort on your code, it's an ingenious first approach! First I'll explain how you could modify your code to work. Then I'll show you a different method which will hopefully seem simpler and more readable! You essentially want to reshape your result back to it's original width. Matlab has a function to do this for you, type "doc reshape" into the command window to see more! logic_row = (hdata(:,3)==num); logic_index = logical(ones(size(hdata)).*logic_row); mdata = hdata(logic_index); mdata_matrix = reshape(mdata, [], size(hdata,2)) Or all in one line as you seem to prefer! mdata = reshape(hdata(logical(ones(size(hdata)).*(hdata(:,3)==num))), [], size(hdata,2)) You can however logically index into the rows of hdata directly and return all the columns. This should be more efficient and more readable! mdata = hdata(hdata(:,3)==num),:) Hope this helps!
You don't have to use hist3 to make the actual plot... you can have it return the histogram data (i.e. the count of how many elements of the input matrix fell into each bin) and use bar3 to display them yourself. e.g. N = hist3(X); bar3(N);
"completely random image"
Randn, I suppose. 
40% reduction
 imagesc(Matrix2D) quiver(position_x,position_y,vector_x,vector_y) %similarly quiver3 for 3d plot3(x,y,z,'.') %for sparse 3d data
Thank you so much for your help!! If I have any additional question may I feel free to PM you? Thank you so much again!
It's so simple to do with copy/paste that I can't imagine automating it would actually make it any simpler. 
Its SEGY data. Basically, it is a single large binary file. The .sgy data I am using atm is ~60gb (though SEGY files can be terabytes for larger projects). There is a little flexibility built into the format, but typically these will have the following properties: * uses IBM floating point (big endial) * starts with a 3600 bit header to define the shape of the data and leave some brief text comments (ascii formatted) about how it was collected. * main data is broken up into columns. Each column has data recorded at a particular location for some length of time (typically 2-6 seconds at 250 or 500 Hz sampling). Each starts with a 240 bit trace header to define things like X and Y position. The data file will contain many of these (millions, billions for larger files). So, the data is laid out: Main header (3600 bit) --&gt; trace 1 header (240 bit) --&gt; trace 1 data (??? bit) --&gt; trace 2 header (240 bit) --&gt; trace 2 data (??? bit) --&gt; ... --&gt; trace N header (240 bit) --&gt; trace N data (??? bit) To read just the data, you first need to read the necessary bits from the header to get the layout of the file (or manually define these), then skip over the initial 3600 bit header and 1st 240 bit header, and then read the data with "fread". Use the "skip" function of fread (set to 240 bits) to skip reading the 240 bit trace headers and only keep the data. Once the data is read (as uint32) convert it to IEEE floats. &gt; I'm confused, you shouldn't be sequentially adding data to the datastore. The datastore Files property should be pointing to all of the data. This is essentially the problem. As far as I can tell, Matlab makes a temporary version of the file being read in memory (or at the very lease requires them to be present in pagefiles), and then clears it after the data was read and a memory map (or whatever the "tall" equivalent is) was generated. This means that if you cant temporarily fit the file into memory+pagefile space to read it then you cant read it. This means I need to figure out how to tell tall to not read the ENTIRE datastore in one chunk. The "readSize" property seems to do this for some of the other datastores, but is not an option for fileDatastores. Also, to clarify: it is not the initial call to "fileDatastore " that causes problems, it is when that datastore is used to generate a tall matrix that problems arise. I suppose this means I could manually split the data into multiple datastores and then try and combine them in the tall matrix with "eval" or something, this isnt really something I want to do. I also imagine that this would screw up the delayed execution optimizations (since it optimized how many sweeps through the data, I imagine the data all needs to be in a single datastore). I could also manually split up and re-save the source data files, though if I have to do that every time I cant to use a datastore with then it really isnt worth the effort (and the wasted disk space) imo. Getting it setup with a single datastore that can be partially read is really the only "good" option that I can think of that would work well. Edit: Also, on a side note: getting windows to allocate more pagefile space than its typical limit (3x the physical memory) would also work for this case, but really wont work for datafiles that are much larger than what I am using currently. I would also likely be running those types of files on Linux machines rather than my personal windows computer.
Some IDEs have this. I use intelliJ stuff and the python editor has this. I use it pretty frequently actually it is very nice. Its called 'extract method'
just the positions. I want to build a wire frame drawing the goes from start position of a closed hand to an open hand.
Thanks, this is great.
What does size(speed.signals.values) return?
First, I've found an error in the code. I meant y2=mean(speed.signals.values) I'll edit the post. size(torque.signals.values) returns 80003 1 size(mean(torque.signals.values)) returns 1 1 Is the problem here? 
I'm talking about the speed, not about the torque :P
I was trying to plot the mean value of the speed on the torque graph :D. I want to plot the torque and its mean value. Now (thanks to your advice) I noticed that size(torque.signals.values) and size(mean(torque.signals.values)) are different. How can I solve this?
So it seems, that you used the wrong variable at first and now that by using the mean of the torque signal, instead of the speed the mean now works. Problem is now that it won't show up in the figure right? That is because you are plotting just a single data point, instead of a vector of numbers. A solution to this would be generating a vector, same length as x, which all contain the same number y2. &gt; y2_plotvar = zeros(size(x)) + y2; &gt; plot(x, y1, x, y2_plotvar) This creates a new variable called y2_plotvar which first creates a vector array the size of x and then adds number y2 to it.
Now it works! Thanks a lot!
Yes... feel free to PM. Good luck.
I use the microsoft's visual studio and they have this feature as well for the .NET based languages. They call it "extract method". Very fun and easy to use. I have a feeling they probably copied it from the eclipse programming environment as what little I have used of that programming environment I have found the tools their are very useful and they just work. I don't know of way to do this with the standard matlab tool chain, but perhaps there are some third party matlab editors out there that that do this. 
So in that last one you are basically using the vector indexing syntax for the first dimension correct?
Cant figure out what this is supposed to mean.
Why does it do it like this? Is there a reason for those numbers specifically?
Is there an advantage to this?
This just defines the limits of the axis, I want to somehow change the scaling.
Using version R2017a the code you wrote seems to work at my PC (although it can be a bit hard to see due to the size of 53.4514972*log(cosh(518.2067*x)) @x=0.32 ).
I'm running the same version, and when I use it it plots 518.2067x by itself. I'm confused as hell
I would determine the ratio between number of rows vs columns I want (so in your case, you wanted 2x's as many rows as columns, so your ratio would be 2). So, you have `n` plots, and a ratio of `r` (say), so then you want `floor(r*sqrt(n/r))` rows and `ceil(n/num_rows)` columns. Then, you just call `subplot(num_rows, num_cols, 1)` and boom. 
 function [output1, output2, andstuff] = functionname(vectorvariablenamethingywhateveryouwant) output1 = mean(vectorvariablenamethingywhateveryouwant); output2 = max(vectorvariablenamethingywhateveryouwant); andstuff = min(vectorvariablenamethingywhateveryouwant); end This is basic matlab stuff, I suggest you look at documentation next time, it'll help you way better than waiting for people to reply in this subreddit
Have you tried parentheses? `@(x) (blabla)`
Yep
i'm very sorry, but i don't exactly understand what you mean considering i don't have the data or script. send me the script and data and i'll take a look at it. if you change the limits of hte axis to 0-10, wouldn't that stretch the whole axis out?
it would, but a. it would cut out the part at 50, I know it doesn't look like much is there, but I need to show that not much is there. And b. it wouldn't stretch it out enough, I need to see stuff a .0001. But its, fine, I found a more or less adequate workaround by using bar3 and plotting it myself, basically I just wanted the plot to not treat the bins as 'numbers' so much as just labels. I wanted the plot to display each of those bins at equal width is what I'm saying. Plotting it categorically works.
The best way that I know how to do this is using bsxfun. For example, say I have a 5x5 array and a vector of values, and want to check to see which element of the array are larger than each element in the vector. You would do: a=magic(5) b=[0:2:20] M=bsxfun(@gt,a,reshape(b,1,1,[])) M will be a 3-D array, where the 3rd dimension shows slices representing whether or not the condition (@gt check for greater than) was met for a given element in b. You can then combine these in different ways depending on what comparison you wanted. If, for example, you wanted to find points where the condition was met at least 5 times, you could do m=sum(M,3) &gt;= 5 Admittedly this isnt as straightforward as "standard" logical indexing is, but it is entirely vectorized and thus should be decently faster than a FOR loop based version (you gotta love bsxfun - it is arguably the most useful matlab function for generating efficient vectorized code imo). Also note you can devise more complicated checks by replacing the @gt with an anonymous function of your choosing, which pretty much gives you unlimited flexibility.
I'm just guessing, but based on your error it fails when it tried to make equation IMAGES, suggesting that matlab generates some sort of image of these files when inserting them into the Latex document. In general, any sort of plotting is disabled when running Matlab from the terminal, so I imagine if you want it to work you need to make sure that nothing is generated by making and saving an image. idk if this is possible or not, but thats what I would look into if it were me. If you know all the symbols you need before hand it may be possible to pre-generate all the possible symbols and then have the program stitch those together (loading and saving image data is fine, rendering an image on the fly is not). This might be more trouble than its worth though, assuming it is even possible.
Why do you need to say @gt, isn't gt already a built in function? Why make it anonymous? I don't get what this achieves. But then I also haven't used anonymous functions before in matlab.
But otherwise this is a really elegant solution, I would have never thought to use a 3d array
There's a keyboard shortcut for this. It's f1. 
As of 16b you don't need bsxfun to do this. There is now implicit expansion allowing a=magic(5) b=reshape([0:2:20],1,1,[]) M=a&gt;b; to give the same answer.
Check out the documentation for [bsxfun](https://www.mathworks.com/help/matlab/ref/bsxfun.html)...the way shown in my post above is the way that you call any function using bsxfun. Assuming there is nothing else if your path or workspace that is also named "gt" (and has a higher priority) then this uses the built-in gt. (you are correct though in so far as using the built-in version of a function is almost always better than a mfile version of it). In Matlab the @ command doesn't inherently mean that something is an anonymous function, but rather just means that whatever comes after it would be specified as a function handle. This can (and often does) mean it is linking an anonymous function, but it is also commonly used when passing one function to another function (like it is here and in functions like "feval"). I'm glad you appreciate the solution. The only downside is the extra dimension can be problematic if you have arrays with a huge number of elements, though since it produces a logical result it is far less memory than a matrix of equivalent size. If this was an actual problem I bet you could figure out a good way to sum out that extra dimension from directly within the bsxfun call without needing to ever store the higher-dimensional array.
This is true, though I tend to still use bsxfun to maintain compatibility with older versions of Matlab (2016a isnt that old, and I imagine a good number of systems are still using that or older). Ive run some speed tests and generally found the difference between them to be negligible, and though I havent carefully times every possible use case it doesnt appears that there is much of an efficiency difference either way. If you 100% know your code will never be run on 2016a or newer versions of Matlab then I'd also suggest using the built-in implicit expansion. If you're not sure though then bsxfun is the safer option and (though it is not as nice looking) it seems to be just as fast.
Well then your have to define inputs and outputs and put it back. I was hoping something that could do that for me
The bsxfun method was a good answer, but I figured I'd give my solution anyways, since it is a tad different. [indRow,indCol] = arrayfun(@(x) find(A&lt;=x), u, 'UniformOutput', 0); indRow and indCol will be cell arrays of the same length as u. Each cell array contains the row/col indices of the the elements of A that satisfy the inequality A&lt;=u(i), where i is the index of the cell array.
But it's so incredibly easy to do that. It takes like 20 seconds. You'd spend more time doing it with some kind if tool. Ctrl-x/ctrl-v **is** pretty much the ideal tool for this. 
I plotted these functions myself, using your code and Wolfram Alpha. In the region you've specified, they're pretty damn close to lines. 
&gt; Output argument "x_p" (and maybe others) not assigned during call to "pruefung_ausgedacht&gt;f_dgl". This one is easy. Kind of exactly what it says. Your function f_dgl has an output variable named "x_p" but nowhere do you actually compute it. You have a q_p, maybe you meant x_p? &gt; Error in pruefung_ausgedacht (line 182) [t,x] = ode23(@f_dgl,[t_start t_end],x0,options,str); According to the docs for ode23, there is no "str" input.
+ Thanks for the help! &gt;x_p Yeah, that one was indeed easy. If you look in line 189 and 200 of my code you'll see the mismatch. The function x_p = f_dgl(t,x,str) (line 189) expects a variable x_p somewhere in this function (to return it into the main function). However in line 200 I named the varibale to return the information 'dxdt'. Once I renamed this to 'x_p', it worked. &gt;str 'str' is just the name of a struct variable which I use in the function the ode calls. Just a handing over so that the function 'f_dgl' knows where some variables are.
Does it work if you omit the '-nodisplay' argument?
I was curious about how this compared to using bsxfun in terms of efficiency, so I decided to run some tests. I knew in the back of my mind that you could do something like this with arrayfun, but had always assumed bsxfun was faster. I decided to run tests on matricies ranging from [5x5] to [500x500], and where I selected 2% or 50% of the points to keep. I wound: * bsxfun is anywhere from 6-18x faster. The ~6x was for the 5x5 matrix, and the 18x was for the 500x500 matrix. The arrayfun based version fared slightly better for the case where 2% of the samples were kept than it did when 50% of the samples were kept. * considering the memory requirements for storing all the indicies: bsxfun is always better for the case where 50% of samples are kept (up to 18x for very small matricies, but ~8x for larger ones). When only keeping 2% of the samples bsxfun is better for matricies smaller than ~15x15 or 20x20, and then takes more memory for larger matricies). This makes sense, as the arrayfun method stores incidies kept in either 32 (or maybe 16 or 64 bit?) format and so storing 2% of the matrix this way is still more efficient, even though each index takes 16/32/64x more memory. Looking the results for the largest case I tried, the arrayfun method used ~3.1x less memory when only 2% of the samples were kept, which would seem to suggest that the difference per entry is 16x (asymptotically speaking, where other miscellaneous memory usages become negligible). PS i tyically dont put quite this much effort into random responses on Reddit, but I figured that this type of code would actually be rather useful to have around (especially since I have tended to focus on optimizing code a lot lately). So, i figured I would do it right. In case you are interested: [Here is a dump of the text data output by the code](https://pastebin.com/K2N3cM9B) [here is the Matlab code I wrote to do the comparrison](https://pastebin.com/FWhb93Fe)
Yes, works great now! I also added -nosplash to make it faster, but now it's perfect, thanks!
It sounds like you want the `image(x,y,C)` format of whatever function you're using to plot the map. You just use `x` and `y` to specify the location of opposing corners in the image. [Documentation for image() here](https://www.mathworks.com/help/matlab/ref/image.html?requestedDomain=www.mathworks.com), but it's similar for other functions you might be using.
as /u/Idiot__Engineer stated, this is pretty easy to do with "image" or a related command (I tend to use images a lot personally). You can also do this using "pcolor", which requires defining a meshgrid before calling the plotting function. For uniformly sampled data the imagesc function is easier to use imo, but for nonuniformly sampled data this is a really nice feature. There is also a kind of hackish way to do this that is tedious but not so bad if you only need to use it for 1 figure. After making the figure, type myFig=gcf will return myFig as a graphics structure that contains all the relevant info about the figure. You will need to get into the specific axis you want to modify, which can be done either through "CurrentAxes" or "Children". Children will show the axes for all subplots if the figure has more than one axes. You can now manually set the axes. For example, for the x axis, use "XLim" to set the range and "XTick" to choose where you want tick marks. Do this based on what Matlab thinks the axes represent, not what you want. After you have it looking the way you want in every way except for the actual numbers attached to the tickmarks, use the "XTickLabels" command to define a string that will override the text without changing where the axes is in the figure. Something like this: myFig=gcf % get figure handle for future reference myFig.Children(2) % try different numbers untill you select the correct axis. Things like titles and colorbars will also show up in the list of Children. myFig.Children(2).XLim=[100,300] % you said the data was getting plotted from 1-400, this would keep the center 50% along the x-axis myFig.Children(2).XTick=[100:50:300] % set 5 tickmarks equally spaced throughout the region myFig.Children(2).XTickLabels={['1e-9'],['1.5e-9'],['2e-9'],['2.5e-9'],['3e-9']}; % defines a STRING to replace each of the 5 axis labels. Give multiple strings at once by using a cell array, as is shown here. Note: making modifications like this is kind of a pain in the ass, and will almost certainly make Matlab incapable of applying its typical auto-alterations to the figure, so I only recommend this is you have the rest of the figure set and want to generate a final version for a report or something. It can be a fantastic tool to manually fix a few things that you couldnt find a way to do with the typical plotting functions.
I would still like to use mesh to display the data in 3D Currently I have my 400x400 array and i am using mesh(myarray) Currently the figure displays x=0 to x=400. Not sure if /u/Idiot__Engineer 's 'hackish' way is then the only way to do this?
May have to use your hackish way to do this, doesn't seem too bad either. Thanks for the suggestion!
[`mesh()`](https://www.mathworks.com/help/matlab/ref/mesh.html?requestedDomain=www.mathworks.com) also supports the `mesh(X,Y,Z)` format. It's slightly different though - this time `X` and `Y` need to define the location of each row/column in `Z`, so you will probably use a `linspace()` to generate the appropriate vectors.
The [gramm](https://github.com/piermorel/gramm) visualization toolbox does that kind of thing for you (whether it's about subplots rows and columns, colors, marker shapes, etc.). Look for facet_wrap() in you case.
This is great! Thanks!
Yes, thank you!
Don't know about Stateflow, but Simulink is an extra license you buy for Matlab. It allows you to program using "blocks" that represent different components of systems.
Think of Simulink as an add on for Matlab and Stateflow as another add on for Simulink. Of course each costs extra. 
What's the problem with this? 
Simulink is an add-on for Matlab that allows you to use graphical blocks to build your system. Think of LabView. However, Simulink sucks at conditional systems (think of *if, case* statements). Stateflow is another add-on that is great at logical stuff and can handle conditional statements properly. Combining the two tools can be very useful. But none of them are free.
No need for a while loop: T = [-1 2 5]; % nx3 matrix TT = T(T~=-1); %subset to valid items tmp_index = randsample(TT,1) %grab a random one
Thanks a lot!
thanks
thanks
So this question's been answered already by the others but I would grab simulink if you can. Block diagram programming can be beneficial to you later on. 
Use find() to get the linear indices of values that correspond to the required condition: A(find(A&lt;0)) = B(find(A&lt;0)) Or index them directly in this case, just like you described actually: A(A&lt;0) = B(A&lt;0)
How about a partially de-vectorised approach? Can you find the intersections between your curve and the first 5% of itself? and then the intersections of the curve and the next 5% of itself? 
Oh boy. Is this viable? I actually had this thought, but to be honest it seemed so hack-y to me that I sort of dismissed it.
You have stated both &gt; if matrix A = -1 use value of matrix B where index A = index B and &gt; instead of looking for the corresponding row in B (which doesnt exist because theres no entry) Which seems contradictory; perhaps the confusion is coming from your use of the word "index?" As I'm parsing it, it looks like the sizes of a and b are equal, so any index in A is also an index in B. If this is the case, \u\xxluddixx's answer is pretty on-point. Your best bet now is probably: give us an example of the inputs and outputs. Be sure to indent so it comes out as fixed space. Something like A = [ 0 1 2 3 -1 5 7 8 9 ] B = [ 4 4 4 4 6 4 4 4 4 ] And what I want `A(2,2)` to essentially give me `6`. If that were the case, one way would be to concatenate those matrices along whatever dimension is one higher than the dimensionality of A and B, like AB = cat( 3 , A , B ) ; ind3 = ( A &lt; 0 ) + 1 ; Then, in your loop, you would simply have to reference output = AB( i , j , ind3 ) ; The trick used here is that that logical relation `( A &lt; 0 )` spits out 0 or 1, and I've added 1 to turn it into a double, so the whole thing becomes 1s and 2s; if A is less than 1, ind3 says choose layer 2 in `AB`, which is just B. If not, choose layer 1, which is A.
Thats what i'de do. It seems extremely viable to me, and I always think of hack-y as a pro more than a con :) plus it should be very straight forward do implement.
You'll get a better response if you re-format this to readable; two carriage returns before code, then indent each line four spaces. Judging by the funky formatting (italicized `%s`s I see), you're probably losing some characters. Next, upload a text file that exhibits the problem somewhere. Pastebin, dropbox, anywhere you can link us to so we can try it. Cheers!
A(1) does not equal [-1 -1 -1]. It is just -1. You can do this by altering A: A(A == -1) = B(A == -1) 
what is a carriage return
A new line. i.e. hit 'Enter'.
Are you guaranteed a certain maximum radius between subsequent points? Because if so, you can setup a quadtree to partition the space, find the k nearest neighbors, and use your repmat-based solution on the resulting (much) smaller set. [this](https://www.mathworks.com/matlabcentral/fileexchange/15562-k-nearest-neighbors) would work. If you aren't guaranteed a reasonably small maximum distance, treat it like a collision detection problem with a bunch of bounding boxes; [this](https://www.toptal.com/game/video-game-physics-part-ii-collision-detection-for-solid-objects) page highlights a few approaches. 
You're referencing arrays wrong; if you want the entire first row, you want `A(1,:)`. In this example, confirm that what you want as a result is A_final = [ 1 7 8 2 3 4 5 5 6 ] If that's true, \u\xxluddixx's solution is correct, and does not require a loop. If that is not correct, please tell us what you'd expect as the final result in your example above.
Show me what the output you expect from your earlier example is, **please**. Is what I posted as `A_final` correct? In what you just posted, you tried to perform a `for` loop on a matrix, and ignored the syntax. Then you posted an `elseif` without an `if`, and the `elseif` action was the same as the one for `if`. Please answer my question and we can proceed.
I changed the format
Tweak that one more time; you only need the double carriage returns before the first line. 
Also, we need a data file.
 Can you just create a loop through L? Something like this: % assuming A is your array NxMxL for i = 1:1:L function(A(:,:,i)); end
I could but trying to avoid for loop because slow and I'm working with big stuff.
There's no loop in there? Also, that output cannot come from the code you posted, since it involves variable assignments that don't occur in the code you posted. If this **is** inside the loop you're running, why do you have A(A == -1) = B(A == -1) there? Inside the loop? 
What does for A == -1 mean? Is that a loop? What do you think you're looping over? Have you read the documentation for "for"? 
No, that's not what that means. Read the documentation about for loops. 
You just reposted one of your own comments and then replied to it. Who are you talking to? As you've been told, you could simply do A(A == -1) = B(A == -1) prior to your loop. This uses *logical indexing*, which you can read about in the documentation. 
Why did you delete your comment? 
will be slower but could you do it as a nested FOR + IF loop? for i=1:length(Struct) if Struct(i).StructVAR10 == 1 &amp;&amp; Struct(i).StructVAR20 =&gt; 3 Struct(i).cellarrays = Cellarrays{x:y} end end otherwise could it be that you need to reference Struct.structVAR10/20 in your logical indexing? 
Can you post what you're setting s.f1 equal to in the second example? I assume the length of that single vector equals mxn? 
s is a NxM matrix. The field f1 is a scalar So s.f1 returns a comma separated list of scalars.
For-loops (normally) aren't slow anymore, and certainly aren't slower than `cellfun` (and by anymore I mean post 2015a). 
s.f1 with s as an array will be exactly the same as s(1).f1,s(2).f1,s(3).f1 %(etc etc) , the things seperated by commas. this means with brackets around it you'll get this: [s(1).f1,s(2).f1,s(3).f1 ]%(etc etc) which is, concatenating all the elements from the s struct as if s is 1 by (NxM). it also means you can do cool stuff with inputs to functions, since those are also things seperated by commas. if f1 is 1x1, you can reshape to [N,M] and it'll be fine, otherwise you might have to reshape more complicatedly. to get a feel for what is going on, check this out: s(1).f = [1 2 ; 3 4] s(2).f = [ 9 0 ; 10 11] s.f [s.f] %and lastly, not your problem exactly but i think its pretty cool: max(s.f)
What is the definition of the p-value? What would the p-value mean for a single coefficient of a multiple regression model? 
The problem is your function regress, try using lm() for a linear model but there are also other functions you can try depending on your data (fitglme is one I use in psychology). Look up the Matlab websites to see what inputs these functions require and typing "summary(model_name_here)" will return a summary including the p values for all coefficients 
A p value for each coefficient would say whether that variable significantly predicts variance in the y variable. Very useful when you're testing a model and only interested in whether a specific variable is important 
The p-value reported by the regress() function is the p-value for the joint restriction F-test of whether all the beta coefficients are equal to zero, i.e. does the model have any explanatory power for y. It sounds that you want to test whether each individual coefficient is statistically different from 0. In that case you need to perform a t-test on each beta. This is easily done using the regstats() function.
Actually following on from /u/moderneros's reply, it seems that the fitlm() function is much more user friendly than regstats().
Thank you! I tried the regstats() function as follows: stats=regstats(y,X,'linear','tstat'); But then, stats.stat.pvals contains only NaN-entries (as does the field stats.tstat.t). stats.stat.beta is Inf -Inf -10.0150 0.2065 22.9236 What went wrong? EDIT: I think I found the problem. In order to use my data for the regress()-function, the first column of X consisted of ones. I removed that column in order to use the data with regstats(). Now it returns the same regression coefficients as regress() plus finite p-values for every regressor.
+ This solution works great! thank you
How big is your array, and what kind of function are you trying to apply to each slice? 
You still have the other one. You have to open scripts explicitely through the executable of the new one. In Linux, it would look like running ```/usr/local/MATLAB/R2016b/matlab myscript.m```. Or just run ```/usr/local/MATLAB/R2016b/matlab``` from a terminal. You should remove the old symlinks from /usr/bin and replace them with the new version's. For windows, I'm pretty sure the executables will be in .exe format. Find the new one and open that, and then execute the script.
about 640*480*n where n can range from 30 to 100 to sometimes bigger. I'm applying bwlabel to each slice
Is cellfun particularly slow?
Yes. `cellfun` is fast for built in MATLAB functions, but slow for user defined functions. 
In Windows, right click on a .m file, go to "open with" and click on the newer MATLAB. 
Is arrayfun the same way?
I have tried this and it doesnt work :( 
[info](https://www.mathworks.com/products/matlab-online/limitations.html) says only: "Simulink Only command-line access to Simulink, via the sim command, is supported."
Yeah this is what I have been doing. I was just curious if there was a way to do it without opening the matlab application first. 
Get in the habit of creating handles for all of your figures, axes and axes elements and referencing them whenever you want to create or edit a plot. For example, when creating a new figure, give it a handle name hFig = figure; Now reference this figure to create a new set of axes in the figure hAx = axes(hFig); This specifies exactly where the axes will appear - in the figure 'hFig'. Now you can use the handle to the axes you made, 'hAx', to tell a plot function where to appear hPlot = plot(hAx, x, y) Now you can easily edit any of the parameters of the plot, or of the axes, by looking at what parameters each of them controls hAx hPlot You can now change things such as the Xlabel by referencing the axes handle hAx - telling matlab exactly which axes to apply the lablel. This can be done either with xlabel(hAx, 'mylabel') % or hAx.XLabel.String = 'mylabel'; With the handle to the plot 'hPlot' you can now change the appearance hPlot.Linestyle = '--' hPlot.Color = 'k' Or you can even change the data hPlot.XData = [1:10] 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) https://i.imgur.com/4UcSILe.png ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[state_of_imgur](https://np.reddit.com/r/u_imguralbumbot/comments/6i1huv/imgur_has_gone_to_shit) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dk36jhu) 
Please read our [rules for submitting homework questions](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/). 
So i tried symsum it worked but i wanna try with sum code. I tried this but i failed. Please help me :( sumofk=1; for k=1:Inf sumofk= sumofk + (-1)^(k-1)/k; end fprintf('value is=%d\n',sumofk) 
Thanks this is useful.
I won't give you a complete answer yet, but I will help you out a bit, if you're still stuck by this time tomorrow then I will give you a working solution. Break the question down. Answer it in parts and then bring it altogether at the end. 1 - write a bit of code that adds the numbers calculated by the function in the range k = 1:100 2 - take that same bit of code and stick it inside a while loop that checks to see if the error if less than 0.05, where error (for now) can be defined as Error = ln(2) - Value_calculated_by_function; 3 - Collect the values of Error in an array, and collect the k value at which the error difference is satisfied 4 - plot that array and make the plot pretty Hope this helps - if you're still stuck then remind me tomorrow =)
I just can't connect range with the loop. Cuz there is 1 more thing about relative error. It is Absolute Error = Approximate value-True value(1). Relative error=Absolute Error/True Value. I can solve entire question on paper but can't solve on matlab. Help me if u can this night i've been trying for 2 hours already
For your initial idea, you just need to edit the YTickLabel property of the scatter plot. scatter3(X,log(Y),Z); ax = gca; % Get axis handle ticks = exp(ax.YTick); ticks_label = strread(num2str(ticks),'%s') % Convert vector of tick values to cell array ax.YTickLabel = ticks_label; Edit: Had to fix some things, because fuck working with cell arrays lol
You have to set it as the default application for this type of file.
Don't have my computer handy to test this, but I think you should be able to change the yscale property (this is possible in 2D plots; I think it still exists in 3D) scatter3( X , Y , Z); set( gca , 'yscale' , 'log' );
Subtract the two curves and solve for the root - many canned root finding routines in MATLAB. If you don't have an underlying function to evaluate, you can either fit or interpolate the curves before solving for the root.
First, congrats on having sense enough to provide us something we can run. This helps immensely! Second, to format code, put a blank line before the block in question, and indent all the lines with four spaces. Reddit handles the rest. Third, line 3 is missing a `]` on the end. Now as for the actual problem: there are several approaches that are varying degrees of good; if the number of points is small, it's not too hard to brute-force it, and it's not too slow either; here is a working solution: close all clc x1 = [100 125 160 200 250 315 400 500 630 800 1000 1250 1600 2000 2500 3150 4000 5000 6300 8000 10000 12500 16000]; y1 = [78.7356572954256,77.5805793294875,87.8561585613984,89.0052461649312,83.1795731760717,83.0706347652194,84.9990131206695,83.0471230161222,80.0924319175453,78.8554286336098,78.2563963988425,77.2224466043564,80.6352477773274,85.1853581548739,92.9787714964508,89.3335862168224,90.0589444207274,90.5761523638718,87.1319314308317,77.9680235956309,62.1922825366780,44.9141767755889,43.9628028597588]; x2 = [250 500 1000 2000 3000 4000 6000 8000]; y2 = [ 56.5000 64.0000 54.0000 59.5000 86.5000 94.0000 102.5000 131.5000]; figure set(gca,'xscale','log'); box on xlim([100 16000]) xlabel('Frequency (Hz)','FontSize',15) ylim([-10 140]) ylabel('dB SPL','FontSize',15) l1 = semilogx(x1,y1,'g','LineWidth',1); grid on hold on l2 = semilogx(x2,y2,'o-r','Linewidth',2); axis tight curr1 = semilogx(x1,y1, 'k' , 'LineWidth',1); hold on curr2 = semilogx(x2,y2, 'k' , 'Linewidth',2); for i_1 = 1 : ( numel( x1 )-1 ) range_1 = i_1 + [ 0 1 ] ; curr1.XData = x1( range_1 ) ; curr1.YData = y1( range_1 ) ; p = [ x1( i_1 ) y1( i_1 ) 0 ] ; r = diff( [ x1( range_1 )' y1( range_1 )' [ 0;0 ] ] ) ; for i_2 = 1 : ( numel( x2 ) - 1 ) range_2 = i_2 + [ 0 1 ] ; curr2.XData = x2( range_2 ) ; curr2.YData = y2( range_2 ) ; q = [ x2( i_2 ) y2( i_2 ) 0 ] ; s = diff( [ x2( range_2 )' y2( range_2 )' [ 0;0 ] ] ) ; t = cross( q - p , s ) / cross( r , s ) ; u = cross( p - q , r ) / cross( s , r ) ; drawnow curr2.XData = x2( range_2 ) ; intersection_occurs = ... t &gt;= 0 &amp; t &lt;= 1 &amp; ... u &gt;= 0 &amp; u &lt;= 1 ; if intersection_occurs point = p + t*r ; fprintf( 'Intersection occurs at [ %0.2f, %0.2f ]\n' , point(1) , point(2) ) pause end drawnow end end If you have to do lots of points, this gets to be slow, and there are some sign-change optimizations you can do right out of the gate. Try it out and if it's too slow, look up collision detection.
The different number of points in each array can be solved by interpolation: x_min = max(x1(1), x2(1)); x_max = min(x1(end), x2(end)); x_interp = sort([x1(x_min &lt;= x1 &amp; x1 &lt;= x_max), x2(x_min &lt;= x2 &amp; x2 &lt;= x_max)]); y1_interp = interp1(log(x1), y1, log(x_interp)); y2_interp = interp1(log(x2), y2, log(x_interp)); Now, you can subtract the two curves and look for sign changes: idx = find(diff((y1_interp - y2_interp) &lt;= 0)); Finally, get the endpoints of the line segments: ls1 = [x_interp(idx)', y1_interp(idx)', x_interp(idx+1)', y1_interp(idx+1)']; ls2 = [x_interp(idx)', y2_interp(idx)', x_interp(idx+1)', y2_interp(idx+1)']; I did not try it, but I am quite sure it's working with multiple intersections as well. From here you're set to calculate the actual intersection point(s). Ps: The idx + 1 might change to idx - 1 depending on the sign of the change in y1_interp-y2_interp. 
Ok, it's been a while, you've had enough time to try out possible solutions. So here is a working solution, minus the relative error thing %% home work problem error = 1; sum_of_func = ((-1)^(1-1))/1; for k = 1:100 sum_of_func(k+1) = sum_of_func(k) + ((-1)^(k-1))/k; % error(k+1) = abs(sum_of_func(k+1) - log(2))/log(2); error(k+1) = abs(sum_of_func(k+1) - sum_of_func(k)); if error(k+1) &lt; 0.05 break end end plot(error); I didn't use a while loop in the end and instead opted for a nested if statement. I think it's easier to read. 
this is a great starting place. Thank you! 
Have you checked wether the system path is updated to the new version? 
Set and get are very helpful in learning to use handles. Set allows you to set handle properties or view possible values, if applicable. Get allows you to return current values from handle properties. For instance, using the handles from above: set(hPlot) % Show all properties for hPlot handle set(hPlot, 'Marker') % Show all possible marker property values set(hPlot, 'Marker', 'diamond') % Change marker to diamond get(hPlot) % Show current values for all properties for hPlot handle get(hPlot, 'Marker') % View current value for marker property for hPlot handle x_limits = get(hAx, 'xlim') % View current x axis limits x_limits(2) = x_limits(2) + 5; set(hAx, 'xlim', x_limits); % Increase right x axis limit by 5
Yep. Be sure to upvote if it helps you.
ok, but if i want the input to be like this: AB(1, 2, 3, 4, 5, 6, 7, 8, 9, 10) matlab then tells me : "too many arguments." and how do I get rid off "ans :" thing in the output? 
Starting in 16b there is a `contains` function which sounds like what you're looking for.
Done. Thanks! My colleague was happy to see the data
You can use regex to filter each line and see if anything is returned
Just use a single vector as an input. vector = [1,2,3,4,5,6,7,8,9,10]; [var1, var2, varetc] = AB(vector); or vector = 1:1:10; [var1, var2, varetc] = AB(vector); The semicolon at the end supresses the output to the console. If you are really desperate in keeping that weird syntax of having a lot of seperate input arguments of scalar numbers then you can do this as well: function [output1, output2, output3] = AB(varargin) output1 = mean([varargin{:}]); etc... The varargin will gather all of your inputs in a cell array, this is then split by using the accolades {:} to call all entries, which are then gathered in a normal array by the square brackets []. Yet again I highly suggest you read the documentation............ 
That took a few reads homey, add in the back-apostrophes around `contains()` so it's obviously a function.
[this](https://www.mathworks.com/matlabcentral/fileexchange/51165-matlab-file-association-fix) is the script which you seek. It fixes the registry; run it in 16b. I haven't used it in a while, so please let me know if it works! 
thanks this is useful
lmaaooooo do you just think someone is going to come along and do this for you? &gt; I am having trouble ... what are you having trouble with? What have you tried so far? There are plenty of built-in functions that can help with this. Read [this page on handling XML documents in Matlab](https://www.mathworks.com/help/matlab/import_export/importing-xml-documents.html) or considering hacking your own code together with [regexp](https://www.mathworks.com/help/matlab/ref/regexp.html).
It's called [implicit expansion](https://nickhigham.wordpress.com/2016/09/20/implicit-expansion-matlab-r2016b/) and is new for 2016b. 
Thanks for the quick reply! Neat feature, my discovery of it resulted out of a 'mistake' but I think I'll begin to use it more now
Thank you. That wasn't homework question actually i was just working. I missed the abs step thus matlab didn't work. Today i did it with while function that was easier i guess. Can i ask for help if i lost like this time?
It's awesome that this works in 2016b. It's a very natural operation, and previously you had to do it via bsxfun. 
You can get some of the background in these blog posts if you're interested: 1. [MATLAB Arithmetic Expands in R2016b](http://blogs.mathworks.com/loren/2016/10/24/matlab-arithmetic-expands-in-r2016b/) 2. [More thoughts about implicit expansion](http://blogs.mathworks.com/loren/2016/11/10/more_thoughts_about_implicit_expansion/)
Thanks for the info. The main issue is that MATLAB doesn't have native support for SEGY data, and attempting to import it via datastore isn't going to sidestep that since FileDatastore is really designed for large collections of small files that individually fit in memory. So I think you have some preprocessing to do before you can start using tall arrays. It looks like there are some external packages available for importing SEGY data into MATLAB. Have you tried any of these? Ideally you can use this functionality to chop up your data into smaller files, convert the data format to IEEE floating point, and then write out files in a format that datastore plays nicely with. 1. http://segymat.sourceforge.net/ 2. http://www.mathworks.com/matlabcentral/fileexchange/15674-seislab-3-01 
&gt; The main issue is that MATLAB doesn't have native support for SEGY data, and attempting to import it via datastore isn't going to sidestep that since FileDatastore is really designed for large collections of small files that individually fit in memory. This certainly appears to be the case, though I kind of think that it is completely ridiculous that Matlab's main function for dealing with big data is so utterly useless when dealing with any custom file layouts (I'm ignoring the fact that it works with in-memory files since if you can fit the file in memory, chances are it doesnt qualify as "big data". Hell, even the ~60gb file I'm dealing right now isnt really big data...its just a trial run. When it gets to real-world production the files could easily be 10-20x that... I admit im not super familiar with other "big data" sources, but I have to believe that there are a good number of these fall into the category of "non-standard files with very large individual file sizes". Maybe I am mistaken though. &gt; So I think you have some preprocessing to do before you can start using tall arrays. It looks like there are some external packages available for importing SEGY data into MATLAB. Have you tried any of these? &gt; 1. http://segymat.sourceforge.net/ &gt; 2. http://www.mathworks.com/matlabcentral/fileexchange/15674-seislab-3-01 So, I feel I should first clarify that I have everything I need to do everything without using tall arrays at all. I was/am main interested in using tall arrays not because I *have* to, but rather because it seems like it might be a good way to automate some parts of the workflow and speed things up to not having to load--&gt;process--&gt;save smaller chunks of the dataset. I had hopes that it might also give a decent speedup since in addition to minimizing I/O it would allow me to use operations that were vectorized at the dataset sc (which quite simply isnt possible when you are only have a part of the data saved at one time). That said, I have used both segyMAT and seisLab before. In fact, the main segy data reading and writing functions I am using were originally based on those in the segyMAT package (though I have modified them so much I double they share more than a couple lines of code at this point). Unfortunately, the reading and writing functions that come in those packages you linked arent very good. They are both horribly slow, and in the seisLab package I always had trouble using the .sgy files written by seisLab with any seismic processing program other than seisLab (segyMAT seemed to do this OK though, hense why I used their functions as the starting point for my own custom version). Ive been slowly updating these functions for months and its proved to be a rather time consuming process, but I think it has been worth it considering the speed I gained. I was curious so I decided to run a quick test to see how much improvement Ive actully gotten. I setup a test to read 250,000 traces (each trace has ~750 samples), making this set of traces represent ~750mb, or just over 1% of my testing dataset. The segyMAT package has a few available reading functions, but in this test I used the main one called "ReadSegy". I found: * The segyMAT function took 257 seconds --&gt; expect 5.5-6 hours to read the entire 60gb full segy file * my modified method took ~17.3 seconds --&gt; expect 20-25 minutes to read the entire 60gb full segy file The most impactful change I made dealt with how trace headers were read. This is starting to get off topic, but in case anyone comes across this and is interested in knowing how to improve segy read/write: the issue with trace headers is that they change format between uint16/int16/uint32/int32 format multiple times throughout the header. The straightforward method where you read one at a time in its correct format is horribly slow. Currently, my method either: * a) uses the "skip" feature in "fread" to skip over reading these all together (if you enter a flag indicating you dont need them), or * b) Reads them all in a "binary blob" thats the same format as the data (typically this is 60x uint32 values, since IBM floats are read as uint32's). Save all read data as a matrix, where each column has # trace samples + 60 values. Once they are all read, strip away these 60 values from the matrix, and then go through it row-by-row and apply an appropriate [typecast](https://www.mathworks.com/help/matlab/ref/typecast.html) operation to each row to recover the actual header values. A bit tricky to set up, but having [fread](https://www.mathworks.com/help/matlab/ref/fread.html) run on a single sequential block is soooo much faster, and the last part is pretty quick since its vectorized and the 60 trace header samples is almost negligible compared to the number of data samples per trace. &gt; Ideally you can use this functionality to chop up your data into smaller files, convert the data format to IEEE floating point, and then write out files in a format that datastore plays nicely with. If this was for a personal project that I was unlikely to use more than once or twice then I would likely end up doing something like this, but I'm developing this to eventually get added to a production application. As such, including something like this {i.e., something that requires saving a 2nd copy of the dataset that has no purpose (expect for allowing you to load the data, which should not require this)} isnt really an option. I am also concerned that something which literally required a major modification is almost certain to have more bugs scattered throughout, and I simply dont have the time (and am not familiar enough with using tall) to find them all. Ive appreciated your suggestions, but at this point I think the realistic solution is "do something else and see if they add this functionality into a future version of Matlab". I am sure that as the software matures these (and other miscellanious issues that would undoubtedly arise from using fileDatastore with large files that it clearly wasnt designed for) will get worked out, it is just a mater of when...
/u/FrickinLazerBeams kind of mentioned this but doesn't clearly state it, so I'll reiterate: **You can get this exact same functionality in Matlab 2016a and earlier, but you will need to replace every instance of it in the code with the equivilant [bsxfun](https://www.mathworks.com/help/matlab/ref/bsxfun.html) expression.** bsxfun and post-2016b implicit expansion are effectively identical in terms of functionality and efficiency, its just a matter of replacing the "straightforward" mathematical operations that are being implicitly expanded (like "./") with the bsxfun verion. For a simple example: a=randn(4,1); b=randn(1,5); % MATLAB 2016b and later c=a./b; % MATLAB 2016a and earlier - use bsx fun c=bsxfun(@rdivide,a,b); Personally, I still recommend sticking with the bsxfun implementation so that you dont have to worry about compatibility issues (should you ever run your code on another computer with an older Matlab version). As I said there doesnt seem to be a performance difference, its just a bit more tedious to code up (but by no means drastically more difficult).
did you try help regress and edit regres and then search for the fourth output (rint) argument and where its created?
The documentation explains each of the output values. What part of the documentation wasn't clear to you? In general, f(x, y) will not be the same as f(y, x). That's true in programming and mathematics, and regress() is no exception. 
It's very laborious to read unformatted code, so most people won't bother. It's also difficult to pick though a large piece of code. You would get more answers if you isolate the portion of the code where the problem occurs, and just post that, or a simplified analog that illustrates the problem. You can also make reddit properly format your code by putting 4 spaces at the beginning of each line: Like this. A*B. The process of producing a simple example to illustrate the problem will also require you to do some if the basic debugging steps that will help you solve the problem on your own, which is a valuable skill and something that you should make an effort to do before asking for help anyway. 
Jesus, was it really necessary to post all that raw xml? I can't even scroll down to see the comments. Have you made any attempt to solve this yourself? Searched for xml parsing tools in the doc or on the Mathworks website? 
About that second question! We pondered this a couple months ago but finally we realised that when doing regression, your minimising the distance in the y direction, and not the orthogonal distance (which is minimised when using a pca to fit a line). 
I don't really see the relevance. It's a trivial fact that reordering the inputs of an arbitrary function will not, in general, give the same output. 
&gt;, in general, 100% true, but we're fitting a line and not doing a general function. 4 of us were confused for at least half an hour why regression specifically did not give the same results when the order of the input changed, I can imagine that OP had a similair issue.
At the very least, where f() is a fitting function, you'd expect to get the inverse slope and the intercept would go to -b/m where b is the original intercept and m the original slope. But this is a programming language, where the inputs may not even be numeric. Maybe the second input indicates the dimension along which an operation is performed. In that example the output of the function would be dramatically different upon an interchange of inputs. 
Speaking generally, those spikes almost look like asymptotes. That would indicate an issue like dividing by zero.
This work! Thank you so much! 
Be sure to upvote that shiz
Also, since you have an Imgur link to the plots (thanks!) please provide the data. This could be correct behavior depending on what the value of that `(B.*cw)` is doing, but we can't tell; if it gets antibody small at those points (zero crossing perhaps?), there's the issue.
On mobile so can't check your code but could be worth using 'try' and 'catch' functions if you aren't already. That way it won't error. 
When you regress y on x, you're solving for the line that minimizes (y-Xb)^2. When you do come up with that line, it can't be perfect , and those tiny distances that each point are off from the y-xb line are called residuals. Theoretically those residuals are randomly generated with a mean of zero and a variance of sigma squared. The rint shows the likelihood that that's true. There's a 95% chance that the true mean of the residual is between the lower and upper bound on rint. So if that range does not contain 0, it means it's highly unlikely (&lt;5%) that the true mean is zero and therefore that data point is not generated by the same process. So those are your outliers. Switching y and x comes up with a different rint because the residuals are then x-yb rather than y-xb. Tl;dr see which pints have rint ranges that don't contain 0. Those are the outliers. 
What does the documentation say? Does this demo file have any comments in it? 
You could convert it to a single instead of double datatype, but that would save memory, more than time. If you need your code to run faster, your options, really, are to make your code more efficient or use a fundamentally more efficient algorithm; or use parallel or GPU computing if it's applicable to your algorithm. 
Create a time vector with the times relative to each other (i.e, [158 159 200 201]) then edit the plot axes tick labels to correspond with the correct time (i.e., times after 1:59 should be labeled as their relative time minus an hour).
It says the stack is empty. Can you figure out why?
Function handles can be a bit tricky. Did you try to loop over x instead? For i=0:10 BL (i)=f (x (i),Re (i)) End Edit : Also, * is more for matrix operations but will work on vectors aswell. .* is for array multiplication i.e element per element. Be careful of dividing by zero in your function when x=0 
How would I convert it to a single? The single function requires a non-complex input, doesn't it?
Ok I figured out what was going on with the spikes. Sometimes the B term in the u formula would cross 0 just by chance. Then matlab tries to divide by 0 and you get those asymptotic spikes that showed up on the graph. Thanks for being awesome Matlab community. I'll keep this here in case anyone wants to laugh at my short brained code or offer suggestions for improving.
In your function, try changing "/" to "./", i.e to this function f=f(x,Re_x) f = (5.2*x)./sqrt(Re_x); end and see if it helps. 
Thanks, that did it, I can't believe I spent hours trying to figure it out. At least I know I was on the right track.
This would be pretty easy to test in the console. 
Thank you
I was trying to put it in a nice way, I've already tried it and it didn't work. 
Sure does! single(1 + sqrt(-1)) ans = 1.0000 + 1.0000i 
Huh okay. I tried it with an already with a whole matrix but I must've done something wrong. Thanks!
i wrote an e mail to the developers: Dear Taiko, there was a typo in the file, please update the toolbox and this problem should be solved. Best Regards, The Support Team 
This is unnecessarily rude. I've never used XML in my life and I needed a few pointers.
Thanks for being rude for no reason.
This community is immensely helpful and caring when people post for help, IF they at least tried something before posting "help" with the contents of their data. 
It is possible. I've implemented things similar to this using custom S-Functions with embedded coder. Do you need it to work in simulation as well or only on a target? You can also do it using stateflow.
I was rude with quite good reason. This post borders on spam, with so much raw xml in it that I can barely scroll down to the comments; and it offers no insight into your difficulty, with no effort to solve the problem on your own. 
That sounds about right for Matlab; in terms of modern disk space, that's not even very much, barely larger than a couple of HD movies. For comparison mine comes in at 11.1GB on disk. You probably have a lot of Add-Ons installed that you don't need, though: from the Home tab, go to Add-Ons -&gt; Manage Add-Ons, and uninstall stuff you'll never use. Given how expensive licenses are though, usually it's in your best interest to install everything you can when it's available. Are you trying to cram as much as possible onto a small SSD or something?
got it: info = imfinfo('Bla.JPG'); x = info.DigitalCamera t = getfield(x, 'ExposureTime') f = getfield(x, 'FNumber') s = getfield(x, 'ISOSpeedRatings')
A more common notation is to just use: t = x.ExposureTime; f = x.FNumber; s = x.ISOSpeedRatings; or in your case t = info.DigitalCamera.ExposureTime; f = info.DigitalCamera.FNumber; s = info.DigitalCamera.ISOSpeedRatings; https://mathworks.com/help/matlab/matlab_prog/create-a-structure-array.html 
You know you can just use struct fields directly in other calculations, right? 
There is never a good reason to be rude. I did try to create code MATLAB code myself, and it didn't work. Why post wrong code? You don't have to look at my posts anyways. K Thx. 
I don't see a point in posting code that doesn't work. If you didn't like my post, just don't look at it. There's no need to be a jerk. 
Well without posting any evidence of your own effort, or anything that indicated what you might be confused about, I'm not sure what you expected. There are numerous bits of information about how to ask useful questions, and what to expect from the people here (hint: don't expect us to do your work for you). If you failed to make the effort to understand that, don't blame us. Kthx. 
But here's the thing. No-one held you at gun point and forced you to respond. You didn't have to say anything. But instead, rudeness. It's unnecessary and a waste of time. Just like posting bad code that doesn't work.
Of course I didn't have to read it. I read and post here to help. If you don't want to help us help you, don't expect great responses. Posting no evidence of any effort is rude. You can go on whining about how it was "a useless code" but you're the one who was asking for help, not me. So if that's the hill you want to die on, have fun. 
The problem is that a quick Google search would have set you in the right direction and you probably wouldn't have needed to make a post here. I did provide you with resources to learn how to handle XML files. 
Honestly, the most simple implementation is what I am ok with for now. I need to read LIDAR data from a serial port (as I described earlier) and from this data convert it into something readable to humans. I know Ill need an S-function to do the latter, but unfortunately I dont think I can use the simulink blocks, as the commands to command the LIDAR are ASCII, but the data is streamed in binary with no headers.
I'm just trying to clear out some disk space, as I'm moving over to a computer with only 256 G. Thanks for the quick answer!
It's in the "callback" property of each element in the figure. You can change it with the GUI editor, or with set(). 
This is absolutely a machine learning problem. I'm not sure how well Matlab implements their machine learning libraries but there is a widely used python library called tensorflow that is used for machine learning tasks like this. In fact, I am sure this is a solved problem, there is probably a speech recognition network already trained that you could just run and spit out your results.
Do you absolutely need responses to be verbal? You could easily code manual responses and their reaction times using PTB. Analysis of RTs and accuracy isn't very complicated even if you use verbal responses. Like /u/idiotsecant said, verbal word recognition is a machine learning problem and is a rather tricky endeavor. If you go that route, recognition is going to be the hardest part. Then you have to determine the onset of the speech signal from the ambient noise for RT analysis. After that, every thing will be ready as pie. That said you could easily have participants pressing up, down, left, or right and record those responses in PTB and have MATLAB doing all the analysis after each trial.
Maybe matlab's own [interactive data brushing](https://mathworks.com/help/matlab/ref/brush.html) could help (although I'm not sure how it behaves for image plots). EDIT : surf() plots are apprently supported.
I've tried that, except there doesn't seem to be any way to record the indices of the brush
I've noticed difficulty when I'm using a computer with a sub or graphics card. If you use a standard picture format (jpeg, png) it should be better. What kind of graphics card do you have?
Geforce GT 730
Download this: http://de.mathworks.com/matlabcentral/fileexchange/28518-xml2struct Then run this: temp = xml2struct('the_data.xml'); len = length(temp.Data.Complex); frequency_data = zeros(len,1); imag_data = zeros(len,1); real_data = zeros(len,1); unit_data = cell(len,1); for k = 1:len frequency_data(k) = str2double(temp.Data.Complex{k}.Attributes.Frequency); imag_data(k) = str2double(temp.Data.Complex{k}.Attributes.Imag); real_data(k) = str2double(temp.Data.Complex{k}.Attributes.Real); unit_data(k) = {temp.Data.Complex{k}.Attributes.Unit}; end if you want to use your data as a complex array: complex_data = complex(real_data,imag_data) PS: Please think about posting your previous attempts, even if they failed, since they might help us understand what exactly isn't working and what you are trying to achieve. For better readability you might consider posting your data on https://pastebin.com and linking it here.
Yes, you can create empty axes just for the legend. When things get complicated, subplot isn't that useful anymore. I tend to instead create my own axes so I can control exactly (pixel by pixel) where everything is.
I think you might like SPM? http://www.fil.ion.ucl.ac.uk/spm/ https://en.wikibooks.org/wiki/SPM/DICOM Not sure about writing DICOMs, I generally use it to import, process and write to different format
This is the case, because the fouriertransform of this window function has an infinite number of zeros. So your window function in time domain is f(t) = 1/2 (1 - cos(2 π t)). If you plug in the definition of the fourier transformation, you get (integrate from 0 to 1) F(i ω) = ∫f(t) e^(- i ω t) dt = 19.74 (e^(-i ω) - 1)/(ω + 39.75 ω³). Which gives an absolute value of |F(i ω)| = 19.74 √(2 -2 cos(ω))/(ω + 39.75 ω³). Which, of course has an infinute numer of zeros (at every multiple of 2 π). And this is exactly what you see in your plot. A magnitude of zero corresponds to -Inf dB.
So how would I do that? I would need the legend to refer to one axis but be located in another it seems.
Some the plugins that come with Fiji, the scientific image toolset, have MATLAB interfaces. I used Bio-Formats for importing .czi image stacks which sound similar in format to DICOM
I'd make dummy plots in the legend axis and base my legend on that
The princeton MVPA toolbox comes with scripts for importing dicom files.
is there then a way to not display the dummy plot?
Could you post / upload a sample surface map / matrix? What are the defining characteristics of the 'line of either a hill or valley'. If you can very clearly see it when you are plotting it as an image (and there's not a lot of similar looking clutter) it is likely there is an easy way to extract it automatically using something like diff and find or an image processing toolbox function.
I think I understand why it becomes 0, but then why does the built-in *hann(L)* function not yield 0 in the places the *fft* function does? Somewhere along the line, it doesn't follow the pattern it is supposed to, as it seems at those specific points (I think they are called negative poles) the magnitude is 0 instead of the supposed value... It can't have anything to do with the absolute value, nor the dB-magnitude transformation (line 34) so it gotta be the fft... (Also it seems I didn't clearly note that I am using the time-discrete Fourier Transform for the task, not time-continuous)
Plot it outside the axis range?
You can do this with imfreehand, i.e: figure, imagesc(mat) h = imfreehand m = h.createMask() figure, imagesc(m)
You need to define the t and l vectors with input values and compute the E(t, l) for every combination of t and l which gives you t by l matrix of output values. Then you can use a 2D plotting function such as HeatMap(); or contourf();. Something like this: t = [1 : 1 : 1000]; % input time vector l = [1 : 1 : 2000]; % input length vector E = zeros(length(t), length(l)); % allocates the output matrix C = 1; for i = 1 : 1 : length(t) for j = 1 : 1 : length(l) E(i, j) = (C * t(i) / 2 * l(j)) ^ 2; % computes the E for every t and l end end %HeatMap(E); contourf(E); % plot the values result: https://i.imgur.com/JNEJjME.png
Wow, I understand the concepts of those Functions now. Thanks !
You could also do this with a `meshgrid` and then just do an element-wise multiplication, instead of needing loops. 
Did you try the compact option in savefig? You can also try to use surfc.
Well, the built-in function does also do this. If you look at the [help page](https://de.mathworks.com/help/signal/ref/hann.html), you have the actual plot that you are trying to replicate (where they open the `wvtool`). In their picture, you can also see the "spikes" going down to negative infinity. They stop at some magnitude (e.g. at a magnitude of about -80 dB for the last two spikes), but this is just due to the discretization-error of the discrete-time fourier transform. They just did not hit the frequencies where the magnitude actually is zero. (Or they avoided them on purpose, so the plot looks nicer.) You code is right. It produces the plots that you want to see, no errors there. Concerning discrete-time fourier transform (dft) vs. continuous-time fourier transform (cft): I'm aware, that you do a dft. But this is just an approxination for a cft. Using the dft, you just pick some frequencies to evaluate the fourier transform. Whereas using a cft, you calculate the fourier transform for ALL frequencies. So you loose informarion if you do a dft. If you want to know what is really going on, you have to do a cft. There, you may get a closed form of the fourier transformed function (as I got in my previous comment) and can hanve a look at what is really going on. If I did a dft, I would probaply not have seen the zeros and known for sure, that tha mangnitude has to be zero for some given frequencies. So, if you are not sure what is going on with your frequency-domain-curve, try finding a closed form of the cft. There, you can have a look at the structure of the equation and validate your dft-result.
This kind of stuff is basically what I wrote the [gramm toolbox](http://fr.mathworks.com/matlabcentral/fileexchange/54465-gramm--complete-data-visualization-toolbox--ggplot2-r-like-) for (alson on [gitHub](https://github.com/piermorel/gramm)). It is a kind of ggplot2 clone for Matlab. You will need to reorganize your data so that gramm can understand it but it will do exactly what you want, taking care of the universal legend as well... What you'll need is to put your data in a long format, using separate variables to define subplots and colors, like this: run | parameter | data 1 1 [1xm] 1 2 [1xm] 1 3 [1xm] 1 4 [1xm] 2 1 [1xm] 2 2 [1xm] 2 3 [1xm] 2 4 [1xm] You'll also need to provide an x input of size 1xm (or organized like data if you don't use constant m). Then your entire code can be replaced with: g=gramm('x', x ,'y', data ,'color', parameter) g.facet_wrap(run) g.geom_line() g.draw() Note that run and parameter can be given as cellstr, and the actual strings in the cellstrs will be used to generate the automatic legend and subplot titles.
Unfortunatley yes, the responses need to be verbal; The previous experiments I programmed all used manual responses, just as you said - usually I use the function KbCheck to get a timestamp for the reaction time calculation, but my boss explicitly told me that there won't be any manual feedback. He is a psychologist, not a programmer so usually when some of his ideas aren't feasible we look for alternatives together, so when this one doesnt work its not the end of the world for me; its just good to know what direction and effort this would take according to you and /u/idiotsecant. So anyway thank you for you for your response, I will take this advice to my boss and will see what we can make of it.
Thank you for your response; After scanning some of the Github pages for tensorflow I think I can confidently say that this exceeds my competence, so I probably will tell my boss that its not feasible to implement something like that, at least not for me; maybe I can pass this on to the software engineer of our department.
Ah, that makes total sense, thank you very much!
Let me clarify, I don't want any external programs, I want to write the code myself. 
Yeah I was going to suggest KbCheck. Good luck figuring out how to get a timestamp from verbal responses. It might be as easy as setting a threshold and timestamping any sound that exceeds that threshold and then doing recognition for accuracy. Or it could be a real bitch, who knows. Feel free to PM me - not that you'll need to. You sound like you know what you're doing pretty well.
Yeah here, http://imgur.com/a/C5sl2 The darker region in the middle is a valley, and this sample happens to be flanked on either side by a slight bump. Sometimes the whole thing will be raised instead of lowered.
Thanks
No I didn't I'll try that.
This is exactly what I want, thank you. (Well rather, it pointed me to what I want which was imrect but whatever). Now all that's left is figure out how to create a matrix that just has the area of what is covered by the mask.
Doesn't seem too complicated to parallelize the filter process and use another variable to keep track of each frame. You just need to add an extra step after the filtering and before the reconstruction so that you sort each frame in the original order. There are a lot of different ways to do this on the fly, so if you post code it may help to see what the best way would be.
Default is only one repeat. There are options (usually, I think, passed via 'statset' structure) that alter this.
Sorry, I'm probably not understanding what you want to do, but is this what you're hoping to achieve? [Execute MATLAB Functions from Java](https://www.mathworks.com/help/matlab/matlab_external/execute-matlab-functions-from-java.html)
Would that be MaxIter in statset, do you know? There does not seem to be a minimum iterations option on the list.(https://uk.mathworks.com/help/stats/statset.html)
Sorry, it is hard to understand your second sentence. But you make your t up to 0.32. Then you fix xlim from 0 to 9. Your v expression does not have any l. Is this your problem?
I don't think so. The line after .32 is missing in both plots. The functions make sense, I think it's an issue where the points are overwriting the previous ones because of a vectorization issue, but I'm not sure.
Maxiter is the number of iterations before the algorithms give up when eg they don't converge. I believe knn has an initialize option, that defaults to a determistic starting position. Not sure if you can tell it to try multiple random configurations. On my phone on the train so can't check for you sorry
I think the first comment was right. Try `whos` and check that your `s` and ˋv` are not just scalar..
V looks to be a scalar. None of the input variables for that equation are vectors so that is just posting a single point. Try just plotting V instead of both of them. If the plot looks empty, V is a scalar.
So how do I fix it? I'm absolute shit at matlab coding
Your little v equation is missing the little L vector it is varied along. Look back at your base equation and see where it is missing. If you send the base equation, not code, I can maybe help more efficiently.
It means you did not write the functions properly! Maybe you swapped the ˋl` (small L) with `1` (one) in both ˋv` and ˋs`?
I'll try it when I get home, I'm out with some friends right now. Thanks though.
if you change the line `plot(l,v,'g-')` to `plot(l,v,'g.')` your plot will appear. But please, don't just do that and move on. Try to understand why (if you type `help plot` you'll get a clue, namely this: &gt; If X is a scalar and Y is a vector, disconnected line objects are created and plotted as discrete points vertically at X. ) Since your `v` is a scalar, you are plotting a bunch of individual lines. Since you're plotting connected lines instead of dots, nothing shows up. Most likely your equation for `v` is wrong. 
Thank you, I'll try that later 
What kind of mesh (surface/vol). If surface, convert to stl. If its a volume, you probably have to write your own (I had to write my own ANSYS one anyway). There may be some readers for common formats like NASTRAN though. Check their community page.
Yea it seems I will have to write my own. It would be volume mesh. Right now I'm trying to get gmsh file to a readable format by matlab before I start writing the simulation. I'm having issues with the felementa file not having consistent columns, any idea how I can deal with that?
Probably not, not sure what felementa is. That could be because surface elements have three vertices, while tet (and higher order) have 4+
Hello, first of all thank you for your answer. I've already saw this Engine. The problem is that I would have to rewrite every line of code and put Engine.theFunctionInTheMatlab. Secondly, this Engine is only available on JAVA (JDK), not Android (SDK). This is problematic.. But thank you again, it's very kind of you!
 for n = 1:2000 T = extractFrame(movie, 'frame', n); I = gpuArray(im2uint8(imadjust(T.getData()))); background = gpuArray(imopen(I,strel('disk',100))); I2 = I-background; I3 = imadjust(I2); I4 = imcrop(I3, rect); I5 = gather(I4); writeVideo(BackCorrect, I5); end Say I'm working with something like this, I'm trying to extract each frame (from an unfriendly data type) and recompile it into something better while doing some filtering and cropping along the way, while I could save each frame separately it seems like that would take a lot of time to create thousands of individually saved pieces, any ideas?
Substrings? A = "12345" B = A(1:3) # "123"
The problem is defining the start and end places, it seems like the easiest thing to do would be to count characters, if "d" is 1, "a" is 2, "t" is 3, so on, then I could pull out characters 6 through 9 and would get "2017" or 2016 or 2015, depending on the file.
To do it, you need to know the pattern. Is it always `data_yyyymmdd_hhmm`? If so, substrings will work just fine. You'd say `year = fn(6:9)` for example. Maybe it doesn't always say "data" at the beginning, but then it's always `title_yyyymmdd_hhmm`, then you could use [strsplit](https://www.mathworks.com/help/matlab/ref/strsplit.html). Just split it by `_` and then grab the parts you need
The Hough transform is what you seek. You my find that feeding `abs( imgradient())` of your image to `hough()` is the most effective.
it always says data, so it should be simple to do but I'm struggling to come up with the right function to use
never mind, I figured it out, and feel bit dumb by how simple it was.
I mean, I showed you how to get the year. Month would be exactly the same, except you get the position the month is in
thank you
Could you please elaborate? I'm not sure I understand. If you always have the same format, then this is trivial. If there are multiple, then you may have to do some more coding. But it all still skills work. 
Use regular expressions. That will let you parse based on a pattern (so you can grab the 4 digits after the first underscore, etc) The function you want to look up is regexp.
It was trivial and I figured it out now, I was just struggling sense I'm very unfamiliar with matlab functions.
look into fminsearch
And inside that, the option for "tokens"
Yup, fminsearch. In the future, it's a valuable skill to be able to search the documentation on your own. If you had opened the help browser and searched for something like "minimum", "minimize", "optimize", etc. you'd have found this answer much faster. 
Optimization toolbox has a lot of stuff, global optimization toolbox as well https://www.mathworks.com/products/optimization/features.html#defining-and-solving-optimization-problems The file exchange has some free options as well. For example if you know your blackbox is convex you could use gradient descent easily https://www.mathworks.com/matlabcentral/fileexchange/35535-simplified-gradient-descent-optimization If running time is a priority I would probably switch to using something like dlib (c++). dlib has python front ends, but if you really like matlab you can interface with mex fairly easily https://github.com/davisking/dlib/tree/master/dlib/matlab If your blackbox is fast and if you have some range you know a,b lives in you could just iterate over them and use min lol
&gt; If your blackbox is fast and if you have some range you know a,b lives in you could just iterate over them and use min lol This is exactly the route I am taking! Problem is my function is slow as fuck so I'll be waiting on it all night.
In the grand scheme of things, waiting all night isn't so bad ;) Machine Learning and Big Data deal with optimization problems that take months on many GPUs
If you want to be able to input any single vale, but use defaults for the others, look at using inputparser. It would allow you to do something like func(input1, input2 , 'input5name', input5value)
How many cups of coffee did you take to go on for 16 hours? 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/amaaggregator] [I just did a 16 hour session of Matlab coding, AMA!](https://np.reddit.com/r/AMAAggregator/comments/6oenqo/i_just_did_a_16_hour_session_of_matlab_coding_ama/) [](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))* [](#bot)
What does your Matlab IDE (if you use it) set-up look like?
What were you coding? How many lines? When is it due?
Not sure if it's what you need, but you can use ~ to skip returning specific variables.
I am one of his team members. It was due 2 hours after, right now (+2 gmt) we're waiting for the discussion. 
2 extra mega expresso coffee. This is the first time i saw our coder drink coffee. 
Do you even debug bro?
Consider explaining exactly what you did to get your desired result, so that anyone in the future who sees this is helped.
THANK YOU!
Have you profiled your blackbox routine yet? Any hotspots you can vectorize / optimize for runtime?
Input parser will do exactly what you want. But it is also cumbersome. If you just need quick and dirty input specification, you can do something like the following. It is *almost* as easy as it is in Python: %% Defaults param1 = 10; for iv = 1:2:length(varargin) eval(sprintf('%s = varargin{iv+1};',varargin{iv})); end I also have a much more complex example that allows for flags (`-flag`) and dashes: function parse_variables_boilerplate(req1,req2,varargin) %% boilerplate_parsing -- Input just param,value and -flag % % Usage: % % parse_variables_boilerplate(req1,req2) % parse_variables_boilerplate(...,'param',value,...,'-flag') % % Inputs: % % req1 : Value 1 % req2 : Value 2 % % Options: '-flag' or 'param',value with [default] and (type) % 'param1',val % [Default] (numeric) Optional paramever,value pair % '-flag1' % Optional flag. Sets to inverse of default % %% Parse inputs % Defaults. flags will be flipped param1 = 'Default'; flag1 = false; % Specify allowed flags to prevent accidental or intentionally changes to variables allowed = {'param1','-flag1'}; % Parse iv = 1; while iv &lt;= length(varargin) param = varargin{iv}; % Optional check: if ~ismember(param,allowed); error(sprintf('Unrecognized Parameter: %s',param)); % Or warning end % Replace `-` with `_` for params except first character if '-' param = strrep(param,'-','_'); if strncmp(param,'_',1);param = ['-' param(2:end)];end if strncmp(param,'-',1) % flag. Notice _ from above. Not - param = param(2:end); % remove - eval(sprintf('%s = ~%s;',param,param)); % flip the boolean else eval(sprintf('%s = varargin{iv+1} ;',param)); iv = iv + 1; % Extra increment end iv = iv + 1; end % Optional: Validation assert(isnumeric(param1),'''param1'' must be numeric') 
Was that for training?
For anyone who's interested filename = 'data_20170419_2030.avi'; year = filename(6:9); returns year as '2017', changing the (6:9) allows you to select the sequence of text that you want, I also used str2num to make the returned '2017' string be the number 2017, this can all be done in 1 step year = str2num(filename(6:9)) I hope this helps if you had the same question I did.
Didn't you know? Those 16 hours could've been avoided had you simply known about this one obscure and undocumented built-in function that does exactly what you did.
He tells the truth
Probably. But the project was about writing most of things from scratch. 
It was for a college project due this morning. 
Actually I did! In the bad way tho
It was a project for our annual college class (9cfu). We had a series of various exercises from the most basic stuff (function approximation) to more complex (at least for a peasant like me) like the pagerank, jacobi, gs, splines.. 
I actually used the built in Matlab "IDE" and sublime text.. What do you use? 
When did you become a masochist?
Uint16 can only be in integers, you need atleast "single" to be able to calculate the mean
to add to this, you're seeing the issues you're seeing because: case (1): only accepting integers between 0 and 65536, each part of the meanmatrix sum gets rounded down to 0 after dividing by 2212 case (2): again, only accepting integers between 0 and 65536, your values summed over 2212 matrix pages add up to something in excess of 65536 (hence turn into 30 after dividing by 2212). shouldn't have either problem if summatrix and meanmatrix aren't uint16.
If I converted to double would any data be lost?
Did I? 
When you find yourself wanting completely unique language features, you should ask yourself whether you might be trying to solve your problem in the wrong way. 
Printf 
You want classes. Each "globalSet" is a class, each global variable (in that set) is a property, and each function is a method.
Woah you're right. Good insight. 
No, only decimals will be added. Single allows for 8 decimals and double 16. The use of bytes by the computer for your matrices will increase dramatically. What you can do is convert back to uint16 after calculation, this will effectively work like the "round" function. Hope this helps
Never use (for-)loops for large matrices. Matlab is made to work with matrices. I would use "mean" to calculate the mean.
Try to make a table of your array, and then use writetable. 
Just keep this in mind. https://www.mathworks.com/help/matlab/matlab_prog/floating-point-numbers.html#bqxyrhp
Came here to say this. Good catch.
**getframe** and **movie** can do something like this (used to create animations of plots, but believe you can pause and view slide-by-slide). Maybe someone else has a better solution, but check out the documentation.
If I understand your problem correctly, all of the properties are functions of temperature only, so this should be easy. You need to write a function that takes temperature as an input and returns the heat flux. Put all of your property calculations inside that function. Then you use one of the Matlab solvers like ODE45 and send it a handle to your function. [T, Y]=ode45(@my_function,time_span,initial_temperature) If it works, it will return the time as T and the temperature as Y. That's the way way to use a built-in solver. If you want to do the integration manually, you will need to use a for loop.
You should be able to create a bunch of line/axes objects and flip through them by changing their "visible" property. Look into uibuttons or WindowKeyPressFcn to use either push buttons in the figure or keyboard commands to flip through your data. Let me know if that gives you any ideas, and here's the obligatory excuse that I'm on mobile at the moment. 
Just average along dimension 3 (for a gray image, not rgb). Done: v = VideoReader('xylophone.mp4'); grayimg = zeros( v.Height , v.Width , v.Duration * v.Framerate ) ; frame = 1 ; while hasFrame(v) grayimg( : , : , frame ) = rgb2gray( readFrame(v) ) ; end grayavg = mean( grayimg , 3 ) ; I used rgb2gray to do the conversion from rgb to intensity. MatLab converts these values to double to process them, so that's what it spits out. In this case, the input was uint8 so you could wrap a `uint8()` around it at the end to get that result, or multiply it by 2^8 to and use `uint16()`.
That sounds pretty solid, I'll give that a go and let you know how it turns out for me. Thank you What's in question is the mean convection coefficient, which is determined from the mean Nusselt number, which depends on the sqrt of the Reynolds number, which depends on density and viscosity, which depends on temperature. I used polyval to create a polynomial equation for Reynolds number from temperature because the relationship isn't linear 
seems to me like there are 3 subtasks here: 1. generating an appropriate grid of points in your parameter space to sample from 2. solving the quoted function for N 3. recording the results in some structure which, in particular, are you struggling with? 
solving for N with each change in parameter without needing to change them by hand every single time. with 5 parameters and 3 options (high, low or exact tolerance) its WAY too much to do by hand.. the other 2 things i know how to do
a simple (to code) solution there would probably be to set up a nested "for" loop over your parameter vectors and execute your "solve for N" code on the inside. e.g. if i have two parameters a and b, and want to solve my function at the given parameter values, a=[.1, .2], b=[1,2,3] -- something like this: for i=1:length(a) for j=1:length(b) atemp = a(i); btemp = b(j); **solve for N stuff here** end end
so i cant just make the variables a vector with the 3 variations before hand like this? B = [-.118, -.1239, -.1121] for j = 1:length(B) stuff for N end
sure, you can establish your parameter ranges beforehand and then loop over them. 
Are you storing each incremental value of e? It just seems like you're overwriting e each time. I haven't used Simulink in like 10 years so maybe I'm missing something. 
[gramm](https://github.com/piermorel/gramm) might help if you want to rapidly try to plot a bunch of conditions in different ways. It doesn't do flipbooks per se, but it can easily create new subplot rows and columns depending on separate conditions (grouping variables) with facet_grid(). More interestingly for you it can also create separate figures depending on a condition with fig() (while keeping other conditions for subplots, colors etc). If you store each figure you can flip through them using the recommendations from the other posts.
 [piermorel/gramm](https://github.com/piermorel/gramm) &gt; *Description*: Gramm is a powerful visualization toolbox which allows to quickly create complex, publication-quality figures in Matlab, and is inspired by R's ggplot2 library. As a reference to this inspiration, gramm stands for GRAMmar of graphics for Matlab. &gt; *Stars*: 97 &gt; *Forks*: 46 &gt; [Issues](https://github.com/piermorel/gramm/issues) | [Pull Requests](https://github.com/piermorel/gramm/pulls) *** ^(This is Earth radio, and now here's human music ♫) ^[Source](https://github.com/anaskhan96/github-stats-bot) ^| ^[PMme](https://np.reddit.com/message/compose?to=github-stats-bot)
Thanks for your reply - and that's good thinking. But from my understanding of the scope tool, I think it should be storing the value of 'e' at each time step to show how the variable increments over the simulation time. It does this with other variables I'm using when I have to overright them too, it just seems to have a problem with 'e' as it's originally from the base workspace. 
Can you explain what you're doing more? It seems that they're not really initial conditions if you're updating them every time step
As a note, Amazon aws has stopped supporting matlab computing and it was the same when i last checked. Mathworks was working on its own cloud computing service (it was beta back then), i dont know its current status. You may ask mathworks about it. I asked them for their cloud computing service once, filled an application form but no answers. By the way, google searches for matlab on cloud returns many pages from amazon and mathworks which are usually not up to date hence misleading.
Thanks for replying. And sure, these 'initial conditions' I'm talking about are the parameters which (in a theoretical model) would remain fixed during the simulation time. So they're defined by the user initially and used in the simulation to derive other parameters. In reality however, they do change ever so slightly throughout the simulation time. I know this change, and I simply want to update these parameters to provide a more realistic simulation for each time step. So maybe my use of the word 'Initial Conditions' is wrong in this sense. I hope this answers your question. 
Nevermind, found a work-around by storing the Hiragana alphabet as a string array in a .mat file and loading it in. This works even within the script. Cheers.
Here's a page about distributed computing, including cloud options. https://www.mathworks.com/products/parallel-computing/parallel-computing-on-the-cloud.html
Thanks for the suggestion on this. I known classes existed in Matlab for quite some time now, but just never really had the need / opportunity / time to really look into them. Based on your brief description though, they sound like they would do the job nicely (and I'm sure serve many other purposes as well, depending on how you use them. Unfortunately I'm probably not going to have time to really dive into them for a few weeks (deadlines on a project are coming up far too quickly), but do you have any good tips or suggestions (other than what was in your 1st post) related to using them? When I do get around to really trying them out I will go through the documentation thoroughly, but I might be able to make the time to try out a few particularly interesting / useful aspects of using classes now.
This is by no means a requirement for my developing a solution, but it is something I have found myself wishing was a feature throughout multiple different Matlab projects I have worked on. I mean you can get this functionality with nested functions, but for me personally I almost never think to develop with the intent of nesting functions when I am starting a project out. I only tend to think about it once the project has grown to include 10's of relevant variables, and I find myself spending huge sums of time working on passing variables to subfunctions that could be largely avoided if everything was nested in a single function or defined strictly in the main function and then passed to the others via the type of "pseudo global sharing" I talk about. At that point converting to using a nested function structure is usually more trouble than it is worth, so I just keep going forward with the approach I started with. AT any rate, another commenter suggested using classes to implement this type of functionality, so I will give that a shot when I have the time.
Check out [bsxfun](https://www.mathworks.com/help/matlab/ref/bsxfun.html). It is an immensely useful function for things like this (note: newer versions of Matlab can do implicit expansion with the standard operators). Note: you will have to add a few singular dimensions to the start of one of your matrices to make things work (the implicit expansion automatically adds all trailing singular dimensions, so those aren't needed). It seems like you want the final dimensional order to be: [1st dimension of A, then Gaussian, then 2nd dimension of A]. This would have the form bsxfun(@times,reshape(A,[N1 1 N2]),reshape(B,[1 M1])) 
Wow! Thank you so much! So awesome! =D!!!!
Glad to help!. bsxfun is definitely one of my all time favorite matlab functions. It is also extremely efficient, almost getting to the same efficiency as the blas/lapacke-based matrix multiplication operations. So, if you are working on something where optimizing performance actually has a significant impact on run time, then chances are bsxfun will be one of the most efficient ways to do the calculations you need to do (I have found this to be the case at any rate). As a side note: as I said in newer versions of matlab (2016b and later I believe) you can do this without bsxfun, though I'd still recommend using bsxfun to maintain compatibility wit older verions of matlab.
cellfun and arrayfun are also great for doing loop operations in a single line (for the relevant types)
Sounds like defining 'e' as a 'persistent' variable would be an option in this case: https://www.mathworks.com/help/coder/examples/working-with-persistent-variables.html Or just use e as a state of your system, ie have e + chg be an output of your simulink function, connect that to a unit delay block and connect its output to the simulink function. 
I know nothing about AWS and previous Matlab support, but I bet OP could save and write a quick Python script to do it on AWS. There are guides on installing NumPy on AWS. I know this doesn't really answer the question, but worth thinking about
&gt; 1e5 x 1e5 inverse in 5 hours using Amazon A direct inversion is O(N^3 ). if you do 50 times the input (5e6x5e6) you will take 125000 as long. Or [625000 hours --&gt; 71.3 years](http://www.wolframalpha.com/input/?i=625000+hours). These kinds of matrices do get "inverted" in practice, but usually with extremely optimized, compiled (C/C++ or FORTRAN) code on massive machine using some of the most advanced and latest algorithms. (I use quotes around "inverted" since it is some iterative solution, and not a direct solve). Also, many of the time, the matrix is structured/banded in such a way to be more optimized. To my knowledge, Matlab does use pretty advanced algorithms and they are compiled, but I highly doubt they can be parallelized to the degree you want (if at all) and I also doubt you could afford the computing time. (Not making grand assumptions about your resources, but a pretty safe bet) So to answer your other question: &gt; Is this possible? **_highly_** unlikely... But if you do manage to do it, please share and/or publish it.
There's nothing that can help you learn nearly as effectively as finding an actual problem to work on. 
Have you tried the Cody challenges on Mathwork Central? These test your programming skills in increasingly difficult tasks... https://de.mathworks.com/matlabcentral/cody/?s_tid=gn_mlc_cody 
except they're computationally equal or worse than for loops :O
[seriously...](https://www.google.nl/search?q=matlab+Any+idea+how+to+line+break+code+while+creating+a+vector%3F&amp;oq=matlab+Any+idea+how+to+line+break+code+while+creating+a+vector%3F&amp;aqs=chrome..69i57j69i60.791j0j7&amp;sourceid=chrome&amp;ie=UTF-8)
Yeah seriously. It's a 1d vector created inside square brackets. If I put ellipses in the compiler doesn't like it. 
have you tried clicking the link that is the word seriously, and then looking in the big bar at the top what it says and then reading the first link on the page you open when you click the link?
I know how to use internet search engines thanks, I wouldn't be asking here if I hadn't already checked. Thanks for your input but I don't think you understand the problem. X = [0 7 3 8 3 7... 7 5 8 5] Does not work.
 C = A(ismember(A(:,1),B,'rows'),2)
When I use this method, the result I obtain is C = [3; 1.7; 1.1] Which doesn't consider the order of elements in B, but just compares the values and gives the output in the order of A rather than of B. (The values in B are not from smaller to larger, but could be in any random order) I need the output to follow the element order of B as I need the results for each time step So the result should be C = [3; 1.1; 1.7] (The order is changed as per B) And it also doesn't consider if the values in B are repeated at any point
 A = [ 0 3; 1 2.5; 2 2; 3 1.7; 4 1.5; 5 1.3; 6 1.1; 7 1 ]; B = [ 0 ; 6 ; 3 ]; [zz, ww] = ismember(A(:,1),B,'rows'); [~,ind] = sort(nonzeros(ww)); C(ind) = A(zz,2); you shouldn't do element lookup with floating points anyways. Also uniqueness issues are a problem in this problem formulation.
providing code helps us helping you a lot :) . add a space : X = [0 7 3 8 3 7 ... 7 5 8 5] edit: also i'm sorry for not understanding Ellipses ment the multiple elipsis and not multiple Ellipse
You could create two smaller vectors then combined together like so: A = [ 1 2 3 4 5 ]; B = [4 8 3 9 2 4]; C = [A B]; You need to make sure the smaller vectors are orientated correctly. The ... operator can do the trick as well.
Ahh gotcha, thanks, I'll give it a whirl after lunch and report back!
Good insight thanks! 
The space before the ellipsis instead of after worked well thanks. No idea why my phone changed the ellipsis spelling although apparently both are valid as is elipsis or elipses.
What do you mean by "apply," exactly? Do you mean to add 20 instances of Gaussian noise to your matrix, so that each of your 20 layers is pretty much the same as the original 30x10, except for your Gaussian noise? Or do you mean a more complex linear algebraic form, where each layer is multiplied by a Gaussian matrix? Or do you mean to just scale each layer by your Gaussian noise? This is, as best I can tell, what you have defined. Note that this could be achieved by eliminating your outer `for` loop; that one is unnecessary in your example. And just to be clear, is your Gaussian a 20x20 matrix, or a 1x20 vector?
Think of 2 MIMO transfer functions. When you element-wise multiply them you are basically multiplying each SISO entry with the corresponding entry at the other and writing at the product entry. It is also commutative. The variable `GF` is the example of such product. 
Actually, the easiest way is one line with `kron`. I left out the `permute` you used, but all three forms are equivalent here: A_Matrix = rand( 30 , 10 ) ; Gaussian = randn( 1 , 20 ) ; for i = 1:10 for j = 1:20 B_Matrix_1(:,i,j) = A_Matrix(:,i) * Gaussian(j) ; end end for j = 1:20 B_Matrix_2(:,:,j) = A_Matrix(:,:) * Gaussian(j) ; end B_Matrix_3 = reshape( kron( Gaussian , A_Matrix ) , [ 30 10 20 ] ) ; figure for i_layer = 1 : size( B_Matrix_1 , 3 ) subplot( 131 ) imagesc( B_Matrix_1( : , : , i_layer ) ) subplot( 132 ) imagesc( B_Matrix_2( : , : , i_layer ) ) title( num2str( i_layer ) ) subplot( 133 ) imagesc( B_Matrix_3( : , : , i_layer ) ) drawnow pause end
I can guarantee that you really don't want me to type that sucker out. Just run the command and you'll see why.
What are you talking about? I'm asking for use cases if anybody needed such operation. I know what the code does. 
Ah, I didn't read that part. Nevermind, then. 
This is a general kalman filtering problem as opposed to a matlab problem. Here's an excellent site that explains it simply: http://www.bzarg.com/p/how-a-kalman-filter-works-in-pictures/
This is because the first dot is interpreted as being part of a numeric literal with the preceding digit. A digit followed by 4 dots would work, with the first being part of a numeric literal and the last 3 forming an ellipsis.
[removed]
hi there, the problem with many examples regarding the kalman filter is that they are explained in physics which i am totally blanking on. i saw there's a kalman filter function on matlab already hence i posted the question in matlab, was thinking someone might know something with regards to the function itself :) thanks anw
I dont understand your question. I see that your sample ends on the 7th row. Assuming you know the exact range, you could easily extract the data as A=A(2:7,:) for example: extract row 2 to 7 for all columns. If you want to keep extracting in 2 minute intervals, i suggest a for loop increasing in x amount of steps
That site is literally the simplest explanation using both maths and position/velocity which aren't a huge stretch of the imagination to think about. So I suspect its not the physics you don't understand, but the maths. Have you done linear regression before? Anyhow. Long story short, R is a weighting matrix for your measurements. (measurement uncertainty) Q is a weighting matrix for your equations. (Estimation uncertainty) What matters typically, is the ratio between the two.
This seems like the simplest solution thank you.
Yes i have, i will look at it again, thank you
Setting these two matrices is the really hard part when you design a Kalman Filter. As far as I can tell, there is no definite guide on how to set them properly. The measurement uncertainty (R) is the easy one. Usually you just set the diagonal terms to your sensor's uncertainty. Those uncertainties can be found in the data sheet. This should be suitable for most applications. The model uncertainty (Q) is the hard one. It tells how uncertain you are about the model. One example may be that you have some kind of oscillation but you did not put the damping into the model. This is ok, as long as you tell the filter that you are not certain that the model equations are correct. But how big you should set the entries of the matrix. In my graduation thesis I used an Extended Kalman Filter. There, I just thought about what I want to estimate with the filter and optimized Q according to the estimation (I set a structure to the matrix and than searched for the best matrix with fminsearch). But there are other approaches on how to set R and Q. The most wide-spread I came across was setting it according to the innovation (the difference between the measurement and prediction according to the model). Hope this helps.
I see, yes i was very confused with the R and Q as some studies set it to a constant and some just appear to get the numbers out of nowhere. Thank you
Why not check out the colour thresholding app which allows you to convert between different colour spaces to clear things up!
The table was a tiny fraction of the dataset more to illustrate what the date strings look like - sorry. The actual csv is roughly 96000 rows long, so going through and extracting multiple 2 minute (or 120 row) sections for each day is relatively labor intensive.
But does the time increase in a standard format? like say every 5 rows corresponds to 2 minutes. If so, you could easily use a for loop as mentioned to get the data u need
Ahh ok that makes a lot of sense thankyou 
&gt; some just appear to get the numbers out of nowhere. Even in applications where the Q and R matrices are well-known, oftentimes you will still fudge the values because you heuristically see some benefit to it from simulations.
Because if one is true, the other one is false, and so always either one is false. You need to run the loop while both are false: while tf == 0 &amp;&amp; tf_1 == 0 or, shorter: (as checking for 0 is redundant) while ~tf &amp;&amp; ~tf_1
Haha, but since I am writing a paper, I would need to state where i derive these values from. I cant possibly say: to keep it simple, lets make it a constant :/ Does this mean that a wrong Q/R could result in better results than a "correct" error estimate?
Wow, thats so obvious.. thank you for the help!!
If the noises are actually Gaussian, then you can prove that using the correct Q and R matrices will result in the optimal filtering in the least-square sense (the error will have the lowest variance). In practice, most noises aren't perfectly Gaussian, and so fudging the Q and R matrices will potentially get you better performance. There are other considerations too, such as numerical stability. Notice that one of the Kalman filter equations requires you to invert C x P x C^T + R. If the measurement noise is sufficiently small, then R will be small and this matrix can potentially be close to singular to working precision. You may want to fudge R to be bigger to avoid this. There are other methods, like the square root Kalman filter, to solve this problem as well.
This was very informative, thank you very much!
Coincidentally, I ended up doing a test on using bsxfun vs arrayfun for applying several masks to a2D array based on the values present in a vector (someone posted here asking about the problem, it wasn't just a random choice). * In general, bsxfun was between ~6x and 18x faster than array fun (I tested for matricies between [5 x 5] and [500 x 500] and for cases where 2% of elements and 50% of elements were accepted by the mask). * bsxfun also tended to have a significant memory advantage (for large arrays with 50% of elements being accepted by the mask it used 8x less memory). * The only possible situation I could find where arrayfun had any advantage was for large matricies (e.g., [500 x 500]) with not many elements accepted by the mask (2%), where arrayfun had a ~3x advantage in memory usage (though this was at the cost of a ~9x reduction in speed). This makes sense, since arrayfun uses a sparse array of integers whereas bsxfun uses a full array of logicals to determine which elements to mask and which to accept, so these requiring equal memory usage at ~5% or so sparsity sounds about right. At any rate, outside of a very few very unusual situations, you might feasibly expect an order of magnitude better performance from bsxfun than from arrayfun (for that problem anyways, idk how general that is). If your problem is big enough were you need to consider efficiency, its hard to go wrong with bsxfun. (As I side note: I saw somewhere that in some test or another it was nearly equal in terms of efficiency to using MKL/BLAS-based matrix operations, which is actually pretty remarkable considering BLAS is pretty much the gold standard for optimizing the shit out of something). In case anyone is interested: [text output of result data](https://pastebin.com/K2N3cM9B) [link to matlab code to run the test](https://pastebin.com/FWhb93Fe)
Have you come across dicomread and dicomwrite yet? If you're working in neuroimaging I would recommend you learn to prefer nii to dicom, but that's just me.
What you want is [logical indexing](http://blogs.mathworks.com/loren/2013/02/20/logical-indexing-multiple-conditions/). Logical indexing is probably the single most powerful, unique feature of MATLAB. I don't know your current data format, but let's say your current times are in a vector, that we call `t`. And let's say the start of your two minute window is in location `t(5)` then you can get the indices you want from your table by saying `ind_2min = t &gt; t(5) &amp; t &lt; t(5) + minutes(2)` and then if your data is saved in a table, called `A` you then can say `A_2min = A(ind_2min,:);`
So, you are learning an important lesson, and hopefully early in your career. If you go into an engineering field, or any math heavy field, you're going to have a non-technical manager at some point in your career say "do it with a Kalman Filter!" because they've heard of it, they've maybe seen the equations and it looks like a "magical technique" that you just "do it" and your problem will be solved. In reality, it's way harder than that. And really, the hard part is what you've found out: determining all of your matrices (like the R and Q, and in a lot of cases "phi" and H). These don't just come from nowhere, they are very difficult to determine. So to answer your question, there is no way to answer it without knowing more information about your system. It takes an expert in your system to know how to set them, not strangers on the internet
I assume that means that matlab can't determine if it's allowed to consider the entries of b independent from each other for the parallelism. You could try and play around with the way b is assigned. Maybe take the assignment of b out of the if block (decide the content beforehand and then have one single line with the actual assignment of b). If that doesn't help maybe try to switch the parfor to the inner loop to check if it gets hung up on the nested loop.
You could do a = find(); if isempty(a) a = NaN; end b(i, j) = a; This should avoid your problem.
To add to what others have already said: finding those values of Q and R is the actual time-consuming part of tuning a Kalman Filter. It is not unusual for them to be based on trial and error. However there are some computational methods that allow you to tune Kalman Filters in a more... "direct" way (you can read Van Loan *Computing integrals involving the matrix exponential* for an example of such methods). Keep in mind that those methods are not in any way general and won't give you the same performances for different systems (I don't know a single thing about Finance so I'm afraid I can't point you in a better direction). As /u/SatansKruemelmonster already told you, Q is the hard one. There are some papers out there with algorithms about estimating your process noise covariance though (Wang, Deng, Feng, Ma, and Xia's *An Adaptive Kalman Filter Estimating Process Noise Covariance* is one I've been trying to read lately but I haven't had the time so I can't recommend it to you 100%)
Easy, the problem is that in general you can only write to one index in the parfor loop. So it gets confused by `b(i,j)` having both `i` and `j`. To fix it, you just need to rewrite your loop so that you index it like `b(i,:)` which means accumulating values in the other dimension within the innermost loop. For example parfor i=1:length(direc) a = nan(1,length(time_data)); for j=1:length(time_data) tmp = find() % presumably this depends on j if ~isempty(tmp) a(j) = tmp; end end b(i,:) = a; end 
Thanks for the help thus far. It's not exactly floating. It's the data set I receive from a code running on another server. I need to correlate and send back the corresponding data set as per the inputs I receive. Any alternative to solve the duplicates/uniqueness issue ?? 
If you share the find thing, there's a decent chance (depending on what it is and how big your data is) that someone here can vectorise your code, eliminating the loops altogether and improving the performance an order of magnitude. otherwise nice job on the minimised code snippit to show your problem.
The easiest way to do this is the keep the inner loop as is but move it into a separate function. I have found parfor plays best when most the serial code is placed in another function so Matlab doesn't get confused about what's parallel and what's not. 
That's not an algorithm problem. What is the meaning if B has duplicates or even worse A has duplicates ? 
A has no duplicates. It's a set of data that is different for each row. A is 70000x2 with each row having different values. B can have duplicates because the same number can appear more than once in the input that I receive, and it's not something I have control over. B is nx1 (n being the total duration of data which is initialized before beginning the simulation)
do you know [csvwrite](https://nl.mathworks.com/help/matlab/ref/csvwrite.html) ? 
looks to me like there's something missing; i see no given matlab script, nor what matlap produces, nor definitions of a, b and l, nor any "programmed process"
Well shieeet, that's useful. Unfortunately, my MATLAB syntax game is weak. Can you give me some pointers on how to make a crude loop of the commands there and loop it 1000 times? Not sure how to use a for(n) loop for simply running multiple instances of something... other than perhaps filename numbering.
assuming you have the stuff you wanna test in the cell arrays in the tr struct this is what you probably need: for i = 1 : numel( tr.trainMask) trainTargets = targets .* tr.trainMask{i}; valTargets = targets .* tr.valMask{i}; testTargets = targets .* tr.testMask{i}; trainPerformance = perform(net,trainTargets,outputs); % Compute a score for the training data valPerformance = perform(net,valTargets,outputs); % same for the validation data testPerformance = perform(net,testTargets,outputs); % same for the test data outData = [trainPerformance valPerformance testPerformance] csvwrite('datOutputFile.csv',i,0) end 
you can't control which duplicate in B, the entry of A should correspond to without extending your algorithm to handle these things. I don't think your problem can be set up with a simple look-up because otherwise the code I've given should have suffice. 
You are right, i am going to try to find the script.
Will give it a shot. Much appreciated.
I think with problems like this, it's better to start off by understanding the problem rather than immediately trying to reduce it to code. Think about how the rules combine with each other. What are the rules of the rules?
The rules are a =&gt;, b =&gt; c, c =&gt; where c depends on b so c should be before b as it depends on it. The result should be a sequence that positions c before b, containing all three, abc. is that what your asking?
That doesn't make any sense to me. Renewed licenses last a year.
Licence timouts happen when you lose connection to your licence server, for instane when you close your internet connection, or close your licence server. I think i remember seeing a licence timout error when my computer went on stand-by too, which is confusing. 
Well it's not that the license isn't active it's just that the license get's released I guess.
Is `=&gt;` an operator? Is it a string you're given? What does it mean? If you're given `x =&gt; y`, does that mean `x [goes after] y`? :EDIT: Please note you also say &gt; then the rule b&gt;=c Note that `&gt;=` is NOT the same as `=&gt;`. I can't tell if this is a typo or not. You don't seem to be consistent in your problem statement, which is making it hard to follow what exactly the problem is, what you're given, and what you're expected to provide. *A formal problem statement would be really helpful.*
Ok, that might be what's causing it. I do lock the computer before leaving for the night to run these tests. I'll see if leaving it unlocked/not go into sleep-mode allows it to keep running.
Yes its an empty string of variables, the program should output a sequence that positions which order variables go in due to dependencies. I think ive just discovered someone i was miss reading. if a=&gt; , then it depends on nothing. b=&gt; c then it depends on c. c=&gt; then it depends on nothing. Just a weird way the question was asked. Im given b=&gt;c therefore x must come before b because it depends on it. 
You use: m_unworn=-1.*(dy_unworn./dz_unworn); %Normal to Nope, that's not correct. `dy/dz` is the slope. Negative one times the slope is just the negative slope. Consider this - if your slope is zero, then the negative slope is also zero. *That is not perpendicular*. If your slope is 10 degrees, then the negative slope is -10 degrees. *That is not perpendicular*. You need to take the negative **inverse** of the slope. Consider the following: x = 1:100; m = 0.1; b = 0; y = m*x + b; plot(x,y,'Color',[0 0 0]); hold on; plot(x,-m*x + b,'Color',[1 0 0]); plot(x,-(m^-1)*x + b,'Color',[0 1 0]); axis equal; You can see your method, negative slope, is not correct. The negative *inverse* slope is correct. Let's check the math! &gt;&gt; (180/pi)*atan(m) ans = 5.7106 &gt;&gt;(180/pi)*atan(-m) ans = -5.7106 &gt;&gt;(180/pi)*atan(-(m^-1)) ans = -84.2894 &gt;&gt;5.7106 - (-84.2894) ans = 90 Invert your `m_unworn` by inverting the operands: m_unworn=-1.*(dz_unworn./dy_unworn); instead of m_unworn=-1.*(dy_unworn./dz_unworn); %Normal to
Then I would try something like % Assume commandList is a cell array of strings; {'a=&gt;b','b=&gt;',etc.}; for i = 1:numel(commandList) commandString = commandList{i}; operands = strsplit(commandString,'=&gt;'); if numel(operands)~=2 continue; end dependent = operands{2}; target = operands{1}; % Do your replace operation here end This leads to a question - how should your algorithm work exactly? If your input string is `abc`, then the operation is straightforward for `b=&gt;c`, but what about `abcc`? Do you put `b` after the first `c` or the last `c`? What about `abbcc`? Should the output be `acbcb` or `accb` or `acb`? The problem isn't posed well. 
Ayy ni🅱🅱a, that's a quite 🅱eautiful 🅱 you got there. Now I have **0 🅱-bricks** in my storage. If each 🅱-brick was a meter-sized cube, then chaining them all together would go around the Earth **about 0 times.** --- *I'm a 🅱ot made by [this boi](http://reddit.com/u/haykam821). K?*
You probably need to talk to your IT admin
&gt; wtfamireading.jpg
This is the correct answer.
Thank you so much, working now. 
Like /u/Weed_O_Whirler said - you can use `meshgrid` to get a vectorized (faster) implementation of the math, and I would also suggest you check out `surf` (`doc surf`) for the plot - why bother with 2D plotting when your data is 3D?
Is matlab running while you are away from your computer? So long as it is running it won't timeout. If you are using windows 10, you can keep you computer locked, but don't let it go to sleep.
I can understand multiplying transfer functions, where the output from one is the input to another - `H0 * H1 = (Y0/X0)*(Y1/Y0)`, for example. What I can't understand is how exactly you would do that with a state space representation. This is probably why you can't find support for it within Matlab. I can't picture the math in my mind... Actually wait, I can. You just make a bigger, augmented system. Consider that the outputs of system 1 are the inputs to system 2, then you have: `y1 = C1*x1 + D1*u1` so `u2 = y1 = C1*x1 + D1*u1` The `u2` control signal maps to the system by the input matrix `B2`, so you wind up with: `[B2][u2] = B2*C1*x1 + B2*D1*u1` You wind up with a block/augmented matrix system: `[x1_dot; x2_dot] = [A1 , 0; B2*C1 ,A2] [x1; x2] + [B1, B2*D1][u1]` And then the output of the system is another block matrix, but again where your output matrix `D2` would normally just be: `y2 = C2*x2 + D2*u2` you have to remember that `u2 = C1*x1 + D1*u1` so you wind up with `[D2][u2] = D2*C1*x1 + D2*D1*u1` Giving you: `[y1; y2] = [C1 , 0; D2*C1, C2][x1; x2] + [D1; D2*D1][u1]` So, in total: `A_new = [A1 , 0; B2*C1 ,A2]` `B_new = [B1, B2*D1]` `C_new = [C1 , 0; D2*C1, C2]` `D_new = [D1; D2*D1]` `x_new = [x1; x2]` I think that should do it, at least for cascaded state space representations. But in general, you would solve whatever scenario you want the same way - write in longhand what the inputs and outputs are. 
Typically the error states what's wrong. The parenthesis are unbalanced. (i.e there's a ( without an ), or something like that.) Are you using implied multiplication in the eqn array? Also, what shape of array did you want? a row, or a column? I see your third and fourth equations in the eqn array are terminated with a comma versus a semicolon.
Any time you multiply two variables you need a *. So if you have a variable A and another variable B then C=AB will cause an error while C=A*B will multiply the variables and store the answer in variable C. 
also, a*(b+c) 
What I've done in the past is set up a color map object and plot each line individually with a for loop or something. If I remember right, by using the colormap command you could get a vector with the rgb values you want to use. Then you just use those in the plot command as normal. I might be remembering the details wrong since it's been a while. Also I make no guarantee this is the best or even a good in general way to do this, just saying what I've done in the past. 
I've had this question before. I found this post helpful https://ux.stackexchange.com/questions/94696/color-palette-for-all-types-of-color-blindness Basically try to use highly contrasting colors. Deuteranopia (red-green) colorblindness is the most common, try to avoid using reds and greens that have similar color intensity in the same color map. If you're unsure about a result you can 'simulate' color blindness using an app like this one: http://www.color-blindness.com/coblis-color-blindness-simulator/
OK, this gave me a good start. I got this method working, but as I'm sure you know it's a little unwieldy (since now I have thousands of individual plots instead of 2) but at least it does work. Thanks. 
Yeah, you should be able to have them on the same axes at least, but you're right, that is absolutely a drawback to doing it this way 
I already have the math in place but looking for use cases if anybody ever needed it. You need to extend your matrices a bit more. What you have is series connection this is not the same as elementwise multiplication. In my code you can compare your result with the result of `ss(GF)`
What is the physical meaning of an element-wise multiplication of two state space representations? I think that's why you can't find an implementation. How exactly would the math work out? What if you have a different number of states in the two plants? A different number of inputs? I thought you were asking about cascaded (series) plants because that's the only way your question makes any sense. I think element-wise operations between two state space representations is a nonsense operation, like complex poles without conjugates. Maybe it's mathematically possible, but that doesn't mean it makes sense or has any physical meaning. That said, I'd love for some source or explanation of how it *would* work. I enjoy controls and I've got an advanced degree, but I'm no Phd.
Edit your post to use a pre formatted text block, I bet you have the correct asterisks in place, but they're turning the "A" in to an italic. Regardless, your problem is that you open each of the entries in the eqns array with a parenthesis, but you never close it. Put a close parenthesis after the "==0".
Thanks you guys for the help, I made some corrections. But I am still getting an error. Error: File: HTexam.m Line: 17 Column: 7 The expression to the left of the equals sign is not a valid target for an assignment. Line 17 is the second to last line. Something is wrong with the equals sign? clear, clc gen=0; x=0.005; k=386; h=40; Tinf=30; T0=100; D=0.0025; A=(3.141592*(D^2))/4; p=3.141592*D; syms T1 T2 T3 T4 T5 T6 eqns=[(k*A*(T0-T1)/x+k*A*(T2-T1)/x+h*A*(Tinf-T1)==0),... ((k*A*(T1-T2)/x+k*A*(T3-T2)/x+h*A*(Tinf-T2)==0)),... ((k*A*(T2-T3)/x+k*A*(T4-T3)/x+h*A*(Tinf-T3)==0)),... ((k*A*(T3-T4)/x+k*A*(T5-T4)/x+h*A*(Tinf-T4)==0)),... ((k*A*(T5-T6)/x+h*((p*x/2)+A)*(Tinf-T6))); [A,bb]=equationsToMatrix(eqns,T1,T2,T3,T4,T5,T6); z=vpa((A\bb),6); 
I had to do something similar to this last year and ended up plotting the lines as individual points with the color parameter of each point changing throughout time. I picked a very small time interval between each point so the final result would still look like a line with a gradient of color along it. I think I still have access to that program so I can take a look if you'd like more details. 
As I've done with the code, imagine you have the 2x2 Transfer matrix elementwise multiplication [a(s) b(s)] * [e(s) f(s)] = [a(s)e(s) b(s)f(s)] [c(s) d(s)] [g(s) h(s)] [c(s)g(s) f(s)h(s)] This operation is well defined. And imagine I'm doing the same thing with SS equivalent systems. Both sides have SS representations and there is nothing forbidden doing the same thing directly via SS representations. `c(s)*g(s)` is can be written as first system 2,1 entry times second system 2,1 entry in State Space. And this is also well-defined. So if you work it out for the general case the pattern is visible. Different state numbers amount to having polynomials with different degrees. Transposing a system is also nonsensical but it has its own use in control theory. That doesn't mean it shouldn't be done. I use it for including different low pass weights quickly to each entry for example. And the question is about if anybody else needs this. Not if it would make sense physically.
crash course in colormaps https://www.youtube.com/watch?v=xAoljeRJ3lU
The answer is no, nobody needs this because (1) the math doesn't work except in some very limited cases, and (2) you still haven't explained what the point of the operation is. *What is the result*? *How would you use it?* Let's break it down: &gt; This operation is well defined. No it's not. If the two systems aren't exactly the same with regards to number of states, inputs, and outputs, then the fundamental math fails. What is the result of a 2x2 matrix multiplied by a 4x4 matrix? Also, what is the matrix operation after the "block-wise" operation? E.g., using your example, is `c(s)g(s)` also element-wise or regular matrix multiplication? It must be element-wise also because `B` is rarely square, so you don't have matching "inner" dimensions for an operation like `b(s)f(s)`. &gt; Both sides have SS representations and there is nothing forbidden doing the same thing directly via SS representations. Again, see above. If the systems aren't exactly the same, then fundamental matrix operations forbids it. &gt; Different state numbers amount to having polynomials with different degrees. Yes, but what's your point here? The operation you're advocating is like element-wise coefficient multiplication, like `(a*x1 + b*x2 + c*x3)(d*y1 + e*y2 + f*y3) = ad*x1y1 + be*x2y2 + cf*x3y3`. I struggled for a moment trying to put that together because I realized that it's not clear what should happen to the xN and yN terms. Similarly for your proposal, *what happens to the states*? Say you have voltage, derivative of voltage, current, and the derivative of current for states on one system (for a motor driver circuit), and torque and speed for states on the other system (for the motor). How many states are left after your operation? Two? Six? How do the states combine? &gt; Transposing a system is also nonsensical but it has its own use in control theory. That doesn't mean it shouldn't be done. I can see your point there; controller design vs. observer design, but (1) this is the kind of application I was asking for when I said I would love to read a publication on the operation you're proposing, and (2) the transpose only works out as a kind of fluke stemming from the similarity (duality) of the methods, and (3) you take the transpose *specifically* to make the matrix math work. Transpose the inputs then transpose the output, *because the matrix math doesn't work otherwise.* tl; dr - If you could address the specifics of the math for two different sized systems, as my drive-motor scenario, and/or explain what the result of the operation would be used for, then I could get on board. As it stands I don't think it's defined well and so nobody would use it. 
Please, size match is implicit. You can't also connect two systems if output of one doesn't match the input of the other. These are trivial details. Same with what would happen to states. What happens to states when you connect a LQ controller? Same problem; they all get jumbled up. State representations are unique only up to state transformations and that is only true if the models are minimal. Let's not discuss the math part, I really have all the implementation with many tests. That's really not a concern. I also have a PhD in controls. Math part I can assure you is sound. This operation is used in Hinf design all the time. It makes life a little bit easier for input and performance weights implementation. This is the library by the way in case credibility is an issue: https://github.com/ilayn/harold 
The idea of asking here is to find the use cases anyways. I don't even really understand what you are objecting to.
A use case *for what*? You still haven't defined the operation beyond a hand waving. 
The hample function will return a second output, the index locations of all of the samples replaced by the median. Thus, you can just do it with logical indexing: [~,ind_outliers] = hample(x); x(ind_outliers) = NaN;
&gt; Size match is implicit. You can't also connect two systems if output of one doesn't match the input of the other. These are trivial details. &gt; I also have a PhD in controls. This has to be some master trolling. I give up. I ask about an example - four state electrical model mated to a two state motor model. &gt; Let's not discuss the math part, I really have all the implementation with many tests If it's implemented then just include it. What are you asking for. (From the OP): &gt; I've used it in the past to quickly augment the systems without going through every entry. But who knows what kind of magic is happening behind closed doors. Yeah that's what I'm asking for - what is the magic behind your operation. How do you multiply two B matrices (Nx1) together. &gt; Math part I can assure you is sound. I am not assured. I think the math doesn't work at all, and **I challenge you to provide a functioning example for two SISO systems.** It could even be two MIMO systems where the B matrices aren't square. I don't think the math works at all and you're continuously dodging the question. 
Do you understand what 2,1 entry of a model is? Of course they are SISO systems. What are you babbling about? The whole idea is elementwise multiplication where each element is a SISO system. What do you understand when I say 2x2 ffs. Let's stop this discussion here. It's not going anywhere. 
Nevermind. we exchanged enough comments.
You can't link one publication or textbook that describes what you're trying to do. You are correct, this isn't going anywhere.
You could try using the readtable function instead of xlsread. It puts the data in a table format. From there it's easier to parse through the data. https://www.mathworks.com/help/matlab/ref/readtable.html
Thanks, I've looked into this function before I posted. I don't understand why it would be a better option, I would have to do multiple for loops for each designated cell right? And I don't think that it reads empty cells, but also skips them. I says so in the link you've cited (at least that's how I understand it). But thank you! If you think that the function could work, do you mind writing an example with my code?
Thanks. I ended up writing something like that, but I really don't like it. Mainly, I don't like how each point is actually a new plot, instead of them being connected. Makes it hard to be maintainable (say, hide one of the lines, etc). I'll let you know if I come up with a better way. 
So readtable does read empty cells. I would do a test with your .xls files by just doing readtable(filename). Each cell will be imported as a cell with a string inside and if it's empty it will just show up as ''. You can access individual cells by the row and column number so if you want to read cell B1: A = readtable(filename) B1cell = A{1,2}%Where 1 is the row number and 2 is the column number B1str = cell2mat(B1cell)%This extracts the string from the cell B1num = str2num(B1str)%This changes the string to a number, if that's your goal Once you have imported A you can double click on it in the workspace and it shows you what it looks like. I truly advocate for trial and error when learning matlab, so keep trying. It will work eventually.
Thank you again. I found a not-so-pretty solution, I will try to implement yours tomorrow. My solution for the record: if isempty(txt1) txt1 = '' txt1 = cellstr(txt1) end
~~Nope~~ (edit: apparently you can), but i believe that is what [datastores](https://nl.mathworks.com/help/matlab/datastore.html) are for, though i never used one. from the link: &gt; a datastore is a repository for collections of data that are too large to fit in memory.
What you are looking for are tall arrays. Tall arrays load small chunks of the data to the system memory at a time, and the rest is stored on the hard drive. You can perform all calculations on them as if they were normal arrays. doc tall 
The other answers are also correct, but if you save a mat file as v7.3 with the input the function that creates the values it might work. V7.3 mat files allow partial file reading and writing AFAIK.
Thank you, this appears to be working, I'm using while loops to work on each section then moving to the next.
What version of MATLAB do you have? Timetables are amazing for time based data, especially for things like selecting time ranges. See: Doc timetable Doc timerange
So how does that differ from an irc/other form of text channel?
Thanks for the fast reply. Sorry that was a silly error i didnt have there in previous methods, the points are still evaluated in the wrong place. I suspect that maybe the method i'm using to evaluate these points is wrong.
Thank you! Closing those parenthesis saved me a lot of woo!
In case y'all want to see my code and data. Y is the data I'm putting into ranova, and it's values are on the right. [PIC](http://imgur.com/5WLvjlb)
Biggest thing to note would be the [difference between "value" and "handle" classes in Matlab](https://www.mathworks.com/help/matlab/matlab_oop/comparing-handle-and-value-classes.html?requestedDomain=www.mathworks.com). Otherwise, it's pretty typical OOP. [It used to come with a substantial performance hit, but that has gotten a lot better](https://stackoverflow.com/questions/1693429/is-matlab-oop-slow-or-am-i-doing-something-wrong).
Thank you! That worked great. Just wondering, where can I get a better understanding of this function? I had a look in matlab and couldn't find 'ind_outliers' in the script for hampel. 
Missing a bracket to close eqns
Thanks! But now I get this error... Warning: The system is rank-deficient. Solution is not unique. &gt; In symengine In sym/privBinaryOp (line 973) In \ (line 365) In HTexam (line 18) &gt;&gt;
Set your last equation equal to zero. Or whatever it is. Rank deficiency means too little equations for how many variables you're trying to solve. Your textbook is your friend.
Can you describe in your own words what you think your code is currently doing? Especially what the arguments to fft are meant to do? Also as it is you basically get A1=fft(A,4,2) And A1=fft(A,2,2) Without needing a for loop at all. 
''magic'' function creates randomized matrix. My data size is actually 512x512. For simplicity, I generated the random matrix. In my own data, I need to select a region to calculate FFT results of row vectors. The randomized matrix size is 4x4, so I started to count from 1 to 4. In fft function, A symbolizes my random matrix, i stands for row index and 2 suggests that dimension(row or column). But when I try to start to count from i.e. 1 to 2(specific region), fft function just extracts the first and second row, not the FFT results. 
What you are currently doing is this: Start the for loop, i =1 Call A1=fft(A,1,2) This calculates the fft for vectors along dimension 2 but truncates them to a length of 1 before the calculation Next loop iteration, i=2 Call A1=fft(A,2,2) This calculates the fft for vectors along dimension 2 but truncates them to a length of 2 before the calculation. The old result in A1 is overwritten. As it is you don't need the loop at all since A1 is overwritten each time so it would be enough to just use the last call with i=2 In your "working example" that is what happens. A1 just contains the call to fft(A,4,2) and since the vector already is of length 4 nothing is truncated That the version with i=2 doesn't work probably has to do with the fft of a vector of length 2 not being very meaningful. If you truncated a 512 vector to 256 or something like that I would assume it would provide a more meaningful answer. But I think you have bigger problems than a too small testing matrix as I assume you actually want to do something different than your current code does?
I know nothing* of fitrm, but what i'm gonna say is general programmign stuff and should apply here. Firstly Have you checked wether the input to your top level function is correct? in this case if wether the values of t that cause this error are approriate to compare with this model? (or something 😂 * i just read the first line of the doc of fitrm and this seemed an approriate question) Try to find the minimum requirement for t to cause this crash, that is, determing what can not be omitted from t and still get this crash. The above approach is top-down, starting at the highest level function, thats the easiest approach. another approach, which you should only do after doing that, would be bottom's up (sort of), which can become an infinte hole of agony and despair, because it might require understanding thousands of lines of code before it provides an answer, but, when done correctly, will always provide a sollution. Start at the error, and what causes it, and repeat this..usually using the debugger is golden with this appoach. In this case, probably either S or C contains an inf or nan value. Where do S and C originate in the mauchlyTest subfunction? Does that function create the inf or nan value? if so why? if not, where does it get them from? trace this back to the origin, in order to eventually relate that to your top level call which might be rm = fitrm(t,'t1-t3 ~ Ntrt','WithinDesign',Day); or might be whatever you did to to run the "test" function. 
Thank you, I checked it again, you are right. But how can I select each row simultaneously and take fft results of them? I thought, simple for loop solves my problem. Unfortunately, I was wrong. In my analysis, I generally select the rows from data matrix manually, but I need to write a code which selects rows and calculate FFTs of each row and plot the graphs. Do you have any suggestions, hints? Edit: Firstly, I can take FFTs and then plot graphs of each row. I guess it will work. Thank you. 
Check my visualization toolbox [gramm](https://github.com/piermorel/gramm) out, it allows you to do this by simply providing, x,y,z and color arguments and drawing lines with geom_line(). Internally it does this by using patch(), Matlab's standard lines don't allow color variations.
[This](https://www.mathworks.com/help/signal/ref/hampel.html) is the help file for the function (the same that's in the MATLAB documentation), and if you look down at description it says: &gt; [y,j] = hampel(___) also returns a logical matrix that is true at the locations of all points identified as outliers. This syntax accepts any of the input arguments from previous syntaxes.
Sweet, thank you!
Checkout http://colorbrewer2.org/. They have an option for colorblind safe. There are tons of packages that implement them for Matlab
Unless it is just how you code, you went through all the work of double spacing your code. Why not just format it properly? Put four spaces before each line: clear, clc gen=0; x=0.005; k=386; h=40; Tinf=30; T0=100; D=0.0025; A=(3.141592*(D2))/4; p=3.141592*D; syms T1 T2 T3 T4 T5 T6 eqns=[(kA(T0-T1)/x+kA(T2-T1)/x+hA(Tinf-T1)==0),... ((kA(T1-T2)/x+kA(T3-T2)/x+hA(Tinf-T2)==0)),... ((kA(T2-T3)/x+kA(T4-T3)/x+hA(Tinf-T3)==0)),... ((kA(T3-T4)/x+kA(T5-T4)/x+hA(Tinf-T4)==0)),... ((kA(T5-T6)/x+h((px/2)+A)*(Tinf-T6))); [A,bb]=equationsToMatrix(eqns,T1,T2,T3,T4,T5,T6); z=vpa((A\bb),6);
Incomplete list but here goes: * [`glob`](https://blogs.mathworks.com/pick/2016/12/16/glob-file-searching-in-matlab/) * [`export_fig`](http://blogs.mathworks.com/pick/2010/05/28/creating-and-exporting-publication-quality-graphics/) * [`simps`](https://www.mathworks.com/matlabcentral/fileexchange/25754-simpson-s-rule-for-numerical-integration), `cumsimps` * [`arrow`](https://blogs.mathworks.com/pick/2009/05/29/arrows-of-all-kinds/) * [`jsonlab`](https://www.mathworks.com/matlabcentral/fileexchange/33381-jsonlab--a-toolbox-to-encode-decode-json-files) -- Actually, I think Mathworks should make a similar tool but easier to use I am sure there are many more. This is just my initial list.
for ii=1:4 A_fft = fft(A(:,ii)); The colon selects the entire row of the matrix. I might have it a little backwards, but that should help. 
You do get a DSP toolbox included (at least the student version and the Enterprise version did) Which does all the basic 'mathematician's DSP' that would be needed. You can then use the functions there and the mostly free community scripts on math exchange to do what you want. I don't know your final purpose but Matlab is not ideal for real time DSP. It is more suitable for simulation and making a prototype of your plug in. It might be good to play around with the trial version or use octave which is an open source proxy to Matlab. Before any of this, have you looked into numpy/scipy Python libraries?
I'm self-promoting, but for anyone who does data analysis, the data visualization toolbox [gramm](https://mathworks.com/matlabcentral/fileexchange/54465) ([gitHub](https://github.com/piermorel/gramm), [pick of the week](https://blogs.mathworks.com/pick/2016/04/22/gramm/)) should definitely be there. For those who wonder, it's like ggplot2 in R, but for Matlab... and who installs R without ggplot2? If you ever needed to use more than one plot() command, or needed one or several for loops to plot data from different groups using different colors or subplots, this will make your life easier and your plots look better... Check the example figures on the GitHub readme to see what I mean.
Oh my gosh. How did none of this show up in my Google searches?! This solved everything - thank you!
- suplabel - xtickangle 
I haven't looked at many numpy/scipy libraries outside of really basic ones. And I was asking about the toolboxes because they don't come with MATLAB Home; you have to buy them separately. I am only going to be a student for another couple of months. But I will definitely check out Octave.
this is legit, i can vouch for this :)