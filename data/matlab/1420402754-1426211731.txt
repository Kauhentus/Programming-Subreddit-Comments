thanks for this. so... I can see from your screenshot you are using 2013a, so no tables yet. MATLAB was using datasets then T=dataset('xlsfile','signup_data.csv'); dv=datevec(T.CreatedDate); T.year=dv(:,1); T.month=dv(:,2); % filter to given year and month T(T.year==2012 &amp; T.month==1,:) % filter to given year month and state T(T.year==2012 &amp; T.month==1 &amp; strcmp(T.State,'NY'),:) Let me know if you really want to use cells and I can show you how to do that.
(Masters in DSP here) Basically you choose depending on your application. Can you do a-causal processing? Design exactly what you want with tons of poles and zeroes and use filtfilt. If you have to represent something streaming, you need to know what's important. If constant delay at all passband frequencies is important but delay is not, go with a FIR filter. Unless you have a go reason, use a FIR filter. Fir1 or firls should be all you need, depending on whether you have filter specs or a series of exact point and frequencies for the filter to hit. Your other major option is IIR, and if you want to design it like an analog filter, pick from Butterworth, chebyshev I/II, or elliptical. If you have a strange frequency response in mind, use yulewalk. If what you have needs something more complicated than that, let me know.
It's not homework that's just the last working directory I was using when I was in a Matlab class. Unfortunately all of our homework was given to us in a tidy .M file and now I get out into the real world where I want to use Matlab and I feel like a total newb. 
It depends on how OP intends to use it in the future. Filtfilt is good but only works on post processing because it runs the data twice to remove phase lag. If you're post processing data then it's great because you don't have to deal with phase lag.
Nx3 is just N rows (start dates) by 3 columns (month, day, year). What you would do is 1) input that date column as a string: 01/23/2014 2) pull off into the Nx3 array datestr = '01/23/2014'; dateary(1,1) = str2num(datestr(1:2)); dateary(1,2) = str2num(datestr(4:5)); dateary(1,3) = str2num(datestr(7:10)); .... you may need to be careful in indexing the rows such that you fill your array correctly. It likely can be done without a for-loop, but if you needed to you could fall back on it. Hope this helps more in getting the same date represented in MATLAB as you see in your table. Ideally, datestr will be Nx1 where N rows correspond to your N observations.
Limit the range of the plotted vector to only include enough samples to display two periods. You can choose to plot everything (plot(vector)), plot a range (plot(vector(start:finish))), or a point from a vector (plot(vector(point))).
Well now I feel silly for misreading the post, and not knowing about randn. Thanks!
Good point. 
It's not a given that this is the case, but either way, the number of samples and the number of points in a continuous time Fourier are unrelated. I bet you're seeing aliasing here. Did you run that signal through any type of window in your transform? Also, if you have a sine wave, shouldn't your fft results be fairly predictable, like one point...?
What techniques are involved in Biomedical Signal Processing? MATLAB stands for MATrix LABoratory. It's really good at math. Core MATLAB has linear algebra, basic statistical functionality, some optimization, some Fourier analysis, some filtering, and lots of other stuff. What you don't find in there you can write yourself OR you can buy one of the many toolboxes they offer, like signal processing. You can also find a lot of free MATLAB functions out there [like this one](http://bsp.pdx.edu/Toolbox/). Here's an example of low-pass filtering an audio signal: load handel y2 = filter(ones(800,1)/800, 1, y); soundsc(y2, Fs) % filtered audio soundsc(y, Fs) % original for comparison 
Can you tell more about what you are trying to achieve? Biomedical signal processing can mean a lot of different things. Most importantly: What kind of signals are you working with?
Yeah its for a project. The data we intent to use it on has about 37000 points per file, we just wanted to get it working on something simple first. We upped the number of points to 1000 in our sample wave and its working pretty well now, just a few other adjustments and we'll be ready to add it to the rest of the algorithm! :) 
Fair enough - hopefully the OP can come up with a workaround. The main thing is that the workers won't overwrite each other when doing reductions 
Yeah, if DetermineBestFit is the slow part, I suppose you could do: BestIndex = zeros(100, 1); parfor counter = 1:100 BestIndex(counter) = DetermineBestFit(Items(counter)) end and then increment the totals in a normal for loop.
I haven't played with this specific example, but in general Matlab is really restrictive about what they let you do inside a `parfor` loop, for exactly the same reasons you're concerned. So, unless they've made a huge mistake in their implementation somewhere, they should not allow any operations to occur inside a `parfor` that would produce such a collision. You'd just get an error message and the code would not run in the first place.
You can do private functions by using a private folder, but you seem to mean that you want to let someone use your MATLAB code without them being able to see how its written. Only thing I can think of for that is using the compiler.
yes
My company is still on R2012b :( I think full and proper git support will probably spur them to upgrade.
Stupid question: did you put your IP address where it says &lt;ip address&gt;? edit: something like url='http://142.161.7.11:8080/shot.jpg' where the 192.168.1.11 is the ip address given by the IP camera app, and the 8080 is the http port (don't change this one)? If your computer running matlab is behind a router (firewall) you will have to open up port 8080 on your router. This is done in the settings of the router.
I have little experience with this, However...presumably, you could record all of the data points for the mesh into a matrix, while also recording all of the data points for the line into a separate matrix and use a for loop in combination with an if loop in order find the x,y,z coordinates that are shared between the mesh matrix and the line matrix. This may not be very efficient and the angle may need to be found by doing some cross product and trig action at the exact point of intersection. Hope this helps, I know it is not very specific, but it is how I would begin to attack the problem.
Yes, I put the IP the ip-camera app told me. I will try to open the port. Thanks.
Do you have the equations for this line and this mesh surface? Is this in three dimensions? I believe if you parametrize both equations you should be able to generate an indexed list of corresponding points from which you would only need to find where the index and the two parametrized points match up. If you parameterize with respect to the Z coordinates, then Z is you index and you only need to match the resultant X and Y coordinates of your line and mesh to find their intersection. Something of [this](http://math.stackexchange.com/questions/380576/find-the-point-of-intersection-of-the-line-and-surface) style should work.
Digital Filtering Techniques are used, using FIR and IIR filtering. Basically removing noise from Biomedical Signals (ECG/EEG). Also, Image Processing (MRI).
I don't know anything about EKG/EEG, but maybe these links will help you: http://sccn.ucsd.edu/eeglab/ http://mathworks.com/help/dsp/ug/removing-high-frequency-noise-from-an-ecg-signal.html (ECG is the same as EKG, isn't it?) Concerning image processing, you can learn a lot by just following the relevant links on this page: http://mathworks.com/discovery/digital-image-processing.html The image processing toolbox is extremely well documented and quite easy to understand if you read their docs, so I recommend reading as many articles from the official Matlab documentation as possible. A general tip from experience: Before implementing any moderately well-known image processing algorithm yourself, you should always google it before (just type "&lt;algorithm name&gt; matlab"), because the chances are surprisingly high that either it is already implemented inside the image processing toolbox or someone has written it an open-sourced and implementation on Mathworks File Exchange or some other site. It always saddens me when I see people work many hours to solve problems that have already been solved in a better way (this happens quite often in this field). Edit: formatting, typo
That does work. Thanks. Could I similarly access the UIpanel tag? When the panel is updated, it runs this: var = get(hObject,'Tag'); assignin('base','var_name',var) and it works properly, giving me the selected button tag in "var_name". My problem has been that I don't know how to access the object tag outside of the function. My attempt to access the panel state from a different function was: test= get(handles.uipanel3,'Tag'); disp(test) But, this output 'uipanel3' rather than the selected button. Any ideas? Thanks 
Have you tried using the From Workspace block? It's under Sources in the Simulink library. 
Here is a response I wrote to someone who had to read in some logged data he took. In his [post](http://www.reddit.com/r/matlab/comments/2grpfr/beginner_error_in_csvread/) he needed to read in the data and he was having trouble. I wrote [this](http://www.reddit.com/r/matlab/comments/2grpfr/beginner_error_in_csvread/ckmc1zy) to go through the data. I tokenized the data using a comma, but since your data looks like it's delimited by spaces, you can still tokenize with a space. It looks like some of the columns of your data (i.e. *Header* or *Sample Cnt*) has multiple spaces in the entry for that row, if that is fixed (like Sample always has 4 groups of strings) then it should be easy to know to read 4 of the tokens to for that column. What I wrote was clearly made for his problem, but there should be several different things in there you can learn from. Copy/paste into matlab to get code highlighting. Just like /u/Halsey117 you can see use of *fopen/fclose*, using *fgetl* to get a line of data, and here I also use tokenize to read the data. 
The indent doesn't change anything but it makes it more readable. Your new one is the *opposite* of what I had in mind. I still do not understand the last line about sorting. You do not have a variable named `data`. What is it you're trying to sort? Population? Also, `sortrows` may or may not be what you want. I would create some test case and try it. Let me give you an example. By the way, my comments in line are the same kind of things I would write if I were actually doing it! I am going to give you an example problem. This may be helpful. But I **strongly suggest** you try to understand what it is I am doing % Example. % Sort A by it's third column. However, data is considered invalid if the % first column is &lt;=0 clear A=[-1.0479 -0.5706 0.2176 -0.2853 1.8309 2.0782 -1.0607 -0.9415 -0.4459 -0.6931 0.9411 0.0773 -1.2184 0.3637 -0.7843 -0.0238 0.6131 -1.2167 -0.8115 0.2658 0.0068 -0.7258 0.7902 0.1846 0.5768 -0.3961 0.2189 -1.0059 0.7258 -0.6887 -0.3609 0.7168 0.4158 0.8107 -0.2797 -0.0505 1.1809 0.3219 -0.7454 0.3169]; A0 = A; % Just to save it % Find first columns of A that are &lt;=0 isA1_le0 = A(:,1) &lt;= 0; % Logical vector % Remove A(:,1) &lt; 0 A(isA1_le0,:) = []; fprintf('%i rows removed from ''A''\n',size(A0,1)-size(A,1)) % Sort by the third column A = sortrows(A,3); disp(A)
Sorry about that, i didn't exactly know what you had in mind. The last line is not defined, that is correct. I just added it there for when i will sort it out later. I want **clearData** to remove invalid entries from the information it has gotten. (those with wrong number of population), as well as the column with the state and then returns the data only from correct entries, as well as how many entries have been removed. I don't specifically want it to sort rows, i just want it to sort anything in the cellaray that is false if that is possible. I see, so by reading your example, I´m sorta getting the idea of it. But is there a more simple way than how i am doing it? I only have material/info from what I´ve read in my course. So I´m just using the examples from my teacher into my own.
Thanks! It looks like the big challenge now is to figure out zero padding. For a pair of vectors (I'm starting small here) that are one zero shy of necessary padding, the resultant vector is flipped front to back. Between MIT(hebb.mit.edu/courses/9.29/2002/readings/c13-1.pdf) and you, this shouldn't be too bad.
The simplest thing if you have a 5x5 matrix and you want the 'normal' orderings, is to put f(0,0) at indexes x=3, y=3. That is, the way that you first wrote it out. Then when you do fftshift(fft2(x)) you will see that F(0,0) is also located at x=3 and y=3. A simple test of fftshift(fft2(ones(3))) should satisfy you that this procedure puts the zero frequency component at the centre of the matrix. Why do you think that it doesn't work without the ifftshift?
His amplitudes would be correct, but his phases would be all goofy. 
function K = calcK(T, P) &lt;insert your equation for K based on T and P&gt; end
Do you know what methodology you'd be using? Also, is this academia or a private company? I know MRI/fMRI well and could give you some advice on that. I don't know as much about microscopy but you should get familiar with imagej if that's the case. 
&gt; is there a more simple way than how i am doing it I do not totally understand everything you're looking to do and that is good because it stops me from doing too much of it for you. But, as far as *simpler* goes, the way I outlines is a whole lot simpler and faster. With any of this stuff, a good starting point is to work out the logic on paper and then code it. In addition, make a small problem that is easier to keep straight in your head. Work off of that
I think it is possible! But it's not something anyone would be able to do. If you know matlab(even if not deeply, it's an easy language to learn, and you learn as you go with the help command, documentation and online community), and you know the problems the company needs you to solve, then it's just a matter of trying to solve them(or samples) this week! It's very doable. But if you just have an idea of what "advanced signal processing schemes for brain research" and you'd have to learn those as well as the language then it's a totally different story... So depends on how well you know the field, the matlab part would be easy.
If you're familiar with other file types, you may consider netCDF or HDF file formats. Not only can they *"compress"* the data, but they are also self contained with descriptions (as much as the author cares to put in). I use earth science data - there are over 900 "variables" in one monthly mean file (180x360 lat/lon), and I've got 150 months. If I try an read in a single (or 3) variables from each of the 150 files, it takes about 10min. I've gone and pulled off the variables that I'm interested in (~30 or so) and generated my own versions of the HDF files - each one is one variable's 150x180x360 data cube. Inputting just a single variables data cube takes about 20s (compared to 10m). You may consider that, but the barrier of learning (it's really not that hard) a new file format may be something to consider. This also might not be the best suggestion/application; others may have better.
I was going to suggest netcdf as well - it's designed for large multidimensional arrays and is hugely flexible. Matlab's netcdf handling is a bit clunky but nothing's a smart and motivated user couldn't learn in a few days.
Yes, it's EEG signals. Like how to load the data file, remove noise, filtering out what we don't need, and such. Could you please tell me about the basic commands that I need to know related to these signals to sound knowledgeable during the interview, the rest I'll learn as I go. Thanks! 
Ok cool, I'm on mobile for the rest of the night, but I'll throw a bunch of info about mri/matlab at you sometime tomorrow when I'm at my computer.
Where is it? 
Actually memory isn't an issue. The PC I run these simulations on at work has 32 GB of memory. So I could keep the whole thing in memory without mapping it but, since I need only 20 MB of the 6 GB at any time, I can do just fine reading only one slice (since I already know which one I'll need and in which order) at a time. The PC I work on has 2 TB of disk, so indeed it shouldn't be a problem storing 60 or more GB of data (let alone that I'll probably need to do some cleanup of the files I currently have, since I have only 200 GB free left now) and then zip the file when I'm not using it and to back it up. I was just thinking of a way to make things "nicer and cleaner". I'm doing this to simulate data that I get from a phisical sensor (that produces an array of counts data organized in a 300x600x60x300 matrix). The vendor stores the data in a compressed way and its original matlab data-processing software uncompresses the data one slice at a time. And, according to how high the numbers are (if mainly distributed from 0 to 5 or from 0 to 30) the resulting files are anywhere between 20 MB and 500 MB maximum (but in general always 40-60 MB). So at least 15:1 compression ratio! I wanted to replicate this just to do things in an elegant way.
Thanks, I'll look into it.
Recent versions of Matlab natively compress .mat files when you save data. Just make sure you save with the -v7.3 switch (or set this as your default .mat file version), and Matlab will compress the data. Alternatively, you can save your data as Analyze/NIFTII, which is a common data format for nd-arrays in the medical imaging community: http://www.mathworks.com/matlabcentral/fileexchange/8797-tools-for-nifti-and-analyze-image Assuming your data array is m, saving and loading compressed data works as follows: % saving m_nii = make_nii(m); save_nii(m_nii,'data_compressed.nii.gz'); %loading m_nii = load_nii('data_compressed.nii.gz') m=m_nii.img;
Which version of MATLAB are you using? The answer may depend on it. This is actually a tougher question than I initially thought. For some reason they command has chosen not to return any handles to the graphics objects. What you need to first is to get the handle/ID to the figure that was created by margin(). &gt;&gt; hf = gcf; Now, with this knowledge, you can traverse down through the figure's children and try to locate the graphics object that contains the 'Bode Diagram....' text. This works on R2014b and later (with Handle Graphics 2), but I think it should still work on earlier versions: %% Create the plot with margin() hd = tf([0.04798 0.0464],[1 -1.81 0.9048],0.1); margin(hd) %% Get some objects / handles hf = gcf; hax = findall(gcf, 'Type', 'Axes'); ht = get(hax, 'Title'); for n = 1:numel(ht) if any(strncmp(get(ht{n}, 'String'), 'Bode Diagram', 12)) X = get(ht{n}, 'Parent'); end end %% Set a new title title(X, {'This is my new two-', 'line title'}) 
&gt;traverse down through the figure's children and try to locate the graphics object I wonder what the current offerings are in intro MATLAB courses these days. When I was taught there wasn't really any mention of making figures as *"graphics objects"*, there was just focus on getting it done with the higher level basic fuctions (plot(), xlabel(), legend(), title(),...). It wasn't until the last 8 months or so that I really needed to dive into the graphics objects methodology of constructing figures, but wow, it's pretty powerful!
Im Using R2014b, so hopefully when i implement this, it will work :) Edit: it does work YAY... but i want to save the information about the GM and PM numbers. I guess i could just calculate them manually and put them in as strings
&gt;untill last semester I didn't have any use for using "handles" or anything like that That was me too until ~8mo ago. &gt;google my way to find these kind of answers Here is my first (and go-to) Google query: https://www.google.com/?gws_rd=ssl#q=matlab+graphics+objects+pdf I've had to go back to this query a few times. I've also gone deeper into pg 3+ of the results. The source I found to really help with the graphics objects was a MATLAB tech docu "Using MATLAB Graphics" PDF result ("graphg.pdf") Ch 8-10 (Handle Graphics, Figures, Axes). There are also tons of examples/lectures in the results you can use as templates. Once you get more into the handle graphics, you'll learn more and better search queries to make prettier figures and get more specialized yourself as a result.
It's not until you get to more advanced programming like GUI/App building that you really **need** to know about the graphics objects. It helps, but you can get by for most things just knowing plot, title, etc.
I would add that publication quality figures also necessitate a deeper freedom within MATLAB than the *surface* commands provide (as typically used). For nice exports, I've been using the export_fig toolbox on the file exchange. Don't get me wrong, they do give a great *first look* at your figures/data.
Sounds great! I think that'll be very useful.
Gonna do first thing tomorrow. I'll also need to see the efficiency of the thing. I've gzipping a sample file (or saving it in .mat -v7.3) and I get (depending on how spread are the number) something between 40 and 60% data size reduction. Not really worth it, I was hoping to get something similar to what the original software does! (80-95% reduction!!). Otherwise it's not worth the effort (since it's a one time only thing)
Ouch... I'm not really sure I understand your post about the "variables cube". I've written 300x600x60x300 because that's how they're physically meaningful but I could just have said 300 arrays of 10M elements each. I need to 1) generate these data once, 2) open one of these arrays, process the 10M numbers, close it, pass to the next one and cycle over the whole 300 things multiple times (without rewriting anything). So I don't understand what you're suggesting. Why would it be a problem to make a single file? I don't get why I would need to "input each of these 300 variables". Whichever way I use (binary file, mat file, etc...) I can find a way to get directly to where I need. (e.g.: saving 300 matrixes in a single mat file and loading just the one I need, using some offset in a binary file etc...)
So... are you after compressing your data once saved, too? You could save as an *DF formats and then tar/gzip (not sure the ordering) all those files (or some, say only have 10 variables un-tar/gzip'd, when you get to the 8th you then do the next 10, when you start and are on the 2nd you re-tar/gzip the last 10). That would also save on disk space.
it should be sx./cx - the "./" command will make each element in the sx vector divide by the corresponding element in the cx vector (what you want). If you don't do this, then it's a vector computation.
You should also know that other "matrix-ey" things like multiplication and exponentiation can also make use of the "." symbol before the math operator. Normal matrix multiplication, with restrictions on dimensions, is used with just an astrisk, while element wise multiplication of same size matricies is performed with a dot-astrisk. The more you know...
Serious question: why do prior downvote stuff like this? It's a perfectly legit question. Not that it matters much on this sub but it seems odd.
Agreed. This is a good post: problem statement, code, what's going wrong.
Thanks :) However, I found that I could just change the first line title and leave the second intact, which solved my problem. 
I think it relates to punt being a character array. Are you even allowed to make punt as you have it? I think for a character array all the elements need to be the same length: your 1st element is length==1 while all the rest are length==2. What I would try first is making your punt(1) element be ' 1' and not just '1' - note: there is a space before the 1 such that the element is now length==2. If this simple fix doesn't work, come back and we'll try some more things.
line 280 is where the line with table10. error: Warning: Out of range or non-integer values truncated during conversion to character. &gt; In Script_Ijsland_Compleet2 at 280 the table is like this now: http://prntscr.com/5rxo32 
If you're just after displaying a table in your command window, take a look at the [table()](http://www.mathworks.com/help/matlab/ref/table.html) function. No need to reinvent the wheel if you can avoid it..
If you are not doing a timing-intensive task (i.e., relying upon exact frame timing between "flip"s), then just suppress the warning by adding this to the top of your code: Screen('Preference','SkipSyncTests', 1); I've always had this error on basically any machine with an LCD and have never been able to completely suppress it. However, I am not doing psychophysics that requires **exact** timing. While you are at it, get rid of the nag screen to save a few seconds: Screen('Preference', 'VisualDebugLevel', 0);
&gt; I guess it really doesn't matter much; this is such a small sub that nothing really gets buried... Exactly why I never really care about the vote totals. &gt;I'd just hate to have someone feel unwelcome when they're trying to learn. Agreed.
This has been brought up before. It is, fundamentally, a problem of shitty questions which are rightly downvoted. It causes trouble for good questions, because people get so used to shitty questions that they become quick to judge. It's particularly easy to do when a question is *simple* even though it may not be *bad*, because so many bad questions are also simple.
You could also do: reshape(repmat(z',1,4)',1,16) But it's the same thing :)
x=1.5:0.5:3; z4=sort([x x x x]);
Dude, I saw table(bla,blabla,rownames, names) and that did work in the example. Going to test it now, awesome! Edit: It worked, wow, haha. Next time I will read the help immediately. Thnx for all the help :D
Edited post to make it clearer. Essentially, in a 10x10 matrix, I want to take each block of 2x2 and convert it into a 5x5 matrix ... hence a(1:2) = (a(1) + a(2))/2 a(3:4) = (a(3) = a(4))/2 --- ***Edit***, so like for a 1D array, here is what I'm doing, and I wish to automate this process... clear all; close all a = [0 1 2 3 4 5 6 7 8 9]; figure; plot(a); a(1:5) = sum(a(1:5))/5; a(6:10) = sum(a(6:10))/5; b(1) = a(1); b(2) = a(6); b = [b(1) b(2)]; figure; plot(a); figure; plot(b);
YES!!! Thankyou - I should've specified that I was looking for a method that preserved minimum and maximum values in the matrix, and hence was arithmetic in nature.
I spent some time trying to find some on Google and came up empty handed. Sorry. But, **LPT:** if ever searching google for something related to online classwork, use porn mode (private browsing, incognito mode, etc). I am not seeing nothing but ads for DeVry and the like.
Thanks for the suggestions -- good ones, and in fact I already have Octave and have been learning from various resources. But my question is really about finding a class that will meet my university's requirement for credit. Like jwink3101, so far I'm striking out. 
Yeah It seems you've got the general idea. My interest is almost purely academic, but I've thought of a few applications like constructing images where each pixel is a unique color. Sorry for the 2 day response time, I was out of town and typing stuff like this on a phone is a pain. Lets say I have these two search queries sq(1) = [1 1 1] sq(2) = [3 3 3] And a neighbor search space nss(1) = [2 2 2]; nss(2) = [5 5 5]; nss(3) = [6 6 6]; for the first query, the nearest neighbor is nn(1) = [2 2 2]; %nss(1) after the query the new search space is nss(1) = [5 5 5]; nss(2) = [6 6 6]; I've written up an exhaustive search in matlab but the memory handling seems way too slow (well at least with what I could figure out). I'm spending most of the time on these two operations (labeled): %L2 norm without sqrt. repmat faster than bsxfun for whatever reason 1. ltwo = sum((sSpace-repmat(query,size(sSpace,1),1)) .^ 2 ,2); %nnIdx = find(ltwo == min(ltwo),1,'first') find is surprisingly fast 2. sSpace(nnIdx,:) = [] %see above for nnIdx These are probably slow due to a lot of memory copying, but all of the alternative ways I could think of doing this just moved the memory copy commands around instead of getting rid of it. With a search space of dimensions [~16million,3], (not 4 like I said earlier). The operation for each search query takes ~0.6s seconds to compute (this is with an i7 2600k clocked at 4.5Ghz; 1600Mhz memory). That's definitely too long to do millions of queries like I'd like. I'm currently writing this kind of exhaustive search using a linked list to represent the search space in C++, (removing an element from the ss is would be way faster this way, I think). Hopefully this turns out to be fast enough. Approximate nearest neighbors would work for me I think, but there just seems to be so many algorithms for doing it that I'm drowning in info trying to find one that suits my needs. 
This might be useful: http://www.mathworks.com/matlabcentral/newsreader/view_thread/302138 tl;dr: going from RGB to CMYK can be a pain. Also, you didn't ask, but don't use jet. :): http://cresspahl.blogspot.com/2012/03/expanded-control-of-octaves-colormap.html https://abandonmatlab.wordpress.com/2011/05/07/lets-talk-colormaps/ 
How can *we* know what courses your university accepts? Wouldn't it make more sense to ask the people at your University who know what can be accredited?
What is the difference between the two? I can't seem to find information on the Mathworks site about these two terms
I used to buy a copy and it was good forever. More recently, student versions were essentially subscriptions that lasted a semester or a year. The toolboxes are great, but I wouldn't pay the extra 50 for a subscription. At least until I knew I was going to use them.
$100 for a student version is a great deal (particularly if it is a perpetual license). I used that and the academic version for years as a prof. I am now trying to convince my dept to pat $3000 for the professional version.
I would also say wait with the toolboxes and just get the standard bundle. Also, if there are specific functions you need, you can usually do a Google search for them and get them that way.
&gt;I am now trying to convince my dept to pat $3000 for the professional version. Yeah, that kinda sucks. I am still finishing my PhD but I was talking to my (likely) future employer and he said that for what he'll be paying me, the time savings of using a tool I am already an expert at will pay for itself. I still wish it weren't the case though..... (someday I will leave NumPy/Matplotlib,etc but it's not worth the time now)
You should just Gray, Hot or Parula. Because our eye cannot place an order to the colours Jet colour maps obscure gradients that do exist and give the perception of gradients that do not. [Source](http://medvis.org/2012/08/21/rainbow-colormaps-what-are-they-good-for-absolutely-nothing/) edit. reading is tech and the other comment says this too.
While fair point against OP, FWIW, I haven’t found a single online Matlab course from an accredited university (ie, not Lynda.com). 
So it's not a great deal, you're just accumulating technical debt that converts into real monetary cost later on. Similar to the business model of Gillette. And heroin dealers.
I mean this in all kindness, and I know nothing about your problem. So you are probably right. But I've heard people say this A LOT, and they'd almost always be better served by using a different color map (unless it's a heat transfer/fluids plot, and even the standards there are changing). Often, it boils down to people using the enhanced contrast of jet to emphasize the bits of data that they want emphasized, e.g. "Look at all this variance! It's stunning!". Which is well-intentioned, but is kind of showing more than the data actually says. Often when people say jet leads to an intuition, they mean that a divergent color map would lead to some intuition. Anyway, don't mean to lecture. I'm sure you've put thought into this. I'd just say, consider using parula. At worst, it's equivalent to jet, and improves upon it in many ways.
What part? 
Do you guys see what I mean about shitty questions? 
That's the truth. Some companies scrimp in the wrong places though.
You could use the dir() function. 
Whoops mixed up the dimensions... fprintf('%f , %f \n', [F;C]) should do it. fprintf operates off linear indices so it will process all the elements in the first column then all the elements in the second column and so on. 
Yes that worked, thank you.
add the directory to the matlab path using the addpath function.
This solution seems overly complacated, but what you might be able to do is make a seperate scrip for running your function and do something like this: figure(1) plot(0,0) fig=gcf ax = fig.CurrentAxes hold(ax,'on') function(val1) function(val2) function(val3) Then where youre plotting things in your function make it fig=gcf; ah = fig.CurrentAxes plot(ah,x,y); with x and y being your data It is also fairly likely that somewhere in the function or scripts there is a hold off command or something similar because plain hold on should be working for you. You should check that the plotting is not being explicitly told to make its own figure like below figure(1) plot(x,y) figure(2) plot(x,y) 
Cheers. Got it sorted. 
It really depends on what engineering you plan to do. Most of those toolboxes are for control and systems engineering. If you are taking a controls course/want to be a controls or EE/CE/aerospace engineer, then yes 100% get the toolboxes and learn how to use them. You can put that on your resume and it will help a lot. If you are in civil then autocad would be better worth your time.
Not a mathematical function. A Matlab function. You know, something that takes an input and gives an output? Like a = sqrt(b)? Make a function that takes your parameters as input and returns the data to plot. Call it in a script with each parameter value, and plot the output. 
There are some ways you can hack this together that will get it working, but may not be right for your application. For example, you could have a script that runs &gt;set_param('constant_block_name',data_from_vicon) every time you get a new data point. However, if you're data is streaming quickly you can't guarantee either real-time updating or performance. I don't know what you're doing, but this may be good enough. Another option is to use a MATLAB Function Block. This will allow you to put the code you're using in MATLAB directly in the Simulink model.
This article may be of some help: http://lifehacker.com/automatically-clear-your-downloads-folder-with-a-batch-1659687677 You'll want to change the directory to the MATLAB folder (assuming they save their work in the same place every day) then have it run every day with no 30 day wait period.
You can always ask if you can test out of the requirement. It would be tough to find an online for-credit course since most universities don't offer online engineering undergraduate degrees. If you can test out of it, then you'll only need to learn MATLAB, which isnt that hard.
Daily MatLab user at work and school here. I'd recommend forking it over, if that's for a year or two. Those toolboxes are PACKED with cool stuff, that if you just want to mess around with, you'll develop a ton of cool skills. ____ I'm against the grain here, but I TOTALLY say do it. It's dirt friggin cheap. It may be unethical to charge, but I think they're just offsetting the massive load of people who pirate it, and you're absolutely doing yourself a favor. I got both my PhD funding and my job based upon being good with MatLab.
I'm not sure I get it, but are ayou sure you don't want repmat, not linspace? like repmat([5, 2, 3], 1, 4) ??
It says I need to use linspace. When I tried figuring this out on google, nearly every response said to use repmat though. It might not be that the row has to be repeated like that, I think I'm approaching it wrong
Hey, thanks for the reply, but I think I found a workable solution. Please let me know if you think this is missing the point of the question though, because it does seem a little silly to me A=linspace(5,5,4); C=linspace(2,2,4); D=linspace(3,3,4); B=[A',C',D'] 
If true, this explains why so many scientists write such pathological Matlab code. Somebody out there is teaching frighteningly poor habits. 
Well, that does what I did, but I agree, it's silly. I do wonder if you are in fact misinterpreting the question.
You can use print in MATLAB. No clue about Octave. http://www.mathworks.com/help/matlab/ref/print.html
Just FYI for others, the above won't work in `Matlab`&lt;=2014a (I think). You would need use `get` and `set` to get the axes
As a kludge fix, you change the graphics renderer to never use OpenGL. &gt;&gt; opengl neverselect If you're crunched for time and need to get results fast, this may help you until you can find a better solution. 
Appreciate it. I might have to do just that.
Funny, neverselect is a deprecated command in 2014b. The fun never stops
Perhaps they should change their name to Math-not-works? ;-)
aahhh... I was thinking more of the latter. It appears I am indeed mistaken. Thanks for the reply 
If only there were truth in advertising! At least they donate a lot to NPR. No one's 100% a dick, I guess.
I poke fun at them, but in general I think they are a pretty well ran company. Sadly, their support of Mac OSX has always been a bit spotty. For many years (late 90's I think), Mathworks swore they would not even support Macs. I remember their first version they released for OSX ran on top of X11. Since I'm primarily a Linux guy, this was okay, but a bit kludgey. Source: Matlab user since 90'. 
I'd listen to what Image_Analyst said on the Matlab Answers thread. He's a highly respected member and definitely knows what he is talking about when it comes to image processing. 
I knew that, just trying to use octave as an alternative Anyone else ?
Youre going to want to use the get() function to retreive the properties of the edit boxes. Here is an example of how you would get numerical data from an edit box. editBoxNum=str2num(get(handles.edit1,'string')) You may also have to update the handles struct by calling handles=guidata(hObject) at the top of your callback
I would switch to linux in a heartbeat if my circumstances allowed it! These kinds of issues are just infuriating to me because they're generally much easier to fix on non-proprietary software. 
These links have been Excellent! Many thanks! I came up with a solution that works pretty well (90%), and perhaps that last 10% will require some training, or use what Ilastik does for carving (seeded watershed). If you're interested, my solution pseudocode is posted in the above Mathworks link. 
Good suggestion. I used this [ellipse detection](http://www.mathworks.com/matlabcentral/fileexchange/33970-ellipse-detection-using-1d-hough-transform) It required some clean up tho for the algorithm to be effective and not too time/memory intensive. 
[strfind](http://www.mathworks.com/help/matlab/ref/strfind.html) might help. But you'd still have to have it know what part of the input string to find. Is there any way to have the menu display option and the menu return string be different? Haven't done much GUI work but it seems like that wouldn't be too difficult. 
Is it only Korea that's the issue? You could just put an if-then statement in to modify the database when you load it into memory. Or after the user selects the menu just use strncmp in an if-then statement to change the user input to match. It's a little kludgy but if you know this is the one and only place you have an issue it'll work and won't take long. The way you explain the problem doesn't really communicate to me. Is this a display issue primarily or a back-end processing issue? If your input is always going to be either 'South Korea' or something that isn't referring to South Korea just brute force it. 
only south korea is the current issue. I had an issue with russia and being russian federation in the database, so I strncmp'ed it, same with iran being iran (islamist rep of). what my project is now is I have a dataset with all the countries in the world and energy production numbers and I need to analyze them and compare them. I'm comparing 2 sets of 10 countries, first world and not-first world. I used strncmp for both lists, and it worked for russia and iran, but messed up united states, as united states virgin islands is on the list. so I may end up putting in an exception for south korea where it changes the user input. 
 stringVar = %string in dataset if ((strcmp('Korea, Republic of',stringVar)||strcmp('Korea, Republic of',stringVar)) stringVar='South Korea' ; end
Inline functions are being discontinued, so you should look into [anonymous functions](http://mathworks.com/help/matlab/matlab_prog/anonymous-functions.html). Your function should work fine like this: f = @(x)(x*exp(x^-2)); // This will give f = 2.5681 f(2) Also please check your formatting. The carrot symbol (\^) is not showing up. Use \\^ to escape the character and prevent superscript. ^^^`f=inline('x*exp(x^-2)');` ^^^works ^^^great ^^^for ^^^me.
If you're looking for something like [this picture](http://i1123.photobucket.com/albums/l554/roxorboxor/matlab_help_zps62512481.jpg), you need to get rid of your potential term. 
&gt; the first value in your table 13 after all is said and done. A good tip to try to debug loops like this, is go through by hand and write out the v Thnx for the reply, I also asked my teacher, he noticed that my recurent formula was wrong. Next to that, I didn't even have to use the nested for loop. So in the end I think made it much more complex than needed, fac=1 for k=2:13 fac(k+1)=fac(k)*k end works too, thnx for help :D
Take out the semicolons and add more print statements. I'm betting your "don't divide by zero" line is not working as expected. What does adding a number to Nan typically give? 
I wanted a potential term but the code doesn't seem to be working at all. Is there any chance that you have example code without the potential. I can add that myself after the fact.
If you run the code yourself integral comes back assigned a &lt;1x1&gt; sym. Now, you can tell Matlab to operate on this variable if you wish and this will generally work. However, there are certain results of the symolic function toolbox that other parts of Matlab cannot handle. Something like dirac() does not play well with others and often causes issues if not addressed prior to writing your code. The main concern is what you want to do with integral because "run numeric operations" is pretty generic.
Yeah I should have checked the type myself, I just want it to be a floating point double. Is there anyway to force it to evaluate the symbolic expression where no symbols are even present?
The symbolic toolbox overloads eval(), so you can force it to give you a result. If the result can be evaluted with no residual symbolics the result should come out as a double. eval( (387 - integral_A)*(c+d)+5 ) ans = 5
The problem is that once you go 1/0, the answer is infinity (generally), not NaN... Try this: if ( max(isnan(immUp(:))) | isinf(max(abs(immUp(:)))) ) 
I'm pretty sure it's not this one the problem, but maybe I'll give a try. But in case... Why the results should be different if the functions are called in exact sequence or not? If there's an error it should be consistent independently on the call order, I guess....
&gt;1) Is it possible that you are using uninitialized memory somewhere in your C/C++ code? I'm 100% sure I didn't do such a naïve error but...I'm suspecting more and more that this is indeed the case. It's the only logical explaination.. I can't see how... I used these two mex functions for a day without any problem. I just modified them to compute a run-dependent normalization constant and to apply it to the result before using them in this new program. I'm pretty confident that I correctly initialize its before computing it.. For sure I'll look into this tomorrow as soon as I get in the office. First thing check if indeed this normalization I've added is error free. Then re-run the code in which they worked and check out if everything still runs. If not... Bang head on the wall. Anyway... It's still really strange that they behave differently in debug and outside debug. It doesn't only run in debug mode... It gives the correct numerical result!
I don't have Matlab open at the moment, but hopefully I can be of help. It looks like reportGrades = [namesAndGrades(:,1), letterGrade'] should be a ; instead of a , so you would end up with the first row being the names and the second row being the grades. Of course, Matlab will probably think namesAndGrades(:,1) is a column vector so be sure to add ' as you did with letterGrade. reportGrades = [namesAndGrades(:,1)' ; letterGrade'] Always try to avoid setting up a dynamic cell or array if possible. This helps check errors in your assignments and is generally bad practice when you transfer to a more strongly type language. Hope this helps.
Easy, you're using i for both loops. You can't do that, change one loop to a j
But won't that just involve a statement of j = i? I also thought there was only one loop. The for loop. edit: nevermind :) I see what you mean. Thanks.
True, I'm not on my game. Convert the list of students to a cell. Then you should be able to merge and display your data. cellNames = num2cell(namesAndGrades); reportGrades = [ cellNames, letterGrade']
I know nothing about MATLAB myself but my girlfriend does. They basically have to write a MATLAB code that generates the paper cut out template for a five-side planter with the basis that is an equilateral pentagon with α = 60 degrees.
I'm somewhat confused about your question. Do you want MATLAB to do this for you? Then I think you're out if luck. If you wanna have MATLAB do it for you, then this is what you need: http://www.mathworks.com/help/matlab/ref/sscanf.html sscanf('30 m', '%d%s') should do the trick. Then set it to convert depending on what the string is. 
Yeah its not real clear what you want. I suppose you could set m=3.3, and then use numbers in meters by multiplying by m to convert to feet. 
Sorry, was a bit unclear. I want the program input to be a number and then either m (meters) or f (feet). And then I want the program to be able to know if the input is feet or meters, and then perform the necessary equations to convert it and spit out the opposite distance after conversion.
If it's really critical for you to give your input as a string, you can use sscan to parse it, like the other commenter mentioned. You'd parse out the number and the unit string and then use a switch statement to take the appropriate actions. But parsing strings for thus sort of thing is really horrible. It's the kind of thing you do when it's the only option. If you're starting a project from scratch, there's no good reason for this sort of thing. 
I would go with (nnz(temp==0)+nnz(temp==3))==length(temp) temp==0 returns an array of the same length as temp where all zero elements are represented as 1, and all non-zero elements are represented as zeros. nnz (number of non zero elements) counts the number of non-zero elements (how many elements in temp are 0, or three for the second case). If you have as many 0s and 3s as you have elements, your condition is satisfied. You could use sum instead of nnz, as the sum of a binary array is the same as the number of non-zero elements, I'm not sure which one is faster, but doubt it will make much of a difference. edit: sum seems to be faster, not that it makes any difference unless temp is massive. E.g. sum((temp==0)+(temp==3))==length(temp)
Try unique()
They don't want unique, poor word choice on ops part. Trying to identify only 0 and 3 rows, so indexing is the way to go. 
I'll try out unique by checking the number and values of unique elements. Something of the sort number_of_unique_elements = 1 or 2 &amp; &amp; unique_values = 0 or 3
Aren't, or can't be?
I think hyperthreading works better when you have a diverse workload - ie it interlaces integer and floating point operations so e.g. for database workloads where you are doing a mix it can speed up (I think up to around 20%). But I think if you have just integer or just floating point (more likely in Matlab) then it doesn't help much. But I wouldn't expect a big degradation. I think generally high performance computing people turn it off though.
I posted the whole cause of the error to /u/trialofmiles . It was the mex function directly returning (but only when not in debug mode!!) nan at times. There weren't any zeros in the denominator and, on top of this, there was a check for them before the division was performed.
While I understand that the apparent correlation between the good and bad behavior that sometimes results from the use of uninitialized memory, it's really just a side effect of the fact that any C++ code that uses initialized variables has undefined behavior. I do totally get why the Debugger made it much harder to isolate the bug though. undefined sometimes means things will work as expected. Sometimes things won't. If I were to guess, perhaps MATLAB uses a different memory manager when the debugger is running when a MEX file is executed. That would explain the consistency with which, apparently, you can reproduce this result. Either way, it's not that MATLAB is doing something bad in either case, it's that your code doesn't have well defined behavior.
 x = 0:1:100; y = exp(x); That gives you 0&lt;x&lt;100 and the values of y = e^x for those x's. Is this what you're after?
You're looking for ismember() and all(). 
Register renaming is not how hyperthreading works. Indeed, with a hyperthreading-capable CPU, the registers are duplicated. Register renaming can be done with or without hyperthreading; it's totally independent. That said, the only real answer is to benchmark it and see. Run it a couple of times with HT both on and off and see if one of them is consistently faster. Even if the two virtual cores are on different instructions that doesn't necessarily mean that hyperthreading will speed anything up; you could imagine that most of OP's program is floating-point calculations so there's a high chance the threads will interfere with each other.
The whole point of HT is that there _is_ no penalty for a context switch between the two threads running on one CPU. This is accomplished by duplicating the all the registers and other aspects of the architectural state. Now, cache thrashing is a bit of an issue, of course.
What I was getting at is between several of the results and knowing some programming from C and how functions work (just like math), you should be able to easily work your way through coding from scratch a BFGS algorithm. It may take a bit of time, but you'll be learning along the way (which is most important). You could then also use those found online to test your own and compare results/runtime. Just don't copy/plagiarize!! If you need beginner help understanding concepts, ask here but also take a look at the resources in the sidebar. If you don't understand BFGS, then perhaps start by reviewing that method. If you've got code you already have tried and are getting error messages, wrong/way off answers, or other debugging issues, feel free to post a description of what's going on and we can try and help you. Even if you don't know where to start, try something. Also, as a tip: 4 spaces starting lines will eliminate any reddit formatting and allow code lines to show as you intended them to be.
I think there might be some miscommunication with you and your sys admins. Is the computer queuing system a [Oracle Grid Engine](http://en.wikipedia.org/wiki/Oracle_Grid_Engine)? There would be complications between specifying to matlab how many compute threads to use and telling the grid engine how many CPU slots you need. So it seems to me that in your case, you would want to tell the grid engine that your job needed 16 cores (i.e., a full node) but you could then tell matlab that it had access to 32 computation threads. This of course all depends on how the grid engine is set up, but it might be what the admins were warning you about. If you requested 32 CPU slots to the grid engine, your job would not be dispatched until there were 2 whole nodes available for your job to run...clearly you could sit in queue for quite some time depending on how busy the cluster is. Edit: Also I have heard that sometimes matlab does not "play nice" on shared computing resources if you do not demand an entire compute node. Some clusters insist that you run -singleCompThread in matlab and do all the paralellization manually, since the grid engine might not be able to control how matlab spreads its threads (similar to how it would be very inconsiderate to spawn a lot of background processes from a shell script in a grid engine environment).
Now I get what you are saying! I'll check what other people have done and then try to work it from scratch. Thank you
This one seems even easier to implement. What is the difference between '|' and '||' though?
I really don't know how matlab handles ones code to be multi threaded(I wish I did though). But the basic idea of multi threading is that if you have a task that has to solve 2 or more independent problems on the same process then you can just load that process to a cpu core and have two functional circuits of that core working on the same memory space(the memory space of that process). You have to bear in mind that it's the same process and this can only be done if you can do multiple things at the same time on that one process. This is advantageous because cpus don't have much memory inside them, and if they put more memory the access to it becomes slower because of the more complex memory addresses, buses and control circuit, so if you can load a piece of a process, and have 2 guys working on it instead of just one you will acomplish the tasks faster. The big issue here is that this requires syncronization, and that can be a very serious issue. If it takes you a lot of time(lots of lines of code) to syncronize the two threads, then your threads can be spending more time on syncronization then on solving your task... So do like Steve132 said, try it, and do benchmarks. It's the only way to know. If someone knows how matlab handles multithreading please enlighten me or give me a link to more info. Thanks!
Is each one of the bright spots a single white pixel? Or are they composed by multiple pixels? If they are single pixels and since the background is zero, I would use find() do retrieve the location of the bright spots. Then one can calculate their distances to the center and verify if there is at least one 'small enough distance'.
You need the index that corresponds to the maximum value in the array of heights. You can use the built-in find function to do this k = find( height == max(height) ) % i.e. find k such that height(k) = max( height ) time_start_falling = time(k);
I think you're looking for EXIF. How to do that exactly I don't know the specifics. 
'max' has a second output that gives you index of the maximum value. help max [h_max, idx]=max(height); t_max=t(idx); 
For an intro class? You could loop over all elements and compare them to max(height). It's very basic and not elegant - the other two top-level comments are more the route non-beginners would know how to do things. That is you have already covered looping (either for or while).
This is just a very roundabout way of using the second output variable from *max* like /u/rlrl suggests.
The Documentation, available online or from the help menu. It's very helpful and I would say the first thing you should start looking at.
There's a command that will do this for you. doc max Just run that, and everything should work perfectly. 
Yep. This. Slightly more complicated to learn, but very powerful, are *moments*. In this case you'd only need to calculate the first order moments to get the x and y coordinate of the centroid. 
"|" is an element-wise operator; "||" is a short circuit operator. In practice, use "|" when you want to compare elements of one array to another, but use "||" to compare expressions that evaluate to logical scalar values. For example, if you have: A = [2; 6; 3; 0; 7; 1;]; And you want to find the elements with values less than 2 or greater than 6, you could use: tf = (A &lt; 2) | (6 &lt; A); And tf would be a 6x1 logical array of [0; 0; 0; 1; 1; 1]. The short-circuit operator, on the other hand, only operates on scalars--if you tried to use it in the example line, it would throw an error. You can use it to prevent computationally expensive, irrelevant or unnecessary expressions from evaluating. For example, if you want to allow a user to pass a filename to your function, but you want to force the user to pick a file if the filename s/he passed refers to a file that doesn't exist, you could use: if (~nargin) || isempty(filename) || ~exist(filename) [filename] = uigetfile(); end In this case, isempty would only evaluate if the user passed at least one argument to the function, and exist would only evaluate if that argument was not empty. Since exist is much slower than nargin or isempty, and since both isempty and exist would fail if the user didn't pass any argument, the short-circuit operator can save us from errors and computation time. Note that the "&amp;" and "&amp;&amp;" operators follow the same convention and can be used in similar ways. 
www.imc.tue.nl, since you mentioned you didn't have any programming experience, and google. Also the matlab documentation is very good. 
There are a couple ways to do this: 1. The easy way is to use the PID block. Just set the Kp, Ki, and Kd values as required. 2. The longer way is to recognize that your PID block can be broken into 3 different blocks that are summed together. A Kp block, a Ki/s block, and a Kd*s block. The Ki and Kd blocks can be further broken down into two blocks (a gain block and an integrator or derivative block) This sort of process is central to simulink modeling. Taking complicated Transfer Functions and breaking them down into different bocks. So to make a PID you need 3 gain blocks, an integrator block, a derivative block, and a sum block (with three inputs).
Well.... there's a reason everything is left justified. 1) it already looks *O.K.* and there are *(loosely) "established suggestions"* to follow on structure/comments. 2) MATLAB doesn't (to my knowledge) set limits on the length/number of characters per line - i.e. there is no fixed width to center against. 3) in the same vein of 2, other languages may indeed set a fixed width of characters to read per line for code. If I remember correctly, FORTRAN is one such language (72 characters?). So, while centering may look pretty in Word, and in theory in an editor, the lack/restriction of a fixed-width "character field" really prevents centering (within a text editor) from looking nice.
oh great thanks I was lacking hold on
1) try a Google search on "MATLAB style guidelines" 2) That line is there as a reference to be (I think, again?) 82 characters. It is by no means a hard or set limit to the number of characters. I thikn it's just there to remind you that there may be other languages that you shouldn't go over this number of characters. Or perhaps text editors that don't/won't/are only a fixed width and hanging things on another line (there's an elegant way to continue your line to another). 3) was just for an FYI if you wanted other places that had a fixed width. As you say this is only for you, then go with what you feel will be/look most elegant. I do not, however, think there is a way to center your text from within the editor - you would have to export/copy to a markup language (Word, LaTeX) to get centering. Many people do have elegant descriptions within their code, left justified. But like you said, they have tabbed over.
Here are my 0^th - order guesses: You're using your function name, *F*, as the name of a variable and output, *F*, within your function (again, named *F*). The first and most easiest changes I would make would be to rename your *F* function to *funF* (in both its file name "funF.m" and declaration within the file) as well as it's occurance in your fminunc() call and call it as *@funF*. Another thing that catches my eye is you're using some function called dif(). Did you write this one? ...or were you meaning to use MATLAB's diff() function and misspelled it? This actually may be pointing to your error, can you share what the original error message(s) were (out of curiousity)? Try that and report back... Also, you *should* change your iterators from "i" and "j" to something else - both of those are intrinsic to MATLAB as the imaginary number (but in some instances MATLAB can differentiate the intended meaning). A simple change to "ii" or "jj" is normally used to keep the idea of the iterator but separate it from the imaginary number. Other languages may not play as nicely as MATLAB if you use just "i" or "j". Just a FYI/heads-up.
&gt; try a Google search on "MATLAB style guidelines" 
Yep, for row/column matrices (a vector), single indexing (3) is the same as (1,3) and (3,1).
And for a 2d matrix the index cycles through each column left to right. For a A = 3x3, A(4) =A(1,2), etc.
This certainly isn't the most elegant solution but I think it gets the job done. You'll have to create a function in a a file called y.m since the function can't fit on one line, and we're assuming that summing from -999 to 999 is sufficient for the summation to converge. I don't know of any way for matlab to actually do an infinite sum. There's a tool in the symbolic math toolbox that does finite sums, but this does the same thing function result = y(t) [p q] = meshgrid(t, [-999:999] * 11); temp = x(p+q); result = (-1).^[-999:999] * temp; end function result = x(t) result = 9 .* (-6&lt;=t &amp; t&lt;0) + (12-8*t).*(0&lt;=t &amp; t&lt;3); end 
I think I remember seeing or trying somewhere, likely using reshape(). I think MATLAB goes through indexing in such a way (conceptually) that your last (rightmost) dimension is on the outer most loop, and the first (leftmost; "rows") is always the innermost loop.
You don't even need matA(matA==0) -- matA(~matA) works just fine. 
The vertical line is there because it's a bad practice to have long lines of code. Poor style typically goes hand in hand with poor code. Center justified comment novellas qualify as poor style. 
You can put multiple functions in the same file, but the first one should have the same name as the file name, and only the first one will be accessible outside that file. I don't think you've copied your actual code because the second last line doesn't make sense, I assume you meant xdot2=((F0*cos(w*t)-k*x(1)-c*x(2))/m); But then, with this change your code not only looks fine, it works fine for me (r2014b). Have you put this code in rk_demo.m and run it by typing 'rk_demo' in the command window? 
100*nnz(VECT &gt; VAR)/length(VECT)
This is actually quite elegant, I would not have thought to use mean().
What do you mean by that? 
You're creating a logical array and then converting it to an index array unnecessarily. It's inefficient and generally a bad habit to get into. Length(find(x&gt;y))) is identical to sum(x&gt;y) and the latter is faster and more memory efficient. 
I do that a lot in machine learning code, it's a great idiom. 
OP here - thank you very much everyone for advice on PID block. It made it very easy and I got it working. I was trying to use transfer function blocks for PID. I am new to MATLAB and control systems. I was reading ahead of course work to get familiar with new topics. Thanks again Rob
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Vandermonde matrix**](https://en.wikipedia.org/wiki/Vandermonde%20matrix): [](#sfw) --- &gt; &gt;In [linear algebra](https://en.wikipedia.org/wiki/Linear_algebra), a __Vandermonde matrix__, named after [Alexandre-Théophile Vandermonde](https://en.wikipedia.org/wiki/Alexandre-Th%C3%A9ophile_Vandermonde), is a [matrix](https://en.wikipedia.org/wiki/Matrix_(math\)) with the terms of a [geometric progression](https://en.wikipedia.org/wiki/Geometric_progression) in each row, i.e., an *m* × *n* matrix &gt;&gt; &gt;or &gt; --- ^Interesting: [^Vandermonde's ^identity](https://en.wikipedia.org/wiki/Vandermonde%27s_identity) ^| [^Vandermonde ^polynomial](https://en.wikipedia.org/wiki/Vandermonde_polynomial) ^| [^Alternant ^matrix](https://en.wikipedia.org/wiki/Alternant_matrix) ^| [^Polynomial ^interpolation](https://en.wikipedia.org/wiki/Polynomial_interpolation) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cnzieaq) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cnzieaq)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
&gt; `length(find(VECT &gt; VAR))` Just FYI, you could do `sum(VECT &gt; VAR)` for the same outcome at a much lower cost (not to mention readability and elegance)
I'm on mobile, but you might see if the intersect() function could be applied here. You may have to split it to look for common x coords first, then take those and find the common y coords - not sure it it can handle both at once.
From the side bar: we don't do your HW! We're **more** than happy to help you with coding issues.... buuuttttt I see no code as of yet. Have you tried anything? Do you get errors? What do they say? If you do post any code 4 spaces starting a line will cancel out reddit's formatting and allow your code to display as you intend.
So this is code so far, I was given three data files: clear all; clc; filename=input('Enter the model number: '); if filename==1 M=csvread('Model1.dat'); elseif filename==2 M=csvread('Model2.dat'); elseif filename==3 M=csvread('Model3.dat'); elseif filename&gt;3 error('This data file does not exist'); end global n; n=length(M); fprintf('The length of the data is %i lines. ',n); I know how to query the user for the data file and read it in, and I'm pretty sure I need to find the length of the data file as well. I do not understand what to do from here. This is the step im stuck on: Query the user for initial conditions for the search you will need to supply the number of initial conditions with the functional form of the model – the first model has 2 parameters, the other two have 3 parameters to estimate. What initial conditions need to be given, and what does a parameter mean in this context? Thank you for the help as well, I really appreciate it. 
Thank you!! :)
Messaging you on [**2015-05-24 23:40:12 UTC**](http://www.wolframalpha.com/input/?i=2015-05-24 23:40:12 UTC To Local Time) to remind you of [**this comment.**](http://www.reddit.com/r/matlab/comments/2r34wk/question_about_integrating_methods_specifically/cnzr8fw) [**CLICK THIS LINK**](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[http://www.reddit.com/r/matlab/comments/2r34wk/question_about_integrating_methods_specifically/cnzr8fw]%0A%0ARemindMe! 4 Months) to send a PM to also be reminded and to reduce spam. _____ [^([FAQs])](http://www.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/) ^| [^([Custom Reminder])](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!) ^| [^([Feedback])](http://www.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback) ^| [^([Code])](https://github.com/SIlver--/remindmebot-reddit)
Sure thing! You'll need to use the functions *disp* and *num2str*. As you can imagine, disp displays things and num2str takes a number and makes it a string. The idea is that we're going to display a string, and part of that string will be a number (which will have been converted to a string). ***** Input: **T = 5+9;** **disp(['The answer to your question is ',num2str(T)]);** ***** Output: **The answer to your question is T (the number).** ***** Play around with that and you'll get used to it quickly. Just remember to format the string(s) in the disp function as a vector, or else disp will think you're trying to give it multiple input arguments. For instance, disp('string','another string',23,'b') will give you an error, but disp(['string','another string',23,'b']) will work just fine. Please let me know if you have any further questions! :) -Richard
Great! To clarify that bit about the multiple input arguments, all that really means is that you have to give the disp function one thing, rather than many. So let's say you want to display a message with some text, a variable, and then some more text/variables. If you just type all those things into disp(), it won't know what to do and you'll get an error code. However, if you put square brackets around your stuff, that tells MATLAB to put all that stuff in a bag and think of it as one thing. It's a minor detail but can cause some confusion at first.
It didn't initially work for me but the meshgrid function ended up being clutch and I was able to get a working solution which was great because I had spent so much time trying to figure it out. Thanks so much for taking the time to respond. I highly appreciate it. 
Ok. I guess that is a start but it doesn't show you really tried to do the problem. Let me try to help with the idea of the math but it will be up to you to code this in. Let's say you have a set of n data points: (x1,y1), (x2,y2),...,(xn,yn) And you want to fit that to a model. For the sake of this discussion, lets assume a linear m^th order polynomials^(1:see footnote). Y =c0 +c1 * X + c2* X^2 + ... + cm * X^m The only requirement I will state here is that (m+1) &lt; n. Anyway, the goal is to find the m+1 paramaters, c0,c1,c2,...,cm that minimizes the *square* error (hence, least-square minimization. Define: E^2 = (Y(x1) - y1)^2 + (Y(x2) - y2)^2 + ... + (Y(xn) - yn)^2 where Y is the equation above (aka, the model). The way this problem wants you to solve this is to use a minimization routine to find the c's to minimize E. Here we get to the crux of your question. In order to search for the values, you need to start somewhere. That is what the problem is telling you to ask for and then use. Split this assignment into two parts. The input parser and the data fitter. Do the fit first and then that will hopefully make it clear what you need to parse. ^1: This is actually a linear-type problem *which yours is not* and can be done more efficiently than this and will give a closed-form solution
That doesn't work for me. Is there something else I need to include? It just published &gt;$1.00 x^2 + 2.00 x + 3.00 = 0$
You're technically right based on his OP, but I think he just wanted a quadratic eqn. Reddits formatting made some things italics as well as exponentiated "extra" stuff.
You should absolutely not use the maximum of some measured data. That is highly sensitive to noise and outliers. Normalize through dividing by the mean. 
Thank you!! Yes I completely misunderstood the question
Submit your script next time so people can see exactly what you're dealing with (and if my advice doesn't work, maybe toss in exactly what you're doing), but my guess would be to place a * for multiplication as in: 14*pi(); My guess is that you've tripped into using the MATLAB Symbolic Math Toolbox (i.e. It's a feature, not a bug!) For me, the parentheses are not necessary, but I don't know about older versions, or what version you're using... Good luck!
pi is defined as symbol when using solve. You can get a numeric value by using double() on the answer you get.
The empty set of brackets is for integration options set by "odeset."
That did it, thanks! Do you know why exactly this was happening and what the 'double' function is supposed to do? 
 4 spaces starting lines will cancel reddit's formatting so that you can display your code correctly. e.g. a = b*c*d^(e*f*g) a = b*c*d^(e*f*g)
solve() solves symbolic equations and therefore outputs a symbolic answer. The reason for this, is that the symbolic output is the exact solution, whereas a numeric solution will (usually) be slightly wrong because of floating point representations (see [this](http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html)). A symbolic answer is also more useful, since its easier to interpret. For example, solve(x\^2==2) will have 2\^(1/2) and -2\^(1/2) as answer, instead of 1.41..... and -1.41... double() will convert the symbolic solution to a number ([float with double precision](http://en.wikipedia.org/wiki/Double-precision_floating-point_format)) which is the highest default precision you can get in matlab. The documentation in matlab is very detailed, you can type: doc functionname to read what the specific function does. help instead of doc gives a shorter version printed in the command window.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Double-precision floating-point format**](https://en.wikipedia.org/wiki/Double-precision%20floating-point%20format): [](#sfw) --- &gt; &gt;__Double-precision floating-point format__ is a [computer number format](https://en.wikipedia.org/wiki/Computer_number_format) that occupies 8 bytes (64 bits) in computer memory and represents a wide dynamic range of values by using [floating point](https://en.wikipedia.org/wiki/Floating_point). &gt;Computers with 32-[bit](https://en.wikipedia.org/wiki/Bit) storage locations use two memory locations to store a 64-bit double-precision number (a single storage location can hold a [single-precision](https://en.wikipedia.org/wiki/Single-precision_floating-point_format) number). Double-precision floating-point format usually refers to __binary64__, as specified by the [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point) [standard](https://en.wikipedia.org/wiki/Standardization), not to the [64-bit decimal format](https://en.wikipedia.org/wiki/Decimal64_floating-point_format) __decimal64__. &gt; --- ^Interesting: [^170 ^\(number)](https://en.wikipedia.org/wiki/170_\(number\)) ^| [^JSON](https://en.wikipedia.org/wiki/JSON) ^| [^Orders ^of ^magnitude ^\(numbers)](https://en.wikipedia.org/wiki/Orders_of_magnitude_\(numbers\)) ^| [^Single-precision ^floating-point ^format](https://en.wikipedia.org/wiki/Single-precision_floating-point_format) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+co1gyo3) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+co1gyo3)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
We'll do an example with y=A + B/x + Cx. First we need to linearize with respect to our parameters p =[A,B,C]. so * dy/dA = 1; * dy/dB = 1/(x); * dy/dC = x; Then you have to construct the design matrix (jacobian of y) let call it J. &gt; J = [dy(x(i))/dA,dy(x(i))/dB,dy(x(i))/dC] then following [taylor theorem...](http://en.wikipedia.org/wiki/Non-linear_least_squares) for i=1:length(x) J(i,:) = [1 , 1/(x(i)), x(i)]; %jacobian L(i) = y(i); % Y observation end parameters = inv((J'*J))*J'*L'; and [A,B,C] = parameters; Let me know if you need to go more in depth.
Just a tip: 4 spaces starting a line will format coded lines as you intend and not with reddit's formatting.
Thanks for the tip!
So, you want values of *"a function"* at which *"that function"* exhibits a certain behavior (a spike). First, what function (variable) are you interested in? Second, is there any special behavior of this function and/or it's derivative(s) that you can take advantage of?
There are a lot of additional questions you should think/address as well. How you you choose your "next" number to look for closest neighbors? How do you remove those already found? What if you've choosen 54 to be closest to and your vector contains 4x 53? I believe *(?)* that your example is coincidental in that the first 3 elements match your criteria, then the 2nd 3, then the 3rd 3, and so on...
Maybe you want something like: reshape(sort(x), [n, m])
Well I know how to define variables and make an equation, but I want my area value to change automatically when I enter a new diameter value 
This is essentially what Halsey said, but you are asking about a nontrivial task, or an ambiguous one at the least. This is known as clustering, generally, or histogram segmentation (one formulation of 1D clustering), as a special case that might be more directly applicable to your situation. Look at the k-means algorithm, for example. You could implement it yourself, or just find an implementation on the file exchange.
Your problem is maths not Matlab. To calculate the volume of the sphere, need to revolve the solid around the axis, so evaluate pi*integral(y^2, dx). So work out what y^2 is and substitute into your trapeze function. 
Is the set of values for your parameters discrete, i.e mass 1kg, 2kg, 3kg or is it more on a continuum - can you choose more finely grained? In the first case you have a discrete pb, in the secont case you can approximate by a "continuous" (normal MATLAbB optimization) - you can have domain boundaries and other more complicated but continuous constraints. it could be a good exercise to write your optimization a bit more formally as in: minimize in term of variables {x1,x2,x3,..} the objective function f(X)= ..., subject to list of constraints C1) e.g 0&gt;x1&gt;3 C2) eg x2&gt;x1 C3) e.g. g(X)&gt;0 C4) e.g x4 can only take values in the set {v1,v2,v3}
Maybe for the problem an exhaustive search could work too, if the total number of combinations is not too much. The number of variables would be dependent then on the number of independent choices. I agree that if the choice of clutch is only between {A,B}, then the variable should be the "clutch" and not the mass and stiffness - since I cannot chose a hybrid clutch with mass 1kg and stiffness 34567. Did I understand correctly that the problem is: *maximize* in terms of variables {clutch, piece1, piece2}, *the objective function* Simulinkfunction(clutch, piece1, piece2), *subject to constraints*: C_1) clutch in set {option1,option2,...} C_2) piece1 in set {option1,option2,...} C_3) piece2 in set {option1,option2,...} ? If so, this looks like an implicit/opaque/black box problem. And exhaustive search is almost the only way how to go with it. If the (number of options for the clutch * number of options for the piece1 * number of options for piece2 ) is not too big - and depending on how much does the Simulink function take to evaluate - you can code smth like the below pmax = -99999; for clutch in 1:1:number_options_clutch for piece1 in 1:1:number_options_piece1 for piece2 in 1:1:number_options_piece2 tmp=f(clutch, piece1,piece2); if tmp &gt; pmax pmax = tmp end % plus save your options end end end function result = f(clutch, piece1, piece2) % here you need a debundling of the symbolic options to the actual parameter call simulink with actual parameters end edited the formatting
Hope this helps [Image dataset](http://web.eecs.utk.edu/courses/fall2011/ece472/testimage.htm)
ah yes sorry was pretty simple thanks :P wasn't aware that I could access c drive within matlab itself
You may want to revisit the [fminunc()](http://www.mathworks.com/help/optim/ug/fminunc.html) documentation.. It describes how to input what value(s) you want the local minima returned near. But this isn't where or why your getting that error. You've defined the x0 input to fminunc() (appropriately from what I can see, I've never used this function). The error you get is from a non-defined variable (assumed to be) named "*x"* that is being used (or trying to be used) on (or near) line 21 in your function F (funF now, it seems you took my naming suggestion).
Then put them on imgur for the next guy!
Thanks or the response. I realize I made a typo when I created my recurrence relation (there was no reference back to f in the general case. Here is what I meant to type f(n) = sum(f( n-2+2^k ) / 2^(k+1), k=0..infinity) Note that this is not MatLab syntax. This is just a mathematical expression, and I'm interesting in numerically solving for f(n), especially for n = 2. 
imagesc, or use view([0 90]).
I guess I'm still a little confused. You give an example matrix, but f(n) seems to only have one dimension based on your equation. Do you mean: f(k,n) = sum(f( n-2+2k ) / 2k+1)
You might want to start by having all the formula elements defined then group them into the formula. Might also help if you set up the problem on paper to give you spem idea as to what needs to be defined before the formula. Doesn't look all that rough, but I would start on it asap.
Think it through. How would you know if a number is part of the Fibonacci sequence? You only need to know the numbers of the sequence to a point greater than the input. If the number doesn't match a number in the list... well, it's not a match. Programming is about thinking a problem through and considering how to get from A to B in little steps. Write your pseudo code, then try to write the actual code.
You should be able to used sprintf to generate the regex expression Something like: justAllowedChar = regexprep(hyphenRemoved, sprintf('[^%s]', allowedChar), ' ')
Sure, something along those lines. But you don't want to calculate the whole sequence (it's infinite), so you need a loop to check one number at a time. Get the input. Prime the Fibonacci sequence by setting two variables, one for the previous answer (zero to start) and one for the current answer (one to start). Then start the loop. As long as the input is higher than the current Fibonacci number, keep going. If you get to a point where you've "passed" the input number, you can stop the loop. I'd recommend a while loop.
Loop that part starting at a =a+b. What class is this for?
I had a similar bit of code to remove the double quote from a huge list and I ended up writing a line of code to replace each " with an empty space. If you're just trying to remove hyphens you could do something similar. When I get on my pc I'll post the snippet of code edit: here is some code noMoreHyphens = strrep( targetString(1,1:end),'-',''); i assumed your have a 1xn string, but you could adjust the code for other dimensions as well. ninja edit: removed an extra ')'.
What are you trying? What error do you get? If you post some code (suggested) put 4 spaces before code lines so that reddit doesn't format anything and we see your code as you've typed.
 userAge = inputdlg('Enter your age: '); I got my teacher to show me how to prompt the user using a dialog box, but now the rest of my .m file is formatted to use a number, not a 1x1 cell matrix. 
hmm.... does this run completely and not spit out any errors? Have you looked to see what is in your in and out arrays, and do they make sense?
That's okay it sounds like what I'd like to do is not possible in general. 
From the sidebar: **we don't do your homework!** What have you tried? Do you understand the math/theory behind what you're being asked? Do you *know* or have *some idea* about what you expect the outcome to be? Do you know where to make your *supposed* substitutions? ... have you tried them yet?
I have also tried deleted m and h from the set s and replacing all the s(4) with s(2) and s(2) with s(1) and replacing all the s(3) with (0.8-s(1)) and replacing s(1) with (alpham(v)/(alpham(v) + betam(v))). But I get these error messages: Error using odearguments (line 92) HH1/FXN returns a vector of length 4, but the length of initial conditions vector is 2. The vector returned by HH1/FXN and the initial conditions vector must have the same number of elements. Error in ode45 (line 113) [neq, tspan, ntspan, next, t0, tfinal, tdir, y0, f0, odeArgs, odeFcn, ... Error in hh1 (line 67) [T,S] = ode45(@fxn,tspan,s0,options); How do I make the commands use a vector length of 2 instead of 4?
Maybe try and approach the problem as "how can I create *synthetic* data and replace 'h' and 'm'"? &gt; I am supposed to use the substitutions h=0.8-n, and m=m(infinity)V(t)=alpham(v)/(alpham(v)+betam(v)) Can you define "h" and "v" based on this? 
Global variables? That's how you know it was written by a biologist. 
I tried that already, when you define h or m in the initial values part you are just defining what the initial values of the set are. The diff eq tell you how the rest of the graph will look. So in order to change the graph into become dependent on only 2 variable you have to change the diff eqs (or at least thats what my thought process is)
Okay I made some progress, when I run the program now it gives the planar graph that I want but it does not give me the graph of m,h,n on the bottom (not necessary but would like to have) What can I do to have them show up? function hh1(vstart,iapp,tmax) global C gNabar gKbar gLbar ENa EK EL %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Variables: % membrance capacitance uF/cm^2 C = 1.0; % Max Na conductance mS/cm^2 gNabar = 120; % Max K conductance mS/cm^2 gKbar = 36; % Max leakage conductance mS/cm^2 gLbar = 0.3; % Na Reversal Potential mV ENa = 45; % K Reversal Potential mV EK = -82; % Leakage Reversal Potential mV EL = -59; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Initial Values for m, n, and h are set to rest state v = vstart; m = (alpham(v)/(alpham(v) + betam(v))); n = alphan(v)/(alphan(v) + betan(v)); h = 0.8-n; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Solve the equations using ode45 % Initial Conditions s0 = [n v]; % Time span tspan = [0,tmax]; options=odeset('InitialStep',10^(-3),'MaxStep',10^(-1)); [T,S] = ode45(@fxn,tspan,s0,options); figure; subplot(2,1,1), plot(T,S(:,2)), xlabel('time','Fontsize',18), ylabel('Voltage','Fontsize',18) %subplot(3,1,2),plot(t_iapp,c_iapp,'r','linewidth',4), xlabel('time', 'Fontsize',18), ylabel('iapp','Fontsize',18) subplot(2,1,2), plot(T,S(:,[1:3])), legend('m','n','h'), xlabel('time','Fontsize',18) function a=alpham(v) theta = (v+45)/10; if (theta ==0) a = 1.0; else a = 1.0*theta/(1-exp(-theta)); end end function b = betam(v) b = 4.0*exp(-(v+70)/18); end function a = alphah(v) a = 0.07*exp(-(v+70)/20); end function b = betah(v) b = 1.0/(1+exp(-(v+40)/10)); end function a=alphan(v) theta = (v+60)/10; if (theta ==0) a = 0.1; else a = 0.1*theta/(1-exp(-theta)); end end function b = betan(v) b = 0.125*exp(-(v+70)/80); end function ds = fxn(t,s) % global C gNabar gKbar gLbar ENa EK EL istart istop iappl ds = zeros(2,1); ds(1) = alphan(s(2))*(1-s(1))-betan(s(2))*s(1); gNa = gNabar*((alpham(s(2))/(alpham(s(2)) + betam(s(2))))^3)*(0.8-s(1)); gK = gKbar*(s(1)^4); ds(2) = -(1/C)*(gNa*(s(2)-ENa) + gK*(s(2)-EK) + gLbar*(s(2)-EL)) + iapp/C; end end
Same thing, when it comes to writing decent code. 
This sounds very much like a convolution operation. You could look at conv2 and related functions. 
I haven't used Maple since highschool (and actually used MathCad for the most part), so I'm not up-to-date with Maple, but why would you use at all instead of MATLAB? Sorry that i can't answer your question, im just very curious. 
Notjames is correct, alternatively, just reverse the loop! C=[] % you need to initialize C to use "end" as indexation for k=n:-1:1 C(end+1,:)=B(k,:) end 
I've heard that they teach Maple in Engineering courses. I'm starting EE next year, and am doing a bunch of study this year to familiarize myself with a lot of what I'll see in EE. Would MathCad be more likely to be encountered in an Electrical Engineering course? Also, I was under the impression that certain things were easier to accomplish in Maple. I've read that it's a better CAS. Though I haven't seen any reason to believe that yet.
Ah alright. I haven't used either for engineering. For EE i think either would be good. MathCad is generally just a CAS but it is easy to setup assignments and documents in it. Whereas MATLAB is just to make calculations and simulations (I use LaTeX to write and format all my documents, and MATLAB for the calculations). I've mostly used MATLAB in Computer Science classes and for Statistics, but it is also very good for making simulations. I've used it for brainwave recording/simulations and it even supports [circuit design and simulation](http://se.mathworks.com/help/physmod/sps/powersys/ug/building-and-simulating-a-simple-circuit.html). If you are starting in EE next year i would also suggest you familiarize yourself with LaTeX, since it makes all your assignments and reports look so much better and more professional (also supports circuit design). 
There's no need for any looping, you can simply call: C = B(end:-1:1,:)
Excellent!
I've found some stuff to teach myself LaTeX. It's not easy to find beginner stuff for LaTeX though. I've used some LaTeX formatting in some math and calculus subreddits when posting there, but that mostly involved copying pasting stuff I found from Google searches and modifying as needed.
Looks like you're missing a comma between the two arguments of `sum`
Simulink only knows about the model workspace and the base MATLAB workspace, so changing variables that correspond to Simulink block values in a MATLAB function won't work. Instead, try manually changing the Simulink block values in your function with `set_param()` and fetching values with `get_param()`. Another alternative is using `assignin()` to move data from your function workspace to the base workspace and vice versa, but that's really messy and you should avoid that if you can.
Thanks, I got it now!
http://www.mathworks.com/help/supportpkg/raspberrypiio/examples/track-a-green-ball.html
&gt; 1) Just use a variable name. If you say a=4 in the work space and use "a" in any field then in will use it. But that doesn't work if you put the a = 4 within a separate MATLAB function. Simulink needs "a" to either be in the base workspace or the model's workspace. I learned this the hard way years ago when trying to develop a GUI that would simulate a model in the background with user input values.
Perhaps using python to parse and return the info I need? thoughts?
I don't mind coding in a mark-up language, and I don't mind learning it. Are there things in LyX you can do that LaTeX editors can't do or do as well, or is it just for people who don't want to spend the time on learning LaTeX or don't have the time to code the markup and don't need it that much?
I don't understand the problem. Don't make it a function, make it a script so that the workspace is global and just run it. 
Thanks for the tips. I was starting to move in the Lxml direction. I'm in the same camp (mech/chem eng) which I why I am in the matlab camp, but its sounds like your idea will be much more appropriate for my situation. Also, for intermediate file sizes I have heard that switching the parser in matlab from DOM to SAX might do the job. Any idea how one does this?
It all depends on home the txt is formatted, better to use .mat or .csv in future. if the data contains a row of data for lmn = 1:number_of_files Data(:,lmn) = load([filename_',lmn,'.txt']); end if its a 2v2 set of data for lmn = 1:number_of_files Data(:,:,lmn) = load([filename_',lmn,'.txt']); end etc
Okay. There are a lot of ways to do this but you could probably use txtscan() to read the files into cell arrays. Depending on how you want to go about picking the files you can have Matlab do this for you by using the dir() command or passing in the file names when you call the function as variables.
I'm not sure if this works on your version of Matlab, but in 2013b you can drag and drop a text file into the Workspace and Matlab will build the import function for you. Then you can loop through the filenames and call the import function to get each file's data.
The spelling looks fine. Is the function in your path? 
When I was in college all my math classes used Maple. I remember my Calc III prof poo-pooing matlab for being much weaker for symbolc math. This was about 10 years ago, though. 
Didn't matlab used to include the Maple engine for doing symbolic math? Around when did they get their own? 
akdhfpuiabdufba;djflkdfpkporkltkgne;kln;klnms.,dmfv thank you.
This, exactly!
If it's the only function in the file it doesn't matter.
Not really as I don't give my variables any real values (don't want to parametrize the model). I think isAlways(.) does the job though.
Spot on, thanks for your help!
This might be it. Optimset seems to work though.
Would that be the only way to clean it up?
First of all, that is a severe abuse of find(). I'm a little surprised that the editor isn't hilighting that and telling you to fix it. Second, I'm not going to do your homework for you, but the solution involves sum(), mean(), and clever use of indexing. It's a one liner. 
You could call find on multiple columns at once: count = length(find(a(:, 2:9) &gt; eight_years)) Alternatively, use a [for loop](http://www.mathworks.com/help/matlab/ref/for.html): count = 0; for idx = 2:9 count = count + length(find(a(:,idx) &gt; eight_years)); end That same kind of for loop structure could be helpful for generating the report. Also check out the Mathworks documentation on the find command. It can output the rows and columns for each entry that it returns: [row,col] = find(___)
dbstop if error Then recreate the error. It'll stop where the error occurred 
Yea this image probably wasn't the best demonstration, but sometimes they look like this. The cells take on different shapes as they are being "squeezed" by surrounding cells. Also the blurriness is due to them not being all within the same area of focus. I will keep searching, thanks for the input!
Thanks, I will look for it. I downloaded the segment tool, and it does a nice job at picking out the bright puncta but a bad job at maintaining the borders as well. Thanks for the input.
This may sound crazy at first, so bear with me. For each number in the list, test whether it is prime. If it is, put it in a new list. 
This is the best response.
This is correct. In fact, looping over the last index in an N-dimensional array is MUCH faster than looping over the earlier indices. This seems to scale very rapidly as dimensionality rises. I looped over the first two indices of a 4-d array once. I think it would still be running if I'd left it.... 
This is covered in the ginput documentation. Ginput operates on the aced in the figure in which the user clicks; if an axes does not exist, it is created. Your blank figure doesn't have an axes until you click. 
Thank you.I just want to be helpful. 
If it is only for better presentation, you can plot the curve with a line first and then plot o's for some of the data points only. Won't work with legend though, just a quick fix.
I imagine you were plotting something like this plot(t, signal_x, 'o-') the reason the density is so high is because you have many datapoints in your t and signal_x try plot(t(1:2:end) , signal_x(1:2:end) , '-o') or plot(t(1:5:end) , signal_x(1:5:end) , '-o') to lower the density, this is only choosing a subset of the original t and signal_x for plotting
Sort and plot every n samples instead of every data point.
This is probably the better option as my solution requires a mouse click.
Isn't the whole point of dot() to avoid this? It calculates all the dot products of vectors along dim in arrays. So you should just have to reshape the data appropriately and call dot() once.
Regardless of style this may be misleading, discrete data points typically denote discrete measurements, make sure you note that you're only plotting every nth point in the figure caption. n = 10; plot(a,b,'-') hold all plot(a(1:n:end),b(1:n:end),'o') 
Which is a dot product.
Wasn't thinking clearly. Yes. Retract previous comment and going home.
Why are you looping to do a matrix operation? 
How are you calling literally every other function? Do you assign everything to a handle? 
No, I only have one function I created. So far I'm only following what I've been shown in class. We did a similar problem in class which only mentions the function one time: &gt;%Solve for x using the ode45 function &gt;[T,X]=ode45(@MCK_fcn,T,X0); &gt;x_ode45=X(:,1); Where the function is like this: &gt; function [x_dot] = MCK_fcn (t, x) Hopefully I am making some sense 
Just looked at your picture and figure out what you're trying to do. The @ followed by function name is only used when you're passing a link to one function as an argument to another function (called a function handle) (for the ode45 example you listed in another comment, you're calling the ode45 function and telling ode45 to use a function called MCK_fcn etc). To call a function by itself, you don't need to make a function handle (using the @) -- just use the function name followed by the argument in parenthesis. So instead of T = @Prb24_fcn,D you need T = Prb25_fcn(D); 
I believe you would need to sum them as well. Since the dot product of v*u is the same as v1*u1 + v2*u2 + v3*u3. You would be looking for sum(U.*V) instead. 
You can also use [this](http://www.mathworks.com/matlabcentral/fileexchange/42560-line-fewer-markers) function from the file exchange.
I haven't done MATLAB in a while - but just thinking generally - couldn't you make foo its own object type/class and then only define the method for operating on that method type/class? I think if you did it with inheritance from the class of the other properties then you'd still be able to use the methods that work on the other properties on your foo class. But IIRC MATLAB doesn't have strict typing? So you'll have to see how that works... sorry for the rushed answer.
Hello. What do you mean with your last sentence? Sorry, I cannot understand.
You can do this with eval() But eval is evil and should never be used. You should find a different way to solve the problem you're trying to solve. 
This is hard to figure since reddit can screw with formatting at times if you do not do it in code. I do not have that textbook either, but here is a different example that may be able to help. Note that `.*` (which I do not see in yours but may be due to reddit) clear;clf [X,Y] = meshgrid(linspace(0,2*pi,100)); % 100 x 100 grid in [0 2*pi]^2 Z = cos(2.*X) + sin(3.*Y) + cos(X.*Y); mesh(X,Y,Z) At this point, if you want more help than that, (a) restate the question and (b) show what you have in proper formatting so that I/we may be able to diagnose a real issue. 
You can expand the elements of a cell array as individual function arguments using {:} "slicing" notation, like this: A_cell = num2cell(A, 2); % convert to a cell array of matrix rows F = feval(f, A_cell{:}); 
We've got no problem helping you figure things out, but "I need help doing problem 12.3 in XYZ textbook" is a bit of a stretch. From the original post it wasn't clear what you were trying to do and what the problem/error was.
I've yet to hear of anything automatic, but with scipy and numpy, most of the lines will translate one to one with only syntactic changes. Hope that's something useful.
Awesome! Thanks a bunch!
Describing the errors you're getting would be helpful rather than just source. A few things at a glance though: 1 - Matlab is fine with indents. 2 - 'not' is invalid. Use '~' 3 - If you mouseover the highlighted blocks you'll see they're not errors, but warnings / suggestions.. in particular that you probably want to suppress the line output with a semi-colon
400 LOC is pretty small, man.
I don't, actually. Should be able to find quite a few Matlab primers in general though, either from Mathworks or university sites. 
Have you looked at the documentation? What part of it can we help you understand? 
What a useless reply...
Been doing that by hand all day, easier said than done lol
how do you define an array of random numbers using the rand() command? from that array, how do you find the successive cumulative sums using cumsum()? once you have the array of s_n, how do you plot that against n, along with y = 1/2 vs n, using the plot() command? edit: all of these answers are found in the MATLAB help system
y0 should be the values of of y at tspan(1), i.e. at the first value in time. Having the wrong initial values will give you the wrong solution values (you are then trying to solve another problem!), but depending on what equation you are trying to solve and how good your guess is, you may or may not end up with a good estimate of the solution.
To OPs: **we don't do your homework!** To users: **we don't do *{their}* homework!**
Thanks! Did what I want. I'll have to dig into it's inner bits and see what it's actually doing and why MATLAB forces itself not to do this.
They could be guesses if OP is looking for a particular eqilibrium.
True. I just assumed that OP confused initial condition with initial guess like the one used in fsolve. 
I have never heard of it. At least not directly due to matlab. Could you have overheated the CPU? You're computer *should* prevent that but sometimes it can still happen. Either way, I doubt it was "instant", especially if you've run the code many times before.
No, like convert the edit box text into an anonymous function.
&gt; But eval is evil and should never be used. Careful. `eval()` has a purpose, just not the one many try to use it for (sequential/dynamic variable names). If I'm prompting the user to enter a formula, it's going to get returned as a string, and you need `eval` to convert it into an anonymous function: myformula = 'x.^2'; f = @(x) eval(myformula); f(2); Sure, we could go on about the merits of having a user defining the equation and how to keep it error free, but with this implementation `eval` is the appropriate function to use.
your computer should shutdown before critical temperatures are reached or at least before any permanent damage are done
It's a pre-built machine that I got a couple months ago. The vendor will replace it with a new one but as this has happened twice to me now, on two totally different machines, I need to figure out the root cause. 
how old is your computer? It can crap out due to transistor failure and what not. Maybe running matlab was just a coincidence to him dying anyway. Edit: never heard of matlab killing the psu.
Old one was 2.5 years old at the time of failure. New one is a 3 month old $2k pre-built machine. Both broke in a suspiciously similar manner. 
look into while loops as way to check conditions and suck people into answering things right matlab comes with a good help system either go to the help screen and search what you are looking for or int eh command window type in "help" followed by the function you need help with and it will display information about the function and similar functions. also ctrl-I will smart indent the script
Ooooo thank you!
It's one of those cringe things in Matlab, but you *could* use eval() to literally evaluate what the user enters. E.g... eval(['a = ' z{1} ';']);
Until the number of digits is LESS than 100? Sounds easy. Fibonacci = [0 1]; or Fibonacci = [1 1]; depending on your interpretation.
Or in case you meant until finding the 100th value... almost as easy. Several different ways. fib = zeros(1, 100); fib(1) = 1; fib(2) = 1; for i = 3:length(fib) fib(i) = fib(i-2) + fib(i-1); end
If your prof said you didn't need the book but is now saying to do a problem out of the book, this sounds like something to bring up with the prof or TA
I appreciate your help lol. It'd be nice to have the solutions lol but the questions are greatly needed lol
Thanks! I ended up doing eval(cell2mat((z(1))))
Eval is bad. 99.9% of the time you feel the need to use eval, it means you should find a different way to achieve your goal. 
You should say that before you answer his homework for him. 
What values will i take on during that loop? What would you expect to occur as a result? 
In addition to other answers, you can use ismember() to compare two columns of cells. Say you have master column A and test column B and you want to see which elements of B are in A. Val = ismember(A,B) returns a logical (boolean) 0/1 list of matches.
Why are you trying to solve for 5 unknowns with only 2 equations in the first place? By the principles of math you'd need 5 equations to be able to determine the 5 unknowns. 
Thanks guys I actually figured it out before I ever came to check back! sorry
Try `u = [x y z] / sqrt(x^2 + y^2 + z^2)`. That ran fine for me.
something like outs = num2str(Y(1)); for i=2:length(Y) outs = [outs ', ' num2str(Y(i))]; end or you can do it inside the function that created Y.
... Why? Do you want it to be [1 2 3 4 5] is identical to [1, 2, 3, 4, 5] Unless you want this: '[1, 2, 3, 4 ,5]' 
By the way, if you wanted to generalize this, you could also do the unit vector of any vector `v` (any length that is) with: u = v ./ norm(v); 
I'd imagine the hardest thing is going from 1-based arrays to 0-based arrays. Or does your matlab code have a lot of built-in functions?
The problem comes from the fact that you're only iterating on `i`. To deal with this you'd need to use a nested `for` loop so that you can get more than just the diagonal. In your example A would stay as `A(i,:)` whilst B would be `B(:,j)` (if j was the additional variable you used. These calculated values would then be inserted to `y(i,j)`. You should consider whether the way you're multiplying the two vectors is inline with the requirements of the question (you're still using matrix multiplication) - and think about how you could do it without use of the MATLAB function.
Just speculating, but perhaps brute-forcing a CSV file?
That's why I asked. I want to make sure OP isn't trying to do something the hardway.
The PTB has a massive pile of demos. Find the one closest to your experiment and hack it. psychtoolbox.org/overview/ Good breakdown of the demos here http://peterscarfe.com/ptbtutorials.html Also - post on their yahoogroups forum, but only once you are really stuck! https://groups.yahoo.com/neo/groups/psychtoolbox/info
I second this. Their group is the best to go to for support. They have an active community and extensive documentation. 
MATLAB is solving the equations and giving 3 answers that are all solutions to the set of equations you've given. You can get one answer using `sol=solve([Equation_1,Equation_2],H_3,H_2, 'PrincipalValue', true);` As for the complex numbers, are you sure that the equation system has real solutions?
You can make an array of whatever size you like with the various array creation functions: zeros(), ones(), true(), false(), and so on. Do you want to use "O" as a variable? Or a value? You can use it as a variable, for example, like this: O = 5; which creates a variable named "O", with a value of 5. Must "O" be a string? Well, you tell me. Is "O" a number? 
Well, when you display the board, you'll have to use strings, of course. Internally, there's no reason to use strings. Numbers are way easier to manipulate. 
So for example it would look like field = [ 'O' 'O'; 'O' 'O'] ?
I was attempting to do something similar to this a few months ago and was unable to get a printout of the matrix with the letters in it. I was using words for my strings. I feel like it shouldn't be a problem for MATLAB to print: [ Zach, Martin, Sean; Trevor, Dylan, Nick] Any advice would be much appreciated 
 x = 5; y = 10; repmat('O',x,y) 
 input = [1 5 10 15 20] temp = arrayfun(@(x)num2str(x),input,'UniformOutput',false) output = ['[' strjoin(temp,', ') ']'] 
not without a license. 
Would it be possibly if the were to have someone with legit to copy the files taht were installed over to his installation folder, after all i figure that all that is installed are some classes and whatnot?
Fastest way I know to create char matrices with a default value is: M = char(zeros(m, n, 'uint8')+c); Where m and n are your matrix dimensions and c is the character to use as default. If I recall, this method is slightly faster than creating a zeros array and assigning all indices to the default, and it's way faster than methods using blanks or repmat (though for small arrays, the difference is negligible). 
Just wondered, no harm in asking
The third argument that xlsread returns is a cell array of the Excel tab contents. This cell will contain the numeric and non-numeric data. From there you can pull out the character data and index it to whatever logic you perform on the numeric data. Cell is the best data type for storing rows and columns of character data. If you are unfamiliar with the cell data type, I recommend referring to Matlab help. Hope this is useful! 
From the sidebar -------------------------&gt; &gt; Please do not ask us to help you pirate anything. If you're a student, Matlab isn't very expensive (and it wouldn't surprise me if you have a site license from your school). If you work in corporate, you should buy it since (a) for the time savings, it should be worth it and (b) the company can get in some really deep shit. If you still can't get it, use Octave.
Oh, well in that case you need to find the fourier series representation first. That's a math question. Once you have the fourier series representation (mathematically), you can post it here, and ask for help about how you would generate that in matlab, filter, etc. 
I have R2011a student edition, and I was able to install it on 2 machines, although things may have changed since then.
Thanks, was just wondering, I kinda want to have it on my home desktop as well as my laptop just for convenience
In the first code you do sum(cross(dr,d2r)).^2, but in the second you square the cross, then sum Sorry for formatting, on mobile 
Thanks! That makes sense.
You could try creative ways to create a circle mathematically and then flag any elements within it's radius distance as 0 and those outside as 1. You could make a meshgrid of x and y, calculate a certain distance to each point from the origin, and flag that way. This would be my approach (not knowing anything more about your task).
How are you calling your input routine? What does your text file contain? ..types of data?
How are you expecting help with out describing what your doing. POST YOUR CODE PEOPLE~!
 [xGrid, yGrid] = meshgrid(1:201); radiusGrid = hypot(xGrid, yGrid); yourMatrix(radiusGrid &lt; R) = 0;
Thanks, yeah that did it, just figured out to measure out norms&lt;radius and cancel out those elements 
(((x1*a) + x2)*a + x3)*a = x1*a^3 + x2*a^2 + x3*a by distributing the a's. If u = [x1,x2,x3] and v = [a^3, a^2, a^1 ], your "leaky sum" is just uv^T
You can do it this way, or you can create your own rgb image and display it with the image() function. Personally I consider that a cleaner solution, but both work. This is, admittedly, a weak point in Matlab. The plotting tools are great, until you want to do something a little odd, and then everything becomes a pain in the ass. 
ohhhhhhhhhhhhhh this was a huge help, thanks! (to both of you) :-3
I don't really like it, to be honest. The viewer where I can see the variables and entries is what I meant to say.
All the segmentation faults. 
2014a is 2 station limit.
Of all the answers I expected to see, I never thought you'd say that.
It is a legitimate copy of Matlab R2013a student version downloaded from the Mathworks website and installed on Ubuntu 14.04. After one of the latest ubuntu updates it gets a segfault upon startup. So yes, it works as intended at first but then fails.
Seems like the problem is Ubuntu then, not Matlab. You should open a bug report with Ubuntu so they can fix it.
This is almost certainly a problem with your computer. Segmentation faults are not the result of something happening inside Matlab. A segmentation fault is an error that occurs in compiled code, which in this case is the Java vm. Either your kernel or the Java runtime you are using is broken. If you aren't using Matlab bundled jvm, try that. If you are already, try switching to an external vm. Blaming a segmentation fault on Matlab is like blaming your cars motor failure on the coffee in your cup holder. The coffee has nothing to do with it.
I use Vim setup with [mlint](http://uk.mathworks.com/help/matlab/ref/mlint.html?refresh=true) for error checking.
I just wanted to add: I'm getting semi-frequent segfaults in MATLAB R2014b these days too in Ubuntu 14.04. I'd love to know if you sort out the issue. I think MATLAB Desktop environment is generally awesome, though. 
If you post the data I might be able to help you debug. But you can start by trying the load (); function on your text file. Might work...
In case anyone else comes across this question looking for answers I ended up using this tutorial material from Rutgers University. I've only started working on it but I've found it by far more useful than other sources I've tried so far. It's back to the very basics so if you are a bit more experienced you may want to skip the first lecture or two (look at the slides on powerpoint before you start to see where you should start and then listen to the lectures). http://ruccs.rutgers.edu/matlab_course/course_materials.php I hope someone else finds this useful! Thanks for all the replies. 
Hey, very handy! I will add that to my collection of links to dump on newcomers.
You could plot the curves solving the high side, low side, and normal of the function. Then curve fit each and put them all into the same graph. I too would be interested in the short way to do this as well as the prettiest way.
 newname = sprintf('%s%i', name, index);
MATLAB doesn't support cascaded indexing into numerical arrays. You can, however, cascade into cell arrays (e.g. `Xdata_run{k}(:,1)`) but this will require you to reformat your input data. If your input data is all the same format, I would personally leverage `load`'s ability to dump data into a data structure, where you would have something like `mydatarun(k).someothervariablename` rather than indexing into columns like you have it now.
This is a pretty standard stats problem. I don't own the stats toolboxes, but I'd expect it's in there. If not, I can guarantee that a look in Numerical Recipes would be fruitful. I've got a [package on the File Exchange](http://www.mathworks.com/matlabcentral/fileexchange/26586-linear-regression-with-errors-in-x-and-y) that calculates uncertainty in the slope and offset, but it is pretty specific to data with error in both x and y variables (and fails if you try to set the error in x to zero). Barring that, there's always Monte Carlo methods.
Maybe you should think about how those nested for loops are going to behave. 
Thanks. I did this and got the answer very close to what I was looking for. After searching a lot, I figured out that I can add (1/SD) matrix as Weights.
Yes. Variance is homogeneous. So the effect from error is limited. What I did was I added my 1/SD^2 matrix as weights. Then I can get the 95% confidence interval. Seems like my predictions from the model is really good. If data were heteroscedastic, it seems that the same method should work. My stat knowledge is bit limited. But during todays research I found [this](http://www.graphpad.com/guides/prism/6/curve-fitting/index.htm?weighting_2_2.htm) explaining a heteroscedastic data. [Here](http://www.graphpad.com/guides/prism/6/curve-fitting/index.htm?reg_weights_tab.htm) they explain how to use weights for such issues. Anyways since my model is adequately explaining the data I am happy. Thanks a lot for your lengthy reply. 
You index in Matlab with parentheses. For example Foo(1:10)
http://www.mathworks.com/help/matlab/ref/rgb2gray.html
You are shadowing the function imagesc by assigning a variable to it. Change the last three lines to: gray = uint8(0.2989*rgb(:,:,1)+0.5870*rgb(:,:,2)+0.1140*rgb(:,:,3)); figure; imdisp(rgb,gray);
Well, the unit step function is 1 at x=0, but the heaviside function is .5 at x=0
If you don't get how to use the heaviside function for your application, you've got a problem understanding math, not Matlab in particular. The second one is really very simple. You don't really even need double(). You should figure it out for yourself. 
I know what you meant. It's very simple. You should figure it out, and it will help you to understand the math better. Hint: you don't really need the double(). 
0/0
Thanks. How do i prevent that from happening?
Mind passing it on as a script rather than a function? (as in with an example input(s) of A where you observe the variation of NaN and non-NaN). I would also put out that your labeling of SA is a bit confusing, but I believe you're grabbing the second argument of the the size (column count) as part of the definition for each loop, even though your notes says that the first one is supposed to be a row... As a hint, with the knowledge that the size function will always be a 1 x Dimension argument, maybe just calling SA(1) for the j definition and SA(2) for the i definition.
Thanks for the answer! Gonna look in to your suggestions. Do you think I can fix the a/0 problem if i put something like: if A(J,J) ~= 0 do this: ?
Think about what you do when computing the echelon form in the case you get a zero on the diagonal. Also what happens to the determinant when you have dependent rows?
I know- but heaviside(0) returns .5, and I wanted it to return 1. (and there is such a function used all the time) So it was related to the definition of the function.
A general debugging tip: add assert(all(~isnan(A(:)))); to your code and type dbstop if error in your command line. Then you will automatically get stopped if any element in `A` comes up `NaN` and you can check what's happening. Use `help` to check what the above commands do. 
I don't get the same determinant as Matlabs det(A) function if I use that.
No.
why not? can u give an example?
the nanmen(det(A)) wont be the same as nanmean(mydet(A)) if mydet(A) is nan :\
Yes. But if the matrix is m\*n with m&gt;n then the last row may have more than one non-zero entry
are you trying to solve it analytically or numerically? do you have to use matlab to do this? what methods other than dsolve() have you used?
It's a fairly menial task for MATLAB. As you said in your edit, just read the pixel colour intensity in a for loop and work out the sizing from there. 'imread' is what you want: http://uk.mathworks.com/help/matlab/ref/imread.html You'll get a MxNx3 matrix - r, g, b If you want to outsource the code I'll do it!
If you put four spaces at the beginning of a line You can write code without reddit changing your formatting. Like this: y = x*z^2 
I think you always assign f to 0 everytime you call mytrap
Could you provide an actual sample picture of the ones you should analyse so we can better see what we are dealing with? Another question: What exactly do you have to determine? Is it the height of only one of the phases, all of them, or their relative heights (percentage)? Determining the best approach depends on how the images look in detail and what exactly your task is. If the color differences are distinguishable enough, you won't even have to bother with finding the edges themselves, but you could just threshold the image with a certain minimum red value so only the pixels that are "red enough" remain, for which you could then count the nnz (number of non-zero elements, i.e. of the red ones) value, for example. If you use the vertical pixel line as suggested in your edit, it should be pretty straightforward, because then the nnz of the thresholded image is exactly the height of the phase. You will then just need to find the constant that translates one pixel into one cm or whatever physical unit you want.
Try ismember, union, intersect, etc. 
&gt; We were given very little instruction in the use of matlab before being assigned this project and no one from our university seems to find this an issue. I think this is standard university practice! :) MATLAB is very well documented, and develooping your ability to find the tools you need to solve this problem is actually more important than the specific bits of code you learn. That aside, this is very easy to do in MATLAB. When you use MATLAB to [read an image](http://nl.mathworks.com/help/matlab/ref/imread.html) you can end up with an RGB format. The picture is now represented as a m x n x 3 matrix, where m&amp;n represent the size of your original picture and the 3 matrices in the last dimension are the red, green, and blue components of each pixel. At this point you'll need to play around with figuring out what actually matters in your picture. You could look at these three colours separately, for example, or look at the brightness of each pixel in [greyscale](http://nl.mathworks.com/help/matlab/ref/rgb2gray.html), or some combination of those things.
 %%
ArrayA(ismember(ArrayA,ArrayB))=[]
 N=[2 4 8 ]'; for i= 2:N; Doesn't this just run once, for i=2? Is there a way that I can make it so the for-loop runs separately for each value of N. for i=1:length(N) &lt;your operation&gt;(N(i)) end Also, why does the function take inputs when they are defined in the function?
You could mask certain colors and use [segmentation](http://www.mathworks.com/discovery/image-segmentation.html) to find their volume. Masking colors is the same as masking greyscale except you set brightness limits for each color channel separately and then *or* the three resulting masks together.
can you not just return VariableINeed as an output argument? If not, can you say more about the problem? the problem you present in the original post is solved by just returning an output argument from function A.m
hmm. i think i just broke it, let me try and fix it real quick edit: well i have a janky fix for now. Working on getting a real one going. edit2: i think it may actually be a server issue and not on my end. The links work for other languages, but not the matlab one, so i'll contact someone at the site and see whats going on.
1) you aren't correctly indexing the prior height 2) its very likely that your for-loop will only execute once, can you pick out why? 2) the way you *might* think to do (1) based off what you have originally in your OP will cause an error as you (likely) will be trying to access the h(0) element (there is none, vector/matrix indexing starts at 1 in MATLAB). 3) you need an "end" to end your for-loop
As an alternative interpretation: are you trying to inscribe N small (unit) circles around the circumference of one larger unit circle? Or as the other poster asks, are you trying to get concentric (sharing the same center) circles of various radii? Or completely different, you want to fit N "evenly spaced" circles within the area made by one larger circle?
@ is for defining anonymous functions, it's not related to the symbolic toolbox at all. 
You've got a geometric series, and the biggest advantage of MATLAB is that you can avoid loops with vectorization. Unless the course material is specifically asking you to use a loop, then opt for vectorization. Your vectorization of this would look like this A = [1:N]; B = [h.*ones(1,N)].*[rebound.^A]; No loop needed. 
BTW, in other languages anonymous functions are sometimes called lambda functions. I don't know where the term originates. 
Thank you! I definitely looked at the documentation, but didn't understand the differences between the functions, or quite how to do it, and googling it didn't seem to help. This may be partially attributed to the fact that I've been doing schoolwork for an obscene amount of time and am not really digesting info anymore (reason I am currently taking a break and browsing reddit). I've never heard of fminunc() or fminsearch() before and will read about them as soon as I get back to work. Thank you for your help!
A.m function [var_out] = A(var_in_A, var_in_B) var_out = var_in_A + var_in_B; end B.m function [var_out] = B(var_in) var_out = var_in^2; end Then: VariableINeed = A(blah0, blah1); B(VariableINeed); % Using the variable created in A
Do you have the Financial Instruments Toolbox?
That is the problem. Thanks very much.
Personally I've never used activeX objects in Matlab GUIs, but I assume it's nothing different from any other component. If you can edit the url setting from GUIDE, you can use set/get on the activeX handle to control it programmatically. Give the control a name and it'll be accessible through the *handles* structure. i.e. set(handles.myActiveX, url, "file://whatever/whatever.mpg") 
Can you go more into what you've tried so far? Functions used, error messages... If you post any code: 4 spaces starting new lines A.*B.^C*10e-3 will cancel reddit's formatting and display A.*B.^C*10e-3 as you intended and not ugly and hard to decipher like that.
well I've used the ar function, but this gives me a idpoly model and i don't know how to use this for prediction..
 dbstack
For reference, here is the textscan() command you would use: fid = fopen(filename, 'rt'); D = textscan(fid, '%f%f', 'Delimiter', ' ', 'Headerlines', 1); fclose(fid); % D is a 2-element cell array, each with one column % You can set CollectOutput (or whatever it's called - I don't have MATLAB open) to true to keep the columns together.
What are you using as inputs to the subclust function? Can you provide both the "code" around where you call it and (what amounts to) a "whos" on those inputs/outputs? Also, reading more of the docu, I'm *really* interested in adapting [subclust()](http://www.mathworks.com/help/fuzzy/subclust.html) and using this type of analysis in my own work.
The space between the %f%f is taken care of by the 'Delimiter' option. The '\n' is implied by the end of the format statement. I believe you can put it in there, but it's not necessary in my experience. **Also, I just realized I needed three '%f', not two.**
lol - didn't check back to see how many columns there would be either as for the space... I wasn't refering for it as the delimiter, you've done that correctly. I was saying that RE: the syntax of the initial format string. If you had N variables to write, shouldn't each one be separated by a space (syntactically) regardless if the delimiter is comma, space, tab, etc...
Hunh. I've always coded format strings with spaces. Maybe MATLAB is just *that* smart
That worked great! Thanks. 
Interpolation is the thing to do here. Check out griddedInterpolant or scatteredInterpolant (depending on whether your data is regularly spaced or not). Also, try posting this on MATLAB Answers. You'll definitely get loads of help. 
Yup, OP, this is the way to go. Use scatteredInterpolant and then write code to compute curvature (probably using finite differences) at test points. You can then get curvature everywhere on some grid, or whatever you'd like. 
Have you tried k-means? Other clustering algorithms can be useful, but I've always considered k-means to be the go-to. 
My first step into this is an EOF analysis. From what I gleaned from my 15min of Google search results, some of the concepts in how you set up the data seem analgous.
they made some improvements to the parallel computing toolbox, but if you're using fortran/c++ already, it probably won't matter
I just updated from 2011a to 2014b. I'm not sure of all the ins and outs of parallel computing and stuff, but there were a few reasons I upgraded: -Why not? It's free and it's the latest and greatest. -UI is nicer, tabbed programs make multiple functions easier to handle -Mac OSX Yosemite decided to have a huge problem supporting older versions. Works fine with 2014. -Certain older functions have been phased out and replaced with newer ones. Not a problem if you don't use them, but getting documentation/support on what they phase out gets more difficult. In the end, you probably won't notice a big difference, but with free software, why not?
Here are some great features that have been introduced in releases since R2012b: Completely new graphics system. A ton of bugs in the old system were fixed. The new system produces crisp anti aliased graphics. Graphics object handles are also no longer doubles. They are proper handle objects that you can manipulate using the dot notation. There are a few issues but fewer than there were with the old graphics system. A new data type called Table. This is a great container for heterogenous data. Great interpolation functions have been added to base MATLAB. Alpha Shapes have been introduced. Very useful for visualization and general computational geometry stuff. The list goes on. Two years for MathWorks is 4 releases. So, that's a lot of new features. R2015a is around the corner too. Also, hardware support packages. For all your cool DIY projects using Arduino, Raspberry Pi and even your Android phone. I've seen a lot of casual users have a lot of fun with these packages. The more you know. 
I'm not sure I understand that last line Please avoid this terrible coding practice. Which one? The one from stackexchange? In which case, how do I use dbstack they way you mean?
Hey Halsey, I'm sorry if I wasn't clear. I thought I'd answered your question, but I'll expand on it here. I am calling the ar function (m = ar(y,n)). y = my data n = model order m = an idpoly model My data (y) is part of an exponential and I would like to predict the values after my last recorded data point. The problem is now this: I don't know how to use this idpoly model (m). If I have a certain time series t, how do I use this model m to calculate the values y that belong to this time series? 
I just have a lot of legacy plotting codes, and I dont really want to update them at the moment. It will happen, but just know if you have old code flaoting around, 14a might be "better" for the short term. 
Once you've deleted the row the array size has changed. You'd do better to create a list of rows to remove inside the loop and then do it in a single operation at the end. Alternatively, you could do it in a single line using logical operators: Full(any(Nans==1,2),:)=[]; any(Nans==1) would flag the columns with entries==1, and any(Nans,2) flags the rows. EDIT: Further you could probably do the whole thing in 2 lines: Full = importdata('ITGAU.txt'); Full(any(isnan(Full),2),:)=[]; Another advantage is that for a large enough matrix, you'd notice this way is a lot faster.
That did it! Thanks. And it's much faster. I tend to rely too much on for loops...not good when I'm dealing with huge data sets.
Thank you, this is the perfect solution.
Not to encourage your use of loops too much, but you can get your original code to work if you make it count through the rows backwards. I=q:-1:1
That was quick, fixed it. Here's the code I ended up using in case someone from google finds there way here in 10 years. title([char(tableDates(1)),' to ',char(tableDates(end))])
Ok, for anyone interested I think I have a solution. I've cut the data up into the different regions and used the 'findpeaks' command, and then found the mean of those peaks for each region. Now, I don't know the details of "findpeaks" so maybe i'm doing something stupid but it seems to be doing the job, albeit slowly... I've gotta go through my data bit by bit
Ha, thanks for the effort anyways. Right after posting I thought it would be a better idea to assemble the string first and then pass it to title(). I'm really bad with strings and cell arrays so char() was the only thing I could think of. 
Ah, I think i see what you're trying to do now. I'll edit my other answer.
Yeah this is one of those vector indexing problems. Basically your problem is that the sizes of x and num don't match. You want the inside of the summation to be a matrix sized length(x) X num. You need to do some repmat's first to make x and 1:num into repeated matrices. Here's my first take, it is dependent on the dimensions of everything, so you probably will need to do some transposes to make it work: xp = repmat(x,1,num); N = repmat(1:num,length(x),1); y = 1+sum( (xp.^N)./factorial(N) , 2 );
With lots of for loops then. For n=1:num , and so on and so forth. 
It sounds like you didn't make the m file? Go to line 211 and see what command it is and paste it here. I would make an assumption just based off of the text alone that you can't write to the excel file you're attempting to write to because it's read only. There may be administrator access on the computer or file permissions applied to the excel file itself which blocks you from writing to the file. Not much else to do with the provided info...
A note on the @ symbol: In addition to defining an anonymous function (which other posters have already covered), it can also be used to create a function handle of a named function. For instance, if you said @sum, you would create a variable that was a function handle for the built-in sum function.
I did find the problem. I was running jayatana plugin for Unity so that IntelliJ would have a global menu in Unity. This made Matlab crash, and as soon as I removed it, Matlab worked normally. I would purge and reinstall your Java version.
And here's a hint for a 2D version (circle): theta = linspace(0, 2*pi, 100)'; radius = 3*ones(size(theta)) + 0.2*randn(size(theta)); [x,y] = pol2cart(theta, radius); plot(x,y) 
I think you're right. I understand that I will be changing the value of one pixel to a function of the distance to the closest black (or white?) pixel. The default bwdist() function calculates the euclidean distance. My first thought would be to calculate this on a pixel-by-pixel basis using a couple of for loops, but I don't know what function to perform on the pixel. I'm able to convert a picture to black and white and I can display that image in an output, but it's the inbetween that I can't think of how to do. I actually just started learning matlab this month, but I've got more experience with C.
Makes sense. Would definitely do the same.
&gt; but I don't know what function to perform on the pixel &gt;The default bwdist() function calculates the euclidean distance Maybe start with that
Ok, before we go further, can you tell me about your B/W image and/or post an example of it? Dimensions? #WhiteSpots?
I'm afraid I have to use a loop. Anyone got ideas?
.... and is this the only image you'll apply this to? Or is this one of many, that may take on different B/W shapes? ... and do your black regions *HAVE* to be contiguous (as in your image) or can there be multiple black areas?
Ok, here's my suggestion. Iterate with 2 for-loops over your image domain, checking for black pixels. Once one is found, you "step-out" your index +/-1 in all 4 directions and with a while-loop check if these are black, then step out +/-1 again, and so on, until you reach a step that returns you with at least 1 white pixel (your "while" ending condition). You've then got an *upper bound* on your minimum pixel distance. I say *upper bound* because there's a caveat. Remember back to your trig and 45-45-90 triangles (what we're ultimately forming). If the bases of your triangle are of unit length, the hypotneuse (the latest "corner" from your latest iteration) has length equal to sqrt(2). Now think of a situation where you may be on your 30th while iteration and you successfully quit out because one of the corners happened to be a white pixel. You've gone 30 units (steps), and the distance to that pixel (hypotenuse) is ~42.4 units. What happens if you have a white pixel that lies on one of your x/y axes and just happens to be 34 units (steps) away from your current black pixel? Or what about a white pixel that lies at (-33,4) and is ~33.2 units away from your current black pixel? [***edit1:*** I found a good image that depicts the regions you would still have to check for white pixels based on this method of simply steping out +/-1 each *while* iteration.](http://mathcentral.uregina.ca/QQ/database/QQ.09.04/bob1.html) Another 2 point to consider: 1. how do you handle the situation where you have black pixels starting and edge of your image? What about when you're while-loop is going and gets to an edge and wants to step further in that ~~forbidden zone~~ ? 2. there may be a way to extend this *"~simple"* algorithm to keep track or learn where previous distances were, where new ones intersect, and to track where pixels, if found to be black, could quickly calculate their minimum distance (i.e. if (-33,4) was a white pixel, and I iterate in my image domain to the next black pixel (happens to be the next column in the current row), it's nearest white pixel has to be (-33,5), or *VERY* close to that distance. There may be other methods, and there may be faster ones. This is what I can think of at first go. Good luck! Keep posting any errors/bugs you get into and we can keep trying to help... ***Edit2:*** This is certainly the **most** brute force way. But you can make use of some of MATLAB's built in functions - if your image is binary and is an array of 0/1's, I think [sum()](http://www.mathworks.com/help/matlab/ref/sum.html) would be ***very*** handy. Also: **pre-allocate**, **pre-condition**, and **appropriately condition** and you'll save time as well.
&gt;Then I just did plot(D,L). Is this correct? .... well, you tell us. Does that look like a *deflection vs. load* plot that you would/should expect? To fit a trend line, assuming you mean a linear trend, look into using functions polyfit() and polyval(). As for finding the spring constant, you'll have to elaborate more on what you mean, how it's calculated, and how it relates to the plot you're making (I assume you're to calculate it based on this data).
Might be a faster way but I'd do it like so: 1. Copy matrix 2. Pad the new matrix with 1 pad of zeros (padarray, or make your own function to do it) 3. Turn all 9s to 1s (Mnew=Mnew==9 or Mnew=Mnew/9) 4. Make a loop that sums up all the 1s in a 3x3 area IF the original value is 0 With the pad you don't have to worry if the data is on an edge or a corner, so your for loop is easier.
Last step would be saving the sum in to the matrix, but yeah, you get the point :)
ruthless
There is a Matlab function angle(). You should not name a variable the same as an existing function. 
 For i=1:1 C=A*B End
Interesting, it never occurs to me to use polyfit for this. If you have the curve fitting toolbox, you can also use fit(). The spring constant will just be the slope of the line. 
Set the quiver3 'LineStyle' to 'none'. I can't tell you if it will put the heads at the data point (like you want) or if it simply executes normally and has no line (but arrow heads still reflective of the magnitude).
I think what you're saying is that you want a second array that's just as long as tT, but spans from px to x? If so, use the function linespace xT = linspace(px, x, length(tT)) should give you what you're looking for
Thank you so much. That is exactly it! Really appreciated it :)
For me I had to run the demo and then hit refresh (which is rectangular so I missed it at first). That is where graph.pdf showed up. Did that work for you?
So you just want a tick on the top axis whos label is the C equivalent of a desired K temperature that you want to highlight (and appropriate labeling)?
Hmm... I guess the "quiver" parts aren't separable like I thought. Good luck with arrow()
So you want your plot and an axis above it that has the ticks? ^(Suggestion: wouldn't it be easier to compare the temps if it was below your K axis, below your plot?)
I get that too. I guess there's probably already another file called demo.m that the one they show us overrides. Still seems to work though.
Yes, store it in the userdata property of an object whose handle you have access to e.g., the current figure set(gcf,'UserData',mydata) However, I don't think you actually want to do this at all. What you want to do is to have myplot() store the handle of a line object, and then read off all the current values from there and change them. For example line_handle = plot(NaN,NaN) lh = addlistener(s,'DataAvailable', @(src,event) myPlot(event.TimeStamps, event.Data,line_handle)); and function myPlot(x,y,h) Yplots = get(h,'YData'); Xplots = get(h,'XData'); set(h,'XData',[Xplots;x],'YData',[Yplots;abs(y)]); xlim([0 5]) end
Run *octave* code online.
This should do it for you: [mouseX, mouseY, buttons] = GetMouse(win); if (buttons(1) == 1) if ((mouseX &gt;= rect(RectLeft)) &amp;&amp; (mouseX &lt;= rect(RectRight)-1) &amp;&amp; ... (mouseY &gt;= rect(RectTop)) &amp;&amp; (mouseY &lt;= rect(RectBottom)-1)) % Clicked in the region defined by rect end end
So what exactly would I do if I have the image processing toolbox, then?
What is your approach to take the area of objects? A blob analysis I'm assuming? Histogram equalization adjusts the global contrast of the image, this would probably fix your background up a bit and give you a better result when you're going to black / white. There are also methods to fix nonuniform illumination in the image (google "Correcting Nonuniform Illumination") if you're having a lot of trouble. Then, set a threshold when converting to your final image to eliminate the background if you can. 
Thanks for the reply. I have tried this, but get an error at Yplots=get(h,'YData') - is this because Ydata does not exist at this point in the code?
Ok. Here's my suggestion. Make your first scatter plot. Then query MATLAB for the position property of those axes. You can ask for the position in a variety of units, for now just stick w normalized. Once you have the poisition vector, modify it appropriately to move your plot up/down (depending on where you want the new axis) *jusssttt* a bit. Now reset your first plot's appropriately. Now, make your 2nd axes object in your figure with axes(). Now, you may need some paper or trial and error, but set the poisition of this axis as you want (above/below). I don't think you'll need to plot anything, just continue to modify the properties of this axis (xlims, xticks, ylims/color (set their properites such that you can't see them)). Revisit my first post for the link to the axis properties name/value pairs as well as using the get(), set(), and gca functions. You may also want to (by hand) draw out how you want your figure to look and by eye make guesses at how you should set the axis position values ([lower-leftX, lower-leftY, width, height]) for your plotting window and then for the new axis.
To your second point: with the xtick properties you can set them for any value you want. So lets say you make your plot in K and want to show both 0C and 30C. You could have MATLAB mark the 273K and 303K ticks. I'm not sure if you can a) accentuate them in a different color and b) on how you would best mark the ticklabels property. I think it would all be in line, so it may look a little odd to have your xaxis read something like: ... 250K 260K 270K 0C 280K 290K 300K 30C 310K 320K ... It's doable, but if I were you I would stick to making another axis for the C temps. That way you can also show as many C temps as you want without messing up the uniformity of your plot's axis and only having one unit and not two units for temperature.
Ahhh this is great. Thanks! One more question, if want to use this to move the participant to the next page where does the command to do so go? In the if statement? After?
Sorry, busy weekend. I think I get what you're saying, but I'm having some trouble doing the "step out" and I'm not really getting how a while loop will work in this case. While thinking of other methods, I came up with this (admittedly long) bit of code: *Edit: (I forgot to add arguments to those inner for loops)* for i = 1:H for j = 1:W if I(i,j) == 0 for x1 = i:1 for y1 = j:W if I(x1,y1) ~= 0 end end end for x2 = i:1 for y2 = j:1 if I(x2,y2) ~= 0 end end end for x3 = i:H for y3 = j:1 if I(x3,y3) ~= 0 end end end for x4 = i:H for y4 = j:W if I(x4,y4) ~= 0 end end end % Comparing X values if x1 &gt; x2 xa = x1; end if x2&gt;x1 xa = x2; end if x3&gt;x4 xb = x3; end if x4&gt;x3 xb = x4; end if xa&gt;xb x = xa; end if xb&gt;xa x = xb; end % Comparing Y values if y1&gt;y2 ya = y1; end if y2&gt;y1 ya = y2; end if y3&gt;y4 yb = y3; end if y4&gt;y3 yb = y4; end if ya&gt;yb y = ya; end if yb&gt;ya y = yb; end end newval = sqrt((i)^2 + (j)^2); e(i,j) = newval; end end My logic was that I would step out in four quadrants away from the "center" defined by the black pixel. The nearest white pixel in each direction would be compared against each other until the closest of these four was found. This pixel would be used in all subsequent calculations. Typing this out, I see that I was not getting the distance of the found pixels. However, the code itself is doing some weird things like saying xa and xb have not been declared, and y1 and y2 are not even in the workspace window. Thoughts on this?
the rand(); function can create whole vectors... r1 = rand(100,3); r1 is a 100-by-3 column vector containing real floating-point numbers drawn from a uniform distribution. All the values in r1 are in the open interval, (0, 1). so lets say I want a vector V of size 100x3 with the ranges of: * col 1 from 0-5, * col 2 5-10, * &amp; col 3 10-15... V = [5*rand(100,1), 5+5*rand(100,1), 10+5*rand(100,1)]; 
First thought: you've got to do better with naming your indexing variables. Both i and j are intrinsic to MATLAB in relation to the complex number sqrt(-1). Easiest way to not get confused is to simply put two of them there: use "ii" and not "i". Second thought: I don't think your actually *"doing"* anything with this looping. Once you compare I in your inner most loops in the first part, you do nothing with that information. You don't assign anything special. If you were meaning to get those indices as your x/y#, you need to use "break" statements to get out of your for loops. But you'll need to add the same conditional outside one level where it is: you're finding the correct inner most index, but the outter one loops until it's done ever time here. Look into this last thought- how and what values are being stored in you x/y#, and how many loop iterations those loops perform before they get their number. Let me know what you find. When I get back from breakfast, I'll try and post some pseudo-code of the processing that I'm thinking of.
Ah, I originally had break statements in the innermost loops and they had no perceivable difference. I've added a break to the outer one, and I've finally got an output. [Here's](http://imgur.com/8As1vm8) what I have. So for the last thought: How the values are stored would be their pixel value, which is reached when the pixel referenced by the loop is white. Once four values are reached (one per quadrant), these are going to be compared against each other to find the largest one. However, the code in my case is only going to find the fourth quadrant to be the largest in most cases, because I'm only comparing the location values and not the distance from the origin pixel. Hang on, I might be able to correct that last part. **Edit:** So now I have it set to calculate the distance, but now I'm finding that the final break command is keeping the values from entering the inequality stage of the program.
 a = [0 3 5 ;0 4 6 ;-1 7 1 ]; [m,n] = size(a); if m~=n disp('Error, not a square matrix') b=[] return end b=eye(m); for j = 1 : m for i = j : m if a(i,j) ~= 0 for k = 1 : m s = a(j,k); a(j,k) = a(i,k); a(i,k) = s; s = b(j,k); b(j,k) = b(i,k); b(i,k) = s; end t = 1/a(j,j); for k = 1 : m a(j,k) = t * a(j,k); b(j,k) = t * b(j,k); end for L = 1 : m if L ~= j t = -a(L,j); for k = 1 : m a(L,k) = a(L,k) + t * a(j,k); b(L,k) = b(L,k) + t * b(j,k); end end end end end end a b It seems to work, but we only briefly went over what ranks are so i'm not exactly sure how i would code in an error for it not being full rank.
I don't think you can invert a non-square matrix, and I don't think they're asking you to do so. Return an error if the matrix is not square, or if it is not full rank.
I just edited it to what i think it is.
Yea i realized that, i read it too fast the first time.
Read your problem statement again, and maybe read up on matrix rank. A Google search should teach you plenty. 
You need to make the second figure window [modal](https://nf.nci.org.au/facilities/software/Matlab/techdoc/creating_guis/ch_pro18.html).
just so you know, there are ways to invert nonsquare matrix but don't worry about that now, look up the pseudo inverse at the *end of the course* if you don't run into it during.
or also simply: for i=N function(i); end 
Huh. Well, maybe there's a mistake for you to look out for in my by-hand stuff because the way that I did it the answer would be h = 4... I implicitly assume h =\= 4 when I divide by h - 4 to "one" the third column. If h = 4 then the matrix takes the form 100/010/000 and so x3 is a free variable. So look out for that factor of two somewhere. As for your "can you do it in MATLAB" question. Yes, almost certainly. But I'm afraid that I can't tell you how. You can use "rank" to calculate the rank of a matrix, so my instinct would be to create an anonymous function of h which is the rank of the matrix in question and pass that to fminsearch. That... would... probably... work... but I think it's clearly not the "right" way to do it. You can probably tell I don't do a lot of symbolic work in MATLAB by now... Hopefully someone else comes along with more experience in that area. 
Personally I think programming Arduino interrupts is easier with the Arduino IDE. Have the script write to Serial, from which Simulink will then read and display. Let me know if you need more info.
~~The first and the second image in your album look like they are the same. Did you mean to upload the original image of the fish instead of the first one?~~ Maybe there is a more robust alternative to direct skeletonization with that skel function, but to see that, it would be necessary to see the original. EDIT: I noticed the difference between the first two images now. Anyways, it would still help to see the original image. EDIT 2: Assume the first image of the album is read into the logical Matlab array `im`. Then you can try to eliminate the vertical processes by using the prewitt or sobel filter: `pr = imfilter(im, fspecial('prewitt'));` You can see that the vertical parts vanish or become isolated little dots. At the same time, the horizontal line gets a little broken. To fix this, use imclose: `cl = imclose(pr, true(9)); % try replacing the 9 by other numbers or by strel('disk', &lt;radius&gt;) if it doesn't work` Then you can remove the isolated vertical parts by doing a size filtering (area opening) with a value that you have to determine yourself by trial and error or counting pixels, for example: `ao = bwareaopen(cl, 150); % where 150 is the minimum area the a connected components you want to preserve` If I am not mistaken, `ao` should then be pretty much the mid-line of your fish. You can again apply bwmorph( , 'skel') to it to make it more "line-like". Of course you will need to test and modify it a bit to be more robust, but maybe you can use this example code as a starting point.
Hi, should that first (h-4)/4 not be (h-8)/4. Presuming it is 3rd row minus the second then it is h/4 - 2*(4/4)?
Aha! That was it. Thanks. Yeah, I think that was the problem. 
Attention downvoters: this is a perfectly good question. What the fuck. 
Unfortunately MATLAB doesn't really have on-focus event callbacks unless you break into the underlying java. However, there is a quirk you can exploit. The control has a button down callback you can set (buttonDownFunc). The problem is, normally clicking inside the edit box will not call this callback..... unless the edit box is disabled. So what you have to do is: 1. Write a function that enables the edit box and clears the contents 2. Assign this function to the the edit box's buttonDownFunc property. 3. Set the edit box to start off as disabled. 4. Add a line to your edit box callback (the one that fires when your box loses focus) that disables the box again Now the box defaults to being disabled. When you click it, it becomes enabled and is cleared. When you leave the box, your processing code runs and the box returns to being disabled, waiting for you to click it again.
I have MATLAB working flawlessly on Yosemite. So the install succeeds but when you look in your applications folder there's no entry for MATLAB? Does spotlight not find it either?
I had to upgrade to r2014a to get it to work, but I didn't try very hard with r2013a...
We are not supposed to do your homework, but I will try to point you in the correct direction. I would go about this a slightly different way than you have. As of now, you really have just written a script that has the "function" command at the top of it. You need to define the outputs of your function. What exactly does the function need to do? Think about what things are constant in the problem and which things change. Have you ever done anything with nested loops? You might want to look into it for this. I will check back tomorrow and try to help if you post noticeable progress
Drunk like typing detected. -
Do you know how you would set this up on paper, the math of it? Element-by-element setup and solve? And how might you represent that in notation you would use in text (something like "y=mx+b"), or see in a text book, or a lecture? ... MATLAB syntax is *kinda/sorta* like that.
&gt; We are not supposed to do your homework, but I will try to point you in the correct direction. Thank you for this, it's practically our *"honor code"*.
I would try an if statement. if (grade &gt; 90) letter_grade = 'A'; else if (grade &gt; 80 &amp; grade &lt;= 90) ... end
please help guys! 
What's the error code you get? I am willing to help but I am not going to dig through your code to find syntax errors.
I would use a numerical solver like fsolve
I recommend running Matlab in debug mode and going through it line by line as it is indexing to see where it is going wrong. I don't get why you have the if statement on the first iteration. You could just pull that out of the loop and set it ahead of the for loop. You might also want to preallocate by creating chkBal = zeros(1,length(pending)); and doing the same fore sBal. That's just a good coding habit.
You know I'd much rather people say its a homework question than pretending its not even though it obviously is 
how do i plot against the transaction number? 
okay so if i pulled the first iteration i would set i=2 to indicate that it's on the second number of the array correct?
Thanks for the answer. Can you explain to me why does your imread function work when your path is not pointing to an image if im not wrong? And also how did you get that link ? maybe this is exactly what I need (I am using a D-link camera) EDIT: actually I think the error was because my camera require a user and password to access, that's why I use that function instead.
 plot(1: length (pending), chkBal,1: length (pending), sBal)
okay so things are definitely changing, but it looks like savings isnt being touched much anymore, it's barely going down. it just keeps hitting the checkings. EDIT: looked it over again the checkings is always zero. for i=2:1:length(pending) %checking account balance array and savings account balance array %create %if i == 1 %this line applies to the first transaction only and sets the %saving balance variable %chkBal(i) = checking_account_balance + pending(i) ; %sBal(i)= savings_account_balance; if chkBal(i)&gt;0 %for transctions from transaction number 2 to the end of %pending array, this is if chkBal has enough money and makes %sure sbal keeps up witht the i chkBal(i) = chkBal(i - 1) + pending(i); sBal(i)=sBal(i-1); end %check balance is drained all further transactions proceed to %the savings account; check balance keeps up with i if chkBal(i)&lt;0 &amp; pending(i)&lt;0 sBal(i)=sBal(i-1)+pending(i); chkBal(i)=chkBal(i-1); end %when a transaciton from pending is a positive integer it goes %back into the checkings so checkings has money again and money %can stop being pulled from savings if chkBal(i) &lt; 0 &amp; pending(i)&gt;0 chkBal(i)=chkBal(i-1)+pending(i); sBal(i)=sBal(i-1); end %when savings hits 0, all further transacitons go to the checking %thus putting the checkings in overdraft if sBal(i)==0; chkBal(i)= chkBal(i-1) + pending(i); sBal(i)=sBal(i-1); end
First off you can't have strings and doubles in an array in matlab. For that you'll want a cell which can be harder to work with. Cells are more like excel spreadsheets where any cell can contain anything. I think what you need is a for loop where every iteration of the for loop you modulus with a new number Ie make a variable bills = [100, 50, 20, 10, 5, 1, .25, .1, .05, .01] Change = paid - price; Mychange = [] For i = 1:length(bills) Mychange = [Mychange, Change%bills[i] ]; Change = Change - Mychange*bills[i] End That should work but I only cooked this up On my phone and not in matlab so give it a try. This is much easier than making a ton of If thens 
Thanks for the images. Another note: The quality of the results of my suggested code (actually, only the prewitt filter) depends strongly on the alignment of the fish. The more horizontal it is in the image and the more vertical the unneeded fins are, the better it works. If you rotate the original image by 90°, the suggested steps will produce total garbage. Consequently, you will only get good results if the fish is rotated to be maximally horizontal. One way to do this is to first write a function that determines the needed rotation angle for the fish so it has the maximum horizontal size. If you can't think of a more elegant approach, I would just brute-force it by rotating it by 0°, 1°, 2°, ..., 179° in a loop and measuring in which of the tried rotation angles the rightmost pixel's x value belonging to fish minus the leftmost pixel's x value of the fish is the maximum. Then you would rotate it by this angle before applying the prewitt filter, rotate the result of the imfilter line (pr) back the same amount and then continue with imclose and bwareaopen like before. That's just what I would try, but that doesn't mean it's the best idea to do it. It's all about trial and error. If you can't understand anything of the above, don't hesitate to ask again.
The amp sign evalutes a true/false statement and returns 1 for true and 0 for false. if var1 or var2 are 0 they are evaluated as "false", and other number is counted as "true". so the statement mean(var1 &amp; var2)=mean(true &amp; true)=mean(true)=mean(1)=1 if v1 and v2 are both not 0.
Have you tried `bwmorph(ao, 'thin', Inf)`? EDIT: Just tried it myself. `bwmorph` with the "thin" parameter indeed seems to be what you are looking for. It removes all pixels around lines until the maximum line width is 1 pixel.
First you should get rid of all the if statements because it makes debugging very hard, second you have some logic issues in your if statements they are incorrect. Third, why are you using strings for the numbers? i switched them to numbers. here is a working function... function [ output ] = myChange( price,paid ) changeOwed = paid-price; i = [100,50,20,10,5,1,0.25,0.10,0.05,0.01]; money=[]; for z=1:length(i) if changeOwed&gt;=i(z) money=[i(z),myChange(price,paid-i(z))]; break elseif changeOwed&lt;0.01 break end end output=(money); end
The imread function should only work for still images, as far as I know. You can check which file formats are supported by typing "imformats" into the console. Is it possible your D-link camera url points to a mjpg stream instead of just a still frame? I generate my link based on the instructions on [this website](http://www.ispyconnect.com/man.aspx?n=Axis). I added "/axis-cgi/jpg/image.cgi?date=1&amp;clock=1" on to the stream url to access a still frame. I think you can do this with a D-link camera too, using the same instructions found [here.](http://www.ispyconnect.com/man.aspx?n=dlink) I have no idea how to get around the username and password issue. [This link](http://stackoverflow.com/questions/1317931/how-do-i-provide-a-username-password-to-access-a-web-resource-using-matlab-urlre) might be useful.
thanks for the explanation! 
I don't mind helping someone on their homework; he's obviously done a lot of the work already and is stuck on something (still not entirely sure what). I'm not interested in DOING someone's homework for them, but that's not what's being asked here.
It's also worth noting that the single ampersand is the element-wise operator--OP's statement will fail if the two values are non-scalars of different sizes, and it will return an array of ones and/or zeros if the one value is a non-scalar and the other is a scalar or a non-scalar of the same size. OP, if you want the mean function to return the mean of two scalar values, rather than a one or zero, you should use: mean([value1 value2]) (You can put a semicolon or comma between the two values if you want; for scalar values, it doesn't matter whether you horizontally concatenate--as with a space or comma--or vertically concatenate--as with a semicolon.) You need to concatenate the values into a single array because the second input to mean is the dimension in which to operate when operating on a matrix. If you simply want the mean of all elements in both values, whatever the size or shape of the arrays, use: mean([value1(:); value2(:);...valueN(:)]) This vertically concatenates all values in all arrays, no matter what size each is, and returns a single mean.
What do you expect the answer to be? If you compare your net income (sum(pending)) to the change in balances you find they balance exactly save for $200 in fees. I don't see any problem. 
I suggest you check with your professor. Tell him/her what results your getting and clearly state your concerns (the inclusion of the $350 fee makes you assume that the question will be designed to trigger it at some point, but by your calculations it doesn't). Also go through the calculations by hand - there's only 12 transactions, it shouldn't take you more than 10 minutes to double check your results. By my (admittedly half-assed) double check I think you've got it right. It's not unusual for a question to have parts that don't get triggered; your professor will probably test your code using a different set of transaction data that are designed to trigger the $350 fee. 
Thank you for the help, I was able to solve it. 
I would decimate to a half a hertz sample rate like you suggested before using the Butterworth filter. You'd need lots of poles to do it right otherwise and that creates all sorts of problems. If you don't have the signal processing toolbox, decimation is low pass filtering before down sampling, which avoids aliasing. A few factor of 4 stages would probably work great. 
It's r2014b.....for students.
And you've tried running the installer again? Maybe try once more, double checking the install path (reasonably sure that was one of the steps in the install process).
I did. I went through the install process twice and put in different path names and nothing :(
What happens when you navigate to the path you specified in Finder?
Your question isnt clear. Do you want a matrix of the coefficents? like for: -3ix(i)+(i4 )*y(i)==0 i|x(i)| y(i) ---|---|--- 1|-3| 1 2|-6| 16 ...|...| ... 201|-603| 1.6322e+09
I would try image segmentation such as mean-shift.
I don't need to access the rows, I just need the values so I can plot them by hand, I assume c is overwritten at each iteration.
If you want to draw each click point before allowing the next for an unlimited number of loops, a while loop with ginput(1) followed by the plot command should work (with hold on, of course--or, better, simply appending the x and y data of the line series object--to show all of the points clicked so far). Of course, you'll also want to give the user a way out of the loop--a max number of clicks, for example, or by alt-clicking, hitting a key combo or clicking outside the axes area. Else, you'll have to control-C it to get out of the loop. 
I figured out the ginput(1) part. i set up a while loop, but it keeps not exiting, adding 1 to "i" and fucking up vectors by trying to plot an "x" and "y" that do not exist. Any assist out on that part? Here is the code. clear;close all;clc figure(1); hold on; grid on; axis([0 10 0 10]); x = 0; y = 0; button = 1; i = 0; while button == 1; [xg,yg,button] = ginput(1); i = i+1; x(i) = xg; y(i)= yg; plot(x(i),y(i),'ro','linewidth',2) drawnow if i &gt; 1 plot([x(i-1) x(i)],[y(i-1) y(i)],'b','linewidth',2) plot(x(i),y(i),'ro','linewidth',2) plot(x(i-1),y(i-1),'ro','linewidth',2) drawnow end end 
I don't see anything :(
So I did some more thinking and I got it to work. I included another if else loop and included a break command. Your inputs helped my brainstorming. Thanks! Here is my code if you are curious. clear;close all;clc figure(1); hold on; grid on; axis([0 10 0 10]); x = 0; y = 0; button = 1; i = 0; while button == 1; i = i + 1; [xg,yg,button] = ginput(1); if button ==1 x(i) = xg; y(i)= yg; plot(x(i),y(i),'ro','linewidth',2) drawnow if i &gt; 1 plot([x(i-1) x(i)],[y(i-1) y(i)],'b','linewidth',2) plot(x(i),y(i),'ro','linewidth',2) plot(x(i-1),y(i-1),'ro','linewidth',2) drawnow end else break end end
From am indexing perspective, it looks fine. Two of your plot commands in the if branch are redundant to the one outside of the branch (think about progression through each iteration, and the fact that each plotted point sticks around through each iteration). I'm not sure why the loop isn't exiting when you alt-click or press a key; is suggest setting a break point just after the ginput to see what "button" is with different clicks/keypresses (and, if it looks correct, throw a "disp (button)" after the ginput and remove the breakpoint to see what it is real-time; sometimes the debugger affects execution, though I don't think that would be the case here). I don't have a computer with Matlab to run the code in the next few days, but stepping through in the debugger usually works wonders for figuring out indexing and assignment problems. Also, as a couple of stylistic things. First, it's generally better to use letters other than i and j (which Matlab, by default, interprets as sqrt(-1) until assigned otherwise) or l and o (which can be confused--easily--with numbers); it's simple, concise and easier to debug if there's a problem if you use n, ii, jj, idx, iter, count, etc. instead as looping indices (or a longer, more descriptive name, particularly if you're using nested loops; not the case here, but sometimes it's important). Tab completion makes longer variable names easy to use. Second (this is a pet peeve of mine): if you're having to write "clear" at the top of your script, make it a function so the encapsulation eliminates the need (conversely, if you're having to make all of your variables global or placed in the base workspace, make it a script). Placing a clear command at the top of the script defeats half of the point of making it a script rather than a function, and it could obliterate work you've been doing in the prompt with a single click. Making your code a function--even a function that's hard-coded all the way, taking no inputs and returning no outputs--is generally a better way to control scope than clearing the base workspace. 
I'm not sure why you would need the outer if-else statement and break here--the while statement should evaluate "button==1" on each pass, returning false if anything other than a left click was detected. But I'm glad you got it working. 
There isn't an R2014b for students... Call tech support. You'll get free installation support as long as you have a valid license.
Thank you. I'll do that.
Right. Where are you assigning values of c to the first row? Edit: to be clear, it seems like you want each row of y to be the values of c, but you never assign c into y. All of your calculations in the inner loop go nowhere--you need to assign them to your intended output. As written, you never assign anything in y beyond the 5th element. 
Take a look at the example given for the line command in the documentation. &gt; Drawing with mouse motion &gt;You can use the axes CurrentPoint property and the figure &gt;WindowButtonDownFcn and WindowButtonMotionFcn properties to select a &gt;point with a mouse click and draw a line to another point by dragging the &gt;mouse, like a simple drawing program. The following example illustrates a few useful techniques for doing this type of interactive drawing. &gt;Click to view in editor — This example enables you to click and drag the cursor to draw lines. &gt;Click to run example — Click the left mouse button in the axes and move the cursor, left-click to define the line end point, right-click to end drawing mode. The script here does pretty much what you need using lower level functions than ginput but you'll have to open it in Matlab to get the code. EDIT: Here's the code: function draw_lines % Click the left mouse button to define a point % Drag the mouse to draw a line to the next point and % left click again % Right click the mouse to stop drawing % figure('WindowButtonDownFcn',@wbdcb) ah = axes('DrawMode','fast'); axis ([1 10 1 10]) function wbdcb(src,evnt) if strcmp(get(src,'SelectionType'),'normal') [x,y,str] = disp_point(ah); hl = line('XData',x,'YData',y,'Marker','.'); text(x,y,str,'VerticalAlignment','bottom');drawnow set(src,'WindowButtonMotionFcn',@wbmcb) elseif strcmp(get(src,'SelectionType'),'alt') set(src,'WindowButtonMotionFcn','') [x,y,str] = disp_point(ah); text(x,y,str,'VerticalAlignment','bottom');drawnow end function wbmcb(src,evnt) [xn,yn,str] = disp_point(ah); xdat = [x,xn]; ydat = [y,yn]; set(hl,'XData',xdat,'YData',ydat); end end function [x,y,str] = disp_point(ah) cp = get(ah,'CurrentPoint'); x = cp(1,1);y = cp(1,2); str = ['(',num2str(x,'%0.3g'),', ',num2str(y,'%0.3g'),')']; end end
The link in the first comment on here has all the patches you'll need to make any release from R2012a work on Yosemite. Works like a charm. But yeah, you can contact Tech Support too. I would recommend calling. 
yep. i figured it out. thanks!
You can even just write parts of your code in Fortran or C and have MATLAB call them. Got one function that gets called a million times? Probably worth doing.
Awesome! Thanks! ok, last question and I think we are good to go. Matlab throws up and error for GetMouse(win) Any idea why? Edit: Got rid of (win) and it works perfectly! Thank you stranger!
Do you mean holes? Have a look at morphological operations like imclose.
No, I mean contours, but are pretty hard to identify
Although I don't know exactly what you are trying to do, I have in the past used multiple toolboxes in conjunction with each other. I'd suggest to try out a basic simulation and go on from there.
The file was to big to paste as text, so I had to upload it :(
This isn't helpful. If you're going to be so vague and can't even provide a minimal example why even bother to ask? What have you tried? Why doesn't it work? 
For read I'd be tempted to get the raw data from the buffer then write a function to find your terminator and create line breaks. I've used fgets and fread for this before. Followed by a for length, strcmp. Eg: if strcmp(uut.Status, 'closed') fopen(uut); end fprintf( uut, str); pause(0.5); if uut.BytesAvailable&gt;0 fgets(uut); responce = sprintf('%s',fread(uut,uut.BytesAvailable)); end for i=1:length(responce) if strcmp(responce(i),'&gt;&gt;') ....you should get the idea. Sending is a lot easier. Just set no termination in the init, then just 'fprintf(uut,str,'&gt;&gt;')'. This could be a function to make it transparent. 
I have tried something similar to this, however I got the error that selfloops around a MATLAB function block are not allowed. Or am I doing something wrong perhaps?
Thank you very much! Care to explain how you did it? Also, how can we suggest this as a [pick of the week](http://blogs.mathworks.com/pick) on FileCentral?
I don't have any experience with this problem. Some of the results of https://www.google.com/search?q=matlab+smooth+edges look like they could be helpful. ("Edges" because your line has similar properties to edges, and other search keywords are too ambiguous.)
This is amazing! Can we get the Protoss version too?!?
S/he hard-coded a sound wave (25,307 samples) in the function and then played it back as a sound file with a sampling frequency of 14949. What's funny is that the .m file is 9 times the size that a .wav file holding the same information. But this way (as OP made it), it's all self-contained in one file making life just a little easier.
Try it with gfortran-4.3. Compiler support on Matlab on OSX is way behind. http://www.mathworks.com/support/compilers/R2014b/index.html?sec=maci64
This thread has been linked to from elsewhere on reddit. - [/r/yrc] [Software Engineering as Performed by Researchers](http://np.reddit.com/r/yrc/comments/2wgkaj/software_engineering_as_performed_by_researchers/) *^If ^you ^follow ^any ^of ^the ^above ^links, ^respect ^the ^rules ^of ^reddit ^and ^don't ^vote ^or ^comment. ^Questions? ^Abuse? [^Message ^me ^here.](http://www.reddit.com/message/compose?to=%2Fr%2Fmeta_bot_mailbag)* 
You want to use "look behind" regular expressions. It basically looks for an indicator (your phrase) and then returns a certain thing. Start here: http://www.mathworks.com/help/matlab/matlab_prog/regular-expressions.html And look for "lookaround"
Thanks guys, I have achieved it in alternative way (arranged the values that I have wanted using a sh script then loaded them into Matlab). Will try these methods in the future
Any advice on how to pick the compiler? Doesn't seem that simple because i can't install that version of gcc on homebrew
I use macports, which has gcc43 through gcc49. I'm not sure how easy it is to have homebrew and macports installed at the same time. I remember doing it once a year ago or so, and they didn't play well together. Sorry, I don't have any other suggestions.
% The Michaelis Menten reaction % % S + E &lt;-&gt; S.E -&gt; P + E % clear all; % rate constants and initial condtions k1 = 6.67; k_1 = 1.67; e1 = 0.2; s1 = 1.5; s0=1; e0=1; c0=0; p0=0; % solve the system of ODE's and plot the solution [t,y]=ode45(@mentenodes,[0 20], [s0 e0 c0 p0], '', k1, k_1, e1, s1); plot(t,y(:,1),t,y(:,2),'r--',t,y(:,3),'g.-', t,y(:,4),'k--') xlabel('Time (seconds)'); ylabel('Concentration (mM)'); legend('s=[S]','e=[E]','c=[C]', 'p=[P]') ------------------------------------------------------------------------------------------- function mentenodes = f(t, y, k1, k_1, e1, s1) mentenodes = [-k1*y(1)*y(2)+k_1*y(3), % s (-k1*y(1)*y(2)+(k_1 + 1)*y(3))/(y(2)/y(1)), % e k1*y(1)*y(2)-(k_1 + 1)*y(3), % c y(3),] % p these are my 2 pages that produce the above, i have no idea where to start with the eulers method sheet though. Also i hope the formatting is okay with that.
Some implementation detail surely, but does it matter? If your calculations are sensitive to 1e-16 error in the value of sine, you should probably not be using MATLAB for your work.
Cos and sin map radians to real numbers, so the argument in the inverse functions are real numbers, not radians 
Maybe my wording is weird but I never meant to say the argument in inverse functions is radians. I was saying that result of an inverse function is in radians. My question is how do I get the result of the inverse function (which is defaulted to radians) to be changed to degrees. So for example: asin(-1)=-pi/2 (-pi/2 is in radians) what would I have to do for it to change the -pi/2 to degrees automatically? I'd like to see something like this: asin(-1)=-90 How, if possible, can that be done without using the asind(x) function?
Think about representing those numbers in scientific notation; there is surely some fraction resulting from double precision on that -1, but if it's on the 1e-16 order, it's probably well below the significant display. As an experiment, try cos(pi) + 1, and see what displays. I'd bet it's similar. edit: I was wrong about this. The correct answer comes from Cleve Moler himself [at the very end of this article](http://www.mathworks.com/company/newsletters/articles/the-tetragamma-function-and-numerical-craftsmanship.html): &gt; We all agree that sin(π) is zero. But the quantity that MATLAB denotes by pi is a floating point number that is not exactly equal to the theoretical mathematical quantity denoted by π. It turns out that, π is about 1/4 of the way between pi and the next larger floating point number, pi+2*eps. In fact, x - pi ≈ 1.2246·10-16 &gt; Near π, sin(x) is very nearly linear, with a slope of -1. So sin(pi) should be about 1.2246e-16. The exact value reveals information about the value of π used internally by the math library for argument reduction. Many people expect sin(pi) to be zero, but then we have to worry about sin(k*pi) for increasingly large integer k. As far as your other question of (basically) getting inverse trig functions to 'default' to degree mode, there isn't one, unless you wanted to overload the asin or acos functions. Aaaaaand finally, another commentor made a good point: if the error in precision is drawing your attention because of comparison, note that it's best practice never to compare two doubles directly; better to subtract them, and check if the abs() of the difference is less than some acceptable threshold. 
Can't for confientiality. The main problem is the amount of nise and false lines like shadows, which are hard to delete
This sounds like you're trying to cheat a homework assignment.
There are better answers on here, but I'll just add that you should get in your head that, for all intents and purposes, O(1e-16) *is* 0; at least in *numerical* (as opposed to symbolic) analysis.
Look around for lookaround! I'd also recommend poking around with an online regex tester like [regex101](https://regex101.com/#python). Most aren't MATLAB specific but the Python syntax is pretty much the same.
I don't think anyone here is going to do your homework for you. Do you have a specific question or concept you need help with?
Thanks, Im really glad people like this lol
I'm still in the early stages of learning about MATLAB, so please forgive me if the question has a really easy answer! I tried to manipulate the sum() function so I can get the occurrences of the numbers that DID appear. I did search some functions that can help and I found out about the unique() and histc() functions, but I can't use them because I haven't learned them yet. I feel like there is a way to do this with for loop, but I'm missing something crucial.
What have you tried to use so far? Have you tried using the `solve()` function? 
I don't know of any efficient way to prevent/fix overlaps, but you can use the "extent" [property](http://www.mathworks.com/help/matlab/ref/text-properties.html) of the text objects to flag overlaps relatively easily; from there, I would try shifting each overlapping text object by half the magnitude of the overlap in the dimension with smaller overlap (e.g., if the objects just barely overlap vertically but completely overlap horizontally, shift the top object up and the bottom object down by half the overlap each). You could do this iteratively, if necessary (i.e., if the shifted objects overlap other objects, simply delay the algorithm), or change the algorithm on each iteration (e.g., force the shift to be in a new dimension), or simply do it once and flag any remaining overlap to fix by hand. 
This is what I have so far. x = linspace(-2,17); solve(myfun1(x),myfun2(x)) These are the function definitions. function y = myfun1(x) y = x.^4; function a = myfun2(b) a = 2.^b; I though that putting them in function notation would make it different. I just put the solve function in, and it did not work. I'm trying to find the three points that they intersect at. I know that they are approximately -.86, 2.3 ish, and 16 for the x value. 
After myfun1(x) and myfun2(x) there is a line break, in the function definitions. 
Turn hold on, use the plot command and include the 0, 0 point in the vector to plot--no different than plotting outside the loop. I don't think you want a while loop, though. If you're already iterating over each of the arrays with a for loop, just add the plot command to that loop and use it. Create the axes and turn hold on before the loop, and preallocate your arrays, and plot each when you're calculation is complete. Your plot command would look something like: plot([0,x(n)], [0,u(n)]); Where x(n) == i for a given iteration. But you could vectorize all of the code you have so far, minimizing what needs to go in the loop (you might have to play with the step size/endpoints to get i and k to what you want; I'm on my phone, so it's too much effort for me to check). i = [0: 5*2*pi/360: 365*2*pi/360]'; `u=(s1*((cos(i)).^2))+(s2*((cos(i)).^2));` `v=((s1/2)*(sin(2*i)))+((s2/2)*(sin(2*i)));` `w=((s1+s2)/2)+(((s1-s2)/2)*cos(2*i))+(((s1-s2)/2)*sin(2*i));` `k = i*(360/(2*pi));` `fprintf(fid, '%f %f %f %f \n',[k u v w]');` `fclose(fid);` axes; hold on; for n=1:5:365 plot([0, i(n)], [0, u(n)]); plot([0, i(n)], [0, v(n)]); plot([0, i(n)], [0, w(n)]); end fclose(fid); You can customize the colors/markers for each plot using the [linestyle](http://www.mathworks.com/help/matlab/ref/plot.html#inputarg_LineSpec) argument. 
An example of using the solve function (assuming you have symbolic toolbox): syms x S = solve(x^4 == 2^x, x) r = double(S) Gets r = -0.8613 1.2396 -0.1609 - 0.9591i -0.1609 + 0.9591i It doesn't get the 16, though. Documentation is at http://www.mathworks.com/help/symbolic/solve.html 
Awesome, thanks a lot.
You could also try using `fzero()` (after transforming your equation into one that has roots when equal to zero). The only problem you'll run into here is that it only finds the first root from the starting point. You can find the documentation for this at: http://uk.mathworks.com/help/matlab/ref/fzero.html
Try out the function called unique. Call it on your array. Then do length and a find function for those unique values in your a vector 
 function count = RedditDoesMyHomework(k) a = round(rand(1, k)*k); count = zeros(size(a)); for idx=1:length(a) count(a(idx)) = a(idx) + 1; end 
I'd always given up on solving this problem because I assumed the logic would be complex, and my time is better spent on on other things; but this algorithm seems really clever and effective. Good idea. 
I've had to do similar things on several occasions for labeling points on a map and for layout managers for GUIs. It's always a bit of a mess, but it can be done. 
To count them, we would use the length (or size?), right? Would I use an interval kind of thing? So that the number, let's call it g, between 0 and k, is not equal to the numbers generated by the random generator?
Thank you for this! Why did you add the one in the line with the count?
On the right track. The way I would do it would be : You need to check every value between 0 and k, so for I=0:k...... Then, check if I is in your vector through a combination of sum and indexing and am if statement. If sum(a==I)==0 Store that I, else move on. At the end you can do a sum / length to find how many missing numbers you stored. Can also use any in your if statement but don't know if you've covered it 
Oh, that makes sense. So the == operator gives us what is false and true for whatever I set it to and using the sum function added the values up, giving me how many numbers weren't included in the vector generated by my random generator. Thank you!
Since a==i would give me the value of 1 for the values that "exist" and 0 for that doesn't, sum(n==0) would "add up" how many 0s there are and return that to me.
symbolically
We recently purchased a set of 32-core machines (dual Xeons). After going beyond about 20 simultaneous jobs, the performance starts to degrade noticably. In fact, with hyperthreading we have 64 virtual CPUs, but when fully loaded they confer absolutely no speedup at all. Whereas our jobs get about a 50% speedup on a 2 core hyperthreaded machine. In our case, it is likely related to the memory bandwidth, which is of course shared by the cores. If we were doing it again, it would probably be better to purchase 16-24 cores per machine, and just buy more computers (assuming that you don't need to run any super high memory jobs) - particularly since its those last few cores that are the most expensive since you need to get a top-end CPU. In general, my experience has been that better single-threaded performance is usually worth it, but it absolutely depends on your task. 
Then use symms
He wasn't asking why the computer does it. He was asking why MATLAB does it. Thank you for the information though. That was interesting .
I understand I am supposed to use syms. They problem is the input, it clearly won't work for this but if I input as a string I can't convert that either... clc clear all z=input('input equation:'); syms x y= x^2+400+(2)*(x^3) f=y; syms x fx = diff(f); disp(fx); fxx = diff(fx); disp(fxx);
That's what I said in the first paragraph, but it's not what's going on here.
Have you tried this? https://it.mathworks.com/matlabcentral/newsreader/view_thread/263902 or this http://stackoverflow.com/questions/11643063/how-do-you-convert-strings-logical-operations-relational-operations-to-symbo
pretty much what I came here to say. 1) vectorize where it's easy 2) hold on 3) ???? 4) then plot
- So I think my counter goes from 1 to n. - With each k value, I believe I want to do [(a+k*size)-size]/2 ??? - Once my counter runs through 1 to n, I want it to sum up each value along the way, but I'm unsure of how to do that
For the formula for each midpoint, you're close but not quite there. Look back at what /u/phogan1 posted in his first post. (a+k*size) gives you the "right side" of each subinterval - how do you find the center? As for summing, the easiest way to do that is to create a variable called something like mySum and set it equal to zero *before* your for loop. Then, for each value of k, you'll calculate the midpoint, and add that value to k mySum = mySum + myNewMidpoint
Well, I already managed it. Thank you anyway!
Heres some pseudo code: i = 0; while(function(a) is not 0) { function = derivative(function); i = i +1; } return i-1; what this does: 1. Takes a derivative of the function 2. Increments by "i" by one - this tells the function what derivative we have taken, minus one because the while loop exits when the function is equal to 0 how a while loop works: while(statement is true) { execute this code }
Finally I got it! Thanks so much especially for helping me understand the framework better along the way /u/phogan1 /u/eagle2k13
The fact that its polynomial just means there has to be a zero at some point (if you keep taking the derivative eventually there will be no terms left), so you don't need to error check to see if the function will never equal 0
I didn't write it
So when you set function = derivative(function) the derivative of the function is now stored in function. Its kinda like: 1) g(x) = derivative of f(x) 2) b = g(a) 3) if(b == 0) return how many derivatives you have taken and exit 4) otherwise f(x) = g(x) repeat step 1) This means the next time you use the function, it will be the derivative of it The loop keeps taking derivatives until the value equals 0
No, he interpreted f^((n)^) to mean the nth derivative. Both because it's common notation, and because he read the question. 
Where was f(x) discussed in the question?
First its probably a good idea to change those `disp()` functions to `fprintf()` You can then use `\n` to create a new line. The documentation for fprintf also gives the codes for things like tab to help layout your table.
Check out the quiver function, it lets you draw arrows with specified lengths at given coordinates. If you have polar coords you will have to convert to cartesian, and after you plot one arrow do "hold on" so that the plot is not cleared when you plot your next arrow.
ok! Things are looking up. Thought I might ask one final question since you've been a huge help and are familiar with the code. I'd like to record the amount of time the participant spends on the page with the image "%% PRACTICE TRIAL 1" . Ideally I'd like to be able export the time spent on each image to excel or just a csv. I really only need the participant number (which I enter at the beginning) and the amount of time taken on each image. I start with subject = input('Enter subject number: ', 's'); filename = ['Sample\' subject '.csv']; [w,rect]=Screen('OpenWindow',0, [190 190 190]); %opening window Screen('Flip', w); I know I need to end with something like... fid = fopen(filename, 'w'); fprintf(fid, but I'm not sure how to record/write the time. Any ideas? Thanks!
You should profile the script on both machines and see which commands are taking longer. 
Yeah that's exactly right. This is a rather strange situation. 
Motion control code shouldn't be that hard, especially since that velmex stuff is really nice and easy to deal with. Just read the code and fiddle with it until you understand it. Tell management that finishing it is going to take at least as long as it took the original guy to get it started. Learning somebody else's code base is not an efficient process. 
One possibility is memory allocation - you are dynamically growing the arrays eatpie and error which typically incurs a significant performance penalty. The performance cost will be platform-dependent and might account for your problem. In general, you should always preallocate your arrays ie. 'eatpie = zeros(10000,1)' before your for loop. 
yeah I tried this and barely .1 s saved :/
Also, if anyone has a 4790K I'd be very curious to see how long it takes.
Do you still see the mac outperforming the 4790K with this code? If not, then I'd guess that the mac version of matlab is optimising the if statements as best it can whereas the windows version isn't. The method of optimisation I'm thinking of works well when the condition is most likely true or most likely false then you can get good speed-up by vectorising with an assumption of true/false then only going back to fix the cases where the assumption wasn't right.. it'd probably account for those differences.
with my pc i am now getting ~1.08, and my mac ~1.44. What you're saying would explain it, but then again, why would they make the matlab versions different?
Shh. Quiet time.
It's worth noting that the time wasted by not preallocating scales nonlinearly with vector length, too - it's not hard to make a script that spends most of its time on rewriting vectors. Same goes for waitbar calls.
Looks like it's working to me. You probably need to adjust the threshold if you want to catch more of the lines.
Now this, this is art!
It's stated in a number of places and in about every other post that this sub will not do your homework for you. If you attempt the problem and come in with a matlab specific question you might get a response.
Why not use structs for this? I do this with structs all the time. 
Usually you probably have some idea what the dimensions will be. For instance, lets say that I'm reading data from a file that typically has a vector of size 1x100 to 1x1000. I want to read 10 files so I pre-allocate a 1x10*1200 vector. I then count how many entries I put in and at the end remove the unused indices. % define load parameters dataFilename = 'data_part'; partsToLoad = 1:10; % allocate storage approxDataLength = 1200; dataVector = zeros(1,length(partsToLoad)*approxDataLength); dataCount = 0; % store data from file (named loadedData) for i=1:length(partsToLoad) load(sprintf('%s%d.mat',dataFilename,partsToLoad(i))); dataVector((dataCount+1):(dataCount+length(loadedData))) = loadedData; dataCount = dataCount + length(loadedData); end % remove unused indices dataVector((dataCount+1):end) = []; 
Can't believe I never noticed this until now, I always used to run a "main" function without any outputs, which made me use different commands to write something in the workspace. Mind is somewhat blown! Thanks!
You could just add this to the end of the "response" section (before the buffer screen): test_end = toc(test_start); However, I like to have a trial array that can be easily manipulated/exported. For example, something like this: %% Create window % ... % Initialize trials array trials = zeros(10,2); trials(:,1) = 1:10; % Trial loop for t = 1:length(trials) test_start = tic; % Display code for trials % ... trials(t,2) = toc(test_start); % Buffer screen % ... end csvwrite('SAVEFILENAME.csv', trials) You may also want to put in a key check at the beginning of the trial to allow the researcher (you) to break out of the trial loop (rather than doing a control-c and sca).
Also, if you want more control over function output (e.g. don't send any output, not even to "ans" if the user doesn't request it), check out varargout (and varargin, nargout, nargin) in the documentation.
OP is using a discrete system. ss(A,B,C,D,ts) is used to specify a discrete system, so the argument ts is needed. If you have a continuous system the matrices A,B,C,D are very different (you can convert between continuous and discrete using c2d() and d2c(), there are several methods to do this). Also for a discrete time you have an input which is also specified with the same sample time. Therefore his simulation time is correct since he specifies the sample time with ts (20). Also in the discrete domain, you should have poles with an absolute value &lt;1, whereas in the contuous case you need real(poles)&lt;0 to have a stable system. To OP: The matlab function acker() is only valid for a contnuous system. [Here](http://www.google.nl/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=4&amp;cad=rja&amp;uact=8&amp;ved=0CDsQFjAD&amp;url=http%3A%2F%2Fwww.engr.usask.ca%2Fclasses%2FEE%2F480%2Fnotes%2Fmyee480-p7-poleAssign_stateEstimate.pdf&amp;ei=mUjrVKnZE4u_PKafgbAC&amp;usg=AFQjCNEpCtCQWI7j2VNn_A6aoBgBxmeSYQ&amp;sig2=OvH_N3y1ffasrlVq6QQ0HA&amp;bvm=bv.86475890,d.ZWU) you can find a function which is valid for discrete systems. I copy pasted it for you: function K=ackermann(A, B, alphac) % Ackermann’s formula discrete time version %order=2; %A=[1, 0.095; 0, 0.905]; %B=[0.00484; 0.0952]; %alphac=[1, -1.776, 0.819]; order=size(A,1); AMB=B; AMBT=B; for n=2:order AMBT=A*AMBT; for nn=1:order AMB(nn,n)=AMBT(nn,1); end end % AMBI=inv(AMB); CC=polyvalm(alphac,A); CCC=AMB\CC; %disp(’ The gain matrix K is:’) %disp(’ ’) K=CCC(order,:); Now, change the line: k=acker(g,h,[p1 p2]); to ac=poly([p1 p2]); k=ackermann(g,h,ac); poly() returns the denominator coefficients for the roots (poles) [p1 p2] which are needed for the ackermann function. Now you should get the correct results. For me, the response of the closed loop system returns to 0 though so make sure you have the correct matrices specified. Maybe c should be c=[1 0]; , since normally the second state is the derivative of the first state. Not sure what kind of system you have though, so check yourself. EDIT: You can also check the poles of the closed loop system to see if they are correct: pole(sysr) For me, they are indeed correct. 
Please, calm down. You are free to not respond. I have already said that I can't post the reason, I expected that someone could possibly tell me about a similar experience, nothing else. I solved the problem detecting specific parts of the picture and detecting borders with known properties. So, I said that my p`roblem is solved. Thank you for the answer anyway, and let me apologize if that bothered you. 
Have you tried clearing your library to ensure no old values of x and px are giving you errors? As far as i can tell your code shouldn't cause any errors with your pxx line, unless something is not giving you the expected numbers earlier on, maybe at the vx line. Is your angle in radians or degrees? &gt; px = ~6.416 and max(x) = ~6.416. are these numbers from the outputs or what you're expecting them to be?
a = rand(1, k) * k; round(a) bins = unique(a(:)) h = hist(a, bins)
If you're doing computations in C it will pretty much always be faster than MATLAB unless you're doing something that MATLAB is already highly optimized for (matrix operations).
I'm not sure I understand your question, since MEX files *are* dynamic/shared libraries (just with a different extension). 
I know that both are basically dynamic linked libs. My question was: what are the pros and cons, *if any at all*, in using one or the other?
A better practice would be to use a `.*` so it will work vectorized.
Do you have the image processing library? Try poking around in the documentation and some good stuff will turn up. [Image Analysis functions (Image Processing toolbox required)](http://www.mathworks.com/help/images/index.html#btdrwz5) Is one image a distorted version of the other? This would help guide your analysis and the functions to use. Some functions to get started: * *psnr* * *graycoprops* (texture analysis) * *imhist* Also, correlation is a type of "similarity" metric. Take a look at *normxcorr2*
Warning Rant: That's part of the work related politics. Management thought the motor controllers and instruments were 'plug and play'. They literally thought you could just go on the Internet and download the software for the exact setup we had. They thought that ~2 weeks was plenty to spec out equipment, order it, and get it running. The project was started 14 months ago. According to Management "Software is "soft" and therefore quick and easy."
Here's my suggestion: make the script a function that can accept any parameters you may want to play around with (locations/amplitudes). Simply, you could add the following to your script (named *bendMom.m* here) function [mom] = bendMom(ptLoc,ptAmp) % here's the body of your current script return What this will do is accept the locations of your point loads in whatever you pass as ptLoc as well as their amplitudes in ptAmp, and provide the calculated moment, outputted as the variable mom. Now, before you just slap this code into a function, you'll have to take the time to make sure you're passing the appropriate values/variables correctly. First tip (for now): **K.I.S.S.**. What I mean is make your function, only let it work for scalar values, and test it with your current values. I say scalar values because for beginners it may be easier to understand doing multiple things of the same things through looping instead of MATLAB vectorization (which ultimately you should strive for, it's much faster).
Ok, thanks. I have converted it to a function, it throws up no errors but produces a blank plot..I think my working in the if and elseif statements are ok but I really have no idea about: N=size(x,1); M=zeros(N,1); index=1:N; Can you advise on this? 
Well... throwing a blank plot implies something internal to your calculation/function. Run as it was in your OP, did you get a sensible plot? If you do a *"whos"* command and look at the dimensions of your variables, do they make sense?
Got it! That was the problem, changed it to N = size(x,2) and it plotted perfectly. Thanks for your help!
Turned out I was defining N incorrectly, got it now. I had a blank plot using the code in my OP too.
That was my guess. Looks like another poster found it as well. Glad you got it going.
That is exactly what I was hoping for, thank you. Apologies for my badly worded question. I do appreciate your insight, can I ask you to expand a little on two things in particular: &gt;Con: you need to worry about 32 bit and 64 bit MATLAB, limited data types supported (but a good list for normal datatypes) I've encountered several times this issue of 32/64 bits data, especially while reading the MATLAB API reference, but I still fail to understand its practical implications. If, for example, I declare my variable as uint64_t, would that be enough? I know that the mex command includes a command line option for large matrix support, but what about loadlibrary? &gt;Even used memory mapped files/data if you want to get crazy What do you mean by that? "Used memory mapped files" as in "memory in use by matlab"?
Matlab does it because that's the right answer given the precision of the data. It's not running symbolic calculations. Understanding how computers work with numbers is critical to the why.
I just came to the same conclusion independently. Seems like you have to use the heaviside function because MATLAB sucks. Doesn't even have a ternary operator. Also, the use of fourier(...) made things much easier. Just didn't have to deal with this at all. Still needed to use heaviside to build my rectangular pulse function though. Is there anything else that people find more useful? Mathematica? I use maxima ordinarily, and I find MATLAB very cumbersome to use. I hope that changes with time.
Your own failures are not Matlabs failures. This is an easy task that can be done in Matlab in a few minutes. Mathematica won't fix your lack of ability, nor will maxima. 
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**SURF**](https://en.wikipedia.org/wiki/SURF): [](#sfw) --- &gt;__SURF (Speeded Up Robust Features)__ is a robust local feature detector, first presented by [Herbert Bay](https://en.wikipedia.org/wiki/Herbert_Bay) et al. ECCV 9th in International Conference on Computer Vision held in Austria in May 2006, that can be used in [computer vision](https://en.wikipedia.org/wiki/Computer_vision) tasks like [object recognition](https://en.wikipedia.org/wiki/Object_recognition) or [3D reconstruction](https://en.wikipedia.org/wiki/3D_reconstruction). It is partly inspired by the [SIFT](https://en.wikipedia.org/wiki/Scale-invariant_feature_transform) descriptor. The standard version of SURF is several times faster than SIFT and claimed by its authors to be more robust against different image transformations than SIFT. SURF is based on sums of [2D Haar wavelet](https://en.wikipedia.org/wiki/Haar-like_features) responses and makes an efficient use of [integral images](https://en.wikipedia.org/wiki/Integral_image). &gt;==== &gt;[**Image**](https://i.imgur.com/ED8EbVk.png) [^(i)](https://commons.wikimedia.org/wiki/File:Corner.png) --- ^Interesting: [^Surf ^music](https://en.wikipedia.org/wiki/Surf_music) ^| [^Surf ^lifesaving](https://en.wikipedia.org/wiki/Surf_lifesaving) ^| [^Surf ^and ^turf](https://en.wikipedia.org/wiki/Surf_and_turf) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cowfu7o) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cowfu7o)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
Maybe I'm missing the idea, but do you mean like this? ID=OD(:,1)-th(:, 1)./2;? I'm sorry about the weird edits, my tablet went all sorts of fucky. 
You sound mad at me for not liking MATLAB. And actually, I know how to use maxima very well and this is much easier in it. MATLAB is a pain in the ass. Sorry I don't like to waste my time memorizing useless tricks and workarounds to inferior software that is meant to be obsoleted with time, like you. Voted you down, just like you voted me down, but I voted you down because in the time it took you to say all that, you could have just said what I had already figured out prior to your time-wasting post focused on belittling me.
I agree, this would be the best way to do it. 
You had to learn which functions to use for this in maxima, just like you have to learn Matlab. What you learned here wasn't a workaround, it was the correct way to solve the problem. You'd see that if you had a better understanding of math and programming. Despite your trolling, it wasn't me that downvoted you. 
using the binary singleton expansion function: th=0.01:0.01:6; OD=1:0.01:10; ID=bsxfun(@minus,OD',th/2);
First things first, your OP is very hard to read through. Can you add 4 spaces before coded lines so it formats nicely? Not many will even bother with your post if they can't read it due to poor formatting. As for not ending, your while condition is always met and [there are several reasons that may be](http://en.wikipedia.org/wiki/Newton%27s_method#Practical_considerations). As a first step, I would put a hard terminating line into your while loop, something like if nloops &gt; 10^6 disp('too many iterations, quitting...'); return end To see those other potential issues, have you plotted what your code does? i.e. does it jump around your root point (this is one of the ill-posed problems)? Another question, does your code succeed if you make the tolerance larger, i.e. tol = 10^-2 ?
It would be helpful to have it all here, some don't like having to click multiple things when they're trying to help someone out, just an FYI. I think I might have a first guess as to your problem. Your equation for your function is defined as: f = inline('(x^4)-(10*x^3)+(27*x^2)-(2*x-40)') If you plot this or take a min() of it, you'll see that there are no real roots. Judging by your "form" for writing your equation, I suspect you slid the offset inside the last parenthesis and your equation (in your HW sheet) reads: y = (x^4) - (10*x^3) + (27*x^2) - (2*x) - 40 The plot of this a) does have real roots and b) appears to have a root near x = -3, which from your code is my guess at your first root to find.
You come to the MATLAB subreddit with the username "IHateMATLAB" and expect help? And then you talk about MATLAB being inferior software, etc? Interesting strategy, there
Except maxima does it in a way that's intuitive. With MATLAB, the "correct way" is almost always something uglier, if it even exists. Anyway, the only troll is you. The stereotypical know-it-all no-nothing nerd who has no people skills. I bet you'll respond to this because you're a neckbeard with no life.
Because you've never been frustrated by something. Got it. Thanks for not contributing after the issue was already resolved. Typical CS dork.
no real root indeed...
thanks for the replies guys. I will be sure to check it out. just out of interest how long do you think it will take me to implement these to an already built GUI??
Troll harder, it's not working yet. 
The problem is that you want both y and z as functions of x. You've created the stepping for x correctly, and entered the equations correctly, but the plot command is always in pairs of x and y. So for two plotted functions, you should have two plot command calls, each with two variable inputs. figure(1) hold on plot(x,y) plot(x,z) hold off
Essentially, yes. MATLAB (if you rule out the symbolic editor), can't just plot a line like you and I think about it. It needs a set of x points to feed into the function to generate the y values. So it takes x = 0, calculates y, plots. Then steps to x = 0.5, calculates y, plots, and so on, then connects the dots. For a linear function, the step size is irrelevant, as long as you have two points, the line will be the actual function, but think about the quadratic you plotted. If it only had 3 steps, you would get a v-shaped plot, not very accurate. As you reduce the step size, you get more iterations of x and y, and the accuracy improves. 
Exactly. As you reduce your step size to very small numbers, you get infinitely more accuracy. You just taught yourself calculus ;)
Ok, I will try that tomorrow in school. But the example I provided is directly from mathworks.com/help/matlab. Thanks again for all the help!
To add, I don't know if Octave has this same functionality, but MATLAB has different types of properties you can play with when displaying plots. [Here](http://www.mathworks.com/help/matlab/ref/primitiveline-properties.html) are the line properties you can change for plot() (and line(), what's really being called when you call plot()).
Hey thanks a lot for your input -- this is exactly what I was thinking might happen. We ended up going with the dual 16 core Opterons. 
&gt;I'm new to Matlab but why does it only calculate the first value of y and z? Perhaps that's the way myTimeComp() has been coded. I'm assuming you're the author? Within myTimeComp(), how do you pass your input arguments? Is your function set up to loop, and loop over the inputs? Have you appropriately coded the output reassignment? My guesses are these: 1: you've coded your function to only take the first value of x, something like newN = x(1) 2: you haven't done your output correctly. You *may* calculate all 4 y and z but you aren't assigning/updating their output appropriately. An example would be: x = 1:4 for ii = 1:length(x) y = x(ii)*x(ii); end in this, you'll calulate y for all of your x's, but only the last one is saved as you haven't indexed and assigned the other previous values correctly (or at all). If this is ONLY returning the first value, and you can see that all x values have been "worked on", then there's something internal to your function as well. Finally, can you post your code? We can only help so much without knowning what your doing.
Have you tried edge detection? That combined with a Fourier transform can help isolate shape elements in your images. That would be a meaningful way to compare images.
I'm confused by your post and language. Are you trying to use imshow()? Are you trying to plot()? Are you trying to plot with(out) evenly/uniformly spaced x-values? Can you give us a clearer picture of what you're after? Maybe even post your code? 4 spaces starting a line ---&gt; (z.^s*4)*hi cancels reddit's formatting ---&gt; (z.^s*4)*hi
Hey, I haven't looked at edge detection just yet. The first algo I'm looking at is the Structural Similarity Index (SSIM). I'll have a look at how it compares to the edge detection. Thanks for the input. 
You would want to define x as: for time = 1:t x = NaN*ones(1,t) ... x(time) = nnz(B); and call your plot as: plot(1:t,x)
We made a Bayes Classifier to detect if an image was smiling or not. I vectorized the image and then computed the SVD, of which the singular vectors resulted in about 8-10 Eigenfaces (whose magnitude correseponded to that singular value) you could use as features to teach the classifier. It sure wasn't fast, but it was a cool way to analyze the data set. 
My advice is to not do it this way at all. Either use a 3 dimensional array or a data structure instead. It's easier to preallocate, address, and debug than other solutions. 3d array: nmatrices = 10; matrixsize = [5 5]; % Preallocate for speed S = ones([matrixsize nmatrices]); for ii = 1:nmatrices S(:,:,ii) = S(:,:,ii)*ii; % Generate some dummy data end Data structure: nmatrices = 10; matrixsize = [5 5]; % Preallocate entire structure array (a little hackey) S(nmatrices).data = ones(matrixsize); for ii = 1:nmatrices S(ii).data = ones(matrixsize)*ii; % Generate some dummy data end
thanks for the help!
Are you after taking the dot product 3 times for all 3 of your lin_bayer 3rd dimension?
So what exactly are you having trouble with? ... it seems you already know the method you want to use and how you want to display your results.
No. I'm thinking of correcting this by creating my own white balance matrix so 'mask' can become a third dimension through padding....what do you think of this?
I would try to move the content of the matlab folder to another folder.
I believe so. You'll also have to rehash the toolboxcache rehash toolboxcache .... and maybe close/open MATLAB again.
Sorry, I don't process images myself so some of your language is Greek to me. But... ... are you trying to append the mask to lin_bayer? (look at the [cat()](http://www.mathworks.com/help/matlab/ref/cat.html) function) ... are you trying to make mask a 3D matrix and just be a stack of 3 copies of itself? (look at the [repmat()](http://www.mathworks.com/help/matlab/ref/repmat.html) function)
And MATLAB was nice enough to give OP the solution but he ignored it. Gonna have a hard time with MATLAB if you can't read the error message..
Here's my 2c: make a 2d matrix of whatever size you want of random numbers. Scale them and replace them with A-Z &lt;-- here's your random background of jumbled letters. Now, go into your matrix and replace the elements in whatever rows/columns with your "search" words.
Like the other person asked, is this homework? What have you tried so far? How has it failed? 
I assume you're doing Bayer decoding. Think about how well that (won't) work if the mask/sensor registration is incorrect. Do you think simply padding the array would get you the results you expect? 
Find and reshape have always done exactly what I want. What do you mean? 
 doc reshape
try expanding the expression, start with (j - w)^3 = (2 + 2j)^2 , expand those and you should be able to get a polynomial expression in terms of w. You may get further help at /r/MathHomework or /r/cheatatmathhomework 
http://www.mathworks.com/matlabcentral/answers/100821-how-do-i-change-the-directory-that-matlab-is-initially-started-in Method 1 is more stable. It will cause MATLAB to open to the same location no matter how it is launched. edit startup.m and add: cd( fullfile('your','path','here'))
thankyou!
I'm not exactly sure what you're asking, but this might be helpful http://www.mathworks.com/matlabcentral/fileexchange/21936-ellipsoidal-toolbox--et-
 % a and e exist in the workspace t=linspace(0,2*pi); r=a*(1-e^2)./(1-e*cos(t)); polar(t,r)
I love it. That's a neat little trick. edit: is that the same as Using Logicals in Array Indexing as far as the help file goes?
Yosemite. I've downloaded Java and Java Development Kit and it still wont work. I'll double check there aren't any newer updates. Downloading XQuartz was just my trying to cover all possible bases. edit: Java is complete up to date as is JDK.
I don't remember seeing that option! Saying that, there is only one user on this laptop so that may be why the option didn't come up. Can you remember where about it asked you if it was for one user or all users?
I'll try and find an older version of Java and update you to how it goes :) Thanks for the idea! edit: Installed Java 7 but no luck.
juliandate function belongs to aerospace toolbox. I've tried using datenum as: datenum(2015, 1, 1) - datenum(-4713, 1, 1) = 2457351 since julidandate takes January 1st, 4713BC as reference, but it returned a different number from juliandate(2015, 1, 1) = 2457023.5
I just tried reinstalling MATLAB and it seems my memory has failed me. Could not find the option either. However I have to type in my login name for my laptop since I use a version of MATLAB available through my university.
You can change the indentation settings in the editor/debugger settings in the matlab preferences. Maybe you accidentally disabled indentation using some keyboard shortcut. 
Have you thought about using the temporal dimension as an additional spatial dimension for a 3d plot?
How many time steps do you have?
I always just write my code, then use auto-indent. Control-A, Control-I
seems like what i want, thanks
It doesn't matter what version of Java you have installed. Since R2013a, MATLAB ships with its own JVM on Macs. So that's a blind alley. Also, I'm guessing you have R2014a. There is no R2014b student versions. Student versions are released once a year. Have you installed the Yosemite patch? You can find it [here](http://www.mathworks.com/matlabcentral/answers/159016-is-matlab-compatible-with-mac-os-x-10-10-yosemite). If you do have R2014b(and not a student version), do try checking folder permissions to make sure MATLAB has the right permissions. If there is an issue with xQuartz, then MATLAB will start and crash. 
Thanks I have defined b just didn't include it. Can you explain the second sentence a bit further? Does my error e1 need to be a vector? Or do I need to change a to a scalar?
Also, if you want to just run a function like this and have it assign its output to the necessary variables, try defining a 'Run Configuration'. It is essentially one line of code and it lets you just hit the run button instead of having to use the right command in the command window over and over again. 
No problem. It's always the simplest things you *think* you've tried that make you trip sometimes.
It'll be interesting if your code can check first if the fd has any zeros in the interval you are searching the root. The convergence of the method is slow if fd == 0. As seems to be the case. 
You need to throw a '[view](http://www.mathworks.com/help/matlab/ref/view.html)' command before the getframe command. When ever you change the view of the plot with the pointer in figure window you'll see two numbers at the bottom left changing. Copy those numbers after you get the view you want and put them into the view command.
oh thanks
Downloaded 2014a. For some reason the patch won't apply to it properly when I run it, and manually copying the files doesn't work either. Since I'm on Yosemite 2014a won't work without the patch. Doesn't seem like anyone else has had problems with the patch after a few google attempts - so maybe there is something I have/haven't installed or some permissions I need to give MatLab to work? Edit: Just got the patch to work and now I have a working version of MatLab! Thank you so much for your help!
How big is your input image? What do you get if you just plot hogVisualization? Explore each part of the example and figure out what it does. 
My [image](http://i.imgur.com/23slnHC.jpg) is 3264x2448 and the plot for hogVisualization gives me this: http://i.imgur.com/Z9kKFoS.png
&gt;k=acker(g,h,[p1 p2]); I suggest using the place command as it is numerically more reliable. 
Place, like acker, is only valid for continuous systems. Thats why i told OP to change that line and use the code i gave above.
Can you provide more details regarding what the data structure looks like, and what you are looking for as a final result? Please be as concrete as possible.
when i do this i get a polar plot with 2 straight lines.. :/
There are all sorts of tests. [Here's a wiki page citing some](http://en.m.wikipedia.org/wiki/Normality_test). K-squared isn't a bad place to start, chi-squared is pretty common. I usually just histogram and eyeball it for my purposes. 
Non-mobile: [Here's a wiki page citing some](http://en.wikipedia.org/wiki/Normality_test) ^That's ^why ^I'm ^here, ^I ^don't ^judge ^you. ^PM ^/u/xl0 ^if ^I'm ^causing ^any ^trouble.
Ok: 21 468 Cytosine 0,0.0 These are the first four values in the data file: 21 is the number of data subsets in the file, this value does not repeat 468 Is the number of data points in the first data subset Cytosine is the comment pertaining to the first data subset 0,0.0 is the first actual data point in the first data subset. This pattern continues for the 20 data subsets in the file. What I want to do is separate the 20 data subsets into 20 different vectors
Reading your post again makes me think you want to do something like x1=linspace(0,120,50) % 0 is starting value and 120 is the end value y1=2*x1.^2 + 2*x % replace with your first function. Remember . before ^. This should be repeated for all three functions plot([x1 x2 x3],[y1 y2 y3])
doesn't work at all then.
Can you describe what you're attempting in a little better detail? What is the text, the name of the team? Do the individual boxes represent individual players? Right off the bat, there are a few things to clean up your plot: text(x,y,'LMessi','horizontalalignment','center','verticalalignment','middle',... 'backgroundcolor',[255 128 0]/255,'fontsize',8); There are a few options in here that will help: * **horizontalalignment**: center the text horizontally * **verticalalignment**: center the text vertically * **fontsize**: reduce size of font to fit into boxes (other suggestion: make boxes larger) * **backgroundcolor**: create opaque background behind text so that cell lines don't interfere with text.
Basically I need to construct a user defined function utilizing the if elseif features to calculate the total yearly income for a certain gross income. I have been trying to set it up as function salary: function TYI=Salary(x) if (x&gt;=0) TYI =(x*0.20); elseif (x&gt;=30000) &amp;&amp; (x&lt;=60000) TYI=((30,000*0.20)+(x-30000)*0.05); Etc, etc... And my answers are coming back as columns dependent on how many digits are in the salary(x) for example if I did: Salary(20000) Matlab would return: Columns 1 through 4 10.20 9.6 10.20 9.6 Columns 5 10.20 All of my inputs are scalar, what am I doing wrong and why are my outputs coming out like this?
yes, ode45 will return a matrix with 4 columns. First one is the temporal values; Second the numerical values of the solution, y(t); Third the values of the derivative of y; and fourth with the second derivative. Just use plot.... plot (t, y(:,1)); plot (t, y(:,2)); plot (t,y(:,3)); You need to understand what ode45 is returning to you before proceed. Also, you don't need to create the function dydt; just create the ~~matrix~~ function dydt = @(x,t) [y(2... ] anywhere, then put her in the argument of the ode45... like ode45(dydx, interval, Initial_conditions).
&gt; x = [0;0;0;0;0;1;1;0;0;2;2;2;2;0;0;3;3;3;0;0;0;0;4;4;4;4;4;4;0]; &gt; &gt; j = 1; &gt; for i = 1:length(x) &gt; if x(i) ~= 0 &gt; if x(i) == j &gt; x(i) = 0; &gt; j = j + 1; &gt; end &gt; end &gt; end Wow this works! Thank you!! I think I forgot "~=" exists and that I should use it.
To be helpful, can you reformat your post here? We see reddit's formatting, not what (I think) you intend. If you put 4 spaces to start code lines and we'll read it *gooder*.
What's the difference between removing it and setting it as zero? It would work either way, right? Because I intend to use a "if x(n,1)&gt;0" later to do my calculations. But you are right, I shouldn't have said 'remove'.
Thanks! I will try to use that next time.
You've have to extract the x and y data, trim it to the range you want, and then operate on that. I don't have Matlab in front of me so forgive any syntax errors: x_data = get(gco, 'XData'); % Or obtain the data directly from whatever was used to generate the plot. y_data = get(gco, 'YData'); % Get a logical vector which trims the vectors to the desired x-range. x_trim_min = 4; % Change this of course... x_trim_max = 5; % Change this of course... trim_idx = x_data &gt;= x_trim_min &amp; x_data &lt;= x_trim_max ; x_data_trim = x_data(trim_idx); y_data_trim = y_data(trim_idx); % Find the minimum value of the trimmed y data, and its location. [y_data_trim_min, y_data_trim_min_idx] = min(y_data_trim); % Get the x-value where the y-min occurs. x_data_trim_min = x_data_trim(y_data_trim_min_idx); edit: whoa, my first gold! thanks!
Is that better? I'm just so lost, Im a freshman engineering student and I can't seem to find any examples like this to base my code on.
Could you post your function?
Assumption - matlab is using double-precision floats. Yeah, you're running into floating-point trouble. Take a read here: http://www.mathworks.com/help/matlab/matlab_prog/floating-point-numbers.html#f2-98690 Some specific notes: * b - this works fine. * u - this should work fine too - plenty of bits to work with * L - this b^M term is touchy. 2^1023 is right around 10^308, which is nearly the maximum double-precision float. This means that your floating point chunkiness will be very high. * s - with m=-1022, 10^-1022 is smaller than the smallest double-precision IEEE float - 10^-324 . 
K squared is probably the easiest to implement and works fine unless you're worried about bimodal distributions rather than shape. I'd start with just thresholding for skewness and kurtosis and seeing if that's good enough. If those aren't sufficient, Kullback-Leiber distance from the estimated normal distribution to a histogram is probably your best bet for a number to threshold.
The other answer is a good one, but you should also consider that whatever you are doing would probably be better achieved with a less hideous data structure. Also, if you really need to do things in this way, you could consider a recursive solution. Recursion isn't the most efficient, but it's really easy to code. 
There are a number of tests for exactly this available in the statistics toolbox, if you have it available. 
Try this :) % Find all unique elements in your input X uniq = unique(x); for n = 1:length(uniq) % Search where the first instance of your unique element is delRow = find(x==uniq(n),1); % Remove instance of first unique element x(delRow) = []; end 
 function [out2] = deflections(in1) if ((in1&gt;=0) &amp; (in1&lt;120)) out2=1/(3190000000)*(800*(in1).^3-13680000*(in1)-2.5*(in1).^4); elseif ((in1&gt;=120) &amp; (in1&lt;=240)) out2=1/(3.190e9)*(800*(in1).^3-13.68e6*(in1)-2.5*(in1).^4+2.5*((in1)-120).^4); else out2=1/(3.190e9)*(800*(in1).^3-13.68e6*(in1)-2.5*(in1).^4+2.5*((in1)-120).^4+600*((in1)-240).^3); end end
Unfortunately not, just the base Matlab. 
In your case I think you can just move the legend outside of the for loop. If you want to add the entries automatically, create a cell with the legend entries (legendEntries{j} = ['pole',num2str(p1)];). As a sidenote on this, if you need more flexibility, you can pack the handles into a cell and pass the cell as first argument to legend. E.g. x = linspace(0,1,501); A(:,1) = cos(2*pi*3*x); A(:,2) = sin(2*pi*3*x); figure(); hold on: for j = 1:size(A,2); myCell{j} = plot(x,A(:,j)); end legend(myCell,['cos', 'sin']); There might be some bugs in that code (haven't tried it), but you get the idea. If you pass a cell with figure handles, it will selectively create legend for those handles. This is good if you want to avoid having a legend entry for everything you've plotted, for example, and a tonne of other applications.
doesn't use loops in matlab... that's even better!
that's awesome! I don't see any good in it but showing off in front of other students, but it is very good!
Anyone? Im having quite a bit of trouble here, any help is appreciated.
Use the sum function or instead of storing x in a vector, update f by adding the new value of f(x) to itself every iteration
Do you mean to have f(n) instead of f(x)? 
How would I incorporate the sum function? I've tried a handful of ways, but it either gives me errors or doesn't sum all the values the way I need it to. 
How can that be? X isn't necessarily an integer, so using it as an index is going to fail. Something is going on here that your example doesn't show. 
When I run f(n) I get this: Attempted to access f(0); index must be a positive integer or logical. Error in HW4_4 (line 4) f(n)=(x^n)/(factorial(n))
Thank you for your help, silly me in my formula for s it should be 1xb^m not 1x10^m, .... I think?
Use f(n+1)....
Well that error message is pretty clear, is it not? Can you look at your code and see why it's happening? 
It's better not to just give out answers for homework questions. 
You won't get good responses if stuff is hard to read. Reddit formats your input as code if you precede each line with four spaces, and precede that whole block with a blank line. It would look like this; note that I fixed some of the &amp;amp; and gt/lt errors, and also rearranged it so anyone could directly copy and paste, by turning it all into one function with a sub-function: function forum_max xo=0; xf=360; n=721; dx=(xf-xo)/(n-1); m=deflections2(xo); mx=xo; for i=1:n; x(i)=(i-1)*dx+xo; y(i)=deflections2(x(i)); if(m &lt; abs(y(i))); m=y(i); mx=x(i); end end plot(x,y) m mx end function [y] = deflections2(in1) if (in1&gt;=0 &amp;&amp; in1&lt;=120) y=1/(3190000000)*(800*(in1).^3-13680000*(in1)-2.5*(in1).^4); elseif (in1&gt;=120 &amp;&amp; in1&lt;=240) y=1/(3190000000)*((800)*(in1.^3)-13.68*10.^6*(in1)-2.5*((in1).^4)+2.5*(in1-120).^4); else y=1/(3190000000)*(800*(in1).^3-13680000*(in1)-2.5*(in1).^4+2.5*((in1)-120).^4+600*((in1)-240).^3); end end I'll take a look real quick and see if I can find your problem.
Well, that seems embarrassingly obvious. Thanks, I haven't been using this long and after a long day I'm not thinking my best. Anyway, I swapped this in and was able to generate the sum function and get the output I need. 
thank you
Yeah, I found it easier to write my own maxabs() function that does that, but I'm surprised it isn't a more common operation. 
It may seem easy, but you lose a lot of functionality if you have to write little tricks like you proposed, and writing a sub function for this is tedious. It makes it hard to share code if you have to provide an extra function with your code. Your second solution fails. Another downside of not having a built-in function for this operation. &gt;&gt; x=[-100 40 10 80]; &gt;&gt; sign(x)*max(abs(x)) ans = -100 100 100 100 Your other solution does work for 1-dimensional vectors but doesn't work for matrices. It's really not that easy. 
I've done it plenty of times. It takes some getting used to remembering to adjust for Matlab indexes starting at one instead of zero. 
Well... what are your ideas? We don't just *DO* homework here, but we're more than willing to help you through coding, errors, and debugging. If you put any code here: put 4 spaces at the start of code lines myEQ = a.*b.*ln(x.^(3*v^2); so that reddit doesn't format things weird. myEQ = a.*b.*ln(x.^(3*v^2);
Bless your soul!
Your superscripts are all buggered up.
The usual method for preventing this sort of numerical under/overflow is using log transforms. As long as none of the log terms are not negative, this might solve the problem: b = beta; log_u = log(0.5) + (1-k)*log(b); log_L = log(b - b^(k-1) -1) + M*log(b); log_s = m*log(b); u = exp(log_u); L = exp(log_L); s = exp(log_s); 
thanks for the heads up. I just saw the post and thought it would be fun to experiment around with using a MATLAB script.
Pretty much the definition of sin/cos. You could use linspace to divide [0:2pi] into a number of segments, take the sin/cos of each, and multiply your matrix.
http://mathworks.com/help/matlab/ref/animatedline-object.html
What have you tried? Where are you stuck? From the sidebar: &gt; we don't do your homework! Post *something* here... help us help you. If you decide to post some code, please put 4 spaces in front of any code lines y = a.*b.^cos(g*g)./log(h.^3); so we can read it as you've coded it an not as reddit formats it (like this y = a.*b.^cos(g*g)./log(h.^3); )
Thanks a bunch, i was writing my unit circle code as "theta=linspace(0, 2*pi, 360); x=cos(theta) ;y=sin(theta) ; plot(x,y) ; axis equal". Would there have been a method to multiply this by A?
That's a nice approach. I saw this question on /r/math and thought it would be a good project cody question. However, there was a comment posted on the original math thread with a link to a [wiki article](http://en.wikipedia.org/wiki/Lander,_Parkin,_and_Selfridge_conjecture). **[Link to math thread, which I should have posted](http://www.reddit.com/r/math/comments/2xvkkt/a5_b5_c5_d5_question/)**
Does the image have a key that explains them in plain english? Anything at this point would just be a guess. 
Look at the restriction on the first 'if' statement and consider if it should have an additional restriction. 
Lol good point, just glanced at first if statement and didn't bother reading on xD 
help function handle, help syms 
Hi, first of all your for loop is set up incorrectly "for i = i:n" wont give you a valid index, you need to specify a valid starting point, like 1,2,3 etc. Second, you assigned int values to ui, ue initially, then in your loop you are treating them as vectors, try being consistent. You cannot call ue(i+1) for i &gt; 0 because ue is 1x1.
 fucntion [var1,var2] = user_input() %% %do something to get those two vars %help inputdlg end function [x,y] = do_somethingelse(var1, var2) %% %just use the output from the first function as input for the %second. easier to just call both function from one script %help script 
Ok. So I changed the i to i = 1:n. I understand what you're saying for the u, ue and ui being integers and then being vectors in the loop, but i don't know how I would go about changing them.
it depends on what your goal is, if you want to stick with the structure you are using in your loop then I would recommend you pre-allocating those vectors on top i.e. ue = zeros(n,1), ui = zeros(n,1), etc.. if you want to keep the maximum for each value within that vector to 100 just restrict them within the loop. I think you could benefit from taking some tutorials online. Their are plenty of resources that can help you develop a better idea/understanding of the structure of the for loop and using matrices in general. 
You could also consider a platform style game. They are pretty easy to code, pretty easy to make graphics for, and you can make them really fun by putting in simple Enemy AI's. And as far as a tower defense game goes I would say it will probably be more difficult than a flappy bird game, but it should still be doable. I would say that it would be a really good project, and could be as simple or complex as you want it. My biggest advice is to make the style you enjoy making most. If you're having fun with it you'll do better than you would making an easier game that feels like a chore to make. 
I have, but it doesn't seem to help much. I've already got a polyfit line in my code: load('Spacecraft.mat') for r=1:2:R a = polyfit((D(C,:)),D(r+1,:),1); m=a(1); b=a(2); x=0:12; y=m*x+b; if m &gt;= 0.8 plot(D(r,:), D(r+1, :), 'rd',x,y,'r'); else hold on end grid on end 
Thanks for the response! I'm a sucker for Bloons Tower Defense so anything resembling that seems really cool to me
the assignment says the line of best fit should run from the first point in the equation to the last
If it helps, the function pretty() makes things look nicer and is good for handling scary looking math. 
Sounds like the Psychtoolbox install didn't go perfectly. Did you make sure to follow instructions to install Subversion and all the other stuff it tells you to do? Wouldn't hurt to try to reinstall PTB. If you type 'PsychtoolboxVersion' (without quotes) into the Matlab prompt, it will tell you what version you have installed -- and if it says Command Not Found, then you know your PTB install is broken. Or, you installed it but didn't add it to your Matlab path. You could type 'which Screen' without the quotes and you should get something like /Applications/Psychtoolbox/PsychBasic/Screen.mexmaci64. If it can't find Screen, then *definitely* PTB isn't installed correctly or added to the Matlab path. Happy to help more if this doesn't solve your problem.
Thanks fellas. I figured it out. I found that if I changed the first if to (x&lt;0) then the other ones worked, so then I changed it to (x&gt;=0)&amp;&amp;(x&lt;=30000) and that worked like a charm. Amazing responses, thank you all.
Can you post the code?
My solutions didn't anticipate that you'd be incapable of making simple modifications for your particular situation. There's also no function to do your homework for you. Sometimes you have to write code. 
This is the only time I've ever tried to use subplot. It is for a math class, so it is learn as you need it instead of having a base knowledge
dot (eye (size (A)), A) should get you there
Your code looks fine, but it seems that imshow doesn't work with subplots. Try this: http://www.mathworks.com/help/images/ref/subimage.html
What does it mean by "the current axes" Nevermind figured out what it meant, but still not working...
Those are not minor undertakings in Matlab... Do you have to make a graphic display? Most introductory courses are targeted at a project that takes about two weeks and consists of something like a simple card game. When learning coding, it's not about creating an impressive final project that takes forever to write. It's about iterative learning where you can use one week's lessons in the next week's project. Unsolicited advice: When picking projects such as this, make the base target something 100% achievable with secondary and tertiary betterments you can add should time allow. The last thing you want is to shoot for the moon and turn in a non-functioning heap of code. 
what does the output look like when you replace imshow with subimage? posting a picture might help explain.
You could do this: A(1:size(A,1)+1:end)
There are times that looping offers functionally no worse performance than any other method (e.g., the loop runs fast enough that the user doesn't perceive any wait, as is the case with small loops like this), or when it's simply necessary (e.g., sequentially accessing fields of a structure, plotting different line series), and the JIT helps quite a bit as long as you put your loops in functions, preallocate any arrays and minimize the contents of the loop (especially: minimize allocation and function calls). And sometimes a loop is just simplest/cleanest/fastest to write, which means it is the optimal solution for one-off code (even if vectorizing/unwrapping would produce more efficient code). But for something like this, the vectorized solution is clear, clean and easy to read/run/debug, which makes it better. 
Everything is a built-in function, or something written using built-in functions. Doing what you actually want to do, find values along a line, can be done with a loop, or with meshgrid; but both of those are built-in. You could write meshgrid yourself, but you'd need to create some matrices possibly using repmat and transpose... both built-in. 
You could do it the way /u/itsallforscience suggests. You could also look at the way you're assigning your output. When you assign a value to x(n), what shape would you expect x to have? How would you access the data for each n? To put it another way, would you ever expect x(n) to be non-scalar when n is a scalar loop index? 
I just had to turn it in, the deadline was creeping up. Thank you anyway! I couldn't figure it out 
If you post your code I can run through the logic and see if I can help. Also, try putting breakpoints and debug each line at a time.
Collision detection and resolution? Path finding? These are not easy intro subjects.
When I try implementing this now its only plotting one graph with only one of the values. I would think that by adding i=i+1
My suggestion: http://en.wikipedia.org/wiki/Conway%27s_Game_of_Life Make a Conway's "Game of Life" clone, that should somewhat easy to make. Or minesweeper clone. My reasoning behind those ideas is that the game board can be easily represented by a matrix, something which is very core to matlab, and you need to be comfortable with matrix operations if you wanna have any success using matlab. So it would be useful practice as well :)
Here is your problem: h = 0; %you set h to be zero t=0; n=1; y(1)=h; %h is zero, so now y(1) is zero while y(n) &gt; 0; % y(n) ==0 so this loop never executes
Hate to break it to you, but your code still uses the built-in functions colon(), subsref() and subsasgn(). There's no escaping built-in functions
I understand this problem as f(t), g(t) gives you the XY coordinates and your job is to calculate arc length approximated with n lines. I think, this may help: http://en.wikipedia.org/wiki/Arc_length
This is not very efficient but here is one way: Convert the matrix into a cell array in which each row is 1 cell. Step through each element in the array and search for that pattern in the cell array. If you have more than one instance...
Hi! Let's call your matrix "A", then you can use a function called "unique" that finds all the unique values in a matrix, you can however tell it to treat an entire row as a singe entity, "unique(A,'rows')". You can then check if "A" and the result is the same size, number of rows, or how you want to check it. eg. A = [1, 2, 3; 1, 2, 3; 4, 5, 6; 1, 2, 3]; A_unique = unique(A,'rows'); % Returns all the unique rows in our case [1,2,3;4,5,6] if (size(A) == size(A_unique)) disp('All rows are unique') else disp('A contains duplicates') If you want to find the indices of the unique rows,you can do that with the function as well. Read more by typing "help unique" 
Are any of them zero? 
You could also try: for n = 1:size(A,1) for m = 1:size(A,1) if all(A(n,:)==A(m,:)) &amp;&amp; n~=m &amp;&amp; n&lt;m disp(sprintf('Row %d matches row %d',n,m)); end end end disp(sprintf('Duplicate row test complete.'));
that was quick. thanks for following up with a solution
I have been thinking about the problem on and off for over a week, and it just clicked, which was great. I always try to follow up my own questions if I find the solution, I know how annoying it is to find someone asking the same question you are and then not following up with how they solved it.
The problem I'm having with that computation is the fact that my average daily expenditure changes each day, as it only includes all days up to the day that's being displayed. So if I were to make another loop, how do I only take the average of the first 3 or first 4 elements of array dailyexpense() when the array has 6 elements in total?
I think you have identified the problem that this question is asking you to solve. Look at how to index arrays in matlab. If you have x=[1 2 3 4 5]; then x(1:3)=[1 2 3] and mean(x(1:3))=2. The average is going to change each day, which is why you are making a projection. Multiply that by the number of days left.
I want to be able to add the initial x value from the (please enter the cost of the first item) to every value of x in the loop for (please enter the cost of the next item) until x reaches a value of 0. What do I need to do?
 total = total + x Also, you should also put in some sort of check for if the person tries to pay less than the total amount.
That won't work if I change the first value to y. 
But I want to add the initial value of x to the total as well. When I just add x, it doesn't give me the correct value
Then, put \^that line in once before the while loop. 
The total= total +x before the loop?
Yep. That will add the value of the first item. And the one inside the loop will add the value of each subsequent one.
The free coupon code doesn't work, but the $10 one does.
I think the problem is that the grid spacing of the Bayer mask on your screen is slightly different than the sample interval of your camera, resulting in a spectral moire pattern. You could probably improve this by breaking the signal up into its constituent color channels, and using sinc interpolation to up sample all the data to a uniform grid. 
You can also avoid the need for the whole loop by solving for t when y==0 and creating t as a vector for the plot (for h=0 and y=0 t_final = 2*(v*sind (theta))/g Since everything on the right is a scalar constant, you can construct a vector t with `t=[0:step_size:t_final]`, eliminating the need for the while loop (and even for vector theta, you can construct a vector t_final and iterate over its elements; you could make a matrix t for that vector if you keep the number of steps constant, but not if you keep the step size constant). Also: I noticed you're using a drastically different step size (1 second versus 0.1 seconds) when iterating over a vector theta rather than a single value. Was that intentional? For plotting trajectory, I'd usually recommend a constant number of steps rather than constant or arbitrary step size. An easy way to do this is to set your step size equal to your final value divided by the intended number of steps (e.g., `t=[0:(t_final/100):t_final]` gives 101 evenly spaced points from 0 to t_final). This let's you ensure that the endpoint is when the projectile hits the ground, rather than being up to your step size off. Last (unrelated to the code): in case you weren't aware, both the x and y equations are forms of a basic kinematic equation: d = v_initial * t + 1/2 * a * t^2 Where the x acceleration for projectile motion is 0, the y acceleration is the acceleration due to earth's gravity, and the v*sin(theta) and v*cos(theta) are simply the y and x components of the initial velocity. It, and its various forms, were easily my most used equations in high school physics. 
n^2 complexity, far from ideal.
See this [image segmentation tutorial](http://www.mathworks.com/matlabcentral/fileexchange/25157-image-segmentation-tutorial---blobsdemo--). The most important part of this process will be to capture a good image of the object - make sure your background is a solid color (preferably white, since your seam will be dark) with low reflectance. Also set up 3-point lighting to get rid of the shadows. 
textscan is the most robust import tool. Allows header skips and will import almost anything. 
In addition to the other reply about textscan, there a loads of functions for reading ascii data, depending on the format. Look at dlmread, for example. Also, stop using eval. It causes cancer. 
It is not the most efficient way, however it is very versatile and easy to use and understand and you don't have to make assumptions of the data. It is sufficient for such a small dataset. If it was larger and we needed to optimize it we would like to know the type of data (int16, double, w/e), is the matrix presorted, and so on and so forth. If it's sorted we could find the diff. between each row and find the 0 diff. (equal rows), if each coordinate is in int16, we could store the three coordinates as a single int64 and then find unique rows etc.
Lmao, so in layman's terms, my photo is Potāto quality. 😂
[Start here.](http://www.mathworks.com/help/matlab/ref/function.html) A function is basically: function [y1,...,yN] = myfun(x1,...,xM) %do things end This `myfun()` function takes `(x1,...,xM)` as an input and outputs `[y1,...,yN]`. Also, I don't know a lot about function handles, but [see here](http://www.mathworks.com/help/matlab/ref/function_handle.html). Basically, you pass the function `f` as a function handle that you'll be able to use inside your function. It's kind of like having a function as a variable that you can change; you could give any function (like sine(), log(), etc.) as an input to your function. You'll use that to get the value of `f(x)` in a `while` loop to get the value of the integral from `a` to `b`.
Ok, thank you will look into it. Appreciate it. (Personal note to never use eval again) 
Hi, thanks for your feedback. You have given me food for thought here. I see exactly what you mean regarding my step sizes being off. I will definitely be using t=[0:(t_final/100):t_final] in the future as it gives me evenly spaced steps. In the end, this is how I came to a solution to the problem: clear all v = 40; theta = [0:10:90]; g = 9.81; h = 0; t=0; for k = 1: length(theta); currentAngle = theta(k); for t=t+1; x(k) = v*cosd(currentAngle)*t; range(k) = x(end); end end plot (range, theta,'b--', 'LineWidth', 2); title('Range of Projectile for different \theta' ,'FontSize', 10); legend('Range per \theta') xlabel('Distance travelled (m)') ylabel('Angle \theta (Degrees)') Which has produced a somewhat reasonable plot where the max range occurs a 45degree, with 0 and 90 degrees both being zero. I have done kinematics and projectiles as HS too, though admittedly it was quite some time ago! My next task involves plotting the range over the different angles for different initial heights, and plotting on the same graph. No idea how to approach this at the moment, although it is a requirement that I use a loop instead of simply iterating it over elements of vectors as you suggest (which seems to be the best way of doing things but the point here is about learning loops and such). Kind regards, *sharks_eat_potatoes*
Which part are you stuck on? 
idk how to write this at all lol
I would separate the second equation as an ODE and integrate both sides with respect to C and A, then substitute in the first equation, and make everything equal to C. 
If you like the idea of symbolic variables, these functions will probably help you: http://www.mathworks.com/help/symbolic/solve.html http://www.mathworks.com/help/symbolic/subs.html
Thank you for your help! By integration I get that C=2 K^2 A-Const/EP^2 I think I have to show the integration part on matlab only, which i'm trying to do currently.
You can set the tick labels to whatever you desire if the addsecondaxis() function behaves like an axes object and is supported. Here's the [axes properties](http://www.mathworks.com/help/matlab/ref/axes-properties.html) you can modify. If it doesn't, I would still make my own 2nd axis using MATLAB's axes() function and use these properties to show however I wanted.
Try to think this through mathematically first: There are 100\^10 = 1e20 different 10-element vectors defined on the field {1, ..., 100}. Every vector, if stored as a uint8 Matlab array, takes up 10 bytes. So you need 1e20 * 10 bytes = 1e21 bytes of memory to store all of those vectors. 1e21 bytes = 1e18 KB = 1e15 MB = 1e12 GB = 1e9 TB = 1e6 PB... So unless you have a 1-million-petabyte-disk lying around somewhere, you can forget it ;) If I may ask, why would you need this file anyway?
Starting work at a new company monday. Here's to hoping they have at least 2012.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Moore's law**](https://en.wikipedia.org/wiki/Moore%27s%20law): [](#sfw) --- &gt;__"Moore's law"__ is the observation that, over the [history of computing hardware](https://en.wikipedia.org/wiki/History_of_computing_hardware), the number of [transistors](https://en.wikipedia.org/wiki/Transistor) in a dense [integrated circuit](https://en.wikipedia.org/wiki/Integrated_circuit) doubles approximately every two years. The observation is named after [Gordon E. Moore](https://en.wikipedia.org/wiki/Gordon_Moore), co-founder of the [Intel Corporation](https://en.wikipedia.org/wiki/Intel_Corporation), who first described the trend in a 1965 paper and formulated its current statement in 1975. His prediction has proven to be accurate, in part because the law now is used in the [semiconductor](https://en.wikipedia.org/wiki/Semiconductor) industry to guide long-term planning and to set targets for [research and development](https://en.wikipedia.org/wiki/Research_and_development). The capabilities of many digital electronic devices are strongly linked to Moore's law: [quality-adjusted](https://en.wikipedia.org/wiki/Price_index#Quality_change) microprocessor prices, [memory capacity](https://en.wikipedia.org/wiki/RAM), sensors and even the number and size of [pixels](https://en.wikipedia.org/wiki/Pixel) in [digital cameras](https://en.wikipedia.org/wiki/Digital_camera). All of these are improving at roughly [exponential](https://en.wikipedia.org/wiki/Exponential_growth) rates as well. &gt;==== &gt;[**Image from article**](https://i.imgur.com/zufEJ4x.png) [^(i)](https://commons.wikimedia.org/wiki/File:Transistor_Count_and_Moore%27s_Law_-_2011.svg) --- ^Interesting: [^Rock's ^law](https://en.wikipedia.org/wiki/Rock%27s_law) ^| [^Gordon ^Moore](https://en.wikipedia.org/wiki/Gordon_Moore) ^| [^22 ^nanometer](https://en.wikipedia.org/wiki/22_nanometer) ^| [^Parallel ^computing](https://en.wikipedia.org/wiki/Parallel_computing) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cp78vem) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cp78vem)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
if it's anything like my university... it'll be like Matlab 2011a -_-
I always thought edu licenses were rolling?
This would work for the code you posted. If you need something more specific, you should post your actual code. A=1:S; B=1:S;
FWIW, these are just the changes to the base product, MATLAB, and doesn't include the new features for the dozens of toolboxes (plus simulink and all its blocksets). 
Are there any other toolboxes that you think would compliment the Robotics Systems? For instance: Simulink Design Optimization, Simulink Desktop Real-Time, Parallel Computing, or something similar. My goal is to control multiple servos simultaneously yet independently. I'm starting with a feedback loop for just one encoded servo.
When you start recording, use 'tic'. Every time a button is pushed, record the elapsed time using 'toc'. At the end, you'll have a set of key presses and corresponding time in seconds. Then you can process it however you like. 
No, you should explain the answer so other people can see it of they search for this. You should also explain what you learned about the value of reading documentation. 
If I understand this right, you can simply add the values - no need for a for loop. c2=c1(1,:)+c1(2,:); The colon you see indicates to take all the column elements in the variable. This will be much faster than a for loop!
Or use sum to sum the column elements without a for loop: c2=sum(c1,1) sums along the 1st dimension (row) of c1.
For this to work the phone must be held in the same direction the whole time.
Try searching for "inertial navigation system equations" if you haven't already. It won't give you a direct answer, but you might get some ideas by looking at how aircraft do it.
harsh but dead on!
Almost certainly true. Edit: lol, agreeing with an upvoted comment gets downvotes. Reddit, you crazy. 
wait now i'm even more confused do i make my own g(x) or do i use that one written there?? because if it's that one my biggest problem is how to define it for two ranges i mean how do i do that with arrays
ahh. ok i see. thank you &lt;3 &lt;3
You might try using getappdata and setappdata in the uicontrol or window buttondown/buttonup callback functions. Initialize the appdata you want when the program loads (set your buttonValue to 0), immediate set it to 1 on button down, then back to 0 on button up. I don't have a working copy of Matlab at hand right now, so apologies for just the gist of an idea!
An answer would be to research the variable precision arithmetic function... However... I'm guessing the instructor is expecting to maybe write out by the hand the last digit of the first 8 powers of 2 and see if there's a pattern... i.e 2 4 8 6 2 4 8 6... (TIL there's a repeating pattern in the last digit of the powers of 2!)
You can probably do that in a non-mathematical way by using sprintf: http://mathworks.com/help/matlab/ref/sprintf.html If you look at the examples and the formatSpec section, you will get the idea. You can create a well-formatted string of the number with sprintf and then you can use relative indexing to get the last 10 digits like `lastdigits = digitstring(end-10 : end)`. You will probably need to handle some exceptions to make it robust.
num2str(mod(2 ^ 256 , 10 ^ 10))
What did you try? There's no analytic solution, so your only option is [numerical integration](http://en.wikipedia.org/wiki/Numerical_integration). You could easily roll your own, but you should be able to just use MATLAB's [integral](http://www.mathworks.com/help/matlab/ref/integral.html) function. Their example even covers a function of the form exp( -x^2 ).
I don't know where to allocate the 70%, 30% in my code
Instead of side 1 move to 2, assign a random value to the selected particle (0 to 1). If num&gt;0.7, side 2.
It makes sense now.. thanks a lot, so simple once you actually have the answer.
done, sorry about that 
No problem. It looks like you've mis-coded your y equation. I think you need an extra astrisk in there like this: exp(-(1*i*x.^2)) Also, why are you doing the extra thing and multiplying by 1? Why not just: exp(-i*x.^2);
Ode45 keeps calling the function Prob, which is where you call ode45. So it is calling itself over and over (recursively). 
I'm assuming that you are doing this update in the button's callback function? If so, you need to pass the variables to the function somehow. I usually use the handles struct (make a handles.player2name), but I think you can also use global variables, which might be better in your case. 
1i is because matlab proposes: "Replace complex i and j by 1i for speed and improved robustness" so 1i is not wrong. But i found another, more exact solution using symbolic integration: syms u func = exp(-1i*u.^2) q = double(int(func,0,inf))
How would you do it on paper? This doesn't sound like a matlab problem, this sounds like a signals problem.
You probably want Simulink for it's ability to deploy to Arduino/Rasp Pi or whatever is sending signals to the servos. Are you trying to get the multiple servos to work together on a task but controlled independently? That's a tougher problem, but you can roughly see how that's done here: http://www.mathworks.com/help/robust/gs/multi-loop-pid-control-of-a-robot-arm.html
Thank you all for response ! I'm building a script which at first step takes input data from user, which is a 10-elements vector from values {1,..,100}. Then program need to find all possible output vectors which match given conditions. So basically i made a one big loop where i take two vectors V1(constant, given by user), V2(one of many many that is currently checking) and doing calculations and checking condition. So at first my approach was like Ok I'll create a big file witch all possible combinations of V2[10] {1,...,100}. I was aware that it would be huge file like GB but i didn't realize that it's so huge :) but thanks for making clear that it's pointless. My other idea was to check simply random vector in a loop 1:reasonable_big_number It won't give all possible solutions but would give most of them and be more efficient But after all I think that I can somehow reduce numbers of testing vectors to get all solutions depending on 'checking algorithm'
You could simply use sum() on a carefully crafte data array, but from the looks of it you need loops anyhow as they aid in getting the file names to input. To get the sum of all 20 r values for each of the 12 p values, you could add the following: % tmpxsum = zeros(12,20); tmp_psum = zeros(1,12); for ii = 1:12 % loop over p tmp_rsum = zeros(1,20); for jj = 1:20 % loop over r % ..... your stuff here tmp_rsum(jj) = c(1,:) + c(2,:) + c(3,); % tmp_xsum(ii,jj) = tmp_rsum(jj); end tmp_psum(ii) = sum(tmp_rsum); end This is how you could keep track of the value you've called "y3" in your OP and that I'm assuming you want to sum for all your r values.(?) If you notice I also added an array that would get you the sum for each individual r-p combination (currently commented). You could use sum on this last array, tmp_xsum. Personally, I'd remove the other tmp* arrays and just keep this *xsum one (you'd have to change it's calculation too...).
Do you understand why it works?
Thanks for the link, that's actually all quite useful. I am trying to get 4 servos to work together to build a cable-suspended robot, similar to [Skycam](http://en.wikipedia.org/wiki/Skycam) but on a much smaller scale. Do you know of any good tutorials that show how to use encoder data as feedback fed directly into simulink? Any resources you might have would be greatly appreciated. 
Aye I'm looking through one of the links now. Is there anything you would recommend I specifically look at that will directly help with my project?
Seeing as how you've specified a few "inputs", I would look up [functions](http://www.mathworks.com/help/matlab/ref/function.html) and how to code them so you can make an ideal gas law function.
PV=nRT (ideal gas law)
A typical ROC plots the true positive rate (y-axis) vs. false positive rate (x-axis). You don't mention that you have false positive information - you most definitely need this to get a ROC. In your case your true positive rate would be the percentage of true positives in the vector: sum(v)/length(v), where v is your vector. However this only gives you the y component of one point on the ROC. once you have more data plot() should be sufficient 
Is your axis log-scaled? set(gca,'XScale','log'); 
I'm most excited about this: &gt;Sparse arrays with GPU-enabled functions &gt;&gt;This release supports sparse arrays on a GPU. You can create a sparse gpuArray either by calling sparse with a gpuArray input, or by calling gpuArray with a sparse input. The following functions support sparse gpuArrays. 
Yes thank you that its, scaling was omitted in my lab manual and the mathworks site wasn't helpful with the problem either. 
try: A = randi([0,100],1000,1); idx = 1:lenght(A) Amean(idx) = mean(A(1:idx)); end That would be one way to do it if you wish to use a loop. Remember, loops are slow, but in your case, I don't think you will care.
Haha symbolic yeah my bad. Well the integral just keeps returning another integral and for the purpose of what we're doing we need it to work with symbolic variables. 
It's a bug with the hold command. Plot one loglog, then call hold on, then plot the additional curves.
Thank you - my mistake, thought I could do 2 separate ROC graphs for true positive and false positive. I think I understand it now. Thanks everyone who replied!
Thanks!
I've done this in simulink and you should know how to do this yourself. Especially if this is for a thesis. That said, I will give you this hint. Google "inverted pendulum" 
I'm confused the line in your while loop. You define thetaB as angles, signalB as the sine of the angles. But in your while loop you try and access elements in signalB that you cannot (e.g. the 2*pi/1000 element). Did you mean to put: signalB = sin(thetaB*10); What are you trying to do with this line? Maybe you need to re-think what your while condition should be. At least, explain it a little more clear for us.
I agree. What OP has here is some arbitrary data definition that someone, somewhere made up for some use. OP, if the code isn't commented and you don't have the ability to ask the original code author what s/he meant, then the best we can all do is guess. In the future, posting the first few rows of the xlsx file would be useful, though it still probably wouldn't help us guess what the original author meant. Alternatively, if you have some code in which the original author uses this dataset definition, perhaps you can follow the variable and its uses down through the code. Maybe dataset.unit is never even used.
figure(); surf(peaks); colors = [hsv(10); flipud(hsv(10))]; colormap(colors); This will work. I used 10, but you can use any number you want for a smooth plot.
http://www.mathworks.com/help/matlab/ref/meshgrid.html My understanding (and use) is prab quite limited.... what I've used meshgrid() for is to take a longitude vector and latitude vector that represent u- and v- (horizontal) wind fields. Those dimensions are 1xM longitudes, 1xN latitudes, MxN for both u- and v- fields. What meshgrid does is it "blows up" your two lon/lat vectors into a MxN longitude array and MxN latitude array. If you look at these, you'll see that they all have the same value for rows/columns (or columns/rows, whatever). Now you have 4 arrays (lon, lat, u-, v-) that are all MxN, and you can pass them all as that and MATLAB *knows* what the lon/lat for an indexed location is instead of having to loop over you lat/lons and do a computation individually for all M*N points. Read through that docu page and the examples near the bottom. That should help things a little. *Edit: also, anyone correct/add-on where appropriate.
The value returned from inputdlg is a cell, not a string. Try audioread(fileName1{1}) which tells Matlab to grab the virst variable in the cell structure 'fileName1', which is the string you need.
If you only need something vaguely like an animation, try making a frame-by-frame using a plot, using the getframe function, then playing it back using the movie function. You would need to create curves to shown the important parts, like the road and the quarter car, and probably the path from the contact point to the frame, or whatever (I wouldn't worry about trying to get the spring-damper symbols in there, just a line). It can be obnoxious, but it's a lot better than the following option: VRML is the programming language MatLab uses for 3D renderings. It's a pretty old standard, and the interface for using it is awful, but it works. It takes a significant amount of time to learn how to make the objects, however. I suggest you stay away from this one, but the option is there. ' Check out the Virtual Reality Toolbox for more information, demos and examples.
Reading through it again and since you're iterating i at the beginning of the loop you might not need to change the while condition. Not remembering the formula for taylor series expansion off the top of my head.
You're fine except for the line &gt;mean(A(meanA)) A(meanA) is just the element at index meanA, when what you want is an array of all the elements up to that point. So replace with &gt;mean(A(1:meanA)) and store that to some variable. Unless you just want to print it
so if you want to isolate a single element it would be: A(row,column) if you wanted to set it to 0: A(row,column) = 0 a ranges of values: A(row:column,row:column) so... is the answer A(row:column,row:column) = 0?? EDIT: just tried it, it works, thank you!
I know that you can plot two symbols ontop of eachother as a way of only using 2 symbols but being able to mark 3 unique criteria. 1. flag your data appropriately 2. data 1 and 2 use a dot (*"."*) and a plus (*"+"*) (the dot is more like a circle, you could use an actual open circle (*"o"*) too...) 3. data 3 uses both a dot and plus (you make 2 plot() calls here). I'm not sure how you can fully extend the base 13 symbols in a meaningful and intpretable (arguably more important) way, but using something like this you could at least get a 14^th or 15^th symbol... something to consider?
Maybe, maybe not... Why not try it? Use the "magic()" function to create a small matrix, then try it.
If using color is an option you can set the fill color using 'MarkerFaceColor'
I added comments to code explaining what it does. The code that you posted was actually wrong and does not compute the mode. I corrected it below. function [ m ] = my_mode( vec ) % Finds mode without using the built in Matlab function % say you have [2 1 2 1 2 1 2] column = vec'; %sort the vector numerically % [1 1 1 2 2 2 2] s = sort(column); % Create a binary map the locations in the vector where s(x) ~= s(x-1) %[true false false true false false false true] binmap = [true;diff(s)~=0;true]; % Find the corresponding indices x where s(x) ~= s(x-1) % [1 4 8] transistionIndices = find(binmap); % Find the difference between indices. This gives you the length of each collection of numbers % [3 4] lengths = diff(transistionIndices); % Find the index of the greatest length [~,x] = max(lengths); % Now you want to find the number that corresponds to this index. % The code that you initially posted had: % m = s(x); % Which is wrong. % You want to find the transition index corresponding to the start of the longest chunk % Here x = 2 % so we find the 2nd transition index which is 4. % This gives us the index of the start of the longest chunk in the sorted vector s % s(4) = 2 so 2 is the mode m = s(transistionIndices(x)); end
You're so amazing, thank you! 
This option is also in Preferences-Initial Working Folder for &gt;2014b
I took your advice and one of my friends changed it a little bit. I also incorporated the error thing that the question asks for. Now I have a program that runs, but it goes on for infinity! How do I make it stop when its supposed to? function [ approx, terms ] = seriesapprox( x, epsilon ) actual = log(1 + x); approx = 1; terms = 0; c = 1; if x == -1 || abs(x) &gt; 1 approx = -inf terms = -1 else while abs((actual-approx)/(actual)) &gt;= epsilon approx = approx + (((-1)^c)*(x^c)/c) c = c + 1; terms = terms + 1; end end end 
I add it manually in the comments--neither robust to other users nor automatic, but effective in my own code. You could write a script to run at startup/shutdown of Matlab (i.e., startup.m and finish.m, which Matlab knows to run automatically), which could be used to check for changed files in your working directory and insert a simple username:datestamp (via `getenv('username')` on windows and `datestr(now, dateformat)`) at a particular line, if you're worried about making it automatic (adding it to a finish.m script in the path of folders you want to have version control over would cause it to run even if users on another computer added that path to their season). You could even have your script make am archive copy of everything that changed. 
I can't replicate the problem in my own 2014b Matlab. Check syntax? Make sure you have the correct symbolic toolbox installed? Shut Matlab down and start it back up again? edit: &gt;&gt;clear &gt;&gt;clc then redo it?
Okay, it's starting to make sense. Thank you!
Is access_recur() your function/script? Did you fill prepped? Is this the only error message you received or was it one of a few? The point I'm getting at is MATLAB might be trying to work perfectly (it normally does) but you might be providing it inappropriate inputs somewhere along the chain of function calls. Can you post the code around where you're getting this error?
Quick solution, add this just before the last "end": f = f(fn-1); Your function returns the array f, which you defined to be f = zeros(1,n); f contains n entries, but you only want the last one. The line I suggested will convert f from being an nx1 array of integers into the final integer contained in f.
tried that. no succsess
Soo... [Su, Sv] = solve(2*u + v == 0, u - v == 1) seems to work typing Su and Sv gives me the right answers. 
Which ~~version~~ release of Matlab have you got? Mine is 2014b. I tried about half a dozen different variations including the one you mentioned and the original one, and they all gave the same answers. 
If your equation has a solution couple, then you need to use it like you now fixed. I do this mistake a lot too..
This is the lowest-effort "please do my homework!" post I've seen recently. Please, don't answer this. To OP, show that at least you've tried/googled something. Or perhaps study your book a bit? (I know, crazy concept!) To mods, can we have a discussion about how to increase the signal-noise ratio on this sub? It really kinda ruins the sub-reddit for me. I feel like there are many fewer quality posts than posts about homework, or stuff that you can easily find with 1 min in the Matlab help.
Look at how the t vector is being created in the for loop. Find out how you can create vectors without loops (hint: colon operator). You have the start and end points for the t vector so you just need to figure out the increment size (look in the for loop). Once you have the t vector, you can use this to calculate y using the equation given in the for loop. t and y can be calculated using 2 lines (no need for indexing or loops). Remember when multiplying vectors, use the .* notation rather than just *
I didn't get very far because I don't understand what the question is asking, or what is happening in the code at all. I tried searching the code, but the one solution I found on yahoo answers sounded like a different language to me. I guess I'm just a super beginner and was hoping for some guidance. 
Another good point! I hadn't considered that myself, and I feel stupid. Really. Stupid. Thanks for the tip!
Any recursive function should be formulatable as a loop, so that would help immensely, and likely be more efficient. It's possible globals and parallel functions don't play well, not sure. You could use a persistent variable rather than a global. Might help. 
Please don't just give people answers to their homework problems. 
Even for testing for valid input? That makes no sense. 
Very good, it is almost there. Your indexing is slightly off. First of all, in line 4 approx = x, not 1. The first term in the expansion of log(1+x) is x, not 1. Secondly, c=c+1 should appear above approx = approx + (((-1)^c)*(x^c)/c) and this line should actually be approx = approx + (((-1)^(c+1))*(x^c)/c). Your terms variable should also be terms = 1 at the top since you are starting the first term at the top.
Thank you so much, this was super helpful! I still had to figure a couple of things out, but it finally works now. Thanks again! 
 t=linspace(5,20,10); y=20+5*sin(2*pi*t)/(t(end)-t(1));