negative non-integers? Fix rounds toward zero, floor rounds toward negative infinity
You are a dick in your replies. Learn some etiquette. Matlab has numerous ways to go about solving problems, and 99% of the time won't matter which path you take so long as you are vectorizing everything you can. 
Just to clear up some confusion on the imaginary number: 1i*6 works fine. I'd use 6i instead, as it's cleaner and gives you the same result. Using just i*6 could work, but it's not recommend as if you had an i variable defined, i would refer to it instead of the imaginary unit. Using j instead of i is pretty much the same. imag(6) would just return the imaginary part of 6, which is 0. TLDR: Use [any number here]i to get an imaginary number. Using just i might cause trouble if there is an i variable in your workspace.
https://i.imgur.com/RY8XibV.jpg
it's a college project , non commercial .
If you just need a single example, as in "find a number for which..." just do fix(-1.5); floor(-1.5); and each should give a different result
your code seems to be a brute force way, like trying different random numbers until it works. Then your for loop doesn't really need to loop over anything, since it's one number (randn is not necessarily an integer) , and it just displays the result. so if anything, you could do like number = randn if(floor(number)==fix(number)) print('they are the same'); else print('they are different!'); end &amp;#x200B;
so you have satisfied it, but without knowing what the number was. you should print out idx, and lines 4-6 are really redundant. the code I think you want would be idx = randn x=floor(idx) y=fix(idx) &amp;#x200B; not putting semi colons means the variables will print their values at the end of the line. even doing something like \[x y\] will print the two values in an array, and prevent creating then printing the variable x\_y
Seems like you need to study some Matlab basics if this has held you up for 5 hours. https://www.mathworks.com/help/matlab/getting-started-with-matlab.html Go through each section of this tutorial introduction for beginners, it'll do you well.
first time matlab user, this is a required class, second week of class, nothing in our slides or matlab onramp show anything like this, basically its a trial and error learning process!
If the issue is opening the model in an older release, there is a setting in Simulink Preferences to disable that. You might see incompatibility issues, but going back one release should probably be fine. 
You can find this under the section “Do not load models created with a newer version of Simulink” [simulink Preferences ](https://www.mathworks.com/help/simulink/gui/simulink-preferences-model-file-pane.html) 
c=M(1,1:3).\*M(1:3,3) c = 48 6 36 56 7 42 16 2 12 %would this be the correct answer for F? thank you
The professor wants what we input. Not the answer.
So? He wants you to learn how to use Matlab. Not reddit.
Which I am trying to do. I am using reddit to confirm that what I'm writing is correct. It's not that difficult to understand.
&gt; using the tools in front of you. How do you think I got the original code?
I really don’t have experience with it, but [this](https://www.mathworks.com/matlabcentral/fileexchange/30023-tdms-reader) Matlab TDMS reader claims to allow reading of subsets of data. It would at least be useful for troubleshooting your algorithm before processing the 40G. You could set it to process a few chunks and then use the Matlab Profiler for tips on speeding up your code. Since it’s a repetitive analysis, parallel or gpu approaches might help. 
Why did you write it in simulink and not command line? 
I have a bigger nonlin ode sys that I can't solve, and I took this as an example to learn how to solve these kind of sys and how to generate C code from that model.
Ok. Usually simulink is used for systems that have inputs and outputs, which Lorenz systems doesn't have. My suggestion is to check the dx = -x, dy = -y dz= -z terms. they are the ones that enforce convergence of the lorentz system
hey, lol i was completely thinking about it wrong, i was thinking about it like a vector for some reason, true (1:3,3) is not correct at and very foolish of me, thank u for helping kind sir
Did you check the [documentation](https://www.mathworks.com/help/matlab/ref/transpose.html)?
can you explain this to me, am i missing something, i read the documentation, did i miss something ?
This is a great case for RTFM - read the manual. check [https://www.mathworks.com/help/matlab/ref/transpose.html](https://www.mathworks.com/help/matlab/ref/transpose.html) the difference is that one is a complex conjugate transpose, and the other is a simple transpose. They treat real numbers the same, but not complex. Rand will always be real. And you'll need an array or vector, not a single number to demonstrate it fully
You definitely missed something. Check the Tips section.
thank you very much!
thank you very much!
your answer to h: lucky = (zeros (3,4)+7);
Hey there is a built in function for doing this stuff it's called diff. I also dont umderstand ur function call because it's static? t isn't used at all 
As an alternate to your solution, id do either if any(strcmp(Answer,{'A','B','C','D'})) ... OR if numel(Answer) == 1 &amp;&amp; any(Answer == ['A','B','C','D']) ....
Thanks for your reply. I'll take a look into it. I'm also currently working on having each hours worth of data be made into 6 separate tdms logs instead of 1 big one. I'm trying to avoid an I/O code if I can. But thank you for the pointer for fwrite. That actually make come in handy 
Hey, I just ran the code you provided and it worked just fine without any error. I am using the mac 2018a release.
What have you tried? The error is saying that something is wrong with your first data input (x). This is what I recommend: - Go to the documentation, look at the *plot()* function, and figure out what data types *are* valid. - Inspect *x* in the workspace variable window and by typing *x* into the command window so that it prints the values for you to review. - Determine the difference between what the function wants and what you gave as input. The usual suspects are: - Switching row vectors and column vectors (1xn vs nx1) - Somehow producing a NaN, infinity, or complex number in your data - Something was undefined or improperly defined in previous lines, and it didn’t cause an error until the *plot()* function was called. 
Using `fread` and `fwrite` is, to my knowledge, the fastest way to get data in and out of MATLAB....they are 2 out of not-so-many MATLAB functions that are legitimately designed to be nearly as efficient as its C/C++ counterpart. It should be laughably faster than trying to convert to/from ascii. I ran a quick speed test, and on my (admittedly high end) machine, I can read and write newly created data at ~1.0-1.3 GB/s, and I can write data from a variable that already exists in active memory at ~2.5 GB/s (which is just about at the limit of how fast my drive is capable of writing data).
Thanks again I'll look into it. If that works as well as that then I should be able to run the files quickly and skip most of this hassle 
so...simply enough, if I use ' instead of " (single apostrophe, not double quote) the code runs fine
WOW!
 I assume spaces aren't counted?
Those speeds are probably a bit more than youll get unless you have a rather modern fast cpu (this machine uses a skylake-x clocked at 4.3 ghz) and a very fast hard drive (this machine uses a samsung 970 pro m.2 pcie ssd). That said, on a much older machine (SATA-based disk, sandy-bridge processor, not overclocked) Id still get &gt; 300 MB/s, which is id guess an order of magnitude or so faster than using ascii (40 gb at 300 mb/s is about 2 min 15 sec for I/O)
I'm a fan of [Strang's](http://math.mit.edu/~gs/linearalgebra/) book. He writes with a lot of enthusiasm. You can also watch his [MIT lectures](https://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/) for free.
Try Gilbert Strang's Introduction to Linear Algebra [http://math.mit.edu/\~gs/linearalgebra/](http://math.mit.edu/~gs/linearalgebra/). There is also an open course available at [https://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/](https://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/) if video is more your thing.
"Let's just call it by its Gauss-given name..." A true hero.
In addition to studying from a book, I recommend also checking out 3Blue1Brown's linear algebra series on YouTube. It's got some great animations that help bridge the mental gap between "boxes of numbers" and the geometry behind it. It's definitely not a replacement for study and practice though!
In your script, 'c' has a single numerical value. Calling fn(c) will only return one value from fn. Also, because 't' is the index for a for loop, it will only retain a single value, even though it may look like it's being assigned a vector. You are essentially plotting a single point. To fix this, simply replace your last line with the following: t=1:0.005:5; plot(fn,t); I also suspect your value for 'thetadot' is causing troubles when you define 'fi' - it looks like there is division by zero.
You're only plotting a single pair (fn(c), t) where you really want to hand in a vector (the entire times and function values). Also, most likely you want to plot fn vs t, not t vs fn
Thanks that got the code working. I'm not fully confident in the plot it gave me since it's supposed to express oscillating motion. I'll keep tinkering at it but it's hard to stay motivated after putting in 10+ hours on this assignment.... 
I just took Intro to Linear Algebra on a condensed summer schedule (6 weeks) and the teacher recommended Strang's videos over the textbook since we were moving pretty fast. The text is more in-depth obviously, but for a quick brush up his videos are really clear and to the point. The Fundamental Theorem of Linear Algebra did not click for me until I watched his stuff.
3Blue1Brown Linear Algebra, Youtube. You're welcome.
In your function, you pass in three arguments, `x`, `y`, and `z`, and then immediately overwrite them with fresh symbolic variables. This can't be what you want to do, right? The [symbolic toolbox](https://www.mathworks.com/help/symbolic/) is great for exploring functions, and you can even solve equations numerically with [vpasolve](https://www.mathworks.com/help/symbolic/vpasolve.html), but why not simply use the variables you pass in as data directly, rather than re-defining them as symbols? `syms` is definitely doing something, but from my understanding (and please correct me if you *are* looking for a symbolic expression), it's doing something you don't want! Check out the documentation for [syms](https://www.mathworks.com/help/symbolic/syms.html), and make sure that's really what you're looking for.
I’m a fan of Axler’s “linear algebra done right.” 
The best book on *applied* linear algebra I've ever seen is Strang. You almost certainly don't want a math major's version of linear algebra; it's proof-based, focuses on the theoretical aspects of vector spaces, and almost certainly not what you want. However, Strang is rather large for "brushing up". It's a full sized textbook. I don't see you reading it AND another textbook for a class. You might want to check out a Schaum's outline and see if that floats your boat. If so, it *would* be much easier to digest if you're working hard on digital image processing. Crazy idea.... the right book on computer graphics / game programming might be good for this purpose too.
That is exactly what I want it to do actually. The equations are long differential equations with the diff() command, which unfortunately won't accept regular variables from as far as I can tell. When we used these equations for one data set, we didn't need to worry about overwriting the symbols because we could simply define the symbols as variables and syms would easily take care of it. Now I'm looking into a complex function which will overwrite the original symbols for defined variables. 
[diff](https://www.mathworks.com/help/matlab/ref/diff.html) will definitely accept any vector. You will only get the finite differences of the data, but that's easy to get the derivative from by dividing by the diffs of your independent variable(s) (or fixed dt or dx or whatever) as appropriate. If you really want to use a symbolic approach, your function can return the expression the symbolic solver gives, and you can evaluate it outside your function using your data there. A more cumbersome approach might be to also pass your data in as a set arguments so that you can use it inside the function after you arrive at your final expression via symbolic solution. Hope that helps.
Thanks a lot for your answer. However, probably I was not clear in the formulation of the question. I performed the PLS regression (using different n-comp and then comparing the results) but my problem is that I am not able to identify which are the X components used to predict Y. For example if I want to use 3 components, PLS is going to use the best 3 but it does not label them and I am not able to retrieve their names.
You can't do it this way. Use the table data type . It lets you label each column
If this has taken you 10 hours, you need to change the way you approach the problem. Are you just changing things semi-randomly, hoping for the correct result? That can be extremely frustrating. Instead, focus on understanding what is happening. Read your code line by line and make sure you understand what each line does, and what you think/expect/want it to do. When you're not sure, rust things in the console to see what they do. Read the documentation. Writing code should not be a random walk to the goal. You should understand what you want to do, learn what tools you need to do that, then do it. It should be a direct line. 
I assume you're just applying basic error propagation formula using the derivative of your functions? As in, y = f(x), and sy^2 = (df/dx)^2 sx^2 right? If so, why not just do this numerically and calculate (df/dx) by finite differences? Or, even better, if you already have expressions for the derivative, just evaluate them directly. 
“Index exceeds matrix” means that you are calling an index either that is beyond the matrix size. So there’s to ways to do this. Example one say you have a 4x4 matrix called “mat”, and somewhere in code you are trying to call “mat(5,4)”. This is the first example that MATLAB would give you “Index exceeds matrix”. The second that would give you the same issue is, let’s you “mat” again which is once again a 4x4 matrix, say instead of calling a specific row and column, you just specify “mat(17)” sort of how you would specify a specific index for an array that has at least 17 indices. Well you can do this for matrices as well, except for this example since I said that “mat” is a 4x4 matrix that means that there is only a total of 16 indices. So trying to call any Index beyond 16 will give you “Index exceeds matrix” issue. Hope this helps. Don’t want to sound like an asshat or anything but try googling MATLAB issues before posting on here.
Thank you very much, and I did Google but my google skills are still a bit weak. Like using the right terms is a challenge sometime. I usually like to try to solve problems on my own 
Here's the first video in [Gilbert Strang's course on Linear Algebra](https://www.youtube.com/watch?v=ZK3O402wf1c). Understanding the fundamentals should help you avoid those errors, and he's one of the best sources around. If you check the sidebar, you can find links to additional helpful resources under "Places to learn Matlab" ---&gt;
github repo, matlab central submissions
MATLAB Central File Exchange and/or Cody, GitHub repos. List some of the projects you've done potentially. All those will help keep your resume from getting filtered out in the first round of any hiring process. Past that, it's up to you during the phone/in-person interview to demonstrate the knowledge. Also, have you considered applying to [work at MathWorks](https://www.mathworks.com/company/jobs/opportunities/students/edg-masters-phd/?s_tid=cr_nav_engcs)? 
Stop thinking about errors (especially ones like "index exceeds matrix dimensions") as a *Matlab* problem, and start thinking about them as *logic* problems. If I give you a list with 7 elements, and ask you to read me the 15th element, what would you say? Maybe you'd say "hey there are only 7 elements on this list, that makes no sense". That's exactly what is meant by "index exceeds matrix dimensions". The real issue is that your instructions have somehow resulted in you asking for a nonsensical thing - and **that's** a lot more important than the error itself. If your process is asking for nonsensical things now, how do you know it's not asking for nonsense even when no error is produced? What if you ask for the 6th element when you actually need the 7th? What if that list really should have 15 elements, but only every second item is being added to the list? The goal shouldn't be to make the error go away, the goal should be to understand why it's happening in the first place, because that sort of error indicates something fundamentally wrong with your algorithm, most of the time. 
Ok so understanding is what my goal is. Obviously I am young stupid and it’s hard to ask the right questions sometimes. My current work situation isn’t the most ideal for learning(at least for learning how to develop and solve problems). Bad learning environment aside, I want to make the most of my situation, essentially the only learning resource available to me is the Internet, so knowing the right questions to ask can be a challenge. So I think one area where an understanding of the problem may lie is in my linear algebra knowledge, it’s been a few years since I took linear algebra so a lot of the knowledge has escaped me. I guess a follow up question is, what is the best way to understand another person’s method when that person is gone? I see two barriers to my understanding, one is the linear algebra and the other is what the code says. I have to essentially understand these two parts to understand the algorithm being used. So again apologies for my ignorance. I want to understand the issue but there are barriers at my work that preclude me from taking more appropriate steps to properly learn and understand Matlab. 
Thanks. I think if given the chance I can show what I know, it just getting my foot in the door that I'm worried about. I'll be following everyone suggestions here to improve my chances.
That's great advice, thanks!
Thanks! I should have already posted my work on those sites, really dumb that I haven't. I would love to work for MathWorks, especially in a job like that. Problem-solving and working on dfferent projects all the time. Unfortunately I'm not in the US, UK or India. But I'll see if I can send them an email anyway.
You may want to consider getting certified as a [MATLAB Associate](https://www.mathworks.com/training-schedule/certifications/show/mathworks-certified-matlab-associate-exam), or as a MATLAB Professional, although that second one is more difficult and requires an in person exam. This would allow you to put an actual certification on your resume, which may interest you. I'm not certified, but I've definitely considered it.
I found Steven Leon's [Linear Algebra with Applications](https://www.amazon.com/Linear-Algebra-Applications-Featured-Introductory/dp/0321962214/) to be one of the better Math books I've ever read. Older editions can be had without much cost.
Oh, making sense of somebody else's code is never fun. The best you can do is go through it line by line and figure it out. It might be helpful to learn to use the debugger in Matlab. You'll be able to step through the code execution line by line to watch what it does. Just set a breakpoint somewhere and experiment. 
I ended up getting it to work. All I did was redefine my syms variables for each dataset and it worked like a charm. Everything in the function is the same, but the arguments are now like: X=x Y=y Z=z And when I run them through the function as inputs it substitutes perfectly. 
[Check out the documentation here](https://www.mathworks.com/help/symbolic/solve-an-algebraic-equation.html). Matlab does have the capability, but I do warn you it isn't great. In my experience working with it, you need to hand-hold so much that it ends up being faster to do it yourself most of the time. 
You can multiply out the numerator and denominator to get each in standard polynomial form, which you can then enter into simulink
thanks!!
It is very unclear why this will help you find fixed points for a function. It is also unlikely that what you are asking is actually what you want since this makes very little sense. Can you give more information? What function do you want a fixed point of? Why do you suspect it has one? Have you tried iteration already? 
Remove the square root from the left and instead square **minseparation**. Build your values first and then compare them second. Ideally do only what you absolutely need to do in a loop, then figure out the rest later. new_min = minseparation.^2; n_iters = length(x); separation = zeros(n_iters,1); for i=1:n_iters separation(i) = (x(n)-A(1))^2+(y(n)-A(2))^2+(z(n)-A(3))^2; end sep_flag = new_min &gt; separation; I am not sure how much faster this will be, but you could convert **for** into **parfor** if you need to speed it up more.
The best practice I can think of is to vectorize the operation instead of using a loop. This should be much more efficient: separation = (((x-A(1)).^2+(y-A(2)).^2+(z-A(3)).^2)).^0.5 Note the dots in front of the carrots -- this makes the operation [element-wise](https://www.mathworks.com/help/matlab/matlab_prog/array-vs-matrix-operations.html) instead of a matrix operation. Now separation will be a vector of all of the separations. You can take the minimum and then compare it to minseparation. 
I found this code online and used it for something a while ago and modified it for your use. Assuming x, y and z are row vectors, and assuming that particlefailstestis initialized, dist = bsxfun(@minus,[x' y' z'],A)).^2,2); particlefailstest(minseparation &gt; dist) = 1; bsxfun isn't a lot faster but at least its vectorized :^)
\+1 For this. Maximize the use of matrix operations where possible. MATLAB has extremely efficient methods for matrix operations (I think they are implemented in Fortran/C). In contrast, for loops have a lot of overhead and are built on top of the interpreted language. Theoretically, the most efficient use of for loops in MATLAB will (in most cases) never beat its vectorized counterpart. And that is assuming you want to spend all that time making it super efficient (such as pre-allocation in the context of OP's post). The one thing I think for loops has going for it is readability. I once had to rewrite a bunch of vectorised operations for a linear program solver (using the Revised Simplex Method for those interested) because the the code didn't reflect the the pseudocode we studied in class. While I was super pissed I had to rewrite my clean matrix operations into sluggish for loops, I can understand how this made marking easier. &amp;#x200B;
well so wheni tried to run your code i got an error. noparticles isn't defined 
&gt; if pointfailstest&gt;=1 &gt; else i dunno what this even does did you skip some lines
You can still preallocate in chunks. So preallocate 50 values. If your loop is exceeding that: add 50 again. It's not pretty but speedwise it should help a lot .
Hmm I'll give it a crack, cheers.
I fixed it, forgot to rename one of the variables. It didn't fail for me because I forgot to clear my workspace before testing it, oops. Yep that suggestion is a fair bit faster.
Cheers for all that. This code is part of a larger script that has been through a few iterations. That 'else' is a relic tat doesn't do anything
If you're going for a for-loop route, try to play with the amount you preallocate (50 was just an arbitrary value). And as mentioned by /u/phsics: vectorization is waaaaayyyyy faster in matlab. So always use that (if possible).
I'll keep both in mind cheers. It's a shame vectorising code reduces it's readability, at least for me. A for loop is much easier to interpret than some bsxfun magic!
if you have a decent cpu, you can try using parfor if the loop can be run with multiple iterations at once with no issue.
That is really interesting. I inherently would have thought AMD processors with their focus on multithreaded performance would be better for certain matrix operations. 
AFAIK, there is no way to adjust the spacing or how the ports appear on a block, it's done automatically. However, you can play with the order of ports. The easiest way would to be put the block within a subsystem, connect the outports, and adjust their order. If you have to constantly go in to adjust the parameters, using variables may help you reduce the time that you work in the mask, or you could create another mask on the top subsystem which specifies all of the mask parameters. 
I don't know what you're trying to do in your second part. But I can tell you you're multiplying two vectors that don't have dimensions that allow it. If you're attempting to multiply all the elements of vector x with all the elements of vector y in your code `xdot=-k*x*y;` then you need to use element wise multiplication: `xdot=-k*x.*y;` &amp;#x200B; As to your question about overlaying, look up the hold command. 
This is what the hw question is. Thank you for your current input We will soon discuss in class a model for disease transmission: Equations 1 x'=-kxy y'=kxy-lambda y z'=lambda y where x, y and z are the numbers of healthy, sick, and immune dead people. We will see that this has a solution: C=x+y-(lambda/k)ln(x) Use Matlab and Mathematica to plot contour lines i.e. lines of constant C , which represent trajectories in time on an x-y plot. Then demonstrate that these are indeed trajectories by plotting solutions to Eq. \[1\], again on an x-y plot, using Euler integration. That is, start at an initial state (x(0),y(0), and propagate forward in time using x(n+1) =xn+x'(n) \* delta t, y(n+1) =yn+y'(n) \* delta t where delta t is a small timestep. Overlay this integration plot on your contour plot. You’ll find the fit isn’t perfect, because Euler integration has limitations 
Well, I think you're close. You just need to index your derivatives in your for loop. And multiply that by your dt (which can just be a constant you set - no need to define it as t(i) - t(i-1) or whatever). Then add your xdot(i)\*dt to your x(i) and that's x(i+1). That should propagate a new x and y vector that are governed by your definition of their derivatives.
Thanks, I feared it would be fixed. I fixed it by just using a single integrator once, to avoid crossing lines. Wondering what the effect on runtime would be, though, for the three cases. I might put some time into that later this week :) &amp;#x200B;
This is not homework problem, but serious question raised during research work.
That's true. I've always hated bsxfun... What you could do is stretch your A 3x1 matrix to be 3xsize(x) then you don't need bsxfun. It's an extra step but keeps stuff more readable. point = repmat(A,size(x),1) coordinates = [x' y' z'] separation = (coordinates - point).^2 Something like that should work I think . Too bad I have no matlab on hand to check it.
I guess I'd need to hear more about what the actual data you're trying to process is. Do you know absolutely nothing about the upper, lower, and middle envelopes that it switches between? Are these actually consistent?
The signal has three additive components: 1. Smooth trend 2. Step component (steps between a few parallel temperature levels) 3. Noise component This type of signal is detected by temperature measurements and steps are produced by thermocouple imperfections.
In principle I am looking for any robust estimation of trend signal component which is nearly parallel to real trend signal. 
Do you have as much data as the example data you gave implies? My approach would be the following: 1.) Smooth the data to eliminate as much of the noise as possible. The trick here is that you want to preserve the sharp dislocations as much as possible. 2.) Identify where the dislocations occur. You could do this by thresholding derivative of your (smoothed) data. This step you may need to have manual supervision over (as is almost always the case for thresholding) so that you are only locating actual dislocations, and not just noisy areas. 3.) Determine the size and direction of the dislocation steps. Use the information from Step 2 to look at the points immediately before and after the location. 4.) Apply the inverse dislocation at each identified point. Find the very first dislocation, then add (or subtract) the size of the dislocation to all the data after the dislocation point. Continue to do this for all dislocation points. This is essentially what an unwrapping function does, it just already knows what the dislocation size is and knows how to identify where they occur and what direction they occur in, because the dislocations are periodic. 
Got it. I would still suggest starting with my other comment, then once you have an idea of the general trend line, you can just just add the different dislocation step sizes to that trend, and you will have a set of parallel trend lines. 
Good idea, but not so robust as I need. Thresholding really always need manual supervision, which is not suitable for robust implementation. Real life signals looks very different from case to case. Moreover, if you miss only one dislocation step your reconstruction is completely wrong from some point of signal.
&gt;Thresholding really always need manual supervision, which is not suitable for robust implementation For this problem, you necessarily need some sort of thresholding to distinguish noise vs. step data. I would argue that is the root of this problem. &gt; if you miss only one dislocation step your reconstruction is completely wrong Which is exactly why you need some threshold to determine the difference between the two. Any implementation you have is going to need manual supervision to check that it's correct initially, but this is the only way you are going to be able to distinguish between the two programatically. &gt; spurious outliers You can work with different types of robust smoothing algorithms (rloess, for example) that allow you remove outliers. This won't affect your ability to detect the dislocations, as the outlier detection is based on the points lying outside of the local distribution variance range that you determine (the areas where the window overlaps the dislocation will have large variance, so it won't tag anything within that range as an outlier). I would ask again: are the step sizes consistent? Are these signals from the same, or different, thermocouples? 
It's a really interesting problem! A window based approach definitely seems most reasonable. Out of curiosity, does the signal from the thermocouples have an anticipated analytical form? Knowing that could help out a lot also...
imwrite function has the inputs swapped, should be: &gt; imwrite(bimg,'pepe3.jpg') 
If the step sizes are consistent, smoothing with the 'rloess' method will remove large noise outliers but leave the dislocation steps. Alternatively, if you know what the relative size of the dislocation steps are and how they compare to your normal noise data, you could use that to inform your thresholding. It won't be perfect but it should be adequate unless you have an extremely long temporal collection length. 
Hey, michalkvasnicka, just a quick heads-up: **occurence** is actually spelled **occurrence**. You can remember it by **two cs, two rs, -ence not -ance**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Is there any MATLAB implementation of "rloess" algorithm???
Yep! They have a good number built into their smoothing function, see here: https://www.mathworks.com/help/curvefit/smoothing-data.html
Yes, window based approach seems most promising, but it is not clear to me how to this approach exactly formulate.
I tried it out, it didn't work as well. I commented them as they didn't work, so I knew they didn't work.
I want it to save the matrix bimg as an image; it doesn't. It doesn't output an error, inside MATLAB bimg appears just fine. It just doesn't output an file, as I wanted.
Before you try to save, cast bimg as uint8: `bimg = uint8(bimg);` `imwrite(bimg,'pepe3.jpg');`
Are you able to work with matlab MAT files? If yes, there is sample of 5 real-life signals (from 5 different thermocouples): [https://drive.google.com/open?id=1n5dwAq9MLEHJHihRvFd\_RBQREanX-er-](https://drive.google.com/open?id=1n5dwAq9MLEHJHihRvFd_RBQREanX-er-) 
Oof, you're right, you definitely need a robust approach for that, that is some tough data. Does the data swap the x-axis after the dislocations as well? 
&gt; Does the data swap the x-axis after the dislocations as well? What do you exactly mean?
So for the first set of the five, it looks like before some of the dislocations, the temperature is increasing, and immediately after the dislocation it begins decreasing. Was wondering if this was just a coincidence or the output switching something. Either way, I would look up burst noise/impulse filtering. There is a large body of work that exists for this in the image processing realm, but realistically it's identical (and actually easier) for 1D data. I know that you can filter out this sort of noise from your system using an Op-Amp, as described here: https://e2e.ti.com/cfs-file/__key/telligent-evolution-components-attachments/00-14-01-00-00-80-75-78/Popcorn-Noise.pdf You could potentially simulate the OpAmp in matlab as a frequency dependent bandpass filter of some sorts potentially. 
You're going to need to be more specific with what you mean by "it doesn't work".
It doesn't work, as it didn't generate a jpg file anywhere on my computer with the specified name.
AMD processors are weaker (by a rather significant amount) on matrix operations for 3 main reasons: 1. SOFTWARE: to put it simply, there isnt a library that is analagous to MKL but designed for AMD chips. [BLIS and libFLAME](https://developer.amd.com/amd-cpu-libraries/blas-library/) are, to my knowledge, the closest alternatives, and those literally just came out of Beta. [OpenBLAS](http://www.openblas.net/) is another BLAS librassry that is maintained by a 3rd party and has specific libraries optimized for different Intel and AMD chips. I havent personally tried BLIS/libFLAME, but I have to imagine they arent nearly as optimized ask MKL is for Intel chips, simply because MKL had been around for a *lot* longer. Ive used OpenBLAS, and have found that, while it is pretty good, MKL still is faster (running on Intel Chips) 2. AVX: One reason matrix operations are so fast is because they take advantage of the CPU's SIMD/vector registers to perform multiple operations on every clock (AVX = advanced vector instructions). Matrix operations are one of not-so-many operatioins that can utalize these to the fullest, and for high-end AVX workloads the AMD chips are just not as good. They have 50% the speed of "mainstream" intel CPU's (AVX2+FMA3) and 25% the speed of skylake-x/skylake-xeon CPU's (AVX512+FMA3). 3. NUMA: the new AMD chips (especially threadripper/epyc) are inherently NUMA, and matrix operations (due to how carefully optimized they are) are extremely sensitive to non-uniform memory access times. Unless this is explicitly accounted for in the BLAS library used, it running a UMA BLAS code on NUMA articheture will basically reduce performance down to that of a single NUMA node, which is somewhere between a 4-core CCX and 8-core zeppelin core on AMD Ryzen chips. This could easily be a factor of 2-4x performance reduction for threadripper and 4-8x for Epyc in MATLAB, unless you actually go and replace the BLAS library used by MATLAB with one that is NUMA-aware. Ryzen is a great value and a great performer for a lot of "common" computer tasks. Matrix operations, however, are one specific tasks that they fall short on, especially compared to the AVX-512 enabled intel chips. To give some real numbers to compare these: I recently got a 14-core i9-7940x. The (admittedly very limited) benchmarks I could find for a 16-core threadripper suggested SGEMM/DGEMM (single/double general matrix-matrix multiply) performance of ~200/400 GFLOPS for double/single precision. My 14-core skylake-x tops out at just over 1500/3000 GFLOPS for the same operations.
Without knowing what you're doing, I find it unlikely that you actually want A=[4,9,14:234]; prod(A); I suspect you meant: A=[4,9,14,234]; prod(A); This multiplies the four numbers properly. If you actually did want the former, you're calculating (234!/13!)\*4\*9, which is an astronomically large number. If you are working with numbers that large, there are two things to be aware of. First, the maximum double precision number is 1.8x10\^308. This means the largest factorial that *any* double precision program can compute is 170!, so your calculation is well above the limits of a double precision number. Secondly, as outlined by the factorial help command, factorials above 21 will necessarily lose precision, although it will have the correct order of magnitude and will be accurate for the first 15 digits.
OK... Let me just be sure: where does the image go after saved? I've seen that it's saved on the directory in which the file is, others saying that it's saved on the MATLAB instalation directory, but I found it in neither.
Just made it through. I put a complete directory on the imwrite(), and it saved the image. Thanks to you all.
I always use “saveas” to save my images
 %% % Open signal: load('tc\_edu\_test\_8.mat'); %% % Plot signal: %% clf plot(t,x(:,1)) hold on plot(t,x(:,2)) plot(t,x(:,3)) plot(t,x(:,4)) plot(t,x(:,5)) title('This is the data') xlabel('Time') ylabel('Temp') legend('Location','best','t1','t2','t3','t4','t5') xlim(\[22540 37642\]) ylim(\[303.43 305.73\]) grid on hold off %% % Look at histogram of the signals: %% clf histogram(x(:,1),50) hold on histogram(x(:,2),50) histogram(x(:,3),50) histogram(x(:,4),50) histogram(x(:,5),50) title('Temps Histogram') legend('Location','best','t1','t2','t3','t4','t5') xlim(\[303.30 305.60\]) ylim(\[0 1000\]) hold off %% % Calculate most common signal and then shift: %% t1mode = mode(x(:,1)) t2mode = mode(x(:,2)) t3mode = mode(x(:,3)) shift = t1mode -t2mode scale = t1mode/t2mode faket2 = scale\*(x(:,2)+shift); %% % Look at histogram again: %% clf histogram(x(:,1),50) hold on histogram(x(:,2),50) histogram(x(:,3),50) histogram(x(:,4),50) histogram(x(:,5),50) histogram(faket2,50) title('Temps Histogram') legend('Location','best','t1','t2','t3','t4','t5','faket2') xlim(\[303.30 305.60\]) ylim(\[0 1000\]) hold off %% % Plot reverse engineered approximate signal: %% clf plot(t,x(:,1)) hold on plot(t,x(:,2)) plot(t,x(:,3)) plot(t,x(:,4)) plot(t,x(:,5)) plot(t,faket2,'\*') title('This is the data') xlabel('Time') ylabel('Temp') legend('Location','best','t1','t2','t3','t4','t5','faket2') xlim(\[22540 37642\]) ylim(\[303.43 305.73\]) grid on hold off %%
&gt;&gt; format shortG Or &gt;&gt; format longG https://uk.mathworks.com/help/matlab/ref/format.html
I guess starting your code with close all might solve some of your misery. Sounds like you ran it multiple times and raped the figure windows. Generally I start my code with Close all Clear all Clc ‘Some message’ This disposes of any figure windows, variables and any line of code/message in your command window making identifying errors way less a pain in the ass. 
If you use rand in an example for us to reproduce your problem, add a seed (add [rng(ANUMBERHERE)](https://nl.mathworks.com/help/matlab/ref/rng.html) before you call rand) to your code so we can really reproduce your steps.
5G Network Simulation? That's awesome, I'll have to hop back into Matlab
time = &amp;#x200B; 6.7371 5.9296 6.1984 5.9566 5.9703 5.9121 6.1073 5.9764 5.9150 5.9518 5.9966 5.9433 5.9363 5.9788 5.9073 5.8988 5.9059 5.8943 5.9172 5.8813 6.7006 5.9135 5.9368 5.8861 5.9144 5.8616 5.9083 5.9165 5.9201 5.8968 5.9157 6.1101 7.2558 6.0792 5.9364 6.2024 6.0135 5.8603 5.9630 6.2253 &amp;#x200B; \&gt;&gt; \[mean(time(:,1)), mean(time(:,2))\] &amp;#x200B; ans = &amp;#x200B; 6.1028 5.9637 left is two single integrators, right is the second order integrator block. Ran 20 times a 100 time simulation of 1200 seconds of a harmonically excited MSD system. 
okay so 1: check out the documentation on diff(). It's the difference between consecutive points ([d(2)-d(1), d(3)-d(2), etc]), and turns arrays of size N to size N-1. If your data has a little random scatter, it'll have random scatter of positive and negative values in a row during the normal parts, and gives you an idea of the magnitude of scatter in your data. For the jumps, you can expect a few of the same sign in a row, (up up up up) or down, and potentially they have a larger magnitude than the jumps. sign(diff(data)) gives an array of plus and minus ones. It's not a total analysis, but if you're looking for a way just to grasp some analysis, this might help grasp the character of it. 
Buzz goes the words.
It's ok I'd really appreciate if you could explain how its a buzzword though
Sadly I don't have the time to go into it properly, but this "feature" was possible before the update. The "technology" used to implement 5g has been around, and used for years (decades?) in various forms. This is not a new technology it is a new implementation of old technologies under a new umbrella. 
Yeah don't think anyone claimed it's a new technology. A Buzzword like 'blockchain' is a buzzword because people use it inappropriately and unwittingly. 5G is an actual technology (Technically a broad umbrella of technologies) that will be implemented for cellular service. How the fuck else do you want me to describe the upgraded mobile internet speeds?
It's not upgraded internet speeds.
Do you not think there's a difference between 4G and 3G?
I don't know if it's proportionally the same, but you really don't think 5G is faster than 4G?
It's not even the main function. It will probably be slower for data transfer.
Why... Why do you think that. 
Because it's main function will be for low cost low latency mesh sensing networks.
No I've been taking about 5g the cellular network in the uk
And to be clear, you don't think 5G is faster than 4G?
To be clear, if you know what 5g is you will know speed is irrelevant. This is why it's a buzzword no one understands it and just thinks it's the same as 4 and 3g.
Ok you're trolling.
What?! What technology do you use in the UK? When I get to a certain amount of data used in a month, I get booted off of 4G and have to continue my activities on 3G. It's noticeably slower. I wish I could turn off 4G right now and do speed tests for you.
So, I know it's a tiny feature, but honestly the one I'm perhaps most excited for is `xline` and `yline` There's so many times I want to demark a cut-off value, and while it's not hard to do, it's harder than it should be. 
What are those?
Thanks! :)
That's crazy, I agree I have fumbled so much with this concept.
FYI You can automate this behavior by adding a line with `format shortG` or `format longG` to [startup.m](https://www.mathworks.com/help/matlab/ref/startup.html) or [matlabrc.m](https://www.mathworks.com/help/matlab/ref/matlabrc.html)
Why does stuff like this get immediately downvoted? This is a really useful question, with a useful answer. I feel like I never see a post on r/matlab with more than zero points. I get it when it's just some kid asking us to do their homework, but is there really somebody who just scrolls through new and downvotes every legitimate question? Does this sub have active mods?
Ha! My ggplot2-like toolbox \[gramm\]([https://github.com/piermorel/gramm](https://github.com/piermorel/gramm)) had that first :D &amp;#x200B; They still have a lot of work to do to include all the other functionality...
matplotlib had it even earlier (it was added in 2004).
They finally added a documented `uigridlayout`, although it is only for `uifigure`.
Hi thanks for you comment. I can do that if it will help, but the point was that I could run rand an absurd amount of times and it would work every time, 'proving' that for random data the same dimensions work fine for the function but for my data they don't. Even though separate subsets of the data containing all different kinds of combinations do work. Basically, I'm just trying to figure out what can cause the partialcorr function to return a NaN.
My god... Thank you for posting this! This has always been such an awkward thing to do with matlab.
The Jacobian should be a function of y, P and give x, T. Yours in no way is set up to do that. Can you write down the nonlinear system? Can you show the partial derivative terms that are elements in the Jacobian matrix?
Here's what I wrote out: https://imgur.com/8BybMFw
It looks like you are passing x and T into your function, but the Jacobean is only dependent on P1, P2, and P, which you don’t pass to the function. It looks like you do something similar in your R function too
I usually work around that with plot. But that would indeed save same lines of code. Very nice. Thanks for sharing.
Any function can take array input. You just give it an array as input. What the function does with that array is up to you. 
Yeah no kidding, that's something that should have been added long ago. 
This one is borderline, but it's the sort of question that gets downvotes because it's easily answered by looking at the documentation. It's annoying when you can tell somebody hasn't even tried. It's also a borderline shitpost about how dumb Matlab is, which is never popular. Like I said, this one is on the edge - I personally don't think it deserves the downvotes - but these are the reasons why it happens. You see a lot of posts here with low scores because, frankly, there are a lot of low quality posts that deserve downvotes. 
I agree, although I should say that there's often a use for setting your own figure numbers. Maybe not for a basic user but I wouldn't frame it as some kind of general bad practice, like using `eval`. 
What would you like a mod to do, stop people from down voting? 
did you.... look at the documentation? [https://www.mathworks.com/help/symbolic/vpasolve.html](https://www.mathworks.com/help/symbolic/vpasolve.html) [https://www.mathworks.com/help/optim/ug/fsolve.html](https://www.mathworks.com/help/optim/ug/fsolve.html)
Obviously not, but maybe address how unwelcoming this sub is to questions. The only things I see getting upvoted are extremely niche and esoteric questions, which are interesting, but not really useful to an everyday user. Sure, this question probably could have been answered in the documentation. But very often the answer you find there is simply one way to do it, not necessarily the best. For example, the tip about adding to startup.m wouldn't show up on the "format" doc page. I ask questions in this sub because I'm looking for curated answers from experienced users on the best way to do something.
As a general rule, to make your code more concise and also run faster, get in the habit of *not* using for loops in Matlab. Matlab literally stands for 'matrix laboratory' because it's good at working with matrices, and fairly poor at for loops. So, with that in mind, the best way to do this is to just use the indices. The logical statement &gt; J == 77 returns a matrix with values of 1 where your matrix (J) is equal to 77. Furthermore, to find the indices, you can use the 'find' function. &gt; find(J==77) The find function returns the indices where the input is logically true (1). Finally, you want to extract the actual values and put them into two separate matrices. Remember that J(indices) will give you the value of J at whichever index you input. So, a concise function would be: &gt; K = zeros(size(J)); %Create the base matrix for values of J == 77; &gt; inds = find(J == 77); %Determine indices where the matrix is equal to a desired number (77) &gt; L = zeros(size(J)); %Create base matrix for values of J != 77; &gt; K(inds) = J(inds); %At the indices where J == 77, set K = J &gt; K(~inds) = J(~inds); %At the indices where J != 77, set K = J
You can do it with a single for loop, going through each row of J: `K = [];` `L = [];` `for i = 1:length(J)` `if isempty(find(J(i,:) == 77))` `L = [L; J(i,:)];` `else` `K = [K; J(i,:)];` `end` `end` There's definitely a faster way not involving dynamic allocation and loops but for a small matrix it doesn't matter.
Thanks a lot for the response! From my understanding of the question: if for example J=[1 2 3 4 5 ;1 2 3 4 77 ;1 2 3 4 5] then I am looking for an output of K=[1 2 3 4 77] and L=[1 2 3 4 5 ;1 2 3 4 5] 
You turned my 175 lines of code into 10 lines hahaha! Thanks a lot!
The any function can come in handy in this case. Also, it is usually a good idea to avoid hardcoding anything in your code. So instead of hardcoding the number 77 you could define a variable like the following: &gt; nr = 77; &gt; J=[1 2 3 77 5; 77 1 2 77 3 ;1 2 3 4 5 ;1 2 3 4 5 ;1 77 3 4 5 ;1 2 3 4 5]; &gt; &gt; &gt; nrInRow = any(J==nr,2); &gt; K = J(nrInRow==1,:); &gt; L = J(nrInRow==0,:); So in 3 lines of code you have done it! Now, if you want to use your code for a different number than 77, you simply change the variable value. Now since this is a short piece of program, it isn't too bad. But imagine that you had written that number 77 in different parts of a very long code! You would have to look through whole the code, whereas when you define a variable you only change it in 1 place :)
The machine learning toolbox has a pretty nice built in GUI, I was able to start using it after watching the ~45min video on the math works website. You basically only need to know how to load in your data from the external source into your workspace to start using it. About learning the “basics” of matlab well that depends on how much you already know about programming. You can probably get away with just reading the documentation if you already know some programming. Otherwise I would watch some of the many introductory YouTube tutorials to get started. 
Well if you want basics, Computer Programming with Matlab by Fitzpatrick is really good. There's also a coursera series that is pretty helpful.
Thx I’ll check it out 
I’ll watch the video, I already have some python and C knowledge so I guess it’s gonna be ok. 
Guys, I had to write many things for the assignment, and In the end he asks this 
Ok I understand everything about this, this is not my problem, my problem is why should we put this in a script ?
Command line is for casuals. Scripts are portable, permanent, and help you organize your program so that others (and future you) can read it. This is true regardless of size; I have scripts to convert wire gauge to area and diameter and back again that are two lines long, excluding comments and the function definition. I can use them in larger programs and don't have to rewrite them every time I want to use them. The real questions is "Why *wouldn't* you put this in a script?"
Wrap all that code in a function and use something like fminsearch: function maxError = calcError(k) k1 = k(1); k2 = k(2); REST IF THE CODE HERE end kMin = fminsearch (@calcError,k0)
Can anyone show me an example?, because I tried the line of code, but I’m not sure if my work is correct https://i.imgur.com/xBYlUfb.jpg
The function definition looks good. Now you need to call it. For example, you just called the `input` function twice. You gave it some input ('input Amplitude:' etc.), and assigned the output to a pair of variables (`A`, and `F`). PS: Double-check your definition for angular frequency. ;)
I don’t wanna sound stupid, but can you please elaborate, I’ve been researching for a while and I still don’t understand, sorry for sounding stupid 
[Mesh plot](https://www.mathworks.com/help/matlab/ref/mesh.html) should be able to use these variables. Otherwise you could use meshgrid on your x/y variables and plot with [surf](https://www.mathworks.com/help/matlab/ref/surf.html).
Why put a **anonymous** function in a script?
If you have an older matlab version, you might have to repmat A and B to make them 100x100, or meshgrid them, i.e: [A_new, B_new] = meshgrid(A,B) and then plot the new A and B like: surf(A_new,B_new,C)
Try this for a flat 2D color surface surf(A,B,zeros(size(Z)),Z); Or, to have Z control elevation AND color surf(A,B,Z,Z) You might need to first run [A,B] = meshgrid(A,B) To make the above work. IDK if `surf` supports compacted indicies or if it makes you expand them out to the full grid. The documentation says it *should* support it, but who knows. It also might be worth making A and B [1 x 100] and [100 x 1] (or vice-versa - try both)
what is the value returned by max(abs(data(:))) / min(abs(data(:))) My guess is that your datas dynamic range is quite a bit larger than that of `rand`, and thatyou have a few values that in the denominator of some division operation and are on the edge of being rounded down to zero, and that (for whatever reason) the floating point roundoff errors aalign just right to cause something to actually get rounded down to 0 after you hit a certain size (perhaps because with larger sizes you will have larger maximum values and thus the minimum cutoff to get rounded down to 0 is reduced). Its a bit of a stretch, but theres an easy test: use `vpa` on all your variables before you run the code and then run the code and see if you still get NaN's. Itll probably be slower than hell, so not a permanent fix, but if that works and you dont get NaNs than id say its probably a weird floating point roundoff issue.
opengl('save','hardware') ?
As you've correctly stated, [linprog](https://www.mathworks.com/help/optim/ug/linprog.html?s_tid=doc_ta) is the solver you need for the given linear optimization problem. So, the only thing you have to do is to rewrite the problem in the appropriate form such that you can pass the correct arguments to the solver, if needed. Additionally, at the end of the paper is proposed to use the primal-dual interior point method to solve the problem. So, just declare in *options* of the solver to use the specific algorithm. 
So I have a c++ code which is called from matlab which then creates from an matlab object a s-function with the correct properties. Now I want this c++ code instead of code generating the s-function some c code. &amp;#x200B; So finally I want to create a object in matlab -&gt; c-code generation -&gt; c code currently i have matlab -&gt; s-function code generation - &gt; s-function &amp;#x200B; and my question is what I have to change in the code generator to give me c code instead of a s-function &amp;#x200B; hope this makes it a little clearer
Thank you so much!
Simple, it's a homework assignment. How else are you supposed to turn it in? :) Jokes aside, let's say I want to evaluate a family of curves f = @(x) a*x^n; for different values of `a` and `n` - maybe I want to plot them to see how these parameters change the look of the curve. Anonymous functions are stored with the value of any constants fixed; the only thing you can change on the fly is your input. If you don't use a script, you have to type the function definition over and over each time you change those parameters, or worse: pass them in as arguments each time (\*shudder\*). With a script you can loop the definition and plot each in turn. This is also discussed in the documentation, in the section '[Variables in the Expression](https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html#f4-71621)'.
In that case, you would want to pull out 1, 4, and 7, as they were less than the maximum of the array before their position
Thank you for responding to my post. The second pair of curly brackets created a 1x1 cell as i wanted. Unfortunately it populates into the cell array as "1x1 cell" instead of the actual combined data. I thought perhaps it did not like 'char(10)' being data type char mixed with two cell data types. I deleted the char(10) altogether to test that, but still it populates as "1x1 cell". Using class(), all cells in my cell array, including this combined {{[cellC]}}return as type cell. Any thoughts where I may be going wrong?
im not sure but i think you will have to modify the c++ code, maybe to make it into a C++ S-Function which is easy to generate code for
The best I came up with up to this point was x4a = x4(find(t&lt;max(x4))) but it had a glitch and I realized that it wouldn't work. Same problem with a for loop that I tried
Thanks for replying. I don't know how to do it for summation constraint. c(i) = linprog(-r,[1, ?],[C(i),Rho*I*J],[],[],1); Is this correct? What would be at '?' place.
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://www.mathworks.com/help/matlab/ref/any.html) - Previous text "any" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
For summation, in general, there are several ways. The most efficient, probably, is to write it as a [dot product](https://en.wikipedia.org/wiki/Dot_product). For example, ones(1, n)\*c = sum c\_i, where n is the dimension of column vector c and i=1,...,n. Additionally, you have to pre-define `options = optimoptions('linprog','Algorithm','interior-point');` and pass that in *options* argument, so you will use the proposed algorithm.
**Dot product** In mathematics, the dot product or scalar product is an algebraic operation that takes two equal-length sequences of numbers (usually coordinate vectors) and returns a single number. In Euclidean geometry, the dot product of the Cartesian coordinates of two vectors is widely used and often called inner product (or rarely projection product); see also inner product space. Algebraically, the dot product is the sum of the products of the corresponding entries of the two sequences of numbers. Geometrically, it is the product of the Euclidean magnitudes of the two vectors and the cosine of the angle between them. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
I tried it it doesn't work, i believe the problem is related to the mesa drivers
The easiest way for me to learn in Matlab is to pick a problem I want to solve and then work my way there with Google. After that first botched solution I then try to look for alternative ways to do it more elegantly. That's what I would recommend after learning the very basics.
Ahhh...I see what you are trying to do now. You want c1={'Text1'} c2={'Text2'} c12 = {[c1{:},char(10),c2{:}]}
Thanks! This was my idea - first basics then problem/project try and fail - look for help - fix -&gt; get better :) 
Thank you for the tip. Will definitely try :) 
So let’s say: x4 = [6 8 1 12 4 7]; x4a = []; for ii = 1:length(x4) if x4(ii) &lt; (you figure this part out) x4a = [x4a x4(ii)]; end end So for this crap code but this is what I can do while sitting in a UBER. 
cool stuff man, thanks.
I've been looking into doing something kind of like this, but haven't made any progress, so i'm interested in anything you find. One thing that may work from my research though is to use a Docker Image with MCR installed on it, then use Azure or something similar to run the image on demand.
don't learn matlab. learn python. python is free, and far, far more companies use python (because it is free). it does everything matlab does.
With a little bit of modification, yes. Rather than linking a newer version of MKL you would want to link something that is optimized for AMD CPUs (Id guess [BLIS/LibFLAME](https://github.com/flame) will be your best bet, though other options (OpenBLAS, ATLAS, etc.) also exist. I dont have an amd CPU so I cant say for sure, but Id think that the process is more or less the same. I.e.: 1. install BLIS/LibFLAME (or whatever you end up using) on your system 2. From a terminal window, call some "environment setup" script analagous to `mklvars.bat` (or `mklvars.sh` on linux) 3. From the same terminal window, set `BLAS_VERSION` and `LAPACK_VERSION` to the appropriate `*.dll` files (or, on linux, `*.a` files iirc) 4. Figure out if any additional environment variables need to be set (still using the same terminal window). The `ILP64` tells it that MATLAB uses 64-bit long integers, so if nothing else you will probably need to set that somewhere (typically things like this default to 32-bit integers). 5. once all the environment variables are setup, run the MATLAB binary from the same terminal you used to setup the BLAS library That said, this assumes that all the relevant function calls that MATLAB makes behind the scenes have the same names as they do in MKL. I think this is basically true for OpenBLAS, but i dont know if it is or not from BLIS/LibFLAME. I could see that being problematic. You'll have to experiment. &gt; it's my understanding Ryzen sucks with MATLAB primarily because of it's poor BLAS implementation. This is a (potentially lartge) part of it, but def not the whole story. Matrix operations are basically perfect use cases for vectorized AVX+FMA instructions, and here the Ryzen chips are half the speed of mainstream intel and 1/4 the speed of intel chips with AVX-512. Ryzen just doesnt have strong AVX performance, and matrix operations use high-end AVX instructions with near perfect efficiency. There are also some potential NUMA issues, but this is a bigger issue for threadriper and epyc than for the mainstrean ryzen line.
It might actually be worth looking into R for this. Don't get me wrong: Matlab is an insanely robust language. However, R is one of the go-to languages for most people when it comes to machine learning.
Im happy to share it. God knows enough work went into figuring this out and it didnt even work for what I originally wanted to do lol (speed up sparse matrix operations, since rather annoyingly MATLAB *still* uses a horrible inefficient single threaded sparse matrix routine instead of MKL, and updating the BLAS library doesnt help if MATLAB doesnt actually call it...). At anyt rate, I figure mine as well try and get as much use out of it as can be had annd see if anyone else wanted to update to a newer blas library (and the potential performance jump on avx512 chips is seemingly decent bad). 
I generated it from MOLA data; these are specifically profiles of wrinkle ridges that I produced with MATLAB. 
Interesting. No promises, but I’ll take a look at it.
I appreciate any ideas at all! 😊 Thanks. 
Ohhhhh. Yeah I would definitely look at Ng’s coding assignment and solutions on github. I think the same course has a matlab crash course in the beginning. The task of learning from that example should be enough for a neophyte. But if that’s “cheating” by his standards then I wouldn’t submit it immediately and just spend time learning more coding basics until it’s time to submit it. I see where your prof is coming from but there are so many little basics that you wouldn’t even expect to need to know that can make the process a billion times more frustrating than it needs to be. Nothing replaces taking the time to develop a solid foundation, and if you’re gonna stick w STEM then coding is obviously not gonna be a waste of time. Ex: why put semi colons at the end of a line? Why should you initialize variables before a for loop? Simple stuff that can make for huge headaches when a beginner is out of their element. That being said, sometimes you just gotta be thrown in the deep end and power through it. Yes it will be frustrating, but you’ll come out of it w some nominal coding literacy. But just know that it’s a far from ideal way to learn to code. If you have the time, I would suggest going through Sedgewick’s “Intro to Programming in ___” even if theyre not the languages you need immediately. 
If you have time to go through Ng’s entire course, I would. If you learn to apply the methods then youur prof will surely be impressed. 
thank you very much for the explanation! when Ryzen was first announced I got excited for the core counts across the consumer, Threadripper, and Epyc lines, but then I saw the performance for MATLAB and was disappointed. thankfully it seems as though Intel is responding by increasing their own core counts.
k-means does not do classification, so your assignment is hopeless from the beginning. Instead, k-means is a clustering algorithm that creates unlabelled groups. As a next step, you could try some classification, but you don't mention that. &gt; I am having trouble figuring out where to go with this. Can you do the clustering with pencil and paper? To me it sounds a bit like you're stuck on the programming part, not the theoretical part. Is this true?
libGL: Can't open configuration file /home/sofiane/.drirc: No such file or directory. libGL: pci id for fd 722: 8086:1616, driver i965 libGL: OpenDriver: trying /usr/lib/x86\_64-linux-gnu/dri/tls/i965\_dri.so libGL: OpenDriver: trying /usr/lib/x86\_64-linux-gnu/dri/i965\_dri.so libGL: dlopen /usr/lib/x86\_64-linux-gnu/dri/i965\_dri.so failed (/usr/local/MATLAB/R2017a/bin/glnxa64/../../sys/os/glnxa64/libstdc++.so.6: version \`CXXABI\_1.3.9' not found (required by /usr/lib/x86\_64-linux-gnu/dri/i965\_dri.so)) libGL: OpenDriver: trying ${ORIGIN}/dri/tls/i965\_dri.so libGL: OpenDriver: trying ${ORIGIN}/dri/i965\_dri.so libGL: dlopen ${ORIGIN}/dri/i965\_dri.so failed (/usr/local/MATLAB/R2017a/bin/glnxa64/../../sys/os/glnxa64/libstdc++.so.6: version \`CXXABI\_1.3.9' not found (required by /usr/lib/x86\_64-linux-gnu/dri/i965\_dri.so)) libGL: OpenDriver: trying /usr/lib/dri/tls/i965\_dri.so libGL: OpenDriver: trying /usr/lib/dri/i965\_dri.so libGL: dlopen /usr/lib/dri/i965\_dri.so failed (/usr/lib/dri/i965\_dri.so: cannot open shared object file: No such file or directory) libGL error: unable to load driver: i965\_dri.so libGL error: driver pointer missing libGL error: failed to load driver: i965 libGL: pci id for fd 722: 8086:1616, driver i965 libGL: OpenDriver: trying /usr/lib/x86\_64-linux-gnu/dri/tls/i965\_dri.so libGL: OpenDriver: trying /usr/lib/x86\_64-linux-gnu/dri/i965\_dri.so libGL: dlopen /usr/lib/x86\_64-linux-gnu/dri/i965\_dri.so failed (/usr/local/MATLAB/R2017a/bin/glnxa64/../../sys/os/glnxa64/libstdc++.so.6: version \`CXXABI\_1.3.9' not found (required by /usr/lib/x86\_64-linux-gnu/dri/i965\_dri.so)) libGL: OpenDriver: trying ${ORIGIN}/dri/tls/i965\_dri.so libGL: OpenDriver: trying ${ORIGIN}/dri/i965\_dri.so libGL: dlopen ${ORIGIN}/dri/i965\_dri.so failed (/usr/local/MATLAB/R2017a/bin/glnxa64/../../sys/os/glnxa64/libstdc++.so.6: version \`CXXABI\_1.3.9' not found (required by /usr/lib/x86\_64-linux-gnu/dri/i965\_dri.so)) libGL: OpenDriver: trying /usr/lib/dri/tls/i965\_dri.so libGL: OpenDriver: trying /usr/lib/dri/i965\_dri.so libGL: dlopen /usr/lib/dri/i965\_dri.so failed (/usr/lib/dri/i965\_dri.so: cannot open shared object file: No such file or directory) libGL error: unable to load driver: i965\_dri.so libGL error: driver pointer missing libGL error: failed to load driver: i965 libGL: OpenDriver: trying /usr/lib/x86\_64-linux-gnu/dri/tls/swrast\_dri.so libGL: OpenDriver: trying /usr/lib/x86\_64-linux-gnu/dri/swrast\_dri.so libGL: dlopen /usr/lib/x86\_64-linux-gnu/dri/swrast\_dri.so failed (/usr/local/MATLAB/R2017a/bin/glnxa64/../../sys/os/glnxa64/libstdc++.so.6: version \`GLIBCXX\_3.4.21' not found (required by /usr/lib/x86\_64-linux-gnu/dri/swrast\_dri.so)) libGL: OpenDriver: trying ${ORIGIN}/dri/tls/swrast\_dri.so libGL: OpenDriver: trying ${ORIGIN}/dri/swrast\_dri.so libGL: dlopen ${ORIGIN}/dri/swrast\_dri.so failed (/usr/local/MATLAB/R2017a/bin/glnxa64/../../sys/os/glnxa64/libstdc++.so.6: version \`GLIBCXX\_3.4.21' not found (required by /usr/lib/x86\_64-linux-gnu/dri/swrast\_dri.so)) libGL: OpenDriver: trying /usr/lib/dri/tls/swrast\_dri.so libGL: OpenDriver: trying /usr/lib/dri/swrast\_dri.so libGL: dlopen /usr/lib/dri/swrast\_dri.so failed (/usr/lib/dri/swrast\_dri.so: cannot open shared object file: No such file or directory) libGL error: unable to load driver: swrast\_dri.
This is the fix https://www.mathworks.com/matlabcentral/answers/329796-issue-with-libstdc-so-6
I also believe the best way to learn MATLAB is to have someone else do your homework for you. In all seriousness, nobody is going to do this for you. What you might hope for is for someone to help push you in the right direction if you clearly explain what you have already done, where you are stuck, and why you think you are stuck. 
nothing so far, i dont know how to start 
When multiplying arrays, you have to be careful about using element-wise operators like .* (as opposed to matrix operations like *). In your case, you are using several matrix operations where you should be using element-wise operations.
Have you written functions in MATLAB before? If not, read up on the documentation first: [https://www.mathworks.com/help/matlab/ref/function.html](https://www.mathworks.com/help/matlab/ref/function.html) 
I didn't think of that. Thanks for the reply. =)
What this guy says. I usually try to do the actual work of the function in workspace/script first, and then write elements of that code into a function.
You can access full columns or rows of an array at once. For example, if you have a 3x3 array A, you can access the first column using A(:,1), or you could access the first 2 rows using A(1:2,:). Additionally, if you want to convert the first column of A into the first row of an array B, you can use the transpose/adjoint operator as follows B(1,:)=A(:,1)’; You should be able to use these to solve your problem
It works Thanks a lot :) 
That did it, thanks so much for the help!
yes thats my problem, do i just define put (Xi,Xf,@f1)
Just to add to the conversation, MATLAB also allows you to concatenate matrices/vectors into new matrices/vectors. Say, you wanted to have the third column of the first matrix, the second row of the second matrix, and the first row of the second matrix as the first, second and third columns (respectively) of the final matrix. `Afinal = [A1(:,3), A2([2, 1],:)'];`
I think what you're trying to do is to find is vector in which the `k`th element is `log(pi)` with the base `k`
Okay, so you'll probably need: 1. the logarithm change of base, linked previously 2. the documentation for [linspace](https://www.mathworks.com/help/matlab/ref/linspace.html), or [how to use the colon operator](https://www.mathworks.com/help/matlab/ref/colon.html) 3. one of the log functions ([log](https://www.mathworks.com/help/matlab/ref/log.html), [log2](https://www.mathworks.com/help/matlab/ref/log2.html), [log10](https://www.mathworks.com/help/matlab/ref/log10.html), etc.) 4. some basic knowledge of either [for loops](https://www.mathworks.com/help/matlab/ref/for.html) or [vectorization](https://www.mathworks.com/help/matlab/matlab_prog/vectorization.html) Give it a shot, and come back with your code and any error messages if you get stuck.
Thank you so much, I was thinking of using that base formula but was thinking there must be a better way to do it(also I doubted I was right)
Thank you so so much. I had no idea I could easily save my actual command space and knowing I can makes it so much easier. Thank you again!
&gt; thankfully it seems as though Intel is responding by increasing their own core counts. Honestly, this has probably made more of an impact on actual performance than just about anything intel has done to improve their CPU's since Sandybridge was released nearly a decade ago (with the semi-notable exception of improvement to AVX with haswell (AVX2+FMA3) and skylake xeons (AVX512), though these improvements you only *really* see, to my knowledge, in matrix operations and ffts). Amazing how much faster progress goes when you actually have competition...
Thank you! 
I had a long answer... and then mobile just gave up on it. Second try. This is all pretty straightforward. Spend some time with the documentation, specifically [load](https://www.mathworks.com/help/matlab/ref/load.html?searchHighlight=Load&amp;s_tid=doc_srchtitle), [array indexing](https://www.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html), [matrix operations](https://www.mathworks.com/help/matlab/matlab_prog/array-vs-matrix-operations.html). Approximately: - A = load(‘A pathname’); B = load(‘B pathname’); - sampleLength = length(A); %maybe check that they are the same length. - step = 10; winSize = 100; lastWinIdx = floor(sampleLength/(step+winSize+ 1)); % the idea here is to NOT ask for say, index 101 of an array of length 100. - for idx = 1:lastWinIdx; - winStart = 1+step*(idx-1); winStop = step*(idx-1) + winSize; - meanA = mean(A(winStart:winStop)); meanB = mean(B(winStart:winStop)); - C = A + B/(meanA). % you might need “./“ here if it doesn’t perform elementwise operation. - whatever else you are doing here. If you need to store the values, then do so here, such as D(idx,:) = C; -end I’m sure there are errors here, but this is the gist. 
 disp(\[num2str(Xf)\]), i got this but im not sure how to add text into the disp and not get an error 
disp ([‘text’,num2str()]) try this. [go to display multiple variables on same line ](https://www.mathworks.com/help/matlab/ref/disp.html) 
That's entirely right; it's my ignorance of programming generally and MATLAB in particular that has me stuck. I really don't know what sorts of things would even look right in the code. I need to see examples of similar codes.
Thanks very much for the advice! I am watching all of Andrew Ng's course now. This course, right? [https://www.youtube.com/watch?v=PPLop4L2eGk&amp;list=PLLssT5z\_DsK-h9vYZkQkYNWcItqhlRJLN](https://www.youtube.com/watch?v=PPLop4L2eGk&amp;list=PLLssT5z_DsK-h9vYZkQkYNWcItqhlRJLN)
lord have mercy read the sidebar https://www.mathworks.com/support/learn-with-matlab-tutorials.html
Hi the link was helpful and the comment was not. Kindness is free, use if often.
Aight, I guess I'll check out the syntaxes and try to run it on a sample code. Will let you know how it went. Thanks a lot.
Ok, so, normally I wouldn't give code examples to people who want/need to learn how to program, because there is no better way to learn than to actually write the code yourself. But in this case, because you seem to understand the algorithm and because you still need to adapt it to fit your data, it feels like a good idea to give you some example code. So here is a k-means example using generated 2d data. Try to work through every line of the code, and comment on what it does exactly. You'll probably have to use the MATLAB documentation a lot; for example the function `rng` [is explained here](https://mathworks.com/help/matlab/ref/rng.html). Can you report back with a description of what every line of code does? Then we can go over anything you don't yet understand. Good luck! %%% SETUP SIMULATED DATA % Generate n 2d data points in two clusters rng(42); n = 100; data = [ [normrnd(0.3, 0.2, 1, n/2) ; normrnd(0.8, 0.2, 1, n/2)] [normrnd(0.8, 0.2, 1, n/2) ; normrnd(0.3, 0.2, 1, n/2)] ]; clusters_true = [ones(1, 50) ones(1,50) + 1]; colours = [[1 0 0] ; [0 0 1]]; % when increasing k, also add new colours here % plot initial data figure; scatter(data(1,:), data(2,:), [], clusters_true); title('Initial true clusters'); %%% K-MEANS % Step one: pick k random seeds as cluster means k = 2; cmeans = rand(2, k); % And plot them for clarity figure; scatter(data(1,:), data(2,:), []); hold on; scatter(cmeans(1, :), cmeans(2, :), 120, 'black', 'filled'); title('Initial data + initial k-means random seeds'); % Main k-means loop cmeans_prev = cmeans; for step = 1:999 % calculate Manhattan distance to cmeans for each data point distance = zeros(k, n); for k_idx = 1:k distance(k_idx, :) = sum(abs(data - cmeans(:, k_idx))); end % assign points to clusters based on the distance [~, clusters] = min(distance); % update cmeans for k_idx = 1:k cmeans(:, k_idx) = mean(data(:, clusters == k_idx)'); if sum(clusters == k_idx) == 0 'warning: one of the clusters is empty. setting new random seed' cmeans(:, k_idx) = rand(2, 1); end end % make new cluster plot figure; scatter(data(1,:), data(2,:), [], clusters); hold on; scatter(cmeans_prev(1, :), cmeans_prev(2, :), 120, 'black', 'filled'); scatter(cmeans(1, :), cmeans(2, :), 60, 'green', 'filled'); title(sprintf('Updated clusters and means after step %d', step)); % stop condition if sum(cmeans ~= cmeans_prev) == 0 break; end cmeans_prev = cmeans; end fprintf('Clustering done in %d steps!\n', step); 
I’m failing to find any correlation between the x and y vector in such a way where it could be arbitrarily long 
They are arranged such that negative values are greatest to least followed by positive numbers from least to hreatest
At least in the old Reddit, the first link under "places to learn Matlab" is "student tutorial", and the "Desktop basics" tutorial there answers all of your questions. So it is actually rather evident despite your claim to read the sidebar that you did not, so some old school RTFM approach may be warranted. Of course, learning a new language and IDE may be a bit frustrating, but skipping the documentation doesn't exactly help. A few tips to make this comment more constructive: * You can also select (paint with mouse) rows in the script editor and then run the selection only. Default key is F9. * Quick way to see documentation on a command is the "help" command, e.g. "help save" and "help load" for how to use the saved data. "doc" command will show the full documentation in a separate window. Happy learning! Matlab is a pretty good tool for prototyping, because it has quite a few relatively easy to use libraries. (There are more computationally efficient languages, though Matlab has improved much in this regard.)
What have you tried? We're not here to do your homework for you. 
Someone who titles their post 'homework' without even a capital is going to cheat one way or another ;)
Did you even try reading the documentation for linspace? 
Matlab is a technical programming language. You can write programs in it to calculate things. This is useful for people who do work in science and engineering. 
Watch a few tutorials on YouTube to begin with. Then try few of those codes in MATLAB. You can always open a '.m' script file from file option to save your code there. Command window is for practice simple codes it's not for writing a program to solve your mathematical problem. For any further questions you ask me ... Don't worry. 
I thoguht you [said](https://www.reddit.com/r/matlab/comments/9hul33/home_work_question/e6eocev/?context=2) you understood the anonymous function doc page
 M = magic(n) returns an n \-by-n matrix constructed from the integers 1 through n\^2 with equal row and column sums. The order n must be a scalar greater than or equal to 3 .
You’re a complete asshole. Someone asked a question about a new language who was obviously upset, but you and your obvious inability to deal with other people must be the reason you’re fluent in this language. Some of us “scientists and engineers” don’t mind getting questions about things that are semi-difficult, and gladly help anyone, no matter the question. I hope you end up locked in some cubicle, doing something you hate for the rest of your terrible disgusting existence. 
What an asshole lmao 
Thanks for being kind and answering a question from a struggling individual, rather than be a dick like everyone else! 
Did they fix not being able to copy stuff from a live script? I think some windows cleanup service was the reason for the "bug".
[Here](https://brilliant.org/wiki/sorting-algorithms/) is a nice overview of different sorting algorithms, you could set up a fairly rudimentary one by implementing a for and while loop. But there's a thousand ways to do something like this, the assignment is getting you to understand the syntax of Matlab. I'd start by looking at *for* and *while* loops. Also googling '*sorting methods matlab*' gave me [this.](https://uk.mathworks.com/matlabcentral/fileexchange/45125-sorting-methods?focused=3805900&amp;tab=function) In which you can look at the code to understand how they work. What you'll learn with Matlab (and any coding) is initially a lot of it is knowing what and how to search for what you need. &amp;#x200B;
First of all, thank you for your suggestion! &amp;#x200B; I looked up the help on fminsearch and reformulated as below: options = optimset('Display','iter','PlotFcns',@optimplotfval); k0 = \[1,1\]; \[kMin,fval,exitflag,output\] = fminsearch(@calcError,k0,options) function maxError = calcError(k) k1 = k(1); k2 = k(2); % Open Simulink Model open\_system('simplified\_ls'); simulink\_out = sim(bdroot,'ReturnWorkspaceOutputs','on'); simulink\_out = simulink\_out.setUserData(struct('param1','value1','param2','value2','param3','value3')); open\_system('simplified\_ls\_error'); simplified\_ls\_error = sim(bdroot,'ReturnWorkspaceOutputs','on'); simplified\_ls\_error = simplified\_ls\_error.setUserData(struct('param1','value1','param2','value2','param3','value3')); maxError = max(simplified\_ls\_error.error) end &amp;#x200B; The simulink function simplified\_ls.slx used two gain boxes which have k1 and k2 typed into them. I am having trouble passing in k1 and k2 unless I actually specify them before the code: k1 = .020; k2 = 1E-4; &amp;#x200B; Thank you for any further thoughts...
did you complete your course?
What are the parameters to these functions?
You are a beautoful S.O.B.
I wrote up a little function for you that I think should do what you want, and do it rather efficiently. I added a few extras in too to make it a bit moire flexible. function [C] = mySmoothAndCombineFun(A,B,k,funC,gaussWeightFlag) %% takes a moving k-window mean of 'A' and 'B', and then uses these and the user-provided anonymous function 'funC' to produce output 'C' % A and B: 1D data vector inputs % k: length of window to compute local average over. Can be scalar (same for A and B) or 2 different values (for A and B) % funC: function that uses the k-mean of A and B as inputs and outputs C. % ex: funC = @(Amean,Bmean)((Amean+Bmean)/2) --&gt; this wouild be the simple average of Amean and Bmean % gaussWeightFlag: flag to determine if local mean is simple mean of a gaussian weighted mean % To use gaussian weighted mean, set this to '1' or 'true'. The standard deviation will be set to k/3 % Any other value or a missing/empty input will cause the code to use a simple mean within the window % Set defaults for funC and gaussWeightFlag if ~exist('funC','var') || isempty(funC) || ~isa(func,'function_handle') % default function handle is standard mean funC = @(A,B)((A+B)/2); end if ~exist('gaussWeightFlag','var') || isempty(gaussWeightFlag) || ~islogical(gaussWeightFlag) || ~(isnumeric(gaussWeightFlag) &amp;&amp; any(gaussWeightFlag == [0,1])) gaussWeightFlag = false; else gaussWeightFlag = logical(gaussWeightFlag); end % duplicate k if needed k = repmat(reshape(k(1:min(2,end)),1,[]), [1,1+double(numel(k) == 1)]); % compute weight vector (gaussian or uniform) for A and B if gaussWeightFlag Wa = exp((-1/6) * (A / k(1))); Wb = exp((-1/6) * (A / k(2))); else Wa = ones(k(1),1); Wb = ones(k(2),1); end % define anonymous function to implement moving k-window mean using 1D convolution mySmoothFun1D=@(X,W)(conv(X(:),W(:),'same') ./ conv(ones(numel(X),1),W(:),'same')); % get moving k-window mean for A and B Amean = mySmoothFun1D(A,Wa); Bmean = mySmoothFun1D(B,Wb); % use outputs to compute C C = funC(Amean,Bmean); end 
Just to be clear - you don't actually have a signal generator running to a scope for this example? This is all just simulation?
You can do this with FFTs which should be faster. Or I think the built in xcorr2 function, which probably uses FFTs under the hood. Either way, O(n^2) is unnecessarily slow.
No, I actually code in python (which I much prefer) every day, and I also use C++ a little. Issues reading documentation or not, you have 0 right to parade the right that you know something that someone else doesn’t over them. I feel very sorry for you. I hope you find some way to be happy in your shitty life :/
AND checking by your post history, your existence on r/Matlab seems to simply be under the attitude that every post on here is someone “Cheating on their homework.” It’s so funny how you can maintain such a horrible attitude, when you’re obviously in no control of your life. Maybe one day you’ll be able to stop being hateful to strangers seeking help in the internet in the future, or God have mercy on your soul when you can’t figure something out. Sorry your life sucks man. 
It's amazing how upset you are about this. Try projecting less, and reading more. Maybe the documentation, for example. 
Sorry, I just get really upset when people are assholes for no reason. I like how you can’t even read user names, and see that I didn’t even ask the question. It’s alright, I’ll leave you to sit on your ass and claim that you’re holier than everyone else because that’s obviously the only gratification you get from any source. 🤧
I never said you asked the question. Reading is hard huh? Sorry about all that documentation. 
If you need a symbolic result, use a symbolic variable. Do you want a symbolic result? Or a numerical result?
I'm assuming the error is about a matrix size mismatch? Have you checked the size of the matrices in question? 
Thanks very much for your help! Okay, let's see what I can make of the first part of this: rng(42); %%does this mean it'll generate a random integer from 1-42? n = 100; %%is this standing in for a possible 100 profiles (data pieces)? data = \[ \[normrnd(0.3, 0.2, 1, n/2) ; normrnd(0.8, 0.2, 1, n/2)\] \[normrnd(0.8, 0.2, 1, n/2) ; %% is this to produce more random numbers? clusters\_true = \[ones(1, 50) ones(1,50) + 1\]; %% I can assume this has to do with making clusters, but I don't know how this "ones" function works cmeans = rand(2, k); %%what is meant by "cmeans" ? &amp;#x200B;
Reddit answer. 
Thanks for the help. I figured it out. Lets just hope its what my professor wants. 
Through telepathy I have indeed verified your answer
Really appreciate the help. I'll have to study up the inner works to modify this whole script for any future changes, but this is an astoundingly well commented foundation. Thanks a lot.
Other than computing C*B, I don’t see how much more this can be simplified. Each resulting element would be C(i)*B(i)*A(i)^k.
&gt; can someone verify my answer No, no one can. Does that answer your question?
Good of you to try and get started! &gt; rng(42); %%does this mean it'll generate a random integer from 1-42? Did you use the MATLAB documentation like the `rng` page I linked to above? To figure out what a line does, you should try to find any relevant functions (such as `rng`, `normrnd`, `ones`, etc) in the documentation and read about them. Then you can try playing with the functions in the MATLAB window, so you can see what they really do.
Yes. The signal generator is producing square waves. Three copies of that signal are created and one passed directly to the scope. The other two copies of that signal are passed through the two s-function blocks.
WOW! I can't believe the mistake was in there. The parameters were different for both functions. The paramenters were very slightly different and I made them identical and now they are behaving as expected. Thank's for the help, buddy!
Plot(xvec,yvec,) 
Jesus that comment history. Life is going to be rough for a guy who can't think of a better title than a bunch of variations on "home work question". Dude, almost every question here is a homework question. Try making at least a little bit of effort. You've been posting about this same question for days now. It would have been way less difficult for you to just read the documentation and figure it out. You're not helping yourself. 
Use the animatedline and addpoints commands. &amp;#x200B; x = linspace(0,100,1000); y = linspace(0,30,1000); z = [linspace(0,400,500),linspace(400,0,500)]; t = linspace(0,10,1000); figure; plot3(x(1),y(1),z(1)) grid on; xlim([0 100]); ylim([0 30]); zlim([0 400]); hl = animatedline(x(1),y(1),z(1)); for i = 1:length(t) addpoints(hl,x(i),y(i),z(i)); drawnow; end &amp;#x200B;
I use this code: &gt;spectrum = csvread ('spectrum5.csv'); &gt; &gt;t\_begin = 0; &gt; &gt;t\_end = 20; &gt; &gt;xmin = -10; &gt; &gt;xmax = 10; &gt; &gt;H = 15; &gt; &gt;g = 9.81; &gt; &gt;T = linspace (t\_begin,t\_end,(t\_end-t\_begin)\*24); &gt; &gt;X = linspace (xmin,xmax,(xmax-xmin)\*10); &gt; &gt;PSD = spectrum (:,1); % power spectral density axis &gt; &gt;f = spectrum (:,2); % frequency axis &gt; &gt;df = f(2)-f(1); &gt; &gt;ASD = sqrt (2\*PSD); % convert to amplitude spectrum &gt; &gt; &gt; &gt;%% test input &gt; &gt;f = \[0.1;0.3;0.5;0.7;0.9\]; &gt; &gt;df = f(2)-f(1); &gt; &gt;ASD = \[0.5;0.5;0.4;0.3;0.2\]; &gt; &gt; &gt; &gt;%% continue code &gt; &gt;A = ASD .\*df; &gt; &gt;A = 20 \* A; &gt; &gt;\[Vx,Vy,Z,OMEGA,K,PSI,ymin,ymax\] = wavefield(H, T, X, A, f, g, xmin, xmax); &gt; &gt; &gt; &gt;message = 'calculations done'; &gt; &gt;message &gt; &gt; &gt; &gt;SigmaZ = sum (Z,3); &gt; &gt;SigmaVx = sum (Vx, 4); &gt; &gt;SigmaVy = sum (Vy, 4); &gt; &gt; &gt; &gt;for t = 1:length (T) &gt; &gt;grid = meshgrid (X,SigmaZ(:,t)); &gt; &gt;figure (1); plot (X,SigmaZ(:,t)); xlim(\[xmin xmax\]); ylim(\[ymin ymax\]); &gt; &gt; M(t) = getframe; &gt; &gt;end &gt; &gt;figure (1); xlim (\[xmin,xmax\]); ylim (\[ymin,ymax\]); movie (M,1,24); &gt; &gt; &gt; &gt;message = 'movie done'; With this function &gt;function \[Vx,Vy,Z,OMEGA,K,PSI,ymin,ymax\] = wavefield(H, T, X, A, f, g,xmin, xmax) &gt; &gt;%UNTITLED4 Summary of this function goes here &gt; &gt;% Detailed explanation goes here &gt; &gt;%VidObj = VideoWriter ('lopendegolf.avi'); &gt; &gt; &gt; &gt;Z = zeros (length (X), length (T), length(f)); &gt; &gt; &gt; &gt;OMEGA = f\*2\*pi; &gt; &gt;K = OMEGA.\^2./g; &gt; &gt;PSI = rand(length (f))\*2\*pi; &gt; &gt;h = linspace (-H, 0, H); &gt; &gt;ymin = -H-H/10; &gt; &gt;ymax = sum (A); &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;for i = (1: length (T)) &gt; &gt;t = T(i); &gt; &gt; &gt; &gt;for j = 1:length(f) &gt; &gt;a = A(j); &gt; &gt;omega = OMEGA (j); &gt; &gt;psi = PSI (j); &gt; &gt;k = K (j); &gt; &gt; &gt; &gt;for l = (1 : length (X)) &gt; &gt;x = X(l); &gt; &gt;Z (l,i,j) = a \* cos (k\*x - omega \* t + psi); &gt; &gt; &gt; &gt;for n = 1: length(h) &gt; &gt;Vx (l,n,i,j) = a\*omega \* (cosh((H+h(n))\*k)/sinh(k\*H)) \* cos (k\*x-omega\*t+psi); &gt; &gt;Vy (l,n,i,j) = a\*omega \* (sinh((H+h(n))\*k)/sinh(k\*H)) \* sin (k\*x-omega\*t+psi); &gt; &gt;end &gt; &gt; &gt; &gt;end &gt; &gt;end &gt; &gt; end &gt; &gt; &gt; &gt; &gt; &gt;% &gt; &gt;% for i = 1 : length(T) &gt; &gt;% open VidObj &gt; &gt;% writeVideo(VidObj,M(i)) &gt; &gt;% end &gt; &gt;% figure (2); xlim(\[xmin xmax\]); ylim (\[ymin ymax\]); hold on; movie (M,1,24); &gt; &gt;end &amp;#x200B;
You should check out [cell arrays](https://www.mathworks.com/help/matlab/cell-arrays.html). They don't solve your whole problem, but they address the [jagged array](https://en.wikipedia.org/wiki/Jagged_array) part of it. Also, when posting code, you can format it nicely using 4 spaces before each line. Easiest way to do it is to select what you want in MATLAB's editor, hit Tab, copy it, and paste it here. You'll have to fix the first line, but it ends up looking nice enough to read: a = 0; for idx = 1:100 if idx &lt; 50 a = a + 1; else a = a +1/2; end fprintf('After %d iterations, a = %d.', idx, a) end
Hm, thanks, I'll look into that. For now I bypassed the problem by plotting "imaginary" particle velocities with z higher than the actual water height. surprisingly enough, these calculate quite normally. Does this suggest an error in my way of calculating the velocities in the first place? &amp;#x200B; After lunch I went back in, most of my problems were cause by flipped matrices, so I just needed to take a transpose here and there :) &amp;#x200B; the code, again: function \[Vx,Vz,Z,OMEGA,K,PSI,ymin,ymax, h\] = wavefield(H, T, X, A, f, g,xmin, xmax) %UNTITLED4 Summary of this function goes here % Detailed explanation goes here &amp;#x200B; Z = zeros (length (X), length (T), length(f)); &amp;#x200B; OMEGA = f\*2\*pi; K = OMEGA.\^2./g; PSI = rand(length (f))\*2\*pi; ymin = -H-H/10; ymax = sum (A); h = linspace (-H, ymax, (H+ymax)\*10); &amp;#x200B; &amp;#x200B; for i = (1: length (T)) t = T(i); &amp;#x200B; for j = 1:length(f) a = A(j); omega = OMEGA (j); psi = PSI (j); k = K (j); &amp;#x200B; for l = (1 : length (X)) x = X(l); Z (l,i,j) = a \* cos (k\*x - omega \* t + psi); &amp;#x200B; for n = 1: length(h) Vx (l,n,i,j) = a\*omega \* (cosh((H+h(n))\*k)/sinh(k\*H)) \* cos (k\*x-omega\*t+psi); Vz (l,n,i,j) = a\*omega \* (sinh((H+h(n))\*k)/sinh(k\*H)) \* sin (k\*x-omega\*t+psi); end &amp;#x200B; end end end end &amp;#x200B;
What are we looking at here? 100% CPU usage?
Seems like you are overthinking it a tad. You only have two unknowns in this: force and Theta. Everything else is given. One potential way of doing this: 1) for loop from 0 to 360 or 0 to 2pi with theta being the (i). That will give you an array of force values. You can then make a linspace of theta or radian increments for the x axis of your plot function. Make sure it is same length as the array containing all your force points. Not sure what you are doing with the ode solver. Usually you do that the equation of linear distance to get velocity 
Yeah well I nearly crapped myself when I saw a peak looking like it went beyond 100%. Laptops don’t like matlab
I've just started learning matlab as part of my dynamics module, so far i only had 3 lesson, and it's about using ode45. I realized I've made a mistake in my post, its reaction force F to theta, which is the resultant force from force F1 and F2. 
Ah, In that case there is a “resultant” command in matlab. Calculate f1 and f2 then plot the resultant as a function of theta. You’ll find with matlab there are maaaaaany ways of doing things. Always clarify with your TA or teacher. Matlab also has an amazing documentation set. If you google your problem someone has already solved it 98% of the time
Awesome! 
https://www.mathworks.com/matlabcentral/fileexchange/48527-resultant-varargin Make sure you are indexing correctly (square brackets vs parentheses) When you use syms you have to define every variable (i would just do a for loop in a script)
I'm not sure I understand the issue you're having. Why do you need values for z above the water? If you're looking to solve the problem within x = [x0, xf] and z = [z0, zf], why not just define the mesh that way and go from there? I'm not familiar with the particular problem you're trying to solve; I'm familiar with MATLAB. If you give a clear definition of what equations you're trying to model, we can check to see if you've implemented them correctly in MATLAB (or save you time by suggesting built-in functions that do the job), but don't be surprised if no one can offer specific help with just this code to go on! Best I can tell you right away is that I don't see any major errors that jump off the page.
When you pass @fun to the solver, which of the two definitions do you expect it to use? Only one of the two returns the result of any calculations inside.
Thanks for pointing that out! I didn't realized that mistake in my code
This isn't really a Matlab issue. It's just executing the code you wrote. If you write code that uses a lot of processing power, that's what it will do. 
It is working now because I left out calling out global k1 global k2 per this paper: Ijee1673.pdf [https://paginas.fe.up.pt/\~lepabe/publicacoes\_restritas/papers/Ijee1673.pdf](https://paginas.fe.up.pt/~lepabe/publicacoes_restritas/papers/Ijee1673.pdf)
Sorry guys, apparently [C,R] = qr(A,B) and [C,R] = qr(A,0) are two distinct functions, and the second isn't a special case of the first. Here is where I found this out: https://www.mathworks.com/help/matlab/ref/qr.html
I don't really get the point, except stuff like keyboard shortcuts. Python and MATLAB are different languages (and I like both), this list can grow to be infinite. About some of your specific points: * Displaying a variable's value: typing the variable's name in the console definitely works in Spyder just like in MATLAB. I just tested it to make sure. (It doesn't work inside scripts but I personally see that as an advantage and MATLAB's behaviour as quirky). * Arrays: if you're using python as MATLAB replacement, you would (should) use numpy for your arrays. That would be then `a = np.arange(0,10,2)` or similar. Using numpy also has the benefit of array operators that "make sense" in a linear algebra context. &amp;#x200B;
An option is to use `scatter` and use time to determine the color of your points. I use this method when I want to show how close two 3D trajectories actually got to each other- so you can glance and say "not when the lines get close, but when the lines are are the same color how close are they?"
glad to help. I use this trick quite ovten to apply coming window averages (it is nice because the edges are automatically normalized by the correct amount). Also, theres an error I noticed. Wa = exp((-1/6) * (A.^2 / k(1))); Wb = exp((-1/6) * (B.^2 / k(2))); should be Wa = exp((-1/6) * abs([-k(1):k(1)])); Wb = exp((-1/6) * abs([-k(2):k(2)])); I was sort of behind on sleep when i wrote this originally lol 
Oh, I sorta scrapped out the gaussian weighted part to another function anyway (some Euclidean distance thing). But appreciate the note. Also, correct me if I'm wrong, but isn't gaussian weighted mean basically the median? I tried to google it because I was curious, but didn't come up to anything useful.
&gt; Also, correct me if I'm wrong, but isn't gaussian weighted mean basically the median? Not in this case. It would be closer to the mean if you were weighting by the values, as this would weigh outlier values less (and these typically effect the mean much more than the median). However, this is just based on distances, which are always integers between -k and k (where k is the half-window width) to show this, take a window where k=2 (+/-2 points, so 5 values total). The standard mean weights each of these points the same: xmean = [0.2, 0.2, 0.2, 0.2, 0.2] * [x(-2); x(-1); x(0); x(1); x(2)] The gaussian weighted average weights the center point more and the more distant points less. This gives a more gradual transition between data you are including and data you arent including in the local average. For this case, the gaussian weight mean is roughly: xmean = [0.084, 0.228, 0.376, 0.228, 0.084] * [x(-2); x(-1); x(0); x(1); x(2)] Note that the weights still sum to 1, so you dont introduce any artificial data scaling. 
And also surprisingly flexible. I didnt realize this for a long time, but you can do things like x(1:min(10,end-3))
Pretty clear to me he wasn't mixing things up. So instead of being critical, why not say something to the effect of "the Matlab to Python cheat sheet exists, but to help you out, [here is a link to one."](http://mathesaurus.sourceforge.net/matlab-numpy.html) Kindness goes a long ways.
And I wasn’t trying to be a dick: just saying that he/she might be confused and that the conversion table between the languages already exists.
Are you trying to derive an equation? or do you just need a way to easily compute that for different k? for the latter, you can do x = @(k)(C * A^k * B)
What do you know about the uniqueness of eigenvectors? Hint: what are the eigenvectors of the identity matrix? 
You need a for loop nested within another for loop going over the variables i and j respectively, with both i and j going from 1 to 8 and then set x(i,j) value by calling the random integer function for every i and j.
&gt; but am having difficulties getting anything to execute the way I imagined. Can you be more specific? What happens when you run your code? Do you get an error? Do you get an output you don't expect? 
Ok I got the gist of that and implemented it, thanks. The code works now but when I run it, it prints the same board 64 times. Another question is how do i limit to the locations that need a number and ones that do not such as (1,1) having a number and (1,2) not like an actual board? x=zeros(8,8); x(randi(numel(x)))=3 for j=1:8 for k=1:8 x(j,k)=randi(\[0,2\]) end end 
The least easy to read way of doing it is disp( ['Disp'n out some text and a ' num2str(number) ' !!!']) num2str can specify decimal places as a second input.
Is `disp` an actual requirement or do you simply want its behavior? If you just need the behavior, you can use something like `fprintf('%s%d%s\n', text1, val, text2)` Check `doc fprintf` for more info about format strings. For example you might need to change `%d` depending on the type of `val`.
Looks like you answered your own question. 
I am an engineering student who finds it very useful for quickly performing simple and complex calculations. Like the other commenter said, it's also extremely useful for graphing, and it can create legends, labels, and displays on the graphs. &gt;I can't save my command window, just my work space but I can't do anything with the workspace files that are saved? You can save a lot of the functions you come up with, and I believe you can save your work as a text file.
You could have helped the OP without being a total dick. He presumably DID some research before asking this question, that's why he is on here and that's what this subreddit is FOR. You were new to coding at some point, too, asshole, and you certainly had similar questions that the OP did even after doing your research.
Okay so in the meanwhile, I figured it out, the problem was a little space between the axis and the data. `axis tight` and `axis square` solved the problem. 
Since you figured it out, I wanted to add that you have a really cool plot!
Thank you! I'm having a hard time exporting it as a picture, because it gets very wide, and I can't get the colorscale closer but I am digging the guides. It is so fun to learn these new things! :D 
So my next question would be on how to go about writing if statements for the available moves for the 3 1 0 0 0 2 0 1 0 0 2 0 1 0 1 0 0 1 0 2 0 0 0 0 0 0 3 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 0 1 0 1 0 0 1 0 0 0 0 0 1 Obviously it can only go down and right/left but how could I construct a statement from that?
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/MyyxQ8M.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
This guy is a blog spammer.
So, I think this function will do what you want to get `C`. You can then use this output is ssome other to be determines function to get each element of D (run in a loop). function [C] = mySmoothAndCombineFun_v2(A,B,k) %% takes a moving k-window mean of 'A' and 'B', and then uses these and the user-provided anonymous function 'funC' to produce output 'C' % % A and B: 1D data vector/array inputs. % A and B must have same number of elements. % Output C will be the same size as input A. % % k: length of FULL window to compute local average over. MUST BE ODD (this makes the window symmetric). % If not a positive odd integer, the code will round 'k' to the nearest positive odd integer. % ensure valid A and B and convert them to column vectors if ~isnumeric(A) || ~isnumeric(B) || numel(A) ~= numel(B) error('A and B must both be numeric vectors of the same size!'); else dimOrig = size(A); A = A(:); B = B(:); N = numel(A); % number of data points in A and B end % ensure valid k k = min(2*N+1,max(1,round(abs(k(1))))); % ensure k is a positive integer, and cutoff size at 2*N+1 for efficiency k = 2 * floor(k/2 + sqrt(eps(k))) + 1; % ensure k is odd % get moving k-window mean for A and B Wnorm = conv(ones(N,1), ones(k,1), 'same'); Amean = conv(A, ones(k,1), 'same') ./ Wnorm; Bmean = conv(B, ones(k,1), 'same') ./ Wnorm; % use outputs to compute C C = A*Amean - B*Bmean; % return 'C' as an array the same size as input 'A' C = reshape(C, dimOrig); end You would use it like D = zeros(1,numPointsInD); for nn=1:numPointsInD A = &lt;...&gt; B = &lt;...&gt; k = &lt;...&gt; C = mySmoothAndCombineFun_v2(A,B,k); D(nn) = someOtherFun(C); end &gt; Am I right to assume that the syntax for start-to-end is basically just "(S:)"? Like, I understand that (1:0.1:100) is "from 1 to 100, at 0.1 intervals". But some of this is pretty new for me. Do you mean `x(:)`? This gives all the values back as a column vector, so it removes and array dimension info and ensures it is always [N x 1]. &gt; How can you use X and W in the mysmoothfun without defining it first? See [the documentation for anonymous functions](https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html)
Stringvar = Strcat(str1,{' '},num2str(variable)); disp(Stringvar);
This is what I do: `num2str` ftw. For more complicated stuff I'll go to `fprintf` but I try to avoid it because what is this, c?
DId you do it eventually?
As in the error? 
Maybe! Probably requires the privacy setting on your google sheet to be 'anyone with the link can view' and then some webscraping from that link
That’s the only way I know how to publish, is by going to the publish tab at the top. I just opened Matlab again and it prompted me to add it to the path, so I did. Then it gives me the same error codes.
How would you fix this? Do I need to save it to another folder? I’m not really sure what a path is, is that like a folder.
Perhaps it's an illegal file name? There are rules for how you can name files, such as having spaces, etc. Maybe that's it 
Is there a way to edit a file name without redoing the assignment over? 
Yes, it is basically the ‘address’ of a file. If you look at a file in the folder you want to save in and click ‘properties’ (maybe info? I forget. Mac user) it will tell you the location of that file. For example, if you had a text file named ‘test’ in your Matlab folder, the pathname might be ‘c:\matlab\test.txt’. Alternatively, you might be able to enter the desired name (e.g. ‘test2’) and Matlab will create the file in the current directory. You will have to figure out what the current working directory is to find it though.
Yeah just 'Save As' and then a new file name. The old one will still be there. Or copy the code into a new file if you're that worried? 
If you saved it a second time and the original file is still open, you will get that error. Did you close it first?
Ok, so it works on a single sheet, but it doesn't work if the I want to look at anything other than the first page of a multi-sheet document 
Is this a general mathematics question (quaternians) or do you have questions about performing translations and rotations using Matlab's [tools](https://www.mathworks.com/help/symbolic/examples/rotation-matrix-and-transformation-matrix.html)?
Not sure if this will help or explain better? I've got that huge jump up in the beginning of my lines, much more pronounced in my dark blue line, but still quite a steep increase in my light blue line. Not so much looking to artificially smooth it out, as avoid these steep increases early on. I can't figure out from my code what causes this in both cases, and being very new to Matlab doesn't help 
Why do you need to copy and paste. You can just go to File menu in google sheets and select download as Microsoft excel. In MATLAB just use [xlsread](https://www.mathworks.com/help/matlab/ref/xlsread.html) or [readtable](https://www.mathworks.com/help/matlab/ref/readtable.html). If you want to read directly from google sheets, you can use [google developer API](https://developers.google.com/sheets/api/guides/values). I haven't used it but it doesn't seem complicated, you can use Java or Python in MATLAB. 
My approach would be to first count the number of cycles needed to be drawn (using the frequency and duration), and then use a for loop to draw each cycle and change the line color.
If you have a single figure and use hold, each call to plot() will render the data in a new color. This is also the case when you pass in matrices for the x and y values of plot. In the case described, you should reshape the time series into a matrix. Build another time indexed matrix that matches the reshaped y values. Then call plot to produce the points. Sadly this won't link the points together, but the marker colors will be distinct. time = reshape(1:20,10,2) y_val = reshape(21:40,10,2) plot(time,y_val,'x') 
Try this figure hold on for j = 1:nPeriod fplot(@cos, [2*(j-1)*pi, 2*j*pi]) end 
Once you have filled up the 8x8 matrix with values from {0,1,2} then assign the 3 to a random element using the same technique as you did above, i.e. x(randi(numel(x)))=3 .
So I tested the code with a sample set of A, B and k, and it doesn't work too well. The only mistake I could identify was not having .* in the calculation for C. Other than that, here are the things I couldn't figure out: 1. With the following bit of info: A = [10, 20, 30, 40, 50]; B = [1, 2, 3, 4, 5]; k = 4, The output 2. The values in C are all in integers. Decimal values are pretty important for my case. Is there something in my Matlab that prevented these, or?... 3. The size of C is the size of both A or B, when I wanted it to be size k. Since it's supposed to be a more localized moving window, instead of a global one. Another final issue that came up is the computation to get C is found to be most optimal as a Euclidean distance value. I thought I could follow up on my own at this point... but I have some trouble getting the right syntax to perform [THIS](https://imgur.com/0afeFS9) on every element of A and B to form my C. I'm having some trouble thinking of 
inside of the typical import data, on the top bar you can generate a script or function which extracts form the excel sheet. You might be able to DL the google sheet as an xls file, then xlsread the file, to cut out the copy paste part
&gt; The values in C are all in integers. Decimal values are pretty important for my case. Is there something in my Matlab that prevented these, or?... nope...you just picked a set of inputs that produced an output that was all integers. Use inputs with some random noise added and they wont be integers. &gt; The size of C is the size of both A or B, when I wanted it to be size k. Since it's supposed to be a more localized moving window, instead of a global one. Im really not sure what you are trying to do here. The example you linked inherently has `A`, `B` and `C` the same size, since they all use the same `i` index. I also dont know what you mean about the local vs global moving window. The window produces a mean only using local points, but this is repeated on each point in the inputs (making the output the same size, since each computes outputs 1 value). &gt; I have some trouble getting the right syntax to perform THIS on every element of A and B to form my C Replace the line defining `C` with this C = hypot(A-Amean,B-Bmean);
I’ve always had luck using butterworth filters
Uh shit, sorry, I accidentally sent it witout completing my post, and went off for a meeting. That's why the post seemed incomplete. 
So I tested the code with a sample set of A, B and k, and it doesn't work too well. The only mistake I could identify was not having .* in the calculation for C. Other than that, here are the things I couldn't figure out: 1. Assuming the simple mean formula as before, with the following bit of info: A = [10, 20, 30, 40, 50]; B = [1, 2, 3, 4, 5]; k = 4, The output came out to C = [198, 495, 891, 1386, 1980]. If we assume that it's supposed to only take the mean within the window k, both for the generation of C data and size of C, then values should come up to; A_mean = avg(10+20+30+40) = 25 B_mean = avg(1+2+3+4) = 2.5 C = [10*25 - 1*2.5, 20*25 - 5, 750 - 7.5, 1000 C = [197.5, 495, 742.5, 990] 2. The values in C are all in integers. Decimal values are pretty important for my case. As shown above, with the data set given, I should have got decimal values. 3. The size of C is the size of both A or B, when I wanted it to be size k. Since it's supposed to be a more localized moving window, instead of a global one. One solution I have in mind is to let it run as intended, but then just trim the C to become size [1:k]. But I need to make sure that part 1 is fulfilled correctly first. 4. Another final issue that came up is the computation to get C is found to be most optimal as a Euclidean distance value. I thought I could follow up on my own at this point... but I have some trouble getting the right syntax to perform [THIS](https://imgur.com/0afeFS9) on every element of A and B to form my C. I'm having some trouble thinking of a way to incorporate square roots into each element. Edit: Will do that, thanks. Thanks a lot so far for your patience and teachign me a lot of stuff so far. 
This is great, thank you! I ended up making something similar, except I defined all of my fits inside of the actual error function. It works, but I don't think is quite as elegant as what you have. Will try it out! As a follow-up - are there any issues (besides time) for generating the function handles within a for loop/storing them in a structure? It would be nice programatically if the # of fits is fluid so I don't have to hard code them individually (mainly because the actual model I'm fitting to is overly-complex, would prefer not to retype it a bunch).
I have something similar to this but instead of constantly changing the color, the color is only supposed to change after each period.
I feel like I have the right idea going for this but idk where to continue `clear` `close all` &amp;#x200B; &amp;#x200B; `F = input('What is the frequency of your graph: ');` `SF = input('What is your graphs sampling frequency: ');` `D = input('What is the duration of your graph: ');` `% BS = input ('What is the size of your balls: ');` &amp;#x200B; `p = 1/F; %period` `sf = 1/SF; %makes the sampling frequency able to` `totalNumOfPeriods = F*D; %# of cycles made` `hold on` `for d=0:sf:D %from 0 to the set duration every sample frequency` `signal = cos(2*pi*F*d); %plots the cosine` `for cycle = 0:p:totalNumOfPeriods` `plot(d, signal,'bo') %this is just set for now so I can see it` `%i assumed this is what i don't know how id change the color ever period` `end` `end`
Yes, I was u/nyquist_karma. :)
Which do you think? What should those statements do? Describe it. 
3D bar plots are awesome. 
Answer b. The code a\[1:2:3\] means that you have to add 2 to 1 until you reach the number 3. So 1 is the starting value and 3 is the ending value but I'm unsure
yup; so the vector is \[1, 3\] now you make the third element of that vector 9. what vector do you have? what does lenght (a) return?
Why on earth would you ask this instead of just running the code? 
This only changes after each period too. 
To get a better understanding of how Matlab works, is my guess.
Think of a for loop that could do this for all elements except the first ( bc. vec\_out (1) = vec\_in (1)) So the for loop should look like: vec_out (1) = vec_in (1); for n = 2: end vec_out (n) = vec_in {insert your operation}; end &amp;#x200B;
what do you mean with {insert your operation}
function vec\_out = strangeSum(vec\_in) %input is vec\_in %output is vec\_out vec\_out(1)= vec\_in(1); for n=2 : length (vec\_in) vec\_out(n) = vec\_in(n) + vec\_in(n-1); end this worked for me! thank you! &amp;#x200B;
no problem, that's what this page is for. Happy to help :) Note that matlab gives a red line under vec\_out in the loop for it changes size every iteration, suggesting to preallocate. This improves the speed of your function. Preallocation is simply done by assigning the vector before the loop so vec_out(1)= vec_in(1); becomes vec_out = vec_in; Now you have a vector of the proper length to begin with. The loop will just overwrite the values in vec\_out to the correct ones!
There are tutorials in Matlab! Just google matlab tutorials and you should end up on the mathworks site. 
What does the error message say and what do you think that means?
What does the error message say and what do you think that means?
now you put vector t as a subscript in x, matlab doesn't like that. A subscript should be a real, positive integer (this is you error, I guess?) You can either write a loop: x = t for n = 1 : length (t) x (n) = sin (t(n)); end using n as you indicator. So at n = 1 t = 0, at n = 2 t = 0.05 etc more elegantly you can just use matrix operation: x = sin (t); where matlab will just do the sine elementwise. This is usually faster for matlab has hard-coded loops which are usually faster than home written loops. for info type either help sin or open sin in the command window
You guessed right with the error. So x = sin(t); will make x every value of sin(t)? That is interesting, I've only ever coded in Visual Basic which I'm fairly sure doesn't do this! I then have to plot it in a 3D graph (with y and z variables) but that is ok I can do that. Thank you!
Thank you, I will have a look :)
Here is the documentation for [vectorization](https://www.mathworks.com/help/matlab/matlab_prog/vectorization.html). There are other examples in there for you to mull over, and as you continue to learn MATLAB, it will be a handy optimization (and simplification) for your scripts.
I suggest the book "Getting Started with MATLAB 7: A Quick Introduction for Scientists and Engineers" by Rudra Pratap. It helped me considerably. https://books.google.co.in/books/about/Getting_Started_with_MATLAB_7.html?id=h5WPQgAACAAJ
I’d highly recommend checking out this page: https://www.mathworks.com/help/matlab/matlab_prog/vectorization.html Understanding the way MATLAB is able to “vectorize” certain operations is not only a great way to make your code run SO much faster, but is pretty much the essence of what sets MATLAB apart from other languages.
I started looking into this more last night, adjust this : `R = binornd(N,P);` `if R&gt;9` Into this: `R = rand();` `if R&lt;P` And it works much better. My main issue now though is that I'm trying to get both lines that it plots out to start at 0. One lines does that now, but the other starts at 1.
Cheers :)
First, read about [functions](https://www.mathworks.com/help/matlab/ref/function.html) in MATLAB. Then read about [running Simulink simulations with functions](https://www.mathworks.com/help/simulink/ug/using-the-sim-command.html). The documentation for MATLAB is awesome. Using the function you create in problem 3 will directly allow you to solve problem 4; it will also allow you to re-run your simulation with different parameters easily. Think about [looping](https://www.mathworks.com/help/matlab/matlab_prog/loop-control-statements.html) over the function call, and [plotting](https://www.mathworks.com/help/matlab/ref/plot.html) each output with different parameters on the same plot using the `hold on` command. That's just one potential use, there are others that you will discover if you continue using MATLAB and Simulink. Additional Links: * [hold command](https://www.mathworks.com/help/matlab/ref/hold.html) * [University of Michigan and Carnegie Mellon Simulink tutorials](http://ctms.engin.umich.edu/CTMS/index.php?aux=About_Tutorials)
I just typed up the answer in 3 lines of code but realized that this is too simple for me to not force you to figure out on your own. Break it down into steps. 1) Do you know how to split and index arrays? If you have A = [1, 2, 3, 4, 5, 6]. Understand what A(3) and A(3:5) do, for example. This is super simple and you can just google it. 2) Now that you know how to split arrays, how do you know how big to split M? You've been given a hint. Google those functions. All I did here was split the homework question into two different things you should google. You should be able to do that yourself. Come back if you have more specific questions.
The class is really fast paced and I feel like I’m falling behind every time Im caught up on readings. I’ve read chapters after chapters I know this is simple it’s just MATLab as a whole just confuses me. If I get the basic idea of the whole thing I might understand it better.
I'm happy to answer specific questions, but don't just put up code and say "what's wrong?" Honestly, one of the most important MATLAB skills you can have (and one which I use every day professionally) is to learn how to play around in the REPL (the interactive command prompt) in order to ensure correct formatting of commands and shapes of matrices before ultimately putting them in your scripts/functions. I encourage you to do this in order to better understand indexing and slicing. Make a toy matrix. Something like A = [1 2 3; 4 5 6; 7 8 9]. Type that into the command prompt and hit enter. Index into it in different ways. One-dimensionally (e.g. A(1), A(2), A(5), etc.) and two-dimensionallyl (A(1,1), A(1,2), A(2,1), etc.). More important is the 2D indexing since you have a 2D array. What is the first dimension (you should understand why the answer is "row")? What is the second dimension (you should understand why the answer is "columns")? Literally type all this into the command prompt right now and PLAY AROUND. Try random crap. Understand why you get an error when you get an error. Then do slices. What's A(1,:)? What's A(2,:)? What's A(:,2)? If you understand what each dimension means, you should be able to predict all of these outputs before entering them. Sorry I'm getting riled up here. I feel like our education system does not encourage experimentation and figuring out these things on your own, which is a shame.
Are you *sure* you can't use if/else just because you haven't covered it yet? It's a fundamental programming control flow concept, and if you haven't covered it yet it may not be covered in your class at all, considering how common and basic it is. Functions are probably one to two chapters after conditional statements in most intro programming books; if you're writing and using functions, conditional statements should be fair game. If you're sure you are forbidden from using if/else, there is already good advice in the thread. If not, I say [go for it](https://www.mathworks.com/help/matlab/ref/if.html).
The professor gave him the name of the function he can and SHOULD use to not use an if statement. I think this is poor advice.
I don't know what Kaprekar's constant is. Have you read the documentation for floor() and mod()? 
And I respect your right to that opinion. Note that I pointed out your advice as "good" in the case that conditionals are forbidden. Hell, some of it applies either way. However, there is no reason to assume that OP has to write a "one-liner" (three-liner) when a more readable, novice-grokable method exists in 8 lines, unless explicitly instructed to do so. Why make the problem harder than it has to be?
Haha you guys are crackin' me up.
I’m gaining more understanding, I’m confused about “So if the number of columns is even, you want N/2. If it's odd, you want N/2 rounded up. “ Do I need to use if/else statements? (I really appreciate your help)
Yea I totally agree with your general philosophy here... except that in this circumstance the professor has basically given the answer (the ceil function), and students should know how to look up new functions, use them, and not reinvent the wheel.
The code you posted is for an extraction of a certain number. So i did a quick read of the kaprecar constants and it seems that you habe to put the digits of a number in a certain order. Therefore you need to extract every digit. This is where your code comes in. Reading the documantation of floor and mod could gibe you a clue but sometimes its hard to understand what matlab is doing. First say x=8234 Floor(x/10^2) will give you floor(82,34)=82 Mod(82,10)=2 because if you devide 82 by 10 you will get 8 and a rest of 2. So this particular code you posted is for getting the 3rd digit of the number you want to analyse.
No problem dude. Have you googled "matlab ceil function" yet? It says "B = ceil(A) rounds the elements of A to the nearest integers greater than or equal to A". So ceil(N) = N/2 if N even and N/2 rounded up if N is odd. I responded to another post about using if/else statements. You should know how to do it and there's nothing wrong with it, but if a function does something that you need, IMO it's usually best to not reinvent the wheel - for philosophical, effort, and sometimes performance reasons.
&gt; Do I need to use if/else statements? :) The answer is "no". You don't NEED to. It sure makes it easier to understand what's happening from your perspective, though. But that's just like, my opinion, man.
Good advice to the last drop, kicking and screaming the whole way. :)
Okay fair enough, ai migjt have misworded it sue to a simplification my teacher made. The point stands, though? Use predefined functions if available because matlab usually knows matlab better than me
&gt; Use predefined functions if available because matlab usually knows matlab better than me Much better. And now you have some links to relevant information you can copy/paste for next time.
[I would recommend you start with the Primer.](https://www.mathworks.com/help/pdf_doc/matlab/index.html) The paper manuals are big, but they're easy to skim through. Once you know what toolbox you'll be using, skip over to that documentation as well.
No worries! And yeah, totally understand. I think it's good that you're finally getting into some form of code, because it looks like engineering is shifting away from a solely technical space in the industry. Using software is a great tool, and I think having even one language mastered will be a great skill for you in looking for a job. Press into the discomfort and start with the little steps! 
It probably thinks zeros is an array. Check to see that you don't have a variable named zeros or something. 
what is shown in the post is the only code i have in the file its the first question
It works fine on mine (R2018a on mac). There is an error with the code you posted though: Should be disp(X) Alternatively you can just type X to display it.
Do you get a X variable in your workspace after typing X = zeros(4)?
Oh...oh. Yes there was a variable but I deleted it and ran it again and it worked Also as I was typing this from my phone my power went out and my file wasn’t saved 🙃
How are things going?
I take it you do not have any programming background (no offense). Something I think should be introduced to basically everyone in high school, along the same lines as pre-calculus or something. Anyway, you probably already know how to assign a value to a variable. You showed this when you typed "M = [1 2 3; 4 ...]" and M1 = [stuff]". So now store the number of columns into a variable (you don't have to use N, although I like it :) ), "N = size(M, 2)". Now you can do computations on N, like "halfMatrixSize = ceil(N/2)". Note that the "ceil" function applies itself to each element of a matrix if a matrix is put in as the argument, but in this scenario we're just taking the ceil of a single number - the number of columns divided by 2.
How about [using packages](https://www.mathworks.com/help/matlab/matlab_oop/scoping-classes-with-packages.html)?
A question first to know where to start. What have you already learned in school?
We won’t write the function for you. Try it yourself first and maybe someone will help you if you find any problems. But you can use a for loop for that if you’re a beginner. 
Matlab doesn’t like undefined functions, so first define x over your range. Then define y = f(x), where f is one of your functions. After that, you can look into plotting x/y. Use the documentation extensively, or google.
? 
see sidebar. from beginner to this, it will take you about 4-6 hours at most. if you have it as homework, prof wants you to learn how to do it, so learn how to do it. hint: do not use a for loop. define x axis as a vector, then define y as a function of x. then plot x and y using plot(x,y). The hardest part will be learning to make a function. Which is easy. This is very simple and will be very instructive.
I'm not sure there is one way this kind of problem is "generally solved". The [OOP approach would have you define classes](https://www.mathworks.com/help/matlab/object-oriented-programming.html), but they're not strictly necessary in MATLAB. MATLAB has built-in formatting in the editor that is typically used alongside the [publish](https://www.mathworks.com/help/matlab/matlab_prog/publishing-matlab-code.html) feature, but it also serves to demarcate sections of code. To use it, you prepend `%%` to a line, and then enter a title for the section or don't; either way it starts a new section of code. Each section is set off from the others by background color (visible in the link above). In your use case, this would help you keep your functions organized within a single script. If you start this way and find that the script is still too long or unwieldy for your liking, you can extract the functions to their own files as needed. If you find that you need more encapsulation, you can then collect functions and data structures into classes. Another consideration might be that you notice some of your functions may be useful in future work; these are great candidates for extraction to separate files. Some example descriptions: * I have a transformer designer for my research that is currently at 23 files, with the main file being around 1300 lines. It's a monster, but a significant portion of the main file is documentation for the other students in my lab, whose expertise lies elsewhere. * I also have a GUI power quality analysis tool that is a single function file of about 500 lines, with nested functions, which was submitted as a course assignment. * Over the summer I worked on a program at a large company that had something like 50 separate MATLAB function files, 5-10 MATLAB classes in their own files, and which was COM-managed by a sprawling VB.NET program of dozens of .vb and .resx files. Make a plan and then let it grow organically.
If you've really had no intro to MATLAB, take the [MATLAB Onramp](https://matlabacademy.mathworks.com/) course. It is designed for people who have never seen MATLAB before and is very well-designed.
Yeah he is right. If you have never before seen matlab you need an introduction.
Thanks a lot! Special thanks for showing me numbers from practical applications like yours. I know about the formatting feature with %% and I always structurize it by using it (since my supervisor needs to easily understand what I am doing). What I meant by "generally solved" is more like "how are you guys handling this kind of problem?" which you answered to me by submitting your examples :-) I will create files for each functions and structre them by using appropriate folders. If it gets to sophisticated I can still swap to a class definition by c&amp;p. Thanks again!
Happy to be of service.
I think I solved it! Wow. It WAS simple. I’m just slow. After I run the function it shows the value of M1 , M2, N (#columns), Q (ceilN/2), and “ans” what does the last part do in a function? It tells me the answer is columns one and two. 
This is very easy, you can do it easily. I will help you get started: To define an anonymous function do the following &amp;#x200B; y = @(x) f(x) % where F(x) you can define as a function eg; sin(x)/x &amp;#x200B; That's all I am helping you with for now because you need to learn it on your own. 
There's nothing wrong with having a lot of functions. That's pretty standard and sounds like the cleanest way to do what you're doing. 
"ans" is basically a variable MATLAB creates in order to store stuff that you don't explicitly assign yourself. Usually you will either be running scripts/commands and viewing the output in the command prompt or plots, or you will be saving the variables to something of your choice if you know you'll need that information later. So the "ans" variable can for the most part be ignored (some of this is up for debate I guess, but IMO if you're explicitly relying on ans, you have bad habits). So if you type "x = 1 + 2" into the command prompt, it stores 3 (the result) into the variable x and prints it. If you type "x = 1 + 2;" it does the same thing but doesn't print the 3. Cool. Your value 3 was stored. Now if we type "1 + 2" into the command prompt, it'll print 3 but not store it anywhere. So MATLAB basically says "I'll store it in 'ans' for you just in case".
Just preface your commands with &gt;figure; every time you want a new window to open. Conversely, you can look up the documentation for "subplot" to get two figures in one window. 
Thank you sir you are a genius
&gt; I started this behavior so long ago I barely know why but, but I believe I prefer this over adding the repository to the system path because I may want an easy way to run the standard MATLAB environment without my custom scripts. Especially in software, even longstanding traditions should be reviewed. Previous decisions may no longer be good solutions, and may totally miss the mark on new problems. Plan for change! I would suggest you at least try alternatives and see what you can come up with. Even you bin them, that's still a useful result. &gt; My main repo is already incorporated in git but i'd like it if my smaller independent projects could be tracked in git as well, keeping compatibility with my main repo. I think this is a problem better tackled by a good directory structure, rather than git submodules. The structure I use to solve this problem is roughly apps\ app1\ src\ lib\ tests\ lib\ Applications (apps\app1) are larger projects, which warrant their own libraries, files, and test cases. lib will contain general purpose libraries - Tools which can be used anywhere, for anything. &gt; Just looking for ideas how other scientist may handle this. Basically is there an analog to pythons [...] for MATLAB or do I have to messily add files to path. Figuring this out would help me use git submodule, but I don't want to perpetuate an X/Y problem so I'm open to all suggestions for MATLAB workflow. /u/designtofly has a good recommendation with packages. You can also make classes with static methods and get a very similar effect, where you can call functions using [class].[method]. I like this method so that I can have better visibility over closely related functions. Also, you generally add folders to your path, not files. So even if you have a million functions in /lib/m/, you don't need to add them individually. &gt; I want protection from breaking the codes used years ago as it's important to track the process and just not the results of scientific analysis. That's true, but git and code comments are not the best tools for this. Git is a useful tool for corroborating changes and version control, but it doesn't guarantee good understanding of a code's history. Code has to function and be reviewed, but it can't be so thoroughly commented about how it has changed to the point that it impossible to review. Code is also a part of a much larger whole. Without understanding how it interacts, local-only documentation is useless. External documentation, with full prose, and few limitations is the best way to track significant changes over time. External documentation is also great for understanding architecture, which will drive the necessary interfaces for functions. 
if you're always comparing two things, you can use one figure, and two subplot()'s. And one tip with figures, you can make a figure, stretch it to the size you want, then type get(gcf, 'position'); in the command line. You get four numbers (x,y,width,height) that you can copy paste into figure('position', \[ 1,2,3,4 \]);. Then you go like subplot(1,2,1); plot(left) subplot(1,2,2); plot(right) the subplot arguments are subplot( total rows, total columns, index (across then down)) hope it helps!
You could use a `containers.Map` structure, which is effectively the same as a Dictionary in Python. [Here](http://au.mathworks.com/help/matlab/ref/containers.map.html;jsessionid=30fb4b66d5ef1c7173c182001141) is the documentation for it. &amp;#x200B; An applicable example: % Cell array of grades (the possible inputs) gradeKey = {'A', 'B', 'C', 'D', 'F'} % Numerical array of the associated grades gradeVals = [4, 3, 2, 1, 0] % Create the dictionary gradeDict = containers.Map(gradeKey, gradeVals) % Testing the dictionary gradeAVal = gradeDict('A') gradeAVal == 4 This allows to make easy changes to the dictionary and what values each entry represents (I don't know how your GPA system works so the numbers might be wrong but that is an easy fix) &amp;#x200B; All you have to do from here is get the user input and apply the dictionary. Unless you can assume the user will only enter what is in the key, I would recommend including measures to sanitize user input. 
^what he said. Bazillion figures
Absentmindedly call *figure* in a loop and they start stacking like 90’s solitaire.
#howtomakeyourtaskmanagerloveyou
Depending on the specifics of the algorithm, nested functions might be the most efficient way to implement this, for one simple reason: they allow in-place replacement. To my knowledge this is the only way to do this in MATLAB (not counting MEX functions). example: say you want something that does `x = x + y` any function of the form function x = myAddFun(x,y) x = x+y; end and then calling x = &lt;...&gt; y = &lt;...&gt; x = myAddFun(x,y) will create a temp copy of the input x, leaving you with 2 copies of x in memory. This is particularly annoying if `x` is very large. Using nested functions though, you can do x = &lt;...&gt; y = &lt;...&gt; myAddFun function myAddFun x = x+y; end and not need a 2nd copy of x, since `myAddFun` is applied directly to the variables from the calling function (instead of using pointers to the variables in the calling function which trigger the copy-on-write mechanism when you try to alter them)
telling a beginner to use anonymous functions is likely a mistake. 
loops/conditionals don't make sense for his problem. fplot or functions do. 
Why?
Thanks a million, really. I learned more about slicing/indexing/arrays through this post. I learn much better if I ask questions a lot and learning the “why” factor. Wishing you the best in your career/life :D
You just want to reference the middle of an array? Look up size() Then reference the outputs from that function.
There could be a built in way. But it’s easy enough to use the outputted coefficients from the polyfit to predict Y for each of your X values. Then simply subtract the predicted Y values from the actual Y values.
it is an advanced concept and harder to understand than normal functions. 
Since the function is quite simple, I would calculate the analytical deric
Since the function is quite simple, I would just calculate the derivative analytically and implement it explicitly. If you want to do it numerically, for example you could add 0.01 to your inputs, evaluate the function there and on the inputs themselves, and calculate the difference. That will give you an approximate derivative.
You are correct, I can find the derivative analytically. But what if I want to solve it for 6 variables or 10. I cannot just change the code everytime. Thanks for replying though.
That's my thoughts a stupid error, it's literally telling you why your code can't be executed. Fix your code. 
This bit: A(A(:,1)==B(:,1)) = 0; Only compares the first columns of each matrix. If you need to compare all of the data in B to A you could try: A(A==B) = 0;
Wouldn't they want to use A(A==B)=[] to delete that part? Maybe I'm misunderstanding what they're asking. 
+ Ah thank you. I've changed my code so that it's A(:, 1:end) instead. I've also tried a for loop but it doesn't seem to change the matrix: --- for j = 1:530; if d(:, 1) == c(:, j); d = d(:, 2:end);; end end ---- Am I missing something?
Yes that's right, I wish to delete that part. Unfortunately using that line just turns A into a 1x98482 array and so I can't use it.
Ah that sounds right since I think I've hit that snag before. It has to do with how the indexing in that line is done but I remember there being a work around. Perhaps A=A(A!=B) or maybe ~ instead of !, whichever is Matlabs logical NOT operator 
Unfortunately, the same issue seems to occur, except it's a 98482x1 array instead.
Set a breakpoint within the loop. Advance the loop until you get to a column that you know is identical, and then you can compare the two columns and determine the behavior of your script. You can try j=300:500 or whatever so that you don’t have to hit proceed a few hundred times. The only two things I see possibly happening are that the images aren’t truly identical, or that the d = d(:,2:end) isn’t updating before the loop returns. This is generally how you debug Matlab. Test a condition that should perform an action, and then slow it down to figure out what each line is doing.
Fixing the code isnt the problem. Clearly, if I can write an automated error handler to fix it for me I know how to fix the problem (and do so when I come across it in my code) The issue is rather more annoying when you have 10,000 lines of code and 9 data dimensions and unknown / dynamic data sizes (making errors like this real easy to overlook) and the code is full of nested functions (which matlab is VERY touchy about letting you debug and then continuing to run) and each function call takes hours or days to complete. If you lost a couple days worth of compute because MATLAB didnt like the idea of assigning 100 values to the first hundred elements of an array because you used a row vector instead of a column vector, youd probably want something to automate handling it too. 
can you not just make a matrix that starts at 2 and increments by 2 but limited by 2d. Therefore changing in size based on d? grad=[2:2:2*d]
Oh, and there's MIT Open Course Ware, all around great site. [https://ocw.mit.edu/courses/mathematics/18-s997-introduction-to-matlab-programming-fall-2011/index.htm](https://ocw.mit.edu/courses/mathematics/18-s997-introduction-to-matlab-programming-fall-2011/index.htm)
Poop
i=randi(length(x),100,1); Nums = x(i);
if you just need a random index 1 to 4, you could use the rand() function, which gives 0 to 1, then multiply that by 4, to get 0 to 4, then use the ceil() function to round up. Voila, you should have a random index. Then you can build in a for loop like for n=1:1:100 randx(n) = x(ceil(4\*rand()) end
You wouldn't need to. I would suggest beginning on pen and paper and seeing if you can write an expression for the n-dimensional gradient independent of matlab, THEN look at implementing it.
It was actually quite simple! So I was previously just using plot(vec1), but i used plot (xvals, vec1), where xvals was a vector of a length that I desired
my bad, just saw this. Yeah that one. If you sign up on coursera (it's free) you'll get the programming assignments too. I'm sure you can hollow out the k-means assignment and use it as a template for your project. 
Yep! That's exactly what was happening before! I was stumped for way too long on such a simple issue haha
Assuming you have a shortcut to start matlab, try this: right click on it --&gt; properties --&gt; change the "target" to: "C:\Program Files\MATLAB\R2018a\bin\MATLAB.exe" -sd "%SYSTEMROOT%%HOMEPATH%\Documents\MATLAB"
&gt; thanks for the hint on calculation time and memory usage. But I think the downside of nested function is mainly that it only works if the variables are named accordingly and consistent throughout the whole program. It would seem that in my case this leads to somewhat confusion when trying to retrace my program later. Oh most definately....this is not the best method in terms of code readability, and the function basically needs to be designed this way from the start. But, if you work with absurdly large data sets like I do and the choice is that or lose a factor of 20x speed from constantly using swap space, it is a price i gladly pay. &gt; I posted a the same problem on stack overflow and got an extensive answer to the problem here One word of warning: when you do `f1 = {@f0(...)}`, if there are anyu variables in `f0` that arent anonymous function variables but are changed outside the anonymous function, `f0` anf `f1` wont give the same answer, since f0 will use whatever their value was when the function was called. i.e. z=10; f1=@(x,y)(x+y+z); f2={@(x,y)(f1(x,y)} x=1; y=2; z=3; f1(x,y) --&gt; 1 + 2 + 3 = 6 (uses current z) f2(x,y) = 1 + 2 + 10 = 13 (uses z from when the f2 function was set) This is easy enough to avoid so long as you know about it, but it is really easy to miss if you dont know that is how matlab works. 
Hey, jkool702, just a quick heads-up: **definately** is actually spelled **definitely**. You can remember it by **-ite- not –ate-**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Hey fucker, just a quick heads-up. **definately** is actually spelled **definitely**. You can actually remember it by remembering it. Unless you have Alzheimer's, then you'll probably forget to breathe anyways. ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^**'delet!'** ^^^^to ^^^^delete ^^^^this ^^^^comment. ^^^^This ^^^^bot ^^^^is ^^^^powered ^^^^by ^^^^/r/banned.
Ok great :) I added some comments... I tried to follow it along as closely as I could. I'm still not seeing why it stops working the larger I make it, unfortunately. It does technically 'work' (in my head, and on matlab) for a low 'n' vector... 
i dont where you are going wrong with this but this here works fine for me : `for i=0:64` `x(i+1)=2^i` `end` `disp(x)` &amp;#x200B;
Thanks :) I have just realised this does actually work. I was just confused by how it displayed on screen. 
I've run your code and it works for me... Are you running this? I changed both values from 10 to 64. x=1:64; %x is a vector of value 1 to 10 (10 is just a test value) x(1)=1; %defining first x value for n=2:64 x(n) = 2^(n-1); %each index (n) of x vector is calculated as 2^n-1 (so for n=3, value at index 3 = 2^2) end disp([x]) %display the x vector This is a better way to do it. I've kept it simple, but you should look at **arrayfun** for running more complex functions on arrays once you are more confident with the language. n = 64; % set how high you want to go x = zeros(1,n); % pre-allocate array --&gt; correct way of initiating array for i = 1:n+1 % Look at it from the perspective of looping through indexes of x x(i) = 2^(i-1) % (so for n=3, value at index 3 = 2^2) end Some pointers: 1. Use variables! They are your friend. Even when setting up a relatively simple function, use a piece of paper and write out what you want your function to do. Maybe even write out a few trial outputs. 2. These mistakes are normal for when you are still getting to grips with language. Basically the code you provided, confused the output with the index of an array which made it do some weird stuff. 
Heres 1 simple one. Assuming a 1D time series (though the same method should work with multi-dimensional data too): 1. fft the data 2. apply a low pass filter 3. remove the high frequency samples that were set to 0 by the filter 4. ifft This dowqnsamples in time domaion by the same ratio as the frequencies dropped in the freq domain (e.g., remove the upper 50% of frequencies will increase time domain sample spacing by a factor of 2). I had a code handy that does this, so I igured id share it. Most of the code is dedicated to smart input parsing...the actual part that does the downsampling is only 4 or 5 lines.
Instead of saving off the sum, save each value in a vector. Then, you can calculate the gradient and simply sum your vector at the end. 
Does it have to be a for-loop? Why not use x = 2.^(0:64) for simplicity?
MATLAB has a lot of implicit vector and matrix operations than can be used instead of loops. They tend to execute an order of magnitude quicker and make your code neater as well. It's good practice to only use loops where you really have to.
No worries!
MATLAB already has a `euler` function with only 1 output, and it isnt recognizing yours as a valid function. idk why, but matlab should be p-utting some some fairly obvious indicators that show you where something isnt the correct syntax (or whatever the issue is)
Isn't this just basically JPEG compression?
Yeah, I realised that so I called it "euler1" instead. However I am now running into a different problem. &amp;#x200B; In the command window I run the \[T1,Y1\] code and it stores the variables. I then run the following code to get T, A, B and C variables: `T = 0:0.01:2*pi;` `A = sin(10*T);` `B = exp(T);` `C = A.*B; % sin(10*t)*exp(t)` &amp;#x200B; The problem occurs when I try to run the following in the command window: `E1 = max( abs(Y1 - A*exp(10*T1)./(1 + A*exp(10*T1))) )` I get a "Error using \*" because dimensions do not match for matrix multiplication. Problem is, I'm not sure where my error is :/ &amp;#x200B;
&gt; A*exp(10*T1) &gt; A*exp(10*T1) my guess is that both of these need to be `A.*exp(...)` 
Hmm, that's true. I forgot jpeg used dct. And dude, you have no idea how... Accomplished I feel for understanding what you said, the terms you used. Just a commentary.
Have you tried assigning `dataCur(:,:,kkInner)` to an intermediate preallocated variable? As you see, on both the left hand and right hand side you’re addressing the same data. I would try: X = dataCur(:,:,kkInner); dataCur(:,:,kkInner) = W’*X*W; I don’t know if that will help, but it’s what I’d try next. 
 imcompare(image,otherimage,’montage’) Is an easy way to compare two images side by side. There are also arguments to overlay or create a difference image.
this could be some floating point magic going on... have you tried stepping through the code line by line with the debugger to check the values for the variables?
have you tried to add break; after fprint in the case ?
That's not how switch/case works. You're comparing booleans, not the value of the discriminant. 
Not sure I understand exactly what you want, but if A(:,:)' isn't what you want, try B=permute (A, [1 3 2]); B(:,:)';. Or perhaps B=permute (A, [2 1 3]). You need to reorder the axis so when you flatten the last two together with B(:,:) you get what you want.
Have you read the documentation for reshape()? 
When you open up a switch/case block with `switch discriminant` All cases are comparing the case value to the value in the switch statement, and checking to see if they match. In this example your discriminant is 0. So this is how the code would run: * In the first case, it evaluates `discriminant == 0` which returns `true`, which is interpreted as `1`. * It then compares that case value of `1` to the switch statement `0` and it sees `0 == 1` which is false, and it moves to the next case. * The next case is `discriminant &gt; 0` which returns `false`, and is interpreted as `0`. * It is then compares that case value of `0` to the switch statement `0` and it sees `0 == 0` which is true, and it runs that block. This means that if your discriminant was greater than 1, neither code block would run as it would not equal either 0 or 1. &amp;#x200B; So how would you fix this? In the first case, simply call `case 0` to check if the discriminant is 0. however, your second case is a comparator, which doesn't work with switch/case blocks, as you can only call for a direct comparison with the discriminant. For this reason I recommend you only use if/elseif blocks to achieve your goal here. &amp;#x200B; However, in the event that you are required to use a switch/case block to complete your homework, consider how you could evaluate the discriminant to a boolean value *before* you enter the switch case, and go from there. Let me know if you need more help with that. 
What do you mean? If the value of the discriminant is zero, it should be that case that is used, right?
This works! Thank you so much. For whatever reason, I always think that the cases are supposed to be conditions and not just values. Thanks a lot.
create a linspace from 1:10000. run a for loop over each element that checks whether that element is divisible by 1111. if it is, remove it. then reshape the resulting vector into a 9x8991 matrix.
The last time something like this happened to me, I had accidentally made my function recursive, exponentially adding data to a structure. I feel like that's possible for a code like this?
Why do you need 9x8991? So all four digit numbers would be 9000, 1000-&gt;9999 (9999 - 999). There would be 9 multiples of 1111, so you would have only 8991. But why does it need to be a 9x8991? Is it repeated? Anyway here is how you could do the first part: all4DigNums = 1000:9999; multiplesOf1111 = (1:9)*1111; for nn=1:length(multiplesOf1111); all4DigNums(all4DigNums == multiplesOf1111(nn)) = []; end; The crux is removing the elements that are equal to 1111, which is best done with [] which deletes the entry of the array at a given index.
I am needing to plot the matrix data against a vector with 9 components.
Ok then you can repmat that vector with 9,1 or 1,9
Thank you for the help! I will try implementing that to see if it works out. &amp;#x200B;
What function do you want the gradient of? What type of objects are the xi? 
Perfect. Thank you, this does the trick.
If you want it to be a column vector, write `x = transpose(2.^(0:64))`
I'm pretty sure `syms` isn't a built-in function with the student version :(
Thanks :)
look at this for the inputs https://www.mathworks.com/help/matlab/ref/input.html 
Right now your function is `ii*x^2` so your derivative would always be `2*ii*x`, no need to rewrite code every time. A numerical alternative, if you feel adventurous, could be to estimate the function at `x` and at `x+0.01`. Basically, it would look like `(f(x+0.01)-f(x))/0.01`. But I wouldn't recommend this. 
Are you paging to disk? dataCur and dataOut are 25GB at double precision. What does your memory and CPU usage look like?
Oi, someone once explained it to me this way, guess I missunderstood/he oversimplified. Thanks, I learned something today, yay. &amp;#x200B;
good thought, though this isnt the problem. A few months ago I put together a system that was designed to handle larger problems like this. * CPU: showing 40-45% utalization of an i9-7940x. The way MKL assigns threads i think this is actually 80-90% utalization, since I wasnt able to get MKL to go over 50% utalization in any tests I ran (you give MKL 1 "thread" per physical core, and it can then assign 2 threads for that core if it detects hyperthreading). This increases to around 60-70% when I start to lose effeciency at the start of each inner loop (maybe indicative of some sort of thrashing occuring???). However, I let it run for a long time and when I got back and looked at it it was only using ~10% or so, but isk what the transition between these looked like in terms of cpu usage Memory: MATLAB is using around 30.5 GB during the main loop. The system has 128 gb available (3500 mhz / cl16). I actually turned off the pagefile entirely just to be 100% sure this wasnt a paging issue. * thermals: Nothing is thermal throtteling (all cores are in the 50s and 60s during the main loop). The system has pretty beefy cooling. * AVX: based on the clock speeds, it is definitely using AVX512 during the MKL call. I almost wonder if this issue could be related to MATLAB not supporting AVX512 (for example, running `version -blas` informs me that the CNR branch (which usually determines if code is run at SSE, AVX, AVX2, etc.) is unknown. MKL is handeling it just fine, but maybe there is some sort of gargabe cleanup issue in matlab that it isnt implementing correctly that is related to avx512?
Thanks for the idea, but I dont think this is it. Memory usage, number of function calls, the code output, etc. are all what Id expect them to be.Ive also re-written the function a few times (to fix other issues) and each time this same problem manifested.
is this a question?
&gt; but since there's "exact value", I imagine I'll have to use the tangent of plot of the Series Expansion. Are you not able to plug `x=1` and `x=20` into whatever function you were originally expanding in the first place? Since that would be how youd normally get the "exact value" part of the equation 
Is this a question or tutorial?
Yes, that's exactly it. Thanks a lot. The "e^x" (on the first member) is the exact value and the "Sigma sum" expansion is the approximation, so I just need to calculate each for a specific value and apply the relative error formula. I was thinking of the "e^x" as a generic "f(x)" image of a function.
&gt;Hi, thanks for the example with the nested for loops, it makes a bit more sense now. However, I'm confused about what the genericLine is doing and the formatting of it in general. Why are you using the fprintf notation not in an fprintf statement, and what do you mean by for each weight, add a tab and a number? Thanks a bunch.
I highly recommend [log4m](https://www.mathworks.com/matlabcentral/fileexchange/37701-log4m-a-powerful-and-simple-logger-for-matlab). I modified it to take additional inputs like fprintf does and pass them on, but even without that it's a solid tool and if it meets your needs it will be much easier than writing your own logger.
Hi! Sorry for the long post. I've got this biology problem. I have certain cells that have these sub-compartments/sub-sections of sorts. Segmenting down to individual cells is easy. Zero out all pixels below threshold to remove background, then imdialate and bwlabel. So now I have to somehow count all these sub-sections of the cell, as you can see in the attached image (3 and 4 sub-sections there). At a minimum I want the number of these subsections; it would also be nice to have the centroid coordinates, maybe area/perimeter, but not required. To detect these sub-sections I was thinking of either imdialate() each separate cell down until I get a good number of segments with the right area, or maybe tracing the outline of the cell's wall and looking for a local minimum. Either one should work, though I have concerns with reliability. But before I go and potentially re-invent the wheel, I wanted to ask: is there a matlab function that could do what I want? I have access to all toolboxes, if needed.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/gpIZRsN.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20e6zmcno) 
Can you give us original image? Watershed is crossing my mind...
Awesome, seems like exactly the function that I would want! At the moment I'm getting too much segmentstion with watershed. Tried bwdist over my bwlabel, and then watershedded that. Still too much segmentation. Will try this next: https://www.mathworks.com/help/images/marker-controlled-watershed-segmentation.html;jsessionid=fc7449543b87f459034582729132 This is a sample image of my cells: https://i.imgur.com/U3UvDdH.jpg
Can you permute things so the inner loop index is the first dimension?
Thanks for your help, I'll look at your link and see if it helps me figure this one out.
If this is your code youn might be missing an underscore in your file name
It's not about where the script is, it's what your working directory is. Try pwd Before you run the script to see the working directory
What about diary? Easy and you get a pretty good log of goings on. 
Keep in mind that the first function is also calculated with some sort of expension and therefore it also has some relative error with the analytical function. 
So...i *could* do this (and will try it to see if it helps), but I had this loop intentionally setup to use the last dimension as the looping dimension so that the actively used data at each iteration would be sequential in memory (well, in virtual memory anyways). It would be kind of funny if this turned out to be the problem, since the data is natively sorted such that the dimension i need to loop over is the first dimension, and I am transposing/permuting the data before/after the main loop to convert from/back to that ordering. Using the first imsnion would make these steps unnecessairy, but at any given iteration (`k`) it would over-write data from elements `[k:N:N^2]` instead of `[N*(k-1)+1:N*k]`
Assuming you want all the images identified in x (i.e., there arent any with index less than 667 that you want to ignore), why not use for j=[1:numel(x)] y = x(j).name; &lt;...&gt; end Since you are using the names that MATLAB identified itself (via the `dir` command), it shouldnt have any trouble re-recognizing them and it elimiinates the possibilities of formatting errors or typos in the names you generate.
This is true, though it is also worth noting that (iirc) most (if not all) transedental functions approximated by the cpu are guaranteed to return the float that is the same as the "true" value rounded to the nearest float, meaning that this error has an upper bound of `eps(x)/2`.If your problem is such that you need to consider errors like this then you probably need to consider ALL the different types of errors introduced by using floats.
Your Y value is a function handle, not an array of numbers. `plot` takes arrays of numbers and plots them, it doesn't know what to do with function handles. 
You're going to have to give more context. Not everybody is in the same class as you, and not everybody uses Matlab for the same type of work as you. What the heck is a cryptosum? Is that a hash? Like md5? 
...and all of them meaningless outside the context of an already horribly overcomplex and broken environment. You're right though, leaving a file handle open is the right way to do it. 
That was a mess I apologise 
What did you try? How do you solve an equation such as, x^2 = 2x - 3 ? Can you use the same reasoning to obtain a function whose zeros solve your problem?
Matlab does a lot of things without telling the user. Matrix division happens to be one of them. When you ask for right matrix division, with **/**, it will find a way to do it via approximation. &gt; If A is an M-by-N matrix with M &lt; or &gt; N and B is a column vector with M components, or a matrix with several such columns, then X = A\B is the solution in the least squares sense to the under- or overdetermined system of equations A*X = B. 
From the documentation on [mrdivide](https://www.mathworks.com/help/matlab/ref/mrdivide.html) (matrix right divide, the `/` operator): &gt; The operators / and \ are related to each other by the equation B/A = (A'\B')'. If you look at [how it computes the left divide](https://www.mathworks.com/help/matlab/ref/mldivide.html#bt4jslc-6) (or `\` operator), you can see what happened. Spoiler alert: it was QR factorization.
This link will help you [create a function in a file](https://www.mathworks.com/help/matlab/matlab_prog/create-functions-in-files.html), and this one will help with [functions](https://www.mathworks.com/help/matlab/ref/function.html) in general. Note that both of them are from MathWorks, the company behind MATLAB. Their documentation is excellent, and you can access it directly from within MATLAB, or by querying your favorite search engine. Since I don't see where you have defined `m`, I'll also give you a link for how to [create and edit variables](https://www.mathworks.com/help/matlab/matlab_env/create-and-edit-variables.html). The ['greater than' operator (&gt;)](https://www.mathworks.com/help/matlab/ref/gt.html) attempts to convert two numeric values to a logical value by determining if the left operand is greater than the right operand. In your case, `m` - a symbolic variable - has no value, and thus there is no way to perform the comparison, yielding your error.
Since your assignment is to do the conversion function, I guess this is appropriate, as you shouldn't use pre-built functions: You can use `dec2bin` to test if your function is returning the correct answer. e.g. &gt;&gt; dec2bin(10) ans = '1010' &amp;#x200B;
Great. If you get stuck anywhere, feel free to ask. 
I didn't originally. When I put them in there, nothing different happened.
Use ( ) not [ ] for your X and y variables
You can also do some of the same things with a singleton pass-by-reference class. 
No, not at all. 
What do you get if you run the command `whos` ? 
Is this ALL of the code you have written? And is this a script or a function? What I would recommend for starters, is putting the following commands at the top of the file. clear; matlabrc; (You could also do clear all, but I'd recommend against hard coding that into files). If there's other things written in the file, or if there's things in your workspace, that might be affecting something. So it's important we see all of the code you have in the file you're running, and how you're running it.
What have you done in class and previous homework assignments? I'm not sure where you think you'd upload your images. You can use Matlab on your own computer. It sounds like you're expecting there to be a "porosity calculator" tool in Matlab that just does exactly what you need. That's not typically how things work. Matlab isn't a calculator for your particular needs, it's a programming language that can be used to do any kind of computation for science and engineering. You generally have to write your own code to achieve your goals, although there are many pre-written tools that can make things easier. The link you posted is to an overview of various segmentation techniques. It sounds like you should be learning how to use read images and process them using Matlab, so you probably want to start by reading the documentation, maybe by searching for functions related to reading images. Open up the help browser and start searching for relevant topics. 
Yeah I'm *really good* at flipping these sorts of things around in my head. You have it the way that should be faster.
Seems like it was pretty well explained! They even told you what function to use! 
 x = input('x ='); %defines number to be converted if floor(x)==x %defines x is an integer count = 1; myRList = []; while x &gt;= 1 r = rem(x,2); %calculated binary digit for each r value answer(count) = r; count = count + 1; %places r values in a vector x=floor(x/2); if count &gt; 30 break; end myRList = [myRList, r]; %puts all r values into a list myRList(end); disp(myRList(end)); %pulls the last row of the list %converts vertical list into string (011 or 110) %flip string (if 011, flip) end else %x is not an integer Answer = 'given x is not an integer'; disp(Answer); %displays "given x is not an integer" end As I stated before, I am creating a Decimal(Int) to Binary Converter. I have made a good bit of updates to the code. I am now getting the correct values, but not in the correct format. As you can see by the comments in the middle of the code, I am struggling to present my list as a string (the string may also need to be flipped depending on how it orients in the string). Currently, this is the answer being produced for x = 6. Correct answer should read '110'. And thank you so much for helping. I cannot explain how much I appreciate it! &gt;&gt; DecimalToBinaryConverter x = 6 0 1 1 &amp;#x200B;
Thanks! Now im getting: 1 1 0 &amp;#x200B; How do you get it to display as '110'
What do you mean "it will find a way to do it via approximation?". The backslash operator is the builtin linear solver. It is without a doubt the most important operation in numerical linear algebra. It also has nothing to do with pointwise division (i.e. A./B). 
Edit: I’ve seen the solve(eqn, x), but I don’t see how to solve this equation in matlab for r for all values of beta between zero and pi? If someone could point me in the right direction, it’d be much appreciated!! 
Are you sure those are numeric, and not *char*?
Actually show us what you're typing into the command window. 
Why not calculate an average of something? And your equation would be adding those 5-10 inputs, then dividing that summation. I'm assuming it's an intro class 
\&gt;&gt; \[imax, indx\] = max(x) Error using max Invalid data type. First argument must be numeric or logical &amp;#x200B; x = 6.1101 5.5277 8.5186 7.0032 5.8598 8.3829 7.4764 8.5781 6.4862 5.0546 5.7107 14.164 5.734 20.27
This is wrong.
Found a solution.. When the data is extracted from a csv file, the data is in the form of a container or table. The next step is to convert the table/container into an array. So: \#extracting data from a table into an array where c is table of data x = c{:, end-1} #this extracts all the data in the first column and transforms the data into an array \#displaying the maximum value in the array and it's index \[imax, indx\] = max(x) &amp;#x200B; &amp;#x200B;
I mean, neither of us *really* know *exactly* what `fread` (or any other builtin for that matter) is doing behind the scenes (assuming you dont work for TWM or otherwise have access to the MATLAB source code). That said, Id agree that is most likey what is happening. Once upon a time and on a different machine, I compared the speed of `fread` (I think with the `'ieee-be'` flag) in MATLAB to the transfer speed of `dd` using different block size paramaters. Its been a while, but iirc the speeds were the same for block sizes on the order of 1k-4k. Adding in the extra overhead that im sure MATLAB has versus `dd` and considering how common 4k block sizes are in modern filesystems, my money is on MATLAB converting every every 4096 bytes. Regardless, its ridiculous that when you call the `'ieee-be'` version MATLAB doesnt automatically execute the equivalent `'swapbytes'` operation, or at the very least put a note in the documentation saying "hey, you can use 'ieee-be', but dont, cause swapbytes is waaayyyy faster." If this were the only time MATLAB did something like this it would be one thing, but there are soo may areas in MATLAB tt a seemingly equivilant replacement can speed up or slow down something by a huge amount (matlab is particuarly guilty of this with sparse array operations.) \\rant &gt; You don't have TB of memory on your machine. God how i wish i did though. I have 128 gb on my machine and I often barely get by without diving into swap space (and im not being sarcastic) But yes, this was a test script i wrote up exclusively to test this, not for verbatim use with TB of data. I have a general purpose I/O function that I spent waayyyy too much time on (but is reallllyy fast) where this will get implemented.
So, segmenting CT images of rocks is an active area of research, and is difficult to do well. The most straightforward approach, which is probably what you professor mentioned was "simple", is the following: 1) Get the grayscale intensities from each pixel (if RGB then average them) 2) plot a histogram of all the grayscale values from all the pixels in the image 3) manually choose cutoffs that roughly seperate the different peaks in the image. The peaks represent different mineral grains 4) everything below the lowest grayscale intensity peak's cutoff is porespace (in pores there is nothing that will coherently reflect the xrays in the CT scan, so there isnt much recorded by the detector and hense it is dark). This is highly dependent on the cutoffs, but for more exact methods you should look into the digital rock physics literature. Source am last (hopefully) year PhD student in computational geophysics. I personally dont do rock physics, but work closely with a good number of people who do.
No wtf
Read up on `reshape` which does exactly what you want. 
Not gonna lie, unless you work at netflix I can't imagine what actual real world use case has TB of data. Even most machine learning tasks dont get quite so heavy.
Do you mean that it is plotting a line instead of points? If so, you could try plot(x,y, r*) which should yield red asterisks for points. I’ve been using python more than matlab lately, but I think that is how change line formatting. Highlight plot and press f1 and it should bring up the help menu for the exact syntax. 
I work with seismic data for resource exploration purposes. Most modern surveys at least a couple TB, and &gt;5 TB is not all that uncommon. They also cover hundreds, in not thousands, of sq. Kilometers of surface area. The largest Ive seen (well, heard of at any rate) is a gargantuan ~150 TB dataset. 
&gt; I am now getting the correct values, but it will not calculate for 0 due to the while condition. If I change the while condition to &gt;=0 it will correctly solve for 0 and any other integer, but it fills up the entire count limit with 0's. Sounds about right. The opposite of `x &gt;= 0` is `x &lt; 0`, right? How many times does it take to get to that condition if you divide 12 by 2 over and over? What about 27? What about 3? The conditional inside your loop to check for counting to 10 is not a terrible idea, but what if the user inputs 5000? I wonder if one or two of those links I gave you might help you give a default answer in case you're not able to enter your while loop... As long as you only need to work on positive integers, you're almost done. Keep at it!
Performing data collection now with lossless compression on full speed video from two camera views. 1 hour of data comes to about 45GB. Our full dataset will be about 2 TB.
Do you have any files or functions named "x" in your working directory?
How about the n^th term in one of the [famous sequences](https://edublognss.wordpress.com/2013/04/16/famous-mathematical-sequences-and-series/)? Ask the user which sequence, then which term (2 inputs), and you can even ask if they'd like to calculate another at the end (3 inputs!). Plenty to choose from, too.
That would be my go-to but unfortunately he already used the quadratic formula example. I was thinking about the total displacement formula for internal combustion engines, theres enough variables there and I think I should be able to break it down into different parts
Awesome I was not aware of this, great info!
[https://imgur.com/a/ABpIKwC](https://imgur.com/a/ABpIKwC) It's just the default. I tired changing the iteration limit to 10 but that didn't really do anything. I tried changing input to different values but that just gave me an error. I just want to be able to plot all the results from 1 to 10 on the same graph.
&gt; I tired changing the iteration limit to 10 but that didn't really do anything. Well, considering that the input is directly connected to the output, and the iterator is just off by itself, that's not surprising! It's acting as a pass-through, as you have it set up. Now, you said: &gt; I just want to be able to plot all the results from 1 to 10 on the same graph. Which results? Are you trying to multiply the input by successive integer gains? Are you trying to add successive integers to the input? Do you have a list of values you'd like to select one-by-one to add to/multiply with/subtract from the input? The outer block acts just like any other subsystem, except that at each time step, the For Iterator inside it outputs all the numbers in its iteration range one-by-one. You need to use that signal to drive something if you'd like it to have an effect. If you want multiple signals, you'll want to use an assignment block; drive the top input with your In1 signal, the middle input with whatever function (of the index) you'd like to apply, and the bottom input with the index so it knows where to assign each result. The output of the assignment block will be a vector containing all the results, including the first result which is just the In1 value. Double-check [this example](https://www.mathworks.com/help/simulink/slref/_mw_4696b6ed-ed9c-4097-9bcf-d76f48ab5ee5.html). Here they're just outputting multiples of 3, but you've probably got something more interesting in mind.
I really like your video on logical syntaxing, but I think you should go piece by piece through the syntax so the viewer knows why certain parameters work the way they do. For example, if for an array called A you gave the command &gt; `A(4, :) = []` you might want to explain to the viewer that `:` means all elements in the dimension (all columns, in this case)
You declare the following: n = [1,2,4]; Making n a vector, but how does Matlab resolve: (f/Fc)^[1,2,4]
A couple of things- 1.) you don't have to define `j = sqrt(-1)` in MATLAB. That is built in. 2.) Do you know what `*` and `.*` mean? You have a lot of things in here which can't work. For instance the part where you say `Q*((f/Fc))` in `F2`. Neither `*` or `.*` will work. `Q` has 3 elements, `f` has 10,000. When you multiply those two vectors together, what are you hoping happens? 3.) Also, you run into the problem with `(f/Fc)^n` If you want to raise 10,000 numbers to 3 powers, what do you want your output to look like? 
I replaced all the * and / with .* and ./ and now only the third function is giving me an error. Are you saying I have to do this? (f/Fc)^1 (f/Fc)^2 (f/Fc)^4
new edit has my updated code with the subplots. Everything is working fine besides the last one not pulling up any plots.
Happy to help.
You'll want to take a look at [split](https://www.mathworks.com/help/matlab/ref/split.html) and [cellfun](https://www.mathworks.com/help/matlab/ref/cellfun.html).
I want to say this in a nice way, because I've been in your shoes, but looking at your code and comments here, it seems like you're just throwing stuff against the wall and hoping something sticks. That's a type of coding that leads to a lot of frustration, and when your problems get more complex, you'll be completely stuck. I challenge you to actually think about your code and what it does, and work on it that way. For instance, why are you setting `n= [1,2,4]` and then immediately overwriting `n` your first time through the loop (same with `Q`)? Does it make sense to you to do that? Also, the purpose of loops is so that you can do something as many times as you want. Imagine if `n` had 1000 elements you wanted to try, would your method be reasonable? A tip: if `x` is an array, and you want the 3rd element of `x` you can write `x(3)` of if you want the jj'th element of `x` you can write `x(jj)`. 
Thanks so much! cellfun was what did it in the end
Haven't done this particular trick before but it's reminiscent of photogrammetry or bundle adjustment. Maybe look for those terms. 
I don't know if there are solvers for that specifically, but there are a variety of general ODE and PDE solvers. 
Anyone can generate an infinite amount of data. Whether that data is actually useful and relevant and wouldn't be better collected and analyzed in another space is a different question.
Pretty sure I wouldn't get paid much for running a random number generator all day, but thanks for pointing out mathematical trivia as if I didn't know it. 
Hi Jumbowater I have the same assignment and my code on changes color if the frquency is 1 or 2.Could you help me?
Ask the user what power of curve they want to find-&gt; Power=input('What power...') Import a picture you want to find the slope of a line or curve on -&gt;imread, image Have the user click the points they want for the curve-&gt; [x,y]=ginput(Power); close; In the background, do a curve fit -&gt; Coeffs=fit(x,y,Power); Output the values with text-&gt;disp('the equation is:',num2str(Coeff(1)),'x^2 + ...') Tada. 
Happy to help.
Thanks for the feedback! Yeah, that video is my favorite one so far actually, I'm really proud of it. For sure, I didn't go over that stuff. The plan was (And is actually) to have a video going over the more basic syntax. It's sortof hard to know where to draw the line on what goes in which video.. :/ Anyway, I should have that particularly question answered in my arrays video (part 5 above). Thanks again! :)
You have a double for loop. You need to vectorize your code.
after you make the legend, use: set(k,'FontSize',20);
Oh man thank you so much! That managed to enlarge the legend for me!
I found a different (wasteful) way and now it works. Thanks a lot anyway. 
Look up polyfit
this could be solved this way i believe, using the constrained linear least-square problem function lsqlin()... i guess you should look it up to m = \[1, 1, 1, 1, 0, 0, 0, 0, 0, 10; ... 0, 0, 0, 0, 1, 1, 1, 1, 0, 28; ... 0, 0, 0, 1, 0, 1, 0, 1, 1, 22; ... 1, 1, 1, 0, 0, 0, 0, 0, 1, 15; ... 1, 1, 0, 1, 1, 0, 0, 0, 0, 18; ... 0, 1, 1, 0, 0, 1, 0, 0, 1, 16; ... 0, 0, 1, 0, 0, 0, 1, 1, 1, 22; ... 1, 0, 0, 1, 0, 1, 0, 1, 0, 19; ... 1, 1, 1, 1, 1, 1, 1, 1, 1, 45\]; C = m(:,1:end-1); d = m(:,end); lb = ones(1,9); ub = lb\*9; x = 2; A=\[\]; b=\[\]; Aeq=\[\]; beq=\[\]; options = optimoptions('lsqlin','Algorithm','interior-point','MaxIter',1000000); x=lsqlin(C,d,A,b,Aeq,beq,lb,ub,x,options) &amp;#x200B;
&gt; polyfit Thanks this is just what i needed. If anyone finds this post via google in the future, this is the code I ran. &gt;Velocity= [0 0.663145596 1.326291192 1.989436789 &gt;2.652582385 3.315727981]; &gt;Pressure=[588399 578592.35 568785.7 519752.45 421685.95 &gt;264779.55]; &gt;p=polyfit(Velocity,Pressure,4) Command Window output: &gt;p = &gt; 1.0e+05 * &gt; 0.0317 -0.3129 0.4971 -0.3386 5.8828
Those aren't roots, they're coefficients. 
What have you tried searching for in the documentation? 
I looked up mesh grid and created images like chessboard. The problem I’m having is making multiple diagonal lines. 
Have you tried searching for "diagonal"?
To be honest, I was distracted by meshgrid so much, I didn't thougt of it until you said. Now I did and "diag" creates for one line only. Maybe I can figure it out with adding similar matrices to it as well. 
Interesting, I saw least-squares come up a lot when I was investigating but I didn't really understand how it could be used to solve this problem. It's not amazing but as long as you round the answers, it's surprisingly decent. Out of the 7 examples I have it managed to correctly solve 3 of them. Thanks for the input, looks like something to experiment with.
Happy to help!
I mean, you can definitely do this with meshgrid. Do you know what a dot product is?
Look at the function 'strsplit'
&gt; You need to vectorize your code. So, I gotta ask, did you even actually look at the code? Or did you just see 2 for loops and say "oh, vectorization must be the solution". The inner loop in implementing a dense matrix * matrix * matrix operation with [1200 x 1200] arrays. If you have a way to further vectorize that (that actually helps) im all ears, but im 99% sure it doesnt exist. Theres also the matter that if you look at the execution times im getting (initially just under 2 minutes per inner loop) and look at the amount of data that is getting run through it (1200 * 1200 * (2049+1) samples) * 8 bytes per sample --&gt; ~23.6 GB / 22 GiB of data 23.6 GB of data every 110ish seconds --&gt; a bit over 200 MB per second
Thanks I’ll try that. 
Dude thanks a lot! 
Use function *'datenum'* and specify the format i.e. 'yyyy-mm-dd.....' to get a Matlab datenumber, then you can use *'datevec'* to get the individual values.
Give [matlab2tikz] (https://www.mathworks.com/matlabcentral/fileexchange/22022-matlab2tikz-matlab2tikz) a try. It creates a TIKZ file, which is basically a text file containing x-, y- data, info about colors, line width, etc. You can then scale the figures, change colors/limits/... in a text editor without MATLAB. 
Maybe play around with imerode() ? Once you get two objects with expected area, then imdialate() each one individually to fill the gaps. 
You need to specifiy the graph size when you print otherwise it just prints whatever size it is on screen. &amp;#x200B; [https://uk.mathworks.com/help/matlab/ref/print.html](https://uk.mathworks.com/help/matlab/ref/print.html) 
Thanks for the reply! I’ve been trying with imerode but it didn’t turn out too well. I was having trouble selecting and refining the strel shape &amp; size I use, but not sure in which direction I should go (I’ve been using disk as the shape). 
Specify paper size and paper units, and it will sort of work. You still may run into crazy font embedding issues. I was having MATLAB output an EPS, and then relacing text using the PSFRAG package in latex. There were a few odd caveats with it, though.
Use the the 'plot3' function. 
What didnt turn out well about it? I'm not a comp sci of course, so my methods are probably not great or efficient, but here is how I would approach this problem 1) Loop imerode and bwlabel until you get two objects with an approximately right area (check that bits regionprops) 2) Once you get two objects with areas above your reasonable area threshold, you've found your objects, and, more importantly, you can now treat them individually 3) imdialate each object separately using the same settings for the same number of iterations as in step 1. Maybe even more, to fill in some gaps. 4) superimpose your two new bwlabel objects onto the same matrix, resolve conflicts somehow (eg whichever pixel is closer to which centroid, or whatever) This should work, at least I dont see a reason why it wouldn't. Oh, and have you tried making a mask by looking at pixel intensity (find yellow in rgb image) or by using the edge function in some capacity? 
But I do not have an explicit function for my T1 and T2. T1 and T2 can only be found by iteration. 0
Set the size and position of the figure using the `set` command. As long as you use the same size for each figure, the relative text sizes output for exported figures will be the same. 
As you're saying "easy enough to avoid when you know about it" - I didn't. Since I chose this solution it's **definately** (cause fuck the system haha) handy to know. I'll keep an eye on it - thank you again.
You can read [this article](https://www.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html) which will give you a full explanation. But to walk you through some things: `A` is a 2D matrix. If you wanted the 2nd row and 3rd column of `A` you could say `A(2,3)`. If you wanted rows 2 through 4 of column 3 you could write `A(2:4,3)`. To understand what the `2:4` is doing, you can type `x = 2:4` into the command window, and you'll see that x is `[2,3,4]`. In MATLAB, to build a vector you use the command `starting_value:step_value:final_value`. However, if you only put in two numbers, then MATLAB assumes `step_value = 1`. So really `2:4` is the same as `2:1:4`. In your case, you are using all 3 numbers, so you are saying your starting value is 2, the step value is 3 and the final value is 11, so `2:3:11 = [2,5,8,11]`. Does this help?
It doesn’t want a function, it wants an array of values
&amp;#x200B;
Brute force seems exessive, linear algebra is more reasonable. You can formulate this problem as a simple linear equation Ax = b, and solve for x. Linear algebra tells you that the solution of this problem is a vector x0, plus a combination any vectors located in the null space of A. The solution x0 can be found super easily using the [sudo inverse](https://en.wikipedia.org/wiki/Moore%E2%80%93Penrose_inverse) of A, and the nullspace using the command N = null(A). Then chose a cobination of vectors in N to obtain an integer solution. Example: A = [1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 0 0 0 1 1 1 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 1 1 1 1 0 0 1 0 1 0 1 0]; b = [10,28,22,15,18,16,22,19]'; N = null(vpa(A)); sol = (pinv(A)*b - 0.25*N(:,1)) 
Brute force seems excessive, linear algebra is more reasonable. You can formulate this problem as a simple linear equation Ax = b, and solve for x. Linear algebra tells you that the solution of this problem is a vector x0, plus a combination any vectors located in the null space of A. The solution x0 can be found super easily using the [sudo inverse](https://en.wikipedia.org/wiki/Moore%E2%80%93Penrose_inverse) of A, and the nullspace using the command N = null(A). Then chose a combination of vectors in N to obtain an integer solution. Example: A = [1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 0 0 0 1 1 1 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 1 1 1 1 0 0 1 0 1 0 1 0]; b = [10,28,22,15,18,16,22,19]'; N = null(vpa(A)); sol = (pinv(A)*b - 0.25*N(:,1)) (the VPA is used to find a *prettier* nullspace)
OK, some questions and thoughts. RE: step 1. From [mathworks help](https://www.mathworks.com/help/matlab/ref/sphere.html), I see that, "[X,Y,Z] = sphere(...) returns the coordinates of the n-by-n sphere in three matrices that are (n+1)-by-(n+1) in size." The default size of 'n' is 20, therefore if I just use the function 'sphere' I am given three matrices that are 21-by-21 in size. Is that correct? This next question is to understand how these three matrices are used to generate the surface of the sphere: looking at a value in the x-matrix, say row 3, col 4. Is it paired with the values in the y- and z-matrix that are located in row 3, col 4? (Thus creating a single x-y-z coordinate point) RE: step 2. The equation of a non-rotated ellipsoid centered at the origin is: x^2 /a^2 + y^2 /b^2 + z^2/c^2 = 1 When a=b=c=1 we recover the equation of a sphere centered at the origin. Therefore the sphere gets either stretched or squeezed depending on the values of a, b, c, in the x, y, z-directions, respectively. I need my x, y, z coordinates to be stretched so I need my a^2 , b^2 , and c^2 values to be less than 1? To me, it makes more sense to multiply my x, y, z coordinates by my eigenvalues...So I'm thinking it would be correct for me to write something like?: [x, y, z] =sphere; x1=x*103.2955; y1=y*127.9054; z1=z*135.6728; figure surf(x1,y1,z1) axis equal However, how do I know which eigenvalues correspond to a, b, c? (as far as I know matlab's default is to list the eigenvalues in order from smallest to largest) I am also totally disregarding the fact that the a, b, c terms are squared...so I'm not sure what kind of error I have introduced by simply multiplying my x, y, z coordinates by the "un-squared" eigenvalues.... I'll stop here. I look forward to any comments you have for me. Thank you for your time. 
Brute force seems excessive, linear algebra is more reasonable. You can formulate this problem as a simple linear equation Ax = b, and solve for x. Linear algebra tells you that the solution of this problem is a vector x0, plus a combination any vectors located in the null space of A. The solution x0 can be found super easily using the [sudo inverse](https://en.wikipedia.org/wiki/Moore%E2%80%93Penrose_inverse) of A, and the nullspace using the command N = null(A). Then chose a combination of vectors in N to obtain an integer solution, ie sol = x0 + u* n1 + v * n2. Example: A = [1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 0 0 0 1 1 1 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 1 1 1 1 0 0 1 0 1 0 1 0]; b = [10,28,22,15,18,16,22,19].'; N = null(vpa(A)); sol = (pinv(A)*b - 0.25*N(:,1)) % x0 - 0.25 * first vector of nullspace Then there are only a handfull (4 to be precise) of combination to check, and sol = [ 4, 3, 1, 2, 9.0, 5, 6, 8, 7] is easily found Notes: the VPA is used to find a *prettier* nullspace, this can also be achieve using elemetary math; tinny numericals errors results in solutions like 3.0.
**Moore–Penrose inverse** In mathematics, and in particular linear algebra, a pseudoinverse A+ of a matrix A is a generalization of the inverse matrix. The most widely known type of matrix pseudoinverse is the Moore–Penrose inverse, which was independently described by E. H. Moore in 1920, Arne Bjerhammar in 1951, and Roger Penrose in 1955. Earlier, Erik Ivar Fredholm had introduced the concept of a pseudoinverse of integral operators in 1903. When referring to a matrix, the term pseudoinverse, without further specification, is often used to indicate the Moore–Penrose inverse. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
You're very much on the right track. To understand what the `sphere` command returns, look at `meshgrid` which is a function which builds the inputs required for a function like `surf`. But you are correct, it creates arrays of ordered points, so X(n,m) is paired with Y(n,m) and Z(n,m). And yes, if you want to scale your radii, you can simply multiply by radius you want. So, for instance `x1 = x*r_x` where `r_x` is the radius in the x-direction. How do you know which eigenvalue goes with which axis? Well- you are right the eigenvalues are returned in a 'random' order (normally smallest to largest, but not always). However, what's important is they are paired with their respective eigenvectors- that is `D(1,1)` goes with `V(:,1)`. That's why the `V` matrix serves as a rotation matrix. And finally, instead of scaling by the eigenvalues of your P matrix, you can just take the square root of them- aka `x1 = x*sqrt(D(1,1))`.
Right... I mean, the speaker says it with ~10 seconds of where the video starts. That's just lazy posting but, I'll give a point for mathematica as I love that program more then anything. 
Yeah, so like /u/Weed_O_Whirler said, just plot the values then. The values can only be found by iteration... So iterate to find the values, then plot them. I'm failing to see why an explicit function matters. 
It doesn't transpose it, but computing the adjacency matrix with `'weighted'` as an argument does compute the weighted adjacency matrix, in sparse form. The [full](https://www.mathworks.com/help/matlab/ref/full.html) command just changes it from sparse representation to normal matrix representation. You can take the transpose of H after `full` if needed. When in doubt, do a toy problem on paper and double-check!
Ah okay so after doing B = adjacency(G,'weighted') and H=full(B); I can just transpose it by doing H = transpose(H); ? &amp;#x200B;
You may want to try out watershed segmentation
Thanks, i'm going to save the comments i've gotten and work on getting better.
I figured out what I did Working code is here (code) &gt;&gt; g = 1 &gt;&gt; while(1) Health_Stats(g).Name = input('Enter your Name ','s'); Health_Stats(g).Age = input('Enter your Age in years '); Health_Stats(g).Weight = input('Enter your Weight in pounds '); Health_Stats(g).SBP = input('Please enter your SBP '); Health_Stats(g).DBP = input('Please enter your DBP '); Health_Stats(g).Height = input('Please enter your height in inches '); m = input('Do you want to continue (y/n) [y]:','s') g = g+1 if m == 'n' %% debugging disp(g) break end end &gt;&gt; struct2table(Health_Stats) 
Hi I tried your method, it worked fine until step 2, but in step 3 after running imdialate, the object gets connected again...am i missing something here? Thanks!
Yes. You can also chain those commands together by giving each as an argument to the next: H = transpose(full(adjacency(G, 'weighted')));
Thanks for the help!
I'd go to /r/dailyprogrammer or /r/dataisbeautiful. The former have daily challenges at different levels, the latter have monthly challenges. 
Hello there! I just finished my script to combine synchrone 2 videos into 3D coordinates of honey bees flying around. It works fine it just takes way to long and we do not have enough computers to compute all the experiments. tThe videos are HD (720p) at 250 frames per second. For 4 minutes of video my recent i3 (3.6 GHz) PC needs little over a day. Maybe you can have a look if there is room to improve the code. I do not allocate a big important structure, because I don't know how, even thou I know that would most likely help. Any suggestion would e greatly appreciated. If you need anything let me know! (I am in China, so responses might be late some times) 
Shouldn't 'count' have an uppercase C in the loop and the display argument, or am I missing something? 
You are not missing anything! (exept for maybe MORE mistakes!: The loop is wrong, "Display" should be disp() there are no semicolons etc.). I did it on a mobile phone (hence the nice capital letters at the beginning of lines). And of course i'm not going to give the guy/gal perfectly working code. I'm not going to do his/her homework.
Soooooo, what's the question? If you code runs fine and the result corresponds with what you expect/calculate yourself by hand. Then its good right? Btw: a tip for formatting. if you put 4 spaces before each line of code it becomes much more readable: like this!
I missed a lot then, thanks for pointing all those things out! I'm new to this, trying to mix-up my learning process with some analyzing of code snippets! :)
Using the sudo-inverse and naïve nullspace fiddling should be faster than intlinprog. tic N = null(A); N = N/N(2); sol = pinv(A)*b; sol = sol - mod(sol(2),1)*N; % an integer solution if length(unique(sol))~=9 || min(sol)&gt;0 || max(sol)&gt;10 for j = -9:1:9 sol_tmp = sol+j*N; if length(unique(sol_tmp))~=9 &amp;&amp; min(sol_tmp)&gt;0 &amp;&amp; max(sol_tmp)&lt;10 sol = sol_tmp; break end end end toc*1000
Your code is almost right but `if mat&gt;0&amp;mat&lt;1` should become `if mat(i)&gt;0 &amp;&amp; mat(i)&lt;0` When comparing two logical statements/booleans, &amp;&amp; and || are used.
Very good! That's a very nice practical way of learning.
Using the sudo-inverse and naïve nullspace fiddling should be faster. Here &lt;3ms for each problem. tic N = null(A); N = N/N(2); sol = pinv(A)*b; sol = round(sol - mod(sol(2),1)*N); if (length(unique(sol))~=9 || min(sol)&lt;=1 || max(sol)&gt;=9) for j = -9:1:9 sol_tmp = sol+j*N; if (length(unique(sol_tmp))==9 &amp;&amp; min(sol_tmp)&gt;=1 &amp;&amp; max(sol_tmp)&lt;=9) sol = sol_tmp; break end end end toc %%%%%%%%% I accidentally removed my previous comment, here it is again. If you want to use optimisation, use mixed-integer (linear) optimisation: A = [1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 0 0 0 1 1 1 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1]; b = [10 28 22 15 18 16 22 19 45].'; sol = intlinprog(zeros(1,9),1:9,[],[],A,b,ones(9,1),9*ones(9,1)) Here, it is only important to enforce the constraints (the cost function is not important, f = 0). If the correct solution is not found*, simply add combinations of the nullspace of A to the solution to obtain the correct one. *edit: In this example, the correct solution is always found.
Using the sudo-inverse and naïve nullspace fiddling should be faster. Here on my flimsy laptop 1ms for each problem is easy to obtain. tic N = null(A); N = N/N(2); % for these problems, it just happens than dim(N) = 1 and N(2) ~= 0 sol = pinv(A)*b; sol = round(sol - mod(sol(2),1)*N); % find possible integer solution if all(sort(sol)==1:9) for i = -9:1:9 % naïvely iterate trough null space to find correct solution sol_tmp = round(sol+I*N); if all(sort(sol_tmp)==1:9) sol = sol_tmp; break end end end toc The round command is only used to remove small numerical errors (ie 9.00001 to 9.0). %% **I accidentally removed my previous comment, here it is again.** %% If you want to use optimisation, use mixed-integer (linear) optimisation: A = [1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 0 0 0 1 1 1 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1]; b = [10 28 22 15 18 16 22 19 45].'; sol = intlinprog(zeros(1,9),1:9,[],[],A,b,ones(9,1),9*ones(9,1)) Here, it is only important to enforce the constraints (the cost function is not important, f = 0). If the correct solution is not found*, simply add combinations of the nullspace of A to the solution to obtain the correct one. *edit: In this example, the correct solution is always found.
The thing is, Simulink is a continuous process and not procedural. Signals are transformed inside, so trying to go back in time won't work unless you specifically save that data somewhere (such as a RAM block, a latch-type register using enables, etc.). You can compare the previous times using unit delays, but it won't be an specific time, rather the last N samples. &amp;#x200B; For instance, if your battery function requires the last 3 temperatures, you can feed them as inputs using 3 unit delays (with different delays).
The thing is, Simulink is a continuous process and not procedural. Signals are transformed inside, so trying to go back in time won't work unless you specifically save that data somewhere (such as a RAM block, a latch-type register using enables, etc.). You can compare the previous times using unit delays, but it won't be an specific time, rather the last N samples. &amp;#x200B; For instance, if your battery function requires the last 3 temperatures, you can feed them as inputs using 3 unit delays (with different delays).
Perhaps I'm misunderstanding, but why are you capturing the images and converting them to PDF? Why not save them straight to a PNG and include them as a figure? I've had a lot of success that way, and you can specify in your MATLAB code to save your figure to a specific directory (like where ever you've told LaTeX to look for images). So if you need to adjust something, you just rerun the MATLAB code, and then recompile your LaTeX.
This is a lot more complex than you might think at first, but it would involve priming both cameras to capture on an external trigger (electrical pulse), and then triggering them at the same time. Not sure how this can be done with the image acquisition toolbox, since I've never used it. 
You could just reference the matrix with a Boolean instead of using loops and statements
Not familiar with the image acquisition toolbox, but I can think of 1 way this might work. Do you have the parallel processing toolbox? if so, you could try something like this: p=gcp; ff(1)=parfeval(p,@imageTakingFunc, M, input1, input2, ..., inputN, 1); ff(2)=parfeval(p,@imageTakingFunc, M, input1, input2, ..., inputN, 2); function [out1,...,outM] = imageTakingFunc(input1,...,inputN,picNum) if picNum==1 % very short wait to compensate for this being called first? Maybe? Maybe not? end &lt;...&gt; end This (assuming no syntax errors) should launch the jobs asyncronously, allowing them to run at the same time. Use `picNum` to tell the code instance which camera to trigger. That said, idk how perfectly synchronized this is capable of getting. If you need the pictures to be taken within an *extremely* short window this might not work. 
Lol no worries, Ive mixed around dimensions soo many times iworking on this it isnt even funny (there are 8 different data dimensions funneled into that inner matrix * matrix * matrix operation...) At any rate, i still have no idea *why* this is occuring, but it seems to be related to thread scheduling, not memory. [these images](https://imgur.com/a/bGsAYGl) show it running fast (first 2 images) vs slow (last 3 images). For some reason it is initially assigning threads in a way that (im guessing) is causing massive cache thrashing, and for some reason it takes longer and longer to recover from this each run. Im half convinced it is a good ole fashioned bug with matlab (and perhaps related to this using avx512, which matlab doesnt seem to understand).
&gt; When comparing two logical statements/booleans, &amp;&amp; and || are used. This should actually be written: When comparing two *scalar* logical statements/booleans, `&amp;&amp;` and `||` *can be* used, *and enable short-circuiting behavior*. The `&amp;` and `|` operators can be used on either vector or scalar quantities, but do not allow short-circuiting; their double versions allow the comparison to end early. This is useful in the case where a variable may not have a value at the time of comparison, for example: if ~isempty(A) &amp;&amp; A &gt; B Aside from that, the answer is nearly correct: if mat(i) &gt; 0 &amp;&amp; mat(i) &lt; 1 The second comparison needs a one instead of a zero. A number can't be both greater than and less than zero! [Documentation for short-circuit, scalar operators](https://www.mathworks.com/help/matlab/ref/logicaloperatorsshortcircuit.html) [Documentation for general vector operators](https://www.mathworks.com/help/matlab/logical-operations.html)
If you're looking to improve, you should try the [Cody Challenge](https://www.mathworks.com/matlabcentral/cody/groups/2)!
Is this done by inserting a matlab function block into simulink with the code for this there? Ie after the block that creates (x2-x1) have this go into the matlab function then this block into the K gain?
Not sure if there is a way to get it directly, but you could print the figure to png and load it with imread. 
So for the Square if the inputs for the length and width are the same then it should print the area, however if the inputs are different, then I want it to print 'The length and width must be the same'. Idk if that makes sense. Thanks for responding!
Yeah just remove the elseif check of the input type, and leave the if(side1==side2) do this, else print error. 
I'm sooo sorry. I'm still confused. If I remove the input how can I have it find the area of the square or rectangle? 
So when I run \[this,\]([https://hastebin.com/raw/kicuguqoce](https://hastebin.com/raw/kicuguqoce)) and the first inputs are not the same, then it only prints the error and not the area of the rest of the values. Sorry for the bother, I'm still getting used to matlab.
Not sure what you mean by 'first inputs', or 'only printing the error', I thought that was the purpose of the errors you wrote? Sorry I'm on my phone so it may be something I'm just not seeing 
Mb I didn't explain properly. So Ive created these dummy values in an excel worksheet that correspond to the areas. So for square width and square length, all values in pairs are the same. But let's say one pair was not the same, then I would want it to show up the error, along with the rest of the calculations in the order of the array. If you need to see the Excel file, I'll link it in a bit. 
&gt; due to a step entry in the system, the simulation just stops and take a really long time to process Step reference command? Does it stop or does it just take longer than you want, not clear on that. Can you show the block diagram and any results?
[https://imgur.com/tqZfeQu](https://imgur.com/tqZfeQu) This is the block diagram, where C1 and C2 are the controllers and G1 and G2 are the transfer functions. The inside loop is controlling the current in relation to the duty cycle of the converter and the external loop is controlling the voltage in relation to the controlled current. I'm trying to use a step from 20 to 82 Volts, it doesnt stop, but it takes a really long time than it should and stops at a certain point (and never comes back).My computer isn't a bad one and i tried to run in differente machines too.
Have you watched the scope while it's running? Does the output go to infinity? I ask because I suspect you're missing an integrator somewhere.
It doesnt go to infinity, the transfer function of the controller already has the PI,its just that I did the adjusments in matlab and just brought them from the workspace, I've watched the scope and it did stabilize at the setpoint (82), with some overshoot due to the integrator, my only problem is that it takes 2-3 hours to simulate 1 or 2 seconds of a simple plant like this :( is it really normal? The percentage of the simulation always stop at the time that the entry step is changed.
You're welcome. Have fun!
I have used simple buck equations(considering switch open and close, using space-state and linearizing), as you can see in this img [https://imgur.com/a/acczftA](https://imgur.com/a/acczftA) . I haven't modeled these parameters you said, maybe I should reconsider re-modelling the buck components...
How about the controller transfer functions, are they second order or lower? Those look okay. Just checking for high model order, don't worry about adding extra components.
Both are first order, with only 1 zero(from the integrator, and the proportional gain) But I have checked right now and one of the controllers has a proportional gain of 4x1e6 and the other has a proportional gain of 2e-6, but the capacitor has a very low order too (1e-8) so i dont think these gains are messed up that much.
Can you step from 20 to 25 volts without problem? If not, try modeling just the current loop. and see if you can give duty ratio step commands.
I don't think consecutive cross-product is a well-defined, per se.
Thank you! 
Ah, thanks for the catch.
I think you might need an extra look at your parenthesis, at least from what I can see.
Ok thank you - am I even vaguely on the right lines otherwise?
Where are you getting the constant 0.4342944819 from? It seems to be in the place where the log base e (the [natural logarithm](https://www.mathworks.com/help/matlab/ref/log.html)) should be... Try a pattern like this: 1 T = AMP*() 2 T = AMP*(sin()*() - cos()/2*log()) 3 T = AMP*(sin(alpharad)*(atan() - atan()) - cos(alpharad)/2*log(()/())) 4 ... Just work inward creating placeholders for each function or term and fill them one-by-one. Take some time to re-familiarize yourself with the functions involved, as well: [Natural Logarithm](https://en.wikipedia.org/wiki/Natural_logarithm) [Trigonometric Functions](https://en.wikipedia.org/wiki/Trigonometric_functions)
I didn’t really understand log base e and read that that’s what it was equal to so I thought instead of questioning if I’d got the formula right I’d cut to the chase and stick in what it was equal to. Thank you so much for the links and the suggestions- I’ll give it a go! 
I would try breaking it up into different parts and putting it together. For example if I have a long quotient like A/B, have a variable A and B and divide the two.
split the equation up into different parts. everything within brackets can become one variable. for example: that log base e(...) can become log base e(A) where A = [((x+d)^2+h^2)/((x-d)^2+h^2))] also log e is the natural logarithm, not a constant. in matlab, this is given by https://nl.mathworks.com/help/matlab/ref/log.html
Thank you!
Great, cheers
Yep. Too bad. Thanks for the reply.
I'm going to try that, posting the results later, thanks!
Same result, I think this problem is happening because I'm not familiar with the solvers and step sizes configurations, its all on 'auto'. Gotta search mathworks forums and learn to configure it properly
I just made a for loop that animated the graph with extremely small pauses for each loop using the arrays that ode45 gave me. 
I dont, just commenting because I'm also interested in this
Read the documentation for the input arguments to [xlswrite](https://www.mathworks.com/help/matlab/ref/xlswrite.html): [Filename](https://www.mathworks.com/help/matlab/ref/xlswrite.html#btmdr27-1-filename) [Data](https://www.mathworks.com/help/matlab/ref/xlswrite.html#btmdr27-1-A)
I've used this in eclipse. It would be a great feature, but Matlab doesn't have it, unfortunately. 
Do you, OP? Have you been taught how this works? It's common in first year engineering statics classes. 
There is a book by McGuire, Ziemmian and Gallagher. Go to your library and check out a copy.
C = formula(C) C(1) =&gt; a(t) 
I would send in two messages to technical support about this. I cant help with the first one, but I do actually know a bit about the second issue. Basically localhost on your machine is not mapped to the right IP address. We have seen two other cases of this happening for unknown reasons. Contact technical support to get it fixed or google how to map localhost to 127.0.0.1 on a Mac
Might just be easier to export your simulation engine or its data stream to python than implementing a RL library in Matlab. 
Thank you so much!!
Your `meshgrid` line is right, and you've put in some good work. When you write the condition `abs(x) &lt; 1`, you get an array of logical values, which are 1 where -1 &lt; x &lt; 1, which in your case will be a matrix. When you say `z = ones(41)`, you would fill a 41x41 matrix with ones and assign it to `z`; but this only happens if your condition evaluates to true. Since it's a matrix condition, with mixed results, you might now guess that this wasn't ever going to work. How does it determine a single conditional state based on multiple inputs? Put a breakpoint on both paths of your conditional and see which it's entering! You'll either want to use [logical indexing](https://www.mathworks.com/help/matlab/math/array-indexing.html#d120e1410) or [double](https://www.mathworks.com/help/matlab/ref/double.html) and conditional statements to define z. The example in the documentation should be good for logical indexing. For an example of the second way: x = 1:10; z = double(x &gt; 2);
Interesting. Are you in the US? When I [search Google](http://lmgtfy.com/?q=matlab+reinforcement+learning+policy+gradient), I get a [great result](https://www.ias.informatik.tu-darmstadt.de/Research/PolicyGradientToolbox) as the very first link. Someone is working on building a toolbox for this exact problem, and the files are available there with a complete explanation. Maybe your country (if not US) is blocked? Who knows...
Well, actually `plot(x,y)` *does* work, just not the way you think it does. In Cartesian coordinates, `x = r*cos(theta)` and `y = r*sin(theta)`. If you'd like to use plot, you'll need to convert your polar coordinates to Cartesian first. Alternately, improve your [Google-fu](http://lmgtfy.com/?q=matlab+polar+plot)!
Matlab provides many tools. There is a specific plot command for plotting with polar coordinates called [polarplot](https://www.mathworks.com/help/matlab/ref/polarplot.html).
If you click the link, the first result in the search does exactly what you want. In the future, try searching for: "matlab &lt;thing you want to do&gt;" There will likely be either a built-in tool, a toolbox containing a tool, or someone else's code on the FileExchange that you can use to do just about anything you can think of.
Ah i see. Thanks you for the help i ll be sure to check it out. Have a nice dayy
You're welcome. Have a good one.
If I understand correctly, z should become a matrix of logical 1s and 0s right? But when I do the indexing within the if statement it keeps throwing the error that z needs to be a matrix 
You probably want to use a plotyy or just specify the position of. Your axis so that they align. Helpful hints set your axis and figure units to inches (or cm) so that you can more easily size things. 
Ode45 can handle equations with conditions. K x (x&lt;0) and K (x-x_pos) (X&gt;x_pos) Something like this can give you a bumper train between two springs. It can be made entirely in matlab without use of simulink. 
sounds silly, but you can put them all on the same axes using hold on; it holds what you've already plotted, and you can throw multiple plot()'s on the same axis
This worked, thank you for your help, it makes much more sense now
[You could use an Arduino](https://uk.mathworks.com/hardware-support/arduino-matlab.html). I use some National Instruments hardware. As far as sensors etc. you'd be better off getting started with an arduino and some specific guides for working on the tasks you are interested in. Due to the ubiquity of the boards there are usually guides for just about everything you can think of.
@OmgMacnCheese thank you, could you please tell what exactly you mean by export the simulation engine to python? and one of the issues to export the data into python would be it would take a lot of data to be separately stored into excel or csv files and further it is not feasible to recreate the visualization in matlab after processing in python. @angrmgmt00 thank you, I am studying in Germany. Could you please post the link
@OmgMacnCheese thank you, could you please tell what exactly you mean by export the simulation engine to python? and one of the issues to export the data into python would be it would take a lot of data to be separately stored into excel or csv files and further it is not feasible to recreate the visualization in matlab after processing in python. &amp;#x200B;
@angrmgmt00 thank you, I am studying in Germany. Could you please post the link
To be honest, just do the MatLab Academy courses. They are interactive, free (if you have a license), and give you an intro to just about everything mentioned here. I'd be skeptic of anything advertising that you can become a master with a 2 hour video. 
https://matlabacademy.mathworks.com/ Has a great starter course, and also one for financial applications and for data science. It is interactive and free. 
To support my research, I wrote a script that runs OCR on a proprietary instrument's output. The problem was the data would display on screen real-time but I couldn't access the actual data until the test was complete.
FYI - the `end` keyword is often useful for things like this, since you can run A([end-1:end],[end-1:end]) and always get the bottom-right-most [2x2] matrix, regardless of how large A is (So long as it is at lease [2x2], though to safe guard that you can use `[max(1,end-1):end]` instead)
I already did. If you click (or tap, if on mobile) the words "great result" in my comment, it will take you there. You're welcome, and good luck.
To add to other replies, if you look over at the sidebar you'll find a section titled "Places to learn Matlab". That's a good place to start. ----&gt;
I think linkaxes just allows all the axes to be the same, but not shared.
Well I want the four plots to all be separate, rather than all on the same plot. I just want the axes to be shared.
I would ask here instead: [https://github.com/fieldtrip/fieldtrip/issues](https://github.com/fieldtrip/fieldtrip/issues)
Thanks for the pointer! I'm new to coding so I don't know where my questions are best directed.
Not sure fully what you mean by 'longitude labels along the equator' but you can define which ticks you want and the labels you want to by having a look here: [https://uk.mathworks.com/help/matlab/creating\_plots/change-tick-marks-and-tick-labels-of-graph-1.html](https://uk.mathworks.com/help/matlab/creating_plots/change-tick-marks-and-tick-labels-of-graph-1.html) Or if you really can't get it to work you can manually do it in figure options. &amp;#x200B;
Is this through simulink block? Or coded within a script?
Good starter book is the one by Stormy Attaway, if you don't have any programming experience. Just be sure to write code. A lot. That's the way to learn. every chapter, write code, test code, tweak code, break code, figure out why it is broken, fix code, rebreak code, fix it again.
I think your tspan might be assigned incorrectly. The linspace function's third input isn't the space between steps, it's the number of steps you want between tstart and tend. So you're saying you want 0.1 steps between 0 and 100. If you want a spacing of 0.1 between each step, try linspace(0,100,1000). 
Of course I know it. :) I solve the problem today. Anyway, thanks for help. &amp;#x200B;
RE 'meshgrid': I understand how this function works now after viewing a few references, and how it is used by the 'surf' function. As part of my exploration of understanding, I wondered how exactly the 'sphere' function was populating its x, y, z matrices. As close as I can tell, it is running a code somewhat similar to [this code](https://stackoverflow.com/a/38064820), as shown here: N = 21; thetavec = linspace(0,pi,N); phivec = linspace(0,2*pi,2*N); [th, ph] = meshgrid(thetavec,phivec); R = ones(size(th)); % should be your R(theta,phi) surface in general x = R.*sin(th).*cos(ph); y = R.*sin(th).*sin(ph); z = R.*cos(th); figure; surf(x,y,z); axis vis3d However, the values I see for x, y, z when using this code does not match the values I see for when I used '[x,y,z]=sphere'. RE the code I am trying to build: OK, so updating my code to something like this (per your help): [x, y, z] =sphere; x1 = x*sqrt(D(1,1)); y1 = y*sqrt(D(2,2)); z1 = z*sqrt(D(3,3)); figure surf(x1,y1,z1) That is the conceptually easy part. What I'm wrestling with now is how to bring the eigenvectors into the picture (or into the code). Somehow I need to make these eigenvectors act to rotate all the values that makeup the x1, y1, and z1 matrices, is that right?
Would you say that this is a problem primarily related to the complexity of your script, a built-in problem in matlab itself, or a problem with the data equipment you were using?
Do you combine arduino with national instruments hardware, or as separate projects? My long time goals are stability and scaleability, so National Instruments kind of instinctivily sounds like a better choice, but i am maybe underestimating the power and quality of arduino?
Definitely a quirk of the instrument itself. The instrument in question was Optotrak, which is a proprietary software/hardware system that registers the location of infrared markers in XYZ at a specified interval. During the test, I can only view the XYZ of each marker at the present moment, do simple calculations, or simple plots. After the test is done, I get a full spreadsheet of all of the data points.
Well honestly I wouldn’t put MATLAB in the control loop, I would prefer to keep everything running on a separate micro - possibly an arduino - or something so that the timing is tighter, then output things over serial to MATLAB for monitoring. You can design and test the models in MATLAB then port the code using the Coder toolbox as well which I would recommend because then you know it works in theory.
This would be a lot easier with fprintf than disp. 
Without running it, my best guess is that all the `*`'s and `/`'s in `t` and `u` should actually be `.*` and `./`
I ended up finding this function, which does exactly what I wanted and is all around a great function. [https://www.mathworks.com/matlabcentral/fileexchange/39664-subtightplot](https://www.mathworks.com/matlabcentral/fileexchange/39664-subtightplot)
[PDF for mechanical system](http://www.eng.auburn.edu/~tplacek/courses/3600/ode45berkley.pdf) This should give you an idea of how to build a mass and spring. Then try to build a spring that only works below 0 and throw the mass towards it (set initial velocity negative, and initial position above 0) 
Hmm, you certainly seem to have improved the efficiency of my function, but not the accuracy. Maybe I'm misunderstanding the math? Still getting false negatives and positives. 
As I understand parfor, there is still some top-level variable which is iterated through, ie: parfor loopVar = initVal : endVal; statements end and the different values of `loopVar` is essentially what is spread accross all four cores. Therefore you can use the variable `loopVar` to become part of your filename to which you save, and the ls command to see how many files you have already; eg. setup ... numFiles = size(ls([pwd, "/sim*"), 1); baseDirectory = [pwd, "sim", num2str(numFiles + 1)]; mkdir(baseDirectory); baseDirectory = [baseDirectory, "/"]; ... parfor loopVar = 1:96 ... filename = [baseDirectory, "run", num2str(loopVar)]; save(filename, variables); end This way you can for every time you run it automatically make new folders and files within your working directory to save your results in. Note that I have assumed linux-based folder indexing, so you may need to change all of the forwardslashes to backslashes if you are using Windows. Does this make sense?
Silly human, you have misspelled **accross**. It's actually spelled **across**. Learn to spell :)
Acrost 
Just a quick note, you can use [fullfile](https://www.mathworks.com/help/matlab/ref/fullfile.html) to build a full file path string with platform-specific file separators. You can also explicitly query / access the platform-specific file separators with either [filesep](https://www.mathworks.com/help/matlab/ref/filesep.html) or [pathsep](https://www.mathworks.com/help/matlab/ref/pathsep.html).
Fucking bots WTF 
Where did you get the objective function? On first glance it looks like there's no solution (just set `X_i,j` equal to the negative of the sign of `a*d_i,j` times an arbitrarily large integer.
You can run truly parallel 2 tasks only: one on each core. Running more will cause switch of context and will only make things slower. On the top of processor time, the performance can be hindered by the time to access the memory, especially if memory is not re-used and the processor cache needs to be re-loaded. This part is a bit difficult in MATLAB as it manages memory for you.
The cores will switch between tasks. One will wait while the other is being run on the core. They take turns. This is the same way you can browse Facebook, listen to music, and run Matlab at the same time.
Fight fight fight fight!
Thanks so much for the help! I was able to stop getting NaNs by shifting my cfg.toi away from the bounds of my data, and eliminated the singleton dimension by removing cfg.keeptrials from my structure as I only have one trial. So now I want to create trials so I can have a valid 4d output like you're saying (without the 4th dimension, calculating power correlations returns errors). &amp;#x200B; I know that usually ft\_definetrial is used in preprocessing, but I'm importing my data straight from EEGLab. I tried to just definetrial the .set from EEGlab and run it through normal preprocessing, but I got the same 3d matrix which doesn't allow me to compute power correlations. How should I use the below code? &amp;#x200B; `cfg.dataset = fullfile(savespec, ['NAPLS_01_0066_1ppi_mr.set']);` `cfg.trialfun = 'ft_trialfun_general';` `cfg.trialdef.triallength = 1;` `cfg.trialdef.ntrials = inf;` `cfg = ft_definetrial(cfg);` &amp;#x200B;
There is a way to define your trial structure directly within cfg if I remember correctly. There is some documentation on this for exactly the reason you have, since you are importing from another source. The NaNs come from the loss of support around the start and endpoints. I may be able to help more when I get back to my computer 
Each core can only do a single computation at a time at the designated clock frequency, so no, you won't see any improvements. It may actually slow the process down.
Which kind of calculations do you have to do? Maybe you are able to make them much more efficient? If you are willing to share the script, I can have a look 
Your operating systems kernel makes that decision, ultimately (although it's actually more complicated). Most stuff isn't using a significant amount cpu if it's just sitting idle. 
The built in [mean()](https://www.mathworks.com/help/matlab/ref/mean.html) function can resolve means across an entire dimension of your data. It sounds like the data is stored in a cell of dimension 1 X 100, with each cell element being a 61 X 61 matrix. This prevents mean() from working as it cannot operate directly on a cell array. However, you should be able to transform it into a 61 X 61 X 100 matrix for mean() to operate on. new_data = reshape(cell2mat(old_data,[61 61 100])); mean(new_data,3) This breaks your matrix into a cell with cell2mat(). Then restructures that matrix from 2D to 3D allowing the third dimension with reshape(). This allows it to be used for averaging by mean().
This makes sense to me logically, thank you for the explanation. However I'm getting an error &gt;Error using cell2mat &gt;Too many input arguments. Not sure if this info helps but: I tried cell2mat(old_data) without the dimensions and it gave me a 6100x61 matrix. 
I've found readtable to be the easiest way of doing text file parsing, by far. 
RE: Step 3. Was something like this what you were thinking? (If no, could you educate me on what I have done wrong and/or how you were thinking?) Pmatrix = [200 50 40;50 150 30;40 30 100]; [R,D]=eig(Pmatrix); [x, y, z] =sphere; x1 = x*sqrt(D(1,1)); y1 = y*sqrt(D(2,2)); z1 = z*sqrt(D(3,3)); figure; hsurf = surf(x1,y1,z1); %# capture the handle, i.e. the unique identifier, of the surface axis equal; %# Make tick mark increments on all axes equal xlabel('x'); ylabel('y'); zlabel('z'); psi1 = atan2d(R(3,2)/cos(theta1),R(3,3)/cos(theta1)); %rotation around x-axis in degrees theta1 = -asind(R(3,1)); %rotation around y-axis in degrees phi1 = atan2d(R(2,1)/cos(theta1),R(1,1)/cos(theta1)); %rotation around z-axis in degress direction = [1 0 0]; %rotate the surface plot psi1 degrees around its x-axis rotate(hsurf,direction,psi1) direction = [0 1 0]; %rotate the surface plot theta1 degrees around its y-axis rotate(hsurf,direction,theta1) direction = [0 0 1]; %rotate the surface plot phi1 degrees around its z-axis rotate(hsurf,direction,phi1) view([-36 18]); %# Change the camera viewpoint 
That output is good news, but my code has a typo anyway. cell2mat() is flattening out the data on the first dimension, so 6100 is from the 61 * 100 entries. new_data = reshape(cell2mat(old_data),[61 61 100]));
Worked like a charm! Thank you, I really appreciate the help.
This is possible by simply pausing the script. I'm going off of memory but in the editor there should be a drop down menu (I believe by the debugging stuff when it's paused) which you should be able to select between MAINSCRIPT, FUNCTION1, OPTIMIZATIONFUNCTION, PARALLELFUNC. Select FUNCTION1 and you can see the variables within it's scope.
If the data you are trying to access is inside the parfor loop, you might be out of luck. As far as I know, pausing does not work inside a parfor loop, as it wouldn't know what index of which function to stop on. But if it does work, you could simply set a break point while its running, then just "save('my_data')" which will save the current workspace to a .mat file 
Perhaps you are wanting the functionality of a [breakpoint](https://www.mathworks.com/help/matlab/matlab_prog/set-breakpoints.html) ?
Either change that default folder to one that you have access to, or create that same folder and change its owner to your username as follows: sudo mkdir /usr/local/MATLAB/R2018b sudo chown -R $USER:$USER /usr/local/MATLAB/R2018b
If you write your data out from MATLAB, just use the save and load commands to store precalculated variables in MAT files. Alternatively, xlsread, dlmread, fscanf, and textscan are all great options. If I’m not using MAT files, I like to read my raw data using regexp, but if you’ve never used regexp before, I do not recommend it during crunch time. Does that help?
Run the installer instead (with sudo)?
If you click play to run, the play button turns into a pause button. If you click the pause button you should be able to run stuff in the command window like saving the workspace to save what you need 
Could you specify your question? you want the help.. 
Reply.
Two text files, one with x values and one with y; each of 700k in size. I want to plot it accordingly
X = [insert code for loading the first file]; Y = [insert code for loading the second file]; plot(X,Y)
This is just the square root of the highest representable finite number. You can get this number using the realmax function. Then simply take the square root. Finally, verify that you can recover your original number by multiplying it by itself. (ie, ensure that floating point error doesn't make the result infinite)
that's exactly how mine looks now. Chances are they've edited it somehow. Go to the top right, next to the search documentation bar is a little logo of windows. You can open and close editors etc from there. If you have lots of each window, in the top right is a little down arrow where you can 'dock' the window.
Does this work?: go to home then layout, and choose whatever you want
u/OmnipotentIdentity is right. That would be the fastest way. Alternatively, if you wanted to measure it for a floating point representation of unknown representation, you could simply increment x, perform the multiplication, and check looping until the function returns Inf. 
What would you increment it by? I tried this and the program seemed like it would take quite a bit of time to preform the calculation.
Thanks!
Try this: X = dlmread(‘fileone.txt’); Y = dlmread(‘filetwo.txt’); plot(X,Y) We don’t know how the data are stored in the text file, but [dlmread](https://www.mathworks.com/help/matlab/ref/dlmread.html) is pretty flexible. 
If you wanted to approach the problem like this then you'd want to increment to the next representable floating point value directly. You can access this value using the machine epsilon function eps(x) However, iterating through all nearly 2^64 floating point numbers is probably a bad idea.
If we assume the floating point representation is base 2 (hint: ieee double precision is), then start x=1 and multiply by 2 on each iteration. It may take a couple hundred iterations but it’ll run in less than a second. 
I think it does, gonna try it this afternoon. My idea is to start with something small like just molecular weights and eventually have tables for enthalpies and density and so on (like EES does). Thanks!
You can index the output if that's what you're looking to do.. element = eig(A) then you can call that element. &amp;#x200B;
Thanks, I was able to figure out how to build a cfg structure! So I used the below code to segment the data into 9 arbitrary trials just to see if it worked: `%Create trial structure` `E2F.sampleinfo = [min(E2F.time{1}) max(E2F.time{1})]; %Define 1 long trial` `numtrials = 9;` `cfg = [];` `cfg.trl = ones(numtrials, 3); %create trial matrix` `cfg.trl(:,1) = [1:100000:800001]; %Start of each trial` `cfg.trl(:,2) = [100000:100000:900000]; %End of each trial` `cfg.trl(:,3) = -100; %Trigger location (negative means after first sample)` `E2F = ft_redefinetrial(cfg, E2F);` Then, running the freqanalysis code: `Freq =` `struct with fields:` `label: {1×71 cell}` `dimord: 'rpt_chan_freq_time'` `freq: [4.0038 4.4954 4.9971 5.4989 6.0006 6.5024 7.0042 7.4957 7.9974]` `time: [1×251 double]` `powspctrm: [9×71×9×251 double]` `labelcmb: {2485×2 cell}` `crsspctrm: [9×2485×9×251 double]` `cumtapcnt: [9×9 double]` `elec: [1×1 struct]` `cfg: [1×1 struct]` However, though this returned the expected output, I have another problem. Running powcorr = ft\_connectivityanalysis(cfg,Freq) with this data returns a correlation matrix of only NaNs. I'll note that crsspctrm in the above structure is filled with complex numbers--I know the Fourier spectrum is complex but I'm not sure what to expect from the cross-spectra. `powcorrspctrm: [71×71×9×251 double]` `time: [1×251 double]` &amp;#x200B; 
also this is not correct syntax for a function.
What? No. function outputVariables = name(inputVariables)
From the [documentation](https://www.mathworks.com/help/control/ref/ss.html), you can access the `A` matrix of your state space representation by dot notation: myA = vdv_ss.A;
Look [at the doc for `fminbnd`](https://www.mathworks.com/help/matlab/ref/fminbnd.html), specifically at "Monitor Iterations". 
decimals? what has she tried so far? plus admit it...you are your sister
yeah the word decimals i was trying to find Unfortunatly i am not my own sister but her english isnt so good but i didnt know you guys where not giving answers wich seems fair but can u give me a direction to the point where se knows what to do? &amp;#x200B;
Hey, Arthur-the-king, just a quick heads-up: **unfortunatly** is actually spelled **unfortunately**. You can remember it by **ends with -ely**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
We are happy to help, but she needs to try herself first. Copying answers won't help at all when the test comes.
&gt;We are happy to help, but she needs to try herself first. Copying answers won't help at all when the test comes. i understand i hope to convince her and i thank you for your help &amp;#x200B;
his output would be vdv\_ss which was my mistake, the second line should be ss(a) not vdv\_ss(a). 
Let me emphasize that if you start from MATLAB and intend to use the data as MATLAB inputs, you want to make a MAT file. By far the fastest and easiest way to load variables into your workspace.
how will it handle pi? :/
The [state space model function](https://www.mathworks.com/help/control/ref/ss.html) would simply return a constant (matrix) gain of `a`, except in the case where `a` is already a dynamic system representation (tf, zpk, etc.). I've already [made a comment](https://www.reddit.com/r/matlab/comments/9n0l5c/how_do_i_take_this_matrix_output_and_declare_it/e7ir0ld/) as to how OP can achieve his goal.
Check [this page](https://www.mathworks.com/help/matlab/math/choose-an-ode-solver.html) in the documentation, particularly the section on higher order odes.
&gt; If I want to make my calculations go faster Best bet is to use vectorized operations that are natively multi-threaded (things like matrix operations, fft's, convolution, stuff like that). These utalize multiple cores *much* more efficiently than anything you can do with the parallel computing toolbox. Second best bet is to run 2 instances of matlab and set each to be single threaded (e.g., by using the `-singleCompThread` flag when you run matlab or by calling `maxNumCompThreads(1)` from within matlab. With only 2 cores dont use `parfor` or any other explicit parallelization from the parallel computing toolbox. I found that you lose nearly 50% efficiency from this so it probably wont be actually faster, and has some potential downsides (like doubling memory use). And REALLY dont use 2 matlab instances with `parfor` running on both.
ANother option - the little arrow in the upper right corner will bring up a pull-down menu. One of the options should be to 'dock' the editor. Choose that one and it will re-attach it to the command window.
Used this, it worked for me! Thank you
Oh I see now. Thanks!
All you need to do in matlab is take array x and run fft(x) 
Yes :)
Fft is a Heavy mathematical operation. Juan because an arduino Can do it, its NOT going to be smooth
Mostly along the lines that RL has a really good workflow in Python where entities like OpenAI publicly share a lot of code. If you are getting into the community, it is always a good idea to be conversant with the tools that the community uses. While I entirely understand that this can be non-trivial, perhaps your simulation could output intermediate results (as h5 files) that your RL libraries can read in quasi-real time? Depending on what visualization you are doing, there can be pretty comparable functionality in Python and Matlab. 
You'll find [num2str](https://www.mathworks.com/help/matlab/ref/num2str.html) or [fprintf](https://www.mathworks.com/help/matlab/ref/fprintf.html) handy.
You should read fft help on mathwork's webpage. 
Thank you, but due to some tool restrictions at the university I wont be able to do that, however, to start with I have decided to discretize the states and actions and use a Tabular Q learning method. So what would be the impact of discretization? I am sure an approximate behaviour can be obtained but there would be a tradeoff because continuous space is discretized. Could you shed some light on impact of discretization of states and actions please? the idea is to implement a braking behaviour of the vehicle. currently two vehicles, Agent vehicle and the other as a target vehicle. &amp;#x200B;
Thank you for your reply. Do you think jkool702's response below makes sense?
A quick solution to this problem would be the following: ``` figure (1); hold on p1=plot (t,CA,'.r'); L1="A"; p2=plot (t,CB,'.b'); L2="B"; p3=plot (t,CC,'.k'); L3="C"; p4=plot (t,CD,'.g'); L4="D"; legend ([p1 p2 p3 p4], [L1 L2 L3 L4]) hold off ``` Tho tbh this is basic stuff, you should have googled another way than to ask on r/matlab
Thanks. I'll try this tonight. I feel like that is way easier than I imagined. &amp;#x200B;
Ive come across a few legitimate uses for `eval`. Not many, but they do exist. One example is [this](https://pastebin.com/BDZhPJuN) function. The point of that function is to automatically copy all your variables into a new workspace when you are debugging. They can either be discarded or saved back into the main function workspace, making it act as a way to test out a solution. The new workspace also is open, so if you have e.g., nested functions and cant make new variables in debug mode, this solves that (i use it *all the time* for this purpose). At any rate since the variable names have to be dynamic, you sort of have to use `eval` to deal with them, but care is taken to isolate and only evaluate the correct variables (which was surprisingly tricky). As far as securing it, I'd thin overloading `eval` with the following function would mitigate most concerns function eval(evalStr) %% Overloads eval and checks for (and rejects) system commands before executing it. evalStr=char(evalStr); if ~isempty(regexpi,evalStr,'system\(|unix\(|dos\(|\!') warning('The requested eval command has been determined to contain a system call, which is not supported. The command will not be run.') else evalin('caller',['builtin(''eval'',''',evalStr,''');']); end end This should reject any `eval` command that contains a system call, and run any other `eval` command using the builtin `eval` command in the callers workspace, which should be the same as if you didnt overload `eval` at all.
Wtf do you even know about spelling??? Also, I didn’t realize the function was built in, chill.
Haha, yeah, a bit click baity. Open to suggestions. Fyi, I started out with titles that didn't do this, but it's like 3x the clicks for doing it. Human psychology trumps dignity I'm afraid.
https://www.mathworks.com/hardware-support/arduino-matlab.html
Hi jkool! This is kindof the discussion I wanted to actually have in the video, glad we get to do it in the comments :) My original video actually went over a couple of approaches to doing this, but the problem is that once you assume you are working with a determined and intelligent actor (not even a smart one, just someone a bit malicious), it starts to become hard to filter it out. So I actually used a function like the above as my example of how things could go wrong (btw you have a typo - it should be 'regexpi(', not ','). I copied your function to 'myeval' to avoid shadowing, and then tried to break it. I eventually came up with a string that I think should have broken it, but your code is (perhaps on purpose) somewhat fragile, so I can't actually get it to run: &amp;#x200B; finalstr ='''\[''''do'''',''''s'''',''''(''''''''dir'''''''')''''\]''; mystr=builtin(''eval'', str); builtin(''eval'', mystr);' myeval(finalstr) % Breaks with an invalid expression eval(finalstr) % Runs and displays my directory. &amp;#x200B; Was this on purpose? I can't really tell. I worked around it though by avoiding using quotations: finalstr ='str=char(\[100,111,115,40,39,100,105,114,39,41\]); mystr=builtin(''''eval'''', str);' myeval(finalstr) % now runs successfully A function like the one above is actually pretty devious in preventing abuse (I thought it would be much easier to break than it turned out to be!) but about 20 minutes of trying things got through. I am certain that you can patch this hole as well, but I'm not certain how many times we will need to iterate before I can no longer work around it. As an aside, your function for moving variables is interesting. I think for debugging purposes, it's not a bad use case actually. The key is that you don't package your debugging tools with your code. The same thing occurs in C and C++ - if you leave compiler debugging information in, you have left open doors for hackers. Anyway, I appreciate the comment :)
also you may need to add an "else" term for that for loop to tell matlab what to do if z is not within 0 to 20. 
I've been trying this for a while, I've made a file with &amp;#x200B; &gt;% Masses &gt; &gt; &gt; &gt;MW\_CH4 = 16; % \[kg/kmol\] &gt; &gt;MW\_O2 = 32; % \[kg/kmol\] &gt; &gt;MW\_N2 = 28; % \[kg/kmol\] &gt; &gt;MW\_CO2 = 44; % \[kg/kmol\] &gt; &gt;MW\_H2O = 18; % \[kg/kmol\] &gt; &gt;MW\_C2H6 = 30; % \[kg/kmol\] &amp;#x200B; and saved it as masses.mat. Whenever ai try something like *load('masses.mat','-ascii')* it returns &gt;Error using load &gt; &gt;Unknown text on line number 3 of ASCII file masses.mat &gt; &gt;"MW\_CH4". &amp;#x200B; I feel like I am overcomplicating this but I am running out of ideas.
Ok cheers for the heads up mate I’ll fiddle with that and see if I can sort it out 
no worries! let me know if that works. i have some other ideas too, but that seemed like the most obvious problem! 
Nice video. Similar to what /u/jkool702 said, I have found 'eval' useful for unpacking structs to save their internal field variables as independent variables in the works space, e.g. varNames = fieldnames(myStruct); for ii =1:length(varNames) eval([varNames{ii} '=myStruct.' varNames{i} ';']); end
I have reasons. But thank you tho! 
Try the figure ui? 
Could be tedious and I'm not sure what your data looks like by the end, but I'm gonna guess a string of letters. In which case you could do a for loop and store indexes of all start/stops. ind1=1; ind2=1; For i=1:length(data)-3 item=data(i:i+3); if item = startCodon startIdx(ind1)=i; ind1=ind1+1; elseif item = stopCodon stopIdx(ind2)=i; ind2=ind2+1; end end This is likely super slow but might work. On my phone so there might be some typos. 
figure ax = axes ax.XScale = ‘log’ ax.YScale = ‘log’ grid on - if you want to play with the numbers, look at ax.XLim and ax.YLim
A single array would be easy in this case as you'd only need one for loop instead of two. I don't see a function to handle moves, only one to check for a win. I'm guessing the for loop is for the plotting of the board? Or for the 9 possible moves that can be made in any game and if there is a win, break the loop and return the results
lol sorry man just you gonna be all ass about not writing the function right then mess it up yourself like damn!! I came here to see if it was better than matlab answers for weird shit and lots of good stuff but then this and i was like nah this dude need to sit down. all good have a blessed day brother. PS Im not a writer i'm a programmer
I think I mostly figured it out... it had to do with plot board and just joining the functions together. 
You can get a home license for a good price. I think it is about $200 for a perpetual license. 
Generate a unity gain flat phase transfer function and hit it with the boss command. Lots of options from there
Once you perform the fft you get a real and imaginary output. To get fft magnitude information use the abs() function on your resulting fft vector. For phase, you can use the angle() function on the same fft data set. You also will need to know your sample rate and number of data points (use length() on your original signal, also audioread's second output is the signal's sample frequency e.g. \[Signal Fs\] = audioread('filename'), that is if you're using the audioread function) to create a corresponding frequency axis for your fft magnitude data.
Sorry about the typo...thats what i get for typing it directly into the reddit browser and not testing it lol. I also missed one part I meant to include. The function I had intended to post is: function myeval(evalStr) %% Overloads eval and checks for (and rejects) system commands before executing it. evalStr=char(evalStr); if ~isempty(regexpi(evalStr,'system\(|unix\(|dos\(|\!')) warning('The requested eval command has been determined to contain a system call, which is not supported. The command will not be run.') else evalin('caller',['builtin(''eval'',''',strrep(evalStr,'''',''''''),''');']); end end the `strrep(evalStr,'''','''''')` part takes care of all the nested quoting issues so that the string of text the `eval` in the caller fuinction sees is the same as what was passed to `myeval` (or an overloaded `eval` depending on how you want to use it). So far on every test ive ran it returns the same result (or throws the same error) when calling `myeval(...)` and `eval(...)`, so I think this should work in all cases (though there might be a few edge cases I havent considered). Let me know if you find any cases where it doesnt produce the same thing as eval (other than the cases where a system call is used, obviously). &gt; As an aside, your function for moving variables is interesting. I think for debugging purposes, it's not a bad use case actually. The key is that you don't package your debugging tools with your code. Yeah, I usually keep `shiftWorkspace` around just for myself. I really use it a lot though, usually on a daily basis. As long as you have java.awt support it automatically shifts focus back to what you were working on, which is nice because this scenario happens on a *very* regular basis for me, and it is almost seemless to deal with: enter debug mode make new variable `newVar = newVal` get warning that the workspace is static type `shiftWorkspace` and press enter. I am almost instantly back in the same exact spot in the matlab display, but i am now in the `shiftWorkspace` function stack instead recall `newVar=newVal` and it works when im done, call `dbcont` to save changes back to the original function or `dbquit` to revert all changes made while in `shiftWorkspace`
Generate a unity gain flat phase transfer function and hit it with the boss command. Lots of options from there
First off, I am not a "man". Secondly, since when does speaking in proper sentences constitute as being an "ass"? I am on here to help people out if I can. Hence, why I commented in the first place. Sounds like you need to take a chill pill. Clearly you're not a writer, but don't shit on people who chose to use proper grammar because your slang interprets it negatively. Have a good evening. 
You're welcome. 
It seems highly plausible. I'd have to see your project and your code to know what would work best for it. I'd probably agree like 90% that there are better methods (both in and out of matlab) than running parallel, and 100% agree that parfor is really meant for high end CPUs. The only reason I went with mathematica over matlab is that it had a highly usable (and free) port to the raspberry pi, and the cluster side really intrigued me.
Win10, OSX? SSD or platter hd? Is it a particular script or any action? Specificity here and on Google will improve your results. In my experience, lagging is caused by: 1) a runaway script (infinite loop or waiting for equipment response). 2) variables or objects that consume available ram and cause Matlab to use *swap* memory (store data on hd). 3) an os update with unfortunate side effects
You're gonna need to be way more specific. I suggest opening task manager or top(if in linux), and checking what it is doing. Usually your problems are caused by disk operation in my experience, with network latency being a close second for matlab if you need to phone home to a license server or other such action. Give more info if you want a more specific answer.
Definitely that 3rd one, windows 10 just updated for me on my laptop and I had to revert back because Matlab was practically unusable for me. Also, I don't know how big of data sets your working with or what your computer specs are like. But a big dataset or complex code could cause havoc on it's own.
I resorted to a Win7 VM that wasn’t allowed to talk to the internet.
Definitely smart. Although it was my personal laptop, with most of my Matlab use on it being on the go or on a whim. Not mission critical, but really annoying if shit didn't work right. I've thought about doing a separate partition on the hard drive and having two boot options. One for personal use and one for research but it didn't seem viable as I have a small SSD, and I also didn't wanna have to restart my PC Everytime I needed to search the internet while working 
it looks like you're re-writing x and b in every loop, so the value of them is only the final value. you'd be better served making x(count) = xnew, and b = abs(x(count-1)-xnew) or something like it. then x and b are arrays and plot what you want
if i do that i get the following: while (b &gt; tol) count = count + 1; %sets step size to 1 df = 3*x^2-6*x; %derivative of given function xnew = x - f/df; %resets x value each iteration b = abs(x(count+1)-xnew); %backwards error x(count) = xnew; f = x^3-3*x^2+4; %resets function for new x value for each iteration if count &gt; 25 %max number of iterations is 25 break; end fprintf('%5i %15f %15f %15f\n',count,x,b,f); %disp each iteration data in table end &amp;#x200B;
 clear; clc; %clear all data x = 3; %x initial tol = 1e-12; %minimum backward error count = 0; %space holder to make count a variable b = 1; %space holder to make b a variable f = x^3-3*x^2+4; %given function while (b &gt; tol) count = count + 1; %sets step size to 1 df = 3*x.^2-6*x; %derivative of given function xnew = x - f/df; %resets x value each iteration b(count) = abs(x-xnew); %backwards error x(count) = xnew; f = x.^3-3*x.^2+4; %resets function for new x value for each iteration if count &gt; 25 %max number of iterations is 25 break; end end num2str(x); disp(num2str(x)); num2str(b); disp(num2str(b)); &amp;#x200B; Unable to perform assignment because the left and right sides have a different number of elements. Error in new_newton (line 11) b(count) = abs(x-xnew); %backwards error &amp;#x200B;
this is because x is now an array of values, hence the abs(x) is of size x, and b(count) is one element. so you can do abs(x(count) -xnew) in that assignment to get just the current element. try the second thing i posted, add the values you want to plot into a new variable, and plot that
i've found success when reading other files, by using the 'import data' button (somewhere in the top bar), and then asking it to generate a script (again, somewhere in the top bar of the import window). this gives a good starting script framework to import the data into an array, then you can plot from there. Helpful if the text files are in the same folder as the script. we can help further, but only if you elaborate more. like is every entry a new line? comma separated? 
I did this on Matlab. I got the result. Thanks for your help. Also is there a way to plot two lines on the same graph in this way?
Hey Jkool, Thanks for the reply. What did you think of my work arounds for your filtering? I was considering it further today, and I think we need to stop people from getting out of a walled garden a bunch of other ways. Probably you at least need to ALSO filter for eval, feval, evalin, and builtin. Any one of those can break out of the protection you are building using the trick I had above. Philosophically, it seems like you either need complete protection, or you need to avoid the issue. Middle ground is dangerous, because people may assume they are protected fully when it will only stop more casual attacks. What do you think?
Hi Sandusky, I cannot think of a way to do what you are describing without eval, but why is it needed? I've done conversions from XML to struct for example using fieldnames and the myStruct.(varnameString), but going from struct to workspace is new to me. I tried to find a way on google to do this, and sadly couldn't though, so if it's strictly required I gotta say I'm stumped :p
yeah, you would use the hold on function. so like figure; hold on; plot(x1,y1, 'options'); plot(x2,y2, 'options'); it holds the current plot so another one doesn't erase it when it plots.
num2str worked great, thanks! 
You're welcome.
So, I redesigned the filtering part of the function. It now lets you customize the filter using 2 catagories: 1. cell array of commands that should be rejected (easy to add/remove commands this way) 2. a set of characters (in regex format) such that, if the letters in the rejected command are separated ONLY by characters defined here they will still be rejected. it uses this to automatically generate a regex filter (a rather long one - current settings generate a filter with nearly 1200 characters). function myeval(evalStr) %% Filters an eval command and checks it them if they contain system commands before executing it. eval commands containins system commands will be rejected. evalStr=char(evalStr); % define filter rules % Note - any characters that need to be escaped in regex expressions should be defined hereas escaped (i.e., as '\&lt;char&gt;` instead of '&lt;char&gt;') cmdsToFilter = {'\!','system','dos','unix','dos','char','evalin','feval'}; % disallowed commands bypassFilter = ' \,\[\]'''; % indicates that there are only "{ ,[]'}" characters between letters in the commands (not including the opening "{ and closing }" brackets/quotes) % build regex filter for each command and combine them bypassFilter = ['[',bypassFilter,']*']; cmdsRegexFilter = cellfun(@(x)(['(',reshape(cat(2,['b';'u';'i';'l';'t';'i';'n'],repmat(bypassFilter,[7,1]))',1,[]),'[ \(])?',reshape(cat(2,x(:),repmat(bypassFilter,[numel(x),1]))',1,[]),'[ \(]']),cmdsToFilter,'UniformOutput',false); cmdsRegexFilter{1} = ['(',cmdsRegexFilter{1}]; cmdsRegexFilter{end} = [cmdsRegexFilter{end},')']; cmdsRegexFilter(1:end-1) = cellfun(@(x)([x,'|']),cmdsRegexFilter(1:end-1),'UniformOutput',false); cmdsRegexFilter = [cmdsRegexFilter{:}]; %if ~isempty(regexpi(evalStr,'system\(|unix\(|dos\(|\!')) if ~isempty(regexpi(evalStr,cmdsRegexFilter)) warning('The requested eval command has been determined to contain a system call, which is not supported. The command will not be run.') else evalin('caller',['builtin(''eval'',''',strrep(evalStr,'''',''''''),''');']); end end &gt; Philosophically, it seems like you either need complete protection, or you need to avoid the issue. Middle ground is dangerous, because people may assume they are protected fully when it will only stop more casual attacks. Perhaps this is philosophically the case, but in practice there is no such thing as a 100% secure system. All systems have some vulnerability or another, even though they might not know it yet (example: meltdown and spectre). How vulnerable of a system you can live with depends on which of the following 2 cases you fall into: case 1: protection from random cyber crime. Realitically, the "middle ground" is good enough here, since you dont need an unhackable system, you just need a system that is difficult enough to access that they move onto the next random target. The same ideas applies to putting locks on your doors in your house/appartment....they work because they make your house much more difficult to break into than those without locks, not because they make your house impossible to break into. case 2: protection from an intelligent adversary that is specifically targeting you. This is a whole different bag of tricks, and the "make it 100% secure or dont use it" way of doing things is probably warranted, but realistically very few people fall into this group.
Google "graph paper for printing", you'll find plenty.
Thanks 
Where?? 
try this code clear all; close all; clc x = 3; %x initial tol = 1e-12; %minimum backward error count = 0; %space holder to make count a variable b = 1; %space holder to make b a variable f = x^3 - 3 * x^2 + 4; %given function fprintf(' count x b f(x)\n') %sets spacing and columns fprintf(' --------------------------------------------------\n') %line breaks fprintf('%5i %15f %15f %15f\n', count, x, b, f) x_val = zeros(26, 1); b_val = zeros(26, 1); x_val(1, 1) = x; b_val(1, 1) = b; while (b &gt; tol) count = count + 1; %sets step size to 1 df = 3 * x^2 - 6 * x; %derivative of given function xnew = x - f / df; %resets x value each iteration b = abs(x-xnew); %backwards error x = xnew; x_val(count, 1) = x; b_val(count, 1) = b; f = x^3 - 3 * x^2 + 4; %resets function for new x value for each iteration if count &gt; 25 %max number of iterations is 25 break; end fprintf('%5i %15f %15f %15f\n', count, x, b, f); %disp each iteration data in table end figure(1) subplot(1,2,1) plot(1:count, x_val, 'o-') ylim([min(x) - 1, max(x) + 1]) ylabel('x_n') subplot(1,2,2) plot(1:count, b_val, 'o-') ylim([min(b) - 1, max(b) + 1]) ylabel('Backward errors') &amp;#x200B;
try ode45 a built-in function in Matlab that solves ordinary differential equation. Main code : clear all close all clc % Parameters interval = [-10, 10]; % the time interval init = [2; 0]; % initial values of y(1) and y(2) % call ode45 [t, y] = ode45(@myfunction, interval, init); % myfunction is the functon to solve figure(1) plot(t, y(:, 1), '-', 'linewidth',2) hold on plot(t, y(:, 2), '-','linewidth',2) xlabel('t', 'FontSize', 12); ylabel('y', 'FontSize', 12); legend('y(t)', 'dy(t)/dt') set(gca,'fontsize',12) hold off the function file contains the equation to solve : function dy = myfunction(t, y) % Function y'' = 0.5*(-3*y'-y+1-t) % Rewrite this equation by making the substitution % y = y(1) and y' = y(2) % y(2)' = 0.5*(-3*y(2)-y(1)+1-t) dy1 = y(2); dy2 = 0.5 * (-3 * y(2) - y(1) + 1 - t); dy = [dy1; dy2]; end &amp;#x200B;
Thanks... I found this yesterday and got it.
Convert your number into character with the function `num2str` then count the number of characters with the function `numel` . Example : MyNumber = 12547896; numel(num2str(MyNumber)); you'll get ans = 8
Hmmm I'm not sure what that exact issue might be... perhaps you need to specify methods for connectivity analysis or other cfg details? It's been a while since I did this myself but my only issue was the trial setup. I'd look at the documentation on ft_connectivityanalysis and see if it includes explanations for NaNs
That would probably only be the base software with no toolboxes, in which case you're better off using one of the alternatives above for free. They'll likely force you to use a university email for your matlab account to make sure you're a student and you'll need that to get any updates I'd bet. So if you're like me, your university email will expire and you'll be stuck looking for something new 
I mostly use that trick when I need to pass a function a bunch of different variables. Rather than having the function call look like: myFunction(var1, var2, var3,.........,varN) I just load all those variables into a struct and pass the struct to the function, e.g.: myStruct.var1 = var1; myStruct.var2 = var2; ... myStruct.varN = varN; myFunction(myStruct); Then, I'll put that eval loop at the top of the function to unpack the struct into variables, which I can then use in the function. Admittedly, it's something of an aesthetic choice. There is nothing wrong with a function that takes a bunch of inputs, it's just ugly and kind of obnoxious to work with. Also, with the struct method, if I decide I want to alter the inputs to the function (i.e. "Oh dang, I guess I also need to pass varX into this thing as well") then I can just go back and load it into the struct without needing to change the function call and definition. This kind of thing comes up a lot for me when I'm making [animations like this](https://old.reddit.com/r/dataisbeautiful/comments/8bzdr8/gaze_and_foot_placement_when_walking_over_rough/). My code basically involves building up a big complicated object over the course of many stages of processing, and I find structs to be a useful way to keep relevant information nicely packaged together. 
https://www.mathworks.com/products/matlab-home.html This is a not-for-profit license. You get a steep discount on toolboxes but only for one year. Then to get the discount you would need to repurchase. So it pays to get the tool boxes you want. Of course there are free alternatives but you will have to assign the value to your experience with Matab and not the alternatives. 
[Newton’s method code ](https://imgur.com/gallery/xCDPipF) Hey guys, so Im supposed to write a code that adheres to Newton’s method with the constraints posted in the original pic. I didn’t really know what I was doing so I got this from the internet by asking a lot of questions, but I don’t wanna use it without actually understanding it. I understand the first few lines are defining the function, its derivative, defining where the computation must stop, and to print the table of the function and it’s derivative, but after that I’m pretty lost. Any help would be greatly appreciated. Thanks very much 
So just to be clear, you are asking us to help you cheat by explaining what the code you plan to plagiarize is doing, so that you can turn it in and pretend it is yours? I'm pretty sure nobody is going to do this. 
Well first, you ought to read the documentation for each function. That will go a *long* way toward improving your understanding of the code. I'm not sure of your familiarity with programming generally, so I'll shotgun it: * [inline](https://www.mathworks.com/help/matlab/ref/inline.html) (which is being replaced by [anonymous functions](https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html)) * [while](https://www.mathworks.com/help/matlab/ref/while.html) * [break](https://www.mathworks.com/help/matlab/ref/break.html) * [if-elseif-else](https://www.mathworks.com/help/matlab/ref/if.html) * [relational operators](https://www.mathworks.com/help/matlab/relational-operators.html) (each of them has a symbol version as well, such as `==`, `&gt;`, `&gt;=`, etc.) You'll also want to understand the method itself: * [Wiki page](https://en.wikipedia.org/wiki/Newton%27s_method) * [Paul's Online Math Notes](http://tutorial.math.lamar.edu/Classes/CalcI/NewtonsMethod.aspx) (one of the best, bookmark the site for sure) With that info in hand, try to explain what you think the code is doing at each step, and I'll gladly help you anywhere you're stuck.
I have a matlab student license that I paid for back in like 2015. I just recently renewed it to get the upgrade since I really like the live script. It was like another 50 bucks. I never lost my license, I just didn't get any updates. 
The encouragement of the use of the internet was surely meant as a search on matlabs documentation.
[My understanding of the code ](https://imgur.com/gallery/EQD3IYq) Thanks so much for your help. So I tried my best to understand each line of the code and this is what I got out of it. For readability, I put my “comments” in brackets instead of using a percent sign. I used curly brackets to signify stuff I think I understand incorrectly. 
Is the Newton method you're referring to the Newton raphson approach? 
It’s the Newton iteration approach 
I agree, I’m using this code as my guide. Not planning on turning this in 
you can use the function `semilogx` . function bodex(xmin, xmax, ymin, ymax) x = 0:1; % linear scale for x-axis y = log(x); figure(1) ax = gca; plt = semilogx(x, y); xlim([xmin, xmax]); % x-axis limits ylim([ymin, ymax]); % y-axis limits plt.Color(4) = 0; % set the alpha of the plot to zero grid on; % show the grid ax.LineWidth = 1; % change the line width of the grid %- change the properties of the major grid ax.GridLineStyle = '-'; % change the style of the ligne ax.GridColor = [1, 0, 0]; % change the color ax.GridAlpha = 1; % change the alpha %- change the properties of the minor grid ax.MinorGridLineStyle = '-.'; ax.MinorGridColor = [0, 0, 1]; ax.MinorGridAlpha = 0.6; end &amp;#x200B;
The fact that it works with the `-nojvm` flag and not otherwise leads me to think that it is your Java install. I'd def start there- making sure the newest version of Java is installed on your machine. 
I would recommend first using `eps`, which returns the distance to the next largest positive real number. In the case of realmax('double'), the next largest is considered `inf`. This gives us: &gt;&gt; eps(realmax('double')) ans = 1.995840309534720e+292 With this in mind, if we give each of these the value y1 and y2: &gt;&gt; y1 = realmax('double'); &gt;&gt; y2 = eps(y1); we would expect that the largest number that would start giving errors would be on the order of sqrt(y1+y2), which of course cannot be computed using floating-point arithmetic. Note that you didn't specify that `x*x` must be valid, just that it be defined. 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/thinkpad] [X-Post from r\/matlab](https://www.reddit.com/r/thinkpad/comments/9nnjfn/xpost_from_rmatlab/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Is it weird that the last term in (3) is f(xn-1) divided by the same thing. That would always be 1. So the algorithm is wrong. It should be the function at n-1 divided by the function’s derivative of at n-1. Even if you were somehow cheating- who cares, then just don’t answer him- you’d be using an incorrect algorithm. So..... Check source to make sure they make sense. 
 while n!=f %put number generation here using f as the number generator end
Okay let's take a look at your uncertain spots first: if abs(f(x1)) &gt;= e This is the beginning of an if-elseif-else block. We're giving our function `f` an input of `x1` to evaluate, then taking the absolute value of the result of that evaluation, and comparing it to `e`. There is no definition or assignment occurring here; we're just trying to decide if we should execute the code after the if statement, or just move on to the next elseif/else, should any exist. err(N) = f(x1); This is close. We're assigning the result of evaluating the function `f` at `x1` to the vector `err` at an index of `N` (i.e. the N^th element of `err`). There is no absolute value involved. The rest of it is more or less correct, except for some minor terminology and a bit of "gun jumping" (e.g. the line where the header of the table is printed you say it's giving the whole table...). You didn't mention what `N` is, nor did you have anything to say about `while 1` or `x0 = x1`, `Y(N) = x1`, etc. Why are the break statements being used and what *exactly* do they break from? These are the next things you need to consider, but I think you're well on your way.
I think you could do this pretty easily with a vector of results and the [any function](https://www.mathworks.com/help/matlab/ref/any.html) with [logical indexing](https://www.mathworks.com/help/matlab/math/array-indexing.html#d120e1410). FYI: This is not a tip. It's either homework help or a technical question. :)
What is n? 
Check the sidebar on the right under "Places to learn Matlab" ---&gt; There are some great resources there, the first of which is an interactive (in-IDE) course for students. You'll just need your Mathworks account, which you should have created when you installed MATLAB on your computer.
try the function `ismember`
Thanks a lot, I will use that. 
Thanks, I thought of using any but ismember recommended by another person is easier to implement. 
You're welcome. `ismember` is a great choice for your problem; if you ever need to do `&lt;`, `&lt;=`, etc., you have another option!
Thanks for the suggestion. I went back to my colleague again, and the temporary solution we worked out was to "undock" the command pane into a separate window. Then I could edit my script (once I added it to the path), and execute debugging commands while clicking back and forth between the two open windows. So... that's a manageable workaround, but I still find it weird that I can't fix the command window in place. It's like, as soon as I click on the "edit" window, the command window goes running away into a tiny little minimized box on the side, and I'm just like "No, wait! I want you \_too\_!". I find it really frustrating that it keeps getting automatically minimized without my consultation, and the only way to keep it open is to undock it into a separate window, but maybe there's some other way to force the pane to stay open? &amp;#x200B;
Thanks for the suggestion. Yeah, it does, and I can edit scripts; the problem is that as soon as I click on either the "edit" panel, or the "command" window, the other one disappears off to the side. It happens automatically, and I don't know how to turn that behaviour off.
I believe you can right click the editor tab and select “dock”, should be able to do the same thing with the command window. Alternatively you can drag it to the edge and it may auto dock 
Look at the moving-average example on the filter function. Start with your window size at 10 and go from there. 
Hoooo now I get what you mean. I checked my solution and it should work. My second suggestion: at the right side where you see your "minimized command window" grab it with the mouse and do not let it go. Then move your mouse through the screen and you will see some squares turning blue, that is where you want to place the command window. I think your problem might be resolved now. If you need further instructions feel free to ask.
Could you explain how epsilon works? Will epsilon be very small close to 0 and as you approach realmax it will grow?
This works great! Thanks for putting the time and effort into this :)
Super beginner question, how do I make matlab use each number in my array to calculate the answer. Notice the first answer is right when z=-621.8, but then it just calculates that 7 times and never moves on to the next number in my z array . Thanks
First of all, the exponent on mu_0 should be negative ...
cheers for that
It really is a beautiful method. Those guys thought of some great stuff since they didn’t have a modern cluttered mind. Since others are either assisting with the Matlab syntax or calling you out for trying to crowdsource your homework, maybe I can help with the overall concept. You have a function and want to find the x such that f(x) =0, or the point where the function crosses the x-axis. In Euler’s day, you couldn’t ask a computer to run 1k points and then take the closest to zero, so you had to be smart about your guesses. So Euler and this other dude come up with a method for guessing an x-value based on the function value and the slope at some other point. The first iteration needs a starting point, so you supply an uninformed guess ( x_0 ). Plug x_0 into the equation to get the function value, and take the derivative at that point to get the slope ( the derivative is denoted as f’(x) and is often called the ‘slope’, ‘tangent’, ‘rate of change’, or ‘delta’ ). So what good are these values? Well now we know 1) how far from zero we are, 2) how fast the function is moving toward/away from zero, and 3) if it is moving toward zero or away from it ( by the sign of f/f’ - if both are positive or negative, the result will be positive ( +/+ = -/- = +), and therefore moving away from zero ). Consider the following two cases of a Furbee walking along a mountain and trying to get to sea level. He uses his current location ( x_0 ) as the starting point and uses his altitude f(x_0) and the slope of the hill f’(x_0) to estimate how far and in what direction he will have to walk to get there. - f(x_0) = 100 m | f’(x_0) = -1 m/km | f(x_0)/f’(x_0) = -100 km - f(x_0) = 100 m | f’(x_0) = + 1000 m/km | f(x_0)/f’(x_0) = + 0.1 km So they both start off the same altitude, but the slope of the hill is different. So now to make our next guess ( x_1 ) as to where the hills will reach sea level. - In the first case, the slope is negative, so he is going the right direction, but x_1 = x_0 - f(x_0)/f’(x_0) = x_0 - ( -100 km ) = x_0 + 100 km. Compared the the altitude, it is a fairly large distance. - In the second case x_1 = x_0 - f(x_0)/f’(x_0) = x_0 - ( + 0.1 km ) = x_0 - 0.1 km. So he is close to the shore, but needs to turn around and to the other way. So we have very different follow-up guesses with changing only the slope. Since the hill probably isn’t linear, when the Furbee in case 1 walks the 100 km to point x_1, it is likely that he still isn’t at 0 elevation. He can then measure his altitude f(x_1) and slope f’(x_1) to make his next guess of where the hill will intercept 0 altitude ( x_2 = x_1 - f(x_1)/f’(x_1) ). Hopefully, he is closer to sea level and the next guess will bring him even closer. This method will *normally* result in smaller distances for each iteration, but will likely never reach exactly zero. This is why you specify upfront an acceptable range of values ( e.g. 0 +/- .01 ), and in case that range is never reached, a max number of iterations. Cheers!
 while numel(x) == numel(unique(x)) &lt;add new value to x&gt; end
I think you're on the right track with gradient. Check the documentation page for quiver.
My issue, which I should have clarified in my original question is I have tried converting these numbers to unit64, but after an iteration of divisions my computer crashes, I’m guessing because the numbers are large? My guess was that uint64 didn’t work but I didn’t have any other ideas.
Use meshgrid to generate your domain and surf to plot.
Have you tried `uint64()`? 
 clear all; close all; clc [X,Y] = meshgrid(-10:0.5:10); Z = 1 - X.^2 - Y.^2; % equation of Z % plot the function figure(1) surf(X,Y,Z) % plot the surface xlabel('X'); ylabel('Y'); zlabel('Z') &amp;#x200B;
Thank you guys for help. I'm familiar with Matlab a bit, so I knew how to code with meshgrid, like SaidAraki commented. I was thinking of something like the picture (if it's there). The volume below the surface and above boundaries of xy-plane. Something is terms of triple integrals, blocks that fits the boundaries. I don't know how to word it. I'm having a hard time to imagine something in 3-D, so why not use a software to do it for me. [https://imgur.com/4rBXPNS](https://imgur.com/4rBXPNS) This figure was made by my teacher. 
Maybe I misunderstand that command. Does putting a symbolic number into that yield a binary number or a numeric?
All numbers are represented as binary by computers. Even floating point numbers, using IEEE floating point representation.
Use doubles? 
To preface, I don’t have experience with this application. However, I do have *some* experience with parfor. Usually, it is useful when you have many iterations of a for loop, and each is executed in short form. In your description, you only have 4 cases (although the graph suggests that it varies?). It seems the brunt of the overhead is within the mex function, and it is uncertain how it is carrying out its calculations. It is possible that the code within the mex function is already multithreaded, and by asking Matlab to multithread you are multiplying the number of threads competing for the available cores. Obviously there is some resource (#cores, ram, Matlab heap memory, etc) that benefits from sequential evaluation. I would check to see if the Profiler has any recommendations. I’ve shaved orders of magnitude off of evaluation of mex functions just by being more precise with data-types (as the Profiler suggested). Is this something that will used long-term? If so, then it might be worthwhile to dig into the mex function. If you have an Nvidia gpu, you might be able to utilize [CUDA](https://en.m.wikipedia.org/wiki/CUDA) for gpu parallel-processing. Also, Matlab can use remote kernels, if you are at a university with a computing core. Then again, if this is for research or other short-term projects, it may be better to run them overnight and move on with your life :) 
Non-Mobile link: https://en.wikipedia.org/wiki/CUDA *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^219574
**CUDA** CUDA is a parallel computing platform and application programming interface (API) model created by Nvidia. It allows software developers and software engineers to use a CUDA-enabled graphics processing unit (GPU) for general purpose processing — an approach termed GPGPU (General-Purpose computing on Graphics Processing Units). The CUDA platform is a software layer that gives direct access to the GPU's virtual instruction set and parallel computational elements, for the execution of compute kernels.The CUDA platform is designed to work with programming languages such as C, C++, and Fortran. This accessibility makes it easier for specialists in parallel programming to use GPU resources, in contrast to prior APIs like Direct3D and OpenGL, which required advanced skills in graphics programming. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
lol 
So I'm just learning Matlab. If the extra precision of a double is slowing you down, why not just use single precision floating point numbers?
Can you share what your results are so far?
[This](https://i.imgur.com/0zaAYmh.jpg) shows the codes performance. The code is a double nested loop, and the inner loop is a loop over frequencies and involves a matrix multiplication with a mnatrix scaled by frequency (i.e., its magnitude is linearly related to the iteration #). In each main iteration, the inner loop started processing at ~25 iterations per second. As soon as values hit `realmax('single')` (this used single precision arrays) it dropped to ~0.4 iterations per second, and immediately recovered when it got to a high enough iteration that values were above `realmin('single')`. PS it took me *forever* to figure out this is what was causing the slowdown. 
You find so many interesting quirks. If you ask the variables for their type, they are still single, right? I am willing to believe that floating point operations can have significantly worse performance for special floating point values.
It is really hard to provide answer without understanding your data or the function your are calling. Do you know how long it takes parfor to setup the loop initially? How did you setup parpool? What do you mean by expensive? The plot shows 8 iterations in 'time', but your loop only goes up to 4, how did you increase the number of iterations? Why is **psis(:,:,h)** on both sides of equation? Does Matlab warn overhead issues with that variable? Have you thought about using [Single Program Multiple Data](https://www.mathworks.com/help/distcomp/spmd.html)? The way your code is setup you could easily test if it is more efficient.
He doesn't find them, he causes them by doing ill-advised nonsense. 
Just added it, I figured I need to use theta for the rotation of the vectors but I haven't figured that out just yet &amp;#x200B;
&gt; If you ask the variables for their type, they are still single, right? I am willing to believe that floating point operations can have significantly worse performance for special floating point values. Yep, still singles. It they were getting transformed into doubles it wouldnt be so bad but i suspect that something analogous to `vpa` is being used instead, which would explain the nearly 100x performance reduction.
Think about it like you would a clock for year = ... for month = [1:12] for week = [1:4] for day = [1:7] for hour = [1:24] for minute = [1:60] for second = [1:60] pause(1) end addMinute end addHour end addDay end addWeek end addMonth end addYear end Every time the seconds loop (innermost) hits 60 it resets and you add 1 to the minutes loop. Every time the minutes loop hits 60 it resets and adds 1 to the hours loop, etc.
Certainly, the opposite way, right? Inside first, then outside.
 https://i.imgur.com/evuANUx.jpg 
&gt; I don't know if subnormal numbers affect performance, but I feel like they shouldn't. Here's what [Intel has to say about denormals and performance](https://software.intel.com/en-us/node/523326). Cleve Moler is well aware of how this can impact Matlab's performance: &gt; We still see processors today that handle denormals with microcode or software. Execution time of MATLAB programs that encounter denormals can degrade significantly on such processors. From https://blogs.mathworks.com/cleve/2014/07/21/floating-point-denormals-insignificant-but-controversial-2/ /u/jkool702, it seems your options are: * Use mex which is compiled to flush to zero (to Cleve's horror, as noted in the above blog post) * Scale the numbers into and then back out of the normal range * Use a higher precision representation, i.e. double precision * Recompile Matlab with flush to zero turned on * Live with it
Nope, he's slicing the array into contiguous blocks currently. I made the same mistake on jkool702's [recent post](https://www.reddit.com/r/matlab/comments/9k85q4/any_ideas_why_this_code_keeps_slowing_down/)
`parfor` does have a bit of overhead. With just 4 iterations, and an execution time of &lt;= 0.005s/iteration (if I'm reading your chart correctly), I'm not surprised that the overhead is swamping any parallel gains. If you really need to parallelize this calculation, do it inside `lagrange_remap`. You want to make sure you leave the threads up and running for use in subsequent calls though, the overhead of creating the threads each time would be bad, much like what you're seeing with `parfor`.
I *thought* it looked OK too, but I never use `parfor` and figured it was an easy check. That and OP didnt really give enough info to ID any other issues... If it isnt improper slicing my guess is `lagrange_remap` is natively parallelized (or at least most of it is), and the slowdown is just a matter of the native parallelization getting near perfect scaling and `parfor` being roughly half as efficient.
It varies depending on the operation, but i dont think youll see much of a difference on *any* operation between the 2 RAM you list. Id go with the 3600 CL17 kit if it is cheaper and you like it. A bit slower latency, but a bit more throughout, so id guess those things roughly cancel each other out anyway. Now, between those and a generic cheap 2400 mhz kit you might see some difference, but its hard to sayt how much or on what operations without actually testing it.
Thanks. The only non-gaming test I came across was Cinebech and 7-zip I believe. Seems it makes some difference, but not much.
It's an engineering software to calculate thermodynamic and transport equations, it's really good at what it does but it's also a very niche piece of software, that's why I'm trying to move to matlab instead. Thanks for the reply.
Your graphics card is kind of important for running matlab properly. 
Per OP &gt; **lagrange_remap** is a computationally expensive single threaded mex function 
&gt; I kinda wonder if theres a 6th option that would work... This sounds like a possibility. You're going to get yourself into potential trouble though. If you start trying to process denormals with something that is assuming FTZ, I suspect bad things would happen. &gt; ive switched to double precision (I had to lower grid resolution a little and I dive into swap on a couple of copy operations, but the main performance critical parts run entirely in memory) Did you try casting to/from double precision conditionally based on the values in the arrays? Or even unconditionally at the operation that is producing denormal results? I don't know how the performance impact of the cast would compare to the impacts you're seeing with everything switched to double, but that would have been my first try.
Only if he does GPU computations. Otherwise it's not.
Matlab has a built in [benchmark](https://www.mathworks.com/help/matlab/ref/bench.html)
I don't do GPU computations as my applications are kind of memory-heavy.
&gt; If you start trying to process denormals with something that is assuming FTZ, I suspect bad things would happen. I suspect Cleve would very much agree with this statement lol. I think it might work in my case though, since im 99% sure that the only thing that is producing denormals is the matrix multiplication. So, if that stops producing denormals, then there shouldnt be anything else to produce them and pass them to MKL (which i imagine would promptly shit itself if it was compiled with FTZ flags) (This assumes that whatever turns off the ability to process denormals and sets them to zeros has no effect on normal float operations, which I have no idea if it is the case or not). &gt; I thought about doing this, but ended up not. I might give it a try though. I figure pros and cons are **pros** * (almost) halves memory usage --&gt; can increase grid resolution by ~19% in each dimension (number of samples is proportional to (dimension size)^4) **cons** * casting at *every* inner loop iteration would probably be slower than my very occasional swap usage (in part because the disk is a 1tb NVMe samsung 970 pro, which is nowhere close to RAM but about as fast as you can expect swap storage to be) * Have to round off to single precision between every iteration (vs keeping double precision the whole way through) * (main concern) casting the double result back to single will still create denormals that get saved in the data array. These wont end up getting used in the computations (siunce they will be re-cast to doubles before being used), but idk if simply having them in the same data ccould cause problems. 
[https://www.matlabi.ir/%D8%A7%D9%86%D8%AC%D8%A7%D9%85-%D9%BE%D8%B1%D9%88%DA%98%D9%87-%D8%A8%D8%A7-%D9%82%DB%8C%D9%85%D8%AA-%D9%85%D9%86%D8%A7%D8%B3%D8%A8/](https://www.matlabi.ir/%D8%A7%D9%86%D8%AC%D8%A7%D9%85-%D9%BE%D8%B1%D9%88%DA%98%D9%87-%D8%A8%D8%A7-%D9%82%DB%8C%D9%85%D8%AA-%D9%85%D9%86%D8%A7%D8%B3%D8%A8/)
Typically matlab is gpu-heavy, and CPU-heavy, if you properly use the precompiled functions
Is it *really* single threaded though? I mean, its mex code, so you will (typically) get more compile-time optimization than with standard matlab code. It Op means "it wasnt explicitly multithreaded" that doesnt necessairly mean that the compiled code is singlethreaded (right?)
You set a [breakpoint](https://www.mathworks.com/help/matlab/matlab_prog/debugging-process-and-features.html). You can get more sophisticated with conditional breakpoints if you are trying to track a certain bug, but I really only use the standard version. In the left margin of an m-file you will see dashes just to the right of the line numbers. If you click on one you will see a little stop sign, this indicates a breakpoint. When you run the script it will pause evaluation at this statement, and variables can be inspected in their current state by hovering over them with the cursor, in the Workspace window, or by query via command line. At this point you can either *Step* through your code line-by-line, *Continue* to resume normal evaluation until the end of the script or the next breakpoint, or *Quit Debugging* to just abandon the code execution. You can even *Step In/Out* of user defined and built in functions. It is an essential debug tool.
&gt;\[row, \~\] = find(temp&lt;=data(:,2)); %temp is the temperature you are searching for &gt; &gt;This gives you the row of a temperature that is equal or larger than the one you searching for but probably this isn't the smallest delta! So maybe check the row before this element. So, I tried this and it just gives me "row = 1, 2, 3... 49". The tables are loading fine as far as I can tell.
Spam. Report it.
Umm... no. Not unless you're using libraries that explicitly multithread things internally. Compilers can optimize for vector instruction sets when applicable, but as far as I know a C/C++/Fortran compiler will never create a separate *thread* unless you tell it to.
&gt; (main concern) casting the double result back to single will still create denormals that get saved in the data array. These wont end up getting used in the computations (siunce they will be re-cast to doubles before being used), but idk if simply having them in the same data ccould cause problems. You can always check for these and FTZ manually. I doubt they'd cause any problems, but subsequent calculations using them would have the same issue you're seeing here.
The singleton dimensions error has to do with the structure of your images. If they are (width x height x rgbchannels) then you need a 4d movie array to store them. If they are just (width x height) then you only need a 3D array. This can be handled using the movie array structure mov(k) which has documentation on Matlabs site 
Use surf(X, Y, sig\_x\_flam) to obtain a graph of your function; your function is very flat and small outside of the bottom right-hand corner of your contour plot. Use contour(X,Y,sig\_x\_flam,80) to see more level curves.
What is the output? Error messages?
https://www.reddit.com/r/matlab/comments/9npupr/i_need_help_plotting_the_magnetic_field_of_an/ Are you in the same class as /u/PoatGaradox?
just a warning, the line it gets stuck on might not be the hold-up. Sometimes asking it to pause will wait until a calculation finishes or some good time to actually pause. You could try a medium-sized number and use the 'run and time' function to see which steps take the longest
Looks like it
Thank you!
According to LTT, diminishing returns really kick in around 3200 Mhz. Faster is always better, but the cost for every extra Mhz is not worth it after that point, especially given the overall negligible performance increase.
Never mind, I got it! Revised code is: clear; close all; clc T=input('Total: '); P=input('Percentage as double digit whole number: ')*0.01; U=T; D=0; while U/P~=U+D U=U+1; D=D+1; end fprintf('The number of upvotes is %0.0f \n', U) fprintf('The number of downvotes is %0.0f \n', D)
Subtract? But then I can't ensure that upvotes minus downvotes equals total. Also, how do I get the program to round when it gets close?
you have a lot to learn. the matlab documenation is great, here it is for round(): [https://www.mathworks.com/help/matlab/ref/round.html](https://www.mathworks.com/help/matlab/ref/round.html) can you explain in words what your function does? I'm not sure it does what you think. I'm trying it with like simple examples like 75%, 3u1d, 4 total and it's a little goofy to me. Like how U starts at T and only increases
I took two (or well, 1.5) classes on MATLAB, but that was last year, and my program has me at 18 credit hours every semester, so needless to say I don't have room to remember much. Anyway, I'm thinking more like this: while P*(T-0.01) is not less than or equal to and/or while P*(T+0.01) is not greater than or equal to...
(Not OP) This is really similar to what I came up with, but I was getting hung up on the direction of the arrows in the quiver plot. Got a refresher on why Bx = -B*sin(angle) By = B*cos(angle)
You don't need a while loop, or any kind loop! First do some basic algebra on paper (forget MATLAB for the minute). Write down an equation for U in terms of P and T, then write down an equation for D in terms of U and T. Use those equations in place of your loop in the MATLAB code, that's all you need. You'll then see you often don't always get whole numbers out, so use the round() function to convert U to an integer and see if that works...
Total is the number it gives you. Upvotes minus downvotes.
That... gives a nonsensical result. This post, for example. It says there are two upvotes and one downvote. But surely, if that was the case, the percentage would be 66% and not 60%, right?
I think you need to reconsider your problem, because this is actually quite simple to solve by hand. Take a look at this: https://m.imgur.com/a/lL6mVAw
I actually agree that you have a lot to learn. This whole problem has nothing to do with a while loop...
+ Thank you, you've solved my problem, I think!
Seems to me that you need to define your various `u` and `v` symbols [as functions](https://www.mathworks.com/help/symbolic/syms.html#buoeaym-1) of `z`. syms u(z) u_p(z) v(z) v_p(z) ... Then you can define your end conditions. Check out [how to solve a system of differential equations](https://www.mathworks.com/help/symbolic/solve-a-system-of-differential-equations.html). Not sure which part of that problem you're trying to solve, exactly, but these should help you get back on track. Please post any code and/or errors if you're still stuck, as it helps us help you better.
I've also tried "export2wsdlg" and this: **name = 'output.mat';** **\[fnm,pth\] = uiputfile(name);** **if ischar(fnm)** **save(fullfile(pth,fnm),'-struct','Dataset')** **end** But neither are working. What did you have in mind when you say try with a save?
Do you get any warnings that might help? I would try with a more simple save, skip the smart file naming Save('output.mat', data, '-struct', -v7.3) The v7.3 might be needed, for saving structure arrays after version 7.3 which is a looong time ago ;)
I'm not sure what you mean. The documentation for slice indicates that your existing data structure should work just fine. Certainly, making it Mx3 wouldn't help in any significant way. 
I'm not sure how export2wsdlg would help. It's not as if you have a persistent workspace in a compiled application. What workspace would you export it to? Save is the function you use in your example, but it doesn't look like you've read the documentation for it. Try to experiment with it interactively before you use it in a compiled application, so you can figure out how to use it. 
Thanks, I'll give that a shot. I don't know how export2wsdlg would help either, but I included it just in case someone mentioned it thinking it would work (and so readers don't get the idea that I'm not trying on my own to get this to work).
Could you try plotting with multiple lines of code? I.e. plot(x1,y1,"b--") hold on plot(x2,y2,"ro") plot(...) I prefer this method because it is significantly easier to understand. The other benefit of this is that it would allow you to use "scatter" on the data you don't want connected with lines.
[This should help](http://lmgtfy.com/?q=matlab+how+to+visualize+a+vector+field).
Good point, that'd be much more readable. I'll try and report back.
Yo, your legend command is a bit weird. You use two strings right next to each other; 'losers' 'scores' when it should be one string: 'losers scores'. You probably want to write Loser' scores right? Try an escape with \
Double apostrophe escapes the character so it works out. You can see the single apostrophes come out correctly in the legend.
You want to use [quiver](https://www.mathworks.com/help/matlab/ref/quiver.html)
I was thinking it might be a bug causing the legend symbols to mess up.
Got your error! The series your plotting is a matrix right? Both winners and losers have multiple 'lists' that are being printed. Everyone of those lists gets entered in to the figure as separate series. Try extending your legend with 10 (or so) entries, and you'll see what I mean. (i.e. legend('1', '2', '3' ..)
I think the issue arises because you plot an nx5x1 array. The plot command interprets that a as a series of curves, in this case all with green circles. So the legend wants to lapse each curve in the series. Try reducing the dimensions of your array. It will require you to expand the week vector as well. Try this: weeks=repmat(1:5,[1,size(winners,1)]); weeks=weeks(:); winners_red=winner(:,:,2); winners_red=winners_red(:); losers_red=losers(:,:,2); losers_red=losers_red(:); plot(weeks,winners_red,’ro’); hold on plot(weeks,losers_red,’go’); hold off then try the legend. Your labels should be right. Maybe you need the repmat command to get vectors of the same length and the data paired with the right week number. 
I use meshgrid to get my XX, YY, and ZZ boxes that I can plug into slice(), but how to I use it to generate my volumetric data?
Use figure handles to get specific with your legend: https://i.imgur.com/7Mm6o2K.jpg 
sorry, not Mx3, but MxNxP is the format that slice needs. right now it's a Mx4 list of point:value pairs (value V at point X,Y,Z). In converting it to a MxNxP matrix, it would be a very very sparse one. I think I actually found a solution that seems like it might work (see OP edit), but my data is too sparse to really see anything useful just yet.
You would have to do that via interpolation, which slice should do for you. Your existing data is fine. 
Why would you use that input format? You say you have x, y, z, and v; just feed them to slice. 
Aren't you just plotting \`lwa\` twice? Once as dashed, and later as plain?
You're totally right, [that's what it was.](https://i.imgur.com/2Lv9HRy.png) This is one of my first times using higher-order matrices and I'd never tried to plot out of one before.
Bleh I really do need to get better at using handles. It's just so much quicker not to.
Using handles is the solution to your problem with the legend here. The legend will be linked to every "series" of dots (or line-segments) that you plot if you don't specify the handles. In your case, this is why your legend would show one dashed blue line, then 6 green circles, then the default blue line, and then the 6 red-dot plots (but you only named the first 3 entries in the legend). A good test is to just use \`legend\` without arguments.
It depends on the calculation for that set of numbers. You could result in a zero perfectly, or have a sequence of calculations that involve some irrational numbers along the way and get you very close to zero. For example maybe 1/3 - 1/3.
would this help? &amp;#x200B; [https://www.mathworks.com/matlabcentral/answers/377644-hardware-opengl-failure-on-ubuntu-16-04-3-can-not-initialize-shared-resources](https://www.mathworks.com/matlabcentral/answers/377644-hardware-opengl-failure-on-ubuntu-16-04-3-can-not-initialize-shared-resources)
You're plotting the line over and over again instead of replacing the data from your line object. If you post your code it might be easier to explain but you can replace your line info using the line_handle.XData/YData notation.
Here's something a bit more concise that will probably fit your needs numtsts = 24; errs = zeros(numtsts); for j = 1:numtsts % extract the row B_j and compare to all the rows of A % then sum up the false comparisons and put in errs errs(1:numtsts,j) = sum(A ~= B(j,:), 2); end you can then get the number of errors in for sequence A_i, B_j by accessing errs(A_i, B_j)
It is the shape of the surface that causes the behavior ypu see.
It doesn't affect speed. It causes your program to crash if you use too much RAM. Matlab isn't fancy enough to swap hard disk space for RAM, which FEA solvers do.
[Go to site and learn Matlab](https://projecttunnel.com/blogs/Matlab-Projects-With-Source-Code)
Well I agree a textbook would be good but I don’t know how long I will be free to study at MATLAB at work. Technically my job doesn’t require me to know how to create MATLAB functions and scripts(only tab) but I wanna learn so I don’t miss out. So MATLABs getting started pdf is good? 
In that case a pirated copy would be great choice. I still think the getting started guide is sufficient for your needs.
I will try this out. Thanks!
Like any other programming language, it won’t do you much good imho. Just try to solve simple programming problems and gradually you will learn everything you need. 
Well under normal circumstances I agree but as I told the person who pm’ed me, my workstation has no internet whatsoever. Because I am a contractor for the government, I am basically cutoff from the outside world when I am at my workstation 
It sounds like you want to build a class called node, or perhaps something like a [linked list](https://www.mathworks.com/help/matlab/matlab_oop/example-implementing-linked-lists.html). This is a structure common to main languages and some even provide templates for it. It provides references to its neighbors and also stores whatever parameters you require for the items in your list. Your other requests suggest you want to scale this data structure for use in a larger program that evaluates these lists as a unit?