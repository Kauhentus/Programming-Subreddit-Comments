Positive, so it's just the number of times the sign changes throughout the matrix.
That looks much better, thanks for the heads up! Unfortunately my prof is the one who named everything but I'll definitely keep that in mind for my own projects.
yep, just iterate over your list and it should work fine.
As someone who builds GUIs in Matlab and Python, I would personally choose python for this project. Why? Because none of the features you're describing REQUIRE the Matlab engine. Therefore, by using python, you will have the inherent benefit of your code being portable (not requiring a matlab license to run). Having said that, it's perfectly manageable in both Python/Matlab -- so choose whichever one you're more interested in :).
Neither of these will do what you want; `orth()` does create an orthonormal basis for your matrix, and `tril()` does make a matrix lower triangular.. But `tril()` just zeroes out everything above the diagonal. So, now imagine how your remaining matrix looks. You know it has to be square, because it's an orthonormal basis; if all of the columns are orthogonal, there can't be more columns than rows; if there *were* more columns, they would have to be linear combinations of the others, in which case it wouldn't be a basis. Great! So let's say our matrix is n x n, and lower triangular. That means the (n,n) element must be the only non-zero element in that column. If the columns are normal - we did say orthonormal - that element has to be just a 1, though that's not terribly important to the triangularity of the thing. Now the (n-1)th column can't have a component in the nth row; if it did, it would have a component in the same direction in the nth column, and wouldn't be orthogonal to the nth column; but the matrix is lower triangular, so no column can have anything above the diagonal either; it must just have a component in the (n-1,n-1) position. Now imagine the (n-2)th column; it can't have any component in the nth row, or the (n-1)th row, because if it did it wouldn't be orthogonal to the nth column or the (n-1)th column; this continues back to the first column. Now just to be clear: this isn't a proof. I've assumed what we're trying to prove, namely that this matrix is lower triangular. However, this should be enough for you to construct a proper proof, and to understand why just plopping in some matlab commands won't do it. Also, I've all but given you what the diagonal elements are, so you should be in good shape. Good luck!
This question doesn't have meaning without direction. For example, -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 1 Has NO sign changes along the columns, but 12 along the rows. So the question has to be clarified; DStoo was politely trying to ascertain that information. One way to do this would be to treat the whole matrix as a vector by applying the (:) operator without a dimension. If, for instance, your matrix was named `a`, you could accomplish this in one line: `sum( abs( sign( gradient( sign( a( : ) ) ) ) ) )` Generate yourself a random 4x4 `a`, and evaluate those commands from the inside outward to see what each one does.
Right, I already completed the assignment but I had thought he meant direction along the number line for whatever reason. My bad for misunderstanding.
@Rubisco_, you're almost there. The problem stipulates that `p` has to be a vector, which you're not currently doing. Here are [some hints](https://saturnapi.com/fullstack/distance-between-two-points) to get you going in the right direction.
(Gotta get to work, but here's a quick run through...) Here's a general approach to formulating an optimization problem: What sets are you working over? You have a graph, so you have edges and nodes. What decision variables do you have? Again, you want to determine whether you visit a particular node in a graph, so you definitely need decision variables corresponding to nodes. In addition, you'll need decision variables for whether or not you use each edge in the graph. What parameters are you working with? You have weights (points that you get for visiting nodes) and some means of encoding your graph. What constraints do you have? You need to make sure you navigate through the graph in a feasible way, and you need something to make the problem interesting that you haven't specified yet (What is keeping you from visiting every city?) What is your objective? You want to the sum of the weights of the vertices you visit to be maximal. So... Your objective function is a sum_{v \in V} w_v * x_v where w_v is the points you get for visiting city v and x_v is 1 if you visit city v, 0 otherwise. Then, you need to make sure that navigate the graph in a feasible manner. To do this, you want to enforce flow constraints: the flow into a vertex must equal the flow out (except for the nodes you start and end at). If you want the solution to the problem to choose where to start and end: create start and end nodes that are incident to every other node, and use them. Then, you need to link your edges to your vertices. For a particular vertex consider the sum of the decision variables associated with directed edges ending in that vertex. We can set this sum to be less than or equal to x_v * M, where M is some sufficiently large constant value (what value of M is sufficient?)
A+++ summery, considering the amount of information OP did not include in his post.
Tabs are not well supported (at least that I know). The solution that I found was to create a stack of tabs with matching buttons and use the 'visibility' parameter. So that when I clicked the button for a specific tab, it made all the other tabs invisible and brought to the front the tab you wanted. Seems a bit clunky... But works well enough in practice.
I don't know why people are answering that tabs are not supported, [`uitab`](http://www.mathworks.com/help/matlab/ref/uitab.html) has been a documented feature since the HG2 graphics engine was released with R2014b. See [MATLAB's documentation for creating a tabbed interface](http://www.mathworks.com/help/matlab/examples/creating-a-user-interface-with-tab-panels.html) for a starting point. Since you're new to GUIs in MATLAB I'd also recommend you take a look at the [documentation for programmatic GUIs](http://www.mathworks.com/help/matlab/creating_guis/about-the-simple-programmatic-gui-example.html) which has many useful examples and links to other relevant portions of the documentation. 
http://imgur.com/Hx1Y7Ly
How far have you gotten on your own, and where is it that you're getting lost? 
You're probably "awful" because you haven't sat down and spent some time honestly trying to learn from the many, many beginner materials and tutorials out there.
Do all of the files that you want to extract have similar filenames that increment? Like 'file_aaa_001.xyz', 'file_aaa_002.xyz', etc.? If so, I have some code that does a similar thing. edit: This only applies if it's important to you that the data is in order. If you don't care if the data is in any particular order, this problem is a LOT simpler.
2 ways- 1) you could pipe an "ls" through to a text file from the terminal, read that text file for the file/extension you want, or... 2) do this in MATLAB. Call a ls (dir if on Win I believe) and then work on the file list in directory A for the files/extensions you want. I do part 2 to input my data files
Look up concatenation. 
Oh, I feel so silly. I had originally written a mathematical description of what I was calculating. When I translated the mathematics into code I didn't even thinking about breaking down the heaviside function into its rudimentary components. I will implement this solution. Thank you so much.
Ok, the first few steps are going well as far as I can see. So you end up with the differential of your function 'y'. Now you want to replace the x in that symbolic formula with an actual number (pi). That is not what the function 'solve' does. Solve does the opposite (so if you would know your tangent you could find out the value of x but that's not what you want). What you probably want us the function 'subs'. Check the documentation and see if that helps. After that you can make your plot :). Not that you can also enter your pre-defined function in ezplot (so ezplot(y) ). That saves you from changing your code too drastically when somebody asks to do the same thing but now with a different function. Let us know if that helps. 
 n = 4; a = n-(n-2); t=[]; while a&lt;=n; t=[t,a:n]; a=a+1; end
Thanks very much for the advice. I'll go take a look at those. I've been doing some research and there are a couple of toolboxes in the file-exchange that seem pretty good. This one [File exchange] (http://uk.mathworks.com/matlabcentral/fileexchange/25938-multiple-tab-gui?s_tid=srchtitle) I'm trying at the moment. Getting used to handles and callbacks is actually the most difficult thing really. Cheers! 
I didn't realise that so thanks for the info. The software is initially to be used just within my company (very small) so the version of MATLAB should (in theory) be the same for everyone that is using it. I've still got a long way to go before it's suitable for outside use (i.e. by anyone other than me!) but I'll bear your point in mind. Thanks very much! 
Thanks everyone for the advice. I'll go take a look at all of your examples and I'll let you know if I find anything that works smoothly. So far I have found this [File Exchange] (http://uk.mathworks.com/matlabcentral/fileexchange/25938-multiple-tab-gui?s_tid=srchtitle) toolkit which seems to be pretty good and basically has all of the functionality in it that I need. Having never used the GUI function in MATLAB I'm sure I'll have more questions! Thanks everyone, BG edit: *Also added link in comment below*
1. Good start. 2. Learn about pgfplotstable, it can be be a very helpful package. 3. I have written my own as well. You will find what you did there to be extremely limited. A few points: * Develop two sets of code: one for a matrix, another for a table. This way you can take things such as captions/headers/spanners for tables, and write out a plain matrix if you want a matrix. * Take in a formatSpec, you may not always want to write your number as %8.3f. * What about complex valued or symbolic valued entries? fprintf does not handle complex valued entries. I have found that I would occasionally work with symbolic matrices with entries like alpha_1, x_1, cos(beta); being able to support them is very nice, and using strrep allows for easy mapping for alpha_1 to \alpha_1 and cos(beta) to \cos(\beta). * Check for integers/trailing zeroes. Say you have fields that are 0, 1.5, 1.433. You just output 0.000, 1.500, and 1.433. Checking that abs(round(TABLE(k,l))-TABLE(k,l))&lt;10*eps, will show you if you have an integer.
One minor comment: the filename should be provided by user as another input argument, not hard-coded. And perhaps there could be an option to return the latex code as string instead of writing to file (perhaps when filename argument is set to empty).
nice! you should share it on matlab central with an screenshot example image of what it does!
Finding out how to print a matrix wouldn't be too hard now anymore. I was thinking about doing that with the formatSpec, but just didn't get around doing it. Thanks for the tip how to handle trailling zeros.
I think your problem might be floating point rounding error. It's because certain numbers cannot be represented exactly in 32 and 64 bit floating point. There's not really any way that I know to get around this (someone correct me if there is), but you can try converting to double precision from single to improve results and keeping everything symbolic and not calculating the result until the end. If you go here: http://www.h-schmidt.net/FloatConverter/IEEE754.html and type in 2.4, it will show you what it is in binary and what that binary converts back to. You'll see that it's not the same number.
You can get around it by fiddling around with the f'n eps() [I think] but this is an issue inherent in floating point operations, that the difference between you (by hand) getting 48 and the computer getting 47.99999999999 is very very small, 0.0000001, something that you don't care about and you (correctly reaaon) shouldn't be there. You can also use the round/floor/ceil function to do some gymnastics to get around this and to your desired answer. Sorry for the wall, and I'm also on mobile so forgive typos. A real quick way to do this is to take the difference, and compare it to, say 0.001. And if smaller, you know you've arrived at your exact answer (within the floating point precision).
It is possible in principle to avoid it, just not in MATLAB. IEEE 754-2008 defines decimal floats, which are base-10 floats instead of base-2 floats. They don't have this problem. Many languages support decimal floats (either IEEE 754 decimal floats or arbitrary-precision decimal floats), but MATLAB isn't one of them as far as I have been able to find.
Also, take a look at [this](http://stackoverflow.com/questions/8825796/how-to-clear-the-last-line-in-the-command-window) They talk about the `\r` to clear the last line. Maybe that is what you want **edit**: Example: fprintf('Running:\n\n') for i =1:100 fprintf('\r %03i',i) pause(0.05) end 
Really? Totally didn't know that. Thanks for the info! 
It's because you have your formulas wrong. v(t+dt) = v(t) + a(t) dt x(t+dt) = x(t) + v(t) dt
My problem is that I have to determine a number of intervals by dividing 2.4 by 0.05. If the result is not an integer then the 0.05 should be changed so that I get an integer number of intervals. 2.4 can be divide into 48 intervals but when I perform the check ( rem(a,1)==0 ) I get that 2.4 cannot be divided into exactly 0.05 parts. I have to add some more code
What output are you expecting? %d is for integers, and you're passing in a float.
Ah yes, thank you. Through some trial and error, and a few slight alterations, I managed to get what I wanted from that link you sent. As of now, it's something like this: stringN = 0; while .... .... % Loop counter fprintf(repmat('\b',1,stringN)); fprintf('%d completed iterations',iter); stringN=numel(' completed iterations')+numel(num2str(iter)); end And that prints out my loop counter on one line. My next step now is figuring out how to get it to print out maybe another value on the line below this, but I should be able to figure that one out.
The error is because you're calculating v(t) and x(t) using linear approximations. Choose a smaller dt and you'll notice your error decreases. The plot doesn't look flat because you're not comparing to the exact value, which you can calculate using your initial conditions. Put this at the end and adjust your y scale. figure; hold plot(t,e) plot(t, m*g*xint*ones(1,length(t))
Ah so you want to have it in scientific notation? %e should do the trick.
Use a tolerance instead of equal to. As the other guys explained the theory I just comment what I do when floating numbers disturb my every day peace :-) Example: If (2.4/0.05==48) Do stuff End Instead. Tol=0.001 If (2.4/0.05-48 &lt; Tol) Do stuff End
Thanks! Somehow, since it was working having written Format longE before and that it was working with non-integers inputs, I thought it should've work. 
I thought about that but for measuring unit consistency I prefer not to
what if you multiply everything by 100 so that everything is integer? And then it becomes a test of divisibility?
Whenever I need to evaluate a complicated expression using Simulink, I like to use a "user-defined MATLAB function." This allows you to write code as though you're writing a MATLAB function, but it runs it in Simulink. In your case, the inputs to the user-defined function would be m1, m2, l1, l2, theta1, theta2, omega1, omega2, and T. The output would be omegadot1.
Well it's not just MATLAB that isn't allowed to do that, *you* can't do it it either. So what do you want to do instead of subtracting things that can't be subtracted?
I would look in to S functions. They're much faster than using user functions.
That's what I'm not sure of. The formula for residual that we learned is [A][true solution] - [A][numerical solution]. This formula works if I don't preallocate the matrix for the numerical solution, because the numerical solution matrix will just be a 3x1 matrix. However, the plot won't work if I do this. How can I store the values generated in the loop for plotting without messing up the dimensions of the matrix?
Can I pls get a copy
Are you serious? Google is your friend. Literally type into google "dc motor simulink model" and you'll find all the equations you'll need.
Seeing a later comment, printing matrices seems to have a build in function, latex(sym(your_array)). 
it's a second-order homogenous DE with known A, B, and C values. so your professor is basically asking you to investigate values of B and C and corresponding w_n and zeta https://www.khanacademy.org/math/differential-equations/second-order-differential-equations/linear-homogeneous-2nd-order/v/2nd-order-linear-homogeneous-differential-equations-1 once you understand the nature the solutions for certain B and C values, you can start to think about varying w_n and zeta values (in turn varying B and C). EDIT: that video series is a little convoluted. check [this out](http://www.stewartcalculus.com/data/CALCULUS%20Concepts%20and%20Contexts/upfiles/3c3-2ndOrderLinearEqns_Stu.pdf) EDIT2: [this equation describes "free vibration" ](https://en.wikipedia.org/wiki/Vibration) 
Hmm... Well when in doubt use WolframAlpha to give you [an answer or some clues](http://www.wolframalpha.com/input/?i=x%22+%2B+2*a*b*x%27+%2B+%28b%5E2%29*x+%3D+0).
Is that math? :P
Haha wow. That's crazy.
One way I've got around this in the past is to open a new figure, copy the object to the new axes (look into copyobj), save the figure, and close the figure, all of which you can automate in a callback function from a save button in the gui. 
A line can be described by the equation y = ax + b, in which x is the independent variable, y is the dependent variable and a and b are two arbitrary constants. If you have two points, you have sufficient information to find the constants a and b to create a line between those two points. Then, using the equation y = ax + b, you can find the value between those two points. This principle is the same for three dimensions, only the equation for a line in 3D is slightly different. 
I'm actually currently installing matlab so I can't test this out, but this is what I suspect is happening. (also I just woke up so my brain isn't fully on...if you need me to clarify any of this please let me know) so you're doing *angle = [x y z]* then *sin([ x y z])* which gives us an answer in format *[a b c]*. And cos is the same. So that's all correct So then we have *slope = [a b c] / [d e f]* here, you're using the '/' operator, which is actually [mrdivide](http://www.mathworks.com/help/matlab/ref/mrdivide.html) which "Solve systems of linear equations xA = B for x" aka not what you're trying to do. Instead, you want to be using './' ([rdivide](http://www.mathworks.com/help/fixedpoint/ref/rdivide.html)), which will divide a/d, b/e, c/f, etc. ETA: ran it on another computer. Changing it to "./" gives me [0.5463 0 -0.5463 1.5574] which (from how I read your post at least) is what you were expecting.
Must this be simulated? Or can you simply plot an analytical solution? 
http://www.matlabi.ir/
I don't think it can be analytical, because I'll be including friction and other special equations for mechanics and the specific problem. Could you add a trailer hitch to the back of the analytical solution, given the equations for static equilibrium?
Yeah, the free-body diagram and equations are getting pretty complicated for this one, and it needs to be specific. :/
I mean, it doesn't seem *that* bad. It's a plane, right? Not a curve? So it doesn't really matter much if there's a trailer unless the trailer is on flat ground while the truck is on the incline, and in that case it's still a simple problem. Sounds like a piecewise analytical solution should be fine. 
This seems like a lesson on vectorization. First off, N=N is not necessary, at any of the steps, nor is x=x. So, you're dropping each term of the Taylor series into a position N in your vector xl, then summing that vector to get your y. But xl(N1+1)=((x.^N1)./factorial(N1)); This code wants to assign a value to one single member/position of xl...you're telling it to assign a vector to a scalar when x becomes a vector. Since this seems to be homework, I'll leave it at that, but feel free to ask more questions in reply, and I recommend you searching for more stuff on vectorization, because that seems to be what they're aiming at teaching you.
What do you want to solve for? Position(t)? You could probably find an analytical solution to this pretty easy if you're only looking on potential energy and friction. P_tot = P_friction + P_potential + P_kinetic P_friction = C_rr*Nv P_potential = mgvh'/sqrt(h'^(2)+1) P_kinetic = mv'v h'= tan(theta)
The thing is, I need to take into account having an additional weight on the rear of the body, like a trailer, and see how this affects the tyre mechanics for both front and rear wheels... Do you think analytical could still suffice for this very specific problem?
Thank you, using ./ gave me exactly what I needed! 
Yeah, the normal forces for now. I'm having a hard time traversing a sandy slope with a project, and I'd like to see how manipulating the weight in the rear could change that, so variable loading and variable incline angles.
The answer is 16.
Want us to print out a degree for you while we're at it? Who should we make it out to?
plot3 only plots single points, you have to use quiver3 if you want a vector. p=[5; 5; 5]; dp=[1 ; 1 ; 1]; phi= 30; psy=30; Rps=[cos(psy), -sin(psy), 0; sin(psy), cos(psy), 0; 0, 0, 1]; iRps=[cos(psy), sin(psy), 0;-sin(psy), cos(psy), 0; 0, 0, 1]; Rph=[cos(phi), -sin(phi), 0;sin(phi), cos(phi), 0; 0, 0, 1]; %hold on for i = 0:1:90 Rth=[cos(i), 0, sin(i); 0, 1, 0; -sin(i), 0, cos(i)]; iRth=[cos(i), 0, -sin(i);0, 1, 0;sin(i), 0, cos(i)]; xq=dp+Rps.*Rth*Rph*iRps.*iRth*(p-dp); quiver3(0,0,0,xq(1,1),xq(2,1),xq(3,1)) hold on; drawnow; pause(0.1) end hold off;
Ya that works! I guess I have to brush up on my linear algebra. Thank you for the help
Happens to the best of us :)
I can't exactly help you using built-in Matlab functions but I can tell you from experience, you should still be careful. My entire dissertation involved Legendre polynomials so I familiar with their quirks. The big thing I will say is to make sure to read the documentation on whatever you're using. Legendre Polynomials are not, themselves well-defined. What I mean by that there are degrees of freedom in the definitions that will change the results. No only answer is more correct than another, but you need to be aware of what you're getting.
Look more at the `min` function. You can set a direction. Code: A = [1 2 3; 4 5 6; 7 8 9]; disp('No dim specified') disp(min(A)) disp('Specify 1') disp(min(A,[],1)) disp('Specify 2') disp(min(A,[],2)) Results: No dim specified 1 2 3 Specify 1 1 2 3 Specify 2 1 4 7 Does that answer your question?
Looks fine. If you want to vectorize, ditch the for loops: p = 1000; n = 1:120; t = n / 12; a = p * (1 + 0.01/12)^(12*t); disp(a); 
Ok, I just answered your question but I think I may have mis-interpreted it. Are you looking for the min, then the next? One way to do that would be `sort`. This is one of those examples where there is almost certainly a Matlab way to do this with vector operations, but for the sake of coding speed, you can do it in a loop: clear A = [28 17 30; 19 29 29; 3 29 15; 9 5 25]; nmin = 2; % Number of min entries you want Amin = zeros(size(A,1),nmin); for irow = 1:size(A,1) temp = sort(A(irow,:)); Amin(irow,:) = temp(1:nmin); end Result: 17 28 19 29 3 15 5 9 Again, there is probably a non-loop way to do it but unless your input in huge, this is easier.
I've been looking at that on the MATLAB website, the problem I'm coming across is I end up have only a row. A = [ 4 5 7 2 5] (the dimension is user input) so I want a min(A) but varying for 1 to 1 less than the dimension. Also, I need to use the output in later code, not just display it. 
I'm working to understand it better, but I'm pretty positive that this will work for what I have, (it'll never be larger than say 20 or 30). Thank you so so much. I've never done anything with coding so I'm struggling with what I'm sure is pretty basic stuff. 
What have you tried?
It's implicitly defined. You need a subroutine which solves this for S given t. 
I would suggest you use the text() command. If you know the X and Y position of the point of interest, you can add a text description with the value you want to print. See also [this](http://mathworks.com/help/matlab/ref/text-properties.html) and [this](http://nl.mathworks.com/help/matlab/ref/text.html) page.
i don't want to write on my figures. I want to "export" the values from my graphic figure into a .txt file with fprintf. So for example at [0 0] i have the value of 5, i want to get a "value_at_00" = ??? which equals 5, than value_at_01 etc.
&gt; What we found is that for some cases, the computed results are not as accurate as they should be for integer b between 3 and 7. Of course not. This is a great way to cause floating-point rounding errors.
doc format
I certainly cannot answer *why* it is faster other than a guess that the power algorithm is more general purpose and made to handle non-integer (including `&lt;1`) so it is that baggage and overhead. (this is a guess though). I do know that this isn't new nor is it related to Matlab. When I did some classwork in C++, the instructor told us to use something like `x2 = x*x` (not Matlab so no `.*`) and to avoid powers whenever possible. Again, I know this doesn't help, but I find it hardly surprising
Matlab will default to a universal format when you print something. For example &gt;&gt; disp([1 2 3]) 1 2 3 &gt;&gt; disp([1 2 3.00001]) 1.0000 2.0000 3.0000 &gt;&gt; disp([1 2 3.2e3]) 1 2 3200 &gt;&gt; disp([1 2 3.2548e3]) 1.0e+03 * 0.0010 0.0020 3.2548 The only way around that is to use a `fprintf` or `sprintf`. For my own uses, I've written tools to make it cleaner but they are not general purpose. You could pretty easily write your own.
Totally agree with you there. I only wish I knew this from before. I guess it is my own fault, but nonetheless it surprised me. And maybe someone that sees it here will learn from my mistakes.
Can you repost your code in a formatted fashion? Which line is line 5 in your file?
You had some minor syntax errors. syms y(t) t = 0.1:50:200; Dy = diff(y); solution = dsolve(y(2) == 5, t*Dy + 3*y == 5*t.^2); This still doesn't work yet, but I think I moved you from syntax errors to a math error. What is this code supposed to be doing?
C and C++ compilers (and Fortran of course) will do this automatically at certain optimization levels. You don't have to write awkward code, just flip on the optimizer. And when you care about accuracy don't flip on the optimizer. Easy. Optimize at the algorithm level, not syntax.
Your answer to this answers the question of what tradeoffs you'll get, but it doesn't answer the 'why'. The 'why' is that a.^b for scalar b probably just calls the C function pow(a_i,b) on each element of a. The C function pow() can take uses a LOT of complicated mathematics and approximations and calculus techniques to approximate any floating-point value b, including negative, fractional, and complex values. Even in the worst case it is often implemented as pow(a,b)=exp(b*log(a)), and exp() and log() are both functions that are *very* complicated. In contrast, you can implement pow(a,b) for integer b in log(b) nummber of multiplications using the exponentiation by squaring algorithm. 5 floating-point multiplies is almost guaranteed to be faster than exp(5*log(a)) 
 format bank
v7 isn't saving any data. Hence its super tiny. v7.3 is saving the data. Your arrays are big 100000 is quite large. Someone could back of the envelope the calculations to see but I bet the 248mb make sense. 
Thanks for the reply! The example I pasted in didn't save any data for -v7? That is strange, it saves data when I do it here. I guess for comparison, I have a table with 1.1e6 rows, 18 columns, that takes 10mb. I think the 248mb is really big for this amount of data, especially compressed. Any other ideas or things I could look into?
Looks to me like he's trying to solve a differential equation with an initial condition.
There is built in compression in the mat file format, so it's not immediately clear that the calculation you did would hold up. 
Hello! When I run your code with your test data, I get back your expected results. Are you sure you evaluate the correct variable in the end? In the code your variable containing the results is called xy_velocity, but in the text it is called xy_vel.
thank you man, i think we are getting closer, but the thing is, i need to do this automatically (on enormous amount of data and figure, i'm planning overnight running of my script) now if i click my plot, i can export data like this: 4 [4 4] 1x1 Line 5 [5 5] 1x1 Line 6 [6 6] 1x1 Line so i want to export the value at [4 4], [5 5] etc without any user input :\
You need to say your version
I was trying to get OP to think about and verbalize what s/he is trying to do.
-v7.3 does not compress all of the data. See [this discussion on MATLAB Central](http://www.mathworks.com/matlabcentral/answers/15521#answer_81770) for some more information.
I'm not really understanding what you want. Your question revolves around data cursors, which require user input, but you want to run this without user input? Can you please clarify what you're looking to do?
http://imgur.com/erY2iTj So i have this kind of contoured plot. I exactly need the 'level' value of predetermined pixel positions (like [0 0] in the attached example), and other two positions (lower left and upper right part). Since now the only method i found was to use the data cursor to extract this information from the plot
I hope i have understood you correctly. Try this: clearvars time = (0:0.01:10)'; % Create some random noisy acceleration signal xy_acceleration = repmat([0.99 -9.9],[length(time),1])+ ... (rand(length(time),2)-0.5)*20; x1_accel = xy_acceleration(:,1); y1_accel = xy_acceleration(:,2); x1_vel = cumtrapz(time, x1_accel); y1_vel = cumtrapz(time, y1_accel); xy_velocity = [x1_vel, y1_vel]; figure(1), clf plot(time,xy_velocity) grid on Is this what you are looking for? Maybe your 'time' and your 'xy_acceleration' didn't have the same length? What error message do you get? 
Oh, sorry, I really haven't understood you correctly. Take a look on this page: http://www.mathworks.com/matlabcentral/answers/155077-confusion-using-cumtrapz-for-acceleration You maybe have to add some v_0 to your velocities, like x1_vel = cumtrapz(time, x1_accel) + v_x0; because basically cumsum numerically calculates the indefinite integral. You need to add an integration constant given by your initial condition. Try: x=0:0.1:10; v=sin(x); and a=cumtrapz(x,v); After plotting you'll find out, that a has an offset of 1. Do you know your initial velocities ? 
I'll say that the one major advantage of Matlab is that it does linear algebra really well. Things like vector and matrix multiplication is blazing fast (hence **Mat**rix **Lab**oratory), and much easier to use than most other languages. It's much easier to tinker with a numeric implementation because of how well Matlab does high-level numeric computations. That being said though, I personally prefer Python. There are modules that basically give you all the functionality of Matlab (scipy, numpy, matplotlib), but you still get to have a real programming language with non-idiotic classes and proper string handling. 
As /u/u2berggeist mentioned, it's more for people who don't want to program. The toolkits available for it are extensive, and it's most useful as an algorithm development tool. It's also capable of a few other high level problem solving situations, but from my background (mathematics) it's an easy way to develop algorithms while having a ton functionality on hand that way you don't have to dig through APIs and documentation just to visualize your results. That being said, it's built on java, so it's undoubtedly slower than say C++, but the language and syntax are pretty close to python in terms of simplicity, so it's easy to pick up. The syntax also makes it massively easier to learn how code from other people works, so instead of learning why someone is using a pointer, or dereferencing, all you focus on is what the program is trying to do. It handles all memory and things like that in the background. While it's not as powerful as C++, it was also never meant to be. 
It's a scripting language that is (in general), much slower than proper programming languages or newer scripting languages, however is extremely fast at sucking up cash and raising your blood pressure. If all you're doing is prototyping new algorithms within a linear algebra paradigm, then cool beans. Programmable(scriptable) calculator, as uberggeist said. That being said, I hear Simulink has a pretty compelling use-case. If someone wants to explain to me what it does, that'd be nice. Letyougooglethatforme.
Point taken. MATLAB is more like a package, for sure. However, I think the point still stands that the advantages (and disadvantages) you listed are really marginal when compared to other options. Depending on exactly what you're looking for, it might be the best tool to use. But I would say that it's rarely head-and-shoulders better.
&gt; But that said, it has many toolboxes which are simply not available in other languages. True, but on the other hand it lacks many toolboxes that are available in other languages.
I don't even know of other languages that even call their libraries toolboxes. Which ones are you referring to?
IDK, if what you need from MATLAB can be done using the 'backslash' operator I think MATLAB can give any other solver a run for its money, especially for sparse linear algebra. e.g: [MATLAB vs SuiteSparse](http://www.alecjacobson.com/weblog/?p=4161) Other than that, I would recommend any young scientist to take up python (esp. ipython notebooks) rather than MATLAB. 
&gt; That being said, it's built on java, so it's undoubtedly slower than say C++, The GUI and graphical stuff is built on JAVA, but the language itself is mostly C and the numerical libraries it uses are mostly a combination of Fortran, C, and C++. The MATLAB language itself actually predates JAVA by a good ten years.
Yes, I think you're right. I wasn't adding in my initial conditions. I'm a little embarrassed about that... I also wasn't using the correct limits of integration when I was hand calculating the "cumulative trapezoid"... I was only doing the "trapezoidal integration". I'll post back if I have trouble. Thanks.
It's true that displaying things nicely in the command window can be tough. Here's one way: %% fake data X = randi(30, 1, 78); %% define row size NumsPerRow = 25; %% Number of rows N = ceil(numel(X)/NumsPerRow); %% Loop through and print for n = 1:N startIndex = (n-1)*NumsPerRow + 1; stopIndex = startIndex + NumsPerRow -1; stopIndex = min(numel(X), stopIndex); L = stopIndex-startIndex+1; fmt = [repmat('%3d ', 1, L-1),'%3d', '\n']; fprintf(fmt, X(startIndex:stopIndex)); end Here is another trick if you want to just view it in the variable editor: %% Another way Z = zeros(N,NumsPerRow); Z = Z'; Z(1:numel(X)) = X; Z = Z'; openvar('Z') Now, your job is to go through and figure out why this works. Check out the format string in the fprintf statement and figure out why I made it that way.
Matlab is always fastest by preallocating variables. A table is just a matrix with labels and borders... Otherwise ml will create, erase, and recreate your variable in memory at each iteration until it has finished crunching. Src:They just covered this at my university users meeting. Of course preallocation is not required, matlab just runs faster if you do.
That's actually really insightful, thanks for the comment!
This is a bad question. While Maple and Matlab share some functionality, their purposes are well defined in practice, and thus the choice depends entirely on your needs. Anyway it appears that you're in school right now. If you're doing engineering, stick to matlab - this is what your community knows best and therefore can help you most with. If you're doing sciences (math/physics/computer) then you'd end up using both eventually.
computer delivered tutorial
If you need to do algebra, calculus, or other work with symbolic mathematics use Maple (or Mathematica). If you need to do data analysis, statistics, simulations, or other work numerical values, use MATLAB (or Python).
Hello! The histogram can be made by adding histo=repmat(' ', [10 10]); for n=1:length(b) histo(n,1:b(n))='*' end % Display output [num2str(c), repmat(' ',[10,1]), histo] to the bottom of your code. 
Create a state space representation of your transfer function. Impose an initial condition on the rate. Then integrate to get your state. 
I would say, from anecdotal evidence, you will end up using Mathematica more than Maple for hardcore symbolic work. Again, that is anecdotal but was pretty clear from my experience (bachelors physics, masters and PhD, engineering). And to OP: you will find matlab and maple/mathematica have a lot of common functionality but they are really not designed for the same thing. It is like towing a trailer in a sports car: sure you *can* do it, but that's not really what it was designed for. I know that when I only needed some brief symbolic work, I did it in Matlab since it was right there and I am more familiar. But if I needed anything hardcore, I'd go to Mathematica
For what values of t?
Did you try http://www.mathworks.com/help/matlab/ref/ezplot3.html
&gt; and why am I getting this error? We have no idea what error you are getting.
When I try and run the script it tells me there is an error in that line. I don't see what is wrong with it 
&gt; We have no idea *what error* you are getting. There is nothing inherently wrong with that line. Without you telling us what the error you are getting says, we can't help you.
I edited the original post with the code and error.
I don't think there is a function to get the "centerline" from a skeleton (hope I'm wrong!). You could write something that keeps only the longest continuous line, then just count the "on" pixels... Or you try using a Hough transform to find circles on the thin or skeleton images (imfindcircles I think). Then check each pixel for it's angle to the circle center, and find the max and min, then get the contour length from that and the radius. 
I made this change but I'm still finding errors. This time these ones: Error using plot Too many input arguments. Error in Untitled8 (line 5) plot(t,y(:,1)); title('y')
Your example is extremely similar to the one given in the link. They are both supposed to be a curve in 3D space.
I'm pretty new at all this. Any recommendations for measuring out the different continuous lines? Edit: Also could you elaborate on the Hough Transform a little bit? Thank you for your help!
Automated would be best. I'm hoping to be more accurate than that. I also should have specified that the curve can be more complex that the one shown.
I've always been told that the symbolic toolbox in Matlab is partially Maple (maybe they even bought it and added it as a toolbox?). Though I'm not a Maple user (only used it once or twice, and that was 5 years ago).
I'll second that.
You can use "fi" to create fixed point types, but it has a fairly large performance impact. Managing fixed point type adds extra complexity to the code. The typical workflow is to make your algorithm work for doubles and then go back and convert to fixedpoint while chosing appropriate word and fraction lengths that match hardware and data constraints. It sounds like you're having floating point issues. Those are typically solved by appropriate use of floor, ceil, round, roundn or a comparison with eps.
Specifically I need to do a colon operation later in the code and it is giving me inaccurate measurements. I will look at ways of writing the code around it though
Thank you, this is what I was looking for!
It's for a project in my intro to computer engineering class. Our professor wanted a very specific displaying of the histogram. Here's what the homework assignment looked like if you're curious: https://gyazo.com/e9a8b1af1f0df112ff0acba4a93c690c
thank you!
To clarify, do you want to take this: A = cat(3, [1 4; 2 5; 3 6], [7 10; 8 11; 9 12]) and make this? Target = [1 2 3 4 5 6; 7 8 9 10 11 12]
Exactly, and I need to keep track of the cells that represent numbers 4,5,6,10,11,12 My original array is 60x80x60
First you need to learn/brush up on linear indexing in MATLAB. That's the order in which each element is placed into an array, regardless of size or shape of the array. MATLAB uses column-major indexing, so the ordering is this: * 1. down each column * 2. across rows * 3. through layers (3rd dimension) So in my first array: A = cat(3, [1 4; 2 5; 3 6], [7 10; 8 11; 9 12]) each number indicates its linear index in the array. So when you use the reshape command, you're taking the numbers out of the array A in their linear index order. Then you're defining a new shape for the array and placing them into that array in the same order. Try this: A = [1 4; 2 5; 3 6]; B = reshape(A, 2, 3) Note how the order goes down the columns and then across the rows. Now if you want to tell MATLAB "reshape this into an array with 2 rows" without having to calculate the number of columns, just use []: C = reshape(A, 2, []) It's a little trickier when working with 3D data, but it does work the same and the next step to solve your problem isn't too far off.
Nice. I think that this would do the same, though I haven't tested in on larger arrays: B = reshape(A, [], 2)'; % note the transpose
I tried that on my data set and it also worked (changed the 2 to a 60 in my case). Thanks for the brain exercise! Hours lost trying to do this on my own. This allowed me to compare a colleagues data set to my ours and low and behold...they are identical and produce the same results when passed through my code to analyze it. We originally thought the code had an error but this cleared that up (and saved me another massive headache).
These "please do my homework" questions are starting to annoy me. Maybe we need to implement a rule that you need to be a member of /r/matlab for at least a week before you are allowed to post anything.
Monto Carlo simulation is where you simulate a lot of instances of a stochastic process to see what the overall result/output/whatever looks like. Do you have some code that shows how one "run" of your process is implemented?
Pay attention to the domain/intervals. 3.c. is about expanding the domain (called "interval" in the assignment) of the approxCos function.
so im trying to use those trig identities in a way to only use approxCos(from -pi/4 to pi/r) since that is where my least amount of error is
You might want to familiarize yourself with the way arrays are indexed in matlab. If you had posted an error message it would have been easier for you to see. As this stands now it's just a tiny step up from just throwing the assignment in here since at least you posted the code you already wrote. It would be better if you posted an error message and some guess where you try to interpret it. I think anyone with a bit of experience in matlab can tell you straight away where your error is, I just don't see the value for you.
Instead of using commas you could separate with tabs: '%f \t %f \t ...' Alternatively you could just use xlswrite(matrix) and get an Excel file. It will output to csv if you don't have Excel on your computer.
Pseudo code because I don't have matlab open: for i = 1:size(array,2) fprintf("%f ",array(i,:)) fprintf("\n") end
i keep getting "index exceeds matrix dimensions", and an error in the fprintf (i did everything exactly as you wrote it out, any ideas?) Edit: errors in the code
&gt;Host Name: Poomba All joking aside, I'm wondering if you're trying to install 64 bit matlab on a 32 bit machine?
Nope, it's a 64 bit on a 64 bit. I think JAVA might be causing the problems. Bit I don't know what and how to fix it.
i keep getting an error, and i have used the "help" and cant find anything which is why i came here. im just learning matlab and for loops are new territory for me Edit: im getting the array to display (THANK YOU VERY MUCH) but im still getting those errors i previously stated..
Edit: solved it, thanks again for your help! i would give gold but im a broke college student :C
Oh ok, so you just want to alert the user instead of annotating something on the plot. msgbox is pretty easy to use: if (ship_is_hit_condition) msgbox('The ship was hit') end
Many of your questions are answered in the documentation, which is the first place you should look when you have a question about a function. http://www.mathworks.com/help/matlab/ref/eigs.html Why are you using 'lr' if you're looking for the lowest real values? You should be using 'sr' since 'lr' returns the largest real values.
My mistake, I meant to write largest real value. I've read that and it didn't answer my questions. Can you show me what I missed? I'm really not seeing it.
The java exception is complaining about a missing setting. Have you previously installed MATLAB on this compute? If so try deleting your MATLAB preferences. If that doens't work call tech support.
I don't know enough about the numerics at play to postulate why the default for p is what it is, generally those are set for robustness for a wide range of cases, but for edge cases such as yours the option is there to be tweaked by the user. If you've found a setting that works well for you, then I see no reason not to use that if it doesn't impact your results. Reading the documention some more, it evaluates convergence as "Convergence: Ritz estimate residual &lt;= tol*norm(A)." 2^(-52) = 2.220446e-16, which is the minimum difference you can represent with double precision numbers. The likely reason it uses the norm is because you don't want to be going that far down if your matrix has elements O(10^6), so instead it's essentially a really small percentage of the norm of your matrix rather than a fixed number
Did somone just call python modern oO
Which languages, specifically, work like MATLAB does in this regard? As far as I can find, Fortran 77, Cobol, Pascal, Lisp, Algol, Scheme, Smalltalk, APL, and even PL/I all allow normal comparison operators to be used for strings (or character arrays). According to [wikipedia](https://en.wikipedia.org/wiki/Comparison_of_programming_languages_%28string_functions%29#Compare_.28relational_operator-based.2C_Boolean_result.29), lots of languages that predate MATLAB work this way. C compares pointers, so it isn't like MATLAB either, but that approach seems to be an uncommon approach as well. Fortran prior to 77 didn't have characters or strings at all.
Look into the numerical stability of the eigenvalue problem. Your matrix may be ill-conditioned. (I'm not very familiar with the eigenvalue problem, so I can't say much further).
The stability of the matrix is fine and will converge if the max iterations is increased from 300. I didn't understand what the norm of the matrix had to do with the tolerance. When you said O(10^6) I was wondering if having values of O(10^7) might cause me more problems.
&gt; When you said ... I'm a different user than the person who originally replied. &gt; will converge if the max iterations is increased from 300 OK, so what are you trying to resolve? 
So your input dates are strings, some with an extra space on their end? You can try some way using length()/numel() functions on each entry, check how long that date string is, and exclude those that are one longer than your normal, expected date entry. ... or those that are, and you still want to input that data (if present), have an if-statement to handle your two cases.
You can use "hold on" or "hold all" to graph multiple plots on the same graph. 
What are you having trouble on? What have you tried?
Im having trouble putting the function into matlab, I think I need the parametric form of the equation, but I cannot find much information on doing that. Also just getting the figure on the page in general. 
Yes, been there done that. Not helping, just giving me common API information, but I don't know how to use the methods, or how to input into them, literally my first time using matlab with no formal introductions
do your own homework
Awesome! I used much more code my first time around for that one. Now I have hit an issue where surf doesn't accept complex variables, but I have an hyperboloid of one sheet where each term (x,y,z) is squared. How do I go about that?
Thank you for the help! I don't think I'm allowed to use the switch case b/c we haven't learned it yet :/
Generally, you check the difference between the last answer (from the prior iteration) and the new answer. As you perform newton-rhapson, this difference will (should) decrease because you're converging onto the final solution. Once this difference is small enough (you need to select an arbitrary threshold), cut off the iteration. 
ty!
For sure! Hope it worked out. I had a similar hw problem to this last week. 
What version do you have? I think symbolic functions are a pretty recent addition.
mmm I'm not sure what you are asking, and I can't access your link on another comment thread, but with the bisection method, you simply reduce an interval `[a(n) b(n)]` by half at each iteration, in which the root lies. So if you chose the mid point of the last interval as your approximation `x(n) = .5 * (a(n)+b(n))`, the maximum error is half of the size of the interval, i.e.: |x(n)-xTrue| &lt; .5 * |b(n)-a(n)| where `xTrue` is your true solution. Now two thing: 1) Usually you don't *know* the true root (and that's why you're trying to approximate it), so if you know the root is positive, you use what I wrote before, and the *relative* error is then |x(n)-xTrue|/|xTrue| &lt; .5*(b(n)-a(n)) / a(n) 2) If you are comparing different methods, then you can run these methods for as long as the error is more than the numerical accuracy of MATLAB (compare you error `|b(n)-a(n)|` or `|x(n+1)-x(n)|` with `eps(x(n))`, where `eps` is a MATLAB function to say what the numerical accuracy is), and then you can compare the evolution of the error size with iterations and plot them or whatever you are trying to do :)
eew that needs editing to be readable
vpasolve is a numeric solver (although working in high-precision arithmetic), so you should still provide a starting point (otherwise it uses its own, which doesn't seem to work in this case). For example this works: syms y f = (-(4/(1*y)))+(((((((1+(0*y))*y)/(1+(2*y*((1+(0^2))^0.5))))^(1/6))/0.012))*(((((1+(0*y))*y)/(1+(2*y*((1+(0^2))^0.5))))*0.001)^0.5)); vpasolve(f, y, 2) ans = 2.6986206132358778703947419731616
no it was not me and I think it's because he gave the direct answer to probably what is homework assignment 
For the sake of others reading, I ran the following code: &gt;&gt; syms y &gt;&gt; F = (-(4/(1*y)))+(((((((1+(0*y))*y)/(1+(2*y*((1+(0^2))^0.5))))^(1/6))/0.012))*(((((1+(0*y))*y)/(1+(2*y*((1+(0^2))^0.5))))*0.001)^0.5))==0 &gt;&gt; simplify(F) y*(y/(2*y + 1))^(2/3) == (12*10^(1/2))/25 &gt;&gt; pretty(simplify(F)) / y \2/3 12 sqrt(10) y | ------- | == ----------- \ 2 y + 1 / 25 
I apologize for the awkward formating
Great post!
[removed]
Woah. You just introduced me to the "pretty" function. That is fucking brilliant. 
Thank you so much for your input, I greatly appreciate you taking time for a detailed answer when my question was so vague. I'll be posting my progress post nudge! U da man cranium
If you can describe it with words, Google it, and you'll probably find a solution. But please feel free to post if you get stuck. Good luck!
You need to create a bus object, which you then set as the data type of the input signal in the function block. Check out Simulink.Bus.createObject. 
Can you just index your loads between your desired time periods and average them? Do you have any specific code for what you have/want to do?
Nice, rocking oop in matlab! I think you just need to import your class to the function's workspace. http://www.mathworks.com/help/matlab/matlab_oop/importing-classes.html
Agree that this makes the error go away, but that's not really the question. That is, it doesn't explain why the error is there in the first place, particularly when the import *isn't* needed when doing the same thing from the command line. Also, the import isn't necessary when merely accessing package.Class.property *without* the unpacking to a comma-separated list. 
You didn't tell us if your loads are measured periodically (i.e. you have a load for every second of measurement) or whether its sporadic... meaning you have random times with different loads. **Could you describe your data more clearly?** Anyway, you might want to try *indexing*... say you have to row vectors one for `load` and one for `time`... you could calculate the mean of a variable amount of data between 20s and 40s by doing something like: mean(load(time&gt;20 &amp; time&lt;40));
 n = 200; x = linspace(0, 3 * pi, n); y = cos(x) + rand(1, n); a = 50; c = linspace(0, 1, n); % gradient c = [c; c; c]'; s = scatter(x, y, a, c, 'filled'); set(s, 'LineWidth', 1) set(s, 'MarkerEdgeColor', [0, 0, 0]) not sure about the legend part edit: n = 200; x = linspace(0, 3 * pi, n); y = cos(x) + rand(1, n); a = 50; c = linspace(0, 1, n); % gradient c = [c; c; c]'; legendc = round(linspace(0, n, 6)); hold on for i = 1 : 5 s = scatter(x(legendc(i) + 1 : legendc(i + 1)), ... y(legendc(i) + 1 : legendc(i + 1)),... a, c(legendc(i) + 1 : legendc(i + 1),:), 'filled'); set(s, 'LineWidth', 1) set(s, 'MarkerEdgeColor', [0, 0, 0]) end legend('d','ffds','dd','sdf','sdf') hold off http://au.mathworks.com/help/matlab/ref/scatter.html http://au.mathworks.com/help/matlab/ref/set.html http://au.mathworks.com/help/matlab/ref/legend.html
With a little [logical indexing](http://blogs.mathworks.com/steve/2008/01/28/logical-indexing/) this problem is pretty easy. First, get your data into excel. If it is all numeric, you can just import it in. Otherwise, use xlsread. But from here on out, I'm assuming your data is in a matrix, A and the ID's are in column 1 and the corresponding values in column 2. First, get all of the IDs in column one unique_ids = unique(A(:,1)) Find out how many unique ids there are n_ids = length(unique_ids) Now, cycle through each id in a for loop for i = 1:n_ids Inside of your for loop, use logical indexing to get all of the ones you need A_id = A(A(:,1) == unique_ids(i),:) This simply gives you the subset of A which has the ID values you want. Then, sum the values sum_id = sum(A_id(:,2)) 
You're trying to optimize the value of d, but you've pre-defined d. I'm not sure what you're trying to accomplish here. Also, why are you feeding lb in as a third argument to fminbnd? I forget off the top of my head what the third argument should be, but it's definitely not that. Also, what's with the global declaration? Globals are generally a bad idea, and that doesn't even appear to do anything for you. If you call your merit function on its own what happens? What if you do it with the value of d that you've provided as a starting guess to the optimizer? Can you reproduce the error on this way? 
Are you using the .* in the expression with d? so T=(lb*lc*w)/(d.*(sqrt(lc.^2-d.^2))); Also, you don't need to make the lc squared component-wise. edit: I used this code function T = fun(lb,lc,w,d) T=(lb*lc*w)/(d.*(sqrt(lc^2-d.^2))); end and it works fine. I think the component-wise multiplication on the d needed to be included, and because your prev code was treating the d as a single object, not an (I don't know the terminology) expanded series of objects, the fminbnd saw a vector in @(d) but not a vector in the function it was plugging those d's into. You'd expect other errors as well, but maybe the fminbnd error has precedence...?
My data input is 75 different parts. There are 4 colums and 75 rows: Column A: PartID (1,2,3,4,5,...,75) Column B: its price (ci) Column C: its repair leadtime (ti) Column D: faiure rate (mi). Column E: On hand inventory of that part (Si) So, one row is for instance 1 (ID number) | 50 (€) | 1 (year) | 5 (times/year) | 10 (units in stock). Hence, m1=5, c1= 50. The mathematical part is no problem, the problem is translating it into MATLAB and let the computer do the calculation work for me. I first need to add another value per part (new column), which is the fill rate. The fill rate (FR) is calculated by FR = SIGMA i=0 to Si-1: [ (((mi*ti)^i)/(i!))*e^(-(mi*ti)) ] So that is problem one. When computed, every part should have its own individual fillrate (FRi). Then we need to use that fillrate to find the aggegrate fillrate (AFR), which is defined by the following formula: AFR = SIGMA i=1 to 75: [ ((mi*FRi)/M) ] M is a constant which i can simply find by adding up all the individual mi's (=SUM in excel). I have tried this for the fillrate: function [FR] = calcFR(S, mi, ti) for i=1:size(S,2) [FR] for k=0:s(i)-1 FR(i)=(((m(i)*t(i))^i)/(i!))*e^(-(m(i)*t(i))) end end end 
You have to specify a little bit more what you're intending to do. Is X already stored in a .mat file? When you call load('mat_file.mat'), you're opening up a file, which is called mat_file.mat, and loading the variables stored in that mat file int your workspace. If X is one of the variables stored in the mat file, then after calling load(), X will be in your workspace. It sounds like you simply loaded a string into X with your fread(fid). So you have a variable X, which is string whose value is whatever was in filename. What are you trying to do now? Is the value of X the name of the variable that you want to load? If so, you can do the following. Suppose that you have a mat file called 'mat_file.mat.' In that file is a variable named 'foo.' Suppose 'X' is a string with value 'foo': &gt;&gt; X = foo &gt;&gt; load('mat_file.mat',X); &gt;&gt; foo =3
Okay. FYI, load() is specifically reserved for loading variables from .mat files. You want want to look at the documentation for importdata().
Perhaps you want to look at csvread http://www.mathworks.com/help/matlab/ref/csvread.html edit nvm i thought you were using a commas separated file
Okay this is what I came up with and it worked. I made a check to make sure that nothing in the matrix was changing with a while loop when the for loop ran again. I guess matlab doesn't have a function to repeat a loop until a variable that you set remains constant. I just made my own with the check and test variables. And thanks for the formatting tips! % Data inputs rows = input ('Enter the number of rows in your lake: '); cols = input ('Enter the number of columns in your lake: '); Cnorth = input ('Enter the concentration (mg/L) for the North: '); Ceast = input ('Enter the concentration (mg/L) for the East: '); Csouth = input ('Enter the concentration (mg/L) for the South: '); Cwest = input ('Enter the concentration (mg/L) for the West: '); A = zeros(rows,cols); %Blank matrix at size lake check=1; %Check=/=A for while to work while check~=A(1,1); test=A(1,1); %set test to what A(1,1) is at beginning for i=1:rows; for j=1:cols; %Edges if (i==1 &amp;&amp; 1&lt;j &amp;&amp; j&lt;cols) %North A(1,j) = (Cnorth + A(1,j-1) + A(1,j+1) + A(2,j))/4; elseif (i==rows &amp;&amp; 1&lt;j &amp;&amp; j&lt;cols) %South A(rows,j) = (Csouth + A(rows,j-1) + A(rows,j+1) + A(rows-1,j))/4; elseif (1&lt;i &amp;&amp; i&lt;rows &amp;&amp; j==1) %West A(i,1) = (Cwest + A(i-1,1) + A(i+1,1) + A(i,2))/4; elseif (1&lt;i &amp;&amp; i&lt;rows &amp;&amp; j==cols) %East A(i,cols) = (Ceast + A(i-1,cols) + A(i+1,cols) + A(i,cols-1))/4; % Middle elseif (1&lt;i &amp;&amp; i&lt;rows &amp;&amp; 1&lt;j &amp;&amp; j&lt;cols) A(i,j) = (A(i+1,j) + A(i-1,j) + A(i,j+1) + A(i,j-1))/4; % Corners elseif (i==1 &amp;&amp; j==1) A(1,1) = (Cnorth + Cwest + A(1,2) + A(2,1))/4; %Northwest elseif (i==rows &amp;&amp; j==1) A(rows,1) = (Csouth + Cwest + A(rows-1,1) + A(rows,2))/4; %Southwest elseif (i==1 &amp;&amp; j==cols) A(1,cols) = (Cnorth + Ceast + A(1,cols-1) + A(2,cols))/4; %Northeast elseif (i==rows &amp;&amp; j==cols) A(rows,cols) = (Csouth + Ceast + A(rows,cols-1) + A(rows-1,cols))/4; %Southeast end end end check=test; %Set check to equal A(1,1) from beginning. If enequal - loop will repeat end
thanks! I didn't know that.
I think that's what I ended up doing to make it work. I set a while loop that was check~=test. Check was set to A(1,1) in my matrix at the start of the for loops and test was set to the ending A(1,1) after the loop. So then when check equaled test, the loop stopped and I got my answer. I guess this could be considered an approximation?
... but it works ... ? :D
People here are helpful- but we don't just want to "give you tips on your homework." We want to help you out after you've shown what you've done. I will tell you though, what you've written will give an error in matlab. But since you haven't given us any context, I can't even begin to guess what it is you actually want to do. 
The answer was to choose what output that equation gave, which as you stated was an error message. Therefore the answer is "error message." 
I know you said you do not want to "give tips on homework," but could you help me out with this question. The reason i am struggling is because i do not have matlab downloaded yet, but the timed assignment that i regret starting requires it. Anyway if i use the same variables and entered the equation, E = v9;,2)+t(;,2); what would be outputted? Or tell me what the ";,2" means and i can try to figure it out myself
In MATLAB it is (rows, columns) and : means (all of the...) so (:,2) is "all of the rows, second column"
Semicolons are used to end statements. You probably want colons which is a placeholder for all indices in the row or column.
What is a period? Like for exampled t(1,:). It means all of the columns in row 1 of matrix t, but what does the period afterwards means?
Two tricks with MATLAB: (1) You can add rows and columns to an array without first defining a new size. Example: A = [1,2; 3,4]; A(:,3) = [5;6]; (2) You can perform calculations on entire vectors at the same time without having to resort to for loops. Sometimes it requires special element-wise operations. These are called "vectorized" operations. Examples: % two column vectors A = [1;2;3;4]; B = [5;6;7;8]; % C(i) = A(i)* B(i) C = A.*B; % note the dot before the star % C(i) = A(i)^B(i) C = A.^B % C(i) = (A(i) + 3)/C(i) C = (A+3)./B
http://www.mathworks.com/help/matlab/ref/fminbnd.html fminbnd: Find minimum of ***single-variable*** function on fixed interval Since you want to find the optimal value of 'd' rewrite as function T = fun(d) T=(lb*lc*w)/(d*(sqrt(lc^2-d^2))); end (Note that you don't need any . because d is only a single value for a particular value of T) and keep: global w lb lc % no need for d to be global then, dmin = fminbnd(fun,0,lb); Alternatively, you could avoid using global variables by: function T = fun(d,lb,lc,w) T=(lb*lc*w)/(d*(sqrt(lc^2-d^2))); end then define f = @(d) fun(d,lb,lc,w) dmin = fminbnd(f,0,lb); 
Right idea, I have a good idea of what your code is doing. But you need to break down the "for each ID, sum 3 column values" into a lot more steps. Something like: find list of unique ID# for each unique ID, loop through entire column of all IDs if ID #s match, ....etc. Think through the logic of what your code actually has to do. 
You're being a little loose with your terminology here, which is making it difficult to diagnose your problem. It would be helpful if you posted a screen cap of the image you're having trouble with. 
you are looking for the function caxis. do something like imagesc(DataA) colormap('Jet') caxis( [min(DataA) max(DataA)] ) colorbar 
Standalone is the only way I know of. Welcome to the MATLAB ecosystem, where the toolbox prices are out of control.
 i = sqrt(-1) If you want a number that's derived from your loop index, you can calculate it in your loop. For example, you might have: for n = 1:5 k = 2*n - 1; (code here) end 
If N is length of vectors, the code below creates ~~N by 2~~ edit: 2 by N array Z, then saves corresponding pair of X(i),Y(i) values into each column (with order depending on i), then finally flattens Z into a vector (since MATLAB stores arrays in column-major order, this gives correct ordering of values in the final result). N = length(X); Z = zeros(2,N); for i=1:N if mod(i,2)==0 Z(1,i) = X(i); Z(2,i) = Y(i); else Z(1,i) = Y(i); Z(2,i) = X(i); end end Z = Z(:);
lol
The **legal** ways that I can think of are: * Have them buy the toolbox. Do they qualify for the educational prices? * Deploy to EXE with MATLAB Compiler * Generate the Mex version using MATLAB Coder (***) * Rewrite the functionality you need without the optimization toolbox. (*** Unfortunately, it appears that MATLAB Coder doesn't support the optimization functions.)
This kind of thing is what has driven me away from MATLAB when distributing my work to others. Other frustrations along this same line: when there's a nice and easy function to do exactly what you want, but it's in a toolbox that you don't have, and all you need is that one function. And then you think, "Why don't I just use another language with a nice free ecosystem and forget all this?" I do like MATLAB, and it certainly has its place in my arsenal, but OP's question is one of its big weak points as far as I'm concerned.
the 'plot' command returns something called a plot handle. Capture all of the function handles you plot. Then, if you look at the 'legend' command, it has an option to take two arguments: plot handles and strings. So, if you use that version of the legend, and only put in the plot handles you want to show up, then only those will appear. 
Can you please explain your force calculations and what your `drag` quantity represents? Another thing that's really going to mess with your values is that you're assuming the chute opens instantaneously.
Well, this was my thought process. Drag is dependent on velocity. So the first thing I do it calculate the velocity experienced by the skydiver with an acceleration of g(9.8). Next, I use this velocity to calculate the drag force, which I then subtract from the normal force (mg) to get the net force. From here is use F=ma, to find the actual falling acceleration and then from there velocity and position. The drag quantity (values of b were just given to us by the instructor) and the formula was given to us by the instructor as well. I assume b incorporates all of the other coefficients involved in the drag equation. By chute opening instantly, do you mean as soon as the diver jumps out of the plane or it goes from closed to open instantly? I could see where this could be an issue, but I think the instructor just wants us to assume it opens instantly for ease of calculation. 
use: plot(x,y,"handlevisibility","off") for any x and y that you don't want to show up in a legend 
Initialize a matrix of zeros to contain the handle of each line. line_handles=zeros(n_lines,1); Then in your loop, store each line handle, which is returned by the plot function: line_handles(iter)=plot(data); After all the handles are stored, include them in the call to legend: legend(line_handles,{'labels'}); Hope that helps!
&gt; The drag quantity (values of b were just given to us by the instructor) and the formula was given to us by the instructor as well. I assume b incorporates all of the other coefficients involved in the drag equation. Drag is given by `0.5*rho*v^2*Cd*A`. Given what your instructor says I'm assuming he's neglecting changes in air density and that the `Cd*A` of the skydiver under canopy is 20 times the skydiver in freefall. Very simplified problem but that's fine. &gt; Drag is dependent on velocity. So the first thing I do it calculate the velocity experienced by the skydiver with an acceleration of g(9.8). Next, I use this velocity to calculate the drag force, which I then subtract from the normal force (mg) to get the net force. From here is use F=ma, to find the actual falling acceleration and then from there velocity and position. You're on the right track but based on this and your other comments it seems like you're overthinking the calculation. I'm going to pretend we're BASE jumping and not going out of a plane so we can assume that at `t_0` that `a_z = g` and `v_z = 0`. At your next timestep, `t_1`, your velocity is essentially (with a small enough step) going to be solely from acceleration by gravity. At `t_2` now your acceleration is going to be `g` minus `drag * mass`, where `v` is the speed at the previous time step (again assuming small time steps), and so on. Your acceleration term will shrink until `a = 0` and you've reached terminal velocity. Once the chute opens you will decelerate again until a new terminal is reached.
## Substance I think you may be making things too complicated. For example, you have the line: v(i+1)=v(i)+ dt*(-9.8); %calculates velocity And then you later calculate the force and then you have `va`. Make it easier. Inside of each loop, calculate the net force, then calculate the acceleration, then velocity, then position. And, I think you're being inconsistent with your signs. For example, always add the acceleration but let the acceleration be negative if appropriate. Also, instead of hardcoding `-9.8` and `735` (presumably the weight), do it all in variables. This will make your code easier to follow, more self-explanatory, and less likely to introduce bugs if you change these parameters. (I don't lump that with style since I think it is nearly imperative practice for good code) Therefore the loop will look something like this: for example: % Note that I change the i to start at 2 and you look backwards. for i=2:N % Update time t = t + dt; % with the change in indexing, this is simple ==&gt; i*dt % Calculate forces based on v at last time step (explicit method) F = -m*g + b * v(i-1).^2; % F = ma ==&gt; a = F/m; a(i) = F ./ m; % Update v and y with an Euler scheme v(i) = v(i-1) + dt * a(i); y(i) = y(i-1) + dt * v(i); % ... end ## Style On a *trivial* note, you can also improve readability with white space around `=`. And using tabs. This is completely optional but makes it more readable. Also, it is good practice to always add preceding zeros before a decimal (eg, `0.6` and not `.6`) Example: vt = 45.2; % terminal velocity for b=.36 vtn = 7.8; % terminal velocity for b=12 y(1) = 1000; % initial height t(1) = 0; % initial time v(1) = 0; % initial velocity b = 0.6; % strength of drag (parachute closed) Or, as I prefer (though again, this is style). Also I added units to make it more clear: vt = 45.2; % [m/s] terminal velocity for b=.36 vtn = 7.8; % [m/s] terminal velocity for b=12 y(1) = 1000; % [m] initial height t(1) = 0; % [s] initial time v(1) = 0; % [m/s] initial velocity b = 0.6; % [ ] strength of drag (parachute closed) 
It's from your previous time step.
Jesus Christ I over thought the hell out of this problem, I understand it now. Thank you.
Have you tried [Google](http://lmgtfy.com/?q=matlab+r2011b+read+mp3)? The top 3 hits seem like good places to start..
hey i have half the task solved, do you think i can post the solutions here to share? will i be doing some copyright infringement?
This is what I am trying to produce http://imgur.com/rciJBJA
In my experience as an AE undergrad, the only thing I used in those toolboxes was fmincon() from the optimization toolbox. As a grad, I've gotten a lot out of the optimization, symbolic math, and machine learning toolboxes. You should ask some seniors if they use any of the toolboxes for class. I wouldn't be surprised if you need the control toolbox or simulink.
I had a look at the polyfit function to see if it would take a matrix instead of one vector at a time and it doesn't look like it. However, if you have a computer with multiple cores you could use a parfor loop instead of the for loop because it looks like each iteration is independent.
Ugh! I had just read about parfor. I should've thought of that! Thanks! I'll give it a go.
Many (most?) universities will have student licenses for use for free as part of your tuition. Double check with your IT department before purchasing.
ah didn't see this: B = reshape(A, [], 2)'; % note the transpose 1 vs 2 lines :(
One of my professor's said it wasn't free. But yeah I'll double check.
Imtransform will let you do this if you can describe the coordinate transform mathematically. For distortion we typically use a 3rd order polynomial transform. Selecting your coefficients is the tricky part. The easiest way is to capture a reference image of something with a known grid pattern on it, then optimize the transform to map the observed grid points to their known true location. 
I recently had to use Simulink in one of my classes and some people who didn't get Simulink with Matlab were out of luck and had to use the computer lab's copy to finish the assignment. It just depends on your classes if you'll use it so it might be best to ask a professor for advice. It seems worth it to just buy both if you can spare the money.
Perhaps the benefit was derived from utilizing parfor and arrayfun in tandem, though I can't verify that would have helped my application. I no longer have the code that attempted to leverage arrayfun, and instead just have the current version (which sidesteps the issue completely). It's great that it helped your friend, but I think there are plenty of cases where a simple for loop remains more efficient than dealing with the added overhead of arrayfun.
Calculating n! works as follows: prod = 1; for i = 2:n prod = prod * i; end For your Fibonacci function you need to implement a recursion stop condition.
Thanks for the reply, but I'm still a little unsure, since I think this code relies on having the complex FFT information. What I'd like to do is read in the physical images of the magnitude and phase (that I've exported from a separate code), and recombine them into the original image. I'm not sure this code is doing that, and I'm just being dim though!
First, let's say that you have the data as pairs of values in two vectors, X1 and Y1. You can plot them with figure plot( X1, Y1, 'o' ) Next, if you want to plot the other group's data in X2 and Y2 use hold all plot( X2, Y2, 'o' ) Finally, to add a plot of them together, use X_all = [X1; X2]; Y_all = [Y1; Y2]; plot( X_all, Y_all, 'o' ) Notice that here the X-s and Y-s must be vectors of the size (n, 1), i.e. thin arrays. I recommend that you try fitting and excluding the outliers by using the user interface of the curve-fitting toolbox. That way will probably be the easiest to exclude the outliers. Start it by selecting the curve fitting on the 'apps' in the MATLAB toolbar, or by typing 'cftool' in the MATLAB command prompt. You can now select any of the previous pairs of X-s and Y-s and construct the fit and exclusion with the selected functions. 
Do you understand mathematically how you would write a complex value in terms of its phase and magnitude? 
LOL This wasn't meant to be a full-flegded program, just the basic logic.
For further reading: http://stackoverflow.com/questions/12522888/arrayfun-can-be-significantly-slower-than-an-explicit-loop-in-matlab-why The long answer gives a very good explanation of things that can go wrong with arrayfun, and now I'm trying to figure out if it was ever a good idea to use it in the first place...
I usually work with complex networks and I usaually use ScyPy or other tools to make those kinds of figures.
Oh ok sorry, I am being very dim here. I think I've understood now. Assuming 'mag' and 'phase' are my two images, would this be roughly correct? img = mag.*exp(i.*phase); img = ifft2(img); imshow(abs(img)) If I run this code, I get an image but it's not the original image (just mostly black). Is there something I'm missing? 
You probably have a dimensions error. Look at the error matlab is giving. Z is a m x n matrix. X is m x 1, and Y is n x 1.
You've got your X and y lengths swapped
For a point cloud, you might want scatter instead. If you do want a surface, your data needs to be amenable to a gridded format. You could generate a grid using meshgrid and interpolate values for that point using scatteredInterpolant with your point cloud data and then plot the gridded result
&gt;... you are technically correct - the best kind. Thank you Number 1.0 
Coming back to this, now that I have the answer - just in case anybody may have the same question in the future: You would use logical indexing... A = magic(5); %creates a five-by-five matrix A(3,:) = zeros(1,5) %inserts a row of zeros in the third row A=A(A~=0); %gets rid of all the zeros in the matrix, however it sorts the outputs in one long column. This is logical indexing. %The above command says, return the values of A where A does not equal zero. A=reshape(A,4,5); % re-shapes the column vector back into the dimensions we expect; instead of 5-by-5, we now have a 4-by-5 matrix %with the middle row gone
Thank you. I forgot that state space representation is not unique.
Thanks a lot bro now i'll try. Your solution is much similar to what i would have dove in java for example. I just do not know enough about the MATLAB code, but it seems very reasonable XD 
Fft and ifft are inverses, so if you're not feeding ifft something exactly like it gets out of fft(), it's not going to work right. 
Yes, you're looking for an affine transform. You can do this with imwarp. Check out the documentation, it's very good on this topic. 
If you know the corners of all the points on the cube, and the locations where the corners should be in the new resampled image, then you can use the function fitgeotrans in the image processing toolbox to fit a projective transformation to your points. You can apply the resulting transformation using the function inwarp. In the future, you should check out the function cpselect for these kinds of tasks, it makes the process of selecting control points easier.
Very useful if you don't want to go into the school labs all the time and can't use the university licenses remotely. At $100, it's a steal. I'm very glad I got a copy back when I was in school, and still use it to this day (including 2-3 toolboxes pretty regularly).
So two points. First, generally when you want to decompose a loop into a vectorised statement, you look to pull all the things that change during the loop out into pre-computed arrays so that the loop code can be run on every value in parallel. In your case, this is y. You want to try and run f(x,y) on an array of y values (assuming x doesn't change). Secondly, the fundamentally fastest way to do this is by using functions that are already vectorised that will take arrays and operate element-wise or along dimensions. So in your case, this relies on *f(x,y)* being vector aware. I'm guessing it isn't. This doesn't mean you are doomed to a for loop though (well sort of anyway). You have the super useful arrayfun and cellfun functions. These guys take any function and one or more arrays (or cell arrays) and apples each element as an argument to the function. So for instance with your case, you could do: y = 1:m; Fxy = arrayfun( @(yv) f(1:n, yv), y ); That essentially does your loop, computing every value of *f* for you. The rest of the computation is vector friendly. The way I call it looks a little goofy because I used an anonymous (lambda) function. The base input for the *fun functions is: Out = arrayfun(func, array1, ....arrayn) Where you need one array for each input argument and they have to be the same size. In your case, you would have to make a new array for x that was m elements long. Instead of building a big, repetitive matrix, I just made a new function that takes a single input argument that calls f and hands it the static arguments plus the one that changes. Now.. arrayfun and cellfun are very useful and better than a raw for loop, but they are still loops. The difference is they are implemented as compiled code which removes many of the performance hits you take with a normal loop. So still make sure you vectorize when you can.
Thanks so much!, makes sense now that you explained it, program works now.
Put the file names into a cell array of strings, use a for loop to cycle through the file names one at a time while saving the values to a vector. 
You've got to be kidding me, man. At least attempt to pull a thin veil over the fact that this is a homework problem. From the side bar, (This subreddit is for) MATLAB code tricks, discussion, and questions; but we don't do your homework! 
I wonder what's the thought process behind posts like this. What answer do you possibly expect when all you do is paste a homework assignment (with garbled formatting, no less) without any specific question? That somebody will give you a complete solution? Or explain all of MATLAB in two paragraphs? Well, good luck with that...
InsomniacDuck, '[~, ~, H] = Solar_Radiation(Y1);' works! Thanks
Yeah, if you assign the output to a single variable, you're only going to get the first output variable. So... H = Solar_Radiation(Y1); ...will return IR and assign it to H. Itot and Qf_1 are thrown out.
Why not use scatter? It has a colour input. 
s = fieldnames(old_structure); a=s(1); b=s(2); c=getfield(old_structure,a) This is my current program but it spits out the error Index exceeds matrix dimensions.
Cell arrays are indexed with curly braces, so i-th element is s{i}.
There are several problems here: 1. Main function must be terminated with an `end` keyword before the subfunction begins. 2. You don't actually provide any argument to `convert_grade` subfunction when you call it. 3. Even if you did, the subfunction is not vectorized (it can process only single character as input). So you need something like for i=1:length(grade) numgrade(i) = convert_grade(grade(i)); end inside your main function. 4. Also in the main function, you actually need to assign output to a variable called avg: avg = mean(numgrade);
Thank you so much for replying! 1. Oops, my bad - I totally just added it to the very end by mistake. Thank you for pointing that out. 4. Yes, I totally forgot about that too. My mistake yet again, thank you so much! Could you possibly explain your second and third point? I'm quite new to MatLab, so I'm having some trouble keeping up in what this means for referring to the numbers I have assigned for the letter grades.
Nevermind, I totally had a brainfart in the middle of my exhaustion and stress whilst reading your reply. I understand exactly what you're talking about now. Thank you again so much!
For better or for worse, Matlab will not return everything "packed". It will only return the number of outputs you request. In your example `Qf_1` will just be `IR`. This is different from the behavior of, say, Python where it will return everything as one. I am not sure which is better or even which I prefer but they are very different
About (1) Ending a function with an 'end' is purely optional- but you must be consistent. That is, you can choose to end your main function with an 'end' but then all of your sub-functions do too. But you can also just make a sub-function at the end of your main function. 
Yup, now that I reread what I posted earlier I see that it wouldn't work. You're right. You just have to assign it as an unpacked output with variable names or blank variables like InsomniacDuck posted earlier. [IR, Itot, Qf_1] = Solar_Radiation(Y1); %Then just use Qf_1 [~, ~, Qf_1] = Solar_Radiation(Y1); % Then just use Qf_1
Yep, does the same column separation
Ah, got it, I didn't quite understand your question. You're asking about how the matrix is displayed in the command window, not about how to reshape it. Check if [adjusting any of the command window options](http://www.mathworks.com/help/matlab/matlab_env/command-window-preferences.html) will work for you. Alternatively, can you just view it in the variable editor? 
Hi! I have to confess, I have never used vpasolve before I have read your question, but I also had this problem several times. Mathworks.com has a very unorthodox solution to this, as it is shown on http://de.mathworks.com/help/symbolic/solve-equations-numerically.html *To find multiple zeros in the range [15 25], you cannot call vpasolve repeatedly as it returns the same result on each call, as previously shown. Instead, set random to true in conjunction with the search range.* According to this, the solution to your problem would be syms x nTries=5; sol=zeros(1,nTries); for (n=1:nTries) sol(n)=vpasolve(sin(x) - (x^2 - 1), x,[-10 10], 'random', true); end unique(sol) If you want to find the intersections of more complex functions this I would not recommend this method. 
Before you delve into your code, how are you handling the video part? Do you record, save, then access or do you capture raw video for immediate processing? Not all video encoding is created equally and some methods (H.264 in particular if I recall correctly) rely on inter-frame similarity to compress data. Individual pixels may be below some threshold that it counts as variation due to noise. If you're throwing away tiny variations between frames this could possibly be discarding the very changes you're looking to amplify
Yes I copied and made a single modification to your code to get it to display correctly. I believed this method would be more valuable to you in learning matlab. If you desire, I could do a total rewrite of your code.
Good catch, but my videos are recorded to uncompressed avi - so no interframe compression!
This
It looks like you are calling external functions: onepop, twopop, and longterm. Check if you don't have onepop.m two pop.m and longterm.m files somewhere and copy them to the same folder as your script is. Please copy the exact error that MATLAB gives. 
As an academic, you should avoid using black boxes. Learn the code, learn how to code, and actually have confidence in what you're reporting. You'll find it to be very fulfilling, though it may be difficult at times.
Doesn't work for me. Edit: This link actually works: [source code for the book](http://www.cambridge.org/de/academic/subjects/mathematics/mathematical-biology/mathematical-models-biology-introduction?format=HB). Click on "resources" then "source code". Still, without knowing the specific problem it is hard to help. I personally don't see anything obvious that won't work, and MATLAB's linter doesn't other.
Because it doesn't write headers nor allow the user to specify the output format? 
These values are much larger than the maximum integer you can store using double precision. The robust alternatives for MATLAB I believe depend on access to the Symbolic Math Toolbox. [This MATLAB Central thread](http://www.mathworks.com/matlabcentral/answers/141553-big-integer-and-precision) should provide some useful information.
I am not exactly sure what you're asking but let me see if the following code can help you. It shows how you can do some customizations many times over clear X{1} = rand(10,2); X{2} = [linspace(0,1,10)' rand(10,1)]; X{3} = [rand(10,1) linspace(0,1,10)']; X{4} = [linspace(0,1,10)' linspace(0,1,10)']; titles = {'All Rand','Y rand','X rand','no rand'}; figure(1);clf for i = 1:4 subplot(2,2,i); plot(X{i}(:,1),X{i}(:,2),'k.','MarkerSize',20); xlabel('X'); ylabel('Y'); title(titles{i}) axis square axis([0 1 0 1] + 0.1 .* [-1 1 -1 1]) set(gca,'xtick',linspace(0,1,3)); % I use an older version of Matlab set(gca,'ytick',linspace(0,1,3)); box on grid on end 
how do i do that box format thing? ill paste my code for one plot (all 4 plots have the exact same code just different variables that are taken from website data), and that might be easier
I wasn't implying that we assume the book's functions are wrong, and look for them ourselves. I was implying the OP is missing the functions and doesn't know how to get them. 
You can do it in a loop like I said and have something like a `switch` case. switch i case 1 X = USmaleblablabla; case 2 X = USfemalebla; case 3 X = whatever3 case 4 X = whatevr4 end subplot(2,2,i) plot(X,Y,...) 
Bingo, this is the right answer. What OP is seeing isn't an alternate representation, or approximation. I believe the maximum value of a double is about 10^308. Anything larger than this is converted to inf. 
is this eas 230 with dr. banas at ub? 
For more fun, try: membrane(2) Or 3, 4, ... 12. (I think it stops at 12) Also: [The origin of the logo](http://blogs.mathworks.com/cleve/2014/10/13/mathworks-logo-part-one-why-is-it-l-shaped/)
What you really need is a csv file with words in one column and definitions in the other Then you can match the word with a string compare and return definition from second column Also you'll need this http://www.mathworks.com/help/matlab/ref/input.html
Removing data from the FFT result is not the same as filtration. Removing high frequency data is essentially poor resampling, which isn't filtering. Removing low-frequency data doesn't have any analogy. You just can't do it. The easiest way to apply a filter is to calculate the filter coefficients and then apply the filter to time domain data using the filter command. This is the quickest and easiest method. Do this unless you absolutely need to look at frequency domain data. If you only need to look at frequency response information, take the FFT and multiply the results by the filter's complex response. Be sure that you have evaluated your filter on the same frequency values that you're applying it to in the fft. Be aware of MatLab's frequency bin order. Also, be aware that if you're only looking at frequency data on one side (positive only), you'll need to multiply by 2 (to all non-DC values) in order to get the proper magnitude values. If, for some unholy reason, you need to do the IFFT and look at the time domain results... Calculate the fft, perform the fftshift, multiply the filter's frequency response into both positive and negative frequency values, perform the ifftshift, then perform ifft. Unless you absolutely need to show frequency domain results, just use filter. Don't make this any more painful than it needs to be.
 num2str(rand(5,10))
Sorry i dont see the use of this i still want to treat them as numbers i just want to arrange them at least decently
%Setup a time vector t=0.5:0.5:15; %then plot Upts(?) vs t. plot(t,Upts) Hope this helps
When posting code, please indent all lines with four spaces like this so that it can show as code and be more readable. You can also include code in line with back-ticks `like this` for variables, etc
To expand slightly, you can also initialize it with a cell/character array from a parsed data file: words = {'cat', 'dog', 'potato', 'pizza'}; defs = {'fuzzy things', 'other fuzzy things', 'some irish thing', 'something rats carry around NYC'}; myDict = containers.Map(words, defs); &gt;&gt; myDict('pizza') ans = something rats carry around NYC
That would load an external file i.e. one that is not *embedded* into the script.
What you're asking about isn't logical. The purpose of a .mat file is to export/import workspace variables. To have a pre-imported .mat file would simply be a list of variables. You could try loading the .mat file and copying the results to put in your .m script for a shortcut.
There's no way around providing both files to the user. If shipping multiple files really bothers you that much, you could [package everything as an app](http://www.mathworks.com/help/releases/R2012b/matlab/creating_guis/app-creation.html), which is essentially a fancy `*.zip` file.
Interesting...and pretty easy.... but did you have a question? Or, did you just want to share your homework? Or were you looking for someone to *do* your homework?
If you completed the question then you can show us the code that didn't work.
I need to find a number that if I divide it by 2 I get 1 and if I do it by 3 I get 2 and so forth from 2 to 10, I don't see how ur code would help me implement that? Thanks for the input by the way!
I'll try that when I get home I tried to make it easier to see on my phone hope it makes more sense.
Right now, you're only plotting a single point. If you want to see this point on the plot, replace the line plot(z) with plot(z,'bo') which will show the point as a (b)lue d(o)t. By default, plot(z) will plot the values in z as a line. With only one point in array z, a line cannot be defined.
try this. n = 1; while n &lt; 10000, success = true; for i = 2:10, if mod(n,i) ~= i-1, success = false; break; end end if success, fprintf('Success! %d is your number.\n',n); end n = n + 1; end 
First of all, there is nothing sacred or special about this solution to your problem. It is a solution. In fact I challenge you to re-write this code with an == instead of the ~=, and also perhaps change the loop constructs around at different places. With that being said, I will try to explain how I thought about the problem and solved it as long as you remember that there is nothing special about how I thought about it... &gt; why do you put ~= instead of == ? Your conditions is AND, in other words this has to be true AND this AND this, etc. Consequently if I know one of these conditions is not true, I know that it is not true, and I can break out of the test loop and continue testing the next number. That is why I used the ~= test condition. &gt; why do you put n=n+1; after the while loop instead of in front it? nothing special here.. with the while loop. I just chose to use a while loop with the increment statement at the end of the loop. You should rewrite this code to use a different to a looping construct. I hope this helps you.
Yes
Thanks for your help! I got it to work for me.
I just spent a few good hours on solving this little puzzle. Most time went on searching for a solution (which is how I found your question) and trying them without any luck. I registered to this website to share my solution, in hopes it'll help your and/or other people in the future. What I did is change the waterfall function (or alternatively, copy its contents into a mywaterfall function to have both options at hand). What you can do is open the waterfall.m file by typing 'edit waterfall' in the command window. There you will see that it uses the function 'patch' to plot everything. In order to change the coloring, you just need to replace the c' with y' or x', depends on how you want to color it. Then, after the plots was produced, you can use colormap(cool(length(xdata))) for example to plot with different colormap. Bonus: Try to write your own colormap :) I hope this helped.
Check out "sortrows" which sorts an entire matrix, based on the values in one column. You can ascend or descend with it. 
Is there even a question in there? So you have some code that you think is right but can't get texts can to work correctly. And we should deduce from that that there is an implied "please help me out" at the end? This whole post probably sounds harsher than it is meant but there is pretty much no useful information in your post. If textscan is the culprit, what error messages are you getting? Or does it run correct but give you different data than you expected? (What does "have not gotten textscan to work correctly" mean) What steps have you taken to debug so far? Does the file name your directory walking code supplies make sense. If you manually run textscan on the file, do you get the results you expected? 
Yea, I modified my code to included fopen and close after the text scan function. My issue is getting all of the data from the .csv into the .mat file. I can get the numeric data fine, but I need the strings of text with it, and I can't figure out how to get it to work. This is the data I am working with: [Imgur](http://i.imgur.com/RsJM2xl.png) 
Ugh. %s is for strings, %f is for floats. Other formats are in the documentation. The question becomes what you're trying to DO with those values. If you just want to store the whole series and have it available for output, store it as a string. If you need to parse it into pieces and do math on parts of it then you need to explore the other formatted read options and figure out some logic that works for your data format. That kind of logic is always annoying though.
Thanks for the help. All I am trying to do is store the numbers/letters, I do not need to use them in any math. This is just simply to convert from the .csv format into .mat. 
This helped alot, thank you very much for your input!
One more question, on the link you sent over, under the sections of "Random Numbers Within a Specific Range", and "Random Numbers from Normal Distribution with specific Mean and Variance", both sections appear to use the exact same method of inputting mean and differentiation, as well as the range. I hope this isnt hard to understand, but opening up both of those sections will make much more sense. Specific Range: http://www.mathworks.com/help/matlab/math/floating-point-numbers-within-specific-range.html Specific Mean and Variance: http://www.mathworks.com/help/matlab/math/random-numbers-with-specific-mean-and-variance.html
The first one uses 'rand' which is a uniform distribution between 0-1. This then gets scaled to be uniform, random between a and b. The second one uses 'randn' which is a normal distribution, mean 0, std of 1. Now, you are re-centering the distribution (at a) and giving it a different standard deviation (b). A normally distributed variable doesn't have a "max value" but of course you do (can't score above 100, can't score below 0), so you'll have to catch those "edge cases" and re-assign anything above 100 to be 100, and same with zero. 
Ohhh I didn't even realize that they used rand and randn for the two. Thanks alot!
A problem that I don't immediately know how to answer or that requires more than simply reading the documentation that the OP didn't bother to even glance at. Something that isn't OPs (very easy) homework problem. Something interesting that's not a question at all. Maybe something useful to be shared, or a new Matlab feature I didn't know about. Maybe a way to interact or communicate with other languages or devices efficiently, or a new toolkit to look into. 
That's not the sort OP wants. The sorted order is that the last number of each row is the same as the first number of the next row. It's sort of like assembling a row of dominoes.
I'm not good enough with MATLAB (yet :D) to contribute to a lot of these threads :((
First off, could you change the formatting of your post? If you put 4 spaces before each line of code then it becomes more readable for us (and thus making it easier for us to help you). so like this blablabla code blablabla As for your problem: Try to do a couple of steps by hand (with good old fashioned pen and paper). Now take a look at your code: Does Matlab perform the same actions as you did on paper? As a hint: take a look at your iterations (so anything within "for k=1:imax") Does anything change for each iteration of k? Let us know if that is of any help at all. 
Can you explain more of what you mean? Or what you have tried? Or what isn't working?
%prompt input weight unit as kg or oz weight=input('Choose unit(kg/oz): ','s') while weight=='kg'||weight=='oz' disp('Invalid value') weight=input('Choose unit(kg/oz): ','s') end 
anything to do with improving/making high-quality plots. And anything tutorials about making GUIs.
See: [`mtimes`](http://www.mathworks.com/help/matlab/ref/mtimes.html) vs. [`times`](http://www.mathworks.com/help/matlab/ref/times.html)
Same here... I would like to make this a great resource for people that aren't doing homework. I use matlab everyday, and like you am constantly learning something new. If you do something like this, I will make a best effort to participate in each of the threads.
Show a short part of code you are kind of proud of and explain what it does. I always learn something by reading somebody else's code. 
well hopefully everyone else is as lost as we are
It sounds like you found the answer and/or got help. I just wanted to thank you for your post. You formatted `code` well, you presented the problem succinctly and you showed what you had tried (with a pretty minimally working example). There is a lot of discussion about whether or not coding help should be part of this sub. You have shown a *good* example what what that could/should look like. Thanks!
In order to fill a region, I would use the patch() command. This requires the (x,y) coordinates of the border points. In order to get the border points, I would use all of the (x,y) border points (you already calculate them in your plot() commands. For each (x,y) border point, calculate whether it's on or inside each of the 4 circles. For those points that are on or inside all 4 circles, save these as your border points. Then use patch(). Now, if you want to do this theoretically/symbolically rather than with data points, you'll need to work with the equations for circles: (x-cx)^2 + (y-yc)^2 &lt;= r^2 And solve for all points x,y that solve all 4 equations. This would be your set of points inside the intersection. You can do this on paper or with MATLAB Symbolic Toolbox.
Thanks for your response! I went through and tried to make the code look nicer so that you could copy and paste it, hopefully that works! Yes! I am trying to do something like a 'fill()" but I need to exclude the protruding edges of the union of the first 3 circles.
Programming challenge contests could be cool. Especially ones based around some of the powerful but less-used functions, or non-obvious ways to solve more-common problems.
Thanks!
it happens to me so often that i write scripts to exit and restart matlab during processing.
No, it will give me horrible things when I export in higher resolution: http://imgur.com/6Nk4Jbl. And also I want to use it for publication, so a pixel graphic like png is not the best. It also happens with epsc2, yes. EDIT: I am using version 2014b
png was recommended for troubleshooting purposes. if it's happening there, something is wonky with your setup. This is weird. I've never seen this happen in matlab, but then again i don't make gigantic markers. 
...lots of misinformation here. This is just how Matlab renders the circle markers when exporting to EPS files. The best solution like you say is to use a marker that's rendered using a vector circle. This would be the dot marker ('.'). What I would recommend is drawing your figure with the '.' marker with a unique colour (e.g. red) in Matlab and exporting to EPS. Then, in Illustrator, use the magic wand tool to select all of the red circles. Change the stroke to black, the fill to transparent, and further rescale the circles (using 'transform each') if required. The star-like artifacts on the right side of some of the circles occurs because you have thick lines whose end caps extend beyond the end of the line, and have hard corners. If this happens for other lines, change them to use rounded ends in Illustrator
Nah, it didn't change. Maybe Matlab just doesn't draw these markers as actual circles, but that way. My markers are not that big, but it's noticeable that they are not actually round. 
Yes, I am using Latex. I'll check it out, do you think it can do three plots with a shared axis? that's what my plots are going to look like: http://imgur.com/sNocJG0
I tested it on my Matlab and I was able to reproduce your problem exactly, using -painters solved it. You might read that link I gave you (because it talks about this problem), or contact the export_fig guy directly. 
That's really weird, I also tried it with painters and it didn't change anything? Would you mind giving me the code that you tested? What version of mat lab are you using?
That's a really good idea! Since I would be editing in illustrator later anyway I think I'll do that!
or that you're trying to run contourf on a 10Kx10K matrix
Thanks, that sounds good! I'll definitely check it out!
I'm looking to minimize the response X to around the stead state Xss. So my objective function is to minimize trapz(abs(X-Xss)).
Each toolbox is available for purchase separately, it seems. The pricing says 30 buck per for students.
Have you looked at ODE parameter estimation (Grey-Box models) of the system identification toolbox (idgrey, idnlgrey) ? It seems like it would suit your purpose.
Evenly spaced points basically means linspace. Thus you should just change x=linspace(2, 15, 1000); And then remember to use dot before multiplication and division and such i.e. exp(3.*x.\^2). I got a curve just fine! Edit: linspace(a, b, c) gives you c evenly spaced points between points a and b. 
Youre lucky you got the task manager to show up
There isn't anything MatLab can do "automatically." You have to at least set up something to optimize, and pick how you want to optimize it. There's a quick-and-dirty cheatsheet to help pick an optimization solver located in the help menu, under Optimization Toolbox &gt; User's Guide &gt; Setting Up An Optimization &gt; Choosing a Solver The only information we have is that this is a "nonlinear dynamic system" with 4 to 5 optimization parameters, and you have a data set you want to fit this system to. We don't know anything about your data set except that you have one. It could be linear, non-linear, objective specific, etc. I am guessing, however, that you can find a quantifiable error between your current system and this data set. If so, I would recommend using lsqnonlin (or lsqnonneg if your parameters are positive only). You can program the optimizer using the terminal, a script, or using the optimtool. lsqnonlin requires at least two inputs - A function which accepts your vector of 4 to 5 parameters and which returns the weighted error between your model and your fit data, and initial estimates of your parameters. Creating the error function is the most difficult task. The function needs to return the error between your estimated model and your reference data, using the current parameters. This is some MatLab-esque psuedo code for the error function. [ErrorVector] = function ErrorFunction(OptiParaVector, ReferenceVector, AnyOtherParameters) System = func(OptiParaVector, AnyOtherParameters); FunctionResult = Evaluate the System; ErrorVector = (FunctionResult - ReferenceVector).*Weighting; end You then need to pick your initial parameter estimates, and any other options you want. Now, one weird feature of lsqnonlin is that the error function needs to accept only 1 input, but the error function I just made has 3. You can either fill in the last 2 inputs using an anonymous function such as AnonErrorFunc = @(APlaceHolder) ErrorFunction(APlaceHolder, DataFromWorkspace1, DataFromWorkspace2); lsqnonlin(AnonErrorFunc, InitialEstimates, [], [], []) or by adding the extra inputs to the end of lsqnonlin lsqnonlin(ErrorFunction, InitialEstimates, [], [], [], DataFromWorkspace1, DataFromWorkspace2) From here, you should be able to write a script which starts your optimizer, or you could use the optimtool to do it. You may have to do a lot of testing with weighting, variable boundaries, and the stopping criteria in order to get a good estimate, but it shouldn't take very long if what you are asking the optimizer to solve a reasonable problem. Keep in mind that the optimizer evaluates the error function every single time it tries new parameters. If this means running ODE45 in your error function and that takes 5 minutes, you're going to sit on your hands for a while, or you find a way to speed things up.
lsqcurvefit wraps lsqnonlin and already does some of these tasks
If I use more than 25% of my RAM, it means I'm sloppy?
&gt; step size for gradient calculations How do I do that? Edit( Can I set the step size of the inputs? The minimum change I care about is .0001)
I think this started with the new HG2 graphics layer (R2014b and later). all eps/pdf files saved form matlab in that version and newer have this non-circular circles problem, while files saved from older versions do not. in fact I still keep an old version installed to address this problem - it's a huge pain and hopefully they'll fix it in the near future, because otherwise the new graphics really improved figure quality.
Perhaps your professor meant "[which](http://www.mathworks.com/help/matlab/ref/which.html)"? Edit: Have you tried "loofor H5F1"? You don't need single quotation marks around H5F1.
I am using an energy balance model - I have looked a bunch of different methods used through literature review, but the method I am using now seems to be the simplest one to model which is the finite difference method of the basic one dimensional transient conduction equation, and am using a simplified thermal network. I may be able to discretize my simulation by doing the simulation for every few days, and only having the code take the information I need (which is the TR + auxiliary heating/cooling needed.) Maybe that might work for a year. 
That explains why I couldn't reproduce it, I'm using 2014a. 
Yes, I did. It failed as well.
Can you re-code some of your equations in C or C++? You can then compile them as mex functions which should speed things up a little. If your iterations don't really need information from the prior for-loop steps, you can't really vectorize it: you can using parallel loops (parfor) if you have the toolbox. You can also run your code with the profiler (profile on before running, and profile viewer after a few steps) and you can see where time is being eaten up. 
Try fminsearch(). It doesn't require the Optimization Toolbox and I've heard it works better than functions in the that toolbox (fmincon, etc.) when it comes to having ODEs in your objective function. 
For general speedup: * vectorize where possible * pre-allocate your variables instead of having them grow in the loop(s) * if your data is getting REALLY big, maybe save out to MAT file or something every once in a while to keep your memory footprint small. More advanced (May require other toolboxes): * rewrite some code in C/C++ and Mex it * Use MATLAB compiler to auto-generate Mex functions for your slow code * Use parallel computing to utilize more than one worker for your simulations (parfor, batch, etc.) 
Thank you sir.
Energy balance is different than a finite-element heat equation. Energy balance is like deltaT=(Qin minus Qout) / thermal mass of room Heat equation is a second order differential equation, that provides temperature as a function of position. You don't necessarily need heat at a given location do you? So perhaps just go to a simpler description of the room.
This is a terrible terrible thing to do. Anytime you find that you want to do this, it should serve as an indication that you've done something wrong. Rather than push forward in your code, you should back up and figure out what programming decisions you could make better. In this case, you could make a cell array called Yale, where each element is one of your current Yale_x variables. Then just do for n = 1:10 subplot(2, 5, n); imagesc(Yale{n}); end
I remember using something like "genvarname", but I don't know if it' still supported.
Making a Yale array if possible is definitely the "better" way to go about this in my opinion too.
In more recent editions, `genvarname` has been replaced with [`matlab.lang.makeValidName`](http://www.mathworks.com/help/matlab/ref/matlab.lang.makevalidname.html) and [`matlab.lang.makeUniqueStrings`](http://www.mathworks.com/help/matlab/ref/matlab.lang.makeuniquestrings.html) (you'd want the second for something like op's case). But generating strings like this is usually much less readable/efficient than simply using a cell array for something like what OP is doing. The only time I tend to use the above functions is when reading data from a file into a struct when named access is preferable but not all column headers are guaranteed to be valid names when read from the file. 
This. Also, if all of your images are the same size, you can just create an MxNxP matrix rather than a cell array. Either way, don't do what you were thinking about.
Basically this is my problem: How do I reference the 1's and 0's of a 100x1 Vector to a 100x3 matrix to display the failed pipes.
Yes it is a new variable, I made that name up, you can call it whatever you want. You can put 'index' within the name of a variable and it won't be read as a command, so long as you don't call the variable "index" with no other characters alongside it. You are welcome, I was there last year and had to learn MATLAB on the fly.
Found my mistake: pipeindices=find(failedPipes,n); I forgot the second argument.
I understand exactly what is happening now. What is the 'n' doing? If you don't mind me asking
Error, undefined function or variable for 'n'. If you aren't busy, you think that there may be an easier way for us communicate? lol
Well,... you do need to pre-llocate arrays and matrices if you plan on filling them in an iterative fashion. You don't *have to*, but the code will run significantly slower if you don't. 
Nail on the head man, thanks for the help, but I ended up getting that all by my lonesome :)
Lol :) 
If you read the sidebar, you will see that we don't like doing people's homework. That being said, you should set a breakpoint and debug your own code. 
matlab coding
And what is this? You seem very unstable. 
/r/DoMyHomework/ might be more what you are looking for.
Pro Tip: This is *bad* was to start your academic career. There is nothing wrong with tutoring, but this certainly sounds more like "I'll pay you to do my homework". If you need help, go to the professor, go to your counselor, talk to friends, etc. Most schools also have a free tutoring center (tutors are paid by the school, not you). If you're in doubt, ask yourself this, "what would the prof do to my grade if (s)he saw this post?" 
Not the most helpful, but maybe use Matlab directly? My understanding is that MuPAD is basically deprecated. All of the needed functionality is in the symbolic toolbox. Try instead: ezsurf('8*x.^2 - 3*y.^2+13')
I highly doubt anyone here would be willing accept that offer. However, I'm curious about your situation. Why are you unable to do the assignment? What is your major? Is this your first programming related course?
I just started University this semester, late August. I'm studying Mechanical engineering. One of my five courses this semester is Matlab coding. I have never used coding programs before. My professor has a diploma in Health engineering or whatever you call it in English and a masters degree in the same category. This assignment is actually related to his researches in the University, he works with a physiotherapist and they do research to find out if people are cheating on insurance companies with " fake " injuries ". So they tie sensors to peoples heads and make them follow a dot on a screen and from their precision on following a moving target they can see on a graph how well people can do it. So obviously people with injuries can't follow the target well. So this is a professional assignment actually but we're just newbies to Matlab, but he believe we can do it. Does that answer your question? I'm kind of busy at the moment so I had to write this fast but i hope you get the concept.
I hope you're busy *doing your own homework*.
I don't want to paste the code here, since it would feel like you guys are doing the homework for me. B is some arbitrary integer representing a row that I want to stick the data into. This is the result that I have worked on and got using C{end+1,B}=X [Wrong Result](http://i.imgur.com/2w9fGwO.png) I want 4 rows with 4 columns with 15 entries, but it is giving me this thing instead...
Thanks for the examples agentq512! I think I got the gist of how I want to approach this problem. I will give it a go for my self. Sorry for the inconvenience of typing every single options out.
The best way to do this would be to define the vector of angular values first, then evaluate the trigonometric functions with the previously defined vector as an input. The syntax you have specified essentially reads: 0:0.1:0 This doesn't make much sense.
The problem essentially reads, given a vector with N entries that vary randomly from 1 to 100, duplicate each entry in the vector so that each duplicate occurs after the original value. If v = [1 5 2] Then your output should read: v = [1 1 5 5 2 2] In other words, given an input vector with length N, the output vector should be length 2N where v(i) = v(i+1) for i = 1,3,5,...,2N-1. edit: Just noticed you go to the same school where I received my B.S. from! What a coincidence.
Awesome, thank you so much. I'm going to try that soon when I get a chance 
I'm building a Routh Hurwitz stability criterion function, btw.
Off the top of my head, try making all the elements in the matrix into symbolics. Matlab doesn't mind a number being a sym type. edit: probably with R = sym(R); or R = sym(zeros(a,b));
You did it! Thank you! It even simplifies when you ask it to!
Yes I came across those in my searching, but doesn't "isnan()" only give you a matrix of 1s and 0s, where a 1 means it is a NaN and a 0 means it isn't? I just want a final count of all the NaNs in the matrix; I don't need to know their locations.
the link is broken
Use Google
I saw it.. I still dont have very clear how did it solve it (maybe exact spacing for entre digital)... I only have experiencie with %s and %f and %g
The output of a function can be used as input to other functions. 
Sum([x(:).prop]) Post your class and script if you want more pointed feedback.
In what context? Are you doing some kind of optimization? It doesn't make much sense to ask this without some context, because the general answer is "write your code so that the variables never exceed those boundaries". 
It's probably also worth pointing out that the right answer to this involves something like `horzcat` and `reshape`.
For a 2-D matrix, use sum(sum()) as well.
Thank you so much, I had fixated on visibility too much and didn't know enough about how viable the functions were. This opens up so much more to read and learn, thank you for your help!
Thank you so much!
 sum(isnan(:)) 
Presumably you want a collection of patch or fill commands? If you have the coordinates of the edges of the coloured areas it shouldn't be too difficult.
nnz(isnan(yourMatrix(:)))
Yup exactly. I'm constantly plotting a large field of vectors so at the end of the day the time delay adds up.
As far as I can tell, almost every post here gets downvoted.
I'm not going to download a zip file. I have more sense than that. But the typical reason loops are slow is pre allocation. Are you pre allocating your array where you are storing the resultant calculation. That's always a huge sink if it has to on the fly allocate space. Do it first. 
Wow such a simple fix! Thanks a heap!
Could you post a link to your model?... We don't exactly have access to your computer you know :). Why do you think it's wrong? Any strange behaviours? Or just a gut-feeling.
When sharing code, use gist if it's one file, github if it's several. But generally you want to cut down the code to the absolute minimum few lines needed to reproduce your bug. That exercise in itself is often very helpful in letting you understand the problem. As said above, it's preallocation. The reason for this is that matlab's arrays put the elements next to each other in memory. If you initialise an empty array, it doesn't know how big it's going to get, so it allocates a small amount of memory. As you add more items to the array, if it runs out of space in that area of memory, it has to copy the whole array somewhere else in memory. Do that a few times, with an array of increasing size, and you've got a significant slowdown. If you know how big it's going to get, preallocate an array of that size with nans or zeros (I prefer nans, it's easier to see if you've fucked up). If you don't know how big it's going to get, preallocate a really big array and then trim it down. 
This is very helpful. Makes sense about the memory allocation. Sorry about the long / zip'ed code. I will use a smarter method next time I have a similar question / issue.
I have a feeling the actual physics equations are inputted kind of wrong even though they are showing sort of the correct output. Also I think there must be a simpler method to do it. Edit: Dropox link https://www.dropbox.com/s/x28kfamaezet4fr/All3heatloss2.m?dl=0
Or maybe `area` plot though it only allows you to go to a constant. You could look into something like [this](http://stackoverflow.com/questions/6245626/matlab-filling-in-the-area-between-two-sets-of-data-lines-in-one-figure) but even that is hackey. Matlab is very powerful but it can't do everything. You absolutely *could* make this with Matlab's tools but you'd be building it. It's not out-of-the-box. With that said, if you do make something, and spend the time and effort to make it general purpose, (a) post it here for us and (b) put it on FileExchange
You can use imaginary values for coefficients in transfer function objects... And I've never heard of tfpoly... Are you actually using MatLab, or are you using Octave? Because tfpoly is an Octave function. So says google.
Can you explain what the bottom plot is representing? How would I go about creating it from the top plot?
Also, I am just beginning into Matlab, but I am actually looking for possible team members to compete on this!
Is there any other function that isn't feval() that can take strings as inputs and use mathematical operations on them? If not, is there a function or tactic that can be used to kind of brute-force it or "trick" Matlab into thinking it is a number? Like in algebra and symbolic manipulation done by hand, variables are just placeholders for unknown numbers; the mathematical operations done on these variables are still the same. Like, 2^(2) = 2\*2 = 4 can be written generally as x^(2) = x\*x. I don't have a enough of a grasp on *how* Matlab does it's calculations to see why the same can't be done in code. If it simply just can't be done, where can I look into trying to write my own CAS, that can be taken advantage of by Matlab (basically make my own plugin for it)?
Vectorize that inner loop
Use `gradient()` or `diff()`
Try find()
I would be very interested in this. I have a lot of MATLAB experience, although admittedly very little image processing and recognition experience. Email if you want to team up.
I would be interested in teaming up
Me too! PM me
I'm not sure how the interpreter has even let you get that far, to be frank. The issue seems to be defining the symbolic variables. FMINCON expects an objective function that has vector arguments as inputs and outputs. This declaration and assignment: &gt;syms x y z &gt;myfun(x,y,z) = -147 * x - 143 * y - 193 * z + 40000; is not viable regarding declaring an objective function. I suggest you do this: remove those two lines above in your Op1 function. Define your objective function in the same Opt1 file as a sub-function at the bottom of the file: &gt;function f = myfun(X) &gt;x = X(1); &gt;y = X(2); &gt;z = X(3); &gt;f = -147 * x - 143 * y - 193 * z + 40000; &gt;end In the Opt1 function, change your call of fmincon to the following: &gt;[X fval] = fmincon(@(X) myfun(X),xo,... &gt; Amat,Bmat,[],[],[0,0,0],[200,250,200]) Then run your Opt1 function, you should get: &gt;X = &gt; &gt; 0.0000 13.3333 200.0000 &gt; &gt; &gt;fval = &gt; &gt;-506.6667 The three elements of the output X then of course refer to the x, y and z values that minimize your function myfun, subject to your linear constraint matrices A and B, with the minimum being -506.6667. 
Ahh, I was thinking that I needed to define x,y,z as symbolic variables for fmincon especially because it seemed weird to call to a subfunction with undefined variable X. I made the changes you suggested it worked. Thank you very much!
Matlab isn't perfect, but it's not nearly as bad as you think. Going through your comments - The important thing to understand is that the Matlab command window is a persistent 'base' workspace, like a Python IDLE session. If you type 'whos' you can see what variables are in that workspace. Functions all have their own workspace, as you would expect. There is also a 'global' workspace which you can interact with by declaring some variables to be global. By default, scripts will just run in the base workspace, which is persistent during your Matlab session - Matlab's documentation is one of the best things about Matlab, but you do have to read it to know what's available - Again, the documentation provides copious examples and comprehensive listings of function arguments and outputs - You need to know more about Matlab handles. For plotting, a handle is kind of like a pointer to a graphics object. 'gca' is a function that returns a handle to the current axis. If you had typed 'help gca' into the command window, you would know that :p If you type 'get(gca)' you will see a listing of all of the properties the graphics object has, so that's how you would know that 'XScale' exists. Alternatively, you could have typed "Axis properties" into Matlab's help, and you would have ended up here http://au.mathworks.com/help/matlab/ref/axes-properties.html which again has a comprehensive listing and explanation of all the properties - If you had looked at the documentation for the 'legend' function, you would have seen that it says "legend(ax,___) uses the axes specified by ax instead of the current axes (gca). The option, ax, can precede any of the previous input argument combinations.", so you pass it a handle to axis you want to draw the legend in as the first argument. Similarly, the documentation shows how specifying the location works - The order is dictated by the plot function arguments, naturally. This is something that's quite annoying about Matlab compared to Python, in that you can't name the arguments and specify them in any order. However, with the handle to the graphics object (e.g. 'h = plot(x,y)' will give you a handle 'h' to the line, or you could click on the line and run 'gco'), you can set the properties like the line color in any order you like, using the 'set()' function - xlsPasteTo appears to be a function available on the file exchange, so it's hardly Matlab's fault that the author didn't provide an argument for you to specify what plot is going to be used. However, if you're talking about http://au.mathworks.com/matlabcentral/fileexchange/21158-paste-a-matlab-figure-to-excel/content/xlsPasteTo.m, then the comment at the top says "this will paset into A1 at Sheet1 at File.xls the current figure". The point is that there is always a 'current object' that's in focus, if you like. These are generally the most recently created object, or the last thing you clicked on. So for example, xlsPasteTo will plot either in the last axis you created, the last axis you clicked on, or the last axis you explicitly set to be the current axis. You get handles to the current objects using gcf, gca, and gco. You can set the current figure or axis using figure(h) or axes(h). All of this is of course in the documentation - you should start here http://au.mathworks.com/help/matlab/graphics-objects.html
I was not aware of a doc function. Thanks for that. &gt; As for your gca() complaints... I think you're reaching here. It's a function (&gt;doc gca). gca() is a convenience function to get the handle of the current axis, but you could have also saved that handle when you created your plot() or your subplot() and done it more cleanly. After reading this, I think it's the lack of a typesystem that is really tripping me up. I'm more confused about gca now though. The doc page says it's the "current axes handle". So is gca a pointer to a callback function that returns the current axes, or is it more like a pointer to a pointer that points to the current axes, not an actual function? When using it in the following syntax am I dereferencing the pointer then? Does it need to be dereferenced like this? ax = gca I'm also unclear on which axis is the current axis? If I set firstAX = gca after the first plot, then on the second plot call secondAX = gca, will firstAX still reference the axes of the first plot because gca was a callback function, or will firstAX now point to the current axis which is also secondAX? I suppose I can try this in a bit, I have a pending restart and wanted to type this out quick. Thanks for your time. 
&gt;You need to know more about Matlab handles. For plotting, a handle is kind of like a pointer to a graphics object. 'gca' is a function that returns a handle to the current axis. If you had typed 'help gca' into the command window, you would know that :p This helps a lot. &gt;If you type 'get(gca)' you will see a listing of all of the properties the graphics object has, so that's how you would know that 'XScale' exists. I knew I was missing something! I was blindly finding properties going off examples from google that did kind of what I was looking to do. I did not know about the get function. I wonder if there's an editor that would provide autocompletion for this? Your post really is clearing up a lot of things. &gt;xlsPasteTo appears to be a function available on the file exchange. Yea this is one I grabbed off the Exchange. I couldn't figure out how to do it through ActiveX. I used it as an example of why I don't like the MatLab syntax because like so many other functions, it just assumes which figure it should paste without being passed the figure. 
When you create an axis, it will be set to the current axis. 'gca' returns a handle to the current axis. The 'axes' command creates an axis object, and returns a handle *to that object*. So for example, ax1 = axes() ax2 = axes() ax3 = gca gives you 3 axis object. If you do ax1==ax2 ax1==ax3 ax2==ax3 You can see that gca() has returned the handle for the second axis. For your question, 'firstAX=gca' gives you a handle to the first axis, so if you make the second plot, and then run 'secondAX = gca', then firstAX still corresponds to the first axis. Also not sure what you mean by a 'lack of a typesystem' - everything has a class. But what can be very confusing in Matlab is that if you have a function, you can call it without the () operator. gca is a function. In Python, this might look like print gca &lt;function gca at 0x221832&gt; print gca() matlab.graphics.axis.Axes wheres in Matlab, 'gca' is equivalent to 'gca()' - the same is true for any function in Matlab. That's why if you type max into the command window and run it, the error you get is &gt;&gt; max Error using max Not enough input arguments. because that has actually executed the 'max' function, and that function has thrown the error
&gt; If you type 'get(gca)' you will see a listing of all of the properties the graphics object has *Some* of the properties the graphics object has, not all of them. Often not even half. For example, for a basic axis, `get(gca)` gives me 34 properties, when in reality there are 143 properties. And that is not including additional java properties.
I use MATLAB a lot, although now I use Python. Got space for one more on the team?
I created "Team Reddit" on kaggle and requested matlab licence as the team leader. Pm with email addresses and I will add you.
I think the outer loop can be vectorized as well if fingerprint is changed from a structure to a matrix of size i,j. Parfor is easier to implement if you've got that toolbox though PS - please don't eat me
Post what you have so far.
So far I've got the basics down but not much idep = input (' Enter the initial deposit amount: '); annualper = input (' Enter the annual percentage yield: '); matper = input (' Enter maturity period (number of months): '); disp (' Month CD Value '); for i = 1:1:18 fprintf (' %7.0f %7.2f\n',i,???*??????); end
You're using fprintf(), it's going to try to print to a file, but you haven't opened a file to write. If all you want is to display you should use sprintf(). Also, your matper variable isn't being used to determine the length of the for loop. You also need to iterate the initial value inside the loop, so idep = idep + idep*annualper/12. 
Fprintf is correct. Unlike C, in Matlab fprintf is used when printing to both console (no argument) and to file (with argument). Matlab has no printf. Sprintf is used only when printing to a string variable. BTW, a simpler loop syntax is: for i = 1:18 ... end And I think your format string might be better as %7.2f, since you'll want to report monetary values down to the penny.
What is the actual issue? The following works for me just fine: f = @(x) 1 - abs(x); X = linspace(0, 5, 100); plot(X, f(X-2), 'b-', X, f(X-3), 'r-') 
R2015a gives me 127 properties. R2012b gives me 103 properties. What version are you using? How would you ever find a complete list? 
Show line 1, need to see how you initialized "coordinates," this is most likely where the error is.
Use a nested for-loop. The outer loop over how many plots you want. The inner loop over the number of Fourier series elements you want. It might be useful to have the inner loop depend on the other loop's index.
I know matlab can do some stuff with raster and vector (shapefiles) and latitude/longitude. What format is your data in?
If you already know how to plot the square wave, then I assume you've already calculated the Fourier series based on N=&lt;some value&gt;. So, use a for loop to change that value repeatedly and plot the results on the same plot.
Thanks a bunch guys! The pieces just clicked after your comments.
i = sqrt(-1). Anyway I can't possibly tell you what your code will do without seeing your code, but if you don't alter a variable then it's value will not change. 
He means: i = *input variable*; function (i) original_i = i; *function modifies i* sprintf(*text*, original_I); Essentially assign the original value of the input variable to a new variable. The input variable will be modified, but the new one won't change. Print that one. If you're recursively calling the function so that the output of the function is passed to itself as the input, just make the recursive function take two inputs of the same value, one which it modifies and one which it just passes through for reference. 
I'm guessing the function takes an input, and the output of the function is the input to the same function, hence the recursiveness. Since the input is continually changing, the original value is lost. I think OP just needs to pass the original value into the function as a second input that isn't modified, or make it a global variable or something. Hard to tell without knowing what the function is supposed to do though. 
You are spot on
I'm thinking a bare minimum functioning example would be like this. --- function Countdown(x) x = x - 1; if x &gt; 0 Countdown(x) else sprintf('You counted down from %i', ?) end --- In this example, you want the question mark to be the original value of x when the recursive function is first called. The simplest way is to add a second variable that passes through. --- function Countdown(x,y) x = x - 1; if x &gt; 0 Countdown(x,y) else sprintf('You counted down from %i', y) end --- When you initially call the function, input the same value for x and y. 
not sure what your function does so can't really give you any specific advice but you could do something like this: % call function i=7; rec_test(i,'first run') %%%%%%%%%%%%%%%%%%%%%%%%%% function rec_test( input_variable, ~) % Recursive example code %% do computation or whatever foo=randi(10)+input_variable; input_variable=input_variable-1; %% check if it's the first run n=nargin; if n&gt;=2 fprintf('first value=%d\n',foo) end %% determine if you need ot run the function again if input_variable==0 fprintf('last value=%d\n',foo) else rec_test(input_variable); end end 
Did it work?? 
Sorry, I just realized my previous reply was ambiguous. When I said "it is very easy to do", I was referring to "I can't believe I missed that little detail!". In other words, it is very easy to have these sorts of off-by-one errors when doing manual index calculations like this, which is why I suggested using an approach that doesn't require such calculations.
I'm not sure what you mean. Any function can return as complex of a variable as you want. 
&gt; "Why Simulink isn't going anywhere" And as long as Simulink isn't going anywhere, Matlab isn't either. I can all be controlled programmatically through Matlab. Companies are already paying for one to get the other.
I used [`m_map`](http://www.eos.ubc.ca/~rich/map.html) when I took an ocean circulation class a few years ago. Take a look at that and see if it can help. (sorry but I can't really answer any questions on it. It was a long time ago)
Alright so here's what I did but I'm having a trouble showing the annual growth for months 2 to 18. Any advice? for i = 1:18 fprintf (' %7.0f %7.2f\n',i,idep + idep*annualper/1200); end
I know nothing about wavefunctions, but did you try using a shorter time step? Explicit methods are often unstable if step length is too high.
Or (and either one is fine) function [v1,v2,v3] = myfun(...) Both will work fine to get a vector out.
In case you want to be more tricky, subplot will return a handle to the axis object it creates. So you can do something like: a(1) = subplot(1,2,1) a(2) = subplot(1,2,2) a(3) = subplot(1,2,3) This gives you easy access to the axis objects once all is plotted, so you can do stuff like loop through to find the min and max ylim values for the set (and apply them). It also allows you to use linkaxes() which you may find useful
Here's what I have. Again, it works in 2012, doesn't work in 2015. No idea what the differences are between the two. ka = 9; kb = 2; La = 10; Lb = 10; F1 = 2; F2 = 4; syms x1 x2 positive; Vf = -(F1 * x1 + F2 * x2); Va = 0.5 * ka * (sqrt(x1^2 + (La - x2)^2) - La)^2; Vb = 0.5 * kb * (sqrt(x1^2 + (Lb + x2)^2) - Lb)^2; V = Vf + Va + Vb; fx = diff(V,x1); fy = diff(V,x2); S = solve(fx,fy); [S.x1,S.x2]; %fxx = diff(fx,x1); %fyy = diff(fy,x2); %fxy = diff(fx,x2); %D = fxx * fyy - (fxy)^2; X = S.x1 Y = S.x2 Vf = -(F1 * X + F2 * Y); Va = 0.5 * ka * (sqrt(X^2 + (La - Y)^2) - La)^2; Vb = 0.5 * kb * (sqrt(X^2 + (Lb + Y)^2) - Lb)^2; Vmin = Vf + Va + Vb; fprintf('Minimum Potential energy is: ') disp(Vmin) fprintf('Minimum Potential energy occurs at: ') disp(X)
I tried to do this but didn't manage. I think (?) the problem is that for some reason I'm not even getting the alpha channel with this command: [imgdataShape map alpha] = imread (stimfilenameObject); But it works okay for other images. I'll try again next week. Thanks
This is more of a question of mathematics. Create an algorithm to find how many rectangles of a fixed size can fit in the space, and then replace that fixed size with a variable in the function.
Then do it. First of all, what's the algorithm you've come up with? How do you calculate the number of rectangles? This is how you define a function. function output = MyFunction(input) output = input + 1 end This simple function will take the input number and add one to it. You can call on it like this. MyFunction(30) This will return 31. For your function: the input should be the size of the ship and the size of the rectangles, and the output should be the number of rectangles that can fit. 
Check out the **plotyy** command. I believe that on the file exchange, there are extensions (think **plotyyy**, **plotyyyy**, **plotyyyyyyyy...**) for more signals.
My data is changing so I can't do that for every single set of plots :/
Thanks! I think that's what I need, I'll try it out later!
The prompt of the assignment requires us to use symbolic variable to solve. I have already solved using fminsearch, as that was the first part of the assignment. It says we should find only one value for the minimum potential energy given that the x and y (or x1 and x2 in this case) are positive. So we have to use 'syms x y positive'. Not sure if I need to run it through a loop to do this after using symbolic variables though.
I have no clue. I posted my entire code, I don't have a "z" variable anywhere, it just appears.
 yvalues = [y_1(:); y_2(:); y_3(:)]; ylim([min(yvalues) max(yvalues)]);
If I were you, I would look into various sort methods and choose a simple one. But instead of organizing by the values actually in the positions, you would need to remember that distance = sqrt ((x2-x1)^2 +(y2-y1)^2 +(z2-z1)^2 ) I apologize if I remembered the distance formula wrong, but I'm on my phone so typing up too many specifics would end up with more typos. Hopefully this is helpful, but since I am new to MATLAB it's very possible there's a method to do this sort of thing that I just don't know. 
Sometime for basic computation and plotting, I'm enough with octave/freemat, which is free If you're student, better ask the proper academic license from your campuss
Instead of acquiring the software illegally, use [Octave](https://www.gnu.org/software/octave/). It's 99% compatible with MATLAB. The [differences](https://en.wikibooks.org/wiki/MATLAB_Programming/Differences_between_Octave_and_MATLAB) are imperceptible to most users.
I don't have acccess to the newest version, but looking at your output more closely, it seems like MATLAB is giving you the result in terms of roots of polynomials - so z is not an actual variable, just the notation for polynomial root. See if you convert the result to numeric value (X = double(X), Y = double(Y) after you've extracted the solution from S into X and Y) and get correct numbers that way.
Student version is only $100
Here's a script that you're welcome to extend to fit your purposes. I wrote what is basically a travelling salesman heuristic where we iteratively and greedily build the list of points by appending the nearest unassigned point to one of the two endpoints of our line. Note: this is simply a heuristic (even metric TSP is NP Complete). Edit: I'd love to hear an explanation as to why I was downvoted for this post... function [ sorted_pts ] = sort3(pts) % Example function call: % pts = rand(100, 3); % sorted_pts = sort3(pts); % plot3(sorted_pts(:, 1), sorted_pts(:, 2), sorted_pts(:, 3), 'o-') npts = size(pts, 1); % Compute the distance between all pairs of points x = pts(:, 1); y = pts(:, 2); z = pts(:, 3); X = repmat(x, 1, npts); Y = repmat(y, 1, npts); Z = repmat(z, 1, npts); D = (X-X').^2 + (Y-Y').^2 + (Z-Z').^2; % Set the distance between a point and itself to a large number D = D + 2*max(D(:))*eye(npts); % Select two points that are closest to one another, and create % a list of point indices. [m, n, ~] = min2d(D); pt_idxs = [m, n]; D(:, pt_idxs) = Inf; % Until all points are assigned, append the nearest unassigned points to an % endpoint for i = 1:npts - 2 [val1, idx1] = min(D(pt_idxs(1), :)); [val2, idx2] = min(D(pt_idxs(end), :)); if val1 &lt; val2 D(:, idx1) = Inf; pt_idxs = [idx1, pt_idxs]; else D(:, idx2) = Inf; pt_idxs = [pt_idxs, idx2]; end end sorted_pts = pts(pt_idxs, :); function [m, n, val] = min2d(D) [val, n] = min(D); [val, m] = min(val); n = n(m); 
I'm not sure why you got down voted since you were trying to help; though maybe I do understand why. It is a bit outside of my knowledge set (the script you provided) in regards to MatLab, etc.. Regardless, I will try to learn and understand it and apply it to what I'm attempting to achieve. Thank you.
I thought of the distance formula initially.. but the problem I thought of is if a point that is a layer high (z=30 instead of z=0) is closer than a point on the same plane next to the hypothetical point being referenced, the distance formula will cause that layer higher point to be next in the array; and as I mentioned, I need the code to first arrange points closest to closest on the same plane (xy plane), and then move up one layer and do the same over and over. I may be wrong on that though.. and I have been attempting to find a way to figure out how to make the distance formula work even if that does pose a problem, and if you have any insight on that, I'd appreciate it. 
Think about that this definition of the objective function does (same holds also for constraints): obj=@(x)(-(bh*bl*wh*wl)); When constructing anonymous function, @(x) notation declares (locally, for purposes of the definition) x as dummy input variable to be used in function definition. Since your definition doesn't refer to x anywhere, your function will simply always return the symbolic expression inside regardless of input and fmincon cannot deal with symbolic expressions, only numeric values. So either get rid of symbolic variables altogether and write obj=@(x)(-(x(1)*x(2)*x(3)*x(4))); c=@(x)[(x(1)+x(2)+x(3)+x(4)-20);(x(1)-2)]; or if you really need to use symbolic toolbox for defining your problem, convert resulting expressions into proper functions with `matlabFunction` first.
Thank you very much. The reason I had things set up this way was because the objective function and constraints are quite complicated so I had parts of them defined elsewhere. Is it possible then to put functions inside other functions? I've tried the following but it doesn't seem to work (again a simple example so I can get my more complex code working). I find the way that MATLAB deals with functions to be very confusing base=@(x)(x(1)*x(2)); volume=@(x)(base*x(3)); Answer=volume(2,3,4);
You need to define volume as volume = @(x) base(x(1),x(2)) * x(3); `base` takes two arguments, so you need to specify them explicitly.
That makes a lot of sense but it doesn't seem to work. volume(2,3,4) returns the error "Too many input arguments" and volume(2) returns the error "Attempted to access x(2); index out of bounds because numel(x)=1." Thanks for the help by the way. You are probably now the number 3 contributor to my thesis :p
True, but then there wouldn't be much purpose to creating this "matrix generator" function. The point of it is to automatically generate the matrix with a specific set of values with the desired dimensions.
`volume` takes single input argument which should be a vector with three elements: `volume([2,3,4])`. Or if you want to define volume as function of x3 only with first two dimensions fixed, define it as x1 = 2; x2 = 3; volume = @(x3) base(x1,x2) * x3; Now the volume function will "remember" values of x1 and x2 that were set at moment of its definition (if you change them later, it will have no effect on volume). edit: or you can define volume as function of three scalar arguments: `volume = @(x,y,z) base(x,y) * z;` and then call it as `volume(2,3,4)`. Computers are dumb, so they'll always do only what's explicitly coded for them. further edit: in the above, you actually still need to call base with a vector: `volume = @(x,y,z) base([x,y]) * z;`. As you see, mixing the two calling conventions has great potential for confusion, so it's best to stick with one.
double(X) did it! Thank you so much. Not sure what the disparity between 2012 and 2015 are, or if it's just my version since its on a mobile desktop, but that fixed it. Thanks again for your help. 
Yes, but wouldn't the user still have to delimit the numbers in some fashion to show that it moves to a new row (e.g. so matlab knows its a 3x2 instead of a 2x3 matrix)? At that point it don't see the benefit. If you need to delimit the data anyway, then just slap on some brackets and call it good. Sorry if I'm misunderstanding what you're doing.
You could use strcmp with just the last four characters in the string (end-4:end), but for the specific case of files I would use fileparts. That function will break the string into the file path, the file name, and the extension. Then you can just compare the extension string. 
The task was given to me as an assignment for a course in MATLAB, so unfortunately I don't much much of a choice. I don't see what you mean by delimiting the data. What I'm trying to accomplish is something like this: &gt;&gt;matrixGenerator(3,3) = 1 2 3 4 5 6 7 8 9 or matrixGenerator(2,2) = 1 2 3 4 
 fileparts [p,n,e]=fileparts(uigetfile)
reshape
It sounds like you already know what to do then. I'm not exactly clear what you are asking for. Do you want to know how to ask for input? Or do you need help generating the values that will go into the matrix? What's the question here? 
 ymin = Inf; ymax=-Inf; for i = 1:3 figure(i) ylm = ylim; ymin = min([ylm(1) ymin]); ymax = max([ylm(2) ymax]); end for i = 1:3 figure(i);ylim([ymin ymax]); end (I just free-handed that. There may be bugs). It is not the most elegant solution but it does work. 
I think easiest would be to append 0s to your vector so that the vector is the correct length, and then use reshape.
I have looked it up, but I don't know how to manipulate it to compare three. Would I use: if strcmp(ball1, ball2) strcmp(ball2, ball3) disp('you are a winner') This is the page I was looking at: http://www.mathworks.com/help/matlab/ref/strcmp.html
What you need is a logical AND(&amp;&amp;) if case1 &amp;&amp; case2
Yeah, sorry I wasn't very clear with my question. I want to know how I can generate the values that will go into the matrix. The input for the function should determine the dimensions of the matrix as well.
Alright, how about the Fibonacci sequence? 0 1 1 2 3 5 8 13 21, etc. Is there a way to generate this sequence of values based on the function input?
Is ifdct_wrapping even part of the standard MATLAB library?
So how do I do it? With a loop? 
No doubt because I have no idea what I'm doing. The problem is that the objective function and the constraints are complicated, but they can be much more easily represented (and changed later) as functions inside other functions.
So then while(x&lt;input_value) c = a + b end something like this?
to clarify a little: I'm trying to generate the sequence in a function as a matrix
Thank you SO much!
Okay, so now I'm struggling with how I can actually create a loop that produces the Fibonacci sequence. Here's what I wrote so far:http://hastebin.com/ikatesivuz.coffee I managed to produce a single value of the Fibonacci sequence at any given index. But I need to create a loop that makes a single vector of each value, and I don't know how to do that. Thanks for your help, by the way. I do appreciate it.
If you make myObjective produce two outputs, the anonymous function will pass them both. I've never used deal(). 
You should really not do that recursively. 
 %% Create Data % Making 13 10x10 Matricies, 5 times % If your matricies are not equal sized, make NaN filled matricies the size % of your largest matrix, then fill it. IE A = NaN(n,m,5); % If you don't want your matricies all intermingled, you can keep adding % dimensions. M = (n,m,13,13,5), or five groups of 169 matricies split % 13x13 of size n,m. Dealing with matricies implicitly is a little more % setup and maybe a little more confusing at first, but the power (and % efficiency) of Matlab comes from how it handles matricies % (Matrix Laboratory). M = rand(130,130,5); M2 = rand(10,10,13,13,5); Proof = numel(M)==numel(M2); %% Anyway... Sometimes I digress % To answer your question as it was asked, we'll split the 3 dimensional % matrix into 5 cell arrays of 13x13 cells, with 10x10 matricies. That's % how I read it, let me know if I'm misinterpreting. %% Creating Cell Matricies A = mat2cell(M(:,:,1),10*ones(1,13),10*ones(1,13)); B = mat2cell(M(:,:,2),10*ones(1,13),10*ones(1,13)); C = mat2cell(M(:,:,3),10*ones(1,13),10*ones(1,13)); D = mat2cell(M(:,:,4),10*ones(1,13),10*ones(1,13)); E = mat2cell(M(:,:,5),10*ones(1,13),10*ones(1,13)); %% Matrix Calculations % Again... to nag... matricies are better when you can... % bsxfun is stupid fast for simple comparisons, addition, subtraction... %http://www.mathworks.com/help/matlab/ref/bsxfun.html % Compare EVERY element of A to EVERY element of B disp('Matricies Routines:') disp('-------------------') disp('EQUAL TO FUNCTION (3 times...)') tic() AB = bsxfun(@eq,M(:,:,1),M(:,:,2)); % Let's do two at once, to give cells a fighting chance AB2 = bsxfun(@eq,M2(:,:,:,:,1),M2(:,:,:,:,2)); % Shit... Let's try everything AB3 = bsxfun(@eq,M2(:,:,:,:,:),M2(:,:,:,:,:)); % Seriously... look at that number. % We just checked 84.5k numbers against each other and 16.9k numbers against each other, TWICE! toc() disp(' ') %% disp('GREATER THAN FUNCTION') tic() AB4 = bsxfun(@gt,M(:,:,1),M(:,:,2)); toc() disp(' ') disp('LESS THAN FUNCTION') tic() AB5 = bsxfun(@lt,M(:,:,1),M(:,:,2)); toc() disp(' ') %% Cells... % I hate you a little for this one... % This checks if all CELLS of A are equal to all CELLS of B % or... is each MATRIX in each cell exactly equal between A and B. % Maybe this is exactly what you want, rather than comparison of each % element of every matrix. disp('Cell to Cell Comparison... One Cell Array') disp('-----------------------') tic() AB6 = cellfun(@(x) isequal(x,cellfun(@(y) y,B,'UniformOutput',false)),A,... 'UniformOutput',false); toc() %% % If you're just looking for Matrix to Matrix comparison, and you've want % to use a bunch of single celled arrays with 13x13 cells and you're a % masochist, I think you have to loop. I usually do whatever I can to % stay away from loops (they're absolutely necessary, but should be used % only when necessary). disp('Stahp...') tic() % See below... all_cells = {A,B,C,D,E,A}; %% Compare all cells % We're comparing individual cells against each other (Matrix to Matrix, % not elements of matrix to elements of matrix), for each cell array. You % Should combine all those cell arrays into a single array... but let us % keep working with what I assumed so far.. % We'll compare A's cells to B's, C's to D's, E's to... fuck. % E's back to A's?!... ugh..... for array_num = 1:size(all_cells,2)/2 for cell_row = 1:size(all_cells{array_num},1) ABcell{array_num,cell_row,:} = cellfun(@(x) isequal(x,cellfun(@(y) y,... B,'UniformOutput',false)),A,'UniformOutput',false); % Fuck this though... end % Seriously... end toc() %% Just as a last ditch nag... % you can convert cells to arrays pretty easily using the following syntax % B = [A{:,:}] % You can then reshape (B) and index it to talk back to your cell, if for % whatever reason you need it to be a cell. Don't get me wrong, cells are % great, just not for holding matricies.
In your for loop, I assume you want to update the value of x and store each iteration in a vector. However, you have simply replaced x with this assignment, in the line: x = x(C-1)*slopes(1)*h; Therefore, the size of x is not growing with the loop, it has been assigned a new scalar value. The same goes for v. You want to replace those lines with the following. I am assuming you are using an Euler scheme to numerically solve this system of ODEs, hence the following updating scheme would be used: x(C) = x(C-1)+slopes(1)*h; v(C) = v(C-1)+slopes(2)*h; Consider also pre-allocation at the start of your code, i.e. creating a vector of zeroes that may be updated: x = zeros(N,1); v = zeros(N,1); Also consider using the built-in MATLAB solvers, try using ode45 to numerically solve your system of ODEs. You could call it like this: %Integration time tstart = 0; tend = 10; TSPAN = [tstart tend]; %System of ODEs in your function ODEFUN = @doublewell; %Initial conds x0 = 0.816; v0 = 0; X0 = [x0 v0]; %Solve [T,X] = ode45(ODEFUN, TSPAN, X0); %Get the outputs x and v x = X(:,1); v = X(:,2);
You could also try [Scilab](http://www.scilab.org/)
no its not you should download the curvelet toolbox from www.curvelet.org
ok, thanks! I think I found my solution with this! I'll report back if I'm still stuck.
Depending on what you want you could use [Xiaolin_Wu's algorithm](https://en.wikipedia.org/wiki/Xiaolin_Wu%27s_line_algorithm) or [Bresenhams algorithm](https://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm) to draw lines in general. However both do not exactly return the ~~cells~~ pixels that you need. If you want those ~~cells~~ pixels then you could do it by calculating the shortest distance to each (or a reasonable subset of) pixels center to the line. All pixels whose center is closer to the line than the line width/2 is in the set.
I believe there is a function called inpoly() that could help. I could have the name wrong since I'm not in front of Matlab right now. 
Thank, the function is `inpolygon` and that's exactly what I was looking for.
Do you understand the problem mathematically? What have you tried already? 
I haven't tried any coding yet because i have literally no idea how to create a model. Mathematically wise i just need to choose which model i wish to create as i already have all the of the equational workings. 
If you are only gonna use the program yourself, keep a mains crit, and call functions from there when needed.. if others are gonna use the program, a GUI is a good option 
That makes a point, the program is meant to be for other to use so I'm going to use GUI. You think all the functions should be used on the GUI script? or even if I use GUI I should use a mains crit? 
Develop the functions first, and then develop the GUIs to interface with the complete function. A good function shouldn't require a GUI to work. It is a nice tool for new users, or for using functions which have incredibly complex inputs and outputs. But there may be a moment when you need to use it in a script instead. Plus, debugging math in a GUI is very time consuming. I would also recommend that you embrace OOP, and create a class with methods instead of several functions. Since the class will hold the data you are manipulating, you only have to worry about importing data into the class. All of the class methods are then prepared to operate on that data. Using multiple functions, you have the prepare the data to operate with each, which may not be trivial. You would also have to be considerate of your workspaces. Working with a class and methods will also force you to think about what information you need for which buttons on the GUI. You may have functions which just work on stored data, no input required. That could be a simple button. Other functions which require user input need to be beefed up a bit.
Thank you! This was very helpful. It is true that debugging with GUI is slower. Shouldn't the functions at least depend on the GUI at least to trigger them? I will definitely look the OOP guidelines, it looks exactly like what I needed to organise everything. 
oh yes of course scalar and vectors... no wonder the second 0*t+1 made sense!
&gt; embrace OOP, and create a class with methods instead of several functions Only where the class will hold data as well! Otherwise, just bag up related functions in a module. This ain't java.
&gt; s=(0t)+1 and s=(0.t)+1 I again plead to use code formatting. I can only assume you have a `*` in there. `s=(0*t)+1` and `s=(0.*t)+1` 
Did you just ask reddit to do your honours thesis for you? This is the absolute worst place to ask something so huge. Most people ask for short solutions to small parts of their code, not how to code a complete model. If you can't put together a straight forward question no one is going to answer it properly.
This should do it: x{5} = ' |____/&gt;&gt;\_)-\___/ |_| |_| &lt;&lt;\___/ \____| |_| |_| |_| /_/ \_\ U/| |\u |_____| '; x{4} = ' u___) |.-,_| |_| | | | | | | |_| | | |/__ U| _ |u \| _|/ / ___ \ | | \| |/__ '; x{1} = ' ____ U ___ u __ __ _ _ ____ _ _ _____ _ _ '; x{6} = ' )( (__) \\ &lt;&lt;,-,,-. (__) )( _// \\ // \\ )(\\,- \\ &gt;&gt;.-,_|___|_,-.// \\ '; x{3} = '&lt;\___ \/ | | | | \| |\/| |/ \| |\| |\| | u /| |_| |\ U| |_ u \/ _ \/ |_"_| U | | u '; x{7} = [' (__) (__) (./ \.) (__) (__)(__)(_") ("_) (__)(_/ (__) (__)\_)-''' '''-(_/(_")("_) ']; x{2} = [' / __"| u \/"_ \/ U|. \/ .|uU |"|u| |U /"___| |.| |.| |" ___|U /"\ u ___ |"| ']; for idx=1:7 disp(x{idx}); end
Mathematical modelling is NOT a general approach, you cannot just grab the text book on modelling and follow steps 1 through 10. Source: currently a mathematical modelling phd student. That being said, what I do is: once I've set up my system of equations I use the matlab function 'ode' (stands for ordinary differential equation' to solve each equation over a given time step. Of course this is for heat and mass transfer modelling which might not apply to you one iota, so it goes
I would turn on "Stop on Errors" in the editor. That way, when it does hit an error, it will break in debug mode so that you can investigate what just caused it to error. Also, can you isolate a case where this will error and a case where it won't? Those would be helpful as would your main script that calls fmincon.
At present I'm using the optimisation toolbox so that isn't possible. And I simply can't make it work again. The code was working this morning, I made a few changes and it broke. And now nothing I do will make it work again.
It appears you weren't using the "@" to convert your functions to function handles: solutions=fmincon(@objective,[1,1,0.5,0.5],[],[],[],[],[0,0,0,0],[10,10,1,1],@constraints); I ran this and got the answer: [0.1129 0.0208 0.6997 0.6073]
What I'm about to say is probably a long shot as I'm not a 100% sure on the memory management of cells. However I believe cells are treated as a pointer like object, and even though you 'pre-allocate' with C = cell(1,k+1), MATLAB can't tell what sort of data objects are going to be placed as a container in the cell. It might be better, then to store the data in a 3-dimensional matrix. So, instead try this: C = zeros(size(M,1), size(M,2), k+1); Then in the loop, assign 2D matrices each iteration: C(:,:,j) = P*X; Worth a try, my only other suggestion is if memory is an issue, to run the code in chunks, i.e. fill up your cell to 10 entries or so, and save that as an explicit .mat file, clear the whole thing expect for the last iteration, which would then be used to fire up the next chunk.
Brilliant. Thank you so much. It's always the simple things.
 name = input('What your name? ','s'); age = input(['How old are you, ',name]);
Looks like very useful! I'll check out the links and try to implement it if possible. Thanks!
Made a highpass filter to remove up 0.5kHz - sound is allright - can hear the 'a' but the FFT is still a wide frequency band for a signle letter http://i.imgur.com/siUEO5e.jpg - I need a narrow band for a vowel recognition test where i need A, E and I and there fore i need a few passbands to amplify the vowels and the band must not be to wide to prevent other sounds to be amplifyed
Well, each of your matrices Q, A and P will be close to 800 MB when they become dense. So that's what is eating your memory. It seems like a weird choice to have the C as a cell, to me it seems a bit more intuitive to say in the beginning C = zeros(length(M), length(k) + 1); and then fill the matrix C as C(:,1) = X; C(:,2) = M*X; C(:,3) = P*X; ... Another disadvantage of your algorithm is that a recursion like this will accrue a very large rounding error at k = 50. I know that the algorithm for matrix powers in matlab is not a recursive algorithm for the sake of precision, although recursive algorithm would be faster for small powers. Even at sth like k = 5 recursion was deemed too imprecise. What is the explicit math equation that you are evaluating here? Maybe you can explicitly calculate it -- it would use far less memory and maybe not slow down your calculation that much. 
Yes, it is distance in a chain; and the other user that supplied a script seems to be attempting to address it as that.. but I'm having a brain fart and am unable to implement it into my function that I already have scripted. :(
Is there anyone that could help me sift through this script? I've tried various versions/implementations of it with my own script.. but I always get errors.
Main ones being that sort_layers, flip_previous_results, etc. being undefined functions or variables? Are there function plug-ins I'm maybe missing?
 results = results'; will invert the matrix, and give you 2 columns with 5 rows;
thanks man ! is there also another way of getting that format? 
 results = [l(:), r(:)]; (:) makes a column of all the elements of the variable. If you dont know if the variables are rows or columns its easy to use that. Else, you can just do: results = [l.', r.']; Note the dot, which is needed when using complex values, so you dont get the conjugate transpose.
The underlying issue is that your variables l and r are row vectors, and when you're using ";" to join then, they're being added as columns. If you can change where l and r come from, you can make them column vectors (use ; to separate values instead of , or l = l'). Then, when you create results, use results = [l, r];
It sounds like you want to solve a 'boundary value problem' where you fix the value of the solution at the endpoints, rather than an 'initial value problem' where you fix only one end of the solution. ode45 and related methods are designed for initial value problems. There are a whole family of different methods for solving boundary value problems. The simplest one for you would probably be the shooting method https://en.wikipedia.org/wiki/Shooting_method which effectively converts the boundary value problem to an initial value problem, thus allowing you to use functions like ode45
Paste all of what I posted into a single .m file named sort3.m. Then, call sorted_pts = sort3(InteriorCoordinates); from your original script.
Unfortunately, they are independent. 
the first one. that's my exact goal!
Check your while loop condition. It now says: While the function at p is smaller than zero And while the function at p is bigger than the defined tolerance. so: runs when 0&gt;fp&gt;t. That will mean the loop will only run if your tolerance is negative and fp happens to be in between your tolerance and 0. (That doesn't seem right!). Think about what you want to achieve with the defined tolerance. What has to be smaller than t for the loop to stop? 
While statements run the loop while the condition is true, so it's supposed to stop when 0&gt;fp&gt;t, and run while fp is smaller than 0 or greater than the tolerance.
So you are having trouble making new rows for every week, correct? What I did was make a vector, starting at 7, and increasing by 7, all the way to 365 (i.e. a whole year - I don't know the specifics of the challenge. Maybe out to 31 is sufficient). This vector is basically just holding all the critical numbers that would indicate the beginning of a new row. Then I incorporated it into the If...then statement. As in, 'if the number we're on is in the vector, then print the number and start a new line'. The code you have is really close to what you need. Just elaborate on the if statement, and maybe tweak some values. edit: Its 3am here. I'll help you when I wake up tomorrow (if you still need it) 
What's your value for tolerance?
0&gt;fp&gt;t does mean: smaller than 0 and bigger than tolerance. But again: if your tolerance is positive then this entire loop will not run. lets say t=0.1. fp is -2. 0&gt;fp; check this one is correct fp&gt;t; nope, -2 is not bigger than 0.1 so the loop will not run at all since you use &amp;&amp; (AND) they both need to return 1 for the loop to run.
Maybe, but I think you're talking about different things. For a second order ODE for say a simple harmonic oscillator, you would have say x(t), then your initial conditions at t0 are x(t0) and dx/dt(t0). Alternatively, suppose you had a heat flow problem, like diffusion/advection, where you had T(x) and you had your material in contact with reservoirs located at x=0 and x=1. Then your *boundary values* would be T(0) and T(1). In that case, you have a boundary value problem, not an initial value problem. In the first case, your initial values are given for different dynamic variables at the same value of the independent variable (note that dx/dt = v is essentially a second dynamic variable). In the second case, your boundary values are given for the same dynamic variable at different values of the independent variable. I don't think I've ever seen a problem like y(1)=a and dy/dx(0)=b in which both the dynamic variables and values of the independent variable are different. 
Check if your are assigning your vector 'x' correctly (is a(:,13) really your column with coordinates?). The reason that result1 returns all 1ns is because each coordinate ìs unique. So you are normalizing against themselves which of course returns 1.
Went through and checked and column 13 does contain the coordinates for all data-sets
*clear;clc; *days = input('enter number of days: '); *dayofweek = input('enter day of the week: '); *for j=1:dayofweek *if j&lt;dayofweek *fprintf(' ') *else if j==dayofweek *i=1:days; *fprintf('%3d',i) *rem(dayofweek+1,7); *if dayofweek==0 *fprintf('\n %3d',i) *end *end *end *end *fprintf('\n') 
You'll need to specify the path. If you've got nicely named paths (like it looks like you do for your files) you can try something like: for idir = 1:ndir for ifile = 1:nfile dirNM = ['/this/is/your/path' num2str(idir) '/']; fileNM = ['filename' num2str(ifile) '.txt']; dataIN = importdata([dirNM fileNM]); % now do fun stuff end end If you don't have nice path names, but just a few (like 3 you ask about), you could just make a cell array with them hard coded in and loop over that. (*e: this is similar to the other posters suggestion).
I think what you are looking for is the `dir()` commant. If all of your files are in one directory you can get the file names in a struct by doing `listings = dir([folderName '/*.txt'])` OR, just do `listings = dir([folderName])` then check with an if statement whether its a txt file or if its a folder `listings(i).isdir==1`... then do what you need to do.
i in this case is a counter variable, it can be replaced with k or anything else. the input variable 'message' is to be stored in an array, and the way it's used is, the handles.Listbox1 is updated with the array containing all inputs, I hope that makes sense
Was she so scared, she didn't write anything on the mock exam?
Found what?
right, I understand that and it makes the most sense. How I would accomplish this is store every 'message' into a cell array via one function, and call/display/update the Listbox GUI with another separate function. My theory is to get the buttons to store each press to a cell array. It will append the array by size(array)+1. Then coding the rest will come easy. My trouble is figuring out the code to store to the cell array, is there any quick way to do this? Thank you
Hi all, sorry I slacked off (due to a hurt leg) on this for a few days. Is the team on?
yeah, that is perfect, thank you! One last thing I need to understand, where in the code would I declare the array initially? And how do I initialize it to be empty/empty strings? would it be y = {'0'}; ?
And now that'll be stuck in my head today... thanks for that ;-)
Well, the value of n changed 8 times, but at all times n is a single number. If you want to know how many times n changed, set up a counter variable. Initialize it outside of the loop (k = 0) and then increment it every loop (k = k + 1) then at the end of the loop, you can see that k = 8
[Have you looked at the MATLAB Documentation?](http://www.mathworks.com/help/releases/R2015b/signal/ref/spectrogram.html) [Have you tried google?](http://lmgtfy.com/?q=matlab+spectrogram+code)
Since you said a vector, I assume its a 1xN or Mx1? Unless you mean a 2 column/row matrix? For a vector you could use: % wherever is where 'hours worked' ends and pay/hr starts, and vice versa. v1 = v(1:wherever); v2 = v(wherever:end); % Then total payment would be the dot product: TotalPay = dot(v1,v2);
http://www.mathworks.com/help/signal/ref/spectrogram.html http://www.mathworks.com/matlabcentral/answers/152573-how-to-plot-spectrogram-on-log-frequency-scale http://stackoverflow.com/questions/13858807/how-can-i-plot-the-results-of-the-spectrogram-function The MATLAB documentation is very good. StackExchange/Overflow is also really helpful. If you do ask something on it though, make sure to word it properly and such that it does not sound like homework.
... well, what while and for loops have you tried? The typical psuedocode for this is to stop either a) after N-iterations (for-loop) or b) you're within some tolerance either i) close to the exact value or ii) the difference between two iterations is sufficiently small (while-loops). You can also combine the two stopping conditions into a while-loop as well.
Thanks, checking it out now!
There's literally a function that does this for you. Did you even try looking at the documentation? 
If you want the internet to do your homework for you, you're going to have to post your code first. Most of us will tell you what's wrong, but we're not going to write code for you. "It gives me errors" is completely useless if you want help.
interp1 doesn't operate on cell arrays. You had the right idea about converting the cell arrays to matrices, but calling double() isn't the correct way to do it. In fact, you should've gotten an error. What does the data in oldx and oldy look like? You can check the contents of a cell array using {}: oldx{1} To properly convert to a matrix, try: oldxVec = cell2mat(oldx); oldxVec = oldxVec(:); oldyVec = cell2mat(oldy); oldyVec = oldyVec(:); newy = interp1(oldxVec,oldyVec, newx); Then, delta = Y - newy; Y and newy are the same length, correct? newy will have the same length as newx. You can check the size of Y by size(Y) No need for the disp(). Don't create a variable called size because it's already the name of a function. The error: Subscript indices must either be real positive integers or logicals. is because you're trying to index the variable you've created called 'size'. To get rid of it, clear the variable: clear size 
I did have a variable called size, changing that appears to have got me past that particular error
I wasn't ignoring anybody, I was just doing some basic checks. and yes, I'm not very... orderly in my approach. I'll try to keep your comments in mind.
Wasn't looking for the exact answer, just how to get started. Sorry. 
This looks like a job for... THE NESTED FOR LOOP!
 help interp1 particularly, read about the 'extrap' argument.
This worked perfectly. Thank you
I was being very general. Sorry. I just had to break up a vector into two separate vectors and then multiply those two 
Yeah, i was just adding it for debugging purposes in the code file. I get that i can just type the variable in the command window to see it
I don't see why inventing data using some approximation would help, but thanks for your suggestion. The detector only recorded out to a fixed point, so there shouldnt be any data before the first pixel, if you get my meaning.
Can't you use subfunctions, nested functions, or a namespace directory with multiple files?
I had a bit of trouble figuring stuff out, as I'm really inexperienced with MATLAB, but eventually I got it to work. Thanks for the help. This is my code: function outputSpectrogram(input) [audio, fs] = audioread(input); audioMono = (audio(:, 1) + audio(:, 2)) / 2; spectrogram(audioMono, 256, [], [], fs, 'yaxis'); end It's simple enough and does the trick, but now I need to figure out how to output the y-axis (frequency axis) in logarithmic scale, rather than linear scale. I have searched around on Google and checked the documentation, and found this: set(gca,'Yscale','log') It does change the y-axis to logarithmic scale, but it just does so by stretching the spectrogram image artificially and it looks terrible. Is there any way to properly output a spectrogram with a logarithmic frequency scale? I can provide images if need be. Thanks.
Indeed I did, and had trouble using it since it gave me an error message: "X must be a vector (either row or column)." I ended up figuring it out on my own eventually. I had to mono-ise the signal to one channel since the audio was read as two channels, and the spectrogram function only accepts one channel. The reason I asked for help here on Reddit was because I was on a tight deadline to get this implemented and wasn't really confident in my own abilities to get it done without any help.
Glad I could help. The disadvantage (and at the same time advantage) of Matlab is that it has a huge array of functions available for you. Often it's a case of first finding out what you exactly want to do and then determining the right tool for the job. Finding the right functions can often be a bit overwhelming if you don't know what's possible. But now you have 'Meshgrid' in your arsenal! Have fun with it :) (it's also great for making circular masks etc.). But again beware! If you use meshgrid in this way you get two matrices that are the same size as your original matrix. This might seem insignificant for relatively small matrices but it adds up quickly filling up your memory in no-time (I once tried using meshgrid in creating the coordinates for a 3D matrix... it did not go well).
For some functions, they have varying numbers of outputs. If you don't specify an output matrix, it will just spit out it's default singular response. You can see the different forms in the Syntax section of the [Spectrogram documentation](http://www.mathworks.com/help/signal/ref/spectrogram.html#syntax)(the examples in MATLAB documentation are really helpful). In your case, you want: [s,f,t] = spectrogram(audioMono, 256, [], [], fs, 'yaxis'); I think with [s,f,t], you can just plot it yourself with surf(t,f,abs(s)) or however you wish, but you still need to set(gca, 'Yscale', 'log') There is a function from that outputs log instead of linear on this page: http://www.ee.columbia.edu/ln/rosa/matlab/sgram/ Just make sure to leave credit and all that jazz. You can also use MATLAB's file exchange to look for user contributed functions. 
If you're asking how to organize a single file or function which is extremely long into something understandable, know that you've already lost the battle. See what /u/TheBlackCat13 said. That's the approach for writing clean code.
Very nice, definitely a better solution than the quick and dirty one.
Separate functions into subfunctions for sure, but also explore the code folding options under the 'Editor/Debugger' settings menu in your preferences. You can enable it to fold/unfold loops, conditionals, class blocks, etc. There is a plugin for Eclipse called Matclipse which supposedly allows you to write and run MATLAB code from Eclipse, which I like as an IDE because it outlines all your currently defined variables and functions in a file, but I haven't been able to get it working. That might also help you out (if you have more patience than I do).
This is a problem where you are iterating over one-dimensional object but need to partition it into a two-dimensional array. In this sense you want to think about how your two indices i and j have to be combined to access a single element of your cell. That being said, you want to do something like this: for j = 1:3 for i = 1:3 image3(j,i) = f1{1,1}{(3*j-1)+i, 1} end end You might also want to consider the reshape function, as follows: %Get the {1,1} element of your cell f11 = f{1,1}; %Convert cell to matrix: mat = cell2mat(f11); %Reshape the 9x1 array into a 3x3 array: image3= reshape(mat, 3, 3)
I assume image3 was a matrix as you've used the circular parentheses () in indexing. Reshape only works if the resulting array has the same number of elements. I.e. you cannot reshape a 1x10 array into a 3x3 array, as the 1x10 array has 10 elements, the 3x3 has 9. If each element of f1{1,1} contains a 51x51x3 uint8 colormap, then this assignment: image3(j,i) = f1{1,1}{(3*j-1)+i, 1} is not valid, as you are assigning a 3-dimensional matrix i.e. from the right hand side to a scalar value (i.e. the i,j element of image3). Is image3 a cell array or a normal (double) matrix? If anything as long as image3 is not predefined as a datatype, this should work: image3 = reshape(f1{1,1}, 3, 3) This will simply reshape the f1{1,1} cell from 9x1 to 3x3. Then each element of image3{i,j} will be your 51x51x3 uint8 matrices.
I don't know what this means. Scripts can absolutely call functions. The key difference is that each function maintains its own workspace, where as a script evaluates everything in the base workspace. Edit: Ignore my comment. Misread/misinterpreted what we were talking about.
Got it, my apologies.you are right, and I had lost the context. I also misread your post. It would be nice if matlab source code files did not make a distinction between what kinds of definitions: scripts vs functions they could contain. I do use this type of organization in Python frequently, as you point out.
Thank you. That's the way I had it before and I thought there was a better way. 
ok. thank you for the help!
Have you read the documentation for the date and time utility functions? It should have been the first results when you type "date" into the search bar. You did search the documentation, right? doc datestr doc datenum doc datevec 
Just a note for you and OP- this code will throw an error on line 1. MATLAB uses 1 based indexing. *e: no prob, bob
T is just the name of the table, ill try the switch statement and see if it works, thanks! edit: what does the "T{labelRow,a1}(1)" do? im getting an error and cant really see what i should replace there or what to do with it. Edit2: i keep getting the error "the number of rows much match the hight of the table", its saying that "projCol" is only 1x1, how do i get it to keep the 82 rows?
Table is a new data type introduced in 2013b. I just upgraded to 2015a last week and have never seen it before. I thought there was a row that contained P0-P9, Q0-Q9, and E0-E2, it seems there is not. Instead try: for a1=1:numel(T.Properties.VariableNames) switch T.Properties.VariableNames{a1}(1) This should get the column names. 
the rows are last names, the columns are the labels; P0-P9, Q0-Q9, E1-E2
Yes, the issue was how to get the column names? To find them I looked at the "Properties" field of the table class T. In the Properties field there are several subfields: Description VariableDescriptions VariableUnits DimensionNames UserData RowNames VariableNames VariableNames contains the column names. In the previous code example numel(T.Properties.VariableNames) gets the number of column names, T.Properties.VariableNames{a1}(1) gets the first character of the a1-th column name.
yeah, still getting the 1x1 array for the projCol (and the other ones too)
That is peculiar. Making my own example without the last names: listname='PQE'; T=table(); projCol=[]; quizCol=[]; examCol=[]; for a1=1:22 T.(sprintf('%s%d',listname(randi(3)),a1))=100*rand(80,1); switch T.Properties.VariableNames{a1}(1) case 'P' projCol=[projCol a1]; case 'Q' quizCol=[quizCol a1]; case 'E' examCol=[examCol a1]; otherwise fprintf('What does %s in column %d mean?\n',T{labelRow,a1},a1); end end I got '&gt;&gt; T.Properties.VariableNames ans = Columns 1 through 5 'Q1' 'Q2' 'E3' 'E4' 'E5' Columns 6 through 10 'E6' 'E7' 'P8' 'E9' 'Q10' Columns 11 through 14 'Q11' 'E12' 'E13' 'P14' Columns 15 through 18 'E15' 'E16' 'Q17' 'E18' Columns 19 through 22 'P19' 'Q20' 'E21' 'P22' '&gt;&gt; projCol projCol = 8 14 19 22 '&gt;&gt; quizCol quizCol = 1 2 10 11 17 20 '&gt;&gt; examCol examCol = Columns 1 through 7 3 4 5 6 7 9 12 Columns 8 through 12 13 15 16 18 21 
Other than the built in function, I would say this is the best method.
That's seems to be what I'm looking for! Thank you for your help :)
How can you plot the function before declaring it? 
That line is how I populated my table by randomly choosing if it was a project, quiz, or exam and filling in the rest. I only wanted to show that the original code works. It will definitely work without that line. My recommendation would be to change the 1:22 to 1:numel(T.Properties.VariableNames) Beware of the T=table(); line, it makes T an empty table.
Do you understand the mathematical concepts? What have you tried already? 
I understand the mathematical concepts in the sense that I understand what each method entails and how they might be used to solve the equations given. It's just once I try to think about how to apply them to code, I just don't really know where to start.
Hey wow that's really helpful! I really appreciate how much effort you put into helping me. Details for the other questions would be really appreciated since I'm still pretty much at a loss.
Code is just a list of instructions. How would you do the computation by hand? There's some list of steps you would follow. Write them down. 
Sounds like homework. You don't need to use a timer function here, sounds like you're supposed to use tic/toc. 
Have you tried writing code like the outline provided in the problem? That's basically the answer. 
Yes, do you have specified dot colors? If you do, then you may use MATLAB (or JAVA for an ImageJ plugin) to look for dots within a certain color range and return the corresponding pixels. 
Thank you a lot for your help. I will try this when i get video from professor. And if i will have some more questions i will ask you. 
This is a simple, fast and easy solution, but it can provide false positives. Here's a couple of alternatives if you're finding that to be an issue (unlikely, but hey): 1) Create a zeros matrix the size of each image/frame and set the pixels of the corresponding colour to one. You can then use bwconncomp to find the "objects" and ignore any that aren't the correct area in pixels, so you'll only pick up the dots you're tracking. 2) Use convolution with a kernel in the same shape as your dots on the aforementioned matrix, in other words a kind of 2d cross-correlation. This'll produce extremely high values where the dots line up and that's where your dots will be. Objects of a different size will not produce values as large so they can be ignored. Just a couple of ideas! The original solution is far simpler and probably completely fine, though. It just depends on the context.
Sounds a lot like particle image velocimetry - there is (unsurprisingly) a tool for just that on the file exchange. On mobile so I won't link it but it's called PIVlab. Even if it's not exactly what you need you could reverse engineer their tracking algorithms.
That is super helpful. Thanks.
Are the dots all easily identifiable or do they all look the same? If they all look the same you'll have to implement some sort of filter to estimate which dot in frame n+1 belongs to which dot in frame n. That's not the most difficult problem in the world but it's also certainly not easy (I had a lab mate doing this but with stereoscopic cameras instead of a single video and the videos were of migrating raptors which had to be identified and tracked between the two cameras, and that was her PhD).
The Hough transform: http://uk.mathworks.com/help/images/ref/hough.html
thank you! I'll study this page
Ctrl-A
Hough transform, or if it needs to be super general, you could look into something using a machine learning algorithm. Perceptron or neural net, etc. 
What have you tried? Set the pixels of the outline to red then save with imwrite
And ctrl-e for the end of the line. Ctrl-k deletes everything to the right of the cursor. 
Not really, PIV tracks patterns of many particles in a grid and returns their average displacement. So you would have at least 15 particles around a pixel in size per 32x32 region. A Kalman filter would be more useful here. 
Ha, I use both daily. Learn apply functions, then dplyr, then get back to me. Matlab has r beat for image processing, but I'll take r for any other use.
Boom goes the dynamite. Thanks guys.
This is the nature of floating point numbers. Many numbers cannot be represented exactly on a computer, and the floating point representation is merely an approximation. This is not a problem with the trigonometric functions. Indeed, you will notice floating point roundoff error pop up in many different calculations. Read more here: https://en.wikipedia.org/wiki/Floating_point
I'm new to this stuff, is Python more organized in terms of syntax?
R is a statistics package with some scripting strapped onto it, which mainly runs on disparate 3rd-party packages. Matlab is a linear algebra package with some scripting strapped onto it, which mainly runs on closed-source implementations of algorithms. Python is a general purpose programming language with a great deal of flexibility but a strong design ethos and set of language specifications. It also happens to have libraries which pretty much completely replicate the functionality of matlab (although not simulink) and most of R's basic functionality. As well as a lot more libraries on top! For example, matlab is godawful for reading and writing files, where it's as simple as it could be in python. I would definitely say it's more consistent in terms of syntax.
Lines like `h(k)*m(k-1) + 2*(h(k) + h(k-1))*m(k) + h(k-1)*m(k+1) = 3* (bd(k-1)*h(k) + bd(k)*h(k-1));` are nonsense in a program (unless you are using very special functionality), because the program deals with numbers and operators, not equations. You can't make assignments to equations like this. You are solving a system of equations Ax=b, so you need to build the matrix A and the vector b (the elements can be assigned in a for loop similar to the one you have). Then you solve for x in matlab with `x=A\b`;
I think you might be doing something wrong. Can I see you code? As a quick test, I ran the following code: theta = 0:1:360; tant = tand(theta); atant = atand(theta); d_theta = atant - theta; d_mod = mod(d_theta,180); Then when I look at d_mod, the biggest value I can find is 1E-14. This is way smaller than a third of a degree. This seems dumb, but you're not using degrees sometimes and radians others, are you? 
HDF5 is an extremely well-supported, well-document, machine-independent, open standard with strong backwards-compatibility guarantees. So future-proofing isn't an issue.
Python is definitely more organized in terms of syntax than MATLAB. Mathworks added a lot of stuff over the years, and a lot of it doesn't work together all that well (looping over multidimensional matrices, or `ndims` for that matter). Further, in MATLAB there are some very basic things that are unnecessarily hard (telling the difference between function calls and matrix indexing), nearly impossible (treating one trial with many results differently from many trials each with one result), or completely impossible (named function arguments). For Python, on the other hand, a lot of stuff has been added over the years too, but a huge amount of care has been taken to make sure everything works together well and behaves consistently. There are much fewer gotchas, quirks, arbitrary limitations, and random unexpected behavior in the syntax, and generally when there is there is a very good reason it has to be that way. Generally speaking, once you have a decent handle on how Python works, you can generally predict how a certain operation is going to behave even in functions, data types, or syntax you aren't already familiar with. The same cannot be said of MATLAB. That is not to say Python is perfect or without it quirks or warts. It isn't. But it has much, much fewer than MATLAB does.
You can do `for j = i:min(i+Xwindow, length(Qlimit))`. So, in othe words, `i+Xwindow`, unless `i+Xwindow` is greater than the number of elements in which case use the number of elements.
Thanks for replying. I was actually hoping for a modern licence scheme, along the lines of assigning a licence to, for example, john@email.com and then logging into MATLAB with this account to validate the authenticity thereof. This should also easily allow access from multiple computers.
&gt; I'm new to this stuff, is Python more organized in terms of syntax? Python is a programmer's dream. It's a proper programming language developed with programmers in mind. MATLAB was developed as a tool to simplify matrix calculations (i.e., shoving BLAS details under the hood), and left everything else out as an afterthought. Take, for example, MATLAB's primitive data structures. Or all data structures. It's a mess.
&gt; developed with programmers in mind. I disagree with you here. This makes it sound like Python is poorly-suited for non-programmers. But that isn't the case. Python is at least as easy for non-programmers as MATLAB, which is one of the reasons it is now the [most popular teaching language](http://cacm.acm.org/blogs/blog-cacm/176450-python-is-now-the-most-popular-introductory-teaching-language-at-top-us-universities/fulltext) in universities. In fact you have to deal with even less of the low-level computer science stuff than in MATLAB. For example MATLAB makes you deal with floats vs. doubles, or signed vs. unsigned integers of different sizes. Python doesn't, there are just floats and integers (at least with Python 3). 
If Python was designed for programmers they wouldn't force indentation. That's for beginners. Every real programmer already does and doesn't need to be forced to do it. 
I tried switching from Matlab to python+np recently. That combo still isn't great for prototyping e.g. stepping through with a visual debugger and seeing exactly why/where an iterative method starts to explode/crash by visualising the (perhaps large) internal data structures - matplotlib is still pretty weak for this. Once you've got a stable method though, sure, numpy away. Syntax and namespaces are pretty sweet though.
You're going to kick yourself. You dropped a parenthesis. ingpin_test_rad = atan(Balljoint_bottom_y-Balljoint_top_y)/(Balljoint_top_z-Balljoint_bottom_z); That line you are only taking atan of the y's, because you don't have enough parenthesis. If you make it: ingpin_test_rad = atan()Balljoint_bottom_y-Balljoint_top_y)/(Balljoint_top_z-Balljoint_bottom_z)); Then the output is as you expect. 
I don't know how it was on 2007, but I have a professional and personal license of MATLAB, and now you are able to simply deactivate a license of MATLAB on their website, and then install on your new computer. 
You're right on the money, I think. Significantly reducing the step size made regions of stability and instability appear as expected. I had reduced it to 0.001 prior to posting, but didn't see much of a change. Reducing it to 0.000001 made the regions of stability appear. What's really interesting is that the step size has to go to 1e-9 (minutes of computation time) or so for the separatrix to converge to its expected shape with streamline. If I generate a [theta, p] using my functions for p_0, the separatrix appears just fine. I always hear about "inaccuracies in the solvers" but it's one of those things where I've always thought it would never happen to me. Well, here it is. I guess streamline is a situation where the inaccuracy gets compounded thousands of times. 
You can set the axis limits set(gca,'xlim',[1,40])
Pyplot is designed to be very similar to matlab but I also find it quite difficult to work with. At some point I'll take the plunge and learn something like plotly or ggplot. I agree that parfor is great, though - really cuts down on the boilerplate for parallelising code, although if it goes wrong it doesn't really tell you why or give you any power to make it work. 
[uiflowcontainer](http://undocumentedmatlab.com/blog/matlab-layout-managers-uicontainer-and-relatives) is great for making resizable GUI layouts. It allows you to create a layout that will automatically resize the elements in it to fill the available space. You can also set limits so certain elements are never too big or too small. There are other resizable layouts as well, but this is the only one I was able to get working properly.
While I agree with you for the most part, one annoying thing about the indentations are when for whatever reason, things get messed up with tabs vs 4 spaces. I prefer tabs but I have to detab all documentation (same in Matlab). But I find myself using the "Show Invisible" more often in Python than anything else. And, for some loops (though not all), I like it have a `#/end foo` type comment just for my own flow. Of course in Matlab, I would do `end %foo` so it's not too different
Most python projects follow the `pep8` style guide, which calls for 4 spaces per indentation level. Most IDEs and even many text editors will tell you if you aren't doing this. The use of tabs is discouraged because they vary so much in size between text editors. So in principle it can be a problem, but frankly I have only ran into issues with it a couple times myself. Much, much less so than MATLAB indentation.
I personally don't use pyplot except to create the initial figure, I just go straight for matplotlib's object-oriented interface.
Do your own homework
`Pool` will automatically set the size to the number of CPUs, so you don't need to set that manually. You only need to set it if you want some value other than the CPU count. You also don't need to set `chunksize` manually, it will do that for you too (although you can get some additional performance in some cases if you really want). So it is really just: with Pool() as pool: results = pool.map(apply_process, items) And adding additional constants doesn't take any more code since they are pulled from the local namespace when the pool is created. Yes, `Pool` gives you much more control. But it is set up to have sane defaults, so you in most cases you don't need that control.
Ah, that's good to know. I think I was confused about chunksize because the default chunksize in imap and imap_unsorted is 1, which is pretty unhelpful if you're doing lots of small tasks. 
Hmm...actually I´m not sure about that. I´ll try that way. How is the matrix suposed to be solved? Is there an algortithm or something that does that?
The good thing is you don't have to. MATLAB and python code can interact pretty easily these days.
&gt; If Python was designed for programmers they wouldn't force indentation. That's for beginners. Every project standardizes on a particular style. The people behind Python just happened to force a specific style on everyone. Some people disagree with that decision, others laud it as a feature. Nevertheless, we're not talking about FORTRAN-level nonsense here. &gt; Every real programmer already does and doesn't need to be forced to do it. So, why bother with an irrelevant detail? A programming language is way more than a specific indent style. Furthermore, MATLAB also forces very questionable design decisions onto their users. Take, for example, the "functions need to be defined on each individual file" nonsense. Absolutely bonkers.
Yes, if you want to start getting into iterators it can be slightly more complicated. But MATLAB doesn't have iterators so I didn't think that was a good comparison, hence the reason I used `map` in the example.
&gt; I think the poster means it's a language for developers, rather than a language for compilers/ interpreters. That's precisely what I meant.
I would recommend becoming familiar with the repmat function. This function allows you to easily replicate arrays to synthesize much more complicated arrays. For example, I often store several measurements in a matrix. If I store these measurements in a matrix with 1 row per measurement. I can use the following code to develop the mean, and then use this to plot the difference. Let say my measurement matrix is Y, and I have an array x which defines my x-axis data. plot(x,Y) % plot all of the measurements plot(x,Y - repmat(mean(Y),size(Y,1),1)); % plot of differences around the mean 
My personal pick: printf('processing'); for i = 1:n printf('.'); end printf('done.\n');
have you played around with the **colorThresholder** app in the Image Processing Toolbox? This is very useful when trying to segment certain colors out of an image.
Yes, I have. I've used it to threshold the colors later on in my code. See my previous answer.
I was digging through some Mathworks functions the other day while I was in need of a utility to convert a struct to JSON and I found: jsonString = matlab.internal.webservices.toJSON(s); The other way is also available: s = matlab.internal.webservices.fromJSON(jsonString);
Just as a "more than one way to skin a cat" thing- this can also be done with bsxfun. You can replace your second line with: plot(x, bsxfun(@minus, Y, mean(Y))); Obviously bsxfun doesn't replace all uses of repmat, and actually I frequently forget to use repmat. Do you have any other cool uses for it? I see it in others' code often, but find myself rarely using it. 
so if I'm reading you right, you have two arrays, we'll call them freq (the recorded frequencies) and dtmf (the predetermined tones). So, dtmf should be a vector, length 10 I'm guessing (one for each number, or maybe 12 since there is pound and star)? Doesn't really matter. And then freq is maybe an nx2 array- where there are n measurements, and the first column is time and the second column is the recorded frequency. Then, to get all the times when the third value of dtmf is measured, you'd use logical indexing like follows: freq_3 = freq(frew(:,2) == dtmf(3), 1) In words "frequency 3 is equal to the frequency array, where all of the rows of column 2 are equal to the third value in the vector dtmf, and then I take only the first column of freq, so I have the times that value was pressed." 
Almost assuredly there is, but I'm going to need more information by what you mean and how you know where you want to split it. 
This is very nearly what I'm looking for. The other thing I would ask is if there were a way for it to do this, but for each element of the dtmf array, so that there isn't a line of code for every element of the dtmf array? I can deal with it if I can't do that, but it would make coding this a lot cleaner and simpler. 
That's perfect. Thank you so much; you've made my life much easier. I will try this when I get home and report the results. 
Have you tried a heaviside(t-a) for this? I've used it for similar things. It will definitely turn your forces on at the specified times. You may have to re-apply the heavisde to turn it off though. Something like: F1 = heaviside(t-a)*(yourfunction)*(1 - heaviside(t-b)) should get you pretty close . . ( where a &amp; b are your start &amp; end times )
Remember that ode45 solves a system of ODE's of the form : X'(t) = f(X(t), t). So you can add in time-dependent functions It sounds like you want a square-wave forcing signal for each F1 and F2, but 1 second out of phase. So what you can do is define inside your function f: F1 = (square(t)+1)/2) * (magnitude_of_F1) F2 = (square(t-1)+1)/2) * (magnitude_of_F2); This was ode45 will compute F1 and F2 based on the current time t for each iteration of the integration. 
I am summing over "j" and each term in the sum has the following (4/(j*pi))*sinh(pi*j*x)*sin(pi*j*y)/sinh(pi*j) It also depends on the x term. Surprisingly, as x gets close to one, is where the NaN starts showing up 
I'm struggling to follow what you're doing, but I'm confused by a couple of things. 1. Your functions s1 and s2 don't appear to do any operations which would make a vector. sum and max take in vectors, but they output scalars. So, your outputs are scalar 2. You can't name your output the same name as your function. So, saying function s1 = s1(x) should cause you problems. 
If you need to work a lot with larger data, it might be worth using hdf storage and related functions directly. HDF is the file format that newer versions of Matlab use for mat files and is very popular in scientific computing. Stands for hierarchical data format. Basically a giant struct that sits in a file and you can operate on the data without ever loading all of it. The HDF libraries manage the task of indexing the data and doing only the i/o necessary to keep a low ram load. HDF is really awesome for some applications with large amounts of data (many MB to many GB). I've mostly interacted with it outside Matlab (python), so I don't have matlab-specific advice. It's a great technology and one of those "solved problems" that is good to know about.
Yeah I'm still flabbergasted that Matlab's GUIDE doesn't have simple layout managers. Every other GUI library I've worked with except the UserForms in Excel VBA (a ~15 year old interface) use layout managers to stack things horizontally, vertically, in a grid, etc, and to automatically expand certain GUI elements the way you'd expect. I think the one I use in Matlab is GUI Layout Toolbox. There are 2 different versions depending on if your Matlab is on HG2 graphics (2014b+ I think).
repmat is indeed fantastic and often essential for certain tasks. In the example you gave, plot(x, y-mean(y)) would be sufficient because array - scalar = array ... the subtraction is applied to each element in the array (following the rules of linear algebra). Edit: I feel like I missed something that your code does maybe... hopefully not... 
Allright, I put k in parentheses after y and z(which should give me vectors as output) and I changed the output arguments of s1 and s2 to different values. Now it does give me a vector, but names it 'ans' and does this again after just calculating s2 a hundres times separately.
I don't think so. Because if I only take say 200 terms I don't get any NaNs. It's only when I start taking a lot of terms that I start getting them 
These are parts of the signal processing toolbox. Are you sure you have that installed? 
**How to use a defined colormap for multiple 1D plot:** % Example with the jet colormap and 5 curves color_choice=jet(5); figure, hold on; for ii=1:5 plot(X(ii,:),Y(ii,:),'color',color_choice(ii,:)) end **Retrieve X,Y,C data from a .fig:** % Example with a 2D plot on the figure, assuming that the Figure is the current figure h=get(gca,'children') X=get(h,'XDATA'); Y=get(h,'YDATA'); C=get(h,'CDATA'); 
Usually you have to pay for toolboxes.
At the command line, run this command: &gt;&gt; ver That will tell you which toolboxes you have. It appears that there is a dct in the DSP Toolbox and also in the Computer Vision System Toolbox. If you're on campus, you should ask about getting access to the toolboxes. If you're on a home or student version, you'll have to buy it yourself. OR You can make this a learning experience and implement it yourself! &gt;&gt; Implementation of the dct is left as an exercise for the reader.
You didn't ask a question. I'm assuming you want some help. Or perhaps you are intending to show us how you used matlab to solve this problem. Both would be fine, but all this is is a statement of a problem. If you have a question, please ask us a question, as well as show us the code you've started working on. 
Nobody? :/
sounds like you don't have the signal processing toolbox, which is a separate product from matlab.
It costs money. If you have access to Matlab at a university, use their computers, they likely have the toolbox. 
I could have been more clear, sorry! This data is arranged akin to this crudely drawn paint diagram: http://imgur.com/YwdQ6gG where the green mess is where approximately the split occurs. The columns leading up the split are all somewhat similar but somewhat noisey. I'll try and butcher your method to fit for this, thanks for your help! 
In addition to what agentq512has mentioned, there's always ode45 for certain simulation applications. Also you could do newtons method or Runge kutta yourself. 
You are correct that t, a, and b must be columns, not row vectors. Change your definition of t to: t = linspace(0, 10*pi, 200)'; % note the transpose and this works fine.
Yeah. Try transposing them so they're column vectors instead of row vectors.
There is a discrete cosine (dct) function available in Octave's signal package, which *is* free. You may be able to get the dct source code from Octave and then run it in Matlab. Or just run your code in Octave.
Is there anyway to use patch with -nojvm?
http://www.mathworks.com/matlabcentral/fileexchange/37560-xlwrite---export-data-to-excel-from-matlab-on-mac-win
From the documentation it seems there is not.
I found a solution: Run as -nosplash -nodesktop and request more memory (&gt;10GB).
`bsxfun` is almost universally faster. I cannot seem to find it now, but I recall reading something about speeding up matlab and one of the items was to not use `repmat`. I will say though that `repmat` is often more intuitive. And I think I always need to use guess and check to get my `bsxfun` commands working. But when I do get it, it's fast (also, one nice thing about Python+NumPy is that you often don't need it. Not sure what is happening under the hood but it usually correctly understands these types of operations)
What version are you using? I cannot get it with `R2014a` though I just tried in `R2015b` and it worked. It did not like all data types (anonymous functions being one I tested) but I am glad to see this is here. I recently posted [this thread](https://www.reddit.com/r/matlab/comments/3qaue7/my_observations_on_data_storage_matlab_vs_json_w/) where I compared it with JSONlab. I wonder how this speed will compare
I'm on 2015b. Never looked for it before, so I guess it's new as of 2015a or b. I could find no documentation anywhere (neither Mathworks nor via Google). It's probably not for public consumption. However, I'm confident that if they ever got rid of it, it would just be because they moved it to a more public location. Anything different would just be bizarre.
Please share code.
I'm solving an equation that involves the arctangent of the square-root of a variable such that there isn't an explicit solution. I think I figured it out, though--my professor told me to use fzero, setting my equation = 0. Thanks for your help!
Sorry, didn't mean to come across like that. What I could see this being is using several sine functions at different frequencies. So, I would try to go about it like this: x = linspace(0,1000,1000) % don't think this has to be 1000 points bit whatever f1 = (frequency for G) f2 = (frequency for A) f3 = (frequency for F) % and so on for all the notes used in the song % Intro part sound(sin(f1*x*2*pi)) % G sound(sin(f3*x*2*pi)) % F sound(sin(frequency_for_Eb*x*2*pi)) sound(sin(frequency_for_D*x*2*pi)) % and so on. Basically that's how I imagine it. However, not all notes are the same length so you'll need different input length vectors or something like that. I haven't done Matlab in a little bit since I no longer have access to the license but hopefully someone else here can demo it a bit. 
Why are your title bars purple?
I feel you 
You can't write Excel files on any other operating system than Windows, because it uses COM (a windows subsystem) to have the Excel program write the file for it, rather than writing the file itself.
en español !!!! http://www.compelect.com.co/mathworks/desafio-simulink2015/
Lmao, awesome. A hit with the CE undergrads.
Let's say you want to add random normal noise to the time, with sigma S. Then, you can use the 'randn' function. Something like: t_noise = randn(t,S);
Thanks, that certainly clears up some things! Since I don't need to worry about dot operators now, I realized another error in how I was trying to get matlab to compute. I was using [x, y] when I needed [x; y]. Dumb mistakes. Thank you very much!
What is the sigma S here? Because I'm being told S is undefined?
Thanks! This is exactly what I was trying to do.
Good to know! I just did the encrypting and decrypting and it works great, except for one thing. For some reason it doesn't "forget" what the last string was. For example, if I make my string "Today is Thursday" it will encrypt, tell me the encrypted string, then decrypt and tell me that one. Then I try it again and say "Hello" it tells me the correct encrypted code, but then when it decrypts it it says "Helloy is Thursday." Do you know what's causing this?
Now make the connections elastic
in my example, I meant to convey a matrix(2-d) - array (1-d) type of operation. bsxfun is nice in that it automagically compensates for this. 
Ah ok, understood
Neat! Code?
Just take partial derivatives of g(x,y).... You can do this semi-analytically by using the chain rule
Not in any way I know of, but at the same time I've never had difficulty dealing with this, despite designing guis that auto-size themselves based on content, create and arrange widgets dynamically, etc. It's pretty easy to manage. 
Well a little explanation what the code currently does wrong or what error messages you get would be nice. For a start, what do you think r is composed of after the first nested loops? Check for your self, I'm pretty sure it's not what you think it is. Edit: same issue with the loop below that. Although I don't get what that is for, you are never using B again. Strangely enough you are using the l from that loop later on. What do you think the value of l is? 
Is it possible to make a program that would tell you how much to accelerate the base of an upside-down pendulum to keep it balanced? I guess it gets ***WAY*** harder as you add more joints to the pendulum.
ok, so i think r needs to be a vector, which when it is output it isnt. also forget about that B calculation, im just using that later on for something else. And the error I get is saying that Z has to be a matrix, not a scalar or a vector. 
Yes, this is basically control engineering. [Here's a video showing control of a triple inverted pendulum on a cart.](https://www.youtube.com/watch?v=cyN-CRNrb3E)
That may be the key. I haven't worked much with containers in GUIDE (I didn't even know that Matlab supported them) as for now I'm doing statically sized windows. This I find to be difficult to set up via WYSIWYG because I just sit there tweaking things all day.
It is indeed impressive, but if it works for a few seconds, it also works indefinitely (if there are no large disturbances).
You can't just save a raster image to a vector format. [Here is the list of possible output formats for imwrite](http://www.mathworks.com/help/releases/R2015b/matlab/ref/imwrite.html#inputarg_fmt). As far as I know, those are all raster formats. [Here](http://www.mathworks.com/help/matlab/creating_plots/saving-your-work.html) is a doc page discussing saving to vector formats such as *eps* and *pdf*. You'll need to use **saveas** or **print**.
I know, but if OP asks a lazy unhelpful question, OP gets a lazy unhelpful answer. 
I'm not sure what containers are. I can write many languages other than Matlab, but I've only ever done gui work in Matlab. 
I can not argue with that!
&gt; "X must be same length as Y". How do I get around this This error is simply saying you have to have as many x-coordinates as y-coordinates. There is no way to 'get around this' as how would it know what to plot otherwise?
Ah that explanation helped me solve it, I have the stairs funcrion working now. With regards to the omitting of results, I was going about it the wrong way and don't need to suppress any values. Thanks for your help.
Seconded! Code please.
Let's see some of those deleted variations you spoke of. Are you familiar with how to index into a matrix?
After the else line I put for x=1:N for y=1:N end end I thought that would make it work but I'm pretty sure I need to put those x and y's in there with a function but I'm not sure how 
N = 5; mat = ones(N,N); for k = 1:N; mat(:,k) = k; end Probably a cleaner way to do it, haha. EDIT: formatting.
Watch some YouTube videos on Euler, Runge-Kutta, as well as the Taylor series. When you understand the math behind these methods you should be able to easily write code to solve differential equations. 
Thanks! I was able to finish my work with this!
I can't think of an elegant solution to this homework problem, so you're probably going to have to do this by brute force. From what you've shown in the OP and comments, you're pretty far away from reaching a solution, so I would suggest reading the materials you've been provided. Even the code you posted is completely wrong. First, your if statement doesn't do what you think it does. Next, you set the initial size of Z to be incorrect, based on the assignment. Finally, if your current thought is to set up a nested for loop, you're very far from a correct solution, so keep thinking about it. Start with something like this: Z= zeros(n,n*2-1); Z(:,n)=1;
Since you seem to have also the programming part to tackle, I'll give a hint about the logic. 1. H = empty matrix 2. Loop from x= -N-1:N-1 A. Make an array with x zeros and N-x ones. B. Multiply the array with x+1 C. Add this array as a row to H 3. Transpose H 
Use [findobj](http://www.mathworks.com/help/matlab/ref/findobj.html) and the uitable's tag (one of the accessible properties in GUIDE) to get the graphics handle, then use get to retrieve the uitable's data property. All of the data should be returned as a cell array; see [uitable](http://www.mathworks.com/help/matlab/ref/uitable.html) for details. 
Did you read what I said? What you're asking is not possible in general. It seems like you really don't understand this mathematically. 
I suppose I was looking at it computationally. I just created a work around and created an array and just linked the x values to the y values I wanted from the fit. Sorry for wasting your time.
The issue which I see is that the cumsum method involves repeated additions and so, while it may not be computationally intensive, it doesn't hold up against simple memory assignments like repmat. To test this out, I put together a quick tic/toc analysis of the three methods on my machine and here are the [results](http://imgur.com/PpvRYLo). For one reason or another the repmat method falls down for very small n (1:10 or so) and takes up to 1 ms for n=1 and then just slightly longer than the other two methods for 2:9 but overall memory assignment is faster than loops or explicit mathematical operations.
N = 5; X = meshgrid(1:N); Edit: I had to, the cringe from the for/loop answer...
 &gt;&gt; s = '3/4 4/6 2/4' &gt;&gt; x = sscanf(s, '%d/%d') &gt;&gt; y = x(1:2:end)./x(2:2:end) y = 0.7500 0.6667 0.5000 Mod the above lines to use fscanf and you're done. 
That is an extremely large array. Perhaps try importing it in chunks? and then stitch them back together once in matlab?
Yeah I might try that, would prefer a more direct method perhaps. Tomorrow I will try using xlsread on a better computer with (alot) more ram, if that doesnt work I'll try out your suggestion :) thanks
Sounds like an optimization problem. Throw values of x at it until you're close enough to your y values.
This isn't COBOL
Was there also a layout change? Looks good to me. For those wondering how this works, I just submitted a link/text post like normal. After submitting, I saw a message *Please Click This To Flair Your Post* [like so](http://i.imgur.com/a4JHAIu.png), which opens a dialogue box; here I just clicked the [blue-link title](http://i.imgur.com/VQGdukT.png) of my post next to appropriate "flair", and clicked *save*.
Under the hood, those will all use more or less the same code, if the input file is an xls. 
What do you mean by "no luck"? Are the results in correct? Does it give you an error? Does it just fail? Does it tell you it ran out of memory? Does it just seem to take forever and you decided it was frozen? If it's a memory issue, have you tried reading in a limited number of sheets/columns/rows at a time? Can you export from Excel as a CSV file, and then operate on that? http://www.mathworks.com/help/matlab/ref/csvread.html
When i try to import using the "Import Data" button in "home" Matlab returns the message &gt; Import operation failed. The most likely reason is that there are unimportable cells in the selection. Try adding a rule in the toolstrip to convert unimportable cells into numbers But I already have such a rule in the toolstrip. I just tried reading as a csv file, but I got the message &gt;Error using dlmread (line 139) &gt; Mismatch between file and format string. &gt; Trouble reading number from file (row 1u, field 1u) ==&gt; Date;AAI US Equity;AAMC US Equity;AAN US Equity;AAON US Equity;AAPL &gt; US Equity;AAP US Equity;AATI US Equity;AAT US Equity;AAV US Equity;AAWW US Equity;AA US Equity;ABAX US Equity;ABBV US &gt; Equity;ABCB US &gt; &gt; Error in csvread (line 48) &gt; m=dlmread(filename, ',', r, c); 
A bit late: Depending on your needs, you may also want to look at Revolution R. It's fully compatible with RStudio.
What about something like whack a mole? Push button comes up and stays for a certain period of time, if the user clicks it on time they get a point. After the time is up or they click on it, it moves to a random new location 
I used to work with arrays significantly larger than this. Basically, you want to use dlmread or csvread and bring in chunks. However, READING TAKES NO TIME. It's the saving that kills you. I'd bring in small chunks, evaluate if it's worth saving, then bring in everything. This works well for a logger where you may start it manually in advance of an event happening if you don't have a trigger.
Do you need the cumulative sum? try... sum_x = cumsum(x);
You need to use `n=length(x)` to get number of elements in x, not `max(x)` (which will return the largest value in the vector).
Wouldn't this give me the length of the vector rather than the value of the of the nth number in said vector? Also I switched out the max(x) for x(:,end) to address what you pointed out. Thanks!
&gt; Wouldn't this give me the length of the vector Yes, which is exactly what *n* stands for in the formula for harmonic mean.
x = ones(1,10) Creates a 1x10 vectors of ones. Using max() will give you the maximum value in that vector, which is a one. This won't work for random vectors which, if you're doing what I think you're doing, they will check for. There are two functions you can use, length which was mentioned earlier and another that will give you a scalar of how many elements are in the vector. Try to find it, it comes in handy. Using max() is the reason why your output isn't right. 
http://lmgtfy.com/?q=matlab+polar+plot
 doc polar
Based on the [formula for a harmonic mean](https://en.wikipedia.org/wiki/Harmonic_mean)... vec = randi(10, [1 5]) % generate vector of random ints N = numel(vec) recip_vec = 1 ./ vec sum_recip_vec = sum(recip_vec) harmonic_mean = N / sum_recip_vec
EE 221 Computing for Engineers Homework #14 Write a Matlab function that will find the zero crossing of the following functions: 1. 𝑓(𝑥) = cos(𝑥), over [0,2π] 2. 𝑔(𝑥) = 𝑥2 −5𝑥 + 4 over [0 2.5] A: Use the bisection method B: Use Newton Method (Be careful when applying initial guess value that would lead to 𝑓̀(𝑥) = 0 ) Include the code and the testing results in a single pdf file and upload it as a single file. Important Note on Newton Method: Remember that the new value estimated value of Newton’s method is given is 𝑥𝑛𝑒𝑤 = 𝑥𝑜𝑙𝑑 − (( 𝑓(𝑥𝑜𝑙𝑑) / 𝑓̀(𝑥𝑜𝑙𝑑) )) So, if 𝑓̀(𝑥) = 0 this will lead to 1/0= ∞. Not good. If that happened, choose another value. 
Do you believe that you only need to post your homework for someone to just pop out and do it for you?
If you can help, then just help.
MATLAB uses round brackets for indexing, while you use square brackets for indexing y and f. Also multiplication must be written explicitly with * operator. It's also not clear to me where ~~y and~~ f is coming from, since they're neither defined, passed as inputs or declared globals.
Ya, I *can* help, but I'm *not* going to help when there's been **no** effort made to do **your** homework (and I suspect most all other r/matlab users feel the same). What have you tried? Any code? Do you get any errors? Do you even understand the methods you're asked to use? From the sidebar: **we don't do your homework!**
How did I know this immediately? Where do people develop this terrible habit? 
function [x,k] = newton_method1(x0) x= x0; k = 0; dx = 1; fx= 1; while (abs(fx) &gt; 5*eps) || (abs(dx)&gt;5*eps) fx = cos(x); df = -sin(x); x= x - fx/df; dx = - fx/df; k=k+1; if k&gt; 10000 return; end end end
Lol, clever. 10 points for Gryffindor. 
Please place four spaces before each line in your code in order to properly format in this subreddit.
I don't have the optimization toolbox, so I can't run this code myself but... if you type help fminbnd you will see the very first thing it says: fminbnd Single-variable bounded nonlinear function minimization. Thus, it doesn't work for 2 variables or more. So you have to make it only have 1 variable. For instance, assign a to be a constant (if a is a constant, the solutions for which x is a max or a min doesn't change, you can then give a more general solution once you have the x's)
Why are you using the symbolic toolkit? 
Hi guys, I recently whipped up some matlab code for my brother who plays those 1-week fantasy football leagues like FanDuel. He does a bit of player stats analysis before submitting his teams, he told me, and was downloading player costs from [RotoGuru](http://rotoguru1.com/cgi-bin/fyday.pl?week=8&amp;game=fd) and player projections from [FantasyPros](http://www.fantasypros.com/nfl/projections/qb.php), then organizing everything by hand in excel. Crazy. So I thought I'd save him some time by writing a matlab script to scrape both those websites and organize the data in matlab. Then I took it a step further and had the script pump out the highest projected teams that were below the salary cap using brute-force iteration (perhaps not ideal, but it does the job). You can [see it in action here](http://gfycat.com/HardtofindFlusteredAurochs). I thought I'd share the code on github in case any of you guys were interested in similar web-scrape projects. Cheers!
I.. dont know.. my calculus teacher wants me to back up my answers with matlab, I know how to do this on paper, but not on matlab, the answer should be minimum = 2a^2 for x=+-a
&gt;EDIT: I do not know what the etiquette is here, but I would like to request for others not solve this for them. This is for a midterm that was assigned to my class, which was assigned on Thursday and is due in less than 3 hours. I would hope others don't either. Our policy (as in the sidebar) is: **we don't do your homework!** (or project, or mid-term, or exam). There has been an increase in screencaps/verbatim assignments in the last 8 months or so it seems. It seems the userbase who's here more than just for their one assignment abides by this, which is great for r/matlab. Hopefully this won't just be spoon-fed to OP, and good on you for a) the tact you've taken and b) (seemingly) getting your work done, on your own, on time.
How is its performance? Beating the odds with a neural network or something like this would be a nice way to make some beer money on the side.
Glad to have learned something. :')
Of course, fucking rookie mistake. Thanks man!
You could find the orthogonal projection of the point onto your defined line. That is, find the projection of a line that passes through your defined line and point, find its projection onto your defined line, and then find missing line that makes a right angle triangle. 
Does this do what you want? &gt;A=[-10,10,0]; &gt;B=[0,0,1]; &gt;%calculation of the projection of A into B &gt;C=B(sum(A.*B)/(norm(B)^2 )); &gt;%versors of each vector &gt;An=A/norm(A); &gt;Bn=B/norm(B); &gt;Cn=C/norm(C); &gt;%graphic representation &gt;clf &gt;line([0 A(1)],[0 A(2)],[0 A(3)],'LineWidth',10,'Color',[0 0 1]) &gt;line([0 B(1)],[0 B(2)],[0 B(3)],'LineWidth',8,'Color',[0 1 0]) &gt;line([0 C(1)],[0 C(2)],[0 C(3)],'LineWidth',5,'Color',[1 0 0]) &gt;legend('A','B','proj A into B') &gt;xlabel('X') &gt;ylabel('Y') &gt;zlabel('Z') &gt;view(80,10) [Source](http://au.mathworks.com/matlabcentral/answers/2216-projecting-a-vector-to-another-vector)
If you just want to fit n+1 points with an n order polynomial, you can just use polyfit- but that isn't actually a spline anymore. Splines are piece-wise lower order fits along multiple points. But if all of your data should be described by a single polynomial, than polyfit will work just peachy. But if you want higher order splines you need the [spapi function](http://www.mathworks.com/help/curvefit/spapi.html?refresh=true) which is only available in the curve fitting toolbox
Did that fall to you after I left? I mean, I got it down to 16 seconds... why go further?
Do you have 2-step authentication on the gmail account you're using? I think I remember that being an issue and had to disable it on the account I am using for this. Edit: BTW, I really appreciate you making this weekly post a thing. I do a lot of work in MATLAB and am tired of seeing the same homework questions over and over. Thanks!
I don't. But I'm going to try at home, since perhaps it is just my work's firewall screwing me up. And I'm glad you like it. I, too, really like MATLAB and learning more about it. But this sub was far from being a place where that happened. I know this is a small step, but hopefully it gets better. 
For beginners, here are some very useful shortcuts: Ctrl+R / Ctrl+T ---&gt; Comment / Uncomment Ctrl+I ---&gt; Auto-indent Ctrl+C in the command window ---&gt; Force MATLAB to abort F5 ---&gt; Run code
What do you expect to get? What are you actually getting? What's the point of the while loop in there?
Ahh! Perfect, thank you!
We're going to need more information. How is the 2D object getting described? Do you want a numeric or symbolic answer? Do you need help with the math, or how to program it? Give us more information (including where you're stuck) and we're normally good at helping. But there just isn't much here. 
I noticed an error, but I'm not sure it fixes your problem: fminsearch passes a single array of design variables to the objective function as the argument, so f() should only accept a single argument. The very beginning of f() can then split the array into separate variables, but the design variables must be passed in as a single array. Likewise, it outputs the design variables as an array, and the second output is the objective function value at the solution, not the second design variable.
nice one!
The only thing I noticed was that the SMS gateways are not universal. I had to change the AT&amp;T one because that's not the one my phone uses. Other than that it worked for me.
I don't see where you're passing the function fzero
fzero is a Matlab built-in function. Did you give the same name to a script? 
fzero is a Matlab built-in function. 
Great post. I am also a Matlab user who wants to transition to python. Posts like this are certainly inspiring. How have you found the debug environment? I find the debug workflow in Matlab and the editor to be superb. Little things like hover to inspect variables and ability to easily move through the stack are invaluable. Anything similar in Spyder (or any other IDE)?
You're trying to evaluate f, and pass it's output as the first argument of fminsearch. It's trying to execute f without any inputs. 
WingIDE is pretty ballin' in this respect, however you do have you pay for it.
&gt; Numpy actually has a matrix data type where the mathematical operations do matrix operations, but it is rarely used in practice. Out of curiosity, why is this?
It is generally not needed. Elementwise operations combined with broadcasting serve most use-cases well enough, and the methods and functions are there when matrix operations are really needed. The only matrix operation that people were able to show was used routinely was the matrix multiplication, which is why it got its own operator.
Package versions aren't as much of an issue today. It is easy enough to use an integrated Python distribution like Anaconda which handles that for you. And indentation should be correct no matter what language you use.
Because faster is better! I've rewritten a lot of our stuff for efficiency/clarity and to tackle more generalized tasks rather than needing new tweaks every time we want to do something different. Keeps me busy in between other tasks.
I am about 70% of the way of my transition from Matlab to Python (not to mention using Python for *so much more* than I ever considered Matlab). One of the beauties of Python that, addmittedly, took me a while to appreciate is how much the scoping tells you about what’s going on. For example, instead of `ones()` you do `np.ones()` (assuming `import numpy as np`). Or instead of `rand()` you do `np.random.uniform()` At first it seems like a big PITA and it is. But then as you grow to appreciate it, it makes organization so much easier! And, it makes sharing projects a bit easier since you can more easily identify what packages are also to be shared. With that said, the idea of `from pylab import *` saddens me. In the authors defense, (s)he does say a better practice is to *not* do this.
I've been tempted to try Python, but there is something MATLAB has that I haven't seen anywhere else- a persistent workspace. This allows me to import data and work on it with multiple scripts, inspecting the output every time- without having to go through an intermediate step of saving it off to text files, and then reading it in from text files. Looking at your tutorial, you start off by doing a "clear all" which, to me, is a sign that you're used to working with all simulated data instead of measurement data. I was wondering- is there anything that has a similar equivalent to the MATLAB workspace for python? Or perhaps a way I should be changing my workflow?
Hey. This is a good place to put it because I have an answer for you (or at least possible solutions). There are a few ways to go about this. I'll assume you're using the standard simulink support package for arduino. One of the ways is to simply code your own function block and use the arduino's native function: millis() What blocksets do you have? If you have access to all of the standard ones the solution is cake. If you don't, you'll have to build your own counter with reset. Another way is to use a sample and hold block (or simply a triggered subsystem on rising edge) and create a timer that way. Then you send your signal into a table or a vector switch and count through each value. Edit: I got bored and made a timer for you. Play with the logic and see for yourself why it works http://imgur.com/a/1rD6g These are all blocks which work in Arduino. I've checked them myself. I haven't added the 2 second delay, you'll have to figure that one out.
create a startup.m file to where Matlab opens up (C:\Users\*\Documents\Matlab\) and it will execute any code in there when Matlab starts up. I use it to organize different environments for different projects and remember what location the code lies.
Kinda sounds like you're asking the internet to do your homework for you... maybe ask a more specific question?
Wow, thats pretty easy. I'm going to jump on a computer in a few and check a few random calculations to try this out. Thanks! This can potentially help a bit, since the sub function that does these calculations has to be done potentially a lot of times. EDIT: just tried it on a rand 900,000x3 element matrix, a sparse new_a was solved in 0.1ish seconds whereas a 9000 element dense matrix was solved in 8 seconds. Cheers! This is probably as much as a time saver as the transition from for loops to vectorized solving. 
you can collect the same field from multiple elements into an array with `horzcat(struct_array.field)`
Youre looking to "parse" the text. Google matlab parse
Welcome to my evening's work. https://github.com/clbarnes/workspacesaver
Let's see the actual code and Excel entry. Matlab's log() is the natural logarithm, which according to the interwebs is what Excel's ln() does, which should be the same as Excel's log() _if_ you specify the base (_e_). - http://www.mathworks.com/help/matlab/ref/log.html - https://support.office.com/en-us/article/LN-function-81fe1ed7-dac9-4acd-ba1d-07a142c6118f - https://support.office.com/en-us/article/LOG-function-4e82f196-1ca9-4747-8fb0-6c4a3abb3280
 doc sprintf doc TriSurf
In matlab, log(x) will give you the natural log. If you use log10(x) you get the standard log base 10. I'm not sure about excel, but try these out in Matlab. 
Have you profiled the code to see how much each line is contributing to the run time?
The IPython notebook provides a persistent workspace in terms of typed commands. However, it doesn't store all variable values. You can use `%store` to store specific variables, and you can configure IPython to automatically reload those variables when you start the notebook up next time, but there doesn't seem to be a simple, built-in way to store all variables with one command.
If you really mean that the sinusoids are in phase and differ only in amplitude, then element wise subtraction will determine the offset at every discrete point in your signal. If there is noise in the system, you can just take a mean/median of the offsets.
You could fit the data and compare the fitted offset (or amplitude?). You could subtract the two curves, assuming they're sampled on the same intervals. 
I wouldn't use a polynomial fit on sinusoidal data. Another idea, just take the mean of each data set and subtract one from the other. 
Take the FFT of each data sets and compare their phases with the [angle](http://www.mathworks.com/help/matlab/ref/angle.html) function. You can get the phase at the index that corresponds to the peak amplitude (using `abs`) of the FFT (excluding the DC offset, of course). This will work even if there is a little noise in the system. [Here](http://de.mathworks.com/matlabcentral/answers/114698-finding-out-phase-shift-in-time-domain-from-fft-result) is a more in-depth answer. 
In non-7.3, you can't store variables larger than 2 gb. Just do save('blah.mat', 'blah', '-7.3')
Hi thanks for you reply. My values are real and not complex so im not sure how the angle function would work?
A couple of questions: 1. When you say they are "sinusoidal" do you actually mean both are actually sine waves (and a sine wave of a single frequency/amplitude)? Or does it decay/change frequency/actually just oscillate? 2. Are your points from both sample sets tagged at the same 'x' (I realize it could actually be time, but whatever your x-axis is) and are the sine waves "in phase"? If (1) is true, your best bet is to do a FFT sine fit as /u/TheBlackCat13 recommends. [Here is some MATLAB code](http://pastebin.com/rs3ZdYzJ) that does it for simulated data. You can modify it to work with input data. This will be more robust that other options. If (2) but not (1) you could do some stuff with [fminsearch](http://www.mathworks.com/help/matlab/ref/fminsearch.html?refresh=true) to see how far one has to "slide' in order to minimize the distance between them. I would make your variable you change just a constant (y0 or something) and your minimization parameter the square of the error between them. This is similar to /u/trailofmiles answer, but using fminsearch should be more robust against noise than straight up substitution. 
This is fantastic, thanks :)
Chaotic systems, they're interesting yet can be relatively simple to simulate. Depending on the type of system you're looking at you might branch out into fractals. Obviously you'll have to look into the different types of systems out there.
I found this to be a tractable project for myself. http://webbox.lafayette.edu/~reiterc/mvp/sfn/index.html It's fun, and you can discuss the physics of diffusion limited aggregation, different lattice types, conditions, etc. It's not too complex, either, you can write the base code within a day, and then work out the bugs over a few more days, depending on your proficiency. 
That looks like the right track, but I'm not sure how to make the axes in terms of a string. [This](http://imgur.com/xwA8QOw) is what I'm trying to accomplish. When I ezplot V = F/2 (V being the shear) I get a diagonal plot. I'd really appreciate any help sorting that out. 
Probably not the best idea to use matlab, I agree. Depending on the system that you wish to propagate, [there are several good options](https://en.wikipedia.org/wiki/List_of_software_for_molecular_mechanics_modeling) ( and LAMMPS is one of those).
I have seen videos where physicists use Matlab to simulate the frequency of different gasses e.g. hydrogen and then output it to the speakers. Very cool stuff
You have an "over defined" set of requirements- they can't all be met. You're going to have to give something up. You can have a set of data between 26.5 and 86.5 with a given mean and standard deviation (assuming that your mean is between those numbers), but then won't be normal. You can generate random normal numbers between 26.5 and 86.5, and throw out everything else- but then you won't have your mean or standard deviation. You could probably get normal numbers with either your mean or standard deviation but not the other between them (again, assuming your mean is between your two numbers). If your mean is inbetween there and you have a sufficiently small standard deviation, you could prob just throw out numbers outside of your range and you would still be close to the stats. So, your question, as you asked, isn't really possible. But if you expand on what you're doing/what you're hoping to do we can probably come up with a solution. 
I'm not too sure what you mean. Again, I apologize for my lack of knowledge. I'll try my best to explain what I'm doing I created a script with the following: function F = root2d(x) F(1) = *Some function 1* ; F(2) = *Some function 2* ; F(3) = *Some function 3* ; ----- Then the command window, fun = @root2d; &gt;&gt; options=optimoptions('fmincon','MaxFunEvals',600) options = fmincon options: Options used by current Algorithm ('interior-point'): (Other available algorithms: 'active-set', 'sqp', 'trust-region-reflective') Set by user: MaxFunEvals: 600 Default: Algorithm: 'interior-...' AlwaysHonorConstraints: 'bounds' DerivativeCheck: 'off' Diagnostics: 'off' DiffMaxChange: Inf DiffMinChange: 0 Display: 'final' FinDiffRelStep: 'sqrt(eps)' FinDiffType: 'forward' FunValCheck: 'off' GradConstr: 'off' GradObj: 'off' HessFcn: [] Hessian: 'bfgs' HessMult: [] InitBarrierParam: 0.1000 InitTrustRegionRadius: 'sqrt(numb...' MaxIter: 1000 MaxProjCGIter: '2*(number...' ObjectiveLimit: -1.0000e+20 OutputFcn: [] PlotFcns: [] ScaleProblem: 'none' SubproblemAlgorithm: 'ldl-facto...' TolCon: 1.0000e-06 TolFun: 1.0000e-06 TolProjCG: 0.0100 TolProjCGAbs: 1.0000e-10 TolX: 1.0000e-10 TypicalX: 'ones(numb...' UseParallel: 0 Show options not used by current Algorithm ('interior-point') &gt;&gt; x0 = [0,0,0]; &gt;&gt; x = fsolve(fun,x0) Solver stopped prematurely. fsolve stopped because it exceeded the function evaluation limit, options.MaxFunEvals = 300 (the default value). x = 1.0e+04 * 0.0002 -2.0471 4.0946 --- I hope this helps! Thanks! Edit: Typo
I posted what I have so far.
It's telling you that it has reached a point that isn't a solution, but it also can't find a direction to move in that will continue driving the residuals to 0. Possible explanations are : * There is no solution to the system * There is an error in the functions describing the system * The initial guess is bad Also, all inputs and outputs to the function `fsolve()` evaluates should be real arrays. Complex numbers must be represented by 2 real variables.
With respect to the initial guess, that refers to the array x0 right? If I had x0=[1,2,3], it would mean that I guessed the first variable to be 1, the second to be 2, and the third to be 3 correct? Sorry for my ignorance &gt;.&lt; 
Alright. Thank you so much! I think I have enough to hopefully solve this!!
Try using strcmp on your cell array of strings. Use the output of the strcmp to index the cell array for replacement. For example: ca={'a' 'b' 'c'} strcmp(ca,'a') -&gt; ans = 1 0 0 ca{strcmp(ca,'a')}='aa' -&gt; ca = 'aa' 'b' 'c'
Wouldn't that ultimately change every letter instead of just one? For example if I use my Matrix and have strcmp(a, 'A') underneath it the output would be: 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 Still changing each of that letter. Unless you though of implementing it in a different way. I'm probably just misunderstanding you.
 smooth() Or medfilt1()
That's the equation of a diagonal line, so it sounds like ezplot is working fine. Did you read the documentation about axis tick labels? That explains how to change axis labels better than I could in a reddit comment. 
Thanks for the reply! While reading up on logical indexing it struck me just do so something like this: a(randi([1,7],1),randi([3,9],1)) = 'X' Which replaces a random character in my matrix and skips the first 2 columns so I don't have to worry about it replacing one of the numbers. So it's progress! Thanks again
I'm sure a lot of us would be happy to help you, but we need more to work with than "I don't know".
You can be a teeeny tiny bit more descriptive... What do you have, What have you tried, What is the exact problem. Now it's just a mess of jumbled words which you will never get an answer to.
Yes, you can do that. What's the question?
What have you tried already? 
I'd suggest writing a loop. Inside the loop, you load some data from a file, then plot it. 
&gt; Sqrt(1 /length(n) * sum((n - sum(n) /length(n)).^0.5)) A few things: 1. What a happened to "we don't do your homework!"? 2. When you write code, it is better indent it with four spaces or use the "`" mark. 3. this is **wrong** (and I included your answer quoted in case you change it). But, I don't want to do your work either so I'll let you figure out what’s wrong with it.
Yea you will have to put a space after each command in my post lol
I would just convert your sine wave to a square wave, using find. pos_ind = find(y2&gt;=0); % find where y2 is positive y3 = y2; % this is just to make y3 the same length y3(pos_ind) = 1; % I'm choosing 1, you could make it as tall as you want y3(~pos_ind) = -1; % all the negative ones plot(x2,y3, 'k-') % plot it, with black connected lines
why? &gt;...we don't do your homework
Mmm yeah this is why you don't write matlab code off the top of your head at 2 am on your cell phone. You raise valid points , this post goes against the spirit of this subreddit and was indeed wrong. I also see the error in my post, the inside term should be squared, not square root. e.g. s = sqrt( (1/length(n)) * sum((n - sum(n) / length(n)).^2)) It would be better to have op post his attempts at solving the problem rather than just flat out solving it for him. 
Please do it and then share the code. I would love to be able to give something to the students in my class who ask for copies of my code.
I did what you gave me, I think I did it wrong lol... http://i.imgur.com/2eUkCNi.png I tried to use another method but it had ones square wave lol http://i.imgur.com/BZzfrXh.png yea I just want a straight line though, aaaaa I don't know what to do anymoreee I'm no coderrrr P.S. the subplot and grid on the first reply I wrote was for a different matter (I had to produce both graphs on the same window using these 2 commands, I forgot to remove them)
I don't, but I can think of a few ways to do it. Perhaps the easiest is with a binary matrix and using `spy` (BTW, just type `spy` in for a cool easter egg). To get the image, you could probably do it with Matlab too. Import an image and use that to find the proper indices. Alternatively, you can generate the right `(x,y)` coordinates (also with matlab). That is basically what `spy` does. It turns the indices to coordinates. Or, if you're really up for it, you can define piecewise equations, but that seems really hard
ceil(v1./5)
"never interface with or extend matlab class. [sic]" The best advice given to me by a Mathworks employee regarding performance. This spawned out of me trying to work with the state space class in a loop of a custom designed class, it was 70x slower than defining a separate instance. My code example to them at the time was: A=1; B=1; C=1; sys=ss(A,B,C,[]); n=1000; tic; for a1=1:n sys.c*sys.a^-1*sys.b+sys.d; end t0=toc tic; a=sys.a; b=sys.b; c=sys.c; d=sys.d; for a1=1:n c*a^-1*b+d; end t1=toc t0/t1 My other advice is make everything public, but clearly demarcate variables and methods that should not edited or used, respectively; and then document well. I find both helps the maintainer and user. I expect some with take issue with the public vs private vs protected advice, but this is from my personal experience finding that reviewers and users might want to evaluate specific aspects of the computation. 
One of the worst performance overheads is when you access a property of an object. So if you need to read a property at least twice in a method (and especially so if you access it in a loop), you'd always be better off creating a local copy first, i.e. function method(obj) prop_ = obj.prop; % create local copy % work with prop_ now end
unique is not suited to work on doubles- for exactly this reason. There is numerical instability in problems like this, first because your answer is a double, and second because fzero has stopping conditions. There is no "one size fits all" solution to this problem- fzero is not a "magic bullet" when it comes to these sorts of things. It does kind of have to be tailored to your problem set. The question I would as is "what logic did you use to choose your step size for 's'?" Something made you determine that a step size of 0.1 was small enough. Apply the same logic to your tolerance for checking the values. As an example, you could find the slope of your equation at your zeros, and set a tolerance of dx\*slope (for example), and then say your tolerance (when two zeros are actually the same) to be that value. Also, I would read up the documentation on fzero- you can set your own stopping tolerances. Make sure whatever comparison tolerance you're using is larger than the stopping condition. 
Ah, that's a good idea. Reduce overhead of accessing class properties in a loop. For public vs private, I've made "parameters" of my simulation global before. But on my current project, I've decided not to do that... 
It is. You can easily check the performance yourself. Just access to property in a loop lots of times and time it using either tic; % code toc; or help profile And then do the same, creating a local copy first and working with that. You will be amazed with performance gain.
As far as a finite precision computer is concerned and when dealing with order 1 numvers, 0.000000000000001 *is* zero. I run into this problem all the time since I am often looking for unique sets of floats. I solved it by writing my own set of tools for sets (`unique`,`intersect`,`union`, etc) that take into account tolerance. Actually, for my use, I was usually interested in the rows so I accounted for that by calculating a euclidean norm. Then, the user can specify a tolerance (and a norm order, with the most common being 2 or infinity). 
Times like this where good 'ol FORTRAN wold have been nice. I'm glad my old professor taught us FORTRAN. MATLAB became so much easier to learn after that. Been meaning to look into the newer versions of FORTRAN. Anyway, the while loop certainly seems like the best option.
This is the correct approach. Only expose what you _absolutely must_.
I was referring to in older FORTRAN you could say IF this, GOTO a line just before the if statement, ELSE continue with the program. The while loop does the same, but I think for somebody new while loops are hard to interpret. I definitely wasn't clear what I was referring to, nor is it really relevant. Just reminiscing, really.
SORRY TO ALL... One I was not descriptive... Two I figured it out... I was using a load function that would load the entire data set and then create structured variables for each and assigning them a name followed by .mat... What I was failing to do though is call the individual .mat files created for the data files, in a load statement... Tldr; I'm dumb... Didn't give enough info... I fixed it
See above sorry!
I'm pretty sure I'm your TA. Not ragging on you for asking for help on the internet, that's a good idea and is generally encouraged. Unfortunately the deadline for the homework has passed. And you're not doing the problem that was asked. The problem was to find the intersection of f1 and f2 so you need to make three anonymous functions. f1, f2 and Fdiff. As to why you're getting two slightly different answers. That's a hard question. I imagine it's because you're finding fzero with a guess above zero and then below zero so matlab is coming at it from two different directions and getting within 16 decimal places of zero with a slightly larger number and a slightly smaller number because it's approaching zero from either side. We haven't noticed this or explained it in class because, personally I've never run into it and no one else runs into it when doing this problem because it works perfectly fine if you do the right problem. Also, how about rounding it. x = round(x,10); x = unique(x); Problem solved.
Bingo. Thank you.
How would you solve it by hand?
1. Matlab doesn't understand symbols, only numbers (there's an addon, Symbolic toolbox, which does, but that's something to learn after you've got the basics down). So the expression `c = [ x1; x2; x3; x4]` doesn't work. 2. Matlab also doesn't understand equations in the mathematical sense. `a = b*c + d*e` is interpreted as an *assignment*, which stores the result of right hand side into the variable on the left, so it also doesn't work here. The canonical way to solve linear equations is first to express them (mathematically) as Ax = b, define arrays A and b in Matlab and then use `x = A\b`, or alternatively `x = inv(A)*b` (using inverse looks nicer but is less efficient), after which the result is stored in variable x.
hERRo
So you are saying that for say B=ax(1-x), there is a fixed point when B=x? And I am just meant to keep calculating values of B with different values of x until they match? If so then that is annoying, as that's what I was initially doing but then thought it was wrong as I got 5 iterations for a=2 rather than the 4 it says you should get...
If you know the minima you're looking for are all the same value, then use something like x = find(A == min(A(:))); and x will contain the positions where A has that minimum value.
I spent all day googling the logistic map and I think I just confused myself as most of it is above my level or too detailed for what I'm trying to do. I think that makes sense, thanks very much, I'll try again tomorrow.
Just extract the required range from the array. img_cropped = img(a:end-b, c:end-d); If you want to automate it figure out how to compute the integers a to d from image analysis. 
The command you're looking for is imregionalmin from the image processing toolbox. The code should be something like: BW = imregionalmin(A); [row, col] = find(BW); 
An image is just a big array (or matrix) of numbers. Each pixel is a number in that array. So a 100x100 pixel 8bit grayscale image is an array of 8 bit integers. (0 is black and 255 is white and all values in between various shades of gray) If you want to cut out a region of the 100x100 array you can simply tell Matlab the 'coordinates' of the pixels, as above. This is really, really basic Matlab, you should read the introduction of the documentation. Also this: http://uk.mathworks.com/videos/working-with-arrays-in-matlab-101637.html
fzero doesn't find the root, it finds a numerical approximation to the root. In some cases, you might not even be able to find the exact value of the root eg. If the root was pi. Thus, fzero will stop when the solution is accurate to some finite number of decimal places, which you should be able to choose in the options for fzero. So in general, you wouldn't expect to get exactly the same root if you start at a different initial point. Regardless, what you might then want to do is check if all your roots agree to within however many decimal places. There are many ways to do this, but one simple way is to round them to a fixed number of places eg. round(x*10^3)/10^3 would round to 3 places. A better way IMO would be to sort them and check that difference between the first and last value is less than some threshold eg. 1e-8. 
Could also do: min_value=50; % Or whatever threshold you wish to set x = find(A &lt;= min_value); Could also remove the find part and just use: x = A &lt;= min_value; This will report a matrix of the same size with a logical 1 where values in the matrix fall below the min_value and a 0 where they don't.
`fprintf` or `sprintf` are what you're looking for. for i = 1:n fprintf('theta(%i) = %5.3f\n',i,theta(i)) end
Check out these commands: * imcrop * graythresh * im2bw * regionprops im2bw and graythresh will segment the image (you can skip using graythresh if you want to hard-code the threshold level). regionprops will give you the bounding box of the segmented region (note: you may have to invert the segmented image so that the block is white and the background is black). imcrop will then crop out the found bounding box.
Look up the butter and filter commands. That should get you started.
Not too familiar, I'm taking Signals and Systems, where I started learning about signals and filters, I get the basic concept perfectly and this is a fairly simple problem, my issue is just my knowledge of MATLAB. 
Looks like you are using polar coordinates so sqrt(x2+y2) is calculating the distance from the origin. Adding eps to this value just prevents divide by zero errors when you divine sin(R) by R. The dot before the / tells MATLAB you want to perform element by element division. 
Thank you so much!
You can also use element wise operators to do the thresholds get for a given threshold value: BW = grayLego &lt; 20; Returns a logical array of the same size as your grayscale image which is true where grayLego is less than 20.
Hitsc was depreciated in 2014b. It still works, but histcount is now the preferred method. 
So you want to filter out everything but 200Hz? The plot of H does not filter at 200, more like 150. And i'm not sure H = Y./X is working for you. The phase of H is discrete and all over the place.
Thank you for the responses, it helped me a lot
H is the filter response. It should be as simple as h(t) = sin(2*pi*200*t). H = fft(h). Then, since this is the freq. domain, the filtered signal should be Y = H.*X, not convoluted. 
Sorry not familiar with the nomenclature so I swapped h and y. That's exactly what I meant by read up on convolution theorem, convolution between the filter and signal in the time domain (aka filtering) is the same as pointwise multiplication in the freq domain between fft(filter) and fft(signal). 
Possibly relevant: http://www.mathworks.com/products/new_products/webserver_discontinued.html
What you're describing sounds like a bad idea, but, you can accomplish what you'd like by using [struct arrays](http://www.mathworks.com/help/matlab/ref/struct.html) and [dynamic field names](http://www.mathworks.com/help/matlab/matlab_prog/generate-field-names-from-variables.html). pseudo-code... variables = struct; while some_condition varname = input('Specify your variable name: '); if iskeyword(varname) variables.(varname) = % accept data input from user end end This is different from the above method of utilizing a numeric or cell array, as struct arrays allow you to access data by keyword, rather than index. For example, suppose the user stored data at varname = 'blahblahblah'. Then, we could later access this data by variables.blahblahblah That being said, if all of your data is homogeneous (e.g., several results from different experiments) rather than heterogeneous (e.g., they need to define their own, unique variables that you cannot possibly enumerate in your function), then it's clearly better to use cell or numeric arrays. However, if you really do require variable-like keyword access, then struct arrays can accomplish this.
Yes, the math is the same. Convolving (say, with convn) will return an image that's larger than your input image as it gives the 'full' output. If you have the image processing toolbox, check out the imfilter() command. It gives you a lot of control over what the filter does to the edges and how big the returned image is.
If you're storing a single numeric value, use a numeric array: for i = 1:numInputs A(i) = input('Enter new input') end If you're storing arrays or strings, use a cell array: for i = 1:numInputs A{i} = input('Enter new input') end Where A is your matrix and numInputs is the number inputs you have. You can also use a while loop for an indeterminate number of inputs. You'll be indexing each input into the index "i". For better performance, you might want to look into how to initialize an array.
I edited my post to be more explicit. Let me know if you're still confused.
If I were to write it in x(i) notation, wouldn't i then have to make x some sort of vector? I have been trying to figure this one out but the book isn't helping much and my professor isn't the best. Not blaming him for my lack of understanding as i know I have other resources, he just does not explain things very well...
You might want to use ismember(), or arrayfun() in conjunction with @strcmp. I really hope your professor isn't storing assignment *numbers* as *strings*... ... But I fear he probably is because no single demographic writes more terrifyingly bad Matlab code than professors. 
You are confusing mathematical notation with procedural code. They aren't the same. When a math text says, for example: x(n) = x(n-1) + 5 Does that mean x is a vector? Not necessarily. It simply describes the new x value as a function of the previous x value. In code, you could write for n = 1:? x = x + 5; end Unless you specifically want to store a record of the values of x over time. Context matters. What you should learn from this assignment is that before you start coding, you should understand what you're trying to code, what it means, and what steps should be taken to get to your solution. Then understand the language tools that can implement that understanding. Simply trying to use your math textbook as a cookie cutter guide to programming will fail. Understand the problem, don't just try to make your code look like your math text. 
Why are you subtracting .0001 from x?
Yeah that makes sense. I am majoring in mathematics so i could definitely see how I am doing this.
They gave you a perfectly good iterative scheme, and you decided to say, "nah, I'll just search through EVERY NUMBER until I find the one that works".
Oh I forgot to add, if he's storing numbers as he should, you'd used str2double() to convert the string provided by the user into am actual numerical value. Arrayfun runs a function on elements of an array. Read the documentation. 
That's good, very good! Glad you got that off your chest?
What specifically are you having trouble with?
&gt; Not 100% sure to be honest. Use comments in your code, so that we can try to work together better in the future. If you can't tell us why a command is being done, what can we possibly help you with? Good luck! :)
Those sound like pretty clear instructions. 
I think it's funny. You'll get better.
Try **readtable** and **writetable**
If you're going with a cell array, I have some questions: * How many countries are there? * Will each country have the same number of rows and columns? * Are you writing all countries on the same sheet in the xls file? Some code: % Call your big array A for CNum = 1:NumCountries % first row for this country idx1 = 1+(CNum-1)*8; % last row for this country idx2 = idx1+7; % copy out the data block D = A(idx1+2 : idx2-1, 2:6); AgeVec = cell2mat(A(idx1+2 : idx2-1, 1)); KidsVec = cell2mat(A(idx1, 2:6)); % example filling D{AgeVec==25, KidsVec==0} = 10000; % put it back in A A(idx1+2 : idx2-1, 2:6) = D; end 
**Post your code.** Otherwise we can't help you find the source of the errors.
I'm a little confused on what you want to do. Looking at the equation, your "capitol theta" (sorry, I don't know how to do Greek letters, so I'll call it F like you do) is a function of rt and z. But you want to set F to be certain values. If that is the case (which is fine), then you have to solve your equation for a different variable (say, rt is a function of F and z or something). MATLAB doesn't "solve a function" for you, like you currently have it set up. Reading what you maybe want to do... Maybe you want F to be a constant, and then you want to plot z as a function of rt? So you'd solve your equation so you write z = (whatever it turns out to be) and every time you're putting in a different F. In this case, you'd be doing a series of 2D plots instead of 3D ones. In this case, you can set all your values of F by a simple command of F = 0.1:.1:1.1 As for your other questions: if you read the help for ezplot, it shows you how to set the bounds for each variable you plot over (basically, you put them in brackets after your other arguments). As for putting multiple plots, the magic command is "hold on." You create a figure, then just type "hold on." Then loop through all your values of F, and use your plot command, and it will plot them all on the same graph, changing colors automatically (well, it will change colors automatically if you are using MATLAB 2014 or newer, otherwise you have to use the command "hold all.")
oh sorry about that, the code i have written so far ; I = imread('lenagrays.jpg'); I = im2double(I); T = dctmtx(8); dct = @(block_struct) T * block_struct.data * T'; B = blockproc(I,[8 8],dct); N=256; imwrite(B*N, gray(N), 'lena_DCT.png') what im having trouble understanding is that does the picture have to be the Actual number for the DCT coefficients or does the picture have to show the intensity of the DCT coefficients ? Cause right now my code is showing the intensities right ? 
I am a bit confused by your process here. What do you mean by import and export? If I was trying to get a figure from matlab into latex I would simply save the figure as an eps file and add it into my latex with \includegraphics and the package graphicx (and the package epstopdf if I was using pdflatex). Or really any image format, png, jpeg etc.
You could probably quite easily make a script with autohotkey to just focus the command window, press ctrl+c and focus back to editor. Other than that I have no idea.
I'm sorry but I'm a total beginner in MATLAB, so, I really don't have any code to post except the function I wrote in the original post. "ellipke" is a MATLAB function I found for the elliptic integral. I'm trying to understand how MATLAB works, that's why I'm here.
First of all, thanks for your answer. Now, the guidelines we got was to solve for Φ (it's pronounced like "phi" btw or "fee"), then bring the equation in the form of an elliptic integral (as in the picture in the OP), in order to be able to plot it for different values of Φ in MATLAB using ezplot or ezcontour. The plot is supposed to have rt and z on its axis and show many graphs for the various Φs. I understand what you say about solving the equation for rt or z, but I don't think that it's possible.
I think the "pause" command is what you are looking for
Are you trying to plot Phi, or level curves of Phi? If Phi is a function of rt and z, you cannot simply set the value of Phi without constraining the values of rt and z (specifically, you constrain them to lie on a level contour of Phi). Are you sure you understand the mathematical concepts you are trying to apply? Matlab isn't a genie, it can't give you mathematical answers to questions you don't understand. 
The first line (c=0:5:100) is unneeded. The second line goes inside the first for loop, and the nested for loop is unneeded. So, for c=0:5:100 fprintf('%d\n',c); f=(1.8)*c +32; fprintf('%d\n',f); end ought to work. I'll let you worry about formatting.
This is what I tought, but apparently it doesn't. I use system "matlab -nosplash -nodesktop -nojvm -r Styrene" but it doesn't wait for the script to finish. I can't use sleep commands because I need it to run on locked computers.
So you have a non-MATLAB executable that is calling MATLAB by using a system call to run a script? Easiest way to make your program wait imo is to create a temporary file (touch is the Linux command for this) right before running the MATLAB script. Then modify your MATLAB script to delete the temp file as it's last action before shutting down. Your external program can then just monitor for the file (an empty while loop should work fine) and not continue until the file is gone. A more elegant solution might be to use the MATLAB engine to call your m files from your code, especially if you're calling MATLAB repeatedly to avoid incurring the startup every call
Just so you know, your original code was nearly a pretty decent way to save all of the values. You just had a few typos, here is the way I would have written what you did: c=0:5:100; f=(1.8)*c +32; for i = 1:length(c) fprintf('%d\t',c(i)); fprintf('%d\t',f(i)); end And to implement /u/PM_ME_YOUR_CRAZIEST 's suggestions of printing each vector separately, you could literally just get rid of the for loop, and change a few things for formatting. You really did basically have the answer, just a few minor syntax things. clc clear c=0:5:100; f=(1.8)*c +32; fprintf('%3.1f \t',c) fprintf('\n') fprintf('%3.1f \t',f) fprintf('\n') I adjusted a few things to get it to print in a slightly clearer format. Let me know if any of it doesn't make sense. edit: I used %3.1f to show 3 digits left of the zero, and one digit to the right. %d works perfectly fine though, especially since all of your c values are multiples of 5, so all the f values will still be integers. edit2: It just registered in my mind that you are required to use a for loop, it's not necessary to solve the problem though, so you maybe could just assign the value of element by element rather than all at once? edit3: fprintf behaves differently than I expected clear; clc; c=0:5:100; f=(1.8)*c +32; for i = 1:length(c) fprintf('%d\t',c(i)); end fprintf('\n') for i = 1:length(c) fprintf('%d\t',f(i)); end
This sub is pretty weird. I don't think I've ever seen a post above 20 points, most are in the the 0 to 5 range. I don't get it either.
It's impossible to tell really. Is there a reason you only posted half of the error message? I assume a Java programmer would recognize the relevance of the part that actually explains what the error was. 
Either `FILE_s` is empty, (likely) or, you've assigned a variable's value to `length`. `FILE_s` is probably the result of a `dir()`, meaning you should be sure the path to it is valid. Right before the loop, run `isempty( FILE_s )` to see if it is indeed empty. 
Use the Cholesky factorization. https://au.mathworks.com/help/matlab/ref/chol.html &gt;R = chol(A) produces an upper triangular matrix R from the diagonal and upper triangle of matrix A, satisfying the equation R'*R=A. The chol function assumes that A is (complex Hermitian) symmetric. If it is not, chol uses the (complex conjugate) transpose of the upper triangle as the lower triangle. Matrix A must be positive definite. This way you can get A = R'R or A = R'DR, where D = I = identity matrix. 
Okay, I'll try those! Thank you so much! Yeah, seems a bit silly trying to force a for loop in there - think my prof was struggling for questions
I doubt that it's an infinite loop (it runs for the same length as n_points and n_dwell). And I don't see anything weird in your function. so I have 2 questions for you: 1\. Could you add 4 spaces before each line of code? That way Reddit displays your text as readable code. like this! 2\. How big is n_points and how big is n_dwell? Maybe it's just reaaaally long and you're impatient ;). **EDIT** My own formatting was horrendous... I corrected it :). Forgot to mention that a white line has to be before your code block (in addition to the 4 spaces before each line).
To add on this, OP your first step should be: google 'matlab read excel file' 
First, "angle" is a built-in Matlab function, so you should give your function a different name :) In addition to what yourfavoritemusician told you about pre-allocating memory and adding the missing semicolon, here are some other optimization tips. This should get your code finishing in under a second. 1) Function calls have some overhead in Matlab. Your function is simple enough that it could just go inside your loops. 2) Vectorization of your code really speeds everything up. Removing one of your loops and processing each row of v at once reduces how many function calls you make. This change alone makes a huge speed difference. tic points = rand(6191,3); dwell = rand(181,3); n_points = size(points,1); n_dwell = size(dwell,1); v = NaN(n_points,n_dwell); for idx=1:n_dwell x1 = points(:,1); y1 = points(:,2); z1 = points(:,3); x2 = dwell(idx,1); y2 = dwell(idx,2); z2 = dwell(idx,3); v(:,idx) = acos( (z1-z2) ./ ( sqrt( (x1-x2).^2 + (y1-y2).^2 + (z1-z2).^2) ) ); % v(:,idx) = my_angle(x1,y1,z1,x2,y2,z2) should be nearly as fast end toc Elapsed time is 0.068436 seconds.
This sounds like a hackey but workable solution. I know I've done things like this before. but... &gt; an empty while loop should work fine I would add some type of pause or wait or whatever statement so that you're not killing resources to poll for the file. Maybe like 0.10 seconds or so
If you put a startup.m and a finish.m in the directory that your MATLAB launches to, it will run startup when it launches, and finish before it closes. This has saved me many headaches when I accidentally closed MATLAB without saving my workspace. Now I have it automated. Of course you could do more things with yours than I have, but I have a very simple one. My finish.m simply saves my workspace to my launching directory: filepath = 'C:\"my directory path"\last_ws'; save(filepath); Then startup.m reloads it: filepath = 'C:\"my directory path"\last_ws'; input = [filepath,'.mat']; if exist(input) load(filepath) end clear filepath clear input The clears simply ensure that I don't have stupid strings in my workspace than I don't want. 
&gt;First off- if you want to do engineering as a professional, you're going to have to learn how to program. It won't necessarily be MATLAB, but it will be something. So don't consider this a "class I have to take, and then be done with." It is likely one of the most important classes you take. This was exactly my thought when I read the OP
&gt; One thing you will commonly find is, white out how you would do it on paper This is important. If you don't know how to solve your problem (or worse yet, what your problem is) then MATLAB isn't going to magically do it. You have to have a clear understanding of what you're trying to do, and how to do it. I see so many times people asking for help on here and they just run off on some tangent, or start solving some related but different problem. 
I could get the 'c' array from division, but the color/intensity (3rd parameter of imagesc) would still be for the k vs f coordinate no? also: both first and second parameters of imagesc are 1D arrays, so i can't divide those to get all inside points for a 2d matrix i think?
dlmread is implemented as a .m file in both versions, so you can do "edit dlmread" in each and compare the results. I don't believe there should be any difference between those two versions, though.
yes, each point in the image (k vs f) needs a new coordinate (c vs f). thanks, i'll look into interpolation
Yes, but getting new coordinates isn't necessarily the same as transforming the data. If I have a plot of water density versus temperature in degrees Fahrenheit, I can re-label the temperature axis with degrees centigrade without transforming the data. 
It must be working fine, if you're not getting an error message. 
Okay so we know where you're having a problem. What's the problem? 
Check out the documentation for the function text(). You already have the x and y values of the points, since that's what you're calculating when you plot them. 
i don't think i can re-label cause i expect the colormap/intensity(image) to change as well (basically each point would change positions)
Yeah the dlmread function works fine I checked it separately, the loop is not working properly, I get the data of one file 93 times rather than the data of 93 files.