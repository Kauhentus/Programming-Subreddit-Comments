How many lines are we talking?
You can use regexprep() to replace any number with nothing: t = 'ABC123' t = regexprep(t, '[0-9]', '') 
&gt;I’m having trouble finding or making a function that interpolates a set of data points. interp1 will interpolate a set of data points for you. y_interp = interp1(x,y,xi); will return an interpolant of (x,y) at points xi. 
Differs from picture to picture but around 7. I've however found a method using least squares: assuming line (a.*x+b=y) and a and b are column vectors. A=-a; A(:,2)=1; X=A\b; x=X(1); y=X(2); the resulting x and y should be the coordinates of a point that has the smallest distance to all the lines. This method seems to work quite well. And a LOT better than calculating the mean of each single intersection.
I scanned a bunch of family photos on a scanner that will do multiple photographs. Long story short, it scanned the entire surface of the scanner and thus I have a ton of family photos bordered by the underside of my scanner top. [Like this](http://i.imgur.com/Tm88wm3.jpg) I'm very good at matlab. I'm terrible at image processing. I was trying to do some sort of lazy edge detect. However sometimes that doesn't work when the photograph has a dark edge [like this one](http://i.imgur.com/idXlgvm.jpg). Some of them also aren't perfectly straight. I'd like to get matlab to automatically go through and crop the pictures for me. Second, what is the best 'facial recognition' Matlab procedure? The photos were just fed in in no particular order so they are in numerous different orientations. I'd like to be able to recognize faces and then rotate based on this. There are 2 methods I've thought about. 1 Rotating the image through all 3 other angles and then seeing which one had the most number of faces. Or does newer facial recognition work at any angle.
Ah, clever. I figured something like that was possible. 
Great, thanks. And if I was willing to buy dedicated hardware? 
If all images have the same size (physically), you could do with one edge only (like the top edge for example). Detect that, crop for the appropriate amount of pixels in that direction, and the appropriate number of pixels in the perpendicular direction. It's usually better to use the corner of the scanner bed to align photos when you scan them, would make it a lot easier on you
Imagesc() scales your image data to your color map, I've never found a good use for it myself. imshow() displays your image in the current figure window. Image(A) will make an image of the elements of A in RGB. The reason your image is usually white is because you might not be using the correct color space. Addition: white might also mean you've went to the maximum. Example: let's say you have an RGB pixel, (500,600,900) will still give you white, because you're displaying the maximum on all three components of the color space
Ive never done hardware, still cant afford it :P but I'd say a Texas Instruments TMS320C should do
Yes, that's a good idea. No, the object I am tracking move pretty slow and I might be able to skip more than one frame. You got the lat, long in your global frame, or in your local frame? How much error did you have?
nope, calibrating the camera means getting its intrinsic and extrinsic parameters. Intrinsic as in focal lengths in x and y, principal point, and radial distortion coefficient. Extrinsic as in the camera's pose (directional cosine matrix) with respect to a stationary reference. From my experience, this is the only way to infer geometry from a single image Edit: [This link](http://en.wikipedia.org/wiki/Camera_resectioning) will probably be helpful
I got them in local NED coordinates first, then converted them into global wgs84 coordinates (or GPS coordinates). Average error was around 40 meters, not bad for what is required by the Outback rescue competition in Australia.
Thanks! :D 
I wouldn't even bother with concatenation; just use the -append flag with dlmwrite to append the second file to the first. MATLAB text handling takes done getting used to, but it's definitely something you can figure out from the documentation. I would load Day1_02.csv, append it to Day1_01.csv, then rename the file and delete the extra one. If it's really just 2 files you can just hard code it, but a for loop would be good practice.
C:&gt; copy Day1*.csv Day1.csv Although this may not be how you want to do it as it's not in MATLAB.
True. Lacking any details about what he'd like to do I figured I'd throw it all out there.
I see you already have some assistance, but I recommend checking out [this tutorial](http://www.wisdom.weizmann.ac.il/~vision/courses/SML_2003/tutorialParticleFilters.pdf) if you have any confusion about what's going on in a Kalman filter. The title doesn't mention Kalman filters, but keep reading and you'll find a great Kalman filter discussion.
Maybe, [Karhunen-Loeve Expansion](http://en.wikipedia.org/wiki/Karhunen–Loève_theorem)? I know I've even seen a paper somewhere with an exponential autocorrelation function example.
If the edges are always black, you can fairly easily write a "crop the black border" algorithm. Something like 1) threshold to get the photo white and the border black. 2) use regionprops to get the bounding box for the photo. 3) use imcrop. This worked pretty well for your "bad" image above: I = imread('testphoto.jpg'); J = rgb2gray(I); K = im2bw(J, graythresh(J)); S = regionprops(K); [~,idx] = max([S.Area]) L = imcrop(I, S(idx).BoundingBox); imshow(L)
was using imshow() and it wasnt working, but i found a work around by not adding the image until the button i wanted it to be added during was pressed.
I believe the transform is working but imshow does not look like I expect. The matrix is pix. When I disk(pix); after the transformation it displays the numbers I would expect to see, however when I use imshow(pix) or imwrite(pix, 'pix.jpg') its just a big white picture. 
What are the numbers you'd like to see? What are the values? Also, what is the datatype of your matrix? If your matrix is uint8, it expects values between 0 and 255. If it's double, it expects values between 0 and 1. 
It's uint8 and I'm expecting values from around 80 to 120, which show up when I display the matrix using disk(pix);. When I try and write the matrix to a color image, it turns all the values to 255. So in the command window I see a large matrix full of values 80 - 100 which is what I expect, but when I open the .jpg file its a white screen and when I view the file as a table in matlab its shows the same size matrix but only the value 255. 
Are you *sure* they're stored as uint8 internally? Try `imshow(uint8(pix))`.
There it is! imshow(uint8(pix)) showed the image I was looking for. So I'm guessing they aren't stored as uint8. How do I go about changing the entire matrix into uint8 so I can write the appropriate image? Thanks for this by the way!
`pix = uint8(pix);` Cheers. No problem. Play with anything enough and you get an intuition for what could go wrong.
That fixed it thanks a lot!! :D 
I'd recommend just writing a simple script then. it would go like this: initialize for 1:simulation time get measurements do kalman filter update store info in table to later plot next time step (use for example euler integration) end plot just ask if you need help with any of the specifics 
Familiarize yourself with MATLAB's [handle graphics](http://www.mathworks.com/help/matlab/learn_matlab/understanding-handle-graphics-objects.html) and check out the examples in the documentation. If you do get(youraxishandle), MATLAB will print all the documented properties that can be modified to the command window. For this question, you're interested in the ['Position' property](http://www.mathworks.com/help/matlab/creating_plots/positioning-figures.html), which is a 1x4 vector with [Xpos Ypos length width]. X and Y positions are from the bottom left corner of your GUI. Also relevant here would be your ['Units' property](http://www.mathworks.com/help/matlab/ref/figure_props.html#Units), which defines what units your position vector uses. The most common units are 'pixels' or 'normalized'. I personally like to use pixels, but if you use normalized your entire GUI will scale. You may also see 'characters' which I would highly recommend against using because it will likely break your layout if you switch operating systems, as different OSes have a different value for the size of a character.
That's not how it works here. Post the problem and the code you have. If someone can and wants to help he'll reply.
There is nothing wrong with what you've done. fid = 4 is just telling you the numerical identifier of your file handle since you haven't suppressed that output (no ; on that line).
But the code doesn't generate 100 random numbers? edit: Sorry, I just realised what I've done, that was a stupid question to ask, I've hidden the list of numbers through using ; Thank you for your help anyway! Sorry I'm not too good with Matlab, my brain is just not built for this!
Failing horribly (or at least _thinking_ you failed horribly) is the best way to learn! Best of luck with the rest of your MATLAB adventures.
See this newsgroup thread: http://www.mathworks.com/matlabcentral/newsreader/view_thread/280185 If the various workarounds don't work, chances are the script provided in the last post will solve the issue.
hmm i'll try that and let you know
[Stop clobbering your 'sorted' values every loop iteration.](http://www.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html) Also, read up on variable scope. You need to define your 'sorted' vector outside of the loop. Also, also, if you define a return value it is generally a Good Idea(tm) to actually ASSIGN something to it.
It continually amazes me at how many MATLAB issues/quirks/shitty behaviors STILL require you to use some external solution. export_fig() in particular seems to come up at least once a week on this sub under a wide variety of use cases. How the hell has that not been snapped up and rolled in to MATLAB itself? It has been around for FIVE YEARS and is still borderline mandatory if you plan to do any figure export that needs to look acceptable at the end. Blows my mind!
Agreed. I've brought up the poor handling of image exporting, particularly from GUIs, to them many times when the opportunity arises. They have been going in the right direction with the report generation features they've started incorporating into the base MATLAB install. Judging from how little handle graphics has changed in recent releases and the stuff Yair Altman over at Undocumented MATLAB has dug up on the new handle graphics structure I would guess they're waiting for a major update to implement whatever new architecture they're working on. Hopefully they roll it out soon, even if it's an undocumented implementation. To be fair though, from the comments in the newsgroup it doesn't seem like it's entirely MATLAB's fault in this case.
I would also recommend taking advantage of the fact that min() can also return the index of the match so you can use that instead if trying to match two floats. Most of the time it'll work fine, but you run run the risk of a situation where your floating point errors combine and you won't be able to pull anything from your array to sort and your function will break down.
you never address "y" in your code above. you find the min, a, and remove it from x, but you never put it into y
I would highly recommend you run this code on a small example data set. It would also be beneficial to separate out the sum() from the sqrt() when doing so. You are on the right track, just going the wrong direction ;) The first line works on columns, not rows. You are correct on the second and third lines: they remove any columns with 0 everywhere. 
I can't parse it; too much icky math. Try pasting it as ASCII or latex?
No idea how to paste it as ASCII or latex so here is a picture I took on my phone of the solution I'm trying to plot for t=0,1,2,5,10,50: http://i.imgur.com/7BuhPuf.jpg 
You're getting NaN for the outputs because you are taking too many terms - evaluating exp(40^2) gives Inf and exp(-40^2) gives 0, resulting in NaN. Take fewer terms, then try again.
Ah. There we go. Your exp[ (n^2 -1 ) * t ] (second e) blows up for t&gt;0. You missed a minus sign in your analysis.
You need to get the string from the edit box and convert to a numerical value in order to set the list box value. 
Glad I was able to help :)
You're not looking at the correct properties for either GUI element. As far as I'm aware there's no simple way to adjust an individual level of the list box so you have to pull the entire string, modify it, and then pass it back to the GUI. idx = get(handles.listbox,'Value'); % Get the index of the selected row listarray = get(handles.listbox,'String'); % Returns a cell array of strings listarray{idx} = get(handles.edittext,'String'); % Modify the selected strings set(handles.listbox,'String',listarray); % Pass list back to GUI Keep in mind that idx could possibly contain multiple (or no) indices depending on what you have selected in the list box. If this is important, you need to throw in some error logic to recognize &amp; handle these situations. I'm not in front of my computer at the moment but this should be what you're looking for, or at least get you most of the way.
To be a bit pedantic, what you wrote down is *matlab* code to do it with matrix algebra. This isn't really "correct" algebra. What is stored inside the `c3` and `c2` line is that Matlab uses the least-squares pseudo-inverse (also from available from `pinv`) in the matrix solve. While what is written is the **RIGHT** way to do it, the following actually shows the math (bit it is the **WRONG** way to code it) c3 = inv(X3' * X3) * X3' * y; Again, do not code it this way, but this shows you the math. You can read more about it [here](http://en.wikipedia.org/wiki/Normal_equations#Derivation_of_the_normal_equations)
I also should add that this is a very helpful example. Matlab has a built-in tool too but I think /u/TheDefinition 's way is more flexible. This gives the same results for the (mathematically poor) choice of monomial basis functions. When I do this, I use orthogonal basis functions that give a much better conditioned matrix and have other really nice properties
Check out [streamslice](http://www.mathworks.com/help/matlab/ref/streamslice.html) for visualizing
You know what? I was also looking into how to find the volume of a convex hull in Matlab. My quick search didn't really yield anything particularly useful, except for the inhull() function on the File Exchange (it's currently down unfortunately). The inhull() function just takes in a point and tells you if its inside the hull or not. So I estimated the volume by Monte-Carlo integration. In your case, you could just check if the point is inside any of your multiple hulls. 
Hey, thanks for the pointer! I'll look into it. If you happen to remember more, let me know. =)
I actually got a large portion of it finished, I'll post the code I have probably tomorrow within this same thread. I got the errors fixed, there's just a few quick questions I have left.
I'm a bit late but if you're still looking for some informations here's an excellent paper on integrating GPS signals and INS measurments: [Sigma-Point Kalman Filtering for Integrated GPS and Inertial Navigation](http://www.acsu.buffalo.edu/~johnc/gpsins_gnc05.pdf). There is a sign error in equation (23) but otherwise it is very good. 
You're not even close to being late. Thanks for the link. 
Does it matter which 7? If not x(find(x==7,1))=[] The one tells MATLAB to return just the first value for which x==7; if you wanted to remove exactly 3 or 11 or whatever just change that. Note that using find is marginally less efficient than the logical indexing you were doing, so if this code is looped a lot it may slow it.
If you just want to remove the duplicate values you can also use unique(): x=unique(x); % values will be sorted or x=unique(x,'stable'); % values will remain in same order, the first values of the duplicates will stay in its place
The error that it returns is EDU&gt;&gt; MillerEconPset2 Error: File: MillerEconPset2.m Line: 11 Column: 22 Unbalanced or unexpected parenthesis or bracket. Also any advice on finding global maxima of functions with lots of variables over time (i.e. ,ax the sum of a function at various time points) it would be much appreciated. Thanks! 
Because that's not how functions work. http://www.mathworks.com/help/matlab/matlab_prog/create-functions-in-files.html
I can't see anything wrong with the brackets but the way you're trying to define a function is wrong. It should be: basicunit = function euler(c, y, p, n) basicunit = (power(c,minus(1,y))/minus(1,y) - p*log(n)) For clarity i would write this line as the following: basicunit = (c^(1-y) / (1-y)) - p*log(n) you would call the function as euler(c,y,p,n) and the output is basicunit. 
&gt; Unbalanced or unexpected parenthesis or bracket. On line 11 of your Miller*.m function, you either have extra or missing ((/[[/{{ }}/]]/)) pairs. Also, some have pointed it out, but for functions I always use the form (with the .m file called fun_name.m) function [out1, out2, out3, outN] = fun_name(in1, in2, inN) % what will my function do?? % do i have open ((( and closed ))) on all lines? % did i define all the outputs?? % put any of your function code here return And you can call it in a script/command line/other function as: [varA, varB, varC, varN] = fun_name(inputA, inputB, inputN); You've also got to make sure that when you're calling your function (fun_name.m), you need to make sure that you input and plan for the output of whatever specific datatypes you plan to use. EG: fun_name.m takes as input a filename (inputA; string), a 4x1 array of lat/lon limits (inputB; double), and a flag for doing something special (inputN; double). fun_name.m outputs two variable arrays (say temperature and pressure; varA, varB; both doubles) and the names of the variables (varC, varN). The output isn't as important, as if you use your function appropriately you'll push the correct variables/datatypes to them if you've coded your function correctly. Their subsequent use will be important to know what they are. The inputs are very important, as if you don't input what your function expects you will encounter errors at the function call's line in your script as well as a 2nd error telling you where in your function you are having problems. Woah - that was long. TL;DR: be careful and sure of how your function interacts (inputs/outputs) with the world around it and that calls it.
any idea why this is returning the error "not enough arguments"? http://imgur.com/PoRZeEz
Thank you! any idea why this is returning the error "not enough arguments"? http://imgur.com/PoRZeEz 
Post where you are calling this function.
A code example perhaps? How exactly are you trying to do this? Are you using guide? Is the "plot" gui created new every time or does it need to be dynamically updated as data in the other gui changes? 
are you supplying your f'n with all 4 inputs? also, check the built-in functions you use in your own function to see if you've supplied them with enough arguments as well. Is there any reason you are using "minus" over "-" and "power" over ".^"? Also, i would write your function as function [eul] = basicunit(c,y,p,n) %what it does return Note the [] around the output. Even though it is only one output, its still good habit to put the [] there for when you make f'n with more than one output.
Am i doing something horribly wrong? do you have a code example
If you need a quick fix, use globals. Not the best style, but it will get the job done. Can we see your function's shell/declaration? 
If you are using objects, the method I have used in the past with great success is to define my own "data" class which extends handle. That class uses a combination of event notifications and the setObservable flag. So then with the GUI(s) all you need to do is make sure each one has a copy (reference) of the data object then register callbacks to events. If a GUI cares about variable "a", register a " post set" event handler to it with a call back that updates the GUI accordingly. If you need to change the variable, just change it. The change will be reflected in all copies of the data object and all GUIs will get notified. Now all guis are independent of one another, yet still actively synced. It makes it almost trivial to add new guis and displays while maintaining a level of cohesiveness
A trivial workaround is to use [Global variables](http://www.mathworks.com/help/matlab/ref/global.html) to exchange data between GUIs.
It is a GUI. I'll grab a code example when I come home from class as a basic overview my first GUI allows the user to input all of the data that will be needed and it separates the files into the dataset a I need. It then needs to pass that data to the next GUI that will run an active plot based on that data but the variables won't pass to the next GUI so the graph shows nothing and shows an error
Tell us more about your problem. "Look horrible" isn't very informative.
What I mean is that TOPCAT has a pretty rubbish graphics package. As in, it's great for organizing tables; publishable figures, not so much. Saving figures I make on there as jpegs or any other image file compress horribly; the axis scales worst of all. If there was a way of drawing these style of graphs on MATLAB, I could subplot them and set bin limits/axis scaling much more easily.
I know - in that by using the hist function, I can make my data plot as filled/unfilled bars. What I can't seem to make it do (if it's actually possible) is represent my data like the graph in the post; namely as joined lines representing the bar outline.
In the bar function, you can change widths and fill/edge colors: http://www.mathworks.com/help/matlab/ref/bar.html
Thanks! I guess I'll have a crack using that!
It sounds like you are making this more complicated than necessary. Your data is only going in 1 direction so you don't need 2 independent GUIs, just make your plot in the same figure.
Okay then do what another user suggests, store the data in the UserData property of the figure. To see what we are talking about Get(h1,'UserData') Where h1 is your figure handle. It should be empty. Set(h2,'UserData',mydata) If you have multiple vars, store them all in a cell variable.
This is the only solution I can think of. Without playing with it, I can't see how the fill edge colors will help, since they'll change along the full length of the bar. If it doesn't exist this would be a nice bit of code for the file exchange; not too hard to automate. Just have to figure out what to call it. 
std2() calculates the sample standard deviation, not the 'traditional' standard deviation. Change your n to n-1 and you'll be in business (assuming you are trying to match the output from std2()).
Thanks so much!
Use [setappdata](http://www.mathworks.com/help/matlab/ref/setappdata.html) and [getappdata](http://www.mathworks.com/help/matlab/ref/getappdata.html) The difficult part will be getting the handle of one of the GUIs in the other GUI. This could be done using [findobj](http://www.mathworks.com/help/matlab/ref/findobj.html) to look for a unique identifiable property such as a figure name.
Try a title of "Help: plotting a pie chart" or something like that.
Do you have the temperature itself for a width X height grid? Can you not use [gradient()](http://www.mathworks.com/help/matlab/ref/gradient.html) and plot a contour/contourf plot?
Have you tried anything yet or are we just to do your HW for you?
Well thanks I think I can do the labeling but why the vector of x [0.4, 0.6]?
I have to do 3 subplots and I've done the first 2 but I've been stuck on the last one for a few hours. This is the last one
By all means if you don't want to help you don't have to I'm not asking you to do it for me 
Glad you got it working. Sorry if I came off quite harsh - we've gotten what seems more than the normal amount of "do my HW for me" posts lately. It would help not make it seem this way if next time you included some code of what you've tried, an error message you've gotten, ... pretty much anything more than just a HW/project prompt.
Since you already have the answer, here is the 'traditional' version you originally wrote, but a bit cleaner: sqrt(mean((A(:) - mean(A(:))).^2))
`pcolor`
Is it possible that what you're describing is related to the adaptive step size? Usually methods with adaptive step size will calculate gradients using (for example) 2nd order R-K and 6th order R-K and if they are substantially different, decrease the step size. 
Did you also change the file name for the function from P.m to p1.m? You may also try putting the function in single quotes as a string: pp = feval('p1',tt); http://www.mathworks.com/help/matlab/ref/feval.html
If you haven't already, check out the "The MATLAB ODE Suite" paper referenced in the code. There is a section on variable step size. Shampine, L. F. and M. W. Reichelt, "The MATLAB ODE Suite," SIAM Journal on Scientific Computing, Vol. 18, 1997, pp. 1–22. This paper can be found at: http://www.mathworks.com/help/pdf_doc/otherdocs/ode_suite.pdf ode45 uses the Dormand-Prince method. The paper describing this method is: Dormand, J. R. and P. J. Prince, "A family of embedded Runge-Kutta formulae," J. Comp. Appl. Math., Vol. 6, 1980, pp. 19–26.
That looks similar to the output I got when I did these equations for Graduate Mechanics last semester. Obviously not exactly the same since they are dependent on initial conditions. Is this a HW problem?
Whoa. I've been using matlab for years and never knew about this. This will be so helpful!
For a robust solution you should set up a mirror of the files off the network somewhere on your local machine. There are various ways to do this. 
Excellent idea, I've been meaning to do this for other data collection systems. Thanks.
Could I have the code as well?
Use guidata to store variables to the handle structure in one figure. Then use guidata again in a second figure to retrieve the handles from the first figure. The documentation for the command is in the following link: http://www.mathworks.com/help/matlab/ref/guihandles.html There are many ways to achieve what you want. You can also use getappdata and setappdata to do the same thing. Guihandles seems to work too. Check out this link for pros and cons: http://www.mathworks.com/help/matlab/creating_guis/share-data-among-callbacks.html#bt9p4xi 
I meant to put the link for guidata, not guihandles: http://www.mathworks.com/help/matlab/ref/guidata.html 
You could easily write a script that would copy the remote versions of the functions to a local drive when the code is executed, so Matlab always has access to the current version - that way you can make your edits to the network drive version whenever you want but if you lose connectivity there's another place on the path that'll have the files. You might need to make the local versions higher on the path, so Matlab doesn't look for the network drive - that might throw an error. 
Do you want to pass it into the callback or use a global variable?
Heres where my issue lies tracker=get(handles.edit_tracker,'String') Tracker=load(tracker) Timestamp=Tracker(:,1) Xposition=Tracker(:,4) Yposition=Tracker(:,7) handles.timestamp=Timestamp handles.Xposition=Xposition handles.Yposition=Yposition guidata(hObject, handles) is where I create the handles solution(handles.Timestamp,handles.Xposition,handles.Yposition) I try to pass those handles to the next gui (Solution) then I was told by my professor this would reopen them handles.timestamp=varargin{1} handles.Xposition=varargin{2} handles.Yposition=varargin{3} 
In the opening function of the second GUI do something like mainguidata = guidata(hObject), where hObject is the handles for the main GUI. Do this before the guidata(hObject,handles) line.
Sooooo this? tracker=get(handles.edit_tracker,'String') Tracker=load(tracker) Timestamp=Tracker(:,1) Xposition=Tracker(:,4) Yposition=Tracker(:,7) handles.timestamp=Timestamp handles.Xposition=Xposition handles.Yposition=Yposition guidata(hObject, handles) is where I create the handles solution(handles.Timestamp,handles.Xposition,handles.Yposition) I try to pass those handles to the next gui (Solution) then I was told by my professor this would reopen them mainguidata = guidata(hObject) handles.timestamp=varargin{1} handles.Xposition=varargin{2} handles.Yposition=varargin{3} 
My pro-tip for doing GUIs in MATLAB: unless they're extremely simple, don't. (sorry it's not very helpful, but I had to spend a summer writing a GUI in MATLAB and making something which was not utter shit was an exercise in frustrating and fighting every single aspect of MATLAB)
Ok, so this is actually a good learning opportunity! Markov chains are SUPER vectorizeable. If you have your transition matrix T and a vector a that denotes your starting state, you can calculate the the resulting probabilities of states p after n transitions as as T^n a = p So for each particle, you'll want to create a unit vector that denotes its initial state, then calculate the probabilities by doing the matrix multiplication. You can then use randsample() to simulate hard assignment of the classes if you want. This is now a more MATLAB-ish problem, and should be more order of number of particles rather than transition matrix size. Also, if you have a distribution of particle states, you can put the distribution in the initial state vector and then simulate the full set of particles from the output vector. I don't know how much linear algebra you've had, but this could be a good reference: http://aix1.uottawa.ca/~jkhoury/markov.htm
I am not 100% sure and can't check because I am not using my main computer, but I think the "2.*y.*sin(x.*y)" needs to be wrapped in parenthesis in order to mirror the function you want in your OP.
Say your matrix is 4x4. In the first loop: i=1 j=1 a=[1,1] b=[3,3] where b should be: b=[4,4] In the next loop: i=1 j=2 a=[1,2] b=[3,2] --&gt; should be: b=[4,3] These aren't the elements of this matrix you want to compare (if you use the correct b). The upper and lower triangles elements are reflections over the diagnal. Take a look at the [triu()](http://www.mathworks.com/help/matlab/ref/triu.html) page to see what I mean. Not only are you not addressing the elements in the lower matrix correctly, you aren't addressing the correct element you want for your comparison. You should also use a different variable than c, as you are using it in two locations. In your example it doesn't really impact your code, but later in life you'll thank yourself for using good coding practice early. :) Also, your code does not guarantee or force the input to be a square matrix; granted *you* may know to always input a square matrix. Your prof may try and *break* your code (by passing in a 4x5 matrix for example). A good first attempt though! We're glad to keep helping you. And thank you for atleast attempting your problem as opposed to posting "i have this hw problem, am a matlab noob, and don't know where to start, help?!" *Edit: I would also suggest, on paper, trying to work through what your problem is. Draw a 4x4 or 5x5 matrix. What elements are you going to compare from the upper/lower triangles. Are there some elements you can skip?
You are right, except I had it wrong, not used to the formatting reddit does, so it was supposed to be F = x^2 *y*sin(x*y) But the rest seems ok to you? 
You want to compare the first row, columns 2:n, with the first column, rows 2:n... 2nd row, col 3:n with 2nd col, row 3:n. See where this is going..?
Have you tried *any* of this? We won't do your HW here - we'll help you when you get stuck. Post some code (4 spaces starting a line formats it) and an error message where you get stuck, and you'll get better responses.
I'm confused, Do you have a question?
emacs. for everything, emacs. [MATLAB Mode for emacs](http://sourceforge.net/projects/matlab-emacs/)
I've used vi/vim (not a fan), emacs (ehh), and Kate (fan). That said, I use Kate on Linux (if installed, if not then I'm lost), but on my work Win7 stock Matlab editor. What are some of your gripes w the stock editor?
Yes, so first and second part I did but when I differentiate y and assign the output to z i get the wrong value 
h = 0.001; x = [0:h:2*pi]; y = sin(x); figure(1) plot(x,y) figure(2) Z = diff(y)/(h) plot(Z/(step)) plot(cos(x))
So I'm getting a different graph every time i graph it 
Make sure the port isn't open anywhere else when trying Matlab. 
Vim (my editor of choice), emacs (goodbye wrists), sublime. For hotkeys, I use Keyboard Maestro (also on a mac). It allows you to define keyboard shortcuts for any sequence of actions; I have one to switch from Vim to Matlab (cntrl-m).
It's not open anywhere else. I have the arduino plugged into the port and that's it. No other programs are trying to take control of com port 3.
I have looked up a way to set up something similar but the info I found wasn't great. What plugins do you use? Do you still run the code in the Matlab IDE? The thing is that apart from the text editor the default IDE is pretty powerful. I don't know if I could do without things like ctrl+enter F9 or the panel showing the active objects.
Post your attempted commands and the results here. Include instrfind. Try fclose and reopen. Also what Matlab version? 
Do you really expect us to decrypt what you are saying and do your assignment for you?
If you use emacs-live, I've posted an emacs pack that sets up the stuff from the blogpost here: http://github.com/MC-Escherichia/matlab-pack
Couldn't you write an if else loop and function combination that checks the next value... To the previous one, and if it is lower store the previous one or something. Or even derivatives equal to zero to find the local maximums and minimums to compare. 
Look, I already did the assignment if you looked at my script. I just want to know why I'm getting a different graph every single time. 
What device are you using for serial translation? Are you using an actual real live serial port or some kind of USB serial device? I spent a whole lot of time pulling my hair out trying to figure out all of matlab's serial communication idiosyncrasies for communicating over xbee to a microcontroller, so this is halfway something I know about. 
what is the value of "step?" Also, look up the "hold" command.
I use sublime text 2. There is a syntax highlighting available for *Matlab*. I then run my commands with the terminal, skipping completely the *Matlab* UI.
Yes, I still run code in the IDE (popping the prompt out so it's alone). Here's a [screenshot][1]. Something I've learned is the Unix philosphopy. There should be tools (e.g., editors) that are *very* good at that one thing, and you should be able to choose any tool you want from this set (vim, emacs, sublime, etc). Not everyone should have to implement their own (and crappy) editor. [1]:http://imgur.com/WorU0Mv
&gt;***If you continue to receive this error message, please contact us.*** 
I think he's trying to simulate the Markov process, not solve for the probabilities.
First of all, you are making rsum a scalar, not a vector. After your loop runs, you just have a single value, so you are doing fprintf(fid, '%f %f\n', &lt;vector of 100&gt;, &lt;scalar&gt;) What it is doing is printing 'list1' with 50 rows and 2 columns, and then 'rsum'. You should check out the 'cumsum' function, or rework your loop to end up with a vector of sums instead of a scalar.
If you want to keep this structure, try: rsum = [rsum; rsum(i)+list1(i+1)]; This will keep appending the sum. cumsum() is a better option tho, and no need for loops. *Edit: I still think cumsum() is the way to go with this, but you're structure will be faster to preallocate rsum: rsum = zeros(size(list)); rsum(1) = list1(1); for ii = 1:length(list)-1 rsum(ii+1) = rsum(ii) + list1(i+1); end
We've talked about this Halsey ;) 
I KNOW WE DID! PLEASE DON'T BEAT ME! I'LL EDIT! Done, is that better, Master? At least I advocated cumsum()! .. and in my defense, I was just trying to keep her structure the same, just correcting her.
That's right! As long as I am only interested in the cross-sectional properties of the particles at each point in time, I actually don't need to keep track of the full distribution of particles, i.e. where in `P` the 1's, 2's and 3's are sitting. As Mimshot mentioned, I was trying to follow the evolution of each particle over time, but for my applications I generally only need the information contained in the cross-section. So for period n I can indeed just sample from T^n times initial distribution. (If I still wanted to follow each particle over time, I think I could just expand the particle vector into a matrix consisting of only `1`s and `0`s, then get next period's probabilities by multiplication with `T` and finally draw random numbers to get the realized new states.) Thanks a lot! This will save me some time in the future.
I tried this and my Matlab just froze oops! Will look into cumsum. Edit: Just saw your edit, I think cumsum is looking like a good option to keep the code simple, because I get marks for how 'neat' my code is if that makes sense.
Bad habits should never be reinforced! "Your code is bad and you are bad." is always a valid reply!
So I used 'cumsum' and put it in an array to make a vector. However... it does what you said, print list1 with 50 rows and 2 columns and then rsum. Not really sure how to combat this though. fid=fopen('random.txt', 'w'); list1=rand(100,1); rsum=[cumsum(list1)]; fprintf(fid,'%f %f\n',list1,rsum); fclose(fid);
I'm a 'she' by the way! Which probably explains why I'm so god-awful at Matlab hehe! Just gunna copy paste what I said above : So I used 'cumsum' and put it in an array to make a vector. However... it does what you said, print list1 with 50 rows and 2 columns and then rsum. Not really sure how to combat this though. fid=fopen('random.txt', 'w'); list1=rand(100,1); rsum=[cumsum(list1)]; fprintf(fid,'%f %f\n',list1,rsum); fclose(fid);
Wait, cumsum() is cutting your list1 (100x1) into a (50x2) array?
You need a . before the / Also the last line isnt gonna work. Do you want to make a matrix there? If so it should be polar=[theta;F]. Or do you want to plot it, like plot(theta,F)?
what happens if you use rsum = cumsum(list1); with no [] ? cumsum() should be returning an array that is the same size as what is being input to it.. Are you talking about your ultimate output file, random.txt ? Can you do a "whos" or "size(list1)" and "size(rsum)" for me and tell me their dimensions?
Try this instead: fprintf(fid,'%f %f\n',[list1'; rsum']);
You having a uterus has nothing to do with MATLAB abilities. We were all there at some point, skill-wise.
&gt; I had to add spaces in the code because it would edit my lines in a way where It wouldn't show my code properly you can eliminate that by 4 spaces to start a line, like this. TMYK..
Yesss... you are amazing, thank you! :) I wouldn't have thought of that!
http://www.mathworks.com/help/matlab/characters-and-strings.html http://www.mathworks.com/help/matlab/matlab_prog/string-comparisons.html Start there, see where it gets you. If you need more help post what you've tried and where you are stuck and we can go from there.
I had a similar problem to yours just this last week. Check out the function strmatch and see how that works for you. EDIT: MALTAB actually doesn't recommend the use of that function for whatever reason -- you can also use strncmp as well. 
No. h depends on the number of observations you have. Given the dynamical system: x_dot(t) = f(x(t)) + w(t) y = h(x(t)) + v(t) The first equation is the state equation. The size of f will be the same as the number of states. The second equation is the measurement equation. So, if you have two measurements and five states, the size of h is two.
In that case, what are we seeing in each of the three plots? It appears that, as given in the example where we have for k=1:3 % plot results subplot(3,1,k) plot(1:N, sV(k,:), '-', 1:N, xV(k,:), '--') end we're comparing the true values to the estimated values. but if you plot the observed values (`plot(1:N, sV(k,:), '-', 1:N, zV(:),'-', 1:N, xV(k,:), '--')`) as well, the observations don't stick with the true system values for the 2nd and 3rd states, which seems to mean that the noise in the observations in those states doesn't have mean zero.
None of the string functions work. I have been able to get a loop to find the name, but Im not sure how to get the corresponding point value from the collum across from the name. for x=1:size(DEF,2); index(x)=strcmpi(DEF{x},'Chiefs'); end ; DEF(index) not sure what to do next 
Logical indexing and `cellfun` are your friends here. A = {'ABC', 17; 'DEF' 31; 'DGQR', 6} findme = 'DEF' f = cellfun(@(s) strcmpi(s, findme), A(:,1)) A(f,2) 
Try something like this: total_points = DEF{index,2} You've done most of the hard work already now that you have the index associated to the team name. In order to get the total points, you just have to access the 2nd column. Note that when you're accessing content in a cell array, the syntax demands use of curly brackets. 
double(), but why do you use symfun (symbolic function) if you don't want to get a symbolic expression as answer? You could use an anonymous function instead for example: f=@(a,b) (exp(a^2)-exp(b^2)); 
TBH, symbolic functions was the first thing that seemed to solve my problem, but also, an anonymous function is a programmatic function, so I thought it would be slower than a feature specifically designed for mathematical functions. Is this completely wrong?
Im really not sure what you're talking about. Why would anonymous functions not be designed for mathematical functions, since that's the whole point of them. 
Also the t and r equals lines in the code are the values for the two functions I created and each will give a different value for every 'x'. So '1' was just a test to see if it works, but the interval for x is from 0 to 4 in increments of 0.1 and it should display all those values which is what I'm having trouble figuring how to code
so... x = 1 in your pic and is the input to calcT() and calcR() ? [take a look here just above the "accessing elements" part](http://www.cyclismo.org/tutorial/matlab/vector.html), though i'm surprised knowing (being exposed to) matlab you haven't learned this yet... [you'll also need to implement something similar to example #3 here](http://www.cyclismo.org/tutorial/matlab/operations.html)
Well I actually changed my code a bit but basically right now I have three functions actually. calcR and calcT each calculate a value for r and t and those values for r and t are used in a third function called calcPhi. But r and t's input arguments are a single x which varies from 0 to 4 in increments of 0.1. Like I said I only used 1 as a value to check if my code worked but as you can see this program is meant to print out like 40 values it seems. So what I have to do that is y(x) = calcPhi('input arguments here'). But what I can't figure out how to do is how to create a vector for x to equal all values between 0 and 4 in steps of .1, if that makes any sense? 
Don't know if you can do this in one line, but you could always make your own function or use randi after the fact: x=ones(1,10);x(randi([1,10]))=0
 x=ones(1,10); x(round(rand(1,1).*length(x)))=0;
that 'c' in calcPhi is a variable it shouldn't be an exponent and for calcR its just e to the (negative 0.5 times x^2) divided by the square root of 2pi (Also I really apologize if this is a lot of stuff I am posting at once, it's not due until tomorrow night but I need to get it done as soon as I can)
This worked as well, and allowed me to also change the number of zeros I need to input. Thanks!
So you want x from 0 to 4 in increments of 0.1? x = 0:0.1:4
Actually I think I have it, I set x = [0:0.1:4], which should work. But I apparently have some errors in my functions and this is what it says: Error using / Matrix dimensions must agree. Error in calcT (line 2) t = (1/(1+0.33*x)); Which I don't know why it is giving me this error
Yes thank you that is what I did, but I apparently have two errors, one which tells me its from using '/' in my division for my calcT function. It says that the matrix dimensions must agree. And the other is in my main code, it says it is in the line [t] = calcT(x)
x = 0:0.1:4 t=(1/(1+0.33.*x))
So I tried this, t = (1)./(1+0.33.*x); and it doesn't give me error for that function anymore 
Okay so this is my calcPhi function function [phi] = calcPhi(a,b,c,r,t) phi = 0.5 - r.*(a.*t+b.*t.^2+c*t.^3); end Now when I write it with the dot operator before every mulitplication or exponent arrow thingy it gives me this error Subscript indices must either be real positive integers or logicals. Error in calcPhi_test (line 7) y(x) = calcPhi(a,b,c,r,t); 
But when I DON'T include the dot operator, it gives me this error Error using ^ Inputs must be a scalar and a square matrix. To compute elementwise POWER, use POWER (.^) instead. Error in calcPhi (line 2) phi = 0.5 - r*(a*t+b*t^2+c*t^3); Error in calcPhi_test (line 7) y(x) = calcPhi(a,b,c,r,t);
Why not use find?
actually...I think I got it. I just erased the '(x)' part from the y(x) haha
check out my first link if you've yet to get 0 0.1 0.2 0.3 ...3.9 4.0 to work
Here's a one-liner for ya. x = randperm(10) &gt; 1;
Thanks! Now this is the best out of the three lol
lol. I have extensive experience with randperm. It's great for setting fantasy football draft orders without anyone arguing about it :D
Maybe try using a solidity cutoff and then if the solidity is too low separate them based on a watershed filter? 
i suppose that the matter is when they touch , so you could just compute the opening of the image. And they will magically separate. Search for morpholigical filters
I fixed the format of your code (next time add 4 spaces before each line (tab in matlab)): function [massa] = Element2massa(char) global Masses massa=0; for j = 1:length(Masses) if strcmpi(char, Masses(j).Symbool) &gt;0 massa = Masses(j).Massa; end end You can remove the &gt;0 from the if statement. Also you should send Masses as an argument to the function Element2mass instead of declaring it global. Also since I guess there is every time one time the if statement is true for every loop since you only assign to a constant massa, you can add a break inside the if check. This will stop the for loop once the if statement holds true and a value is assigned to massa. Another issue is that you use char as a varibale name and since char is already a function in matlab this may cause problems. So try this: function [massa] = Element2massa(char1,Masses) massa=0; for j = 1:length(Masses) if strcmpi(char1, Masses(j).Symbool) massa = Masses(j).Massa; break; end end
Why not using a dictionary data structure like this one for the Masses? http://www.mathworks.es/es/help/matlab/map-containers.html That removes the need for a search loop. Also, instead of running the function on each char1 string, why not grouping the input? That might lead to interesting alternatives.
Sorry for the format didn't know it would do that. Thanks for your reply it did wonders in the code! Thanks for explaining as well! :)
You need to post specific questions about things you don't understand or can't get working. We are not going to do your homework for you. 
Maps were introduced in the Fall of 2008. (2008b)
Best. Post. Ever.
Sounds like you illegally downloaded the wrong version...
www.tryusingoctave.com/ifyouwantsomethingfree/andstillverysimilarto/matlab.jpg
One doesn't merely train MATLAB. MATLAB trains you
Im not familiar with matlab processing, I am however working in a lab and use opencv. How I'd go about this is find out where there is dramatic concavity essentially. Then you can split the contour at that point of the contour. I had to do this recently, you could take a look at my code if you'd like, though I don't know to what extent the overlap is with the two libraries. I'm sorry if my terminology is off, but I'm just going with what I know. Edit: here is an example output of my program: http://www.chiefdelphi.com/media/photos/40429 In some cases the tape would form L shapes, so I had to differentiate the oreintation of the L. I used the method described above, and it worked really well. 
Especially erode, but you might lose precision that way. 
What's keeping you from just making your working directory a dropbox folder at each machine? (or Google Drive, or Skydrive, if you prefer). You would just have to select that working directory at the open of each session. ` ` Perhaps I don't understand the question well enough, but it seems like this should work. ` ` You can setup git in dropbox for the version control if you need. [Here](https://www.youtube.com/results?search_query=git+dropbox) are some vids showing how to set it up. You wouldn't need a plugin to do it this way, but you would have to push commits from the command window at the end of each session (or more frequently). I would presume you'd want separate folders for version history and working directory. 
Dropbox/Skydrive/SpiderOak/Owncloud will solve your sync problems, but will be lackluster for versioning. Proper version control will solve all your woes. MATLAB has built-in 'support' for integration with version control, but it is pathetic. It might as well not be there. You'll be stuck doing things 'behind the scenes' manually rather than directly from the MATLAB GUI itself, but it is better than nothing. There are plenty of free-ish Git hosting options around the internet. If self hosting is a non-issue you can throw subversion on your server and go to town, or setup your own Git solution.
Git. My workflow is GitExtensions + [Git extensions wrapper](https://github.com/jedediahfrey/matlab_gitextensions) I wrote for matlab.
Am I that dense not to have looked there? God.... (I assume use timeold = timenew for the z) I feel like an idiot.. thanks
[gridfit](http://www.mathworks.com/matlabcentral/fileexchange/8998-surface-fitting-using-gridfit)
To be brutally honest, I have absolutely no idea! I can't quite grok what you're doing with your data, but if inter2() worked for lat/long then surely interp3() will suffice for lat/long/time. Seems like a logical progression from my ill-informed outside perspective...
That is a nifty piece of work there. This is definitely getting added to the rapidly growing list of File Exchange submissions that make built-in MATLAB functionality look like amateur hour.
If timenew=timeold, no interpolation in the 3rd dimension is done. I have used interp3 a couple of times for those scenarios. 
Thanks for the tip!
Git should work just fine with any cloud service you point it towards. But if ownCloud gives you any headaches, just try BitBucket or GitHub - this is exactly what they are made for. Nice side-by-side comparison change-logs, version histories, etc. 
 &gt;&gt; comment = 'Best.'; &gt;&gt; comment = [comment; 'Post.']; &gt;&gt; comment = [comment; 'Ever.']; &gt;&gt; comment ans= 'Best.' 'Post.' 'Ever.' &gt;&gt;
I don't understand your problem entirely, but I'm not sure Matlab is the best software for this type of work. Maybe you could use the syms package? But, perhaps mathematica or computer algebraic software can solve this more easily.
Use unique().
If A is your matrix then... noRepeatedValues = numel( unique( A(:) ) ) == numel( A );
 function s = trolllololol(a, b) s=[]; if(b == length(a)) s = a(b); return end s = [a(b) trolllololol(a, b+1)]; end fprintf(trolllololol('Best.\nPost.\nEver.\n', 1))
Everything in the shell!
I don't understand all your notation but here are two things you could try. 1. Are you sure you can't get this equation into the form of pdepe? It seems to me that the term F*u could be part of the source term "s" in the pdepe documentation. 2. You can always finite difference the equation yourself and solve the resulting linear system yourself in MATLAB. spdiags is a handy tool for defining the banded matrix.
There's lots of examples of this, just google "matlab finite difference heat transfer". You should definitely give Matlab a try, especially if you're a noob. It's been the easiest language to learn, IMO, I know ~10 other languages. 
I think what others said is correct, but I wanted to add a consideration in case your problem expands in scope, or you perform additional computational physics in the future. While matlab is easy to learn, has lots of useful functions, etc... It is INCREDIBLY slow. I took a 2D finite element and 2D finite volume CFD solver I wrote in matlab and rewrote in fortran. 50x faster. C/C++ would probably be nearly as fast, and python a bit slower, but still much faster. So as fofo said, the python packages may be your best bet thinking long term because they are free, have lots of scientific computing libraries like matlab, and you can get it with an IDE like Spyder.
 plot(abs(x))
You can, but we did it in excel. Much easier. 
You should plot the absolute value and the argument of the functions. http://en.wikipedia.org/wiki/Bode_plot 
id much rather use excel, but was under the impression that you needed something serious like matlab or whatever (not that excels not serious, but u get it). So ur telling me the prob I posted can be entered &amp; solved in excel ? Thanks!
If you're using approximations, then you can use excels circular function to map out whatever object. 
Im so stuck on this project in my programming class and im totally clueless and my entire group has dropped the class, i have to make a shuffle board like game, any chance you could lend me some tutoring
Great. I will try this.
Thank you.
Wow, thank you so much. I was seriously banging my head off the wall there. Edit: On a similar note, do you have any idea why matlab wouldn't have this built in? Considering this is a very very basic level of encryption you'd think it'd be common enough to warrant it.
For plotting 5*jw I tried: x = sym('x'); absolute = abs(5* x*(sqrt(-1))) plot(absolute,5) Returns: Error using plot Conversion to double from sym is not possible. Error in messingAssign3 (line 6) plot(absolute,5) Not really sure what I'm doing. Thanks. 
Thanks, but not quite, I cannot specify a vector of a specific length, say n=2, and I also cannot see how to generate terms like 'aa'
On second thought, ndgrid will do it. Say we have str='abcd' vect=1:numel(str); [X1,X2,X3]=ndgrid(vect,vect,vect); [str(X1(:))' str(X2(:))' str(X3(:))']
I looked online, but couldn't find an helpful links. You have a complex number, `a + b*i`. That single point graphed in the complex/real plane look like [a triangle][tri]. The length of that hypotenuse is `sqrt(a^2 + b^2)`. This just gives you the strength of each complex component and tells you nothing about the phase of each component. [Wikipedia explains it][1], but honestly understand each word. [tri]:http://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Complex_number_illustration.svg/220px-Complex_number_illustration.svg.png [1]:https://en.wikipedia.org/wiki/Complex_numbers#Absolute_value_and_argument
Try x = 0:0.1:2*pi absolute = abs(5 * x * sort(-1)) plot(absolute) It didn't like you giving a `sym` to a function that takes `double` (plot).
When you open the second GUI from the first one you can use: h2 = secondGUI(); handles2 = guihandles(h2); handles1.secondGui = handles2; guidata(hObject, handles1); If you need to access data from the first GUI on the second one you can use: h2 = secondGUI('firstGUI', handles1); and then add the following line in the opening function of the second GUI: firstGUIinput = find(strcmp(varargin, 'firstGUI')); handles.firstGUI = varargin{firstGUIinput+1} Sorry if this wasn't clear enough, I tried finding the tutorial I used before but I couldn't. I'll update this if I find it.
what does guihandles do? Or were you passing h2 to that gui? 
guihandles returns a structure containing the handles of the objects in a figure. h2 is just going to be a pointer to the second gui, so thats why you need to use guihandles to get the data from the second gui This [link](https://groups.google.com/forum/#!topic/comp.soft-sys.matlab/UYTIXT2o8Nw) might be somewhat helpful.
This is a mild headache for me too, but hasn't reached a tipping point where I actually do something about it. Commenting so I can check back for suggestions. 
No 'sensor', per se. Just sticky Ag/AgCl electrodes and some signal conditioning.
I had to do Jacobi and Gauss-Sidel in excel for a class. It was a lot more work and was not very interesting. You will be severely limited on almost anything more complicated. I think the prof just wanted to show us that it could be done.
If you haven't already you may want to post that to [File Exchange](http://www.mathworks.com/matlabcentral/fileexchange/) EDIT - you can [submit the Git repo](http://www.mathworks.com/matlabcentral/fileexchange/uploads/new) and it will link it up for you.
Check out some of the [SVN](http://www.mathworks.com/matlabcentral/fileexchange/index?utf8=%E2%9C%93&amp;term=svn) and [git](http://www.mathworks.com/matlabcentral/fileexchange/index?utf8=%E2%9C%93&amp;term=git) extensions on [FileExchange](http://www.mathworks.com/matlabcentral/fileexchange/)
&gt;I am confused about what the whole significance level means. If I do the ttest at the default 5% it returns h = 0. However, if I do it at 10% it returns h = 1. I don't really understand what the significance level means. I have tried reading up on the t test but not is being said about this level. Think about a normal distribution. Depending on how extreme you wish to force the result to be different from assuming it is "similar" to the null hypothesis, this is how extreme your xx% will be. 5% is also analgous to 95%, 10 to 90... In wanting to make something more signfigant, you force acceptance of the null hypothesis for a larger range of values. Now, back to the normal distribution. Assume you have a bag of marbles whos mass is normally distributed about some mean. You pull one out, and you want to know whether it's mass is statistically signifigantly different than the mean mass (at a 5%/95% level). As you move away (both sides) from the peak of the normal distribution, the mass values between where you stop your "movement" provide cut-offs: the mass values inbetween (and that mirror the center/peak) are said to be no different than the null (mean mass) at X-level, while those outside (and going all to the wings of the mass distribution) ARE statistically different. Where you draw these lines determines the X-level of signifigance: 5/95, 10/90, 2.5/97.5 (even stricter in rejecting the null) percent levels. This is my basic understanding of t-levels. There's some statistics behind it, obviously, so refer to a stats book or wikipedia. I use the t-test to check if a trend is statistically different than that of no trend (slope=0) (null hypothesis). Going back to what I have quoted of yours, for the exact same test you're performing (in my example, pulling a mass of a marble), a given sample (one marble) is NOT signifigant at the 5% level but is at the 10% level. It may be like saying that if the mean mass is 50g, and the ball you pulled was 43g, there may be cut-offs such that masses +/-8g from the mean are 5% signifigant while those only +/- 5g are 10%. Sorry if any of this is still murky, and if anyone comes with a better explanitation or correction, I'll edit accordingly. also, sorry I can't help you more with your specific implementation. http://en.wikipedia.org/wiki/Student's_t-test http://en.wikipedia.org/wiki/Student%27s_t-distribution (I assume you've looked here)
Go to office hours. Ask others in your class. You'll likely get better and longer-lasting help from seeking it in person.
I'd be willing to take a look at what you're doing, but halsey117 is right-office hours/TA/fellow students are probably your best source since they know exactly what is desired. 
I have gone to office hours twice. I've tried asking around other students in the department and they haven't done anything GUI related in matlab. The TA doesn't know how to use the GUI either. The professor tries to help, but the problem is we have such a short span of time for this project. It isn't for a programming type course. It's an extra credit assignment for my Classical Mechanics class. I can send you the .m and .fig files if you're willing to look at it for me. Thank you!
Another option is to define your own class to hold the data that extends the handle class. Then all you have to do is pass a copy of it to the new GUI and register a listener on the variable you care about to update the GUI when the data changes.
&gt;Are you saying that it means how similar is similar. So at a 5% significance level, values of 95 and 100 would be classed at the "same". Whereas, at a 10% level values of 90 and 100 would be classed as the "same", or have I completely misunderstood? I think its more like: 5%-95% of a mass distribution is classed as "similar" and outside as **statistically** different (for 10%), and use 2.5%-97.5% for 5%. These %'s are like this because you've got to account for the 2-sided nature here in the mass example. There is such a thing as a 1-sided t-test... As for the p-value and CI, I'll have to go back to my stats book myself. ... admittadly I've really only gotten a good-ish grasp on t-values in the past 6-8mos (and got a C in the stats class ~5-6yrs ago when I took it the first time). I think p-value is kind of an analgous way of thinking about the t-value. I think the p-value is an actual number in the sample space (in my example, it would be an actual mass). So for a t-value of 5% signifigance, given a mean mass of 50g, values +/- 8g would be considered statistically different, so the p-value is either +/- 8g or 42g and 58g..? My guess is that the CI is the range of values that we would consider "same", so 42-58g would all be considered statistically "same" or close to sameness? Again, the p-value and moreso the CI I'm not as keen on as I've only gone back through the t-value for hypothesis testing. But in the end, I think all three are related through the ideas in the Student's-t test *Edit: From wiki for [CI](http://en.wikipedia.org/wiki/Confidence_interval): &gt;The confidence interval can be expressed in terms of samples (or repeated samples): "Were this procedure to be repeated on multiple samples, the calculated confidence interval (which would differ for each sample) would encompass the true population parameter 90% of the time So for the marble example, a CI of 42-58g would say that picking a random marble you'll get a mass within that range, and we are 95% confident in saying so. So I would say that think of t-tests as a way of saying how different a new obs. is from your sample versus a CI as how similare a new sample might be (at some signifigance level). http://en.wikipedia.org/wiki/P-value http://en.wikipedia.org/wiki/Confidence_interval Ultimately, and in all seriousness, you may want to make a ELI5/AskScience/&lt;some statistics sub&gt; post asking to explain in not-too-heavy terms all this.. I'd be interested to read through it as well..
I would take a peak inside MATLAB's own plot()/contour()/other plotting functions and compare them to yours, see if they have something that is suppressing the output that you're missing. Aside from that, I would interpret ans=1 as just meaning that the function completed, and completed without error. Is there a problem with using ";" ? Also, how have you defined the function (ie. what is the "function [] = fn()" line, do you use an end or return to end the function?) Also, are there certain combinations of inputs that do/don't provide the ans=1 output? ALLLSSOOO - is there somewhere in your errorplot() function where you've inadvertantly left a ";" off, where it would give the ans=1 output from within this function (though I don't think this would be the problem, as I've used disp() and un-";" lines in some of my functions to debug them while still calling the main function with ";" suppression)? These are areas I would look first to check.. hmm
Can you post your function declaration? (The first line of your function) I suspect that you have a return argument. The semicolon is used to suppress displaying the result of a function. Even if your function returns something it will not print the result to the Command Window. See: http://www.mathworks.com/help/matlab/matlab_prog/symbol-reference.html#bsgigzp-46 I bet that if you do a clear all run your function with a ";" and then execute ans "ans" will return 1
You could use MATLAB's `patch` function (http://www.mathworks.com/help/matlab/ref/patch.html) to make an approximately circular polygon. To move the puck, you could then use `hgtransform` (a graphics object which performs transformations on other graphics objects when you give it a suitable transformation matrix) with `makehgtform` (a function that calculates transformation matrices for you -- you'll want to use the `'translate'` option). Another method would be to update your puck's `'XData'` and `'YData'` properties yourself. Whichever makes more sense to you. Of course, if you want the motion to be animated, you'll have to move translate the puck along its path a number of times. For collision detection, determining if so.e number of circles are touching (or intersecting) is pretty simple -- I'll leave that task to you. If you want the pucks to act "naturally", make sure you account for conservation of energy.
I assume your board is a regularly spaced grid.? Can you simply call the pucks by their center and make a circle for their "girth" ? Move their center of mass (perhaps treat them as an octagon for easy computation) until they come near each other when you get to a finer resolution? If you're displaying them I can't see why you couldn't still treat them (computationally) as some coarse shape and display a circular shape. Interesting problem..
[Like this](http://www.mathworks.com/matlabcentral/fileexchange/38585-gitextensions-wrapper)? [I already have a few things uploaded](http://www.mathworks.com/matlabcentral/fileexchange/19322-saveppt2). It doesn't look like you can edit old submissions and add the repo.
Oh, I didn't see that when I looked. The File Exchange search was broken for a bit yesterday.
I will probably look at MATLAB's plot function again later to see if I can figure it out, but plot is kind of a mess and hard to work through in my opinion. There is no problem with using ';' .. but I'm a bit of a perfectionist and it bugs me. The function goes roughly like this as: %Block Comments.. %-------------------------- function errplot=errorplot(varargin) %Interprets variable length list %Checks hold state and saves the value, turns hold on %h = a normal plot of x and y with appropriate line specification %gets the color of h %plots error over first plot with appropriate line spec %resets hold state to original value %errplot=gcf; end I have checked the code all the way through, any combination produces ans=1. Using 'keyboard' I have went through the entire code and ans=1 is produced AT the end-line as it is exiting the function. I cannot physically find a place in my code that I can use keyboard where ans has already been defined. No every ; is where it should be. If it wasn't, it would have been caught by the keyboard check.
The function goes roughly like this as: %Block Comments.. %-------------------------- function errplot=errorplot(varargin) %Interprets variable length list %Checks hold state and saves the value, turns hold on %h = a normal plot of x and y with appropriate line specification %gets the color of h %plots error over first plot with appropriate line spec %resets hold state to original value %errplot=gcf; end Sorry I'm not sure what you mean by a return argument. I remember hearing it before but I'm not a computer scientist. I kind of just learned MATLAB on my own time so I'm not fresh on the terminology. Are you suggesting making my function declaration as: function errplot=errorplot(varargin); rather than: function errplot=errorplot(varargin) Because when I do this, MATLAB tells me that the semicolon is redundant and prompts me to remove it. As for your 'bet', you win :P [Imgur](http://i.imgur.com/fIQK0cM.png) ... so what do you suggest?
I've posted some psudocode for other answers. I don't feel fully comfortable posting the entire thing until I fix a few last bugs. If I cannot resolve it without posting my code than I will then.
It has to be this line: %errplot=gcf; which I assume you don't have commented when you run the function? Your function call is errplot = errorplot(varargin) so calling your errorplot() without ";" is returning the value for errplot, regardless if you call the function mynewplot = errorplot('plotting arguments') errorplot('arbguments') without a ";"
Each time I create a new figure and start plotting on it, ans increments up by one. When I plot multiple plots on that figure it does not change. [One Figure](http://i.imgur.com/fIQK0cM.png) [Three Figures](http://i.imgur.com/7VdmYp6.png)
Awesome. So how do you suggest I get around that? 
I am pretty sure when you read from netCDF it will create a structrred variable that you can then query. Check out the built-in netcdf reading documentation. (I did it a very long time ago but haven't tried in 3 years)
Out of curiosity, why would use you git inside a dropbox folder. Isn't one of the ideas of git that you can push and pull? I use SVN for all of my matlab files. Actually, I always run matlab from the same folder and then I have a few functions to add the appropriate SVNed folders to my matlab path. It is very versatile and lets me keep just version controlled files in one folder and data, etc in the other.
Do you need the current figure number outside of the function? Can you get by with having no output: [] = errorplot(varargin)
actually now I have this code function [y] = legendre(n,x) if n == 0 y = 1 else n == 1 y= x for n=2:1:n; y= (n+1)*legendre(n+1,x)-((2*n)+1)*x*legendre(n-1,x); display(y) end end
If anyone has anything that would work that would be great. The error I'm getting is that the maximum recursion limit of 500 is reached 
Ya I think I got a work around using the low-level I/O - loads MUCH FASTER than the high-level I/O.
&gt;The error I'm getting is that the maximum recursion limit of 500 is reached Throw a while loop in there loopnum = 1; while loopnum &lt; 499 %do your recursion loopnum = loopnum + 1; end
1) can you draw on your own what the HW is asking? 2) do you know fourier series as a math construct? 3) we don't do HW here, we'll help you with errors. you'll get A LOT more help, or at least people willing to help, if you post some code (4 spaces to start a line formats it nicely)
You're probably best off using a database. If the data is read only (i.e. you never modify an existing vector), you may be able to use a directory. Create a hash of the vector, convert it to base64 or similar, and use that as the filename. This way you can do the same process to load the file, and there's little risk of two processes trying to write to the same file. 10,000 files will be pretty hard on your filesystem though (I'm not sure if NTFS can handle it, and file browsers definitely won't like it!).
I see. I'd like to ask questions then, do i need to make the following equations in fourier series by hand first before I can plot it on matlab? or can I directly come up with a program using the following equations?. Sorry I'm not really knowledgeable at matlab and this could help me get started.
&gt;How would that affect the figure after the function has finished? Would I still be able to modify it? I'm unsure of this. I would keep it how you have it for now (if you are able to modify a fig. outside of your errorplot() function) and just suppress the errorplot() call if you don't want anything displayed at the command line. I really only plot things and hold on, so further modifying is beyond what I'm familiar with (i'll just replot things, but they're always small, and for my own use). Hope you get things working the way you like them!
&gt; MATLAB code tricks, discussion, and questions; but we don't do your homework! 
Ah, yeah, that would cause problems for hashing (maybe you could round for the hash? Would fail if the vectors are very similar).
You'll need a database, probably. At minimum you need to have a semaphore, the ability to block, and a queue.
Thanks! When I get to a point where I'm comfortable with how it's working I'll post a link back on these answers so you lot can tinker with it as you please :)
Put 4 spaces before each line of code and we can read it better..
Will surf() work for what you want?
Sorry about that. I think I fixed it.
It is amazing how often you are not sure what your homework problems are asking. Although I have to give you props for posting a picture of a sheet of paper this time, rather than a picture of your monitor. Baby steps!
Putting your files in Dropbox (or any other cloud service) gets you the portability &amp; automatic backup that OP was looking for. It does not, however, get you version control, version history, branch merge, etc., which he was also looking for. Therefore git + cloud. Git alone will not give you convenience of opening the same working directory for Matlab each time, and cloud services alone will not have version control.
I don't totally understand the physics behind what you're modelling (chemical engineer here), but after a quick look through your code it looks like you're missing the first derivative. When you solve second order differential equations in MatLab you have to create a vector of derivatives. Each entry in the vector is interpreted as a first derivative. So if you want to solve a second order differential equation you have to let something like y1=v, y2=v', so that y1'=v'=y2, and y1''=y2'=v''. So for your function you have to write V=[v(2); (50000-P*v(1))/(E*I)] I assume that you're looking for the point at which the steady-state behavior of the system changes qualitatively (this is called a bifurcation point) based on the value of P (the parameter). In order to pass parameters into the function from the command window (or from a separate script), you have to change the function to function V = F(x,v,P) Then in your command window/other script you'll need to write something like f=@(x,v) F(x,v,P) The reason for that is that if you try to put a function of 3 variables into ode45 it'll get super angry and yell at you a bunch. So instead, you redefine the function after you're already defined a P. Now, I don't know what behavior of the system constitutes the beam buckling. But generally, to find what you're looking for, you'll need to set up an iterative procedure, where you define a P, solve the differential equation with that P (using the f=@(x,v) F(x,v,P) above), and then determine whether or not the beam buckled. If the beam didn't buckle, increase P by whatever your step size is, and solve again. Do that until the beam buckled. Hope that was clear enough. EDIT: To make the whole reduction of order thing a little more clear, it helps if you actually see the vectors. y=[y1] = [v ] [y2] [v'] y'=[y1' ] = [y2 ] = [v' ] [y1''] = [y2'] = [v''] EDIT 2: Note that in your ode45 call you have to write sol=ode45(@F, ...), not 'F'.
In MATLAB, function definition lines look like (in general): function [ out1 , ... , outN ] = Fn( in1 , ... , inM ) The variables named `in1` through `inM` are your function's "input arguments" (also called "input parameters"); the variables named `out1` through `outN` are your function's "output arguments" (also called "output parameters"). I believe the previous commenter is referring to the output parameters when they say "return argument". Your output argument, according to the function definition line that you've posted, is `errplot`.
The fact that `ans` increments by 1 for every open figure tells me that somewhere in your code you've put: errplot = gcf % or equivalent Even if you suppress (put `;` at the end of the line) your call to `errorplot`, you should notice `ans` incrementing (go back and look at the value of `ans` after each call). This is intended behavior. If you *don't* want to have any output returned when there's no explicit call... h = errorplot( ... ) % explicit call for output errorplot( ... ) % returns 1st output argument and stores in and as in the case above, you need to write this behavior into your function. Your function definition line should become: function varargout = errorplot( varargin ) and at the end of your function, you should include: if nargout &lt; 1 varargout = {} ; else varargout = { gcf } ; end
Can you help me with whit project http://redd.it/23zo6i ? It's about edge detection in an grayscale image. Thank you! 
Why are you using a gaussian filter mask ( F=[1,2,1;2,4,2; 1,2,1])? This just blurs the image and does not find large gradients. Also, you want to avoid looping through the whole image dimension (for loop over size(A) ). It is more efficient to loop over the mask dimension instead. Since this seems like a standard homework problem in one of the first computer vision (or similar) classes, I will not post a solution. The problem you are facing has nothing to do with Matlab but rather the understanding of convolution and what masks actually do.
Is there a reason you are manually coding the convolution and not using matlab's built in implementation? It's much more efficient than nested for loops.
Are the values in this matrix values that you defined yourself, or were they calculated by some means? If the numbers were calculated within the script somewhere you will very likely run into inaccuracy of the unique() function because of a loss of precision after a certain number of decimal points. A few weeks ago I was in a similar situation where I needed to find the unique solutions to a system of equations over a range of values of certain parameters. I used unique() to do this, but I had to round the solutions significantly because after a certain number of decimal places, the numbers were just junk, but MatLab (not incorrectly) considered numbers to be unequal, when analytical solutions would be the same. TL;DR: unique() works great as long as your numbers are properly rounded.
&gt; MATLAB code tricks, discussion, and questions; but we don't do your homework! It's in the sidebar...
If I were in your position I would email a prof in your area of interest that has research involved in numerical computing and tell him that you are looking for some experience this summer with Matlab. I have done this in the past and the prof set me up with a grad student who mentored me though the summer. I helped him code/debug and even though it wasn't paid I still got my name on a couple papers which helped immensely with internship and graduate school applications later on. 
Perhaps I'm misunderstanding, but since the file size is so small, why couldn't you just load the .mat file once at the start of each instance? Then each instance would have it's own local copy in memory. 
If you are into audio or DSP at all, going through the code in [DAFX] (http://www.music.mcgill.ca/~hockman/other/DAFX_book.pdf) is fun. I have found some mistakes in the code and it takes a little work to get it functioning in Matlab, but that is part of the fun. It can be a good launching board for some creative functions.
1. [conv2](http://www.mathworks.com/help/matlab/ref/conv2.html) is your friend. 2. Here is a hint to get you started. Think about how pixel intensities are represented in the two images. Look at max(A(:)) in the first image and in the camera man image. Are they the same? Should they be similar?
I would recommend do something where you can see direct result of what you are doing, like image or sound processing. Matlab actually has pretty good documentation on its different functionality. You can start here, for example: http://www.mathworks.se/help/images/examples/index.html and work your way through some example code that looks interesting. After you have got it to work and interested to learn further, you can research what the matlab functions do on a more algorithmic level and try to implement it with basic matlab functions yourself and learn things organically which otherwise can seem quite a bit harder if starting in a theory-heavy end, i.e basic course in signal processing or linear algebra/calculus.
&gt;so i'd like to know how i can write a function that will generate a list of random integers that varies in size (n=100/1000/10,000/etc..) and then have the list be sorted by integer value via aforementioned sorting alg. . &gt;not asking y'all to DO MY HOMEWORK per se. just want to know if im thinking about this correctly Don't see any thing that you've done, so can't say if your going in the right direction or not. Post some code (4 spaces starting a line formats it), an error, an *&lt;ghasp&gt;* idea of how you would do your algorithm on paper. You're right, we won't do your HW/project here, says so right over there in the side bar. Do you know these sort algorithms? Have you been introduced to them? Can you do one on paper?
[Here's a link](http://en.wikipedia.org/wiki/Sorting_algorithm) to a really some really great explanations of the various sorting algorithms you have mentioned.
Just thought I'd respond with a slightly generalized version that allows for a variable number of elements. N = 3; str = 'abcd'; varargin = repmat({str},1,N); ndgridoutput = varargin; [ndgridoutput{:}] = ndgrid(varargin{:}); strTemp = ''; for i = 1:N strTemp = [strTemp ndgridoutput{i}(:)]; end
Im at work right now so I can't post what im working with in ML thus far but I have a selection sort algorithm that takes a random integer list generator from another .m file and sorts it accordingly. When i get home tonight ill copy it into a reply for some feedback if you are willing to take a look at it 
Learn the optimization toolbox, specifically fmincon. First use it to solve trivial problems and then advance to more challenging n-dimensional problems. 
In addition to this, get a head start on your controls education by using simulink to design and analyze a controller. If you like MATLAB you will no doubt enjoy controls. Arguably it is the most rewarding engineering field.
Each instance would need to grow it and communicate that bit grew. And in (close to) real time. 
If the other vars don't change much after Xsec, then try and just plot them from 0:X. Alternatively, you could take diff(var) and use a threshold to stop plotting it (ie. take the var's derivitave and stop plotting it when it "stops changing", eg. if it was velocity, when the acceleration dips below 0.001 ms-2).
Nevermind, got it figured out. Thanks!
What did you do?
Not sure on exactly how your data is structured, but you may want to use "find" to determine the max and/or interesting parts of the thrust, pressure etc. Then plot from 0:that answer. I hope that helps. 
YES thank you! This worked perfectly! So could you explain why ans would increment after plotting on each figure? I could call multiple times but ans would only increment if it was plotting on a new figure. like figure errorplot(x1,y1,e1,...) %ans=1 errorplot(x2,y2,e2,...) %ans=1 errorplot(x3,y3,e3,...) %ans=1 figure errorplot(x4,y4,e4,...) %ans=2 errorplot(x5,y5,e5,...) %ans=2 figure errorplot(x6,y6,e6,...) %ans=3 etc... And why exactly did this work?
Look up cellfun() and string functions
Ya, I realized I shoulda talked about what I did. So essentially what is going on is that the pressure is dropping in the rocket until it reaches atmospheric pressure. Once it reaches atmospheric pressure, nothing interesting happens, so I wanted cut off the plot there. This point is also where thrust, mass bottoms out. The loop runs until velocity equals zero, which is after P = Pa. A further complication is that I wanted to be able to vary P since its an initial parameter, so I couldnt just find the arbitrary element in the array where P = Pa and graph to that point. So what I did is set up a separate counter, n, in the loop which stops when P = Pa. It ended up looking like: plot(P(1:n(1)),t(1:n(1))) I thought it was a pretty eloquent solution.
Beautiful. Got it. I feel like I just discovered a whole new world. 
What have you tried so far?
You can either do it analytically of you know the equations of the two plots (if f(x, y) and g(x, y) are your functions, find roots of f(x, y)-g(x, y)... Or use the Matlab find function to find the indices x and y at which the two functions are equal... 
[Plotted data](http://i.imgur.com/bczSLOp.png?1) There is no equation for the plotted data and the find function responds with 0-by-1 matrix if I ask for F = find(force(distance == 0 ))
polyval.
Very rarely will you get a floating point value that's exactly equal to 0. You need to incorporate a tolerance.
&gt;I can find the value from the plotted data by creating a line x = 0, and then clicking the intersection with the data cursor tool, however only calculated answers are accepted This is finding a root of a function. Say your x-values range from [-60 60] (as in your plot), but are not on a regular grid, are of unknown precision, and are unknown to the user. What you can do is: x1 = %your xvalues x2 = abs(x1); xthresh = 0.0001; xbelow = find(x2&lt;xthresh); These will find all your x-values that are within +/- 0.0001 of x=0. Now, you're still left with a problem of what happens if you have more than one value here (or none, in this case make your xthresh larger). If you order those xbelow values in ascending order, you could then pick the middle one. You could pick an average value. You could then check that xbelow vector (which might be considerably less sizable than x1) for when the signs of the x-values change. It really depends on how you want to formulate your problem. Can you describe what you want to do on paper? That's half the battle. As for (b), look into using polyfit(). As for your overall problem, since you don't have analytic functions for your data (its all just obs data), you aren't going to get an exact f(0) = ? value. You're going to have to implement some thresholds for x and prab some averaging for the y-values that get returned for how your finding those x's.
To look for the "closest point" to zero try [val,loc]=min(abs(distance))
Thanks!
Since you are reading actual data chances are they will intersect between two of your data points rather than at a specific point, so you can subtract one from the other to get a vector of the difference values. Then use a function like "(x[n-1]&gt;0 and x[n]&lt;=0) or (x[n-1]&lt;0 and x[n]&gt;=0)" in a for loop to get a vector with logical 1s at every zero crossing. Time scale the output by the sampling frequency of your data to get the time if needed, and multiply by one of the inputs to get the value.
Note that `cellfun` is basically a nice-looking for-loop for the most part. 
&gt;x1 = %your xvalues &gt;x2 = abs(x1); &gt;xthresh = 0.0001; &gt;xbelow = find(x2&lt;xthresh); thank you for your help! I couldn't solve the exact value, but with this method I got the closest 2 values that could be accepted. 
Yes, I can count them.. 1, 2, 3, 4... I think I count 32.. 
MatLab has a built in PDE solver called [pdepe](http://www.mathworks.com/help/matlab/ref/pdepe.html). Generally, you'll have to do some rearranging of your differential equation to get it into a form that pdepe understands, but in your case it isn't to hard. [; u(x,y) \frac{\partial v}{\partial x}= \frac{\partial}{\partial y}(N \frac{\partial v}{\partial y})-v \frac{\partial v}{\partial y} ;] (If this looks like a bunch of ridiculous stuff and not a neatly written PDE, you need a [LaTeX browser extension](https://chrome.google.com/webstore/detail/tex-the-world-for-chromiu/mbfninnbhfepghkkcgdnmfmhhbjmhggn).) In that equation as I rewrote it, you can pretty clearly see what c, f, and s are, going by the letters that the previous link uses.
&gt; I have 1000*2000 matrix each for X,Y,Z co-ordinate. Each row representing a line. This is very confusingly worded. List out all the matrices you have, and all their dimensions.
 plot3(X.',Y.',Z.') [plot](http://www.mathworks.de/de/help/matlab/ref/plot.html) and plot3 accept matrices as inputs, but each curve is represented by the columns of the input matrices X,Y,Z, hence the matrix transposes. From the link: &gt;plot(X,Y) ... &gt;... &gt;If X and Y are both matrices, then they must have equal size and MATLAB plots columns of Y versus columns of X.
There are three 1000 by 2000 matrices representing x,y and z co-ordinates of points. If you take a row with same indices from each these three matrices then they represent a line in 3d. It means that I have 1000 lines each represented by 2000 points. I need to plot such that I only connect points along a row. plot 3 doesn't seem to working.
The code contains a 'clear all' at the beginning, right at the beginning of the push button callback
Every rectangle has exactly one top-left corner, so convolve the image with [ 1 1 ; 1 0 ] and then sum( imConv(:) == 3 ) should give the result you're looking for. This is an idea I came up with off the top of my head, so my apologies if it doesn't work like I think it will. 
You have got the gradient of the line along the direction of the eigenvector corresponding to the largest eigenvalue wrong. To see this more clearly, try: % travel along the vector in +ive and -ive directions t = -5:0.1:5; x = V(1,2) * t; y = V(2,2) * t; plot(x,y) In fact, it looks like you took the rows of your V matrix as your eigenvectors when you should have taken the columns. Your V matrix is organized like this: V = [ x_1 x_2 ] [ y_1 y_2 ] Your eigenvectors are V(:,1) and V(:,2).
1) I didn't read through your code 2) I'm not going to read your HW/project 3) You might get a better response if you format your code (4 spaces before each line) 4) You'll get an *even* better response if you post an *actual* problem you're having in your code, not just your HW/project problem, asking for help with part 5. &gt;I just need some tips on what I'm supposed to do for the fifth part. Post what you're confused on, in a way that we won't have to read your assignment. Post an error that your code is giving. Post anything more direct, not just "help me, I'm confused - do my work" *Edit: this is the same HW/proj that you posted the same pdf of last time. And I'm sure I told you the same last time.....
I see what you mean. I didn't think of that. As far as I can tell, this complicates things to the point that my aim at an elegantly simple solution might be counterproductive. I'll ponder it for a bit and come back if I think of something, but I think the answer to your original question might be "no". I.e. You might have to do something annoyingly complicated and un-mathy to get this done unfortunately. 
Not my original question, just an observation I made in passing. It is a very good start though. I would extend your idea to include the four variants of your mask (detecting all turn directions). Those can be used as nodes in a cleverly constructed directed graph which can then be searched to find all possible rectangular routes. Far from a simple algorithm to implement, but easy to brain storm. There are numerous ways to solve that search as well. Quite a fun exercise. I think I'll add it to my 'rainy day' tinkering list.
Finals, amirite
/r/shittyprogramming
The type of corner is important, your convolution idea makes finding them extremely simple. I'm envisioning a directed graph with a search starting from each corner. You can make three right turns (or four left, largely irrelevant). If that puts you back at the start you have a rectangle. If not, toss it out. Prune out duplicates at the end. Extremely naive and inefficient, but it seems feasible. Can probably be more clever with starting point selection to remove some duplicated work.
edit: I found a way around that, Hey, I'm having a little trouble. I looked up some videos too, but the issue I have is that u(x,y) is an array which I have been previously accessing by indices, and not an analytic function of x,y. Is this a problem? 
Doing a flow analysis?
1.) when looking at my code on a computer, it is extremely neat and formatted. 2.) part five is the fifth problem, the very last problem. It's not a vague question at all, I just asked for some tips. I didn't ask you to write my code for me. I don't understand the need to act so rudely on a forum dedicated to working with a certain programming language. The question I had is numbered and I specifically said what I was having an issue with. I'm sorry that I didn't format it perfectly to your elitist taste. If you don't want to help, than don't even bother commenting and acting rude and condescending. 
You are on the right track. Most of the text i/o commands have arguments for how many times to apply a text pattern or how many elements to read in. You already snagged the 9x9 portion, just throw in another similar loop to get the 9x1 part. While not the optimal solution, it will work. 
how can i start a loop at line 11 so i can skip the ones ive already done for i=11:nsize ? and do i need another variable besides nsize. 
I would just use logical indexing. As in your example: a=0:10; b=7; c=a(a&lt;b); d=a(a&gt;=b); This yields: c = 0 1 2 3 4 5 6 d = 7 8 9 10
How would the user be able to change to coordinates of the plot? edit: Also when I use imread, enormous amounts of numbers start to appear on the matlab screen. I don't know if it's because of how big the image is or what. Is there another command that can be used to quickly load the image?
You don't need bsxfun. You can just do: array-constant
Judging by the file contents you have here, my guess is that the first line's number gives you N. You then have an NxN matrix followed by an Nx1 array. To read in the vector, you could use a for loop. If you want to skip over the matrix part, you could do: for iskip = 1:N+1 skip = fgetl(); end And now you're at the start of your Nx1 vector.
http://www.mathworks.com/help/matlab/ref/is.html
Your place in the file is saved as you go, just keep reading. And on the topic of 'just reading' I would highly recommend you peruse this glorious thing called 'The Documentation' where all this is explained ;) Talk yourself through what you've done and what you need to do. You know all the pieces. Now it is just a matter of cobbling them together.
Regarding the imread output, don't forget to include a semicolon (;) at the end of a line to suppress its output. And just to clarify, how would you like to "change the coordinates of the plot?"? Are you trying to change the coordinates of the line? If so, this should hopefully clarify the basic plot syntax: A = imread('onion.png'); imshow(A); hold on originX = 0; originY = 0; endX = size(A,2); endY = size(A,1); plot([originX endX] , [originY endY]);
youarerite
DSP HW?
You are right, I don't why I thought you couldn't at the time I wrote my comment.
 figure(1) hold on for ipt = 1:npts plot(x(1:ipt),y(1:ipt),'*-') end Now, this will re-draw the line each iteration instead of just appending the last point (which would be another way to do this). Just what I think of quickly on lunch.
Not mind readers, need the code.
That was it thanks so much
&gt; but it seems that the problem is isolated in the actual linspace function While possible, it's not really likely. I don't have MATLAB on this machine, but you can try entering 'dbstop if error' ([see documentation](http://www.mathworks.com/help/matlab/ref/dbstop.html)) prior to running your script and then give us the lengths of H and Ny. I'm inclined to guess it's a problem with your globals.
No problem. The error codes go in an order (either from the function that broke out to your script your wrote, or the other way), and can be deciphered as such: &gt;Error using .* Matrix dimensions must agree. You've got a matrix dim error, *THIS* is your #1 error. &gt;Error in linspace (line 31) y = d1 + (0:n1).*(d2 - d1)/n1; The error is occuring in this function at this line. &gt;Error in BaseCase (line 73) Y=linspace(0,H,Ny); But you're calling the function that is error-ing from this function/script at this location. So, you've got your matrix dim mismatch coming from BaseCase when you call linspace(). First thing, check your inputs here. Glad to help :)
The problem I have with this method is that the hold off removes all the data and formatting from the figure, including the line I would like to keep, unlike in the video you linked
This doesn't seem to work for me as it just draws the points but there's no distinction between the line and the latest point on the line
When I tried this I managed to get a single point (two points on top of each other actually) to move on the graph but the other point didn't "leave a trail" which is what I'm trying to go for EDIT: Nevermind I got it now and it works, thank you very much!
then try: for ipt = 2:npts plot(x(1:ipt-1),y(1:ipt-1),'*-b') plot(x(ipt),y(ipt),'*r') end 
Because, depending on the data set, it's plotting the whole loop in about a quarter of a second. You either need to add in a pause or use the videowriter class to make a video like I said. Or just use [comet\(\)](http://www.mathworks.com/help/matlab/ref/comet.html). The loop I came up with does the exact same thing, I just didn't know comet existed when I made it.
TIL (just like you) comet() existed. Thanks!
sidebar: &gt;but we don't do your homework! Try the problem, post some of your code and an error where you get stuck, and you'll get more people willing to help.
I would second this, and also add that a common courtesy to at least rotate images right-side-up, especially when asking for help.
Found them: http://imgur.com/evJZNyn.jpg
You can try updating your plotted data inside the loop instead of replotting the whole thing. Here is some sample code: % Dynamic Plotting clear all; close all; % Plot NaN to have a handle for the plotted data so you can update it later h = plot(NaN,NaN,'-*'); x = 1:10; y = 1; for i=1:10 % Update x,y data inside the loop set(h,'XData',x(1:i)) set(h,'YData',y) y = [y 2*y(i)]; pause(1) end
I tried to replicate your error with a simple function but wasn't successful. Can you provide more detail or the matlab error you get verbatim? Here is how I tried to replicate it btw: % Link: http://www.reddit.com/r/matlab/comments/24b3bw/parfor_setting_multidimensional_arrays/ function [val] = multidim niter = 1e1; val = zeros(niter,3); parfor i = 1:niter val(i,:) = some_fun(i); end end % Function returns 3-vector function [y] = some_fun(x) y = [x; x; x]; end
I usually store the output of a parfor iteration in a cell array so the indexing of the output is as simple as possible (just index the cell array with the iterator). Then you can convert to multidimensional array with cell2mat, do any other manipulations with cellfun etc. val = cell(niter,1); parfor i = 1:niter val{i} = some_post_proc_values(); end val = cell2mat(val);
look into the "hold on" "hold off" functions also if you wanna zoom on the graph, you have to use linkaxes command
That is basically the entire reason MATLAB exists...
example... figure(1) plot(...) hold on plot(...) hold on plot(...) hold off linkaxes(x,'x'); or plot(X,Y,'y-',X,Y,'go') 
I figured, I just wanted to make sure before investing a lot of time and realizing something wasn't going to work out like I planned. Thanks!
If you have an algorithm for solving for x1 x2... from fixed y1 y2... and you'd like to do this computation repeatedly, then yes. matlab is great, at least for me, for basic computation as well
http://www.mathworks.com/help/symbolic/solve.html#btrxshj-1 check this out and yes this is what matlab was made for. just set up yn = f(xn) for every n you want to solve sore answer in vector and then sum that vector 
I had seen this in my initial search, but this is information for just a true system of equations, right? In my case, x1, x2, x3 can all be solved from their one individual equation. Either way, I'll check it out when I'm at work tomorrow and have MATLAB in front of me. Thanks! Edit: Nvm, I see what you're saying down below. I'll try it tomorrow. :)
Look at the "Solve Univariate Equations" example on this page. This is exactly what you are looking for. 
I suggest (assuming p longer than 80 chars, which you could check): updatedstring=[]; for index=1:80:(length(p)-80) a = sprintf( '%s\n', p(index:(index+79)) ); updatedstring = [updatedstring a]; end a = sprintf('%s\n',p((index+80):end)); updatedstring = [updatedstring a]; 
I realize you asked for an explanation. First off, the reason this is better is it is more vectorized and therefore faster. The second inefficiency is that you are computing mods and comparisons at every character in the string. Also note length(p(1:i)) in your code is equal to i. So more inefficiency. Finally, you are just resetting updatedstring at the last line of each loop, so you are not accumulating the string properly. If you study my solution versus your own, you should see the improvements.
For a minor improvement, you can change the two lines that look like a = sprintf('%s\n',p((index+80):end)); updatedstring = [updatedstring a]; into a single line: updatedstring = sprintf('%s%s\n', updatedstring, p((index+80):end)); For a more substantial improvement (that misses the point of the question entirely), you could replace all of that code with a single line: updatedstring=regexprep(p,'.{80}','$0\n'); 
Thanks! This script is much cleaner than mine, maybe I was over thinking it. However, there was an issue with the initial string p already having breaks within it, so that was fixed. I never thought about changing the index like that. (for some reason I forgot about making spaces in between values by using the extra colon operator). Usually when I attempted increasing the index within for loop, I would exceed the index dimensions, but this solution fixes it well. Thanks! Is there a reason you use +79 when doing the first sprintf command?
[; U∞ \frac{\partial v}{\partial x}= \frac{\partial}{\partial y}(N \frac{\partial v}{\partial y})-v \frac{\partial v}{\partial y} ;] 
Thanks for the help!
Thanks. Yeah my professor actually listed that second link you put for help. I was just confused on how it was evenly spaced like that and how he set up more than 2
What you request, as many said is the symbolic math toolkit, however this toolkit it‘s not a default of matlab, and it‘s expensive. Anyway mathematica it‘s far way better in this field. If not great free(and even more advanced) alternatives exist you can use python with sympy (protip, if you check python check scipy too) . Anyway if it‘s just for a casual use wolframalpha.com
You can use sort() to sort your first column and store the order in an index array. Then access the rows of your original matrix with the index array and save that in a new matrix. For example: clc; clear all; close all; v = floor(8*rand(5,10)); [m,i] = sort(v(:,1)); %sort the first column from smallest to largest v_sorted = v(i,:);
Try this one, start here: help sortrows
I work on a science and tech campus - we have mathematica as well. I'll check out the toolkit though. 
I want to make a surf() plot from the points. As far I only have a while loops which prompts for the points like this: while(1) pontok=[1,1,1]; m=input('points: ','s') if m=='n' break end end 
&gt; User matuba has written a nice explanation of why you SHOULD NOT use the method given by me and how it should be done if you are not lazy: http://www.reddit.com/r/matlab/comments/223244/quick_question_about_vector/cgj2ybh I **KNEW** that would be my thread with him, lol. Joking aside, I am doubtful this method will work, I just tried this (without the while loop and input prompt): coord = [1,2,3;4,5,6]; coord(3,:) = 'n'; To which I get: 1 2 3 4 5 6 110 110 110 I'm suspecting that 'n' is the equivilent of 110 in the ASCII &gt; number conversion? Just a guess. At any rate, putting 'n' directly into the array doesn't work, nor did it do what I expected it to (produce an error about mixing data types). Also, " if coordinates=='n' " would (in my guess), produce an error because it's going through all of the coordinates array and not just checking the very last entry. OP, I would try something like: UIN = '1'; while isa(UIN,'double') UIN = input('enter x,y,z: ') if UIN == 'n' break else points(end+1,:) = UIN; end end 
On my phone, so I apologise if the formatting is off. list = [] ; %loop through these, setting up newCoords each time however you normally do it newCoords = [a, b, c] ; list = [list; newCoords] ; It makes an empty array, then every iteration appends to the bottom of that array. However, this is bad to do in matlab, because of the way it manages memory. So instead, create an array which has 3 columns *lots* of rows (more than you think you could possibly need), then fill them iteratively, then remove the trailing rows. 
It actually doesn't seem like he needs the symbolic tookit, as he wants to define the values of all of his variables other than the one he is solving for. 
What can I say, the guy wrote it down quite nicely! You are right, I made a teeny tiny mistake in my code: if coordinates(end,:)=='n' coordinates(end,:)=[]; break end This checks only the last line for n (or 110) and removes that line before breaking the while loop. 
hmmmm. Your code does seem to work for me. Let me give you a better example function [val1,val2,val3] = bla_code niter = 1e1; val1 = zeros(2.*niter,3); val2 = zeros(2.*niter,3); val3 = zeros(2.*niter,3); val4 = zeros(2.*niter,3); %-------------------------------------- Works: for i = 1:niter val1([i niter+i],:) = [some_fun(i);some_fun(i)]; end %-------------------------------------- Works: parfor i = 1:niter val2_tmp = zeros(2.*niter,3); val2_tmp([i niter+i],:) = [some_fun(i);some_fun(i)]; val2 = val2 + val2_tmp; end %-------------------------------------- Fails: parfor i = 1:niter val3([i niter+i],:) = [some_fun(i);some_fun(i)]; end %-------------------------------------- Fails: parfor i = 1:niter val4([i niter+i],:) = val4([i niter+i],:) + [some_fun(i);some_fun(i)]; end end % Function returns 3-vector function [y] = some_fun(x) y = [x x x]; end In the above example, `val` is written without parfor and works. `val2` uses the method I mentioned originally. `val3` uses the same as `val1` and fails even though *no index is ever overwritten*. Finally, `val4` explicitly makes it look like a reduction variable. Thoughts?
That's an interesting idea. I am not sure how Matlab handles cell arrays in a parfor from a memory standpoint. Also, this won't *always* fit the bill but worth using at times.
Well, what happens when the user enters [110 110 110] as a legitimate coordinate then?
Just gotta try and look out for everything! Ideally, there would be several checks to see if they put in one number, 3 numbers, N numbers, numbers as ##,##,## , [##,##,##], or 'fuck', 'this', 'shit' 
I don't think it's an infinite loop. I think MATLAB is trying to print the entire [580 x 580] `theta` matrix at each iteration of the loop because the output hasn't been suppressed by a semicolon, and that displaying that matrix 580 times is very time consuming. I also suspect that you didn't mean to make `theta` a [580 x 580] matrix with the command theta = zeros(580); and instead you probably wanted theta = zeros(580, 1); or theta = zeros(1, 580);
so y is a parameter,with the sym aproach you could calculate the solution as function of y . Anyaway not optimal.but matlab could work
Very true. Just tried some test using abcd = input('coords: ')... both "1 2 3" and "1,2,3" and "1, 2, 3" all spit Error: Unexpected MATLAB expression. The only way I got coords passed in was " [1, 2, 3]" .... finikey to say the least
Ahhh yes, it is definitely not supposed to be a 580x580 matrix. I didn't have a semicolon because I wanted to see if it was changing anything. Thank you!
Just FYI. distance = 60:0.5:350; theta = atan(210./distance) - atan(150./distance); This completes the computation without a for loop. 
No problem. The +79 is due to the fact that x(index:secondIndex) is inclusive at the boundaries. So there are secondIndex-index+1 elements in such a vector. Therefore if you want 80 elements in a vector, you should index it from startIndex to startIndex+80-1.
Unfortunately, it looks like what you are trying to do is not possible. val3 and val4 are [sliced output variables](http://www.mathworks.de/de/help/distcomp/advanced-topics.html#bq_tcng-1) and the loop variable can only appear in the index once. /u/thrope and [this tutorial](http://blogs.mathworks.com/loren/2009/10/02/using-parfor-loops-getting-up-and-running/) mention cells as an alternative to reduction variables. If you want to avoid both, you will have to rewrite some parts of your code, which would be trivial for the example code but probably not so for your code. Maybe someone else has a more clever solution but I can't think of anything. 
This is the correct solution. Loops should only be used when necessary; while 580 values is not that many you could easily run into problems with larger datasets, so you should be comfortable with the high-level indexing that Matlab allows. It's orders of magnitude faster, as well as being much less prone to unexpected results like the one you encountered. 
/u/TheDefinition got it right [here](http://www.reddit.com/r/matlab/comments/24dik8/cant_get_this_for_loop_to_work/ch62wn9); but as an aside when you're debugging a loop it can be helpful to have matlab print the index to the command window so you can see how (or if) it's progressing. I have certainly accidentally written loops that never went anywhere. In your case you'd have been able to see your variable 'counter' going up, so you'd have known that it was running, just really really slowly. Other more sophisticated tricks include using a waitbar: if floor (counter/100) == counter/100 waitbar(counter/580) end I usually will trap the waitbar in an if statement that makes it only execute a small fraction of the time, since refreshing it takes a significant chunk of your processing time. In your case it'll be insignificant but what works for 500 values can become a problem if you have 500,000, say. Or if you want to see how long a particular chunk of code is taking: time = now %date number of the current clock time &lt;time intensive code&gt; disp((now - time) * 24 * 60 * 60) % display the difference between the original clock time and the current time in seconds We've all written code that took thousands of times longer to run than it needed to, so don't sweat it, but these tools can help a lot. And you've got preallocation down so that's great!
&gt;Or if you want to see how long a particular chunk of code is taking: You should use `tic` and `toc` when checking execution times. tic &lt;time intensive code&gt; toc
Thank you, exactly what I've needed.
It works fine for me in Linux mint. What version are you using? 
ubuntu 13.10
screen cap? 
Yes you can! Use a set of chatacters before or after the value as an identifier. Check out MATLAB [Trendy](http://www.mathworks.com/matlabcentral/trendy) to learn how to do this.
http://www.mathworks.com/help/matlab/ref/var.html http://www.mathworks.com/help/matlab/ref/cov.html
First you need to make sure a and b are in your working folder or your [MATLAB path](http://www.mathworks.com/help/matlab/matlab_env/what-is-the-matlab-search-path.html), then you can call them like you would any other function. [output1,output2] = xyz(input) output1 = a(a_input); output2 = b(b_input); end See also MATLAB's [calling priorities](http://www.mathworks.com/matlabcentral/answers/99447-what-is-the-calling-priority-for-matlab-functions).
Read the documentation? Unless you're more specific, no one is going to be able to help. 
Read the examples in [the documentation](http://www.mathworks.com/help/matlab/ref/uigetfile.html).
[RTFM](http://www.mathworks.com/help/matlab/ref/uigetfile.html)
Please be more specific 
*Do what??!*
There are a number of ways you can do this, depending on how your data is formatted. How are you uploading the data? What does the "big string" look like? 
Yep I did this and it worked. I've been working with C for a few months now and I don't know if I like all the high level stuff matlab offers. Thanks again!
You will come to love it!
It really depends on what you mean by "solve for x". If you are looking for a numerical solution for those equations then you can certainly use matlab to whip out a quick solver. If, instead, you are looking for analytical solutions then you should look into symbolic math software, such as Mathematica, or free alternatives such as Maxima. From your description, it sounds like this is what you are looking for.
You're really going to need to reformat your code. Not trying to be rude, but you've got a lot of code and its rather difficult to look at. 4 spaces starting each line will format it nicely
I meant numerically. Everything ended up working out great. I was able to sit down for a few hours yesterday, look up the things I'd need to know and write a short little program to do what I wanted. It ended up being fairly straightforward.
Just put the comma in your format string. '%d, %d, %d, %d, %d, %d, %f' I will also say that textscan is the preferred file I/O, as it's a bit faster, but it would require a little extra work for your case.
This code would take each 10x10 region, get an average value, and put that value into the new, smaller matrix called "output". A jpeg will be 3 dimensional RGB data, and I'm guessing you'll want to average the data by color and then recombine, not sure. Here's a shot at least. output=zeros(204,153); for n=1:204; for m=1:153; for o=1:3; output(n,m,o)=mean(mean(data((n-1)*10+1:n*10,(m-1)*10+1:m*10),o)); end; end; end; image(output) If you want 10x5 size, just adjust the m values to m=1:206 and (m-1)*5+1:m*5, but this will warp the image.
Mat2cell should do it just fine, and then you can take the average (which is one of the norms, check some math website) of every cell, which will be what you need. Should take a few steps only. One thing you need to make sure is that your image size (say HxW) is divisible by 10x5, or else you need to pad, and padding might mess with your averaging
Or as the other user said, you could use mean to get the average, just do this to every cell, and then overwrite the cell with the value of the mean (:
Mat2cell could do it, but wouldn't I need to sit there and type out how many arguments are going into it? If my original array is huge, and I want A SHIT TON of smaller arrays, wouldn't the argument for mat2cell be long as hell?
But say if I have a 4x4 matrix and I want to break that up into 4 2x2 matrices. By what you said above the syntax would read 'c = mat2cell(a, [2, 2])' But that outputs 2 2x4 matrices. Am I understanding you wrong?
Of course I figured it out ten minutes after I posted the question. c1 = {1, 2, [], 4, []}; c2 = {[], [], 3, [], 5}; f = cellfun(@isempty,c1); c1(f)=c2(f) c1 = [1] [2] [3] [4] [5] 
I usually use NaNs for missing data and use regular arrays, if that's the point. It makes computations quicker and easier to code. 
What is the error you get? Also, I don't think you're using drawnow correctly, but I could be mistaken as I've never used it. Check the example in the documentation.
I am not necessarily getting an error, the problem I have is when I run my code, I have been able to plot the numerical solution at each time step, but when attempting to do the same for my approximation, it just comes up with a flat line that moves around or it just takes the shape it should at the final time t, when really it should overlap with my numerical solution for each time step.
However, variance and covariance are so simple to compute manually. Example: ownvar = @(x) sqrt(sum(bsxfun(@minus,x, mean(x)).^2))
Right, but that isn't an option unless you have some code to turn the cell arrays I described into vectors with NaNs. I've got a third party function that's spitting out the cell arrays.
 Cell = {1, [], 4, [], []}; EmptyInds = cellfun(@isempty, Cell); Cell(EmptyInds) = num2cell(NaN(1,sum(EmptyInds(:)))); Array = cell2mat(Cell); Yeah, I wish it was easier than that. Cells sometimes are annoying. 
This doesn't surprise me. If you want to loop over your elements and are adding an element and its next neighbor, you loop as for i = 1:length-1 I would not be surprised that MATLAB also returns a 5 element array as Octave would.
http://www.mathworks.com/help/matlab/matlab_prog/operator-precedence.html &gt; &gt; 1. Parentheses () &gt; 2. Transpose (.'), power (.\^), complex conjugate transpose ('), matrix power (\^) &gt; 3. Unary plus (+), unary minus (-), logical negation (~) &gt; 4. Multiplication (.\*), right division (./), left division (.\\), matrix multiplication (\*), matrix right division (/), matrix left division (\) &gt; 5. Addition (+), subtraction (-) &gt; 6. Colon operator (:) &gt; 7. Less than (&lt;), less than or equal to (&lt;=), greater than (&gt;), greater than or equal to (&gt;=), equal to (==), not equal to (~=) &gt; 8. Element-wise AND (&amp;) &gt; 9. Element-wise OR (|) &gt; 10. Short-circuit AND (&amp;&amp;) &gt; 11. Short-circuit OR (||)
http://www.mathworks.com/help/matlab/matlab_prog/operator-precedence.html Subtraction precedes colon. It is working exactly as intended and documented.
Put 4 spaces before each line of code to format it properly or use an external service like pastebin. [Work with breakpoints](http://www.mathworks.com/help/matlab/matlab_prog/debugging-process-and-features.html#brqxeeu-182). Step through your code to see what is happening at each iteration.
He's confusing order of operations. `-` has higher precidence than `:`, but if it were the other way around `(0:5)-1` would give you -1, 0, 1, 2, 3, 4.
Thank you, sorry was having trouble formatting this post. It's one of my first... if not my first!
Argh I figured it out Reddit. I was finding the Riemann sum of my already integrated function F(x) instead of the original function f(x). I was really tired last night when I was trying this. Sorry all!
&gt; 8. Element-wise AND (&amp;) &gt; 9. Element-wise OR (|) &gt; 10. Short-circuit AND (&amp;&amp;) &gt; 11. Short-circuit OR (||) Seems like a really bad idea to be able to write, e.g., `1 | 0 &amp;&amp; 0` and have the element-wise OR precede the AND. 
You need to get a good book from the library. There are probably any number of texts that cover this, but I can suggest Geankopolis "Transport Processes" and Patankat "Numerical Heat and Mass Transfer". Both cover that exact problem. 
But when I run a script file in another function it wouldn't save the output. If I use another sub-function which requires output of previous function as input then it gives ??? Undefined function or variable . error. please help!
I'd probably start by getting a taylor series expansion for u(t+Δt,x) in terms of ∂u/∂t, i.e. partial deritives with respect to u. You can ignore the terms after ∂u/∂t because they're much smaller. I'd then do the same thing for ∂^2 u/∂^2 x. For that one you need to cancel the ∂u/∂t term, so expand for u(t,x+Δx) and u(t,x-Δx). If you then subtract one from the other it will cancel (it might be add). Rearrange both those equations into the form ∂u/∂t =, then substitute them back into the first equation. You might find it helpful to change the notation of u(t,x). I'd make it a subscript and superscript form of some sort. Finally, you should then be able to rearrange the first equation for u(t+Δt, x) =... So now we have u at Δt after t, in terms of the previous timestep values, u(t,x). The x values will represent the position of that point, for example on a straight line x-Δx could be left of the point we're looking at, and x+Δx could be right. Hopefully that's made some small amount of sense although I'm not entirely sure if it will have done. I can't give a great deal of help on coding it, suffice to say that you'll probably need some kind of matrix of points at each timestep, and something iterative to solve. Also, this is quite a basic method for solving a problem like this, there are more efficient methods, more accurate ones and more stable ones. If you choose a timestep Δt that is too great, this solution will become unstable. Source: Mech Eng student - I can tell myself that I'm revising by typing this all out
If you take out the du/dt term, you have a steady-state equation with a second-order partial differential equation. One way to solve this is by applying finite-difference discretization to the spatial domain. You first discretize the spatial domain into "i" nodes. The second-derivative term is replaced by (u_{i+1} - 2u_{i} + u{i-1}) / h^2 where { } denotes the spatial node index, u is the solution at spatial node { } and h is the distance between nodes. If we put the du/dt term back in, it is now a time-dependent problem. The most common way to discretize the time-domain is using an explicit finite-difference method that solves the solution at the new time step using the solution from the old time step. Lets start by discretizing our time domain into "j" discrete times. The du/dt term is then replaced by (u_{i}_{{j+1}} - u_{i}_{{j}}) / k where { } is the spatial node index, {{ }} is the time node index and k is the span between discrete times. The above two equations fully discretizes your equation into: (u_{i}_{{j+1}} - u_{i}_{{j}}) / k = 1 + (u_{i+1}_{{j}} - 2u_{i}_{{j}} + u{i-1}_{{j}}) / h^2 We note that the only unknown in the above equation is u_{i}_{{j+1}} since the solution at the previous time step should be known (the solution at {{0}} is simply your initial condition). You can rearrange the above equation as: u_{i}_{{j+1}} = k + k* (u_{i+1}_{{j}} - 2u_{i}_{{j}} + u{i-1}_{{j}}) / h^2 + u_{i}_{{j}} In matlab all you have to do now is make an outer loop that marches through each time step {{j}} and an inner loop that marches through each spatial node {j}.
Seems weird, yeah. I would just vectorize that code so both assignments happen at once: C([2 1], [1 2]) = Cxy; Guy at StackOverflow talked about logical indexing. I don't think it matters at these small matrix sizes. 
I would code it like this: Chops = 80:80:length(String)-1; for Chop = fliplr(Chops) % loop the string backwards, so the index doesn't mess up after one update String = [String(1:Chop) '\n' String(Chop+1:end)]; end
To get your variables upated between your callbacks you have to use [guidata](http://www.mathworks.es/es/help/matlab/ref/guidata.html). There are plenty of examples at www.mathworks.com edit: you can use the already present 'handles' by setting variables like handles.MyVariable = Whatever; and then get it updated at the end of the callback with guidata(hObject,handles) 
By defining the variable. Each callback in a MATLAB GUI only exists in its [own scope](http://www.mathworks.com/help/matlab/matlab_prog/base-and-function-workspaces.html). Assuming you're using a GUIDE GUI, all your pushbutton knows is your handle structure and some information on how the callback was invoked. Any variable you define in one pushbutton callback will be thrown out as soon as the callback is finished executing unless you store the data or use globals. See MATLAB's documentation on [sharing data among callbacks](http://www.mathworks.com/help/matlab/creating_guis/share-data-among-callbacks.html), specifically the sections on Application Data, UserData, and guidata. Please don't use globals, they cause far more problems than they solve.
Do you expect us to dig through an entire toolbox to find the one tiny bit of code you might be talking about?
No. I just thought there may be that information somewhere, which I currently can't find and someone may already know... 
You may also want to change the YTickLabel property, but the code to do it is: set(gca,'YTick',Y)
For any variable inside one of your GUI's functions that you want to use in other functions in your GUI you can use: setappdata(handle,'savedVariableName',variableName); Note: "handle" is one of your figure handles (or 0) -- this is where your variable is saved to. Then in the other function you can load the variables using: variableName = getappdata(handle,'savedVariableName'); where "handle" is the figure handle (or 0) where you saved your variable to. You can use the same variable name and save it to different elements in your GUI using their various handles. ^edit: ^format
Pcg, as was mentioned is an iterative solver. You don't really use it to find the minimum of a function, but you use it to find min||Ax-b||, which should be zero because CG requires A do be symmetric and positive definite. 
No, do your own work. If you're doing your final for a MATLAB course and you don't know how to use MATLAB you deserve to fail.
 disp(char([68 111 110 39 116 32 99 104 101 97 116]));
Honestly, I knew only about half those words :/ Whats ||Ax-b|| and CG?
||x|| for a vector x is a norm. It's essentially a measurement of the vector, in some sense. There are many different kinds. CG is conjugate gradients, it's pcg but without a preconditioner (which is a low cost approximate inverse of A). But since all this means nothing, it sounds to me like the assignment isn't really right.
Sidebar: &gt;MATLAB code tricks, **discussion, and questions**; but **we don't do your homework!** Try some code, post it here (4 spaces starting a line formats it nicely), and an error message you get. We're not going to do your HW/proj, nor can we read your mind. Attempting *something* will get better and more helpful responses.
I'll write it up for $100 USD. Seriously. PM if interested. 
You should probably not... (a) Be a cheater (b) Be an annoying cunt in your title.
http://lorenabarba.com/blog/cfd-python-12-steps-to-navier-stokes/ If you follow this coding tutorial I'm sure you would be able to apply what you learn to many different pde equations.
Also want to add that there are youtube videos covering the same material. That might set the stage more quickly for you from a coding standpoint
The conjugate gradient may be used to find solutions to linear systems of equations, but it does so by minimizing an error function. In it's essense, CG is a hill-climbing method, thus an optimization method.
No. Get this out of here. We are not labor for lazy college students to hire.
Could you change your formatting? (using 4 spaces in front of each line of code makes it a lot more readable :) ). like this. Furthermore, write down for yourself (and as an added bonus for us) what you exactly want to achieve. Go through the steps you want to do by hand. After that is done you can easily convert it to Matlab code.
Usually the loss function is quadratic in the nonlinear case too. In the system identification toolbox, it is a robustified quadratic loss function which becomes linear after a certain level; this reduces the impact of outliers. Looking through the source code, it seems the final function called is nlinfit. See here: http://www.mathworks.se/help/stats/nlinfit.html?searchHighlight=nlinfit
&gt;I try to include my calculation of the E-field I am pretty sure I created an infinite loop, but I'm not sure where it came from. For the loop(s) you suspect are infinite, add in a few lines that count the number of loops.
Have you tried profile viewer to see where your time is being eaten up? profile on { ... do stuff ... } profile viewer 
Do u need to export 3D objects? I used meshlab for that. U can export from blender To meshlab and from meshlab to vrworlds. 
I have yet to find a good one, but as of R2014a there is a function to convert .STL files to .WRL (VRML) in matlab. SimMechanics is an option for visualizing simulink models, but they still haven't added lighting effects or anti-aliasing.
Aah i used the matlab's own world editor.. Was a pain to use but I haven't used any other softwares so I can't really say... Good luck...
Thanks, stl2vrml is very useful for creating vrml 3d models, but world editing is what my major concern is.
Do you not have the curve fitting toolbox? You can solve crazy nonlinear stuff using custom equations. type cftool in the command line EDIT: So I'm not condoning that every nonlinear problem should immediately be thrown into the curve fitting algorithms in matlab without any inspection whatsoever. Nonlinear least squares fitting has a few problems in general that prevent convergence. You need to find good initial conditions, and add enough iterations. The equation ln(y)=ln(a)+bx^c that gyp_casino mentioned definitely allow you to find the appropriate initial conditions better.
I'm still a bit confused of what you want to achieve when looking at your code. What does your output have to look like for example if x=3, because now I don't see any matrix with 3 columns.. And seriously: write it down! Just grab a piece of paper and write step by step what you want to do. Programming is more than just randomly typing stuff and hope you get the right result.
Dude! are you seriously reposting exactly the same question just because you don't get an answer quick enough or because nobody gives you an instant answer? http://www.reddit.com/r/matlab/comments/24mapc/i_need_some_help/ 
It's been a while since I did any linearization by hand so I could be wrong but isn't it simply: Y=f(x) with Y=ln(y/a)^(1/c) f(x) = b^(1/c)*x Or am I skipping a thinking step here? Either way, as pt2091 mentioned the curve fitting toolbox can be your friend for almost any situation. (though I usually prefer solving things by hand/mathematically but that's just me). 
It always helps if you use the letters they pick out. Also, since you HAVE to use whole integers you can setup your problem such that a and b are always less than x. a = 1:x-1 b = 1:x-1 Afterwards you don't even need re-shape with the logical indexing.
Use fzero to find non-linear roots: phi = fzero(@(phi) Phi/(1-Phi)3 - He/16800, phi0) Where phi0 is the initial guess. If you need to change He just put the whole thing in a loop.
The hold command lets the current axis to wait for more plots. The drawnow command updates a figure during a loop.
Might be better to use the print preview option from the GUI, I found the print command doesn't always behave as expected.
Do not use the curve fitting toolbox. There are too many unknowns in this problem to use brute force fitting; better to use your brain to simplify the problem first. The x^c part is stumping me a little bit too. I would put the equation in the form ln(y)=ln(a)+bx^c. Try a few guesses for c. For each guess, plot ln(y) versus x^c. If you guess c correctly, the trend will be linear. The slope will be b and the intercept ln(y). 
Awesome! I knew something like this existed, I just had no idea what to search for.
[Here](https://engineering.purdue.edu/VISE/ee438L/) are some pretty good matlab activities from a Purdue DSP course. Pretty much every equation is given and little derivation is required-the challenge is implementing the equations as code. The topics range from image &amp; speech processing to FFT algorithms, and the programming is not complex at all. Edit: These exercises normally contain a lot of for loops and are a good chance to practice programming without them as AlphaPete mentioned.
You can try '%.3g' to give 3 significant figures.
Hi, I'm not entirely sure I understand what you need, but here is a quick example I have put together to show you how you can assign a list of numbers to a popup menu and then 'get' the string and convert it to a number when the selection is changed. Its very crude and hacky but let me know if it helps at all. function test() figure(); yourNumbers = {'50','60','70'}; handles.popup = uicontrol('style','popupmenu','position', [10 10 100 20],... 'string', yourNumbers); set(handles.popup, 'callback', {@test2, handles}); end function test2(~,~, handles) selectionIndex = get(handles.popup, 'value'); c = get(handles.popup, 'string'); x = str2double(c{selectionIndex}); disp(x); end
You could find a journal article that describes a method of calculating something that interests you and try implementing that in Matlab. I don't know much about engineering, so maybe this is not relevant, but it helped me a lot. It forced me to think through the concept and scour all the Matlab functions and understand how they work. 
follow [this](http://www.mathworks.de/help/matlab/ref/lang_p_sa.png). in your case, you'd put: sprintf("%3.3g", 162.57)
Ahhhh are you a fellow Boiler? If so congrats on finishing that GUI I did the same last week! Perfect score baby (This is for OP I can't make new comments on my phone)
Literally not what I'm looking for but I feel like I was lacking condescension so thanks!
Awesome. I will plug this in and look at the results. Sorry about not supplying a working version; the function is huge and I didn't want to make people read through all of it. Anyway, thanks a lot!
You don't say how t is defined. I'm assuming your sample rate for t and the wav file are conflicting. This link isn't quite what you're trying to do but it is still instructive for this kind of work. http://stackoverflow.com/questions/1452455/how-do-you-generate-dual-tone-frequencies-in-matlab
I'm going to assume you're not having a problem with the " * " on the second line, and you just forgot to write " . * ". Let's assume you've defined your "t" appropriately with respect to the sampling frequency like \u\jederski is worried about. The mathematical issue here is that the distortion you are adding is not 13000 Hz noise. You're adding a 13000Hz sine wave, times an uncorrelated signal. In the frequency domain the uncorrelated signal has a flat spectrum. The sine wave has a spectrum consisting of a spike at +/- 13000 Hz. The product of the two in the spatial domain is the convolution of the two in the Fourier domain. This will simply shift the flat spectrum, and lead to interference due to aliasing. It won't give 13000 Hz noise. If you want to add noise at 13000 Hz, you should multiply by randn(1). If this doesn't seem "noiselike" enough for you, try adding a randn times a bunch of frequencies near 13000Hz. 
Use logical indexing. There is a 99.9999956% chance you do not need a for loop at all. http://blogs.mathworks.com/steve/2008/01/28/logical-indexing/
For example, this will mutate 0.44% of your "genes" on average. genes = zeros(10000,1); random_mutation = rand(size(genes)); mutated = (random_mutation &gt; 0.9956); genes(mutated) = genes(mutated) + 1;
I looked through that site but I don't know how to apply that to my current task. Right now I have an nxm array containing ones and zeros. I need to look at each row, and consider every combination of two elements in that row. Then I need to keep track of each time elements from the two different columns are both zeros, for each row of the original array. So for example, in row 1 I want to check if both (1,1) and (1,2) are both zero, and then if (1,1) and (1,3) are both zero etc. I then want to do that in all the rows such that at the end I will have an array in which I have the total number of times that both column i and column j elements are zero. Does that make any sense? 
Lesson #1: DETAILS! Post them! This is significantly different than your original question implies. Lesson #2: There is always another way. What you have is a permutations problems. If all you are looking for is how many pairs of 0's there are you can use combinatorics. There is no need to check and test every single pair. I'm not going to give you the answer since you seemed genuinely interested in figuring this out, but I'll guide you to it. Use logical indexing from that link to find the 0s. Use that to find the number of 0s in each row. Now you can use the binomial coefficient equation to find the total places where two columns are both 0. Note: This assumes order does not matter (eg: once you find 0s at 1,1 and 1,3 you won't count them again for 1,3 and 1,1)
Will that just give me a total number of times where two columns are both zero? What I am looking for is the number of times each set of two columns equals zero for each specific pairing. So the total number of times column 1 and column two have zeros can't be lumped in with the number or times column 1 and column 3 both have zeros. I am worried that the permutation approach will not allow me to keep these instances separate for later use.
Can you please provide some context? Which class is this? Do you have a textbook? Does the assignment have recommendations on method? Did you discuss this in class? Here's a hint. Some MATLAB fitting functions use this: http://en.wikipedia.org/wiki/Maximum_likelihood 
What are you trying to make a PDF of? We need a little more info. Can you bin your data and make a histogram? That would be a first step in getting to a PDF that you've generated and not a canned function/curve fit.
You have to have the MATLAB Compiler to create a standalone application (EXE) or libraries (DLL) from your MATLAB (*.m) files. The Windows SDK is also required, as the MATLAB Compiler uses that for its operations. http://www.mathworks.com/products/compiler/ 
Absolutely, its a MATLAB class for engineers, essentially half of it is math and half of it is using the math in MATLAB. Essentially we are using non-linear curve fitting using taylor series expansion. I know the problem can be solved in relatively few steps, however I'm just not sure where to begin. We have a function y(t) = (total / sigma * sqrt(2*pi)* e ^ (-1/2 * ((t - u) / sigma)^2). Where total is the total estimated world production of oil, sigma is the mean, and u is standard deviation. By just plugging in the known values for the above equation, my graph looks like an exponential decay function, ending at zero. Right now I'm just working with the US production vectorand the time vector. If I just plot the two against each other, I get a bell curve looking shape, however I'm unsure how to numerically solve it for future values of oil produciton. 
I'm just trying to figure out the equation which would model the data I have. I have the function y(t) = (total / sigma * sqrt(2pi) e ^ (-1/2 * ((t - u) / sigma)2). Simply plotting the time vector (years from 1850 - 2000) vs the US production of oil for each year, I have a pretty good looking bell curve, just unsure as to where I go from here to solve for the equation of the bell curve itself. 
Correct me if I'm missing something, I'm still trying to understand futher: You have an equation (or just data that you *want* to define an equation for) that is: oil(year) production as a function of time (year). ... and when you plot your data, it looks bell-curvey? To which you want to fit an equation to? Do you have a plot/picture you can show of what you're starting with?
To get the desired noise, a bandpass filter should be designed and a noise signal fed through it. To keep it simple, I would just use FFT filtering. 
I should also note, time in years since 1850 is the x axis, and oil production in barrels x10^6 is on the y. 
Are you sure this is right? If the noise is fully random, defined by randn, then it doesn't have any frequency. I would think the OP needs to use a stochastic model like ARMA. 
You'll need to clarify what you're trying to do and give us some idea of what previous_page is, specifically where that variable is coming from. As I understand it, you've written a GUI and it contains a push button whose callback will attempt to open/close other GUIs (or, at least a .fig file or two). The idea being that it will allow you to sequentially scroll through the other GUIs, which presumably have some order to them? If my understanding is correct, then you need to write the callback with some kind of memory, so it knows what pages are currently open. Unless you are dynamically re-naming files in your directory, the command open('next_page.fig') will always open the same file (that is, the one with the name next_page.fig). A better way to do that would be give each file that corresponds to a given page a unique name with some sort of incrementing numeric tag. Then, if you allow your GUI to keep track of what the current page is, it can easily identify what the next page should be. Then, you would use something like: % Get the current page number currentPage = handles.currentPage; % Define the name of the currently open page figure currentPageName = ['page_' num2str( currentPage ) '.fig']; % Define the name of the next page to open nextPageName = ['page_' num2str( currentPage + 1 ) '.fig']; % Close the current page, open the next close( currentPageName ) open( nextPageName ) % Increment the page number counter handles.currentPage = currentPage + 1; % Update guidata guidata( hObject, handles )
I think its got something to do with your for loop going from 1:b (1:75 and 1:5250). I've never read in movie files before, so I don't know if read() will produce output that is a:b in length, or if the output is 1:5250 and it pads the beginning. Then in your for loop you're going from 1:b so you're having *A LOT* of extra blank space when you're looping 1:5250. Bottom line, I think you've got a lot of extra blank frames due to how you're reading in or looping. Do you get a coding error? ..or is your output just not exactly what you're looking for (but your code executes with no error)? Have you tried to look into the sizes of vidframes/mov ? If they are larger than 150 (the # of frames you want based on a and b) then how you're getting the frames and saving them in memory is likely the issue.
Hmm... quite an interesting problem given that there is no guarantee that production over time would be forced to be bell shaped... At any rate.. You say you have an equation for the data, and you can't use any MATLAB functions.. I guess what I would do is create vectors for each of your unknowns (u, sigma) and compute functions for nu*nsigma combinations and minimize the error.
I'm not sure exactly what you're asking but in general terms, a "central frequency" is the carrier frequency of a modulated signal, or (usually) the largest peak in the frequency domain. For example, if you have a sinusoid which you amplitude modulate with another sinusoid, in the frequency domain of your signal (taking the FFT) you will have "sidebands"- extra frequencies either side of the carrier (at the central frequency). Does that help at all?
Try searching "fundamental frequency", that's what you're looking for. Also, it'd be wise to properly detrend your signal before using an FFT. I do EEG research in the cognitive and perceptual-motor domain. If you need more help, let me know. I've written extensive sets of code that I could send you. 
Fundamental frequency is a pretty different concept to central frequency. Fundamental frequency is the *lowest* frequency of oscillation in a system, central frequency is the *middle* frequency in a signal or filter (as seen in the frequency domain). The central frequency in a noisy signal may be the fundamental frequency of the underlying system you're interested in, but I'd be careful not to conflate the two.
In more detail...the function involves passing in the EEG data, sample rate, channel location, upper frequency, and electrode of interest. The function calculates the Power Spectral Density, then the central frequency. The central frequency is then plotted on a topographical map. So my question is, what is the purpose/definition of central frequency and how does it relate to PSD in this particular situation?
Came to say the same. OP should state exactly what the question trying to be answered is. It could be the case that the fundamental is what they're looking for, but central is a different animal. 
Thanks for your response! I currently have unique names for each of the GUI, I just used the name "next_page.fig" for my explanation. I am trying to set up a game, so I have a title page, instructions page, information page, and a game page. When I use this code: open('instructions_page.fig'); close(title); the title page is closed and the instructions page is opened. However, when I use this code to link from the instructions page to the information page: open('information_page.fig'); close(instructions_page); the information page is opened but the instructions page remains opened. This also happens when I try to link between the information and game pages, but I can link from the title page to any page and the code works perfectly. I am also using GUIDE t make these GUIs if that makes a difference.
When working with eeg, make sure the term isn't toolbox specific. A bit of Google Fu returned results connected with eeglab and the term refers to the dominant frequency present in the signal. I'm assuming you're hp filtering, otherwise I can save you the trouble and say it'll be low low delta (thank you 1/n noise). Hope that helps. 
OK, this is not the ideal answer I was hoping to provide, but it functions. I know deep down in my little code-addled brain there is a more elegant solution to this, but I'm drawing a blank. That said this will work and it shouldn't choke too hard for large datasets, but I've only tested it on a small 5x4 test set I invented. data = [ 0 0 1 0; 0 0 0 0; 0 0 0 5; 0 0 6 6; 0 0 1 0]; p = nchoosek(1:size(data,2),2); out = zeros(max(p(:,1)), max(p(:,2))); for ind = 1:size(p, 1) c1 = p(ind,1); c2 = p(ind,2); out(c1,c2) = length(find(data(:,c1)-data(:,c2) == 0)); end At the end out contains the counts of zero pairs in each column pair. It will be upper diagonal because the column pairs are not ordered (1,2 covers 2,1 etc...) I think this is what you are actually asking for (finally...)
Sounds like you're asking for homework help. 
It's not actually homework, but pretty much. I want to learn matlab and train on college-calibre problems, but I don't know where to start on this specific MOL implementation. Again, not sure if this is the right sub to come to for this sort of thing, so if it isn't I'd appreciate any direction that could help me if it's not too much trouble.
ill post the code later if anyone cares
Tried to make a snoo and failed, eh?
Thanks
Looks to me like the trajectory of a comet or something through space induced by gravity from the sun/planets.
The code is posted under the picture on imgur. Its a game. Run the script to play it.
http://imgur.com/pqq6XAb different version
I am trying to recreate the 3d plots (not exact, just a similar rendition) to the 3 low resolution plots shown in the album. I can get close with a Gaussian surface plot and a 3d sinc function but I would like to make the rest of the sinc function zero, after the first zero crossing and for the other graph after the third zero crossing. In other words, I want the Gaussian looking spike and one ring around it. Maybe parametrization or a piece wise function? Not sure on how to implement those. I put a screen shot of the 3d sinc function figure and command lines in the album.v
I think this is just many plot3 curves together, or maybe a superimposed contour plot on top of the mesh?
Chaotic Lorenz?
post your code and the error... Easiest way to do this: plotyy(x,[yl1;yl2],x,[yr1;yr2]) where x is the x data, yl1 is the first y data for the left y-axis in row form etc. Or if x-data also changes per data set: plotyy([xl1;xl2]',[yl1;yl2]',[xr1;xr2]',[yr1;yr]') ' is used to transform the data matrices to the right form if xl1 etc are rows. If your data in xl1 etc is in columns you dont need that but you have to replace the ; with ,
Why would he do that?
Because you can do that easily in Excel without it spitting back a stupid error at you. MATLAB has more power as a computational tool, or as a 3-D plotter, but if all you're trying to do is plot four 2-D lines, MATLAB is clunkier to use than Excel.
Don't agree there, without even knowing what kind of error he gets you can't know what the problem is. What is your problem with plotting 2-D lines? Also it seems very counter productive to get the data in Matlab and then copy pasting it to Excel to make plots.
You can use the xlswrite command to write straight to Excel, and not have to figure out whatever arcane response MATLAB gives you back as an error command.
Without checking the rest of your code, this means that Jf is almost singular, therefore the inverse of Jf is very inaccurate (or incorrect since the inverse of a singular matrix does not exist). Try using : x=x-Jf\F; instead of x=x-(inv(Jf)*F);
Well yes that's possible because Jf depends on x. Therefore for larger values of x, Jf is not singular so it works. Fill in zeros for x and you'll see that det(Jf)=0.
Ah yes, i remember this from matlab.
&gt; arcane response MATLAB gives you back as an error command. Bahahaha. Sorry, but no.
I thought it was a full kinetic charge particle moving along strange field lines until I realized the circles were points, not gyromotion along a field line. 
The outer edge of the ring is at R = 3 * pi Z( R &gt; 3*pi ) = 0; Will zero everything outside of that [X , Y] = meshgrid(-10:0.04:10); R = sqrt( X.^2 + Y.^2) + eps; Z = sin(R) ./ (R .^(2/3)); Z( R &gt; 3*pi ) = 0; surf(X , Y , Z , Z); shading interp 
I would add a pushbutton for the user to click once he is done entering in all the data. The pushbutton callback could make sure that all the data has been entered and then plot the data. In terms of storing the entered data, I would use the textbox callback functions to store the user inputs as elements of an array stored in appdata Something like.... handles.textbox = uicontrol( handles.fh , 'Style' , 'edit' , 'callback' , {@textbox_Callback , ridx , cidx} ); .... function textbox_Callback(hObject, eventdata , ridx , cidx) my_arr = getappdata( gcf , 'my_arr' ); my_arr( ridx , cidx ) = str2num( get( hObject , 'String' ) ); setappdata( gcf , 'my_arr' , my_arr ); and then pull my_arr out of appdata and plot it in the pushbutton callback. 
http://www.mathworks.com/help/matlab/creating_guis/share-data-among-callbacks.html
I know this post late but I'm curious about the program. I run the program in the debug mode and stop right at the first line in the function. On the workspace, I type the command "whos" and it shows 2 dozens of variables. Where do those variables come from?
The actual problem comes from Radius Basis Function Neural Network with Multiquadric. The input data (matrix B) has hundreds of thousands of samples, while the hidden layer has less than 2000 nodes (matrix A). I want to compute the output of the hidden layer, which lead to the above question. To make it clear, let say A = randn( 20, 1000000), B = rand( 20, 2000). 
Thanks for for suggestions. I'll consider them esp. option 1.
Ah, OK, if you have to have two matrices then, just change as follows: d = function(X1,X2) d = squeeze(sqrt(sum(bsxfun(@minus,X1,permute(X2,[1 3 2])).^2,1)));
If I understand correctly you are making this problem waaay too difficult for yourself. The constants can be taken outside of the integral. So integral(@(x)C1*f(x,10),0,1) will be C1*integral(@(x)f(x,10),0,1) So all those contants can be defined in a single vector: Ct = [0,0,C1,C2 .... ] ; You want to multiply all these contants with the same integral except for the last two (which will be multiplied with a different integral): x= ... %whateveryouwant vec_int=ones(1,length(Ct)); vec_int(1:end-N)=integral(f(x,10),0,1); vec_int(end-N:end)=integral(g(x,10),0,1); So now you have 2 seperate vectors of the same length. 1 with the constants and an other with the results of the integral. You can simply multiply these with each other! v=ct.*vec_int; The resulting vector is not a function (since you have to define the value x, matlab doesn't like assigning function handles to vectors). You could take a look at cell arrays (if I remember correctly you can put functions in each cell). I hope I understood your question correctly and this will help at least a bit.
Here is a link to the [Academic Tutorial](https://www.mathworks.com/academia/student_center/tutorials/mltutorial_launchpad.html?confirmation_page). I found it pretty useful when I was learning the basics. When you say 'sub-array' do you mean an array of arrays or a subsection of an array (sometimes called a slice)? It looks like you want the latter. &gt;&gt; a = 1:10 a = 1 2 3 4 5 6 7 8 9 10 &gt;&gt; a(:,3:5) ans = 3 4 5 The second statement says, "show me every row of *a*, but only columns 3 through 5 (inclusive)". You can also do cool stuff with [logical indexing](http://www.mathworks.com/help/matlab/math/matrix-indexing.html#bq7egb6-1) &gt;&gt; b = a &gt; 3 b = 0 0 0 1 1 1 1 1 1 1 &gt;&gt; a(b) ans = 4 5 6 7 8 9 10 
So what have you tried so far? Because *we don't do your homework!* 
Sorry, but on no planet is making a plot in Excel easier than plotting in MATLAB.
yea go look at the tutorial videos on mathworks.com. Their documentation and videos are really good.
Thank you! I was trying to severely over complicate that.
Just wanted to come by and thank you guys for the help. I was seriously over-thinking the problem. All I really needed to do was add a 60 Hz and a 10 kHz hum to my signal. Didn't need any randomness at all. Still, thanks again.
No one has provided you help because to be honest your equation looks like a mess. Try editing your post: any lines you don't want to show as just text or dialogue (ie. lines that have equations/code), start those lines with 4 spaces and you'll get something that looks like this. 4*matA.*matB^5 formats nicely, unlike 4*matA.*matB^5
You are hardly going to get much faster than [this, even with a mex/c++ version](http://stackoverflow.com/questions/7696734/pdist2-equivalent-in-matlab-version-7): D = sqrt( bsxfun(@plus,sum(A.^2,2),sum(B.^2,2)') - 2*(A*B') );
You should post the code that you already have. I would approach the problem by actually writing out full functions rather than anonymous functions, and then constructing an anonymous function if required as the last step. For example, something like function v = odefun(t,v_in,N,C) v = zeros(1,4*N); integ = integral(f(v_in,t),0,1); for j = floor(N/2):N % This could of course be an array operation v(j) = C(j)*integ; end end Note that when f() is evaluated inside integral(), it is using whatever values for t and v that are passed into odefun(), which correspond to the values for these variables during the integration, which is probably what you want. No need to use an anonymous function as a wrapper for f(). Then you would use odefun() with something like [t,V] = ode45(@(t,V) @odefun(t,V,10,[0 0 0 0 0 1 1 1 1 1]),[0 20],ones(1,10)); You can see here that N and C are then hardcoded in odefun() by the anonymous function created at the time you run ode45(). These are just general ideas, I haven't tested or optimized this example 
&gt; handles.textbox = uicontrol( handles.fh , 'Style' , 'edit' , 'callback' , {@textbox_Callback , ridx , cidx} ); &gt; The callback function for this textbox is "@textbox_Callback". Everytime the user presses enter in the textbox, the "textbox_Callback" function is executed. 
Why are you creating two separate ellipses and then plotting them on top of each other? That is a silly way to go about it. Of course you are getting doubles in the center that way! You _could_ keep doing it that way and just throw away any points in the area of overlap from one of the distributions. Or you could generate random points across the entire space of the [-2,2;-2,2] grid and discard those that don't fall within your two ellipses. Not sure of the requirements of how random/what type of distribution you need which would need to be considered with this approach.
You can put the entire thing in a function like omegagoose suggests. You can use that function in ode45.
/u/matuba already suggested a way to do this that would work but I am curious more about the problem. What type of random distribution do you want? Is it just uniform with the domain as the two ellipses? Or do you want them to be centered near the outside? (I am thinking, you could have a multi-variate PDF that is the surface and use Metropolis-Hasting MCMC to sample that). Good luck
Thank you for your response. I'm not getting a error message, but the results are incoherent and I don't know why... In fact, I want to generalize this example later with 2x2 matrices, hence the inv(). I want to be able to reconstruct a clean signal knowing a noisy one. To add noise on the theoretical one (theta), i add a *little* noise, hence the 0.25randn. I though that 1randn will add to much noise, since this is a unit step response... Thank you for your reference, I am reading it right now :)
for prediction shouldn't you be using the previous time-step's X? I can't tell if you are. EDIT with a better comment: why is your variance a random variable? i understand the noise added to the observation but in Kal = P*C'*inv(C*P*C' + .25*randn); Shouldn't you use .25 instead of .25*randn since .25*randn has a variance of .25? Kal = P*C'*inv(C*P*C' + .25); EDIT2: my stats might be a bit off, perhaps the variance of .25*randn is .25^2 ? 
I though that doing X = A*X + B*u; would replace the *new* X by *old* X times A + Bu, wouldn't it? I'm not used to Matlab yet, so my code may not be as accurate as I think.
I think that's okay actually. I'm just not used to seeing it in that way. I'm more confident with my variance comment. If your variance is changing with time the signal may not be stationary and so the model/equations aren't valid? EDIT: yes, I'm thinking about this more and it makes sense. think about what you're doing in this calc: yi = theta(i) + .25*randn You're adding noise to the observations, which is good. But you need to model this observation noise correctly. In the link you posted, R_v is supposed to be the covariance (matrix) of ".25*randn". perhaps to see this for yourself, simply simulate a time series of noise = .25*randn and plot it. then you can even calculate the variance directly. i think it should be 1/16
**RESPONSE TO YOUR EDIT :** I'm using the algorithm found at page 15/15 of this reference : http://externe.emt.inrs.ca/users/benesty/lectures/kalman.pdf (sorry, it's in french, but it is the Kalman derivation I understood the better) When I don't use the randn in the variance, it tends to zero and inv(0) or 1/0 gives me a NaN which doesn't compute well either.
J'ai ajouté un subplot pour mieux voir l'erreur induite par le bruit et celle renvoyée par le filtre. je te donne le code actuel : % % Utilise un filtre de Kalman pour reconstruire % la temperature a partir de mesures bruitees % issues d'un systeme du premier ordre suppose % connu (K et T connus) % %% Nettoyage clear all figure(1) clf %% Definition du systeme dt = 0.1; duree = 10; t = 0:dt:duree; u = 1; % un echelon K = 1; % On suppose que le gain reste constant a 1 T = 2.5; theta = 1*step(K,[T 1],t); resultat_estimateur = []; resultat_mesures = []; gain_kal = []; covar = []; %% Initialisation pour le filtre de Kalman %% Initalisations des matrices % Matrice d'etat A = -1/T; % Matrice de commande B = K/T; % Matrice d'observation C = 1; % Matrice de covariance P P = 0.1; % Aucune idee alors on initialise a hazard... %% Initialisation du vecteur d'etat X = 10; %% Filtrage for i = 1:length(t) % Mesures = valeur theorique + bruit yi = theta(i) + .25*randn; % Phase de prediction X = A*X + B*u; P = A*P*A'+randn; %Phase de mise a jour Kal = P*C'*inv(C*P*C' + .25);%*randn); X = X + Kal*(yi-C*X); P = (1 - Kal*C)*P; % On remplit les vecteurs pour les "plot" resultat_mesures = [resultat_mesures ; yi]; resultat_estimateur = [resultat_estimateur ; X]; gain_kal = [gain_kal ; Kal]; covar = [covar ; P]; %i = i+1 % Pour une execution manuelle end %% Graphique subplot(2,2,[1 2]) % Les valeurs theoriques, mesurees et estimees hold on grid on plot(resultat_estimateur, 'ro:') plot(resultat_mesures, 'kx:') plot(theta, 'b-') legend('estimateur a posteriori','valeurs mesurees','Valeur theorique'); title('Resultats de la simulation') xlabel('nombre d''iterations') hold off subplot(2,2,3) % Comment le gain de Kalman varie au cours de la simulation? stem(gain_kal, 'go'); grid on title('Gain de Kalman au cours des iterations') subplot(2,2,4) % plot(covar, 'go'); % legend('variance P') hold on grid on stem(theta - resultat_estimateur, 'r') stem(theta - resultat_mesures, 'b') legend('estimateur','mesures') hold off title('erreur')
Indeed, the value of the error tends to be smaller when the number of samples grows, but the error obtained with the filter is still larger than if we used no filter at all. ** Edit : ** After a bunch of tries, the quality of my Kalman filter is very random... It lacks of robustness.
hmmm.... how can I view the time series B*u? also, i'm confused about this application. if the input is fully known and so are the system parameters. what do you need to use the kalman filter for? in my experience, i use it to generate state variables (x) given model parameters A, C, R_v, R_w, &amp; initial conditions. but that's for a full stochastic model, your model is not fully stochastic, there's just some simulated observation noise EDIT: maybe your state equation should be: x(t+1) = C*x(t) + B*u(t) + w(t) in which case, the KF equations would change a bit? especially your prediction errors e(t) = y(t) - C*x(t) - D*u(t) EDIT2: double check e(t), D would be the direct transmission matrix
B*u should be constant since it is a unit step. B = K/T &gt;&gt; B = 0.4 u = 1 When I use P = P = A*P*A'+ 0 my Kalman gain goes straight to zero and the filter doesn't react at all...
This is for learning how to use a Kalman filter. There is a system which can be approximated ad a first order system. I can measure the output but it is noisy. I want to be able to reconstruct the original output using a Kalman filter. Then, when it works, I want to use my acquired knowledge about Kalman filter to be able to estimate the parameters of the system, but it's another story. EDIT : In my mind, there is the *pure* system which gives a *pure* theroretical output. The noise come up when we try to measure it. I plan to add noise on the sytem as you say later, when it does work and I want to test the robustness.
sorry for the onslaught of thoughts but definitely double check your prediction error eqn
Don't worry, it's very nice to try to help me. I will try to check if I can find an equivalent code on the internet, for a RC circuit for example and re-use it. Thank you for your help though! :)
hey quick fix! P = APA' + 1 not sure why yet...
It gets a *bit* better but several tries, and wild strange error plot appears...
check this other reference: [Time Series and its Applications, Shumway and Stoffer 2011](http://imgur.com/J1cCTU0) 
Can you take a screenshot and upload it on imgur?
is this what you're getting? i'm not even sure what your desired results would look like http://imgur.com/YhjNBJ2
I get those results with for i = 1:length(t) % Mesures = valeur theorique + bruit yi = theta(i) + .25*randn; % Phase de prediction X = A*X + B*u; P = A*P*A' +randn; %Phase de mise a jour Kal = P*C'*inv(C*P*C' + .25*randn); X = X + Kal*(yi-C*X); P = (1 - Kal*C)*P; end
okay, did you see my plot? use P = A*P*A' + 1; and Kal = P*C'*inv(C*P*C' + 1/16);
Then I get simillar results : http://i.imgur.com/8xhU91q.png
Idealy, I would desire an error as small as possible, that is to say, the closer X is to theta, the better.
okay - what is T = 2.5? and K = 1? system matrices?
shit, man. i'm sorry. i wish i could be of more help but it seems like i'm just driving you in circles. to me, it seems like it's working. Kal is at 0.94 which is pretty close to the actual K=1
Thank you anyway, helping me was very nice, with or without actual results :) Have a good weekend ;)
This is beyond a simple MATLAB problem.... This is an old fashioned, computer science problem, so you might have better luck on stack exchange. It's sounds like you already know how to read and format binary data in MATLAB, so the real question is how to reverse engineer the file. The first thing I would do is take some pictures of a flat field, so each pixel has the same value. If you now hex dump the file, the image data should stand out as a big continuous block of similar/same values. This should give you a first guess as to the offset to reach the first pixel byte. It also gives you a guess about where the frame ends... but you should be able to predict this based on the sensor bit depth, number of pixels and encoding. I.e. 12 bit rgb should be (2 bytes)\*(pixel count)\*(3 colors). By looking at the byte patterns for red, green and blue flat fields, you can figure out the encoding (or verify it is how you think it is) Now use this info to try and read the image in. If you don't get the proper result, then start tweaking things until it works.
Yeah I understand what you are saying. The problem I'm having Is figuring out how to exclude the overlapping areas. I've tried writing an if statement to exclude x2 and y2 within the overlapping area but I haven't had any luck. Thanks for the input 
I'm trying to get uniform distribution inside the domain of the two ellipses 
The Newton Raphson has a f(x)/f'(x) term which means when f'(x) (i.e. the slope) is close to 0 the algorithm doesn't work. In other words your initial guess is too close to a max or min point. 
How to save the return as an array? ------------------------------------------------------------------ % --- Executes on button press in pushbutton1. function pushbutton1_Callback(hObject, eventdata, handles) % hObject handle to pushbutton1 (see GCBO) % eventdata reserved - to be defined in a future version of MATLAB % handles structure with handles and user data (see GUIDATA) e1 = str2num(get(handles.ine1,'String')) e2 = str2num(get(handles.ine2,'String')) e3 = str2num(get(handles.ine3,'String')) e4 = str2num(get(handles.ine4,'String')) nx = str2num(get(handles.statx,'String')) ny = str2num(get(handles.staty,'String')) %width = str2num(get(handles.inw,'String')) %height = str2num(get(handles.inl,'String')) set(handles.testbox,'String',e1) %stationrow = zeros((ny+30),(nx+30)) %x = []; %for r = 1 : ny % x(r,:) = grade( e1, e2, e3, e4, nx, ny) %end 
You can't split your string across two lines like that. Put it on one line and you'll be good to go. And while we're at it, you need to add the 's' argument to the end of input if you want the user to input a string.
I think you almost have it, just move your comma to the outside of your quotation marks in line 1, and enter a second argument to convert to string after your message. eg. striker=input('Select striker material: Aluminum [A], Steel [S]',... 'Nylon [N]: ','s'); % Accepts input of A,S or N and returns value as a string % hope this helps, I'm a student myself though so hopefully I understood what it was you were asking in the first place haha. *EDIT* - just ran the code, couldn't get it to work until I put the striker input all on the same line. It seems to take both sets of quotation marks as seperate arguments if the are split over 2 lines. Works fine apart from that though, sorry for the confusion. 
Just because the file format description is from 2009 does not mean it is invalid... And if you have a tool capable of doing the work already, why are you reinventing the wheel? There is also [this Github repo](https://github.com/openmicroscopy/bioformats/blob/v5.0.0/components/formats-gpl/src/loci/formats/in/NikonReader.java) full of all kinds of data format parsers.
Why can't it be split up? You're right, if I put it on one line and add 's', works like a champ.
Didn't work, if I copy/paste your code I get error on input, "Too many input arguments."
Yeah I ran the code and saw what you meant, Apologies OP, I didn't mean to give you bad info. TIL, thanks /u/matuba.
http://www.mathworks.com/help/matlab/matlab_prog/continue-long-statements-on-multiple-lines.html Eccentricity of the language. If you put [] around the string then you can do it the way you have in your post. Some dev at Mathworks decided that's the way it would be, so... that's the way it is.
If you've got a really, *REALLY*, long input string, you could split it up into a few disp() commands followed by one final input() command: disp('this is line one of really REALLY long input') disp('so you should input your text as i tell you to here') disp('otherwise you'll break my precious code which i') disp('spent hours making, so don't fuck it up') disp('select striker material:') disp(' Aluminum [A]') disp(' Steel [S]') disp(' Nylon [N]') input(' Titanium [T]: ', 's') My guess is you could also make each of those strings into a variable and concanate them, but then the input() command will display the text on one line and it won't be pretty. You'll also want to have some checks in place to make sure the user did a) input a string and b) it is a letter that you will accept. I normally do the input inside a while loop, and if conditions for acceptable input are not met re-prompt them with something like: disp('stop being a fuckwad and input something acceptable') 
Yeah, it's because i had the input line split. It's taking both pairs of quotation marks as separate arguments, sorry. 
Great idea on the while loop. I was trying to do this with an if statement and that was getting me no where. Tried the while and got successful output. Edit, okay, new question, how do I specify a string in the while loop? I tried the following with no luck. : while striker~='A'|'S'|'N'|'a'|'s'|'n' 
Ya, while I don't code for anyone other than myself, and certainly not for commercial uses, I normally do something like this incase even myself I forget what I (my code) wants as input: goodin = 1; while goodin disp('inputmsgs') userin = input('inputhere'); if &lt;conditions here&gt; if &lt;more stringent conditions here&gt; goodin = 0; end else disp('correct your input - use this format') end end For the conditionals, you could check your input using isa(), isnumeric(), strcmp(), and there are prab others I'm leaving out that are linked at the bottom of those doc pages. So if you want userin to be either 'A', 'S', or 'N', cap/lower, there's functionality for strcmp() or maybe iselement() where you can compare userin to ['A' 'S' 'N' 'a' 's' 'n'] and update (or not) goodin appropriately.
I think once in trial/error trying to get a long input() statement to work I came across that little trick. But, say your input statement is 1000 characters long, doesn't it still display only on one line? Can you use a cell structure as the prompt like you can for multi-line titles for plots? Something like: input({'sadgdasgasdggasdg'; ... 'asdgasdgsadgasdgsadgasd'; ... 'asdgasdgsdgsgasdgsdgsdgasd'}) Or maybe you even have to do input([{ 'multilinecelltexthere' }])
 msg = 'you'; msg = [msg ' learn']; msg = [msg ' (or']; msg = [msg ' re-learn)']; msg = [msg ' something']; msg = [msg ' new']; msg = [msg ' everyday']; msg = [msg ' ;)']; msg = [msg ' huehuehuehue'];
The effort you put in to trolling me is highly amusing :D
You have an equation defining each area. So pick a point, see if it falls within those areas, if so throw it in, if not throw it out and try again. Repeat until you have the desired number of points. The point is to look at both regions as one not to fill them separately then filter things out. Granted if you can do one you should be able to do the other since it's the same damned thing :p But the idea is to do it in a more logical manner.
I enjoy it, but will admit I'm a bit disappointed. Recycling ideas already :(
It's not a troll! It's more of a joke
I think it's a bit silly to force yourself to do this task in MATLAB, when there are tons of freely-available software out there that definitely is able to read NEFs. Even if you absolutely must re-code it in MATLAB I'm sure you'll find something else to base your work on; you shouldn't even have to reverse engineer the format from scratch.
&gt; Then each element needs to be stored like this in excel or something xlswrite will let you write an excel file.. 
So right now all of the values that I want are being returned like this in the command window- wanted_values = 1 , 4, 4, 12, 1, ... wanted_values = 1 , 4, 4, 12, 1, ... wanted_values = 1 , 4, 4, 12, 1, ... Every time I try and assign a variable, row vector or matrix the return values for this function it will just say error, too many output arguments (even with a matrix of zeros much much larger than the total return arguments of the function) . Otherwise I would save the values to a data file and keep appending the file. What do you think? Thank you very much for responding
Best I can think of is ppval, then numerically differentiate. I would like to hear alternatives.
Is there a reason you can't dump the files to uncompressed TIFF and load them into MATLAB? I've done essentially the same thing with Canon CR2 files. Maybe look for a utility that produces FITS files and load those into MATLAB? My advice to you would be to focus on your resarch. Diversions like this will only impede your other efforts. On the other hand, if your fallback plan is software development such a project may be useful. 
Doing it like this, I'd think, would be fine. This is usually why I do when I have a small screen: striker=input('Select striker material: Aluminum [A], Steel [S]... Nylon [N]: '); I think it was the superfluous ' that got OP into trouble.
That's interesting. I thought a spline is defined as a smooth polynomial between two points .. how do you build a symbolic function out of it?
I was looking for the location of the inflection point in the data so I knew which section of the piecewise I needed. That corresponded to the row in pp.coefs and I built a symbolic function of out those coefficients and took the second derivative of that equation.
Structures are just a way of clumping up data of mixed types together in to one cleaner variable. Think of it as an object without methods/functions. Simple examples usually help, so consider representing a ball. It would have a location, size, weight, etc... ball.x = 4; ball.y = 7; ball.weight = 10; As for where you would use them, that's a personal choice. I tend to throw them in to places where there is a lot of information about one item. I clump it all under a single structure to help with clarity/organization. This is only in cases where writing in an OO manner would be overkill, but writing 'plain' functional code would start to get messy.
I don't have time to go through the code. Can you put a breakpoint where you're stuck, the output of 'whos' and an explanation of what you're trying to do?
thank you, that made more sense then anything I had heard or read so far
One quick thing: The function [] = grade( e1, e2, e3, e4, nx, ny) doesn't return anything. You can try: function stationrow = grade( e1, e2, e3, e4, nx, ny) 
yep... and to build on that, a structure array is just an array of structures. To extend the above example, say you wanted to represent 3 different balls. You could do something like: ball1.x = 4; ball1.y = 7; ball1.weight = 10; ball2.x = 8; ball2.y = 8; ball2.weight = 3; ball3.x = 6; ball3.y = 2; ball3.weight = 15; but this doesn't scale well. Your code has to know the unique name of every single ball structure and it would be impossible to dynamically change the number of balls. So instead, you can make a structure array: ball(1).x = 4; ball(1).y = 7; ball(1).weight = 10; ball(2).x = 8; ball(2).y = 8; ball(2).weight = 3; ball(3).x = 6; ball(3).y = 2; ball(3).weight = 15; now I can add as many new balls as I want (it's just another element in the array) and I can recurse through each ball just as I would any other array: for i=1:numel(ball) printf('ball %i is %g units from the origin', i, sqrt( ball(i).x^2 + ball(i).y^2 ) ); end The only requirement is that each structure in the array have the exact same fields. For instance, ball(1) cannot have an additional 'material' field that the rest of the members do not. However...structures and structure arrays do have some pitfalls, and I consider them bad practice in many situations....but I don't want to throw out too much info and confuse you more. If you are interested, let me know I can elaborate.
^^^^ This guy wins. I completely forgot the 'array' part :x
Needs to be one vector. By the way, those look like algebraic equations to me not differential equations. Good luck!
Yes you are right, I am too used to typing differential equation x) Thanks!
Just so you know, here is an example of a correct plot. You failed to discretize the system correctly. As your example is trivial (no state noise), I also show an example of adding state noise to the system. (Q~= 0). https://www.dropbox.com/sc/kmsyx255k5xhon0/AABMMGe3QLYWwJNDA52xBxyTa
Thanks!
You're welcome. This is generally always worth it for code readability. 
I use structural arrays in organizing climate change data; for instance, I have code that uses the following arrays: annual_means(model).precip(period) = [dates precip_data]; annual_means(model).temperature(period) = [dates temp_data]; annual_means(model).runoff(period) = [dates runoff_data]; I have four different models and two periods, so the structural array "annual_means" contains 8 different model/period combinations for three (actually more than 3) variables. If I want to know what the annual means for, say, model 2 of the early period is I simply call: annual_means(2).precip(1) or if I want the change in annual means delta_mean = annual_means(2).precip(2) - annual_means(2).precip(1); I find it really useful because I'm cycling through the models and periods a lot, so this is an easy way to implement that in loops that doesn't involve having to construct variable names and use eval(). You can also nest structural arrays inside other structural arrays; I have a piece of code that calls: output(model).snow_depth(period).annual_max(year) The only tricky thing is keeping track of what is what, but in reality the other way to do it is to have a million variables with slightly different names, or to have giant n-dimensional arrays that are a nightmare to keep track of exactly what you're calling when. Structural arrays are great because they allow you to pretty carefully name what each bit contains. 
Try renaming it so there's only one period. Edit: just realized your good file may prove my theory wrong - on My phone so I can't check. Edit 2: try opening them both in a good text editor (PS Pad) and see if you can see a difference. Since it's a propitiatory format you may only see garbage but it's possible something will be obvious.
Thank you so much for replying! I downloaded PS Pad and got PS Pad to open the corrupted file. However, I can't seem to make any sense of what I'm looking at, or how this file differs from others. Should it look like this? http://i.imgur.com/dcBUm7i.jpg?1
Looking for 'divergence' as you call it is the simplest way. Large changes in the derivative or sustained changes would easily catch that feature. If you use a loop I will slap you. Ask /u/Halsey117 ;)
The fuck did I just read.... Small nudge: diff() gives you the derivative. Find() can be told to only return the first item it finds. Decide how big of a spike counts as becoming nonlinear and you're off to the races. If you need to find a longer trend you will need to be more clever. But the single example posted isn't enough of a sample set to know how involved of an approach to suggest...
perhaps something like [PIVLab](http://www.mathworks.com/matlabcentral/fileexchange/27659-pivlab-time-resolved-particle-image-velocimetry--piv--tool)? I use it for structural analog modeling, but perhaps you could use it to detect change/movement between images.
There is a book called Fundamentals of Digital Image Processing you might find useful. Your school library might have it. 
I thought I had code for this but I can't find it at the moment, so here is the jist of it w/ code I just made: 1. find the slope of your line, m. 2. take the negative inverse of it: -1/m 3. convert it to an angle. 4. find points on the line where you want perpendicular lines. 5. this is where we fake it, take the length/2 and the slope angle and convert it from polar to cartesian, these will be your off sets. 6. Add and subtract these offsets from your points on the dragged line. 7. plot as needed. ex: clc; close all; p1 = [5,8];% first pt of drag line p2 = [14,-4];% second pt of drag line m1 = (p1(2) - p2(2)) / (p1(1) - p2(1));% slope of drag line m2 = -1/m1;% slope of the line perpendicular to it perpSlopeAng = atan(m2);% slope in radians lineLength = sqrt((p1(2) - p2(2))^2 + (p1(1) - p2(1))^2);% length of drag line numPerpLines = 3;% nnum of perpendicular lines to draw lengthOfPerp = 4;% length of perpendicular lines [xOff,yOff]=pol2cart(perpSlopeAng,lengthOfPerp/2);% you could do the whole y=mx+b thing, but I cheated % find x pos for perp lines +2 are for the end points perpX = [linspace(p1(1),p2(1),numPerpLines + 2) + xOff,linspace(p1(1),p2(1),numPerpLines + 2) - xOff]; % find y pos for perp lines +2 are the for end points perpY = [linspace(p1(2),p2(2),numPerpLines + 2) + yOff,linspace(p1(2),p2(2),numPerpLines + 2) - yOff]; figure(1); plot([p1(1),p2(1)],[p1(2),p2(2)]);% plot drag line hold all; scatter(linspace(p1(1),p2(1),numPerpLines + 2),linspace(p1(2),p2(2),numPerpLines + 2));% end points of perpendicular lines scatter(perpX([2:numPerpLines+1,7:end-1]),perpY([2:numPerpLines+1,7:end-1]));% end points of perpendicular lines for i = 2:numPerpLines+1 plot(perpX([i,i+5]),perpY([i,i+5]));% plot perpendiculat lines end axis equal;% to make it look right
it seem that the var navStatus is what is messed up, all other vars load fine. edit: upon further inspection, it looks like the write on the corrupted file didn't finish. I see at least 2 more vars in the good file that arn't in the bad one. I can get you all of the good data if you want.
That is actually the kind of results I wish I had ! How can I manage to have those?
Maybe normalized cross correlation? The matlab function is [normxcorr2](http://www.mathworks.com/help/images/ref/normxcorr2.html). Use a template image and compare, if the score is too low then a change has occurred.
Hmm, yeah, that doesn't help. It was a long shot; sometimes there's a header or something at the top of a file that can provide some clues but doesn't look like you're going to have any luck here. 
Thank you for looking into this! I noticed that when I try to load the file in Matlab even though I get an error message most of the data still gets loaded. The good news is the data that does load is the most important data! Comparing the corrupted file and the good file I count 8 var missing in the corrupted file: adStatus cpuLoad mode navStatus navValid run_num satVisible trunavStatus While some of these var would help me in my research/presentation it's possible to get by without them. However, if any of the var above loaded fine for you it would be much appreciated if you could give them to me.
Do you have georeferencing data in the files telling you where each image raster grid is located, or do you need to align each of the images given only the gridded image data from the satellite? If it's the latter, the Image Processing Toolbox and the Computer Vision system toolbox offer several different image registration (alignment) algorithms including feature based, intensity based, and phase correlation approaches to image registration. It's hard to predict which algorithm is "best", this is always problem dependent.
Could you help me, exactly how should I use it? 
Economics student here. I'm in the same boat. I plan on specialising in GIS Econometrics. I'm starting with shape files. The hardest part I'm finding is the basics. Sundays were not meant for for loops. The reason I choose Matlab over other GIS packages is that I can steal codes and scripts galore. Anything your planning to do someone has at least done part of it before. I plan on trying to reconstruct Irelands two lost census's. I'm going to need image processing, statistics, databases, neural networks....... Only matlab can give you everything.
Calculate 4 vertices with your equation and use the patch command to draw the plane. Type doc patch so you can read the documentation of how it works.
Maybe give export_fig from mathworks file exchange a shot. I had the same problem and ended up exporting to PDF.
My problem is I don't even know how to properly enter the equation.
Ill give it a try. thanks
You could make up your own function, but I think it is easier for you to just do something like: z1 = a * x1 + b * y1 + c z2 = a * x2 + b * y2 + c z3 = ... z4 = ... Where x1,y1,z1 is one of your vertices, x2,y2,z2 is your second vertex, etc. After you have your 4 vertices, use the patch command like this: patch([x1 x2 x3 x4], [y1 y2 y3 y4], [z1 z2 z3 z4]) 
I have solved similar problems in the past by trying different rendering options. You can set "renderer" property of the finger to zbuffer, painter, etc. Look up figure properties in the documentation for details. 
You should do everything in cents, with only whole numbers, instead of in dollars. The way computers work, there are some numbers which simply cannot be represented accurately.
no prob. there's prolly some geometry library up on file share that might have something like this in it.
So the reason I use Matlab is because of Simulink. It's really nice doing simulations and such. Matlab it self as also as many solvers in it that make it very useful. Any which way the reason why structures are nice is because it allows easy access to how variables are related as well as being able to pass many variables with one action. One example of this is when you have huge data structures. For example you could have respone.aircraftmodels.thurstmodel.fuelvariable I mean this is a super simple example and I'm on phone so sorry for bad formating and chappy spelling
In my work, I have a model with a number of different parameters. The behaviour of the model depends on the parameters. By using a struct, I can basically create a single variable that represents an instance of the entire model. This means I can write a function that simulates some model behaviour with only a single argument, rather than having like 10 arguments just for the model parameters. It makes sets of variables tidier and easier to manipulate 
x should be a cell array, not an array. x = {drinkingmoment1 ; drinkingmoment2 ; ... };
This works fine: x = [1; 2; 5; 7; 9; 20]; handles.test = uicontrol('style','listbox') set(handles.test,'string',{x}) Therefore, we need more information. A useful thing would be your code so we can see exactly what you're doing instead of what you plan on doing. What is the format of your drinking moments?
This works, thanks a lot!
I use [roundsd\(\)](http://www.mathworks.com/matlabcentral/fileexchange/26212-round-with-significant-digits/content/roundsd.m) from the file exchange.
I got it working, using a separate function as you suggested. Thank you for your help!
I got it working, using a separate function. Thank you for your help!
You are assigning a string of some length X to a spot in your matrix info of length 1. Change that line to info(i,:) and you'll be good to go.
You are being too narrow in your look at the 'why' portion of your question. Nobody uses MATLAB because of the structure data type. That concept exists in numerous other languages in one form or another. There is going to be some other driving force behind choosing MATLAB to work with: toolbox availability, you have pre-existing code that was done in MATLAB and you don't want to rewrite it, you are a student and your school has a hard-on for MATLAB, etc...
I changed the following two lines: info = zeros(a,7); info(i,1) = strcat(frame,'_',uur,'_',minuut,'_',seconde); but it returns the same error :(
The rows of a [character array](http://www.mathworks.com/help/matlab/matlab_prog/creating-character-arrays.html) all need to be the same length. So the width of `info` would need to be the same as the length of your longest string, and you'd need to pad any shorter strings with extra characters. You'd likely be better off defining `info` as a [cell array](http://www.mathworks.com/help/matlab/cell-arrays.html). ETA: Or a [table](http://www.mathworks.com/help/matlab/tables.html) if you're using a newer version of MATLAB (R2013b or newer)
Thanks for your advice so far, I've made the following changes: info = cell(a,7); info(i,:) = strcat(frame,'_',uur,'_',minuut,'_',seconde); Which, unfortunately, still doesn't work. I've made info 7 cells wide because the string that needs to go into that row consists of 7 separate string, is this the way to do it?
Put four spaces before each line or enclose each line with accent markers (`) so Reddit stops interpreting your code incorrectly and we can see all of your code.
You also need to use `num2str()` around all of your numeric values, otherwise MATLAB will try to convert them to their ASCII character equivalent when used as arguments with `strcat()`. Also, can you please just write out an example of what you want your final output to look like? I think it will make things a lot easier. It's likely that `sprintf()` will give you a better output than `strcat()`. EDIT: `frame = 1234; uur = 1; minuut = 23; seconde = 12;` `strcat(num2str(frame),'',num2str(uur),'',num2str(minuut),'_',num2str(seconde))` outputs: `ans = 1234123_12` I don't think this is what you want.
I've solved it, thanks! But I'm now struggling with a different problem. I've put the strings in a cell array, x, and I'm trying to set a listbox in a matlab GUI to this cell array x. I'm using the following code for this: set(handles.listbox1,'String',{info}); Matlab then gives the following error ??? Error using ==&gt; set Cell array of strings may only contain string and numeric matrices. Error in ==&gt; yizz&gt;pushbutton1_Callback at 471 set(handles.listbox1,'String',{info}); Error in ==&gt; gui_mainfcn at 96 feval(varargin{:}); Error in ==&gt; yizz at 42 gui_mainfcn(gui_State, varargin{:}); Error in ==&gt; @(hObject,eventdata)yizz('pushbutton1_Callback',hObject,eventdata,guidata(hObject)) ??? Error while evaluating uicontrol Callback What am I doing wrong here?
You don't need {} if info is already a cell array.
Again, you are doing the exact same thing. You are assigning a character array of some length X to a single position. You cannot do that. Change it to info(i,:) and it will work just fine. &gt;&gt; info(1,1) = strcat('abcde', 'fg', 'hi') ??? Subscripted assignment dimension mismatch. &gt;&gt; info(1,:) = strcat('abcde', 'fg', 'hi') info = abcdefghi Edit: as /u/excaza pointed out below you need to ensure these are always the same length or change data types. Otherwise things are going to fail. My suggestion would be going with a cell array as suggested in that post, or changing from strcat() to sprintf(). 
&gt; I still don't really understand why you would use matlab for such a database as opposed to any other language. Because you're a scientist, not a computjer programmer and matlab has become the standard programming language for many science departments in college because all the functions and tools are geared towards scientific computing and structures are what Matlab has for mixing data types and still being able to automate data processing.
What are you trying to do with the (i)? If you remove this and add a \n in the input to make it nicer you get this, which works for me: disp(['Please enter the function starting with @(x) and with the function have variable of x']); E=input('example @(x) x^2-2x+1\n') Now the user can for example type @(x) x^2-2*x+1 and it works. Note the * in 2*x which is not present in your example. Or if you want to have an array of functions (only reason i can think for (i)), you will have to use cells. Then you have to change (i) to {i}
Still a dirty solution but you could prompt a user for input of the form you mention, getting: str= '@(x) x*2+3^x' Then use eval([f = ' str ';']) Now you can call the function using f, e.g. f(1) ans = 5
If it's an actual function feval is better because you don't have to do any string manipulation.
plot3? Otherwise you'll need to make a grid with interp2 and meshgrid or gridfit.
And if you're doing that you can get around having the user put in @(x)
God that is levels of fugly I don't want to get into right now. Just use Sprintf op. info{i}=sprintf('%05d_%02d_%02d_%02d',frame, uur, minuut, seconde);
the is use to call the function from the array of functions entered 
what if i want to enter values, what would i need to do for that?
Write a separate .m function file that returns dp. And a separate .m file that calls ode45 with your user defined function. Also I would be clearer with your programming. The first line of your function should be something like x=p(1); y=p(2): etc. I think you're getting in trouble somewhere by trying to write code that minimizes number of lines. 
So did you try what I told you and is that what you want?
Well, i guess we have the same course.... But you have got the initial condition wrong, it has to be [x y x' y'], so you have to put in the x and y-direction and then split the 500 m/s into the x- and y-composants as the 3rd and 4th input.
I see, my apologies I left that bit out... I think I've got it now, though (:
I posted something similar before, and I hope it can extend here, too: First, can you just use scatter? scatter(x,y,100,z,'filled') Where x, y and z are vectors; 100 is the size of the marker; and 'filled' will fill in the marker. The other alternative would be to adjust the colormap based on your z. Something like: c=colormap; c=interp2([1:size(c,1)]',[1:size(c,2)],c',1:size(c,1)/(numel(x)+1):size(c,1),[1:size(c,2)]')'; for ii=1:numel(x) plot(x(ii),y(ii),'o','Color',c(floor(z(ii)/max(z)*numel(x))+1,:)) hold all end Which would range from one color for the minimum of z and another color for your max value of z. Might be a bit buggy but that may help.
Is it possible that max_delay is a double type? For instance, maybe max_delay has a value of 5.5 -- obviously you cannot have an array with 5.5 indices. If this is the case, you can convert to an integer type by using int8(max_delay), which rounds to the nearest integer. Your array b could then be defined: b = [1,zeros(1,int8(max_delay))]; If you always want to round max_delay down, you can use the floor function, b = [1,zeros(1,floor(max_delay))]; If you always want to round up, you can use the ceiling function, b = [1,zeros(1,ceil(max_delay))];
So.. you've got smaller boxes that you want to bound with one larger box? Do you have the coords of the verticies? I would simply check for the 4 maxima verticies to *just barely* make your one outer box, then add some cushion, like 3 pixels or something. Sorry if I missed anything, on mobile in the metro. Let me know if that helps / more ???
function localBoxes = maxBoxVals(finalBoxes) rects = []; for es = 1 : length(finalBoxes) y = finalBoxes(es, 1); x = finalBoxes(es, 2); y2 = finalBoxes(es, 3); x2 = finalBoxes(es, 4); rects = [rects ; [x, y, y2-y, x2 - x]]; end overlaps = rectint(rects, rects); %overlaps(logical(eye(size(overlaps)))) = 0; [r,c] = find(overlaps &gt; 0); localBoxes = []; for i = 1 : length(r) end for i = 1 : length(overlaps) col = overlaps(:,i); col2 = find(col &gt; 0); if(~length(col2) &gt; 0) continue; end localRects = [rects(i,:)]; for j = 1 : length(col2) localRects = [localRects ; rects(col2(j),:)]; end if(max(localRects) &gt; 0) minX = min(localRects(:,1)); minY = min(localRects(:,2)); maxX = max(localRects(:,1))+max(localRects(:,3)); maxY = max(localRects(:,2))+max(localRects(:,4)); localBoxes = [localBoxes ; [minX,minY,abs(maxX - minX), abs(maxY - minY)]]; end end localBoxes = unique(localBoxes,'rows') end Came up with this. However, there seems to be some drawing error, and it is really not vectorised lol The input is a row vector of the rects. Any feedback would be appreciated. 
Nice, it's great to see easter eggs are still a thing.
So what do you want. Because your plotting syntax should work just fine. Are you getting an error when you try and plot? If you want more in depth statistics, what / which ones? What do you mean the plot doesn't plot every data point you give it? Do you mean you want to interpolate?
I think i'm gonna put the handel one at the end of every script
It has something to do with the presence of [nested functions](http://www.mathworks.com/help/matlab/matlab_prog/nested-functions.html). It seems like MATLAB preallocates the variables in the top level function scope when the function is first executed, which is why you see all of them when you stop at the first line. I'm not sure why it is designed this way and I haven't yet found an answer in the documentation. You can see this in a simpler example: function testcode asdf = 1; function testing ghfj = 2; end end If you insert a breakpoint on line 1, you will see similar behavior.
I'm also not sure what you are looking for. Do you mean that you want each point on your plot to have a label of the X/Y values?
So the program I've been given plots the absorption of X-rays at angles in intervals of 5 degrees, so I'm looking to make a table that gives me weighted loss for each calculated value of x. The graph already plots the values fine, but I was looking for the exact value of each data point rather than just a plotted graph that I can only extract a rough value from the y-axis. So in summary - just getting the graph to give me the values for each point that it plots I tried making a table: figure(7) T = table(thetavec,(voltissvox+30*volbonevox)/1e3); where thetavec is the angle and the thing in brackets is the weighted loss formula, similar to the way my graph works (except for the description above i just subbed in x and y), but the figure that the program makes out of it is just a blank screen. :P 
Yeah pretty much :D Unfortunately I have no idea how to get matlab to do it, this is well outside my area of expertise sadly... :(
I'm still not really understanding the question. `thetavec` and `(voltissvox+30*volbonevox)/1e3` *are* your exact data points. Why can't you run the statistics on those vectors?
So, you mean you just want to add text directly onto the plot, kindof like this example: x=1:10; y=sin(x); figure;plot(x,y) strvalues=strtrim(cellstr(num2str([x(:) y(:)],'(%1.1d,%1.1d)'))); text(x,y,strvalues,'VerticalAlignment','top');
How many variables ultimately just determine your function? If you're just plotting X and y, 2 vars, there are plenty of curve fitting tools that will give you the coefficients of an equation you can calculate a y value for any given x. Look into interp () for starters
yeah your ways works great. this is how i got it to work E=cell{1};%now the E array will be formatted to work with cells E{i}=input('please enter function with @(x) and function '); %ask for expression input input is @(x) x^0.5 %much lines later in the code thefunc=E{i}; thefunc(4)=2 thanks for the help 
Depends on how the data is formatted and how automated you want the process to be. http://www.mathworks.com/help/matlab/data-import-and-export.html http://www.mathworks.com/help/matlab/import_export/recommended-methods-for-importing-data.html
/u/Im_not_JB basically said it. I would see if you're running into the swap space. In my experience, if your swap is on a regular HDD, running into that makes things ultra slow. I currently have my swap on an SSD and Its actually pretty tolerable to use it if I go over memory. But, the best thing to do is to not run out. In addition to everything else that Im_not_JB suggested, you might also want to think about your sampling rate. For example, if you're digitizing analog signals then you want to sample at just a bit over twice the maximum frequency in which you're interested with an appropriate low pass filter). Oftentimes people will sample as fast as their hardware will let them because, why not? This is a case when you might not want to. 
It will create an expanding cell array. V = [6] V = [6] [8] V = [6] [8] [10] etc...
Thanks. Yes I am running into virtual memory. I don't need to hold onto most of the data during the real time part, so I'd like to write to a file with minimal performance loss. Would you happen to know if an SSD is worth purchasing over an HDD for this specific purpose?
SSD will definitely be faster than HDD, but there are a lot of other factors that would go into a value calculation. Since you're sure that you want to start pushing data to a drive of some sort, I'd rework my code first and test it on existing hardware. If it's still not suitable, I'd profile my code and make sure it's actually the write operation that is slowing me down before investing in new hardware.
Note that there is an implicit type conversion: V=[V (i+1)*2] really gets converted to V=[V {(i+1)*2}] when V is a cell array. 
Do you have the original image files and the image processing toolbox? If so it is trivial: %assume your image is called 'image.tif' im = imread('image.tif') sum(im(:)) std(im(:)) (std(im(:)))^2
Did you solve for the stream function in FORTRAN? Also, are you writing your code in Fortran 90 or FORTRAN 77? 
Thanks, that's what I figured was going on but just wanted to make sure!
Ok so this code should work, but you'll need to format your data this way: data(x,y,z,u,v,w); x,y,z need to be the coordinates in space at which each of your velocity vectors are located so: data(:,1) = zeros(length(depth),1); %x-coords data(:,2) = zeros(length(depth),1); %y-coords data(:,3) = depth; %z-coords u,v,w are the components of your velocity vectors: data(:,4) = u; %Eastern Components data(:,5) = v; %Northern Components data(:,6) = zeros(length(u),1); %Vertical components If you do the above correctly, this code will give you what you want: speed = sqrt(sum(data(:,4:5).^2,2)); direction = atan2d(data(:,5),data(:,4)); figure plot(data(:,3),direction); title('Flow Direction Relative to the East'); xlabel('Depth'); ylabel('Direction (degrees)'); figure plot(data(:,3),speed); title('Flow Speed'); xlabel('Depth'); ylabel('Speed (m/s)'); figure quiver3(data(:,1),data(:,2),data(:,3),data(:,4),data(:,5),data(:,6),0,'LineWidth',1.5); hold on plot3(data(:,1),data(:,2),data(:,3),'-r','LineWidth',1.5); xlabel('Velocity East'); ylabel('Velocity North'); zlabel('Depth'); hold off
You dont need the line: E=cell{1}; This should also give you an error because it doesnt make sense. Maybe you mean E=cell(1);, if you want to use this in a meaningful way, 1 should be the number of cells you need (instead of 1). 
Data reduction and analysis would be a big one. With little effort you can write a function to import any or all of your data files, process them, and export all of the analysis with little to no interaction needed from the user. I don't even know how to begin to do that in excel. A lot of my issues with Excel stem from its inability to handle dynamically changing input data. Any calculations where you'd want to change the inputs is far easier in MATLAB than excel. Say you're modeling a population and you want to change your timescale. Unless the length of your input vector is the same, you're going to have to drag some boxes around in Excel so you get a calculation for your new inputs. Or you have to delete cells to get rid of errors from not having an input. With MATLAB you can adjust your input and recalculate with one command. Excel's interface for selecting and modifying data to plot is atrocious, especially with multiple data series. MATLAB isn't exactly amazing at exporting plots (to put it mildly) and they're ugly as hell, but it's way more user friendly than Excel.
Agreed on PivotTables :D. While I find it easier to do everything in MATLAB now, I certainly found it intimidating when I first started. I guess showing them that it can do everything that Excel can would be useful, but I was wondering if there were any cases that stood out as particularly easier in MATLAB.
I am leaning toward [non-linear regression](http://www.mathworks.com/help/stats/nlinfit.html) to fit a growth curve of some sort.
Gotcha. In my HS physics class we used some program (not sure the name) and used near-frictionless tracks to measure distance/speed/acceleration as well as spring constants / rebounding forces (and maybe impulses) as an example. But then again, that was physics... I'm not really sure how, at such an early level, you can show them the real benefits of MATLAB over Excel; I'm really only thinking of plotting various things and even then you'd either have to aquire the data (hard for a HS'er) or input the data (again, hard), and for both I think you would see more challenges getting the data into (either) program than you would see the benefits of how quickly MATLAB could plot exponential cellular division (for example) over Excel - this may be on the order of 1/10s of seconds. I'll keep thinking tonight though.. I'll *ALWAYS* advocate MATLAB until I myself find something as flexible in all aspects that I use. Just curious, what is/are the student's background in MATLAB (or any language). I assume that a small number of your students may be exposed to calc and so to steer away from those problems?
I like this idea a lot. I know what types of data the instructors before me will have them producing so automated data processing would be great. As for doing it in "Excel," you'd probably have to use VBA (yuck).
Everything is intimidating when you first start. I would suggest against showing it can do what Excel does. They are likely to walk away considering it to be nothing but an equivalent tool for the same tasks. And why bother learning something new that does exactly what you can already do? Instead consider showing what Excel CAN'T do. Give them some incentive to grow beyond what they know and into that scary, intimidating unknown world. Th difficulty will be keeping in accessible considering their educational background. Throwing some ODE45 wizardry out there is probably not the best idea! As far as specific ideas, I've got nothing for you at the moment :|
Hah! ode45 was exactly what I was planning for lesson 2. My best guess for something that Excel can't do is fitting a curve other than the standard ones.
Hah, that is rather amusing... You know your audience better than I do, throw it at them!
Well, here's one thing you learn day one of *ANY* MATLAB course: time = 0:0.01:300; Like I've said, I have *very* limited knowledge of Excel (because MATLAB is miles better in my experience), but ask them to even make a time vector from 0 to 5 minutes in increments of 1/100^ths of a second, in Excel. Unless I know absolutely SQUAT in Excel, they're going to hate you for having to input 30,000 numbers, or get confused with the bullshit A$ = A1+0.01+A$43071408!$)*(!@#$#^@ASDFUCKEXCEL syntax. :) Here's to a good showing for MATLAB's sake!
As a more elementary example than ODE's (which by all means show them the *POWWAAA* of MATLAB) would be to explain to them working with multi-dimensional arrays. Say you have temperatures over the U.S. from 1950-2010, they are nicely gridded (from a satellite), and you want to see if there are any trends in temperature and in what areas over that 60 years. Having a 3-d array of lon X lat X time it is VERY easy to code in 10 lines and minutes (prab less but I'm being pesimistic here) how to see that L.A. might be having a 5 degF rise in average yearly temperature while Miami might only be seeing a 0.1 degF rise and it may be shocking that Chicago has seen a -1 degF drop in temperature! I should disclaimer here: ***these temp changes are purely speculative for the sake of an example!!*** MATLAB (and IDL, but I am much more familiar with MATLAB) is amazing for Earth Science work! The pred/prey example is another you could work in, just showing the power and not having them "do" the leg work, and like /u/excaza said, changing the inputs on an experiment in MATLAB and quickly re-generating output is a walk in the park. You could prab (knowing the math first) eaisly add in a 3rd or 4th party to the pred/prey model or some other dependencies and spit out new results in 30minutes while Excel may require completely re-tooling your coding.
There are many things that Matlab does that Excel simply cannot do, and there are many more things that Matlab does better than Excel. The first thing I would teach your bio students about matlab is its ability to loop over a function. This has many implications relevant to modeling biological processes. I'm not sure if this is too advanced, but one activity you might try is showing them how molecular *diffusion* works using matlab ([Here's a short script I wrote to simulate Brownian particle diffusion](http://pastebin.com/tyqFhmzV) - feel free to use it). From basic diffusion processes you can touch on topics like osmosis, dilution, how a solution mixture becomes homogeneous over time, how microscopic molecules behave, random walk, stochastic process, etc. It will also give them an idea about how matlab functions work, and how loops can be used to produce live animation. Whether you decide to use this idea or not, I think it's cool that you're introducing this group of kids to Matlab. What a great skill to have (even if minimally) going into college! 
While higher dimensional arrays are certainly more accessible in MATLAB, it is rare that this is the right structure for the data. Even in the case you cited, a two-dimensional array with four columns seems more appropriate (you might not have data for all combinations and they might not be evenly spaced).
Anything requiring 3D matricies, like visualizing flows or displaying hydrogen wave-functions. Also, on that note, anything requiring numerical integration, like calculating the area under a normal distribution or the values of the Debye function.
I do like skier_scott, macvim on the left, and the command line on the right. I also prefer a black background with some transparency to be able to read/look at plenty other things even on a not too big screen... Here's a [screenshot](http://i.imgur.com/wcMhCAF.png) too !
You can do it implicitly (often more stable than explicit, so not a bad idea to learn it), for example using the Crank Nicolson method (which is explained in detail for almost exactly this problem [here](http://en.wikipedia.org/wiki/Crank%E2%80%93Nicolson_method#Example:_1D_diffusion))
 x=1:2:1000; y=x+1;
Even if they never use MATLAB itself ever again, each successive time you are exposed to programming you become more confident with it. I am very excited to teach them.
I don't see any 'global tree' inside makeTree()?
random sampling. Something like S=A(randi(5,50,1),:) to sample with replacement from matrix A of size 5 50 times. You can use it to set up a population for simulation.
cumulative sum
Symbolic manipulation.
That will go over too well with high school students.
Do I have to call tree as global every time I use it?
Oh man, that totally fixed it! Thanks so much! I guess that I have to declare that a variable is global in every function that it is used?
So here's a technical question-do you think there is a more clever way to do this in Matlab? It seems a bit like a kludge to recursively build a global variable. I'm hoping to eventually move to C++, where I think the namespacing is more natural than Matlab.
In honor of the fact that MATLAB stands for "matrix library" I would show them how you can do all the matrix functions natively. 
I use matlab for biology research and it is really easy to create genotype simulators that you can run to model genetic drift. You can change the population size, number of generations, or initial allele frequencies and watch how that will effect the drift process. I recently took a college course in mathematical biology which was based on MatLab which really showed a bunch of applications such as to visualize concepts in population ecology, disease transmittance, etc. Pretty much any biological concept with that can be modeled mathematically can take advantage of MatLab.
Make sure to give them a copy of the cheat sheet in the right side toolbar ;)
Sounds like an interesting project. Could you please elaborate on what you're looking to do? Are you asking for a method to solve your equations, i.e. finite difference, finite element, etc, or are you asking how to generate a graph which updates with your solution?
GNU Octave is free
[Thanks VERY much!!](http://imgur.com/8c0wubL) success!
That is going to be one of the reasons they stick with Excel.
I need to simulate the Lorenz equations (x(dot) = sigma(y-x), y(dot) = rx - y - xz, z(dot) = xy - bz). Sigma and b will be fixed and i'm supposed to simulate these with various starting (x,y,z) and varied r and plot the trajectories
Solving systems of linear equations (and doing least squares fitting for over-specified systems) using the "\" operator: http://www.mathworks.com/help/matlab/ref/mldivide.html bread and butter right there.
google "ode45 matlab" But if you want to do it yourself then you can google "discretization" and "euler's explicit method". Basically you replace y_t with (y_(n+1) - y_(n))/(steplength), and then you rewrite so you get an iterative formula: y_(n+1) = y_n + steplength*(......) And then you step this equation through a for-loop. 
There are other methods but if you just want to plot fast and don't care abbout performance then just use explicit euler with a small step length
&gt; ode45 was exactly what I was planning for lesson 2 I really hope you're joking. The ode45 function is horrific, and will just confuse them all to hell.
&gt;MATLAB code tricks, discussion, and questions; but we don't do your homework! 
At least this one was up front about being useless...
What is the simplest task that motives matrix algebra? Solving a system of equations?
x = 1:2:1000; y = fliplr(x);
You most certainly can - you can simulate pretty much any physical or electrical system with SIMULINK - all depends on your expertise.
Yes. SimPowerSystems and SimElectronics are designed for this. You can also use base Simulink to implement the differential equations.
I have circuit "blocks" that are specialized circuits. More specifically, every node is now a 4-component vector, in addition to charge, I have spin currents flowing. All this sounds a lot like a simuLInk application, I have the individual blocks and they need to be connected. Is this EASILY doable in Simulink? If I put 20 hours into this can it be done ? ( Just trying to connect 3-well-defined-blocks) 
Thank you. 
Thanks.
I get what you're saying, but I defined max_delay to be a rounded integer. Very strange
No basically in numerical analysis i.e. simulating stuff there are two concepts: convergence and accuracy - some algorithms have slow convergence (which I called performance) but are very accurate, others can be just as accurate but have a faster convergence. Of course the same algorithms might converge faster if you sacrifice accuracy - this is what you are doing in explicit euler method when you are taking larger steps. In that case you are sacrificing accuracy for convergence (faster performance) but other algorithms like 4-step Runga-kutta kan take larger steps but be just as accurate if not more so without converging that much slower than explicit euler.
So what would you recommend if I didn't mind these simulations taking longer?
implement explicit euler method :)
and use a small stepsize like 1/1000th or something you could even use 1e-6 or whatever small you like
Cool, thanks a lot. You've been very helpful, InformationCrawler.
It's not too complicated. What have you tried yourself? Also try to think for yourself what you want your output to be (do you want to use an array of 1ns and 0's to correspond with the output pins? or do you just want to make a dice in matlab).
I'm not that really knowledgeable about matlab. Well i tried using switch cases function but I can't make it to generate randomly. It is a arduino project for my class I have the arduino, breadboard, LEDs and the other stuff, but it is required for the project to run on matlab. This is what i have started so far. function arduinoproject a = arduino('COM4'); a.pinMode (2,'OUTPUT'); a.pinMode (3,'OUTPUT'); a.pinMode (4,'OUTPUT'); a.pinMode (5,'OUTPUT'); a.pinMode (6,'INPUT'); if k = 1 a.digitalWrite (4,1); pause(2); if k = 2 a.digitalWrite (1,1); pause(2); if k = 3 a.digitalWrite (3,1); a.digitalWrite (4,1); pause(2); if k = 4 a.digitalWrite (1,1); a.digitalWrite (3,1); pause(2); if k = 5 a.digitalWrite (1,1); a.digitalWrite (3,1); a.digitalWrite (4,1); pause(2); if k = 6 a.digitalWrite (1,1); a.digitalWrite (2,1); a.digitalWrite (3,1); pause(2); end a.digitalWrite (1,0); a.digitalWrite (2,0); a.digitalWrite (3,0); a.digitalWrite (4,0); delete(a); end
First thing I notice: you're using = rather than == to check k.
sorry, responded to the wrong entry.
"simulate" usually means solving ODEs numerically. for that you use numerical solvers. the simplest forms utilize a fixed step method. for this, i recommend starting with simple euler forward, which is called ode1 in matlab. you download them [here](http://www.mathworks.com/matlabcentral/answers/98293-is-there-a-fixed-step-ordinary-differential-equation-ode-solver-in-matlab-8-0-r2012b) since there's no builtin support. write a function which accepts x, y, z, sigma, r and b as input and returns the time derivatives of x, y and z. look at the ode1 function. you can pass a timespan (which is a vector like 0:1e-4:1 ), the starting values x_0, y_0 and z_0 and additional arguments to be passed to your function. you also provide a function handle (ie @myFunc) to ode1. do that once and it returns the values for d/dt(x,y,z) over the timespan at the points provided in the vector. then you put that whole thing into a loop and solve it over and over again for varying starting values and varying r. in the end, you plot the whole shabang. does that help you? EDIT: is [this](http://www.wolframalpha.com/input/?i=d%2Fdt+x%28t%29+%3D%3D+sigma*%28y%28t%29-x%28t%29%29%3B+d%2Fdt+y%28t%29+%3D%3D+r*x%28t%29+-+y%28t%29+-+x%28t%29*z%28t%29%3B+d%2Fdt+z%28t%29+%3D%3D+x%28t%29*y%28t%29+-+b*z%28t%29) the ode system you want to solve?
I see, what function do you think I can use for matlab to generate randomly? 
No.
Do you want values of k to be generated randomly? If so, look up the function randi.
I think it depends which order you added those folders to the path. Check 'path' to see if the 'libsvm' folder is at the top. Also, use 'which' to see what functions are being used by matlab. 
This is true. MATLAB searches top to bottom through the path and uses the first match. If you want to overshadow MATLAB's function, put your path locations at the top.
Which line did it tag with the unexpected expression? It usually tells you which line the error occurred on.
it didn't, that's what confused me.
How are you running the function? The code looks fine to my version (R2014a), though I can't run it because I don't know what string to send in as an input filename. 'X' doesn't work.
I have no clue how the `libsvm` source code is organized, but I think you should be able to put it in a package (say, "`\+libsvm`") and then access your functions like: libsvm.svmtrain() That way you don't have to worry about conflicting `svmtrain()` or `svmclassify()` identifiers that are globally accessible. 
you lie
1. Save the image you linked to, as filename 2. Load the image in matlab with I = imread(filename); 3. display the image with imagesc(I);axis image;
Instructions unclear. Something something insert tired old joke here. Can't say I've struggled with that particular sequence of events. Nor has a few minutes of random fumbling about recreated it. Not to say you don't have a valid gripe... I've beaten against countless eccentricities in other portions of MATLAB.
Have you tried through the Edit drop-down menu (here you can pick min/max as well as colors to rep. certain values, but I'm not sure if you can pick the #steps)? Also, there is a way to define your own colorbar with range (coded and flexible, not going manual through menus), if interested I can post some of the code I use tomorrow to do this. I use contourf(), so this may/maynot pertain to you..
Yep, there are ways to do all of these things from the command line. But for quick looks I don't always code them in. This is more of an annoyance than a hinderance. 
I feel ya - before I found out about coding these things, I would change the range/colors by hand through the "Edit" menu. Doing that 30+ times finally kicked my ass into gear and I decided that it would be easier to learn how to code it than keep going through the menu by hand.
I'm pretty sure diff just gives you differences amongst elements -- not actually a derivative based on a polynomial with coefficients given by the elements in your array. This is closer to what you want. Sorry, I'm on my phone. https://answers.yahoo.com/question/index?qid=20120221162912AACySKL
OK, several things: * the "~exist(file, "file")" is a problem. what do you want to do here? i would say, you could just call the urlwrite without the exist. at least, you'd have to compare it to "2": if exist(file, "file") == 2..." * atomtype: you read elements 13:16, which gives you a string of length 4. put a strtrim(...) around it to remove the leading and trailing whitespaces. or read 14:15. * no out defined. since "strcmp(atomtype,'CA')" is never true (atomtype has leading and trailing whitespaces), out is never defined and the last statement "out=sum(out)/numel(out);" cannot be performed. define it as "out=[];" * the operation "double(line(61:66))" cannot work. first, you still have whitespaces in the string, so put a strtrim around it. second, double(...) gives you an array of ascii-equivalents for every char in the string. double(10.38) gives you [49 48 46 51 56]. use str2double() for the conversion. * finally, what is "sum(out)/numel(out)" supposed to do? calculate the mean? use "mean(out)". one more hint: use debugging. if you're on matlab, just set a breakpoint in the editor and go through it step by step. if you're on octave, simply write "keyboard" at a position where you'd like to debug. that returns you to the console withing the current workspace. us dbstep to do a step and return to leave debug mode. here's my take on the code: function [ out ] = pdbfactor(x) url=['http://www.pdb.org/pdb/files/',x,'.pdb']; file=[x,'.pdb']; out=[]; urlwrite(url,file); fid=fopen(file,'r'); while ~feof(fid) line=fgetl(fid); if strncmp(line,'ATOM',4) atomtype=line(13:16); if strcmp(strtrim(atomtype),'CA') out(end+1,1)=str2double(strtrim(line(61:66))); end end end fclose(fid); out=mean(out); end 
jeez, where do you teach? my high school didn't even purchase computers with more than windows 95 installed...
anything that reuires an algorithm. as in, one operation on data following another and then following another. building a model of how the signal is propagated in a nerve cell should be rather difficult with excel. then again, you could teach them vb...
It's not through the a high school. The students were selected for a summer program. At least R and Octave (though I have never heard of anyone using it) are free.
Yes, that is exactly what I'm trying to solve. Sigma and b are fixed and r is varied. I've been given a sort of step-by-step of what to do, just not sure how to do it :) I know how to plot a differential equation as a function of time, but in this one there are 3 that need to be done simultaneously, and I'm lost.
well, i use octave extensively. it's free, you know? :-)
simultaneously? that's... unnecessary... ok, first you download the ode functions from the linki mentioned (it's in one of the comments as a zip-archive). put them into your work directory, cd to the directory and here we go. define the ode: % x=[x, y, z] fyi % lorentz=@(t, x, r, s, b) [s*(x(2)-x(2)); r*x(1) - x(2) - x(1)*x(3); x(1)*x(2) - b*x(3)]; we'll do this directly in the ode call. i just wanted you to see the ode by itself. solving the ode with ode1: b = 1; r = 1; s = 1; tspan = 0:1e-3:1; x0 = ones(3,1); Y = ode1(@(t,x) [s*(x(2)-x(2)); r*x(1) - x(2) - x(1)*x(3); x(1)*x(2) - b*x(3)], tspan, x0); plot(tspan,Y) legend("dx(t)/dt", "dz(t)/dt", "dz(t)/dt"); now you've done it once. for one set of starting values and one r. put the whole thing into some loops and redo it. something like this (it's rather crude and quick. you should tweak it): tspan = 0:1e-4:1; b = 1; s = 1; Y = []; leg = {}; for xx0 = 0:0.25:1 for yy0 = 0:0.25:1 for zz0 = 0:0.25:1 for r = 0:0.25:1 Y = [Y, ode1(@(t,x) [s*(x(2)-x(1)); r*x(1) - x(2) - x(1)*x(3); x(1)*x(2) - b*x(3)], tspan, [xx0; yy0; zz0])]; leg(end+1) = {strcat("x0=", num2str(xx0), "y0=", num2str(yy0), "z0=", num2str(zz0), "r=", num2str(r))}; end end end end plot(tspan, Y) legend(leg, "Location", "SouthOutside"); it's pretty ressource demanding. maybe someone has a better version. if you say r has to be variable, do you mean a function of time? if so, you could also pass a function handle for r. or write the function withing the call. EDIT: i just ran this myself. the plotting is pretty ugly. it works, though. maybe only use two vectors for x0? then it might be a little more comprehensive. EDIT: fixed code according to [ge[...]ef's](http://www.reddit.com/r/matlab/comments/25iylg/need_help_simulating_an_equation_with_various/chmcx96) comment.
I guess the easiest way to do this is using fprintf: fprintf('%8.2f\t%8.2f\n',A') The %8.2f means each field (element of the matrix in this case) has a width of 8 and .2 means that it prints 2 decimals. A should be your matrix, notice it has to be transposed so that it is displayed correctly.
Same, but for quick checking a comparison between two images, it's pretty annoying. edit: again I should be more specific: for a quick eyeball when you don't know the min and max range of the union between the two. And I know this can be coded: note the cranky part of the post. 
Think using 'format bank' or 'format long' before generating the output should solve your problem. Can't remember which one it was.
Thanks. I got it working, but /u/in_fact_no_one_does summarized everything I was going to say and more in his/her comment so I'll just point to it.
I've found that when working with mixed scales like this, the command: format long g works well. So will: format short g It's not perfect but better than what you're showing with the 1.0e+03 multiplier.
Not directly relevant to bio, but honestly, plotting is even easier in matlab. The following in matlab: x = linspace(0,2*pi,1000); plot(x,sin(x)) is a lot more time and effort in excel. You first have to define a column of `x` values by starting at zero, define the increment, then auto-fill. Then you have to do it for `sin(x)` in another column and auto-fill. Then you have to select it all and go through a plot GUI only to get a less-pretty plot. This is especially cumbersome if, for some reason or another, you want a lot of data. 10 points may be easy because it fits all on screen, but ty 10,000 points and it will be a PITA. 
**Save it to where?** To save it to another variable, use indexing with the () instead of {}: Big = num2cell(magic(4)); Small = Big(1:2, 1:3) Then you can save Small to a MAT file: save('SmallVar.mat', 'Small')
Quite simply, you don't. Pass it properly or keep using the 'config file on disk' approach you mentioned. Reading a single datapath from a file isn't a big deal. 'Elegance' and 'global' do not go together ;)
Thanks. I was thinking of making some kind of "extra_data_structure" that would be passed through to codes so anyone could, in theory, just encode whatever they want in there and it would get passed. While it is cleaner than the save-and-read approach, it is still pretty messy. 
That is kind of what I suspected. It is too bad though as it would make more sense for code I will be releasing so they they do not have to modify anything inside the actual codes
Editing a config file and/or specifying a data location is a pretty common and expected thing.
I may be wrong but I do not know if it makes sense to vectorize in time. Think of it this way. You could have made your non-vectorized loop start at any point and go in any order (though the results may depend on the order for something like a Gauss-Seidel iteration). However, the same does not hold for the time step. You cannot compute a later time without the previous. The order matters. This is the basis of many temporal integration schemes IIRC. 
no, r is not a variable, at least not in the traditional sense. I just need to simulate those equations as you've described above (thank you, wow) using a constant r, and then do it again for a different r. There is no r interval, just a few different values for r, so i guess it's a set more than a variable
These are all very fun though I am not sure that I would consider: x=[-2:.001:2],y=(sqrt(cos(x)).*cos(200*x)+sqrt(abs(x))-0.7).*(4-x.*x).^0.01,plot(x,y); an easter egg as it is just a plot.
If the camera is mounted rigidly to the vehicle, you aren't too worried about small miscalculations of distance due to vibration/bumps, and you are dealing with a planar surface, you're fine just triangulating an estimate of the distance. I think your best bet if you don't have access to the camera calibration toolbox is to use OpenCV to calculate the camera intrinsics (there's even an included sample program that will do monocular calibration). This will remove the lens distortion and let you calculate that triangulation more easily. Just make sure that you calculate distances relative to the same column in the camera image, as different columns will have different relative distances to the camera lens. For a more complicated solution you can also look into thin plate splines, although it sounds like you're ok with using the triangulation approach. 
What are the data types and dimensions of each image? How about this? http://blogs.mathworks.com/steve/2009/02/18/image-overlay-using-transparency/ 
You don't need to worry about `libmex` and `libmx` because they're part of MATLAB. Haven't seen `vcomp110` though... do you have a 64-bit version of it on your system path somewhere?
I think it's not working because only the boundary condition is known initially. So you can calculate unknown variables by starting at the edge and moving outwards. Each entry is "one equation one unknown." But if you try to calculate it all at once, equations in the center for example will have multiple unknowns in them. If you wanted a more elegant way to program you would have to formulate as a set of linear equations and solve the resulting matrix problem. By the way, what you're doing is called finite differencing. 
You could read in the DICOM with dicomread and then use imshowpair?
Yes, assumed rigid and ignoring vibration. Tools from the link I provided calculate intrinsic and extrinsic parameters. We had a simple stick calibration procedure before (without compensating for the lens distortion), but I ran across the camera calibration toolbox. While overkill, I'm trying to understand how I can use the intrinsics to do what I want because I'm would like to understand more. So is there a way to use the calculated intrinsics to project image plan back to the ground plane?
Yep. This is one thing you can't vectorize is something that depends on the previous state. What you CAN do is create the derivative function and then use ODE45 to solve it. Since it automatigically adjusts step size it should speed up simulation.
I think the easiest thing to do is something like this: http://i.imgur.com/rXOhJh8.jpg (sorry for the rotation) Calibrate the camera then find distance a, the farthest distance from the vehicle you cannot see in the camera frame. Measure h, the height of the mounting of the camera. Use that to find A, the mounting angle of the camera. From this point you can get a pretty accurate estimate using the field of view of the lens (you should be able to find this from the supplier) and your estimate of A to triangulate any row in the image. Basically you figure out how many degrees/radians a pixel in the image corresponds to, then triangulate your distance from the vehicle using that + A. Just be careful because removing lens distortion from the image will "squish" the image, so the full image height might not be the value you use when calculating degrees per pixel. Oh, you should probably also measure the distance your camera is mounted away from your vehicle as well, since it's not a point like I've drawn here. 
[I'll just leave this here.](http://www.mathworks.com/help/matlab/matlab_oop/properties-with-constant-values.html) But seriously, I have no idea how the performance will be inside parfor (or if it will even work)... though it's probably hard to be worse than reading from the disk.
Maybe would a X-obs running mean limit the impact on the noise and give you a better idea where to look for the spikes? eg. if you're looking at the highway speeds of a car over 5 hours and you wanted to figure out when a car ahead got out of the way and the car speed up. Perhaps a 5-10 sec running mean would limit the ~+/- 2mph variation of the car's random speed while still reflecting a ~10mph increase for when the car ahead got out of the way.
Look up the input function from matlab. That should do it.
Why not just use a low pass filter to smooth out the noise?
Ok thanks
Eh, it's the nature of coding in Matlab - if you're writing experimental code, unforeseen circumstances is the name of the game. I have an extra keyval map for both input and output for lots of functions - to my mind, it's the same as varargin and varargout, but from the calling function's perspective.
I am not totally sure what you're trying to do. Also, it is likely that a `for` loop is *not* the best way to do this, but something like the code below may do it for i = 1:N A(i) = some_input; fprintf('A(%i) = %f\n',i,A(i)); end Not sure exactly what else you are looking for. Good luck
Look up the Savitsky-Golay filter. Nystrom and Holmqvist developed a natty saccade detection algorithm based on this, which should be great for your purposes so long as the pressure spikes are pretty narrow and infrequent.
Next time format your code yourself by adding 4 spaces before each line (tab in matlab). Also you havent actually said what problems you have, which is kinda important i'd think. Its not like we are a bunch of psychics here. function B = SolveSudoku(B,Groups) % SOLVESUDOKU Sudoku Solver % % B = SolveSudoku(B): Given a Sudoku puzzle matrix B, made of NaNs % and known values, produces a solution to the puzzle or errors if no % solution can be found. % % B should be a 9x9 matrix constituting only NaNs, and the numbers 1-9. % % B = SolveSudoku(B,Groups) allows the user to specify which groups % of indexes (i,j) should be considered for restriction. % % example puzzle 1 (from http://en.wikipedia.org/wiki/Sudoku) % B = [ % 5 3 NaN NaN 7 NaN NaN NaN NaN % 6 NaN NaN 1 9 5 NaN NaN NaN % NaN 9 8 NaN NaN NaN NaN 6 NaN % % 8 NaN NaN NaN 6 NaN NaN NaN 3 % 4 NaN NaN 8 NaN 3 NaN NaN 1 % 7 NaN NaN NaN 2 NaN NaN NaN 6 % % NaN 6 NaN NaN NaN NaN 2 8 NaN % NaN NaN NaN 4 1 9 NaN NaN 5 % NaN NaN NaN NaN 8 NaN NaN 7 9 % ]; % note this is a simple puzzle and does not use backtracking % % % example puzzle 2 (from http://www.extremesudoku.info/sudoku.html) % B = [ % NaN 1 NaN NaN 9 NaN NaN 6 NaN % 2 NaN NaN NaN NaN 7 NaN NaN 5 % NaN NaN 5 NaN 4 NaN 1 NaN NaN % % NaN 3 NaN NaN NaN NaN NaN NaN NaN % 1 NaN 2 NaN 6 NaN 8 NaN 4 % NaN NaN NaN NaN NaN NaN NaN 1 NaN % % NaN NaN 3 NaN 8 NaN 7 NaN NaN % 7 NaN NaN 4 NaN NaN NaN NaN 3 % NaN 5 NaN NaN 1 NaN NaN 9 NaN % ]; % note this is a complicated puzzle and does use backtracking Bsz = size(B); assert(Bsz(1) == Bsz(2),'Puzzle must be square'); N = Bsz(1); NeedNumbers = 1:N; assert(all(isnan(B(:)) | ismember(B(:),NeedNumbers)),'Only NaNs and 1:%d permitted in puzzle',N); if nargin &lt; 2 || isempty(Groups) Groups = DefaultGroups(N); end % instead of storing NaNs we replace every item in the matrix with a cell % containing the possible solution numbers for that row and column. A = ReplaceNaNsWithCandidates(B,N); % use a deterministic approach to begin with: remove any candidate numbers % from cell that are not valid. A = FeasibleCandidates(A,Groups); % Now begin iteratively proposing candidate numbers and then backtracking % if they do not result in a solvable puzzle if ~isSolved(A,Groups) A = BacktrackSearch(A,Groups); end if ~isSolved(A,Groups) error('unable to solve puzzle'); end % unpack A to doubles B(:) = [A{:}]; % this handles the reshape as well function A = BacktrackSearch(A,Groups) % recursively explores possible solutions CandidateCount = cellfun(@numel,A(:)); [CandidateCount,I] = sort(CandidateCount); I = I(CandidateCount &gt; 1); for n = 1:numel(I) % pick one solution from the group of solutions for S = [A{I}] PossibleSolution = A; PossibleSolution{I(n)} = S; PossibleSolution = BacktrackSearch(FeasibleCandidates(PossibleSolution,Groups),Groups); if isSolved(PossibleSolution,Groups) break; end end if isSolved(PossibleSolution,Groups) A = PossibleSolution; break; end end function A = FeasibleCandidates(A,Groups) % reduce the set of candidates to ones which are allowed given the % restriction that singular candidates cannot be repeated. while true StartCount = sum(cellfun(@sum,A(:))); for n = 1:numel(Groups) % remove values from the candidates that are already taken UsedValues = A(sub2ind(size(A),Groups{n}(:,1),Groups{n}(:,2))); UsedValues = [UsedValues{cellfun(@numel,UsedValues) == 1}]; for I = 1:size(Groups{n},1) Candidates = A{sub2ind(size(A),Groups{n}(I,1),Groups{n}(I,2))}; if numel(Candidates) &gt; 1; A{sub2ind(size(A),Groups{n}(I,1),Groups{n}(I,2))} = Candidates(~ismember(Candidates,UsedValues)); end end % now check to see if there are any candidates that only exist % in one place within the group for I = 1:size(A,1) Candidates = A(sub2ind(size(A),Groups{n}(:,1),Groups{n}(:,2))); MatchNdx = cellfun(@(X) ismember(I,X),Candidates); if sum(MatchNdx) == 1 A{sub2ind(size(A),Groups{n}(MatchNdx,1),Groups{n}(MatchNdx,2))} = I; end end end if sum(cellfun(@sum,A(:))) == StartCount % we have not eliminated any candidates in this pass break; end end function tf = isSolved(A,Groups) % check that all cells have a solution and that all numbers are used tf = all(cellfun(@numel,A(:)) == 1); if tf for n = 1:numel(Groups) UsedValues = A(sub2ind(size(A),Groups{n}(:,1),Groups{n}(:,2))); UsedValues = [UsedValues{:}]; tf = tf &amp;&amp; all(ismember(1:size(A,1),UsedValues)); end end function A = ReplaceNaNsWithCandidates(B,N) A = num2cell(B); A(isnan(B)) = {1:N}; function Groups = DefaultGroups(N) % provides a list of the default sudoku pairs for 9x9 puzzle assert(N==9,'only size 9 puzzle has default groupings defined'); Groups = []; % add in rows and columns for n = 1:N Groups = [ Groups ind2subcell([N N],(N*(n-1)+1):N*n); % for example, column 1 = 1:9 ind2subcell([N N],n:N:(N*N+(n-1))); % for example, row 1 = 1:9: ]; end % add in the squares Blocks = { 1:3 4:6 7:9}; for I = 1:numel(Blocks) for J = 1:numel(Blocks) Groups = [Groups {CombineIndexes(Blocks{I},Blocks{J})} ]; end end function Loc = CombineIndexes(A,B) % to get around the annoying way matlab handles multiple outputs and cells Loc = []; for I = 1:numel(A) for J = 1:numel(B) Loc = [Loc A(I) B(J) ]; end end function Loc = ind2subcell(Sz,Ndx) % to get around the annoying way matlab handles multiple outputs and cells [I,J] = ind2sub(Sz,Ndx); Loc = {[I(:) J(:)]};
I think "try" is what you're looking for. It works similar to an if-else-end block, but instead is try-else-end. Within the try section, you would include any statements you want to run. If an error occurs, it will run the stuff within the else section. The documentation might present it more clearly, but I'd see if this is what you were looking for. 
Ok, so the formula you have is probably based on the "Sunny 16" rule for calculating exposure, which states that in full sun your shot will be properly exposed at f/16 (aperture), 1/100 second (shutter speed), and ISO 100 (light sensitivity). From there, you can adjust any of those settings as long as you make an offsetting change in another. If you bump up to ISO 200, you could shoot at f/22. Or instead, kick up the shutter speed to 1/200th and go to f/11. If you aren't in direct sun, you can either use heuristics like you said to determine the proper EV (there are many charts available), or take a light meter reading. Depending on the meter, some will give you readings in EV while others might just give you lux. As I sit here with a lamp on at night, my meter is reading 3.9 EV^100, or 34 lux. (The 100 denotes that the EV at ISO 100.) As far as your values, you'll probably want to go in 1/3 "stop" increments, where 1 stop corresponds to a halving or doubling of the light and is the standard measure in photography. Hope that helps a bit, but let me know if I didn't hit what you were looking for. 
Ok thanks that helps a bit. I guess my main issue is that I don't know how to put any of it in matlab... 
A few ideas: 1) The best thing to do in terms of debug experience is to use one of the values you know doesn't work; enable a breakpoint at the beginning of the function by clicking the "minus sign" in the grey next to it. Then step through, with the f10 key, until MATLAB pukes, and figure out why. 2) Alternatively, at the command prompt type dbstop if error and MATLAB will break where there's a problem, and you can look at why. Referring back to 1) at this point may be beneficial. 3) a: if the function is inside another m file or function, enable a breakpoint right before you enter the function; b: whether it is or isn't, put a for loop around the function, and a try/catch block inside. So: num_errors = 1 for i_test try function( &lt;pass in the values you want here, as i_test&gt; ) catch error( i_test ) disp( [ 'value ' num2str( i_test ) ' failed.' ] ) error_values( num_errors ) = i_test i_test = i_test + 1 pause end end Comment out the pause if you just want to crank through, or leave the pause present if you're trying to spot a single error.
So i'm trying to understand what you've written here, what exactly is @ used for? and in the very first line, x=[x, y, z] fyi what does this do exactly?
`vdp1` is the function, preferably defined in an m-file. &gt;And why am i getting an error saying undefined function or variable when i try write y = f(x,y)? That is obviously because one of those things (f, x, or y) are undefined. 
I know of a pair of ideas which may help. The first is the idea of loop unrolling [shown here](http://en.wikipedia.org/wiki/Loop_unwinding). Someone may correct me on this, but actually writing out the explicit equations to build your matrix (i.e. writing each line which would be executed sequentially from your loops) cuts down on pointer arithmetic, and may reduce the computation time. In the past, I've cut down on my 'for' loops by writing a separate program which outputs the necessary lines of code as strings to a file. Then I simply copy this into my main program. Whether or not this will help... not entirely positive. The second idea is related to the Gauss-Seidel algorithm. If I recall correctly, this usually results in a tri-diagonal matrix, which can be solved relatively quickly with the TDMA algorithm, [shown here](http://en.wikipedia.org/wiki/Tridiagonal_matrix_algorithm). I would check to see if your system is in tri-diagonal form, because I would imagine this is a faster way to solve your system as opposed to using the standard x = A\b.
I'm not sure I understand what your goal is. What specifically do you want your program to do? Is the user going to input the EV or their lighting conditions? Or will you use the Data Acquisition Toolbox and a light meter to read the data in? Will this be a GUI or command line? 
The second idea is a bit problematic - since it's a two dimensional problem, in order to get a Ax=b formulation, I need to have a (LxM)x(LxM) matrix. Which is not tridiagonal, but rather penta-diagonal and doesn't have a fast inversion algorithm (like Thomas). The first idea, however, seems very interesting and might work. I'll give it a try. Thanks a lot! 
The problem is that you're trying to call the rate function from within itself. Write a function "pendulum" that returns dx/dt. And then write a second function or script that calls ode15 with the first argument 'pendulum'. Good luck!
Write a function that returns the derivative. Then write a second function that calls ode15 (read the documentation). The first argument to ode15 will be the function you defined that returns the derivative.
Hey, easiest way to do this is create a sphere with the sphere() function, grab the handle of the plot itself, and set the face colour to a texture map. Finally set the 'Cdata' as an image that you import using imread(). Anyway here is an example, hope it helps. sphere(100); imData = imread('IMAGE PATH GOES HERE'); ch = get(gca,'children'); set(ch,'facecolor','texturemap','cdata',imData,'edgecolor','none'); axis square 
What's wrong is that x,y,z will all be returned as columns in a single matrix. Try this instead. function dLdt = Lorentz(t,xyz) x=xyz(1); y=xyz(2); z=xyz(3); ... end [t,xyz]=ode45('pro1',[0 1],[1 1 1]); x=xyz(:,1); y=xyz(:,2); z=xyz(:,3); 
I could tell you if I knew but I don't. I think I have to make up numbers for it. I've very new to matlab which is probably why I don't make alots of sense. Or understand much. Basically I want the program to calculate the variables of the equation and to get an EV value. However I don't know how to do this (like even starting the code) or whats actually going on with input 
when you do this, contact(1).phone(1:2) = struct('work', '310-225-1234', 'home', '543-234-2175'); you create 2 "phone"s, each with their own "work" and "home". so it should be contact(1).phone = struct(...) or I believe you can call it as: contact(1).phone(1).work = '310-225-1234'; OR contact(1).phone(2).work = '310-225-1234'; since you made 2 "phone"s 
Ohhh, that makes a lot more sense. My original intention with the colon operator was to make it so that "home" and "work" were accessible inputting contact(1).phone(1) to correspond to the first entry of the array and contact(1).phone(2) to correspond to second entry. I see that it won't work that way. Is there another way to call the fields "home" and "work" without directly inputting contact(1).phone.work or contact(1).phone.home?
You should also save it with a filename that matches the function. Lorentz.m or ode45.m
Lorentz has too many input parameters. ode45 can only work with functions that have two input parameters (t,x). Also you can't use "xyz" as an input variable and then redefine it in the function. So your new code for Lorentz should be: function dLdt = Lorentz(t,xyz) %xyz = [3;2;3]; s = 10; b = 8/3; r = 0.5; dx = s*(xyz(2) - xyz(1)); dy = r*xyz(1) - xyz(2) - xyz(1)*xyz(3); dz = xyz(1)*xyz(2) - b*xyz(3); dLdt = zeros(3,1); dLdt(1)=dx; dLdt(2)=dy; dLdt(3)=dz;
Thanks for your response! Though I think I phrased my original question poorly. What I'm after is something like (apologies for formatting): im1 = 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 1 im1_part 1 = 0 0 0 x 0 1 1 x x x x x x x x x (the top left part) im1_part 2 = x x x 0 x x x 0 0 1 1 0 0 0 0 1 (the rest of it) Then I want to apply different filters to the two parts. as a simple illustration, using fft... im1_fourier = fft(im1_part1) im1_invfourier = ifft(im1_part2) and I would like to do this at the same time without splicing the image up into smaller parts, to then be able to simply superimpose *im1_fourier* &amp; *im1_invfourier* --- tl;dr - would like to avoid splicing or cropping original image, simply to perform a specific function on specific index locations then superimpose the results...
I feel like what you are trying to do is simple, so maybe I am still misinterpreting the question. Something like this? im1=zeros(100); im1(25:75,25:75)=1; imshow(im1) im1(25:75,25:75)=rand(51); imshow(im1) im1(25:75,25:75)=fft(im1(25:75,25:75)); imshow(im1)
Yes, that is correct, thanks. Where I'm struggling is how to the remainder of the image, that is the negative of im1(25:75,25:75) - so like the outlying 'boundary' region. Edit: I have a feeling something like ismember would be useful here, but I'm not certain what exactly. 2nd Edit: To express that in code, something like: im1 = rand(100); im1(25:75, 25:75) = 1; im1(the rest of pixels not covered above) = 0; I feel like we're getting close here, thanks guys!
an easy way would be to use a mask, as suggested above, to simplify logical indexing. im1=rand(100); imshow(im1) mask=zeros(100); mask(25:50,25:50)=1; mask=logical(mask); im1(mask)=0; imshow(im1) im1(~mask)=1; imshow(im1)
aha! YES! The piece of code I was looking for was the im1**(~mask)**=1; Thanks again, good day!
Aye, cheers. I was not aware of the use of **~** ! This gets rid of my woes.
Haha, no that was just meant as an exclamation mark :)
Hi, I know you said you can't share the data, but I do this sort of thing everyday at work (extracting events from noisy signals). If you are willing to share a set of data that I can work with I would be happy to develop a script which will pick out what you want reliably. Trying to explain to you what to do on here with out any data to work with is quite difficult.
I'll ask and see if I can't provide one of the data files, but my guess is that they won't go for it. In the meantime, what sort of information (aside from the actual information, natch) can I provide that might help get an idea of the actual situation?
What is it you are actually measuring, could you describe the system? What type of sampling frequency are you using and how big is each data set (no. of samples)? How does the amplitude of the pressure spike relate to the noise? is it electrical noise or reflected pressure waves of some sort? I work on high pressure hydraulic systems and I have well developed understanding of signal processing and data manipulation in order to pick up events and phenomena such as valve timings, detection of cavitation etc.
I'm measuring pressure waves generated by combustion events. We're sampling at 100,000 Hz and each data set is near 30,000 samples. The pressure spikes are anywhere from 0.5 psi to 8 psi and the noise (which is electrical) is typically less than 0.03 psi. 
Right, so I'm not sure I can really help you then. I can give you the basics on how EV works, but can't teach you Matlab. I guess I still don't even understand the problem you're trying to solve. In essence, you're dealing with A x B x C = X where A, B and C are f-stop, shutter speed and ISO, and X is EV. (This is just a simplification, they're not multiplicative). So when you say you want to calculate the variables and the EV, that doesn't really work - you need at least one side of the equation already solved. Either take an EV and get a range of possible settings, or with given settings, find out the EV. From a photographers's standpoint, the former is the more useful of the two: Here's the light, what settings can I use to properly expose the shot? Even more useful is the ability to lock one of the variables: Here's the light, at f/1.8 (because I want a shallow depth of field) what ISO and shutter speed combination will work? 
@ creates an anonymous function handle. Basically you are passing in a function to ode1 that does not have a name, that you are defining in the function call. @(t,x) means it's a function of t and x. The next part in the call, [s*(x(2)-x(2));r*x(1).....] is where you define the function. In this case x(1) = x, x(2) = y, x(3) = z. The brackets create a vector, where the first input s*(x(2)-x(2)); refers to dx/dt, the second one r*x(1) - x(2) - x(1)*x(3); refers to dy/dt (or d(x(2))/dt, and the third refers to dz/dt. Also, not sure if you caught it, but everywhere you see s*(x(2)-x(2)) it should be s*(x(2) - x(1)) because it's s(y-x), not s(y-y). Not meaning to nitpick in_fact_no_one_does's code, I just happened to see it. Some of this stuff might have been obvious, but I went into a lot of detail because I specifically remember ode functions being a pain to implement correctly (at first). I would highly recommend googling "ode45 matlab" like InformationCrawler said and looking at the examples. You can compare the inputs directly to the system of equations, initial conditions, and it makes it clear how to set everything up.
The short answer to your question is both yes and no. I was unable to figure out how to use BVP4c to solve free boundary problems, but what I did figure out is that my system of pde's is implicit. *i.e.*, I have a system of the form y'' = f(t,y,y',y''), which MATLAB is unable to handle for boundary value problems. MATLAB does have an implicit solver for initial value problems, *ode15i*, but since I have to satisfy y'(0) = y'(1) = 0 as well as y(0) = f(x), I can't do it with MATLAB. Thanks for asking, though. I appreciate it.
So like yourfavoritemusician said, inside your function you are redefining variables that are passed to the function (so basically you are overwriting them and nothing is happening). You want this: function dLdt = Lorentz(t,xyz,s,b,r) dx = s*(xyz(2) - xyz(1)); dy = r*xyz(1) - xyz(2) - xyz(1)*xyz(3); dz = xyz(1)*xyz(2) - b*xyz(3); dLdt = zeros(3,1); dLdt(1)=dx; dLdt(2)=dy; dLdt(3)=dz; end You also don't set s,b, and r inside the function, because then how would you modify them when you want to? New values of xyz are getting passed into the function at each time step, so you don't want to be setting that inside the function either. What you do want is a function of (t, xyz) that can be passed to ode45. But right now Lorentz is a function of several more variables. First, In your script that calls ode45, you need to define s,b,r, so: s = 10 b = 8/3 r = 28 The next line after this is the key to the whole thing: Lorentz_handle = @(t,xyz) Lorentz(t,xyz,s,b,r); This creates a function handle to the Lorentz function that you made, with the constant values of s,b, and r built into it. So Lorentz_handle is only a function of t and xyz, and can now be correctly passed into ode45, like this: [Tsolution XYZsolution] = ode45(Lorentz_handle,[0 100],[3;2;3]); Now you have total control over what gets input to the Lorenz function. Hope this helps.
A few of the *'s disappeared when I copied and pasted your previous code for the function, fyi
I don't often hear "I can't do it with MATLAB". If that is the case, I'm not sure I can even point you in the right direction. I have been surprised by Mathcad in the past, though I have an irrational hate for it. 
Yeah, I don't often hear that either. I could try writing my own solver but that would require doing more research that 1) I don't want to do and 2) don't have the time for. I was doing this for my dissertation but time is running out and it isn't a crucial thing to have.
Easy peasy. Just use an error inside an if statement: if user_input_variable &lt; k error(['input value has to be greater than ' num2str(k)]) end
When you say "matirx based", do you mean that you want the `f` matrix to be the solution? While this is fine for a lot of rudimentary operations, a better way to write out these types of things is simply as A*f = b where `f` is a vector of values (unwound so of length N^Ndim). Then, you populate or build `A` and `b` based on your opperator and numerical scheme (Based on your equations, second-order finite difference) and boundary conditions (and forcing terms). Now, the different algorithms, whether they be Gauss-Seidel, Jacobi, or something more advanced, is decided by how you perform [Matrix Splitting](http://en.wikipedia.org/wiki/Matrix_splitting). At first this is a bit more overhead, but it is, in most cases, a better way to think about it. And you can easily build wrapping and unwrapping functions to handle `f` in matrix or vector form. Just my $0.02
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Matrix splitting**](https://en.wikipedia.org/wiki/Matrix%20splitting): [](#sfw) --- &gt;In the [mathematical](https://en.wikipedia.org/wiki/Mathematics) discipline of [numerical linear algebra](https://en.wikipedia.org/wiki/Numerical_linear_algebra), a __matrix splitting__ is an expression which represents a given [matrix](https://en.wikipedia.org/wiki/Matrix_(mathematics\)) as a sum or difference of matrices. Many [iterative methods](https://en.wikipedia.org/wiki/Iterative_method) (e.g., for systems of [differential equations](https://en.wikipedia.org/wiki/Differential_equation)) depend upon the direct solution of matrix equations involving matrices more general than [tridiagonal matrices](https://en.wikipedia.org/wiki/Tridiagonal_matrix). These matrix equations can often be solved directly and efficiently when written as a matrix splitting. The technique was devised by [Richard S. Varga](https://en.wikipedia.org/wiki/Richard_S._Varga) in 1960. &gt; --- ^Interesting: [^Iterative ^method](https://en.wikipedia.org/wiki/Iterative_method) ^| [^Jacobi ^method](https://en.wikipedia.org/wiki/Jacobi_method) ^| [^Successive ^over-relaxation](https://en.wikipedia.org/wiki/Successive_over-relaxation) ^| [^Matrix ^decomposition](https://en.wikipedia.org/wiki/Matrix_decomposition) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+chmrh58) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+chmrh58)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
cumtrapz()
You can use the command: axis equal to make one unit the same length on each axis. Read more here: http://www.mathworks.co.uk/help/matlab/visualize/understanding-axes-aspect-ratio.html
I'd like to add that most sensor data will have electrical noise of 60 Hz (at least in America). Other locations use power sources at 50 Hz, so if that is the case, then it will be at 50 Hz.
I've never used it for a 3D plot but for a 2D plot I use the axis([xmin xmax ymin ymax]) command. Perhaps adding a zmin zmax in succession in the square brackets would work. 
Can you share your code? Have you tried changing the renderer? Try: set( gcf , 'renderer' , 'zbuffer' )
 assert( user_input &gt; k , 'error message here' );
You're looking for: axis tight It should scale all of 'em based on your data. Also, check out: http://www.mathworks.com/help/matlab/ref/axis.html
Yes this is true, however i have also had situations where poorly shielded cables would pick up high frequencies electrical noise coming from florescent light ballasts.
Draw it in paint
Damn straight.
You should probably do your exam yourself.
"Sparse", you say. Will give it a try Edit: typos
Is it as simple as this? while Count &lt; 365
are you sure you're not actually running into problems with negative latitude values?
That's what I first thought too. If I state Lat=-85 and run the code, it works fine. But the main problem right now is running the code below for each value of latitude: Ho( ( abs(Latr1) &gt;= pi/2 - abs(delta) ) &amp; ( Latr1'*delta &gt; 0 ) )=pi; Ho( ( abs(Latr1) &gt;= pi/2 - abs(delta) ) &amp; ( Latr1'*delta &lt;= 0 ) )=0; 
It works! thank you guys! 
I can't help but feel the indexing you're doing with `Ho` is very unnecessary, but I don't know enough about your source equations to really say. That said, it sounds like you're trying to produce a real value for every latitude/longitude point. This is inherently what [`meshgrid`](http://www.mathworks.com/help/matlab/ref/meshgrid.html) helps you with. Consider the following snippet: [Ls, Lat1] = meshgrid(0:360, -90:90); Lsr = Ls*pi/180; Latr1 = Lat1*pi/180;
That's one of the things I miss in Matlab (or at least, I haven't found a built-in solution yet). The way I do this is: Number = round(Number*10^ndigits)/10^ndigits; Where ndigits is the amount of digits after the decimal point you want. I realize that this doesn't work for rounding to 6 digits everytime but i hope this helps. Edit: You could also take a look here: http://www.mathworks.nl/matlabcentral/fileexchange/26212-round-with-significant-digits 
I saw that but I don't think I can use functions my professor doesn't have access to. I just need to find a way to identify significant digits. Do you think that this would work better? format longE Then calculate the function. Then use your code. Edit: I'm now realizing that this probably wouldn't. 
Wow that is excellent. I think in my case, I would need to put this code back into itself several times because of all the calculations. After rereading the problem for the 100th time, it almost looks like she wants us to do this by hand anyway. I don't know why I didn't realize this earlier. What a waste of 4 hours... Thank you so much for your help though. I definitely learned something new anyway.
Seriously? Never do something by hand if you can let Matlab do it for you :P. Either way good luck with your assignment!
You're correct that format won't work. Format will set the display to a certain number of digits, but the calculations will use as many as they can behind the scenes. By default it uses double precision floating point values. More info [here](http://www.mathworks.com/help/matlab/matlab_prog/floating-point-numbers.html)
Can you post a copy of your code so far? 
You are assigning two values to the variables yindx and then attempting to use the first value, after the second value has already been assigned. The editor is trying to tell you that you are making this mistake, that's what the orange underlines mean. It will tell you what you're doing wrong if you hover over the underlined variables. If you really need to print the whole array in sorted order, just use disp(sort(y)), it will display the data in the standard way, rather than having extraneous text next to each value. Also, share code as text, not as images.
The ascending and descending order showing up numerous times, and also I kinda want to just see how Im doing. I took a web design class in high school and thats the only coding experience I have. 
Use a{ii} instead of a(ii) to access the contents of an element in a cell array. And, please use cellfun().
Thank you for the help. I appreciate it. 
Logical indexing helps (see `time_y_min`). You end up writing way less code in the long run. Ex: x = linspace(0,2*pi,50); y = sin(x) time_y_min = x(y==min(y)); y_max = max(y); y_avg = mean(y); ascend = sort(y,'ascend'); descend = sort(y,'descend'); `y==min(y)` returns a logical vector ([0,0,1,0,0,..,1]). Since you're only looking at sin(x) over one period, the logical vector should have only one 1, with the other 49 entries 0. Indexing into x, you are returned the value at which y is a minimum. I don't know if your professor wants you to use the fprintf statements, but for assignments I've done in the past, leaving the semicolon off (to display output) has always been sufficient so long as the variable names are descriptive enough. Also, take advantage of `doc` and `help` whenever you need to know how a function works. Ex: `doc max` Best of luck!
In general, you want to avoid using eval() as much as you can. The general paradigm for this situation is to use a struct rather than just free variables. This is because you can access fields of a struct using a string variable like so x = 'variable1' a.variable1 = BLAH a.(x) = BLAH So you see, you can use the variable x to access the field called 'variable1'. So in this case, you would store all your variables in a struct, e.g. vars.variable1 = BLAH vars.etc = BLAH vars.yougetthepoint = BLAH a = {'variable1','etc','yougetthepoint'} for ii = 1:36 plot(vars.(a{ii}),times,'color',jet(ii,;) ; end In some ways, this looks more clunky, but avoiding eval() is always a good idea in terms of debugging and maintaining code. The MATLAB documentation actually has this technique I just described in a page about why you should avoid eval. And you also don't have this nonsense about having to use cell2mat() as well as eval...! 
Say your matrix of data is stored in the 60x4 array 'matrix'. N = 6; % Number of samples m = 10; % Number of times each sample is measured x = zeros(N,2); % This is the array which contains your averaged peak heights % For each sample... for i=1:N % Store the sample number (i), and mean peak values (mean(matrix(((i-1)*m+1):i*m,2))) in x x(i,1:2) = [i, mean(matrix(((i-1)*m+1):i*m,2))]; end Your final condensed array is x. The first column contains the sample number, the second column contains the mean peak height, assuming the peak heights are all stored in the second column of your matrix. 
The quick way is with a accumarray(). You have a n x 1 matrix of sample data (col 2), and an n x 1 matrix that maps each sample to its proper "group" (col 1). Accumarray takes these two matrices and accumulates values according to the mapping matrix using a function you choose. Here is a good blog post outlining its use: http://blogs.mathworks.com/loren/2008/02/20/under-appreciated-accumarray/ Next to cellfun/arrayfun/bsxfun, it is probably one of the most useful, yet underappreciated functions in matlab
as geeeeef said. fyi stands for "for your information". i just wanted to indicate that i accumulated the variables x, y and z into a vector called x. as it is an ode system, you can (and should) write it with matrices and vectors. you have probably solved systems of ODEs analytically before and you probably also wrote those as matrices. just for your reference. the ode solver needs a function it can call to calculate the function values, ie calculate the time derivatives at a time t for a set of values for x={x,y,z}. maybe it would help you to read up on numerical ode solvers in general. if you do, start with euler forward. however, this function the solver calls has to be defined somehow. there're several ways. mine is what's usually done for simple ODEs like yours. you can also write a m-file containing the system. it would have to accept a vector x containing the current values and a scalar value time; the return value has to be a vector dx(t)/dt (that is for simulations over time, that is.) however, if you do it like that, it's not as easy to pass additional parameters. but your syntax would be as follows. Let myfunc.m be the m-file containing the calculation of dx/dt. its function definition would be something like this: function xdot = myfunc(t,x) % ... % do your stuff here xdot = ...; and you would call ode1 like this (not tested but i believe that's how it has to look like): Y = ode1(myFunc, tspan, x0); the anonymous function is merely a shortcut and only applicable if you have quite simple ODEs. as soon as you need a loop or anything, it won't work anymore. hope that helps the understanding. to be read with [geeeeef's comment](http://www.reddit.com/r/matlab/comments/25iylg/need_help_simulating_an_equation_with_various/chmcx96).
How do I do that? I don't want to go all the way back and change the original input. Can I mirror the output? If so, how?
You're doing well. Honestly, I was expecting a real mess as some who is "brand new" to MATLAB, but your code is clean and close to a code that moderate MATLAB coder would write.
Do you have any datapoints for this stress-strain curve? Otherwise it is more or less impossible to find the function for the curving part (or intersection with a line) since it differs from material to material. So could you show what relevant stuff you have? (functions/datapoints/scripts/etc).
Well, I figured out the multiple datasets part - but I wasn't sure how to essentially make a velocity profile [like this](http://imgur.com/rUcGEOi) so where the amazing code you gave me above is like one of those dots, I want to produce a line (profile) of these results. The points aren't equidistant though - is it possible to make it so they're at different spacings? Although there would always be 20 readings vertically they would occur at different heights. When I plotted multiple data sets on the same plot that didn't make a difference but I'm not sure if it's significant with a profile.
If you have your points stored in a matrix like A=[x y z] Where x, y, and z are vectors, try something like B=A; B(:,1) = -B(:,1); C=[A; B]; EDIT: It would really help to at least see some snippets of what you've already written.
/u/Walker95's script (almost) works just fine, but if you want it to be a little more compact, you could consolidate the fprintf command and the input command. I also added in a line right above the for loop which actually defines the matrix x. If you don't do this, it'll have no idea what you're talking about when you try to set a value for x(i,j). r=input('How many rows would you like in the matrix: '); c=input('How many columns would you like in the matrix: '); x=zeros(r,c); for i=1:r for j=1:c x(i,j)=input(['A(',num2str(r),',',num2str(c),') = ']) end end 
That's probably your best bet. Unfortunately, if your students haven't had linear algebra (and I'm assuming they haven't, because they're in high school), I really doubt they'll see the utility in all of it. :/
Thank you, this was exactly what I was looking for. 
No problem. If you have any questions about how/why it works, let me know.
just go through each set of points and use pythagoras to find the minimum distance. If you can visually see that it crosses in that region, then you know that the points with the smallest distance between them will be closest to the crossing point.
I'd imagine different stress,strain values generated by the tensile test will be used to define the curve? For curve fitting (to obtain the equation of the curve), I think one might need "regress" from the statistical toolbox. But for OP's purpose, it might be sufficient to use linear interpolation between the points on the curve that are nearest to the straight line. i.e., find the equation of the straight line joining those two points, solve this equation along with the equation of the other straight line as simultaneous equations to solve for the intersection. It doesn't seem to be an exercise that requires MATLAB.
They said he couldn't find the equation for one of the curves, so my assumptions is that numerical data is all they have.
So all you have is the image you showed and you need to recreate that image in MATLAB? One way would be to use [ginput](http://www.mathworks.com/help/matlab/ref/ginput.html); open the image in a plot and sample points along the curve using your mouse. You could then fit a curve to the points to get an equation. 
this may be a bit much, but use a spline on the stress/strain data, then use fzero to find when (spline-0.2% offset)==0.
Yeah, this is possible. The first and second columns of the data variable are the x and y coordinates of the stack. Just make these values non-zero and plot them together using the hold command. The problem you might face is that once you start adding things along the x and y directions, the x and y axes will no longer truly represent the magnitudes of the velocity vectors in the x and y direction. They will only represent the x, y and z coordinates of each stack.
Logical indexing may help. Assuming your data is in variable A, and your sample numbers are 1, 2, ..., 6. idx1 = A(:,1) == 1; ... idx6 = A(:,1) == 6; out = [ mean(A(idx1,:), 1) ... mean(A(idx6,:), 1) ]; 
At least TRY to understand dude, this is not a "please do my homework" subreddit remember. Matlab has a great help feature, use it to look up the functions that have been recommend here and see how far you get. Post your code here (don't make us download your homework either, c'mon)
pp=spline(x,y) ppfit=ppval(pp,x) plot(x, ppfit) is this a correct function ? 
pp=spline(x,y) ppfit=ppval(pp,x) plot(x, ppfit) is this a correct function ? i get the straight line for the front part only hmm ..
Thanks again for helping with this. I'm curious if you had a moment to offer some advice on how to modify the number and spacing of perpendicular lines. I was hoping to space them by a predesignated number of pixels as well as change the number of lines. I'm having a tough time with this general function "perpX = [linspace(p1(1),p2(1),numPerpLines + 2)" 
You can use [cumtrapz](http://www.mathworks.com/help/matlab/ref/cumtrapz.html) which uses the trapezoidal approximation to compute the area f(x) and x given discrete points.
Thanks man. Thats good to hear. Im trying 
gfortran
Is that included in MinGW?
Can't get it to work. Apparently, it doesn't work on Windows based MATLAB..
I was also trying to work around this problem a few weeks ago. There is a program called gnumex that allows you to use other Fortran compilers like gfortran on the windows version of matlab. I didn't get a chance to try it out yet. If you are a student, I remember the Intel Fortran suite being &lt; $150 Good luck!
I think he wants to get a pdf copy of the "help" documentation from matlab
I don't doubt that there is a way to make gfortran work with MATLAB on Windows through Cygwin or something like that, but I'm almost 100% sure that it will be less of a hassle to make a Linux virtual machine of some flavor and install MATLAB there. Looking at the `glasso` package that you're using, it seems like the creators intended for it to be used with Linux (given that the MEX file they zipped with the source code has `.mexa64` extension).
[MATLAB PDF documentation](http://www.mathworks.com/help/releases/R2014a/pdf_doc/matlab/index.html)
Even better. It's all in HTML format. It's a format like PDF. But smaller and renders on about any device.
You will probably want to use cumtrapz(x,y) which integrates y for spacing defined in x. In the example, they gave it a single matrix y and then told cumtrapz to apply unit spacing to integrate y in either dimension 1 (they are taking the top number and bottom number and applying the trapezoidal rule it looks like) or dimension 2 (they are taking the left numbers and applying the trapezoidal approx horizontally).
Chances are that OP has the data Edit: I just saw that he said he didn't have the stress-strain data. Nevermind...
i would do something like this: d=dir('*.wav'); for i=1:numel(d), myscript(d(i)), end, or d(i).name depending what's the input of myscript...
the input is .wav files, so should I use d(1).name?
its really up to you or the specifications of the code. If you want the code to receive the file name or the data itself... 
http://www.mathworks.com/matlabcentral/fileexchange/22829-file-list
There are two errors in the ode45 line, you missed a parenthesis and there is a ; which should be a comma. So change it to: [T,C] = ode45(@(t,y) bacteria_func(t,y,UM,KS,K1,K2,Y),Tspan,Cinit); 
That is a big step in the right direction, I might be able to get it now, thanks!
thank you
Are you saving the matlab figure (with the saveas command, or the toolbar)? Or are you saving the array directly (with imwrite)? If it's the first, try typing axis image; before you save it. You might also want to try set(gcf,'paperpositionmode','auto'); which will allow you to save your figure as it appears on the screen, rather than trying to convert it to an 8.5x11 format for a printer.
Thanks for the response. The toolbar "saveas" creates a wonky-shaped image instead of the dimensions of the crop. Axis equal puts some odd axis around the image and does not maintain the dimensions of the cropped image. Axis image saves it to the original dimensions of the full image, which isn't what I want because I cropped it. I did not try "set(gcf,'paperpositionmode','auto');" as I am trying to save the image to very specific dimensions that the screen does not show. the imwrite function, unfortunately, doesn't save the image with my added plots, but does maintain the correct dimensions. Thanks again. Any other ideas?
I would suggest scaling the figure so that it looks exactly how you want to save it % first you do all your loading and cropping stuff imagesc(X2); % set the figure to the size of the image set(gcf,'units','pixels','position',[1 1 size(X2,2) size(X2,2)]); % make sure the scaling is correct axis image; % get rid of the "odd axis" axis off; % make sure you save the figure with the dimensions you see set(gcf,'paperpositionmode','auto'); % now you do all your drawing lines or whatever % now save the image saveas(gcf,'yourname.png') % OR, you may want to change the resolution, if the screen resolution isn't high enough. Here save a png at 300 dpi print(gcf,'yourname.png','-dpng','-r300dpi') Hopefuly this will work for you. Good luck.
Normalize them and take a dot product---the closer the product is to one, the more similar the vectors.
Create a product quadrature rule using either quadrature rule you have or a mix of the two. So for example if you have the quadrature set: {w1, x1}, {w2, x2}, {w3, x3} Then then product quadrature rule with itself would be: {w1*w1, (x1, y1)}, {w1*w2, (x1, y2)}, {w1*w3, (x1, y3)}, {w2*w1, (x2, y1)}, {w2*w2, (x2, y2)}, {w2*w3, (x2, y3)}, {w3*w1, (x3, y1)}, {w3*w2, (x3, y2)}, {w3*w3, (x3, y3)}
If you mean you want to check which vector has the most exactly equal elements with A and assuming all the elements are integers and not doubles: A = [1 4 6 8 9 10 4 8]; B = [1 3 6 8 9 10 6 8]; C = [2 5 9 3 10 4 9 5]; Beq=sum(A==B); Ceq=sum(A==C); if Beq~=Ceq H = Beq &gt; Ceq; if H==1 disp('B is more similar to A') else disp('C is more similar to A') end else disp('Both vectors have the same number of equal elements with vector A') end else the solution of /u/neurone214 is what you probably need. 
You could for example say if Percent_Filled &gt; 70 Withdrawn = 3*500; elseif Percent_Filled &lt;= 50 Withdrawn = 500; end Total_Volume = Total_Volume - Withdrawn; n = n+1; This way, the Withdrawal rate goes to 3x500 if it peaks over 70% and goes back to 500 when it goes below 50%, staying that way until it goes over 70% again. Also, your "n" should be updated in each step, otherwise you will get an infinite loop. Edit: Reformat