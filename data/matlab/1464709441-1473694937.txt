if you want to normalize (have a value between -1 and 1), you need to divide by the std deviation of each of your signals. This will make the resulting vector unit-less. To answer your original question, the units are the resulting xcorr is simply the product of the units of your two data sets. 
I am also really digging it. Unfortunately I do find some "issues" that hopefully a tutorial or manul might help with. For example, I try to have 2 plot windows going at the same time but it seems to really choke on doing this. Also, you cannot put a legend on any of the plot windows as far as I can tell. But I do believe you can still call the text() command to place text so that might be a work around. 
Good luck! And remember: have fun!!
Look at [textscan](http://www.mathworks.com/help/matlab/ref/textscan.html). You can use it to skip the lines you don't want to read at the start of the file, and to read particular columns from the rest of the file without looping (you'll still need to loop over however many text files you want to read, but no loop to read the exact values you need from a single text file). 
Thanks :D , i'm having a lot of fun :D
&gt; I wonder why inline is so frowned on? Because it can be used to run arbitrary expressions, such as deleting files or directories, changing configuration files, downloading stuff from the internet, etc.
That kind of thing is okay, but really for complex pieces of software it's best to just make the figure in guide and then write your own code. 
&gt; However what if I have more than 2 events? And I'm not sure how many events I could have in a sample? And how would I be able to name them 'Event1' , 'Event2' ....etc. You might look into using cell arrays if this is the case. Long story short- you can add more "stuff" into them that is of different lengths and data types (i.e. cell could have a 1x50, a 1x75, a 3x2 arrays of doubles, and a string called 'mydata' all saved in its 4 entries).
I'm really not that great at making pretty code, but it might look something like this: % Data X = rand(2000,4); % Index from 1 to 2000 ind = 1:2000; % Threshold thresh = 0.05; % Extract indices ind1 = ind(X(:,2)&lt;thresh); % Create subset indices cc = 1; for i = 1:length(ind1) genvarname('Event', num2str(cc)); eval(['Event', num2str(cc) ' = ind1(i)-100:ind1(i)+100']); cc = cc+1; end In this case, you will likely generate ~100 'Event' variables, and some of them will contain negative indices. I recommend simply creating a new variable 'Event' as follows: % Create subset indices cc = 1; for i = 1:length(ind1) Event(:,cc) = ind1(i)-100:ind1(i)+100; cc = cc+1; end Event(Event&lt;1) = NaN; 
I assume you were taught in class how these problems are solved right? It's a linear system if the F_n variables, so you'd set up a matrix and solve, right? Did your class cover that, and provide an intro to doing matrix operations in Matlab? If so, you just need to combine those two concepts. If your class didn't cover Matlab you could start with the documentation. You should know what words to search for because you certainly learned some linear algebra in class. 
Yes we just recently convered matrices. What would I need the matrix for? I hate blaming others but my professor blows through topics so I need to teach myself.
When you call the function are you using two output variables?
This would be a good place to start. http://www.mathworks.com/help/symbolic/solve-a-system-of-linear-equations.html Basically your A matrix will be everything to the left of the = sign and your B matrix will be everything to the right of it. Move all constants to the right side. Also take this with a grain of salt as it's been a few years since i've actually done this.
Yeah I couldn't copy my code into reddit and have it keep its formatting for some reason so I rewrote it in my post and forgot the parenthesis haha, it has them in the original code though
I still do not understand why people insist on using the symbolic toolkit for numerical calculations. 
Link to the release notes: http://uk.mathworks.com/help/matlab/release-notes.html That should show you all relevant changes!
because...abstraction is cool. yeah... that's it... I really don't know...
There are also struct arrays but I do not think that is what you are really looking for. It sounds more like you want to stream your data rather than having to load it all into memory. For one, you can just load single variables with `load` (and use `whos` to see the variables in a file) but I am not sure how that works with structs (and I would always hesitate to move away from structs since I think they are a godsend for understandable data storage). I would spend some time looking at [Big Data with MATLAB](http://www.mathworks.com/discovery/big-data-matlab.html) and see if that is promising. They seem to have lots of options
I think you can plot over a pcolor or contour(f) plot. I did a quick Google search and it seems like there are people doing this.
Looking back over we have covered it in the book. How am I to incorporate this into matlab code?
I think I've done something similar with `scatter` before. edit: take a look at [this](https://www.mathworks.com/help/matlab/ref/scatter.html#btrli6o-1_1)
When you say their features are different - could you be more precise? You should be able to stitch them given significantly robust features.
Performance wise you should try out what is faster: One mat file with all chunks and selectively loading variables from it or having a folder with separate mat files for every single chunk. As for caching previously used chunks my first idea would be that they shouldn't pollute the users workspace if the user is not expected to use them directly. I feel like this should be handled transparently by the function itself by variables that are not exposed to the user so there is no way of someone messing with them unintentionally. I would suggest the use of a persistent variable that stores the chunks after loading them from disk. That way you keep them in memory between successive runs of the function and only need to read from disk if a chunk is not already in there. If memory is an issue you would have to include some logic that purges some of the older entry's if memory is getting full because the user would not be able to manipulate that variable themselves. Edit: I think I misunderstood your chunk problem. If you want to distribute just a subset of the chunks to people, maybe you can include a variable that states what subset has been included so you can not only catch if a user is requesting outside of their chunks but also verify on run if all the chunks that are supposed to be there are present
Assuming you either don't have the database toolbox or it doesn't meet your needs: I would look at using larger files to avoid some of the fragility. Matlab has a few different save formats with [varied performance](http://undocumentedmatlab.com/blog/improving-save-performance); if your data is mostly numeric, the v 7.3 format (hdf5) would likely work well for much larger file sizes (multi-gigabyte). Organization within the files will significantly affect performance (i.e., storing lots of data in a struct in a file makes for easy organization, but you can't load just part of a struct from a file; flattening structs makes it a bit more work to save/load, but it allows you to only load the specific fields you need). I'm not actually sure how much data you're talking about--you said 850MB, but you said 16000 50 MB files (which would be ~800 GB, not MB), but, with proper organization to support partial, on-demand loading, the hdf5 format (whether v 7.3 or using the hd5lib functions) should support the file size and offer decent performance (ymmv). Regardless of how many files you use, i would suggest using some extra setup to optimize both performance and robustness--use some top-level indexing and error checking to ensure graceful degradation in performance if expected files/variables are missing. It might be worth your while to create a config file with a list of files/folders/variables available; use a wrapper function to walk through the directory/prompt for user input (with a small gui if needed) if the config file doesn't exist or is poorly formatted (same with the index file--use it if it's there, create it by walking through the folder struct if it isn't). In this way, you can limit what the user is allowed to do based on what is available--if they delete/rename files or variables, your interface can: 1) simply not offer access to those files; 2) prompt the user to replace the files or point the program to the file location(s) (e.g., via `uigetfile` or `uigetdir`); or throw an appropriate error/warning for the missing data but continue on as much as possible without the missing file(s). You might look at how sqlite is designed for ideas--to an extent, your use is similar to sqlite's use (local, self-contained database), so looking at the way it handles it's database might help you avoid problems. 
OK, this sounds a little like what I already do... My catalog file contains metadata about the datafiles, and I have scripts to manipulate and query it. My dataset is never going to be more than at the EXTREME most, a few thousand files, so I don't know if there's an advantage to be had by moving up to a proper database setup. I'm a little unclear on exactly what gets stored in the database. Is the database essentially just a very large table of metadata, or does it contain the actual data files itself? And if so, how much flexibility could I really get in partial loading of files? Essentially, what I want to be able to do is to issue a command like this: "Make a list of all datafiles that have property X. sequentially, for each item on that list, load only variables A and B from the datafile and perform operation M on those variables. Store the results from M in output table T, in the row corresponding to the current datafile." It seems like I *COULD* do this using my current setup, if I had a more fine-grained file structure, e.g. if separate portions of a file were stored in separate .mat files, and my "master catalog" contained paths to each sub-file for a particular datafile. Would a proper database offer any advantage over that kind of system?
You'll need to explain more, but you can just use two different color maps like gray and red.
No problem
To perform error handling (executing some code if an error occurs), see http://uk.mathworks.com/help/matlab/ref/try.html. This is a basic programming concept well worth getting familiar with. However, it's considered bad practice to use try/catch for an error that you know will occur. In your case, use str = input(prompt,'s') which will read the string without evaluating it. Then you can validate the string yourself eg. Checking the length is &gt;0, checking that 'str2double' gives a sensible result, and repeat the prompt if not
That error means that 'size(origs)' and/or 'size(origt)' is not the same as 'size(x)'. You need to make sure that the coordinates of your grid ('origs' and 'origt') are laid out the same way as the data values ('x'). 1. Could you explain how you are reading in the data from x.txt? 2. Also, are you sure that both 's' and 't' are the same vector with 'length(x)' datapoints? Or should there be a different number of rows vs. columns? 3. Finally, I don't think this is the correct way to resample the grid (for example, can you tell me how many points the 'newS' and 'newT' grids have in comparison to 'origs' and 'origt'?): - [newS, newT] = meshgrid(2*s, 2*t); 
1) I'm using x=dlmread('x.txt') to read the .txt file. 2) it says in the problem that 's' and 't' need to have the same starting and ending values, so I assumed that they needed to be the same. I might be wrong though, and if it works a different way then thats the way I'll do it. 3) all of the matricies are 80 by 80, I found this out by typing size() into the command window. 
That is very weird. So when you run the these commands, they return the following results? &gt;&gt; size(x) ans = 80 80 &gt;&gt; size(origs) ans = 80 80 &gt;&gt; size(origt) ans = 80 80 You should not get that error unless these matrices have different sizes from each other. Maybe a long shot, but are you overwriting the variables some place else in the script that may cause this? Other than that, I am at a loss... Regarding the sub sampling question (3.) the problem states: &gt; • What are the ranges of s and t for the two grids? Doesn’t really matter, as long as both start and stop at the same s and t values. &gt; &gt; • The newS, newT grids should have twice as many samples as the original ones So if 'origS' is a 80x80 matrix, what should be the size of 'newS'? And if 's' and 't' are vectors contain 80 points between 0.0 and 1.0, what does the following statement do: [newS, newT] = meshgrid(2*s, 2*t); Does it create a grid between 0.0 and 1.0 too? Does it double the number of grid points compared to 'origS'? 
When I find the the interpolated polynomial, I only know its points (I can graph it), and not its actual function. Unless I am doing something wrong?
What was the problem? It may help others if you provide a solution :)
Use "xlim" and "ylim" to fetch the current axes limits, then use those values in your script to recreate the zoom.
One of the images are taken from satellite with resolution 1 km daily. The other one is taken from satellite with resolution 30 m in every week. I need to fused those images. Any suggestion about algorithms? Also before fusion, I need to spatially aligned and sizes of images are different. What can I do? Thank you for your opinions.
Have a look at SIFT.
Thank you :) , I will check 
Never mind did all job myself.
To plot one point: plot(3,4,'marker','o','markersize',10); will plot an open (blue?) circle of size 10 (arbitrary?) at (3,4). Take a look at the [plot()](http://www.mathworks.com/help/matlab/ref/plot.html#namevaluepairs) documentation, I linked you to an abbreviated point for line specifications you can do. They take name,value pairs, and you can customize as you like (within how MATLAB will allow).
&gt;So ideally, it would produce a 9x2 array If you already know it will be 9 input/output pairs, for-loops are typically used for this (though while-loops will work). While-loops are typically for when you don't know how many iterations you'll be having. As to save your data, you could add this: dataSaved = []; before your loop and dataSaved = [dataSaved; xval, yval]; within your loop, just change xval and yval to the appropriate variable names you're using. Using a for-loop, you'd want something like: dataSaved = NaN(9,2); for ii = 1:9 f = ii*0.01; % your calculation dataSaved(ii,1) = xval; dataSaved(ii,2) = yval; end Note: I've initialized your dataSaved array as NaNs (Not-a-Number), a numerical stand in for data that isn't 0 or 1 (but you could use the zeros() or ones() functions). I just do that as if you still have NaNs, its easier to see you've messed up your calculation somewhere.
This worked perfectly! It did exactly what I wanted. Can headers to each column be assigned, and then exported to Excel? Sorry if these are really basic questions, I'm trying to learn enough code to eliminate doing the same equations over and over again
Great... Yet another post trying to cash in on Muhammad Ali's death. /s 
To compare strings, you need to use strcmp. 
Thanks a lot. =) At least someone isn't just downvoting questions ;-) 
Edit: X = d(:,coord); should be my initialization, not what is posted in the paste
So I can only view your code on mobile right now, which makes it harder to see exactly what you're doing, but what I would do, since you already know how many steps you're taking is just first initialize a variable, say `X_new` with zeros: X_new = zeros(n_steps,6); Then, each time you calculate `x_new` add it to your big variable: X_new(k,:) = x_new;
Look at the function 'datevec'
Also try datenum and or datestr, you can enter the format of your dates and then add or subtract etc
You can have multiple methods sections. Such as... %type-a methods Methods Insert methods here End % type-b methods Methods Insert more methods here End This will help organise your class. You could have a similar approach to properties too if you have a large number of those. Setting different methods blocks to hidden/private etc helps tidy up things when using the class also. Preventing users/other classes being able to see and/or access methods purely for that class. Another tip is using the 'go to' button at the top of matlabs UI. that'll help you skip straight to any function you want to find rather than scrolling through the entire class. However, I do agree with the post above. If the class is getting too big, it's always a good idea to break it down into smaller classes. Hope this helps.
So they added numpy-style broadcasting. This is a useful feature, but it seems like adding it now can break a lot of code that currently expects such operations to fail. In the [language ideas thread]( https://www.reddit.com/r/matlab/comments/4l650l/how_would_you_improve_the_matlab_language/) I suggested a new syntax for this because I thought it was too invasive of a change. I guess mathworks disagrees. I am glad about scripts supporting functions, not so much for scripts themselves but rather because I hope it is the first step in allowing functions to be defined in the command line.
I agree about Python style defaults. (then again, I am moving to Python so maybe I want Python-style everything). But on that note, I am also interested in &gt; string Array: Manipulate, compare, and store text data efficiently I hope this makes working with strings a bit easier 
That's ridiculous! What is it being replaced with?
Basically, you won't need it: &gt; Implicit Expansion: Perform element-wise operations and functions on arrays with automatic expansion of dimensions of length 1 
Was this not already possible? I define a couple of functions in this script just fine: http://pastebin.com/nKeaQc5y
I doubt they'd remove it though, but it's also like for vector a and scalar b, a + repmat(b, length(a),1) arrayfun(@(x) x+b, a) bsxfun(@plus,a,b) a+b I know which one I prefer! 
I wonder if I've been doing things incorrectly all this time? I leave scripts out of "production" code entirely... but I use them all the time for quick-and-dirty, at-the-command-line analysis... which is where I will welcome the new ability to define local functions. 
An image matrix is just numbers, so you can apply any mathematical operation you want. It's easier if your image is grayscale so you don't have to compute overall brightness based on three separate RGB channels, which looks to be the case here. For example, if your image values are in the range 0-1, and you wanted the high end to be dimmed, you could do something like: I2 = log(2.2, I+1); This gives you I2 where every value is the log (base 2.2) of the brightness in (I+1), with the end result that I2 is slightly brighter for the values on the dim end, about the same for brightness values in the middle (around .5-.6), and somewhat dimmer for the brightest values (a value of 1 in I becomes about .88 in I2). It looks like you're working with images in the 0-255 scale, but it's easy enough to rescale... I just went with 0-1 because it was easier for the example. But the same rescaling for the 0-255 range would be: I2 = log(2.2, I/255 +1) * 255; Anyway, you could play around with all the parameters of the equation (log base, add/subtract values to I, add/subtract a value to the overall result), or use another function besides logarithms as the basis of the expression, and get whatever input/output curve you want... I'd suggest just plugging in things and seeing how they look. (You can also use a graphing calculator, which is what I did because I'm on mobile right now, or Matlab's plot() function to graph the input/output curves and get a sense of how different functions will behave.)
This isn't as straightforward as it seems. It's a quite advanced topic. Check out the following paper on one technique to estimate a reasonable value. [Ben-Ameur, W., "Computing the Initial Temperature of Simulated Annealing" Computational Optimization and Applications December 2004, Volume 29, Issue 3, pp 369-385](http://www.mathworks.com/matlabcentral/answers/uploaded_files/14677/B:COAP.0000044187.23143.bd.pdf)
That is not a script, it is a function file. They are two separate things in MATLAB.
The textbook i was using as a reference used globals in their code. 
Check out Numerical Techniques in Electromagnetics with MATLAB by Sadiku.
Two things: What do you think T=zeros(1,M+1) Is supposed to do for a M of 0.005? Secondly, i think you are confused what exactly your step size is. From your question I assume you think M is your step size right? Have a look over your code and think about wether that makes sense. The line where the Euler step is actually performed should give you an idea
Why don't you try to explain in your own words how you think the Euler method works and we'll see from there. Apart from that, try to explain what the command zeros(1,M+1) actually does, I think that might clear up some confusion.
From what I understand, the command zeros makes a matrix of zeros. So, zeros(1,M+1) should give me a matrix like this right? (1 1.005) not good (Do I make this matrix so I can store values in it?) Euler method approximates the solution of ODEs. Something like this dy/dx = 3x - 2y Step size is the amount of times I increase the value of x for every iteration of the loop. I tried solving some exercises with the pen and paper, I was semi successful in my attempt. I don t really understand the second faze, I increment my step size in my example 0.5, from 0 to 0.5 on the x, then my y goes to 1.5 from 1, how? I don't really understand from the video... Here is the example I am trying to understand: dy/dx = y y(0) = 1 y(x) = e^x step size 0.5 x | y | dy/dx 0 | 1 | 1 0.5| 1.5? | 1.5 1 | 2.25?| 2.25 
For clarification, &lt;text&gt; is any type of text content? And # is some number? Are the numbers strictly decimals or integers or scientific notation? Are the spaces and commas uniformly repeated or does your example have a typo for those?
h=(b-a)/M; this is what calculates my step size? And M is the number of steps? 
You start with two halves. Each half is equalized so that the pixel values follow the distribution you specified. If you then combine the two halves, the combined image has the same pixel value distribution that each half had. So when you run histeq on the new image, it sees you already have the specified distribution, and changes nothing. You should be able to see this by looking at the histogram of each equalized half image and then the combined image before equalization. The shape should be the same.
The number of value needing to be replaced is known. I have a 3 671x1 arrays. These get concatenated into one array(671x3). However, there is a function which does something I need and puts the first two columns into the #,#,# format, where the third number in every pair is always zero. I need to replace these values with the values from the third column of the 671x3 array.
Based on reading that, it sounds like it's saying to: A = histeq on the whole image B = histeq on left side C = histeq on right side D = weighted average of A, B, C, where the weight depends on how close you are to the center Does that make sense? 
 str = ['This is sample data ' char(10) ... 'This line should be untouched \n %d 3.5,6.7' char(10) ... 'Convert 3 coordinates 1.23,4.56,7.89 1.23,4.56,7.89 1.23,4.56,7.89' char(10) ... 'Convert 1 coordinate 1.23,4.56,7.89' char(10) ... 'End of sample data' char(10)] newCoordinates = 1:4; % Assumes there will be 4 matches in the text!!! str = strrep(str,'\','\\'); % Escape for sprintf str = strrep(str,'%','%%'); % Escape for sprintf numPattern = '[\d.]*'; fmt = regexprep(str,['(?&lt;=' numPattern ',' numPattern ',)' numPattern ],'%d'); result = sprintf(fmt, newCoordinates) If you want to toggle the precision of the new number, you can play with the '%d' value. If it finds anything other than 671 values it will give ugly results since sprintf truncates or repeats the format as it needs.
Thank you very much, kind interwebs stranger! 
The key to setting a good initial temperature is to set one which allows the probability of choosing an inferior solution to be very high (nearly 1) initially, for a good length of time. I think this is often done by trial and error (at least that's what I do), though as the other user stated, you can get very detailed about how you choose the initial temp value. Do some trial runs where you print out the probability for many iterations. The probability should start near 1 and decrease to zero in a way that seems reasonable to you.
That's the hard part, and largely up to you. Here I've provided some really rough code that linearly weights the whole image eq and the combined (left / right) eq, using more full as you get closer to the center, and more combined as you get closer to the edges. x = imread('peppers.png'); x = x(101:110,101:110); x_left = x(:, 1:round(size(x,2)/2)); x_right = x(:, round(size(x,2)/2)+1:end); nbins = 10; x_full = histeq(x, nbins); x_left_eq = histeq(x_left, nbins); x_right_eq = histeq(x_right, nbins); x_combined = [x_left_eq, x_right_eq]; x_full = double(x_full); x_combined = double(x_combined); weights = zeros(size(x)); % lets do a weighting where the edges are fully taken from the split % equalization and the center line is fully from the full equalization, and % everything else is a linear relationship middle = size(x,2) / 2 + 0.5; for i = 1:size(x,2) weights(:,i) = (middle - i) / middle; end percent_split = abs(weights); percent_full = 1 - abs(weights); final = x_combined .* percent_split + x_full .* percent_full;
Sure, lots of ways, depending on exactly what you want. First of all, it's probably easiest to start by converting all the date information to Matlab datenums, so you can operate on it using normal mathematical operations. Then I'd just concatenate the data arrays and then sort by date. 
Thanks - I have a matrix with 4 variables. Each row corresponds to a date in a date time array. My second set of data is similar to that but with a different number of rows. I converted the dates to datenums. How would I combine the datenum columns such that the 2 matrices of 4 variables are assigned to the appropriate dates, preferably daily values. 
Thanks I think that'll work. I can then use the interpolate function to get daily values. 
If I can do if lower(str) == other_str instead of if strcmpi(str,other_str) I will be a happy man. Makes the code way more readable. 
Permutation tests are the standard way to evaluate the significance of a classification accuracy against chance, and you could also use them to get the distribution of classification accuracies under H0 (the null hypothesis) to do Bayesian stats. If you calculated the Bayes factor of each of your classification schemes, that'd be a nice way to compare them. Permutation tests: check out Ojala &amp; Garriga 2010 for more --&gt; http://lib.tkk.fi/Diss/2011/isbn9789526043234/article5.pdf Bayes factor: https://en.wikipedia.org/wiki/Bayes_factor
It also shows you how each data type is stored in memory. What else do you want to know?
What difference are you looking for??
Lol wut? That's the exact and all the details of the difference. Not OP fault if you don't understand. 
They have different binary representations, just as the link indicates. 
I'm no expert in this area, but I would *think* that if the idea is that the received signal consists of the transmitted signal plus noise, then I can't see how adding `txSig` like in the first example could make sense. Looks like a mistake in the documentation. But I might have misunderstood, because if you add `txSig` then I would have thought this would result in a better SNR and thus a lower BER... (unless the signal also needs to be renormalized)
Based on this: http://www.mathworks.com/help/comm/ref/awgn.html it seems that awgn function returns the summation of signal x with the white noise. So I think that for in the first documentation link, the transmitted signal txsig is added twice to the noise. 
I'd prefer to not use fit - I'm trying to think if there's a geometric argument that can be made. Like, if there's a way I can do a projection or something. 
The mathworks website has all kinds of resources to learn matlab, and there are tons of videos on YouTube. I would start with learning the basic syntax and how to talk to matlab, and then go from there.
You could check out Matlab for Neuroscientists. It teaches quite a few neat things, and is good for developing commonly used technical skills at the same time (e.g. Fourier transforms, wavelet transforms, etc.). Other than that, the main thing is to just keep working at it.
I was having a really difficult time looking for matlab resources that were my speed and the YouTube Vandebuilt ones were perfect and free. I'll probably run through all the tutorials (possibly buy the book) and spend all my free time on stackexchange. Good luck!
Thanks for the great suggestion! I'll definitely check it out :)
How difficult is matlab for someone who doesn't know anything about coding but Java? I'm not that advanced in Java; I only took one course in University about it.
I'm basically completely self taught on MATLAB. The documentation is very good. So long as you know basic syntax (which is pretty easy to learn) you'll be fine - the best way to do it is to have a real problem to solve, rather than make up exercises. So just jump in and go for it. A couple of hints: Learn about the different data structures, like cell arrays and structural arrays. Very useful. Document. Sounds like you program already but always worth reiterating. Preallocate whenever possible. Depending on your code this could reduce run times by orders of magnitude. Learn to time different parts of your program - it'll make you a much better developer if you develop an intuition of which things take how long. It's not hard. 
I've recommended the Vanderbilt Coursera course to several students working with me who had no programming experience, and they've loved it, but I'm not sure how it would be for you given you have some programming experience. Still worth taking a look at: https://www.coursera.org/learn/matlab 
learningmatlab.com is an awesome resource. If you go to that website and click the video tutorial links. You can follow along with a bunch of very in depth explanations. Some of the videos can seem drawn out but they are very informative.
It's one of the easiest languages to learn. I've tried learning Python, C, JavaScript, and MATLAB and MATLAB was by far the easiest. First thing you should learn are the basics. if statements, for loops, while loops. Then learn how to do basic plotting. Learn how to write functions. Then learn how to vectorize code for speed. That's should be enough to call yourself fluent in MATLAB.
[Control Tutorials for Matlab and Simulink](http://ctms.engin.umich.edu/CTMS/index.php?aux=Home) from UMich, CMU, and UDMercy is a good resource to start with even though it is focused on control engineering problems.
[removed]
Looks like simulated annealing? How quickly does it converge?
&gt; *pretty* optimal solution (emphasis added). That was my experience too. I built a solver for fun and found that is often did very well but was only the most optimal solution sometimes.
Don't use symbolic math and make c(f) into an anonymous function: c = @(f) *equation*
I am not an expert so I may be mistaken but yes, you'd need an exhaustive search for a probably optimal solution. I do not know how simulated annealing compares to other ways but in some of my research, I start with different starting points and can get wildly different optima. 
Simulink side looks good to me. 
SA was my favorite optimal technique taught in computational techniques. Simple to understand with great results.
Back in 2014 Matlab introduced the new function `histogram` to replace `hist`. In a lot of ways, they are very similar, but `histogram` offers some features that `hist`does not- my favorite being the 'Normalization' feature. An optional input into `histogram` is `Normalization` followed by which way you want your plot to be normalized. Your options are: count (the standard), probability, cumulative, cdf or pdf. Probability and CDF are the two I use the most- probability scales the y-axis by doing count in bin/total in graph and CDF is a scaled cumulative distribution. These are both very helpful for when you want to compare histograms of different count sizes. 
Do you mean something like k-means clustering? https://en.wikipedia.org/wiki/K-means_clustering
And it solves first-order equations such as y' = f(u,y) and they can be systems, i.e. y_1' = f(u, y_1, y_2) y_2' = g(u, y_1, y_2) So you'll need to convert this second order equation into a first order system in order to use [`ode45`](http://www.mathworks.com/help/matlab/ref/ode45.html). [You can read about that here.](http://www.phaser.com/modules/elaydi/content/helptips/secondorderode.html)
This is the right answer. Also, consider using an interval for the second argument to `fzero`, i.e. x_root = fzero(c, [0.01, 0.03]) Otherwise `fzero` might try to plug in a number such as `f = -0.01` and will terminate early (due to the `sqrt` in `c(f)`).
Since it is a plane, `[a,b] = grad(S)` from how you defined `S`. You can just compute that a = (S(1,2) - S(1,1)) / (r(1,2) - r(1,1)) b = (S(2,1) - S(1,1)) / (c(2,1) - c(1,1)) Note: In your example you wouldn't need to divide by the `r` and `c`stuff since the denominator would just be `1`. But if you did something like `[r,c] = meshgrid(1:0.5:100,1:0.1:100);` then you need to account for the grid-spacing not being `1`.
I'm not sure what you want to do with your data (there's quite a few different definitions of correlation), but if you have a function which does correlation between two vectors, you can use [bsxfun](http://www.mathworks.com/help/matlab/ref/bsxfun.html) to run it between one vector and a big series of them. 
This. Good (obvious) features to use for the `x's here would be the loss function at the data point and the coordinates of the data point.
For one, see if you can do *fewer* loops and do more of it with vectorized notations. But if you want some projects and/or challenges, check out the side bar with some challenge websites, etc. Or, come up with a challenge and see what you can do. For example, pick up a book on computation fluid dynamics and work through those exercises with Matlab. For the record, you won't want to use Matlab for CFD, but this can be a good learning experiance
Do you refer to k-means? What do you mean with x's? I would really appreciate if you could make a small example. So let's say each data point is of dimension 3. Let's furhter say I have the following three data points x = (x1,x2,x3), y = (y1,y2,y3) and z = (z1,z2,z3). Each data point has an associated loss function value, i.e. for x we have fx , for y fy and for z fz.
Thanks for your hints. This seems interesting. I was not aware of densitiy-based clustering methods. Oh yes, that's an issues with the similiarity. I'm optimizing hyperparameters for an SVM and of course they have different scale. Which distance metric would you use or shall I normalize the data points first before calculating the distance? If so, how?
Could you show us a bit of the code? Setting `caxis(4e-6 * [-1 1])` should work I believe... Make sure you call `caxis` after `imagesc`. Also, two things (food for thought): (i) you could consider making it a `contourf` plot rather than use `imagesc`, with a discrete (non-continuous) colorbar so that one can easily read the value at any point, and (ii) you could use a diverging colormap (e.g., [red-white-blue](http://blogs.mathworks.com/images/pick/jiro/potw_vivid_colormap/potw_vivid_colormap_04.png)) so that you can spot negative and positive values with ease ([colorbrewer](http://colorbrewer2.org/) has some good colormaps, with `.m` scripts shared on matlabcentral [here](https://www.mathworks.com/matlabcentral/fileexchange/34087-cbrewer---colorbrewer-schemes-for-matlab) and [here](https://www.mathworks.com/matlabcentral/fileexchange/45208-colorbrewer--attractive-and-distinctive-colormaps) for example).
I use the custom colormap for my imaging type -&gt; you're looking at compression/shear waves, and in literature its common to have zero'd velocity at a given phase set to black, with the highest point in the sine curve (coming at you) as white, and the lowest point as blue. I made a custom colormap for that, and import it as I go along. I'll take a look at contourf though, may be useful. Thanks! Why would caxis(4e-6 * [-1 1]) work compared to something like caxis(min(pixel) max(pixel)) ? EDIT: I can show some of the code, I made the gui in guide. Here is how I create the iamgesc: % Create colorbar handle, draw and create colorbar handles.data.img_hdl = imagesc(handles.animation_axes, handles.data.cdata(:,:,1), 'AlphaData', ~isnan(handles.data.cdata(:,:,1))); axis image; handles.data.cbar = colorbar(handles.animation_axes, 'eastoutside'); set(get(handles.data.cbar, 'ylabel'), 'string', 'm/s'); handles.data.climits = [min(min(min(real(handles.data.cdata)))) max(max(max(real(handles.data.cdata))))]; set(handles.data.cbar, 'Limits', handles.data.climits); caxis(handles.data.climits); and this is where I update: % Start animation while strcmp(get(handles.animationPauseButton, 'Enable'), 'on') set(handles.data.img_hdl, 'cdata', handles.data.cdata(:,:,handles.data.curFrame), 'AlphaData', ~isnan(handles.data.cdata(:,:,handles.data.curFrame))) set(handles.data.cbar, 'Limits', handles.data.climits); caxis(handles.data.climits); % Set axes properties set(handles.animation_axes, 'XTickLabel', ''), set(handles.animation_axes, 'YTickLabel', ''), set(handles.animation_axes, 'ZTickLabel', ''); set(handles.animation_axes, 'XTick', []), set(handles.animation_axes, 'YTick', []), set(handles.animation_axes, 'ZTick', []); set(handles.animation_axes, 'XColor', 'none'), set(handles.animation_axes, 'YColor', 'none'), set(handles.animation_axes, 'ZColor', 'none'); handles.data.curFrame = handles.data.curFrame+1; if handles.data.curFrame &gt; handles.data.frameCount handles.data.curFrame = 1; end set(handles.animationStaticText9, 'String', ['On frame: ' num2str(handles.data.curFrame)]); pause(handles.data.frameDelay) end
WOW. I wish I had known about your (ii) links some years ago, would have saved me grief and headaches trying to make my own blue-white-red colormaps (which are still rather shit). At least I learned more about colormaps and further ins-outs of MATLAB graphics. No clue why/how the toolbox link(s) didn't show up when I was searching for them, maybe I didn't look hard enough, or had found a work around... thanks, btw
If you do indeed have a csv, you can read it in with [csvread()](http://www.mathworks.com/help/matlab/ref/csvread.html). If you have other formats, take a look at the bottom for links to textscan(), dlmread() functions, also maybe xlsread() if you have an Excel function. As for your correlation... [corrcoef()](http://www.mathworks.com/help/matlab/ref/corrcoef.html) will do that for you. If you have one master vector you want to test against, you'll want to set up a [for-loop](http://www.mathworks.com/help/matlab/ref/for.html) and loop through your interested vectors (correlating with your test one), saving the output for your plot. As for the plot, like LazerBeams said, check out plot() documentation for plotting and fit() documentation if you want to make fits to your data.
Not sure if math works have something built in but this shouldn't be too hard to do yourself. Make a script called "my_new.m" that (1) creates a blank file in a location, (2) fills it with text from some separate template file you wrote and (3) does a search &amp; replace on things like $user, $date, etc.. that are either computed or in some preference file. Then finally, call the edit function on that file. That would be a cool thing to add to the file exchange I think. 
Would recommend using python (beautiful soup module) as a parser for html files, then would print to a csv. Open w/ matlab, then manipulate
Preallocate str3 beforehand. Dynamically resizing the array every on iteration of your loop is an EXTREMELY SLOW operation, and is what is bottlenecking your code. Here's my version that I haven't actually tested: str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'; len = length(str); str3 = cell(len, len); for i = 1:len for j = 1:len str3(i,j) = str(i:j); end end
In case you actually want to modify large strings very fast I wouldn't use Matlab directly. Instead I'd write it in C/C++ and compile with mex so that it can be called from within Matlab as a function. In case you just want to do the operations and the strings are what you use for illustration here I'd try something different depending on the context. 
There might be something with the new templates, but i havent messed around with those in 16 (a or b)
There are lots of options. Why not try surf(t,x,u) or imagesc(t,x,u) 
yes, this is why you call the functions with three arguments, t, x, and u.
Basically I'm trying to create a function that will draw a UML style class diagram for a larger matlab project. Containing multiple folders and around 6-700 .m files which are a mixture of classes and functions. I'm ok navigating the folder structure and getting all the information I want, However I've never really used simulink before and would like to know what commands to use to begin constructing a diagram and how to set text in it, draw arrows between linked ones etc 
You could probably also turn the outer loop into a parfor for substantial gains on multiple cores and vectorise the innermost loop for some small gains.
You can do something like: surf(x*ones(1,size(u,2)),ones(size(u,1),1)*t',u) If I did my math correctly, that should give you an x matrix that is the same size as u but varies only in row and a t matrix the same size as u but which varies in column. You can then use the surf function.
This looks very promising! Thanks very much.
This worked really well; thank you so much! Basically, I got it to run, but didn't get it to run well or efficiently.
awesome, thanks for walking me through it!
great thanks ! I hadn't thought about the axis commands !
I will, as soon as it's made !
Please read the homework submission guidelines [here](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/). Show us the code you've started, or at least the math you've worked through- something so that we can help you. 
That's the actual Matlab download page - the release notes are publicly accessible [here](http://www.mathworks.com/help/pdf_doc/matlab/relnotes_pr.pdf?elqTrackId=41b85927aea240c7b7e638647cca47f3&amp;elq=9c6fe2adcfe5418c8e26e97c22fc02a6&amp;elqaid=13594&amp;elqat=1&amp;elqCampaignId=4303)
Oh, great, thanks! I wonder why they say that it's protected by an NDA if it's public....
 cycs_per_min = 50:65; f = cycs_per_min/60; w = 2*pi*f; g = 9.81; l = g./w.^2; dt = .2; tmax = 30; t = .2:dt:tmax; theta = zeros(length(w),length(t)); theta_i = pi/4; for i=1:length(w) theta(i,:) = theta_i * cos(w(i)*t); end ax = [-.3 .3 -0.5 0.1]; fig = figure; cla; axis(ax); axis square; set(gca,'visible','off'); t1 = tic; clr = jet(length(l)); for i = 1:length(t) x = l' .* sin(theta(:,i)); y = l' .* -cos(theta(:,i)); cla; for j=1:length (x) cc = clr(j,:); plot(x(j),y(j),'o','markerfacecolor','r','markeredgecolor','k','markersize',12); hold on; h = line([0 x(j)],[0 y(j)]); set(h,'color','b'); end set(gca,'visible','off'); axis(ax); drawnow; end The goal is to start each at a different displacement. Could I do that with the linspace command or what would I need to do it?
ATM Im using a perturbation of 0.0001 on values of 2000-3000. I've tried larger and smaller perturbations without significantly changing the finite difference results. Unfortunately trying to do anything by hand is impractical. The analytic jacobian output contains well over 1000 individual operations for each parameter. Another interesting thing is that its close to being right. In particular, i get the exact same result (analytic vs finite difference) for 2 of the parameters. For 2 other parameters the results only differ by a scaling factor (~2-3x). And for the last 2 I get the same answer for a special case (when the "additional fixed variable" is set to zero), but different answers outside of that special case.
Interesting. Still, I suspect a code problem somewhere, but it's hard to guess at what or where it may be. Debugging this particular kind of code is, for some reason, often quite tricky in my experience. Only advice I can really give without seeing your code is to just check *everything*. Maybe try rewriting your code with a focus on clarity and easy verification of each equation, rather than efficient execution or compact code. I often like to break large equations into sub-expressions assigned to intermediate variables, simply because it's easier to see the equation structure and check it against your source material. It's also a good place to identify problems (like a sub expression that has some kind of floating point error or something). 
Also, if large matrices like this [800mil x 5] this consumes too much memory (very possible), I don't necessarily need to save "vals". Each row is the input to another (somewhat slow) function, so if it can be quickly generated one row at a time without keeping such a huge matrix in memory, that would work as well. I just don't know how to do this without a for loop. I originally wrote it like this so I could save vals to the hard drive so I would never have to generate it again since its taking so long. But it will need to be read into memory to be used, so I'm not sure if this approach is any better. I suppose I could split "vals" into more reasonable chunks and read them individually.
A few things right off the bat: * [`doc fminunc`](http://www.mathworks.com/help/optim/ug/fminunc.html) says that the argument `x` is a vector or matrix. Sure, it should work, but it's overkill. Consider trying [`doc fminbnd`](http://www.mathworks.com/help/matlab/ref/fminbnd.html) which minimizes a single-variable function. * `fmindbnd` requires just the function and an interval that `D` lies between. From the problem itself (slash the definition of `T`) you can deduce that `D &gt; 0` and `D &lt;= lb`. * You're missing a parenthesis on line 3 of the function. You should have `T=(lb*lc*W) / (D*sqrt(lb^2-D^2));`. Also, depending on which solve you use you may need to think about what if someone called your function when `D` is a vector and they expect the returning `T` to be a vector. [Look into elementwise operations for this.](http://www.glue.umd.edu/afs/glue.umd.edu/system/info/olh/Numerical/Matlab_Matrix_Manipulation_Software/Matrix_Vector_Operations/elementwise) * Your function `tensao` takes no arguments. `D` is the argument you want. You'll want to remove `T` and `D` from being global variables and have the function itself written as `function T = tensao(D)`. * When passing a function as an argument, you'll need to use the `@` symbol. I.e. if using `fminunc` you'd need `[x,fval] = fminunc(@tensao, x0)`. (Note: I reiterate that you only need to use `fminbnd` -- see the first bullet.)
Lol... Yes that's how I came up with 800 million for my actual code. Maybe preallocating vals would help some? Just realized didn't do that 
Thanks, figured it all out
Your error function takes no arguments and returns no output. You should read the documentation. This makes no sense. You're using globals. Don't do that here, there's no reason for it. You're using strings when you want to use numbers. Read the documentation. 
I actually sent them a msg and they said the PSK example is indeed wrong and they are fixing it in 2016b.
Apparently combvec is only in the neural net toolbox, but it's awesome for what you want to do. http://www.mathworks.com/help/nnet/ref/combvec.html x = 1:time_limit; vals = combvec(x,x,x,x); edit: [found this too](http://www.mathworks.com/matlabcentral/fileexchange/10064-allcomb-varargin-)
Probably not the most elegant method, but here's how I'd do it: * Create a vector containing the desired relative probability for each value * From that, create a vector of relative probability for selecting each value + the probability of any value before it * Generate a random number from 0 to the sum of all these relative probabilities * Iterate through the list until you come to the last one where probability of that value + earlier values &lt; the random number. 
 [X,T] = meshgrid(x, t) surf(X, T, u)
Python is the way to go. I will add that if you're every just trying to quickly grab some data and do quick analysis on it, Google Sheets is actually really nice for that. The following line will pull the table from the link you provided into a Google Sheet: =IMPORTHTML("http://170.94.200.136/weather/Inversion.aspx","table",0) ^^[Reference.](https://eagereyes.org/data/scrape-tables-using-google-docs)
so setting them to real(A(whatever)) did not seem to help. (Though rounding did somehow sometimes?). this is how they are being created: [A,B,R] = cart2sph(Sph(:,1),Sph(:,2),Sph(:,3)); 
This. I've been using the function `next_combination` provided in [this StackOverflow answer](http://stackoverflow.com/a/5097100/2259977) in my code for a while now. (Since it mimics the STL function [`std::next_permutation`](http://en.cppreference.com/w/cpp/algorithm/next_permutation).)
I'm going to second a comment on [your post about this in the MATLAB forums](https://www.mathworks.com/matlabcentral/answers/290549-distance-function-sometimes-giving-atan2-error-why-is-this). &gt; Could you show &gt; `imag(A(96562))` &gt; `imag(B(96562))` &gt; and &gt; `num2hex(A(96562))` &gt; `num2hex(B(96562))` &gt; ? And could you provide the output of `which distance`?
What is the difference between just using surf(x,t,u) and doing: [X,T] = meshgrid(x, t) surf(X, T, u) ?
Hello! Sorry not updating the thread about my progress. I didn't fully tweak the equation when I posted a reply. After some trial and error, I roughly got what I wanted. Cheers to you! 
I just tested in 2013a and the two are equivalent. So whoops, nothing apparently. I believe in older versions of MATLAB you needed to make it so that the first (`X`) and second (`T`) arguments of `surf()` were the same size as the third argument (`u`). I.e. if you wanted the `x`-coordinate of `u(i,j)` then that is `x(i,j)` and similarly with the `t`-coordinate. I always thought it was a stupid way to do it although I think some functions may still require it. Apparently `surf` isn't one of them.
Suppose `x` and `t` are 1D vectors and `u` is a matrix as described in your original post. Then surf(x, t, u); and [X, T] = meshgrid(x, t); surf(X, T, u); produce the same result. Obviously the first way is easier and should always be preferred. The second way was how it *had* to be done in much older versions. Sorry for the confusion.
That function probably calls private functions in its toolkit directory. Because your copy doesn't exist in the same directory as these private functions, it cannot use them. 
I've started to look at the code. I find it interesting ;) Question: is the code 'properties' supposed to be a function called from SingePhase via Visco = @(P) interp1(Pressure,ViscosityOil,P); ?
"Properties" is supposed to be all the data from which "single phase" makes its calculations. "Visco(...)" is an anonymous function that looks up the viscosity for whatever pressure the reservoir is currently at.
This is a perfect situation for you to learn how to break your code down into a Minimal Complete Verifiable Example. http://stackoverflow.com/help/mcve It will let you post code to make it possible for us to answer your question, and you will likely solve your own problem in the process. It's a good way to debug code by isolating exactly the problem you're having without other issues in the code hiding the root cause. 
You'll need to post the code for us to help. At minimal the for loop and locations where `x` is being updated. Debugging is helpful because you can set breakpoints at locations where you expect `x` to change and step through your code to see how the variables are changing / their values.
That's exactly what the debugger is for. 
That D variable will have 62.5 Billion elements. That's not necessarily a showstopper, but not every computer will be able to work with that efficiently. 
True. Could use the above incrementally by calculating 500^3 elements of b c d and then using that block to create A. Could save it and clear in between. Also I'd recommend making sure your number format is int8 or whatever to reduce size of each number.
How about i = 1:N thing(:, i+1) = matrix * thing(:, i) ? 
 rnd_name = names(randi(length(names),1))
I would highly suggest using imagej or FIJI (FIJI is just ImageJ) there are tons of tools to help you reduce background, watershed, and count particles. There is also a lot of help via google for people who need to count things via imagej 
But then I would still need a for loop! 
That looks freaking awesome. One issue: although i have the toolbox, matlab 2014a doesn't have imgaussfilt. I'm working on matlab 2014a and need to wait about a day for network permission to upgrade the computer in order to upgrade to matlab 2015a. Any chance you know any similar low pass filters that are already in the system or can be downloaded as a new function for the time being? 
one of these days, i'll get back to the computer, but for now, here's [santa's summer vacation](http://i.imgur.com/sxxkesc.jpg). 
Tried messing with imageJ and their filter background option is not robust enough to find differences between the green background and green cells 
I know that they work with alternating magnet coils. You plug the wires into the shield, and then you send pulses to the coils through that, right? I'm very new to motors and Arduinos in general, but I have a good basis in Matlab. No idea how to work the three together, though.
[This blog post](http://blog.pedro.si/2014/04/basic-cell-segmentation-in-matlab.html) along with [`bwconncomp`](http://www.mathworks.com/help/images/ref/bwconncomp.html) looks promising.
&gt; This blog post Looked at this but not in combination with bwconncomp! When in the process do you think bwconnomp should be implemented? 
Yup, that's right. There are a specific sequence of pulses you send through four (iirc) pins on the Arduino that will drive the motor one step clockwise or counterclockwise. Can you show me the exact shield you are using? It likely has the most common stepper motor driver, which I've used with another microcontroller. I can direct you better from there.
I get this in the c array? 2 1 3 3 3 1 2 1 2 2
I've made countless variations on this sorting thing, some longer than this yet somehow the option of summing a and b never occurred to me :/ thanks for the tip. As for the error I' ll toss in on the website. What version did you run? The poster above apparantly didn't have the issue on 2015b. I think all my versions are 2014 or lower.
Yea, just copy-paste, ctrl+enter (for running without saving) Windows 10 last preview Matlab r2015b a 1 4 2 4 2 1 3 2 4 2 b 2 4 3 1 4 1 4 2 3 1 c 2 1 3 3 3 1 2 1 2 2 idx 10 
I would find the .ppt slides from a class on it. They're everywhere online. 
To get super specific, these doubles hex values generate the error for me: distance(hex2num('bff302fba03a0023'),hex2num('4003ff6217b27e6b'),hex2num('3ff302fba03a0023'),hex2num('bfe48a64f246bab5'),'radians') which rounded are: -1.1882 2.4997 1.1882 -0.6419 
You could try to search on Wikipedia for this : [...]ARSS, is a program that analyses a sound file into a spectrogram and is able to synthesise this spectrogram, or any other user-created image, back into a sound. http://arss.sourceforge.net Sauce: https://en.m.wikipedia.org/wiki/Spectrogram And a supplemental question, are you the same guy from 2013? "I am a neuroscientist researching auditory processing and am interested in using Photosounder for a research project, however, I have to be able to analytically describe the method for resynthesis for grants and papers. Specifically, ..." http://www.kvraudio.com/forum/viewtopic.php?f=155&amp;t=397392&amp;sid=66a8adf8e7ab6fa4428d079aa516c47f
This is a great start for me, thanks a bunch. EDIT: nope, I'm an undergraduate and this is my first foray into Signal Analysis. It's a bit daunting, tbh, but I quite like it so far, even if I spend half my time scratching my head trying to debug my code.
Zeros just makes an nxm array of zeros. Why would you want to do this? Because if you're going to add elements to an array via a for-loop it speeds things up to pre-allocate (build the array, filled with dummy variables) before doing so. 
The code is reserving memory for the array, f, by initializing it with all zeros. It is much faster to reserve the memory before hand, than to update and copy the array as it gets bigger with each iteration of the for loop. Try it without that line and see how much slower it is. You will probably want to increase the number of iterations to actually see a difference. Timing the script would help.
Little nitpick - it doesn't discard the imaginary part, it takes the magnitude. The phase isn't based on the imaginary part of the complex representation any more than the magnitude is. You can't really use the spectrogram function for this, as without the phase the data is pretty meaningless in the time domain. Furthermore, even if the phase was available, the spectrogram function windows the data (which'll result in amplitude changes in the time domain if you reconstructed it) and it uses overlapping data, which will add further hassle. These parameters are optional and could be accounted for, but it'll be a bit of an annoyance. I'd recommend starting by writing your own spectrogram function, that doesn't use overlapping and stores the phase and magnitude, instead of just the magnitude. Having said this, it seems like a bit of an odd task. "reversing" a spectrogram isn't a regular task, and in writing your own spectrogram function which is more easily reversible, it kind of makes the whole thing seem a bit redundant, because you're effectively just performing the fft, plotting a spectrogram based on it, and doing the inverse fft to get the signal back. Is there any more to it?
I've been given about as much information as stated above. I agree that it seems a bit pointless, and my PI has been vague about potential applications, but that's the task nonetheless. I appreciate the suggestion though, thanks.
this sounds like a purely educational exercise since, as already mentioned, there's no practical reason to transform back to time signal without first doing some set of operations in frequency domain. in which case, I second the recommendation to write your own spectrogram function. this is pretty straightforward and will make writing the inverter much easier. here's some pseudo code on the forward y = my_spectog
Yeah, it ends up being useful for all sorts of things. I guess, it's not strictly necessary, but it saves a lot of steps. Like maybe you want two arrays to be the same length. So you find out which one is longer and you generate an array of zeros to pad the end of the shorter one.
The others have already given you the answer / why to use it. Chiming in: * For example `f = zeros(3,1)` creates a `3 x 1` array of zeros, i.e. it is equivalent to `f = [0; 0; 0]`. * You do this to pre-allocate the memory that `f` will take up, which increases the speed of your program. You know `f` is going to have `n` elements, so go ahead and create placeholders for those elements with `zeros`. And for some extra food for thought / practice: * Note you could also use `f = ones(n,1)` or `f = nan(n,1)` -- it's just `zeros` makes the most sense usually. I actually prefer to use `nan` so that I know there is a bug if any entries are still `nan`. * Experiment with keeping / deleting the line `f = zeros(n,1)`. When deleted, your code will still work and produce the result, but will be slower. Try experimenting with the debugger and place a breakpoint on the line inside the for-loop. See how `f` changes as the for-loop progresses. * While the code is technically correct -- you're generating Fibonacci numbers -- I have to comment that the sequence is [typically](https://en.wikipedia.org/wiki/Fibonacci_number) `1, 1, 2, 3, 5, ...` rather than `1, 2, 3, 5, ...`. (Mathematician here.)
[Numerical Computing with Matlab by Cleve Moler](http://www.mathworks.com/moler/chapters.html), especially if you're comfortable with more mathy-stuff. I recommend going through the chapters and working the examples as he presents them.
So let's say you have these `3` 3D arrays and they are X = temperature data (3D array) Y = salinity (3D array) Z = heat (3D array) What you want to do is create a data-set that you can plot where x = temperature (1D array) y = salinity (1D array) z = heat (2D array) where the temperature corresponding to heat `z(i,j)` is `x(i)` and the salinity is `y(j)`. Then you can use `surf(x, y, z)` to plot a surface as desired. The first step in getting to this point is to get a `n x 3` array of data. *(You can do some searches from here for "matlab 3d data to surface" and you'll probably find some useful stuff.)*
Glad you got it working! Hope the rest of your internship goes well
You need the compiler to turn your script into an exe. With that you can distribute that exe to anyone with no royalties to mathworks. I think the compiler is like 5k.
Do you want an array structure (like a cell array http://www.mathworks.com/help/matlab/cell-arrays.html), or a single vector? What is the end goal with your output? Because that can change what you need. To just make a matrix into a column vector you need to do: Rate2Graph(:) But you probbly want to store each iteration so you can either store in a temp then store certain indexes into Rate2Graph. Or you could store each matrix into a cell.
I just want a 1x60 vector so I can plot it against time. The problem I'm having is with storing each iteration. How can I do that so that I can then make a vector?
It outputs 60 values, one at a time
Doesn't he also need the MCR? the matlab runtime needs to be installed so you can run matlab applications and it needs to be the right one. I know you should be able to package that with the *.exe now but the end user will need that installed on their machine. It is just one extra step for the end user. 
The pretty reliable way to think about this is to simply replace any mention of the integer you are looping over (i here) with the range that you are looping i over. for i = 1:10 x(i) = y(i).^2; end becomes: x(1:10) = y(1:10).^2; Normally this is the only thing you need to do but for your example I imagine there might be a problem because if you vectorised it as standard then you would have an extra dimension and reshape can't take take an array with Nx75 elements and make it into one with 75 elements so would rightly give an error. However I believe this can be worked around by giving it a blank dimension ([]) like so: body1_centroid_array = zeros(size(skeleton, 1), 1); body1_centroid_array(:,:) = mean(reshape(skeleton(:,:), 25, 3,[])); In this if you have a Nx75 array then reshape should make a 25x3xN array and then mean will make a 3xN array. I didn't think about it very hard so it is possible that I have my dimensions in the wrong order in which case you might have to swap some dimensions with permute or change it to [],25,3 or something. It might also take a little tweaking to make sure mean is operating over the correct dimension but hopefully you are on the right path.
I googled the error message and it sounds like something with VMware. Are you using a virtual machine? (This shouldn't be the issue, but may help lead you to the answer. What have you tried to fix this? (restart? re-install? etc). If nothing else works, you can contact MathWorks. They are usually pretty good about this stuff
Yep [[reference](https://www.mathworks.com/matlabcentral/answers/62204-simplest-way-to-add-a-legend-to-the-groups-of-a-scatter-plot)]: gscatter(X, Y, Z, 'br', 'xo'); % last 2 arguments set tick type legend('1','2'); % make legend Or if you wanted to do it with a colorbar you could do: scatter(X, Y, 10, Z); cmap = jet; % grab a colormap cmap = [cmap(1,:); cmap(end,:)]; % take first and last colors only colormap(cmap); % set colormap hcb = colorbar; % make colorbar and get handle set(hcb, 'YTick', [0 1]); % set values on colorbar axis # **Results:** * Using [`gscatter`](http://i.imgur.com/t6oDN5b.png) * Using [`scatter`](http://i.imgur.com/SC0uVsO.png) * Using [`plot`](http://i.imgur.com/306DBlp.png) *** *(The data I used was just generated using:)* n = 1000; X = rand(n, 1); Y = rand(n, 1); Z = round(rand(n, 1));
How about [plotyyy()?](https://www.mathworks.com/matlabcentral/fileexchange/1017-plotyyy)
With some swapping to the dimensions it works! What I did is the following: body1_centroid_array = mean(reshape(skeleton, size(skeleton,1), 3, []), 3); Thank you very much man! 
What's up with that random line that looks out of place? Plotting a line from the first coordinate to the last or something?
What version?
Bueller??
Do you know what the best options are? What it outputs just exporting pdf or eps this looks like hell, can't edit the text, filled with weird rectangles, with the very ugly MATLAB background color :P http://imgur.com/JnGMUmG
What's a pcolor? Is that an option when plotting the figure or what? Also, for all these options, is the plot then editable..? I do not want to reproduce what MATLAB generates, which is for the most part ugly as sin. That's why I want to export it to Illustrator.
export_fig example_filename -png -m3 -q101 -transparent
and, with theese roots i should build a graphic with 'plot'.
Out of curiosity why are you using a cell array? you could just create a char array directly: alphabet = char(97:122); then address the indices you want: logic = zeros(1, 26); logic(2:3) = 1; alphabet(logic == 1) Helpful?
The [roots](http://www.mathworks.com/help/matlab/ref/roots.html) command is only for polynomials. You might be looking for [fzero](http://www.mathworks.com/help/matlab/ref/fzero.html).
Thanks
I would absolutely not recommend doing it the way you describe. Instead you should use the schedule as the input and output of the function or put it in a class. That said, I know from experience that in some rare cases manipulating variables in the workspace from a function is unavoidable. In those cases you can use the evalin and assignin functions.
From your description in the comments, something like this will probably serve your case - a function like this: function newschedule = scheduler(oldschedule) ... blah blah ... end And a script file for eg. make_schedules.m , that loops through your customers, calls the above function for each and saves the result in a workspace variable. Since it's a script file, it has access to read and write workspace vars. 
I've kept the function, but used assignin to save it to the workspace. The assignment I was working on was to built a tool that is as simple as possible for the user, which was, for me, to have a function with, as arguments, the old schedule and the type of patient to be scheduled. 
See /u/SamStringTheory's response that you want to use [`fzero`](http://www.mathworks.com/help/matlab/ref/fzero.html). In addition, the function you're finding a root of, how you've posed it, is T = (lb*lc*W) / (x * sqrt(lb^2 - x^2) So I'm guessing you're setting this equal to zero and solving for `x`. [Good luck with that.](http://i.imgur.com/YcmpD1t.png)
 logic = logical([0;1;1;0;...0]) Just as the error says, logical indexing only works with logical data type. 
There is a 'who' function that returns the variable names in the workspace. Is that what you mean?
Use "hold on" figure; hold on; plot(x,line1); plot(x,line2); legend('label1','label2');
You can play around with the [axes properties](http://www.mathworks.com/help/matlab/ref/axes-properties.html). For a y-axis scaling (what I assume you're after), try adding: set(gca,'ylim',[ylo yhi]);
Consider plotting the difference or %error on a subplot. Even better might be to link the axes so the error zooms with the original plot to detail the differences. figure; sp1 = subplot(2,1,1); plot(x, y1) hold on; plot(x, y2) sp2 = subplot(2,1,2); plot(x, y2-y1) linkaxes([sp1, sp2], 'x');
That code is unreadable. To make formatting work for code on reddit, put 4 spaces before each line: Like this Y = x.*k; 
Thanks!
Can you provide a plot of what they look like? Can you provide a plot of what happens if you take the `log10` of the values in the `y`-dimension? I.e. instead of doing `plot(x, y)` do `plot(x, log10(y))`?
 Hi! thank you so much for help me. Unfortunately didn't work. 1) I add the following code on maincode.m f = @(x) custoverde(Dm, Td, Tu, x); [x, fval] = fminbnd(f, min(Dm), max(Dm)); disp(fval) disp(x) I got as a result: 2.3585e+05 1.6286e+03 I should get the result on the picture http://imgur.com/xmcs65W 2) I need to work on that range, so I cannot use only 100 elements Do you have any idea about my problem? Thanks again!! 
# Result and a **bug** &gt; I got as a result: &gt; fval = 2.3585e+05, &gt; x = 1.6286e+03 Those values seem very reasonable and I would guess are the next-lowest minimum that you can see in the plot. It's probably having a hard time finding that weird minimum. Really any method will probably fail to find that minimum. That miminum at `x = 1710` and `y = 2209` seems a bit out-of-place. Could it be a bug? Could you refine the `x` values in the plot (see below). I also noticed a **bug** in your function `custoverde`. You never handle the case when `x == Dm(k)` -- none of the `if` statements will be entered in your function. Is it true that `Dm(k) = 1710` for some `k`? (Particularly `k=1`?) This would explain this weird minimum... I would just change the first `if`-statement to be `if (Dm(k) &lt;= x)`. *(Also, don't end `if` statements with semicolons `;`. It's confusing and unnecessary.)* # Use linspace &gt; 2) I need to work on that range, so I cannot use only 100 elements I should've looked at the range. I simply meant that it would help to make your code more readable. E.g. use `linspace(min(Dm), max(Dm), 20000)` and you will probably see many more local minima as well as more interesting behavior. I'd be curious what this looks like if you get the chance. # Other &gt; Do you have any idea about my problem? Please read everything above &amp; try to fix it / provide the plot. If none of that works you could try to use `fminsearch` instead. You could do what you're currently doing and set [~, x0] = min(custo); [x, fval] = fminsearch(f, x0); Providing the values for `Dm` and `Td` would also help.
You have a lot going on in only a few lines. Breaking things up into more lines to help you troubleshoot each individual piece will make things easier. Rather than using the local function just break it up and compute it directly on your R1 variable. The distinction between / and ./ is tripping you up and your line 7 also has an issue. Removing the semicolons on all the lines might also help. 
Yes you have to compute the A matrix first. You can quickly do it like: A = 5./bsxfun(@plus, (1:n)', 2*(1:n)-1) I don't understand why you mention up to row 3 col 3 since A will be 6x6 for (a) and 10x10 for (b) ... 
Can I compile a python script into an executable file that wouldn't need a python runtime? that was another big thing that I noticed about the MATLAB compiler... having to have a 160 MB file just taking up space on our production server seems like not a great idea.
Yup! Pyinstaller (a package for Python) can do just that! My average EXE file is ~16mb, but I think that could be significantly reduced using virtual environments or compression. (I'm too lazy to try / 16mb is small enough for me) Going from matlab to Python was relatively easy. 
You could write a script (bash/powershell - whatever you OS is) for your desktop that opens Matlab and runs your Matlab script for you instead of porting it to a new language. Talking about putting it on a different computer to run on its own is also viable, but please do it with caution. Will others have access to this other computer? How will the new program tell you the job executed successfully (or not)? Is this other computer always going to be on? Will people apply patches/updates/move files without first telling you?
You should be able to allow a locked computer to run commands, unless there security measures in place to prevent that from happening. Common instances of this are that folks will back up drives overnight or wipe old data, deploy updates or patches, or whatever else they need done that may interfere with normal user operations. If you have a windows machine, you'll get to muck about with Powershell and the Windows Task Scheduler, seen [here](https://redmondmag.com/articles/2016/05/13/automatically-run-powershell-scripts-at-a-scheduled-time.aspx). If you have something Unix based, Linux/OSwhatever you should be able to use [Cron](https://en.wikipedia.org/wiki/Cron) to schedule bash scripts. With computers you can automate everything within reason based upon the security protocols of your computers and your network. I am not a database admin nor am I an IT professional, but please sort out what your shared drive is and isn't. Is it the only backup? Is it backed up? Where is it physically located if it isn't in the cloud and who can touch it both physically and electronically. The shared drive should be attached to a computer unless it is a cloud system. What you can and cannot do with the drive will be determined by the computer hosting the drive. This will help you understand if you can always have access to the data or not and how to keep it safe moving forward. There is a lot on your plate, but don't forget that many of your questions have been asked before so a good understand should be available through an afternoon of playing Google-sleuth with some keywords and a few articulate questions. Not to pile on more things, but as someone mentioned Python, you could also be served by using [Octave](https://www.gnu.org/software/octave/) if you don't wish to change languages as it is *mostly* compatible with Matlab. Good luck my friend, your job sounds fun.
I know that our backup is a physical machine somewhere in our building, and this is backed up to the cloud overnight. I also use a mac, but all or our production machines run windows... shouldn't be too hard to figure out which machine is the best home for whatever I'm writing though. Thank you so much for all this... After mid week I'll definitely start pushing into this stuff and hopefully not break anything here... Any yep, it's a fun job, but dear god the weekend can never come fast enough.
Thanks so much
Curve fitting is a complex and nuanced thing. You have to know a bit more about what you want to do. Also, when you say 2 variables, do you mean 2 dimensions? or two fitting parameters. If it is linear, the easy answer is to form a Vandermonde matrix and let Matlab "Solve" it for you (Matlab will give you a least-squares optminal answer but not a solution. If it is non-linear, you can use an optimization strategy and/or Matlab's other tools. They have a [nice writeup here](http://www.mathworks.com/help/optim/examples/nonlinear-data-fitting.html) but again, this is a parametric fit so you must know or assume some underlying data format. Otherwise, if you do not care about an "equation" per se and just want the ability to estimate (and/or interpolate), you can look at [non-parametric fitting](https://en.wikipedia.org/wiki/Nonparametric_regression). That link has some info including using kriging model. Mathworks also has [a page on non-parametric fitting](http://www.mathworks.com/help/curvefit/nonparametric-fitting.html). I hope this helps to get you started. Unfortunately, (or fortunately for people like me who work in thie field), there is no silver-bullet method
For sink blocks such as the save to workspace block, you can set a constant sampling time even though you are using a variable step solver. Generally your solver will adapt so that the sink sampling rate is your maximum simulation step size. If you receive errors that your have DIFFERING sampling rates (a 10 kHz block feeding a 1kHz), you need to include a rate transition block. Simulink will explicitly throw errors if this is necessary. 
The issue is with how `h` is defined. You wrote that you defined `h` as (I'm fixing the formatting issues since you didn't properly format the code -- see my comments below). h = @(R)((-1/(2*R*C)) + sqrt((1/(2*R*C))^2 - (1/L*C))); First note that `R1` is an array (i.e matrix) and think about what happens when you call `h(R1)`. * What is `1/(2*R*C)` supposed to be? You're dividing `1` by a matrix, which is undefined. You may want to look into doing [component-wise division, i.e. `./`](http://www.mathworks.com/help/fixedpoint/ref/rdivide.html), instead of `/`. * This isn't the only issue though. You should think about what `(1/(2*R*C))^2` is doing -- do you intend to square the matrix `1./(2*R*C)` (fixed the `./`) or do you intend to square each component. I'm guessing the latter (hint: `.^`). *(Edit: Did you also mean to have `1/(L*C)` instead of `1/L*C`?)* *** *** Just so you know, to make your code more readable you can (it will also increase the odds someone replies) * Write inline code like `h(R1)` using [grave accents](http://en.wikipedia.org/wiki/Grave_accent) ` * Write blocks of code using four spaces at the start of a line. [Check out Item 2 here](https://www.reddit.com/r/cpp_questions/comments/48d4pc/important_read_before_posting/). See [here](https://www.reddit.com/r/raerth/comments/cw70q/reddit_comment_formatting/) for more formatting tips.
For OP: * Write inline code like `f(x)` using [grave accents](http://en.wikipedia.org/wiki/Grave_accent) ` * Write blocks of code using four spaces at the start of a line. [Check out Item 2 here](https://www.reddit.com/r/cpp_questions/comments/48d4pc/important_read_before_posting/). See [here](https://www.reddit.com/r/raerth/comments/cw70q/reddit_comment_formatting/) for more formatting tips.
You could use splines to build local interpolant of your variable step data and then resample your interpolant at the desired frequency. 
In what sense is a linear least squares solution to a linear problem not a solution? 
In a regression problem, you have many more data points (equations) than you have parameters (variables). Therefore, it is an over-determined problem without a solution. Therefore, there is **no solution** to Ax=b however, you can instead solve x such that ||Ax-b|| is minimized (Note that `|| . ||`) is a least-square solution
Oh I see what you mean. I'd usually call a least squares optimum a solution for an overdetermined problem, but I guess that's an abuse of terminology. 
 % Define constants c = 3*10^8; Lp = 0.3; % Time array t = [1:0.1:20]; for i = 1:length(t) ~~Ka = ((c*t)/(2*Lp)).^2;~~ Ka = ((c*t(i))/(2*Lp))^2; %This loop just ain't required... but at least it's indexed now end plot(t,Ka) ~~That took you all day?~~ Is this what you were looking to do?
Your solution will throw an error
No it's just fine. I ran it before posting.
Yeah, trust me - looking back at it I know it's not needed, but that's the way i go about things because I like doing complex simulation animations, so when I do that, I sometimes need to catch the loop at certain specific iterations. Sorta just my default protocol. But hey, I appreciate the call-out because reflection begets learning.
Just saw your edit this AM, *now* it will throw an error, and the error I thought it would originally. You also need to index Ka(i) if you want Ka to accumulate your for-loop calculations, otherwise it will only save the latest one, be a scalar, and your plot(t,Ka) will error (plotting a vector vs. a scalar, which was the original error I was anticipating but your snuck vector maths in and saved yourself (originally)).
I hope it helps: x = [1, 1, 1, 2, 3, 4, 4, 4, 4, 5, 2, 2, 3, 3, 3, 1, 2, 3, 4, 5, 5]; % init d = zeros(1,size(x,2)); ds = d; de = d; % looking for same consecutive values d(2:end) = (diff(x) == 0); % looking for 'start' and 'end' indices ds(1:end-1) = diff(d) == 1; de(1:end-1) = diff(d) == -1; % correcting the last 'end' index de(end) = mod(sum(ds) + sum(de), 2); % columns contain start--end index pairs idx = [find(ds); find(de)];
Yep. You're right. Overall this equation is even simpler to plot than I've shown here.
Cool word man. Here's another cool word, pretentious. 
Thanks for the help everyone! I actually found a new function called "repelem()" that was very helpful in doing this in seconds to a few minutes rather than hours - days. if anyone is interested, here is the code. After generating all the times, I then remove the rows where there are repeated, or where later times fall before earlier times. n_times = 4; n_timepts = numel(1:dt:end_time); vector_length = n_timepts^n_times ; D0 = 1:dt:end_time; D = repmat(D0,[1 vector_length/length(D0)])'; C0 = repelem(D0,length(D0))'; C = repmat(C0,[length(D)/length(C0) 1]); B0 = repelem(D0,length(C0))'; B = repmat(B0,[length(D)/length(B0) 1]); A0 = repelem(D0,length(B0))'; A = repmat(A0,[length(D)/length(A0) 1]); times_all = [A B C D]; clear A0 A B0 B C0 C D0 D; 
If all you want is to be able to format the given formula in a way matlab understands, you need to be able to * multiply your variable (x) by 2 * raise x to the power -9 * generate a hyperbolic sec squared function * combine terms by multiplication Which of these parts is causing you the trouble?
Apologies, I had made a formatting error in the derivation in my question. My issues is combining the terms by multiplication for sec, and also,am I right in thinking that the format of the original function should look something like f=@(x) tanh(x^2 - 9)
I ended up just randomly playing with the values. It was due yesterday lol. Thanks for your help 
[http://lorenabarba.com/blog/cfd-python-12-steps-to-navier-stokes/](http://lorenabarba.com/blog/cfd-python-12-steps-to-navier-stokes/) This is a Python tutorial for how to set up Navier-Stokes equations in Python. Skip the Python-specific stuff and replace it with similar commands in Matlab and there you go. It's a good read for anyone starting in CFD. 
I'll second this. It might not feel like you are "doing fluids" but it is in fact very similar to how fletcher structures his course in "computational fluid dynamics". This might not teach you how to directly simulate flow around an airfoil but it will teach you important things underlying CFD codes and how to use them. 
Make sure you brush up on your finite element methods too. Lots of DiffEqs in fluids and while ode45 is a great tool you still have to make sure you are swinging with the right end of the hammer. Check out a blasius solution for a flat plate because I remember that being a bit of a challenge when I was assigned it years back.
Well the thing is I'm supposed to change colours in HSV colour space instead of RGB which would be much simpler 
&gt;%got this from somewhere else; I can see that it sets up d to be an array %of the same size as envTF but have two columns instead of one, all filled %with zeroes d = zeros(1, size(envTF, 2)); Not quite--it sets up a single row with the same number of elements as there are columns in `envTF`. The `2` is an an argument to `size`, not `zeros`--try running `size(envTF, 2)` to prove this to yourself. Something you may find useful: any documented function in Matlab (e.g., `diff`, `find`, `zeros`) has a help page with explanation of inputs, outputs and uses for the function, accessible by searching the documentation (or, more simply, by typing doc or help and the function name, e.g., `doc find`at the command line; the documentation is generally user-friendly, and tab-completion is your friend. &gt;%not entirely sure why these are needed: ds = d; de = d; These simply preallocate the "start" and "end" difference arrays (kind of, anyways--copy on write means the memory isn't allocated until an element in one of these arrays or `d` is changed, but it's close enough), to the same size as `d`. They're not actually needed--see below--but it's okay to have them if you're not looking for huge arrays. &gt;%also not sure what this is doing to the 2nd through ending rows of d and %this line returns the error of "In an assignment A(I) = B, the number of %elements in B and I must be the same" d(2:end) = (diff(envTF) == 0); Check the size of `d` vs the size of `envTF`--for this line to work, `envTF should be a vector with the same number of elements as `d`. Since you used `zeros(1, size(envTF, 2))` to create `d`, though, `d` can only have the same number of elements as `envTF` if `envTF` is a row vector (size == 1xN, not Nx1). The easiest way to fix this for your situation (where `envTF` is a column vector) is to make everything column vectors--use `d = zeros(numel(envTF),1)` to allocate `d`, and--if there's any doubt as to the shape of your data--either explicitly check that `envTF` is a column or force it to column by `envTF = envTF(:)`. (It's also possible to generalize this to work columnwise on a generic 2-D matrix (or along a single dimension of an arbitrary N-D matrix), but that seems like overkill here.) The reason it starts on the second row of `d` is something of a convention--you could also choose to go from 1 to end-1 instead. It changes what index is considered the boundary of the section of interest slightly, so which is easier depends on how you use it. &gt;%labeled as 'looking for the 'start' and end' indices', if this could be %explained as to how its doing that that would be more than appreciated ds(1:end-1) = diff(d) == 1; de(1:end-1) = diff(d) == -1; Think about what `diff(d)` represents: `d` is true wherever `diff(envTF)` is false (i.e.: `d` is false/0 wherever the previous and current elements of `envTF` are the same, true/1 wherever there is a change in `envTF`). From there, you can see that `diff(d)` is 1 at each index where a series of values in `envTF` is the same (i.e. whenever the original array drops below or above the threshold). It may be more clear if you concatenate the first few elements of the arrays and look at how they align, e.g., test = [A(1:10), envTF(1:10), d(1:10), ds(1:10), de(1:10)] (You may need to transpose some of those slices if the concatenation fails--if they're all column vectors, this will work fine.) &gt;%says it's 'correcting the last 'end' index', de(end) = mod(sum(ds) +sum(de), 2); Kind of--it sets the last element of the "end" array to 1 if an odd number of starts and ends were found (if the array ends on a series of repeated values); you could get the same effect by setting the right side to either `sum(ds) &gt; sum(de)` or `find(ds, 1, 'last') &gt; find(de, 1, 'last')`. You don't need the `ds` or `de` array, though--you can use `find` directly on `diff(d)` with no need to allocate the two extra arrays. Also keep in mind that the start and end index array isn't your endgame: you need to subtract the start indices from the end indices (and make sure the group corresponds to the above-threshold values), and only return the groups that are 100 or more elements (keep in mind that a slice from element 2 to element 10 is 10-2+1 = 9 elements, not 8--use `&lt; 100`, not `&lt;= 100`). Something like `idx(diff(idx, 2) &lt; 100, :) = [];` should work to filter `idx` to consecutive elements of 100 or more.
Is this a question about numerical methods to solve matrix equations, or a question about matlab syntax for solving matrix equations?
What part is tedious? Populating the A and B matrices? There's no way around that. 
This feature was added in 2014. The solution for older versions is not straight forward. If you are in an older version try this: https://www.mathworks.com/matlabcentral/fileexchange/3486-xticklabel-rotate
Right, I understand how to do the computation in matlab, but is there a more efficient way to populate the matrices? Can I write a script where I can specify the dimensions, and then just use an input command to populate, which would then generate the answer? Basically what a calculator does? https://youtu.be/eFaYXpFnYWI?t=6m18s 
You have to type it in one way or another. I suppose you could design a gui to do that, but I think it would be a lot of work for little gain. Unless you want the computer to read your mind, you have to type the information in one way or another. That's true for a calculator too. It's also exactly how the console already works, so there's your "calculator". If you already have the data in a text file you can usually import it or even just copy/paste. Maybe that's what you want? 
Oh man that had me going for a while. 
Guess I misunderstood what you asked. Then I don't understand why threshold = .10; idx = find(A &lt; threshold); is insufficient.
This will make life so much simpler https://en.wikipedia.org/wiki/LU_decomposition
Thank you so much for the help, I understand what the code is doing way more than I did before! However, I would still very much appreciate some help in getting to the final endgoal; the last little chunk you suggested with idx(diff(idx, 2) &lt; 100, :) = []; doesn't wholly make sense to me. How exactly is this filtering out idx? Finally, how should I go about getting the start of a string paired to the ending of that string? Should I just put ds in one column and de in the other? How would I keep that matrix filtered to only contain the starting/ending locations of strings of 1 greater than 100 in length?
create your function: function ydot = fun(t, y, parameters) param1 = parameters(1); param2 = parameters(2); %etc. %ydot = stuff and call it like so %params is an array that exists [t, y] = ode45(@(t, y) fun(t, y, params), tspan, y0);
How do I use it? I tried * 'TextRotation',90 * 'Rotation', 90 * 'Rotate',90 And none are recognized. I'm in Matlab 2015b 
Mind if you post code for this?
I'm surprised you don't get a warning from fprintf. You have to loop over an index to write each number from the vector. for n=1:length(A) fprintf(fid, '%d\n', A(n)); end
...and you add the conservation equation When I took a graduate level CFD course, we developed lots of theory around the Burgers equation and then added the pressure term. That's when life got hard.
No you don't. Literally the first example in the [`fprintf`](http://www.mathworks.com/help/matlab/ref/fprintf.html) documentation prints an array without looping. The function accepts vectorized input--you can (and, if your data to print is a single type and is really available at the first call to print, should) print huge amounts of data with a single call to `sprintf` or `fprintf` (or the undocumented `sprintfc`) without any kind of loop in Matlab. You can even do this with mixed data types, but it requires the use of a cell array to prep the data (making it less-useful for large data sets, although it can still be more efficient to chunk the data into cells and print a chunk at a time than to print a single line at a time) and some extra care in specifying format strings. 
I ran not this problem as well at one point. It has to with how matlab calculates things. I believe it's using the unit circle for small numbers, but when it does, it can return a complex number. More people can probably confirm or deny that. 
the default .mat file with matlab structures would probably work best. if ur working with gigabyte sized datasets, you can use hdf5. 
csv files are simple and sufficient for saving matrices. That being said, it's possible to [call matlab functions from python](http://www.mathworks.com/help/matlab/matlab-engine-for-python.html) and [call python functions from matlab](http://www.mathworks.com/help/matlab/call-python-libraries.html), which could let you skip the file io.
Are there duplicate entries for a given x y with different values in the third column that you need to count? If there are a single value for a given x y, then it seems like you could accomplish what you want with a combination of meshgrid, griddata and either surf if you really want a 3D representation or imagesc if you want something like a 'heat map' of your values. I'm not aware of a function that would plot a series of 3D columns a for an x y value if that's what you're looking for, maybe someone else does... Edit: might be able to get bar3 to work, but might take some juggling of your data.
I just checked this in 2015b. It's a property of the annotation. For example, figure plot(1:10) x = [0.3,0.5]; y = [0.6,0.5]; a = annotation('textarrow',x,y,'String','y = x '); This will produce a line with a horizontal annotation. To rotate it, you could use either command below a.TextRotation = 45; set(a,'TextRotation',45); 
Fair enough. Some labs will dictate what you use so being able to hack something in both is valuable. Just remember that when it comes time to share results, publish or whatever, make your output as generic as possible! 
Well played. It took me a second to figure out the joke but its early still. This does bring up a very real question for me. I was a huge matlab user. I did my entire dissertation in it and wrote tens of thousands of lines of carefully optimized and extensible code. But now, I try to use Python whenever possible and only go back to Matlab when I need to interface with other who don't know Python. I truly prefer Python over matlab (whether it is better or not is up for debate but my preference is not). So, if someone asks me, what to learn, I would say Python. If someone asks me in a *matlab* sub, then I am not so sure. 
I've written my fair share of MATLAB code, too, and if someone is asking what to learn for mathematical programming, regardless of the sub, I'll say Python. MATLAB makes it very easy to do some terrible things that should never happen in "real" code, so I feel like its best to start with Python, then use MATLAB if you really need it (which you don't 😉). Codecademy has a great beginner's guide to programming in Python, which I highly recommend.
Good to know. There's a lot I have to learn when it comes to vectorizing.
True. The times I need Matlab the most are when I need to do (or repeat) an analysis and there is a complex Matlab code that has been in use for 15 years. To port it to Python is just too complex, and may introduce too many errors (plus, while I have a general idea of the science in the code, I am not an expert). Now, if I could just get someone else to do it for me...
fid is -1, im trying to learn why, thanks for the help Edit: It was a permission problem running matlab as admin solved it.
To elaborate for the sake of OP: Matlab is not a great environment/language for someone starting out. It's highly specialized and fantastic for certain purposes, specifically some types of scientific computing. But it has a bunch of weird aspects to it that are different than most languages, and it's lousy at a lot of general-purpose programming tasks. Plus, it's expensive (yes, there's the open-source Octave, but it still has not reached feature parity with Matlab). One analogy I use is that Matlab is like an 18-wheeler and Python is like a Toyota Camry. If you have generic driving to do, a Camry is a safe choice. If you have generic programming to do, Python is a safe choice. And I wouldn't suggest that anyone start out by learning to drive/program on an 18-wheeler or Matlab. Another couple of things I always say about Python: If you took every other programming language and "averaged" them together, it would look a lot like Python. That's what makes it the second-best choice for just about any programming task. It's almost but not quite as good as Matlab for Matlab-type tasks. Ditto for C and C-type tasks, Perl and Perl-type tasks, PHP and PHP-type tasks, etc. So if you don't want to learn ALL those languages, you could just learn Python and do OK for yourself. (And if you DO want to learn them all eventually, you should still learn Python as well... and in that case, may as well start with Python as it will probably give you the best stepping-stone towards learning all the rest.)
N-S represents a conservation of momentum, right? What conservation eq do you add to it to simplify it to Burger's equation? I didn't take a course... but I have taken a lot of grad level acoustics classes. I'm interested, because they're in the same ballpark.
I like your analogy. The other thing I would add is that Python can be extended. So perhaps Python is a Camry where you can (magically) add engine power and attach additional but smaller trailers. So, stock python isn't much, but you do `import numpy as np` and suddenly, you have this amazing numpy trailer on your car (which again, you can magically tow). You can pick and choose what to add to also keep it more streamlined.
conservation of mass. It is the third equation in the video. They present it as d_u + d_v = 0 but it really comes from d_(rho u) + d_(rho_v) = 0 but this is incompressible so you can pull out the density (`rho`)
Call the below function like: Z=peaks(25); newBarPlotting(Z,4) function newBarPlotting(newArray,fignum) %newBarPlotting(newArray,fignum) % %My own plotting function. It creates something akin to a 3D bar graph. figure(fignum); sNA=size(newArray); h=bar3(newArray,1); for a1=1:sNA(2) A=get(h(a1),'CData'); for a2=1:sNA(1) A((a2-1)*6+(1:6),:)=newArray(a2,a1); end set(h(a1),'CDataMapping','scaled','CData',A,'EdgeAlpha',0.5); end end
It gets cumbersome for **huge** datasets, but I like to go between Matlab and Python with JSON. I build my Matlab data into a structure so that I can, essentially, annotate it as I see fit. Then I use [JSONlab](https://www.mathworks.com/matlabcentral/fileexchange/33381-jsonlab--a-toolbox-to-encode-decode-json-files) to write it to a file. Python can then load and read it pretty easily. It is not perfect and again, will buckle under large sets, but it does have the advantage of being an easy-to-understand ASCII format and you can add comments to the variables.
Using`fprintf` and cell arrays cab be very powerful--I use it to write to csv al the time (transpose the cell array and pop the contents). You can also use it to write to the standard error (by using `2` as the file identifier; prints in red text at the Matlab command line bye doesn't block execution as `error` does) or standard output (normal text to the command line); you can also print functional html (including html to execute some matlab commands when a link is clicked, for example) to the command line. And, in general, vectorization in Matlab can be expressive and powerful--it enables some compact and efficient execution.
Thank you for your answer. Do you know if there is really a bias in my example if I would take just the normal Euclidean distance? It is in an optimization setting. That means y are the true parameters and x are the estimated parameters from my optimization routine. A smaller distance between x and y means that my optimization routine was better able to find the true parameters. Is in this case just using the (not normalized) Euclidean distance ok?
On mobile at the moment, but I believe you can call colormap with an argument (# of evenly spaced colors?) and receive the color arrays in one of the outputs -- check colormap's documentation... I'll check and edit this post (if I can manage that on baconreader) *EDIT. Yup, if you use: cmap = colormap(jet(10)); That should give you a 10x3 array of the RGB values in the *jet* colormap -- you may instead want the *hsv* colormap (also "rainbowey") -- where each 1x3 row is the RGB color 
This would be perfect. Please let me know if this is possible! 
Updated with edit, hope that helps
Once you have this figured out (and it looks like was able to help), check out [ColorBrewer2](http://colorbrewer2.org/) for inspiration about good color choices. They have tons of different types for different numbers. You can also use [linspecer](https://www.mathworks.com/matlabcentral/fileexchange/42673-beautiful-and-distinguishable-line-colors-+-colormap/content/linspecer.m) to give you the color map for some of them. And, if you're really into playing around, dig into that code for how to interpolate between colors. There is also [this](https://www.mathworks.com/matlabcentral/fileexchange/34087-cbrewer---colorbrewer-schemes-for-matlab) one that sounds like it does the interp for you (though with a different but probably fine method)
Piggybacking on this, you can make your own custom colormap using colormapeditor using colors YOU think are vibrant, and go from there. You can make the colormap in RGB or HSV, export and re-import to use it as often as you like, and with as many interpolated colors in between. [Documentation](http://www.mathworks.com/help/matlab/ref/colormapeditor.html)
The first column will not be larger, it is the same range but it is integer rather than continuous. So there are only integer spacings...
Ah, I misread that. In that case the Euclidean distance is probably fine.
I know the concept of inheritance. But i want to import the class(file), like in python where i import a file i created and use the function inside that as default
First of all, you should create the time vectors for these so that you have an -x- against which you can plot your -y-. These need to have the same starting point (probable 0) and the same units (seconds?). Two plotting options that come to mind: * Look at using **subplot** to create multiple plots on a single figure. Then you can use **linkaxes** to make sure that your -x- axes are aligned. * Try using **plotyy** to overlay the plots on the same axes.
What do you want your x-axis to be? Time? Temperature?
Nope. I have minimal SimuLink experience but that sounds absolutely insane.
Both environments will work from a technical perspective. Matlab will probably be able to do what you want quickly, provided you are willing/able to pay for at least the imaging toolbox. Now Python will probably be able to solve your problem for free. It will just take a little longer to implement. 
The complex numbers output by fft () contain information about the 1) frequency and 2) phase of the signal. Take a look at this example: http://www.mathworks.com/help/signal/examples/practical-introduction-to-frequency-domain-analysis.html?requestedDomain=www.mathworks.com
&gt;contain information about the 1) frequency and 2) phase of the signal Right, my issue is figuring out in what form that information is stored. That's a page I havn't seen. Thanks. 
&gt;You also have to scale the amplitude, by the number of samples, thats why its divided by L. Any idea why it would be implemented that way? The scaling by L seems to be part of the process of doing the fourier transform. 
you are right about rho but the thing the equations are normalized hence rho = 1 and hence it is scrapped. isn't -u * du/dx - v * du/dy same as -duu/dx - duv/dy analytically
Try plot(squeeze (i,j,:)) to plot the sequence you want for pixel i,j.
This makes sense, thanks!
How? :S
For others who were equally as confused as I am/was, apparently Bag of Features is an image classification model. I found [this presentation](http://www.cs.unc.edu/~lazebnik/spring09/lec18_bag_of_features.pdf). It actually looks kind of interesting. But this is the extent of my knowledge. Maybe someone will have a better answer for OP, though (s)he should give more context. And maybe find a better subreddit that will have more expertise
I think you should be able to do this using the sprintf command to 'create' your filename and the figure number for the print command. In a mix of Matlab and pseudocode... for i=1:16 figure(i) if(mod(i,2) == 1) % Figure out file naming convention here - looks like there's some even/odd naming alteration fileName = sprintf('Average 1,%d %sD', floor((i-1)/2)+3, 'C'); else fileName = sprintf('Average 1,%d %sD', floor((i-1)/2)+3, 'M'); end print(sprintf('-f%d',i), fileNameHere, '-dpng'); end
You could use JSON to make a text representation of the data and pipe that to the other function. This will be like sending all of your data through stdin. It may work but it also seems kind of error prone. Why are you opposed to writing the data?
From the screenshot you provided it looks like you might be missing a comma between the final square brackets and 'dataarray'. If that produces the same error then try and create the filename first to see if that is the part producing your error.
ahh thanks, that JSON could be useful in the future. Actually I just found out matlab has a handy save and load function that does save all the workspace variables, which I can then easily load from the other function.
Thanks, this kinda helped me understand what it does. My only confusion now is if the Bag of features automatically detects its own features or if i have to input them myself because I haven't found a way to do that yet and feel this would help my object detection program a lot better then me using a HOG or Haar detection like I am using now. When i tied creating a bag of features it automatically collected its own features of the image and when i tried to detect the object i wanted to detect it didn't do it correctly.
Your problem isn't quite fully specified, unless you have some sort of identifier allowing you to *match* each response to its corresponding request. For example, if the "triggers" are at times [1, 2], and the single response is at time [3], is your single latency equal to 2 (responding to the *first* trigger) or 1 (responding to the second)? 
If its all excel I would personally use VBA and a .xlsm file. That said start with the csvread &amp; csvwrite matlab commands and go from there
I need the response time relative to the last trigger. So, in your example the latency between 2 and 3.
I hope it will be useful. clear;clc contents = dir('*.jpg'); for i = 1:numel(contents); filename = contents(i).name; image=imread(filename); hsv = rgb2hsv(image); h = hsv(:,:,1); s = hsv(:,:,2); v = hsv(:,:,3); avgH = mean(h(:)); avgS = mean(s(:)); avgV = mean(v(:)); images(i).name = filename; images(i).H=avgH; images(i).S=avgS; images(i).V=avgV; end
I'm not entirely sure if anything will be faster than **imwarp()** since it is mostly likely doing the rotations necessary given the transform matrix. Anything you do would just be trying to recreate what that function already does, but I don't really understand what you mean by top down view. Can't you use **view()** to alter how Matlab shows the image in the window? Or do you need to save this image back as `.jpg` for editing elsewhere? When you say 'taking forever' did you time out the operation use `tic toc` or run the optimizer on the script?
This sum is computable numerically. There's no need for symbolic math. 
Thans you for your response! And how can I best compute the sum? I know how to do it with a loop, but the problem is that it takes so long (I have a Large dataset for which I want to compute sums). Best regards, B.
You haven't told us what you expect to see from the precentCohBM1 data, which makes it hard to be sure what your issue is... But I would bet it's that you're using int2str to display the results to yourself. If you know what the plot should look like, why don't you just use that command to check? And if you want to display, you should probably be using num2str here. I'm guessing that your data isn't an integer, so it's getting rounded. It's supposed to be some number between 0 and 1, right? (like 0.20 is 20%?) Also, some other things which aren't directly the cause of your problem, but you should be aware of: * There's not such thing as folders inside MATLAB variables. I think you're dealing with a struct. Assuming that's the case, then BM1 is a field of the results variable. * There's no reason to pass in subjectNo and sessionNo as input variables to the function if you're going to immediately set them to the result of those input commands. * You could probably have figured out your issue pretty quickly by using the debugger. (Set a breakpoint on one of the lines inside the function, call it, and then step through line by line, checking the values of the variables to figure out where it splits off from what you expect) TLDR: Load is probably working fine. It's that you're using int2str on some (presumably) non-integer data.
I use the data in percentCohBM1 through findpeaks(), mean(), numel() etc. I am only using int2str within the code to distinguish the input and output .mat file names, nowhere else. Did change them to num2str as you said though. That might very well be the case. Yes, the data in percentCohBM1 basically starts at 1 and goes down closer to 0. How do I stop it from being rounded? Ah yes, my education wasn't in English so I didn't know the word struct. Thanks! Deleted those two from input variables. I do run the debugger, but at the moment it just points to a later point in the script (that I haven't shown here because it's mostly irrelevant) that's having an issue because I am not getting the correct numbers at percentCohBM1. Thank you very much! :) 
I regularly use git to version control large projects. It's excellent. This isn't the place for me to tell you fully how to use it, but keep looking on the internet for guides and documentation. Once you get the basic idea of how it works it's really quite simple. BTW I personally prefer to use the "Git Extensions" client when using git in Windows. In Linux I just use the standard git command line. There are other good git clients out there, of course. 
I have to disagree with you on that statement. I just ran `unix('notepad.exe title_here')` and `dos('notepad.exe title_here')` on R2016A. Notepad opened and told me there was no such file by that name do you want to create one. It appears you can pass in variables to your program with those two commands. Perhaps you issue is elsewhere?
A remote repository definitely has benefits (as a backup, accessible from many locations, etc.) but one of the things I really value about git is that it is completely comfortable to use in a local-only, single developer manner. I only point that out because it's one of the things I really like about it, so want OP to understand that he doesn't *need* to worry about something like github if he doesn't want to right now. Of course, because git is awesome, he can always start out local and then clone his repository to a remote host in the future if his project expands to that point. 
Yes, I ran PCA on the data beforehand. I'm running it on the PC values I accumulated. It was manually entered data from a project, so I went ahead and ran PCA in SPSS. We decided to cluster the data, so I transferred the PC data with the filenames and behavioural stuff into a csv.
I use Git combined with SourceTree. It is really easy to setup and very convenient to use. SourceTree provides a GUI for using Git which makes using it easier to learn.
I don't disagree, but I had the impression that OP wanted to have multiple users. I don't know about git, but I know that with SVN it is not recommended to host a repository on a network drive if you have multiple users.
Ok I'm sorry I still don't understand the structure of your data. Is there any way you could post a short example? They can be phony values, I'm just having trouble understanding what you're trying to cluster.
Oh I see. My mistake, he does intend to begin collaborative development right away. I was still thinking on terms of a lone developer. What I said about git is still true, and I still value that aspect of it. Even for distributed group work, I like the ability to have a local branch, etc. Overall I'm a git fan (although I don't hate SVN, as some git zealots do - it works well) and I just wanted OP to be aware of the benefits of local access. I would suggest though that OP set up a git server once he gets familiar with git in general. Operating on a shared files system is okay if it works, but if possible I think a little server is best. No big deal though. 
Yeah, for sure! Sorry I'm not being specific enough. **Filename** | **Behaviour** | **PC1** | **PC2** | **PC3** Run1-4 | move |-0.89365 |-0.10672 |-0.40905 Run1-16 | hover | -0.94105| -0.12226| -0.8258 Run1-28 | move | -0.73511| -0.13795| -0.8602 
Thanks. I appreciate the lesson/clarification.
it seems to work, would u happen to know how to attach a voltage input to the circuit?
As with any significant body of code written for matlab, I think the answer to that is "Maybe?". There's no unit tests or anything to check, but it doesn't make use of any toolboxes. 
does it make a speed difference if you set the rows of *U* and *V* to zeros(1,NX) instead of setting it to a scalar zero?
Take a look [here](http://undocumentedmatlab.com/blog/internal-matlab-memory-optimizations) for a possibility; in particular the copy on write section. Lacking the broader context, I'm not sure what you're doing to U/V before you pass them in, but maybe you are simply paying a delayed cost that erroneously appears under the U/V zeroing from a lazy copy. Can you post more code?
FWIW, U and V are preallocated I switched the indexing on line 5 and 6, modify the first col to 0 instead of the first row... no speed difference.
Ah well, it was worth a try! 
Not in front of Matlab right now, but I'm pretty sure you can define a callback function that is triggered when data is in the receive buffer. 
How large is NX typically? So you're looping through rows and on the jj'th row you're setting the jj'th term in columns [1:NX] equal to zero. Because MATLAB is column major none of the terms (jj,1:NX) are contiguous in memory. As a result it's going to take MATLAB longer to hop through and set them all to 0 than it would be to simply set 1:NX terms in a single column equal to 0. To confirm this is the case simply do the same operation on a dummy array copy of U but flip jj and 1:NX and time it compared to line 5. I'd wager you'll see a big difference in runtime if NX is large (values won't be the same of course without transposing U_copy beforehand but for speed testing that isn't really relevant). For numerical simulation code it can make a BIG difference if your data structures respect the row/column major order of the language in terms of what you access. Example is for my dissertation research the first time around I encountered a similar problem; storing data relevant to a single particle as a row vector in an array. By transposing the way I stored the data in a later revision things got much faster. 
MATLAB can be used to write to microcontrollers as well. Sometimes we use single precision to save space on the microcontroller. But to your point, we usually read in single precision values, calculate and condition it as double, then convert back to single and write to the microcontroller. That being said, if the space is available, use it up with double. 
You don't even need to use gitlab. If you have some remote space you can SSH to, just use git there. Git is, itself, always a server. (I don’t doubt that you knew this but for others who may not have)
Any kind of version control will do wonders for your coding and your process. Suddenly, every one is accountable for their changes and you can easily roll-back and play around. It sounds like you are already looking at git and that is great. It is a truly amazing software than is so flexible that you can use it in almost any workflow you can imagine. One down side is that the flexibility comes with some complexity. It is a bit harder to learn and is infamous for some of its intricacies. I still think it is the best choice. (SVN is easier but the benefits of distributed are great). One thing to watch out for is that it is very hard to remove things once they are committed. Especially if you share (push) your repo around. And, with distributed, every one always has a copy of that file. So, this means two things * Be careful about passwords being in any codes. Especially if your repo is public at all * Large binary files are (almost) for ever. Be careful about putting them in there. Again, it isn’t *impossible* to clean these up, but very hard
Generally, but sometimes that accuracy isn't remotely useful.
For control applications especially, double precision is overkill. Most controllers barely need 4 significant digits, so single precision's 6 to 9 accurate digits is plenty. There's also the memory benefit as mentioned by /u/kazi1. Depending on your system architecture, you may also see a speed benefit. Many high bit processors come with floating point calculators, which may be able to process double arithmetic faster than single. However, it takes twice as long to read a double value from memory than a single. Changing that precision can cut down controller turn-around. Of course, you could also use integer values for everything, which speeds things up even more.
I'm not so sure. The 4th bullet point (starting "It is the discrete analogy...") talks about X_k as encoding amplitude and phase components of x_n. The paragraph after that (starting "The normalization factor...") then talks about 1/N as a normalization factor that's there by convention and "differ[s] in some treatments". 
Delete and add back the legend. The new items will show up.
Honestly, no. I doubt the average person could even tell the difference between uint8 and double in most cases. Most pixels in images are specified as something like [r, g, b, a] (rgba are all uint8s). Even not counting the "a" (alpha channel), that gives you 256^3 (16777216) possible colors per pixel to work with.
Undocumented Matlab recently had a small post about using parfor loops for cases http://undocumentedmatlab.com/blog/a-few-parfor-tips In his post, he references http://stackoverflow.com/questions/4495000/multi-threading-in-matlab. Does this help?
Yep, exactly this! :-)
Neat, thanks :)
To add to what /u/ImNotNamedSam said, in addition to continuing the line, it also acts as the beginning of a comment. So anything after the '...' on the same line will be ignored, similar to how the '%' character works.
Yep, purely about readability. It's not executed in any way. 
xlim and ylim?
While true, using it this way makes code less readable. Comments should always be prefaced with a %. 
I'm not familiar with writing to an excel file, but maybe you could create an array with the excel file names in it and use the for loop index to assign names.
This could work. You could also just pass your loop counter to xlswrite as a string, e.g. xlswrite(["fileNumber" num2str(ii)",.... That would write fileNumber1.xls, fileNumber2.xls, etc. But writing multiple excel files almost certainly isn't the best solution to your problem.
First off, a STL file indicates a surface. What you have, a 256x256x256 matrix, specifies a volume. In order to get a surface out of this, you have to specify what you want INSIDE of the volume. You can't export a STL file of a 256x256x256 matrix because the only surface is the surface bounding the volume. The surface needs to be segmented inside. I'm guessing you have the data stored such that you have 256 axial slices, or 256 coronal slices. Try using imshow(data(:,:,128)) to view the middle slice. If you have a YZ plane, (cranial top, caudal bottom, left and right) its coronal. If its posterior on top, anterior on bottom, left and right its axial (XY plane). If imshow(data(:,:,128)) shows garbage, try imshow(squeeze(data(128,:,:))) for the 12th x slice, which is the middle slice of the coronal plane. Protip: don't do this in MATLAB. Do it in [ITK-SNAP](http://www.itksnap.org/pmwiki/pmwiki.php), they have registration and segmentation tools to do this better, and can export to STL. Its freeware dedicated to image segmentation, I use it all the time. If you have to do it in MALTAB for a homework assignment or something of the like, then it gets a lot more complicated but the steps are the same. Look [here](http://www.mathworks.com/discovery/image-segmentation.html) for more info. Basically: segment, turn it into a meshgrid surface, the [export to stl](https://www.mathworks.com/matlabcentral/fileexchange/20922-stlwrite-filename--varargin-), which you're on the right track with. Hope this helps.
This was extremely helpful! Thanks!!
Just going to add that you may consider using cell arrays if the data type varies (char, double etc).
Cell2mat might work, I forget exactly what format it expects. At a minimum, you could simply allocate your output array, and then loop over the 16x8 dimensions and fill in the corresponding data from the cell array. 
You could try reshape() 
I believe you'll find this useful: http://www.mathworks.com/help/matlab/ref/isosurface.html EDIT: oops, thought you were the OP, I only briefly parsed the above comments -- didn't mean for this to come off snarky (which after re-reading I think it does)
Its fine, don't worry about it. I've used isosurfaces once or twice, but its definitely been a while. I'm more interested in the segmentation than what to do with the data after, because I think I can maneuver through the post processing without assistance. I'll probably answer my own questions when I finally get to a project that requires me to look at it more.
a crude but simple solution would be to add the pause function between xlswrite and the end of the loop. Before you let the for loop iterate again change the filename to whatever is desired, then iterate the loop again. something like: [array1] = [1]; [array2] = [2]; [array3] = [3]; data=[array1, array2, array3]; for ii = 1:length(data); xlswrite('filename',data(ii)); disp('paused for loop. Change xls filename before continuing'); pause; end;
axes limits doesn't prevent resizing. Axes position and axes limits are two independent properties. Sometimes, when you use plots, matlab automatically changes the position and outerposition property on the fly. Its incredibly annoying, and typically happens when you don't declare every small aspect about matlab graphics (imshow I'm looking at you). I spent a hour dubugging a similar problem before I found the outerposition was changed to be larger than the axes position somehow. Three ways to deal with this is to set the AxesActivePositionProperty to outerposition, manually declare an outerposition, and if those dont work, after plotting redeclare the same axes position property after you plot.
What format are you exporting to? When I want to make any sort of nice looking figure I export .eps or .pdf and do the final editing in illustrator. 
 PMat = cell2mat(arrayfun(@(x)permute(x{:},[3 1 2]),P,'UniformOutput',false)); You make each array in the cell a 3D array and apply the cell2mat.
Sure, nice job.
Unfortunately using pixels instead of normalized units doesnt seem to work
Try this. Basically, export a figure larger than the screen, instead of creating a figure larger than the screen. The end result is the same rez=1200; %resolution (dpi) of final graphic f=gcf; %f is the handle of the figure you want to export figpos=getpixelposition(f); %dont need to change anything here resolution=get(0,'ScreenPixelsPerInch'); %dont need to change anything here set(f,'paperunits','inches','papersize',figpos(3:4)/resolution,... 'paperposition',[0 0 figpos(3:4)/resolution]); %dont need to change here path='C:\Documents and Settings\yournamehere\Desktop\'; %the folder where you want to put the file name='filename.png'; %what you want the file to be called print(f,fullfile(path,name),'-dpng',['-r',num2str(rez)],'-opengl') %save file This is an example I found online peaks set(gcf,'PaperPosition',[0 0 20 20]) print(gcf,'-r300','-dpng','~/Desktop/test.png')
Im just exporting as a jpeg. I dont need the figures to be beautiful, I just need the individual subplots (and relevant axis labels / titles) within the figures to not overlap (hense needing more space than my 1920x1080 screen can provide)
There's two things with this: you have a figure that's larger than the resolution of the computer, but your computer is truncating the image. Matlab could be doing something similar. So you have a image larger than the resolution of your monitor but windows or matlab truncates it. Or, you don't have the rez=1200; command high enough. Having it as r300 means 300dpi, pretty sure, while r1200 would mean 1200dpi. You may need to change that to a higher value, which would increase the resolution of the image.
High school students would have learned some physics. You could give them some small real life computational physics question. From Newton's laws or work-energy. This would be a good start for them. Fun problem I can think of is solving rocket equation (very simplified form) where a constant mass is coming out of rocket. Just momentum conservation. It would be fun if they can calculate the trajectory and see it for themselves. 
Do the students have any programming experience? What kind of demo are you looking to have? Technical/math or computer science?
The first big project I had to do on MATLAB was a really awesome experience for me. I made a 2D Ising model in a Monte Carlo simulation along with its visualizations. Once I had made the visualizations was when it really sunk in for me that "I made this". If you can find a simple, visualizable simulation like that it might have a good effect, speaking from personal experience.
please provide more details, folder structure, file structure and formatting, end goal format, etc...
Is the issues loading a single file or all of the files? Break it down. You will load into loops but write the first part and make it general. So do something like `filename=file1.txt` and write your parser. Do not worry about the other files. Only then, should you look at batching it. If the file names follow a pattern, use `sprintf` or the like to generate the list of file names and iterate over them, Or, check out [`glob` on FileExchange](https://www.mathworks.com/matlabcentral/fileexchange/40149-expand-wildcards-for-files-and-directory-names/content/glob.m) which operates like python's (awesome!) glob tool to list the directory contents with wildcards (or just list them yourself with `dirs` or something)
&gt; I am very new to PDE solver on matlab, and not a very proficient coder at this time (I'm only a undergrad research student). I need to solve for electric fields between electrodes in a 3D volume (image) of the brain. Don't do this yourself then. Get help, use a tool like ANSYS or COMSOL. Its hard enough even if you know the math. The reasoning for your PI will be: time (both doing the simulation and time compared to writing something yourself), ease of understanding, mathematical proof of accuracy and precision. When something doesn't converge, it isn't COMSOL's problem (well most of the time it isn't). Some universities don't have a COMSOL license but does have a ANSYS license. You can use either, but ANSYS is a bit more widespread. My experience is ANSYS is a bit harder for beginners to learn but can do more, COMSOL can do a bit less but anyone can learn to use it.
MATLAB for Engineers by Holly Moore. I have recommended it before and will continue to recommend it. The secret is you do all of the practice exercises in order, and do each chapter in order.
http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-094-introduction-to-matlab-january-iap-2010/index.htm Here's a MIT OpenCourseWare class which I've found does a good job of going right from basics to working with data in realistic ways. Check the 'Assignments section' for a nice mix of quick syntax questions as well as mini-projects where you write scripts to interact with sample data. Lectures/notes will add the detail where needed too.
Use the import tool/gui and you'll have options for which rows and columns you'd like to import. Matlab then generates code to parse the data which you can reuse. Instructions here: http://www.mathworks.com/help/matlab/ref/importtool-app.html You can then write a loop to assemble your matrices from each row: E.g. Column 1 is a11 of matrix 1, column 2 is a12 and so on.
No. Parrelization usually refers to using multiple cores (virtual sometimes) on the processor for the different tasks at the same time instead of sequentually, and using shared memory between the processors or cores to make the task run more efficiently. Vectorization in Matlab just does things faster because it allocates memory and runs computations at the same time. In a sense it is similar to parrelization, but usually people mean using multiple procs or cores when they say parrelization. 
Yes, the compiler will use CPU feature SIMD for the second code chunk, which is a type of parallelism. Very likely a modern JIT Matlab compiler will do same for the first chunk, too.
I would also recommend checking out the import tool and readtable.
Actually, MATLAB does parallelize simple vector operations such as OP's example. You can see the difference in the task manager or top… give it a large enough input, and you'll see more than 1 core active.
I'm not sure why this is erroring, it does say it can't find the file so you do have directories etc. correct? Maybe dlmread is the function you need, it does what it sounds like you need.
Do you have all the frames still in one window, or have you popped out any of them? 
I actually recently had a similar challenge (grabbing all of a certain file/type from a folder and importing it). I was working with .wav files as you can see, but % Retrieve all the files in a directory names = dir('C:\Users\Owner\Documents\Pinger\data\archive\calibration-*.wav'); %Gives a list of all names that match (Thanks dir and your wildcard wonderful-ness) addpath('C:\Users\Owner\Documents\Pinger\data\archive\'); %The files are in a different directory. names = {names.name}; %Look, a Cell Array with names as a string...I think. Yes, just the names. Address them like {index} to get the string. %Get the number of elements in the names struct. sizeofnames = size(names,2); for counter = 1:sizeofnames (This runs for each file that exists, where I import and process a file) laderp_data = import(names{counter}); %syntax, dunno how you're doing it, so using 'import' as standin. bulkimported_data(: , : , counter) = laderp_data; %So this...I think...will give you a three dimensional matrix, where the third dimension delineates your sample files. end 
No all the frames are docked. It prompts for user input but keeps the cursor in the editor window. Is there a line of code that will push the cursor to prompt into the window? Or a preference setting?
I have to confess I haven't upgraded to 2016 yet, and I don't have this problem, so I won't be much help beyond asking the obvious questions.
Thank you Wensul. I still did not get it. I am new so bear my ignorance please.When I said I have 8 files, in fact they are just a sample that I wanted to try to my script, then I will use the working script for 10000 files where every file is a 72x144 matrix. if I understood from your answer you were suggesting to me to name my files when you said "names = {names.name}"....I am not sure I can do that for so many files. I am still having an issue as well on how to approach the whole thing. As I mentioned in my original question, I generated a function using matlab GUI to retrieve data from one file, matlab used the name filename in the that function, and it did associate it with the file 2004.07.01.0000.tsv. How can I call this function and retrieve all my data from all those files please? Any help is greatly appreciated!
 names = dir('file-*.wav');%this command lists all the files in %the current directory that match the argument given (so with the %* wildcard, you can be ambiguous with names. /doc dir may be helpful. The command returns a 'cell' structure (elements can be accessed by name), but we can't quite use this to open files...yet. names = {names.name} %This is saving the names field that %we got from running /dir. It's just an object that's containing %all the names that were found in your directory. note, that at when using importing from the file, I found I needed to use names{counter}, because this returns the contents of name at counter as a string, where as names(counter) would return the cell. (Not sure if that's entirely correct... tl;dr if passing a filename as a string, use names{index} (which gives a string) not names(index) (which gives a cell). they output different types of things. I don't want to suggest renaming anything at all. The idea is to list all the files that match your descriptor, and open each one. But the data that you want to apply somewhere might not be the correct data (which makes matlab complain and not be terribly supportive). This is pointing back to names{} vs names() above. and that's if I'm even interpreting your question correctly. Are the .tsv files in a directory(which is what I was thinking), or contained as text within another file?
**Can I attach image here?** I tried to work with the guidance you gave me, but I could not make it work. Wensul, is there a way if you have time for a step by step approach plz. Could you reread my original question if you have a question about any missing info let me know. I copied below what I did and the error message. numFiles = 8; startRow = 1; endRow = 72; names = dir('myfile*.tsv'); names = {names.name}; for counter = 1:numFiles myData{counter} = importfile(names,startRow,endRow); end error message: Error in import_all_8_files (line 10) myData{counter} = importfile(names,startRow,endRow);
Textscan FTW Then cat it all together
An ASCII file is a file whose data corresponds to ASCII characters, like numbers and letters. Textscan is probably the right tool for this, once you figure it out it's incredibly versatile, and FAST.
&gt; numFiles = 8; &gt; startRow = 1; &gt; endRow = 72; &gt; names = dir('myfile*.tsv'); &gt; names = {names.name}; &gt; &gt; for counter = 1:numFiles &gt; myData{counter} = importfile(names,startRow,endRow); &gt; end Wensul, I combined yours with someone else's advice and it worked for me. Thank you very much for your help! *************** Now I have a one matrix that contains all my data. How can I calculate the mean, std deviation of all the elements in the matrix plz
An invalid file id error means Matlab can't read the file--it's closed, you don't have read access, or the file does not exist at the path specified (for just a file name, that includes the current directory). Try double checking the file id--if it's -1 right after you open the file, then Matlab is telling you it didn't complete the`fopen` command; return the second argument from`fopen` for details. 
confirming cell arrays are tricky bastards. %be a cell array of strings called cellarray cellarray(index) gives the cell at index. (type: cell) cellarray{index} gives the contents of the cell at index. (type: string) oh matlab you silly sometimes. 
In my Matlab R2015a I do not see those properties for the TreeBagger object. Do a doc of it. doc TreeBagger See if you can find the properties you are looking for there; you may be looking at the R2016a documentation online and not the documentation for your R2015a version. 
Thanks - setting those limits worked
Thanks for the reply. The xlim and ylim suggestion proposed by 5uspect worked fine for my purposes but I might need to implement the AxesActivePositionProperty solution at some stage...
'commandwindow' should do it. https://uk.mathworks.com/help/matlab/ref/commandwindow.html
Look at all the different ODE solvers, ode45 is good general solver, and ode15s and ode23t can handle differential algebraic equations (DAE). If you have your set of ODEs, you convert them to a system of first order differential equations, program in an ode function, and away you go. You can even set up your own integrator if you know you can exploit structure in the problem (say you have conservation somewhere, you could make a variational integrator). 
Thank you. I'll try and look into this. I hope to be able to do the modelling for next semesters project in MATLAB.
 f2 = [1 2 3; 4 5 6]; means points (2,4), (2,8), and (8,4) are connected (points 1-2-3 in face matrix(:,1)). Since they have 3 points in the face, it makes a triangular face. Color can be interpolated over faces, but it doesn't matter if two faces in between row elements in f2 share a line. Each face can be considered a separate entity (again except for color interpolation). Does this help? EDIT: If you want to figure out which points the other faces are connected you, you have to look at the face matrix. You don't have to care about the vertices matrix, the face matrix will tell you everything you need. In your case, you have 8 unique vertices with 2 unique faces, no overlap in points used and no overlap in vertices indexes in faces. That means you have 2 separate triangles. This typically doesn't happen with surface meshes, vertices indexes will be shared across segments (in quad meshes, for example, the same vertex may be relisted 3+ times). So, to test what other faces have the same segments, you have to check other faces for overlapping vertices indexes, which is fairly easy to do (find, logical indexing works for specific faces). Again, for surface meshes line segments between two vertices can be used many times, and the vertices can be a part of many faces.
Thank you. Yeah I contacted them and they said use commandwindow . 
I usually do it like this: for i = 1 : length(v2) index_faces = find(f2(:,1)==i | f2(:,2) == i); % all the above faces contain vertex i vertices = f(index_faces,:); % this is the index of all the vertices that are conected to vertex i, including i itself, there may be repeats unique_vertices = unique(vertices(vertices(:)~=i)); % you can store the result in a cell array becaue there may be different numbers of neighbours for each vertex vertex_neighbours{i} = unique_vertices; end This is not fast for large arrays of vertices and faces. If you find a faster way, I'd love to hear about it.
Why don't you try a few different algorithms and test their performance to see how they scale?
 [mag(i,j), phase(i,j)]=bode(H,w); j=j+1; I don't understand what you are indexing with these two lines of code. Your call to **bode()** passes the same argument each time which is why you get the same values for each index of mag and phase. I see you you have values you wish to evaluate for each index of i and j so loop by i and j and make vectors of ts and wn that you can access by using i and j. ts = 0:0.1:2; wn = 0.7:0.01:1.2; Then modify your loop structure to support something like the following. You want to use your loops to index the values you wish to iterate over. Each new combination of values needs to be recalculated before you can plot it. H = exp(-ts(i)*s)/(s^2+2*coefAmort*wn(j)*s+wn(j)^2) [mag(i,j), phase(i,j)]=bode(H,wn(j));
Thanks for your answer. Giving H as argument doesn't compute again the calculation of the H transfer function, so as you say, it doesn't get the new values of ts and wn. To solve that I inserted the transfer function directly to the bode function call. Thanks again, I will modify the loop structure as your advice. 
My girlfriend did her Master Thesis in EES and hated every minute of it. EES makes it easy to solve the common differential equations in thermodynamics and had all of the lookup tables you might need built-in which is handy. In the end however EES was an enormous liability. The equation solver would sometimes not converge for no discernible reason and simply re-running it would fix the problem. When errors appeared she had to remove huge chunks one at a time to narrow down the source of the One of her friends did his thesis in [Modelica](https://www.modelica.org/). Modelica is an object-oriented system. Instead of writing an enourmous set of differential equations you create blocks that have standard inputs and outputs and connect them together. The learning curve was quite steep but by the experience was much better. The advantage of the object-oriented system compared to EES was that it encouraged encapsulation: each component only knows about itself and can only affect it's outputs and the error messages were much nicer. --- If you chose to work in MATLAB you would basically still be working like you were in EES except that you lose all of the nice commodities that EES provides. Personally I would advise against it. The error messages in MATLAB will be nicer but the resulting code will probably be more complex and more foreign to people in Energy Engineering that might need to review your code. If you still want to use MATLAB you might want to take a look at Simulink. Simulink is another object-oriented system but it is much more general purpose than modelica. I use it to model control systems for example. 
All about them gainz.
Grab the handle of whatever figure your resizing on and set it's size: figH = figure(......); or click on the figure you want to change if you've already made and use set(gcf,....) below inplace of set(figH,.....) plot(.....) title(...) set(figH,'units','inches','position',[Lo Bo w h]); where Lo Bo are the left and bottom offsets from the lower left corner of the screen (not really important for figure size) and w h are the width and height of your figure window. Alternatively, you can set your figure from the get go, just take the name/value pairs and put them into the figure(....) line. Here's the [figure properties](http://www.mathworks.com/help/matlab/ref/figure-properties.html) docu page
I have a good example of a yes and a no answer to this. In my code, I have a series of equations that solve for the acoustic pressure throughout a binary tree (my tree is the airways in the lung). Without getting too much in to it, I can solve for impedance (complex resistance) vectorized, since the equations are independent of the geometry. That means I can solve for everything at once, even the bessel functions. What I CANT solve for vectorized is the pressure, since every segment's pressure is dependent on the parents (so its geometry dependent). I have to cycle through the tree and solve as I go along. So this is an example of stuff you can and cant vectorize... hope it helps.
Is the data numeric? You can preallocate a 3D matrix and read all 8 files into it. You can then use squeeze and reshape to get the vectors you want. x(:,:,1) = dlmread(file1); x(:,:,2) = dlmread(file2); And so on... you can use a for loop here if you wish.
I usually like printing things as I see them on my screen. I use this function I wrote (with parts taken from the internet) to print things so they will look exactly how I see them. Use the function exactly like you would use print. printsc('-dpng','-r300','filename.png') function printsc(varargin) % Set figure and paper to use the same unit set(gcf, 'Units', 'centimeters') set(gcf, 'PaperUnits','centimeters'); % Position of figure is of form [left bottom width height] % We only care about width and height pos = get(gcf,'Position'); % Set paper size to be same as figure size set(gcf, 'PaperSize', [pos(3) pos(4)]); % Set figure to start at bottom left of paper % This ensures that figure and paper will match up in size set(gcf, 'PaperPositionMode', 'manual'); set(gcf, 'PaperPosition', [0 0 pos(3) pos(4)]); print(varargin{:}) end 
I'll give it a shot. Thanks!
I think the easiest solution, although maybe not the fastest, is to just loop over all your values in the 2D array. Keep some index variables and add 1 to them every time your loop variable hits a multiple of 91 or 15. The request is a bit odd I gotta say, but you probably have some use for it. Couldn't the program just function with the 2D array though?
I can't help you with GitHub. However, MW has a blog focused on issues like this. http://blogs.mathworks.com/developer/
when I do that it gives me standard deviation as a matrix which is good for an analysis that I will need to do later. my question please, now that I have myData as a 3 dimensional matrix, how to change it so that I get a the mean, std, skew, kur....of all the elements of that 3d matrix please. can i just reshape the matrix to a whole 1 column vector? **************** I just reshaped the 3d matrix to a one vector using myData = reshape(myData,[],1); and then I was able to find total mean, std, skew...but i am not sure if this is the right approach, because actually what I am trying to do is to correct the data and remove all the outliers. so once I remove the outliers and replace them using interpolation can I go back and reproduce the original matrix with all the corrections that I made for the vector? 
Basically I have a shitload of data and it's in groups of latitude (91), longitude (20) and pressure levels (15). Hence the request. I ended up using the reshape function
textscan
Check out [`glob`](http://www.mathworks.com/matlabcentral/fileexchange/40149-expand-wildcards-for-files-and-directory-names).
Great! Good luck on your project! 
If I understand correctly you want to have this 3D matrix per hour. The first thing that comes to mind is using the clock function to draw the current time from your computer. http://nl.mathworks.com/help/matlab/ref/clock.html clock(4) gives you the current Hour of the day. Perhaps you could convert this into a string and append it to the name of your 3D matrix. It'd be something like 3Dmatrix_13 for the one made between 13:00 and 14:00. And then 3Dmatrix_14 for the next one. This does require your code working for exactly one hour (or close to it). If this is not the case you could maybe keep a counter and add +1 to that once your 3D matrix is finished. Then append this number to the name of the matrix. Hope this gives you some ideas!
matlab doesn't deal well with non-regular arrays for plotting, so if you have an array of nodes and elements, good luck. You could probably force the colors to be all the same, and plot each triangle as it's own plot. STL files are simple tri models and you can use [this](https://www.mathworks.com/matlabcentral/fileexchange/?term=stl&amp;utf8=%E2%9C%93)
For your specific function it would be A = [log(x) ones(size(x))]; assuming x is a column vector. A is commonly a [Vandermonde matrix](https://en.wikipedia.org/wiki/Vandermonde_matrix).
As a first guess, try looking for the minimum of the u_E. Its quite possible that you have a negative value in there that is making the resulting u_TOTAL very large. ie. 1 - (-99) = +100
Okay! There must be some point in your code where you want to switch to a new matrix (old one is full?). At this point increase the counter. And work with the string thingy to keep track of the matrices. 
are you ensuring that there are no problems around assigning the states and times from each step into the "master" matrix (since the length won't be the same fur each run, unless you input a time vector) ? 
You could try datastore. http://www.mathworks.com/help/matlab/ref/tabulartextdatastore.html
I would probably use a cell array or structures to keep the 3d arrays in. Each index in the cell array could be a new 3d matrix.
The length is always the same, I'm using the same time span. If i run the same code locally there are no problems.
Yeah that's a valid idea too! 
[removed]
There should be more to that error message, where after it says the line it also gives an error message. What's the message say?
 load area.mat %Area Calculation % %area= transpose(area); area= repmat(area,1,144); % replicating the vector area 144 times files= dir('200*'); % loading files of June for m=1:length(files) June(:,:,m)= dlmread(files(m).name); % loading files in a 3 dimensional %matrix end June(June&lt;0)= NaN; % replacing outliers by Not a Number NaN outliers = isnan(June); % detect NaNs t= 1:numel(June); % creating a variable t which take values from 1 to number %of elements of matrix June June(outliers) = interp1(t(~outliers), June(~outliers), t(outliers),'nearest'); % interpolating NaNs by nearest values z= mean(June,3); % obtaining a matrix June that consists of averages of same cells June_temp= z.*area; % weighing temperatures by fractions of areas ??????? June_AvgTemp= sum(June_temp(:)); fprintf('The average temperature of June is %0.4f Kelvins, %0.4f degrees Celsius\n',June_AvgTemp,June_AvgTemp-273.15)
Have you tried to see what m is and what file breaks it? If it's not the first then probably your files are not all same size
maybe just something like: &gt; data = dlmread(files(m).name); then do an if statement checking the size, and then add it if it fits: &gt; June(:,:,m)= data if not then interpolate first. 
You can use [textscan()](http://www.mathworks.com/help/matlab/ref/textscan.html) for this - there's a name/value pair for header lines (your first 3 it seems), data type/format, and delimiter.
Thank you guys for trying to help. I just solved it few minutes ago. The problem was due to the fact that I was using .TVS files that were 72x144, and .txt files that were 1x10368 as my dataset. I just converted the same data as .txt files, then I reshaped the outcome of the loop which is June to 72x144 and everything worked fine. Thank you for the help anyway!
I find it impossible that you are expected to do this assignment without having been exposed to Bessel functions before. I can't teach you fully about them via reddit, but essential they are non-algebraic functions, you cannot enter an equation that will give you a Bessel function. Matlab has functions to compute Bessel functions though, just check the documentation. 
I understand now :) I didn't realize that you had to set a value equal to the bessel values while you multiply and divide them together. I also didn't realize besseli was a command. I am pretty sure that is exactly what my professor was expecting. I was able to plot the graph. Thank you so much for your help! 
I used vpasolve and it worked, but I am supposed to use Newton-Raphson and Secant Method to find them. I am familiar with both of these so it might take me a little while but I know exactly how to do it. I'm gonna stop for today and finish it up tomorrow. Thanks again for your help.
Sure thing, happy again I could help
It really depends what it's for. If it's for learning purposes, like for a class or trying stuff on your own, then almost anything should be fine. But if it's for work, or if you are handling some serious data sets, then it's definitely not enough.
It's actually for a lab that I will be working for. For signal processing, I'll be analysing couple of sound files using a pre-built algorithm (not sure how complex the coding is though). But I expect to be using some elaborate Simulink stuff... Then what's good specs for pretty medium-high usage ? at least 4gb ram with i5?
Just to give you an idea, I was able to run Matlab for one of my classes on a Dell Latitude D610, with a Pentrium M 780 and 2GBs of RAM. This was only an intro class though, so the most resource-heavy stuff I did was image manipulation (blur the pixels, convert to grayscale, etc). It ran admirably, but if you're using matlab for work, or something more elaborate, I would highly recommended getting something stronger than a Pentium, and probably more than 4GBs of RAM too. I think a current gen i5 and 4GBs of RAM as a baseline should be okay. (Try getting at least 8GBs if you can though).
Considering processing speed: It depends on how long you can afford to wait. I used to have the crappiest desktop in the house when I was doing signal processing stuff after my master's thesis, along the lines of taking 15 minutes to boot. Good thing that my project managed was a former CNC machinist, and once I'd verified that the program worked, pressing enter and leaving for coffee while the workstation was more or less completely locked up counted as "[working](https://www.xkcd.com/303/)". (Our DAQ computer down the lab was similarly aged before we replaced it.) Current lightweight work laptop runs Matlab fine with an i5 and four gigabytes of memory IIRC. If you're doing lots of signal processing stuff, do not underestimate the role of local hard disk space (or then you'll need to have enough memory to load the entire batch of data into memory before starting processing). My personal laptop has an i7 and 8 GB of RAM. (Edit: And for really heavy duty stuff, I SSH'd into a few of the CS department's computers and put a classroom full of them to crunch numbers, but combining signal processing and evolutionary computation is really number-crunchy stuff.)
[Image](http://imgs.xkcd.com/comics/compiling.png) [Mobile](https://m.xkcd.com/303/) **Title:** Compiling **Title-text:** 'Are you stealing those LCDs?' 'Yeah, but I'm doing it while my code compiles\.' [Comic Explanation](https://www.explainxkcd.com/wiki/index.php/303#Explanation) **Stats:** This comic has been referenced 738 times, representing 0.6194% of referenced xkcds. --- ^[xkcd.com](https://www.xkcd.com) ^| ^[xkcd sub](https://www.reddit.com/r/xkcd/) ^| ^[Problems/Bugs?](https://www.reddit.com/r/xkcd_transcriber/) ^| ^[Statistics](http://xkcdref.info/statistics/) ^| ^[Stop Replying](https://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=ignore%20me&amp;message=ignore%20me) ^| ^[Delete](https://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=delete&amp;message=delete%20t1_d5ngvsc)
Matlab has a [sparse matrix array type](http://www.mathworks.com/help/matlab/ref/sparse.html). You can create one with `A = sparse(row, col, val)`. Then you can multiply with `*`. You can't write a faster sparse matrix multiply than this in matlab.
Chromebooks generally can only run Google Chrome browser and not windows programs. This is unless you hack it and install windows 
Heheh I didn't even think you could do something that "complex" on a Pentium. I actually own a nice little windows tablet with a Celeron and matlab lags so much when I try to do something pretty elaborate haha Thanks for the information though!
Thanks for so much useful information! I'm still in search for a laptop but I'll probably just pick up something with i7 and 8gb of ram... wanted something portable but it's pretty hard to find something at a reasonable price with those specs. Heck, I really don't want to spend 2.5k on a laptop.. Thanks so much!!
Yes, Chromebooks run Linux with a Google interface added to them. It is possible to buy a new laptop that can run Matlab really well for like $300 unless you're doing insane operations. Keep an eye on Newegg and TigerDirect deals. Also /r/buildapcdeals
Say the array is size nx3 and you've just entered the nth row. Instead of doing `A(n+1, :) = x;`, it is better to do `A(2*n, :) = 0;` `A(n+1, :) = x;`. This is slower than preallocating everything, but faster than growing one at a time.
MATLAB array indices start at 1 instead of the usual 0. Looks like your t variable starts at 0, so accessing fluc(floor(t)) won't work but fluc(floor(t) + 1) will. 
You could use a struct for this. You could also just use arrays where each row is [row_index, column_index, value]. Either way, you'd simply write code to add corresponding matrix elements. There's no real magic here. What is causing problems? 
Oh, you're given the structs? OK. Doesn't matter really, the code you use to do matrix operations on them will look nearly identical. Just loop over matrix elements and calculate the appropriate output. 
`length` works just fine on cell arrays. So, find out how many cells there are using length, then you can cycle through on that. 
the problem is that my FileName variable is a char if i select only 1 image and is a cell variable if i select more then 1
Is there anyway to save my FileName Variable as a cell array regardless if its only 1 image that im selecting or not?
Thanks. I did this but with ischar and used an if statement to convert it to the cell after that.
Thank you!
sorry total noob here. when i use importdata it gives me a structure that contains a ColHeaders 1x8 cell, a textdata 1x8 cell, and then a field named data thats a 93x8 double. How do i work with this file called data? I'm trying to set the first column to a variable named Pressure and plot in against the second column named Height 
perhaps go into the documentation doc importdata it also suggests TEXTSCAN worth running /doc or /help on, I suppose. 
It happens. If I have a cell ex = { 'stuff' }, and I call ex(1), it returns 'stuff', as a cell, instead of ex{1} which returns the contents stuff. i'm not sure if that made much sense. If in doubt, make cell, fiddle I guess. here's my fiddling project with cells. I was doing, where audioread expects a string, but the type of variables being used makes it not as direct as I would have wanted. % Retrieve all the files in a directory names = dir('F:\matlab working\Pinger\data\archive\sample-*.wav'); addpath('F:\matlab working\Pinger\data\archive\'); names = {names.name}; %Look, a Cell Array with names as a string...I think. Yes, just the names. %Get the number of elements in the names struct. sizeofnames = size(names,2); %% And now the processing/plotting loop. figure(1) title('Press any key to begin') pause %% for counter = 1:sizeofnames %import the data [sample fs] = audioread(names{counter});
 clear A1
Any idea what it could be?
&gt;Is there anything you wish you had been taught in your Matlab/programming course? I wish I'd been taught Matlab at all. And that I had time to give a more detailed answer right now. If you could work in symbolics, the evalc command, and working with vectors inside a loop that would be huge. One of the biggest frustrations I had early on with Matlab, especially in classes, was solving equations with a symbolic. Now I look back and kind of chuckle, but I had to teach myself Matlab with no programming experience. An extension of that frustration is using the evalc (or eval) command. My last suggestion comes from the other side. I've helped a lot of people with Matlab over the last four years as a grad student and the one thing I'm consistently teaching is the *x(i,:)* notation for working with vectors inside a loop. It is simple, powerful, overlooked, and insanely useful.
&gt;Is there anything you wish you had been taught in your Matlab/programming course? [Handle Graphics Objects!!](http://www.mathworks.com/help/matlab/learn_matlab/understanding-handle-graphics-objects.html) Sure, we all know the basic: x = 0:0.01:2*pi; y = sin(x); plot(x,y,'--r); To plot y = sin(x) as a red dashed line. And intro courses might even go so far as to include basic labels/legends/titles. But what I really wished I had learned in a course and not having to on my own was more indepth graphing customization. OP - would you know how to plot (in the same axes) position, velocity, and acceleration traces of some experiment, stacked ~2in above one another, plot their fits, make them different colors/markers, have a large and bold title, italics on the x/y labels (maybe with Greek symbols if needed?) and have a legend in the plot that only has 3 entries (i.e. pos., vel., accel.)? This is something that now is simple, but in my first course I most certainly would have had to make three individual plots for the 3 quantities and their fits. Axes properties also in the same breath - could you make a figure with 4 subplots, one at the top that is 5in high x 10in wide, one lower left that is 5in high x 5in wide, one center right that is 2in high x 2in wide, and another bottom right that is 2in x 2in? Could you make your own colorbar for a contourf plot, spanning [-3 3], that goes from blue - white - red for -3 to 0 to 3?
In the first loop, you delete the first row. The second row then becomes the first row. In the second loop you try to delete the second row, but it has moved. With your method, you should delete the first row over and over.
Either A1 = []; like phsics suggested. Or: [L,W] = size(A1); for i = 1:L A1(1,:) = []; end
Check the edit I just made to my post. Should fix your problem
Hey thanks so much for doing that! According to the plot, it's not giving the right solution, so I'm going to try to troubleshoot.
Glad to help. Sorry it's not giving the right solution, hope you're able to figure it out.
Well I understand the idea of a Gaussian distribution that is anisotropic. This matrix provides dimensional data, I just don't understand how that data is presented. I understand it to be a set of variances. I've considered using multivariate random number generator but that only produces 2D data. As with a lot of the things I've been working on, bridging this data into the 3rd D is confusing.
Is this a 3x3 covariance matrix? If so find it's eigenvalues (and eigenvectors if orientation is important) use that to define a gussian error ellipsoid. But if you don't even understand what data\input you're using you will have a hard time with MATLAB
It was described in the documentation as a precision matrix, which I've read to be the inverse of the covariance matrix.
It will be a scaling and rotation of 3 independently distributed Gaussians: Sigma=[ 0.000610968 0.000491605 0 0.000491605 0.000883548 0 0 0 0.0408133]; [U,S,V]=svd(Sigma) P=U*S^(1/2)*randn(3,1000000); plot3(P(1,:),P(2,:),P(3,:),'.');axis square std(P(1,:))^2 std(P(1,:))^2-Sigma(1,1) std(P(2,:))^2 std(P(2,:))^2-Sigma(2,2) std(P(3,:))^2 std(P(3,:))^2-Sigma(3,3) mu1=mean(P(1,:)); mu2=mean(P(2,:)); Sxy=sum((P(1,:)-mu1).*(P(2,:)-mu2))/size(P,2)%Cross Correlation Sigma(1,2)-Sxy
Luckily the Matlab course I took was very math-oriented, so the x(i,:) notation was taught and used throughout and anonymous functions were used where possible instead of for example feval, but I guess both would be useful to know.
Yeah, definitely keep in mind this is coming from someone who is self taught. I muddled through a lot of stupid for a long time to find commands that did what I needed.
See: [Steganography](https://en.wikipedia.org/wiki/Steganography)
x will not be a pointer. Only the object is a pointer, when you set x=obj.PreSyn it copies the value of PreSyn and sets x equal to it. As a result, changing x will not change obj.PreSyn.
You could use C to get the array, and then return it to matlab as a matlab matrix. http://www.mathworks.com/help/matlab/matlab_external/filling-an-mxarray.html
Sorry, this was my first thought. I think maybe you wanted a Matlab function. 
I've TA'd for some math courses that use Matlab as the main coding language. [These notes on math modeling](http://www.math.washington.edu/~perkins/381AWin14/notes/381notes_new.pdf) are useful and you can likely pull some problems out of them. E.g. the monte carlo methods sections of that provide some code and you can ask your students to modify it / run it. I can also PM you some of the HW assignments from the courses I've TA'd too if that'd be helpful. *Just read the part about not wanting to ODE/PDE but I'll include the comment anyways:* I always recommend going through examples / problems in [Numerical Computing with Matlab by Moler](http://www.mathworks.com/moler/chapters.html). Since this is physics-oriented maybe the ODE and PDE chapters would be useful. I'd recommend trying to something with ODE solvers and plotting the results. Obviously could go near the end, but something with [pendulums](http://math.arizona.edu/~emcevoy/odes.pdf) might be a good fit.
That's a linked list, and it's such a terrible way of representing a linked list in Matlab that I think it must have been intentionally designed as an example of pathologically bad design. Anyway, no, there are no built-in functions for doing matrix operations on this data. As far as Matlab is concerned, this is a struct and you will have to operate on it as such. 
There is a slight error here. Like I mentioned before, you want to get the eigenvalues (or SVD) for the covariance matrix... but you said `Sigma` is the precision matrix. Be careful. 
Thank you for pointing that out. I noticed as well looking into the docs. This is a good starting point for me though and gives me the vocabulary to ask the right questions of my research PI.
Write a function that calculates the partial sum of x! and instead of just putting x, input 2*n+1.
This is a one line calculation using cumsum(). 
Thanks for the reply, I've saved the notes on math modeling to read for later :) It still hasn't been decided if the course grading will be based on homework assignments, or a project at the end of the semester, or a combination of both, but the bigger the pool of assignments/exercises I have to choose from/get inspired by, the better! I appreciate the second part too, I'll see about including some really simple examples just so the students get some exposure to this, but the students have a numerical methods course the semester after this anyway where they will have Matlab assignments on most of the topics covered by Moler.
This is really interesting, you should share your code on Github. I tried uploading data to Youtube for storage purpose. I focus mainly on the amount of data that I can put in. https://github.com/fangfufu/Matlab-Data-Video-Converter
Can you give example data? Your regexp looks like your data is comma delimited. Is this true? Could you use readtable, textscan, or the import tool? Just to verify, you have multiple lines, each of which could hold multiple name-number-description values?
You don't need to do that for any reason. 
You could use an assert statement to check the parameters and fail with an informative message.
The index in a `for` loops in MATLAB does not have to be an integer. It is perfectly fine to say for ii = 0:.1:10 'do stuff' end and have `ii` go from 0 to 10 by steps of 0.1. 
What would be the difference between assert() and validateattributes()? Would the latter work better?
The [Matlab System Requirements for R2016a](http://www.mathworks.com/support/sysreq/current_release/) require 4 GB of RAM if you intend to use Simulink and state any Intel processor will work. However since you'll be working in a lab I would recommend getting 8 GB RAM and an i5. You'll thank yourself later.
For that matter, any language. MATLAB acts more like a foreach.
Eh, most people would say yes you need to do integer checking in every function. I wouldn't say it's a priority if you're controlling the entry-point of the user-entered data and don't plan to allow any use of the sub-functions that would result in error.
A lot of functions can't handle vectors as inputs. Say you have a 3D image matrix, but some function can only handle 2D images. Anytime you are performing a standard operation or copying data between arrays, absolutely vectorize. It makes for nice looking code also.
I disagree. He could do an input check and if the input is not an interest output an error saying "input variable such-and-such has an invalid value of x. Valid values are integers only." This can make debugging easier than a generic matlab error.
No, most people would not say that. That's absurd. 
Hey OP, if you did solve this, do you mind sharing it here or PM? I don't think we are in the same field of studies, but I am trying to learn MatLab and this looks like an interesting application. Cheers.
Interesting, good to know.
Use the same algorithm for detecting peaks on the first derivative of signal? Change point algorithms are another thing to try here, perhaps on the time-averaged signal.
That would also be the best case for any sorting algorithm. Sorting is bound by O(n log(n)) from below. 
This.
Probably, I would google this as math proofs are not my specialty. Just start googling along the lines of [area of circle intersection](http://mathworld.wolfram.com/Circle-CircleIntersection.html), this looks like what you need.
If you always have 22 nodes and always in that order, it seems to be a fairly simple task. Either by [for loop](http://se.mathworks.com/help/matlab/ref/for.html) or by using the 1:22:end notation. You still need to type all nodes# as variable names yourself though. If your data not always have all 22 nodes and not always in that order, it is a bit trickier. Then you need to do a [strcmp](http://se.mathworks.com/help/matlab/ref/strcmp.html) and then maybe a [switch case](http://se.mathworks.com/help/matlab/ref/switch.html) in a loop.
Do not create indexed variable names. Ever. For any reason. It is never a good or useful idea. At a bare minimum, you can use a cell array to achieve the same behavior without making your code unmaintainable and buggy.
Just tried this out and it seems like it is EXACTLY what I was looking for, thank you! Now.. what do you mean by setting this up as a function to make it easier? because eventually I'll have to do all nodes and there could be hundreds of them later on.. just trying to understand what you're suggesting for moving further
Mmmm ok yes I've never done loops but yes eventually it won't always be 22 nodes it will increase definitely so what do you suggest? It seems like strcmp i what /u/wobbly_wobbly suggested
http://imgur.com/a/nZ1J0 right now that is what my code looks like.. doing it manually for every node.. i know for sure that this is something that can be expedited and automated (that's what computers are for after all) but not sure how or if you have an idea thanks
you could just do a little function like: function z_out = node_fun(n_tab, desired_node) z_out = n_tab.ZReaction(strcmp(n_tab.Node, desired_node)); end Then you just pass in your table variable and the desired node. With that you can just do a little loop for unique nodes and create a struct with all the info you need nodes = unique(n_tab.Node); for n = 1:size(nodes,1) z_out.(['n_' num2str(n)]).name = nodes{n}; z_out.(['n_' num2str(n)]).zvals = node_fun(n_tab, nodes{n}); end
if you're just looking for the nodes and not the Time cells, then you can do this and it should automatically do everything for you and all your node values will be in a struct called z_out node_idx = not(cellfun(@isempty,strfind(node22mat5truereactionforcesz.Node,'Node'))); nodes = unique(node22mat5truereactionforcesz.Node(node_idx)); node_names = strrep(lower(nodes),' ',''); for n = 1:size(nodes,1) z_out.(node_names{n}) = node_fun(node22mat5truereactionforcesz, nodes{n}); end
Exactly i'm looking for just the nodes, i don't care about the "Time" cells. When i copied and pasted this code I got this error: "Undefined function or variable 'node_fun'. Error in functiontest (line 6) z_out.(node_names{n}) = node_fun(node22mat5truereactionforcesz, nodes{n});" 
&gt; nodes = unique(n_tab.Node); &gt; for n = 1:size(nodes,1) &gt; z_out.(['n_' num2str(n)]).name = nodes{n}; &gt; z_out.(['n_' num2str(n)]).zvals = node_fun(n_tab, nodes{n}); &gt; end Hahah I was starting to feel bad that I'm taking up your time but great if you're benefiting too.. I again tried running this and error.. what I'm doing is going to share this [link](https://www.dropbox.com/sh/lmes9fzq81vvafh/AADq5bFgW2-pPM_5F39oGNkda?dl=0) with you because yours was broken.. in there I have the table variables of n_tab and node22mat5truereactionforcesz which are exactly the same. I also have the two function files that you sent me that I just copied and paste as code but couldn't get them to work. At this point I'm kinda confused as to what each of the functions are supposed to do. Ah! please help :D 
hmmm...my link is working fine for me, but either way the function1.m file is just fine, but it has to be saved with the same filename as the function name, so in this case it has to be saved as **node_fun.m**. Also, remember that you have to save the file in a directory that is on your search path. If you type **userpath** into the command window it will show you a good directory to save the file. Once you have that saved with the right filename and in the right directory and your table data is loaded, all you need to do is run z_out = node_fun(node22mat5truereactionforcesz);
You should share your solution. Nothing can always be optimized.
Recursively or iteratively? Either way you probably can't vectorize a linked list. Populating the matrix (or cell matrix) with one *node* of the list at a time is likely as efficient as it can be.
IIRC Mathworks did this as an example in one of their videos on applications of their machine learning toolbox at http://www.mathworks.com/videos/signal-processing-for-machine-learning-99887.html
Are the newer laptops scaling the display? I've run into problems using older versions of Matlab with the screen (resolution?) scaling set to something other than 100%. 
&gt; Are the newer laptops scaling the display? I've run into problems using older versions of Matlab with the screen (resolution?) scaling set to something other than 100%. Humm, not sure. The screen "size" seems to be the same as before, but as you can see from the images something definitely breaks in the graphical structure.. I'll try looking into scaling and get back to you. If you have a good idea about how to check it let me know. =)
Reading your comment again I realize you are talking about screen scaling. No, these are 1080p screens, same as my old computer, and it's set to native recommended resolution. So the computer screens aren't doing anything fucky..
I also just checked the DPI scaling, was set to 125% as default, switched it over to 100% relogged, and no dice. Get the same problem, no change.
What versions of Matlab are you using? (for the working and non-working cases)
I use a script package called [fieldtrip](www​.fieldtriptoolbox.org)
You can try CRC spectral classification for stochastic signals.
Thank you. When I use the xlsread(filenameherelol) code is there a way to have it extract certain information I need from the excel file?
Ok, how would i use x = data(whatever here) so that for every 7 in column K it displays the J column value? Is this possible? 
You can use logical indexing, like: y = data(data(:,k) == 7,j); If there are multiple places where column k is equal to 7, then you'll get back a vector of all the j values.
Thank you for this reply! I appreciate it, giving it a go now!
I should be able to help. While not 100% necessary, it would help me to understand the problem as a whole to see the entire problem in the typical optimization problem format. e.g.: Minimize (f1,f2,...) Subject to [A] {x} &lt;= {b} [C] {x} = {d} [N] = g({x},{c}) {x lower bounds} &lt;= {x} &lt;= {x upper bounds} Where, f1 = f1({x},...) f2 = f2({x},...) Which optimization solver will you be using? Some allow [nonlinear constraints in the form of a function](http://www.mathworks.com/help/optim/ug/nonlinear-constraints.html). If nonlinear constraints aren't allowed with the solver you're using, you might consider a penalty function, where the objective function for any designs which violate the constraints are penalized. 
You can use the dependency report to see the toolboxes your script uses. 
 #Thanks, that's a nice summary it gives!
EEGLab is a Matlab toolbox that is totally free - https://sccn.ucsd.edu/eeglab/ It will read all formats I'm aware of and is very simple to use for extracting artifacts/erps etc. thanks to gui interface (you can also use it programatically) Won't do anything live though if you're trying to say control something with EEG.
Sounds like a nightmare in Matlab, honestly. My experience has been anything more than fairly trivial UI's... you're *way* better off doing it, if at all possible, in something like C# and WPF.
It's an odd constraint, but yes as long as either one is satisfied you're good. Just code it in the constraint function as if eq1 || eq2 else end
Yeah I suspect it might be easiest. I might see if it can be done through python as we used that fairly often (though I've no idea) for similar tasks. Otherwise I'm thinking of making a heap of simple guis with bucket loads of notation like walkthroughs for the students. Still, as a task that will be very good practice.
What about other file formats? do they have the same limitation? jpeg2000 or tif? Also I wrote something sorta similar to this that used the BLOCKPROC function to write out a very large tiled julia set to a tif file using the 'Destination' param/value pair. You could look into that if you wanted.
yeah it feels more like they're expecting me to make a dedicated design environment, which as just a normal psychology researcher who can use matlab seems a bit beyond my abilities! Im thinking they're likely to get just lots of scripts that are heavily commented on how to use until a better option comes along.
Um...
I'll look into that. Thanks a lot!
I'm a little out of practice with matlab, but can functions access the global scope? Because then what you can do is write a function which checks for it, returns it if it exists and is the right size, or otherwise loads it from the file. I'm more familiar with python and java: in those languages, the way to achieve this would be with a singleton class (I understand that matlab has classes, but not sure if this pattern is completely applicable). You have your Parameters class which has no instance methods or variables, but has one null class variable and a class method called something like `get()`. If the class variable is null, you load the file and set the class variable to the parameter array, then return a reference to the class variable. If that's already been done, you just return it. I think that in matlab, you'd have to return a copy of the array which costs you a bit more memory but it shouldn't be too much. Here's what it looks like in python: class Parameters: params = None @classmethod def get(cls): if params is None: cls.params = load_your_param_file() return cls.params Then whenever you want to use your parameters, just use `Parameters.get()` instead of whatever the array is called. You don't need to instantiate the class, though.
Would you mind elaborating on your flair?
Step one tells you how to add it to your search path. If that's not working for you, you can always navigate (in MATLAB) to the folder containing NODDI, right click on NODDI, then add the folder and subfolders to your path. That should work, but its a nuisance to have to do that every time you start MATLAB.
Yeah, I have NODDI added, but I can't do step 2 because I can't get niftimatlib to work :/. That's my main problem. 
Did you add niftimatlab the same way you added NODDI?
I tried, but it gives me this: Warning: Directory access failure: C:\Users\XXXX\Documents\MATLAB\nifticlib-2.0.0.tar.gz &gt; In path (line 109) In addpath (line 88) 
Try extracting that tar.gz archive first. Something like [7zip](http://www.7-zip.org) will do the trick, as the built in windows unzip tool can't handle gzipped tar archives.
Do you know the uncertainty of your measurements? There are plotting tools to create error bars. I forget the exact name of the function but if you search the documentation you should find it. It might just be called errorbar(). 
Your prior was a gamma distribution and your father smelt of elderberry. 
Just load an image into a figure
Wish I could say that worked :( Still getting the Directory access failure when I try to add the path. I ended up doing the right-click addpath trick with the unzipped folder, but I still can't create the ROI with this code CreateROI('NODDI_DWI.hdr', 'roi_mask.hdr', 'NODDI_roi.mat'); because I get this error message Error using CreateROI (line 23) niftimatlib does not appear to be installed or included in the search path Argh. The frustrating thing is that at the lab I was able to get near to the last step before something went wrong. On my own computer I can't even get past step 2. So something's wrong on my end, I just am so new at this that I don't understand what or why. 
This may be useful: http://blogs.mathworks.com/steve/2013/08/07/tiff-bigtiff-and-blockproc/#c938f189-9397-491e-93ee-54af3116ccd1 The bigTIFF file can be written using http://www.mathworks.com/help/matlab/ref/tiff-class.html
can you be specific about how you want it overlayed? Centered, top left align, bottom left, top right, bottom right? 
How is your image stored? RGB, greyscale? I think you can do this programmatically much easier, or though a UI element. As in print the first image, ginput or buttondownfunc to select a desired location, then overlay the image with the center at the specified location (or corner, whatever). As for resizing the image, how do you want to do it? [imfuse](http://www.mathworks.com/help/images/ref/imfuse.html)? Two image's with one's transparency set higher/lower? If you want to want to overlay an image on another image, first image the first one with the larger resolution, then image the second one with a different transparency so you don't overwrite the first image. Something like [this](http://www.mathworks.com/company/newsletters/articles/image-overlay-using-transparency.html) can help. Imfuse can do this almost automatically but it would make rbg images look terrible. Basically, the second image would have the same resolution as the first image but the blank zones would be NaN with alphadata set to NaN so you don't manipulate the image in any meaningful way (the added rows/cols never show up as anything). If you do this, two images can be overlayed in any location using my aforementioned ideas much more smoothly, and at any location you want using ginput or whatever.
Both images are RGB. Thanks for your feedback. I have tried using imfuse and yes it made the whole image looked horrible. Did you meant to include a link? I see nothing at "something like [this] can help"
My bad, I even had it in the windows clipboard. Damnit lol http://www.mathworks.com/company/newsletters/articles/image-overlay-using-transparency.html
I agree that is the preferred file format, but I was hoping to avoid it because this is a tool I want to be able to move around- both to different computers I use and to co-workers. If I could make it as a single file, then I don't have to worry about files being in the correct folder/staying paired together. I ended up putting the data into a .m file that all it does is return the array if necessary. It's not the best, but the nice thing is, I can hand around the two files and as long as the other file is anywhere on the path, it works. I couldn't find a way to call a workspace that was anywhere on the path, instead of in a specific location (of course, relative locations work, but even that requires it being somewhere in particular). Perhaps there is a better method that I'm not aware of? 
How about BigImage(50:100, 70:120) = SmallImage Obviously adjust to fit your needs. 
I've been messing with it, trying to lay circles and straight lines in different places. It's just a lot more involved i guess. 
clearvars -global
 function ccc clearvars -global close all clc That's still leaving global variables and now I'm filled with self-doubt.
From the command line it works but when grouped into a function it's not running. It's not the end of the world but in curious as to whats changed.
Oh I see what you're saying. I just did this z = 7; global z Untitled(3.5) where Untitled is: function Untitled(x) global z fprintf(['x = ',num2str(x),', z = ',num2str(z),'\n']) clear -global end And that seems to clear z from my workspace. It's strange that it doesn't work for you.
let me make sure i understand the question. you are asking, what is the time complexity of the above code right? OK, there are 2 approaches. you can either work it out a priori using concepts in CS, or you can derive it empirically. I strongly recommend doing both. i would choose input sizes for t of 1,000,000, 2,000,000, and 3,000,000. lets say that takes 1.1sec, 4.1sec, and 9.1sec. then the process has time complexity n^2 and there is a 100msec initialization time. then, thinking about the results obtained empirically, i'd seek to explain to myself why that was true. however alternatively this question is asking about cyclomatic complexity or some other concept. if that is the case, you need only to count the paths that the input can take through the code.
Please don't be mad, I honestly did not know there was a difference :/ I learned about floating point, but never about any other form of number representation/processing. I am aware of how dumb that makes me sound. 
It's just a coordinate transformation. Y=mx+b becomes r sin th = m r cos th + b. Then solve for r. 
Probably flattens a list that has structure as binary tree. So if you had a single node tree structure with value 2, a left leaf 1, and a right leaf 3, it would return a list [1,2,3].
If you want to still keep the size of the bigger image visible when overplotting, you could try "padarray" then pad the smaller image to shift it to the right position. Make then a simple RGB image, where RGB = zeros([size(BigIM), 3]); RGB(:,:,1) = mat2gray(BigIM); RGB(:,:,2) = mat2gray(PaddedSmIm);
Lol if only. He's got several hundred publications under his name and he's getting older, definitely set in his "tried and true" method 
I swear this is the 3rd time (2nd today) I've seen this exact same post/problem. Are yall in a course together? Or are you just one person with multiple accounts, and when you don't get *the answer* you just post from another account? Something seems up -- 3 times with the same post is too much of a coincidence. Earlier it was asking for the complexity (now deleted).
Octave is another good free alternative. I think it has the added benefit of running MATLAB code exactly, so there's that. Um. You have experience with actual languages, MATLAB is more of a really powerful calculator. I use it to calculate rent, process datasets and it's heavily used in signal processing. Now, personally I think if you're not using Simulink (a part of MATLAB that's used in control systems engineering) or some other fancy thing built into it, you don't need MATLAB. However it is a really popular tool among engineers specifically that it might be useful for you to get used to the software. That's up to you. I'd just download the Anaconda distribution of Python and use Spyder. It looks like MATLAB in the way that it displays the workspace, and it's built for the same things that MATLAB was primarily built for. Plus it has the added benefit of being Python so thousands of libraries and packages exist for you to use. More documentation and community help too. MATLAB has a few quirks compared to other programming languages, so learning MATLAB will make Python easy to pick up, but learning Python won't make MATLAB easier to pick up. (I say this in consideration of the fact that you already know how to work through the logic flow of problems, so my primary criterion was the syntax of the language)
50 bucks? Don't even think twice, just get it. There are people on the industry who want to see 'Matlab' on your resume, and not a cool open source alternative to it. MATLAB gives it out for cheap so kids get used to it and when they go to work in companies they continue advocating for it and hence there's a continuing cycle. You can explore all the alternatives mentioned by the helpful commenter above (add Spyder to that list) during the summer and I definitely would encourage you to learn Python in your own time. MATLAB itself is not a programming language and you can learn it over a weekend. But companies are willing to pay close to 3000$ per license because of their support and warranty. Not to mention, the message boards have answers to most questions you might come upon during your work plus a huge library of scripts uploaded by other people. Disclaimer: I don't work for mathworks. Edit: some people pointing out that hiring managers these days aren't asking for MATLAB specifically but it was in my experience that this was a near minimum requirement. In the few offers I got, they all wanted to me to know it plus the added advantage that I got to interview with math works itself. On the other hand, I'm a signal processing engineer, and MATLAB is more famous in the community since there is a lot of linear algebra involved.
&gt; There are people on the industry who want to see 'Matlab' on your resume, Aerospace engineer here. I have yet to meet these people, nowadays people are flocking to python.
&gt; You have experience with actual languages Second this. Matlab has always felt like an environment to facilitate computational methods without requiring heavy coding experience. Seems to me that's what we are paying for: the grunt work coding has been done in the back end and in toolboxes (all the more expensive for commercial use later if they reel you in as a student). A couple notes to add: * If your classes are using Matlab to teach, you may not want to add more work for yourself porting everything to another language. You'll have enough to do as it is. And it's not hard to learn it in conjunction with Python or something else. Matlab's made for non-coders in many ways so you'll be fine. * Like others have said: it's cheap as a student and many times those academic licenses have all the fancy toolboxes. They reel you in because commercially, all of that is very expensive. * What's better than choosing the "right" language to put on your resume? Showing that while you have experience in certain ones, you understand different problems call for different solutions and you're good at adapting and picking up new languages easily. EDIT: Forgot to mention I'd be surprised if UC Davis doesn't already have a total headcount academic license for their students to use Matlab for free. If you want to get started before you have access and save your money, you could shoot out a couple of emails to your department or IT to ask if it can be made available to you to get a head start.
If you want to test that you've got things right after running the dependency report, the best option is to just remove the toolboxes from the path. This way, you can add them back later easily. &gt;&gt; pathtool to open the path manager. Delete the folders which don't contain toolbox\matlab
If you have experience in C++ then learning Matlab should be no problem. It's a simple and intuitive programming language for the most part. I would say that before you buy a license you should check to see if your university has a site license. Many universities these days purchase licenses that their students can install on personal laptops and they may include a good number of toolboxes as well. 
Apologies for not answering your question, but according to your definition why can't you just permute the labels?
If I understood the problem correctly, you could make an array of all the pairs, i.e. C = [A(1,1) B(1,1); A(2,1) B(2,1); ... ], and then use D = unique(C,'rows','stable'). That will remove all duplicates, so then you can compare C and D to see if any elements were removed (i.e. there were duplicates). Maybe not the most efficient method, but it works. Just to elaborate, the "unique" function in general is used to remove duplicates. The 'rows' argument makes the function treat every row as one entity, otherwise it just checks every individual entry. The 'stable' argument preserves the order that the elements appear in - if we don't include that, the function might change the list even if there are no duplicates to remove (it only changes the ordering, the number of elements stays the same).
the [dot-multiply operator](https://www.mathworks.com/help/matlab/ref/times.html) does element by element multiplication, where you want vector multiplication. try something like: a = h'*b*0.5; that should give you a 2-d matrix of areas based on base and height combinations
It looks very similar to the commands you get from the Image Aquisition Toolbox (which can aquire images from webcams and other devices). Although not certain I would assume it uses the same framework. In that case *snapshot* would be equal to *GetSnapshot* or calling *step()* on a *VideoDevice* object. If so, then matlab will wait for the frame to be retrieved and send it to matlab before continuing to execute your script. Unfortunately I can't tell for sure, because everything is hidden behind MEX files and I couldn't find any reference to the IMAQ Toolbox. Is this your aquisition loop or just a test? Also does your preview work? *preview(webcam(1))*
I agree, that way you know if it is a computer or camera specific thing. You can also try microscopeCam=webcam(1); varriance_test = zeros(1,100); for idx = 1:100 currentImage=snapshot(microscopeCam); varriance_test(idx) = var(currentImage(:)); end If you get an 'empty' image back or one with only constant values it will have a low varriance accross the pixels. If it contains something varriance will be pretty high. That way you can see if it is merely the first image captured ever (might be a driver thing). If it is, just discard it and pretend it never happned. Unless you need it, I wouldn't store the webcam object in a `struct`. I am not sure why, but access to them is painfully slow compared to normal variables. So if you plan on getting some really high frame rates from the camera ...
Nope, just a simple float array (double or single) with values between 0 and 1. Colour requires a vector, all you need is a scalar. So the 4D array becomes 3D again and each layer contains the concentrations for each mineral or whatever. Summing along the stack dimension (probably the third) and thresholding with the number of minerals will give you what you want. 
ochagens already posted example code for this :)
A delay needs to be added somewhere because x5 is dependent on x5, thus creating the algebraic loop. Since x5 is the system output but it feeds back into the system (to create x4), I would put the delay in the feedback.
Or Python- not as similar to MATLAB as octave is, but ultimately more versatile.
shouldn't the generator provide this friction or damping? as it is converting the rotational energy of the inertia into electrical energy.
This is just a converter. From the doc: "The Rotational Electromechanical Converter block represents a lossless electromechanical energy conversion, therefore the same constant of proportionality is used in both equations." http://www.mathworks.com/help/physmod/simscape/ref/rotationalelectromechanicalconverter.html
Options: Use a different language: Octave (syntax-compatible), Julia (somewhat similar, and lots of flexibility), or Python (quite a different syntax/style, and lots of flexibility) Contact Mathworks and ask. Question: What are you trying to commercialize? I don't see how matlab would be angry if you sold a .m source file, or collection. You, theoretically, could develop these without ever touching MATLAB. Are you compiling down to an executable?
Depends on how you are commercializing this. There are many companies that make their own matlab functions and simulink blocks and sell them as their IP. Also, if you are commercializing and making a startup out of this, there is a starter program that offers special pricing. http://www.mathworks.com/campaigns/products/startups/index.html
I want to use MATLAB to generate some C code for an app, which would accompany a hardware product I want to sell (does not use MATLAB). I know if I bought a license it would be my IP and I could use it. I guess I'm just concerned whether it's okay to hold off getting the license until the code was actually being distributed/used to generate revenue.
`ax.XLabel` is not controlling the x axis label shown on the Bode plot. You can show this by making the plot and then adding an additional label `xlabel('blah')` to see that it'll add the string right on top of the frequency information. Seems like your needs might not be possible to fulfill, but take a look at using `bodeoptions`and `bodeplot`to give yourself more flexibility than just `bode` alone.
You should really tag this as a homework question
Thats my problem, what block should i use to truly convert mechanical rotation into electrical energy?
Thanks. I'm actually already using `bodeplot` but haven't been able to suppress the label yet. 
Have you been taught how to access data in a linked list? Do you know how matrix multiplication is done? 
I'll give that a go. Thanks. Framerate isn't a big deal - about one a second - as I'm looking at a fairly slowly evolving microscope sample. But I'll remember what you said about structs when I'm doing something that must go a bit faster. 
I think that everything is correct: the system arrives at an equilibrium very fast. Did you try to set a maximal timestep in simulink configuration? Looks like the last two timepoints are very far away. And what kind of solver do you use? 
It depends on what exists in your application. The rotational friction and/or damping blocks would probably be appropriate. 
Pretty sure Octave opens Matlab files and runs Matlab code just fine. Toolboxes are another story though. Python is a completely different beast. You'd be starting from scratch, just recreating equivalent functionality using completely different syntax.
Matlab to octave should be easy providing you're not relying heavily on toolboxes. Python, not hard, but longer, and requires proficiency with the language and relevant libraries.
A big part of my job is converting Matlab to Python, but I do not think it is difficult at all. In a lot of ways, Python is more straight forward, but vectorization comes a lot more naturally in Matlab. You will have to get used to list comprehensions and looping again instead of relying heavily on Matlab to handle a lot of it for you.
Octave is specifically designed to be directly compatible with MATLAB code. Tool boxes are the one thing that differentiates MATLAB and Octave. 
As others have said, you can roughly convert to Python by changing syntax (and using numpy arrays as your main data-type rather than built-in ones). And that is an acceptable strategy. But one of the beauties of Python (in my opinion) is the language itself. While Matlab has some object-oriented stuff, in Python, everything is an object, whether you use it that way or not. You would be selling yourself short if you didn't try to think about and take advantage of, that feature. Plus, there are just so many things that are really nice in Python such as string handling, etc. I think [SciPy Lecture Notes](http://www.scipy-lectures.org/) are one of the best ways to get into Python from Matlab. It isn't a Matlab `&lt;==&gt;` Python guide since that won't really teach you much. Instead, it is how to use Python for the same kinds of things you may use Matlab for. Pro Tip: If a guide *ever* says to do something like from &lt;module&gt; import * run away! The beauty of Python is it scoping and name-spaces. Don't throw them away. Then there are also some middle grounds. For example, I think from numpy import zeros,ones, &lt;etc&gt; is also bad, though from datetime import datetime is pretty standard. If you do not know what I am talking about, generally you do something like import numpy as np then to get the `ones` function, you do `np.ones`. Sure it is more verbose but now you know *exactly* where your functions come from. In matlab, the names tell you little. And without being in the interactive environment and calling things like `which`, you never really know. /steps off soapbox
On the flip side, NumPy does broadcasting automagically while Matlab relies on `bsxfun`. Though I think that is changing in later version.
I'll apologize in advance because I don't know how to fix your issue (I'm fairly new to matlab myself), but I think I can tell you why you're running into it. The "Index exceeds the dimensions" error means you're calling for a location in a matrix that doesn't exist. For example, f(5) of [1,2,3,4] would give such an error. So, when you call f(i+1), that position of the f matrix doesn't exist, so there's nothing to call. So I would say to either limit the range of i until you only call locations that exist, or expand the f, g, and h matrices until you can accommodate all the locations you need. &amp;nbsp; If this is bad advice, I'll happily delete. Hopefully someone more knowledgeable can provide some insight.
I guess? Tbh, I'm don't user Octave very often. It's been great when I have a MATLAB file, but licenses are not available. I've always been able to drop in a MATLAB file without any problems. That said, I don't do any classes or other OOP related stuff in MATLAB (that's what Python is for :P). My understanding was that Octave is specifically designed to have as much compatibility with MATLAB as possible, but I might be mistaken.
I was using a VPN that I no longer have access to for Kmeans and will be getting a trial of statistics toolbox today, so I haven't tried a whole lot. What do you mean "group index?" So for instance if I wanted 3 groups, the first argument in kmeans will only give me 3 indices, correct?
this question is as much for my own learning as it is to help OP. Couldn't you use C as an intermediary? What I mean is, Matlab code can be converted to C code (http://www.mathworks.com/videos/automatically-converting-matlab-code-to-c-code-96483.html?requestedDomain=www.mathworks.com) My understanding of Cython is inchoate at best, but cant you essentially run anything from C or python? So wouldn't it be feasible to use C as a kind of intermediary? 
So x is the output of dsolve, then you substitute values of g, c and m. It looks like x is already a function of t from the command window and all you need to do is evaluate the symbolic form and return a numerical value. x = dsolve('D2x = g - c/m*Dx^2','x(0)=0','Dx(0) = 0'); %output x(t) x = subs(x,{'g','c','m'},{9.81,0.30,70}); %substitute constants t = linspace(0,50); %define t vector y = double(subs(x,t)); %evaluate x @ t and convert from symbolic to double plot(t,y) [Is this what you wanted?](http://i.imgur.com/rXm6UNC.png)
Since they're pretty small, I don't know. For large n, independent would be faster.
I'm not sure a) what you mean by type testing (data type? whole vs. real number?) and b) what the problem is here with your test example (and no code). Are you trying to check the Ndays between may 3 and june 7, as well as may 4 and june 7? Off hand, if your issue is in error-checking your d1 input ([3 4] being a vector, not a scalar) you might look into using the numel() function.. Other than that, can you expand a little on your problem/short coming, maybe provide some code or a working example?
Cool, thanks. This solves my issue!
I suck at Matlab but you might have better luck writing down the total energy and angular momentum to solve for radial and angular functions instead. 
What are the three dimensions you want to plot?
Sure. Matlab has support with examples for mutually-exclusive button selection using [buttongroups](http://www.mathworks.com/help/matlab/creating_guis/add-code-for-components-in-callbacks.html#f10-1001546). The doc page doesn't specify whether checkboxes are mutually exclusive in a button group, but radio buttons seem more intuitive for exclusive selection regardless. If you really want checkboxes and they aren't exclusive in a button group, you can always write code for buttons in the group to deselect all/all other/all checkboxes/the most recent checkbox in a group/panel/figure/list of handles. For example, you could make checkboxes in a uipanel mutually exclusive by adding the following callback to each checkbox: function checkbox_callback (obj,~) old = getappdata(get(obj, 'parent'), 'selection'); if(~isempty(old) &amp;&amp; ishandle(old)) set(old, 'value', get(old, 'min')); end setappdata(get(obj, 'parent'), 'selection', obj); end Basically, by adding that function as a callback to all checkboxes in a container such as a uipanel or figure, you make the checkboxes (or toggle buttons, etc) mutually exclusive--whenever any box is selected, it de-selects the previous selection and stores the handle to the current selection as appdata in the container so the next selection can deselect the current selection. You could run into trouble with this implementation--if the user clicks quickly enough that callbacks fire in the wrong order, or if you select boxes programmatically, for example--but you can add code to check for those conditions or iterate over all the checkboxes (get obj parent's children, or use `findobj` or a list of the checkbox handles from their creation) and turn off all but the current object each time the callback fires. 
You can use tic toc to time both and see which is faster.
Correct me please if I'm wrong: So what you are saying is that my loop will need to be reformulated into a vector containing all of the equations and then solve for all of the resulting variables with the solve? I thought that's what I'm trying to do. So essentially I can't loop like this, I would need to first create the vector which calls at every entry the function? Or am I totally off? Thanks though for the answer!
To access fields in a struct, use the dot notation: data2= data1.result data2 = unixtime: 1.4709e+09 rfc1123: 'Thu, 11 Aug 16 15:12:40 +0000'
IIRC, linear system of equation solvers tend to have a complexity level that's at worse O(n^3 ) for dense matrices and at best O(k*n^2 ) for banded matrices with a bandwidth of k. Therefore, it would appear that solving a larger system of equations would be slower. Yet, your system of equations are very small to the point that these complexity estimates don't enter into effect. Are you sure that trying to optimize that step is a good investment of your time?
&gt; Pretty sure Octave opens Matlab files and runs Matlab code just fine. I'm not sure about that. Last time I've checked, Octave didn't supported all of Matlab's object-oriented programming features, nor did it supported Matlab's packages.
The file you are trying to read is [this one (6k)](https://projecteuler.net/project/resources/p096_sudoku.txt). Matrices must have matching line lengths, therefore reading a textfile where lines are not equally long fails. I'd probably skip the lines with titles and use [fscanf](http://se.mathworks.com/help/matlab/ref/fscanf.html) to read the lines with numbers. It is possible to populate a tensor (in this case it is functionally an array of matrices), i.e. data[grid_number][i][j], then close the file, and maybe even save the data into a MAT-file for easier handling, and then go on solving the problem.
Thanks :)
Thanks - that's interesting! Quite likely won't use it though, you're right... its terrible to follow.
Just as an aside for anyone else reading this, here is a good example of why you shouldn't use `i` as a index counter in your code. I totally though OP was doing that until I saw the third code block where it became clear that it *was* the imaginary number. Also (and this applies to OP's code too), since many people *do* use `i` as an index, it is better to use `1i` as the imaginary unit.
&gt;I have an mx2 matrix and I want to test whether there is a given combination of numbers within the matrix. So if I have k and j for example, I want to see if at any point in the matrix I have j on the right of k. I wrote the code &gt; any(any(k==m(:,1),2) &amp; any(j==m(:,2), 2)) Break it down and work on understanding each piece: k==m(:,1) Returns an Nx1 (where N is the number of rows in m) logical array that is true whereever a value in the first column of is equal to k. j==m(:,2) Does the same, but for values in the second column equal to j. any(A, 2) Returns a 1xM array (where M is equal to the number of columns in A) that is true where any value in that column of A is true (i.e., not zero). For your case, since you're passing a single column to `any`, the dimensional argument is unnecessary--`any(j==m(:,2))` would work just as well as `any(j==m(:,2),2)`. A &amp; B Is an element-wise "and"--it returns an array the size of A and B (or, if either A or B is scalar, the size of whichever is non-scalar). The outermost `any` doesn't actually do anything, since the arguments in it already return a scalar boolean--you could skip it, and you could use `&amp;&amp;` rather than `&amp;`. I'm not 100% sure that this code does what you want, though--it returns true whenever k is in the first column and j is in the second, even if they aren't in the same row. If you want k and j to be in the same row, use: any(k==m(:,1) &amp; j==m(:,2)) This passes two Nx1 logicals to the `&amp;`--which returns an Nx1 logical that is true where the first column of m equals k and the second equals j. The outer `any` then is necessary--it returns true if any row meets the criteria, false if none does. 
Could you share the links to the Matlab to python converters?
If I could call the python code from MATLAB that'd be awesome. How do I do that? Thanks!
I would be worried that a converter might change the numerical algorithm of your Python code. Why not just call the python function directly? If you make a system call to a batch script, you could pass the NxM matrix to your .py file, and have it return the answer.
Super thanks a lot mate! Gonna try it Monday. Weekend's here, finished today's recording, now beeer
No surprise that it's a pain in the ass. You don't have a normal timeseries variable. Instead, you have a cell array where each element is a timeseries with a single value in it. Beyond that, are you sure those functions (price2ret() and tick2ret()) are meant to take a timeseries datatype? 
I don't know what a quantization matrix is. Do you? Knowing how something is computed is the first step to writing code. 
If you're using a recent version of Matlab, it already runs Python scripts out of the box. Recommended reading: [Mathworks: Getting Started with Python](http://www.mathworks.com/help/matlab/getting-started_buik_wp-3.html)
You have defined u = [0.5, 0.5^2]. When n = 3 you will try access u(3) which is not defined! Also you should take another look at you summation, I'm not sure that it is correct.
I managed to find some old memos with similar questions and eventually got it to work with a for loop instead. What I dont get is how u(3) is not defined? I defined u(1) and the rest should work with n or not? Ye I see that the loop itself is also wrong. Thanks for the help!
As far as I know, MEX is to make Matlab scripts/functions compatible with C++ programs, not the other way around. Are you trying to run an executable from Matlab? Or is it some other code? This is out of the realm of my expertise, but have you checked out [this](http://www.mathworks.com/help/simulink/slref/coder.ceval.html) Mathworks help? It's Simulink, not Matlab. You might also want to search the *system* command, that might help?
I believe that you can accomplish what you're after with functionality built into MATLAB out of the box. Take a look at the [loadlibrary()](http://www.mathworks.com/help/matlab/ref/loadlibrary.html) and [calllib()](http://www.mathworks.com/help/matlab/ref/calllib.html) functions. I've used them in [this library](https://github.com/zcshiner/Dynamixel-MX64-MATLAB) to control some Dynamixel servos.
What OS are you on? There are pretty good tutorials for doing this stuff for Windows in visual studio. I'm not sure what your trying to do exactly but the basic idea is to write mex functions that serve as wrappers for the cpp library. I might be able to provide more help if I have an idea of what the code looks like.
Yes, it is Windows. I'm doing some work as a test-setup guy for a research group, so I ended up inheriting a mound of spaghetti when they put me on this project. I'm not sure what I could say that would give you the necessary insight into what the code looks like, but essentially I'm writing some basic matlab-based drivers that communicate with the devices via serial connection (plain-text or hex or ascii; however that particular device communicates). The drivers are designed to be compatible with an over-arching GUI (also written in matlab) to allow testing with the various devices. The device I've been given has a C++ driver that lets you perform certain tasks by entering functions - in this case, a stage that can move certain distances, revert to the previous location, etc by calling functions within its driver. What I would like to do (ideally) is be able to call these functions within matlab; e.g. "stageMove_x(distance); stageMove_y(distance);" 
I'm trying to run the program from the matlab terminal. Thank you for the link, I'll check it out.
The tools for this are well documented, if a bit clunky. Check the documentation for get() and set(), and line(). 
The source code.
Ah so you're trying to run a C++ executable from a Matlab script/function? I think you want something like [this](https://www.mathworks.com/matlabcentral/answers/92537-how-do-i-pass-arguments-into-and-out-of-my-standalone-executable) then? You should update us if it works, I'm curious!
C/C++ are compiled languages whereas Matlab is an [interpreted language](https://en.wikipedia.org/wiki/Interpreted_language). One way or another you will have to compile the C++ code into a program matlab can interact with.
kk34, the second approach works very well. With a true value of sigma to be 0.3989, the output is an estimated 0.4013. Thank you much for the great insight.
What ended up being your solution to your problem? Hope you solved it and am curious what worked best.
Yes, it's possible, just need to interpolate. You could use [scatteredInterpolant](http://www.mathworks.com/help/matlab/ref/scatteredinterpolant-class.html). So you would make a scatteredInterpolant class with the x, y, and pressure values ( F = scatteredInterpolant(x,y,p) ) and then use the outputs from meshgrid to create a gridded interpolation (P=F(XI,YI) if XI and YI are the outputs from meshgrid). That grid P would be usable in surface or contour functions. 
A= zeros(5004,1); A(7:36:5004)=1; A(37:36:5004)=-1; A=cumsum(A); File=files(A,:); Something like that?
Thankyou it worked (after a fair bit of trial and error!) Took me a bit to realise my mesh grid shouldn't be the same as my interpolation points.
Thanks yeah I've just come to realise this. My demonstrator seemed keen at the idea and confident that it would work but now I really don't think I can say much about the pressures outside this range. In the range are two buildings which are meant to affect the flow. Would tell me nothing about what happens outside these buildings.
Are there any delimiters in the data you could use? Otherwise just make. Loop on A numA = floor(length(file)/36) j=1:numA A(i,:)=file((i-1)*36+6 : i*36) end
Right - that's what MinGW is for. 
Oh wow as someone who has done some programming before I am embarrassed for missing that! Thanks again 
 ismember() 
I'll look into those. There's no vectorization in my code. The slowest case would be if the key is not inside the iterable, in which case it would be as slow as looping over the iterable and doing a few comparisons. I'm sure it could be sped up, I'm not using it in any high performance situations though.
This is handy! I've been using matlab since 2005 and haven't encountered it. Seems like there's still a few cases it doesn't cover, but they could be added easily. ismember doesn't work with cells unless they are cells of strings. And it doesn't have the desired behavior for searching a substring in a larger string.
The problem with strfind is that it returns an array of unknown size. I find myself using If ~isempty(strfind(mystring, mysubstring)) % do stuff end a lot. Python's in statement covers a lot of different cases with very clean syntax. Cell arrays with mixed types in them isn't that uncommon. Xlsread returns them. They can be nested, as in nonrectangular arrays, or trees. As long as I'm not using linear algebra routines, I don't really worry about the speed of cell arrays.
Some functions are natively multi-threaded. For example, the fft functions use the fftw library under the hood, which uses multiple cores. I suspect this is not the case for functions like an ode solver, which must call a user-supplied function iteratively. You can check by inspecting your processor usage while the solver is running. In this case you can make Matlab run on multiple cores using spmd or parfor, assuming you have the parallel toolkit. 
I was much more excited when I thought you found a way to do `for` loops with the in notation. Sometimes you can do for item = cellArray but there are some detials. I often find myself having to write for i_item = 1:length(cellArray) item = cellArray{i_item}; end It works fine but I miss the ease of Python
Thanks, that makes sense. Will see how much of a difference parfor makes. Dumb followup question: is the maximum number of parallel pool workers the number of cores on your machine, or is it something that can be set arbitrarily?
Ah, okay. Thanks again!
Not sure how tricked out your license is, but you can actually implement some distributed computing functions (use cores on other local machines, or in some cases I think, use remote resources). If this is short-term R&amp;D, might not be worth the trouble.
You could try different solvers too. If it's a complex nonlinear system, chances are it's stiff. Ode23s or ode15s could do the job faster.
Cell arrays were built specifically to house mixed types in a matrix type environment. Having 20 arrays of pictures, text, coordinates is WAY more stupid than just a single cell array with 20 columns. 
Sometimes, sometimes not. A mixed-type array is great for some things, but very easy to abuse as well. If you find yourself wanting to do a normal array operation, but can't because your data is in a cell array rather than a struct or a handful of co-indexed base arrays, it might be a sign you're using the wrong data structure. 
Don't the single quotes turn the equation into a string? If those are in your code, they might cause an issue.
Not sure if it's an artifact of copy/paste, but I see a parentheses disagreement. 
have you considered computing the vertical speeds of the particles and doing a filled contour plot of vertical speed?
 surf(...,'LineStyle','none','FaceColor','interp') view([0 90]) colorbar
&gt; If you have a cell array of things other than strings, 99% of the time you shouldn't be usually a cell array Honestly curious about this line. I use cell arrays a lot, and very rarely do they have any strings in them. Is there a better data structure to use? An example of when I use a cell array: I have (say) three trajectories and a radar, and I have code that simulates the radar measurements of the three trajectories. Each set of measurements are represented by a 2D array, and since each set will be of different lengths, I store them in a cell array. If it can't see the trajectory at all, it had an empty cell. Is there some better data structure for this? I know I could use a struct, but I see no advantage to it. 
Quiver 
I've seen people use them for purely numerical data, I've seen people use them like an excel spreadsheet, with text and numbers scattered everywhere; I've seen them to produce similar functionality to a struct in a highly error prone way, etc. Usually it happens because people are trying to do something badly and they stumble upon the super-flexable cell array which solves their problem for the moment. Then forever after they use cell arrays constantly. 
Trying to give a good hint without giving it away totally. Any not-prime (composite) number can be expressed a multiple of prime numbers. Any time you determine that something is prime . . You should hang on to it, you might be able to use it to determine whether or not a number down the road is prime
Technically you can just print out a list of 50 preprogrammed primes, nothing in the directions against it ;)
Sorry, thanks for the assistance but this didn't work. I may be explaining it incorrectly. What i need to do is: take the 7th-36th rows of data. Skip the next 6 rows of data, and extract the 43rd-72nd rows of data. This needs to continue for the entirety of the data set. 
For this it doesn't like the position of the 36+6. I am unsure how to correct this. 
Anyone can help?
This is perhaps just a pet peeve of mine. But please don't just write "I solved it", but provide the solution as well for others to see.
If your "Tg" variable really has 4000 rows and they are in groups of 30, your first problem is that 4000 is not a multiple of 30. So for the purposes of this answer I will assume you have *3000* rows. Then you have n = 3000/30 = 100 groups of depths. In that case, the "hopefully" vector will be of dimension looks like it will be of dimension [n, 31]=[100,31]. You might want something like this: [k,m]=size(Tg); n=k/30; done = reshape(Tg(:,2), 30, n)'; done =[(1:n)', done] Note the transposes in there. 
A hint- write out in paper what the first 3 or 4 repetitions of what you've started are. Do you see any pattern? Can you formulate it so that each time you loop you can get the correct ranges? A tip- you can also set your iterator itself to loop appropriately (i.e. not just in steps of 1, maybe steps of 30..). But as you're trying to put those values back into a new array, I'd try a different direction. A hack- check out reshape(). I myself would tell you to try the hint, as the hack is more higher level and complex to comprehend and fully convince yourself you've coded correctly, esp. for larger/multiD arrays.
You want the inputname function. Your line will look like title(['Plot of ' inputname(#)]) where # is the argument index for your function. So if it's the first input argument to your function, 1.
What do you mean by the first input argument? Like the first element? What would 1 do as opposed to say, 2?
Ah right I got it. Thanks!
One way to go about it is using the UDP tool or even the serial tool. You can send the data serially in a 3rd party app (e.g. arduino, another script/simulink model) and read it in with one of those interfaces. This way you can tweak how the data is sent and practice reading it in real time.
This is a distance matrix. Most TSP algorithms use a pre calculated distance matrix to solve the problem. Depending on the number of cities you can use dynamic programming (for an exact solution), or for bigger cases try a heuristic algorithm like simulated annealing, genetic algorithms l, or my favorite Ant Colony Optimization (ACO is very intuitive for the TSP). 
For the N/A responses... you'll want to change your -20 values to NaN values: not a number. Matlab will specifically ignore them during plotting routines. As for your plotting.... I've never done anything like you describe, but what it sounds like you could do is just plot a point (and line to it?) from the origin on the unit circle. Obviously you'll still have to adjust the angle according to north, but it shouldn't be too hard to get unit circle values for any angle, starting 0 at north, and going clockwise. This is just a simple math problem. More in depth - you could look into the polaraxes properties. Looks like you can change the 0 location as well as the direction of rotation. These are name,value pairs just like you could use in a set() for axes/line specs...
Sorry should have specified, using a genetic algorithm. Specific start and finish.
Thank you so so much. 
You can set [LineStyle options](http://www.mathworks.com/help/matlab/ref/errorbarseries-properties.html). Look at MarkerFaceColor. 
Thanks, I'll give it a try
Indeed, I just wondered if there was any kind of data type/function that accepted expressions instead of coefficients associated to some exponents.
&gt;Is there anyway I can extract those '-20' out of the vector, count them separately and save the count to another variable locNA = find(a&lt;0); %or alternatively locNA = find(a==-20); numNA = length(locNA); %vector of bad data vecNA = a(locNA); locSound = find(a&gt;=0); % vector with good data vecSound = a(locSound);
The binomial series is for integer exponents. Edit: nevermind, no it isn't. 
There is a symbolic toolbox, but I wouldn't recommend it if you're ultimately doing numerical calculations. I'm not even sure there is an expansion in general for (1+x)^a for non-integer a. That's really a question for /r/math and I suspect the answer is that the set of a for which such an expansion exists is some arcane field of numbers that's interesting only to pure mathematics. 
It was, until Newton kicked its ass in 1665. 
Nevermind, listen to the other guy. 
Oh yes good point, the series exists but is finite only for integer a. Still, good point. 
Yeah I saw it, but I'd exhaust the alternatives and perhaps look into serialization into/out of something like a zmq socket. I do a build mex files some what regularly. It's not terrible really, but it's also not super flexible. Depending on how often you need to change the data you are passing is really the operative point. If I'm spending a ton of time writing the boiler plate on either side then an IDL like protobuf or msgpack is the way to go. If you just need to get it across once the fastest way then yeah mex or that Python thin is prolly good. 
Ok. Will do. When I determine the optimal number of clusters using the Calinski Harabasz and Silhouette criteria do you want me to provide you with the clustered data or just the optimal number of clusters?
Well, as I was getting also approximations when using the form x^nonIntegerNumber I guess I can also permit such approximations from the infinite series, thanks for the advice!
Yes, but did you catch the critical issue here? There's no finite representation of the binomial series for a non-integer exponent. 
The anonymous function you talk about, seems interesting, I will try that in the first place.
Yes, I understand that. The initial form I was working with (x^nonIntegerNumber) wasn't computed exactly too, the fomcon toolbox I used approximate such values with the Outsalup/Refined Outsalup filter with a natural order within a frequency range. edit: where the natural order is the finite representation that approximates the real value of a non-integer exponent.
You could always remove some of the data from the larger array. However, I would only do this so you have a general idea how the results look before you start diving in to interpolating your data. 
I'm not sure I have enough info about the problem. I think you need a little more explanation about what you are trying to do. Are the data sets to be compared based on the temperature they were taken at? Do you need to normalize the data to account for the temp? If it is simply that you want to compare N sets of data, and each set has different sample points, then yes - I would interpolate over the range for each data set, create a vector of sample points along the range, evaluate each interpolated function at the sample points, and then operate on that output (sample points vs function responses).
Hi All, Yes, the data sets are to be compared according to their temperatures. For example, I do a control experiment and monitor the temperature and a few atomic masses (ex. water and hydrogen) across the temperature range. The temperature vector may look something like this:( ...., 240.13, 240.62, 241.03, 241.35, 241.81,...) Now I do a second reaction experiment and monitor the temperature plus the few atomic masses plus expected reaction products (ex. water and hydrogen and CO2, and others). Maybe the temperature vector looks like this: (..., 240.04, 240.92, 241.73, 242.60,...) We see just comparing the temperature vectors that the point densities are different. The mass signal point densities are also different. In the simplest case: I want to do a subtraction of the control from the reaction experiment to determine if in fact water and hydrogen were produced. But the point densities are different from the control and reaction experiments. (so yes, I need to actually subtract the signals from one another), but I also want to plot the signal vs. temperature. In addition, I'm also worried about the effect of interpolation on the noise level in the data, as in what if the different sets have different amounts of noise? (ex. water in control vs water in reaction experiment). 
You can upload it without restriction, to my knowledge. I don't think there's any way to associate it back to the original author.
Is it true that the temperature vectors are monotonic as it is in your examples? If so, I think interpolation is definitely the best option here to make comparable vectors for differencing.
Since you're dealing with a physical experiment, are there some thermodynamic laws that would predict the temperature and signals in terms of d-th degree polynomials? If so, fitting those polynomials may be "the correct" way to do the interpolation.
Cool I'll check it out when I'm at work. I have several functions that rely on pdist2 and are pretty slow
http://images.lmgtfy.com/?q=Expressions (Sorry, I'm an ass)
If you could make a modern version of IPDM, I would love you forever. I want to replicate its versatility in python but it's such a big undertaking I just don't have the time at the moment. I still think, however, that a modern version (using speedups like you've done here) on it would be incredible. 
Thanks for the replies! version control would be a good idea, but since i'm not really familiar with it i have a question! What constitutes as a version change? I mean you can't change one line and call it version change??
Parameterize your function like so: `function F = torder1(x, t)` and call it in a loop like this: for ind = 1:numel(t) [x, fval] = fsolve(@(x) torder1(x, t(ind)), x0, options); h(ind) = x(1); theta(ind) = x(2) end Also, if you're solving the system numerically, then you should use double arrays instead of symbolic objects.
It's not quite the same, but you can [submit a Github repo](https://www.mathworks.com/matlabcentral/about/fx/#Why_GitHub) to FileExchange. MATLAB also has [git](https://www.mathworks.com/help/matlab/matlab_prog/about-mathworks-source-control-integration.html) built-in.
I am afraid it won't be enough for my evaluation. I need at least 100 seperate images. But thanks though 
It runs fine in my system, with my own png file... Of course, it turned into black and red, but I figure b&amp;w is your next step.
In my system, the console just keeps bombarding values and more values, correspondant to the values of every pixel of the image. It always goes to this infinite loop and I'm not figuring out why.
Not sure what that is, but I'll look it up, thanks!
The code you posted is silenced with ";" in every statement, shouldn't return any values.
This is pretty much what I am now doing and it seems to work well. Thanks for the feedback
That how I've done, but if you want to let the user select the files, you can use uiget or uigetfile (I forget which) with the 'MultiSelect' (or similar) option on. Then you just select the files in a normal Windows file selection box. 
I use glob.glob to find files with names that match a certain range of patterns and then I use a loop "for row in file:" and check if there's the value I need "if row[x] != '' : " Also use os to move around the file directory!
Your function exp_cback creates current_data, as a local variable to that functions workspace. Once the function finishes executing that variable is gone unless you store it somewhere else to be recalled later. Read the documentation for guidata, getappdata, setappdata. They should provide the functionality that you need 
oh dear. think this might be quite beyond me. I can't figure out what I'm doing wrong from there. I've probably confused myself going from another [code where it works fine](http://pastebin.com/ukCykYZZ) but I can't see what I've done differently... Oh well, back to the drawing board maybe. Ta for your help.
You need to define any variables you want to access before you set the callback. Any variables you define afterwards will not be in the scope of your nested callback. I use this coding pattern all the time. function foo inScopeVar = 0; uicontrol('callback',@callback) outOfScopeVar = 0; function callback(h,varargin) inScopeVar = inScopeVar+1; set(h,'string',inScopeVar) % outOfScopeVar = 1; % uncomment to throw error end end
I'm not exactly sure why. There is something going on behind the scenes where the variables are being passed or labeled as global without a command (at least from my looking at this). Interestingly, source is not a variable, but is accepted at an input to the callback functions. If you put a "keyboard" after the popup_menu_Callback is initialized, you have a source variable and empty str and val structures, even though they have not been referenced yet. I recommend to try reading up on how to code up GUIs. Did you code this script you are working off of?
so the problem I am now facing is this: as I run through each excel file and set a certain column to the variable 'data' for example, each new excel document will update the 'data' variable with the new column of numbers. Is there a way to run through each excel file and store the columns I need from each file as its own variable? So in the end I have lets say 7 stored variables with a matrix of numbers, each representing the data pulled from the separate excel files?
Did you choose to install a bunch of toolboxes? If so, you could try foregoing them for now and just doing a bare-bones install. You can always install toolboxes later by running the installer again. Bare-bones Matlab is still a decent-sized download, but not nearly as bad as doing it with all the bells and whistles.
You can do this with quiver() itself, although I think the coloring may be more work than you want... first you'll want to normalize all your vectors to the same length, then you'll want to modify the 'color' name,value pair in the quiver series properties (Google for the Matlab docu- I'm on mobile and can't link it; same method as using set() for plot properties). I say the coloring will be more work because I think you'll need to get creative in how you call it - either calling quiver() for each and every arrow, or make your Nx3 color array before you call quiver(). Now.... what I would do is still use quiver to draw constant magnitude vectors like you want, but over lay it on top of a contourf() of the actual magnitude. I've done this before for a wind velocity field and it's looked reasonable well.
Thanks for that! I was thinking that was going to be the likely option. I had some hope that maybe someone already made a function out of it on the FileEx. Cheers though
This is likely a mac issue more than Matlab. I wonder if you could right-click on the matlab icon and assign it to a desktop. I have a mac but run Maltab over a remote linux machine so i can't test. Best of luck 
I'll try and break it down and research each section, thanks
You can permanently dock all figures for the open Matlab session...dunno if that's gonna work for you, but it is a solution. I made a shortcut for dock and undock to pick and choose when I want to do it. http://blogs.mathworks.com/pick/2005/11/15/default-docked-figures/ 
Currently writing on my phone, but I think that you need to remove the if statement so you could get the diagonal. 
 Hi, I wanted to know if anyone has experience in transforming satellite light data from the Defense Meteorological Satellite Program’s Operational Linescan System in matlab (or other programs like QGIS) into an excel file measuring the light intensity of specific regions.
The easiest way is probably through the import tool (&gt;&gt;uiimport). There are examples for importing from text (http://www.mathworks.com/help/releases/R2016a/matlab/import_export/import-data-interactively.html) and from spreadsheet (http://www.mathworks.com/help/releases/R2016a/matlab/import_export/select-spreadsheet-data-interactively.html)
All explicit trailing singleton dimensions beyond the 2nd dimension are trimmed because there are an infinite number of implicit singleton dimensions. Conceptually, a 2x2 and a 2x2x1 and a 2x2x1x1 are all the same, so they are standardized by trimming the trailing singleton.
No not really
I guess so... but this is not the case in any other common languages that I am aware of. For example, in C/C++/Java, the type of double[2][2][1] is *not* the same as the type of double[2][2]. In Python, the nested list [[[1], [2]], [[3], [4]]] is not the same as the nested list [[1, 2], [3, 4]]. Similarly in Mathematica with curly braces in place of brackets-- in general, it makes sense to talk about a rank 3 tensor as *distinct* from a rank 2 tensor, even if the former's last dimension is 1. 
Wait, you opened the import tool, and then instead of using it, you copy/pasted from the import tool into the command window? Why? The import tool was already open. Just... Use it. 
Yes you can. I can't even begin to fathom the amount of work required though. Potentially years. I think you are better off finding a screen recording software and making some powerpoint figures and manipulating those. 
Not sure what kron does, I've never needed it. I was thinking of doing something like a tensor contraction by bsxfun and sum. 
How would you normally store a value in an array? 
My professor wants each intermediate answer indicated.
You can try solving problems in cody https://www.mathworks.com/matlabcentral/cody/
Matlab will dynamically resize the variable, but doing so is a very very bad habit. Preallocating is definitely the right thing to do in almost all cases. Establish good habits now and they will be easy to keep in the future. 
If velmg is sized as 52900x1 you can't ask for anything else that the first column, it has 52900 rows and 1 column. Then in the loop you are asking for the first row and the column; i+30* (i-1):i*30 which doesn't exists unless it's equal 1. edit: this is what I've managed to test, seems to work. You can see how the newfile matrix initiated with zeros is filled with each group of 30 cells of value 1 of the velmg matrix: velmg=ones(52900,1); newfile=zeros(floor(length(velmg)/30),30); j=1; for i = 1:30:length(velmg)-30 newfile(j,:) = velmg(i:i+30-1,1); j=j+1; end edit2: by doing this; i+30* (i-1):i*30 you weren't accessing each group of 30. It works when i is equal 1, but take for example when i is equal 2, then you will be taking the rows from 32 to 60 instead of 31 to 60. Do you see what I mean? edit3: also, it's a good practice to always declare your variables before creating them, at least the matrices.
This was the first thing that popped into my head
Worth noting that `[data.(x)]` will return a row vector; you can make it a column vector by using `cat` with the appropriate dimensional argument, `vertcat` or by using `transpose` or `'` on the result of `[]`/`horzcat`.
&gt;edit3: also, it's a good practice to always declare your variables before creating them, at least the matrices. This isn't always important in Matlab (not type safe), but it's important to declare variable type and size before looping (simply declaring the variable--whether workout size or with the wrong size--won't help). This is usually called preallocation, not just declaration. A = []; Declares A to be a double array, but it won't help your code run faster or prevent memory fragmentation if you then add elements to A in a loop. By contrast, A = zeros(500, 300); Creates A in a contiguous block of memory and let's you overwrite the `0` value in each element while you loop without Matlab ever needing to allocate a new block of memory for A (big performance hit). 
Exactly--but simply declaring the variable (`A=[]`) can get rid of the warning, but it won't change the underlying behavior. Preallocating the variable fixes the problem and gets rid of the warning. 
just saying, the standard function input format for ode solvers (ode45 &amp; friends) is [dS/dt] = f(t, S) so state change equals a function of time and state and nothing else, this is fixed. you can give your time interval to the ode solver. if you want to optimize, use fminsearch, lsqnonlin and the like.
I don't really see your problem. You have some vectors for the individual paramters you want to cover. You create all possible combinations with ndgrid() (will be a very high number if you have a large number of parameters and values) and use arrayfun() to solve your DE for each combination. You can create your vectors as GPUarrays, so arrayfun will utilize the GPU, and gather() the things when its done. You can also do it with CPU, but it doesn't make much sense to have more workers than cores. Consider each worker a separate instance of matlab, each eating 600MB memory right after initialization, so be careful.
This actually was what ended up helping me the most. Haha. Thank you.
Thanks for your help! I'm not actually taking a Matlab class, and it's been a while since I used it at all - the a(x) terms were an attempt to fumble my way out of what was going wrong. The second way of doing it that you suggest works and seems a better solution, even with the suggested changes the first method chucks out that error though. 
This is word salad. It's not even a question. If it were, it still appears that you haven't even made an effort on your own. 
So, I was still getting problems but coming back to it this morning this seems to work as a solution - pretty sure it's nowhere near optimal, if anyone sees this and could point me in the direction of improving it that would be great. I'm not actually taking a class, so any guidance to help me improve is greatly appreciated :) %Script to generate matrix for each distance group clc, clear n a idx2to4 idx4to8 idxgr8 less_than_2km = []; two_to_fourkm = []; fourto8km = []; greater_than_8km = []; dbstop if error %debugging distances = N(:,1); n = numel(distances); %Find the number of individual journeys in N % idxless2 = distances &lt; 2; less_than_2km = N(idxless2, :); %Generate index for rows containing required distances for a=1:n if distances(a) &lt; 4 &amp;&amp; distances(a,1) &gt;=2 idx2to4(a,1) = 1; else idx2to4(a, 1) = 0; end end for a=1:n if distances(a) &lt; 8 &amp;&amp; distances(a,1) &gt;=4 idx4to8(a,1) = 1; else idx4to8(a, 1) = 0; end end for a=1:n if distances(a)&gt;= 8 idxgr8(a,1) = 1; else idxgr8(a, 1) = 0; end end %Convert indexes to logicals Lidx2to4 = logical(idx2to4); Lidx4to8 = logical(idx4to8); Lidxgr8 = logical(idxgr8); %Populate arrays with rows of N that meet the appropriate distance criteria two_to_fourkm = N(Lidx2to4, :); fourto8km = N(Lidx4to8, :); greater_than_8km = N(Lidxgr8, :);
Do you know what other (core) modules they'll all be doing? You could try to structure it around those. So if they do structural engineering and flight mechanics you could try something like (sorry if this is wrong, physics student with a bit of astronautical engineering, so I'm a trash engineer) program to work out the g-forces an aircraft would experience at various velocities and turn rates, and see if those forces are in the tolerance range for that aircraft. Probably easiest to just read through the syllabus for other modules they do and just say "Make a program to do that".
Simple machine learning classifier, projectile modelling with an ODE, simple image processing task. I'd pick one of these.
You're still doing a whole lot of extra work for nothing. The larger than 8km array will be just as easy to set up as the less than 2 one... just flip the inequality and use 8 in place of 2. The ones where you have a range are a bit trickier... try something like the following (on mobile so can't guarantee it works..) idxGT2 = N(1,:) &gt; 2; idxLT4 = N(1,:) &lt; 4; idxShared = idxGT2 + idxLT4; idxGood = idxShared == 2; data2to4 = N(idxGood,:); Can you follow what I've done there?
For engineers I would emphasis topics which are most useful to them, which is probably basic calculus and statistics. Maybe get them to look at oscillations of a mass-spring system?
Thanks!
My first idea was using the kinematic equations with constant acceleration to play with trajectories. Rocket equation would be interesting. 
Yes, leaning towards the projectile modelling, thank you. I am struggling to think of a way to include matrices in there in a non-contrived way.
 n = input("Enter a natural number ") i = 1 while(i * (i+1) * (i+2) &lt; n) i = i + 1 if (i*(i+1)*(i+2) == n) then printf("%f is triangular!",n) else printf("%f isnt triangular",n) Just reformatting it to help me read it When you say it didn't work, does it give the wrong answer, no answer, or what? I'll take a closer look when I'm at my computer. (plus, this is a time for a for loop, not a while loop)
then the main thing is probably just that the code needs to figure out where you want the while loop to end (and maybe the of statements, I forget about those)
Why are you checking raw{:,5}? banana is stored in 1,1 and 1,7 so your query will give an empty cell. Removing that to get find(strcmp(raw,'banana')) seems to work. It will return all indexes of banana, so to get the total count of bananas you can evaluate: sum(cell2mat(raw(find(strcmp(raw,'banana'))+1)))
Put it in a table instead, then check the doc for findgroups and split apply. Should handle what you want. 
Length command tells you how many terms you'll get in your polynomial. If length(coeff) returns 5, well your highest possible order polynomial is x^4. There are probably lots of ways to do this, but personally I would calculate each term of your coefficient vector and sum them up. If you had a coefficient vector of [1 2 1] or x^2 + 2x + 1 and needed to solve x = 10 I'd set x = 10 first then evaluate each term of y using a for loop. Store that into an array and sum it up. You can literally do this in 10 or less lines, it took me only 7. I'm sure there's a function that lets you reorder a vector by flipping it. 
You could very easily implement this in a for loop, you might want to think how the length() function might be useful there.
You need an end at the termination of both the while loop and if statement (i.e. two at the end of the code DrShocker posted above you)/
Would this be possible to solve by just solving x*(x+1)*(x+2)=y for x, and then check if x is an integer?
 function y = poly_val(coe,x) y = 0; for i = 1:length(coe) y = y + (x^(i-1)) * coe(i) end
If you are using fminunc or fminbnd, then no. At least not in a straight forward way. As they are both numerical solvers, they would get solutions close to x but not exactly x. Additionally they return floating point numbers and not integers. Therefore checking whether the solution is an integer or not doesn't help. You could check whether a solution is close enough to an integer, however this method is very imprecise with large numbers.
state-space models?
MATLAB works with matrices best. Think of the problem as matrix manipulation problem. The value of the polynomial is: a0*x^0 + a1*x^1 + a2*x^2 + ... an*x^n You need two vectors to make it work: [0 1 2 ... n] // you need to create this one [a0 a1 a2 ... an] // this is your input Then you need to do some element-wise operations on the two vectors: .* and .^ Last thing you need is to sum all the elements. This is an easy thing to do in one line of code. Try to do it and ask questions if you still need help. 
You do not need to put in any prompt. The function that you need to write takes in coefficients and x and returns a value. You can later call this function like this: y = polynomial_value([1 ,0.5, 3], 10); and it should return a correct value. 
Yea you're right. I've been working with matrices a lot lately so they'd why I did coef(1,I). I wasn't too concerned about getting every detail right, just wanted to give OP a place to start. 
"use 50x50 pixels for each element in the matrix"
Have your professor call me. He's an amateur and needs to be corrected. 
hahaha
&gt; 25x25, my bad. here is the problem in full. http://i.imgur.com/LI7Cfh6.png 
Okay this is a reasonable practice problem that is worded in a completely terrible way that makes it hard to understand and near impossible to learn from. Normally in Matlab (and pretty much any other language) each element in the array representing an image *is* a pixel. That's exactly how arrays represent images - each pixel is an array element. So telling you to make each element "25 pixels" is very silly. What he means is to take the original matrix, and write code that constructs a new matrix where each element of the original is replicated into a 25x25 block of elements, then display this as an image. Does that make it more clear? I assume at this point you've already covered the basic array manipulation tools you will need for this. 
Sounds good to me. 
You could give them the projectile data in a matrix and have them go backwards on the data, for example to find initial launching parameters. 
M=[.... That matrix ....]; M2=imresize(M,25,'nearest'); imagesc(M2); colormap 'gray';
It's always worth checking Mathworks to see if someone has come across this problem before and written code for it. A quick google gave me [this](http://uk.mathworks.com/matlabcentral/fileexchange/7737-steep). I've not used it so can't personally vouch for it but it seems to be what you're looking for. Best of luck!
Please don't ask the mods to lower their standards based off of your inability to prepare for your task. What do you need help with? Do you just not know what steepest ascent is? Have you written any code? Do you have a specific question?
&gt;j = 1:n for i = 1:n C (:,j) = A*B (i,:); Why do you define j as 1:n, and then i as 1:n? Then you proceed to use the whole vector j and assign it with the loop variable i? Just use the loop variable i directly.... C (:,i) 
Steepest ascent is trivial. Do your own damn work.
Your post has been removed, but don't worry, it is easy to get it re-instated. Please follow the homework guidelines found [here](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/) and respond to this message when your post has met them. 
data types are just ~so much fun~. Here's my take: x(t) is a symbolic function, but is itself not an array, it creates one when it's called. x(t)=[3*t;t/2;exp(t)] % is a 1x1 'symfun' x(2) % is a 3x1 sym, so it's an array of sym, so now you have a defined array, and as you've executed it in your sample code, this array is saved at 'ans'. so ans(1) will give the first element of the array created by calling x(2). So, for me it's almost as if: &lt;Thinking sequentially&gt; defining x(t) creates a rule, but no array. Unable to address elementwise (I'd guess) calling x(2) creates the array defined by the rules of x(t). Arrays are nicely addressable. simply calling x(2) stores its array into the 'ans' variable. ans(1) gives the first element. So I guess if you're doing a sort of 'in-line' processing, then "no", you don't really have to explicitly save your generated vector (since you can access it via the auto-generated ans variable). If you'd rather not keep these variables, you could use a function to evaluate and return the index you want. function [ out ] = test( symbolic_function, function_at_value, index ) %TEST return an index of an array generated by a symbolic function % Detailed explanation goes here symbolic_function(function_at_value); out = ans(index); end
Is this any help?: https://www.mathworks.com/matlabcentral/newsreader/view_thread/292321
The use of a function could solve my problem, thank you. The main reason I want to solve this issue, is to simplify my code by putting everything in a for-loop. for k = 1:dim if isreal(eigval(k))==0 alpha=real(eigval(k)); beta=abs(imag(eigval(k))); end end syms t C1 C2 initval=[1;1]; % Initial values Sol=C1*exp(alpha*t)*(cos(beta*t)+1i*sin(beta*t))*V(:,1)+C2*exp(alpha*t)*(cos(-beta*t)+1i*sin(-beta*t))*V(:,2); Sol1(t)=Sol(1); Sol2(t)=Sol(2); eqn1=Sol1(0)==initval(1); eqn2=Sol2(0)==initval(2); But by storing Sol1 and Sol2 this becomes impossible.
Seemed promising at first, but doesn't seem to interact with yyaxis well. I get this error when I try to run it after setting one of the lines to be on the right axis: &gt;&gt; uistack(h(1), 'top') Error using matlab.graphics.axis.Axes/set Children may only be set to a permutation of itself Error in uistack (line 134) set(UParent,'Children',AllChildren);
Your thesis defense is coming up and you haven't validated your experiment yet? I don't know if any kind of research quality database like these exist. If you know any fMRI researchers they might be familiar as showing people scared/happy faces is a common fMRI thing to do.
Try this instead of yyaxis: http://se.mathworks.com/help/matlab/creating_plots/graph-with-multiple-x-axes-and-y-axes.html
basically how do I make an algorithm to do this in a better way q = [3 4 6 8 12 14 18 20 24] g1 = gcd(q(1),q) g2 = gcd(q(2),q) g3 = gcd(q(3),q) g4 = gcd(q(4),q) g5 = gcd(q(5),q) g6 = gcd(q(6),q) g7 = gcd(q(7),q) g8 = gcd(q(8),q) g9 = gcd(q(9),q)
Use xlsread() to read the spreadsheet into MATLAB. http://www.mathworks.com/help/matlab/ref/xlsread.html
clear, clc; DO=xlsread('DO.xlsx');%imports spreadsheet DO; Oxygen = xlsread('DO.xlsx','B1:B50'); Oxygen; impaired=0; unimpaired=1; for Oxygen = xlsread('DO.xlsx','C1:C50') if Oxygen &lt; 5 elseif Oxygen &gt; 5 Oxygen=unimpaired end end
 I have that part figured out, but I can't figure out how to get my conditional statement to generate a new column into the original excel spreadsheet.
I'm a little confused, how does q factor into M1 and M2? Are you comparing the first elements of M1 and M2, then the second, then the third? Or are you comparing the first and second of q, then the second and third, and so on? Either way, it looks like you're probably gonna have to use a for loop. 
Where do you get x=0:0.1:100; from? 
I have to compare the first element of q, which would be 3, with all of the other elements in q , and then i have to compare the second element of q, 4 , with all of the other elements of q, and so on. 
It's an example, take the length you want X to be, ask yourself how much do you want your plot to show. edit: if the functions are parallels it shouldn't matter the length though.
I guess I can't wrap my mind around it lol. You don't have to use my problem, but could you provide maybe a better example. What does each place value mean? x= ?: ?: ? I guess is where I'm stuck. Length / width / height? 
You don't even need to use the if statement. You can just say DO(:,3) = DO(:,2)&gt;=5. It will create a third column with a one where the second column is 5 or greater and a 0 when it's less than 5. Then just use xlswrite to write the new matrix out. 
Ok excuse me, when I post x=0:0.1:100 means that x will be a vector that will contain enough cells to go from 0, 0.1, 0.2 ,0.3.. 100. The number in the middle stands for the step of the vector, the first one is the beginning and the third one is the end. So by that you will have a 100/0.1 sized vector that will contain from 0 to 100 linear values. Take this example as a function; x= 3y, then if we do that x is the X axis, and we want it to represent from 0 to 100 with a resolution of 0.1 we will do x=0:0.1:100. Then we will evaluate y in each value of x. Therefore y=x/3. So then we can do plot(x,y). Sorry if I don't explain myself correctly but it's 5.40 in the morning here and I am configuring arch linux o.O
Look into Euclid's algorithm. 
Take a look at this page: http://www.mathworks.com/help/matlab/ref/mldivide.html especially the examples. Edit: Just looked closer at your matrix, and its rank 1. There are many ways to show that there is no solution to this problem.
Thanks for your reply. This is what pops up: https://imgur.com/a/49MYA (Sorry for the image but my house internet isn't working. I'm taking pictures with my phone and posting them thanks to Comcast.)
That seems ok, but not great, since I have multiple datasets that are all synced by datetime, so I ideally want them all to share a single x-axis. If I zoom on one of the axis will it stay synced with the other axis, or will I have set the axis limits to match the one I zoomed on every time I zoom in on my data?
Use [] to create structured arrays of numbers (all the same type). Use {} to create cell arrays, general (and possibly mixed) data containers. With cell arrays, you can store a string next to an integer and a graphics handle, but you don't get operations like +, -, *, .*, and \^.
First. Never try to debug Matlab code while using `parfor` (unless it already works as non-parallelized code). Use a regular `for`. (And just from looking at your code, you're likely IO limited, not CPU limited, so parallelization is actually probably going to add more overhead than it's worth in speedups). Second. Your code turns off warnings. Comment that out, at least. You are debugging. Third, and perhaps what you came here for. You are loading files into `Data` and then assigning variables from `Summary`. I suspect you want to load your files into `Summary`.
Curly braces give you a cell array. http://www.mathworks.com/help/matlab/cell-arrays.html
~~Dont capitalize "Summary". It should be lowercase if you're using [this function](http://www.mathworks.com/help/stats/dataset.summary.html)~~ Edit: derp, nm, I'm dumb. It's been a long day and I should read code more carefully before I comment.
Are you constructing the file path correctly? In the load statement, try using fullfile or manually constructing the filepath as below. [pathname, filesep, filename_temp]
Yeah, I guess zooming after you plot the data, might screw it up. Of course you can get the xlimits from one axis and use it to set the other in your script, but I wouldn't know how to sync them when zooming. Another way to get what you want, but this is a really ugly hack, would be to switch the ticks and values between the right and left y axes and then plot your "left" data on the right and your "right" data one the left.
Another thing to keep in mind beyond the already-good answers here: a cell array is, technically, still a cuboidal, "non-ragged" array, just like numeric arrays-- the only real difference is that it's *heterogeneous*. That is, just as you can't have a ragged numeric array like [1, 2, 3; 4, 5], you can't have a ragged cell array, either, such as {1, 2, 3; 4, 5}. But because of that heterogeneity, in actual use cell arrays are often just row vectors, but where elements are *themselves* cell arrays: e.g., {{1, 2, 3}, {4, 5}}. 
dec2bin works well, how are you using it?
In general, to get your code to run a bunch of times, you write your code that you want to run once in a function, and then write another simple function which calls your function many times. If you want to use a condition to determine when you stop running your code, you can use a while loop and a boolean flag. Say, you want to run (and I'm just making this up, I'm not sure what you want your code to do) until you've found a permutation that lets you fit 100 circles into your ellipse, then you'd make your function `rand_circ_ell` return the number of circles it created. Then, you would set it up sort of like: over_100 = false; while ~over_100 n_circ = rand_circ_ell(); if n_circ &gt; 100 over_100 = true; end end 
A 'for' loop executes the code within the loop n times, where n is the number of indices provided. E.g. given "for i = 1:2:5 ..." n = 3 given "for n = 1:100 ..." n = 100 A "while" loop continues until some condition is true. A "while" loop can be made into a "for" loop, e.g.: i = 1; While i &lt;= 100 i = i + 1; end Note that it is possible to accidentally make a while loop that never ends.
What you're trying to do is called [Automatic Music Transcription](https://en.wikipedia.org/wiki/Transcription_(music\)#Automatic_music_transcription) and is an active area of research. Here is a [tutorial](http://c4dm.eecs.qmul.ac.uk/ismir15-amt-tutorial/AMT_tutorial_ISMIR_2015.pdf) on the topic.
Doesn't matter, as it gets overwritten at every iteration and he doesn't care about saving it for later.
Any for loop can be converted into a while. The basic recipe is as follows: 1. Create a counter variable (I normally use k) 2. Say `while k &lt; n` where `n` is wherever you would plan on ending your for loop 3. Increment `k` by your for loop step size at the bottom of your work If your case, you would insert your `if` statement before you increment `k` and if you want to repeat, you then hit `continue`. `k` is not incremented, so you are where you were. 
I actually think I solved my problem by inserting a do until loop
Thanks :)
This worked! Thank you.
Really? Wonder why..?
I believe Matlab processes a for loop like a for each loop. If you say: for idx = 1:100 At runtime, it builds an array containing 1:100 (e.g. [1, 2, 3, 4, ... 100]) and just assigns the next value in the list to idx on the next loop. That's why you can do things like: for idx = [ 1, 3, 10, 105, 3, 7] Changing idx mid loop and having that value stick around to the next loop makes no sense in that context. You need to use a while loop, as the loop index is checked each loop with a Boolean operator to decide if you loop or stop. 
Good point
I don't know any Matlab books, and even if I did, there are many different uses for Matlab. I used it primarily for data analysis and experiment design. If you are an experienced programmer then I suggest you just google anything you're having trouble with. Mathworks will usually be the top link, and 90% of the time it is extremely useful in explaining things. Just remember to try to store everything in matrices and really conceptualize matrix manipulations. 
dont underestimate matlab - it can do a lot (OOP, etc)! just pick a topic and search for it. the documentation and community are awesome.
It didn't do much. BearSVG2.svg is the name of the file. &gt;&gt; ImportedBearFile=importsvg('BearSVG2.svg') ImportedBearFile = struct with no fields. Can you give me a little more info on that code? Where did you get it? How is it supposed to work? Additionally, did I tag this post incorrectly? This is a pretty homework-y question. 
Found it online from someone who asked a very similar question. I've written readers before, and all the pieces seemed to be in the right place What does your file look like? Ascii or binary? This will only work for ascii files, for instance. Without looking at it I can't help much more. I'm guessing this can work with one or two small changes, provided its an ascii file. Try to go through the m-code in the debugger and see where your data starts, and if the identifiers pick it up or not.
I would do it in a while loop while Keq &lt;= 0.00015 % Your equation % update extent end Also what is the first 'for' for it only runs once since A is always 1. If A, B and C needs to change, you need to fix this.
Just go for it. Look at the examples for MATLAB. It's one of the few languages with great documentation. Google what you want to know or the function you want to perform
I would also check out the Matlab profiler if you haven't already. Basically you set it to observe and then run your script. Afterwards, it will tell you how much time it spent on each function call, and will let you step in to sub-routines. Sometimes, something as simple as defining a variable type can make a big difference to a basic function that is called repeatedly.
I highly recommend this site http://www.colorado.edu/engineering/CAS/courses.d/IFEM.d/ 
Generally a good starting point, yes. I don't have much experience with it to say specifically, I would see that as a minimum, and enough if you aren't using large files in your parfor loops, but if you are processing files that are hundreds of megabytes and each stream is getting its own copy of the data you may want more. 
Hey look --&gt; Just to the right of this post is a sidebar with answers to all your questions. Thread locked
By doing as much as you can. MATLAB Help is your best friend.
I ended up solving this issue from the other side of things. Now the file is written in much simpler terms. It was doing some weird thing where every data point was being given relative to the previous `mod 3`th data point. Yeah, it was wacky. 
You should be able to do something like this: D = regexp(foutput, ' ', 'split'); D = vertcat(D{:}); The numbers in columns 2-4, will probably end up as strings, so you'll need to convert them to numbers with something like str2num()
&gt; function x = foo(foutput) &gt; x = cellfun(@(x)[{regexp(x,'Local node [0-9]+','match','once')},... &gt; num2cell(sscanf(x,'Local node %*d %f %f %f'))'],... &gt; foutput,'uniform',0); &gt; x = reshape([x{:}],4,[])'; &gt; end Sorry for not being clear, but your interpretation is exactly what I want (except I'm not sure where your numbers are coming from), except that when I run it I get my yield output as: [Local node 1] [Local node 1] [Local node 1] [Local node 1] [Local node 1] [Local node 1] [Local node 1] [Local node 1] [Local node 1] [Local node 1] [Local node 1] [Local node 1] [Local node 1] [Local node 1] [Local node 1] [Local node 1] In other words, in your code x is a 250x4 cell that reads only the first row and divides it into four columns. What I'm looking for is this: [Local node 1] [2.29E+01] [-1.357E+01] [5.138E+00] [Local node 1] [6.717E+01] [-4.676E+01] [1.877E+01] [Local node 1] [1.207E+02] [-8.66032E+01] [3.955E+01] ... etc all the way down to 1000 rows 
Yes, theres 1000 rows and 1 column currently, trying to convert to make 1000 rows but 4 columns based on the space.
OK thank you, [here](https://www.dropbox.com/s/xcaorfczh3uolzi/foutput.mat?dl=0) is the link for the foutput.mat file. I tried running it again but doesn't work for me, not sure what I'm doing wrong.
&gt; foutput = strtrim(regexprep(foutput,' +',' ')); &gt; &gt; x = cellfun(@(x)[{regexp(x,'Local node [0-9]+','match','once')},... &gt; num2cell(sscanf(x,'Local node %*d%f%f%f'))'],... &gt; foutput,'uniform',0); &gt; x = reshape([x{:}],4,[])'; AMAZING, THANK YOU AGAIN /u/wobbly_woobly and of course /u/nodgeOnBrah for original code
Okay thanks for the response. Do you have any hints as far as doing the inner loop until no more substitutions need to be made? I'm trying to do it in an efficient way instead of just manually comparing everything and I'm having some trouble
If you wanted to determine whether a substitution was made in an iteration, how would you do that? Is there some part of the code that is only run when a substitution occurs? Can you use that fact? 
I think it's saying line 35 in reference to the csvead.m file. Are you sure the file you're trying to read is on your path?
I tried some different stuff and came up with this. What do you think? %Generate vector of 10 elements V = [32 12 09 89 78 129 174 183 55 124]; i = 1; while i &lt;= 9 if V(i) &gt; V(i+1); tmp = V(i); V(i) = V(i+1); V(i+1)= tmp; i = 1; else i = i + 1; end end
SICK. That worked. I was in my MatLab directory folder and not the folder containing my csv file. Thanks a lot for the fast reply. 
Looks like you're reading the image just fine. Your first imshow is producing a completely reasonable image. Why does the original file format have any relevance? 
Try using ischar() on the input, this will return a 1 if the value is a character (ie the letter for each colour you asked them to input). Also if you use uint8() or uint16() on each, that will return the ascii code for each, you can then use a normal conditional to check if this is between the bounds required. Ie "if myAsciiVal &lt; minValue || myAsciiVal &gt; maxValue" Hope this helps. Feel free to ask anymore questions if you're stuck. 
This is what you want. If you start a script with "function" it'll save as a function you can call from the command line, or in other scripts. It'll be in the form "function output = functionName(inputs)" If you want multiple outputs you'll need the square brackets ie [output1, output2...]=functionName(... Multiple inputs just need separating by commas. You can call the inputs anything you want, these are just used as references for you to deal with them inside the function. Then you need to make sure you set the outputs within the function. Hope this helps explain. 
Try looking at the doc for the function you are using. You are not specifying n so it defaults to 64. Other values might give you the result you want. mathworks.com/help/images/ref/histeq.html
You are correct, but I have to point this out because I'm a big fan of ascii magic. Your coworkers will belive you are a wizard: You don't actually need to convert to uint8 or 16. Chars are actually already a numerical value, they are simply displayed as ascii characters as a convenience. So myAsciiVal &gt; x will always return the same result as uint8( myAsciiVal) &gt; x. In fact you can do math with them! Try 'this is a string' + 6. I wrote a function to convert row/column coordinates to Excel compatible cell names in this way, with no special cases. It can refer to any column name without limit, like "27AZX". With ascii tricks, it's 3 lines of code. 
I wasn't aware of this. I realise it's all ascii underneath but I didn't realise matlab treats it as such without converting it. Every day is a school day! 
Very! That was what I ran for the homework basically, so it's reassuring to see that! Thanks for the help 
In terms of reading the files, something like this would work d = dir('tree_impulse*'); numFiles = length(d); for i=1:numFiles file = textread(d(i).name, ....); % Now do whatever you need to do with the file end And in terms of saving, don't use dynamic variables names (making files eg1, eg2, ... on the fly). Instead, before your loop you could add eg_all = zeros(numFiles,1000,4); and at the end of the loop, eg_all(i,:,:) = reshape(...);
You'll need to normalize your image data so that the maximum value passed to imshow() is 1. Alternatively, you can use imagesc() and it will manage the scaling.
Not in the input. Use it to check the input. Something like... Colour1 = input('enter colour one'); If ~ischar(Colour1) Display error message, or ask for the input again end You could even put it in a while loop, so "while ~ischar(Colour1)...Colour1 = input... This will continually ask for a colour until the user enters a char
Free beginners guide book, explains computing basics, using matrices, saving variables as text files to read in later, parallel processing and using the GPU.
Can't upvote this comment enough. I also took an introductory class in MATLAB in college, but I didn't really enjoy the language/really learn how to use it until I started using it for personal projects. I'm by no means an expert, but I'm definitely a lot better now
Your post has been removed. But don't worry, it is easy to get it back. Just [read our rules for homework](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/) and make the changes to your post. After doing so, just respond to this message. Mainly- please format your code, show what you've tried, and ask a specific question. 
Oops sorry, I was so focused on the logic of the loop that I forgot to make those other changes. Here is my final code I think should be good %Generate vector of 10 elements V = randi(200,[1,10]); L = length(V); %Set L equal to length of vector x = 1; while x &lt;= L-1 if V(x) &gt; V(x+1); tmp = V(x); V(x) = V(x+1); V(x+1)= tmp; x = 1; else x = x + 1; end end disp(V) mx = V(10) mn = V(1)
Try ylim and then set ytick just like you're already setting xtick: ylim([0 15]); set(gca, 'YTick', 0:5:15); 
What is the exact wording of the assignment you were given?
The assignment asks to plot the positions of the lattice points using the primitive lattice vectors A and B in order to examine the structure of the lattice.
the loop is to calculate the total cost after each year. 
When you call bar, or any other plotting command, it will do the axes scales and limits automatically however best Matlab sees fit. So if you want to adjust them you need to do it after the plot (or bar) command is issued.
It looks like he just wants the Bode magnitude plot. That would be the top plot of the bode(H) function. Use the "help bode" command to see if you can narrow it down to just the magnitude plot. 
You're going to struggle in this class.
I think the matrix representation of HWP is incorrect. Compare to [wikipedia](https://en.m.wikipedia.org/wiki/Jones_calculus). The exponents need a phase difference of pi and since i=exp(ipi/2) there's only a pi/2 difference (same as your QWP). 
hahaha yeap i already am. i just reallised i dont even need the loop haha
Thank you very much for that replaced my HWP with the wiki version, HWP = [cos(2*pi/4) sin(2*pi/4); sin(2*pi/4) -cos(2*pi/4)]; and now it seams to work max -&gt; zero and zero -&gt; max. Many thanks again. 
if there is a hint of "you may want to use a while loop" then this exercise is checking your understanding of while loops. What you're doing is mashing a for loop and a while loop together. In for loops, the iteration is your controlling variable that tells the script when to stop - ie. after 25 times, you're trying to say at the moment "run for all the iterations between 1 and 0". But in a while loop, the controlling element it is the logical statement, in this case 'total&lt;1000000'. Now have a think about the first time you're defining your variables, because you've an error there. At 00:01 on Jan 1st, what are the states of Total and Year in your sample code? Once that loop has gone through once the answer should be 10,400, but what will yours show? Don't forget to call year at the end after the loop to display the year count, and as housekeeping, the section of code inside your while loop can be condensed to 2 short lines.
I think you need to evaluate your function. Look for feval in MATLAB help. 
righ click show&gt;phase(click) deselect http://prntscr.com/cetjxh
When all else fails, read the documentation. [struct](http://www.mathworks.com/help/matlab/ref/struct.html) Your data variable should have a field for each variable that is stored in your .mat file. The [whos] (http://www.mathworks.com/help/matlab/ref/whos.html) can tell you what's inside the mat file. whos -file data.mat 
 fieldnames(data) It'll give you an answer of a variable name. Then type data.*that_answer*
Your post has been removed. But don't worry, it's easy to get it approved again. Just read up on [our rules for posting homework questions](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/), and reply to this message when you've made the necessary changes. 
Are you not allowed to use the mod() function?
Just practice stepping through your code like a computer would. And if you don't know where to start on a project, start with a pen and paper.
 To calculate the vector, you would you would have: inc = [10:90]; As for your functions they look correct.
You can specify which rows you want to keep by using the colon symbol. arr(:,1) outputs all the row values from column 1. arr(1,:) outputs all the column values from row 1. You can specify ranges as well using the colon symbol arr(1:2,:) outputs all the columns from rows 1 to 2. arr(:,1:2) outputs all the rows from columns 1 to 2. Since you want to get rid of the first row entirely newArr = arr(2:3,:) outputs all the columns from rows 2 and 3. 
I did this as well, however I want the values within this inc array to include real numbers i.e 10, 10.1, 10.2 .... 90. Additionally, how can I invoke these numbers with the for loop for index = 1:81 
Either inc = [firstnumber:spacing:lastnumber]; OR inc = linspace(firstnumber,lastnumber,numberofpoints) 
Confused? When was the last time you divided two numbers?
This helps a lot. I'll use this. Cheers!
Use the transpose operator to turn a row vector into a column vector: [1:3:10]' 
This user has submitted (a less kind person might say "spammed") the same link out to /r/matlab 7 times now. I was going to download the book just to give him the benefit of the doubt in case it actually turned out to be worth promoting, but you can't even do that without an academia.edu subscription. Which I have no intention of signing up for. Mods, perhaps time to issue a warning?
basically, b is a matrix of integers from 1 to 1025. c becomes a matrix the size of b, where each value is the corresponding value of a. Example, b(10,10)=7 a(7)=14 c(10,10)=14. So you get a matrix c made up entirely of the values in a.
figured it out! http://pastebin.com/00kSmxsR In the end I feel a bit stupid for not figuring it out sooner, thank you for your help!! What I did eventually was have the 'Tag' property for the sliders be created by N --- strcat('slider',num2str(n)) --- so I had slider1, slider2, etc. Then rather than trying to have a callback that would be saving N different results, I can have the callback just output raw value and the slider used. Time and time again I end up forgetting the power of 'get(gcbo)'
It is hard to believe you are serious with such a broad question without any background info (i.e. how much you understand already). Here is an ELI5: Matlab can act like a simple calculator: Type in 2*4, press enter, and it will give the results. Matlab works well with arrays - Think of an Excel sheet, lots of rows and columns of numbers. You can then operate on all, or some, of the numbers in the array (e.g. multiply all the numbers by 5, find the mean of all the numbers, graph the numbers, etc.). Matlab is largely used to write code that performs operations on numbers, and then this code is saved and 'run' repeatedly on numbers/data fed into it. This code is usually saved as an 'm-file', which is really just a text file containing the code in a format that Matlab can recognize. At this point, Matlab can be configured to perform: scientific/mathematic computations, data collection/visualization, mathematic/physical modeling, user interfaces (Apps), etc. I guess my summary would be: if you have a task involving numbers, you can likely complete it using Matlab. You can find helpful links on the sidebar, and google general Matlab overviews. Once you download/have access to Matlab, you're instructor will likely give you some direction on where to start.
Briefly, you need to write an external function that you can pass either Cu_in or Cu_int into, then set that external function as an anonymous function with the ode45 states, and tell the solver to solve that. Your external function declaration might look like function [dy] = rhswrapper(t, y, Cu_int, k1) And inside rhswrapper, you do any calculations you need to do to define the derivative. Once you've calculated your Cu_int and k1 values in the parent workspace, you can create an anonymous function with t and y as the inputs, and use Cu_int and k1 from the workspace. anonfunc = @(t, y) rhswrapper(t, y, Cu_int, k1) And then you can run ode45 on that anonymous function. ode45(anonfunc, tspan, y0)
You're a better person than me for sure. I would have just shat all over OP, first post or 400th. A well put, detailed post despite OPs lack of effort means you've truly atoned for those sins ;)
Yeah, that seems like what I'd need to do. Sorry if I sound stupid, but how would I use that in this case? (I'm really really new to MatLab.) Is it something like background = foreground(foreground &lt; 255); or something like that? That doesn't quite work, yet...
Pretty close http://blogs.mathworks.com/steve/2008/01/28/logical-indexing/
Thanks! I figured it out with your help! 
I'll see what I can do. If you know of a subreddit with this feature already I can see how they implemented it. 
Can you please try explaining what you're trying to accomplish again? A function handle may or may not be a good solution, but I don't understand what the difference is supposed to be between your code and the mathworks's example.
Awesome, thanks! Another question.. My data import process goes something like this: for n = 1:numFiles X = load(dataFile{n}); Res = myFcn(X); % time consuming NewFname = makeFileName(dataFile{n}); save(NewFname, 'Res'); % also time consuming end I'm wondering.. Is there a good way to do this asynchronously? For example, can I define a cluster using a subset of cores on my own machine (say, 14 out of the 16), and then (in my script) submit the loading and processing steps as a cluster job for each data file, then load them back into the client workspace (to save) as they finish? ClusterJob = cell(numFiles,1); for n = 1:numFiles ClusterJob{n} = load and process data file # n submit(ClusterJob{n}); end for n = 1:numFiles wait(clusterJob{n}); results = load(ClusterJob{n}); save(newFname, 'results'); end 
The false position method is a way to find the roots of a function in between the given bounds. In order to find the roots, you have to set f(x) = 0. 
I want to start off by doing exactly what that example is, but without calling the function: helper_continuous_fft.m I want this all in a single script instead of a function call because I want to alter what's happening in the function but I cannot see it in my workspace if it's happening inside a function and not the main script (to my knowledge). Working with everything in one script would just be easier for me personally but I don't understand how to make this in one script due to being unfamiliar with some of the commands used to read the audio.
That's an interesting idea. I'm not sure how something like that could be implemented purely in the context of a reddit forum, given the relatively quick turnover of user posts. If you want a project coded for pay, I don't see an issue with just posting that interest here in the typical self text post. Just explain what you want done (and provide a ballpark budget). I'm sure you will get a few bites. I mean, I'm interested already. 
ok thanks this lead me in the right direction.. matlab was not interpreting the dates correctly. This data was imported from excel so I used datetime(dateColumnFromXls,'ConvertFrom','excel'); to get the dates interpreted correctly.. now I'm making a 3913x1 fints object - as I'd expect .. thanks ! NEW problem though.. I'm now trying to synchronize this tsobject with another tsobject I've made using this method (the other being a 3789x1 fints object). [tsobj2 tsobj] = synchronize(tsobj2,tsobj,'union'); returns the error: Undefined function 'synchronize' for input arguments of type 'fints'. ...I thought 'synchronize' is for tsobjects, and 'fints' is used to create tsobjects?! this project is going to bring me to tears, its one thing after another !!
There is a very low poster to subscribed ratio, and most posts are homework or easily Google or stack solved posts. Perhaps making a weekly problem to solve in matlab, with shortest implementation and most elegant flair awards would make for better posts. Also, a weekly or daily "what's your favorite obscure function" would be a good post to entice people to engage.
Ahh, I completely misread your post. I thought you were asking how to improve Matlab, and I was thinking of Mathworks creating a marketplace on their website. Sorry, yea, I'm unsure how this could by implemented on reddit.
I like both these ideas. I think theyd be great ways to learn and get more engagement from the subscribers instead of the usual homework questions.
This same question was asked within the last 24hrs. Check the sub, and it may give you some direction. It is hard to guess at your error, because I don't know what tepig_re or cat are (RGB, same size, etc). Also, it would help to know which operation is giving the error. If I had to guess, green is being assigned non-integer values (e.g. 0.7, nan), so your call to cat(...) it trying to index using improper format. Run the calls one line at a time after removing the semicolon to see if the output of each step is what you'd expect it to be.
I'm not too familiar with this formula, so I'm just looking at the formula off of [Wikipedia](https://en.wikipedia.org/wiki/Rodrigues%27_rotation_formula). For the variable two, it looks like it should be (1-cos(theta)). Right now you are doing (I-cos(theta)), where I is the identity matrix.
It's more convenient to adapt your input function to the solver than it is to make a custom solver for your function. The standard that everyone has agreed on is find where the function is 0. That being said, here's what you would do: Add a new variable for your desired right hand side. Let's call it `y`. In this case, `y = 5` Check that `((f(xl) - y) * (f(xu) - y)) &gt; 0` instead of `(f(xl) * f(xu)) &gt; 0` when handling the inputs. Then rewrite your solver iteration so it looks for roots of `f(x) - y` instead of `f(x)`. Remember, when you update your bounds, you'll test `((f(xl) - y) * (f(xu) - y)) &lt; 0` instead of `(f(xl) * f(xu)) &lt; 0`. Then you won't have to rearrange your input function.
Matlab has phong and gouraud (spelling?) lighting by default, but I think they just give you the diffuse and specular components of a surface. Blender is open source, perhaps you could look at the shadowing implementation there?
Thanks that got it working right
I think you're in the wrong subreddit.
Wait I am. Sorry lol 
Actually, you don't even need `gcbo` here--the first parameter of the callback function is exactly the same as the handle returned by `gcbo`. If your prototype is: function callbackFcn (obj, evt) Then obj == gcbo Will return `true`. Using `gcbo` will work for your case, but it may not always be appropriate (e.g., if you wanted to manually call the callback from a different function, `gcbo` might return nothing or the handle to the wrong object). I usually use the parameter--since it always contains the handle to the object--unless I really want the handle to the current callback object, but either is probably sufficient for your use case. 
The input... format long Does not change the underlying precision of the variable, it simply changes what is displayed on the console window. I don't really think your instructor is looking for `vpa` either, but maybe (depending on what course you are taking - which is?). Give these two docs a read... * [numeric types](http://www.mathworks.com/help/matlab/numeric-types.html) * [floating-point numbers](http://www.mathworks.com/help/matlab/matlab_prog/floating-point-numbers.html) 
I don't think you can, because it wouldn't know which root you are trying to solve. Unless you compare it to an fzero output somehow.
Exactly as /u/Boiled_Potatoe said, Assuming your function is continuous, if your upper limit and your lower limit function evaluation values are opposite signs (i.e f(xl)*f(xu) &lt; 0) , then there MUST be at least one root/zero in between them.
 while f(xl)*f(xu) &gt; 0 xl = input('Please enter a valid lower limit: '); xu = input('Please enter a valid upper limit: '); end does this work?
Looks fine!
1. Simulink. 2. Most toolboxes: http://www.mathworks.com/products/th
&gt; Simulink Until you can use Simulink without Matlab it's the same. Companies aren't going to hire people that know both Simulink and Python, they hire engineers that know Matlab because Simulink comes along. It'd be like arguing that you *could* run IIS on a server other than Windows. Plus you can control all of Simulink's functionality through Matlab. Not so much with Python. &gt; It certainly is not the case for "most" toolboxes [Citation needed] &gt; it was a small minority. It's not even close to a 'minority'. [The Python Controls toolbox isn't even close to Matlab's in terms of functionality](https://github.com/DadAtH-me/ControlsTutorials_Python) and when you dig into a lot of other 'toolboxes' it's the same. They're nice ball peen hammers when you really need a jackhammer. Additionally: http://www.mathworks.com/products/do-178/ Until you see someone pony up for certifications companies aren't going to use it for free or otherwise. You have a choice to fly on a plane designed with Matlab that meets DO-178C certifications or one designed with Python written with toolboxes by "some guy on PyPi", what do you choose? 
&gt; Until you can use Simulink without Matlab it's the same. It isn't the same because you can use MATLAB without Simulink. &gt; [Citation needed] After you. &gt; It's not even close to a 'minority'. The Python Controls toolbox isn't even close to Matlab's in terms of functionality and when you dig into a lot of other 'toolboxes' it's the same. That is one. From what I can find, the ones where Python is in roughly equal or better shape than MATLAB: * Parallel Computing Toolbox * Symbolic Math Toolbox * Partial Differential Equation Toolbox * Statistics and Machine Learning Toolbox * Curve Fitting Toolbox * Optimization Toolbox * Global Optimization Toolbox * Neural Network Toolbox * Model-Based Calibration Toolbox * Fuzzy Logic Toolbox * Signal Processing Toolbox * DSP System Toolbox * Audio System Toolbox * Communications System Toolbox * RF Toolbox * Antenna Toolbox * Phased Array System Toolbox * LTE System Toolbox * WLAN System Toolbox * Image Processing Toolbox * Computer Vision System Toolbox * Vision HDL Toolbox * Image Acquisition Toolbox * Mapping Toolbox * Data Acquisition Toolbox * Instrument Control Toolbox * Image Acquisition Toolbox * Financial Toolbox * Econometrics Toolbox * Datafeed Toolbox * Database Toolbox * Spreadsheet Link (for Microsoft Excel) * Financial Instruments Toolbox * Trading Toolbox * Bioinformatics Toolbox * SimBiology * Spreadsheet Link (for Microsoft Excel) * Database Toolbox Ones where MATLAB is still a ways ahead: * Control System Toolbox * System Identification Toolbox * Robust Control Toolbox * Model Predictive Control Toolbox * Aerospace Toolbox * Robotics System Toolbox * Wavelet Toolbox * Vehicle Network Toolbox * OPC Toolbox * MATLAB Coder * HDL Coder * Vision HDL Toolbox * HDL Verifier * Filter Design HDL Coder * Fixed-Point Designer * MATLAB Compiler * MATLAB Compiler SDK * MATLAB Report Generator That is hardly "most". And that wavelets situation may already be rectified. 
This isn't meant to be a gotcha, it's a legit question as I have a specific need for it:. You mention the statistics toolbox as having similar functionality in both. I was trying to do an n-way ANOVA and couldn't find a python function to do it, but MATLAB can. Do you know if python can do this?
That's wildly debatable.
General PyCharm stuff that I really miss in Matlab: + Fantastic autocompletion + Jump to declaration/code search tools + Refactoring tools + Extremely in-depth version control integration Debugger + Running a script and debugging doesn't affect/depend on the global environment + Everything's value is right next to the line on which it appears + Much finer control over stepping through code/functions/etc. (you can bascially step through every little bit of a function's execution, including Python's actual source code) + Some data structures aren't completely opaque (good luck inspecting a complicated struct in the MATLAB debugger) + You can set up "run configurations" and add command line arguments for debugging scripts and whatnot Things that Matlab does way better than PyCharm: + Documentation. OMFG so much easier to read/look through. + Way better for interactive data exploration. I would kill for a PyCharm "environment/variables" pane.
Yeah I totally agree on auto complete and refactoring tools. Maybe I'm just too accustomed to debugging through the command window but the rest is pretty minimal. Regarding your structure comment, you literally just type the structure in the command window and click on the field and it opens the documentation. I don't see how it could be any easier. Also, the pause button matlab added in the recent version lets you enter debug at any time, so if your program hangs you just click to enter debug and see exactly where the program is running into trouble. That alone has saved me a ton of time.
There's a similar thing to the pause button in PyCharm where you can start up a console from wherever you currently are in the debugger, but it's an extremely well hidden little icon that's difficult to find. Regarding the "struct complaint", I might not be thinking of the right datastructure (it's been awhile since I've done any serious Matlab coding). I just remember that some of the more nested/complicated datastructures can get really nasty to navigate. Anyhow, both IDEs are getting better all the time, I just think PyCharm is a little nicer for complicated projects at the moment. This comes at a cost of a much steeper learning curve, though. Matlab is way better for putting the important stuff front and center where a user can actually find it. 
I'm not 100% confident that this is what's happening, but it may be a result of the name you gave to your script. You named this 'image.m', and then proceed to call the built-in function image() within the script. Usually Matlab will search for functions in the current directory, so it may be trying to use this script as a function within itself. I would rename this .m file (image_test or something) and make sure to nuke any reference to the original name.
/u/TheBlackCat13, please provide sources for this list. It would be ok to indicate personal experience as a source, but just let us know which ones those are. What is the criteria you are using for comparisons? 
SORRY, i am a beginner. I realize how silly it might be. http://imgur.com/a/mYtfc I now get this error, any more help?
Well, you didn't get an error. Are you sure it isn't re-drawing in the figure window that is hiding somewhere (behind Chrome or on a turned-off monitor)?
Yes this is possible and easy actually. However, it will be hard to do it without knowing exactly what the problem format is. You should post an example here. That said, the purpose of homework is practice and comfort understanding how to do the problems and recognize and manipulate the variables....if you do your homework this way you may do yourself a disservice
Oh okay. Same here haha. Mine is called 'Computing for engineering'.
This is more a problem of the algorithm than a MATLAB problem. The bisection method is guaranteed to converge to a root of the function *f*, [if the function is continuous between the lower and upper bounds](https://en.wikipedia.org/wiki/Bisection_method#Analysis). Looking at the [graph of your function](http://www.wolframalpha.com/input/?i=x%2F(1-x\)*sqrt(2*3.5%2F(2%2Bx\)\)-0.04), there are two singularities at x = -2 and x = 1. So, if the user chooses a bisection interval which contains such a singularity (e.g. xl = 0.1 and xr = 2), your script will accept these parameters (due to the sign change of the function at the singularity at x =1), but the algorithm will fail to find a root, because there actually is none! You can circumvent this problem e.g. by checking the user input for any discontinuities within the bisection interval.
well, in psychophysics, Psychtoolbox kicks Psychopy out the water for functionality and depth from what I know. Though psychopy seems to be much more widely regarded for simplicity and elegance. Also, EEGLab is the best EEG analysis tool I've seen, though I've not seem them all. (it is also a diva)
Could you please show a screenshot of the "+"? I would like to avoid creating a new post just to satisfy my curiosity
&gt; vice versus vice versa* 
&gt; Now, in Python I have much more power because I could develop these. And IMHO that's where Mathworks shines. They have a GUI for almost everything. It's not that I can't create a low pass filter with Python. It's that I can do it much, much faster in Matlab. And when your engineers cost your company $100+/hr the cost of Matlab toolboxes adds up quickly.
right click, open with. does that work?
Your code (which conventionally is .m) or your workspace/data (which is conventionally .mat)? Either way, try changing the file extension to whatever would be appropriate and opening. If your file associations have somehow changed, try opening it from Matlab (either from the main window or the editor, depending on which thing you're actually trying to open).
&gt; have developed and evolved a parfor like function but it has taken lots of reading and evolution (multiprocessing.map to more advanced wrapper functions. Basically, lots of StackExchange reading). Now, in Python I have much more power because I could develop these. But for most users, just doing a parfor or spmd is easier. Python tools like [Dask](http://dask.pydata.org/en/latest/) blow parfor out of the water. You don't even need a loop, Dask will automatically divvy up your data and figure out how best to parallelize your operations for you. And Numba provides [prange](http://numba.pydata.org/numba-doc/0.12.1/prange.html?highlight=parallel), which is basically the same as parfor. And both of those work without you having to pay thousands of dollars per processor like you need to with MATLAB. &gt; Sure the Matlab code could have errors, but when I say this was done with some well-establish toolbox vs "something I found on github", then it is a bit less rigorous. Just skimming the MATLAB code I can see does not give me that much confidence in all the closed-source code I cannot see. And we have no clue what sort of unit testing, if any, this code is getting. With Python, yes some random little github project may not be reliable. But the major python numeric packages have heavily unit testing and a have bunch of major companies making heavy use of them and contributing to them. Most projects show right on pypi how much unit testing they are doing and how it is working. Further, it is much, much, much harder to make MATLAB code reliable in the first place than Python. The number of exceptions and special cases involved in basic MATLAB operations, the amount of guessing that basic operations do about what the user really wants, the tacked-on features that were never properly integrated into the language, the lack of any 1D or 2D data structures, and so on give MATLAB a lot more corner cases and ambiguity that make it fundamentally harder to make code reliable in the first place. Add to that the habit of dumping everything into the global namespace that makes name collisions almost inevitable. For example, MATLAB R2016b adds automatic broadcasting like numpy had all along. This is a major, fundamental change in how matrices work at the most basic level. Do you really think they were able to anticipate and address every possible corner case? Especially since this is a silent behavior change in most cases, can render operations that were previously correctly errors into incorrect but functional code, and it is known that MATLAB uses [error hiding](https://en.wikipedia.org/wiki/Error_hiding) but we don't know how much or where.
I just ended up retyping it and made sure that it saved as the correct file extension. I tried right clicking and it only lets me open with winamp and tried opening it through matlab and it treated it like a audio file. I changed the file extension and it showed a bunch of gibberish. 