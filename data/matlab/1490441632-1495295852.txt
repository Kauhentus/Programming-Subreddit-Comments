 You're right about there being no errors and the output. That's the part I don't understand, why is it not adding the previous term to the new one? From my understanding that should work but it doesn't. I've tried changing the indices of both the xx in the right hand side and the left hand side but I'm still not getting the right results. 
You understand why xx(i)=xx(i) +... Doesn't make sense in you example right? When you go through the first two steps in your head. What is the x(1) that gets added in the first step, what is x(2) that gets added in the second? With those small modifications the rest of your code is working fine, I just tried it out myself. I did have to run it till 100 though and change your xlim ylim values (just remove them for testing) in order to get a nice parabola with it coming down. Otherwise you only get a small section of the ascending part Edit: and change you h to something like 0.1 for testing, it'll be much quicker. You don't need that small steps to try it out.
Thanks! Any idea how I could go about plotting this? http://imgur.com/a/tDLCO
You need to save the function's output to a variable; it doesn't happen automatically. Call it from the command line as `yourVariableNameHere = laplaceeq(x)`.
The command window now says "Error using plot Data must be numeric, datetime, duration or an array convertible to double." I think the problem is that there doesn't exist an inverse laplace transform of (exp(s^(1/2))/s^2, s, t)?
Doubt it -- if that were the case, I'd expect an error when calling `ilaplace`. I'll check to make sure. *Edit: yeah. If you change to `U=1/s^2`, you'll still get the same errors.* What kinds of information are you giving to `plot` and what is the error message *actually* telling you is wrong? I will say that I think you'll eventually get to a place where the lack of an inverse transform is going to raise issues for you, but your code isn't at the point yet where Matlab's raising that issue for you.
In matlab the workspaces are seperate between different functions and the main command window. You are saving "u" in the function workspace, but not in the command window workspace. Solve this by using: u=laplaceeq(x); However, if u is a vector you cant plot it against x, since you define x=1 as a single value. x and u need to be the same size to plot together.
its pretty straightforward to do by going through all rows and just shifting each row by 1 sample. Something like this: 1) define vector x=[a b c 0 0 0] 2) pre-allocate the shifted matrix (call it Y) 3) low over rows: for nn=1:numRows 4) Determine what the row should contain. some number of zeros on the left and some number of elements from x on the right. This will be a function of your loop index "nn". 5) insert the row into matrix Y: Y(nn,:) = ... 
Hey thanks for the reply. The reason I'm not using those is because I have two second order eqs and MATLAB doesn't like then. I don't know if I can solve it normally when decomposed to two first order. The method I'm using came from this. https://m.youtube.com/watch?v=6e6wysa5Qho
&gt; the period is 87 days then the rate of change of theta is 2pi / 87 [rad / day]. This is true on average over the course of a year but I dont think its true on a day-to-day basis, since the orbit is not perfectly circular. It is probably a pretty decent estimate on what the change in theta should be on any given day though.
You're right that it's an average speed. The angular velocity of planets slows father from the sun. The amount of change in area over time is constant however. This is used in deriving the equation for period which I use to calculate initial theta dot. 
Ok thanks for the reply. I'll go over them again. 
first off, you're having the function call itself recursively without any exit condition. it will simply recurse into itself until matlab complains. 
Your units are inconsistent. What are the units of the gravitational constant? If you fix the units, you get [this plot](http://i.imgur.com/fOcNWTf.png).
It works with `.mat` but I've never tried it without including `.mat`. It might work either way. I'm inclined to include the extension just so that your code is more readable. 
Thank you so much, that did indeed fix it.
Yeah i did, i tried inputting the equations for the x component using this method but returned an errors. I think it maybe due to having the variables : mr, mi, c and Asin(wt). I also dont know how to apply and integer i=1..4 for my theta and mi values.
In matrix math if A is n by m, and B is m by p, then the product of AB is n by p. When you input x and t to your function, you are likely inputting an array rather than scalar values. If x and t are an array, they must have the same inner dimension (ie "m" in the example above). If x and t are a vector, they must be the same length and you should use the element wise operators ".*" and "./" instead of "*" and "/"
When x=1 I get a value of 3.6058e-15 but when I create a graph nothing comes up? http://imgur.com/a/19GU9 I might create a new post for this though.
I guess one way would be to make arrays of (x,y) coords for the equations, or use 2 for-loops, and bool compare for same values. 
Set up the equation where they equal each other, solve resulting quadratic equation. This gives you the x values (or whatever variable you operate with) where the two equation evaluate to the same value.
I think that plot works by connecting points in its default mode. I think you're calculating individual points at a time, right? If you want individual points, consider scatter(). additionally, you may want to think about whether it makes sense to build up a vector of the points you want to plot so that you can do them all in one command like plot() 
Try x=-10:1:10 In the first line... Cheers
Output some of the intermediate values to the CSV..? Another way of doing it is to create a Excel template then fill in the values with Matlab code. You can go one step further and automate outputting the excel file to PDF. 
The operators * and / (and \\) perform matrix multiplication and matrix division (and matrix left division). The operators .*, ./ (and maybe .\\? That's a weird one tho) perform element-wise multiplication and division.
Ah, sorry, that wasn't clear... I already output the individual results as a *.PNG graph to present to clients and *.xlsx file for internal use. Then some batch summary data to a CSV file. I had been researching the publish tool and wanted to create a more detailed PDF report with a few notes and graphs for each of the intermediate steps of the analysis, a bit like a live script, but automated and looped for all files. But you are right, I could export the intermediate-step results to different worksheets in an excel template. The graphs won't be as nice, but it should suffice. Many thanks for the suggestion! 
Put it in front of all the timeses. The important ones are the one between x and (1-x), between (1-x) and cos, and between the sin and exp.
Same thing happens: http://imgur.com/a/5BGa8 EDIT: t is just a single value and n is just a single value I just need to sort out the x variable.
Oh, I think I misread your parentheses. Kinda hard without highlighting, but try the multiplication sign before the sine too.
 f=@(t) (sin(2*t) + cos(2*t))^2 fplot(f,[0,2*pi]) %plotting to confirm results syms x fx=(sin(2*x) + cos(2*x))^2==1; [solx, params, conds]=solve(fx,x,'ReturnConditions',true) 
yes that is correct format 
its trig.
But OP is trying to plot them all on the same figure, note the hold on command, so that actually looks right
yea. help? 
We don't do your homework for you. 
right, but they are initializing the figure each time they go through the loop which is what I was trying to subtlety point out by calling out the handle. 
man. entitled? thats a bit over the top dont you think? you dont even know me. and yea. 
Do yourself a favor and learn how to communicate more effectively. Have some people skills or you will never land an engineering job. 
I guess you're right. I just like getting to the point. haha sorry if I came off as rude. but yea the only thing I dont get, is what cos2x to use. 
Thanks that worked brilliantly.
Well if you guys are just starting out in matlab, then maybe they want you to do a for loop embedded in a while loop with a tolerance check? You still didn't really tell us the parameters of the questions are, and there is only one cos(2x), and it's cos(2x), so I hope that answers you question about which cos(2x) to use.
https://www.youtube.com/watch?v=zyxi_1OyZ2I This is where I learned, it only took a few hours to get the hang of the interface.
Thanks, you helped me out a lot!
I did initially have IF statements, however it still wasn't completing the loop from I=2 to I=1001
If i'm not mistaken, this question is more about trigonometry than it is about matlab.
No problem, happy to help :)
Is this trig?
Data=cell2mat(struct2cell(data))? Arrayofdata = Data(:) I'm on mobile so this might not be completely correct but it should do what you need.
Perfect! cell2mat( struct2cell(data) ) ans = 33 11 6 0 0 4 1 3 0 3 1 3 1 Thanks!
Thanks a lot! I'm gonna try this out
What error do you get?
Actually sorry, the original matrix, ecg, only has one column? Or does it have three columns? That could be the problem- if it's one column, then you're referring to a non-existent column.
Hmm. Do you really need a `for` loop at all? This code is a bit verbose for the sake of being explicit. ecg_(:,1) = ecg(:,1); ecg_(:,2) = ecg(:,1) + tolMin; ecg_(:,3) = ecg(:,1) + tolMax; The error message, how you're initializing `ecg_`, and the size of `ecg` would all be helpful bits of information here. I suspect the other poster's right and your `ecg(i1,2)` call references a non-existent column.
I've tried running a lot of different kinds of codes, all the same problem. I always try to preallocate if possible. I've run this exact code before without any problems. I can try to show you but it uses a lot of my own functions, so might be undecipherable. But here goes: % Script made by Kelsey B, date: 5/11/15 % Description: After using DataCombine3 to make lists for all of the data % that I had rotated using apply_rotation_kb2, this will combine them % together. Then I will break this into the consecutive frames structure % but in a way that retains where the original data came from so that I can % bin by cell length and width later on. clear cd('/Users/kbettridge/Dropbox/Data/hupA_PAmCherry_EZRDM-Rif') dirlist = {'/Users/kbettridge/Dropbox/Data/hupA_PAmCherry_EZRDM-Rif/160504_SMT_hupA-PAmCherry_EZRDM-Rif_5ms',... '/Users/kbettridge/Dropbox/Data/hupA_PAmCherry_EZRDM-Rif/160505_SMT_hupA-PAmCherry_EZRDM-Rif_5ms',... '/Users/kbettridge/Dropbox/Data/hupA_PAmCherry_EZRDM-Rif/160510_SMT_hupA-PAmCherry_EZRDM-Rif_5ms',... '/Users/kbettridge/Dropbox/Data/hupA_PAmCherry_EZRDM-Rif/170203_SMT_hupA-PAmCherry_EZRDM-rif_5ms',... }; finalList = []; for i=1:length(dirlist) Struc = DataCombine3(dirlist{i}); %cd(dirlist{i}); if isfield(Struc, 'data_id') Struc = rmfield(Struc, 'data_id'); end save('utrack_traces_norm.mat','Struc'); finalList = [finalList; Struc]; cd('..') end %% Struc = finalList; s= []; for j=1:length(Struc); for i=1:length(Struc(j).TracksROI) s(end+1).frames=Struc(j).TracksROI(i).Coordinates(:,1); s(end).coordinates(:,1)=Struc(j).TracksROI(i).Coordinates(:,2); s(end).coordinates(:,2)=Struc(j).TracksROI(i).Coordinates(:,3); s(end).intensity=Struc(j).TracksROI(i).Coordinates(:,4); s(end).mol_id=length(s); s(end).data_id=Struc(j).Source; end end s ends up being a 1 x 36981 structure array by the end. This isn't unusually large for me. Often times I can have structures that are 100,000 in size or more with no problems. I have even run this particular code before many times without incident. I think the other user might be right in that it's a computer problem that's interfering with Matlab, but I don't know where to start with troubleshooting it :(
THIS IS TRIG! HAHAHAHAHAHA
Instead of manually repeating things over and over can you just have a user input of "no, the fit isnt good enough" reset n and re-begin the while loop that way? Also, if you really want help I suggest you format the code so its a bit more readable. Its really hard to tell what its supposed to be doing when its all just one long line isbtead of the standard loop structure... PS adding 4 spaces before the line formats it like it as code like this
&gt; I did initially have IF statements, however it still wasn't completing the loop Are you sure about that? I just tried changing the while statements to if statements and it ran just fine (idk if the answer is correct, but it runs). The issue with your while loops is that while loops will continue on looping forever as long as the condition you specify is true. In this case you specify i &gt; 168, and since you dont change i during the loop i is the same at the end of the loop, making it loop again, causing an infinite loop. On a side note: I typically wouldn't recommend using i or j as loop variables, since you can get them mixed up with i=sqrt(-1)=j if you need to use imaginary numbers for anything. On something like this it doesnt matter, but I still think its good practice to use other variables ("ii" works just fine instead of "i")
FYI: in Matlab, when you type y(n) it means you are trying to access the n^th element of y. this means n needs to be an integer. Alternately, n can be a logical (0 or 1), but since 0 and 1 re both integers this kinda falls into the first category. This is what is means by "Subscript indices must either be real positive integers or logicals." So, next time you get that error you will know what to look for. (Note: the above is not true if you are working with symbolic stuff, but you likely have no reason to do so).
This has to be the most poorly formatted question on /r/matlab I've seen all month. &gt; It's right the form that I wrote the function code? Especially this part when I put the initial conditions of the system in ode45 function, because when I take the equation graphic, seems like don't converge it. Is that English?
The usual method of graphing complex numbers if the form z=a+bi (where i^2 =-1) is to plot the real part a on the horizontal axis and the imaginary part b on the vertical axis. 
that seems smooth, thanks :)
I have noticed if I write: exp(2*x)-((exp(x).*cos(x)).^2) I get the weird output. If I apply the ^2 inside the parenthesis like so: exp(2*x)-(exp(2*x).*cos(x).^2) I do infact get zeros where expected. Weird
I'm not sure whether 4 and 5 are just examples, or if so, what exact behaviour you want in general. If you're happy to have the long direction vertically instead of horizontally, and assuming that the length of the vector is the short length of the matrix, then you can take advantage of linear indexing: M = zeros(5,4) a = rand(1,4) M(round(linspace(1,numel(M),length(a)))) = a 
I have narrowed the problem down. These two functions are the same but give different outpuuts. Does anyone know why? http://i65.tinypic.com/8wkrhv.jpg
You're correct, I had tried IF statements for a previous iteration of the code. But, yeah the answer isn't correct but I can figure that out. The i values are intended to help distinguish certain values for before and after that time as that is when the rocket has ran out of fuel and no longer has a thrust force. Okay thank you, I'll try to use that notation in the future! 
Did the changes you recommended and changed the code a bit further due to a problem with my own maths, and it works perfectly now! Thank you for your help!
Try reading the documentation about indexing and see if it helps. The documentation is very clear. It doesn't make sense for me to duplicate it in a reddit post. Just read it and come back if something still isn't clear. 
M=[diag([a1,a2,a3,a4]) zeros(4,1)]
Guys, can't we put [a link to floating point numbers doc](https://nl.mathworks.com/help/matlab/matlab_prog/floating-point-numbers.html) in the sidebar or something?
Thanks, that worked!
always try to share code we can run. The answer depends on the values of icpt and qf1
Added context to the description!
I saw from your other post that y1 is a function. That makes stuff whole lot easier. two lines of code should suffice, since x does not have to be an index to y, but can just be an array (not corresponding to the x as explained above) generated using linspace.
This is a bad solution, but the first one that came to mind. You could try convolution with a triangle given that you already know the angle of the arrow, draw a triangle and then rotate it to match the arrow head. Then use this function (https://www.mathworks.com/help/matlab/ref/conv2.html) to find the areas that are most likely to be a triangle neighborhood, threshold and voila - arrowhead. Again I don't think this is the most efficient, it just came to mind. 
Line 16 basically means the value at x 1 step ahead of time equals the current value at x + (constant)(current value at x+1 - 2(current value at x) + current value at x-1). Essentially you can approximate the value at x ahead of time if you have current values at x, x+1 and x-1. Lines 18 and 19 are boundary conditions where the value = 0 at both, and line 20 allows for finding values a few time steps ahead. Hope this makes sense.
When I do this the y axis goes up to 25 but the graphs stay at around a peak of 0.25
Hiya Will, hope you're doing well. Try rephrasing what you actually want it to do or post another picture explaining it.
I want all the values on the plot to be multiplied by 100 in the y-axis direction i.e where the peak of the graph is currently roughly 0.25 I want it to be roughly 25. When I try plot(x,u1*100) I get this: http://imgur.com/a/JgWBU whereas I want the graph to look similar to pic 3 above.
Okay, well, then it means you're not actually plotting anything, and all the plotting in your code was done inside your function. So you can either make sure you're plotting something outside your function or stick the plot(x,u1*100) thing inside your function (where you just deleted/commented it out). Your initial assumption of plotting u1*100 is correct. This will do what you want it to do, but there is a bug in your code which screws up the plotting.
We used – matlab figure script: https://www.mathworks.com/matlabcentral/fileexchange/35250-matlab-plot-gallery-wind/content/html/Wind.html only required one more line of code in matlab: ```steno3d.upload(steno3d.convert(gcf, 'CombineResources', true))```
What you have done here is very strange, because the a3 and a4 are not on the diagonal in the traditional sense. If you meant a1 0 0 0 0 0 a2 0 0 0 0 0 a3 0 0 0 0 0 a4 0 Then `M=diag(avec)*eye(4,5);` If you actually meant what you wrote: a1 0 0 0 0 0 a2 0 0 0 0 0 0 a3 0 0 0 0 0 a4 Then I would use `M=diag(avec)*eye(4,5);M=M(:,[1 2 5 3 4]);`
I think both. The grad student that I'm working under suggested to me some people and i guess put a good word in for me. I talked to him this evening and he assumed I had experience even though I haven't used Matlab working for him. It wasn't on my resume.
Definitely. I also suggest asking during the interview what kinds of things they use MATLAB for, so that you can have a better idea of things you might need to brush up on or learn quickly. They'll probably like that.
Except in matlab, you can construct two matrices and do element-wise multiplication on them in two commands. If you're making for loops to do this, you're missing a fundamental aspect of matlab. Which might influence the way you approach the problem, which looks to be what the survey is trying to identify. It could probably be done better, the questions are very low level, but who's going to write a 10 page design doc for a student survey? 
I write something like this, which is wrong I guess: a=zeros(5,5); syms a1 a2 a3 a4 a5 a=diag([a1 a2 a3 a4 a5]); after, I set a1=5; and check the matrix to see if '5' shows up there, it doesnt
Any reason you are building your initial values and grid via for loops? Why not something similar to: X=0:dx:1; Anyway, so it looks like you are doing heat transfer using central differences and Euler implicit time stepping all rolled into one line. I don't know what your M value so I can't give you a definite answer but I'm pretty sure it's due to stability problems. You have a parabolic partial differential equation that you solve using implicit Euler time stepping. Implicit Euler is not universally stable. You'll need to make sure your dx dt combination is stable. I don't have the criterion in my head right now but it should be easy for you to find. Generally speaking your dx and dt values can't be chosen completely independent from each other. For a small dx at some point you will have to decrease dt as well.
&gt; You may not code in english, but you most likely think in english which is our main focus. When I am programming, or thinking about code or algorithms, no, I do not. Most programmers do not. Personally, I would describe the language I think in when I code as a strongly-type-annotated spatially-aware python-like language.
But the fact is that you jumped to for loops, which could be due to the languages you primarily use. Matlab is my daily language, and my first thought certainly wasn't to use loops. It seems like that's the point of the survey. 
Oh man! For the first time ever on this sub i might have some useful code. I had to write code to plot two ellipses and fill in the spot where they overlapped. Maybe that can be of some help? I dont have it here but i''ll look for it when I'm out of work tonight (unless this gets answered before then).
I think its possible if you understand math, logic, and programming. If so, I maybe create something to calculate and plot the lotka volterra equations. That might look though like it is from a class. For something outside of a class, pick a hobby or something that interests you to model. For sure though, they are looking for not only your code, but also how you display the results, so include plots of inputs and outputs. 
depends **entirely** on the type of signal you're talking about. `xcorr` and cross correlation are typically what people use in the context of a *received* signal being matched to a transmitted template delayed in time and degraded by noise. 
the column index is the second one. (e.g. here it is 42 X(:,42)). So when you do d(352,2), you make a second column. 
If you look closely at the post you can find: %numerical_derivative = (f_e1 - f_e2)/(2*eps); %dU(d1,d2) = numerical_derivative which is the "better way" as you suggested to approximate the gradient. But I am not trying to approximate the gradient, I am just trying to approximate sort of change in height due to a change in a single variable in every coordinate separately. I am on purposely not being "accurate" (why I made up the name finite difference, which the term might unfortunately already mean something else...?). The eps I am using is about 0.25 on purpose. But thats besides the point to my question. What I really want to do is improve the performance of this code wether I divide or not by `2*eps` should matter to much.
My mistake, I didn't notice your use of dU on the last line of the loop. I'm still very surprised, however, that it's not giving you a warning about using eps as a variable. I thought it gave warnings about using built-in names as variables. 
It's actually provable that the optimum step size for a finite difference is something like sqrt(eps) for a central FD. I'll look for the derivation. Edit: I found a reasonably good derivation: http://math.stackexchange.com/questions/815113/is-there-a-general-formula-for-estimating-the-step-size-h-in-numerical-different Looks like it's (order of) eps^(1/3) for central differences, and (order of) sqrt(eps) for forward differences. Typical machine precision being about 1e-16, that would be 1e-6 and 1e-8, respectively. So your 1e-6 estimate isn't far off in either case. 
No worries :) Though I agree, its weird that it doesn't say anything about eps. I might email mathworks for support on that? Does it warn you when you try to use it on your version?
Yeah that may help, thanks!
sorry, here is a better picture. -http://i.imgur.com/Yuzt6S8.png 
hey, unfortunately there was some misunderstanding with the picture. here is a clearer one -http://i.imgur.com/Yuzt6S8.png 
Thanks so much! I'm not sure what they do with it, infact the lady told me they mostly work with R but would like to see a script from Matlab just to see what I do know/have done before. It's a lot of data from natural hazards I think. I can double check.
This is just [indexing.](https://uk.mathworks.com/help/matlab/math/matrix-indexing.html)
In general we can't modify f. However, I think that most of the time I am interested in dealing with a function that receives 1xD arrays rather than more general D1xD2xD3x... arrays/tensors. So I think its reasonable to assume you can change the input to be 1xD.
I appreciate the concern, you very well may be right. But that is exactly the point of research, to test a hypothesis whether it may proven true or false. In addition, the software we are using is only able to analyze normal writing. 
depending on your problem, [anonymous functions](https://nl.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html) quite often provide a sollution
So, assuming f is not analytically differentiable, to do this you are going to need to have a loop somewhere. One way you can speed it up by a factor of ~2 is to use forward differences, which will be slightly less accurate but still pretty close. This is: f_x = (f(x+h) - f(x)) / h since you re-use f(x) every time you can calculate that once and store it, meaning you can reduce how many times you need to evaluate f(x) by 50%. The only other thing that I can think of is to consider the way f works and to look for areas where you can re-use previous computations. This may or may not apply to your problem. If it does it can provide a significant speed up though. Example: I recently did something like this in a gradient-based optimization project was working on. In this project, "x" represents a 2D model and f represents an error value. f is calculated by generating synthetics from the model (the data and the model are on the same grid, so point (a,b) in the data corresponds to point (a,b) in the model), comparing it to the real data, and summing up the L2 difference. A given point in the synthetics, say point (a,b), the synthetics only depended on model points between (a-10 to a+10) and (b-10 to b+10) (in my case it wasnt exactly 10, but this is fine for the example). This means that I could calculate a baseline error value and when calculating the error value for a finite difference at point (a,b) I could re-use most of that "baseline" value and only re-calculate everything between points (a-10:a+10 , b-10:b+10). IDK if your code works this way, but you can check if it might by calculating the Hessian (first convert the 2D matrix into a 1D vector) and looking for off-diagonal elements that are exactly zero. If the Hessian at (a,b) is zero, it means that f(x+xa) + f(x+xb) = f(x) + f(x+xa+xb), where xa and xb indicate differences for the a^th and b^th values (like "e" in your code) (note: use forward differences here). When this it true it means that perturbing the a^th element and the b^th element simultaneously is the same as perturbing them independently, and thus there are regions that a perturbation in 1 element doesnt affect the calculation for some other elements.
&gt; Error using contourc Contour level values must be finite. This indicates that your contour levels values must be finite (this should be obvious based on the error text - its not particularly cryptic). Finite means not infinity. Contour level values are defined by psi. Have you checked your min/max values for psi? (Hint: they are -Inf and Inf. This is because you are trying to calculate log(0). This is your issue.) You can fix this by replacing infinity value with Nan, and they will be ignored in the plot. Do this using: psi(isinf(psi))=nan; Place this after "psi=..." and before "contour(...)" Alternately, you could make it so that you dont try and calculate log(o), and this would fix the problem as well.
Try this: https://uk.mathworks.com/matlabcentral/fileexchange/31532-pack---unpack-variables-to---from-structures-with-enhanced-functionality
Terms to look at: Moving average filter / boxcar filter Convolution filtering Low pass filter Gaussian filter It's trivial to write your own version of any of these, once you wrap your head around how they work. Your question is more signal processing, less matlab, but this is what you need to get started. Moving average is the easiest one. If you get stuck farther down come back and I can probably help 
Alright I think I get it but I'm kinda confused how I would use it to solve my problem
I don't have a lot of octave experience, but can you not just use a regular struct array? There's not much point to keeping structs in a cell array like this, and if you use a regular struct array you could just use normal struct syntax. It would still need a loop but it would be a short and simple one. 
First of all, I have to tell you it's probably a bad idea to convert a nicely organized data structure to a flat unorganized data structure. But if it's really what you want... You are referring to B as a struct, with curly braces. You are also trying to assign one element of B to two elements of A, which won't work even if you fix those curly braces. Try reading that line of code and figuring out exactly what you're asking Matlab to do there. Check the documentation for indexing. You could also look at the function numel(), and look at removing the unnecessary use of reshape (also based on what you'll learn from reading the documentation about indexing). 
During my MSc thesis project I analysed the vertical ~~acceleration~~ displacement of a railway track generated by the passing of a train. However, there was some noise in the data recorded in the field. [Here's an image of the raw data](http://i.imgur.com/B7ClYJk.png) obtained from the sensors. The top of the figure shows the whole data, on the bottom there's two zoom-in regions of the same data. I considered two methods for filtering the signal: 1. Moving Average Filter (MAF), which is the **smooth** function in Matlab. 1. Band-Pass Filter (BPF). The first method is a [FIR filter](https://en.wikipedia.org/wiki/Finite_impulse_response) that replaces a signal value by an average of its neighbouring values. The smooth function in Matlab lets you choose how many consecutive values do you want to use in order to calculate the avarage value. Furthermore, the function can be repeated several times on the filtered data too. The result looks like [this](https://i.imgur.com/Iq7vYPi.png). The second method requires to transform the raw data from time-domain into frequency-domain using [FFT](https://en.wikipedia.org/wiki/Fast_Fourier_transform). [The frequency range that is not desired is set to zero.](https://i.imgur.com/Sepi0qp.png) Then, the filtered data is returned from frequency-domain to time-domain using an Inverse FFT. The result looks like [this](https://i.imgur.com/iUjjpnz.png). In the end, I chose the MAF because it was faster to perform. I also used an instrument named [Signal to Noise Ratio \(SNR\)](https://en.wikipedia.org/wiki/Signal-to-noise_ratio) that tells you how "clean" your signal is. There's also a function in Matlab for that. I hope this helps you with your problem.
That's okay, just let those fields be empty in some elements. Alternatively, change the organization of your struct to solve the problem. Instead of using the field name to encode the person's name, make "name" a field. Then all the structs become the same. So you'd have: mystruct(1).person.name = 'amy'; mystruct(1).person.number = 4; mystruct(1).person.name = 'bob'; mystruct(1).person.number = 5; mystruct(2).person.name = 'amy'; mystruct(2).person.number = 3; mystruct(2).person.name = 'cal'; mystruct(2).person.number = 9; Designing good data structures is necessary and *almost* sufficient, for writing good code. You should think about your data structures before you start writing code. 
You missed the part where I explained that, in the presence of noise, there is no such thing as a single precise definition of the inflection point. It is inherently statistical, and all you can do is some form of estimation. Typically the best estimate is a least squares fit. So I'd use a fit. You could also try other things, like looking at first sample where the value exceeds the mean + std of the preceeding samples, or maybe something similar using the derivative. Ultimately these are all still estimates. The exact knowledge of the inflection point is gone forever. Noise and information are fundamental, not something that you can magic away with sufficient computing power. 
I am leaning towards the MAF as well. My only concern is that I still might have a hard time determining where exactly tS is. Also, if I am understanding it right, the higher the signal to noise ratio, the better? 
My apologies for missing it the first time you explained, I think I understand now. Thank you!
If you're do a lot of look-up operations, it might be better to keep the product names in a cell array of strings rather than using structs at all. Then you can just do the lookup operation with strcmp. That should be faster, I think. 
Shit, missed this comment. I figured it out like this. A = zeros(10000, 31397); for i = [1:10000] event = annotatedEventData(i).arrayEventNumber; B = reshape(annotatedEventData(i).rawData,1,31936); A(i,1) = event; A(i,[2:31937]) = B(1:31936); end Which works nicely. And I'm actually working with raw pixel data from some telescopes and we need to convert it to the way I said so it can be put through a different program so we can analyze it better. Thanks for the help!
The problem is that "squareArray" is an array of structures, not a single structure. You can read these using struct(n).field, but matlab likes to export these as individual answers instead of arrays. It worked for area, but because boundingbox has multiple components it wont work like the area does (which is only 1 component). The easiest way I know of is just to pull it out of the structure beforehand. N=length(squareArray); b=nan(N,4) for nn=1:N b(nn,:)=squareArray(nn).BoundingBox; end squareArray = squareArray(b(:,4) &lt; 100); Maybe someone else knows a better way to deal with arrays of structures like this, but I dont (admittedly I dont work with them much).
Based on your other posts it looks like you're moving on trying to throw something together. If you never made an inaccurate statement about your Matlab ability, I would tell them straight up that you haven't really used it in the past. If you told me that and then showed me a script that showed even marginal competence, I'd be pretty impressed. Especially since you said they mostly use R anyway, I would hold that kind of programming aptitude above actual experience, particularly in an intern.
Really? I have 2014 and I use it. Maybe it's part of a too box? 
Is there somewhere I can download that tool box? 
Have you looked at the documentation for plot()? 
Try restoredefaultpath and then the tf command
Thanks for pointing out. This really helped.
You have saved lives of a million people for explaining this so well. Nowhere on the internet I can find such a well put (newbie) explanation of indexing. I just tested red = a(1:50,1:300,1); to see the red channel of my image and after confirming with imtool(a); on the original image, I do now realize that imshow(red); does the following: 1. It shows me the red channel 2. The image is 50 pixels vertically 3. The image is 300 pixels horizontally and if I try red = a(1:50,1:400,1); or red = a(1:50,1:end,1); then I see the image in full width i.e. horizontally. I know there is more to the : which I will learn in from the link that /u/geebr and you posted but this does nicely for now. Thanks a million frames per second :D
The error says that your N variable is a char. You should be passing an integer. Also, you can drop the brackets (so just "for ii = 2:N")
im turning a cell array of structs into a single struct. im doing this becsuse it is the most efficient way i can think of to summarise the data. theres 0.2 m rows it is 4 feature data and i want to variously compare 1 feature to another, summing over the others
How do I pass an integer then? N is supposed to be a random integer variable.
Yeah, I was being stupid before with the error, disregard that part. And I see how the code will produce numbers that repeat and might not even be prime. What I was trying to do was divide each number by the primes that are already in the array P, because they gave us a hint that if they aren't divisible by the previous primes then the number is also prime. I'll admit I dont really know how to do this. Can you explain your hint a bit more? I initialise another variable to 0 (variables?), and if (ii divided by jj) has no remainder, the variable(s?) increase? I get that this means it is divisible by another number, but what do I do with the new variable. Is it just a counter? Im still having trouble with this, but at least I learned you cant just add a number to an empty array/matrix/set/whatever its called
As a side note, avoid using "sum" as a variable, since this is a very common function you will inevitably use many times.
Thanks so much, you've been incredibly helpful, but it doesnt work 100% for me. If N = 9 for instance, 9 still comes up in the array, but 9 isnt prime. 
Thank you! I'm pretty stumped :P 
Size returns dimensions, if A is 3x2 matrix, it will return [3,2]. In our case it was 1x5 matrix and for some unknown reason it was fine until jj should have been 5, then it didn't go into the loop and prime was left at 1, so 9 got in. Length returns an integer, the length of the vector. And why did it work at first and then crashed at the end? I have no idea...
Np, btw, I had a lot of fun doing this. :D
I don't know if the scheduler does any kind of "smart" load balancing. If you're just using parfor or spmd, it may be dividing the jobs evenly between workers (cores). If, for example, each core gets 100 jobs, but the 100 assigned to core 2 happen to take longer to complete, you'll be waiting on core 2 to complete. 
Probably just easier to write and print. In the matter of fact, in the memory matrices are stored columns-first, i.e. as an array of column vectors.
Its one of those cases where the terminology is confusing. The central difference is a second-order accurate finite-difference approximation of a first-order derivative. What you have written is the second-order symmetric difference approximation of a second-order derivative. 
format shortg
I'm not in front of a computer atm, but I think that you just need to change " / " to " . / " since you want term-by-term division. As it is now I think the division is creating a N by N matrix, hence the error message you got. 
I read this the other day. http://stackoverflow.com/q/41707008/5563569 It seems to explain it well. 
The error is...what?
oh yeah sorry... its 'Subscript indices must either be real positive integers or logicals.'
That should remove a cell element, not a row from within each of the cell elements
Sure thing. Once I get back to my computer I'll post more details. But yes, the size of X_new is different from X. The row disappears happens immediately afterwords. I have no idea why. 
I'm still confused. I don't think you answered my question. I also don't really understand what you are trying to do, it seems to be slightly different every time you post it. What is the input that you start with? A cell array of structs? That seems unlikely... where are you getting the cell array of structs from? Is it a csv or similarly formatted file of `Date | Source | Product | Score`? Again, I'm still not clear on exactly how you want to use the data. In your comment, it seems like you want to specify any combination of two or more values of `Date`, `Product`, and `Source`, and get back the sum of all `Score`s in rows that match the values you have specified. However, that doesn't really seem to jive with OP. That makes it look like you want the sum of all values corresponding to the same field, but that only allows you to specify a single field at a time. I don't understand the mapping between ` Date | Source | Product | Score` and what you have in OP. 200k rows is not that much data, it shouldn't be taking terribly long to process. I wonder if a database is the right solution for what you're trying to do; a quick google makes it look like Octave has database interfaces. If you can post a small sample dataset, your baseline processing method, and a few example queries on the sample dataset, I think it would help me help you. (Please use something like a gist or pastebin, if you do decide to post samples).
Your plot isn't blank, it's actually only one point. In your for loop, you overwrite the value of e each time it iterates. In other words, your script does not keep track of values of e. You must express e as a matrix, you can do this by replacing e with e(i) to start. 
Maybe you can plot the matrix in a [*surf()*](https://www.mathworks.com/help/matlab/ref/surf.htmll) and view from the angle perpendicular to the horizontal plane. It might output the interpolation of the pixels each facet touches though. but I'm fairly sure each facet is a separate object in the eps file.
Before the OP was deleted I was going to observe that I thought each cell element of X *was* a row. Otherwise X is a vector, not a 2D matrix. But now that the OP is history, I won't.
Solved the problem myself; the error was in a later part of the code that I didn't put on pastebin. I was too lazy to explain myself so I just deleted the post haha
Undefined variable cmat2 means it cant find the whole cmat2 thing. Don't let matlab confuse you with the word variable, since variables and functions can have the same syntax and thus can be indistinguishable from one another for the parser, especially if they are not there. you presumably have a function cmat2 somewhere, but its not on the path, either move the function to the current folder or use [addpath](https://nl.mathworks.com/help/matlab/ref/addpath.html) to add the folder with that function to the path.
Hm, that's an interesting idea... I'll look into it. Thanks.
&gt; You can even put the addpath call right into your code. yeah. this line is from a script im currently workig on: addpath(genpath('iso2mesh')) iso2mesh is a folder in my current matlab directory (that is, the directory in whcih said script is located). genpath makes sure also all subfolders are included. 
This is exactly why you want a barplot. Histogram only takes one array as input. Use "bar(top_ten_words, top_ten_frequencies)". You will need to use the sort function &amp; indexing to get the top 10. Also for future reference, stackexchange is a much better resource than Reddit for these kinds of questions. 
u isn't specified anywhere I don't think... lol I'm shit at matlab but other than where you've used u in your equation I can't see where matlab would find it to be able to use it
Ahh yeah D: I got nothin
In my lab classes in college we are required to record values off a oscilloscope. So I always record them in excel then later go back an make the plots using matlab. 
Compare to Matlab's tutorial here: https://www.mathworks.com/help/symbolic/solve-a-system-of-linear-equations.html
That makes sense. How do I make Matlab see it as an equation? I'm entering the equation in just like the examples on the help page: https://www.mathworks.com/help/symbolic/solve.html
I've looked through that. The problem is when I enter, syms x y z eqn1 = 2*x + y + z == 2; eqn2 = -x + y - z == 3; eqn3 = x + 2*y + 3*z == -10; copy/pasted from the tutorial, the three variables eqn1, eqn2, and eqn3 get saved as 1x1 logicals with a value of 0.
I vaguely remember using matlab to use my computer's microphone port as a crude ADC. Your signal would probably have to be very low frequency if you arent using a USB interface or connecting to a FPGA or something.
cos2u= cos^2 U- sin^2 U 
Its trig
If you have a system of linear equations you can just use linsolve. In the example you were commenting on earlier, where matlab only set them to logical zeros, if you look at the example a little more, the next step only converts the equations into matrix form. After this you can use linsolve. However, you really don't need Matlab to convert your equations to matrix form! You can do it by hand and then use linsolve. Though I do not know why the conversion is not working on your computer. EDIT: You should remove the symbolic variables x y and z prior to running the example in the help page. If you have set the values of x y and z to something (e.g. x = 1, y = 3, z = 7) and *then* you try to do the equations eqn1 = ...; eqn2 = ...; eqn3 = ...; they will give logical zeros *because you have told matlab what the "real" values of x and y and z should be* thus Matlab only says that this is not true. Double edit: If you want to solve this numerically then you need to use fsolve. It's really simple, but it wont give you the symbolic answer to the set of equations. Assuming you have three equations: x+y+z-1=0, 2x+y-4z= 0, x+y^2 = 0. First you make a function that gives you the output of each equation given the input and saves them in a vector. Each input values (x y and z) are given as one vector, so function f = myfunc(x) f = zeros(1, 3); f(1) = x(1) + x(2) + x(3) - 1; f(2) = 2*x(1) + x(2) - 4*x(3); f(3) = x(1) - x(2)^2; end Then you make a handle to the function and make a random start point (or 0 0 0 or anything you want) and give both to fsolve. fun = @myfunc; x0 = rand(1, 3); x = fsolve(fun, x0); ... x = 0.2500 0.5000 0.2500 Done! 
You want a book called [Turtle Geometry](https://duckduckgo.com/?q=turtle+geometry&amp;t=ffsb&amp;ia=products) which can be had for less than 10USD used. It has many simple code examples which are in Logo, but the examples are clear enough that you can easily implement them in any language. 
bet.
*cough* project euler 253 *cough*
I am having issues with other methods and would like to try a model-based approach, but am confused as to what exactly a steady state function is and how I should implement it as you described?
I'm not sure what you're getting at. I wasn't saying my way was better than memoize. When I did that, *memoize didn't exist*. You said you don't think persistent variables do the same thing... and then described exactly how to use persistent variables to do the same thing. 
Its because you forgot to pass `equation ` to your function...
Your post made it sound like yo were saying "This functionality has been present in persistent variables for years, so whats the point of having the memoize function?" My response would indicate the "point" to be that its easier to implement and maybe more efficient. ou may not have directly said this, but to anyone who isnt familiar with how persistent variables work would likely take it this way. Also, since you said you could do this with persistent variables but didn't really give many details on *how* you do it (or even if you use the same type of "keep track of all the inputs i've tried so far" method that memoize uses). As such, I thought I would post my take on how you might be able to replicate this functionality with persistent variables in case anyone was interested. &gt; You said you don't think persistent variables do the same thing... and then described exactly how to use persistent variables to do the same thing. I said that "this is a little different from how [a] persistent is typically used", not that i didnt think they could be used this way (obviously I think they can be, or else I wouldnt have posted what I did). I wasnt trying to accuse you of saying your method was better or anything like that, just making conversion and giving my thoughts on 1) how you could replicate memoize's functionality with persistent variables, and 2) why it might not be as efficient to replicate it a it is just to use it.
x=5; y=exp(1.9*x)*cos(4*x)
What is x=5; for? Furthermore, it's 19*x
Well, this code I have provided is really from my new understanding of how to do things in matlab. Previously I was grouping everything in structs with a fieldname being the entry for each group-by... and it was taking a very long time, and I was precompuing a lot. I still dont completely think in matlab so I'm not quite getting it all right I originally stored it like that in matlab, then some guy on this thread said the importance of data strcuture so I rearranged. I'm not sure he was right, but I kind of thought, maybe 1 struct-array access vs 5 columnsis more efficient. Turns out, it isn't, it takes almost same time. oh, I may not use structs then, I thought they basically offered array access - the columns are arrays. what is the benefit of bxfun? 
If you want to create an anonymous function: f = @(x) exp( 1.9*x ) .* cos( 4*x ); Then later you can calculate for a specific value by doing: f(1:10)
Thx for your answer &gt; Second, what you are calculating is just the mean of the z_k values seen so far ow yes, I noticed that what I did is incorrect. What I am trying to do is actually calculate the moving covariance as the measurements come in and try to modify R accordingly. My guess is that this is my problem. Any suggestions on how I could do that? &gt;In your case, you aren't given any information about the sensor, so you don't have that prior knowledge about what to use for R Indeed this is my case. &gt;Tune R by hand. Run the script using various values of R until you get something that you think is given you the "most correct" results Actually this code is based on a much more complex situation. I am facing some problems when using a kalman filter for another complicated situation (using C++) and decided to start over again and boil it down to the point where the issue may be. I have tried many values for R there but nothing seemed to work. I modified my code according to your feedback, except the moving covariance part: https://pastebin.com/KQEx5T10 
Wow, there is a lot of anger at a survey trying to figure out if different programmers describe a solution to a problem differently. 
You seem pretty good with Matlab actually (`cellfun`, successful use of `deal`, etc). And your newer data structuring is effective for what you are doing - as I said, I see no real benefit in doing what I did over what you did. I think `[MyStructure.MyField]` is slower than `MyArray(:,MyColumn)` because Matlab/Octave has to actually form the new array, but I wasn't able to observe a difference at these array sizes. The structure version is syntactically clearer, so I would say go ahead and use it if it's working for you. &gt; what is the benefit of bxfun? [`bsxfun`](https://www.mathworks.com/help/matlab/ref/bsxfun.html?requestedDomain=www.mathworks.com) does element-wise calculations on arrays that have different dimensions. Typically, you would get a dimension error, but `bsxfun` will internally do the calculation as though the dimensions matched. For example: &gt;&gt; a = [1 2 3]; &gt;&gt; b = [4 5 6]'; &gt;&gt; bsxfun(@times, a, b) ans = 4 8 12 5 10 15 6 12 18 The same effect can be achieved with [`repmat`](https://www.mathworks.com/help/matlab/ref/repmat.html), but `bsxfun` does it without actually copying the arrays. For large arrays, this is a big performance improvement. For arrays that are approaching the size of available memory, this makes impossible problems possible. However, I think most of the improvement is because `arrayfun`/`cellfun` are sort of slow. They're just loops internally, and you have very large `ismember` calls that have to be repeated for EACH element. I'm getting rid of having to perform all those `ismember` calls by using the information gathered during the `unique` call. This is part of why #3 doesn't see as much improvement - the ismember calls are much smaller (`BBB_entries` only has a few elements). To be honest, the use of the `unique` output and `bsxfun` calls are kind of confusing (but similar to what you were doing with `grouplocs`, so I'm sure you can understand them) and I would probably have done something closer to what you were doing unless I really felt that the performance was killing me. 
You still don't seem to understand the measurement model or the fact that v_k is already included in each measurement (you also did not fix your error in computing the mean. You're dividing by `k` and adding `1`, not dividing by `k+1`). If you really want the moving variance, I would just use `R = var(Z(1:k));`. Do realize that this is going to overestimate the precision of the measurement early on. &gt; Actually this code is based on a much more complex situation. I am facing some problems when using a kalman filter for another complicated situation (using C++) and decided to start over again and boil it down to the point where the issue may be. I have tried many values for R there but nothing seemed to work. In a more general sense, if this data is representative of what you are working with, the is likely that your measurement error is not well modeled as normal. The approach I've seen here is to determine a more complex measurement error model and add states to the Kalman filter that estimate the states involved in this error model. For a simple example, suppose your measurement had a fixed bias: you would then add a second state to your filter that estimated the sensor bias. You would also need to model the process noise describing how this bias can change between iterations. Because your data exhibits what could be described as a step change in bias, I suspect it would be difficult to create a model that both responds to the step accurately and makes good use of the sensor data.
Then you are always passing EQ=1 which is why it always return the same dydx
OK... I think that the result you posted actually looks like it's not far from being convertible to a struct. The thing I can't tell from what you posted is whether the contents of the 'val' cell is a character vector, or what. If it's a character array, you can probably parse it with a relatively simple function. Looking at the link you posted: First, there's this suggestion: x = arrayfun(@(e)e, doc.get('x').toArray()); I don't know which part of this is the function you would use . I'm guessing doc.get('x').toArray() is the part that actually retrieves data from the database, in which case this seems like it should be an identity function, which I don't quite get. Then there's this other suggestion on the same page: cell2mat(doc.get('x').toArray.cell) which seems like it is loading data from the database *as a cell array* and then converting the cell array to an array. Could you post a bit of the code? Specifically, the part that actually gets the data from the database. I'm assuming it's going to look something like "doc.get('x').toArray()" but I don't really know, since I don't use mongoDB.
OP, please copy paste the section of code that is causing the error. It's very difficult to help without that info. Also, num2str is a function that takes a numeric input and converts it into a string representation. It's typically used when you want to add a number in memory to a string. For example disp(["Result is " num2str(answer)])
&gt; It's even fewer than that since you don't care about the order thats an excellent point...I had completely forgot about that. I'd agree that with only ~2.5 million possibilities (and considering each possibility takes very little computation) then OP mine as well just Brute force it and check them all
You can specify colour (among other parameters) in your script but the easiest way, if you're only doing a couple, is probably to open the Property Editor once your figure has been drawn. Click on the line (or bar) and the lower part of the window should give you some colour options. 
sometimes it helps defining the variables in the function name. idk if itll help but it might. Like this: eqn1(x,y,z) = 2*x + y + z == 2; You can also try defining the functions in syms. syms x y z eqn1(x,y,z) eqn2(x,y,z) eqn3(x,y,z) eqn1(x,y,z) = ...
Thanks for your answer. I am not sure I understand why I will not be able to find a soution X(t) and Y(t)? I am just looping over all t-values. 
&gt; I am just looping over all t-values. So this could work, although if a single t value has multiple solutions, which solution you get will depend on your choice in initial x0 and y0 values. One thing you could do that should significantly speed up the problem is to use the "SpecifyObjectiveGradient" option. This means that instead of supplying the objective function you will supply the jacobian. fsolve needs the jacobian to do the gradient-based optimization that fsolve uses, but it finds the jacobian using fiite difference. This means that to find the derivitive of an integral it numerically integrates the function at f(x0,y0), f(x0+h,y0), and f(x0,y0+h). If you could feed it the derivative of your equations it would be able to find the jacobian with a single calculation that doesnt require numeric integration (or, at the very least, with 1 less numeric integral to perform). I imagine that, since you have integral equations, finding the jacobian might not be too hard to do. That said I would still try using the symbolic methods (dsolve) if you havent yet, and look into numeric solvers that arent gradient based ([this](https://www.mathworks.com/help/matlab/numerical-integration-and-differential-equations.html) page has some links that might be worth looking into). If dsolve could manage to find a symbolic solution that should be the most accurate and probably fastest way, and would guarantee all solutions are found.
It would help if you post the code you've tried to use so far and the errors you've got from using it.
Have you looked at the [documentation for the gradient function](https://www.mathworks.com/help/matlab/ref/gradient.html)?
ok, ive managed to get a toolbox (IoSR Matlab Toolbox) that has some pre written functions in and have managed to get it to return a variable which contains the values. What would I put in the plot(x,y) function to get the values shown as X 20-20,000 and y as the dB value.
&gt; What would I put in the plot(x,y) function to get the values shown as X 20-20,000 and y as the dB value. I mean, it sounds like you answer your own question here.... You want X to use the variable that has 20-20000? Thats x. You want Y to show the variable that has dB values? Thats y. This seems really obvious, but thats pretty much all I can tell you without more info. If thats giving you trouble for some reason check out the [documentation for plot](https://www.mathworks.com/help/matlab/ref/plot.html)
What is S? You have literally not mentioned "S" up to this point... If S is just a number you want to label your points you can use "text" to add it. If S is another variable you want to plot you can use a 3d plotting function (e.g., plot3) or a colored 2D plot (e.g., pcolor, imagesc, contour)
Ive not tried you code, I'm only phone but... Can't you just create local functions at the end of your main function. Not nest them. That's how I do it, normally works ok. I.e. Function main() Blah blah blah End Function out1 = local1(in1) Bit more blah End Function out2 = local2(in2) Much more blahing End Edit: formatting 
Thanks but I figured it out through whos. Turns out using the name "years" messed with the code making it think i was talking about a time unit
I think x=[1 2 3] is horizontal and x=[1;2;3] is vertical. Space and comma are horizontal, ; is vertical
&gt; I think &gt; &gt; x=[1 &gt; 2 &gt; 3] &gt; &gt; is horizontal It's not. You can type it into the console and check... size(x)=[3,1]
Thank you so much!!
Smart use of logical indexing can get you pretty far in Matlab. Imagine having a 52x2 array `deckOfCards` (`dOC` from here on). Column 1 is 1:13 repeated 4 times; these are the values for each card. Column 2 is 1,2,3, or 4 for each card's suit. You could logically index into this quite easily. `dOC(dOC(:,1)==6,:)` shows that 4 cards have value 6. `dOC(dOC(:,2)==2,:)`shows that 13 cards have suit "2". There's your condition handled, just divide as appropriate to find a probability. You could remove cards from your deck with `dOC(cardToRemove,:) = []`. You could add cards with `dOC = [dOC; newCardValue newCardSuit]`. You could rearrange rows to 'shuffle' your deck. It naturally has a 'top' and 'bottom' with `dOC(1,:)` and `dOC(end,:)`. Alternatively, you can probably come up with closed-form expressions for these probabilities that can be entered directly into Matlab. Bayes' Theorem can be so useful for conditional probabilities.
I would do this: Store the deck as a 13x4 array, representing card# and suit. Store the cards drawn as a nx2 array (for n cards drawn), where the 1st dimension is card number (ranges from 1-13) and the 2nd is suit type (rages from 1-4). You can then use logical indexing to determine the properties of the hand. Example: % X = your hand --&gt; size(X)=(n x 2) for n cards % # face cards in hand: sum(X(:,1) &gt;= 11) % number of cards of a given suit type: N = 1; % (or 2,3,4) sum(X(:,2) == N) % # of 7's that are hearts (assume this is he 3rd option for suit type) sum(X(:,1) ==7 &amp; X(:,2) == 3) etc. To get probabilities then divide these sums by the number of cards in the hand.
Thanks I will first try the loop thing, because by my calculations it should generate all the graphs I need in a day or so. Slightly off-topic here, but do you by any chance know how to make fsolve return NaN if the solver concludes with anything else than "equation solved"? EDIT: Nvm I got it :)
Haha that is brilliant!
There's to much to try to figure out for me to give you a code example, but the most straight forward way to implement a (confusion matrix)[https://en.wikipedia.org/wiki/Confusion_matrix] would be two nested loops going over the classes for ci = 1 : nx; for pi = 1 : nx ; confM(ci,pi) = number of times class pi is prediced when it was class ci actually end end unrelated:you need a whiteline after a paragraph is you want to have your code show up as code. and you can also edit your posts.
&gt;I am also not sure if the multiplication of these two would yield the same result as doing them separately. I am sure of this. it's due to a property of matrix multiplication that says that the order of multiplication does not matter in this sense: (A * B ) * C = A * (B * C) 
Thanks for the reply! The figure() call itself is throwing an error, so I don't have a structure to call print with.
I think the result would be the same, but will depend on order of operations (just like it would if you did it separately). i.e.: rotate then resample will be different than resample then rotate.
 a = 0; for c = 1 : nx; for y = 1 : nx ; confM(1,1) = a++; end for y = 2 : nx; confM(1,2) = a++; end for y = 3 : nx; confM(1,3) = a++; end end for c = 2 : nx; for y = 1 : nx ; confM(2,1) = a++; end for y = 2 : nx; confM(2,2) = a++; end for y = 3 : nx; confM(2,3) = a++; end end for c = 3 : nx; for y = 1 : nx ; confM(3,1) = a++; end for y = 2 : nx; confM(3,2) = a++; end for y = 3 : nx; confM(3,3) = a++; end end c is the predicted, y is the information I'm trying to compare. I'm trying to make a 3x3 matrix because there are 3 types of flowers. The error I'm getting is confM(1,1) = a++; | Error: Expression or statement is incomplete or incorrect. Help?
Two things: ++ operator does not exist in matlab. use a = a+1 and subsequently confM(...) = a ; Why do you have 3 loops with nested loops withouth using their indices!?!? It seems you kinda missed the point on how a loop is supposed to work. Look at my example, and see where the iterators (pi and ci in my case) come back in the code. Try to build two nested loops that just displays something and figure out how loops are supposed to work. 
That's giving me another error, something about maplemex. I think the Matlab version I have is not up to date or is maybe missing some of the packages and addons I need. I'm gonna stick to using anonymous functions.
Me, too. I liked that so much I made [my own webpage version](http://www.paulkaefer.com/why) that you can refresh to see new versions.
Thank you for the response, I got an image after plotting yay but its a cos function :/ My teacher would talk about plot3 but hasn't given much detail you wouldn't happen to know how to use that? And I'm not familiar with "format text" I'm sorry I literally just downloaded matlab 1 month ago and have no background in coding :P
I was kind of hoping you would figure this out on your own, since I dont want to do your homework for you, but I'll help you out. What you are plotting is correct. You need to think about what you are actually plotting though: theta vs. u. Not x vs. y. Assuming "uSol" is the distance between the 2 bodies and that one body is stationary, the "ellipse" you are looking for is generated by: t=[0:pi/100:2*pi]; % theta_range r=feval(matlabFunction(uSol),t); % radius at each theta value in t x=r.*cos(t); y=r.*sin(t); plot(x,y) Note: " .* " means you do term-by-term multiplication rather than standard matrix-type multiplication. If you wanted to better describe the actual motion, you could calculate how long it took to get to each point (points are sampled regularly in angle, but since the orbit is elliptical and not circular time wont be uniform. You could use the time estimate as the 3rd axis in plot 3, which would give a corkscrew like graph that also describes when the object was at each location. This would look identical to the 2-d plot when viewed from above. EDIT: also, you could use plot3 if the orbit is not in the same plane as your reference coordinate system. You would then just calculate (x,y,z) based on theta, radius and how the orbit plane is tilted.
Thanks I appreciate it! I won't be taking anymore of your time.
Glad I was able to help!
Curley brackets mean you are accessing a cell, not a matrix. I cant tell if you're asking what these things in fprintf do, so in case you are: Look at the [fprintf documentation](https://www.mathworks.com/help/matlab/ref/fprintf.html#input_argument_d0e310396). The %s and %f symbols insert strings and floats into the text (defined by the stuff at the end outside of the quotes). The \n is the newline command (like pressing "enter" on the keyboard). EDIT: I think I misunderstood what you were asking (sorry, I was speed reading). I will post a new comment.
You can create and save image files without the jvm, just not display them. Not figures, though, you're right. So I guess my question is can you create a color bar with only image manipulation calls.
When you say that you have used them both, are you referring to Ryzen specifically or to older AMD processors? I feel like the difference is going to be bigger than a 1.6% difference, much bigger in some use cases. In parallelized codes Ryzen should be better. BUT, in codes that rely heavily on matrix operations and are not parallelized, I suspect that there could be a decent difference. I could be wrong though too. I actually care about efficiency, because I routine work with large datasets. It's not uncommon for a code to take days or weeks to run. The difference between something taking 0.1 seconds and 0.15 seconds is big when you run it 10 million times (or more) as part of a project. 
If you don't specify the X values, [`trapz`](https://www.mathworks.com/help/matlab/ref/trapz.html) assumes points are spaced by 1. So in the first example you are actually integrating something like cos(2pi x/9) exp(-2pi i x/9) from 0 to 9. You need to pass both the X and Y values, like `trapz(x, cos(x).*exp(-1i*x))`. Or, since you have uniform spacing, you could instead pass that as a single number, rather than the entire array: `trapz(x(2) - x(1), cos(x).*exp(-1i*x))` **Edit**: formatting (backslashes aren't needed inside \`\`) 
you are right! I modified it but an surprised by the results: I actually expected a totally different kalman gain. I expected that ath the moment of the "spike", the kalman gain would drop very low indicating the measurement is probably totally incorrect while the rest of the time it would be a high value (near 1 for example). See output: www.imgur.com/a/YXA3W See code: www.paste.ubuntu.com/24319467 Any idea's why I am not seeing what I expected? 
Thank you. 
One of the things I also notice is that you're calculating the variance as the distance from the mean of x. Shouldn't it be with respect to the trend (so your prediction)? I'm afraid I don't have the time to look too deep into it, but it's one thing that seems odd to me.
Sorry I didn't post it! Here was my attempt: clc clear all a = 300; %radius in um D = 0.5; %diffusion coefficient in um^2/s k = 5e-5; %reaction rate constant in s^-1 t1 = 3600; %time in seconds for first incubation t2 = 1; %time in seconds for second incubation N = 5000; %iterations Lsum = 0; for i = 1:N for j = 1:5:a %iterations for position in radius %delta term d(i) = D*(i^2)*(pi^2)/(a^2); Lsum = Lsum + (((-1)^i)/i)*sin(i*pi*j/a)*exp(-(k+d(i))*t2)*((k+d(i)*exp(-(k+d(i))*t1))/(k+d(i))-1); L2r (j) = 2*a*(pi*j)*Lsum; end end When I mentioned that I got errors I meant that the results I had were incorrect. So I know that something is wrong with my code, so I'm pretty sure it's wrong in a few ways. What do you think?
There are tons of functions in matlab and you can also make your own functions. Do you know how you would go about sorting which columns you want? Based on that you can make your own function with specific parameters for sorting your columns. 
In your case, it is not unrealistic to use all 42 predictor variables. Generally speaking, with any machine learning model (ANNs included) the principle danger to be avoided is 'overfitting', which is when your classifier (whether it's an ANN, SVM, whatever) learns 'rules' that actually only apply to the data used for training. Suppose you showed an alien 3 pictures of men and 3 pictures of women, and then ask the alien if person X is a man or a woman. But suppose all 3 women happened to have brown eyes, and all 3 men happened to have non-blue eyes. The alien might think that eye color is the best way to tell men and women apart. In general, the best way to avoid overfitting is to have a lot of training data. It also helps to avoid using training data with a lot of predictor variables and/or avoid letting the classifier have too many parameters. But, critically, the more training data you have, the more parameters your model can have / the more input variables you can use safely without getting overfitting. So, given that you have a huge number (~ 5 million) of data points, and only 42 predictor variables (by contrast, a commonly used VERY SIMPLE image dataset, MNIST, consists of 20x20 images, for **400** input variables), you should be just fine using all 42. Most of the more complicated variations on the ANN (convolutional networks, recurrent networks) are used to deal with cases where there is some sort of structure to the input data: Spatial structure (e.g. CNNs for image classification) or temporal structure (e.g. using RNNs to process speech audio). Your data has neither of those, so you do not need to worry about that. You can use a straight-up vanilla ANN. In fact, this is probably just about the simplest type of task for an ANN to learn. I would recommend starting with the documentation for the "patternnet" command. I would say start off with a single hidden layer, with a small number of nodes. When you actually train the network, and the training interface pops up, open the "performance" and "confusion" plots and watch how they change during the course of training. You could even start off by using a network with only 1 hidden layer, and only 1 nodes in the hidden layer. When you train it, it will probably improve for a little while and then stop improving, and its final performance (visualized as the 'confusion' plot) probably won't be that great. Then try using a net with 2 nodes in the hidden layer. Then 3 or 4. They will probably manage to reach better performance levels. How many nodes can you have before it stops improving performance, or the network starts doing substantially worse on validation / test data than it does on the training data? Last note: I don't know if your data has balanced classes or not. Sometimes, classifiers don't train well if some classes are way more common than others. If this is the case (your network keeps assigning EVERYTHING to the same class), you need to use error weights. Read the documentation on using error weights for neural network training.
TLDR, but i can [point somewhere](https://www.reddit.com/r/matlab/comments/5s5xfj/codeshare_fem_bridge_truss_structure_deformation/)
Yes! This is solid gold! Thank you so much! I guess my biggest worry is the amount of time it would take to train a data set this large. It's why I wanted to pare it down. I'm also not sure how to find and deal with redundant data. I worry about the low ram and cpu overhead on my home machine. A few other questions, a few of the columns including the last one uses string data. Will I have to convert that for the Matlab ANN? Is there a way to have the network ignore the last column except when it's checking it up against the confusion matrix (since that's that's were the categories for defining the data is)? 10% dataset [here](http://kdd.ics.uci.edu/databases/kddcup99/kddcup99.html).
&gt; A few other questions, a few of the columns including the last one uses string data. Will I have to convert that for the Matlab ANN? Yes. How depends on what kind of string data. If it's essentially a list of enumerated types (e.g. ["cat", "dog", "bird", "dog", "bird"]), then you will need to convert it to a numerical representation. Whenever you have a categorical variable, you should format the variable using "one-hot" representation for an ANN. This means that if there are 3 categories, the variable should be represented by 3 different variables, which are either 1 or 0. So if you have a string array that is like ["cat", "dog", "bird", "dog", "bird"], then you need to turn it into a kxn array, where k is the number of categories and n is the number of samples. Example: A = ["cat", "dog", "bird", "dog", "bird", "dog", "cat"]; % This is an array of strings. Read up on the differences between character vectors, cell strings, and strings in MatLab. Acat = categorical(A); % This uses the "categorical" function to turn A into a *categorical* array, which represents elements in the array as one of a set number of types Anum = double(Acat); % This turns the categorical array into its numeric equivalent Avec = ind2vec(Anum); % The ind2vec function takes a row of numeric values that represent categories, and reformats them in "one hot" coding. Try copy-pasting that in MatLab and see how each step works, and read the documentation on the relevant functions. &gt; Is there a way to have the network ignore the last column except when it's checking it up against the confusion matrix (since that's that's were the categories for defining the data is)? You need to take the "predictor" variables (i.e. in this case everything but the last column) and the "output" variable (your last column) and make them separate variables. Here's the simplest way to do that. Suppose X is your data matrix: X = X.'; % This flips X around so that rows become columns and vice versa. For training NNs in MatLab, columns should be different data points, and rows should be different variables. inputs = X(1:end-1,:); % This says: let 'inputs' be the first row through the next-to-last row of X, all columns targets = X(end,:); % This says: Let 'targets' be the last row of X, all columns Note that you would then still need to turn 'targets' into one-hot coding. That will get you started. Read lots of MatLab documentation. It is VERY thorough. It is your new best friend. 
Thanks for this. I won't be home for another 8 hours, but I'll definitely put it to good use when I do.
Couple other tips, since I'm waiting for a script to finish running... You mentioned wanting to use a subset of the data, so it doesn't take forever. Here's how you can do that. Let's go back to the last example I gave you, where X is your data. The first step was transposing your data matrix so that each column is a different datapoint (aka sample). X = X.'; Next, you could find out exactly how many samples you have. n = size(X,2); % dimension 1 is rows, 2 = columns, so size(X,2) is the number of columns Now, suppose you want to slim it down to only one tenth the size. Xsubsampled = X(:,1:10:end); % This says: Let Xsumsampled be every row of X, every tenth column starting with the first column That gives you a data matrix with one tenth as many samples.
I've used older AMD processors in the past, think the last I used was a bulldozer a while back. During which I've used intel in school labs. I switched to intel on my own personal desktop afterwords, and may consider going Rhyzen for my next build a few years down the road after I run my current rig into the ground. &gt; The difference between something taking 0.1 seconds and 0.15 seconds is big when you run it 10 million times (or more) as part of a project. If this is the case, I would probably go Intel. Rhyzen may be good in the future, and better in some applications. It probably won't happen for a while. That being said, I don't think Rhyzen is that bad off, but if you have code that takes that long to run you may find the differences more noticeable in the long run. Were you the guy that was running some CFD code that posted here in the past?
Not even close, but I'll mention horzcat.
Can you post what code you've tried so far?
Not a bad function name, but I always laugh when I come across removecats.
I'm not building a computer for a month or 2 anyways, so I have a little more time to wait for Ryzen to get the bugs out. I'd rather choose which to buy based on actual benchmarks rather than guessing. I'd tend to give intel the advantage in general over Ryzen, but the whole "having twice as many cores and threads" things really makes things less clear cut (especially since those large projects I referred to are typically parallelized). &gt; Were you the guy that was running some CFD code that posted here in the past? No, that was someone else. My time-consuming projects (the ones that take days or weeks to run) typically deal with seismic data analysis and seismic modeling.
I tried that, it just returned the same output.
&gt; it's obvious from the output that the derivative isn't impossible, so I'm really stumped as to what it's doing in that last expression. It giving you back the input, as simplified as it can make it. psi(m,eta) calls (chebyprime(m+1,eta)), which is the derivative of chebyshevT(m+1,x). Based on your inputs, this is effectively the derivative of chebyshevT(5,3/10). However, it seems to be giving you the answer in MuPad notation ([see the documentation for D in MuPad](https://www.mathworks.com/help/symbolic/mupad_ref/d.html)). Why its giving you back a MuPad function idk, but that seems to be what it is doing.
There is also cummax and cummin. My favorite which is not a bad one is probably fzero.
Hrm. OK, that's pretty confusing to me. I assume the "find" is the actual query to the database? This is an overloaded method for some "mongo database connection" class? If so, I think that maybe the solution in the link you posted was actually intended for use with a different Mongo DB connection setup, because it looks to me like the method for querying the database was fundamentally different in that example to what you just posted. I'm also really confused, though, because I don't see the variable "query" being passed as an argument anywhere, so I'm a bit confused about how the query actually gets executed. Can you show me a link to documentation for the specific tool you are using for interacting with MongoDB? [edit] It looks like you're using this? https://www.mathworks.com/matlabcentral/fileexchange/52726-matlab-interface-to-mongodb?focused=5288096&amp;tab=example This appears to have a number of issues... If possible I would advise finding a different MongoDB interface to work with. [edit] I found this: https://github.com/gerald-lindsly/mongo-matlab-driver but it hasn't been updated in almost 5 years.
Lol! I'll need to start using cummin with my cumtrapz.
Oddly enough, when I get rid of the m+1 and just pass m it works perfectly, albeit with an incorrect output value.
In psychtoolbox there's "getsecs" 
I'd rather GetSecs than WaitSecs
Programming needs practice, you won't learning just by copying and remembering code someone else wrote. You have to solve on your own as many problems as you can. There is a shitload of resources online. Start with the easy ones and work your way up.
Think more about *why* you take certain steps and less about *how* you take them. Figure out what a problem is asking, what you need to do to solve it. What helps me sometimes is working backwards. I may want a script that gives me a vector of some values as an output. I'll ask myself, what do I need to compute that vector? Do I have everything I need? What needs to be computed before that last vector? Continue the thought process until you get to a point you know what you're doing, then work back down.
I wonder if something like this would work then...Use "m" for everything to the right of the equal sign but then add a new dummy variable. Something like: q(m)=m+1; psi(m,q,eta)=cheby(q,eta)+((-1)^m)-((cheby(m,eta))+1)*(chebyprime(q,eta)); I dont see why this would work when your original way wouldnt, but I also dont understand why your original way is giving a MuPad function output, so its worth a shot I guess.
In addition to what /u/CelestialStructure suggested, you can use the "reshape" function. However, you'll have to be careful since Matlab tried to fill up matrices starting by filling up the 1st columns, 2nd column, etc. (this means you have to transpose the matrix) Using reshape would be like this: out2=reshape(out,[5,2])';
This is actually something I hadnt considered. I'll see if anywhere near me has a display model with a Ryzen chip. I feel like its doubtful since its so new (and still has some bugs that need to be worked out), but i'll see if I can find a system to test it on. Thanks for the suggestion.
No problem, happy I could actually help.
And in case you were wondering, the shortest is, of course, "Why not?"
Yep, this is a function on TI calculators as well.
My god? What kind of assignment is this?? That's very advanced MATLAB.
So, a couple of ideas: 1) You have "syms eta m," types out....is the comma there in your actual code? If so remove it. 2) Define all the functions in the "syms" statement, like this: syms x n cheby(x,n) chebyprime(x,n) etc... 3) Have you tried shutting down matlab and restarting your computer? I know its the stereotypical advise but I've had a couple of strange issues with Matlab over the years that were legitimately just random bugs and this fixed it. Other than that I have no ideas...you dont seem to be doing anything thats unusual that should be throwing this error (that I know of)
Matlab is reading sum as a symbolic variable because you are calculating it using t, which you've designated as a symbolic variable. The better way to do this is to define the as an array of times with a fixed interval, if you don't need a symbolic answer. I would write t as `linspace(-pi, pi, 1000)`, or something along those lines. 
&gt;Also, having a class and a function with the same name is ~~probably~~ certainly a bad idea.
Programming is all about breaking a big problem into lots of tiny easy problems. First work out what the big problem actually is and the broad steps required to solve it. (The 'why'). Then break those steps into smaller ones until it all works together. Most of all, don't lose sight of the big picture as you struggle with the detail of data types etc... Learning to split your code into distinct functions will help with this, rather than writing a long stream of consciousness. Enjoy your coding. :-) 
Try to start using Ctrl-L in bash to clear instead. This also works in MATLAB, so you won't accidentally clear your workspace.
So, I dont know why this happens, but I played around with the fitting function and it seems that there are errors introduced when dealing with very small values of y. Must have to do with the calculations used in the fit starting to require values smaller than the machine precision and thus giving rounding errors in the calculations. Anyways, try this: y_boost=1e5; f=fit(x,y*y_boost,'gauss1'); % preforms gaussian fit f.a1=f.a1/y_boost; C=coeffvalues(f); % Coefficients of gauss fit stored in array C figure(1) plot(f,x,y) axis([-5 5 0 1.5*max(y)]); Note: this clears confidence interval information for "a1", so record this if you need it. 
Cumulative sums, so if A=[1 2 3 4 5 6 7 8 ....], cumsum(A)=[1 3 6 10 15 21 ....]
Ah, fantastic! That works great, it is fitting properly now. Odd that matlab doesn't like small numbers, need to keep that in mind for the future.
Matlab will provide installation support even for student license holders. They helped me out a lot when I was installing on mint.
Ugg, thanks. Was hoping to avoid such an ugly method. Looks like i don't really have much choice though.
A while loop continues as long as its argument is true. (do all the things * while * this stuff is true). If robot_x== goal, the first term of the &amp;&amp; operator evaluates to false, and the whole &amp;&amp; part evaluates to false too and your while loop stops. || and &amp;&amp; can be really tricky to get your head around when you first start. I try to make a [truth table](https://en.wikipedia.org/wiki/Truth_table) in my head to undersand what exactly happends. And if tis to complicated I used to do it on paper. and an unrelated note, auto indent: ctrl+A, ctrl+I edit: try to make your logic simpler. you dont want it to be at the target. I'de check if its at the target (with ==), and continue otherwise. 
Well, 9200 isn't evenly divisible by 205 so you'll have to think about how to treat the last window which will have too few entries. The lazy method would be to just limit your N to the next smaller evenly divisible number, effectively cutting of a few samples from the end. So if N/205 is 44.635... you just set N to 44\*205 If your signal were periodic you could instead have it wrap around to the beginning. Since you are later doing a FFT of those windows you could probably also just pad the signal with zeros if just a bit of the window is missing.
Here's an example for the 0-200Hz sweep signal of 1s length. clear fs = 1e3; % Sampling frequency [Hz] dt = 1/fs; % Sampling time [s] N = 2^9; % Number of FFT points t = 0:dt:1; % Time s = chirp(t,0,1,200); % Sweep signal 0-200 Hz f = (1:N/2+1)*fs/N; % Frequency clip = 205; % Clip size (number of points) X = zeros(clip, length(s)-clip); % Clips matrix Y = zeros(length(f), length(s)-clip); % Spectrogram for i = 1:length(s)-clip X(:,i) = s(i:i+clip-1); tmpS = fft(X(:,i), N); Y(:,i) = abs(tmpS(1:N/2+1)); end imagesc(t, f, log(Y)) grid on xlabel('Time [s]') ylabel('Frequency [Hz]') 
But surely the only time the whole expression would be false if the robot_x AND robot_y are equal to goal_x and goal_y respectively? Replacing &amp;&amp; with || seems to have fixed it but logically to me that makes no sense because that's OR rather than AND. 
It's generally poor coding practice to overwrite function names as variable names for this reason. 
"A AND B" is true only when both A and B are true. If either is false (A is true and B is false, or vice versa), "A AND B" is also false. For an OR statement, if either is true (one of A or B is true), or if both are true, then the entire OR statement is also true.
Okay cool so it would continue until both are not true. I think its having both conditions ~= that threw me. Thanks for your help. 
And it's bad language design practice not to raise an error when you do so. 
Open your Simulink model, then in the Simulink window click: File-&gt;Model Properties-&gt;Model Properties When the model properties window opens, go to the Callbacks tab. Any code written into the StartFcn callback space will execute when you press run before the model evaluates. Code written in the StopFcn will evaluate after the simulation ends. In these boxes you can also run entire scripts, so if you were to put: run('myscript.m') in the StartFcn callback space, Simulink would run myscript.m prior to running the simulation, as long as myscript.m is somewhere MATLAB can find it (in the current path, or under one of your other paths, etc). Look through the Help file there if you want to know what the other callbacks do.
Fantastic, that seems to be the right directoon. Thankyou! However, I tried it and it doesn't seem to be outputting any of the simulation required variables to the workspace...
&gt;Odd that matlab doesn't like small numbers Regression doesn't like small numbers, or more precisely it does not handle large differences in the data (e.g. x vs y). In least-squares regression this causes the normal matrix to becomes "ill-conditioned". [The first page here](http://engrwww.usask.ca/classes/EE/840/notes/ILL_Conditioned%20Systems.pdf) explains the problem nicely. 
You don't want to be going from n = 1:inf otherwise you'll never leave the loop. Secondly you need to set \tau to be from 0 -&gt; 0.2, and you'll need to define the number of points in the array (hint use linspace). I'm not going to tell you verbatim on what to do because of you don't figure it out yourself you won't learn anything.
This largely mimics what others have said, but I'll give me own thoughts on this. There are 2 main aspects to programming: the syntax, and understanding *how* to get a computer to do what you want it to do. The syntax will become second nature eventually, and you can always look up syntax, so I would recommend focusing of *how* to perform common tasks. A lot of the time, the *how* is similar to how you would do something if you were doing it on paper....you just need to take care to explicitly define every step you would take. And if you want to perform the same task on multiple different data points, then just repeat the task in a loop. Code ultimately comes down to stringing together a bunch of simple tasks in order to produce whatever result you are trying to get. The thing you need to practice is how to break down a task into multiple individual operations that you can do one after another to achieve your desired result. Start small - once you understand ho to do simpler things then you can use that knowledge to break down more complicated tasks.
Dont feel too bad lol...Missing a parenthesis is an easy error to make, and since Wolfram auto-corrected it its easy to miss since you still got an answer. At least you know your code is correct now!
Congratulations. Good luck. 
What I would do is create an array that has the differences between successive fw-values. Don't forget to divide it through ∆x. This will result in your slope values between each two successive fw-points. slope = diff(fw)/(Sw(2)-Sw(1)); Now, you will have the difference in fw-values, but this vector is only 59 elements long. Also, these are the slopes between the line segment fw(x_{i}) and fw(x_{i+1}), thus the slope at (x_{i}+x_{i+1})/2. To get the slope at the input x-values, I'd use slope = spline(Sw_2,slope,Sw); Look for the documentation if you need help on this command. Where Sw_2 is Sw_2 = Sw + 0.5*(Sw(2)-Sw(1)); Sw_2 = Sw_2(1:end-1); To get the intersects with the y-axis, you simply have to calculate fw - slope.*Sw; plot(Sw,slope(i)*Sw+intersects(i)) will plot the tangent line at the i_th point. Hope this helps! 
Yeah you're right, sorry. I'm a bit rusty. Edited my comment to make the correction.
i try both all "&amp;&amp;" and "&amp;" nothing change
Hey when I do the second one I get this Conversion to double from struct is not possible.
I think you need to look at your data again. Literally 100% of your PP values are between 40 and 52, and literally 100% of your TP values are under 20, meaning that (based on your data) 100% of your data should be classified as NS. If this is not reasonable then you probably have an issue with the data.
omg you were right. when i change data my program works very well. ty very much
I'm fairly certain this shouldnt make a difference. The only difference between "&amp;&amp;" and "&amp;" is that "&amp;&amp;" will stop checking subsequent conditions if the 1st one isnt true. While it is typically beneficial to use "&amp;&amp;" and "||" (rather than "&amp;" and "|"), its only really required (as far as I know) when the first check *muct* be true in order for subsequent checks not to throw an error (which isnt the case here). One example I can think of is if you are checking the inputs to some function, and you want to assign a default value to the input if 1) there arent enough inputs, or 2) the input is an empty variable. if nargin &lt; N || isempty(varN) varN=(...) end In this case you need "||" rather than "|", because if there arent enough inputs then "varN" doesnt exist, so trying to check if varN is empty throws an error. Note: one time where you have to use "&amp;" and "|" is in logical indexing. For example: x(x&gt;0 | x&lt;10) will work, but x(x&gt;0 || x&lt;10) will throw an error. PS I'm not trying to correct you to be mean or anything, just trying to share some knowledge :)
Glad to help.
They were loaded as structs for some reason so I just called each matrix in the struct to combine them and it worked out.
Like just the planets and the sun revolving LOL, i hate this project so much. I literally did it in simulink but he doesnt want it there
Yeah, I plan on finding an icon editor or just doing it in paint. It would be nice if Mathworks added that feature natively.
Would I do all this in a loop? Also, is it right to have a "for" loop AND "if" loop going on or is that unnecessary. Thanks!
There is absolutely no need for a GUI to accomplish this project. You can do the whole thing with a figure window and command line inputs. 
When you call the function (in your main script) do you suppress that too? I'm assuming that you dont, which could explain why you are still getting an output. Example of what you should be doing: % Setup code for iter=1:50 [t, w, h] = popgrowth(f(iter),a,b,alpha,n); % Do stuff end EDIT: actually, i think /u/neilmoore found what is causing it. This: w(j+1) = w(j) + h*f(t(j),w(j)),j = (j + 1); Should be this: w(j+1) = w(j) + h*f(t(j),w(j)); j = (j + 1); However, if you also aren't suppressing the call to the function that would cause extra output as well.
The comma between `w(j+1) = ...` and `j = (j + 1)` separates two commands on the same line, without suppressing output of the first command. You probably want to change it to a semicolon. See [`doc punct`](https://www.mathworks.com/help/matlab/matlab_prog/matlab-operators-and-special-characters.html) for more information.
partyanal http://www.engr.uky.edu/~donohue/audio/Arrays/MAToolbox.htm
[Not oldschool enough it seems. ](http://stackoverflow.com/questions/34098596/assembly-files-difference-between-a-s-asm)
If you want anyone to actually go through this then format it so that its all shown correctly as code and/or post the actual code file. This is way too long and complicated to try and get through in the format that its in right now....
Ahh, you're right. I have run into that. Glad I don't deal with much old code.
I am so sorry. I have posted dropbox links for the files.
Could you be more specific? You can reference parts of a vector by indexing. Say you want to check elements 2 and 10 in a vector `v` You can reference them like `v([2,10])`
It shouldn't be very difficult. Part 1: *write the equations of motion for the planets, in Polar coordinates *create an array from 0 to 2pi to get an output from those equations, plot them *use a plot marker to plot a single point on each orbit as the location of each planet That amount of effort alone is worth a C. You don't need to make particularly accurate orbits or planet positions, based on the written requirements. You can add motion by using a for loop to "animate" the motion of the plot marker around the loop. Then you're up to a B. For the A requirement, you need a user to be able to add a planet. You would use the `input` command to do this in the command line. There are more details, feel free to ask more if you get stuck. 
This is useful as hell. Thankyou.
Thanks!
Wow! I love it! There is a specific name for the standard deviation I believe for target shooting, an old antiquated term. I'll see if I can locate it again.
 plot(x(i),y(i), 'b.', 'MarkerSize', 40); hold on line([0 x(i)],[2 y(i)]); hold off
It looks like you're trying to mention another user, which only works if it's done in the comments like this (otherwise they don't receive a notification): - /users/gpu/arishabh/installed_matlab_2/MDNET/matconvnet-1 - *Further usernames omitted due to Reddit's limit of 3 mentions per comment.* --- ^I'm ^a ^bot. ^Bleep. ^Bloop. ^| ^Visit ^/r/mentionhelper ^for ^discussion/feedback ^| ^Want ^to ^be ^left ^alone? ^Reply ^to ^this ^message ^with ^"stop"
Best quick reference I've seen nice.
https://youtu.be/99DOwLcbKl8 I'm trying to make the same simulation as in this video
Two ways! One is "logical indexing." E.g., V(V==0) This will return the elements themselves. Supposing you wanted to set all zero elements of V to 1, you could use logical indexing like so: V(V==0) = 1; The other is "find." A = find(V==0) will give you a list of the indices of elements of V that meet the condition (i.e. they are equal to zero). 
So this is awesome, are you just taking a picture with your phone and letting matlab do work? Mind sharing your code? I do a little target shooting and would definitely use this.
Sure! Basically the edge () command finds all closed in areas which in this case are the dark holes from where the arrows went through. It calculates the centroid of each hole and records the position in x-y coordinates of each shot. Then because the scoring areas are rings with known size you can just say if the x-y coordinate is within a certain range of values then it falls within a particular point circle. Then the rest is just averages and stuff!
Very cool. I get an error though in R2012a &gt;&gt; analysis Error using rot90 (line 21) A must be a 2-D matrix. Error in analysis (line 76) image =fliplr(rot90(rot90(image))); &gt;&gt; whos image Name Size Bytes Class Attributes image 1060x1061x3 3373980 uint8 
Ok so image(:,:,1) worked for me. Then I had to suppress lines 218 &amp; 219 to view the figure (No function insertText). Still super cool though. Will use. Also like that it's easy to change target sizes. 
Not sure why that happened? Maybe the file type you imported with? Glad it works though! And I aim to make programs as flexible as possible!!:)
Oh also it looks like maybe your matrix was 1060x1061? It needs to be n x n, I think I explain that in the comments somewhere!
That's weird that that function doesn't work. I'm a graduate student so I have Matlab 2016a through my university, so it could just be a newer addition. Glad you like it!
Word. I was a grad student in 2012 so that explains that. Maybe I'll see if I can update.
 &gt;if any(V(1:100)==0) You can use find (less efficient) to get the index of the elements... like this. Store V(1:100) in a new variable since you are only searching a part of it which will make tracking indexed elements easier. `v = V(1:100)` Then get the index of the elements `idx=find(v==0)` Then reference the elements as `elements = v(idx)` Or the better way is logical indexing. `LogIdx = any(v==0);` `elements = v([LogIdx])` don't forget the square bracket.
I also recommend the MATLAB onramp. https://matlabacademy.mathworks.com/ I think it takes about 2 hours or so but it's super basic so it should help as a basis for the other videos and tutorials out there. 
If you want a good basic course of Matlab, there's a free Coursera course. You'll even get a temporary free copy of Matlab. Here's the link https://www.coursera.org/learn/matlab
Good to know. :)
would a while loop be better? for the for loop, would i have to make it for every planet, hold on to the previous planet?
Either type would work, I would use a for loop. While is usually most useful when you don't know how many iterations you need. We know how many planets there are, so you can do `for i=1:n_planets`. You only need to use `hold on` after the first plot (just put it in your loop after the plot step). It says "switched on" unless you use `hold off`. 
This isnt really a Matlab question, but more of a "how do computers work" question. Basically, data is stored as bits, which are individual 1's and 0's. integer data types convert a certain number of those bits (in the case of a uint32 - 32 bits) into an integer. You can also turn bits into floating points, which have a "floating" exponent to allow different magnitudes to be expressed but which are not infinitely accurate. Check out the wikipedia pages on [floating point numbers](https://en.wikipedia.org/wiki/Floating-point_arithmetic) and [integer data types](https://en.wikipedia.org/wiki/Integer_\(computer_science\)). Also, [this](https://www.mathworks.com/help/matlab/numeric-types.html) is a list of all the numeric data types supported by Matlab. **EDIT** To add a bit more info: The maximum number of intergers and the precision of floating point values depends on how many bits are used. For integers: the maximum number of integers expressible is 2^n, where n is the number of bits. This should intuitively make sense: * 1 bit can be 1 or 0 --&gt; 2 values = 2^1 * 2 bits can be 00, 01, 10, or 11 --&gt; 4 values = 2^2 * 3 bits can be 000, 001, 010, 100, 011, 101, 110, or 111 --&gt; 8 values = 2^3 And so on and so forth. Note that when integers are counted they typically start from 0, so that makes 2^n - 1 values other than zero. For floats: The precision of floating points is a bit less straightforward, but more bits means a larger range of numbers that go before the exponent (meaning more precision) and a larger range of possible exponents (which allows larger magnitude exponents, both positive and negative, thus increasing the dynamic range of possible values). Regarding int vs uint: "uint" means unsigned integer (whereas "int" is a signed integer). For n bits, unsigned integers cover the range from (0) to (2^n - 1). Signed integers cover the range from (-2^(n-1)) to (2^(n-1) - 1). So, if you know your value is positive, you can expand the range of possible integers by a factor of 2 versus using signed integers. They both cover a total of 2^n values though.
If you use a loop you basically write the code example I gave once, and loop over it repeatedly until you've drawn all the planets. 
Thank You ! 
Ok. So, there are three main factors that make the different numerical types advantageous / disadvantageous. Storage space, exactness, and range. The two main kinds of numbers that computers use are floating point numbers and integers. Floating point numbers (in MatLab, "single" and "double") can have a decimal point, and because of that they can cover a really huge range. Integers can only be whole numbers. Signed integers can be positive or negative, whereas unsigned integers can only be positive (including zero). So a "double" can have values like -4.886*10^21, or 6.42*10^-13. An "int8" can only go between -127 and +128, and it can never be a decimal (it can be 2 or 3, but it can't be 2.5). A uint8 can go from 0 to 255. (Unsigned integers don't have to bother storing the +/- sign, which means they can represent a wider range with the same number of bits) MatLab stores all numbers as double precision floating point numbers ("double") by default. Each number takes up 8 bytes (64 bits). If you need to store a dataset that has millions of numbers in it, and they're all whole numbers, that's a huge amount of wasted space, if you could represent the same information using a more space efficient type. So, if my huge dataset of numbers is all whole numbers, I can probably use an integer type to save space. If all the numbers are all between 0 and 255, I can store the array as uint8, taking up 1/8th the space.
By a factor of 8, for uint8 versus double. A double occupies 8 bytes of memory. 
Looks like you can create [symbolic arrays](https://www.mathworks.com/help/symbolic/sym.html). So in your case it would be s = sym('s', [1,N]) N being the number of functions you wish to create. 
Given the sensor readings, you would need to design an an agent which is capable of learning the movements of this robot and thus predicting his position. The agent has a single neuron which is capable of learning these movements. Therefore, the inputs are the movement for the robot. The outputs are either 1 for right or -1 for left which is worked out by comparing the dot product of the input and weight to the threshold value. 
However, i have noticed when updating the weight value. It gets exponentially bigger. In my mind i thought the weight values should always remain between 1 and -1. Also since it's a singular node does that mean they share the same weight values? 
Prehaps i don't understand preceptrons as i thought i did
For example like this: syms t for k=1:numberOfFunctions eval(['s', num2str(k), ' = symfun(yourFunctionOf_t, [t]);']); end You can costumize your function by editions the string inside the eval function. Say you want to have different sine functions do this: eval(['s', num2str(k), ' = symfun(', num2str(k), 'sin(t), [t]);']); Let me know if that's what your looking for. EDIT: various times for formatting and correcting autocorrect mistakes. 
Weights shouldn't go to infinity. They may get large, but if they are too large then your computer starts giving rounding/floating-point errors and you get unstable results. It sounds like you're not using an activation function correctly. For a typical perceptron you would take the log or hyperbolic tangent of the weighted inputs and use that as the perceptron value. That approach and a small step-size should keep your weights from exploding. 
No, but if you post a legitimate attempt I'll help you expand on it. 
You mind looking at my code my good sir? I have a similar project and I'm having trouble animating the moon move around Earth but all I've been able to code is an ellipse... I'm taking astrophysics and our teacher has not showed his face for 3 whole labs because he's busy writing his thesis and our classes do not cover on how to code. I've been learning off websites and asking other students but everyone is just as lost. Here is what I got so far https://pastebin.com/eFdwF1cw Edit: He expects us to use differential equations if that helps
Yes i need it for this specific case. Im estimating parameters of coupled ODEs using a sensitivity analysis based approach. I therefore need to differentiate my model ODEs with respect to each parameter.
How did you find the model? Through some least squares regression or something? Usually, to quantify how well a model fits data, you calculate some measure of error - sum of squares of errors is the most commonly used one.
I'm not familiar with playing audo through Matlab, but it seems like something like this should work (though idk if it would play at real time or be delayed): % Fs = sample rate % y = audio data % N = number of samples in the audio data playerObj = audioplayer(y,Fs); figure % Setup figure properties outside of the main loop hold on xlabel('Time (seconds)') ylabel('Amplitude') title('Audio Data') % Brief pause to allow figure to update pause(0.001) % Begin simultaneous plotting and playing for nn=1:N-1 plot([nn:nn+1]./Fs,y(nn:nn+1),'b'); play(playerObj,[nn,nn+1]); end There might be a better way to do it, but as I said I'm not familiar with playing audio in Matlab. EDIT: I suppose you could also try and break it up into larger Chunks. e.g. something like: numSamples=100; figure % Setup figure properties outside of the main loop hold on xlabel('Time (seconds)') ylabel('Amplitude') title('Audio Data') % Brief pause to allow figure to update pause(0.001) % Begin simultaneous plotting and playing for nn=1:numSamples:N-numSamples plot([nn:nn+numSamples]./Fs,y(nn:nn+numSamples),'b'); play(playerObj,[nn,nn+numSamples]); end This might play closer to real time (due to a smaller loop overhead), and as long as "numSamples" isnt too big i dont think it would be too choppy. Unfortunately, unless theres something I'm not thinking of, I'm not sure how you would do this any more simultaneously in Matlab without giving both tasks (plotting and playing audio) their own thread(s) and somehow ensuring they sync up. This is a bit more difficult of a task that the method I propose above.
To confirm, this is your model: Y = f(X) = 0.201559498268547 * X.^1.497129121897010000; ?????? There are a number of ways to look at how good a model is in statistical terms. One of the easier ways is to calculate a simple L2-norm of the data residual (a.k.a. "sum of squares"). % Observed data X1 = [58,108,150,228,778,1427,2870,4497,5900]; Y1 = [88,225,365,687,4333,10759,30685,60191,90465]; % Predicted data Y2 = 0.201559498268547 * X1.^1.497129121897010000; % Residual R = Y2 - Y1; % (optional) normalize residual to look at % error R = R./X1; % L2 Error E = R.^2; E_total=sqrt(R*R'); % Alt: can use E_total = norm(R,2); 
So use symbolic math to calculate the derivatives. That only needs to be done once, and then you can use those derivatives in a numerical optimization. 
thanks I'll give it a go
I appreciate the help Alexander, I used scatter3 to make them look more lively, is there anyway to make the scatter plots any bigger because I am trying to simulate the Earth and Moon? Edit: I figured it out 
If you are using a relatively recent version of Matlab, the "run" button on the top of the screen (in the "editor" panel) turns into a "pause" button while the script is running. This should do what you are trying to do.
You can do this programmatically with "break," assuming you can describe in your code what conditions would lead to the code needing to advance to the end of the loop. for i = 1:100 % do stuff if i &gt; 89 break end % do stuff end % more code 
Can't remember if this will work, but what about putting your loop in a try/catch block, with the code to execute after it?
I'm guessing you have a 'hold on' statement after the first plot so that you can plot additional planets etc within the graphic. On the next iteration of the loop, the hold command prevents the graphic from being erased/re-drawn, and is plotting the new graphics on top of the previous frame. One way to clear this is to call 'hold off' right before the loop restarts (at the bottom). Another way to do this is to use the *get* and *set* commands so that instead of drawing the frame multiple times, you draw it once, and afterwards specify that the X and Y coordinates are at different locations over time. Look up graphic objects and properties for this (XData, YData). If you are using a newer version, there is also the function *refreshdata*.
You missed 1 thing: You need to fix the colorscale to always range between -1 and 1. pxls = 256; high = ones(pxls); low = zeros(pxls)-1; step = horzcat(high, low); con = 0:0.1:1; for i = 1:length(con) stepMod{i} = con(i).*step; figure hold on imagesc(stepMod{i}) colormap(gray(256)) axis image off caxis([-1 1]) end 
Thank you! I knew it had to be something small.
ode45 will give a more accurate solution 
+1 for using 'set' and 'get.' For example, if using scatter3: p = scatter3(X(1),Y(1),Z(1)) for i = 2:length(X) set(p,'XData',X(i),'YData',Y(i),'ZData',Z(i)); end
The solvers ode45 and ode23 have the same syntax. So any code written to solve a problem with ode45 can be switched to ode23 just by changing those two characters, and vice versa. The only difference in the functions is the approximation method used by the solver.
Use the tab key to show autocomplete options. I think it is on by default. [Here](https://www.mathworks.com/help/symbolic/mupad_ug/use-keyboard-shortcuts.html) is a list of keyboard shortcuts that (in addition to tab being related to autocomplete) gives a list of some of the available keyboard shortcuts.
I was hoping there was a way to enable it to toggle autocomplete options to always show up when toggled on. like on the android app. I like this feature.
Yes exactly! i would hovever like the code to automatically produce my sensitivites for each variable and parameter (thereby the names s11,s12,s13 etc). sij stands for dyi/dkj. These are then going to be solved using an ODE solver and then they will be optimized.
It will occasionally do this for me, depending on what I am doing. For example, if I enter: fft( An autocomplete window will automatically pop up after ~1 second telling me the different options for the fft function. IDK how it works on Mobile, but I think it works pretty well on the desktop version of Matlab. I can hit tab to autocomplete whenever I want, and I will get some nice extra information about function inputs and stuff like that that pops up fairly often.
Do hey *have* to be different variables? Using *reshape* would separate it nicely and keep it all in the same variable. DataNew = reshape(Data,[39996,10,14,6]); Your 3D array just becomes a 4D array, where the 4th dimension is representative of group number.
lul 
Awesome, this is a good attempt! You are making progress. You did make them literal ellipses - which is good, the planet's orbits are ellipses! Now instead of generating random numbers for your radii you can put in some numbers that make sense for the planets. The astronomical units (AU) is defined as the distance from earth to the sun, so you can write: `xRadius = [.4 .7 1 1.5 5.2 9.5 19.2 30.1 39.5];` (if we include pluto!) and: `yRadius = xRadius./(0.75);` The operator `.*` multiplies every number in the array by the number. Works the same way for division. I did this just to make the ellipse more ellipse-like. I think you can delete everything below your 2nd `axis square` and just use the top part. You can also delete your random number generator at the top and replace it by defining `xRadius` and `yRadius` like I have above. Get this part cleaned up and I'll help you animate it. 
I use [JSONlab](https://nl.mathworks.com/matlabcentral/fileexchange/33381-jsonlab--a-toolbox-to-encode-decode-json-files) which is pretty good and still updated.
Do challenges, over and over. Learn how to code right by doing challenges, then seeing how more capable people plan and execute their code. On the right for challenges: * [Project Euler](http://projecteuler.net/) * [Matlab Cody](http://www.mathworks.com/matlabcentral/about/cody/)
http://prntscr.com/evrftv Omg wow thank you so much, I just realized I was using RNG for xradius and yradius of a and b respectively. I literally forgot to define it haha. I didn't think of using the astronomical units but it makes so much sense now.
This is an odd question. The definition you linked doesn't uniquely determine c_ij. All the elements in the first two columns and below the second row can have two different values (a+b or a-b). I wonder if that is on purpose? 
Yes! I have! Although we have an in house code to post process before it gets to me. What kind of format is your FLIR data?
You can do something like this: A.D = 'Hello'; A.('D') or x = 'D'; A.(x)
&gt; Is there a function with input 'A' and 'D' (struct and fieldname), that outputs B and C (corresponding subfields)? I found this an interesting question, so I decided to give coding it up a shot. I did it a bit different, in that I search for "D" being the ultimate value (not the terminal fieldname), but it could be adapted to look for the terminal fieldname without too much trouble. function [subFieldNames] = getSubField(A,val) %% Find the subfield names corresponding to some end case value in a nested strucure % A: nested structure % val: end case value you want to find (can be numeric or string) % subfieldNames: output containing names of intermediate structures % NOTE: if end-case value is not unique, only the 1st one found will be exported % NOTE: if subFieldNames is returned as NaN then the value was not found % % % % % Initial Setup % % % % % % Comparrison Type if ischar(val) == 1 compareType=1; else compareType=0; end % Initialize values foundVal=0; curIndex=1; subFieldNames=[]; % Get top level names nameTop=fieldnames(A); subFieldNames{1}=nameTop{1}; maxIndexCur=length(nameTop); % % % % % Begin Search % % % % % while foundVal ~= 1 % initialize at top level of structure (n = Current level) nn=1; subFieldNames{nn}=nameTop{curIndex(nn)}; Atemp=A.(subFieldNames{nn}); %while isstruct(A.(nameCur{1})) while isstruct(Atemp) % move down one level (deeper into structure) nn=nn+1; % expand variables to accomidate to current level (if needed) if length(curIndex) &lt; nn curIndex=[curIndex,1]; maxIndexCur=[maxIndexCur,1]; subFieldNames=[subFieldNames,'temp']; end % Update current temporary structure nameTemp=fieldnames(Atemp); subFieldNames{nn}=nameTemp{curIndex(nn)}; Atemp=Atemp.(subFieldNames{nn}); maxIndexCur(nn)=length(nameTemp); end % Currently at bottom level of structure, so extract data dataCur=Atemp; % Compare current and desired values to determine if current value is the desired solution if compareType == 1 if strcmp(val,dataCur) foundVal=1; end else if val == dataCur foundVal=1; end end % update current location within nested structure ("curIndex" variable) if foundVal == 0 while nn &gt; 0 &amp;&amp; curIndex(nn) == maxIndexCur(nn) % go back one level, reset lower levels nn=nn-1; curIndex(nn+1:end)=ones(size(curIndex(nn+1:end))); end if nn == 0 % all values have been tried, return "NaN" foundVal=1; subFieldNames=NaN; else % advance to next index in current level curIndex(nn)=curIndex(nn)+1; end end end end As a test, you can see how it works for a relatively simple case. Here the terminal value is either a string or a single number. % Example Test - recover structure subfield names A=struct; B1=struct; B2=struct; C1=struct; C2=struct; C3=struct; C4=struct; C5=struct; C1.D1='number1'; C1.D2='number2'; C2.D1='number3'; C2.D2='number4'; C3.D1='number5'; C3.D2='number6'; C4.D1='number7'; C4.D2='number8'; C5.D1=11; C5.D2=100; A.B1.C1=C1; A.B1.C2=C2; A.B2.C3=C3; A.B2.C4=C4; A.B2.C5=C5; getSubField(A,'number2') getSubField(A,11) 
It's not clear what you want, but if you have a recent MATLAB you could use the table object to build a formatted table...
Damn, I've got 2015b. 
 help table would get you started.
I agree with the comments already here. Two more options: * Pull out some old textbooks and see if you can write code to solve the problems. Generalize your code as much as you can. * Get a [numerical methods](https://www.amazon.com/gp/aw/d/1259027430/ref=mp_s_a_1_4?ie=UTF8&amp;qid=1492060858&amp;sr=8-4&amp;pi=AC_SX236_SY340_QL65&amp;keywords=numerical+methods+for+scientists+and+engineers&amp;dpPl=1&amp;dpID=51g6Se88zcL&amp;ref=plSrch) textbook and work your way through it. It's also a great way to learn new analysis methods. The linked book is the one I learned from. 
Are you trying to make random points **ON** a cube, or **IN** a cube?
+ Those sites are exactly what I'm looking for, thanks! 
May I ask what you do? Spending your day on MATLAB sounds fun! I think...
 is = sin(1:n) js = cos(1:n) U = is' * js `is` and `js` are row vectors, so `is' * js` is the "outer product" and does exactly what you want. Edit: missed the 8s in the arguments, but that should be trivial to fix. P I think it needs parentheses around the (1:n) part.
Sorry, maybe it was unclear. Within the 3D array the srtucture is: Row x columns x pages (Pages is probably not the technical term) I only need columns 1:3, hence the 39996 x 1:3 x 1:6. The reason i look for a solution is because this data set will expand to 39996 x 10 x 840, needing to be grouped. Group1 - 140 in this case. 
Whether you want to use "[39996,10,6,14]" of "[39996,10,14,6]" depends on how you want your groups sorted. Do you want it broken up into 6 groups of 14, or into 14 groups of 6? I had originally interpreted your question as wanting 6 groups of 14, but if you want 14 groups of 6 then you would be correct. re-looking over your post I do think this is actually what you want, so if this is the case I apologize for originally misinterpreting your question. To clarify the difference, here is an example based on your setup. Example: data(:,:,1) = data #1 data (:,:,2) = data #2 ... data(:,:,84) = data #84 Case1: dataNew = reshape(data,[39996,10,6,14]) means: dataNew(:,:,:,1) contains data #1-6 dataNew(:,:,:,2) contains data #7-12 ... dataNew(:,:,:,14) contains data #79-84 AND dataNew(:,:,1,:) contains data #1,7,13,19,...,79 dataNew(:,:,2,:) contains data #2,8,14,20,...,80 ... dataNew(:,:,6,:) contains data #1,6,12,18,...,84 Case 2: dataNew = reshape(data,[39996,10,14,6]) means: dataNew(:,:,:,1) contains data #1-14 dataNew(:,:,:,2) contains data #15-29 ... dataNew(:,:,:,6) contains data #71-84 AND dataNew(:,:,1,:) contains data #1,15,29,...,71 dataNew(:,:,2,:) contains data #2,16,30,...,72 ... dataNew(:,:,14,:) contains data #14,28,42,...,84 Also note: it seems like you only need the 1st 3 columns of data. In this case you could do: dataNew = reshape(data(:,1:3,:,:),[39996,3,6,14]);
okay, yeah, the 'x's were confusing the fuck out of me because I thought you were multiplying something. I also thought you wanted something sorted, not just like selected from a group or whatever, so I was looking at it wrong because of that as well. So basically you want the indexes (1:39996, 1:3, 1:6) from the matrix? Would accessing the appropriate elements in this way be convenient enough? Group_one_variable = matrix_variable(:, 1:3, 1:6); Or more generally... Group_N = matrix_variable(:, 1:3, (N*6)+1:(N+1)*6); % You could store this in something else too, just an example % I wouldn't recommend using completely separate variable names % Maybe a cell array? % The end choice would be dependent on what you need to do. % This should be really easy to put into a for loop as well Or am I oversimplifying what needs to be done? The other solution looks way more complicated. 
I'm an aerospace engineer. I don't use Matlab that often anymore, but I did use it most days when I first started. I still have people come ask me for help on occasion.
cellfun(@gravitationalPull,num2cell(YOURMATRIX,2)) 
Oh awesome! This is perfect. I'm a little embarrassed I didn't see it earlier. Thanks
Sure, just tell me your professors email address and your name and I'll send you a completed function. 
Your post has been removed. Please read our [rules for submitting homework questions here](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/) and feel free to resubmit when you've met the requirements. 
Me and my friend will give it ago in a few hours. Gotta some social stuff to attend to. I'll reply once we have given it a go (though again, it really shouldn't be that complicated, otherwise our material is willfully insufficient. 
Did my explanation make any sense? 
I usually just Google "how to make a gif MATLAB" or something, and someone has always asked the question on a mathworks forum. Then i just copy the code written by the person who's answered the question, and change a few of the variables, it's usually pretty straightforward.
Maybe it's just me, but this is extremely confusing. I have no idea what you're trying to do. What does it mean to "divide each vector into two parts?" Is the size of the vector doubling with each iteration along the cell? Because that would mean you'll end up with a vector length 2^100 which is unfeasible for a computer to say the least.
Are you sure that you have the correct answer? I've looked through your code and I really cant figure out what you're trying to solve for. I'm also not 100% sure what you are trying to solve for based on your description, but it doesnt seem like it described what your code is actually calculating. Of course, the fact that the code has literally 0 documentation doesnt help..... Documenting your code is really something you should get in the habit of doing. Document it even if its just for yourself, since future you will be able to figure out what it does. Especially document it if you want to ask for help. &gt; Also the angles will only plot with a ccw direction and i can't figure out a way to switch this round. Multiply the angles by -1. This will make them go the opposite direction. To help you out, I quickly put together a short (but well documented) code that solves for the motion at the end of a set of 2 arms that are each moving together at a constant rate. There is a big arm, and a small arm. The small arm is attached to the end of the big arm. Position recorded is at the end of the small arm. This sounds similar to your problem, but not quite identical. It should give you a better idea of what you might be doing wrong. clear clc % % % % % User Defined Inputs % % % % % % Length of Arms l1=20; l2=10; % Time taken for a complete revolution for each arm t1=10; t2=1; % Time step dt=0.01; % Number of revolutions (Arm #1) numRev=1; % Direction of rotation (1 for clockwise, -1 for counterclockwise) d1=1; d2=1; % % % % % Begin Algorithm % % % % % % Check direction inputs d1(d1 &gt; 0)=1; d1(d1 &lt; 0)=-1; d2(d2 &gt; 0)=1; d2(d2 &lt; 0 )=-1; % Setup time vector t=[0:dt:t1*numRev]; % Setup angles ang1=[0:(2*pi)*(dt/t1):(2*pi*numRev)]; ang2=[0:(2*pi)*(dt/t2):(2*pi)*(dt/t2)*(length(ang1)-1)]; % Determine individual positions x1=l1*sin(d1*ang1); y1=l1*cos(d1*ang1); x2=l2*sin(d2*ang2); y2=l2*cos(d2*ang2); % Determine combined positions x=x1+x2; y=y1+y2; % Plot results figure plot(x,y,'b') title('Position at end of smaller arm') xlabel('X') ylabel('Y') 
&gt; I want to do this to put an "if" condition inside the second "for" loop, just before the evolution, to check if the selected element of the second part is bigger than the associated element of the first part. This is the kind of thing that "while" loops are designed for. &gt; I now want to associate each element of the first part with two elements of the second part. For example, in the case of 4 elements in the first part and 8 in the second, I'll associate ii=1 with ii=5,6 then ii=2 with ii=7,8 then ii=3 with ii=9,10 and finally ii=4 with ii=11,12. How to do this? Its jus a matter of figuring out indices based on how many splits have already happened. Something like this should work: n = total number of elements ii = iteration number (number of splits that have already happened + 1) nn = index of the current element (ranges between 1 and n) % Find start index for given iteration indStart=sum(n.*(2.^([0:ii-2])))+1; % Indicies for all elements in current iteration: indCurAll=[indStart:indStart+(2^(ii-1))*n-1]; % Indicies for a specific element in current iteration: numInd=(2^(ii-1)); % number of indicies per element for current iteration indCur=[indStart+numInd*(nn-1):indStart+numInd*nn-1]; 
Thanks for the reply, Yeah i normally do use documentation but its really only the angle stuff that's important in the code so i kinda got lazy i suppose. Ill try and explain what im trying to accomplish a little better. The end product of this script is to plot all 2D points that a point at the end of 3 arm links can reach, this point is rotating around a base point (0,0). My problem arises when trying to plot the path of the 3rd link, this link can sweep a range of 180deg but cannot pass the perpendicular line from the end of the second link, this is hard to explain in words but if you image a semicircle attached onto the end of the second link, where its radius is equal to the link length and this is the range of values i want to collect. When first trying to plot i realised that i had to somehow link the angle of the third link to the angle of the first, this would enable me to be able to specify the range of angles that i want the point to be sweeping through. Using trigonometry i managed to work out that the angle would change from the starting positing equal to, and this is working through with counter-clockwise, 2pi - (pi/2 - theta_increment) where the theta_increment is the first angle. And the ending position is equal to pi/2 + (pi/2 - (pi/2 - theta_increment)). Using these equations in matlab gets the right answers however they dont plot in the same positions somehow, in the first configuration of theta_1 = 0 , pi/2 is in the north position and then pi is in the north position in the next configuration of theta_1 = pi/2. Hopefully that helps explain what im trying to do, its pretty much the translation of a moving angle between the bounds of (0-180) with it being perpendicular to the previous link. If you run the code i provided you can see that this plots the points however they are out of sync for some reason, the only points that are correct are the left ones. Once again any help on this matter would be much appreciated
Hmm. Respectfully, start here: https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/ I offer this feedback for your benefit. Take the time to read what you've written before submitting it. Mistakes like "Bayer's Theorem" (among others), along with a complete lack of code, make me think that you've not put any effort of your own into this. As a former TA, those were the students I was least interested in helping. I'm happy to help others with all sorts of issues, but I want to know that I'm helping somebody that wants to learn. The only way I get to see that desire is through the effort shown in submitted code and thoughtful questions.
+ thank you for that that helped me a lot What I still cant do is combine all three graphs into one big graph that would hit the sort of the maximums, if that's clear. Any idea on how to do that? a picture attached to help show what I am trying to say. http://imgur.com/NUlozTQ
The easy answer here is to just remove all of your `xlim` and `ylim` commands. MATLAB defaults to fitting all of the data in the figure window. One other tip -- adding a semicolon to the end of a line suppresses output. It helps keep your command window from just being screen after screen of arrays.
I'm a little rusty and don't have access to matlab right now, so please forgive any errors. p = polyfit(x, y, 1); Setting n=1 gets you a first order polynomial, i.e. a line. P is a vector of the coefficients of the polynomial. In this case the polynomial is f(x) = p(1)*x^1 + p(2). Thinking about it another way the for a first order polynomial p(1) is the slope and p(2) is the intercept in the old y = m*x + b equation. Now polyval is what you can use to evaluate your fit line at any point you want. The syntax is something like yFit = polyval(p, xFit); where xFit can be a vector of all the x values you want to evaluate your fit at. Then you can plot x and y as discrete points and then plot xFit and yFit as a line to see how well the regression worked. Hope that helps!
&gt; I have been tinkering for a while now and using the matlab forums as well as the built in help function. Did you look at the documentation for [polyfit](https://www.mathworks.com/help/matlab/ref/polyfit.html?searchHighlight=polyfit&amp;s_tid=doc_srchtitle)??? Was there something in particular about the documentation that you didnt understand? I mean, I know you said you looked at the help, but the documentation for polyfit tells you what x, y and n represent on literally the 1st sentence of the page (hint: n does something different that you think). 5 or 6 lines past this there is an example that shows how you how to actually use the function.
[removed]
Two ways you can do this. Either you use a for loop to go through the input vector, and at each element you check whether the element is &gt; R or &lt; R and then use the correct equation for it. You will need to make a vector where you save the calculated values. Though this is a perfect place to use logical masks in order to target the correct elements with the correct equation. First you make a logical mask which will tell you what elements of the input vector satisfy `R &lt;= x` and which do not. Then you use this mask to target only those elements with your chosen equation. Masks are great for this. Basically all you need to know is that if you have a vector `a = [10 4 7 2 15 ]` and you want to do some math on elements `4` and `2` then you need to make a mask where those elements are `1` and rest are `0`, like this`mask = [0 1 0 1 0]`. Now to select the correct values from vector `a` all you do is `a(mask)` which will output a vector `[4 2]` and you can use that logic to do math only on those elements. Here is a brief example on how to use this logic for your problem: %Random input vector x = rand(10, 1); %Empty vector where we will save our results out = zeros(size(x)); %Logical mask where this statement is true mask = x &lt; 0.3; %Next we use the mask to target the equation to the right elements %x(mask) will select only the elements where the x &lt; 0.3 is true %and then we save them to the same indices on the empty vector "out" out(mask) = x(mask).^(3/2); %Next we do the same but we reverse the mask, in other words we %select the elements where x &lt; 0.3 is NOT true and apply %another equation to these elements You can do the rest yourself :) You will need to do a separate check on the `elseif` and output the `disp(...)` stuff if needed.
Is that the theorem about heart attack prevention?
Whenever i train the network, i keep getting "validation stop" before reaching the number of epoches.
That's a complicated question. "Validation stop" isn't necessarily an error. It is what's called "early stopping," which essentially is one of the ways the training algorithm knows when to stop. More specifically, "validation stop" means that the network's performance on the validation set did not improve for some number of iterations (This parameter is network Object.trainParam.max_fail. Default value = 6). The validation set is a subset of the data that isn't used to train the network. Instead, it is used to check whether what the network is "learning" actually applies to any data besides just the data being used for training. The idea is this: if the network is actually learning the right thing, then if you train it on one subset of the data, it should perform well on a different subset of the data. So, ideally, a validation stop means the network has learned what there is to learn. So, check to see if the trained network performs adequately on the validation / test data. You could try using the "plot confusion" button if it is a classification network, or the "plot regression" option for a regression network. If the network is NOT performing adequately, then there are other reasons you might be getting a validation stop. Look at the performance plot. If it decreases a little, then levels off and then stops, your network is failing to learn. This could mean that you need a more complex network, or simply that your data is no good. If the blue line (training data) decreases steadily but the green / red lines (validation / test) don't then that means your network is TOO complex, and is overfitting.
Just as an FYI, I know the closed form solution to the least squares problem is inv(x'x)*x'y, but you should never use that in matlab (something to do with floating point errors I think). Instead use x\y
so i've been looking at the sample code you provided and have been trying to edit it accordingly, https://pastebin.com/PD9RmLry Sorry for the pastebin the formatting here never seems to work for me This now draws a circle, its like the 3rd link is not its own seperate entity and that the plots for angle 3 are not calculated for every angle 1 and 2, this is why i think for loops are neccesity for this process, but i could be wrong. Any insight would be helpful thanks. 
yep so the first arm and the 2nd arm are kinda locked, in 2D they dont rotate in relation to each other from the top down perspective, and the 3rd arm is attached the end of the 2nd and has a limited range. 1) assuming that the 3rd arm is pointing out of the end of the 2nd arm with the same initial angle as 2 (ie. a straight line). Assuming that this angle = 0 and the angles go clockwise, its something like, 0-90 &amp; 270 - 360. completing a semicircle of 180 degrees, Putting it this way i can see how this might be problematic. 2) the arms move sequentially, they have an initial value of theta 1 and theta 2 (since that's 0 its the same as theta 1) and then i wish to calculate all the points that the 3rd arm link can reach from that iteration, and then once thats done change theta1 and theta2 and then rinse and repeat. 
I think I get what you want. Try this. Note: it is setup to make it easy to allow arm #2 to change, should you want to add that functionality in the future. clear clc % % % % % User Defined Inputs % % % % % % Length of Arms l1=20; l2=20; l3=10; % Angle Step (Arm #1) dAng=pi/8; % Number of revolutions (Arm #1) numRev=1; % Number of angles (Arm #3, range from -pi/2 to pi/2) n=20; % Direction of rotation (1 for clockwise, -1 for counterclockwise) d1=1; d2=1; %d3=1; % % % % % Begin Algorithm % % % % % % Check direction inputs d1(d1 &gt; 0)=1; d1(d1 &lt; 0)=-1; d2(d2 &gt; 0)=1; d2(d2 &lt; 0)=-1; %d3(d3 &gt; 0)=1; %d3(d3 &lt; 0)=-1; % Setup angles ang1=0:dAng:(2*pi*numRev); ang2=0; % Preallocate Result Matricies X=nan(numel(ang1),numel(ang2),n); Y=nan(numel(ang1),numel(ang2),n); % Calculate position for n1=1:numel(ang1) for n2=1:numel(ang2) [x,y] = calcSweepArm3(l1,l2,l3,d1*ang1(n1),d2*ang2(n2),n); X(n1,n2,:)=x; Y(n1,n2,:)=y; end end % setup colors for plotting cMAP=hsv(numel(ang1)*numel(ang2)); % Plot results figure hold on for n1=1:numel(ang1) for n2=1:numel(ang2) plot(squeeze(X(n1,n2,:)),squeeze(Y(n1,n2,:)),'*-','color',cMAP(n2+numel(n2)*(n1-1),:)) end end colormap(cMAP) h=colorbar; caxis([0 360]) ylabel(h,'Indicator of Angle of Arms 1 and 2 (Degrees)') title('Position at end of smaller arm') xlabel('X') ylabel('Y') It requires a call to the following function: function [x,y] = calcSweepArm3(l1,l2,l3,ang1,ang2,n) %% Calculates (x,y) position for 3rd arm sweep % position calculated at n points ranging from -90 degrees (-pi/2) to 90 degrees (pi/2) (relative to the 2nd arm) % l1, l2, l3: length of the arms % ang1: current angle of the 1st arm % ang2: current angle of the 2nd arm (relative to the 1st arm) % ang1 and ang2: both single values, both in radians (not degrees) % n: number of points to calculate 3rd arm position at % Calculate angle of 3rd arm (relative) ang3=linspace(-pi/2,pi/2,n); % Calculate positions x1=l1*sin(ang1); y1=l1*cos(ang1); x2=l2*sin(ang1+ang2); y2=l2*cos(ang1+ang2); x3=l3*sin(ang1+ang2+ang3); y3=l3*cos(ang1+ang2+ang3); x=x1+x2+x3; y=y1+y2+y3; end 
I had a similar thought. When I first saw the title I thought "I didnt know there were any theorems about aspirin...." lol
thank you so much that works perfectly!, so just for clarification, the function of calsweeparm deals with the calculation of the third angle separate from the first and second? 
&gt; Just as an FYI, I know the closed form solution to the least squares problem is inv(x'x)*x'y, but you should never use that in matlab (something to do with floating point errors I think). Instead use x\y This is an excellent point, and something that everyone should get in the habbit of doing (though admittedly for problems like this it won't make a noticeable difference). For those interested in *why* using " \ " is better...As I understand it: [The " \ " operator (i.e., matrix left divide)](https://www.mathworks.com/help/matlab/ref/mldivide.html) works such that when you enter "x = A \ b" it tries to find a solution to the linear system "A * x = b". It does this without explicitly constructing the inverse of A, saving time. It also it capable of choosing the most optimal algorithm to solve the system base don the properties of the matrix, further saving time. But, the biggest difference is that since it is focusing on solving the system, it ensures the solution "x" has errors on the order of machine epsilon (roughly 10^(-15)). As a nice bonus, the "\" operator will work with non-square matricies and will automatically generate the least squares solution for these cases (assuming that A and b have the appropriate dimensions). [The matrix inversion operator "inv(...)"](https://www.mathworks.com/help/matlab/ref/inv.html) works such that when you enter "x = inv(A) * b" it explicitly finds the inverse of matrix A with LU or LDL decomposition. It then multiplies A^(-1) with b using matrix multiplication. This results in an additional matrix multiplication operation that is not necessairy when using " \ ", increasing the compute time. Additionally, since A^(-1) is solved with machine epsilon accuracy (rather than the desired solution x), performing the matrix multiplication to find "x = A^(-1) * b" causes the accuracy to be lowered. This can typically result in x having accuracy on the order of 10^(-6) or 10^(-7), versus 10^(-15) for doing "x = A \ b".
So the thing is that once you generate "ang3" it never really needs to change (so long as you dont alter how discrete angle values you want to try in ang3). Or rather, so long as you define ang3 to be the angle relative to the 2nd arm it will never have to change, since it will always just range from -90 to 90 degrees. You account for the fact that the absolute value of ang3 will change based on the angle of arms 1 and 2 when you do x3=l3*sin(ang1+ang2+ang3); y3=l3*cos(ang1+ang2+ang3); Think about it like you were looking down arm 2...arm 3, from your point of reference, could range from -90 degrees to +90 degrees. if arm 2 is oriented at 135 degrees, this means that arm 3 is actually going from 135-90 to 135+90 degrees, i.e. from 45 to 225 degrees. But, from your point of reference it always moves from -90 to 90 degrees. The same applies for defining the angle of arm2 relative to arm1 (i.e., the "ang2" variable). On that note, since ang3 doesn't change you could increase efficiency slightly by only generating it once (rather than re-generating t every time the function is called), but realistically (unless this is going to be run a HUGE number of times) it wont make a noticeable difference. To do this you'd just define it in the main script and add another input to the function for ang3. I suppose you could even move this entire function into the main script if you wanted, since its not all that long.
Uh... heat transfer only occurs at end nodes? So what is it doing in between? Does the heat go to the second node and stop? And then magically appear at the last node? I might be a wee bit drunk (I'm pretty drunk), but that doesn't sound right to me. That's not how you'd set up a FE matrix. 
This is literally it: http://imgur.com/MmWHYFh
Like I said in my reply, you have to tell Matlab where you want the derivative to be taken. Another issue is you need to tell Matlab that eq is a function of x by defining it as "eq(x)". Try this: syms x eq(x) eq(x)=diff(sin(2*pi*x),x) xTry=[0:0.1:1] double(eq(xTry)) This should hopefully show how it works.
Ahhh yes that works. I had no idea you could do something like that. Thanks! Just curious though, I removed the symbolic eq(x) (first line of your code) and it seems to work the same. Any reason it is there? 
You seem to have a problem understanding the mathematics here, not just Matlab. There is no way to convert a whole function into one single value. How exactly would that work? 
If you remove the sum() and just look at the at the remaining output, it should be a pretty clear indication of what is happening. 
This links directly to a ppt file: http://www2.mae.ufl.edu/nkim/IntroFEA/Chap5.pptx Slide 11 and 12 is what you need. You get 8 equations and 8 unknowns. (Unknowns are Q1 and Q8 and T2-T7) Hope this helps. 
 function g = gravitationalPull(x) g = zeros(1,size(x,2)); R = 6.371*10^6; tmp = size(x,2); for i = 1:tmp if R &lt; x(i) g(i) = 9.82*(R^2/x(i)^2); else g(i) = 9.82*(x(i)/R); end end This turned out to be our solution. I was convinced it could be done fairly easy, without loops, but according to my friend who graduated in computer science, loops is the simplest way to get it done.
That's not what I was getting at. A better analogy would be: If your teacher had a test question that that "f(x) = x^2, what is the numerical value of f(x) at x=2?" how would you answer that question? Which I would answer 4.
Well you never provided a value for X to Matlab, so how did you expect it to evaluate your function? 
Im streaming the video to FLIR tools, but I want matlab to process the video frame by frame. FLIR tools will create a recording of the video thats a .seq file. Also im trying to analyze the live video stream.
Validation stop. 
X,Y must be formatted as outputs from meshgrid, so they will be nX x nY matrices. U,V must be similar matrices giving the x,y velocities at each of those points in X,Y. See this [gist](https://gist.github.com/akiss20/1664a34fe5613564c35504eafd359cdd) for an example code and the [result](http://imgur.com/a/LUly5)
 + I am sorry for my poor attitude . I have now uploaded my working .
I am still new to reddit . So I didn't really know how to go about it , despite reading the guide for this sub reddit . Sorry guys . 
Okay, cool. So do you have a sense of what your final diagram will look like? http://i.imgur.com/W9VFtza.png What data do you need to calculate the areas for each part of such a figure? For actually doing the Venn diagram part, this page has a helpful equation: http://mathworld.wolfram.com/Circle-CircleIntersection.html To actually generate a figure, I used code like this: figure;hold on rectangle('Position',[-.5 -.5 1 1]) % Plot circle 1 t = linspace(0,2*pi); plot(R1*cos(t),R1*sin(t),'k'); % Positive results % Plot circle 2 plot(R2*cos(t)+d,R2*sin(t),'r'); % Diseased axis equal axis([-.6 .6 -.6 .6]) text(-.5,.54,'All tests') Figuring out the radii and offsets of the circles is the fun part :) Eventually you can get something like the following -- http://i.imgur.com/RgYOVAk.png
[The documentation for the function 'writeVideo' has all of the answers for you](https://www.mathworks.com/help/matlab/ref/videowriter.writevideo.html). That page explains how to save each frame to a video file, or how to save the entire array as a video at once. Hint: You can save all frames at once. You'll need to reformat your 3D array into a 4D array. As per the documentation: "For a sequence of grayscale images, img is four dimensional:. height-by-width-by-1-by-frames. The height and width must be consistent for all frames within a file."
&gt; but I rather not plot anything and get the avi file directly. You kind effectively do this by setting the figure to not be visible. Do this either using figure('visible','off') or figure set(gcf,'visible','off') Technically you still need to "plot" it, and you plot it the same way you normally would. But, the figure isn't actually displayed. This makes the process of generating the frames for a movie considerably faster. To make the .avi file, follow the instructions in the writeVideo documentation that /u/radecki posted. As one additional note, instead of using imshow(...) F(a) = getframe you can use imshow(...) imdata=print(gcf,'-RGBImage'); F(a)=im2frame(imdata); This allows you do use all the features from the [print](https://www.mathworks.com/help/matlab/ref/print.html) function (example: use '-r300' flag to increase DPI to 300 and make the figure higher resolution).
This is way outside of my area of expertise, but I think you might be able to accomplish that using a [.mex](https://www.mathworks.com/help/matlab/ref/mex.html) function somehow. In general .mex functions are designed to do the opposite of what you are asking - they compile C/C++/Fortran code so that it runs in Matlab, not compile Matlab code to run in C/C++ applications. But, it seems like that is good place to start in order to try and do what you want. Hopefully someone else who is more familiar with .mex files can comment on whether this would work. Good luck.
+ Thanks for the help. It means a lot to me. I am still figuring out the radii and offsets which are quite interesting . Just another thing : How to use classregtree ? I checked the mathlab page , but I didn't understand that example on how we are loading the data into and displaying it . I am currently running Mathlab 2014b so it doesn't show the example.
Try imagesc. If I remember correctly you might need to flip the image over with flipud so that both show properly. Not at computer atm so can't test though. 
Generating this tye of plot in Matlab is actually relatively straightforward. Step 1: Generate "X" and "Y" vectors that have the x and y locations for each city the salesman visits in the order he visits them in. X = [x1 x2 x3 ... xn]; Y = [y1 y2 y3 ... yn]; Step 2: plot using the standard plot function and the 'o-' flag plot(X,Y,'o-') title(...); xlabel(...); ylabel(...); Step 3 (optional): If you try and solve the problem iteratively and want to update the plot like is shown in the video you will need to update the order of these X and Y vectors. The easiest / most efficient way to do this is probably to start out with some default order and then use generate an index list for the current iteration. Xorig = [x1 x2 x3 ... xn]; Yorig = [y1 y2 y3 ... yn]; ind_cur=[n1 n2 n3 ... nn]; X=Xorig(ind_cur); Y=Yorig(ind_cur); plot(X,Y,'o-') title(...); xlabel(...); ylabel(...); Step 4 (optional): Update the text for "Tep" and "Distance" using the *text* function % x_dist and y_dist indicate position on the figurem cur_dist is Current distance value text(x_dist,y_dist,['Distance: ',num2str(cur_dist)]);
You can use whatever image plotting function you want, you just need to make sure that the overlay plot is mapped to the right coordinates. 
So the red plot is actually taking a row-wise fft and calculating the power from it so its values are huge. How would i map that to pixel coordinates
So there are a couple of ways you could do that, depending on what sort of analysis you want to do. I think the most straightforward way would be to store the output in a 1280x6 matrix where each column is one channel. In that case it would just be: out = zeros(1280, 6); for i = 1:size(out, 1) out(i,1) = ch1Stuff(); out(i,2) = ch2Stuff(); out(i,3) = ch3Stuff(); out(i,4) = ch4Stuff(); out(i,5) = ch5Stuff(); out(i,6) = ch6Stuff(); end
Might want to look into the [Jacobian](https://en.wikipedia.org/wiki/Jacobian_matrix_and_determinant). Here's the [matlab](https://www.mathworks.com/help/symbolic/jacobian.html) documentation.
rch = reshape(ch, 15360/12, 12); C = num2cell(rch, 2);
To me the formulation of your question isn't very clear. You have a 3d dataset (2d+1(time) coordinates) with noise, and you want to denoise it to measure angles? maybe you could decrease the accuracy of the X and Y coordinate (which is higher than the signal strenght anyway, because you have noise in there). In that cause, i'de just use [round](https://nl.mathworks.com/help/matlab/ref/round.html). How are you measuring your angles btw? Your formulation smells like an unorthodox method, but I can't actually tell.
Do you have the robotics toolbox installed? I dont and get the same result.
Cell arrays and structures will be your friends here, as they allow you mix data types.
I don't think your approach is very logical. &gt; I want this line to be more 'straight', as I use the angles between the individual points in the line if you straighten your line, your throwing away data. &gt;but these radical changes do not mean a lot as there is very little movement. what solves this is using the size of the step to modify whatever you do with the angle you calculate. This way you dont throw away data arbitrarily, but also achieve insensitivity to small steps, with the added bonus that the the effect of the small step are straightforwardly controlled for by some sensible parameter. if you really want to though; this next line smoothes the x array by including the next and the last value in the current value, weighing with a factor f ( with f between 0 and 0.5) x(2:end-1) = (1-2 * f) * x(2:end-1) + f * x(1:end-2) + f * x(3:end)
Thank you, I will try to implement this after my class. 
I just completed a MatLab based project on modelling the classical Ising model using the Metropolis Monte Carlo algorithm, and the Heisenberg model in 2-D using the stochastic series expansion, quantum Monte Carlo algorithm. Both were challenging, and I guess thermodynamics-related, as the final goal in calculation is to find the temperature dependence of specific heat/magnetic susceptibility in order to identify phase transitions. 
During my BSc, I developed a code to design reinforced concrete beams and sold it to a classmate for $5.
I wrote a commercial software in Matlab for the company I work for, but during my off hours. I was able to sell it to them for a pretty great price, but it seems like this would not be a very reliable side gig.
Would you please help me ?
A lot of MPC and APC modules/function blocks in large scale process control software packages (Siemens, Foxboro, Rockwell, etc for example) are back-boned by Matlab. Nothing I've sold personally, but that is a major industry implementing the software. It is currently under utilized, but from industry experience, that is where a lot of the money will be in the next 20 years.
I'm still confused on how to show the frequency of my image and see what's the impact. Some help would be so much appreciated 
I got paid ten bucks to make something for the rms error propagation. Took like 15 minutes 
It's hard to understand what you are asking. What do you mean with matrix generation? Do you mean the way you would input a matrix in the code? Are you referring to row major/column major storage? Does this refer to the performance of some linear algebra operations?
If you are having Matlab code which you don't want to port, I understand that [Octave](https://www.gnu.org/software/octave/) (/r/octave) is a lot more closely compatible than Scilab. Admitted, I've last used Scilab as an undergrad.
You haven't even asked a clear question, and you certainly don't seem to have put any effort into answering it yourself. The fact that you don't even seem to know how to ask about the problem you are having leads me to believe that you've basically skipped the whole semester and want us to teach you a class on digital signals via reddit. No. 
Reading data in a text file is one of those things I always have to figure out again each time I need to do it. In principle though, what you're trying to do should be easy. Typically you just get an array that's got however many rows your text file had. What exactly is going wrong for you? Maybe try some of the other text reading functions: dlmread(), readtable(), textscan(), etc. Check out the documentation and see which one seems to fit your needs the best. 
Not sure if this is applicable to your situation, or what versions of Matlab this applies to, but an easy/lazy way for generating file import and parsing scripts is to use the built-in tools in Matlab. Right click on your text file and select "Import Data". Format the selection of cells being imported accordingly, then instead of clicking import data, use the drop down and select "Generate code". This will auto-generate all the code necessary to do what you want. I believe as long as your data is repeating with some pattern the generated function can import a file with an arbitrary number of rows. 
I just don't know how to input these equations into Matlab that it'll understand what I want. I tried using linspace to no avail and I've tried simply typing out what I have written but I'm a noob when it comes to matlab so I guess I don't know proper formatting
To input a matrix/vector you do: A = [a11 a22 a33; a21 a22 a23; a31 a32 a33]; b = [b1; b2; b3]; For solving Ax=b x = A\b;
As in the way you would input a matrix in the code.
This actually does not provide enough information (i.e. cannot print greek symbols; can only label major, not minor ticks. It turns out matlab does not have a very robust system for labeling ticks. I found a program on stack exchange called "format_ticks.m" but even this does not entirely solve my problem. grkSym=[]; for i = 0:8 sym = {('$\Delta$'),('$\Theta$'),('$\alpha$'),('$\beta$'),... ('$\gamma$'),('$\Gamma$')}; grkSym = [grkSym sym]; end pcolor(zmat) set(gca,'XTick',[1:54],'YTick', [1:54],'XTickLabel',[],'YTickLabel', []) [hx,hy] = formatTicks(gca,grkSym,grkSym,[],[],[],[],[],'FontSize',6); This was as far as I got.... 
Generally speaking you will have few problems running Matlab code written on Windows on Linux, and vice versa. There are a few cases where things work differently - ls and dir come to mind, and I'm sure there are other commands that interact with the operating system. I forget exactly how they differ, but I always run into problems with that, and so use a simple "if isunix" statement to deal with those types of situations. I have written quite a lot of fairly complicated tools and analysis pipelines, especially interactive data browsers/plotters, and I have very few problems moving from one OS to the other.
It's my bad I didn't explain well my question or I didn't explain it at all. My apologies. And good luck. 
No problem, man. Thanks for the help!
That's a simple way to solve the problem of incomparability. Thanks
I personally prefer the windows setup and maintenance, as I ran into some extraneous compatibility issues. As with most things these days, a lot of software is more accessible through Windows, and it really depends on what your needs are. You definitely get more physical control in some sense when going with Linux.
With linux I had a lot of issues with getting hardware acceleration working. (Still can't on Arch) Also if you want gpuarrays, CUDA configuration is a bit intimidating. Besides that, as others said, there should be no problems.
I exclusively use Matlab in a Linux environment. As stated by others, most code should work with no or little modification. Just know that any M$ COM specific calls will not work in Linux, as they are M$ dependant. Also, any source that relies on toolboxes/apps that were created for M$ will not work either. Side question, why are you using Matlab on Windows instead of Linux? From my previous experience, I have enjoyed Matlab on Linux much more. I am able to take advantage of the Linux environment when needed. I'm biased, but Linux is a far better environment for programmers, engineers, and those in the scientific community.
I can find the angle from the x, y, and z values. It doesn't directly give me degrees so I'm guessing I don't have one. 
Look up ode45. :)
Rangesearch or pdist2 come to mind. Make sure to keep in mind whether or not the distances returned are inclusive or not. Ie there may be 0 in the returns marking the distance from itself to itself that will mess up a simple find or index search for points less than a min distance. Edit. Oh and look at Combvec. It may be useful for the 3d indexing you mention.
Having a hard time to understsand this one.. could by any chance you modify my code to work with that function? Also, according to wolfram, there doesnt seem to be an answer as well Edit Probably having a rough time simply cause I havent learned it in calculus yet.
edit: looks like i misread your question, I thought you wanted to find the closest cube point for all points of your input. My method might work as long as only one point is ever close to each of the corner points. Then you can just grab the ones that get assigned to each corner. But if there are multiple points who are close, they all get assigned to the corner and you can't distinguish between them. Are the points of the cube you need at an integer spacing? If so you could just round the input numbers. Actually, as long as you have a regular equal spacing in all directions you could always multiply both datasets with a factor that brings the cube spacing to one, round then and divide back to your original cube.
Maybe what you need is a [complete map of optimal tic-tac-toe moves](https://xkcd.com/832/)
[Image](https://imgs.xkcd.com/comics/tic_tac_toe.png) [Link](http://xkcd.com/832_large/) [Mobile](https://m.xkcd.com/832/) **Title:** Tic\-Tac\-Toe **Title-text:** The only winning move is to play, perfectly, waiting for your opponent to make a mistake\. [Comic Explanation](https://www.explainxkcd.com/wiki/index.php/832#Explanation) **Stats:** This comic has been referenced 106 times, representing 0.0681% of referenced xkcds. --- ^[xkcd.com](https://www.xkcd.com) ^| ^[xkcd sub](https://www.reddit.com/r/xkcd/) ^| ^[Problems/Bugs?](https://www.reddit.com/r/xkcd_transcriber/) ^| ^[Statistics](http://xkcdref.info/statistics/) ^| ^[Stop Replying](https://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=ignore%20me&amp;message=ignore%20me) ^| ^[Delete](https://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=delete&amp;message=delete%20t1_dgk0pd6)
The output of your PID controller is not the actual signal, but the duty cycle of your PWM signal. If you really want to see the 0-1 switching, you'll need to make another block which creates that. It's not hard, but it's time consuming and also somewhat pointless for the sake of what you are doing. The output of your controller is a duty cycle, and the input to your heat source is also a duty cycle. Adding the additional conversion in there to simulate real world hardware is a waste of your time. Now, the issue you actually have is limiting the PID controller output from 0 to 1 or 0 to 100. On the PID controller's settings page, under the PID Advaned tab, if you check the Limit Output and set your lower and upper saturation values and select an anti-windup method (probably clamping), the controller should stay within the range you are setting. 
thank you so much I now understand perfectly!! After many tests, I can confirm it's butter smooth :D 
If you calculate the derivative at every point, you can just select based on the range i.e. derivativeVals = -2 : 0.1 : 1 mySelection = derivativeVals &gt; -.5 &amp; derivativeVals &lt; .5
Also compiled stuff (mex) won't work across Windows/Linux (solved by recompiling on the other platform). 
Can you explain what the derivativeVals line is doing? 
If you have statistics toolbox, use knnsearch. Given two sets, A and B, knnsearch(A,B) returns the index of the closest point in A to every point in B. So if you want the closest data point to each point in your coordinate cube, use knnsearch(X,C) where A is your data (in rows, so an Nx3 matrix) and C is your coordinate points. 
Tic tac toe is whats call a "solved game". So every game where the ai starts it can always win... Or at least always tie if the opponent starts. You can just hardcode these moves, they are pretty easy to figure out. Or go online and look up "always win at tic tac toe" strategies and code those.
I'm going to drop some hints which you might puzzle together for a good solution. Your matrix has 20 spots, and there are 10 values from one to ten. How many numbers will be in the matrix less thean twice? can you make an array (20 by 1) of all the possible numbers, and then loop through your array once to place them. The above appoach wont always work. THis can be solved in different ways. I'de use the fact that it almost always does work to solve it. 
This is what I personally would do for something like this: finished=0; while finished == 0 x=nan(5,4); % make empty 5x4 matrix % Add values to this empty matrix 1 at a time % For every value added check if it meets your 2 conditions % (i.e., no adjacent cells have the same value, and the value only occurs twice). % If not try a new value. % Keep track of all the values you tried. % If a single location has tried every value between 1 and 10 and they all failed then reset the matrix % (i.e., go to the next iteration of the master while loop) % If you make it to the end and fill in all 20 values, set "finished = 1" end I will let you figure out how to make the middle section, should you choose to use this method. It may not be the most efficient way to go about it, but it should work and computers are so fast that it shouldnt take very long.
As others have said you could try and hardcode the best moves for each scenario, but that doesnt sound very AI-ish (and sounds rather tedious to me personally).I admit I haven't taken the time to go through all your code, but this is what I would do: I would try a brute-force type of approach. There are 9! possible moves in a tic-tac-toe game, which is only 362880 moves. Realistically though youd only need to consider 8! moves (40320), since this wouldnt need to be done if you started the game (code this case separately). This is a lot for people, but nothing for a computer to consider. Based on the current state of the board, play out every possible future game for each possible future move. Choose whatever next move results in the most wins. If 2 moves are tied for best then randomly choose one. Admittedly this isnt a "smart" AI, in the sense that it weighs all future moves equally likely. I imagine that (one way, though certainly not the only way) you could improve this using some sort of neural-net based computer learning, but this isnt really my field of expertise I know . I suppose you could also repeat the above brute force process for the potential future moves of your opponent and use that to weigh their possible moves (since you will need to calculate these scenarios anyways), though I'm not sure if this would result in a big improvement or not.
Do you have to place the numbers element-by-element using a random replacement whenever the rules are broken? If not, you can initialize your solution using something like this: Vi = [1:10,1:10]; % row vector with all values repeated twice ind = randperm(20); % creates a random permutation of integers [1,20] Vi = Vi(ind); % re-orders Vi mA = reshape(Vi,5,4); % creates 5x4 matrix While there's no guarantee that this initial matrix mA will satisfy the no-neighbors condition, it's at least in the right form. From there, you can create a loop that looks for neighboring elements and trades one for another random element in the matrix. Once this loop resolves any issues, you have a solution.
&gt; I can open PowerPoint from Matlab and insert figures, but can't figure out how to insert videos. Do you mean that you insert the images directly only powerpoint slides without actually needing to use the powerpoint application at all? Or am I misunderstanding you? I didn't know you could do this (though this certainly doesnt mean that its not possible). At any rate, is the above is correct this may not be what you are looking for. BUT, if you just want a .avi video made in Matlab inserted into a powerpoint presentation, you can use [videoWriter](https://www.mathworks.com/help/matlab/ref/videowriter.html) to save the .avi movie to disk from Matlab and then load/embed it in a slide using PowerPoint. Hope this helps.
So, to confirm, yu have a list of points and want to find which point on that list is closest to (3,3,3), which is closest to (-3,-3,03), etc.? Assuming standard cartesian coordinates, distance is effectively the same as the L2 norm. Assuming each point's (x,y,z) coordinates are represented as a 1x3 vector "pos = [x,y,z]", the distance is pos*pos'. Technically the distance is the square root of this, but since you are just looking for the minimum this extra step is unnecessary. So, the distance from the point (3,3,3) is: ([x-3,y-3,z-3])*([x-3,y-3,z-3])' If the desired (x,y,z) coordinate is the same (as in the case above), you can just do: (pos-3)*(pos-3)' Dealing with multiple points makes using matrix multiplication a bit more difficult, but you can still do: pos = N x 3 array with all positions xx = desired x yy = desired y zz = desired z pos_mod=[pos(:,1)-xx,pos(:,2)-yy,pos(:,3)-zz]; dist2=sum(pos_mod.^2,2) You can then find the best point by finding the minimum of "dist2". There might be a way to do this using normal matrix operations (rather than using " sum " and " .^ " notation), but I cant think of it at the moment.
Thanks! This really helps a lot!
probably like this: load(tile)
thank you
Wouldn't the jacobian of a matrix be a rank 3 tensor? Unless each of your columns or rows depends on only one variable, I dont see how you could store it in a matrix 
Please see our rules for submitting homework [here](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/) and make the necessary changes.
I'd love to help out but I will probably need some more information. Are you learning about genetic algorithms in a class? This seems to be pretty advanced stuff (albeit applied to a very straightforward problem). Based on your post, it sounds like you're stuck on creating the list of strings (aka the individuals) to be used in your population. The question you asked doesn't need any knowledge of a genetic algorithm, only that it will eventually be used to create the initial random population. I would break it down into a much simpler task: write a function that outputs a list of strings of length x where all characters are randomly selected from lower and upper case letters. Moving on to the actual assignment, are you familiar with these terms with regards to genetic algorithms? * Individual * Population * Cross-breeding * Mutation ( and mutation rate) * Fitness * Cost function * Survival Selection If the answer is no to any of these, then you'll want to review class notes on how a genetic algorithm works. Like I said, a genetic algorithm is not something to undertake lightly. My first one took a team of three people the better part of a quarter in undergrad with a lot of work going into the fitness function and the general top level code. I've since written genetic algorithms by myself much quicker, but that first experience was rough, but ultimately rewarding.
Thanks for wanting to help! I'll pm you with some more information on it.
[Maybe give this a look?](https://youtu.be/G2hzWTgVcJE?t=30s) 
Check the link for the given expression. How can I have anything numerical there? The problem is that it doesnt solve symbolically. I have two of these. And both of them have the same error which seems odd.. for a given task.
It would probably be easier to just guess another permutation rather than swapping elements. I've had a bit too much beer to do the maths, but I'm sure the probability of drawing a valid permutation is large enough that any difference in efficiency is negligible. So something like this: while any(any(~diff(mA, 1, 2))) mA = reshape(Vi(randperm(20)), 5, 4); end
Can this specific example even be solved numerically? Im sorry Im just having a hard time not knowing how to even calculate it by hand.. we just started learning it in calculus..
Yeah, looks like an ode with numeric boundary values. Just go ahead and solve that numerically. 
If I only knew how. Guys dropped links here, but they dont seem to help in my case. Perhaps I just dont get it. What exactly is the numeric answer? Is it the graph or a number?
that is interesting insight. any recommendation (books etc) where to start about MPC and APC, thank you.
Probably some combination of diff and permute... Will give it a deeper thought a little later.
This seems straightforward enough to do... 1) Load the audio file using [audioread](https://www.mathworks.com/help/matlab/ref/audioread.html) 2) use [fft](https://www.mathworks.com/help/matlab/ref/fft.html) to get the frequency specrtum 3) Calculate the [spectral centroid](https://en.wikipedia.org/wiki/Spectral_centroid) by calculating a weighted mean of frequencies produced by the fft (I believe youd use the single sided amplitude spectrum). This only produces a single value though, so perhaps you want a moving window or something? in that case the procedure is the same, just loop over the .wav file with the moving window and calculate each individual window's spectral centroid 4) Plot results using your function of choice So, what have you tried and which parts have given you trouble?
Good luck!
This subreddit is about helping people learn about Matlab / share information about Matlab / figure out issues in Matlab. his subreddit is not about doing people's Matlab homework for them. Give it a try, use [Matlab's excellent documentation](https://www.mathworks.com/help/), and if you cant figure it out still post what you have tried so far and someone here will help you figure out what the problem is in your code.
Sorry for not being clear, I want to produce b.
In 2016b, with [implicit expansion](http://blogs.mathworks.com/loren/2016/10/24/matlab-arithmetic-expands-in-r2016b/) you can accomplish this with: b=a.'-a. In earlier versions, in addition to the repmat option you could use: b=bsxfun(@minus,a.',a) You'll have to decide how to generalize it to a matrix input, because in your example you took a [1xn] vector as an input and produced an [nxn] matrix. The first dimension would already be "taken" if you input a [mxn] matrix. You might, for instance decide to use a third dimension, which you can do with bsxfun and permute.
 path = fldr; Your `bttn_bh1_Callback` is trying to get `fldr`from it's local workspace and not the base workspace. The [documentation](https://www.mathworks.com/help/matlab/creating_guis/share-data-among-callbacks.html) on how to share data between call backs is very good. Read through that and it will teach you how it all works. Also, why do you select a folder then open another window to select the file? `uigetfile` returns the filename and the folder path. 
&gt;I am interested in which of these functions produces a larger magnitude value (i.e., most positive or most negative number). What I get from that is that you do not necessarily want to compare the complete functions in 6D space, but are only interested in the extreme values. If that is the case, it might be usefull to identify these locations (A,B,C,D,E,F) through different means. For instance you could use syms stuff for that ([search matlab syms extrema](https://www.google.nl/webhp?sourceid=chrome-instant&amp;ion=1&amp;espv=2&amp;ie=UTF-8#q=matlab+syms+extrema) About the title question. I can think of two options to plot 3 parameters per image: 3D scatter plots with the color indicating the values. This works reasonably, but isn't great [example](https://i.stack.imgur.com/3PRaf.png). Another option is using [isosurface](https://nl.mathworks.com/help/matlab/ref/isosurface.html) with patch. You then can get a plot that shows you the planes where a function has a constant value. Gives prettier pictures, but can become slow. [example](https://i.stack.imgur.com/KAwQm.png)
&gt; Another option is using isosurface with patch. I didnt know about that function, thanks for the suggestion. I think that might actually work quite well. I also think this would better suit my needs than the 3d scatter plot &gt; What I get from that is that you do not necessarily want to compare the complete functions in 6D space, but are only interested in the extreme values. Its not so much that in interested in the extreme values, but more that I'm interested in the which function is larger at any given location in 6-D model space. I dont necessarily need to know *how much* bigger one function is than the other, though having some idea would be nice. To hopefully describe it better, [this is the type of colorscale I would likely use in the plot](https://i.imgur.com/rDRL67m.jpg) &gt; For instance you could use syms stuff for that (search matlab syms extrema) While this isnt directly what I want, I suppose I could try and symbolically find the minimum of: abs(function1 - function2) That said, I'm not sure how feasible getting an analytic solution to this would be, but I'll look into it. I was planning on plotting everything in Matlab but I'm doing all the symbolic math in Mathematica though (its better at symbolic math than Matlab is), so I'll try this out there. Thanks for the suggestions!
Sure, it must be a very weird problem if it does not have any numerical solution. There are virtually hundreds of numerical methods that may be able to solve this! On the link that I sent you, try to solve the x '' + 5x '- 4x = sin (10t) problem (the second one, not the first one like I said before), then try to solve your problem on a similar way. Reducing the order of the EDO is a easy way to solve this kind of problem in Matlab since you can then use the build-in ode45 function. This function (ode45) uses the Runge-Kutta method of 4th and 5th order to solve first order ODEs, this is why you change your problem from a second order EDO to two first order EDOs. Runge-Kutta is one of the most famous and well-known numerical methods, so there are few problems and questions you will encounter when dealing with it. I see that you are asking in another comment about what the numerical solution is, so I think you are trying something way ahead of what is expected of you or what your teacher have teached you. Numerical solution is the *approximate* values of the function on different points. On Matlab it'll be a vector that you can then plot. ONE way of getting those *approximate* values is using finite difference methods (https://en.wikipedia.org/wiki/Finite_difference). But you see, there is a whole area of engineering that deals only with numerical methods. It is not something that I can describe easily in a reddit post --- because it's huge topic and because my English sucks! Now for the analytical (or symbolic) solution: If I'm not mistaken, you can get the solution using the [Power Series Expansion] (https://en.wikipedia.org/wiki/Power_series_solution_of_differential_equations). Taylor Expansions is the way to start studing this, it's easier and more didatic; But I believe the [Frobenius Method] (http://mathworld.wolfram.com/FrobeniusMethod.html) is more adequate for this problem, be warned though: huge calculations ahead! I do not have Matlab installed in the PC that I'm using right now, so I can not really help with the coding; But maybe I'll be able to help you with the analytical solution this monday or tuesday if that's fine with you. 
No I don't need the plotted data to write the code, it is mainly to help visualize. I basically want analyze the data (for a robot) in real time at four points to make sure no obstacles are in its path. However, I need to separate the data into a binary form for referencing when writing the code. So from the point of view of the plot, if a grid cell has more than (say) 6 points in it, consider that cell occupied, and if less than, consider it open. 
dopeee! thats looking pretty solid. I'll mess around with it for a little bit and check back to let you know how it went! thanks! edit 2: i'm having trouble getting it to be zero's or one's. Instead of using find, I'm trying to put it into a loop saying if bincount&gt;=6; bincount=1 else bincount=0; but its not changing the matrix I'm being given at all.
\&gt;&gt; help while
Open matlab and type: doc fprintf 
Let's start with what you want to type to the screen. What did you have in mind?
 % Initialize error to a large value while error &gt; .03 % Do super cool stuff % Update error end
 syms f Q c f = pi*Q*c + 1 Q_sol = solve(f==0,Q) 
Thanks With the help of another guide I managed to solve it and get an understanding of how this works. :)
No go ahead stick to your RTFM bs. No need to change it up now. Next time, if you don't want to help, just don't comment. 
Sounds like someone's mommy didn't love him
It's not bs, it's a critical skill that will help OP. Read the documentation. If something still isn't clear, at least tell us what the documentation didn't help with. We're not paid to be here. If you want help, you have to help us help you. Stop whining. 
&gt;what should I do? You should try reading the documentation. 
Yeah
First of all, thank you for your help and detailed explanation. I understand what you were saying at the end. I just needed help desperately. I tried but hahaha... not a surprised I made some kind of an infinite loop. I hope you can see my codes and correct my mistakes (probably there are going to be full of mistakes going on). x= audioread('police.wav'); y=fft(x); Fs = 1000; % Sampling frequency T = 1/Fs; % Sampling period L = 1000; % Length of signal t = (0:L-1)*T; % Time vector &gt;&gt; P2 = abs(y/L); P1 = P2(1:L/2+1); P1(2:end-1) = 2*P1(2:end-1); f = Fs*(0:(L/2))/L; n=250; for i=1:length(x)-(n-1) xi=x(i:i+n-1); spec=sum(f.*P1)/sum(P1) end plot(t,spec) 
I made some modifications to your code. You were decently close, but missed a few things. I still left one or 2 things for you to do in the code I wrote. I made a note of where I changed things. Also, you actually need to set Fs. If it is an audio track I can guarantee you its not sampled at 1000 Hz. 44,100 Hz is pretty common, though your track might or might not use that. x= audioread('police.wav'); y=fft(x); Fs = ???????; % Sampling frequency %%%%% CHANGED %%%%% T = 1/Fs; % Sampling period L = length(x); % Length of signal %%%%% CHANGED %%%%% t = (0:L-1)*T; % Time vector P2 = abs(y/L); P1 = P2(1:L/2+1); P1(2:end-1) = 2*P1(2:end-1); f = Fs*(0:(L/2))/L; % Plot overall frequency spectrum %%%%% CHANGED %%%%% figure plot(f,P1) title('Single-Sided Aamplitude Sprecturm for Entire Audio Track') xlabel('Frequency') ylabel('Amplitude') n=250; % length of movin window to calculate spectal centroid in %%%%% CHANGED %%%%% spec=zeros(1,length(x)-n); % pre-allocate %%%%% CHANGED %%%%% fi = Fs*(0:(n/2))/n; % new frequency for fft of length n (Fs doesnt change) %%%%% CHANGED %%%%% % Loop over audio track with window of length n for ii=1:length(x)-n xi=x(ii:ii+n-1); yi=fft(xi); %%%%% DO THIS %%%%% % Calculate new "P1i" value based on "yi" % Use fi and P1i to calculate spec spec(ii)=sum(fi.*P1i)/sum(P1i); end % Plot results tplot=t(1+floor(n/2)):t(end-ceil(n/2)); % center time for spectral centroid window %%%%% CHANGED %%%%% figure plot(tplot,spec) ylabel('Frequency (Hz)') xlabel('Center of Time Window (seconds)')
This is amazing !!!!!!!! Isn't it: x= audioread('police.wav'); y=fft(x); Fs = 44100; % Sampling frequency %%%%% CHANGED %%%%% T = 1/Fs; % Sampling period L = length(x); % Length of signal %%%%% CHANGED %%%%% t = (0:L-1)*T; % Time vector P2 = abs(y/L); P1 = P2(1:L/2+1); P1(2:end-1) = 2*P1(2:end-1); f = Fs*(0:(L/2))/L; % Plot overall frequency spectrum %%%%% CHANGED %%%%% figure plot(f,P1) title('Single-Sided Aamplitude Sprecturm for Entire Audio Track') xlabel('Frequency') ylabel('Amplitude') n=250; % length of movin window to calculate spectal centroid in %%%%% CHANGED %%%%% spec=zeros(1,length(x)-n); % pre-allocate %%%%% CHANGED %%%%% fi = Fs*(0:(n/2))/n; % new frequency for fft of length n (Fs doesnt change) %%%%% CHANGED %%%%% % Loop over audio track with window of length n for ii=1:length(x)-n xi=x(ii:ii+n-1); yi=fft(xi); %%%%% DO THIS %%%%% % Calculate new "P1i" value based on "yi" P2i = abs(yi/L); P1i = P2i(1:L/2+1); % Use fi and P1i to calculate spec spec(ii)=sum(fi.*P1i)/sum(P1i); end % Plot results tplot=t(1+floor(n/2)):t(end-ceil(n/2)); % center time for spectral centroid window %%%%% CHANGED %%%%% figure plot(tplot,spec) ylabel('Frequency (Hz)') xlabel('Center of Time Window (seconds)') But then I got this error : Index exceeds matrix dimension.
oh what I changed was P2i = abs(yi/L); P1i = P2i(1:L/2+1); But it seems not working also with an error: Index exceeds matrix dimension.
Add 4 spaces before every line to make it look like code. You can easily do this by indenting everything once in Matlab. As it is now it is unreadable. That sad, the error is (probably) just from this part: P2i = abs(yi/L); P1i = P2i(1:L/2+1); This is for the windowed part, meaning the number of points in "n", not "L". Also, looking over what I posted I realize I made a mistake for "tplot". Use this instead. tplot=t(1+round(n/2):L-n+round(n/2));
fprintf('text') prints text you use special characters to do stuff to the text. ###### Example 1: \n creates a new line fprintf('text1 \ntext2') produces text1 text2 ###### Example2: %i inserts an integer, %f and %g inserts floats fprintf('integer = %i \nfloat = %f \ngeneral = %g',10,4.567,133333333) produces integer = 10 float = 4.567 general = 1.3333e8 ###### Example 3: %.Nf produces floats with N digits after the decimal. fprintf('float1 = %.1f \nfloat2 = %.4f',1.234567,1.234567) produces float1 = 1.2 float2 = 1.2345 ###### Example 4: Use a loop x=[10,20,30,40,50]; for nn=1:5 fprintf('%i',x(nn)) end produces 10 20 30 40 50 This summarizes a few common uses for fprintf. **EDIT:** I'll add one more item thats a bit more advanced. One of my personal favorite uses of fprintf is to keep track of where you are in a loop that is time-consuming. To get a counter that will automatically update you can use: % Setup Display Counter fprintf('Current Iteration: '); nBytes=fprintf('%i of %i',0,N); for nn=1:N % DO STUFF % update display counter every 10 iterations of the loop if rem(nn,10) == 0 fprintf(repmat('\b',1,nBytes)); % Remove currently displayed info nBytes=fprintf('%i of %i',nn,N); end end 
This is what I did and I still get that index exeeding message.
I added few %%%, because I thought there should be close %... Also I changed tplot. I dont know why I still get this error. I hope you can find where the index error coming from
That was stupid of me. It's pretty big code so there's bound to be tons of those kinda mistakes. As far as seeing the variable I shouldn't have to do that cause part of the function in the Lagrange stuff should be solving for it. I might be wrong about that the teacher didn't give us a terribly large amount of exposure to Lagrange's equation before this assignment. 
the app toolbox would be pretty useful for this if you are new to MATLAB 
fprintf prints formatted text to the location provided as the first argument (this can be a file, the console or an object. The string formatting is similar to C and many languages use similar printf commands. Some examples: Print 'hello' to console fprintf(1, 'hello'); Print a number held in a variable to an open file fid = fopen('file'); num = 2; fprintf(fid, 'number printed is: %d', num); The matlab documentation is well written and I recommend you check there first for any such information, they almost always contain examples.
Really???? If you want help, you should actually take the time to actually listen to what people are telling you. I'll repeat what I posted last time: The error is (probably) just from this part: P2i = abs(yi/L); P1i = P2i(1:L/2+1); This is for the windowed part, meaning the number of points is "n", not "L". If you want to know where an error is coming from, just look at the error message that comes up. It tells you which line in the code caused the error. (Note: you have to save the code as a script and run it to get this - just copy/pasting the code wont do it). I get that you are new to Matlab, but that is no excuse to ignore the information that the program is telling you about what is wrong, nor is it an excuse to ignore the information that other people are telling you about what is wrong. &gt; I added few %%%, because I thought there should be close % This doesnt matter, the "%" sign is just for comments. You also dont need all the %%%%% CHANGED %%%%% parts...those were just there to let you know I made a change on that line.
Next time add break commands and step through your code to determine your indices. Or add a print statement.
I believe that [vpasolve](https://www.mathworks.com/help/symbolic/vpasolve.html?s_tid=srchtitle) should work
Then what does it do when I use ClassA(b)? What do I do when input parameters to class? Now that we set function [x y z], why isn't [x y z] the function name? It seems different as the usual form function unpack() 
That did the trick, thanks
Yeah, sorry I was in too hurry and I missed the point. I read it carefully and now I fixed it. Thanks! I think it's working now!!! I really do appreciate your help.
from your plot, i get that you need to know stuff about function1 - function2 moreso than your proposition with abs. This way you can also tell which one is higher, and not only how big the difference is. Im at work now and have a third option to look at 3d data. An interactive thing that i made to look at ct data. Give it a 3D array as first input and click and or drag on the images: function [hO] = dicomCollage( X,sz,hfIn) %DicomCollage interactive visualisation with images of 3D data. % X is a N*M*K matrix % sz is a 1x3 array with dataaspectratio of X persistent ha hi hf persistent Xp indArg0 if ~exist('sz','var') sz = [1 1 1]; end sz = abs(sz) ; Xp = X ; indArg0 = arrayfun(@(s) 1:s,size(Xp),'uni',0) ; %functions plusone and minus one (with 3+1 = 1) p1 = @(i) mod(i,3)+1 ; m1= @(i) mod(i-2,3)+1 ; if nargin &lt; 3 hf = figure(8008135) ; clf else hf = hfIn ; end %double to not crash on binary masks caxlim = double([min(X(:)) max(X(:))]) ; set(hf,'WindowButtonUpFcn',@buttonUp) Xsz = size(X) ; dirInd = round(Xsz/2) ; acc = eye(3) ; for di = 1 : 3 ha(di) = subplot(2,2,di) ; %cell as input ot Xarg, to choose the dimension withouth a switch indArg = indArg0 ; %is 1 and 2 for X and Y resp. indArg{di} = dirInd(di) ; Xarg = squeeze(X(indArg{:})) ; if di == 2 Xarg = Xarg'; end hi(di) = imagesc(Xarg) ; set(ha(di),'xcolor',acc(di,:),'ycolor',acc(di,:)) axis tight hold on; hp(di,1)= plot3(ha(di),xlim(ha(di)),[0 0]+dirInd(p1(di)),[1 1],':','color',acc(p1(di),:),'lineWidth',1.5); hp(di,2) = plot3(ha(di),[0 0]+dirInd(m1(di)),ylim(ha(di)),[1 1],':','color',acc(m1(di),:),'lineWidth',1.5); daspect(1./[sz(m1(di)),sz(p1(di)),sz(di)]) set(ha(di),'ButtonDownFcn',{@CTclickBDF,di}) ; colormap(bone) caxis(caxlim) end set([hi(:);hp(:)],'HitTest','off') if nargout &gt; 1 hO.p = hp ; hO.a = ha ; hO.i = hi; hO.f = hf ; end persistent theGoodD ; %click funciton. Update he cross on the current screen, than update the %other panels function CTclickBDF(hfig,eventdata,di) set(hf,'WindowButtonMotionFcn',@windowMoveThing) ; theGoodD = di ; windowMoveThing() end function windowMoveThing(h,event) %calculate new indices fromt he mouse click event mousePoint = get(ha(theGoodD),'CurrentPoint') ; dirInd = round(mousePoint([1,3])) ; dirInd = dirInd([1 2]) ; %check for (slightly) out of bounds di = theGoodD; lims = [get(ha(theGoodD),'XLim') get(ha(theGoodD),'YLim')] ; lims = lims(2:2:4) ; if theGoodD == 0 || any(dirInd&lt;=0 | dirInd&gt;lims) % warning('Try to click inside the figure') ; return end %update the crossig lines set(hp(di,1),'YData',dirInd(2)+[0 0]) ; set(hp(di,2),'XData',dirInd(1)+[0 0]) ; updatePanel(m1(di),'X') updatePanel(p1(di),'Y') end function updatePanel(dii,lineDir) %converts x and y to 1 and 2 thisInd = double(lineDir)-87 ; %this is why proper languages start indexing on 0 otherInd = ~(thisInd-1)+1 ; %update the other image indArg = indArg0 ; %is 1 and 2 for X and Y resp. indArg{dii} = dirInd(thisInd) ; Xarg = squeeze(Xp(indArg{:})) ; % if dii ~= 1; if dii == 2 Xarg = Xarg'; end set(hi(dii),'CData',Xarg); set(hp(dii,otherInd),[lineDir 'Data'],dirInd(otherInd)+[0 0]) ; title(ha(dii),num2str(indArg{dii})) ; end function buttonUp(~,~) set(hf,'WindowButtonMotionFcn',{}) ; theGoodD = 0 ; end end 
Thank you very much for sharing the code! I will give it a shot later today and see how it works (atm Mathematica is still running to simplify my results, which is slow for long equations). I'll let you know how it works. &gt; from your plot, i get that you need to know stuff about "function1 - function2" more so than your proposition with abs. This way you can also tell which one is higher, and not only how big the difference is. Let me quickly describe what I am trying to do, as this should better indicate why I was planning to look at the absolute value of the difference. I have a data source that (in polar coordinates) is a function of the vertical angle (call it "x") and the azimuthal angle (call it "az"). The model I am using to predice what the the data should look like is: dataPredict = f0(x) + f2(x)*cos(2*(az-az0)) + f4(x)*cos(4*(az-az0)) In particular, I am trying to find the azimuth corresponding to a particular feature in the model that can be seen in the data. I isolate data for some particular angle x (making the subset of data only a function of azimuth) and then find the "f0", "f2", "f4", and "az0" terms for that particular angle. Now, I know the feature I am interested in is either at azimuth "az0" or at azimuth "az0 +/- Pi/2", but not which (since I dont know if the 2nd and 4th order cosine terms will interfere constructively or destructively here). To solve this, I am taking what information I know about the model or can guess with reasonable accuracy about model properties to predict if the 2nd and 4th order cosines should add or subtract at my desired azimuth. I then compare the data value at the 2 different possible azimuths and see which one fits this prediction. Looking at the absolute value means that I can just compare the data values at the 2 possible azimuths to the background value (f0), and choose the one with the bigger/smaller difference (depending). By looking at if the difference is positive or negative I now have to consider if I am looking for a minimum (more negative) or a maximum (more positive) data value, whether the cosine terms and the background terms are the same sign or different signs, if the function crosses zero at some azimuth, etc. Its certainly still workable, but it seems like it adds complexity and increases the chance of the code making a mistake (especially if the background trend is very close to zero). So, my goal is to find whether I should except my azimuth of interest to produce a result with large variation from the background (cosine combine constructively) or small variation from the background (cosines combine destructively). More specifically, I want to know that as a function of "x" (this was "A" in my last post) as well as the 5 other parameters that are responsible for defining the model (i.e., B,C,D,E,F in my last post.... f0(x), f2(x), and f4(x) are functions of these as well as angle.) Hopefully, this better describes *why* I want to compare these 2 functions. I was able to get analytic results for a few simple cases, but the general solution for the problem has been running for quite some time in Mathematica now with no results. Thanks again for the code and suggestions, you've been very helpful.
https://p.teknik.io/ Use this to post your code, please. Select syntax as MATLAB. You're probably getting that warning because you're using assume(condition). 
I got it. Thanks. Did it a little different. Set a resolution for the map (mm/cell) to create cells scaled to the x and y positions, and then referenced the magnitude to the centers of each cell in x and y directions. I used this to index values within a certain range into one matrix and then created another matrix to define whether or not each cell is considered occupied.This final matrix was used to write the desired code. I appreciate the help mate!!
To make a sub function you simply add another function at the bottom of your main function. Here's a stupid example function [theSum, theProduct] = add_and_multiply(a,b) theSum = add_numbers(a,b); theProduct = multiply_numbers(a,b); function theSum = add_numbers(x,y) theSum = x + y; function theProduct = multiply_numbers(x,y) theProduct = x*y
Your code is evaluating i instead of elements of the array. If I were to do your code I won't use a for loop. It would go something like this: array = input('enter array blah blah blah'); positive = sum(array&gt;0) negative = sum(array &lt;0) zero = sum(array ==0) If you really need to use a loop, i suggest using an if statement for i= 1:length if array(i) &gt; 0 positive = positive + array(i) elseif array(i) &lt; 0 negative = negative + array(i) Else zero = zero + array(i) end
I ran that code with the following output Enter the number of elements in the vector: 6 Enter the array: [1,2,0,0,-1,-2] positive = 1 positive = 3 zero = 0 zero = 0 negative = -1 negative = -3
Oh I misread your question. Give me 10 secs 
the code I sent before was to find the sum of positive, negative and zero elements of the array. this one is to count how many each of them there is. for i= 1:length if array(i) &gt; 0 positive = positive + 1; %I forgot to suppress it on the other code elseif array(i) &lt; 0 negative = negative + 1; else zero = zero + 1; end positive %to show the answers negative zero
You don't need to use a for-loop. In fact, Matlab is designed to handle vector-wise calculations instead of looping through. array = [1 1 1 0 0 -1 -1 -1 -1]; num_positive_elements = sum(array&gt;0); num_negative_elements = sum(array&lt;0); num_zero_elements = sum(array==0); If you **need** to use for-loops, this is seriously very very trivial. sign_counts = zeros(3,1); % array to count elements for i = 1:length(array) sign_temp = sign(array(i)); % returns -1, 0, or 1 sign_counts(sign_temp+2) = sign_counts(sign_temp+2) + 1; end num_positive_elements = sign_counts(3); num_negative_elements = sign_counts(1); num_zero_elements = sign_counts(2);
Nice, thank you, didn't know of this function before! It's even in the documentation (opposite way though, but shouldn't be that hard to switch the suffixes): https://fr.mathworks.com/help/images/ref/blockproc.html#bviqm93
&gt; warning: when using index, integer type needed for colon operator This means that the index you use needs to be an integer. Example: f(1:5) is OK f(1:5.5) is NOT OK This should intuitively make sense, since there are no partial indices. The reason this happens is probably because L (number of samples) is odd. Add this line immediately after you get L to fix it. L=length(x); L=2*round(L/2); On this note, "n" must be even as well. &gt; error: subtitution (not sure) A(:) = B, A and B must have same elements, factors(?) I'm not 100% sure whats causing this, but its related to something not having the correct number of elements. Making sure L and n are both even might fix it. Maybe its tplot? You could try this tplot=t(1+round(n/2):numel(spec)+round(n/2))
After a few minutes of experimenting, I was able to get this to work. I think it does more or less what you want. You might need to play around with the parameters to get everything proportionally sized though. figure plot(rand(10,1),rand(10,1)) [l,l2]=legend('rand'); l2(2).LineWidth=3; % affects line width l2(1).FontSize=15; % affects font size l.FontSize=25; % affects box size
Is there any way to do it with Latex commands in the legend and not get the various errors? Is there any way to automatically have the box size update when changing the font size (the same way it does normally)? I have a lot of figures to alter and it will take a very long time to change the box size manually for each to make sure they all work.
Search for a programmers guide for the specific oscilloscope you are trying to use.
&gt; a Matlab assignment to use a for loop 
to start, you should count the elements in the array instead of asking for the user input. Since you dont know the dimensions of the array, use `numel()` array = input('Enter the array: '); length = numel(array); If you MUST use a for-loop in the assignment, consider using the condition itself to add a number. [true=1, false = 0]. for i = 1:length positive = positive + (array(i)&gt;0); negative = negative + (array(i)&lt;0); zero = zero + (array(i)==0); end
I approve.
You could do something like: syms x y f(x,y) f(x,y) = x^2 - 3*y + x*y^3 feval(matlabFunction(f),2,y) feval(matlabFunction(f),2,[1:10]) But, as others have said, I'm not sure why you would need to use feval here...
I'm trying to implement 3 point Gauss-Legendre quadrature, which would be significantly easier if it was only a single integral. I was planning to use Ix as a function of y which is a result of the first integration using quadrature, but I'm not sure how to make it such that Ix will be a function of y. function I = multiGL2D(f,xL,xR,yL,yR,n) j = (((xL+xR)/2)-sqrt(3/5)*((xR-xL)/2)); k=((xL+xR)/2); l=(((xL+xR)/2)+sqrt(3/5)*((xR-xL)/2)); Ix =((xR-xL)/18)*(5*feval(f,j)+8*feval(f,k)+5*feval(f,l));
So `f` is a function handle and it takes two inputs `f(x,y)`? And you want `Ix` to be a function that takes one input? Maybe something like Ix = @(y) ((xR-xL)/18)*(5*f(j,y)+8*f(k,y)+5*f(l,y)); is what you're after? I'm still not entirely sure what you're asking. 
Unless you have to do this for homework or something, it'd be much easier to use the [`integral2`](https://www.mathworks.com/help/matlab/ref/integral2.html) function. Turns out that page lists two references: 1. L.F. Shampine "Vectorized Adaptive Quadrature in MATLAB®," Journal of Computational and Applied Mathematics, 211, 2008, pp.131–140. 2. L.F. Shampine, "MATLAB Program for Quadrature in 2D." Applied Mathematics and Computation. Vol. 202, Issue 1, 2008, pp. 266–274. You might want to have a look at those and see how they do it.
Thanks, it works fine now :)
Thanks I will give it a go!
no problem. there's an old image processing blog post about it too (I think there's a series of them): http://blogs.mathworks.com/steve/2011/08/16/dealing-with-really-big-images-block-processing/ 
only the embedded loop. I get around this by setting a boolean in the if where you break the inner loop, and checking in the outer loop for the state of that boolean to trigger another break. 
Thanks I will try it out!
You can set the properties of static texts and other GUI objects in the same way as you are currently doing with your pushbuttons. For example, in the callback of a pushbutton set(handles.staticText1,'String',num2str(number_of_sticks)
You are probably looking for [`length(t)`](https://www.mathworks.com/help/matlab/ref/length.html), which returns the size along the largest dimension.
Len = size(t,1) Alternatively Len = length(t), which will return the largest dimension. Not as robust if you have variable array dimensions.
+ Thank you! This is exactly what I was looking for. 
Thank you! That just finished off my assignment. However for an additional 10 points I must be able to implement the game against the computer. I'm a little lost on how exactly to set this up to play against the computer though. Would you happen to know where I may start?
I would suggest to do a small example by hand. This forces you to understand each step you need to code.
Can you elaborate?
[`length()`](https://www.mathworks.com/help/matlab/ref/length.html) is the obvious choice and has already been mentioned. Also alreday mentioned, [`size()` ](https://www.mathworks.com/help/matlab/ref/size.html?requestedDomain=www.mathworks.com) takes an optional second argument that lets you control which dimension you want. `size(t,1)` would be the closest thing to what you currently have. In the interest of showing you more functions that do similar things, I'll also mention [`numel()`](https://www.mathworks.com/help/matlab/ref/numel.html), which counts the total number of elements in an array of any size. Please do learn how to use the documentation! I've linked to the online documentation for each function; you can bring up something very similar in Matlab by doing `doc size` (for instance). `help size` gives a more concise explanation right in the command window. Notice that at the bottom of each of the help/doc pages it shows you some similar or related commands. `help size` would have led you right to `length()`! You'd be amazed how much Matlab you can learn like that.
An easy way to handle it would be to use a switch/case expression. Also, if you do a set(handle), it displays all of the object properties and legal values. In this case, you can change the style from 'pushbutton' to 'text' so it doesn't look like a pushbutton.
If you read the file in as characters using fopen and fread, you can treat the spaces and carriage return/linefeed (ascii 13/10) characters as your delimiters. If the values are fixed width, you can do the parsing based on offsets. If not, then you can use strfind to separate each line and then parse the line. linefeeds = strfind(dataString,char(10)); line1 = dataString(1:linefeeds(1)-1); line2 = dataString(linefeeds(1)+1:linefeeds(2)-1);
What part specifically do need help with? Do you know how to do for loops? Do you know how the `dir` and `imread` functions work? 
Is your issue the Riemann sum itself, or the programming of it?
Dynamic field reference :D this works: data.('Sens1') and because 'Sens1' is a string here that is used as an argument, this also works: i= 1 whatField = ['Sens' num2str(i)] ; data.(whatField) 
Just made some code you might need: rootfolder = cd ; %get all files in the folder allFiles = dir(rootfolder) ; %rm all the directories allFiles = allFiles(~[allFiles(:).isdir]) ; %keep only the jpegs jpegFiles = allFiles( cellfun(@(f) ~isempty(strfind(f,'.jpeg')) ,{allFiles.name}) ) %now loop like this for ji = 1 : numel(jpegFiles) ; thisFile = jpegFiles.name end
... I wish I could say this was the first time someone told me that...
Try imagesc ()
Imagesc shows the correct image. Writing to a bitmap with values 0 to 255 works well. When I add the colormap in the imwrite parameters, this strange behaviour occurs.
This is a bit of a guess, but I suspect the issue is with the colormap. If it works correctly with imagesc but not when writing to an image with imwrite then your custom colormap must be implemented in such a way that values above ~60 are outside of its range, forcing other values to get a color of [0,0,0] (i.e., black). Maybe there are only ~60 values in the colormap? I'd think that making the colormap have 256 entries (1 for each possible uint8 value) might fix this, but if not I'd play around with the colormap. If I understand you, you dont have actual RGB values, just a single value ranging from 0-255 and you want to assign a particular color to each value? If so, you could also manually convert the data into RGB values (so each value would be transformed into 3 different values, ~~2~~1 for Red, 1 for Blue, 1 for Green, each ranging from 0-255). You can then use imwrite without defining a special colormap, since you will be giving it the RBG values you want. I think something like this should work (though I admittedly haven't tested it): % x = data (possible values are 0-255) % c = colormap with RGB map for each of the 256 possible values in x (size = 256 x 3) % y = data converted to RGB values with desired colormap y=zeros([size(x),3]) for nn=0:255 y(x == nn,:) = c(nn,:); end Edit: fixed typo
Yes, exactly! Thanks!
That's not the problem. I have an intensity and converted it to 0-255 to write to an image. The intensity is grayscale (a single value per pixel). I get this problem with every (standard) colormap I try.
Ok, for my curiosity what method does his code use?
It would probably be best to use a [patch](https://www.mathworks.com/help/matlab/ref/patch.html) rather than a line. [This stackoverflow link](https://stackoverflow.com/questions/6245626/matlab-filling-in-the-area-between-two-sets-of-data-lines-in-one-figure) should get you where you need to go.
thank you! :)
funny
I did this: &gt;&gt; ndims(axis) ans = 2 &gt;&gt; ndims(function1) ans = 2 So what is wrong? the dimensions are the same but there is something with the function1, this is similar if I do: function2 = @(x) (2*x+30); axis = -50:5000; plot(axis,function2(axis)) but here the error is not happening 
So the problem was how I stored my labels, changing it to: %Store labeldata digit = fread(trainLabel,1,'uchar'); LM(digit + 1,i) = 1; and it works!
I don't have the neural network toolbox installed, so I can't check the code out to see what it does, but if I read your code correctly, you're only training the network with 100 data points. You need to use many more points to allow the network to converge. Feed-forward training algorithms do not change the network weights quickly. Looking at the website, they have already separated the data into a training set of 60000, with a validation set of 10000. I recommend training on the entire 60000 points, and then verify your results on the validation set. You may have to make several passes on the training set to get a good result. With respect to the result, that should be the weighted response for that input pattern. In a typical Bayesian-style neural network, the highest value in that vector is the chosen classification. In this case, due to the lack of training, there is not a clear winner in the classification output.
Glad its working for you! One note: If you take a look at the [colormap](https://www.mathworks.com/help/matlab/ref/colormap.html) documentation you will see that, while the default is 64 colors, you can tell Matlab how many colors to use. e.g., for the default map use: parula(256) This will produce a better image without using more data (either data it will be uint8 values), so mine as well. &gt; It still seems kind of weird the function has a parameter for colormap while it expects a uint8 matrix as the image I think a warning or a note in the documentation explaining this behavior or something like that would have been nice, but realistically I'm sure Mathworks chose to use 64 colors in a colormap because thats a good balance for plotting, which is what the vast majority of people use colormap for. For these unusual cases they make the colormaps capable of producing any number of individual colors. All in all, while wetter clarification that you need 1-to-1 mapping between grayscale values and colors would have been nice I do see why Matlab implemented the way they did. At any rate I'm glad its working correctly for you now.
u can do my project for me if you want :) 
Assuming the heart rates are normally distributed for both populations, you would use a ttest2 to determine whether the two populations are from the same normal distribution (same mean and variance). Otherwise you may want to look into chi squared tests or comparing the error between PDF or CDF curves of each population directly.
[Look up the function 'ttest2'.](https://www.mathworks.com/help/stats/ttest2.html) Do you know the very basics of Matlab? In other words, do you know how to store a vector? Create a vector of heart rates from days that coffee was not consumed. Call this vector 'vec_noCoffee'. Then create another vector of heart rates from the days that coffee was consumed. Call this vector 'vec_yesCoffee'. Then perform a t-test. [h p] = ttest2(vec_noCoffee,vec_yesCoffee); The output is the test's decision (h) and p-value (p). Edit: rats-&gt;rates
Right. I read that. But I don't know what a 'hierarchical cluster tree" is. I was just looking for some more background on stuff like that.
Is a command line input not sufficient? I.e. writing a function that takes as input a function handle and the integration limits, like this: function result = integrate(f, a, b) % Your calculation goes here end Then to integrate f(x)=x^2 from 0 to 10 for instance, you'd simply type `integrate(@(x) x.^2, 0 10)`.
I'm not really having a problem integrating. Maybe if I explain it better: So I created a function that approximates the integral using the left endpoint, the right endpoint, the midpoint, trapezoidals, and simpson's rule. It then calculates the error between the approximation and the actual integral. In the original function to make sure it worked my function was y=4/(1+x^2) from 0 to 1 because the actual integral is pi. Now I want to change it so that the user can input which function and and which range is used. The hopefully relevant part of the code currently looks like this: function Tn=numfun(n) a=0.0; b=1.0; h=(b-a)/n; x(1)=a; y(1)=4/(1+x(1)^2); How do I allow the user to input the a, b, and y(1) parts?
Why would want the user to enter only y(1) and not the function? 
You can do every other spatial iteration in parallel. while not converged{ j = 1:2:End; Do Gauss all at one in vector operation j = 2:2:End; Do Gauss all at one in vector operation } It gives different answers that simple Gauss but atleast it converges to same answer.
Matlab is telling you the problem, and exactly which lines its occurring on. Google is your friend. 
Tip: You can convert a string to a number.
matlab doc on switch: [Compare Against Multiple Values](https://nl.mathworks.com/help/matlab/ref/switch.html#bucqfa5-2)
That should work. Is your program a script or a function? Can you confirm it prints anything out if you just call program not in the loop? Show us exactly how your code looks, this will be more helpful. 
Well, it would obviously work fine, just running matlab. But image processing can get quite intensive. But I think the right question is: do you accept the time it will take running your large m-files? Seeing as the time taken by your m-file mostly depends on your fastest performing cpu core (matlab is mostly single core), makes the most likely solution to reduce computing time a faster/better laptop. I would advice asking an large and or extensive m-file from your tutor or a senoior to test your performance and then decide if YOU think it is worth the wait (longer processing time) or the investment (buying a better laptop). 
&gt; Does anyone have any bad experience with using MATLAB (especially for some heavy image processing occasionally) on touchscreen laptops? Do you have a physical keyboard you can use with it? I imagine typing out code using only a touch screen would get annoying. &gt; It is a touchscreen laptop with 8GB RAM, 7th gen i5, 2.5GHz clock speed and integrated Intel 620 graphics. Other than recommending a keyboard, that laptop should work well enough. Depending on what you want to do the 8gb of RAM might be problematic for some applications that require a lot of memory. Personally I have 16gb's and run out of memory more often than I would like, but I also frequently work with big data, so my use case isnt exactly typical. The 7th gen mobile i5 wont match the speed of a desktop processor, but it will still be fine. You probably won't notice the difference unless you are running a heavy image processing task or some other intensive task. For most standard computations it will still be almost instantaneous. The integrated graphics wont make a difference unless you want to do gpu computing, which is a pretty niche use case (if you wanted to do this you would know).
Take a look a the [creating functions documentation](https://www.mathworks.com/help/matlab/matlab_prog/create-functions-in-files.html). This is a basic skill to have in Matlab, and is something you should really learn to do. Making a function that you input the upper and lower limits and then the function makes the plot (the function you want to be plotted must be pre-defined) should be really quite simple. I bet if you look over the documentation you can figure it out. If the function you want plotted isnt pre-defined, and must be defined on-demand when the plotting function you are making is called, you can input it as an [Anonymous Function](https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html?searchHighlight=anonymous%20function&amp;s_tid=doc_srchtitle)
The script you gave me is working, thanks! But I still don't understand why the simpler version didn't work. The program regularly writes on the display when executed just once. 
Thanks man. It does have a physical keyboard. It is basically a laptop with a touchscreen not a 2 in 1. I occasionally get to work with outputting .eps files that are over 40-50 MB in size and my previous laptop used to take around a minute to do that. This one is twice as faster so I guess I can tolerate that. Looks like the only trade off is the 13.3 inch screen 😑
&gt; I don't understand why this is happening. "Subscripted assignment dimension mismatch" means the size of the input doesnt match the size of the assigned indicies in the target variable. For example: x(1:2,1:2)=[1,2,3; 4,5,6; 7,8,9] % input: 3x3 matrix % Assigned space in target variable (x): 2x2 If tells you what lines are the problem. Look at the size of everything and find where there's an "assignment dimension mismatch"
Have you tried filtering the data? I work on dynamic pressure data and we usually filter the data down to peaks and valleys and then apply a curve fit. I don't know if that's appropriate for your application.
I said mesh on the post without even realising... Really sorry about that. Thank you for the time and effort you put on this but I only really need is a spherical representation. Would you happen to know where I can I get more information on how to use "figure" on matlab because when I go [here](https://www.mathworks.com/help/matlab/ref/figure.html?s_tid=srchtitle) I have a hard time understanding how to use it. Because all I really want is to make the Earth and Moon to look like [this](https://i.ytimg.com/vi/6EzQEdBX_30/maxresdefault.jpg) and use the current equations I have to make the Moon orbit. 
Well, I used the random array to simulate different signal values, from what the average of these values is a specific number. And I will need these values to comparate to a limiar signal condition of the problem and finally do an probabilistic analysis for how many values exceed the limiar for what I propose.
Well shucks, you know me... I did write it though
I'm not really following what exactly you ar trying to accomplish. &gt; I used the random array to simulate different signal values Do you mean this in the sense that you are adding random noise to an existing signal to make it noisy? Or do you literally mean you are taking random noise and calling it the signal? And if you are doing that, why? Are you interested in a signal that is random noise for some reason? &gt; limiar signal condition I'm not familiar with it, and couldn't find it on Google, so I can't help you there.
I just ran your code and yCalc1 values are much smaller than F values (~1e-4). Hold is probably working but you can't see the second plot because the values are so much smaller.
Hmm that doesn't make sense. This is a basic linear regression technique it should run through roughly the middle of the scatter plot.
Thank you so much and no worries I have quite a bit of time left! All I really need is a sphere that ties in with my code if that makes any sense. I'm having trouble understanding on how to create the figure and getting the Earth to be positioned at a foci and the moon to follow the orbits trajectory. Edit: I feel like i didn't answer your question but yeah if you can really just get it to be sphere-like without any topo that would be greatly appreciated.
You can play with the lines in the rectilinear link (earth_sphere function). For example, uncomment the lines between 80 and 82. Then you get a gray sphere. You can then change the colormap, using this guide: https://www.mathworks.com/help/matlab/ref/colormap.html Here's what it looks like when it's autumn: surf(x,y,z,'parent',cax) shading flat colormap autumn https://i.imgur.com/pI3mruo.png As for a guide, I'm sorry I don't know any general guide to figures/plotting. I would also like to learn more if there's any link. And gray: https://i.imgur.com/B4KBJL9.png Edit: I found some links, but unfortunately they're all with topo. Don't think they'd be of help to you. 
Thanks for the help I appreciate it nonetheless!
Would appreciate if you let me know when/if you find a guide to what you're looking for! 
Last question where do i place the "earth_sphere function" I can't seem to get it to work.
Write functions not scripts whenever possible. It will make your code _so_ much easier to edit, read, work with, etc. 
Sorry I meant to say the script you wrote, https://rectilinear.xyz/p/13903ee704+ on which line should I place it in my code?
Ah okay thanks again really appreciate it! :)
You're welcome. 
Multiplying a scalar and a vector makes a new vector, essentially the distributive property. Should have been obvious, but I guess I just wasn't thinking along those lines. I know that eHat being a matrix messes up the whole process for solving this system so I just figured there has to be something I'm missing with eHat that could return a single value. It seems like I'm just going to have to go through everything by hand and see what makes sense. I might have derived some of the equations wrong. Thanks for the reply by the way.
There's something going on with your values not being what you think they are. To give you help with a method to find solutions vs giving you a solution (teach a man to fish so to speak) I'd look up how to debug in matlab scripts. Place a break point above your first calc. Run the script. Step through you calculations and double check your values in the value window at key points. Chances are you're dividing by 0 or something like that. Also you're using matrix division. Make sure your matrix dimensions look right.
Programming can be tedious. Nature of the beast. Once you get at debugging you'll realize how awesome it is. Programmers never write perfect code the first try. Good programmers know the tools for testing and debugging.
It's only a first year class, so I don't think we do stuff like filtering the data. Pretty much just trying to answer the question "Look at the general shape of the data points being plotted. Relate this shape to Earth’s rotation. Can you fit a rough curve to this data (i.e. explain mathematically the shape of the points)?"
Take a step back and stop letting the code details tell you what makes sense. If you need a vector valued quantity to calculate the solution to a problem, then that's the value you need. Physics doesn't care about the details of your mathematics. 
MATLAB onramp - https://matlabacademy.mathworks.com/
What are some good projects for matlab? I've had 2 semesters of it. 
[interp1](https://www.mathworks.com/help/matlab/ref/interp1.html) is really useful for this. If you have data `d1` with time vector `t1` and data `d2` with time vector `t2`, you can adjust `d1` to align with `d2` with: d3 = interp1(t1, d1, t2) D3 will be d1 mapped onto t2, allowing you to directly compare it to d2. If you use 'nearest' as the method and the time vectors actually align perfectly, interp1 will do the equivalent of finding where they overlap, aligning them and nulling out the region at the end(s) where there is no common data
are the time stamps not the same? if so, you need to know the sample rate of the data. then create two time vectors `t1 = 0:1/fs:49812/fs` where fs is the sample rate in Hz. let `dt` be the time difference between the two time stamps in seconds. then `t2 = dt:1/fs:27917/fs` `t2 = [t2, zeros(1, length(t1) - length(t2)]` and `sync = t1 == t2` `sync_integration = counts(sync)` 
You haven't given us near enough information to help you. Please read [our rules for submitting homework](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/?utm_content=comments&amp;utm_medium=hot&amp;utm_source=reddit&amp;utm_name=matlab) and try to add the information which we need to offer any support. 
I feel like this is easier than /u/P5a0u9l is making it out to be. If the data you have is effectively Monte Carlo samples from the distribution, I'm fairly certain you can get the 95% confidence bounds by sorting the data and looking for the center 95%... % x = data xSort=sort(x); lowerIndex=round(0.025*length(x)); upperIndex=round(0.975*length(x)); lowerBound=xSort(lowerIndex) upperBound=xSort(upperIndex)
can someone help with this?
he tells me error in line of 'if (isreal(s(k,1)) &amp;&amp; s(k,1)&gt;=a &amp;&amp; s(k,1)&lt;=b) ' 
Well it worked..THANK YOU SO MUCH !!!!!
This. You can't compare vectors of different sizes. Just plug in your independent variable to the simulation and compare that with your experiment. Or as this person says, polyfit. 
I see. The data is the coordinate of the system in R^2. Super simple. I have a 500x2 data from real tests and 384x2 data from the simulation. I'm lost on how to use polyfit to get what I am looking for.
I don't know where to start for that. 
&gt; Can you elaborate on that a bit? Specifically, I'm unclear on what matrix you're referring to, There is only 1 matrix.... the convolution matrix (G). The one you build using convmtx and your filter properties.... &gt; what would be "small enough." Depends. If I were to guess, anything more than a few thousand by a few thousand will be slow. &gt; I'm also curious about what "iterative methods" I could apply to this problem. Something like [CGLS](https://math.aalto.fi/opetus/inv/CGalgorithm.pdf) would work and is pretty straightforward to code up. I feel like your not understanding what I am saying, so I setup a little example problem. Hopefully this demonstrates how it would work. % Setup data for example t = linspace(-pi,pi,100); x = sin(t) + 0.25*rand(size(t)); % Apply Smoothing filter with "filter" function b=[1,1,1,1,1]/5; % This is the filter a=1; y = filter(b,a,x); % Apply the Same Smoothing Filter using a Convolutipon Matrix G=convmtx(b(:),length(x)); y2 = G*x(:); % Compare the results of the 2 methods figure hold on plot(y,'LineWidth',2) plot(y2,'--','LineWidth',2) legend('Conventional Filter Function','Filtering using the Convolution Matrix') title('Filtered Data') % Attempt to recover the Raw Data by applying inverse convolution matrix to filtered data xRecover = G \ y2; % Compare Original Raw data to Recovered Raw Data figure hold on plot(x,'LineWidth',2) plot(xRecover,'--','LineWidth',2) legend('Original Raw Data','Raw Data recovered from Least-Squares Inverse Filtering') title('Raw Data')
You would use an anonymous function. https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html?s_tid=gn_loc_drop Define the function as you were going to do. But when you call the function with fsolve use an anonymous function to wrap around your function. For example if your function signature is: myfun(a,b,c,h,T) you would put it into fsolve as @(a,b,c) myfun(a,b,c,1,1) so that fsolve only solves for the first three variables bit you can still have h and T be input parameters.
I was about to post but then I saw this. This is exactly right, also note that most solvers and optimisers (maybe all) in matlab support using anonymous functions. Since you have a function equal to zero you could try some other solving method (i.e. fminsearch).
What exactly does the @ symbol do in this case? Thanks!
@ is basically the function input argument(s) handler. Read the link nathanson666 posted for the details. 
in stead of dir (btw, take that out of the loop...) you could construct the filenames yourself wiht something like Filename = ['a-' num2str(i,'%3d') '.out'] I'm not enterely sure about the details (esp the %3d ) so you might wanna check it. Maybe what you need is this if the %3d stuff messes stuff up: Filename = ['a-' num2str(i,'%4d') '.out'] if i &lt; 1000 Filename = Filename([1,2,4:end]) end 
Thanks a lot!
 dlmread(['Test2_300_part1.' num2str(j, '%3d')]); 
It sounds like you want to transition between two sine waves, say 10Hz to 100Hz. If allow for 10 seconds of each signal with a 10 second transition you wish to determine how to make those middle 10 seconds pleasing to the ear? With your array set to contain enough samples per second for your highest frequency, your lower frequency signals have many redundant values. If you remove those redundant values at a given rate while building up your transition you should achieve your desired result. To make 10Hz you need 20 samples per second. At that rate a 1Hz sine wave will have 18 repeated sample values. If after each full cycle you remove 2 samples: 20 -&gt; 18 -&gt; 16 -&gt; 14 -&gt; 12 -&gt; 10 -&gt; 8 -&gt; 6 -&gt; 4 -&gt; 2. This allows you to 'walk' your 1Hz sine wave towards a 10Hz sine wave. Of course you can't arbitrarily remove samples, so perhaps you'd have to solve for the transition frequencies. These frequencies would depend on the start and stop frequencies, and duration of transition. Thankfully a function like **vco(x, [fmin fmax], fs)** allows you to do just this sort of operation. You can tell if what frequency you want to start with **fmin** and stop with **fmax** and have it generate the array to act as your transition. Be sure to note that you need to create **x** in such a way to make the sound pleasing, I tend to use **linspace()** as I am lazy.
You can tell it how to interpolate. 'previous' will hold the last value until it hits a new one (what you describe), 'next' uses the next value in line (the time reverse version of what you want) and 'nearest' will pick the closest number (So value i until you are halfway to i+1 then value i+1.)
num2str works, but you'll have problems when you get to 10 (ie 009, then 010). I would use sprintf. for j = 1:100 filename = sprintf('Test2300part1.%03i',j) dlmread(filename) End
The ADF test measures whether a time series is stationary in terms of the level of "integration" of a process (in terms of the roots of the autocorrelation function), but that seems a few steps away from what you're looking for. I definitely don't know the theory around what you're looking for, but the first test would probably be to look at the PDFs of the intervals in the first half and second half of the series to see if they are remotely similar.
What you are doing is confusing me so much and I study digital signal processing. I am assuming you are taking a similar degree in electrical engineering. I will have to think about this and delve into my textbooks and get back to you. 
Some discussions here: https://www.mathworks.com/matlabcentral/answers/23369-generating-standalone-executable-file-using-matlab-coder You can do it, but it may require some debugging depending on the setup of the cluster and which dynamic libraries it has installed.
Try using for loops with each iteration using an sprintf() with the only number changing being the last or last two. Then use the string with the said function you're already using 
Matlab does not automatically create new files. What is the code you are running. 
Sounds like the file name index is sorted as text rather than understanding the *number* portion of the file name. Beginning from the left most character and proceeding to the right, if we sort two names alphabetically (e.g. 101 and 1000), they both have 1 as the first character, so we proceed to the second character. They both have 0 as the second character so we proceed to the third character. '101' has a 1 as the third character, and '1000' has a 0 as the third character, so alphabetically, 0 comes before 1, and therefore 1000 is sorted to before 101. As the previous poster has advised, you should take the *dir()* command out of the loop. Since you know the explicit names of the files, however, why not make a list of the numbers included and load the files using *strcat()*?
Have you tried Octave?
Octave is an open source program that runs matlab code. You might be able to install it on the machines in your cluster, then reconfigure your code to break the data up into manageable chunks, and send the data to be run on the clusters.
&gt; https://www.mathworks.com/matlabcentral/answers/23369-generating-standalone-executable-file-using-matlab-coder Yeah Matlab Coder or Compiler are the only ways to do this.
I'll assume that you have two signals (call them A and B), that you want to have one after the other, with a smooth transition. First, decide how long you want the transition to be. I would then create a signal for the transition period by summing (1-x)\*A+x\*B, where x varies from 0 to 1 over the transition period. Linearly varying x is probably good enough, but you could do whatever you wanted (though it should *probably* be monotonically increasing). This is a pretty dumb/simple way to transition two signals, but I imagine its probably also the easiest and most conceptually straightforward way to get what you want.
You can use the python package SciPy to read .mat files using scipy.io.loadmat function 
Swap the end and the else? Lines 103 and 105
I think that you have an extra end in there on line 103. The if statements work like... if - else - end, not if - end else - end Hope this helps
The Simulink coder is rather verbose since it uses Matlab custom datatype, struct, and whatnot. Perhaps you can extract the routine/algorithm and write another c code with that. But PID is pretty simple and a lot of library can be found on the web already.
Usually when you get to problems this large you move to a "real" language. There is a reason why Fortran code is still written today. 
Hello, thank you for your response. Actually I does add UniformOutput at the end of the function. I've solved my problem! Thanks again!
SO, there are a few issues with this: 1) you never loop over (or even define) i 2) you have an extra end statement in the while loop 3) the part where you calculate e and k and set x=x1 is outside of the while loop, so it wont be considered in the while loop You need to go through your loop step by step and make sure everything is happening the way it is supposed to. PS as a side note: you can make this much more efficient by vectorizing it. Its not a requirement, but it would be nice if you ever plan on using this extensively.
&gt; I would like to use the autogenerate feature to generate C code, that I can copy into my embedded design. That is a separate toolbox than Simulink Coder. You're looking for Embedded Coder, which is specifically focused on embedded applications. &gt; I gave it a shot - but there's so much code generated! That's the point of programming in high-level languages. We don't give two hoots about that lower code, as long as it works. MATLAB is run on Java, but you've never had a second thought about the code that MATLAB is using, right? Again, Embedded Coder applies a much greater deal of optimization for embedded applications to the point that code is very compact and very legible. It may already support your embedded platform, or at least your platforms family. 
Matlab Compiler can either make executables (requires Matlab runtimes), or then you can generate C code with Matlab Coder. You may also want to look at parallel computing toolbox, which allows you to use modern multicore processors, especially the parfor command. If you're having a beefy laptop and you aren't limited by swapping, that's useful. Also, Matlab uses the double-precision data type by default. If you don't need double precision, you may want to use "single", which takes half the memory.
Hey guys, Incorporated all these comments and the code's finally working again this morning! Thanks for your advice.
I would suspect it's not matlab that is doing that if you are sure your code is not responsible for it. Perhaps you have some cloud storage sync activated for one of the parent folders? I know Dropbox creates duplicate files if they are edited in two locations. They don't follow that exact naming scheme though, so it won't be Dropbox. Do you have anything like that running? Do these duplicates only happen if you have matlab open? Only if you run your code? What happens to other files in that folder, if you create an empty txt file, does that get duplicated as well?
Saying they're identical was not entirely true but I was on mobile and​didn't want to take the time to explain. It usually happened right after I'd make an edit. The original would be without the edit and the new would have the edit. Although it's very sporadic. I've gone weeks without one popping up and then out of the blue one will.
I agree, I'm still not really sure why the dude we're getting this data from is dumping it into a matlab file to begin with. 
I'm still using 2014, I've been meaning to download a new version.
See chapter IEEE 754 and references within in [this wiki article](https://en.m.wikipedia.org/wiki/Floating-point_arithmetic) for an overview to floating point precision.
Thanks for mentioning this. I worked in research as an undergrad for a year and always wondered how my professor was able to do heavy computations with matlab code in his python. Perfect solution!
Hey thanks :)
A good place to start would probably be too tell them to look up how to do that
I'm doing an astrophysics project and thanks for the tip! I'm also having an issue if you haven't noticed but my orbit is not centered and its radius should be equal to "a" (the Moon's perihelion) but it's not. I feel like it has to do with the line 25 but I'm not really sure... Any thoughts?
give an example
You are a legend hahah hopped out of bed to correct it thanks! Wow if only i had money to give you gold been panicking about this all day 😂
You may want to remove that author comment. 
Have you tried it? Have you looked at the ilu help files for matlab? The nofill type option uses the sparsity pattern of the matrix alone. What options are you using?
As a general tip, try typing your stuff in the commandline see what it does and then try to understand. In this case look what X(:) returns when you type it in the command line. Max looks for the maximum value, and by default in each column (use max(X,[],2) to look in each row). Try to figure it out with thi, and if it aint clear, keep reading. (:) makes a matrix into a column.
you're right i didn't even read their problem correctly 
Thanks for the response.... but that didn't work :( It did however give me leads to pursue. Thanks!
&gt; leads to pursue. Thanks! Another lead woul be to stick to you approach and try to sort the struct you get as output from dir. Put this before you start your loop, and take the dir out of the loop. Filelist=dir('a-*.out'); namesCell = {Filelist(:).name} ; numbersCell = cellfun(@(f) regexp(f,'\d+\.?\d*|-\d+\.?\d*|\.?\d*','match'),namesCell,'uni',0) [~,sortI] = sort(cellfun(@str2num,numersCell)) Filelist = Filelest(sortI) ; 
Thank you to everyone who has helped! I used interp1 for this question.
Evaluate X(:,:) in the command line and then evaluate X(:) What's the difference?
Use logical indexing and replace them with NaN values. these don't show up on plots. y(x &gt; maxX)=NaN; y(x &lt; minX)=NaN; xlim([minX maxX])
Havent read the details of your post but basically you can adapt this approach to you need: let Y be your data with values: theGoodOnesI = Y &lt; 300 now plot only the good ones: plot(X(theGoodOnes),Y(theGoodOnes)) 
You need to use the hold command after creating a current axis or figure. This is why loglog is only plotting the most recent point, because the figure is reset each time the loglog command is executed. The 'plot' command is used so commonly by users I'm guessing Mathworks coded the command to accommodate your use of 'hold' even though it should technically be called after an axis or figure has been created. 
[CGLS](https://math.aalto.fi/opetus/inv/CGalgorithm.pdf) might work well. It should be decently fast too since it solves with only using matrix-vector multiplication (no matrix-matrix multiplication) EDIT: one note: technically, CGLS solves " A^(T)A**x** = A^(T)**b** ", allowing it to solve if A isn't square (and providing the least-squares solution in these cases). You could do this with normal CG as well, but CGLS makes it so that you dont need to explicitly calculate A^(T)A, rather you just need matrix-vector products involving A. There are some ways to add preconditioners as well. If you do add a preconditioner, I'd recommend switching to the Polak-Ribiere formula for beta.
You can assign the index to a variable, such as dirIdx=dir(), and then just call dirIdx(1),dirIdx(2), etc. usually you have to use some sort of exception for the first few names because they will actually be directory files. Something like *if ~isdir*.
This should work (note: this seems to work better with "histogram" than "hist") histogram(rand(1,1000)) ax=gca ax.YScale='log' ax.XScale='log'
Gotcha thanks much!
Thank you very much, this solved the question!
Are the possible values of X discrete (e.g., 1, 1.5, 2, 2.5, 3, 3.5, etc.). If so, the following (approximate) steps should work. (you might have to tweak the code a bit, but it should be close as is). Step 1: find unique X values in a given file xUnique = unique(xAll) Step 2: find max Y for each unique x yMax=nan(size(xUnique); for nn=1:length(xUnique) yMax(nn)=max(y(xAll == xUnique(nn))); end This would get the max Y for all X values in the file. To do a sampling-based approach change the loop with some sort of sampler for different x values.
thanks, looks like what I needed! yeah I now know about the 'histogram'-function, it was even mentioned in the mathworks documentation as "hist is not recommended. Use histogram instead."
Glad to help. Hope it works. One note: for my 1st suggestion, it seems like you cant actually use "print" to get just the stuff in the axes. Too bad. "getimage" and "getframe" should be able to do this though.
Yeah, I end up using all my ram when I use ilu. And then my laptop freezes and finger is forced to go on the power button. [L,U] = ilu(A,struct('type','ilutp','droptol',1e-6)); 
actually this is really good idea. But A^TA could take a lot more memory if I am right? But regardless, i'll give this a shot
A^(T)A would take more memory if you had to calculate it (how much more exactly depends on how many non-sparse elements it had). But, the point with CGLS is that you NEVER need to explicitly calculate it. In the link I posted, compare the CG algorithm (slide 0-4) and the CGLS algorithm (slide 0-10). For example: say that A^(mod) = A^(T)A Now, look at the calculations that involve: Ap and p^(T)Ap. In the CG algorithm (assuming A isn't square), you would effectively replace A with A^(T)A = A^(mod) and **b** with A^(T)**b**, resulting in A^(mod)p and p^(T)A^(mod)p, so you need to explicitly calculate A^(mod) = A^(T)A in order to run the code. In the CGLS algorithm, you effectively get around this by using the fact that: * A^(mod)p = A^(T)Ap = A^(T)(Ap) = Matrix * (Matrix * vector) = Matrix * vector * p^(T)A^(mod)p =p^(T)A^(T)Ap = (p^(T)A^(T))(Ap) = (Matrix * vector) * (Matrix * vector) = vector * vector So, you save memory and speed by not needing to calculate A^(T)A, making CGLS quite a bit faster (and less memory intensive) than CG, *especially* for problems with huge matrices, like yours. In fact, this is the type of problem that CGLS was really designed for.
Formatting here for others: function j = calcj(q1, q2) j=[sin(q1)*q1+cos(q2) cos(q2)+q1-sin(q1); .... sin(-q2) cos(cos(sin(sin(q1))))];
Yeah, but that excel call might be slowee than a csv because of overhead with excel. Anyways, just a thought. Good luck 
I'll give it a try. Thanks!
Lol. That wasn't abuse, that was actual advice from a person who has built a career using Matlab after teaching myself. Good luck finding a job if your response to learning on your own is to have a tantrum. 
You could use cell arrays to store information about dates. One could have days of the week. One could have months. You could create calanders where each month has a unique number of days (which would require cells instead of arrays). I'm sure something along those lines would work.
Fantastic. Thank you for the suggestion!
Check the documentation for comparison operations. 
Depending on how you're making the analogue clock work, you could build a journal function that saves the current state of the clock into the next index of the cell array on row 1, storing the journal entry as a string into the corresponding index on row 2.
Using getframe and videowriter to create a video will give you a smooth animation at whatever frame rate you want. However, you have to render the entire video before you can play it back.
Errors mean things. I've never used this function, but I can with 100% certainty tell you that having five input variables and asking for 7 output variables is causing your error. So you are either using the function in a fundamentally incorrect way, or missing something in your syntax. 
&gt; sum(find(X &gt;= -2 &amp;&amp; X &lt;= 2)) This wont work, since *find* gives back actual indicies, not logical ones. It works with logical indexing though. sum(X((X &gt;= 2) &amp; (X &lt;= -2)))
&gt; I get the feeling that asking for help around here is frowned upon In general, asking for help isn't frowned upon. Asking for help IS frowned upon when you: * 1) completely disregard any and all error messages * 2) refuse to spend any time reading through the documentation for the function that is causing you problems * 3) obviously don't even try to google the issue and see if its a common problem * 4) describe the problem as lazily as possible and give literally no useful details about the problem or what you have tried (including not caring that the code you posted is formatted so poorly its unreadable, assuming you take the time to post your code at all) I'm not necessarily accusing you of doing these things, but soooo many people who ask for help are and it gets frustrating to see over and over again. This sub is a place you should get for help when you need it because you really are having trouble with something, not a place you go to and expect someone to help you even though you are too lazy to even try to help yourself and give up at literally the first sign of trouble. And again, not accusing you specifically, but if you get the feeling that "asking for help is frowned upon" its because in general too many people use this sub in the ways I described above. EDIT: Also, as far as your problem goes. You say you are now referring to the last error, which makes me think you are talking about the "warning: no solution found" part. This is a warning, not an error. Nothing was input wrong, Matlab just couldnt find a solution. I plugged it into Mathematica and let it run for 10 minutes or so and no solution from there either. It seems like its just too complex to feasibly get a solution from.
&gt; It can be compiled because when I use the function in the MATLAB editor and run it using the command window, it runs without any problem and gives results instantly. Running code in Matlab and compiling it are two entirely different things. If you looked through the links I posted this should have been fairly obvious. I would recommend looking through the documentation for the [different types of function blocks](https://www.mathworks.com/help/simulink/ug/comparison-of-custom-block-functionality.html). As far as I can tell the basic one only supports scalar output, which might be your issue... 
Hopefully this answers your question &gt;&gt; -1&gt;-2 ans = logical 1
Ah, no, but just implemented it with datevec, it's a lot faster. Thanks!
try it in console
It's much easier to try simple things like this in the console, or to read the documentation, than to immediately give up and ask the internet. You'll learn more effectively, too. 
I think you are looking for [year.m](https://it.mathworks.com/help/matlab/ref/year.html)
It's seems like floating-point artifact: tvec_fine(1000001) - 0.1 ans = -1.3878e-17 The error is smaller than eps. So you can find it by replacing find by: find(abs(tvec_fine-0.1)&lt;eps) which will give you 1000001. --- For more information about the limitations of floating-point representation, look here: https://www.mathworks.com/content/dam/mathworks/mathworks-dot-com/company/newsletters/news_notes/pdf/Fall96Cleve.pdf
Thought never even crossed my mind...
An important thing to point out: this isn't a "MATLAB thing" this is a "programming thing." Every language will have this same issue, because it's how numbers are represented on a computer. There is one good rules about this stuff: Never compare floating point numbers with `==`
I suggest looking into [diff](https://www.mathworks.com/help/matlab/ref/diff.html) and [functional derivative] (https://www.mathworks.com/help/symbolic/functionalderivative.html) matlab functions. That's your best starting point. The main differences between these functions depends on whether or not you're using symbols or numeric differentiation. That should be a good starting point.
[dsolve](https://www.mathworks.com/help/symbolic/dsolve.html#bve8y14-5) is worth looking at. ode23 and ode45 might also be worth looking (there are links to thes documentation for these on the dsolve page).
Just to clarify when you say that do you mean that it will spit something out with an error function as well
When I was setting up the code prior to the for loop, I did a find/replace of M with 1, so that's the reason for the 1+1 instead of 2. For your question about the loop entering the data into the plot, I'll explain the underlying functionality. When you create a GUI object (figure, plot, axis, etc), Matlab creates a java object that is used to render it. The s1=scatter(...) (or plot, plot3, etc) call returns the handle Matlab uses to access the object. If you type get(s1) into the command window, it will display a list of properties describing that object. You can then use set(s1,'property',propertyvalue) to modify the object itself. If you type set(s1) or set(s1,'property'), it will provide a list of properties that you can set, along with the possible values for those properties. For instance, type set(s1,'marker') into the command window, and it will show you all of the valid marker types that you can use. In this case, setting the 'xdata' and 'ydata' properties to the new values tells the java object to update using the new sets of x and y values. You're writing TA(1:M,1) and TA(1:M,2) directly to the object. It's the same as doing scatter(TA(1:M,1),TA(1:M,2)). The time savings comes by Matlab not having to create a new object every loop. When you call scatter(Time_alt, M_alt, 'r') in your original code, it's creating a new plot object each loop. By the end of the loop, it's trying to handle 1227 objects per subplot axis. This process is pretty straightforward for your Altitude vs Time (P1) and Pressure vs Time (P2) plots. They look fine. It's a little more complicated with the Acceleration (P3) and Acceleration vs Time (P4) plots. Instead of just plotting one data set, you're plotting 3 into the same axis. This means that the call returns 3 handles instead of 1. To simplify it, you can think of P3 = plot3([-XYZ(1,1),0,0], [0,0,0], [0,0,0], 'r', [0,0,0], [0,XYZ(1,2),0], [0,0,0], 'b', [0,0,0], [0,0,0], [0,0,-XYZ(1,3)], 'g', 'LineWidth', 4); P4 = plot([TA(1,1), TA(2,1)], [XYZ(1,1), XYZ(2,1)], 'r', [TA(1,1), TA(2,1)], [XYZ(1,2), XYZ(2,2)], 'b', [TA(1,1), TA(2,1)], [XYZ(1,3), XYZ(2,3)], 'g'); being treated like this: P3(1) = plot3([-XYZ(1,1),0,0], [0,0,0], [0,0,0], 'r', 'LineWidth', 4); P3(2) = plot3([0,0,0], [0,XYZ(1,2),0], [0,0,0], 'b', 'LineWidth', 4); P3(3) = plot3([0,0,0], [0,0,0], [0,0,-XYZ(1,3)], 'g', 'LineWidth', 4); P4(1) = plot([TA(1,1), TA(2,1)], [XYZ(1,1), XYZ(2,1)], 'r'); P4(2) = plot([TA(1,1), TA(2,1)], [XYZ(1,2), XYZ(2,2)], 'b'); P4(3) = plot([TA(1,1), TA(2,1)], [XYZ(1,3), XYZ(2,3)], 'g'); You need 3 separate set() calls each to update P3 and P4.
I am referring to [this procedure.](https://en.m.wikipedia.org/wiki/Separation_of_variables). Unless I am mis-reading or misunderstanding​ the equation you've linked (both possible), it ~~should~~ might work *depending on the nature of the initial and boundary conditions* Start by expanding: d^2 p/dr^2 + (1/r)dp/dr = dp/dt Then let p(r,t) = f(r)g(t): d^2 (fg)/dr^2 + (1/r)d(fg)/dr = d(fg)/dt g d^2 f/dr^2 + (g/r)df/dr = f dg/dt And divide both sides by f g 1/f ( d^2 f/dr^2 + (1/r)df/dr ) = 1/g ( dg/dt ) Since RHS and LHS are both a function of a single variable, they must be equal to some constant (eigenvalue) which I'll call -E^2 (*) d^2 f/dr^2 + (1/r)df/dr + E^2 f = 0 (**) dg/dt = -E^2 Equation (**) gives: g(t) = exp[ -E^2 t ] Multiply (*) by r^2 and then substitute x=Er to obtain Bessel's equation in x: x^2 d^2 f/dx^2 + (x) df/dx + x^2 f = 0 So f has solutions f(r) = A×J_0(Er) + B×Y_0(Er) for arbitrary constants A, B and J_0, Y_0 are [Bessel functions ](https://en.m.wikipedia.org/wiki/Bessel_function) of the first and second kind of order zero. Then finally p = exp[ -E^2 t ]×[ A×J_0(Er) + B×Y_0(Er) ] And you find E from boundary conditions and A,B from initial conditions. 
Non-Mobile link: https://en.wikipedia.org/wiki/Separation_of_variables *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^64406
&gt; function [pv, pd] = springking(x, y) &gt; &gt; x=[-36 -28 -26 -24 0]; &gt; y=[205 230 231 233 247]; &gt; pf=polyfit(x,y,4); &gt; pv=polyval(pf,-40); &gt; pd=polyder(pf,-40); One note: you would want to take the definition of "x" and "y" out of the function. Otherwise, it would just overwrite whatever new input you wanted to use. Also, to add to this: you cold make this a bit more general if you wanted as well. function [pv, pd] = springking(x, y, n, x0) %% fit, evaluate, and differentiate a polynomial % x and y define the polynomial % n determines the polynomilal order used in fitting % x0 determines where to evaluate the polynomial pf=polyfit(x,y,n); pv=polyval(pf,x0); pd=polyder(pf,x0); Note to OP: I would double-check the [polyder](https://www.mathworks.com/help/matlab/ref/polyder.html) documentation to make sure it is doing what you want it to do (the 2nd input acts as a multiplier, not a definition of where to evaluate the polynomial).
Hey, thanks for the suggestion. Do you mean don't define x y in the function, but rather define it whenever you need in the main function?
`validateattributes` is just for type and value checking. Basically, it makes sure that the user input is: 1. `'numeric'`: a numeric value, i.e. not a letter or something like that 2. `'row'`: a single value or a horizontal matrix of values 3. `'&gt;=', 0`: greater than or equal to 0 4. `'&lt;=', b_high`: less than or equal to `b_high` Now, you will have to implement your actual logic for converting `markmatrix` to `conmarkmatrix` afterwards. Can you elaborate on what the conversion will do? The great thing about MATLAB is that in most cases it doesn't care if you pass a single value or a matrix to a function (the `&amp;&amp;` operator being a notable exception, `&amp;` is the operator you want to use if you operate on arrays of the same size). So, the whole conversion can *probably* be done by `conmarkmatrix = your_conversion_function(markmatrix)`
If you really don't want to throw errors, here's what you can do: if ~isnumeric(markmatrix) disp('You have to enter numbers') return if ~isrow(markmatrix) disp('You have to enter a single value or a row of values') return if any(markmatrix &lt; 0) disp('All values must be greater than 0') return if any(markmatrix &gt; 100) disp('All values must be less than 100') return By the way, MATLAB has a very powerful conditional indexing syntax (that might be a little much for now, but just in case you're interested). Basically, you can write: conmarkmatrix = zeros(size(markmatrix)); first_field = markmatrix &lt; 60; conmarkmatrix(first_field) = first_field_conversion_function(markmatrix(first_field)); second_field = markmatrix &gt;= 60 &amp; markmatrix &lt; 70; conmarkmatrix(second_field) = second_field_conversion_function(markmatrix(second_field)); third_field = markmatrix &gt; 70; conmarkmatrix(third_field) = third_field_conversion_function(markmatrix(third_field)); This implements your conversion without any while loops or if statements. Here's a [blog post on the topic of logical indexing](http://blogs.mathworks.com/steve/2008/01/28/logical-indexing/).
&gt; Do you mean don't define x y in the function, but rather define it whenever you need in the main function? Yes. Otherwise, when you run: a = [-11 -22 -30 -40 0]; b = [405 630 431 302 747]; [test1, test2] = springking(a, b) it wont actually use the values of "a" and "b" that you define. Instead it would use the default values for x and y that are hard coded into the function, i.e. it would use: x=[-36 -28 -26 -24 0]; y=[205 230 231 233 247];
I'm not sure how the matrix is defined for an (approximately) continuous variable. I had thought the code might exist since GBM is a pretty common financial model, but can't find anything.
Thank you so much for taking the time to explain these concepts! It's been a tremendous help.
If it's common in finance I'd make sure you have the relevant Toolbox (I forget what they call it. Econometrics Toolbox?) and then search the documentation. Otherwise, you're kind of out of luck unless you learn the relevant math. Matlab can't do math you don't know well enough to turn onto code. 
So I'm like 99% of the way to getting this code working. Just one more question if you don't mind. When trying to update the plot3 data with the set command it's returning this error: Error using matlab.graphics.chart.primitive.Line/set Invalid or deleted object. Error in NYE_K1100_XYacc (line 70) set(P3(1), 'xdata', XYZ(1:M,1), 'ydata', [0,0,0], 'zdata', [0,0,0]); I've tried both of these configurations unsuccessfully: set(P3(1), 'xdata', XYZ(1:M,1)); set(P3(2), 'ydata', XYZ(1:M,2)); set(P3(3), 'zdata', XYZ(1:M,3)); -- set(P3(1), 'xdata', XYZ(1:M,1), 'ydata', [0,0,0], 'zdata', [0,0,0]); set(P3(2), 'xdata', [0,0,0], 'ydata', XYZ(1:M,2), 'zdata', [0,0,0]); set(P3(3), 'xdata', [0,0,0], 'ydata', [0,0,0], 'zdata', XYZ(1:M,3)); Everything else functions properly and updates perfectly when I comment out that section ~~most of the time. It's also doing this weird thing where, when I have the troublesome section commented out it randomly throws the same error for the other set functions that were otherwise working. Then randomly, without me changing anything, it starts working (without the plot3 portion working).~~ I fixed this by putting 'hold on' right after P4(1) so it doesn't get deleted when P4(2) is created. --- Edit: So I found another error in my set function and corrected it but it's now causing another error: Error using horzcat Dimensions of matrices being concatenated are not consistent. Error in NYE_K1100_XYacc (line 70) set(P3(1), 'xdata', [XYZ(1:M,1),0,0]); I've changed the set function to output the correct matrix. set(P3(1), 'xdata', [XYZ(1:M,1),0,0]); and set(P3(1), 'xdata', [-XYZ(1:M,1),0,0]); Just in case the concatenation error was caused by it displaying the inverted value but still didn't resolve the issue. --- Edit 2: I've also run into an issue where creating the 3 separate plot3 objects causes the previous plots to get deleted. If i use 'hold on' to keep the data, wouldn't it hold the data for each cycle iteration? I want the plot3 to continuously update with the changing acceleration vector magnitudes. Would I just add 'hold off' right after P3(3), so when the next cycle iterates P3(1) overwrites the existing plot? Here's what I have so far for these sections: subplot(2,2,2) P3(1) = plot3([-XYZ(1,1),0,0], [0,0,0], [0,0,0], 'r', 'LineWidth' , 4); hold on P3(2) = plot3([0,0,0], [0,XYZ(1,2),0], [0,0,0], 'b', 'LineWidth' , 4); P3(3) = plot3([0,0,0], [0,0,0], [0,0,-XYZ(1,3)], 'g', 'LineWidth' , 4); %hold off ?????? axis([-8,8,-4,4,-12,2]) title('XYZ Acceleration') xlabel('X Acceleration (G)') ylabel('Y Acceleration (G)') zlabel('Z Acceleration (G)') grid on ... set(P3(1), 'xdata', [-XYZ(1:M,1),0,0]); set(P3(2), 'ydata', [0,XYZ(1:M,2),0]); set(P3(3), 'zdata', [0,0,-XYZ(1:M,3)]);
I work for Mathworks, and I will make sure this feedback gets to the right teams. Also, the best option is to make a tech support case with any feedback. It definitely gets seen, and feature requests from customers are given a boost in priority.
Firstly, read tbe sidebar. Secondly, learn to format your post as code, so we don't have to interpret Matlab code in paragraph form.
When I run the original code, it looks like it only displays the current value for acceleration in the upper right plot. I kept it the same. In your new code above, you're trying to set it with XYZ(1:M,1). This is just going to plot the maximum value from 1 to M for each of the acceleration vectors. In order for that to work, you have to keep all the data points the same size. You would need to do something like this: set(P3(1),'xdata',[-XYZ(1:M,1)',zeros(M,1)',zeros(M,1)'], ... 'ydata',[ zeros(M,1)',zeros(M,1)',zeros(M,1)'], ... 'zdata',[ zeros(M,1)',zeros(M,1)',zeros(M,1)']); This gets complicated because you need the data to be in a row vector form for x, y, and z. This is why there are a bunch of transposes ( ' ). I ended up with this code that works the same as the original (just displaying the current acceleration): subplot(2,2,2) P3=plot3([-XYZ(1,1),0,0],[0,0,0], [0,0,0], 'r', ... [0,0,0], [0,XYZ(1,2),0],[0,0,0], 'b', ... [0,0,0], [0,0,0], [0,0,-XYZ(1,3)],'g','LineWidth', 4); axis([-8,8,-4,4,-12,2]) title('XYZ Acceleration') xlabel('X Acceleration (G)') ylabel('Y Acceleration (G)') zlabel('Z Acceleration (G)') grid on ... for M=2:1227 ... set(P3(1),'xdata',[-XYZ(M,1),0, 0 ]); set(P3(2),'ydata',[0, XYZ(M,2),0 ]); set(P3(3),'zdata',[0, 0, -XYZ(M,3)]); For your edit 2, using hold on/off only applies if you're plotting another data set into the same axis. If you're only setting the xdata, ydata, and zdata, then it doesn't matter. The plot3 objects already exist. EDIT: Code formatting to make it a little easier to read.
No, that would be horrible and make zero sense. If you want to learn LaTeX then use that, there is nothing better for typesetting. If you don't want to spend the time learning LaTeX then stick to Word/Libreoffice.
that was clear, thx :)
do a similar thing to what i told you to do in the other thread
I fucking love LaTeX so much. There's a pretty good online editor for it op, sharelatex.com 
You can use a struct data type with some new variable name, say z. To create it, you would simply put: z = struct('a', a, 'b', b, 'c', c, 'd', d, 'e', e) To read more on creating struct types, visit the [creating struct page](https://www.mathworks.com/help/matlab/ref/struct.html?requestedDomain=www.mathworks.com).
U = table(PAL,PAP,PAS,PBL,PBP,PBS,PDL,PDP,PDS,PGL,PGP,PGS); A = table2array(U); A=A'; is this okie?
&gt; Same size, only one digit By this I am assuming you mean each is a scalar (a single value), not that it is an array of single digit integers. In this case, all you need is: data=[a, b, c, d, e] &gt; i add them in table and convert them to matrix I'm not sure what you are getting at with this. Is this how you made them? For a bunch of scalars you dont need to put them in a table and then convert them to a matrix to combine them...
So, there are a few issues I saw from quickly looking over the code. * 1) you get the error you are getting because you only define theta(1), phi(1), etc., BUT then you immediately ask for theta(2), phi(2), etc. in the 1st iteration of the loop. You never define more than 1 value for these variables. * 2) You should get in the habit of pre-allocating. Matlab should be giving you a warning message that variables aren't pre-allocated and they should be. Do it. It makes the code faster and can help prevent errors associated with out of bounds indexing. From a quick look over, it seems the following (and perhaps more) should be pre-allocated: theta; psi; phi; thetaDot; psiDot; phiDot; p; beta; x; y. * 3) You never pass the values of m1, m2, l1, l2 or l3 to your function. This would have caused an error if your code had made it that far. * 4) Don't use "i" as a loop variable. It's too easy to get it confused with i = sqrt(-1). Using "ii" is a good substitute. * 5) you use "p(i,:)", which would indicate you should be saving the values of p from every iteratio of the loop. But you define p as "p = [...];", which only uses values for the current loop iteration These are the issues I see so far. I might have missed something. If fixing these don't make things run smoothly I'd be happy to take another look.
You tell us. 
So I took your advice for points 1-4 and now have a new issue that I'm pretty sure is coming from your 5th point. Using p(i-1,:) and all that comes from a code snippet my professor gave us. The last page of [this PDF](http://constans.pbworks.com/w/file/fetch/117215841/7.8%20Solving%20Lagrange%27s%20Equations%20in%20MATLAB.pdf). I've looked up a couple of videos of using the runge kutte method and they seem pretty close to what my professor has, but I couldn't find someone using a vector like I am. The PDF explains it pretty well, but it's basically first solving for the two matricies, Mmat and Qmat, at the previous time step, hence i-1. Meaning it starts the loop with theta(2), ect and goes back to theta(1) and all the rest. This may be the wrong syntax for what I'm trying to do, but my professor got the code to work before giving us the assignment so it should be correct.
https://pastebin.com/ZuxUabkQ This is the code so far.
Here is the code from the creator of that video https://github.com/mws262/MATLABBouncingRod
 doc reshape 
Here I was writing a loop for OP when I should have known this exists. Thanks for the tip!
omg, thank you soo much! It is so easy! I was writing "for" loops hahah!
&gt; First, coder is a product that costs a lot of money. If you already have access to it then give it a shot. I do have access to it (its one of several packages that come bundled with my Matlab package), but I do realize that not everyone will have access to it. I'm planning on trying it out myself sooner than later. &gt; Second, converting is not trivial, but not the hardest thing to learn. The coder tool will tell you what isn't working. Mostly you have to make sure the compiler is not confused about data sizing. I'll keep this in mind, thanks. &gt; Third, speed ups are not guaranteed. It really depends on what your code does. Lots of loops? It will probably have some improvement. Lots of matrix operations and ffts? You may find the compiled code is slower. This isn't too terribly surprising. I know Matlab uses some really efficient implementations for matrix operations and (perhaps to a slightly lesser extent) fft. I know these use highly optimized algorithms, and utilize instruction sets like AVX and FMA. I would think that these are really the only 2 areas where Matlab code would have an advantage though? (though I could see the difference not being huge for a good number of other operations. On this note - do yo have any experience with how well parallelization works for generated MEX functions? I saw in the documentation that Matlab codes is capable of transforming parfor loops into parallel C code. Personally, I've never been very impressed with parallelization in Matlab (it seems like its only about half as efficient as parallelized code, e.g. manually splitting something up between separate instances of Matlab will make it run almost twice as fast as using a parfor loop). If it was closer to a 1:1 speedup using MEX code that would be fantastic, and would (in my opinion) be a big improvement over standard Matlab parallelization.
GUI updates are processed when Matlab isn't busy doing other things. Your code immediately puts Matlab to work loading data after you request the GUI change, so it doesn't get processed until the loading is complete. By then, your second update is put into effect. This should be fixed by a call to drawnow or a short pause(). 
So if I were to use pause(), should I put the line before the set function or after?
Think about that. If you pause before making the request, what will happen? What if you pause after? Compare it to the current situation. Did you read the documentation for drawnow? 
Makes sense, a little brain fart there. I didn't for the drawnow because I'm more familiar with pause, having used it for graphs before. Will try it when I get home. Thanks! Just
This might work. Maybe it has bugs though: folder = uigetdir('H:\'); % Select folder. workspace; % Make sure the workspace panel with all the variables is showing. imtool close all; % Close all imtool figures. addpath(folder); % Add folder to path. [pathname] = uigetdir(); tifFiles = dir(['pathname' filesep '*.tif']) ; tifFileNames = {tifFiles(:).name} ; for ii=1:length(tifFileNames); obj = imread(tifFileNames{ii}); image = diameterTEST(obj); end
Your question is a bit vague and I'm not sure exactly what you are trying to get, but [this](https://www.mathworks.com/help/nnet/gs/neural-network-time-series-prediction-and-modeling.html) page or [this](https://www.mathworks.com/help/nnet/ug/design-time-series-narx-feedback-neural-networks.html) page will probably have the answers you want. PS if you google "matlab narx neural network" these are in the first few results that come up.
Looks like you are asking matlab to invert matrix Qmat when it is computationally singular. I haven't read all your code - is it possible the matrix could be singular? Otherwise it's probably a floating point precision issue. The algorithm for inversion tries to multiply 2 very tiny numbers and gets zero because it runs out of decimal points, that sort of thing. When that happens someVariable may have huge errors. I would try: 1. See if you can figure out some algebraic trick for avoiding that matrix inversion altogether 2. Only plot that subset of the n points where inversion doesn't fail. I think you could just check the condition of Qmat using [rcond](https://www.mathworks.com/help/matlab/ref/rcond.html) and if it's very small, write an NaN to x and y and break from that iteration of the loop. Then only plot the non-NaN values
&gt; But I did have to use the values from 0.004 to 0.0003, otherwise I get the error that the vectors must have the same size. "y1" and "y2" dont have to be the same size. BUT, if they are different sizes, then you will need to make "x1" and "x2", where the size of x1 and y1 are the same and the size of x2 and y2 are also the same. Example: x1=[1:5] y1=[20:10:60] x2=[3:12] y2=[6:2:24] loglog(x1,y1) hold on loglog(x2,y2) One note: /u/getoutofmyaccount mentioned this but I want to reiterate: you must plot 1 of the functions before using "hold on". Otherwise, the figure will use the default axes scaling (i.e., linear) instead of the log-log scaling. There are ways to fix this, but its easier to just plot one of the log-log functions first.
thank you very much! This is my some of my first experiences with Matlab, I didn't think to make an x1 and an x2... Looks good! http://imgur.com/FVYgYJe 
Please read [this post](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/) about submitting homework questions. Asking for help on homework is fine. Asking for someone to do your homework for you when you haven't actually tried to do it yourself is not. In general, you will be more likely to get help if you post the code you are currently using and describing what is wrong with it (as best as you can).
I'm glad you got it figured out!
function y = FuncA37533( f, x0, y0, h, p) n = (p - x0)/ h; y = zeros(1,n+1); x = zeros(1, n+1); y(1) = y0; x(1) = x0; for i = 1: n y(i+1) = y0 + h * feval(f,x(i),y(i)); x(i+1) = x0 + h; end 
idk why it dont work
Thank you for your reply. Sorry for the vague post. I guess my question really is on how to plot predictive graphs, specifically these http://imgur.com/a/y8BeW
Have you thouht about putting all this information into a table? It would look rather nice that way. Example: coursename={'Matlab';'Reddit'}; coursenumber={'12345';'abcde'}; grades=[4;3.5]; Transcript=table(coursename,coursenumber,grades,'variablenames',{['Course_Name'],['Course_Number'],['Grade']}) gradesExtracted=table2array(Transcript([1:end],[3])); % extract grades from table (if needed) GPA=sum(gradesExtracted)/length(gradesExtracted); fprintf('Your GPA is: %.3f out of 4.0\n',GPA) 
is this like defining different kernels? I would like to experiment more with this some time. I tried playing around to only define the right edge of it and try to count how many right edges are there but then I got lost haha
I tried stepping through once, I think I just need more practice. I would love to be able to understand how to count circles in a more elegant fashion. Any tips on what to do or where I can learn?
It represents the object, all functions inside of a class definition require the object (*except* static functions) to be passed as an input, otherwise the entire thing makes no sense. Or did I misunderstand what you were asking?
I do have a feeling https://xkcd.com/1425/ applies here :)
[Image](https://imgs.xkcd.com/comics/tasks.png) [Mobile](https://m.xkcd.com/1425/) **Title:** Tasks **Title-text:** In the 60s, Marvin Minsky assigned a couple of undergrads to spend the summer programming a computer to use a camera to identify objects in a scene\. He figured they'd have the problem solved by the end of the summer\. Half a century later, we're still working on it\. [Comic Explanation](https://www.explainxkcd.com/wiki/index.php/1425#Explanation) **Stats:** This comic has been referenced 1060 times, representing 0.6746% of referenced xkcds. --- ^[xkcd.com](https://www.xkcd.com) ^| ^[xkcd sub](https://www.reddit.com/r/xkcd/) ^| ^[Problems/Bugs?](https://www.reddit.com/r/xkcd_transcriber/) ^| ^[Statistics](http://xkcdref.info/statistics/) ^| ^[Stop Replying](https://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=ignore%20me&amp;message=ignore%20me) ^| ^[Delete](https://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=delete&amp;message=delete%20t1_dha0mst)
Non-Mobile link: https://en.wikipedia.org/wiki/Hough_transform *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^65632
Yes, that is indeed a length of string in an image. 
That's exactly what it is. If your edge is square in the image, then the [Sobel Filter](https://en.wikipedia.org/wiki/Sobel_operator) is a good way to find edges. If the edge is rotated or not linear, then it becomes much more difficult. cincymatt's links below are probably the best way to get started on finding circles.
You've probably already seen this: https://au.mathworks.com/discovery/image-recognition.html Have a look for the Lilly version, I'm too tired to remember what it's called. Some variant of self organising maps. The number recognition might be good for your purpose but with logo training instead of numerals.
Hough transform is what i thought of too. To make your data suitable, try to change your full circles into "shells" (only the outline) this will help the hough transform. do this with conv2 and differences and stuff. 
do you have some sort of "database" where you could compare them?? How different are the logos and how normalized are the pictures (are they photos or simply images??) Depending on those questions you could use some Computational Vision tools with some easy Intelligent Systems implementation. I did one last semester for handwritten digits and it turned out ok-ish
This might be a good time to learn about regular expressions, but for something like this, you don't even need it (since it seems like your header is the same every time). Just read through the file one line at a time, split the line on 'space' and then do a string compare to see if the first element is 'RPM'. If so, skip it
Why do you set the y-limits as [-5 Inf]? Your code is also only plotting the most recent point at each iteration in the for-loop, and erasing the previous points. I'm not sure if that was your intention, but if you want make an animation that is adding points consecutively to the previous plot you'll need to use the 'hold' command or the 'set' command to alter the data being plotted. There's also inconsistencies in your limits, you use 'set' to apply x and y-lims but then change the limits right after that. So I'm not really sure what your goal is.
Dude, read the other comments. We settled this days ago. Edit: And the EasySpin functions are proprietary. I can't change them at all. And other people were using them without issues. But that's beside the point.
Look at the unit delay block, that should get you in the right direction
Use a unit delay to store the value. You can use a switch to determine when the unit delay gets updated (pass it a new value, or continue to pass an old one), or use a triggered subsystem (trigger when you want to store a new value).
Can you post your code/Simulink model?
In python there is a way to say function [bob] = john(dog = 'BlackLab') or something like this, such that if dog is not define otherwise, it will take BlackLab. Is there are similar way? I'm using the function bob iteratively, but on the first iteration, no dog is defined (it's more complicated than this, but that's basically it).
FWIW, when I set default function inputs I typically use the exact same checks, but often combine them into a single line. ~~if nargin &lt; 1 || ~exists('dog','var')~~ if nargin &lt; 1 || isempty(dog) dog = 'BlackLab' end This makes it so that it only does the *isempty* check if there are enough input arguments, and makes it convenient to still allow an input to stay at a default value even if you want to specify subsequent inputs as well (e.g., something like "function([],input2,[],input4)" ) Edit: fixed typo. *exists* should have been *isempty*
I think you made a typo. ~exists should be isempty i think. like this: (copypasta'd from a script incedentally had open) if nargin &lt; 3 || isempty(sz) sz = 12; end 
I'm first changing the col variable. I put into col the sorted values (noMarkers, which contains no 100s), at all locations not equal to the marker value. Then, I change arr so that it's second column becomes col. Look up "masking" in Matlab if this code confuses you.
Ah crap. Ok, I just realized a different problem. Column B came from 2 arrays (C and D) being combined with vertcat. If I keep the marker where it is, it will be in the wrong place, if it shows up in array D. I need to make some function that will splice C and D together, aligning the marker with it's partner in A, sorting them at the same time. 
+p_pistol Got it, thanks. Any thoughts on my predicament below?
Can you clarify? What do you mean the marker shows up in the wrong place? Where is it supposed to be, and why is it wrong currently? What are A, C, and D?
oops. Yeah, I did. Thanks, good catch. I'll edit the post so as to not confuse anyone else.
I went ahead and made a new post with more details. Here it is: https://www.reddit.com/r/matlab/comments/6a6tdw/can_i_combine_2_arrays_compare_them_to_a_third/?st=j2htjory&amp;sh=a1b757ea
The triggered subsystem did it, thanks for the tip!
Thanks!
Let a be your column. In my tests I have replaced your 100 marker by NaN as that more explicitly marks an entry as not avalilabe. If you have to use 100 it should also work. b=1:10 b(~ismember(b,a))=NaN This better not be for homework ;) Edit: I just saw in your question that you don't want the leading NaN, I guess you'll have to check the output for that and move the NaN to the back. Something like: while isnan(b(1)) circshift(b,[,0-1]) end
So I used your [code](https://pastebin.com/pdKdLnMs) it doesn't seem to give the correct estimates, for example x^2 from 0-3 gives me 26+. Although I can't see anything wrong with your part seems pretty slick. What am I missing? Edit: Nevermind I just noticed that the j was not being used in the forloop so i just changed n to j and it seems to work thanks! 
I still don't see how you went from 4,5,6 to 2,9,10. Can you show me the math that results in 2,9,10?
*This uses the built in 'Penny' dataset, so you can just copy, paste, and run it, without feeding it any data.
Ah, I see. I'm not really familiar with cone penetrometer files, but some quick googling tells me that its data for a cone penetration test, which focuses on some sort of soil analysis (this also seems to explain your username lol). You're right, the format appears to be very similar to well-log (.las) files. They didn't quite have the same names though as common well-logs, but it they seemed similar enough that I figured it was something similar to well-logs. The package I was thinking of that you could use for .las files is [seislab](https://www.mathworks.com/matlabcentral/fileexchange/53109-seislab-3-02). Specifically, the "read_las_file" function. It might be worth taking a look at, though there's quite a few calls to other functions in the SeisLab package. However, I got interested in the problem and decided to give it a go. The resulting code definitely isnt the prettiest or most efficient code I've ever written, but it seems to get the job done well enough and is moderately robust. Its designed to extract the information in the headers (since it seems like you already have the ability to extract the main data I didn't bother with that part). Hopefully this will do what you need it to do. filename=('...') % Read Data fid=fopen(filename,'rt'); tlines=textscan(fid,'%s','delimiter','\n'); tlines=tlines{1}; fclose(fid); % Remove lines that dont have desired information (optional) %bool=~cellfun(@isempty,tlines); %tlines=tlines(bool); %bool=cellfun(@isempty,regexp(tlines,'^#')); %tlines=tlines(bool); % Define Keywords to search for keyWords={['Channel'],['Sensor'],['Range'],['Gain'],['Filter'],['Excitation'],['Baseline'],['Cal Factor'],['Unit Factors'],['Chan Offsets'],['Default Units'],['Display Units'],['Conv Factor']}; % Search for Keywords keyWordLines=cell(1,numel(keyWords)); for n1=1:numel(keyWords) indTemp=1; for n2=1:length(tlines) xx=strfind(tlines{n2},keyWords{n1}); if ~isempty(xx) keyWordLines{n1}(indTemp)=n2; indTemp=indTemp+1; end end end % get list of all lines that Keywods were found on nLines=[]; for nn=1:numel(keyWordLines) nLines=[nLines;reshape(keyWordLines{nn},[],1)]; end % Define possible numeric characters numList={['.'],['0'],['1'],['2'],['3'],['4'],['5'],['6'],['7'],['8'],['9']}; % Seperate Header info into useful subsets of information dataHeaders=cell(numel(nLines),1); for nn=1:length(nLines) % Extract single line from header info data dTemp=tlines(nLines(nn)); dTemp=dTemp{:}; % Go through line character by character to determine if it contains numbers or characters charType=nan(size(dTemp)); for n1=1:length(dTemp) if strcmp(dTemp(n1),' ') % Treat spaces (" ") seperately charType(n1)=0; elseif strcmp(dTemp(n1),'E') % Treat exponent ("E") seperately charType(n1)=2; elseif strcmp(dTemp(n1),'+') || strcmp(dTemp(n1),'-') % Treat "+" and "-" seperately charType(n1)=3; end for n2=1:length(numList) % Check for numbers if strcmp(dTemp(n1),numList(n2)) charType(n1)=1; end end if isnan(charType(n1)) % If no match found, set to character charType(n1)=9; end end % Check for exponent for n1=1:length(dTemp) if charType(n1) == 2 if n1 &lt; length(dTemp)-1 if (charType(n1+1) ~= 3) || (charType(n1+2) ~= 1) % does not follow exponent formal, bust be letter "E" charType(n1)=9; end else % Not enough remaining characters to have an exponent charType(n1)=9; end end end % Convert to data indTemp=1; dStart=0; dEnd=0; dType=0; for n1=1:numel(charType) if dStart ~= 0 % Word/Number already started, look for the end of it % Cases: 1) found a space (end of word/number is 1 index back), 2) reached end of line of text, 3) switched between data types if charType(n1) == 0 || n1 == length(dTemp) || (dType == 1 &amp;&amp; charType(n1) == 9) || (dType == 9 &amp;&amp; (charType(n1) == 1 || charType(n1) == 2 || charType(n1) == 3)) % Set appropiate end point if n1 == length(dTemp) dEnd=n1; end if charType(n1) == 0 dEnd=n1-1; end if (dType == 1 &amp;&amp; charType(n1) == 9) || (dType == 9 &amp;&amp; (charType(n1) == 1 || charType(n1) == 2 || charType(n1) == 3)) dEnd=n1-1; end % Extract data from text string to form a coherent word or number if dType == 1 % convert to number dVal=str2num(dTemp(dStart:dEnd)); else % Extract string directly dVal=dTemp(dStart:dEnd); end % Add coherent word or number to final data array, reset parameters dataHeaders{nn,indTemp}=dVal; dStart=0; dEnd=0; dType=0; indTemp=indTemp+1; end end if dStart == 0 % Start to look for character or number if charType(n1) == 9 % Extract word dType=9; dStart=n1; elseif charType(n1) == 1 || charType(n1) == 3 % Extract number (can start with digit or "+" or "-") dType=1; dStart=n1; end end end end % View Result of data extraction dataHeaders 
I really don't know much about filters, and my professor suggested a nothch filter for what I was trying to do. I forgot to post the data, though I'm not sure how to share a .mat file. 
I had 2 arrays, let's call them C and D, that I combined with vertcat to make the righthand column listed above. I know that the number in the second column that corresponds with the trial in the first will be within 1 second of the trial start (the lefthand column above). Because there is no number in the second column that is within 1 second of 2, I know an omission occurred there. I use the same logic for 9 and 10.
I'm fine with a NaN starting the second column. The length of b is not necessarily 10 everytime, unfortunately. Can I just have b=: to represent all of it? What does the function b(~ismember(b,a))=NaN do?
You can expand the length by using something like b=1:1000 or even easier b=1:length(a) as that will automatically use the right length. That line essentially consists of two parts. You have the outer part of the b with the parentheses and the inner "ismember". The "ismember(b,a)" checks for each element of b wether it is found within the vector a. It returns a Boolean vector the size of b. We actually want to use the opposite of that, a vector who's elements are true where no match is found within a, so that why apply the NOT operator ~ to it. Now the outer part comes into play. We have previously defined b to be a vector 1:length(a), so something like 1,2,3,...,n We now want to overwrite all entries that are missing in a with NaN (or 100 if you still want to use that). We can selectively apply values to specific locations of a vector by providing a boolean vector if the same size b(booleanVec)=0 will assign all locations of b where booleanVec is true to zero. In our case, the Boolean vector is the return value of the ~ismember() thus overwriting all those missing values with NaN. 
You define "sum" as a variable earlier in the code. This is why you should never use common function names for variable names.
Ah ok, once again thanks for the help and Ill keep that in mind in future!
Could you show me a simple example? :)
Sure, no problem. Are you getting an error from Matlab, or are you just looking to understand some aspect of filtering better? To share a data file, you would need to upload it to some repository and share a link (MediaFire, Dropbox, Google Drive, etc). The only concern here is privacy. If you put in a public Dropbox share folder, most Redditors wouldn't be able to connect your irl person to your Reddit account, but Johnny law/Dropbox probably could. I personally don't mask myself at this level, but thought I should at least mention it.
This will get you an error right at the first iteration when trying to access `a(i-1:i+1,:)` which is `a(0:2, :)` because the "subscript indexes have to be real positive integers", which is not the case for zero. Plus you overwrite the second and third column in the next iteration.
Sweet, no problem! 
[A = 1/eps; str_e = sprintf('%0.5e',A) str_e = '4.50360e+15' str_f = sprintf('%0.5f',A) str_f = '4503599627370496.00000' str_g = sprintf('%0.5g',A) str_g = '4.5036e+15'](https://nl.mathworks.com/help/matlab/ref/sprintf.html)
Teaching a man to fish: [(1)](https://www.google.nl/search?q=MATLAB+Do+I+have+to+type+%22end%22+at+the+end+of+each+%27function%27+in+the+script+window%3F&amp;oq=MATLAB+Do+I+have+to+type+%22end%22+at+the+end+of+each+%27function%27+in+the+script+window%3F&amp;aqs=chrome..69i57j69i60.1807j0j7&amp;sourceid=chrome&amp;ie=UTF-8) -&gt; [(2)](https://nl.mathworks.com/help/matlab/ref/function.html). ctrl+f : "end" -&gt; "ust be at the end of the fil"..... 
I don't know. Do you? What happens if you try it? 
I don't have that toolbox that is needed, but when you say user20(i) you are only pointing at a single element of the matrix, not a row or column. Try user20(:,i) to search through all the rows and the ith column. Same thing for user48
you complete me &lt;3
lol. We've both help out / added to each other's posted code a few times on this sub.
I'm going to guess this is an endianness issue. You dont specify this, so it defaults to your computer's default format (if this is a windows computer, this is little endian, either 32-bit or 64-bit). 'b' and 'l' are the modifiers for 32-bit big endian and little endian ordering, respectively. I would try both of these (you should be able to specify this in either the *fopen* or *fread* commands). I'd guess there's a good chance one will produce the correct data. If this doesn't work, its possible the data isn't using IEEE floating points. The only other format I'm really familiar with is IBM floating points. [ibm2single](https://www.mathworks.com/matlabcentral/fileexchange/15674-seislab-3-01?focused=5148483&amp;tab=function) is a function that can convert IBM 32-bit floats to IEEE 32-bit floats. To use this you would read the data as 'uint32' format and then plug this into the ibm2single function. If it's not IEEE or IBM floats then you will have to figure out what format it is actually using.
I'd use the `mod` function, modding your numbers by `1111` and when it's zero, remove them. 
For i = 1:8998 if rem(YourMatrix(i),1111) == 0 YourMatrix(i) = []; end end I think it would be faster to exclude them by Hand like YourMatrix = [1000:1110 1112:2221 2223:3332 3334:4443 4445:5554 5556:6665 6667:7776 7778:8887 8889:9998]
What direction are you looking to find these cross section plots? Assuming you made your surface with something like: surf(X,Y,C); &amp;nbsp; If you're looking for slices in the x-z plane you already have them as the rows of C, e.g. plot(X(1,:),C(1,:)); Gives the cross section along the first y value. plot(X(7,:),C(7,:)); Gives the cross section along the 7'th y value and so on. You can actually plot multiple cross sections at once, but some care must be taken, when using matrices as arguments to plot, Matlab assumes the lines are in columns so you need to transpose the matrices. For example, if you wanted to plot the x-z cross sections at the first third and fifth y values you could do something like: plot(X([1,3,5],:)',C([1,3,5],:)'); Or for every other y value starting with the first: plot(X(1:2:end,:)',C(1:2:end,:)') &amp;nbsp; Similarly y-z cross sections would be the columns of C for example: plot(Y(:,1),C(:,1)); plot(Y(:,7),C(:,7)); plot(Y(:,[1,3,5]),C(:,[1,3,5])); plot(Y(:,1:2:end),C(:,1:2:end)); note that when plotting multiple lines in this case you don't need to, and shouldn't, transpose the matrices as the lines you want to plot are already in column format. &amp;nbsp; If you are looking for horizontal slices i.e. the x-y plane then do what Weed_O_Whirler said and use contour plot! Edit: formatting fail... hopefully fixed.
Hi bongdong420, For a set of 3 this requires a flip of any two of your nodes at some point, but for sets larger than 3 it gets way more complicated, but can be solved with recursive operations. Luckily however, Matlab's got you covered when it comes to working out all the permutations within a set. Check out: [perms documentation](https://uk.mathworks.com/help/matlab/ref/perms.html) edit: Notice the limitations section at the bottom, for larger sets the number of permutations can quickly get out of hand! If your salesman has to walk to a lot of houses he might want to consider not using brute force to optimise his route! There are other methods, although afaik many won't guarantee the optimal solution.
Interpolate the values of f(x) at the values of x that correspond to where you have values of a. [interp1](https://www.mathworks.com/help/matlab/ref/interp1.html)
This can be done by reading the documentation. Maybe start by reading the documentation for the functions you've already been told are relevant to your task. 
you just wanted to say bongdong420
What have you tried so far? Why do you think these functions may or may not be useful? Edit: I personally don't see how strcmp possibly comes into this unless I am seriously misunderstanding something. 
Check the return type of `class`
Or x=setdiff(1000:9998, 1111:1111:8888)
[isa](https://nl.mathworks.com/help/matlab/ref/isa.html)
maybe, its wise to embed your array in a slightly bigger array with zeros on the sides. Then you do your algorithm and throw away the edges again. This would be an elegant way to solve your troubles at the boundaries. [conv](https://nl.mathworks.com/help/matlab/ref/conv.html) would also work, but you don't want that. 
Just out of interest... why not conv2? I always assumed matlab used various speed-up tricks, e.g. through fft's and or overlap-add/subtract etc, and that it would be significantly faster than using the standard convolution formula? I've never tested though, am I wrong?? Also SM1LE, I'd definitely do what EatMyPossum said pad your arrays, if the ends only have to be apx correct and don't have too steep a gradient then a simple reflection boundary condition should work to give reasonable results. % example of reflection pad padn = 5; yourdata = rand(1,100); datapadd = [yourdata(padn+1:-1:2) , yourdata , youdata(end-1:-1:end-padn)]; datasmoothpadd = your_smoothing_function(datapadd); datasmooth = datasmoothpadd(padn+1:end-padn); You can of course do more advanced padding, for instance use a one sided filter to find the apx gradient at the end, and add twice that gradient to your reflected padded cells (reflecting it causes the gradient to change sign, so adding twice the gradient recovers it). This will be a slight improvement again, but if even that is not enough, then you would need to treat the ends as a special case, and devise a family of filters which are increasingly one-sided. There's also a lot of research done to devise different moving average filters, I'd recommend just using a box filter to begin with, so if you say you want it to be 5 points long, then h = ones(1,5)/5; should work. But there are lots of more advanced ones out there, if you want to read up on this check out some of the wiki articles on local regression. [wiki local regression](https://en.wikipedia.org/wiki/Local_regression)
Okay, sorry yeah I should have said conv rather than conv2, but would it still not provide an elegant solution to his/her problem? function smooth = your_smoothing_function(rough) h = ones(1,5)/5; smooth = conv(rough,h,'same'); end
Aaaahhhh... I should really learn to read the question ;)
So, I actually just wrote a code to do something like this. I could give you the code directly, but it sounds like you are actually interested in learning how to write something like this. As such, I'll go over the steps I did (if you want I can post my code later). I'll give you some code from a few of the subfunctions it uses though to help you out (these can be a bit trickier). This isn't necessarily the easiest way to get this done, but it is (in general) far more efficient than the "straightforward way". So, IMO its worth learning how to do this at least once. The idea is you want to generate a "kernel" that you can apply to smooth your matrix using matrix-vector multiplication (you convert your matrix to a vector before doing this, then convert the vector back to a matrix when you are done). The actual matrix-vector multiplication is quite fast, meaning that once you generate the kernel you can very quickly smooth any matrix (of the same size) using the same kernel. **Step 1: Determining the Type of smoothing to use** Personally, I feel that a Gaussian weighted smoothing is usually quite good. I'll give you the code to make this. function M=blurker(k,sigma) %% Generates the base Gaussian smoothing Kernel % produces a 2*k-1 by 2*k-1 matrix containing the kernel of a Gaussian blur with: % M(i,j)=(1/(2*pi*sigma^2))*exp(-((i-k)^2+(j-k)^2)/(2*sigma^2)) % Pre-allocate M=zeros(2*k-1,2*k-1); for ii=1:(2*k-1) for jj=1:(2*k-1) % Check if point is within (k-1) distance of center if (k-ii)^2 + (k-jj)^2 &lt;= (k-1)^2 M(ii,jj)=exp(-((ii-k)^2+(jj-k)^2)/(2*sigma^2)); end end end % normalize the Gaussian Smoothing Kernel M=M./sum(M(:)); end k determines how many elements to use in smoothing (k=2 --&gt; 3x3, k=3 --&gt; 5x5, k=4 --&gt; 7x7, etc.) sigma determines the standard deviation of the gaussian (make this higher to make the weights more equal. Make this lower to put more weight on the central point). **Step 2: Determine the number of elements in the soothing kernel** You want to make this a sparse matrix, since it will be mostly zeros. The most efficient way to do this is by first pre-allocating with *spalloc*, but you then need to determine how many non-zero elements the matrix will have. This is tricky, so I'll also give you the code for this part. % N2 and N3 are the dimensions of the matrix you want to smooth % N1 is the number of separate matrices you want to apply the smoothing to (can be 1) % Define smoothing K=blurker(k,sigma); % Determine number of non-zero elements in G (smoothing kernal) % Middle numPts=(N2-2*(k-1))*(N3-2*(k-1))*sum(reshape(~~K,[],1)); for k1=k:-1:2 for k2=k1:-1:2 % Corners numPts=numPts+4*(k1-k2+1)*sum(reshape(~~K(k1:end,k2:end),[],1)); end % Edges numPts=numPts+2*(N2+N3-4*(k-1))*sum(reshape(~~K(k1:end,:),[],1)); end G=spalloc(N2*N3,N2*N3,numPts); **Step 3: build the smoothing kernel** I'll let you give this part a shot on your own (though if you have trouble let me know and I can give you some code as well). The idea here is you define an empty sparse matrix that is slightly bigger than the matrix you want to smooth (specifically, it has a buffer of "k" points on each side). Call this "Gzero". Use *spalloc* and pre-allocate as many non-zero elements as smoothing matrix "K" has. Next, you loop through every row/column in the matrix you want to smooth. Replicate "Gzero" as a new matrix "Gtemp". You insert the smoothing matrix "K" into "Gtemp" such that for column "ii" and row "jj", the smoothing matrix is inserted into elements " ii : ii + 2 * k - 1 " and " jj : jj + 2 * k - 1 ". For example, for Row 1 and Column 1 and a 5x5 smoothing matrix, this would be inserted at Gtemp(1:5,1:5). Next, you cut away the outer k rows of Gtemp, such that it becomes Gtemp(k:end-k,k:end-k). The idea here is to deal with edge cases. For example, the points added into Gtemp(1:5,1:5) would become only Gtemp(3:5,3:5). This makes it so that Gtemp(1,1) is the center of the smoothing kernal, and that the outer edges of the smoothing kernal are cut away. Once you have cut this part away, normalize Gtemp by summing all elements in Gtemp (its sparse so this is quick) and dividing the matrix by the sum of all elements. You want this to sum to 1 to not change amplitudes when smoothing. You want to loop through rows and columns of the matrix you want to be smoothed. Outer loop should be rows and the inner loop columns. Keep track of a counter of how many indices you looped through. (e.g., outside the loop set kk=1, then at the bottom of the innermost loop set kk=kk+1). Within each iteration, you want to reshape the cut-down and normalized "Gtemp" matrix into a column vector, and then insert that column vector into the smoothing kernel G ( i.e., "G(:,kk)=Gtemp" ). If you do this right, the final iteration of the loop will insert stuff into the last column of G. The last step is to transpose G (after the loop has finished). You do this since you really needed things inserted into Rows of G, but its more computationally efficient to insert them into columns of G instead. I explained this part as well as I could, but if something isnt clear I can try to clarify, or just post the code (honestly that would have been easier then trying to explain, but you seem to actually want to learn how to do this and why it works). **Step 4: applying the smoothing kernel** This part is easy. Once you have G, all you need to do is reshape the matrix you want to be smoothed into a column vector (call it x). You then apply smoothing using the matrix operation "G*x". This will produce another column vector, which you then reshape back to the size of your original matrix. **Why this works** Each row of G contains weights on the given elements of x that are required to be combined for smoothing. e.g., if you have a 100x100 matrix and 5x5 smoothing matrix (+/- 2 points from the central smoothing point), the 1st row of G will have non-zero weights at elements 1, 2, 3, 101, 102, and 201. These represent the elements that are within 2 points of element (1,1) of the original 2D matrix ( i.e., (1,1), (1,2), (1,3), (2,1), (2,2), (3,1) ). All other elements of the 1st row of G will be zero, so when you multiply G by your entire matrix (represented as a column vector) only these points will contribute to the smoothed version of element (1,1). The same is true for all other rows of G. Additionally, each row of G should sum to 1 (due to the normalization is present when building G), so the overall amplitudes shouldn't change much. The benefit of the approach comes from being able to apply G to smooth any matrix that is the same size. The matrix-vector multiplication is dramatically faster than looping through each row/column to apply smoothing, so you only have to generate G once, save it, and then apply smoothing as many times as you desire. If you only need to apply smoothing once it doesn't end up saving a time, but it's not really slower either. Sorry this is long (its harder than I expected to explain), but I'd be happy to clarify anything that isnt clear.
Hi jkool702, That's a pretty interesting approach that I hadn't really considered, and the rest of this post is a bit nit-picky, I just wanted to point out a few things that you might want to consider if you ever decide to have another look at your filtering code. If I understand correctly the i'th row of G has your kernel weights indexed into the pixel locations that each weight would apply to produce the final smoothed pixel i? If the original matrix is MxN and your kernal is IxJ are you not then doing a matrix multiplication of (MN)x(MN) times (MN)x1 ... which amounts to (MN)^3 individual multiplications I think? Admittedly most of these are sparse multiplication with zero, but even ignoring all of those it's still MNIJ which would be equal to the standard convolution formula, and way more than using convolution algorithms? You could also take advantage of the fact your Gaussian Smoothing Kernel is actually separable. Not all filters are but since e^(-x^2 /sig^2 - y^2 /sig^2 ) can also be written as e^(-x^2 /sig^2) e^(-y^2 /sig^2 ) you're in luck. Essentially this means you can perform the filter as two successive 1D filters which will reduce the complexity down to MN(I+J). I would still definitely advocate for using something like the convolution function to apply your kernel, as it will be far more efficient... but if you really don't want to do this then perhaps you might consider filtering in the fourier domain? Convolution in the spatial domain equates to multiplication in the fourier domain, so you can just do something like: smoothed = ifftn(fftn(data).*fftn(kernel)); Or even better you could define the fftn of the kernel directly to implement whatever sort of low-pass filter profile you desire, gaussian, sinc, lanczos etc. I believe the Matlab sig proc toolbox actually has quite a selection of functions to help you design or choose your own! I hope this doesn't come across as bitchy, I really do like the novel way you've approached it and the effort you put into your post! I'd also be happy to share my algorithms with you, SMlLE or anyone who is interested if you wanted to see a different approach? I recently wrote a function to return compact kernels up to any order and any level of support with any weight function. So for instance if you specified second order with a length of 9 and a gaussian weight function you'd receive three kernels, the first would provide smoothing based on a weighted linear least squares fit with a 2nd order polynomial, the second and third would return the local derivative and second derivative respectively. edit: May as well include the kernel generating code in case anyone is interested: https://pastebin.com/i4TBr3w7
So, I ran a few tests, and ignoring the amount of time it takes to construct the kernel (which admittedly isn't particularly fast the way I currently have it coded), the speed of the code I wrote almost matches the speed of conv2. All things considered, I'd say thats not too bad. conv2 might have a 1.5x - 2.0x advantage, but considering how fast conv2 is (even for huge matrices) I'm decently happy with my approach. I really dont have time to play around with it right now, but if you are interested [here](https://pastebin.com/RHN6gQBE) is my code. I have no doubt there are better ways to do it, but if you will be re-using the kernel multiple times it will still be pretty efficient. Of newer computers (specifically, ones with AVX 2, mine only has AVX 1), this method might even beat out conv2, since in theory matrix operations should be twice as fast (I think). To be honest, I picked up this approach to use in image de-noising (having the blurring kernal applied with matrix multiplication makes linear inversion straightforward to do). But at some point I realized I could use it in general for applying smoothing, and it would still be wayyy faster than manually looping through the matrix to apply the smoothing. I dont really practically need it any faster than it is, so I never bothered trying to make it better (or even really trying things like conv2 until you mentioned it). I do appreciate the suggestions though. I might look into them more when I have the time. EDIT: also, I know I would be better off looping over the last dimension instead of the 1st dimension. I've just been too lazy to change it. Also, this is the code I used to speed test it. M=randn(10,300,300); k=5; sigma=2; tic [~,G]=smoothData(zeros(300,300),k,sigma); toc tic M_smooth=smoothData(M,k,sigma,G); toc tic Mker=zeros(2*k-1,2*k-1); for ii=1:(2*k-1) for jj=1:(2*k-1) if (k-ii)^2 + (k-jj)^2 &lt;= (k-1)^2 Mker(ii,jj)=exp(-((ii-k)^2+(jj-k)^2)/(2*sigma^2)); end end end % normalize the Gaussian Smoothing Kernal Mker=Mker./sum(Mker(:)); M_smooth2=nan(size(M)); for nn=1:size(M,1) dataTemp=squeeze(M(nn,:,:)); M_smooth2(nn,:,:)=conv2(dataTemp,Mker,'same'); end toc 
Let's say your minimum was at x = 10. Which of the following xlim intervals would correctly center it? [5 15] [8 11] [0 20] [5 11] Which ones work, and why? Can you give me even more intervals that work? Does that give you an idea of how to call xlim in your code?
assuming [this heavyside](https://nl.wikipedia.org/wiki/Heaviside-functie) function, add this after your code: hold on ; stepLoc = 0 ; xl = xlim ; plot([xl(1) stepLoc stepLoc xl(2)],[0 0 1 1]) 
Solved. I figured out a way to achieve what I wanted. s = tf('s'); H = 1.25 * s / (1 + .1 * s)^2 [y t] = step(H); h = heaviside(t); plot(t, y / sum(y)); hold on; plot(t, h / sum(h)); grid;
Thanks, I figured out [another way to do it](https://www.reddit.com/r/matlab/comments/6aqmvk/include_plot_of_heaviside_function_itself_in/dhgm6sp/) before you posted your answer but yours might come in handy too.
18 minuts after you post your question you supply the answer... looks like maybe you could save yourself some time and look a bit harder before you formulate reddit questions
I had already spent a lot of time trying to figure it out and I almost wanted to give up (which is not an option but that's what I wanted). Therefore I posted and asked about it. Then after I had posted and asked, I kept trying to figure it out and I finally found a way. Besides you shouldn't look at it like that anyway. Posting questions and solutions online can help others (and even myself in case I forget) in the future.
check your working directory?
Does it work if you run the examples found via doc vpasolve?
Check your path. Toolbox installations often mess with the path that Matlab uses to find functions.
Assuming you don't have any complicated manual paths set up, you should try to reset your path to default. Run '[restoredefaultpath](https://www.mathworks.com/help/matlab/ref/restoredefaultpath.html)' and see if that fixes it. Edit: Also you may want to check the 'startup' script that runs when Matlab is opened. Sometimes toolboxes alter this script so that their paths are added every time the software starts. Run 'open startup' to inspect this script and make sure nothing is out of the ordinary. By default it should be empty.
The error means exactly what it says. What do you find when you check out the value of the index? How did it get that value? What should the value be? 
Thank you for the information. I'm still confused on how I would go about fixing this without changing the output of my function.
Yo, /u/jgyuri, did any of this help you? Folks here volunteer our time, you should at least say thanks.
I disagree. For that you would need to nest everything in a recursive GUI thread before call back processing syntax is stunted!
1) you have more than 1 parameter. Saying which one the error is about will help tremendously. 2) people will be much more willing to help if you take the extra 30 seconds to format your code correctly. If you cant be bothered to format the code so I can easily see what is happening I dont see why I should take the time to do so either.
I'm not entirely sure what you're asking. I'd assume that since you're doing stuff with rotation matrices you'd already know how matrix multiplication works. If you put your points into a 3-by-*N* matrix *X* and you have a 3-by-3 rotation matrix *R*, then *R**X* will be a 3-by-*N* matrix with your rotated points. 
If you can.. step through the code and see where it freezes. It is kinda hard to see what could be going wrong without the code. I know that plotting ridiculously large detailed plots will do it on some systems and not others.. 
You should learn to vecotrize your code. I haven't read your code, so I'm not sure how compact it could be, but I wouldn't be surprised if it can be two dozen lines or so. For example: C{2}(17)=C{1}(3); C{2}(18)=C{1}(3); C{2}(19)=C{1}(3); C{2}(20)=C{1}(3); C{2}(21)=C{1}(3); C{2}(22)=C{1}(3); C{2}(23)=C{1}(3); C{2}(24)=C{1}(3); can be replaced with: C{2}(17:24) = C{1}(3); ---- another example: C{2}(1)=C{1}(1)-k0; C{2}(2)=k0; C{2}(3)=C{1}(1)-k0; C{2}(4)=k0; C{2}(5)=C{1}(1)-k0; C{2}(6)=k0; C{2}(7)=C{1}(1)-k0; C{2}(8)=k0; is equivalent to: C{2}(1:2:8) = C{1}(1)-k0; %BTW, 1:2:8 = 1:2:7 C{2}(2:2:8) = k0; ---- and so is most of your code.
&gt; I'm not entirely sure what you're asking. I'd assume that since you're doing stuff with rotation matrices you'd already know how matrix multiplication Thanks for your reply. Yes I know how matrix multiplication works. The trick is that the rotated x,y and z coordinates are not stored in 3-by-N matrix, but rather in 3x separate matrices Xx,Yx and Zx. Xx-stores the rotated x coordinates Yx-stores the rotated y coordinates Zx-stores the rotated z coordinates Then with the surf command, a surface is created with the help of the three matrices (Xx,Yx and Zx) where each point's coordinates are stored. The points then are connected to create the surface. Basically Xx stores the x coordinates from each point, Yx stores the y coordinates, while the Zx matrix uses the elements from the Xx and Yx matrices and calculates the elevation for each point. &amp;nbsp; **SHORT VERSION FOR SURFACE ROTATION AROUND THE X-AXIS** ___ Here I'll be discussing only the rotation around the X-axis. I'll be skipping the unessential parts from the code in sandbox.m. First I'll comment and give few explanations on the code I've posted at Mathworks.com previously in the CONCEPT section. Then I'll post the shortened version from the code in the SHORT VERSION CODE FOR SURFACE ROTATION AROUND THE X-AXIS section. &amp;nbsp; **CONCEPT** ___ I'll also try to summarize lines of codes into logical segments. The input values and output results will be presented as: **step #** % input variables with its initial values % output variables along its output values and/or displayed rendering results % explanation here I will try to explain what actually happens in my own words &amp;nbsp; **step 1** % input lx=4; x=linspace(1,4,lx); % output x = 1 2 3 4 % explanation this code generates an x 1-by-4 vector which stretches from 1 to 4 alongside the X-axis, while lx represents the number of points in that segment. **step 2** % input ly=3; x=linspace(1,3,ly); % output y = 1 2 3 % explanation this code generates an y a-by-3 vector which stretches from 1 to 3 alongside the Y-axis, while ly represents the number of points in that segment. **step 3** % input [X,Y]=meshgrid(x,y); % output X = 1 2 3 4 1 2 3 4 1 2 3 4 Y = 1 1 1 1 2 2 2 2 3 3 3 3 % explanation the meshgrid command takes the values from the x 1-by-3 and y 1-by-4 row vectors and creates 2x 4-by-3 matrices, namely X and Y. X stores each point's x coordinates, while Y stores y coordinates. this line of code is very important since it creates a surface which lies in the xy-plane and uses it to calculate the z coordinates for each point and by doing so, thus gives it an elevation in the Z-axis direction. **step 4** % input Xx=zeros(length(y), length(x)); Yx=zeros(length(y), length(x)); Zx=zeros(length(y), length(x)); % output Xx = 0 0 0 0 0 0 0 0 0 0 0 0 Yx = 0 0 0 0 0 0 0 0 0 0 0 0 Zx = 0 0 0 0 0 0 0 0 0 0 0 0 % explanation the previous three lines of code preallocate space in memory to improve performance. however I thought it was important to mention this because here you can see how each of the 3x matrices (Xx, Yx and Zx) have 20 elements, which will be used to store the rotated coordinates **step 5** % input r=0; c=1; while ((r*c)~=(lx*ly)) if((r-ly==0) &amp;&amp; (c-lx&lt;0)) r=1; c=c+1; else r=r+1; end A=rotation3dx([X(r,c),Y(r,c),Z(r,c)],theta); Xx(r,c)=A(1,1); Yx(r,c)=A(1,2); Zx(r,c)=A(1,3); end % output Xx = 1 2 3 4 1 2 3 4 1 2 3 4 Yx = -1 -1 -1 -1 -2 -2 -2 -2 -3 -3 -3 -3 Zx = 1 1 1 1 2 2 2 2 3 3 3 3 % explanation in this part of the code I use the r as row counter which c is the column counter. with the condition in the while cycle, I make sure that each point's initial x, y and z coordinates are taken from the initial X, Y and Z matrices in order to be rotated around the X-axis; that is done by first assembling them in 1-by-3 vector and sending it as an argument in the rotation3dx function. this function then outputs the newly rotated x,y and z coordinates and stores them into the appropriate elements of the 3x output matrices Xx, Yx and Zx. as you can see from the rotated output coordinates, only the Yx matrix's elements are changed, since the rotated surface mirrors the initial surface across the xz-plane, because the theta rotated angle is 90^0 so the initial x and z coordinates stay the same. **step 6** % input h1=surf(X,Y,Z, 'FaceColor', 'black', 'FaceAlpha', 0.5); h2=surf(Xx,Yx,Zx, 'FaceColor', 'red', 'FaceAlpha', 0.5); % output a figure is displayed with the initial surface and the rotated surface around the X-axis for 90^0. % explanation with the 2x surf commands we use the initial coordinates from X, Y and Z matrices to render the initial surface in black color and we use the rotated coordinates from the Xx, Yx and Zx matrices to render the resulting 90^0 rotated surface around the X-axis, in red color. &amp;nbsp; **SHORT VERSION CODE FOR SURFACE ROTATION AROUND THE X-AXIS** ___ here is the code from the the short version clear all close all clc % environment setup fig=figure('units','normalized','outerposition',[0.5 0 0.5 0.75],... 'Name','Surface rotations without using for cycles'); title('Surface rotations without using for cycles'); hold on grid on axis equal rotate3d on view(70,35) % input of rotation parameters theta=90; theta=theta*pi/180; % initial surface structure's coordinates data generation % that lie in a plane which passes through the basic X-axis lx=4; ly=3; x=linspace(1,4,lx); y=linspace(1,3,ly); [X,Y]=meshgrid(x,y); Z=0*X+Y; % preallocation coordinates for the rotated data arrays % in order to improve performance Xx=zeros(length(y), length(x)); Yx=zeros(length(y), length(x)); Zx=zeros(length(y), length(x)); % cycling through surface structure's coordinates and data rotation r=0; c=1; while ((r*c)~=(lx*ly)) if((r-ly==0) &amp;&amp; (c-lx&lt;0)) r=1; c=c+1; else r=r+1; end %rotating around X,Y,Z axes and the custom n-vector axis A=rotation3dx([X(r,c),Y(r,c),Z(r,c)],theta); % storing of the transformed coordinates into data arrays Xx(r,c)=A(1,1); Yx(r,c)=A(1,2); Zx(r,c)=A(1,3); end % objects rendering h1=surf(X,Y,Z, 'FaceColor', 'black', 'FaceAlpha', 0.5); h2=surf(Xx,Yx,Zx, 'FaceColor', 'red', 'FaceAlpha', 0.5); % render coordinate system and axis visual components text(0,0,0,'O(0,0,0)','color','black'); text(1,0,0,'X-axis','color','red'); text(0,1,0,'Y-axis','color','green'); text(0,0,1,'Z-axis','color','blue'); quiver3(0,0,0,1,0,0,'color','red'); quiver3(0,0,0,0,1,0,'color','green'); quiver3(0,0,0,0,0,1,'color','blue'); &amp;nbsp; **SUMMARY** ___ first thing I did was tried exactly what you've suggested. I've managed to get the all of the initial x,y and z coordinates from the X, Y and Z matrices into single N-by-3 matrix IM. in this particular case it was 20-by-3 matrix because the surface was composed from 20 points. then I sent the 20-by-3 matrix IM as argument into the rotation3dx function alongside the theta 90^0 angle and managed to get all of the x,y and z coordinates from the rotated surface into a single 20-by-3 matrix OM. I could taste the success... but then I got an ugly surprise... when I tried to put the first column from OM, which contained the rotated x coordinates by slicing it with OM(:,1) it treated it as 20-by-1 vector and didn't processed it. in the same attempt I sliced OM(:,2) to get the y coordinates and OM(:,3) to get the z coordinates. however the ugly surprise was that the surf command only receives matrices as input arguments and not vectors. it obviously doesn't care that the 20-by-1 vector is basically the same thing as an 20-by-1 matrix. anyway, I was making a break from writing this post by getting a pack of smokes so I got a new idea to trick the surf command. maybe I can replicate the OM(:,1) x coordinates few more times in the other columns, lets say 3x more times and get a Xx[OM(:,1),OM(:,1),OM(:,1)] matrix. then I'll do the same thing for the y and z coordinates and maybe I'll manage to render the very same rotated surface 3x times... the idea is to avoid using for and while cycles after all... hopefully this will get me there. I'll be back with an update after I take a lunch and if I manage to get something useful out from this. **THANKS FOR YOUR INTEREST!!!**
can some one help me here pls i need this to complete my HW 
The `reshape` function should be all you need. For example, if you've got some (x,y,z) points in the 3-by-4 arrays X, Y, and Z, and a rotation matrix R: [X,Y] = meshgrid(1:4, 1:3); Z = X + Y; R = [1, 0, 0; 0, cosd(10), -sind(10); 0, sind(10), cosd(10)]; You can put the points into a 3-by-12 matrix XYZ: XYZ = [X(:), Y(:), Z(:)]'; Then you can multiply by R on the left to get another 3-by-12 array: XYZ_rotated = R*XYZ; Then you can separate it back into three 3-by-4 arrays: X_rotated = reshape(XYZ_rotated(1,:), 3, 4); Y_rotated = reshape(XYZ_rotated(2,:), 3, 4); Z_rotated = reshape(XYZ_rotated(3,:), 3, 4);
This or 'sprintf' also works if you want a bit more control over what gets displayed
You need to use datetime to convert your formatted hh:mm:ss.s data into a number that Matlab can work with. Matlab works with numbers, and hh:mm:ss.s isn't a number. In fact, the colon (':') symbol has many specific uses in Matlab so it doesn't make sense to just use it in the context you have provided. [This is the documentation for datetime](https://www.mathworks.com/help/matlab/ref/datetime.html). If you don't even know how a function works than I would recommend watching a video on the basics of Matlab or the basics of coding. 
Also look up the "hold" function. It basically plots new data on a previous graph.
I would undo whatever change you made here. Going from something that runs to something that throws an error before it even starts to run is making backwords progress. This is a guess, but it sounds like you might be running out of memory. 5D equations tend to get large quickly. I'd reccomend keeping track of your memory usage as the program is running. If this is the issue, then you can try and clear variables you no longer need and things like that. But, if that doesnt work, you will probably need to only load part of the data at once and transfer things back/forth to disk. Its much slower, but its doable. Of course, getting more ram is always a possibility too is its a memory space issue.
I know it's a sucky way of communicating, but I have successfully gotten response from otherwise silent companies by writing on their Facebook pages.
hum that's weird, if you send me a screencap or the file I might be able to give it a look but my working knowledge is very low :)
This will get rid of the obvious stuff outside the main band of data. Its pretty straightforward to implement with [logical indexing](https://www.mathworks.com/help/matlab/math/matrix-indexing.html#bq7egb6-1). % x = data % xMax = upper bound tolerance % xMin = lower bound tolerance % Modify these bounds as necessairy. I make an initial guess of +/- 20 xMax = 20; xMin = 20; % Make a copy of the data (dont want to overwrite the original data) xNew = x; % replace data outside of bounds with NaN xNew(xNew &gt; xMax) = NaN; xNew(xNew &lt; xMin) = NaN; A few of the circles appear to be in the main band of data, which will make those trickier to deal with. I'd recommend starting here and seeing if this is sufficient for removing the outlier data points. **EDIT** Alternately, you can look for places where the 1st derivative changes quickly. You can calculate the 1st derivative using: dx=x(2:end) - x(1:end-1); You can use the same approach described above to replace values above/below some tolerance value with NaN's.
Not my field, but maybe median filtering the signal could help out here?
Even without using cat function, concatenation can be used. I am extremely sorry for posting wrong code.. And the problem was on I mistakenly put output = []; inside for..loop which gave empty value. Sorry for not rechecking before posting. I will remember the things you mentioned before posting next time. Thanks for helping me.
I've already tried to filter out by creating a preset range like this. It left way too many discontinuities in. The problem I'm struggling with is the tolerance value has to be something calculated while (or immediately after) adding the data into the matrix, because the "acceptable range" changes with each independent discontinuity, and they seem to be unpredictable. 
If you take the point in the bottom left as the first point, then point 2 and 3 are close together. The object is probably stationary here. The angle between point 2 and 3 is very different from the angle between point 1 and 2, making the program think this is a curve. As I'm using an average angle between the points, these angles will change my results significantly with the result that I can't determine whether a line is (sort of) linear or curved. This line should be classified as curved.
1) it looks like there are some measurement errors here. As in, your sensor is borked. There are times when it looks like this is int8 data which has overflowed and wrapped. There may be unstable or poor grounds in your circuit. 2) most of this can be corrected as follows: sort your data; take the inner 98% of it. Then, take a histogram and look at the distribution. It's probably Normal (Gaussian), with a sigma of 4 or so. Figure out what that sigma really is with `std()` on the good 98%. Three sigma out is a good threshold to try. This means that anything - more than 3x the sigma you found, away from the mean of your 98% "good" data - is probably trash. A tip here is to first subtract the median of each run (this is a lot of runs, right?), then calculate your statistics from all of your "de-median"-ed data. 3) if you just run the `histogram()` function on your data with a lot of bins - probably -128 : 127 if I had to guess - you'll probably be able to eyeball the distributions and tell what constitutes an outlier. What you're looking for is how far out from the center or peak of the distribution the data you like lives. 4) this is about liking your data. If you throw shit out, it amounts to lying. Maybe it is a bad run and deserves to be thrown out, but remember that at the end of this you're still imposing a judgment call on what you're using, to support your needs. 5) post your data, I might be able to come up with something less arbitrary to do with it. Also, what is this? Accelerometer data from something that doesn't move a lot?
FYI that is just the `diff() ` command. Most of the time I prefer `gradient() ` because it's a two-sided approximation and is the same dimension as x, but they both have their applications.
Well, each rate has a constant value of 1.1 or 0.9 constantly encoded, which is why you see increases of ~1.1 and ~0.9 over time.
It's an issue with the funtions themselves
1) I'm measuring kinematic data from people sitting at a computer, so most of the jumps in the data are when a marker disappears. There's a lot of redundancy in the measurement system that's supposed to prevent these issues, but it seems to have caused them this time. 2-4) I hadn't thought of using a histogram, but I might try that. One of the issues I'm getting is that when I start implementing arbitrary cut-offs I get something [like this](http://i.imgur.com/s6SXxAC.png). I might have done it wrong, but as you can see, there's still a lot of jumps in the data left behind (vertical lines). 5) The data itself is extremely dense before processing. It's a multiple level structure. The data for each participant is a row (35 participants), data from kinematic tasks is in columns 1 and 2 (2 tasks), the rest of the columns are demographics (Not relevant to the issues I'm having). Inside each cell of the kinematics columns is a 10 minute recording of 24 variables at 100-samples/second. Each row is a sample (60,000 rows), each column is a variable. Right now I only care about the 23rd and 24th variable. You can find the full dataset [here](https://drive.google.com/file/d/0B6kP0zQH5GGlMU9nZzJTQ2pBOHc/view?usp=sharing). Each cell in those first 2 columns looks [like this](https://drive.google.com/file/d/0B6kP0zQH5GGlVHZheUZyS21lTXc/view?usp=sharing). SampleA is an example of single sample jumps, SampleB is an example of a flat translation of the data that could last anywhere from a second to several minutes. These are both things I'd like to be able to flag somehow and correct. The second one is the one I've had the most trouble with. There are 70 of those total (2 per participant, 35 participants). In order to visualize it, I use a series of nested for-loops, like so: for VAR=23:24 %select which variables to plot (In a given {p,d} (row/column) cell position there is a matrix. This specifies which column of that matrix to plot. Do not change this. for d=1:2; %selects which of the conditions to plot (the columns in the structure) for p=1:35 %selects which participants to plot (the rows in the structure) REF=Data{p,d}.data; %Shortcut to reference cell figure(VAR) %Makes a separate figure for each variable subplot(2,1,d) %Plots both conditions on separate subplots hold on %Keeps the data so that multiple participants can be seen at once x=REF(:,VAR); y=REF(:,1); z=zeros(size(x)); surface([y,y],[x,x],[z,z],'facecol','no','edgealpha',.1,'edgecol','r'); %I used this to plot semitransparent lines. You can just replace it with 'plot(1:60000,REF(VAR))' if you don't care about that. end %participant end %task end %variable 
I think I might play with this command, it seems to be close to what I'm looking for. Does it give negative and positive numbers?
Philosophically: I prefer `diff()` over the explicit subtraction because it makes things easier to read -- no need need for explicit indexing, and you are indeed differentiating, which is clear at a glance. Practically, I prefer it because that indexing is another chance for an error; two of them, actually. It's preference of course, that's just the way I've found works best for me.
Hi this is my question that i need to do, and i am not sure how to tackle the part a. i have imported the data, but am not sure where to go from there thanks for any help.
I dont know how to do a for loop to make the 3D matrix. I'm not sure where to start.
what do you mean exactly? your function has multiple variables?
Lets say its a function of 2*L*thetad*sin(theta), where thetad is already a derivative of theta. Now if I take the derivative with respect to theta, thetad will be treated a constant.
you reset n = 1 each iteration of the loop, so it would not work at all.
oh so you have a differential equation. why do you need to differentiate that equation?
oh right use laplace transformations
 double(c(i)) == 10 will return a logical vector (i.e., 1's and 0's) where c(i) = 10. So if you have c = [10 5 5 15 10 10 1]; then double(c) == 10 will return ans = 1 0 0 0 1 1 0 It seems like it's counting which rows equal 10.
Ahhh that makes sense, so say 4 rows equal 10, it will add 4 to to rows?
~~It will add 1 to the indices in rows where c(i) equaled 10.~~
It's actually happening in an if loop where double(c(i)) == 9 || double(c(i)) == 10 which is inside a while loop that checks for i's and row's max values. Thing is I don't know what the c array actually looks like so it makes this process difficult.
1) use export_fig, currently maintained by Yair Altman. Ridiculous amount of options, including controlling which renderer you use. You can do that in matlab natively, but export_fig makes it simpler. And it's essentially WISIWYG. 2) set your default figure and axes properties in in your startup.m. Make all figures default with the correct size and font for your publication. 3) whenever possible, render in black and white and step back a few feet. Try to make your figures subtend the same angle on your screen as they would on a page, prior to including them for publication. 4) use tightfig, available in the file exchange. Does a fine job of snipping extra space. 5) on `surf` objects, add `lighting phong, camlight right, shading interp`. This makes surfaces render in a way that the human visual system understands well. Those are off the top of my head, but there are gobs more including using `semilogy()` to render log plots. Oh! 6) when plotting a bunch of time series, plot them all with one command by putting your data in columns and horizontally concatenating it before plotting. And finally: 7) plot in a loop. Put your data in a cell vector, your labels in one too, and loop over the data. Create a new figure or subplot for each dataset, but handling each the same way. 
Before you can visualize a 3D reconstruction you need to define what you want a 3D reconstruction *of*, then write/use an algorithm to reconstruct the geometry given the initial data. It's a well-studied problem but not an easy one.
That's exactly what I'm looking for: any algorithm :/
I imagine the properties of the area inside the object are very different than those outside the object. Use logical indexing to set the outer properties to NaN. You can then look at different constant value surfaces using [isosurface](https://www.mathworks.com/help/matlab/ref/isosurface.html). If you just want the outer geometry of the object, use logical indexing to set all the values inside the object to the same value. Isosurfaceshould then return the outer surface (probably, I've never used it like that). You can rotate the object in 3D view using functions like [rotate](https://www.mathworks.com/help/matlab/ref/rotate.html) and [rotate3d](https://www.mathworks.com/help/matlab/ref/rotate3d.html)
Because the vectorized file can be read by programs like Illustrator to make final adjustments (i.e., adding a graphic, adjusting text, etc.). Matlab can do most of these things but I prefer to spend less time in Matlab and more time in Illustrator when worrying about how "nice" things look.
2 Main suggestions, and a few more miscellaneous minor ones. **Main Suggestions (in general)** 1) Use [PaperPosition](https://www.mathworks.com/help/matlab/ref/figure-properties.html?searchHighlight=paperposition#zmw57dd0e277731) to set the relative size of stuff in the figure (e.g., increase or decrease area to make subplots and titles and axes all look good and not overlap). 2) Use [print](https://www.mathworks.com/help/matlab/ref/print.html) to convert the figure to an image with absurdly high dpi using the 'r____' option **Other Suggestions** For overlaying stuff, the 'AlphaData' property (or the [alpha](https://www.mathworks.com/help/matlab/ref/alpha.html) function) is useful to make images partially transparent. When using histograms, the [histogram](https://www.mathworks.com/help/matlab/ref/histogram.html) function is much more flexible than the [hist](https://www.mathworks.com/help/matlab/ref/hist.html) function is. I havent tried, but using 'hold on' and setting AlphaData has a decent chance of working using 'histogram' instead of 'hist' You can customize the layout better by using a bunch of subplots and then having one subimage take up multiple ones. For example subplot(10,10,[1:4,11:24,21:24]) would make the subplot take up the upper 3 or 10 rows and the leftmost 4 of 10 rows As a general statement, look at the figure properties and investigate any that look interesting. Get to these using fig1=gcf Then set new values using fig1.PropertyName=PropertyValue You have a huge amount of flexibility using these. You can automatically generate and name subplots using for loops. 'num2str' is quite handy too. Something like figure for nn=1:25 subplot(5,5,nn) plot(_____) title({['This is Figure ',num2str(nn)]}) end Note: you can set precision of num2str for floats using num2str(x,'%.3f') % gives 3 values after the decimal point. Formatted as float I'm sure I have more, but this is what immediately comes to mind. Also... &gt; I switched to sub-plotting to stack the histograms, but now it's hard to see how different they are Force the histograms to have the same ranges and the same number of bins. Extract the bin counts for each bin. Take the difference for each bin. Plot it.
Fair enough. I guess if I was really good at a program like illustrator or photoshop I might feel the same way.
&gt; 1) use export_fig, currently maintained by Yair Altman. Ridiculous amount of options, including controlling which renderer you use. You can do that in matlab natively, but export_fig makes it simpler. And it's essentially WISIWYG. &gt; export_fig is probably my favorite addon for making nice looking figures easily that I can just drop into LaTeX and still be able to select text.
regarding your specific problem: Generate your histogram data in advance, using `histcounts`with a `binedges` argument to keep the same bins for each. I assume this will work since you want to compare them. Then: * Use `bar3` to generate them as a bar graph. or * Use `surf` to generate them as a surface. or * Use `mesh` to generate them as a surface * Use `gradient` along the appropriate axis to directly calculate the differences, and then pass them directly into one of the above approaches. Try `bar3` with the `ligthing phong, camlight right, shading interp` options I suggested above. That shit is glorious. 
Yes it did. Thank you, sorry i had been off work for the past few weeks. 
Thank you man
I made two things to do just this :D. dicomCollage is your classic three slices viewer where you click one image and the other ones chance. The other one is more experimental, it tries to identify objects by their peak in the intensity histogram, and than plots several plots with one color for each peak: function [hO] = dicomCollage( X,sz,hfIn) %DicomCollage interactive visualisation with images of 3D data. % X is a N*M*K matrix % sz is a 1x3 array with dataaspectratio of X persistent ha hi hf persistent Xp indArg0 if ~exist('sz','var') sz = [1 1 1]; end sz = abs(sz) ; Xp = X ; indArg0 = arrayfun(@(s) 1:s,size(Xp),'uni',0) ; %functions plusone and minus one (with 3+1 = 1) p1 = @(i) mod(i,3)+1 ; m1= @(i) mod(i-2,3)+1 ; if nargin &lt; 3 hf = figure(8008135) ; clf else hf = hfIn ; end %double to not crash on binary masks caxlim = double([min(X(:)) max(X(:))]) ; set(hf,'WindowButtonUpFcn',@buttonUp) Xsz = size(X) ; dirInd = round(Xsz/2) ; acc = eye(3) ; for di = 1 : 3 ha(di) = subplot(2,2,di) ; %cell as input ot Xarg, to choose the dimension withouth a switch indArg = indArg0 ; %is 1 and 2 for X and Y resp. indArg{di} = dirInd(di) ; Xarg = squeeze(X(indArg{:})) ; if di == 2 Xarg = Xarg'; end hi(di) = imagesc(Xarg) ; set(ha(di),'xcolor',acc(di,:),'ycolor',acc(di,:)) axis tight hold on; hp(di,1)= plot3(ha(di),xlim(ha(di)),[0 0]+dirInd(p1(di)),[1 1],':','color',acc(p1(di),:),'lineWidth',1.5); hp(di,2) = plot3(ha(di),[0 0]+dirInd(m1(di)),ylim(ha(di)),[1 1],':','color',acc(m1(di),:),'lineWidth',1.5); daspect(1./[sz(m1(di)),sz(p1(di)),sz(di)]) set(ha(di),'ButtonDownFcn',{@CTclickBDF,di}) ; colormap(bone) caxis(caxlim) end set([hi(:);hp(:)],'HitTest','off') if nargout &gt; 1 hO.p = hp ; hO.a = ha ; hO.i = hi; hO.f = hf ; end persistent theGoodD ; %click funciton. Update he cross on the current screen, than update the %other panels function CTclickBDF(hfig,eventdata,di) set(hf,'WindowButtonMotionFcn',@windowMoveThing) ; theGoodD = di ; windowMoveThing() end function windowMoveThing(h,event) %calculate new indices fromt he mouse click event mousePoint = get(ha(theGoodD),'CurrentPoint') ; dirInd = round(mousePoint([1,3])) ; dirInd = dirInd([1 2]) ; %check for (slightly) out of bounds di = theGoodD; lims = [get(ha(theGoodD),'XLim') get(ha(theGoodD),'YLim')] ; lims = lims(2:2:4) ; if theGoodD == 0 || any(dirInd&lt;=0 | dirInd&gt;lims) % warning('Try to click inside the figure') ; return end %update the crossig lines set(hp(di,1),'YData',dirInd(2)+[0 0]) ; set(hp(di,2),'XData',dirInd(1)+[0 0]) ; updatePanel(m1(di),'X') updatePanel(p1(di),'Y') end function updatePanel(dii,lineDir) %converts x and y to 1 and 2 thisInd = double(lineDir)-87 ; %this is why proper languages start indexing on 0 otherInd = ~(thisInd-1)+1 ; %update the other image indArg = indArg0 ; %is 1 and 2 for X and Y resp. indArg{dii} = dirInd(thisInd) ; Xarg = squeeze(Xp(indArg{:})) ; % if dii ~= 1; if dii == 2 Xarg = Xarg'; end set(hi(dii),'CData',Xarg); set(hp(dii,otherInd),[lineDir 'Data'],dirInd(otherInd)+[0 0]) ; title(ha(dii),num2str(indArg{dii})) ; end function buttonUp(~,~) set(hf,'WindowButtonMotionFcn',{}) ; theGoodD = 0 ; end end 
 function dicomXviewer( X,sz,r,nP,cc) %DICOMXVIEWER Summary of this function goes here % Detailed explanation goes here if ~exist('r','var') r = 9 ; end if ~exist('sz','var') ; sz = [1 1 1] ; end if ~exist('nP','var') nP = 8 ; end if ~exist('cc','var') cc = hsv(nP) ; end if isa(cc,'function_handle') cc = cc(nP) ; end [hc,hl] = histcounts(X(:),max(X(:)),'BinMethod','integers') ; %append a zero to allow a peak at the end hc = [hc 0 ] ; hl = [hl hl(end) + mode(diff(hl))] ; centers = (hl(1:end-1)+hl(2:end))/2 ; [PKS,LOCS,W,P] = findpeaks(hc,centers,'NPeaks',nP,'SortStr','descend','MinPeakDistance',r*2) ; LOCS = sort(LOCS) ; figure(455) ; clf hh = subplot(1,1,1) ; plot(centers,hc) ; hold on ; for peaki = 1:nP ; [~,mini] = min(abs(LOCS(peaki)-centers(1:end-1)) ) ; plot(LOCS(peaki),hc(mini),'x','Color',cc(peaki,:),'MarkerSize',16) plot(LOCS(peaki),hc(mini),'o','Color',cc(peaki,:),'MarkerSize',16) end set(hh,'YScale','log') figure(7177135) ;clf; ha = subplot(1,5,[1 4]) ; hold on ; axis tight nV = numel(X) ; %set the asect ratio to make pretty daspect(ha,1./sz) xlabel(ha,'voxel x') ; ylabel(ha,'voxel y') ; zlabel(ha,'voxel z') ; pli = 1 ; %almost peaki, except when peaks are ignored buttonSettings = {'String','Toggle','Units','normalized','FontSize',14,'FontWeight','bold','ForegroundColor',[0 0 0],'Enable','Inactive','ForegroundColor',[.8 .8 .8]} ; axPos = ha.Position ; for peaki = 1:nP ; % figure(peaki) l = LOCS(peaki) theseVoxes = X&gt; l-r &amp; X&lt; l+r ; % nz(peaki) = %only plot those with less than 10% fillage % if nnz(theseVoxes) / nV &lt; 0.1 [x,y,z] = ind2sub(size(X),find(theseVoxes)) ; h(pli) = plot3(x,y,z,'.','Color',cc(peaki,:),'MarkerSize',4) ; c = uicontrol(gcf,'backGroundColor',cc(peaki,:),'ButtonDownFcn',{@toggle_visible,h(pli)},buttonSettings{:}) ; c.Position = [axPos(1)+axPos(3), pli / (nP+1),0.18 1/(nP+1) ] ; %make those will mroe than 3% fillage invisible by default if nnz(theseVoxes) / nV &gt; 0.03 toggle_visible(c,[],h(pli)) end pli = pli + 1 ; % end end %prevent resizing on removing drawnow set(ha,'XLimMode','manual','YLimMode','manual','ZLimMode','manual') rotate3d(ha) end function toggle_visible(hObject,eventdata,h) if numel(h.Visible)==3 h.Visible = 'on'; set(hObject,'BackgroundColor',get(hObject,'BackgroundColor')*4) set(hObject,'ForegroundColor',get(hObject,'ForegroundColor')+.8) else h.Visible = 'off' ; set(hObject,'BackgroundColor',get(hObject,'BackgroundColor')/4) set(hObject,'ForegroundColor',get(hObject,'ForegroundColor')-.8) end end 
! how i debug: often after i've writter a line, i select it and press f9, which executes all selected code. the key combination shift+home, f9 can run the current line right after you typed it. this is extremely quick, and ofter sufficient to verify that that line works. This also works if you want to check your conditions in if statement, or for instance verify that you send the right stuff to a function. 
Essentially you should be unit testing your code. Unit testing means you test each unit of code (each calculation) independently. While I like to split my units into functions/sub-functions and call them each independently with test data, if you write bigger scripts/functions with a lot of units per file, you'll have to do it the way the professor mentions. My general workflow is to write a "driver function" (there's probably a better term for this) which is just a function which lays out the overall logic of my program, with calls to a bunch of functions with descriptive names that I haven't written yet. Then, I go, write each of those functions and test each one of them with test data. Once all my functions work, I call my driver which calls all of my functions in some order and make sure they all play nice together. 
+It looks like I wasn't ending up reading the errors I was getting somehow (I think they just appeared off-screen) so I'm working through it. A lot of them are because I'm using scalars where I should be using, specifically, certain elements of a matrix, so I'll get back to you after working out those. Thanks for the heads up &lt;3
Even if you don't have control over their creation, you could just create a new array with these variables contained in it.
Ahhh right. He said some lectures ago, that one can evaluate each marked section, but somehow I missed the hotkeys.
So you basically assemble your core "driver function" and expand it from there on? Sound approach I might say. Thanks!
You haven't updated your code you shared with us, so I don't know
Did you actually try it in the console? Actually try it. 
Read your code and see where that's coming from. Then see why it's happening. 
Thanks for your response. Someone just clarified the process to me. I can select which frequencies to eliminate from the Fourier decomposition, and then use a frequency filter to eliminate them. Which is exactly what you are describing in part 4.
well, you can do this and pretend that arrayfun is not a loop, but i doubt it'll be faster: thatValue = 13 ; cell2mat(arrayfun(@(l) thatValue-1-l : 2 : thatValue+1+l,1:12,'uni',0)) Have you verified that this part of your code is worth optimising? you seem to be vecorising "because no for loops", which imho is fun and intresting, but not all for loops can be eliminated, nor do all for loops cost significant time. This one seems non-trivial to eliminate to me, and neither very costly .
is a notch filter the same as a low or high pass filter?
A filter I am familiar with is Butterworth, which is also a built in Matlab function. This has a band-stop option!
Had to post from my phone, but this might help: %% Setup close all N = 1e4 ; t = linspace( 0 , 1 , N ) ; f1 = 100 ; fspec = linspace( -0.5 , 0.5 , N ) * N ; y1 = sin( 2*pi*f1*t ) ; y_h = atan( y1 * 5 ) / ( pi/2 ) ; % Filter % This code taken directly from `designfilt` documentation for a % band-stop. Filtering out the seventh harmonic, 700 Hz: bsFilt = designfilt('bandstopfir', ... 'FilterOrder',350, ... 'CutoffFrequency1',680, ... 'CutoffFrequency2',720, ... 'SampleRate',N); fvtool(bsFilt) dataIn = y_h ; y_f = filtfilt( bsFilt,dataIn ) ; % return figure subplot( 121 ) plot( t , y1 , t , y_h , t , y_f ) axis tight xlim( [ 0 , 0.02 ] ) grid on legend( { 'Original Signal' , 'Signal with Harmonics' , 'Filtered Signal' } ) subplot( 122 ) semilogy( fspec , fftshift( abs( fft( y1 ) ) ) , ... fspec , fftshift( abs( fft( y_h ) ) ) , ... fspec , fftshift( abs( fft( y_f ) ) ) ) ; axis tight, grid on xlim( [ 0 , f1 * 20 ] ) legend( { 'Original Signal' , 'Signal with Harmonics' , 'Signal with Harmonic Cut' } )
**SOLVED:** As /u/jkool702 pointed out, [isosurface(X,Y,Z,V)](https://es.mathworks.com/help/matlab/ref/isosurface.html) did the trick. Once you've got a 3D array, say V, using: X=[1:1:length(V(:,1,1))]; % The X dimension of the V array Y=X; % The Y dimension of the V array (I assume it symetrical) Z=[1:1:length(1,1,:)]; % The number of slices isosurface(X,Y,Z,V) will plot the surfaces of the "most relevant value" (I don't know precisely how the algorithm chooses) of the X * Y, 2D images. **Watchout**: in my case I had to figure the precise pixel value I was interested in, and made *isosurface* look for them with: isovalue= the_value_of_the_pixels_your_interested_in; isosurface(X,Y,Z,V,isovalue) and that did the trick. Also, you may want to **store the faces-vertices structure that *isosurface* creates to STL format** (and maybe open it with any CAD program). I needed this desperately, and MATLAB does not have this function built-in (as of R2016a). I used an *stlwrite* function developed by [Sven](https://es.mathworks.com/matlabcentral/fileexchange/20922-stlwrite-filename--varargin-). It is flexible on the input, and well-documented. Gotta bless the man (I made a matlab account just to rate that 5 stars lol). I just named the previous structure, chose a filename, and voilá. **Watchout**: the filename string **must include the '.stl' extension**: fv=isosurface(X,Y,Z,V,isovalue); filename=('my_stl_test.stl'); stlwrite(filename,fv) You can check a snapshot of my result [here](http://imgur.com/a/5VtNM). Hope this comment eventually helps someone with the same problem. Pray to Google. EDIT: typos. 
&gt;which i believe is related to the time arrays not matching up 10/10 for your assessment. you can use the unique function on all the times (start and end concatenated (together in one array)), and use that as the allTimes array.
Oh wow thanks, you're smart. One more question if you dont mind, how would you proceed in labeling the scans from 1 to 50 into the graph? 
Yeah, of course I tried reading that but can't figure out how to add the variable T(i) after the string. 
Already do this! I add lines at the end of my plot functions to auto save .fig, .png, and .svg just in case I need one of those file types. 
%i
Do you know how to run the debugger in MATLAB? It's really simple (you just click on the little - next to the line of code you want your script to stop in). You're going to have to do it. Because there are a lot of problems, and since I'm not sure what you're trying to do it's hard for me to fix it. You're getting imaginary numbers because your theta is imaginary. You're getting imaginary theta because you're taking acos of something larger than 1. This is because your speed of `(inter + 1)` is based on the velocities of `iter` and you're speeding up, so when you calculate theta, you use speed and velocity of `iter` but your velocities are larger than your speed. You could fix that by using speed of `iter + 1` in your theta calculation, but I don't know if that's what you want to do? And making that change will change a lot of other things. 
Possibly either [NaN or inf data points.](https://www.mathworks.com/matlabcentral/answers/278175-polyfit-produces-nan-values)
I was so excited for the live scripts but I couldn't use it for more than 10 minutes. Why did they have to fuck with the scrolling? It's like these fancy modern websites with all their javescripts or html 5's of whatever it is. I can't stand them.
I've been through the debugger as you suggested and fixed some more problems. Imaginary numbers no longer appear - that was happening because I was using `acosd()` where I should have been using `atand()`, which is a very silly mistake even for me. [Here](https://pastebin.com/U7dx6Z5F) is the new script. It now still produces very weird numbers and I think the issue is with the acceleration calculations, though I'm not sure. The debugger isn't helpful for this issue and I can't find the problem in the code itself, though it must be there somewhere so I think this is a skill that comes with practice &lt;3 The aim of the script is to calculate the rough flight path of a rocket-powered glider, though it will only be *very* rough because it assumed the aircraft is always at 4^o angle of attack (hence constant coefficients of lift and drag, from the NACA-0009 aerofoil) and that the only drag acting on it is lift-induced, though it does include lift and drag components. It's sort of halfway between a good simulation and a very bad one, or maybe a little closer to the latter, but all I need is an estimate as it's not an important part of the assignment I'm writing it for. The numbers are weird because they go infinite, and the aircraft starts accelerating backwards at a point. Everything goes *truly* wrong after the 10098^th iteration when using `time_step = 0.001. Sorry about being unclear, I am new to MATLAB so I have not done enough work on it to know what information you need &lt;3
Is tf part of the symbolic toolkit? I thought it was signal processing or controls related. I doubt it works on symbols. I also doubt it works on strings like 'z'. 
You can substitute a double for a symbol, but that doesn't mean tf will know what to do with the symbol prior to substitution. I don't understand mixing symbols with numerical functions anyway. If you want a numerical result, why use symbols at all? 
Look for the field FaceAlpha and edgeAlpha to make stuff transparent. your post is poorly formated, and i don't feel like trying to read it. using notepad++, you can copy-paste from matlab, to notepat++, ctrl+a, tab and then paste into reddit to make evertying be interpratable as code 
One option is to change your objective function to round the variables you need to be integers. 
What exactly do you need help with? Sounds like you just need to read more into [fzero](https://www.mathworks.com/help/matlab/ref/fzero.html) and the options you can provide the function, or use [vpasolve](https://www.mathworks.com/help/symbolic/vpasolve.html).
I'm pretty sure live scripts and sessions with breakpoints use slower interpreted code whereas straight m files use JIT compiled code. The compiled code runs much faster than the interpreted one.
http://www.radio-electronics.com/info/rf-technology-design/am-amplitude-modulation/modulation-index-depth.php
It certainly does. He's using the notation in the picture you posted. 
Not sure what the downvotes are for, I gave you a simple solution that works correctly. 
I like to use histcn for this sort of thing(find it on the Mathworks website). Depending on what you are trying to do it may work. I usually use it with nanmean as my accumulation function. It sounds like you just want a single value input into each bin, and I suppose you could still use nanmean if you set up your bins right. [ke_flux_mesh,~, ~, ~] = histcn([lat lon], lat_edge, lon_edge, 'AccumData', ke_flux, 'Fun', @nanmean); [binned_data,~, ~, ~] = histcn([x_loc y_loc], x_bins_vect, y_bins_vect, 'AccumData', data_at_x_y, 'Fun', @nanmean); 
Here's how I would do it with your data: x_edge = linspace(min(x),max(x),nx); y_edge = linspace(min(y),max(y),ny); z_edge = linspace(min(z),max(z),nz); [a_bin_3d,~, ~, ~] = histcn([x(:) y(:) z(:)], x_edge, y_edge, z_edge,'AccumData', a(:), 'Fun', @mean); a_bin_3d will be a 3d matrix with mean values of a at each of the grid points defined by x,y,z. Nans will be nans in the final binned data.
thing is how do I know to only evaluate the values going up by 0.1? The range is the main part thats stumping me
Are you pressing play at the top? You've written a function rksolverrr that requires arguments named x and y. This is entirely separate from function handles.
This is called passing arguments to functions. You can't run `rksolverrr`. Try `rksolverrr(2, 3)` or `rksolverrr(4.5, 1e999)`.
okay thank you i appreciate it
If you're able to take a look at the code, try to find the code that handles this URL you're requesting, and find anything it invokes that will set the response code to 400. If the dev helps you figure out why it's returning a 400, take the opportunity to update the code to write the status message explaining why it's returning a 400. This will help you or anybody else that runs into the same situation in the future. Any idea what framework they are using in Python? Flask, Django, etc?
I definitely saw imports from Flask. I remember requests being imported from Flask for sure. I've never used Flask before, so I wasn't super familiar with it and I wasn't trying to delve into the inner workings of the Python server and the modules it uses. I'll definitely advise adding in better error messages, if possible. Because ya, it just says 400 bad request and doesn't point to anything. When I was looking at it, I didn't see anywhere that specifically threw a 400 error so my guess was it came from Flask's inner workings. I thought it was only format of the message, so again, I didn't want to delve into the modules and all. 
For these things i usually use the [geom3d](https://nl.mathworks.com/matlabcentral/fileexchange/24484-geom3d) toolbox, which has stuff like: intersectLinePolygon3d - Intersection point of a 3D line and a 3D polygon
There are Simulink-PS and PS-Simulink blocks to convert between the physical systems domains (Simscape) and Simulink.
I've tried them but they dont seem to work with the pv-array I'm using
There are also interface blocks between the Specialized Tech blocks and Simscape. Take a look if something here works for you: http://www.mathworks.com/help/physmod/sps/interface-to-simscape.html
Use `accumarray` to gather the samples, then use `surf` to visualize the data, and add `camlight right, lighting phong, shading interp` to smooth it over. Post some data and I'll play with it this weekend.
Thank you for that, I'll give that a try. One question I have is at the moment the data is essentially in a 16x2000 double, where each column is a different sample (in this case depth) and each row is time point across all columns. So in essence at point (1,1) is an intensity value. Another friend told me that for proper heatmapping, it should be in a XxYxZ format. Is that correct? I appreciate the offer for the data playing, but it's for my PhD thesis so I'm a tad leery of putting it out there until it's all completed and submitted I'm afraid! 
I removed the first 10 lines from your sample file "SP01.txt" and tried. data = textread('SP01.txt', '%f'); which gave the following error: Error using dataread Trouble reading floating point number from file (row 240225, field 1) ==&gt; #IND00 -1.#IND00 -1.#IND00 So, it looks like "NaN" are not the only strings in the file. This may be giving you problems. Good luck! 
So reddit deleted your account for spamming and your immediate reaction was to make a new account to continue spamming? You are the worst kind of stupid 
*Disclaimer:* I'm not proud of this code, but it get's the job done even if it uses a for loop. It took about 50s seconds to run on my 2009 era PC. I'm absolutely certain there is a better way. Okay, assuming that the number of columns is a constant 29 and that the top 10 lines is cut from the file. Ncols = 29; s = textread('SPO1.txt', '%s'); v = zeros(length(s), 1); for n = 1:length(s) v(n) = str2double(s{n}); end x = reshape(v, Ncols, length(s)/Ncols).'; Edit: Bug in last reshape line.
not sure if this is any good advice, but you could try converting your tab-delimited text files to xlsx and then use xlsread(filename). though this might actually end up being more work.
Try looping through for I=0:t:h
Let me know if it works. If Ncols changes from file to file, you could automatically search for the first newline and count the words. 
I tried that and I still got the same result.
Mechanical engineer here! Transfer functions for system dynamics work almost analogously to filters for electronics. You can roughly model your quad copter as a system of mass-damper-spring (RLC analogously) components, and then find the transfer function of the system, then write the PLC controller to tune the system the way you want it to behave. When you perform turns, rolls, or flips, you are basically adding a forced input at the corresponding motor locations and the system TF changes accordingly. Additionally, each motor will be a source of vibration that you should analyze for how it may effect your copter. As for the actual Matlab part, haven't a clue :(