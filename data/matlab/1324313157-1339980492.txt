However, if you just want to have it work without thinking about it a whole lot, the function you want is 'princomp'
I like Common Lisp and Java's method of random numbers provided by an object with its own state, Lisp: (let ((rng0 (make-random-state t)) (rng1 (make-random-state t))) (list (random 1.0 rng0) (random 1.0 rng1))) Java: Random rng0 = new Random(); Random rng1 = new Random(); return new double[] {rng0.nextDouble(), rng1.nextDouble()}; Much easier to do Monte Carlo type stuff this way. 
If I wasn't a matlab user already, I think this video would convince me to never be one.
lol didn't know loops aren't cool anymore.
This hurt my brain.
They're generally frowned upon in MATLAB when used in lieu of the matrix operations that are built in - matrix operations are much, much faster. You can't always get around using loops as control structures for general use, though.
Vectorize!
..........
Wadsworth constant applies. Towards the end the rap is actually rather informative.
Depending on the set of operations you need to do, it may be better to read in all of your data streams into one matrix, then do all of your operations on that matrix once through in order to avoid the loop. However, I think in general the for-loop implementation you mentioned is more flexible and probably clearer too.
The for loop works will work. Depending on the context, sometime I will write a function to do the set of operations and call it twice.
http://www.mathworks.com/matlabcentral/fileexchange/22829-file-list Or if ### are predictable you can use sprintf to generate file names. for i=1:20 fileA=sprintf('r%i.mat',i); fileB=sprintf('l%i.mat',i); dostuff(fileA); dostuff(fileB); end
There not quite predictable, I'm performing an exist() function to determine if I took a measurement at time t=x, and if I did, work with it. Then I have data from the right and left side.
My plan is for the for-loop to call a subfunction.
Clearer is good. I'm not working with the brightest people.
Then just use filelist to get a list of all the files in a directory. Loop through all of the r### ones parse out the time data and get the left data. If you're consistent with your naming you could just do something like this: [hour,minute,second]=parseDate(filename)
classic :)
You can use A.' which will just transpose the matrix, and not take the conjugate. 
Not sure specifically what you want to do, so if I'm off base please ignore. I've found the MATLAB figure GUI to be useful for figuring out colormaps/scales, limits, and so on. What you do is: 1. make your figure with sub-optimal settings. 2. Open up the figure editor GUI. 3. Play around with the GUI until you see something close to what you're after. 4. Right-Clock on the figure and "Show M-Code" so see how to mess with those settings and look up more details in the helps or online references. 5. Write your own script or function to automate it.
This worked perfectly. Many thanks!
Unless I've misunderstood something, it seems you've got all the information you need. You just need to implement the position and vector data correctly into quiver3. Assuming that your data is arranged in columns, then your position data can be split into individual arrays for the x, y, and z components. pos = [ -92.183701 3.914139 -80.912170 -93.164307 1.995036 -81.748337 -92.962357 5.976532 -81.846138 -91.162521 5.959173 -80.117722 -91.855438 7.983096 -81.289680 -94.971420 -12.048695 -85.541100]; x = pos(:,1); %extract the first column of data y = pos(:,2); %extract the second column of data z = pos(:,3); %extract the third column of data Similarly for your vector components, we create arrays for u, v, and w. vec = [ -0.717773 0.054340 0.691962 -0.695545 0.005990 0.717559 -0.685745 0.121837 0.715304 -0.731589 0.124074 0.666697 -0.700242 0.191857 0.685768 -0.557635 -0.283713 0.780096]; u = vec(:,1); v = vec(:,2); w = vec(:,3); Now, you can plot your vectors with quiver3. quiver3(x,y,z,u,v,w); 
The reporting tool defaults to Helvetica too
Maybe a for loop that looks for the largest distance between two points? It's probably a way too crude solution for the problem, but instinctively that's what I'd do.
first, realize that there are several ways to define "maximum curvature" and you'll have to know how you're defining it before you can solve the problem. Here's one example. Say the face is the locus of a bunch of points forming the surface, each point having (x,y,z) coordinates. Define the x- direction with a line going horizontally across a human face, i.e. from ear to ear, from eye to eye, whatever. The y-direction is defined by a line going from chin to forehead, orthogonal to the x-direction. The z-directing is of course the final orthogonal direction, from the back of your skull to the tip of your nose, or whatever. You decide to slice the face into many thin sections vertically---with planes perpendicular to the x-direction. Then evaluate the derivative of the the surface representing your face with respect to y. You'll have a set of values of dz/dy for each slice. Find the maximum value derivative over the entire set of these curves, and that's your maximum curvature. But now, think of slicing the face *horizontally* instead, with planes perpendicular to the *y* direction. Now evaluate the derivative of the face along each of *these* slices. The point of "maximum curvature" defined this way isn't the same. You could think of each point on the face as a *vector* and then solve for the *divergence* of that vector field. Note-- if you don't have a strong calculus or vector calculus background, more formal definitions of divergence are intimidating. See e.g. [the Wikipedia page](http://en.wikipedia.org/wiki/Divergence). A bit better is e.g. [this page](http://mathinsight.org/curl_idea) but you'll have to google around for a more intuitive definition until you understand. Divergence might be the most "proper" way to do it as the direction of your axes shouldn't matter, and divergence is a "directionally invariant" property meaning it's the same regardless of coordinate system. The good news is, Matlab has a simple [divergence](http://www.mathworks.com/help/techdoc/ref/divergence.html) function to use. There might be other ways of defining max. curvature, but i'm not a heavy math person... good luck!
Oh wow I am such a noob. Just realised that I hadn't actually put any input in it. I had just pressed F5. Thanks for your comment - made me realise what I'd forgotten to do lol
There is an FAQ at: [http://matlab.wikia.com/wiki/FAQ](http://matlab.wikia.com/wiki/FAQ) It suggests several clones. As for tips/help - practice practice practice. You'll learn the syntax and commands best by applying them in earnest. Matlab is ace for image analysis + recognition, so if you are looking for projects try something like number plate identification. Break the task into smaller tasks to make it easier to perform.
Understandable, but I am pretty sure you can get a very cheap/free student version. 
I know money in college can be tight (I'm currently an engineering grad student), but I can't strongly enough recommend purchasing the student version of matlab. It is cheap (less than the cost of a textbook), has a useful GUI with good debugging features, and will have all commands directly compatible with your class. Clones like Octave have their place (imo: not sure where exactly, but they have their place), but I find their slightly incompatible features (how to save images, ODE solvers, etc) incredibly annoying. If you try to use some of the more advanced toolkits (and by advanced I mean Simulink--which isn't that advanced), you'll be in a lot of trouble with one of the clones. If your grader just tries to automatically test your code, it will almost certainly fail for some little reason or another. I'm personally not a huge fan of the MATLAB language and implementation, but the algorithms provided are the some of the best available at a reasonable price to students--open source is rather incredibly far behind when it comes to the "plug and play" abilities of ODE45 (ODE integration) or fmincon (nonlinear constrained optimization). While I'm most familiar with the ODE and nonlinear optimization routines, I believe a similar situation exists for your other major algorithms. I would go so far as to say that it is likely you will save time and energy figuring out how to ssh into the servers (or whatever remote connect they provide) to access the software if you are strapped for cash, instead of using a clone. Even staying on campus is probably a better choice--the clones are great (well, okay) for self-contained projects, but that's all. 
purchasing the student version? won't it be free for the students of the school? I get mine for free since it's a required program in my school.
At my school we had the Student version available in the computer labs, but I found it invaluable to have it on my personal machine as well. I was able to learn a little more at my own pace, and it was a lifesaver when trying to finish up projects over Thanksgiving when things were closed up. Something to consider.
Fair enough, I should have guessed as much. I tried to use my school's network license remotely when I was an undergrad and it just refused to work, so I just did most of my coding at work :p
This is what my professor had us do
This is what I meant, we can download it onto our machines and use our school email to activate it.
indeed, sir
I don't know much about the image processing toolbox. What I would do is use the [imread function](http://www.mathworks.com/help/techdoc/ref/imread.html). This takes a picture and then converts it into a matrix of values pertaining to the colors in the picture. So you could use imread and then find what value pertains to red and count how many times that value (or range of values) occurs in the matrix.
 function [r]=redpercentage(image) RedPixels=image(:,:,1) ./sqrt(sum(image.^2,3)) &gt; .33333 ; r=length(find(RedPixels))/length(image(:)); end
Thanks. Anything oriented towards electrical engineering?
[Project Euler](http://projecteuler.net/problems) does this. I'm working on Problem 15 right now
Thanks! I will try it today. There is a way to know how much it is dispersed? 
I really have no idea what you are talking about with 'dispertion' on your specific application, but I'm sure there is a way to do that if your algorithm makes sense to do it. I'm not even that confident that my code will work however...the 'red criteria' is basically looking at each pixel, treating it as a 3D direction vector, and then normalizing it...if the red component of the normalized color 'direction' is more than 1/3, its red. 
Thanks a lot! Even if your code doesn't work at least I know it is possible to do it. When I say dispersion:I try to evaluate how the points of red are dispersed, for example, a big spot (low dispersion) has 30% of the surface, or many tiny spots (high dispersion) have 30% of the surface too. 
* First, you need to import the image. The IMREAD command does this. It will return a m x n x 3 (m rows, n columns, 3 color channels) image. Likely of type uint8 (if from JPEG image). &gt;&gt; I = imread('your_filename.ext'); * Then you need to ask MATLAB "Which of these pixels is red?" In image terms, this is "which of these pixels has a high Red value and low Green and Blue values?" &gt;&gt; BW = I(:,:,1)&gt;180 &amp; I(:,:,2)&lt;50 &amp; I(:,:,3) &lt; 50; % values 180,50,50 are guesses. play with them. * BW is a binary image (black/white) that shows you the red pixels. &gt;&gt; imagesc(BW), colormap(gray(2)) % alternately, use imshow(BW) from image processing toolbox * Do you want to determine the percentage of the image that is red? &gt;&gt; PctRed = nnz(BW)/numel(I(:,:,1)); * Do you want to find the right-most red pixel? &gt;&gt; [rr,cc] = find(BW); &gt;&gt; [maxcol, maxcolidx] = max(rr); &gt;&gt; fprintf('The furthest right pixel is in column %d', maxcol) *NOTE: Everything I used is core MATLAB. The exception is the imshow command, but that's in a comment and not necessary. So for this you don't REALLY need the image processing toolbox.* (edit for formatting)
This works great! I had to make some adjustments with the values and everything worked just right. Thanks man! PD: I don't know why someone downvoted you.
Along with what others have posted, I think that a lot of the hate for MATLAB stems from poor teaching. Too often (I've seen this myself and heard other stories as well), the professor just says "Do this in MATLAB. Here's a one-page tutorial. It's due Thursday." and never gives any support for those who may be brand-new to programming. Thus the students struggle to adapt the theory from class to implementation in MATLAB and misdirect their hate toward it. Also, it doesn't have the flashy interface or instant gratification of other tools like Mathematica or MathCAD. As for its use in the professional world, it's used EVERYWHERE: [Aerospace/Defense](http://www.mathworks.com/aerospace-defense/userstories.html), [Automotive](http://www.mathworks.com/automotive/userstories.html), [Finance](http://www.mathworks.com/financial-services/userstories.html), [etc](http://www.mathworks.com/solutions/). The [Chevy Volt](http://www.mathworks.com/support/books/book59229.html?category=17&amp;language=1&amp;view=category) was designed using MATLAB and Simulink.
My only disdain for MATLAB stems from its encouragement of sloppy programming. Other than that, it's a very useful and powerful tool for engineers, and it's becoming an industry standard.
While this doesn't exactly answer your question, my biggest issue with MATLAB is that I find I/O with it to be absolutely *infuriating*. Also, coming from other programming languages, I find the way MATLAB handles "arrays" (matrices) to be a little confusing if I haven't used it for a while; I have to wrap my brain around it again. This isn't a complaint about the language, though, as MATLAB's matrices are one of the things that makes it a powerful tool. (Master's student in CompSci, here.)
This makes a lot of sense. If I had to take an intro to engineering course for my CS degree I'd probably hate it too. Incidentally, part of the reason I'm taking the class is to hopefully TA it in the future myself.
 clear variables; syms time; syms position; position = time^3 - 3*time^2 - 15*time + 40; velocity = diff(position, time); acceleration = diff(velocity, time); jerk = diff(acceleration, time); ezplot(time, position, time, velocity, time, acceleration) // here there be crashes!
You use matlab line by line? What?
I use Matlab because it's more widely used than MathCAD and I should learn it. Nobody teaches an engineering tech student how to use this stuff.
God no! **Do not use solve**. This is what matlab was DESIGNED to do. **MAT**RIX **LAB**ORATORY. A=rand(3,3); X=rand(3,1); B=A*X; Then you have: X1=inv(A)*B X2=A\B X3=A^-1*B temp=rref([A B]); X4=temp(:,end) Numerous ways to solve it. All of them very fast. (and 3x3 is childs play) -- r=input('What is your name','s'); If you're looking how to do something there is the 'lookfor' command which is a really generic regex to find the word you type in. Then 'help &lt;command&gt;' will pull it up in the command window. 'doc &lt;command&gt;' will open the pretty HTML version. I only wish other languages had the level and ease of documentation for generic stuff. (Then again that's easy when you have one company controlling it). Transposing is just a **'**. A=[1 2 3 4]; A_transpose=A'; Do you want the answers symbolically? There is the [matlab symbolic toolbox](http://www.mathworks.com/products/symbolic/) Do you want the numerical answers? There's diff and ode*
Other than 1 indexing, what does it do 'wrong'?
I was questioning what the hell "I just use Matlab line-by-line" means. Do you mean you never create M-files? Do you just work in the Command Workspace?
There are several such things that are annoying. XML in matlab is particularly irritating. That said, it is my tool of choice. 
MATLAB is a phenomenal tool for data analysis and visualization. It's also a fantastic tool for prototyping algorithms, particularly in the comm/DSP world and (with simulink) for control folks. It gets a lot of hate from CS types, because it is a very high level language compared to something like C++. It doesn't strongly type things, objects are implemented in kind of a strange way, etc. These are strengths for the intended use, i.e. prototyping and playing with data, but they make it a somewhat mediocre choice for doing production runs or producing code for others to use. 
It's not just poor teaching. There are people who can just program. Numerous MEs can't wrap their head around any sort of structured language. There are some things that certain groups of people just don't get. I do not ever understand foreign languages or anatomy. I could study 10 hours a day for my life and never be able to fluently speak another language. My brain gets the bits but doesn't assemble them. On the other side. There are people who will never wrap their head around the simple stuff like a for, while, or if. I know people who would school anyone in Thermodynamics or Fluids but don't get a for loop. The same goes for CS majors that don't understand stuff at a bit level. They made it through the entry level classes but couldn't set a bitmask to save their life. Same goes for recursion. God I love it. It was Inception before there was Inception. "Wait. So the function you called. Calls itself with the new variables then calls itself again until the end then returns, returns, returns, returns and returns?". And when you have people that struggle to understand for loops you can't get into the deeper fun stuff. All of these are equivalent but when you use matrices stuff starts to run faster. And we're talking orders of magnitude faster. n=1; for i=[2 4 6 8 10 ... 100] j(n)=i.^2; n=n+1; end j=[2:2:100].^2; If you run those 100,000 times. (1e5). The first one takes 8.467378 seconds to run. The second one takes 0.019739 seconds. If you can turn something into a vector. Do it. And then you get into some really fun and crazy stuff because of vectors. If you reference an array with a 0 it's "ignored". Say you want the squares of all odd numbers and the cubes of all even. for i=1:1e6 if mod(i,2)==0 output(i)=i^2; else output(i)=i^3; end end Is the slow and traditional way to do it. A correct "matlab" way would be: tic;i=1:1e6; output=zeros(size(i)); odd=mod(i,2)==1; output(odd)=i(odd).^3; output(~mod(i,2))=i(~mod(i,2)).^2;toc; (Around 5 times faster). Then you can just keep building on that. Making a whole set of parameters. Say you want to zero all odd numbers. output(odd)=0. Say you want to just remove all odd numbers from the data. output(odd)=''; I could go on all day. Since I live and breathe Matlab. Then you get other small nuances. sin/cos are radians (catches a ton of people) and other stuff. tl;dr: Engineers not all programmers. Programmers not all Engineers. It's a small intersection and people hate what is hard.
It's not 'wrong,' just different. While this isn't matrices-based, I always forget about the ';' to not print something; I find that particularly annoying. If I want to display it to the screen, I'll write a statement that displays it. It's not a default behavior that I want. The matrices thing is mostly &gt;how&lt; matrices are indexed into. It's been long enough that I forget what I had issues with (I'll remember next time I try to use MATLAB, I guarantee it) but I remember finding getting one "column" in the matrix or one "row" in the matrix difficult. Grabbing specific bits of information I found rough, particularly when the datatypes (cough STRINGS cough) weren't behaving the way I expected from other languages. Also, this syntax: A = [16 3 2 13; 5 10 11 8; 9 6 7 12; 4 15 14 1] doesn't make much sense in my opinion.
So my main issue with MATLAB's syntax isn't that it's impossible to understand, it's just that it's so different from the way things are 'usually' done that it's difficult for me to remember when I'm switching back and forth between Java, Python and MATLAB (which I do relatively frequently.) This is my issue with using ':' as the 'entire thing' operator. It looks like a slice (see your own example with a(5:8) being "lazy"). It's not canonical as far as I can tell (please correct me if I'm wrong) and it seems like a very arbitrary way to overload that symbol, particularly when that symbol is used for something else that's very similar. Yes, strings work the same way, but as soon as you need an array of strings, it all goes downhill. You have to use cells, there's no way around it. And like you said, you either know it or you don't, and I don't use MATLAB frequently enough to know it.
http://www.youtube.com/watch?v=NPd13u4i6fM
Ok line-by-line. Let's say my physics teacher asks me to do that gravity formula a bunch of times. I'd do exactly what he did initially. Then repeat whatever values change after I'm done, and rerun the formula command each time to get a new result. It's laborious and stupid.
That is strange... I use matlab in my profession, and have the latest version. All the differentials are calculated using the 'ode' functions. 
I have TA'd several courses with MATLAB and have seen the same response. The students just despise it. I think there are several factors that contribute. * Lack of programming experience. Instructors need to appreciate that teaching MATLAB to students with little or no programming experience still need to do simple exercises. Jumping right into solving engineering problems without really going over logic, looping, functions is just going to be a nightmare. * MATLAB fundamentally requires a fairly competent level of computer use. Think about it, to use MATLAB you have to be aware of which directory you are in, how the PATH works, the idea of workspaces and scope, the difference between a script, a function and the command window. If you are already an expert UNIX programmer these things will be natural, but if your not already an advanced user these concepts will be difficult at first. * Not teaching debugging skills early on. I have literally seen hundreds of students reduced to tears after they have spent days and weeks trying to program by randomly perturbing the code, running it, error, repeat. They get frustrated with the lack of progress and they develop a mindset that matlab sucks, they hate this, and they can't do it. Teaching simple things such as how to read the error messages, using the debugger, setting breakpoints, using disp/fprintf to display intermediate results all help students work more effectively and solve problems. * Over zealous instructors. For a programming/scientist/engineer who cut their teeth using Fortran 77 or pure C, where writing even a simple scientific numerical application could entail weeks of debugging your own matrix libraries, and then to plot the results you had to draw them by hand, MATLAB is awesome: it is like programming crack. It is so fast and powerful that is completely addicting. They try so hard to show off things like vectorization right away because that is what excites them. The students, without the background or context, don't get it. The students, mostly don't know programming, are forced to try to learn matlab vectorized syntax in a few hours and then are expected to be solving engineering problems with it the next day. * Not understanding the problem. This is a classic problem of undergraduate students. It goes something like this: the student is given a programming assignment, without even reading the assignment they start programming. They start setting up data structures and functions and start trying to solve the problem. An error happens, or an incorrect result, and they start randomly adding perturbations to their code to try to fix it. They blame matlab. The problem is that they never took the time to understand the mathematics/physics/science they are trying to implement. The assignment takes them days to complete. If they spent 15-30 minutes just reading the assignment and thinking about it at the start, making sure they understood the task, and then start, they would have cut the time required to complete the task substantially. The instructor needs to teach good problem solving approaches for programming. * Over ambitious course goals. Chances are your department is trying to teach you both engineering/physics/math at the same time they are trying to teach you MATLAB. This is a course where you are learning something, and you will learn MATLAB as a by-product. Very rarely have I seen a course offered where the goal simply was to "learn MATLAB". This means that the students are right away thrown off the deep end to learn new challenging material and solve challenging problems while learning a new tool. The instructor ramps up the difficulty of the problems at a breakneck pace. Typically it goes something like hello world and for loops to solving non-linear PDEs in about two weeks. It is no wonder students hate it.
Why are you subtracting time? If you want to take a diff the proper function for velocity for example would be: velocity=position(2:end)-position(1:end-1);
Learn to make mfiles and how to do for-loops and such. Also Cell Mode kicks ass: http://www.mathworks.com/support/2011a/matlab/7.12/demos/PublishingfromtheEditor_viewlet_swf.html
Integrals: check out [quad](http://www.mathworks.com/help/releases/R2011b/techdoc/ref/quad.html). However, if you're looking for symbolic operations, you'll need to go to the [symbolic toolbox](http://www.mathworks.com/products/symbolic/). For input, try [input](http://www.mathworks.com/help/techdoc/ref/input.html) or [inputdlg](http://www.mathworks.com/help/techdoc/ref/inputdlg.html).
those are great resources, thanks for the help!
Few guesses: * Possibly less memory impact when converting real array to complex arrays (and vice versa). When converting MN real number matrix you do not need to reserve addition 2MN (so 3MN total reserved memory) array to hold the interleaved complex array and then loop trough it and interleave the real part. This might seem small optimization, but when dealing with large arrays this way the data is easier to fit into memory. * Possibly simpler internal functions which deal with both real and complex data as there is no interleaving and same subfunction could be called for real and imaginary part.
I use this method all the time, but note that in MATLAB the color vector takes values from 0 to 1, not 0 to 255. So your vectors could be [.2 .4 .6] or something. The way I usually use it is to have blue and red be the ends of the spectrum, so if the above example, if v is a vector's length and V is the maximum vector length, that rectangle's color could be [v/V 0 (1-v/V)].
Thank you so much! Yes, numerical answers are what I'm after!
You're right, I tried it again and it magically worked (just to make me look bad, I'm sure!) This is like C++ all over again! How did you become proficient with MathCad? Just years of use? What I'm looking for is a code collection that basically has examples of how to do most common things. Thank you.
Never used MathCad.
I'm sorry, I've been doing that all week, I meant MatLab...
I had to log in just to vote this up! Thanks a whole lot for that peice of code, it really helped me understand MATLAB better
yep. You can create variables, arrays, strings, whatever you need, in the handles structure. For example, handles.myvar = 9000; Just be aware that if you're modifying them within a callback, you need to call guidata(hObject,handles) before the function ends to save those changes to the global handles structure. Also, all callbacks get the handles structure as it was when the callback was initiated, so if you need an updated handles structure in the function (say, for callbacks that wait for information from other callbacks), you can call handles=guidata(hObject) to get whatever was last saved as guidata.
http://www.mathworks.com/help/techdoc/creating_guis/f5-998352.html
TIL you can use a vector of logicals to tell MATLAB whether a certain operation is to be performed on the respective entry of a vector or not. 
Thanks for sharing! I've been dealing with a similar problem myself, and unfortunately had to reduce complexity (i.e. # of assets/parameters) to achieve results in a reasonable time frame
..heh. And I've been creating hidden text boxes all over the place to share variables between callbacks. 
Print onto some cardboard?
Yeah, this is the exact command and, in fact, it's what I meant when I said run matlab in "command-line mode," I was just hoping to avoid opening/manipulating the generated figures through window forwarding. Perhaps I'll write some function/script that transfers the generated figures to my local machine and opens them locally, do you think there would be an interest in such a utility outside of my personal need? Also, I've never looked at using screen to facilitate editing scripts, will check it out! Feel free to send me useful links on screen if you have any.
I assume that it would have to be slower, if only because of all the work it does 'behind the scenes' for the programmer. If I get time this week, I want to write a script that performs the same functions as a Java program I wrote last week for class and compare run times.
The eigs() function in Matlab performs a Cholesky decomposition, apparently, unless you are passing it the Cholesky decomposition of the matrix of interest. This step, before the implicitly restarted Arnoldi method, is by far the most computationally intensive of the function. I need to use the Arnoldi method, if possible, without any sort of matrix decomposition. My matrix is Hermitian. I need the three smallest positive eigenvalues of this Hermitian matrix. I want to know if sptarn also involves matrix decomposition, and what algorithms it uses, basically, as well, because I can't get eigs to work without performing a Cholesky decomposition on my Hermitian matrix. Thank you.
This can be done using a for loop if you can display the results iteratively. for i = 1:length(MyData) r = num2str(MyData(1,i)); disp(sprintf('%.0f: %s',i,r)) end; 
Gotta click that little down arrow thingy to expand the list of additional programs, this will also allow you to browse. Edit: just to be clear. Right-click file, open with, choose default program, then click the browse button, and browse to the matlab.exe file (C:\Program Files\MATLAB\R2011b\bin), select that. 
Holy shit that works like a champ. Tooling around a bit I was able to something like this: for x=1:20 disp([num2str(x) ':' num2str(MyData(1,x))]); end But I like how what you've given me reads in the length. Much better than hard coding that number in there. Any idea how you could get it to possibly not return a line on each iteration? This actually gets outputted to a file and when the output is jammed into my other app it is expecting all the data to be on the same line.
I've had to do something similar and I used a while loop: R = 0; output = []; while R &lt; numel(MyData) a = num2str(MyData(1, R)); R = R + 1; output = [output a]; end I'm not sure if you can store the strings in a matrix, but if not then just store each value numerical and num2str at the end, or store the strings in a cell array the same was as above. *Ninja edit: I always get code wrong at first though so that probably won't work first time. Sorry!
Have you called Figure; before the plot?
I do a couple things depending on my needs. I dump png files to ~/public_html such that I can view them over the web, this of course only works if you have a web server. The other option I use is sshfs to mount my remote work directory on my local machine.
can you give more information on the math that you're performing, and maybe some example matrices that give you the bad output? Without knowing more, I can only agree that 3/5 should not equal zero.
FYI, you can reduce your above code down to these two lines to achieve the same x and y but cleaner. x1 = [-4:.2:4]; y1 = [3:-.2:-3]'; [x,y] = meshgrid(x1,y1); 
This is a tough one if you don't know handle graphics. What you need to do is open the two figures, get the handles of their respective axes objects, and then move them over to a common third figure. The solution here assumes that each figure, a.fig and b.fig, have only one axes each. %% combine two figures %% load the figures, capturing their handles ha = open('a.fig'); hb = open('b.fig'); %% get the handles of the figures' axes ha_axes = get(ha, 'Children'); hb_axes = get(hb, 'Children'); %% move the axes to a third, common figure hc = figure; set(ha_axes, 'Parent', hc) set(hb_axes, 'Parent', hc) %% resize/reposition the axes in the common figure set(ha_axes, 'Position', [0.1300 0.1100 0.3347 0.8150]) set(hb_axes, 'Position', [0.5703 0.1100 0.3347 0.8150]) %% close old, empty, lonely figures close(ha) close(hb)
Well not necessarily, but the "r#" theme throughout is really confusing and doesn't seem direct
An easier, but less expandable, method than agentq512's is to just use subplot(). subplot(x,y,z); % x = # of rows, y = # of columns, z = current figure (reads like a book) For example, to plot two figures side by side subplot(1,2,1) % one row, two columns, time to fill first space plot(a.fig) % or whatever you normally do to plot the left fig subplot(1,2,2) plot(b.fig) voila!
This is awesome. Anyone wanting to improve their Matlab skills needs to do this. I just wish they'd let you test out of the beginner stuff. 
Check out Cody: http://www.mathworks.com/matlabcentral/cody
It's like a MATLAB focused project Euler, cool.
I'm struggling with the help file examples of this. If I want to pull out the time step of 2 out of "TIME STEP 2." for example str = 'TIME STEP 2.' TimeStep = regexpi (str, ??? ,'match') I am really new to using string commands in MATLAB so I apologize in advance for my ignorance!
Since there is no space between the numbers that you want as a matrix, you are better off converting the number to the matrix you want. For example if you got the number 01101 from DLMREAD or CSVREAD,and you know that you have 5 columns, a quick trick is: x = 1101; xs = num2str(x,'%05.0f'); mat = xs - '0' You can just combine there row matrices to the full matrix that you want.
The first thing is to find the number of columns. If you have this info, skip this part fid=fopen('test.txt','r'); % the file containing the matrix I=fgetl(fid); % read one line from the file nc=length(I); fclose(fid); % close the file Now let's read the file again: fid=fopen('test.txt','r'); % fscanf reads the file and put the numbers in columns, that's why the transpose data=fscanf(fid,[repmat('%1d',1,nc)],[nc inf])' fclose(fid); 
looks like you're SOL
Thanks man, I thought it sounded easy... its just I dont know how to do any of that hahaha its okay though i need to learn so I appreciate it, like i said i need to work my way up from the basics. theres not alot of stress of focus put on these labs so I tend to put them aside, assuming their not important. I might as well become at least decently profficient now... who knows if i'll need in my future job.
I may be wrong, as I'm pretty rusty on this stuff, but for fourier series analysis isn't it a lot less complicated than needing to use fft? Integrals to find the coefficients, and then just generate data for different values of n. e.g. [wikipedia example](http://en.wikipedia.org/wiki/Fourier_series#Example_1:_a_simple_Fourier_series) 
no, you could analytically define the FFT of the the triangular waveform analytically and just evaluate it for functions of n. From the text of the exercise it seems that the instructor wants you to use the FFT command though? I would say that the using the discrete fft of fft.m provided by matlab is quite a bit easier than deriving the coefficients by hand, but that's just me.
pastebin.com
post the code to http://matlab.pastebin.com
Here is the link to the code. http://pastebin.com/4Rj5A6yh Thanks MATLAB says that line 18 has a problem. The one that is "dts: [dts;dt]" 
Yo Initialise "dts=[];". Pretty sure what you want to do is append stuff at the end, this will allow you to usee it on a first run.
Okay I did that but I got another error. I think I should just ask someone in my class instead. Thanks for trying to help. 
Wow, thanks for the last line. I've never seen that done before. D2 = double(D=='1') 
You could try using [cubic splines](http://www.mathworks.com/help/techdoc/ref/spline.html). Matlab has the functionality built in already. All you need are your data points and the values at which you sample. There is an additional parameter that acts as another interval for a greater level of refinement.
you, sir, are deserving more than the single upvote I can provide for you! My deepest gratitude is forever yours.
Haha, no problem. My master's program is specifically for Scientific Computing, so I have to know this stuff by heart anyway.
Take a look at pchip too, http://www.mathworks.com/help/techdoc/ref/pchip.html
If it is a sum of cosines, you cannot go wrong by FFTing the function. If it turns out your smapling frequency is high enough (twice the highest frequency at least), then you can zero pad the ffted signal and use ifft to create a smoother time signal. This process is also called sinc interpolation. For example for a 2^10 sample at 40KHz you can do: S=fft(signal, 2^10); S=[S,zeros(1,2^10)]; %or S=[S;zeros(2^10,1)] if it is a column vector signal_new=ifft(S,2^10); Now signal new will be extrapolated to look like an 80kHz "sampled" signal. For 120KHz obviously you would need to zero pad it with 2^11 etc. This should give you more scientifically sound results than the cubic spline solution (especially if you got any weird frequency spikes)
oh nice! what is the mathematics that's working here? obv some form of linear algebra which is my favorite discipline
Compared to spline, P''(x) may not be continuous, where S''(x) will be continuous. These functions are pretty easy to program yourself if you want a good exercise. Also, if you have the curve fitting toolbox, execute cftool to see a lot of fitting equations.
alas I don't have that toolbox, but it sounds like a cool feature my university doesn't subscribe to that particular one
all right; so the code if got as of now looks like [this](http://dl.dropbox.com/u/19403256/mws.m) the frequency response is coming, but at a very different location than i'd expect to see it if you want to give it a run the link to data1.xls is [here](http://dl.dropbox.com/u/19403256/data1.xls) *edit:formating
And what are you trying to do again? I don't understand the question. And you could always submit it to [Cody](http://www.mathworks.com/matlabcentral/cody) and see how many ways people implement it.
Not on matlab right now, make sure you do a "doc fft" to see how to setup your frequency vector f=0.5*Fs*linspace(0,1,FFTlen/2+1); is what I usually use (you only keep S(1:FFTlen/2+1) because the rest is duplicate). When I get home I'll have a look at your data+
Because you're in a while loop. You don't exit the while loop until the logic is false so sum&lt;100. It goes into it one more time. Next time it comes around sum is greater than 100. So then it fails.
your code is impossible to read... Edit it, starting each line with four spaces (and properly indent it) and it should be readable. `t` is a vector of times? it looks like y is being used as a scalar... One way to do this is to initialize `q` to zeros, then set each segment by subsetting `q`: q = t * 0; subset1 = t &lt;= 2.2581 ; subset2 = t &gt; 2.2581 &amp; t &lt;= 6.2501; subset3 = t &gt; 6.2501 &amp; t &lt;= 10.0660; subset4 = t &gt; 10.0660 &amp; t &lt;= 28.0249; subset5 = t &gt; 28.0249; q(subset1) = y*60/2/pi/rw*gr_1*FD; q(subset2) = ... the `subset` variables are binary, and control which elements of q are being set.
Use 'home' instead of 'clc'. It means you can go back to looking at what you used to have in your command window if you need.
What is the purpose of the T1 &amp; T2 checks? They're always reset to 0 either initially or at the end of the loop so they'll always be run. You can combine all those if statements with an '&amp;'. Does L1 always have to start in the lower left corner and does the joint of L1/L2 always have to touch the top? And I love matlab, it's a wonderful tool. But is this something that couldn't be solved by inspection/trig? You're never going to get the perfect answer because of granularity problems with how small you made each of the degree steps (of just 1). Just use the law of cosines: - L2^2 = L1^2 + L3^2 - 2*L1*L3*cos(theta1-theta3); - L1=61/sin(theta1); - theta2=asin(51/l2) http://i.imgur.com/6U9o7.gif http://pastebin.com/1CLKxLiG Which fits, it's when cos(theta1-theta3) is the smallest. 
I saw at least one error with my data, the distance axis (x) is supposed to be in millimeters, I fixed that so it's running from 0 to 0.08 now, but I still get the frequency response very close to 0, keeping at it
So you're stepping the *angle* by 1 because you cut the lengths by cm?
an alternate implementation: A = 1:10; sum = cumsum( A.^2 ); % cumulative sum n = find(sum &lt; 100, 1, 'last')
googling "matlab [insert what you want to do] [insert what you want to do it to]" is very helpful in cases like this. try 'cumtrapz' to integrate and 'diff' to take derivatives. (typing "doc cumtrapz" or "doc diff" will open matlab's internal documentation on these functions, which should be enough to get you where you want to go)
Matlab is all about matrices and number crunching, although it does have a symbolic library. Anyway, if I understand what you are going for you would want something like this. x = linspace(-pi,pi,100); %this creates a vector of 100 points between -pi and pi f_x = x.^2 + sin(x); % the '.' is important here other wise matlab will try to to a vector mulitplication If you want a function that you can call you would have to define it like this... function [output] = my_func(xVector) f_x = xVector.^2 + sin(xVector); output = f_x; Hope this helps? **EDIT:** the first set of code could be run from the command window, the second set of code would need to be saved as a .m file
 length(primes(n)); numel(primes(n)); num=1:n; p=num(isprime(num)); length(p); Pick your poison. 
good points! I was debating in my head about whether or not to make it all one step, but I thought for the sake of the new guy I would try to show more steps. 
cumtrapz? realy, didnt they come up with a better name than that? Not sure I would want to google that.. hehe Had to try it in matlab to see if you where trolling or not haha.
Perhaps stepping back further than thronofthree did would help (it would have helped me when I was first starting). apologies if this is too simplified. You can save a series of operations as a script in a .m file - write each operation in a text file (.txt) as you would in the command line and save, replacing .txt with .m. You can write the file in any text editing program (including notepad), but the built in editor provides error checking and other nice programming features. To call the script, enter the name of the file without the extension in the command line. A function is a .m file with the first line of the form "function [output] = function_name(input)", where function_name is the same as the file name. multiple inputs and outputs can be used by separating each with commas. Once created, you can call this function by entering "[output] = function_name(input)" in the command line or .m file. Input and output will be variables that define the relevant vectors. Variable names do not have to be the same within the function and in the call to the function, ie [output2] = function_name(input2) is a valid call to the function defined above. For your case, your input would be x, which can be a scalar or vector, and your output will be f_x or y or whatever you call the result of the operation. It should be a vector with the same size as your input variable. Lastly, don't forget that you can suppress the output (ie not display the output in the command line) by ending each line with ;. I hope this helps, good luck!
cumtrapz(Y) will give you the cumulative sum along Y using the trapezoid method... so the slightly hilarious function name does have a meaning. I would point out that trapz() is more powerful. It works the same way as cumtrapz(), but if you pass in two inputs, X and Y, it will give you the integral of Y with respect to X. 
Used the primes and length commands, and made a program worked fine, Thank You. 
You made me think twice about what I meant by "mastering" matlab. I'd like to think that I know it pretty well, but I'm always learning new things about it.
Are you experienced with python? Lot's of my colleagues use python for it's superior speed when using loops 
I'm a scientist that uses MatLab mostly for image processing, the results of which I send to R for analysis (mostly because I'm more comfortable there). The main program I use, which is a hybrid of my own work and my advisor's (I'm a postdoc), is only ~600 lines. The R code to analyze the data is about the same. If I include plotting code then the R code is about 1.5x the Matlab code, but most of the plotting code is tweaks to make the plots "pretty."
I don't actually know much about python... I really haven't had much exposure to other programming languages. From what I've heard though, Matlab can be reasonably fast as long as you write efficient code. On the other hand, it's very easy to write 'bad' code in Matlab, and you might not get errors or warnings about it.
Here's [my solution](http://traviscj.com/blog/a_trig_problem_solved_in_matlab.html). I solved it using the ideas of constrained optimization, which is nice because then it handles all the stepping stuff for you. You describe the constraints, it finds the solutions. (Instead of iterating over potential solutions to see if they satisfy the constraints.) EDIT: unfortunately, you might not have the optimization toolbox, which this solution requires.
I suppose I am on year 5, but the first 3 or so years was minimal exposure. The longest single project I have written is part of the work for my thesis (simulating the movement and interaction/operation of an autonomous radar platform). The movement simulation is probably 300 lines, beam-illumination calculations are spread across 5 files each about 400 lines. The frequency-dependant radar simulation is probably 200 lines and relies on a previously-written statistical distribution modeling code that is ~300 lines. The main itself is then 100 or so as well. The plotting for this (called from the main after everything else) is at least 500 lines (animations == sad). Sometime soon another 5-600 lines will be merged in from some other [detection] work. So what... maybe 4000 lines combined at this point? Granted, I do a **lot** of security checks along the way to make sure that things are progressing properly (sanity checks) and that includes comments (of which I am traditionally 2:1 code:comment, so take that as you will. Funny thing is I am taking a class that requires C right now... I just wronte the entire program without declaring any types (int, double, etc.) and all of my arrays started indices at 1. /rage
Interesting that you mention R... I've only heard about it recently. How would you compare its capabilities to the Matlab statistics toolbox? (Or is it even a fair comparison?)
To build on what tangled_foot said, the main advantage for R is its community. Generally, if you search for information on how to do something in Matlab, the top hits will be actual Matlab documentation, which is pretty good, but not always noob-friendly. In contrast, searching almost any topic in R turns up dozens of noob-friendly posts (the disadvantage being that sometimes its hard to search for a program called the "R"). I would actually say R is superior in the way tangled_foot said Matlab is superior: flexibility. Both are infinitely extendible but extending R with things other have already made is easier - you install the package, in contrast to having to keep function files present if you want to use user-made functions in Matlab. Matlab is better for image processing (which is why I use it for the most part) but I'd be surprised if this lasts long. Especially since people seem to be figuring out ways to have R talk to Image-J, another amazing, free and open source program for image manipulation.
Looks like you're the winner so far with 11+ years!
Well, when it says "Undefined function or method 'arcsin' for input arguments of type 'double'", it probably means there's no such function or method "arcsin" defined for input arguments of type "double"...not sure what else you expected...
So wouldn't it be 1/3 and 2/3 the distance from one side? 
I agree... I'll give it a go later, have to dual-boot.
Tifs can also be file series. Matlab does like file series, however. 
This has nothing to do with my *real* job, but I'm going to try to build a system to evolve optimal trading strategies for the stock market
Use with [\input](http://www.public.asu.edu/~rjansen/latexdoc/ltx-248.html) and never have to type out another equation again. Right now my work flow is m-file to get stuff working. Write the report. fprintf(fid,'thisEquation.tex') and \include{thisEquation}. So corrections to code are in the m-file and not latex.
I would write a function with arguments of a single line and all of your points. The function would return the point of intersection. To call your function, make a for loop, for n=1:28 and call your function each time with your line of interest.
Based on your sweet plot I would do the following to find that intersection(there are many methods to do this, some more accurate than others, this example is probably the easiest method I can think of): Find the equation of your line, ie y=mx+b. With this equation calculate the distance between your line and each point in your curve: http://mathworld.wolfram.com/Point-LineDistance2-Dimensional.html Find the two closest points, and construct a line between them. Now you have two lines. Find the point of intersection using algebra. Or you can do it all numerically: http://mathworld.wolfram.com/Point-LineDistance2-Dimensional.html This method might be classified as linear interpolation. 
Yep. Which coupled with regex makes renaming stuff super easy.
Thanks for the suggestion. I'll look into this program. 
Do you mean that you are working on one single model and that you rename the file when you make a change to have access to older versions? In that case I recommend using an svn repository. I use the tortoise svn client, [http://tortoisesvn.net/](http://tortoisesvn.net/). It takes some time to set up and to learn, but it's definitely worth it.
Absolutely this should work with any size matrix. A vector is a matrix with size x(n,1) [or x(1,n), x(n,1,1), etc] and a scalar is just a matrix of size x(1,1). Matrix operations become important if not operating on a scalar, but don't matter if only performing addition/subtraction or multiplying/dividing/taking powers of scalars as is the case here. 
Like this? vector=zeros(100,4); i=1; for x = 1:10 for y = 1:10 a = something; b = somethingelse; vector(i,:) = [x y a b]; i=i+1; end end
Ok... so there was an easy solution. Thank you!
Image processing toolbox has 'bwmorph' with option ['skel'](http://www.mathworks.se/help/toolbox/images/ref/bwmorph.html) but only for binary images, so you would have to threshold the images. You might also be interested in ['watershed'](http://www.mathworks.se/help/toolbox/images/ref/watershed.html). I haven't had similar problem (with intersections) but you could use the bwmorph(BW,'skel') as a initial estimation of fracture lines and then further define the estimate with some sub-pixel method (such as fitting 1D polynoms/Gaussians across the found fractures). 
BOO sciencedirect.com!
Not sure if this will work for you, but look up the function [evalin](http://www.mathworks.com/help/techdoc/ref/evalin.html)
indeed... `fixed`
Have you played around much with Fiji? This kind of stuff is doable there, for free.
Aw damn. I had a feeling that might happen. Sorry about that; [here's](http://imgur.com/VyHUE) the image if you're still curious.
All of the functions packed in 'bwmorph' are industry standard binary morphological operations and are very well defined and documented. If 'thin' seems to work (and from your example image it looks like it should), you should probably use it. I try to use the binary morphological operations always when I can as they are very easy to play with and you can easily create chain of operations which will accomplish quite a complex task.
Add the break lines and step through it and see where it's getting hung up. Personally I'd write a proper ODE function and use ODE45.
I'm not very sure but line 45 is trying to access h.n. There doesn't seem to be any place where h.n is being set. The only way h.n is being set is if nargin == 0(which is if number of input arguments is 0). But since you are giving 1 input argument h.n is not being set anywhere. 
Why not just download a pirated copy, but instead of using the crack that comes with it, input you legitimate serial number.
If you have the serial number just register on Matlab's website and they will let you download any version that you own.
ok, i'll look into that. Thanks :)
Up until a certain point...I think the limit is 5 machines. Then you have to go through lots of bullshit with them to be able to re-install it. I ran into issues when I was losing a hard drive, then replaced it, then eventually got a new laptop. It was a pain in the ass. 
I have them disabled and just use git.
I think the while loop in the Euler_solver function is just taking a long time to reach the end condition. In the iteration counter line, i = i+1, remove the semi colon at the end. Now when this function runs you will see the value of i as the loop runs. This is an indication that something is still happening although it will slow your code down.
I think I'm using the R2011 something too 64bit version on windows 7. Will check the exact version when I'm at home.
you might have just copied pasted the code wrong then, not sure what's wrong
Did you look at the documentation for the scatterplot?
&gt;Index exceeds matrix dimensions Might be due to a variable name / system function conflict. Are you using any reserved variable names?
I use version R2011a :/
It gets the error when calculating single(area(Idx,1)) and I cleared all variables.
You mean size(area).
That are the exact numbers I get with the script I wrote! Gr8 !
This code works much better/faster and works for 2,3 &amp; 4 needed resources. http://pastebin.com/53gcvFFD Never do a loop unless you have to.
Oops, yep. And that's what I get for replying before coffee...
The example on the 2011a Matlab is different from what is online. Got it right now. Thanks for the help guys :)
You're right. I knew enough about Matlab to know that's what we had to do, but I wasn't getting to correct Matrices back, because my for loops were programmed incorrectly, so it was doing only the last element of each for loop. 
I thought about this for a while, before I posted. I realized that finding the differences is only a small part of the problem. Why? Well rotations are not commutative. So if your prescription is correct then order is important. So while our intuition from rotations about a point in 2D might lead us to conclude that adding the difference would work. It seems unlikely that a naive generalization will work in 3D. 
yup, I know the feeling, I hardly ever go on r/matlab but I figured people might search it or something and only 2 years of matlabbing have taught me that the number one reason people think they suck at matlab is because they don't know really useful functions. Also if there is one thing matlab is excellent at, it' reading from text files.
best answer I can give, given the question. Is OP working on homework for a class they've skipped? http://en.wikipedia.org/wiki/Discrete_cosine_transform EDIT: Just noticed that this is a repost from http://www.reddit.com/r/cheatatmathhomework/, so it does indeed look like it's a homework problem :)
I think excel has a pretty low column limit, so it would make sense (used to be 256 I think it's 16,384 with office2010 though). Transposing the data matrix should solve that issue.
I don't know in what (if any) version it is included by default, but I guess you could download the image and use it even if your matlab version does not include it. [lena.bmp](http://instructional1.calstatela.edu/jdong2/Serenade/lena.bmp) Color version: [lena512.bmp](http://www.indinf.pub.ro/catalinp/proiect/lena512.bmp)
Not sure if this'll help, depends if what you're doing is a one-off or part of a larger problem. If you're doing something and can't avoid a loop in which you use xlswrite, your code will slow down terribly - something to do with Matlab having to open and close excel each time it runs. xlswrite1 is an alternative on the file exchange to dramatically improve performance for writing data to excel in a loop. http://www.mathworks.co.uk/matlabcentral/fileexchange/10465-xlswrite1 Helped me with my Master's project and made a bit of industrial code run at a bearable pace. I realise now that I could have vectorised it and done away with the loops, to make a dramatic improvement, but if it's an iterative procedure then xlswrite1 might help.
As a general rule, if you are using a for loop in MATLAB, you're probably doing it wrong :) If you are using two for loops, you should probably be executed :) The main exceptions are when you're dealing with file I/O or some other operation that can't be vectorized. 
A fun problem I did to keep myself from dying of boredom last thanksgiving at the in-laws house: Write a solver for Sudoku in MATLAB. (hint: a brute force recursive approach is easy and fairly fast.) Interesting twists: 1. Find ALL solutions. (While most published puzzles have a unique solution, this need not be the case.) 2. Leverage the solver to build a puzzle generator. 3. Much harder: try to develop a way to predict the perceived difficulty of the puzzle by a human player. 
Ok so here is the solution. (Now I am using Cartesian coordinates. The conversion in matlab is trival: sph2cart). Take vectors X1 = [x1 y1 z1] and X2 = [x2 y2 z2]. The cross product gives an axis perpedicular to the plane of X1 and X2. So in matlab we have: eta = cross(X1,X2) Now compute the angle between the vectors: alpha = acos( dot(X1,X2) ) Now you do a rotation about the axis 'eta' by amount 'alpha'. Thus there is no need for Euler angles.
get(handles.slider1,'Value') returns the current value of slider1 (defaults to 0 to 1). Use this in the OpeningFcn with your wavplay code. Though, I am not familiar with how wavplay works. This code could be placed directly in the slider1_Callback function and then you can get the current slider value using get(hObject,'Value') as it describes in the comments. Then wavplay will be called every time the slider is changed, so you may have to stop wavplay or there will be multiple tones being played at once.
How do you recommend making the transition?
I'm an Aerospace PhD student and I use both MATLAB and Excel extensively. Excel is still a great way to visually sort, filter, and explore large tables of data. Of course, I would encourage every engineer to learn a scripting tool in addition to Excel: Python, R, MATLAB, Stata, or maybe even VBA. The choice of scripting tool often depends on your field of study, what your coworker's use, and the details of your project. The important thing is to not be dogmatic about software tools.
I work in the defence industry as a modelling &amp; simulation engineer (so a lot of Matlab/Simulink). Excel is still a massive tool that is used very commonly, only recently companies have migrated from Excel to model packages like simulink. I know of a company that has a whole system modeled in Excel. I have also done work using excel around 5 months ago, its very very very useful. So don't diss it!
I don't think the point is that Matlab lacks features but that Excel can be more intuitive and user-friendly for some people if you want to visually examine the data. Obviously a limit of 2^16 is not relevant if that's all you want to do.
Thanks for that subreddit. But I son't know if Image processing is a form of "signal" processing. I'm a noob at this. The problem here was with Matlab 2011a and 2011b offering different examples (with functions that take parameters differently). It's now solved :)
Yup, it worked! Thank you! I may need some more help after this weekend, I'm crossing my fingers that I won't =) 
I don't know how to write the callback function for the push button. All that hObject stuff and the handles confuse me a great deal. 
Do you know a way to get a more accurate pause? It seems like pause is only accurate to about 10 ms, and I'd like something more accurate if possible.
I am not familiar with matlab GUI's, but this could be done fairly easily in Simulink.
If help on "guide" isn't enough, this will probably get you right on track for something simple/er: http://www.youtube.com/watch?v=dI1fUYxF36U
Sorry, that is impossible from within Matlab. With some fiddling, measurements and compensating you can get a little lower but it's not very reliable. The reason has to do with the platform you are working on, namely that Matlab is running on top of a multitasking OS (this applies to both Mac and Win, I expect the same to be true of Linux). You may be able to run drivers or something to make it faster by interfacing with C code. To get your animation running as fast as you can, try an approach similar to this: * If your original was something like this (sloppy psudocode): for k=1:N plot(xdata(k,:),ydata(k,:)) pause(dt) end * Try this instead: decimate your data or do whatever you can to make it smaller if it was so big before that it slowed you down hl = plot(0,0); for k=2:N set(hl,'xdata',decimated_xdata(k,:),'ydata',decimated_datay(k,:)); drawnow % this is a Matlab command that flushes the even queue so you can actually see what you just plotted even if your pause is too short pause(dt) end Thanks to the drawnow command you can make dt as short as you wish and you'll still see each plot appear. Setting the data properties of a line is faster than re-plotting the line every iteration. Hope this helps.
So I have found an "okay" solution to what I want. I graph the projectile's path, and then I animate a marker that follows along that path. The code I am using is this: p=plot(handles.graph, x(1), y(1), 'o', 'Color', clr,'LineWidth', 2, 'MarkerSize', 10, 'MarkerFaceColor', clr, 'Parent',grp); n=round(xrange/tf) tic for i=2:n:col, set(p,'xdata',x(i),'ydata', y(i)); drawnow; end toc delete(p); where xrange is the range of the projectile, tf is the time of flight. This works for low velocities and heights. For instance, the tf is 1.17 s and tic/toc returns 1.237 s. So it's pretty close to a realistic time. However, say for a particle with 100 m/s velocity (more x and y data but not necessarily more xrange because of drag), the timing is very bad--1.6s flight time, but tic/toc of 0.6s. So I guess my question to you is, how can I make it so that it skips a few points as to closely match the time of flight best? I imagine it has to take in to effect the total number of points and the xrange, as well as tf.
I suggest instead of using "n" to take discrete steps, you use [interpolation](http://www.mathworks.com/help/techdoc/ref/interp1.html) or [decimation](http://www.mathworks.com/help/toolbox/signal/ref/decimate.html). This allows you to get more resolution in your control of your step size, specifically you can play with you "frames per second" (suggest 10-30) by assigning your decimation/interpolation xi vector. Furthermore, as in my previous comment, I suggest you include the pause(dt-toc) command in there to give you better control in case you go over time. I should have mentioned this before, but if you wish to really do this right and create a movie that you can later play in real-time or scaled real-time, then that can be done. You can use the native Matlab command [videowriter](http://www.mathworks.com/help/techdoc/ref/videowriterclass.html) if you have one of the latest versions of Matlab, or if you are running Windows and require more customization then I recommend [mmwriter](http://www.mathworks.com/matlabcentral/fileexchange/15881-mmwrite). Using these you can basically make and record plots at your leisure, then create a movie which will play back at the desired fps. 
Thanks for replying. The camera that tracks the motion detectors has something called an ODAU box which is a data acquisition unit. This allows me to plug in 3rd party equipment like the machine that tracks breathing. Then the data from both machines is synced through that box into the computer. There is a computer program that is made by the manufacture that we use to collect the data from the camera in real time. Then we can analyze the data through that program and others, including Matlab. So that's just a little more background. Like I said I'm very new to Matlab so I don't know exactly what everything means or how it works yet. The professor I'm working with has been gone from campus for 2 weeks, so I've been trying to learn/figure out some stuff on my own. I've been completely stumped by this problem so far. Out of the blue I said, "I'll see if Reddit has a Matlab sub" and to my delight it exists. To answer your question, I think so. I think the camera has such scripts. I believe that said scripts can manage the camera and other equipment through the data acquisition unit that I mentioned. I don't know what any of those scripts are though. My professor has used Matlab extensively with an earlier version of the equipment we have now, and as far as I know that included using Matlab to run the equipment during data collection. So my gut is telling me that those scripts exist and that he has experience with them. The problem is he doesn't have experience with running a video for display during the experiment. I have seen some examples of researchers that use a camera to record their experiments during a trial. I'm guessing that is what you do as well? The difference is that I need video playback to be triggered rather than recording. Can I ask what the scripts are that you use to trigger your camera? At least that may be a starting point for me. The program that came with the equipment has some sort of video capabilities built in but from what I understand those capabilities are simply the ability to overlay video of data collection over the motion capture data. In other words you can record your participant at the same time as recording movement and then match those two recordings together for a "real life" display. Unfortunately that is the extent to the video capabilities of that software. Anyways, I hope that answers your question and provides a little bit more information. I again sincerely appreciate any help as I have exhausted all the resources I can find. Perhaps the scripts that you use would be a good jumping off point for me? I agree that in some way this has to be possible and that it's probably as simple as having the right script. Just gotta figure out the right language I think!
hey Im leaving work right now but ill take a look at this when I get home. If you could let me know the names of the camera and equipment involved that might help. 
Will I be able to read it again with something like: hvfr = vision.VideoFileReader(myfilename, ... 'ImageColorSpace', 'RGB');
Hard to tell if all encoded formats written are supported (mmwrite supports many codecs), but at least [this page](http://www.mathworks.se/help/toolbox/dsp/ref/frommultimediafile.html) suggest that 'vision.VideoFileReader' supports some of the containers to which 'mmwrite' can write. You should just create a test script.
Thank you :)
I've never used video within matlab, but I have used sounds and simultaneous data collection a fair bit. Playing sounds, you have to stipulate that matlab should start playing and then move onto the next instruction without waiting for the sound to complete. You do with the string 'async'. As I said, I don't know about video but it may be something similar.
it looks like in your showgraph function the second input; y in your case is not actually being used (y doesn't appear anywhere else in the function other than as the input). Thus fs in your showgraph argument (last line of code) will never be used.
I see, so the third line of the showgraph function should be this? t=[1:slen]/y
Here are some suggestions: - grab some data off the web and use the curve fitting tool or statistics functions to see if you can understand what is going on. - try to plot platonic solids without the use of others code - write some parallel code
How do you go about writing parallel code? I mean, point someone who has NO idea how to do that in the write direction. What exactly do you mean by parallel?
Figures has a property named UserData, which is not reserved for any specific data. In your startup code, set the UserData to the figure handle you want it to have access to. set(fig1Handle, 'UserData', fig2Handle)
You'll need the Parallel toolbox, though. Not every University will have that. To check if you have it installed, try this command: matlabpool open local
Advertising.
Long code (at least for me), I am going to try to understand what it does over the weekend as there are a lot of techniques/functions usage I have yet to see.
This was confusing, can you be more clear? I typed in command window your line as follows 'matlabpool open local' and I get: ??? Undefined function or method 'mmatlabpool' for input arguments of type 'char'. 
Out of curiosity, have you tried numpy? It is a collection of C bindings for numerical calculations. I ran a quick test for solving linear systems of the size you have. import numpy import numpy.random import numpy.linalg #Set up some test system. A = numpy.random.normal(size=(200,200)) b = numpy.random.normal(size=200) #Solve the system. x = numpy.linalg.solve(A,b) The solving step takes about 18 seconds for 10,000 repetitions, or about 1.8 milliseconds per system. For comparison, I tried the equivalent matlab system solver. Unfortunately, I do not have a computer with both matlab and python installed, so this test is not quite accurate. However, both computers have similar processor speeds, so it should be fairly accurate. A = randn(200,200); b = randn(200,1); tic; for i=1:10000 A\b; end; toc For this, I had an elapsed time of 37 seconds, or 3.7 ms per system. With the inaccuracy introduced by having different, but similar processors, the matlab and numpy versions are roughly equivalent in terms of speed.
I'll be the first to admit that the code isn't that pretty. I wrote the entire thing in an afternoon without any clue as to how the IRC protocol worked. There are three interesting aspects of the code worth looking at: 1.) It creates a timer that calls a function every 0.1 seconds to read the network stream to see if there is any data. 2.) Then there is a main essentially infinite loop that reads keyboard input from the user. What is neat is that the program is doing two things at the same time! Polling the keyboard and reading the network stream! 3.) The third interesting part is that it uses a clean up mechanism that gets called when the program terminates that closes the network connection and deletes the timer no matter how the program terminates. It is like a destructor that gets called automatically on exit. This is a very neat feature that is a very handy way of elegantly handling closing files. 
Indeed I have, I tried again today to see if Python has made any improvements, but it seems that it has not. I included a for loop in your python example and this is the results for 10,000 runs: Python: 0m29.501s Matlab: Elapsed time is 8.878195 seconds. 
I guess I did pick a sleazy title. I still think it is useful for gleaning useful tidbits, like how to change the window title of each Matlab instance on your machine.
That means you don't have the parallel toolbox installed on your machine, which means "parfor" loops will only behave like a regular for loop. That command, with you have the toolbox installed, will initialize "workers" to handle different iterations of a parfor loop.
This just made my day, haha that's hilarious.
I'm a huge fan of using "urlread" to do automated web scraping. I've also had a lot of fun with simple serial devices and the matlab [serial interface](http://www.mathworks.com/help/techdoc/ref/f16-35614.html#f16-47693). A [$35 USB GPS](http://www.amazon.com/GlobalSat-BU-353-Waterproof-USB-Receiver/dp/B000PKX2KA/ref=pd_sxp_f_pt) receiver was a ton of fun to play with. Lastly, check out "containers.Map". It is the data structure (hash table) that I wish matlab had from the start and I only recently stumbled onto. It is incredibly useful and a key component in most other programming languages. 
Ha. I actually submitted this to the mathworks file exchange and they rejected me because of the license. It is BSD or GTFO for them.
If I wanted to put a vector of size 1 x 10 specifically into row 2 (or any given row) of that matrix, how would I do it?
You would assign it like matrix(row_idx_to_change, :) = new_row_vector; Also, to accumulate, say, three row vectors together, you could say matrix = [row_vector_1; row_vector_2; row_vector_3];
Do you want to do this as the final matrix is constructed or edit an existing matrix with your new vector of data? If you wish to construct a matrix that is, say, 10x10 out of ten 1x10 vectors named a to j, then you could: Final = [a; b; c; d; e; f; g; h; i; j] or if you already had data and wanted to add the last row: Final = [Previous_data; last_row] If you want to replace the data within an existing matrix with that from a vector 'on-the-fly' then you could simply address each value. Say you are replacing the 5th row in 10x10 matrix 'Final': Final(5,1) = New_Data(1) % Only need one addressing value if the source is a vector. Final(5,2) = New_Data(2) Final(5,3) = New_Data(3) etc. etc. You could do this with a 'for' loop if you want, but I see little point for simply replacing 10 values.
Is there a reason you're not using roots for your second function. Or polyval for the first? 
I thought that at first. I'm trying to find roots within a specific interval so like in the second one I'd do something like root(x1,x2,dx) and I'd get a root for the second interval. What I'm actually having trouble is is creating a function where I can input the coefficients of a polynomials and setting it up so I can find the roots within a specific interval. 
1) read the little "formatting help" thing. 1a) use pastebin. 2) " " matlab -&gt; google. Should give you everything you need.
We are not here to do your homework for you. Figuring it out yourself will make you better. If you find the answer online, it will make you worse.
Thanks, I had no idea... I've been trying to write a recursive Minesweeper solver (for some reason) and the 'uncover' functionality inside the GUI will be helpful.
If you are still wondering, its just because you are assigning a variable(h1) to the figure. If you plot the variable again it will display the histogram.(or atleast I think it should)
The easiest way to do this would be nested for loops and data vectors. Small example showing how variables change in the loops: Temp = [10 20 30]; Mach = [0 0.1 0.4]; for imach = 1:length(Mach) for itemp = 1:length(Temp) disp([Temp(itemp) Mach(imach)]); end end You would need to add your loops/data etc. If you want to impress your friends/instructor you can begin familiarizing yourself with GUIDE http://www.mathworks.com/help/techdoc/creating_guis/bqz79mu.html#creating_guis Then you'd be able to create sliders for your variables.
Do you want to change your script into a function? Then you could just call the function 6 times? http://www.mathworks.com/help/techdoc/ref/function.html
In case you weren't aware, or might need to do it in the future, by taking I(1:150,1:150) you are actually cropping the original image. If you wanted all the data present in the original image, but resized to [150 150] you can use the imresize function: I2 = imresize(I,[150 150]) Do a 'doc imresize' to see all the options, particularly for how to handle interpolation.
I'm doing a very loose image matching algorithm based on histograms, and cropping the picture to 150x150 is good enough for the problem. But thanks :)
we use git in our lab. It works great and commands can be ran directly from matlab: Commit: !git add. !git commit -m "Breakthrough in module 1" !git push Get changes: !git pull
Just a warning, I re-tested the code at home. If all 15 values in a "set" are 0, this will give you an error. Not sure how you want to deal with this. You can either remove the value or NaN it, should be fairly easy with an if statement right after the for clause. e.g. for j=1:size(X15,1) if(any(X15(j,:))==0), X15(j,:)=NaN;end X_new(j,1)=X15(j,find(X15(j,:),1,'first')); end Also just noticed run some test cases, this code keeps 1,16,31 etc. You can fix this if you change: X_padded=([NaN;X;zeros(15-mod(length(X),15),1)]); or just delete the 1:14 entries X(1:14)=[]; This should cover everything &gt;_&lt;
Yup, just use Git. Just don't try to share a repository through Dropbox. I only mention is because you mentioned using it currently. Dropbox is really not suitable for sharing Git repositories. 
You have one matrix, say x, which is of size 15x3. You have 3 arrays, say, y1, y2, y3 which are 1x2 each. What is the average value you want to substitute for the 0 in x?
Matlab on linux? By default they are set to match emacs shortcuts. You can change these though, [see here](http://www.mathworks.com/help/techdoc/matlab_env/br9elah.html#br7ulae-1).
Oh, thank you so much! These shortcuts were driving me insane!
=&lt; I use emacs often, so it comes naturally. I like them...
What's an alternative? Gittin' git to be installed on our Microsoft-fanatic network isn't one.
Okay, so I tested it now, and this error pops up: &gt;&gt; X_padded=([X;zeros(15-mod(length(X),15),1)]) ??? Error using ==&gt; vertcat CAT arguments dimensions are not consistent. Am I missing something? I could have overlooked something obvious, but nothing really strikes me.
It doesn't have to be installed on the corporate server... Furthermore, if your research can be hosted on dropbox, I don't see why you can't use a git repository in the cloud, ie, github, google, etc.
Um, care to expand on that for someone not making a Ph.D. out of the topic?
if you reference an array (of any dimensions) with a scalar or vector, MATLAB counts elements in column-order to return results. For example, x = [1 2 3 ; 4 5 6 ; 7 8 9]; ind = [1 2 9]; % a row vector of indices % this will give you elements 1, 2, and 9 as if x was a column % note how the dimensions of 'ind' define the dimensions of the result x(ind) x(ind')
I am sure these shortcuts are very nice when using a QWERTY keyboard, but I use [this](http://download.tuxfamily.org/dvorak/wiki/images/Carte-bepo-simple.png), it's the French *BÉPO* layout. These shortcuts are infernal with the bépo layout.
your X is a row vector I would assume, just do a X=X' right before, I had assumed it was a column vector
haha, I battled with this for about a month till I wondered about googling to change it.
They're not nice at all on a QWERTY keyboard.
Sweet jesus. I understand.
I think that the problem is with the precision of floating points (I could also be wrong). Your sanity test could be flawed because 'normsig(2,1)-normsig(3,1)' is very close to zero (if we use the pasted matrix, we actually get exactly 0 which causes test_eq8 to go to -Inf). If you have good starting estimations on A, B, scale and noisesig2, you could use numerical solver. For example: First the script side: %Good estimates of the parameter values A = 1; B = 1; scale = 1; noisesig2 = 1; %Put all the parameters into a vector so that lsqnonlin can deal with them param = [noisesig2 A B scale]; %Nonlinear optimization param = lsqnonlin(@(p)script_nonlin(Pt,mom,normsig,p),... param(:),... [],[],... optimset('TolX',1e-15,'TolFun',1e-10,'Algorithm','levenberg-marquardt','Display','iter','maxiter',20)); %Get the parameters from the output vector noisesig2 = param(1); A = param(2); B = param(3); scale = param(4); Then the function which will be minimized (do not mind the function name, it is actually a .m-file -function): function err = script_nonlin(Pt,mom,normsig,param) %Get the parameters from the vector noisesig2 = param(1); A = param(2); B = param(3); scale = param(4); pos = 1; sigma_2 = -1; %Calculate errors for each equation eq1 = noisesig2 + A*normsig(1,pos)*Pt(1)*scale + B*sigma_2*Pt(1)*scale - mom(pos,1); eq2 = noisesig2 + A*normsig(2,pos)*Pt(2)*scale + B*sigma_2*Pt(2)*scale - mom(pos,2); eq3 = noisesig2 + A*normsig(3,pos)*Pt(3)*scale + B*sigma_2*Pt(3)*scale - mom(pos,3); eq4 = noisesig2 + A*normsig(4,pos)*Pt(4)*scale + B*sigma_2*Pt(4)*scale - mom(pos,4); %lsqnonlin wants all errors to be in a vector/matrix err = [eq1 eq2 eq3 eq4]; With the normsig, mom and Pt you pasted and the starting values of all ones, I get the following results: noisesig2 = -0.0025 A = -0.0013 B = 0.9929 scale = -3.7790e-04 and errors: err = [-0.0008 0.2023 -0.3969 0.1945]*10^-3 Note that the result will heavily depend on the starting values and possibly on the selected optimization algorithm (in the example I used Levenberg-Marquard) and its options (optimset).
Ctrl+H is find+replace in MS Office as well...although with your keyboard it could be different.
6.8 x 10^-7 isn't close enough to zero for you? It is a computer it doesn't always get exactly. Zero. For kicks see what cos(pi/2) is. This stuff isn't matlab's strong point, why not use rref or any number of matrix math solutions?
Yup :)
I... I... love(horseproofbacon); Thanks a ton ! 
Compare the difference to eps, rather checking equality.
yeah I have a very good understanding of how numbers are stored in a computer, but there are languages that avoid these sorts of issues with more clever background-work. i.e. if I'm taking x * K modded by some other value, then it's equivalent to mod(x * mod (K, other value), other value), which often would avoid the problem by keeping the vaalues smaller. This stuff is pretty mch algorithms 101, so its weird that matlab doesn't do it in the background. 
Find all roots, then extract the ones within the interval?
Why don't you just use the closed bracketing method? I did a similar homework last night for my engineering class, so if you have questions I can definitely find time later today to help you.
the problem lies with the while-loop. it checks the condition fib&lt;fmax and if this is 1, the body of the loop is executed. in this specific case, it means: fib(7)&lt;9 8&lt;9 so the loop is executed. after the execution the condition is: fib(8)&lt;9 13&lt;9 which gives 0 and the loop is not executed. you could either use a conditional break statement in the loop: function [f] = fib2(fmax) %UNTITLED4 Summary of this function goes here % Detailed explanation goes here n=3; fib(1)=0; %first term is 0 fib(2)=1; %first term is 1 fib(n)=fib(n-1)+fib(n-2); while fib(n) &lt; fmax n=n+1; if fib(n-1)+fib(n-2)&gt;fmax break end fib(n)=fib(n-1)+fib(n-2); fib end the other possibility would be testing afterwards: your code if fib(end)&gt;fmax fib(end)=[]; end unfortunately, there aren't any do-while loops in matlab. i hope it was helpful. better late than never.
basically, you give the function two unknown values (xlower and xupper) that are below and above the root to find. xroot=(xl+xu)/2, where xroot is approaching the point where f(x)=0. the 'test' is test=f(xu,varargin{:})*f(xl,varargin{:}) if test&gt;0, then there is no sign change, hence no root between the values n=0;xr=1; within a while break: n=n+1 xr=(xl+xu)/2 test=f(xu,varargin{:})*f(xr,varargin{:}) if test&lt;0 xr=xl elseif test&gt;0 xr=xu else .............etc
I have no idea. This was for a colleague of mine that has some advanced models for chemical systems. Not sure exactly what this one was but I know he was getting tired of waiting for 8 plus hours for each MatLab run to finish and was hoping to cut down on that with parallelization. He's already left for the day, but I will see if he can elaborate some more on this tomorrow. **edit**: apparently I overshot by a lot when I said 8 hours (or undershot depending upon how you look at it)
8+ hours? Honestly sounds like poorly written code.
think computational fluid dynamics, but with reactions taking place in the fluid(s). you have just seen the tip of the iceberg
Which is astonishing, because vectorized code just makes so much more sense. Now, every time I have to bust out a for loop in another language, I long for the power of the matrix.
You don't even want to know what my classmates have done. I've seen stuff that SHOULD have been a for loop that was copy and pasted and changed 360 times.
Ask your colleague to check his code for hints provided by mlint. A large number of performance issues can be solved by simply following the code suggestions matlab gives you. You can also use the matlab profiler. Type profile on at the prompt. Run some code. Then type profile viewer. You'll get a detailed analysis of where the slowest parts of your code are, line by line. If you have parfor loops, make sure you run them serially. Otherwise the parfor will block the profiler from analyzing whatever you are running in parallel. If your colleague has done all this already, then maybe nothing more can be done short of restructuring the code to allow parallelization or switching languages.
It's been too long since LA. Do it one by hand and scan it and I'll help get it into code.
Hello all, I am the one who asked the question initially, decided to open up an account to address this. The code I wrote is a branch and bound algorithm with constraint handling. It, as far as I can tell, finds the global optimal of a subset selection problem while satisfying any included constraints. The code runs quite well for problems of the size of 90 choose 6, which results in about 1.2 billion possible permutations but solves in about 2 mins. The issue is the actual problem I need to solve is 400 choose 16, which is results in just under 3 trillion possible permutations. Brute force evaluation is, obviously, impossible, ie. it would take several hundred years to complete. The way the program is written is that the the while loop checks to see if any more nodes exist that need to be evaluated and branched, ie. if the list of nodes is empty an empty set. Parallel computing on this problem should not be a problem as the evaluation of any one node is independent of the evaluation of any other node. I have tried using a parfor loop, however, there are several issues that result. The first is that one does not know how many nodes will need to be evaluated. The second, the problem can be posed in a way that it is known how many nodes must be evaluated, however, this requires a poor branching strategy in the branch and bound algorithm. The branching strategy is so poor that even with parallel computing, the overall performance is worse. And to the last question, I do not have personal experience, but looking around, it appears that LabView does indeed support this function.
lol thats actually part of my trouble i think
I'm not sure what you mean, but this might be what you're looking for. n = 4; x = meshgrid(1:n); y = x' Here we define a vector of numbers from 1 to n and use the MESHGRID function to form it into an n by n matrix. The y matrix is simply the transpose of x. Alcebiades is correct, you should try out some tutorials and check the MATLAB documentation to learn more.
Start your homework before the night it's due.
a long time ago i wrote a monte carlo simulation for photons interacting with blood depending on the specific flow characteristics of the blood in the artery. another time i used it to model a pneumatic system and optimize it regarding energy consumptions. recently, i have been using it to optimize cellular neural networks.
Oh! I see what you're doing there. Since you're dealing with a polynomial, your f.m function is somewhat incomplete. Also, is coeff a vector, or a matrix? If a vector, I would make a suggestion: try passing your coefficients for your polynomial as a parameter, i.e. make one input a vector of the coefficients, and the second the point x at which you are evaluating the function, like this: function value = f(coeff, x) % The length of our coefficient vector. N = length(coeff); % Now list all of the powers of the polynomial together. power = 0:(N - 1); % Obtain the value of the polynomial at the point x. value = sum(coeff .* (x .^ power)); end Now if you don't know Newton's Method, it isn't hard to implement. Again, you just need your function's derivative. Worst case, the bisection method is slower, but it's cheap and easier to implement.
&gt;A while loop's current value is dependent on its previous value Who says this? This is blatantly false; here's an example in Python: while 1: pass There, a while loop whose values do not depend on past iterations. There is no loop type that necessarily has current values depending on previous values. And of course it's possible to do a parallel while in other languages; I've used it before in C++ with OpenMP. Not sure about MATLAB, but if your loops are really independent (as mine have been in the past) you can just start multiple sessions of MATLAB on multiple machines and have each machine do its own thing. EDIT: In fact, a while loop has no intrinsic "value" between iterations at all, and neither does a for loop, actually. Well, for loops do in MATLAB due to the syntax, but not in general. Here's a for loop in C/Java/C++/etc. that does the same as the above while loop. Note the absence of any variables, let alone any variables that depend on previous iterations: for ( ; ; );
&gt;The problem is that running a subfunction in parallel will not guarantee any specific order. So? I don't see anywhere where OP or his colleague states that any specific order needs to be guaranteed. &gt;This means that anything that can't be made into a parfor loop simply will not work. Possibly true in MATLAB, but in general you don't need to have a for loop in order to parallelize your computations.
From the matlab [Getting Started with parfor](http://www.mathworks.com/help/toolbox/distcomp/brb2x2l-1.html) help file: &gt;Each execution of the body of a parfor-loop is an iteration. MATLAB workers evaluate iterations in no particular order, and independently of each other. Because each iteration is independent, there is no guarantee that the iterations are synchronized in any way, nor is there any need for this. as well as &gt;You cannot use a parfor-loop when an iteration in your loop depends on the results of other iterations. Each iteration must be independent of all others. It's not necessarily that a while loop is bad, but the execution of the parallelized loop depends on your termination condition. From the quotes, the termination condition cannot depend on a variable that is changed by each iteration. For instance, if you had t = 10; while t &gt; 5 [ some function that affects t ] end that cannot be parallelized properly (in matlab, at least, since we are in r/matlab). You don't know the order it will execute in. Any loop that would be executable by a theoretical parwhile loop would be implementable as a parfor loop.
We seem to be discussing two different points. What I'm saying is that practically there isn't even a parwhile loop in matlab. It doesn't exist. So our options here are to determine whether the while loop can be made into a for loop that can then be a parfor loop.
Take the square root of D_sorted from the first to the i-th row and divide each row by the sum of the square root of D_sorted (from the first to the i-th row). Multiply by V. The result will go into z as the first to the i-th row, in the i-th column.
yeah but there are wildly different matrix mult algorithms which actually provide substantive runtime differences, performing an extra mod will not really ever increase runtime asymptotically 
I don't have time to completely understand what you are trying to do, but would using a parfor loop inside a while loop work for you? You could calculate many values in parallel (parfor loop), determine if any of those values meet your criteria (while loop), and exit if they do. flag=false; while ~flag parfor idx=1:100 x(idx)=function; end if (x meets some condition flag=true; else statement end end
I see that you figured it out, but you might want to know why: Usually when you are plotting something, if you assign the plot to a variable, you are assigning the [handle](http://www.mathworks.com/help/techdoc/ref/handle.html), e.g. h = plot(x,y). However for hist, imhist, and possibly a few others, you get the histogram data out. You would then need to plot it using stem or bar. The 4th paragraph under description in [help](http://www.mathworks.com/help/toolbox/images/ref/imhist.html) states this, although it is unintuitive. [counts,x] = imhist(...) returns the histogram counts in counts and the bin locations in x so that stem(x,counts) shows the histogram. For indexed images, imhist returns the histogram counts for each colormap entry; the length of counts is the same as the length of the colormap. 
I just changed the first line to function [ money ] = change( money ) and added the line money = [quarter dime nickel penny]; at the end. spits out the result: money = 2 1 0 3
your examples are correct. however, you would never use a while loop in that case. usually, you would use it more like x=[]; y=someRowVector; n=0; while max(x)&lt;xlimit n=n+1; x(n)=someOperation(y(n)); end you probably know that you only use while loops if you do not know the number of iterations. if you did, there would be no problem parallelizing it. you could use a for statement of the form x=[]; y=someRowVector; for n=1:Inf x(n)=someOperation(y(n)); if max(x)&gt;=xlimit break end end However, the break statement is not available for parfor. This means you simply cannot parallelize it. Sure you can do it in other languages. But you cannot do it in Matlab simply using the according toolbox.
The aforementioned genetic algorithm comes as a part of the global optimization toolbox which does offer algorithms to find global minima, e.g. genetic algorithm, simulated annealing, global search etc. if you do not find that satisfying, then you could, as it has already been mentioned, check if it would be possible to only parallelize the operations inside your loop and just check afterwards if you have to do it again or not (like fergy80 pointed out). however, if you are not able to predict the number of iterations in any way, i don't think it's possible. i don't know if i really got what you're doing, but here is another example of a possible while-parfor-combination: nnodes=size(nodes,1); while nnodes&gt;0 parfor i=1:nnodes % you might have to use % local variables here newnodes=evaluate(nodes(i)); nodes(i)=[]; nodes=[nodes;newnodes]; end nnodes=size(nodes,1); end or so... this might be very similar to suggestions already made. i'm just adding to it.
I think the only part you are missing is the total sum of coins needed for the entered dollar amount... you can use sum(money) to find the total number of coins. If you just need the total number of each coin, then thisaccountisbs has a good solution. 
So this is solved numerous times on RosettaCode, but it doesn't have the extra crap at the end (the hard stuff) http://rosettacode.org/wiki/100_doors#MATLAB .... and looking through some of them they're crap, one doesn't even work. This is the way I'd do it. (Especially given your extra constraints. This is for 1-10 only.) x=1:10; [a,b]=meshgrid(x,x); flip=mod(b,a)==0 % This are the flips. Column is the trip down the hall way, row is the locker #. switch a &amp; b to switch this. lockerToggle=sum(mod(b,a)==0,2) % This is the number of times the locker has been switched. Odds are going to be open, even closed. It's also the number of times the door has been flipped. openLockers=find(mod(sum(mod(b,a)==0,2),2)) % These are the numbers of the open lockers closedLockers=find(mod(sum(mod(b,a)==0,2),2)==0) % These are the closed lockers. That should get you on your way, lockerToggle tells you everything you need to know.
First of all: before you start writing code, take a sheet of paper and write down exactly what your problem is, what you know (inputs), what you want to know (outputs), and which variables you really need to solve the problem. i'm not going to go the whole process but i wrote a quick function to help you. feel free to adapt it to your needs. you will see that all that works completely without the usage of loops. function [open,closed,mostChanged,changed5Times,changed]=lockerProb(numLocks) % Vector storing number of changes for each locker changed=zeros(1,numLocks); % 1st student opens all the lockers changed(1:1:end)=changed(1:1:end)+1; % 2nd student shuts every other locker starting with 2 changed(2:2:end)=changed(2:2:end)+1; % 3rd student switches every 3rd locker beginning with 3 changed(3:3:end)=changed(3:3:end)+1; % 4th student changes every 4th locker starting with 4 changed(4:4:end)=changed(4:4:end)+1; % Now you have a row vector, showing you how often every locker has been % changed. I will now use an anonymous function in this context iseven=@(x) mod(x,2)==0; % determine open lockers open=find(~iseven(changed)); % determine closed lockers closed=find(iseven(changed)); % determine the most often changed lockers. mostChanged=find(changed==max(changed)); % determine lockers which have been switched 5 times changed5Times=find(changed==5);
I was bored, and this was kinda interesting, so I gave it a go. Hope it gives you some ideas on how to solve it your self. :) Who knows, maybe the teacher is a redditor and sees this thread, better not copy paste hehe. Yes, I know its O(n^2) and thats not good. But in this day and age, who cares about that anyway.. close all clear all clc locker = zeros(100,1); %holding the state of the lockers. 0 = closed 1 = open. locker_change = zeros(100,1); %Holding number of times a switch have apperd. Same sequence as locker. nr_students = 100; %number of students doing the excersise. for i = 1:nr_students % Do for every student. for k = i:i:size(locker,1) % k is the current locker, the first i is the first locker to be switched, the second i is the number of lockers to skip before checking again. if locker(k)== 0; %check state locker(k)= 1; %update state locker_change(k) = locker_change(k)+1; %add a switch to the locker else locker(k)=0; %update state locker_change(k) = locker_change(k)+1;%add a switch to the locker end %if end %for end %for number_of_max_change = size(locker_change(locker_change==max(locker_change)),1); % take the size of a vector holding only the max switch values. number_of_5_change = size(locker_change(locker_change==5),1); %take the size of a vector holding only the switch values of 5. %*** Output ***% sprintf('Number of lockers switched the max number of times : %d\nNumber of lockers switch 5 times : %d',number_of_max_change,number_of_5_change) figure(1) plot(locker_change,'+') title 'Number of switches' figure(2) plot(locker,'+') axis([0,size(locker,1),-1,2]) title 'Locker state 1 = open, 0 = closed'
as unlikely it is that my professor is a redditor haha, I dont plan on copy and pasting it. I have a test on similar types of matlab problems monday so I actually need to understand how to do this on my own.
This should be the fastest of all the implementations presented. PS: Why are you using fliplr (which is slow as balls)? You could achieve same results with [size(val,2)-1:-1:0]. 
Good call, I rarely ever use it, to be honest I thought it was a built-in. Just checked and saw that it's not really built-in, it's just effectively implementing the same thing you wrote.
If you have the Communication Systems Toolbox, you can just use the command bi2de (why it is here, and not a general command, I have no idea...). More info here: [http://www.mathworks.com/help/toolbox/comm/ref/bi2de.html](http://www.mathworks.com/help/toolbox/comm/ref/bi2de.html) Otherwise, others have replied with good answers.
IMHO That's is the smartest way it can be done. 
Your hard drive is the limitation here.
I'm a noob when it comes to GPU-aided MATLAB as well, but could you improve performance by doing this in a function? I know that it reads it into a local workspace within each function, but it is a lot more efficient in my experience to do it within that "function bubble" than it is by loading it in the main script.
Make a variable merge and then have the for-loop write then replace [net, tr] with [merge(i, 1), merge(i, 2)]. I'm not sure if that accomplishes what you want entirely, but it would stop your output variables from being overwritten.
This is limitation of hardware and can not be corrected with any software trick. Best way to speed up the program would be buying faster hard drive, or if the data is generated just generate it on the fly. Note that if you are reading same small (~&lt;32/64MB) file or portion of the file multiple times in a row, it might be cached on the hard drive cache or in the OS. This will speed up reading of the file. If the analysis takes relatively long, you could also try to implement lookahead reading of the file in which the next file or portion of the file is read at the same time as the analysis of the previous part takes place.
Cool. The reason I kept it mostly low level, was that then its so much easier to read and understand. And for someone trying to develop an algorithm I hoped that was a better way of showing him how to think about the problem. Low level programing is also much more generic. And for someone learning programing, its more beneficial, imo, to learn general programing skills. Specific ways that work only in Matlab is cool when developing in matlab, but for learning programing, not so much.
Ive tried for ages and looked up a lot of information and no its not possible. I would gladly like to be proven wrong.
Yep, not possible. Even the ~ is relatively new.
My reason for asking is that I have a code that is very time-sensitive and every single calculation that can be avoided matters. Your code would surely work, but it would not give an advantage in calculation time.
did you check the performance of this? i mean, you have two nested for-loops with a conditional statement inside. that might slow down everything a lot. it is, however, a good example for "there are many ways that lead to goal".
Have you used the matlab profiler to analyze the bottlenecks in your code? Fix the slowest things first. I have a hard time believing this kind of assignment matters at all. Matlab uses copy-on-write semantics, which means if you do B = A, matlab keeps 1 copy of shared data for both B and A. If you then do B(1) = A(1)+1, Matlab recognizes that the data for A and B cannot be share and only then allocates the second array. Your situation seems similar to me. My guess is that even if you accomplished what you asked about, it will have essentially no effect on computation time.
This. My guess is there are some other, better places to optimize the code. Perhaps you've already seen http://www.mathworks.com/company/newsletters/news_notes/june07/patterns.html ?
You can try octave. And save it as a PNG, EPS, TIFF, or JPG next time.
['Octave'](http://www.gnu.org/software/octave/) or, if it's only a couple, send them to one of us to convert to images.
can also do: if sum(M&gt;=2)&gt;0 
Not sure how length will check to see if any values of M are greater than or equal to 2. M&gt;=2 returns a logical vector of the same length as M. 
Two problems I see right off the bat, let me know if that's enough to fix it for you. * you forgot to use ^ which is key to forming the vector of powers of two * You changed what you are using for ":" thus changing the dimensions of the variables. You can use "squeeze" to remove dimensions unused dimensions but be careful that you get the right vector out (row vector/s with left to right MSB to LSB).
I use Matlab in conjunction with the [Psychophysics Toolbox](http://psychtoolbox.org/HomePage) to conduct experiments on human perception (static images, stereoscopic images, dynamic display). Also use it for subsequent modeling and occasionally for image processing. 
Yeah you're right, sorry brain fart.
any and all.
Write your own functions to speed up the process and negate your problem. Most maltab functions have a significant amount of overhead to ensure that the user is submitting valid arguments.
When you solve for the current or voltages in a circuit, you usually write down several equations (by applying KCL or KVL). What did you learn in linear algebra? If you have a bunch of equations on the same variables, these constitute a "system of equations". MATLAB stands for MATrix LABoratory: if you think about this a bit, the solution should come to you.
You want to minimize the sum of the squared errors by changing the variables m (slope) and b (intercept). So make an anonymous function that takes x, m, and b as inputs and returns y. Define a cost function, C, as the sum of the squared values for the difference between your y data points and the output of your anonomous function.Then use a minimization algorithm, like fminsearch, to find the solution for m and b that makes your cost function close to zero. You can do a similar thing for the exponential function, although there is a more clever way with logorithms. Sorry it this is a little confusing. I'm bored on a plane and typing on my phone.
i just dont know how to write them in matlab. my matlab professor hasnt turned up for a single lecture.
im lost.
go to the wiki page on the pendulum. Use the equation giving period (T) as a function of length (L) and g. (note that it's only valid for small angles). Then use the equation for the harmonic oscillator which gives angle (theta) as a function of time (t) for a given period and starting angle. Note that matlab expects angles to be in radians instead of degrees. If you want degrees use cosd in stead of cos.
Also, I'll bet next time, if you post your *.fig file somewhere, some kind soul here would download it, save it as an image, and send it to you. 
Nice. Didn't know about 'any.' I always did it like so: if max(M &gt;= 2)
assignment then pad would be my first option, Assuming your array is a row vector: B = padarray(A(shiftlength:endofA) {for right shift}| A(0:(endofA - shiftlength) {for left shift},[0 shiftlength],0,'pre' {for right shift}| 'post' {for left shift})
Well, it should be B = padarray(A(shiftlength:endofA) {for right shift}| A(1:(endofA - shiftlength) {for left shift},[0 shiftlength],0,'pre' {for right shift}| 'post' {for left shift}) but I guess you figured it out :)
Mainly uncertainty and estimation. Right now I deal with the design of state estimation algorithms for satellite positioning and tracking in different reference frames. On the MATLAB side, this usually just involves running the estimator and comparing the result to standard Monte Carlo simulations. I also dabble in Extreme event simulation for satellite collision in orbit, as we'll as (its kind of unrelated) optimal control of bio-inspired systems, right now I'm looking into how jumping lizards move their tails to maintain orientation as they are moving through the air, this takes a lot of simulation and the like.
Right now I'm storing my information in structures and saving and loading them from disk as needed. I'm mimicking OOP by having the structure's "functions" take in the structure as an argument. The program is being used in a large scale image matching framework. I'm wondering if calling a function on an object would be about as fast as calling a function with the object properties as arguments. 
you can just do [q w] = min(strouse.lengths); What you wrote should give you an error since you have no variable s defined with field lengths
It definitely does look like Michelson interference pattern, but it isn't. The scale there is in order of millimetres and it occurs between a convex lens and a glass plate. I'm not sure if it's azimuthal uniform so I want to average across multiple directions. I guess I can apply your process to multiple directions and average across. Could you please point me forward some functions I could use to do a peak/valley detection? I roughly had a similar idea, but could not manage to figure a way to approach it using matlab. I've just been learning the image toolbox and know very little about it.
type help penny You could see that matlab already has something there. In that case I would use something different. MatLab is very picky about its path and there could be something in there that it wants to use. Usually, when I first write something, I make a proof of concept first, by using random names as variables, then as it gets more complicated (and I start to understand the architecture) I refine variable names. That way you have a better understanding of when things go wrong. **also: ** I would write money = [quarter dime nickle penny]; after you compute the numbers.
have you tried it? start with something simple like dx(t)/dt=1/2*x(t) or something else you could easily solve analytically.
i honestly do not understand at all what you are trying to do. if strouse is a structure like this: strouse=struct('name','my strouse','paths',[...],'lengths',[...]); then length(strouse) should give you 1. and i don't know what s(i) is supposed to be. if you just want to know where in the field lengths is minimal, you should go with albasri's advice. if you have several fields in the structure that you want to check for minimums that are supposed to be compared afterwards then try the structure.('string') indexing to go through the desired fields (see below). if you have several structures you want to compare, use albasri's advice in a loop. otherwise, you really have to specify what exactly you're trying to do. PS. i mean this indexing: structure=struct('field1',value1,'field2',value2,'field3',value3); str=fieldnames(structure); mins=zeros(size(str,1),2); for i=1:size(str,1) mins(i,:)=min(structure.(str{i})); end absmin={min(mins(:,1),1), str{min(mins(:,1),1)}; % i haven't checked, the str-indexing %might be wrong
i did indeed. thanks anyway.
With mkpp. Your example would be; pp1 = mkpp( [-10 0 1 2 10] , [0 0;1 0;0 1;0 0] ); xx = [-10:0.1:10]; plot( xx , ppval( pp1 , xx ) ) axis( [-11 11 -2 2] ) Provided the function is 0 outside 0&lt;=x&lt;=2.
First, thanks for all your help. ~~I was following it pretty well until the last few lines. First, what do you mean by A'' (maybe it's a typo)? Second, A'*y is impossible because you can't multiply a 2x10 matrix with a 1x10 matrix.~~ EDIT: Okay, I got it working for the first problem. Here's my code: clc; %Gets inputs x = input('Please list x values with brackets on the left and right and spaces in between. e.g. [1 2 3]') y = input('Please list y values with brackets on the left and right and spaces in between (must have the same quantity of values as x). e.g. [4 5 6]') %Compute answer A=[x(1) 1; x(2) 1; x(3) 1; x(4) 1; x(5) 1; x(6) 1; x(7) 1; x(8) 1; x(9) 1; x(10) 1]; z=(A'*A)\(A'*y'); disp('slope ='); disp(z(1)); disp('y intercept ='); disp(z(2)); My current issue is that this will only work for a 10 point data set. This is because of the way I defined the matrix A. I was trying to think of a way to use the "numel(A)" function to make the matrix A more general, but I didn't have any luck. Furthermore, since this only works for a data set, I don't see how this can work for the equation in the second problem. I haven't given the second problem enough thought yet, but I'm well aware that log(x)=(y-b)/a. I'm thinking of just taking the above code and fitting it for this problem by making the slope =1/a and the intercept =-b/a. EDIT2: Okay, I tried changing the code to make it work for the second problem, and I got a=0.4602 and b=-1.0852. I checked this with the given values of x and y, and it doesn't appear to be the right answer. Here's my code: clc; %Gets inputs x = input('Please list x values with brackets on the left and right and spaces in between. e.g. [1 2 3]') y = input('Please list y values with brackets on the left and right and spaces in between (must have the same quantity of values as x). e.g. [4 5 6]') %Compute answer % x=exp((y-b)/a) % ln(x)=((y-b)/a)=(y/a)+(-b/a) f=log(x); A=[f(1) 1; f(2) 1; f(3) 1; f(4) 1; f(5) 1]; z=(A'*A)\(A'*y'); % x=exp((y-b)/a) % ln(x)=((y-b)/a)=(y/a)+(-b/a) and this is in the form of y=mx+b % Therefore z(1)=(1/a) and z(2)=(-b/a) % Therefore a=1/z(1) and b=-z(2)/a a=1/z(1); b=-z(2)/a; disp('a ='); disp(a); disp('b ='); disp(b);
From the Mathworks web page: **Note:** `strvcat` will be removed in a future version. Use `char` instead. Unlike `strvcat`, the `char` function does not ignore empty strings. :)
Yup! I'm implementing it as we speak! Your code though, if I'm not wrong, averages first, then finds the peaks on the average, but if there's offset (you get the center wrong for example), or if you can't assume azimuthal uniformity, it'll completely blow up. I'm modifying it so that it finds the radius in each direction first, then averages each corresponding radii. Also, since my picture has extra artifacts in it like the ruler, I might ave to do some outlier analysis. You're code was very useful though, thanks! Just one thing though. 'r' is not defined in your code, but I'm assuming that's the maximum radius, right? I just set it to the min(width,height) of my image.
Thanks! This other hough transform is working slightly better, but still requires a lot of tweaking. I think going with the other method mentioned where you start from the middle and work your way outward is working a lot better. I still learned quite a bit about hough transforms though while playing around with this. Definitely useful stuff to know about.
Some combination of image(yourimage) and ginput(n) I would think.
You got the method from the mkpp() help file right? Your problem is the second unmkpp() command - you're operating on the original polynomial. Operate on the derivative polynomial instead and you'll get it.
Yeah, the matlab file exchange is actually an amazing place to learn about different ways of doing things. I started with this as my base code: http://www.mathworks.com/matlabcentral/fileexchange/24279 And mixed it with this other code I found for fitting a circle through points: http://www.mathworks.com/matlabcentral/fileexchange/15060-fitcircle-m I've implemented a couple more features too using mouse1/2/3 to delete an accidental point, fit circle, get radius/position, etc. But yea it's mostly based on ginput(n). Thanks for the tip though!
cumsum. diff.
 dataray(:,end+1)=nextdata; 
It's a T/dt by L/dx array. Since initdata (same size as nextdata) is L/dx, I just used length(initdata) instead of 1 to correctly set the dataray size.
trapz is about as simple as it comes with the trapizoidal rule, you can use the rectangular rule and basically just use sum(x)/dx 
THATS WHAT I FORGOT. i feel really stupid. thanks! 
Try canny! The function is g = edge(f, 'Methode', Parameter);. Then some intelligent opening and / or closing (imopen imclose) and you shall have a nice binary image. HF
 doc fprintf
do i replace doc with the variable stats? so, stat fprintf?
OK, sorry if I came off angry, it just sounded like you wanted us to do your homework for you. But now that I see you're having trouble with the formatting, let us know if you still can't get it after some trial and error.
Paste Bin. I love matlab, this sounds like something I could kick out in a few seconds. but I sure as hell aren't going to debug a screenshot.
Aw sweet! I actually got something close to this but except the transpose part. However I see in your formula, the 2nd column is included in taking the averages. I wanted to take the 2nd column out, so that its column 3,4,5,6 added together divided by the first column for each. THATS my main problem :( i know in a simple arrary we do something like A[1 3:6] to skip column two. How can I tweak your formula to get that?
Nevermind I got it!!! i changed 2:6 to 3:6! THANK YOU SOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO MUCH 
For someone learning programing (not necessary specifically matlab) Learning standard low level programing is much easier to understand. And it is all so more useful when having to use another language in the future. % I think this is what he was proposing mena_vals = sum(A(:,2:5)./A(:,1)
^this (and I hadn't had my coffee yet!)
If you have really spent ten hours on this, your time would be better spent reading the first few chapters of a Matlab manual than looking for answers here.
i'm sorry. i simply misunderstood. but, of course, it is much better when you find the solution yourself and i am glad having been able to help. i think i'm going to do [this](http://www.youtube.com/watch?v=35F5ZcBnPZI) now. with slight alterations.
1) Why are you using a loop? 2) You're asking why stuff 'locks up' after 100,000 when you pause for 0.001 every loop? 3) After 100,000 datapoints are you really seeing 100,000 points? Just plot every 100th 
Oh shit. I'm sorry. I thought you were trying to compare the similarity between two audio files and hence gave you that method. Have to check out whether it can be used for alignment too. 
A cross correlation of the two signals will tell you where they align. Look into the function XCORR or you could write it yourself using ffts.
plot as waterfall or surface and average points together or just plot smaller subsets of the data if you are really interested in fine details.
I'm not sure what's wrong with your code, but I've used the "movie" command before with success. In this case you won't need to do your "pause" trick to step the animation. You generate all the figures first, then run the movie (and you can select the frames per second).
There's also xlsread and xlswrite (though note that each call opens a com server, so the approach you are suggesting is better for many excel manipulations).
In the spirit of object oriented code, could you try newWB = books.add;
Just use xlswrite to write an excel spreadsheet xlsread and xlswrite are pretty straight forward the key is that the file you are trying to read must be in the matlab directory (or whatever folder you made the directory as) and xlswrite will create a file in the matlab directory as well. here's the documentation for xlswrite http://www.mathworks.com/help/techdoc/ref/xlswrite.html
What are you stuck on exactly? 
Try the CONTOURF(X,Y,Z) function. It produces a filled contour plot of the values Z located at X and Y in space. %generate some x,y,z data [X,Y,Z] = peaks; %make plot figure; contourf(X,Y,Z,50,'linestyle','none'); %plot the data colorbar; %show the colorbar The code above makes a contour plot using data from the peaks function. It is set to show 50 contour levels. Also, the lines between the contour levels are turned off to give it a more blended look.
Thanks for the advice.. but I tried that... What I have is 2D data.. how do I get about with Z?
Ok, I see what you mean. Essentially you need a contour plot colored by the data density. Something like the function below might be useful: [http://www.mathworks.com/matlabcentral/fileexchange/31726-data-density-plot/content/DataDensity/DataDensityPlot.m](http://www.mathworks.com/matlabcentral/fileexchange/31726-data-density-plot/content/DataDensity/DataDensityPlot.m) Although, it might be pretty slow with so many data points. 
Thanks!!! That might solve my problem... I used this method today but mightv'e done it the wrong way... Did it again now.. 'busy' for the last 15 minutes.. Might run it on the cluster computer
I think I see what you mean. Because all of your points have the same colour and size, and your plot has only so much resolution, you can't tell the difference between 10 points lying very close to each other and, say, 100 points lying very close to each other. In such cases, I play around with the *'markersize'* option of the plot() function. Let me demonstrate a simple example by sampling thousands of random 2D points from a Gaussian probability distribution: x = randn(100000,2); plot(x(:,1), x(:,2), '.', 'markersize',1) You could also benefit from manipulating the alpha value of the colours. You'd essentially create a pseudo-depth effect, where very dense areas would be appear more opaque and sparse areas would appear more transparent. Unfortunately Matlab does not allow (to my knowledge) alpha-colour manipulation for line and point graphing functions like *plot, scatter, plot3, scatter3*. On the other hand, this ability comes naturally to R, which is one many reasons I prefer it for visualisation. 
Would just changing the background of the plot work? 
Use a colormap. Wayy too much data.
Could they mean test vectors with NAN entries (i.e. missing values) are not classifiable? (this is incorrect, but makes sense from a lazy programmer's point of view) Also, could it be [this issue](http://en.wikipedia.org/wiki/Naive_Bayes_classifier#Sample_correction)? 
In general (not specifically for the MATLAB implementation), you need to apply smoothing to your test data set. No idea how to do this with MATLAB's NaiveBayes. http://en.wikipedia.org/wiki/Additive_smoothing
Just use compute the step response using the laplace transform, go back to the time domain, an plot it. It will end up looking something like 1 - exp(-t/tau) Where tau is the time constant of the circuit. 
You could do: x=[]; x(1:5) = -1 x = -1 -1 -1 -1 -1
format long
As funny as it sounds, you might want to look into the smooth() function.
If you have the Signal Processing Toolbox, filtfilt() does the forward and backward thing for you. If not, then coding it into your own version as fluffynukeit is showing you is easy enough. For simple low-passing, there's an easy-to-implement boxcar filter in the filter() documentation that you can use with filtfilt, too. BTW, I think fluffynukeit is being gentle about the threshold criteria. Your computed derivative shows that the inner spikes are just as big as the ones you want to ignore. Knowing nothing about what this data is from, I'd say the fact that the spikes you want to kill are symmetric around the feature you want to keep is telling you something. Finally, just low-passing is going to kill the stuff that you think is important if it kills the stuff you want to ignore, too, because the derivatives are comparable. In any case, if you got rid of the notion of ignoring those spikes at 75 and 475, you could just threshold the derivative and find() the points: thresh = 0.1; x_pos_jumps = x(find(dx&gt;thresh)); x_neg_jumps = x(find(dx&lt;-thresh));
This is a 1D slice of a skull's CT image. The outer two spikes correspond to the scanner and shouldn't have been picked up, but they were. The first jump and little plateau correspond to the skin. The second and third spikes correspond to the skull. The wide, central plateau corresponds to brain matter and cerebrospinal fluid. The fact that I know what the inner structure should look like suggests that maybe I should try to programmatically identify general regions at the outset, i.e., brain, skull, skin. Then any spikes outside of that are just extraneous. But I'm not sure how difficult and advisable that would be.
Or double2str 
Is that non-standard function? I cannot find the documentation on that
&gt; What's the "1" in the first line doing? In most programming languages, a numerical expression is considered false if it is 0, and is considered true if it is anything other than 0, like 1 or 5. A loop block while expression code; end executes the statements in code while "expression" is true. In other words, to a programmer, "while 1" says "Continue doing this while true is true", so unless the loop body contains a loop terminate command (break), then the loop will go on forever. It is worth mentioning that although infinite loops with termination conditions in the block are common, they are often considered aesthetically undesirable. &gt; Could someone tell me in English how that loop is functioning? I understand the Tinf= .... line, but then the isempty argument throws me off. If the array is empty, meaning that if no input is given, then the loop stops? Yes, exactly. More specifically, 'break' is a command that immediately stops the current iteration of the loop and puts the code outside the closest loop block. In this case, break jumps to the end of the code because the closest loop block is the infinite while. &gt;What is the first "end" there for? There's another "end" in the end, that one completes the loop right? The first "end" completes the inner if block. Most programmers use indentation to make this slightly more obvious. Properly indented, your code looks like while 1 % use of an infinite loop TinF = input('Temperature in F: '); % get input if isempty(TinF) % how to get out break end TinC = 5*(TinF - 32)/9; % conversion disp(' ') disp([' ==&gt; Temperature in C = ',num2str(TinC)]) disp(' ') end Note how obvious it is what block the 'end' is associated with now? &gt;Why are there 3 "disp" commands? Because it looks like whoever wrote this code wanted there to be a newline before and after the output temperature is displayed. There are other ways to accomplish this with only one disp(), but thats how they chose to do it. &gt;What does num2str do? Hence, what is a string? A string is an array of characters. More specifically, It is an array of 8-bit numbers that is to be interpreted by the computer as printable characters. In matlab and many other languages, quotation marks are used to express a string. &gt; a='happy'; a(3) ans=p Like I said, internally the computer stores this just like any other numeric array, as a set of integers. The computer maps from integers to printable characters using a table called ASCII that defines which symbols are associated with which integers. For example, ascii says that the character 'a' is to be represented by the integer 98 in decimal. The character '$' is represented by the integer 36. You can see this on the matlab prompt...try &gt;'a'+1 ans=99 So, since a string is an array of characters, and arr3= [arr1,arr2] is matlab's array concatenation syntax, then ['Hello ','World'] would produce a new array of characters (string) containing the concatenation of the two strings, so it should produce 'Hello World'. However, what if we want to concatenate ['My age is ',40] to make a new string? This should work in theory, but 40 is a 32 bit integer, and the types don't match. Furthermore, it might even accidentally interpret 40 as the ascii code for a character, so you'd get something like 'My age is ('. As a result, num2string takes in an integer and converts it to an array of characters representing that integer, so it can be concatenated. 
Oops I may have misremembered. There is just http://www.mathworks.com/help/techdoc/ref/str2double.html I.e. the other way around. Sorry, was typing on my phone.
I think you mean num2str
Unfortunately I don't have a copy of MATLAB's 'hilb' function in front of me, but what it looks like is that it contains a call to the function 'ones.' That function can be called as: ones(n,classname) where 'classname' can be things like 'uint8', 'double' and so on to specify which class of data the output array of ones should be constructed from. So, again, I don't have a copy of 'hilb.m' in front of me, but I'm assuming it takes a single integer, 'n' as input. Your code: H = hilb(rand(n)); instead passes an n-by-n array of random doubles between 0 and 1. This is probably why the error is being thrown. If you want to pass a random integer between 0 and n, instead use H = hilb(randi(n,1)); Of course, I may be completely wrong. :) 
Honestly? Learn C++ or at the very least follow some online C/C++/Java tutorials. In those programming languages while/for are much more important and the online resources are much more mature (infact in MATLAB some of us spend great time to learn how to avoid for loops) You can start [here](http://www.cplusplus.com/doc/tutorial/control/)! Of course the syntax is slightly different, in C++ it's for (init;condition;increment) { whatever } in MATLAB (usually) for ii=init:increment:final whatever end If you do not like this route (honestly it could be quite harder if you have never programmed before, which re-reading your post is very probable). You can check out some of the resources in the sidebar and matlab documentation itself (which I personally find that it is excellent)
I would do a few exercises, leaning heavily on the MATLAB documentation for syntax: * Print out 1 though 10 to your console using a for loop (print out your loop counter) * Print out 1 through 10 to your console using a while loop (you will have to add one to a variable every time through the loop) * Print out only numbers greater than 5 to your console, using a loop of your choice (use an if statement in the loop) * Print out an "W" for numbers less than 5, and print the numbers greater than 5, using a loop of your choice (if/else statement) * Create an array, numbers [0,1,2...,9,10]. Print them out individually using a for loop (accessing array elements using a loop) That should show you the fundamentals of looping, and if/else statements, as well as perhaps the most important use of a loop. Basically, the idea is to do stuff repeatedly inside loops, and do stuff only if a condition is true for if/else statements. Once you get the hang of how loops are supposed to work, take a look at something called "vectorization." It is at the heart of getting matlab to run fast(er).
I've had this before when there was some sort of unblanaced bracket or parentheses above the line that was giving the error.... so check the lines just above that line, which looks fine
I figured it was just a bot--but, yes, that was exactly what I was going for. I think if you've never programmed before, or at least have little programming experience, messing around with extremely simple bits of code can get the "idea" into your head. Perhaps the downvotes are because MATLAB is slow at explicit for loops and control structures? I figured if the OP had almost no experience programming trying to understand vectorization without understanding what it gets rid of would be challenging.
Thanks! I'll take a closer look at the function.
I'm trying to figure out how to segment the plot into known regions of brain matter, skull, skin, emptiness, and machine artifacts. In my mind, some form of smoothing followed by peak detection would probably be the best answer. Peak detection is easy - there are plenty of algorithms available on github, but as for smoothing, I'm not sure how to proceed without losing useful information. Edit: I'm trying this in both MATLAB and PYTHON, hence the reference to github...
I've never tried in matlab, but there are plenty of packages for it in r if you're comfortable there.
I'm using R 'sem' with bootstrapping and it is taking forever to compute a subset model of the model I actually want to test. I could be wrong, but I'm pretty sure it would be the same if I use openMX or lavaan. I've used Matlab in the past, and I recall that it is extremely fast for numerical computations, so I thought I might as well ask. Thanks!
try y=(-17*(x-84))/42 or y= (-17/42)*x+34 that's a straight line
I use psfrag to populate my matlab plots with tex, it works well, but is certainly not automated like this is. 
Basically, for loops and while loops are the same thing. The main difference is that in a for loop you need to know when to stop from beforehand. Since you are using a break, they are pretty much the same shit (and infact using a for loop in this case is wrong). so the for loop in your case is: for i =2:1:100 %for i=init:increment:end [...] if h(i)&lt;=0, break;end % if (condition), break, end [...] end This is very simple to change to a while loop. All you need to do is define your counter before the loop, for MATLAB you just need to initialise it. Then, instead of having the condition inside an if statement you put it next to the while. Finally you need to increment the counter (in this case by 1) somewhere inside the loop (in this case the end is easier to understand). %start loop i=1; %initialise the counter while h(i)&gt;0 % while (!condition) : obviously note that this condition has to be the logical opposite of the one you use for break [...] % same as before i=i+1; %increment the counter end I hope this makes sense. I would suggest you read up on some basic computer science, it is not necessary if you just want to do simple stuff, but understanding why you write code in certain ways helps immensely later on. Some basic stuff on while loops is on [wikipedia](http://en.wikipedia.org/wiki/While_loop), use google to find other great resources.
In other languages, and perhaps in Matlab as well, it's possible to make for-loops that are indexed in a way that they will not iterate even once. In a C-based language, one might look like: for(int i = 0; i &lt; 0; i++) //it does not run because the condition is initially false In some languages there exists a do-while loop, which does guarantee at least one iteration, as the while-condition is checked only after the code is executed.
Hmmm yeah I mixed it up nicely (thought for works like do...while and checks at the end), n=0; for i=1:n,foo();end will never run. for i=1:Inf,foo();end will run forever. So yeah, in MATLAB while and for are interchangable (same as C++)
Sorry if this is a late reply. I implemented the code you gave above, but was wondering how I actually input the coefficients? Do I just do coeff=[1,2,3,4,5]?
The 3x3 is just so that you can separate out what you need to compare. You should run this for all points not on the edge. In the switch/If's you need to say roffset(P)=0 or +1 or -1 coffset(P)=0 or +1 or -1 run that over all P's and your roffset and coffset will be the size you need. And yes I'm not sure about the indexes but if it can work it would stop you from having to use find, hence I suspect it would be quicker. If I think of it, I'll post it.
I'm a bit confused here ... it sounds to me like you're simply looking for the negative gradient ... ? E.g.: [x,y,z] = peaks(50); [dx,dy] = gradient(z); pcolor(x,y,z);shading flat;hold on quiver(x,y,-dx,-dy,3)
I think you're gonna want to use sub2ind.
First, you need to convert your ij-coordinates to linear indices. In Matlab this is done by counting down columns then across rows. Your matrix A is a 3x3 matrix, so the element in the 2nd column of the first row can by referenced by its coordinates, A(1,2), or also by its linear index, A(4). For example, if B = [1 3 5; 7 9 2; 4 6 8] then B(1,1) = B(1) = 1 B(2,1) = B(2) = 7 B(3,1) = B(3) = 4 B(1,2) = B(4) = 3 . . . B(3,3) = B(9) = 8 Now, lets say that I want to replace elements B(2,1) and B(1,3) with some numbers x and y. Rather than using a loop, you can simply say: indexVector = [2 7]; newNumbersVector = [x y]; B(indexVector) = newNumbersVector; Does that make sense? [This page](http://www.mathworks.com/company/newsletters/articles/Matrix-Indexing-in-MATLAB/matrix.html) should help out if any of this is unclear. Happy Coding! **EDIT:** As enryiggins pointed out, [sub2ind](http://www.mathworks.com/help/techdoc/ref/sub2ind.html) is a function that will convert ij-coordinates to linear indices
 A = [0 0 1; 0 1 1; 0 1 0]; coordinateVector = [1 2; 3 4]; newNumbersVector = [99 45]; linInd=sub2ind(size(A), coordinateVector(:,1), coordinateVector(:,2)); A(linInd)=newNumbersVector Notice though that coordinate 3,4 will be out of range :P
That's pseudo-code, pseudo meaning fake or approximate, by the way.
Use a while loop, also add in a if statement so that if i == 3; i = 1;
It's originally french. I believe there's an x in there somewhere. Pseaudaux.
1. this one is tough without any context. Sounds like you need to return the first instant when at least two of the oscillators represented by the frequency vector have gone through one period of oscillation. I'm assuming you know what 'oscillators' are in the context of your class. Some of the language in the question seems to guide you through handling trivial cases where the function result is really easy - can you figure out what they are? 2. This one is tough, too. Each gun shoots bullets that fly along weird trajectories, you find out if any bullets ever hit each other. Once again, part (a) gives you some insight on how to simplify your solution. The collision radius should also clue you in that the bullets might not *exactly* hit each other, so solution of the bullet trajectories alone may not be enough. Part (c) is telling you that you don't have to look all over the world for solutions to this problem - once again, use this to simplify your work. In general, you'll want to avoid solving the general problem in both of these cases. Part of writing functions (to me) is to sit down and think about what is physically going on, and what possible outcomes there are from these events - are there any easy cases you can predict without computing anything? For example, I bet you I can tell you where a ball with initial velocity and acceleration of 0 is going without solving the equations of motion. One other thing I would do is test out my functions for really easy cases before trying the homework problem. For example, shoot two bullets right at each other and figure out if your #2 solution gets it. Shoot them directly apart and see if it returns "no collisions."
As someone who has some French ancestry, I agree with this statement.
I thought about it, and if you do; A=rand(3,3) %where A is pretending to be the local [v row]=min(A) [min col]=min(v) roffset=row(col)-1 coffset=col-1 It gives you row and col coords of the min value in relation to the centre. No need to use find. edit: made a mistake that I fixed.
Thanks! Very helpful!
Hey there, I think I figured out how to do number 1 and I am now working on number 2. So far I'm confused on how to take into effect the direction of the bullet and how to shift the polynomials and find the intersections after the shifts. Here is what I have below... function X=bullets(C,M,D) %Take inputs of coordinates, polynomials, and directions and return a %matrix of the position that any bullets collide on -1&lt;x&lt;1 %C-coordinates %M-motion polynomials %D-direction of bullets %How many guns (nx2 matrix) [n,~]=size(C); for i=1:n for j=(i+1):n p1=M(i,:); %Take the first polynomial as ith row p2=M(j,:); %Take the second polynomial as jth row p1C=C(i,:); %Get the starting position of the first polynomial p2C=C(j,:); %Get the starting position of the second polynomial dir1=D(i,:); %Take the first bullets direction dir2=D(j,:); %Take the second bullets direction np1=length(p1); %Length of first polynomial np2=length(p2); %Length of second polynomial p=[zeros(1,np2-np1) p1]-[zeros(1,np1-np2) p2]; %Creates a new polynomial which is the difference of the two x=roots(p); %Find the roots of the polynomial y=polyval(p,x); %Find the y-values of the intersections Any help would be greatly appreciated!
eeeeh, v is undefined? replace v with x?
There are some errors in your code; You should write "x. ^ b" -where "x" and "b" are variable- if 'x' is a matrix and you want to exponentiate each element in this matrix with 'b' as opposed to wanting to exponentiate the whole matrix with 'b'. You're writing "x. ^ b" when 'x' is a constant. Example: 1*10.^6; 'v' hasn't been given a value, instead you gave 'x' the value you want 'v' to have and did not use 'x' where you are now using v. You wrote "c ^ .2" which is clearly wrong. This works for me: c=3*10^8; v=0:10^6:c; m=1.67*10^-27; p=(m*v)./(1-(v.^2/c^2)).^5; plot(v,p)
For this function it could be useful to use a logarithmic scale for the y-axis. ... plot(v,p) set(gca, 'yscale', 'log')
You haven't really said what is not working or anything. Unless you are wanting confirmation that you have a correct solution. But then we don't know what D10P3 or D10P1 is so its hard to know what fsolve is working on. If instead you are wanting to know if your code can be improved well it can a bit. Personally I would have done your problem 1 as follows. initval = 3:3:100; for qno = initval F = fsolve(@D10P1,qno); end But then I don't knwo what D10P1 is or what F is being used for as far as I can tell it isn't used so could also be removed. 
Sorry, I didn't want to bombard you guys with a wall of text but I suppose it would be helpful to know those things. Here are the function files: %Function file for D10P1 function qn=D10P1(q) V=.0015; a=1.68*10^-7; alpha=(3*V)/(4*pi*a^3); qn=(3*q(1))/(3+alpha*(q(1)^2))-tan(q(1)); %Function file for D10P4 function M=D10P3(D) data=xlsread('diff_data.xlsx'); t=data(:,1); V=.0015; a=1.68*10^-7; alpha=(3*V)/(4*pi*a^3); initval=3:3:100; %for loop to sum over all the roots for k=1:length(initval) qno=initval(k); F=fsolve(@D10P1, qno); numerator=6*alpha*(alpha+1)*exp(-D(1)*F^2*t./(a^2)); denomenator=9+9*alpha+(F^2)*(alpha^2); end M=data(k, 2)-(1-sum(numerator/denomenator)); I know that they're a bit messy, I could have used global for some of my variables. The issue is that running fsolve with D10P3 to get D returns the initial value which it shouldn't and I'm not sure why. The second issue is that running the two nested for loops to solve for model uses the first time point for the first iteration and then the second time point for all other iteration (I believe). Here's my [graph](http://imgur.com/Pi8gs) of my results, the circles are my given and the dashed line is my model. I like the way you did problem 1, its a lot cleaner and easier to see what is going on.
I've never actually used fsolve so take my ideas with a grain of salt but I really like this problem so I am going to try solve it. First you have all your possible solutions to qn. We will save them instead of discarding them. qVals = zeros(1,33); for index = 1:33 qVals(index) = fsolve(@D10P1,index*3); end Lets just try confirm these values first. They are all multiples of pi. That seems important. If we look at eq3 and we known qn = k*pi. tan k*pi = 0. Therefore the other part must be zero as well. 3*k*pi/(3+ 3*V/4/pi/a^3*k^2*pi^2 apart from the common factor of 3 not much to simplify. But it seems like if a is small then it will cause a very large denominator decreasing the final value. Therefore it could be said that it is equal to zero. I guess question 1 therefore checks out. Question 2. We now have a bunch of possible qns and we want to find D. D doesnt change with n so we only need to do fsolve once. We first pass in our old values into D10P3. We also have data in an excel sheet for comparing against. We need to pass in a t and an MMinfi. data = xlsread('diff_data.xlsx'); t = data(:,1); MMinfi = data(:,2); %These are known Mt / M infinite values for t. D0=1*10^-16; D=fsolve(@(D)D10P3(D,qVals,t(1),MMinfi(1)),D0,options); %Horrible anonymous function syntax We then need to modify D10P3. This is where you made a few mistakes notice the sum part at the end and also notice how much quicker it goes. function M=D10P3(D, qVals, t, MMinfi) V=.0015; a=1.68*10^-7; alpha=(3*V)/(4*pi*a^3); numerator=6*alpha*(alpha+1)*exp(-D(1)*qVals.^2*t/(a^2)); denomenator=9+9*alpha+(qVals.^2)*(alpha^2); M=MMinfi-(1-sum(numerator./denomenator)); end Now I don't have your diff_data.xlsx so I can't actually check that this works but I like to think it does. I also do not know where your D0 is from. Question 3 should now be nice and simple. We have are D value we have our qn and we know what t values. V = 0.0015; a = 1.68e-7; alpha = (3*V)/(4*pi*a^3); model = zeros(1,length(t)); for index = length(t) numerator = 6*alpha*(alpha+1)*exp(-D*qVals.^2*t(index)/(a^2)); denomenator = 9+9*alpha+(qVals.^2)*(alpha^2); model(index)=1-sum(numerator./denomenator); end plot(model); Okay that ended up taking much longer than I was expecting. Tell me if it didn't work I like the problem and would like to see it solved.
Haha I'm glad you like this problem. Thanks for your help. I've given the first part, solving for the qn's a try and that looks right. However, I've run the part to solve for D and it returns my Do value (given by the instructor). This is the same problem that I had initially, the value of D should be 1*10^-17. If you're feeling extra bored here's a link to [diff_data](http://www.mediafire.com/?guylztv69vnn3r6), I've got a meeting but I'll look at this more in a few hours.
waterfall(x,y,z) should do the trick. or contourf(x,y,z)
I think these require Z to be size NxN. It sounds like in this case Z is sized Nx1. Two ways to get around this would be: (1) form Z to be NxN when you calculate your probability density so that P(X(1),Y(1))=Z(1,1), P(X(1),Y(2))=Z(2,1), and so on %make sample data N = 100; x = linspace(0,1,N); %size 1xN y = linspace(0,1,N); %size 1XN %form mesh [X,Y] = meshgrid(x,y); %size NxN %calculate Z for the X and Y meshes Z = X.^2-Y; %size NxN %show contour plot figure; contourf(X,Y,Z); (2) or just interpolate existing Nx1 Z onto a 2D grid %make sample data N = 100; x = rand(1,N); %size 1xN y = rand(1,N); %size 1xN z = x.^2-y; %size 1xN %form evenly spaced meshes from random x and y points M = 200; %number of points in new mesh XI = meshgrid(linspace(min(x),max(x),M)); %x mesh, size MxM YI = meshgrid(linspace(min(y),max(y),M))'; %y mesh, size MxM %interpolate z onto XI and YI mesh ZI = griddata(x,y,z,XI,YI); %interpolated z data, size NxN %show interpolated data in contour plot figure; contourf(XI,YI,ZI); edit: Just to be clear, the first method is highly favorable in terms of accuracy and computation time. 
You're right about Z having to be size NxN, this is the problem I am having. Also, Z is a given array that is not calculated from X and Y points. Also, there is a Z value for each given point but the points are only P(X(1),Y(1)) P(X(2),Y(2)), P(3,3) and so forth. There are no cross terms such as P(1,3). With this information I'm still not sure how to work your first method. I tried your second one as well but it seems to give me an odd result with 1 large peak in the middle and nothing else. Would you have any other ideas/tips? Here's a picture of a previous probability density i plotted with Maple. I'm looking for a similar result from matlab. (obviously the style can be completely different but in the picture, the points [X,Y] are marked by diamonds and the probability at each point is Z giving the radius of the circle drawn around the X,Y point) http://i.imgur.com/qK8nH.jpg Essentially what i have is an array of points ([1,3],[5,2],[6,0],...) and an array of probability Z (1,4,7,...) and I want to illustrate the probability density. Thanks for the help!
Here's a quick example I made that will create a density plot similar to the one you uploaded. The function scaledDensityPlot() takes the X, Y, Z values and a maximum scale value RMAX. The results look like [this](http://imgur.com/9umVN). function main %make sample data N = 30; x = rand(N,1); %random x points y = rand(N,1); %random y points z = rand(N,1); %random z points rmax = 0.05; %maximum radius in pixels figure; scaledDensityPlot(x,y,z,rmax); function scaledDensityPlot(x,y,z,rmax) %find max and min z values zmin = min(z); zmax = max(z); %set up circle theta = linspace(0,2*pi,100); xcircle = cos(theta); ycircle = sin(theta); %make plot plot(x,y,'kd','markersize',6); hold on; for ai = 1:length(x) r = (z(ai)-zmin)/zmax * rmax; plot(x(ai)+r*xcircle,y(ai)+r*ycircle,'k-'); end hold off; axis equal 
Okay, this is what I found while I was debugging. I replaced "I" in this line hm2=(.......sound(yy([1:32768],1,2),44100);'); with a number from 1-4 (in this case 2) and got this error message. ??? Undefined function or method 'yy' for input arguments of type 'double'. ??? Error while evaluating uicontrol Callback
A few things I spotted here: 1. What's with your first line? If you want this to be a script, get rid of "function proj". If you want it to be a function, then determine what it should return and what should be the input parameters. e.g. for a function: function [out1, out2] = proj(input1, input2, input3) 2. Your variable names are not descriptive. What is "y" ? What is "yy"? What is "hm1" ? You'll understand your task better if you can come up with compact, descriptive names. 3. Code lines are too long; use "..." to break them up into easier-to-read chunks. 4. For simplicity, restructure your code so that each function is in a separate .m file and you have one script (a runner, main, or what have you) that does all of the more specific things you need and strings together your functions to accomplish your task. A good rule of thumb to think about when writing any code: Functions --&gt; solve general thing Script --&gt; use functions to solve specific thing Good luck! 
Thank you! The reason I used 'y' is because it was something that my professor/team/class is familiar with but I can see your point. I will update the names. Well, the original objective was to have a pop-up menu and have it determine the instrument as you can see. But the thing is that I don't know how to update the choices I make in the pop-up menu. I can do this data=wavread('proj3.wav'); arrangeddata=reshape(y,32768,13,4); pullmenu=uicontrol('Style','Popup','Position',[500 250 100 50],'String','guitar|clarinet|trumpet|tone'); pause;instrument=get(pullmenu,'Value'); Button=uicontrol('units','normalized','position',... [0.6,0.8,0.3,0.05],'Style','Pushbutton','String','B',... 'FontWeight','Bold','BackgroundColor','w'... ,'Callback','sound(arrangeddata([1:32768],1,instrument),44100);'); I can do this, but it selects the value for the instrument only once. I wanted it to refresh everytime I made a new choice and so I researched and came up with the 'solution' that I posted. 
I can't really check too well from my phone, but it's throwing the yy error because your syntax for sound() is incorrect (unfortunately, I can't look it up at the moment). To call things from a cell array, use yy(rowstart:rowend,columnstart:columnend) or if you want to do say, all rows yy(:,columnstart:columnend) and similar for all columns. Hopefully this helps, I can expand more later when I'm not sitting in an airport.
I am pretty sure my syntax for sound is correct. I checked it in other conditions and it pretty much works. The syntax is (sound(array([column_start:column_end],row,dimension/(i don't know what to call it, but this is in case of multidimensional arrays like mine)), sampling speed). Thank you for your help though, and sorry for making your go through this when you are at an airport.
First, the 'pause' that you have in there is unnecessary. Currently, your program (1) loads and reshapes your data, (2) creates a pulldown menu, (3) gets and stores the value of that pulldown menu, and finally (4) creates a button with a callback. Realize that all of this code is executed exactly once at the very start of the program and never again. When you press the button, only the code in the callback is executed and nothing else. Therefore, your variable 'instrument' is never updated. Typically, the callbacks for GUI programming aren't done inline because they get kind of messy. See [here](http://www.mathworks.com/matlabcentral/fileexchange/24861) for a bunch of examples. However, in your case it can be done. You need to move step (3) into your callback function, as Button=uicontrol(... 'units','normalized', ... 'position',[0.6,0.8,0.3,0.05], ... 'Style','Pushbutton', ... 'String','B',... 'FontWeight','Bold', ... 'BackgroundColor','w', .... 'Callback','sound(arrangeddata([1:32768],1,get(pullmenu,''Value'')),44100);'); Note that the double ' ' are a formality required in MATLAB when putting a ' character inside of a string. Now, every time you press the button the callback will get the value of 'pullmenu' and use it to index 'arrangedata' when playing the sound. 
Dude, thanks a [LOT](http://images.cheezburger.com/completestore/2010/11/23/4b38d87f-6909-4bbd-8193-c6edca46c6ca.jpg).
Create a zero-valued vector of length 14400 (one entry per minute) using h=zeros(14400,1). Then add one to the entries during each minute the first user is logged in using h(start_time:stop_time) = h(start_time:stop_time) + 1. Repeat that for every user. Edit: Changed , to : on the right side of the =. I'm using logical addressing to select the elements of the destination vector that are between start_time and stop_time. In this case start_time and stop_time are the "log on time" and "log off time" converted to minutes since midnight.
Right, So as you can already tell I have limited experience within coding. I wrote "I" to simply represent "initial conditions", however looking closer at the problem makes me think the input arguments will be the Ethene concentration in ppm (E), the duration (t) (which will be 12 hours or 720 minutes), and perhaps the time step in minutes (tstep)... I then need to incorporate a for loop so that it will reiterate and create a new value for each time step, however, I don't know if this will work with the approach I've taken thus far. To clarify, The reactions section is simply the layout of each species of each equation (#1-10) in their respective rates of production (+) and consumption (-)... I suspect this could be simplified down, if that makes it easier. aside from that, I'm not sure as to how to implement the next step, which will solve the system of 10 coupled ODE's... It's been suggested to use Euler's method, though I'm not very familiar with coding this either. Ah, yes I know it is a scattered thought process, but if you see any direction with it I'd greatly appreciate any input!.. Thanks again
Wow, this is great!.. I love how comprehensive and strait-forward your approach is.. So when it gets to step 3 you say 1) be sure to recalculate dVdt in each step - is this done automatically with a for-loop with a certain t and time-step iteration? and you say 2) might need to store individual states; I'm not sure how this would be best achieved, any quick clarification? because I would love to be able to plot certain species over time. Also, this is not a math course, rather an Air Quality course taught by a computer programming teacher, who didn't really focus on the programming aspect. Eh, ya and I only really have one Matlab course under my belt, So I REALLY appreciate you taking time to look it over.. Thanks TheTomcat!
Well you tried and its the intentions that counts, so thank you : )
My 'a' is from 0 to 1 where 0 is midnight the first day and 1 is midnight the second day. 'c' is also 0 to 1. This is what I have tried after reading your post, but it only adds 1 to the first 21 values of h. a24 = round(a * 1440) + 1; a24 = a24; c24 = round(c*1440) + 1; c24 = c24; h=zeros(1441,1); h(a24:c24) = h(a24:c24) + 1;
Cool. Thanks for the answer. I was trying to arrange my model so that I wouldn't have to touch anything inside of the stateflow but run multiple signals through it with the mux. I guess you can't do that though.
I assume you have a list comprised of pairs of times, a "log on time" and a "log off time". I don't know the format of the times, so I leave it up to you to convert the times to minutes since midnight. You need to iterate through the list of times. On each iteration add one to the entries in the vector h that correspond to each minute between log on and log off. At the end of the iteration the vector h will have accumulated the total number of users logged on during each minute. h = zeros(1441,1); for i = 1:length(list) a24 = log_on_time(i) converted to minutes since midnight; c24 = log_off_time(i) converted to minutes since midnight; h(a24:c24) = h(a24:c24) + 1; end plot(h);
thank you. i think i have figured it out finally
this might help: http://library.wolfram.com/infocenter/MathSource/577/ and this: http://stackoverflow.com/questions/8507570/porting-mathematica-to-octave
Agreed, you can, but why? 
Well, so far I have; function []=cs151sp121assn12() % Volume of water at the height of the float h = [a b c d]; if h &lt;= 19 v = pi*(12.5)^2 *h; fpirint(cs151sp121assn12) rh = 12.5+10.5/14.*(h-19) if h &gt;= 19 v = (12.5)^2.*19+1/3*pi*(h-19)*((12.5)^2.+12.5*rh+rh^2) else h &lt;= 19 fprint(h) and haven't been able to make it past that and it doesn't do anything. I am really discouraged about the whole problem. I have no real experience programming before hand and this is a class I took to ensure I was attending school full time this semester. I wrote a few m files already and they all worked fine except my graphs a little funky. I need help with functions in general and declaring input/output. I also need help with fprintf and actually running this script in command window. 
To just display it use fprintf: x=exp(1); fprintf('x = %1.6f \n',x) for all numbers just type: format long and all number will have more decimal places
Do you mean repeated values in your index columns? Like, your first column represents "user_id" and has some rows with the same user_id? Because if that's the case, you are supposed to have unique values.. otherwise, the join operation is ambiguous... if you have user "10" repeated twice in both matrices, what do you do? how do u know what row to pair with what? (Also, I saw in your history that you know how to use stata.. if I were you, I would use stata as you just need to write a simple _merge_ command)
There are some Mata tutorials but its kinda hard to use (there are some nice slides from Stata User Group meetings, but its still hard) BTW, I've had good experiences doing this data preprocessing stage in Python, which is quite flexible and may be better than Matlab and Stata. For instance, you should be *very* careful with your memory usage: If you have just one text row with 5000 chars, then both Matlab and Stata (if it could handle that) would have all rows of that variable with 5000 chars. That's a HUGE problem in terms of memory consumption, as something as small as 1m observations ends up as 5 gigas of memory usage for that row. Another advantage of python is the ability to quickly access hashes, use nice regexes, etc., which may come in handy if you are doing textual analysis
404
Lines starting with four spaces are treated like code: if 1 * 2 &lt; 3: print "hello, world!"
In general you definitely wouldn't want to do this in Matlab, but sometimes it could be handy to pass operators as arguments. For example, an alternate version of `sort` could accept a comparison function as an argument. my_sort(vector, @gt); % Sort numbers in ascending order my_sort(vector, @lt); % Sort numbers in descending order 
Please don't ask people to do your homework for you. At least be sneaky about it and properly formulate a specific question yourself.
So far I have: function []=cs151sp121assn12() % Volume of water at the height of the float h = [a b c d]; if h &lt;= 19 v = pi*(12.5)^2 *h; fpirint(cs151sp121assn12) rh = 12.5+10.5/14.*(h-19) if h &gt;= 19 v = (12.5)^2.*19+1/3*pi*(h-19)*((12.5)^2.+12.5*rh+rh^2) else h &lt;= 19 fprint(h) return and it doesnt do anything so i need help through the whole problem. I have done I just dont know how to make it spit out what I need. 
Also here is the "sneaky" version. 1) How do I set up a function with multiple outputs and a matrix of inputs? 2) How do I make the fprint function work? 3) How do I apply the if then sequence with inequalities? 
I'm trying, but can't figure out what you're doing. It sounds, though, like you're trying to implement a JOIN process, using column1 of both matrices as your key. If that's the case, are you looking for something like: d1 = [1 22; 2 33]; d2 = [2 44; 3 66]; and the output would be: 1 22 0 2 33 44 3 0 66 (you mentioned missing values being filled with zeros). Is that what you're talking about? If so (and you have the stats toolbox), check out **dataset** arrays. They have a **JOIN** method already written. Also, check out the **INTERSECT** command. This will tell you the overlapping values in two vectors.
First, sum(x==0,2) will sum the number of zeros in a row. Then you can test if the first element is zero by x(:,1)~=0 and use that to set these elements to zero. So together, it's A=sum(x==0,2) A(x(:,1)~=0) = 0 Edit: oops! I read it wrong, I am telling you the number of zeros (not necessarily consecutive) in a row for each row that starts with a zero.
What you're looking for is referred to in the image processing world as the run length of the leading zeros. There are functions in the image processing toolbox for this sort of thing. However, here's a little trick to get it using the second output from the MAX function: [~,ii] = max(x&gt;0,[],2); % find the first nonzero element in each row, tell me the index numzeros = ii-1; %subtract 1 to convert from index to number of leading zeros
This did the trick, with slight revision, thanks! I knew it was something simple. sum(cumsum(x')==0) I forgot to mention that x could have zeros later on in the row, but they should not be counted if a non-zero appears first. x=[0 1 2 0; 2 2 2 0; 0 0 3 0; 0 0 0 0; 2 0 0 0]; should produce [1 0 2 4 0] 
Have you tried setting the framerate manually (by specifying a number instead of readerobj.FrameRate) instead of using what MATLAB thinks the framerate is? I can't imagine it would make a difference, but it is something to try. Another thing to consider is that MATLAB's movie handling may not be as efficient as other programs. An easy way to test this, assuming you have access to multiple machines with MATLAB, would be to try your code on machines with differing processing power and see if there is any noticeable difference. Unfortunately, I am on travel for the next few weeks and don't have access to MATLAB, so I can't play around with the issue myself.
Thanks for the response! I will try to monkey with the frame rate manually and see if I can get that to change the playback speed. I really don't have access to any other computers with Matlab, that I know of at least. I can try and find one though. I will definitely give changing the frame rate a try though. Thank you. 
That's not even going to touch on what you want to use it for. - Working with the MATLAB user interface - Entering commands and creating variables - Performing analysis on vectors and matrices - Visualizing vector and matrix data - Working with data files - Working with data types - Automating commands with scripts - Writing programs with logic and flow control - Writing functions You're going to be better off on some tutorials on the websites. Or for $1500 I'll buy a round trip ticket to anywhere you are in the states. Spend 3 days teaching you all this. $100 on booze for after the lessons and a $300 hooker. 
I'm pretty sure this is the same as their 3-day course, though it's available for 90 days, so it won't be teaching you a whole lot: http://www.mathworks.com/services/training/elearning/courses/MLBE_3.html
why not put them in a cell matrix / multidimensional array indexed by f and p?
How would I do that? I'm currently creating a 2-dimensional array made of 21 vectors (each subject's result for each test).
Forget that course, you can spend a couple hours learning this yourself using Matlab's help documentation.
Actually, if anybody here has interest in teaching someone how to use MATLAB and lives in the Chicago area, I would be willing to pay $25/hr for private instruction and direction to learn MATLAB in an organized fashion. I just do a shit job teaching myself these things when starting from scratch. The same goes for R, but I'm having a hard time finding people. People with experience in quant finance and/or experience pulling data from Bloomberg through both R and MATLAB are preferred. 
Critics may call this a hack, but you be the judge. Use VLC as the video player and manipulate/control it using its [command line functions](http://wiki.videolan.org/VLC_command-line_help). Make a batch file of commands and you should be all set. If you still want to command this with matlab, use the [system](http://www.mathworks.com/help/techdoc/ref/system.html) command. I see commands here to set the start time and stop time of a video and pause playback. Let me know how this works out.
Well, first off, your function has no input. You need to have something like: function functionnamehere(input) Your next step would be to find the maximum number of iterations your for loops are going to be. Simplest way to do this is to use numel() to find the number of elements in your input matrix. Your first for loop runs through the input numbers to see if any are negative or cause the tank to overflow. If it finds one of these, it prints the error message and quits the program before doing any computations. If none of these invalid inputs are found, proceed to the next for loop. The next for loop will handle the rest of your calculations. You will need a couple indicies to help organize your results, let's say j and k. J will be the number of inputs above 19, and K will be the number of inputs below 19. This second for loop will go through each input and see which ones are under/over 19, increment the appropriate index, do the appropriate calculation, and store the result in a matrix to access in the next part. Once this loop has completed, you need to display your results. I really don't want to do your homework for you, and this should be more than enough to lay out your program. Quite frankly, figuring out how to lay out your program is a much harder problem than actually coding it. Use the built in help to see the appropriate syntaxes for the commands you need to use.
1) This is *not* a matrix problem, unless I am seriously herp-derping here. So you're just psyching yourself out by trying to go down that route. 2) In my experience with numerical methods classes, he wants you to pick any function your heart desires for f(x) (I wasn't 100% sure but it sounds like this is the part you're really hung up on?). So you could have f(x) = x^2 , or f(x) = exp(x)--to name two simple examples. From what I recall I was given some really nasty-looking function with exponentials inside of trig functions, opportunities for divide-by-zero, etc, to work with for these kinds of problems.
I'm not really sure how much more I can say without stepping into "doing your homework for you" territory. At the risk a tad too much though, I'll say that it sounds like you're not as lost on this as you think you are, and from what you're saying you probably *are* just getting mindfucked by being presented this next to a bunch of vector-heavy stuff. Also read the reply I wrote to myself, I had more to say but wanted to keep my main reply focused on your actual questions.
Ha, well, the point was to you feel better about derping by suggesting that I have previously derped worse. :p
Hmmm... we have done functions before and I can do a separate mfile and just recall it in the one where I'll display the outputs, but I'd rather have the loops in the same one just to keep things less complicated. Thank you so much for your replies! I will try picking something cubic out of my old calculus book and then try to find the roots that way. The only problem I can think of right now is how I would do the k+1 and k-1 values so I can combine them with the k values all in the same function where I will recall all the results of the loop... actually I think I can. Too bad I have Dynamics and Mechanics of Solids to worry about as well otherwise I'd spend a good portion of the weekend perfecting this problem.
The function you're passing in is probably of the form: syms x; f = sym('tan(x) - x'); So create something like 'test.m' that builds that function and calls your secant function with 'f', 'x1', 'x2', 'n'. In 'secant.m' you have something like: function [root] = secant(f, x1, x2, n) syms x; root = 0; for i = 1:n # a bunch of code to do the secant function using 'subs' to substitute in values like newx = subs(f,x,x1); x0 = x1; x1 = newx; end root = x1;
Well it explicitly tells you not to use a vector to store the root. Just keep 3 variables: x1, x2, x3. Use a loop to find x3 as a function of x1 and x2. Use a for loop to n iterations. Since you get a function handle input use feval to evaluate the function. Oh and don't forget to update x1, x2, x3 before the next iteration.
Happy I could help. I don't think I'm overstepping by saying the following as parting comments though: first, I strongly suspect that this has become a case where you're getting psyched out by trying to make the problem harder than it actually is, at least in part due to initial problems at figuring out what the problem actually *is*. I know because I myself reflexively make things harder than they really are all the time. I strongly recommend doing something else for the rest of the night, or just going to bed if this is the final thing you're working on for the night, because I suspect that you've driven yourself to the point of no longer being able to think rationally about this problem. (Also curious, are you an engineering student or a physics student?) Second, as you noted, this is a case where calling outside functions is overkill and writing a script is just fine. If you find yourself with extra time you might play around with things like prompting/accepting user input, though. "Enter the single-variable function you want to solve using the secant method as a function handle", "enter your first two guesses", those kinds of things. P.S. Seriously though, Google function handles in Matlab, they are distinct from the .m function files you're talking about. Besides being good for readability and reduced possibility for mistakes in bigger projects, if you've ever used Mathematica, function handles will be a lot closer to what you'd expect "functions" to mean.
Only thing that would make you proficient is practice. The course you mentioned may help you in getting started though. If your company is paying for it, I'd say go for it. If you are paying out of pocket, there are so many resources on the mathworks page. The doc/user's guide is a good place to start. This has some starting videos and links. http://www.mathworks.com/academia/student_center/tutorials/launchpad.html For image processing, first read the getting started section of the image processing toolbox. Try out their examples Go through the demos. Find some recorded webinars related to image processing on the mathworks page. That should give you enough to get you started on working on your problem. 
Thanks for the response, I appreciate it immensely. We found a few options via [Matlab Answers](http://www.mathworks.com/matlabcentral/answers/33923-automatically-play-video-using-implay-function). That we are going to try and play around with. If none of those work we will probably try your method out. The problem is that we are running all of our data collection equipment via an external trigger from Matlab and it would be simplest and easiest (theoretically) to use the video player in Matlab. The data collection and video playback have to be synced perfectly for the experiment to be most sound. So we would like to avoid using another app, VLC player, as part of the process. Like I said though if all else fails this might be the way we have to go, if so I will surely let you know how it works and I may have more questions for you. Thanks again for your help!
Is it creating some sort of metadata file along with the output file? [Mathworks documentation](http://www.mathworks.com/help/toolbox/images/ref/dicomwrite.html) towards the end seems to refer to writing some metadata. Not sure if that is in the original file or a separate file. Separate files are often used for crazy formats. I'm not particularly familiar with that file format and don't have an example on hand, so I can't test it. Link an example file and I could take a closer look.
Why use an incredibly inefficient symbolic function when you could just use a function handle? i.e. f = @(x) tan(x) - x;
So what is your question? Or do you just want someone to do it for you? I can give you some hints. 1 Y = X(X&gt;=0) % creates a variable 'Y' with all the values in X &gt;= 0 2 sprintf('Value : %.2f\n',X); %prints the value in X with 2 decimals and a line change 3 find(a&lt;=x) %different approach to the same problem as in 1. 
fprintf is used for printing formatted text either to the command window or to a file. Its sister, sprintf, does the same exact thing, but gives her output to a string (character array). When using fprintf, you tell him "Hey, fprintf, I want you to print out some stuff. Here's the general gist of it, with some placeholders/blank spots. I'll tell you what to put in those blank spots in a minute. OK, here is that stuff. Please format this stuff as specified by the placeholders. **an example** A = 'monkeys'; B = 42; C = 3.141592654; fprintf('I really like %s. \n\n I wish I had %d %s, in fact. \n Most people only know pi as %5.2f. I prefer %12.9f. \n-----THE END------\n', A, B, A, C, C) I really like monkeys. I wish I had 42 monkeys, in fact. Most people only know pi as 3.14. I prefer 3.141592654. -----THE END------ So you gave it the big string with %s, \n, %d, %5.2f, % 12.9f. This stuff is described in the documentation for fprintf. %s means "Yo, dawg, I hear you like strings so Ima give you a string to put in this string right here." \n is code for "new line." %d is for an integer. %f is for a floating point. %5.2f means "floating point in a 5-character width field with 2 digits after the decimal." %12.9f is 12 total width with 9 digits of precision. I hope that helps.
Got it. In case someone's interested: [x1,x2]=meshgrid(-10:1:10, -10:1:10); s=0.5; % variable slope sigma=s*x1 + x2; for i=1:1:21 for j=1:1:21 if (sigma(i,j)*x1(i,j)&gt;0) x1dot(i,j)=x2(i,j) x2dot(i,j)=-2*x1(i,j)+2*x2(i,j) else x1dot(i,j)=x2(i,j) x2dot(i,j)=3*x1(i,j)+2*x2(i,j) end end end quiver(x1,x2,x1dot,x2dot)
I prefer hints because I actually have to know this stuff for tests and midterms and whatnot. Will use these tips to make another attempt and will post once finish. Thanks, I've posted before and people just commented on how they thought I wanted them to just do it but it's really for clarification of what I'm trying to do. Either way, I'll have what I wrote up for review in a few hours. Thanks again. 
if you're using the `text()` function to add it to the graph, just capture the handle, then use `delete()`: `&gt;&gt; h = text(x,y,text_to_plot);` (save frame) `&gt;&gt; delete(h)` If you are using some other function, it probably has similar behavior.
When you go to run your final program, you're going to type something like assn6([12 13 15 16 13]) into the command line. If you were to go with what you've written down, you would get an error because your function has no idea what a-e are since they have not been defined anywhere. Going with the first line you've got, that matrix [12 13 15 16 13] will be defined in your function's workspace as h, which you can then use for the remainder of the function. To expand on this slightly, if instead you change your first line to function assn6(thisreallylongvariablename) And type that same first command into the command line, your function will now have that matrix defined as thisreallylongvariablename in the workspace, which you can use for the rest of your commands. For example, if you were to just have function assn6(thisreallylongvariablename) test = numel(thisreallylongvariablename) as your function and type assn6([12 13 15 16 13]) in the command window, you would get test = 5 as an output. &gt;If you review the link the bottom page shows how the output should look. I know what the assignment says. While I will gladly help talk you through the various parts of the problem from a basic programming standpoint and how to translate that into MATLAB, I am not willing to just give you the answer.
That was extremely helpful, if only my TA could explain it that well. Thank you.
Actually, better yet (for speed), instead of using delete, you can change the text string and position in the loop using the set command. For example, for just changing the text in the loop: set(h,'string','The string for this iteration');
I got the impression the xy coords were changing too. but `set` can probably change those as well.
Yea, I was just lazy and didn't feel like setting up the syntax and commenting on alignment etc.
In this particular situation, you are looking for the index of the Max number. A = Max(x); I= find(x==A); That should return the index of the largest number in the array
Handy tip: The max function already gives you the index if you use two output arguments. For example: [~,I] = max(x(:)); will be the same as your code.
No but once you have the index you can look it up in the time vector from ode45
Use randn(), check the function help for info on transforming it to whatever form you need.
Thanks! I am aware of the randn() function, but I am hoping to generate normally distributed random numbers without the use of that function. One of the objectives of this project is do everything using the bare minimum number of built-in functions to show our understanding of all the fundamental concepts.
If you don't want to use randn(), you might want to look at the [central limit theorem](http://en.wikipedia.org/wiki/Central_limit_theorem). Summing a bunch of uniformly distributed numbers will in the limit give you a perfect Gaussian distribution. EDIT: the following code will generate a sequence of M Gaussian distributed values ~N(0, 1), based on summing N uniformly distributed values. N = 10; M = 100; data = sqrt(12) * sqrt(N) * (sum(rand(N,M)) / N - 0.5); Generating values according to a different mean and variance can be done by transforming the data according to what austinEd mentioned.
that wouldnt be a normal distribution as that would just generate 1000 values between 0 and 1/1000, plus the normal distribution is only asymptotic to zero as it travels away from the mean.
I believe you can just add some random numbers to generate something approximately gaussian, but im failing to find an explanation right now. (see nxdnxh below, just beat me to it! ;)) Or if you want something more mathematically rigorous: http://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform EDIT: more info at http://stackoverflow.com/questions/2325472/generate-random-numbers-following-a-normal-distribution-in-c-c
Have you looked into the function gauspuls in the signal processing tb? http://www.mathworks.co.uk/help/toolbox/signal/ref/gauspuls.html
1) inputdlg returns a cell. 2) You never check it again in the while loop. 3) Look at this: http://pastebin.com/9a3u7HMY
When your function is, for example, sinc(pi * n * T) then you have to multiply it by 1/T in order to normalize the maximum signal amplitude to 1. 
I think I understand this now guys! thanks ! 
got it just set y = exp(-((t-mean).^2)/(2*stdev^2)) = 0.5 where (t-mean) = -0.15e-6 and solve for stdev! :D
You make a function that takes in x y z and spits out dx dy dz then run that through ODE45. EdiT: Took all of maybe 2 minutes to run. Appears to be a mobius strip looking thing. I'd suggest looking for an ODE45 tutorial it's pretty straight forward.
Read the MATLAB documentation on [FILTER()](http://www.mathworks.com/help/techdoc/ref/filter.html). It describes the algorithm it uses and gives an expression you can implement. y(n) = b(1)*x(n) + b(2)*x(n-1) + ... + b(nb+1)*x(n-nb) - a(2)*y(n-1) - ... - a(na+1)*y(n-na) For a FIR filter, you only need the b terms. For IIR, you also need to include the a terms. More information on linear time-invariant filters [here.](https://ccrma.stanford.edu/~jos/st/Filters_Convolution.html) 
Nope, it's your homework. It's literally 5 lines. 1st one is the "function" line. Second one has all he constants, the other 3 lines has al of your equations. Look how to use ODE45. Edit: With below just realized I replied to someone that wasn't the OP. Either way, it's not a difficult problem.
In reddit, the * will italicize anything between the asterisks. Notice the lack of any asterisks and the ubiquitous italics? This forum is problematic.
Just email your professor and tell them that your dad died this week, and you'll hand in what you've got but it's going to be a bit shit, and a bit incomplete. They'll completely understand, and probably tell you to take some time off.
[Piesewisefun.m](http://pastebin.com/yzKS1PTS) Task 2: fplot(@Piecewisefun,[0 30]); xlabel('t'); ylabel('f(t)'); [Piecewisefun2.m](http://pastebin.com/dhaebtGa) I'm really shocked (In a good way!) that they're teaching logicals. So much code would run faster if everyone did this.
Yeah, I told all my professors, but this one wont let me because its such a large class. It kind of frustrated me. Im gonna keep asking :(
lol i hate matlabb!!! ahahah I did the function file a bit different, seperating all the peicewise parts into their own, so its simple and disp it as one...but it didnt work :( Let me try your code. Yeah our teacher is big on logicals like its his left nut. 
xxx = find(t==mON); yyy = find(t==mOFF); Should do it.
Yup that works, sometimes basics are forgotten on my end (sometimes often). I knew it had to be easier than a for loop. Thanks a lot. QATC
Thanks
I'm sorry for your loss, but it is no excuse for academic dishonesty (and probably not the best way to honor someone's memory). You should simply ask your professor for an extension, as is standard in essentially every university, they will be required by university policy to honor your request (so long as you can provide some sort of proof). Look, an academic career is usually four or more years. It is extremely common to lose a loved one during that time, which is why there are standard procedures for dealing with it. Cheating (which is what you are trying to do with this post) is an unacceptable solution. If you represent someone else's work as your own, and get a degree based on it, then you will be falsely representing yourself to the world. Furthermore, you will be disrespecting the other people who were in a similar situation to your, but who played by the rules. **tl;dr:** If you really want to honor your father's memory, find a way to do your work honestly.
how about using curve fitting toolbox (cftool)?
I completely agree with your and [filleaufish's advice](http://www.reddit.com/r/matlab/comments/rti50/need_to_finish_this_project_by_tonight_did_it_all/c48oyl3), but I think your tirade is unnecessary and unsympathetic. Academic integrity is important, but the OP lost their parent and the amount of work they're discussing is incredibly minute (*one part* of a single homework assignment in an introductory course), it does not warrant such stern condescension. I'm sorry for your loss, OP, and know how hard it can be to get your work done with so much on your mind. Best of luck.
and offer to provide documentation. Explicitly say that you are grieving and are not capable of devoting your attention to this assignment at this time. It is not an unreasonable request, no matter what their policy says about 'no exceptions, ever'- this is an exception- period
It was just part of the assignment. They just wanted you to spit out a flag based on the range of the input.
Dude, seriously, if you're dad died they'll make concessions. The Department Head should work with you and the professor to either grant you more time, or come up with an alternative assignment to make up for lost credit on this incomplete project. I don't really see how the size of the class affects the professor's willingness to work with you, unless he just doesn't believe your story, which is entirely possible. If both the professor and dept head ignore you go to the Dean.
I know it may sound very accussational right now and it IS pretty sick. If it were not such a large class or you knew your professor better you probably wouldn't need to do this, but it's kind of standard for a school to require some kind of proof, in which case a copy of the death certificate would suffice. Good luck to you and I'm sorry for your loss
&gt; I'm trying to create a curve through the data that has a maximum in the center, despite the fact that the data is not at maximum in the center. Then it looks like your data is really wrong, or your model is. I plotted your data and its very clearly two distinct peaks. I don't know how you could get a fit that had a good residual that was only one peak.
you can also fit your data using the nlinfit (nonlinear fit) function. I have done this recently to model some data in a 4 parameter logistic fit, and it was pretty easy.
So, you want to fit it to something like a quadratic or a gaussian and report that it doesn't fit? If it doesn't fit, why fit it? I guess I don't understand what your goal is... You said you are trying to fit a cauchy distribution. But your data doesn't match a cauchy distribution.. How could you get it to fit? Regardless, I wrote this up just now. I didn't test it so I have no idea if it works, but it can't work anyway on your data, so who cares. Here's the function to fit a cauchy distribution using the kernel trick. function [x0 g]=fitcauchy(x,y) %y=(1/pi) g / (x-x0)^2 + g^2) %use the kernel trick %pi ((x-x0)^2 + g^2) y = g %pi ((x-x0)^2 + g^2) y - g = 0 %pi (x^2 + x0^2 - x x0 + g^2) y - g = 0 %pi x^2 y + pi x0^2 y - pi x x0 y + pi g^2 y - g = 0 %(x0^2) pi y + (g^2) pi y - (x0) pi x y - (g)1+(1)pi x^2 y = 0 %[x0^2 g^2 x0 g 1] [(pi*y) -pi*y -pi*x*y -1 pi*x^2*y] = 0 %this is the kernel domain linear fit x=x(:); y=y(:); %form the kernel domain data matrix A=[pi*y,-pi*y,-pi.*x.*y,-ones(length(x),1),pi*x.*x.*y ]; %solve the null space [U,S,V]=svd(A); r=V(:,end); x0=r(3)/r(end); g=r(4)/r(end); end
I tried the tolerence, but it was the opposite of what I thought it was. Lesson learned: When working with an asymtote, higher accuracy works better b/c w/o the higher accuracy the graph moves about the line, causeing the computer to want to monitor this movement better, and creating more steps.
Thanks for the input. The variables are readings (local binary patterns) from the face, and I hope to separate them based on gender. Edit: the variables don't directly relate to intuitive and I was hoping that the clustering algorithm would demonstrate the closeness to each of the two clusters automatically. Does this make sense?
Sort of. It sounds like you are trying to test the similarity between 2 'clusters', for which you want a Wilcoxon signed ranks test or Freidman two-way analysis of variance by ranks. The first is performed in Matlab with the function [ranksum](http://www.mathworks.co.uk/help/toolbox/stats/ranksum.html). The second with [friedman](http://www.mathworks.co.uk/help/toolbox/stats/friedman.html). I have not used either in Matlab (I have in IBM's SPSS) so will not be able to help you with them, sorry!
If you are referring to .m files, there is "Publish" button that will export it in .html file. If you use the code folding, e.g., %% title It will create that as an item in the table of contents and change the font type, etc in the .html file for easier code navigation.
I don't know what you mean in the second half (complete MATALB noob), code folding?
Publishing is awesome. It'll also do pdf, you just have to set up the options. You run publish "&lt;file&gt;.m" and it'll do everything for you. Put output after the code that generated it, plots, everything. Before I learned LaTeX I'd do my entire homework assignment in a .m file press "publish" and out would come the pdf that I'd turn in. - http://www.mathworks.com/videos/matlab/publishing-matlab-code-from-the-editor.html - http://www.mathworks.com/help/techdoc/ref/publish.html Personally I prefer LaTeX and just use it from the LaTeX side include the .m file and dump my plots to eps files, but that's for newer homework where I need to put a ton of equations.
In matlab when you start a line with % that line is commented out and does not do anything. When you start a line with %% that line is still commented but it also provides you a way to divide your code into sections. There will be a + or - next to this line, if you click it, it will hide all the code in that section. It just helps visually clean up your .m file if you have a lot of things going on. So if you have a section of code you aren't working with, you can do this to "fold it" and you wont have to look at it, but it will still be there and run as normal.
you can publish to latex and then use \usepackage{fullpage}
Thanks for the quick response. I have never used latex, can you point me to a good compiler or what ever it is I need for it? Or just a general link for some good info would be appreciated. Thanks. windows 7 64 bit if that's needed, 
Is it a requirment that you read it using fgetl,textscan etc? Otherwise Id just call it *.m and run it :p
What this guy said. That's just standard m file notation.
Oh man. I should've realized that. Thanks, works perfectly now!
Sure thing. PS: for future reference, you could get rid of some of that if-statement stuff by indexing into a cell array. For example: function announceNumber(digString) % for each digit in the digit string, apply sayDigit, which says the digit aloud arrayfun(@(x) sayDigit(x), digString); end function sayDigit(digit) soundFiles = {'sounds/zero.wav' 'sounds/one.wav' ... 'sounds/nine.wav'}; % get the sound filename [wav, sr] = wavread(soundFiles{str2double(digit)+1}); % say it sound(wav, sr); end should do roughly the same thing. 
ALSO: the highest value in my matrix is 255, even though I know there are points past this value AND there are many duplicates. Does anybody have any ideas? 
What is the range of the data 0 255? What accuracy of fit? Is it closed or open surface? What have you tried?
Let X denote the dataset. First, translate X so that the mean of X is 0. Next compute the singular value decomposition of the translated dataset. The top k singular vectors will give you the dimension k subspace which minimizes squared distance from the datapoints. One can prove this using the usual min max relationships for svd.
So I'm guessing you're familiar with simultaneous equations but maybe not with matrix algebra... the two are just different ways of phrasing the same problem: if I have n equations and n unknowns then I can work out what the unknowns are (it gets a little more involved but that's the basic concept). If you're interested, here's an intro to linear algebra - the first video will be plenty of you just want a quick overview. * [MIT OpenCourseware - Strang - Linear Algebra](http://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/video-lectures/). To implement this in MATLAB, Hevace's explanation is good. For some more involved detail, try these: * [MATLAB/Moler textbook, ch2](http://www.mathworks.com/moler/lu.pdf) * [MATLAB Basics video - solving linear equations](http://blogs.mathworks.com/pick/2007/09/13/matlab-basics-video-solving-linear-equations/)
Yep. Skip the symbolic library and just but this all into a vector. You'll be doing 1000x1000 (Do not recommend this) and matlab will have the answer out before you can blink. 
I dont think so since the info in the struct is given? Each movie has one struct and the country name is a string
So if I get an .m file with the above information stored, would it need to be a function in order to be called in my script? Or how would I call it in order to save the inputs in my script? Edit: Figured i can jsut call it in the script and they'll be saved. Any idea how to get comments from an m file to print later?
For each structure run a for-loop determining which 'countryX' fields are empty. This assumes that a movie will never have a filled matrix where there is not a country. Just as a guide, it'll be something like this (inside a for-loop to get it to run for all the movies): if isempty(Country2) ~= 1 Number_Of_Countries = Number_Of_Countries + 1; end if isempty(Country3) ~= 1 Number_Of_Countries = Number_Of_Countries + 1; end Etc. up to however many countries (I assume you know this - if not make it iterative). To save time, you could get it to stop checking a structure when it hits the first empty countryX field - assuming the filled in fields will always be first (before any empty countryX fields).
i don't really know what a struct database is supposed to be but i can try to give you some code you can use. maybe it's not the best solution but you can derive some information. list=zeros(1,length(movies)); for i=1:length(movies) curmov=movies(i); for n=1:11 if isempty(curmov.(['country' num2str(n)])) break; end end list(i)=n-1; end [maxNoCountries movieNo]=max(list,2); the only thing i can really emphasize is the usage of strings in (...) for indirect indexing in a structure array. otherwise, i think in this case many ways lead to rome and you don't really have to vectorize anything.
I use the 'handles' structure. I add fields to it with data I want to share, then save it using the guidata(hObject, handles) call. Or you can also use 'setappdata' and 'getappdata'. Read more [here](http://www.mathworks.com/help/techdoc/creating_guis/f5-998352.html) Watch [this](http://www.mathworks.com/matlabcentral/fileexchange/8616) for an example
super! thanks!
If you know they're going to be at the top of the file, then `text = help('thescriptfile.m')` should work. Otherwise you can just read each line and see if it starts with `%`
Thanks! the num2str is awesome and saved me so many lines! The function you gave keeps giving me an error Error using max MAX with two matrices to compare and two output arguments is not supported. Error in problem141 (line 20) [maxNoCountries movieNo]=max(list,2); Why is it giving two matrices?
Hey I took your advice, how does this look? list=zeros(1,length(movies)); highest = 0; for i=1:length(movies) curmov=movies(i); for n=1:11 if isempty(curmov.(['country' num2str(n)])) break; end end Nocountry = n - 1; if Nocountry &gt;= highest Nocountry = highest; list(i)=n-1; end end [maxNoCountries movieNo]=max(list,2); movieNo = answer;
yeah, i'm sorry. it was a typo. as 9000rpms said: use the documentation. matlab's doc is great and extremely helpful in many ways. as to your code: it looks good to me. one thing: you should use either the "highest" counter or the list. the list offers you possibilities if you want to use other data later, e.g. average number of countries, minimum etc. the counter you used is straight to the point, which is also good. maybe as a training think about the following. in your case every movie had 11 fields for countries which were empty, if the movie wasn't produced in that many countries (btw: i live only a couple of minutes away from where inglorious basterds was shot in germany-everybody was very excited). now if i was the one writing such a database, i would have a variable number of country fields. in this case our implementation wouldn't have worked and you would use fieldnames(movies(i)) and then count the appearances of the word "country". or maybe there would've been another way. anyway, i'm glad i was able to help.
Alcebiades' answer is right on for the first part. Can you clarify your second sentence?
Suppose your matrix, A, is 10x10 define a new, anonymous function: myFunc = @(a,b) sum(sum(A(a-1:a+1,b-1:b+1))) This creates a function within your code (don't need a separate file for it) similar to what Alcebiades suggested. You can call like so: myFunc(3,3) and this will output the sum of the 3x3 matrix centered around A(3,3). You'll get an error if you do myFunc(1,1) though because the index will be out of bounds. We want to apply myFunc to every element of A except the first and last rows and columns. We can use arrayfun for that. It applies a function to every element of an array. In this case, we will be passing in the indices of A (the pair of values a and b) on which to apply myFunc. We can either use the sub2ind/ind2sub functions to extract them, or we can define them directly: i = repmat(2:9,1,8); j = kron(2:8,ones(1,8)); Now, [i ; j]' is a list of index pairs. We can pass the i and j vectors into arrayfun: B = arrayfun(myFunc, i,j); You can then reshape B to match the form of A. Alternatively, you can define the original function as myFunc = @(a,b) sum(sum(A(a:a+2,b:b+2))); This will make some things easier for you. 
Just google it or look at matlab help. They are built in functions.
Type doc kron or doc repmat in the command prompt to learn more and get examples
ok i understand it now but i was wondering if there is a way to do this without using arrayfun? I want to understand the logic behind it thanks as in how to formulate the code
You could convolute a 3x3 matrix of ones with your original array. This will produce a new array (with two extra rows + two extra columns - you could use the 'same' optional input to make it the same size as the original array) that contains the sum of all the 3x3 kernels. Let A be you array. B=conv2(A,ones(3)); For more info, see: [http://www.mathworks.co.uk/help/techdoc/ref/conv2.html](http://www.mathworks.co.uk/help/techdoc/ref/conv2.html)
do you have an idea how you could do this like B=conv2(A,x) with x being variable for every element in A?
ode45? What are you trying to do.
indexes start at 1, not zero. edit for clarity: do your for loop from 1 to 5 and start your x-naught at x(1).
ahh. thanks!
I think that makes sense. If I'm understanding correctly, the summing junction is basically gone since there is actually no signal being summed along with the loop, correct? So there actually is not feedback in that dynamics/stabilization loop... is that correct?
Fairly certain MATLAB doesn't support that actually. It supports text buttons, and you can modify the colour of said button but I don't think you can import a picture for it. 
I think you've got it, or at least are on the right track. Check out the matlab help for rlocus. There are a couple diagrams...the one you're interested in is the one with G, F, and K. It's analogous to your system.
Well, I was hoping to actually understand sparse matrices...when possible I prefer to understand the tools I'm using. And add to that the frustration I described about how I feel like I'm just one "click" away from getting this...I'd honestly be less frustrated if I just had no idea whatsoever what was going on here. Good to know that I have that to fall back on just using the Matlab commands and trusting in the all-knowing deities at MathWorks, though...I think I didn't look at the Matlab documentation until AFTER I'd driven myself nuts looking at those sparse matrix papers and thus didn't quite understand that you didn't have to know anything about sparse matrices to be able to use the sparse matrix commands. Thanks for the tip.
Like this: A = (x &lt; 11000) .* myequation(x) + (x &gt;= 11000) * 216.66 Try to use truth-valued operators with vectors, you'll see what I mean.
Thanks, I saw stuff online but could not understand what they were typing.
(x &gt;= 11000) creates a logical array. A bunch of ones and zeros. Play with a very small matrix to get to understand it. A=[1 2 3 4 5 6 7 8 9 10]; B=(A&lt;5).*5 + (A&gt;=5).*A There are dozens of ways to do it: A=[1 2 3 4 5 6 7 8 9 10]; l=(A&lt;5); B(l)=5; B(~l)=A(~l); A=[1 2 3 4 5 6 7 8 9 10]; A(A&lt;5)=5;
Can you index with logical arrays? Don't you have to use find? I.e. A=[1 2 3 4 5 6 7 8 9 10]; l=(A&lt;5); B(find(l))=5; B(find(~l))=A(find(~l)); A=[1 2 3 4 5 6 7 8 9 10]; A(find(A&lt;5))=5;
Did you try the code? Edit: Even the M-code editor tries and correct you. 
I wouldn't have suggested it if it didn't work. No, you don't have to do it matlab is pretty bad ass.
is it because the first line is printed on the &gt;&gt;? A copy and paste into pastebin would go a long way.
 load population12.mat Everything is in X and Y.
Hey your absolutely right and it loaded the tables so nicely. So now I have: y1 = pop12.Y x1 = pop12.X xmean = mean(x1) xsum = sum(x1) xlog = log10(x1) n = length(x1) and need to start applying that crazy equation. I know it will have to be ordered nicely and need some help just translating exactly what operations go first. 
This code just finds all the .dat files in the current folder, copies them to a .m file and runs them. I havent setup anything to extract the variables out and store them though. function convert_file_and_run close all; clear classes; clc; % Find all files with .dat extension R=dir('*dat'); NOF=length(R(:,1)); for i=1:NOF TEMP=R(i).name; ST=length(TEMP)-4; X{i,:}=TEMP(1:ST); copyfile([X{i,:} '.dat'],[X{i,:} '.m']) run([X{i,:}]) end 
I would also be interested in a more accessible paper / presentation
I had use this to understand how it was stored and it made perfect sense when I used it: http://www.mathworks.com/help/techdoc/matlab_external/f21585.html#f47606 
Thanks for posting an update
[somewhat relevant](http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags)
Wow.. I dont' know what I just read, but my eyes are bleeding. Thanks for the morning laugh!
Is it automatically unstable if it never crosses 0dB?
http://regexpal.com/
I understand what you're saying about finding the stability using the root locus but I didn't quite catch your meaning with that first sentence. Why am I setting margin equal to something and what am I setting it to ? Create a body with the margins?
I noticed that, fixed both. Thanks for the help :)
When you type, [Gm,Pm,Wg,Wp] = margin(Kp*Num,Den) you receive data when you type, margin(Kp*Num,Den) Matlab will create a bode plot and plot the margin data on the plot. This will help you determine what's going on and you will see why you have inf gain/phase. 
doing invfft(fft(a).*fft(b)) is doing circular convolution of a,b. Unless you make sure the length of your ffts is &gt;= (filter length + signal length -1), you end up with overlap in the circular convolution. wiki on circular convolution: http://en.wikipedia.org/wiki/Circular_convolution
http://www.mathworks.com/matlabcentral/answers/789-using-find-in-a-3d-matrix-in-matlab found it. 
G = tf(num,den); Gcomp = tf(num,den); totalSystem = feedback(Gcomp * Kp * G,1); %Assuming you know the compensator transfer function margin(totalSystem) %bode plot with margins. Add [] = margin to get data. 
We're also working on R and NumPy/SciPy, and those have obviously proven to be easier to distribute access to. MATLAB is also being covered simply because of its still high usage rate. I haven't had much experience with Octave; how's the development on it these days? Believe me, I'd be elated if everyone switched to using open tools . . .
So the answer is [r c v] = ind2sub(size(A),find(A==1));
As a clone of Matlab, Octave would be quite useful for learning how to program. It has the same syntax, so switching to Matlab later on is almost costless. For instance, the guys at the ml-class.org (Andrew Ng, et al) used that in their course
So, to clarify, you want every combination of 1s and 0s that can go into a 3x3 logical matrix? 
&gt; I'm asking if any of you has any insight about why it's hard/broken and maybe any clever workarounds. As for workarounds, you already mentioned myaa. Personally I use export_fig since it fits my figure creation process better. As for the 'box on' bug, I think it's to do with the opengl renderer rather than the linesmoothing hint.
For figures for papers I inevitably export to eps or ai and tweak in Illustrator. I'm okay with that part-- I think that maybe I'm just finding the ghetto default rendering to be offensive when you compare to the default rendering in something like Mathematica these days. Mathematica used to be the ugliest thing going and somehow they cleaned up their design. I guess in everyday usage (within a Matlab session) I wish that the plots weren't as much of an affront to graphic design. The new Matlab Plot Gallery shows all the different kinds of plots that are possible, but the defaults (lineweights, font size, lack of anti-aliasing) underline some of what's missing with the fit &amp; finish of this product, especially if you compare to something like Mathematica's current plotting defaults. I know I'm nitpicking as I can fix all of these problems for publication, but for everyday use (I take data with Matlab &amp; do most of my analysis/calculating with it) I see pretty bad things happening within a session unless I go out of my way to fix them. 
I kind of like it the way it is. Plot viewing can already get slow with a lot of data points on the graph (if I had to guess, I'd say speed is why anti-aliasing isn't in MATLAB yet--lack of UI responsiveness is aggravating). I get a fast, relatively ugly version live. If I want it to look nice I can export it as EPS.
The basic method is to take the numbers from 0 to 2^9 - 1=511 and express them in binary. Then map these 9-digit binary numbers to 3x3 binary matrices. This is quite easy to do in a 'vectorized' way in Matlab. Here are two approaches: matrices = reshape(dec2bin(0:511,9)=='1', 512, 3, 3); or: matrices = arrayfun(@(n) logical(bitand(n, [1 2 4; 8 16 32; 64 128 256])) , 0:511, 'UniformOutput', false); Here's a version that generates all binary NxN matrices for arbitrary N: N=3; matrices = arrayfun(@(n) logical(bitand(n, reshape(2.^(0:(N^2)-1), [N N]))), ... 0:2^(N^2)-1, 'UniformOutput', false); Finally, for N larger than 4 or 5 you probably won't want to generate *all* the matrices. Instead you can randomly sample them. To generate a single random NxN binary matrix, do: matrix = rand(N,N) &gt; 0.5 To generate an array of M random NxN binary matrices, do: matrices = rand(M,N,N) &gt; 0.5 There are 65536 4x4 binary matrices, 33,554,432 5x5 binary matrices, and more than 10 billion binary 6x6 matrices.
I gave up trying to rollback java update. In my failed attempt, I managed to corrupt the javaVM, so I did what I wanted to avoid in the first place. I reinstalled Mac OSX. Surprisingly, all my documents are intact after the reinstall. I thought i need to backup my data from time machine, but it was all there. I just need to remember never to install java update 7 and 8. Matlab has been working fine so far. 
I had a phone interview with Mathworks, and they asked what I didn't like about Matlab, and one of my answers were "the graphics. vector graphics please, non java!" and they basically said "we're working on that. look for an update soon". 
I'm getting the same thing in R2011a. Submit a [bug report](http://www.mathworks.com/support/bugreports/).
C++? If you're doing loops of any kind, consider doing them through the parallel computing toolbox. This is a question you might just be better off posting on MATLAB's official forum though.
I presume downsampling is out of the question? Have you tried splitting the data into smaller subsets and plotting them on the same axis? Not a perfect solution by any means but it might be less likely to crash. Another possibility is changing the renderer: http://www.mathworks.co.uk/support/tech-notes/1200/1201.html or optimising the plotting: http://www.mathworks.co.uk/help/techdoc/creating_plots/f7-60415.html However this probably wont help if you are using a single plot call. 
Are these Lidar data? Leica's Cyclone comes to mind.
This. You don't plot this much data, ever. You sort it. Plot every 1,000th point.
I would recommend calculating some sort of data density map. Then plot it using isosurfaces. edit: found a link to explain it: http://blogs.mathworks.com/videos/2010/01/22/advanced-making-a-2d-or-3d-histogram-to-visualize-data-density/
Hmmmmm. In this case, it might be a better idea to talk to the company that supplied it. It's going to be a month long process to make sure that the search string actually works with all 1,802 pages of data. I need a raise.......... :(
Colors aren't a problem, in fact I would prefer each data set to be the same color. How would I do that?
Thanks for the help.
If you have access to a *nix command line you can try it. http://stackoverflow.com/questions/1271222/replace-white-spaces-with-a-comma-in-a-txt-file-in-linux
I was able to remove all the whitespace and replace with commas, using the sed command. Now, the only concern is what data inporting command I should use. dlmread is only useful for numbers textread requies that the number of output variables matches the number of delimited entities in the text file, I believe. That's not happening. Any recommendations?
Hmm, so I wrote my x0 wrong. We havent really gone over the unique input, but to delete reapting values, would I just do ZerosOfFunction = unique(zero) after the loop. Wait no, that will just give me 1 value. Sort(zero)..let me try that :D
wait...shouldnt one of the zeros be 0 itself? since we are going from 0 to 2? 
Are all the columns always the same thing? Text, Number, Number, Text, Text, Number? scanf.
It's one image, but with pixel dimensions of 2 mm by 5 mm (256 pixels by 44 pixels).
No overlap.
One last question: Is each voxel one data-point (e.g. one activation value) and to simply be represented as one colour? 
Exactly.
Ok. Well I think this is the best solution for you: 1. First, create a 3D array where each voxel value is 2x2x5. So voxel 1 is data(1:2,1:2,1:5) = Vox1value 2. Order the voxels in the way they should be represented 3. Then create the image surf(data) or however you are doing it. This with give your voxels in the correct proporition to each other 4. Export as an EPS (set to high dpi, do you know how to do this?). This means the image becomes a vector and will scale correctly. 5. Import into Illustrator or other graphics program and adjust until the entire image is the correct size. Did this help?
This was helpful indeed, thanks.
I did not know about saveppt2, this thread was already a good idea. 
It's very easy in matlab. For a 2d array, try imagesc(a,b,I) where 'a' and 'b' are the x and y axis delineations. e.g. a=1:4; b=4*(1:4); C=rand(4); imagesc(a,b,C); axis image;
matlabfrag. best tool ever if you export to latex
This is exactly what I was looking for!! Thanks!
they're different formats, float vs integer. try truncating your A'*A matrix with round(A'*A)
thank you so much!
The difference is that you are looking at 6 digits when MATLAB has actually about 15 digits stored. So the 1.00000 you are looking at could easily be 1.000000000002 which is obviously not equal to 1. Additionally, in MATLAB it is rarely appropriate to use equality because in numerical calculations there is always a possibility of some error creeping in the last few digits. So instead what you should do is set some tolerance that you are okay with, and use this for comparison. tol = 1e-5; if all( abs( A'*A - I ) &lt; tol ) %then they are the same else %they are different end EDIT: Also, to see all the digits, try fprintf('%f\n',A'*A);
this is my attempt, but I get error LOL * reply1 = input('Please enter a value from the Matrix shown above:','s') * for r = 1:Data(1:6,1:6) * if reply1 = r * disp('This integer is in the Matrix') * else reply =/= r * disp('This integer does not exist') * end * end
 help find
[I'll show myself out](http://cdn.memegenerator.net/instances/400x/18877556.jpg)
Not trying to be flippant, but you should really go to office hours. By my count, you have at least 3 serious flaws in your program logic, and several more flaws in the syntax. I can try to explain all of them, but I think it would be better if you had someone explain in person so you can ask questions back and forth. It's an intro class, so they are expecting people to need office hours, especially if you miss class. And most professors will be too happy knowing you are actually trying to learn to be upset that you missed class.
I love it!
As a lisp programmer my Matlab already had a strong Lisp accent - you can definitely push the language in that direction. 
In case you want to avoid for-loops and have unique colors: m = 20; t = linspace(-pi/2,pi/2,100)'; [n,Bigt] = meshgrid(1:m, t); x = cos(Bigt).^n; y = sin(Bigt).^n; % plotting hf = figure; axes('parent', hf, 'ColorOrder', jet(m*4)) hold on plot(t,[x -x y -y]) 
'a' would need to be -inf. Log-spaces generally don't go to zero, they just approach it. I would generate a log space that has a "width" of 1, and then adjust it so that the start point is 0. 
That definitely helped, except the image it produced looks like this http://imgur.com/lXQlI And it only prints one image, and i was hoping it would print one each ''generation'' Here's the code as it stands now (without comments). Thanks for your help! for i = 1:5 G = [1 1 1; 1 0 0; 0 1 0] n = 23; X = sparse(n,n) X(11:13,11:13) = G n = size(X,1); P = [1 1:n-1]; Q = [2:n n]; Y = X(:,P) + X(:,Q) + X(P,:) + X(Q,:) + X(P,P) + X(Q,Q) + X(P,Q) + X(Q,P) X = (X &amp; (Y==2)) | Y == 3 imagesc(X) set(gca,'XGrid','on','YGrid','on') axis equal end 
I'd recommend using "pcolor" and set the "edgecolor" to none.
search for npermutek
Having no idea what Lisp is (until I google it, of course), I keep imagining that you're coding with a lisp.
I got a quick and dirty version of your table using sortrows and fprintf: x=input('Set: '); a=perms(x); b=permute(a,[1 2]); c = sortrows(b); % print out the table fprintf('|\t%d\t|\t%d\t|\n-\t-\t-\t-\t-\n|\t%d\t|\t%d\t|\n=\t=\t=\t=\t=\n', c')
I've actually tried using scatter3 and can't seem to get it to work (sadly the best I've managed by that method is a single point). My data is a &lt;320x128x125 double&gt; where each point has it's own intensity, can scatter3 be used for that? I had come to the conclusion that it could not, but I am no expert yet.
Also look into having the alpha of a voxel vary with its intensity if you're trying to highlight hotspots. That way high intensity would obscure low intensity but not vice versa.
Do you have an example of what you might want it to look like? Did you check out isosurface?
this is what I was looking for, thanks for the help!
Do you mean this one? F*air*Tg-(1/Rg)*(Tg-Ta))/Cg]; I'm not sure, I thought semicolons were supposed to go after most statements.
I mean.... do you bother reading what matlab is telling you? Error: File: f.m Line: 39 Column: 42 Unbalanced or unexpected parenthesis or bracket. If you click on the link it gives you it takes you directly to line 39, column 42 where there is an extra parenthesis hanging out. The code editor even highlights it in red. Count your opening and closing parenthesis. Make them match. Tada. The code runs.
[varycolor](http://www.mathworks.com/matlabcentral/fileexchange/21050) is perfect for this. 
I'm sorry, I didn't mean to ask a stupid question, i'm just really inexperienced with matlab and my professor didn't mark down any errors for my first submission so I was just really lost and panicky as to why it won't run. I've never coded before and it really intimidates/frustrates me, especially since I thought most of it was okay. I know this will improve with practice as do all things, but it really doesn't make sense to me at the moment. Thank you though for your help.
&gt; I was just really lost and panicky as to why it won't run. It told you in red letters why it wouldn't run.
z needs to be numerical. It's the values at t(0).
Okay, I think I get that now. I need a certain amount of hours per day used in this model, so I input that for z. And for Ts and Tg, I can just leave it as: Ts = T(;,1); Tg = T(; 2); I would think? I got rid of the plots at the bottom, I don't think they are going to do any good. Thank you again for all your help, I know i'm a noob.
How's something like this: Initialize the universe plot before the for loop and hold it [r,c] = size(universe); %# Get the matrix size figure imagesc((1:c)+0.5,(1:r)+0.5,universe); %# Plot the image colormap(gray); %# Use a gray colormap title('Generation = 0') axis equal %# Make axes grid sizes equal set(gca,'XTick',1:(c+1),'YTick',1:(r+1),... %# Change some axes properties 'XLim',[1 c+1],'YLim',[1 r+1],... 'GridLineStyle','-','XGrid','on','YGrid','on'); hold on and then start your for loop and after finding the new universe, within the for loop do imagesc((1:c)+0.5,(1:r)+0.5,universe); %# Plot the image str = sprintf('Generation = %2d',i); title(str) pause(.25) end hold off 
Awesome, thanks for the info.
I already have the edges. Matlab has a function for that. Now i need to get the tangentbat each point in the image
I'm not completely sure, but I think what you are describing is called a Bresenham line, and there are some straightforward implementations on Wikipedia.
You might use the [Sobel](http://en.wikipedia.org/wiki/Sobel_operator#Formulation) operator on your original image. This will give you the size and direction of the gradient at each pixel location. Knowing the direction allows you to draw a line tangent to the edge.
Thanks that looks promising. Now I just need a way of finding the [adjacent pixels](http://i.imgur.com/bZdYQ.png). (yellow in image)
I have something very similar (brief stimuli, 100 ms each, want record keypress for accuracy and RTs). I do use KbCheck in a while loop. If that's not what you want, feel free to disregard this comment. In my while loop, if keyIsDown, I save a variable "gotResponse." This is set to 0 before the trial starts, and changes to 1 if there is a key down. Instead of using WaitSecs I use a frame duration to time when the window flips. The code below has been checked such that it displays and records timing accurately. My basic framework would look like this: for t = 1:12 if gotResponse == 0 % big if loop: only show stimuli if no response yet Draw(stuff) [vbl, sTime, lastEventTime] = Screen('Flip',w,vbl+frameDur) if t == targetFrame timeTargetOnset = vbl; % if it's the target frame, save time of flip end exitTime = GetSecs+frameDur; while GetSecs &lt; exitTime [keyIsDown, responseTime, keyCode] = KbCheck; if keyIsDown gotResponse = 1; response = find(keyCode); response = response(1); t = 12; % if you want to stop the display after a response break; while KBCheck; end end end % while response loop end % if no response end % for t display loop Then, while the blank screen is up after the trial, I have a similar loop: while gotResponse ~= 1 [keyIsDown, responseTime, keyCode] = KbCheck; if keyIsDown gotResponse=1; response = find(keyCode); response = response(1); RT(trial) = round(1000*(responseTime - timeTargetOnset)); % RT in ms end end Hope this suits your needs. Feel free to PM me if it doesn't make sense. (And sorry for the shit formatting...)
What version of Matlab were you using (I'm trying to decide whether to install the Java update). I found [this](http://www.nesono.com/node/360) which suggests it is only older versions.
2010a
Pendulum is technically a more challenging problem as you need to understand mechanics to do it, or at least you should understand the mechanics of it. If you buy one of the supported boards it's relatively trivial to hook up (like the slow cooker) and just try things out. With the slow cooker you simply read the temp and send a signal to turn the cooker on/off depending on the temp. Not only will this get you started on Simulink but you may get ideas of how to do something cool with it that is actually useful in real life.
I think you need to explain your problem a bit better. The example you gave doesn't makes sense (cos(x)=2 ???) Anyway, if you are trying to solve a generic problem you can define a function of a vector k = [a,b,x,...], and a result vector n=[1,1,.5,...], so f = @(x) [x(1)*sin(x(3)),x(2)*cos(x(3)),cos(x(3)), ...] , then use fsolve or fmincon to solve for f(x)-n=0
yah sorry, I was just typing out random formulas. I'll try this.
I have a result 1.0000 0 0 0; 0 0.0000 1.0000 3.0000; 0 -1.0000 0.0000 2.0000; 0 0 0 1.0000; and it is equal to [ - 1.0*sin(theta6)*(cos(theta1)*sin(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta1) + 0.00000000000000006123233995736766035868820147292*cos(theta4)*sin(theta1) + 0.00000000000000006123233995736766035868820147292*cos(theta5)*(sin(theta1) + 0.00000000000000006123233995736766035868820147292*cos(theta1)*sin(theta4) + 3.7493994566546441699929521964488*10^(-33)*cos(theta4)*sin(theta1)) + 0.00000000000000006123233995736766035868820147292*sin(theta5)*(cos(theta1)*cos(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta1)*sin(theta4))) - cos(theta6)*(1.0*sin(theta5)*(sin(theta1) + 0.00000000000000006123233995736766035868820147292*cos(theta1)*sin(theta4) + 3.7493994566546441699929521964488*10^(-33)*cos(theta4)*sin(theta1)) - cos(theta5)*(cos(theta1)*cos(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta1)*sin(theta4))), 1.0*sin(theta6)*(1.0*sin(theta5)*(sin(theta1) + 0.00000000000000006123233995736766035868820147292*cos(theta1)*sin(theta4) + 3.7493994566546441699929521964488*10^(-33)*cos(theta4)*sin(theta1)) - cos(theta5)*(cos(theta1)*cos(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta1)*sin(theta4))) - 1.0*cos(theta6)*(cos(theta1)*sin(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta1) + 0.00000000000000006123233995736766035868820147292*cos(theta4)*sin(theta1) + 0.00000000000000006123233995736766035868820147292*cos(theta5)*(sin(theta1) + 0.00000000000000006123233995736766035868820147292*cos(theta1)*sin(theta4) + 3.7493994566546441699929521964488*10^(-33)*cos(theta4)*sin(theta1)) + 0.00000000000000006123233995736766035868820147292*sin(theta5)*(cos(theta1)*cos(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta1)*sin(theta4))), 0.00000000000000006123233995736766035868820147292*cos(theta1)*sin(theta4) - 3.7493994566546441699929521964488*10^(-33)*sin(theta1) + 3.7493994566546441699929521964488*10^(-33)*cos(theta4)*sin(theta1) - 1.0*cos(theta5)*(sin(theta1) + 0.00000000000000006123233995736766035868820147292*cos(theta1)*sin(theta4) + 3.7493994566546441699929521964488*10^(-33)*cos(theta4)*sin(theta1)) - 1.0*sin(theta5)*(cos(theta1)*cos(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta1)*sin(theta4)), 0.00000000000000006123233995736766035868820147292*cos(theta1)*sin(theta4) - 1.0*sin(theta1) + 3.7493994566546441699929521964488*10^(-33)*cos(theta4)*sin(theta1) - 1.0*cos(theta5)*(sin(theta1) + 0.00000000000000006123233995736766035868820147292*cos(theta1)*sin(theta4) + 3.7493994566546441699929521964488*10^(-33)*cos(theta4)*sin(theta1)) - 1.0*sin(theta5)*(cos(theta1)*cos(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta1)*sin(theta4)) - 1.0*d3*sin(theta1)] [ cos(theta6)*(cos(theta5)*(0.00000000000000006123233995736766035868820147292*cos(theta1)*sin(theta4) + cos(theta4)*sin(theta1)) + sin(theta5)*(cos(theta1) + 3.7493994566546441699929521964488*10^(-33)*cos(theta1)*cos(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta1)*sin(theta4))) - 1.0*sin(theta6)*(0.00000000000000006123233995736766035868820147292*cos(theta1) - 0.00000000000000006123233995736766035868820147292*cos(theta1)*cos(theta4) + 0.00000000000000006123233995736766035868820147292*sin(theta5)*(0.00000000000000006123233995736766035868820147292*cos(theta1)*sin(theta4) + cos(theta4)*sin(theta1)) + sin(theta1)*sin(theta4) - 0.00000000000000006123233995736766035868820147292*cos(theta5)*(cos(theta1) + 3.7493994566546441699929521964488*10^(-33)*cos(theta1)*cos(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta1)*sin(theta4))), - 1.0*sin(theta6)*(cos(theta5)*(0.00000000000000006123233995736766035868820147292*cos(theta1)*sin(theta4) + cos(theta4)*sin(theta1)) + sin(theta5)*(cos(theta1) + 3.7493994566546441699929521964488*10^(-33)*cos(theta1)*cos(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta1)*sin(theta4))) - 1.0*cos(theta6)*(0.00000000000000006123233995736766035868820147292*cos(theta1) - 0.00000000000000006123233995736766035868820147292*cos(theta1)*cos(theta4) + 0.00000000000000006123233995736766035868820147292*sin(theta5)*(0.00000000000000006123233995736766035868820147292*cos(theta1)*sin(theta4) + cos(theta4)*sin(theta1)) + sin(theta1)*sin(theta4) - 0.00000000000000006123233995736766035868820147292*cos(theta5)*(cos(theta1) + 3.7493994566546441699929521964488*10^(-33)*cos(theta1)*cos(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta1)*sin(theta4))), 3.7493994566546441699929521964488*10^(-33)*cos(theta1) - 3.7493994566546441699929521964488*10^(-33)*cos(theta1)*cos(theta4) - 1.0*sin(theta5)*(0.00000000000000006123233995736766035868820147292*cos(theta1)*sin(theta4) + cos(theta4)*sin(theta1)) + 0.00000000000000006123233995736766035868820147292*sin(theta1)*sin(theta4) + cos(theta5)*(cos(theta1) + 3.7493994566546441699929521964488*10^(-33)*cos(theta1)*cos(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta1)*sin(theta4)), 1.0*cos(theta1) - 3.7493994566546441699929521964488*10^(-33)*cos(theta1)*cos(theta4) - 1.0*sin(theta5)*(0.00000000000000006123233995736766035868820147292*cos(theta1)*sin(theta4) + cos(theta4)*sin(theta1)) + 0.00000000000000006123233995736766035868820147292*sin(theta1)*sin(theta4) + d3*cos(theta1) + cos(theta5)*(cos(theta1) + 3.7493994566546441699929521964488*10^(-33)*cos(theta1)*cos(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta1)*sin(theta4))] [ - 1.0*cos(theta6)*(cos(theta5)*sin(theta4) + sin(theta5)*(0.00000000000000006123233995736766035868820147292*cos(theta4) - 0.00000000000000006123233995736766035868820147292)) - 1.0*sin(theta6)*(cos(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta4)*sin(theta5) + 0.00000000000000006123233995736766035868820147292*cos(theta5)*(0.00000000000000006123233995736766035868820147292*cos(theta4) - 0.00000000000000006123233995736766035868820147292) + 3.7493994566546441699929521964488*10^(-33)), sin(theta6)*(cos(theta5)*sin(theta4) + sin(theta5)*(0.00000000000000006123233995736766035868820147292*cos(theta4) - 0.00000000000000006123233995736766035868820147292)) - 1.0*cos(theta6)*(cos(theta4) - 0.00000000000000006123233995736766035868820147292*sin(theta4)*sin(theta5) + 0.00000000000000006123233995736766035868820147292*cos(theta5)*(0.00000000000000006123233995736766035868820147292*cos(theta4) - 0.00000000000000006123233995736766035868820147292) + 3.7493994566546441699929521964488*10^(-33)), 0.00000000000000006123233995736766035868820147292*cos(theta4) + sin(theta4)*sin(theta5) - 1.0*cos(theta5)*(0.00000000000000006123233995736766035868820147292*cos(theta4) - 0.00000000000000006123233995736766035868820147292) + 2.2958450216584676330897554137354*10^(-49), 1.0000000000000000612323399573677*d3 + 0.00000000000000006123233995736766035868820147292*cos(theta4) + sin(theta4)*sin(theta5) - 1.0*cos(theta5)*(0.00000000000000006123233995736766035868820147292*cos(theta4) - 0.00000000000000006123233995736766035868820147292) + 1.0000000000000000612323399573677] [ and I'm trying to solve for the variables like theta1 theta2 d1 d2 etc... you don't know which command might clean this up might you?
Put the coefficients into a vector, say z. Find a matrix A such that Az = M, where M is the matrix that you already have. Then get z = A^(-1)B, where B is the solution matrix that you already have.
In addition to this, these instructions should help too: http://xcorr.net/2010/05/07/getting-gcc-to-work-with-matlab-r2009b-on-linux-ubuntu-karmic-to-compile-mex-files/
Going to wing this one from the example, but: T-T04=0; rref([T-T04 0]); highlight each row, solve(paste row, variables you want to solve for?)
OK, firstly matlab sucks. It really fucking sucks - especially on linux and this is one of the most important reasons why. Secondly, providing you never need to use any i/o it's fine. Just ignore the warning and do not include &lt;iostream&gt; or &lt;stdio&gt; or &lt;fstream&gt; in your c file. Thirdly, if you do need to use input and output then there is a work-round using LD_PRELOAD, but this stops input and output to and from the standard streams working with matlab. You will still have file access, and you can print to screen using mexPrintf though. I will edit this post when I get into work with a copy of the magic incantation that works on fedora. I think I'm using 4.6.* so you may have to alter it a little. Edit: Here we are. Put this in your ~/.bashrc and run matlab from the command line. &gt; export LD_PRELOAD=/usr/lib64/libstdc++.so.6 Although, in your case it should probably be &gt; export LD_PRELOAD=/usr/lib/libstdc++.so.6 
The tangent line is incredibly unstable, and probably not very useful. Although I don't know what you're doing, have you tried [HOG](http://en.wikipedia.org/wiki/Histogram_of_oriented_gradients)?
hm I get the error ??? Error using ==&gt; char Conversion to char from logical is not possible. Did I setup the variables in correctly?
Matlab can't solve an overdetermined equation system using solve, you get the warning "Warning: 2 equations in 1 variables. ". The correct format is solve('eqn1','eqn2',...,'eqnN','var1,var2,...,varN') But since they both equal zero you can make it into one equation instead: &gt;&gt; a = solve('-1.0*d3*sin(theta1)=d3*cos(theta1)-1', 'd3') a = 1/(cos(theta1) + sin(theta1)) b = matlabFunction(a); &gt;&gt; b(1) ans = 0.7237 
thanks! got this to work. 
damn, this was just a build up to me trying to solve 6 equations simultaneously.
You need to create axes for each image. Then use 'imread' and 'image' functions to display the picture as shown [here](http://www.mathworks.com/help/techdoc/ref/image.html).
Look up [mpd](http://mpd.wikia.com/wiki/Music_Player_Daemon_Wiki) and [mpc](http://mpd.wikia.com/wiki/Client:Mpc) then you can do things like: !mpc play
Possible other options: you could use the system function to send commands to a command line media player, or use tcp to control a network media player, backed up with a simple matlab gui. Edit: looks like ocran beat me to it :)
I found one! It's an older thing in Psychtoolbox but really cool - it's a set of functions using KbQueue. You "open" a keyboard queue, and you can even set it to look for only specific keys. The queue does nothing until you tell your program to start looking for responses (KbQueueStart) and from then until you give it 'KbQueueStop' it will record *every key that is pressed*. After you give KbQueueStop you run KbQueueCheck to pull out ALL of the keypresses. Then you can flush the queue and start over on your next trial. It's awesome. Here's some documentation: [Psychtoolbox docs](http://docs.psychtoolbox.org/KbQueueCreate) (same as 'help KbQueueCreate') [A nice step-by-step example from the Harvard scanning wiki](http://cbs.fas.harvard.edu/science/core-facilities/neuroimaging/information-investigators/matlabfaq#miss_responses) 
I am not aware of that, but they do have academically licensed matlabs in the computer labs PCs and presumably they are not limited in terms of block numbers... The thing is that I am now away from uni, in fact in another country. My supervisor is making me use his monstrous .mdl to test a controller I designed but I can't even run the .mdl standalone. Any ideas on how to increase the block number limit?
This will be my last resort.
i would create a single axes for all the images, and then inside a while loop i would execute all the instructions and reload images as necessary something like : while(victory=false) imread(); image(); %do some stuff like calculating damage done by attack or something if(life&lt;=0)%condition to break the loop victory=true; end end %after the loop display a new image for the victory screen imread(); image(); 
I registered on MathWorks website and found spot to put my Uni's licence number in, which allowed me to download academic versions - not sure if they only work on the Uni network with access to the licence server. I generally remote desktop in to my Uni PC - do you have a similar facility? If the student version is limited on block numbers then the straightforward way to remove the limit is to change your licence - but it'll cost! If you want to do it legit then you could contact MathWorks and see if there's another way but they may just say the same. Other option is the aforementioned five finger discount...
Where did you find the uni license entry page? I don't think my uni PCs support remote desktop. 
https://www.mathworks.com/licensecenter
I might be able to download a legit academic copy from this once I get back to uni. Thanks.
mpd can be fairly easy controlled with TCP socket. Python-mpd for example can be used as reference.
Try [inpolygon](http://www.mathworks.se/help/techdoc/ref/inpolygon.html), it does just what you want.
No I haven't looked into it. I don't think that's what I'm looking for though. Thanks anyway!
If you're working in industry, you're not allowed to use the student version of MATLAB. Make your work pay for a real copy for you to use.
This is what I came up with. The problem now is that the equation doesn't seem solvable. &gt;&gt; clear all &gt;&gt; syms r_star r_d musp mutp mueff D mua &gt;&gt; r_star = (r_d./1.027).*(0.4306./(1-0.5544.*r_d)) r_star = 2153/5135*r_d/(1-693/1250*r_d) &gt;&gt; r_star = subs(r_star, r_d, musp./((mutp + mueff).*(1 + 6.5014.*mueff.*D))) r_star = 2153/5135*musp/(mutp+mueff)/(1+32507/5000*mueff*D)/(1-693/1250*musp/(mutp+mueff)/(1+32507/5000*mueff*D)) &gt;&gt; r_star = subs(r_star, mueff, sqrt(3.*mua.*mutp)) r_star = 2153/5135*musp/(mutp+3^(1/2)*(mua*mutp)^(1/2))/(1+32507/5000*3^(1/2)*(mua*mutp)^(1/2)*D)/(1-693/1250*musp/(mutp+3^(1/2)*(mua*mutp)^(1/2))/(1+32507/5000*3^(1/2)*(mua*mutp)^(1/2)*D)) &gt;&gt; r_star = subs(r_star, D, 1./(3.*mutp)) r_star = 2153/5135*musp/(mutp+3^(1/2)*(mua*mutp)^(1/2))/(1+32507/15000*3^(1/2)*(mua*mutp)^(1/2)/mutp)/(1-693/1250*musp/(mutp+3^(1/2)*(mua*mutp)^(1/2))/(1+32507/15000*3^(1/2)*(mua*mutp)^(1/2)/mutp)) &gt;&gt; r_star = subs(r_star, mutp, mua + musp) r_star = 2153/5135*musp/(mua+musp+3^(1/2)*(mua*(mua+musp))^(1/2))/(1+32507/15000*3^(1/2)*(mua*(mua+musp))^(1/2)/(mua+musp))/(1-693/1250*musp/(mua+musp+3^(1/2)*(mua*(mua+musp))^(1/2))/(1+32507/15000*3^(1/2)*(mua*(mua+musp))^(1/2)/(mua+musp))) &gt;&gt; solve('2153/5135*musp/(mua+musp+3^(1/2)*(mua*(mua+musp))^(1/2))/(1+32507/15000*3^(1/2)*(mua*(mua+musp))^(1/2)/(mua+musp))/(1-693/1250*musp/(mua+musp+3^(1/2)*(mua*(mua+musp))^(1/2))/(1+32507/15000*3^(1/2)*(mua*(mua+musp))^(1/2)/(mua+musp)))-r_star=0',mua) Warning: Warning, solutions may have been lost ans = -1/115559067*musp*(-6459000+6864468*r_star+48789689*3^(1/2)*(-1570153857/3926820196*r_star*3^(1/2)-51141285500/1008211085323*3^(1/2)+37507/4032844341292*(4156778871716835*r_star^2+2630883264516000*r_star+166874724000000)^(1/2)))/r_star -1/115559067*musp*(-6459000+6864468*r_star+48789689*3^(1/2)*(-1570153857/3926820196*r_star*3^(1/2)-51141285500/1008211085323*3^(1/2)-37507/4032844341292*(4156778871716835*r_star^2+2630883264516000*r_star+166874724000000)^(1/2)))/r_star 
I try so very hard to worry about corporations and their profits but I just cannot bring myself to give a fuck.
MPD seems like a good solution, but does it require Linux? From what I've read it seems like it does. I have to do this project on Windows computers.
There is a WAY faster algorithm. This one is O(n^2 ) theres one thats O(n log n).
Looks like it might [compile](http://git.musicpd.org/cgit/avuton/mpdclient-win32-env.git/). I am sure there are other options out there, such as [Winamp](http://nunzioweb.com/daz/docs/Command%20Line%20Options.html) or [Foobar2000](http://wiki.hydrogenaudio.org/index.php?title=Foobar2000:Commandline_Guide) which looks like a much better option that winamp.
I don't have much experience for this sort of stuff, so I'm hoping to find a prepackaged solution. Would Foobar2000 be directly controllable from MATLAB? Or is there a plugin that would enable it? 
Off the top of my head while mobile: in the for loop do h(p) = plot(x,f) then outside the for loop do something like legend({h},{cell with legend names}) or something of that ilk. Point is you have to grab the handles and feed that to label.
Here you go... clc clear all close all x=linspace(-5,5,200); nx = length(x); figure hold all for p = 1:4; for jj = 1:nx f(p,jj)= (2./sqrt(pi))*(1./x(jj))*quadl(@(t,p) exp(-p*t.^2),0,x(jj),[],[],p); end legend_name{p} = ['p = ',num2str(p)]; end plot(x,f) axis([-5 5 0 2]) xlabel('x') ylabel('Function') legend(legend_name)
We ended up doing something along these lines: &gt;&gt; im1 = imread('waterfall.jpg'); &gt;&gt; im2 = imread('whiteFlower.jpg'); &gt;&gt; figure; &gt;&gt; subplot(3, 3, 2); % makes a 3x3 grid of potential plot locations, and makes the second one active (middle of top row) &gt;&gt; imshow(im1); &gt;&gt; subplot(3, 3, 4); &gt;&gt; imshow(im2); &gt;&gt; subplot(3, 3, 6); &gt;&gt; imshow(im1); &gt;&gt; subplot(3, 3, 8); &gt;&gt; imshow(im2); Thanks though!
Got a reference? I've read some brief pieces about sorting but never got deep into it. Big fan of brute force, cheap CPU cycles, but am getting into some heavy simulations that are benefiting from a little optimisation!
Sweet. To the library! Ok, the Internet. 
not sure. I'm not familiar with what kinds of inputs net can take, but if you can vectorize that loop, that'll speed it up a bit. You can also just call tic before the loop and toc after it. That'll speed up that loop a tiny bit.
This is more of a math problem than anything. Number of downs and number of rights have to both equal 10 and the second half is just the mirror of the first. 0011 0101 0110 1100 1010 1001
l=cell(0); l=[l {sprintf("This is legend %i",p)}]; legend(l)
Check out your axes, see how they don't have the same scale? Matlab does that to make your data easier to see and interpret. It's not so good for visually showing differences in scale, though. The command you're missing is "axis equal". Run that after your patch command to tell all of the axes to use the same scaling factor. If you're going to be rotating your image, you could use "axis vis3d" after "axis equal" to lock the aspect ratios.
You could try using the nntool or the nprtool in matlab. They are GUIs, which hopefully have entirely vectorized code. If that doesn't help, try using this toolbox(Fast ANN). http://leenissen.dk/ 
Thanks a lot guys!
I've always thought the funniest was the one for [cumulative trapezoidal numerical integration.](http://www.mathworks.com/help/techdoc/ref/cumtrapz.html)
I prefer the `why` function, myself.
You should be good if you use {} for your results line instead of []. This will create a cell array instead of a regular array. This bypasses the errors that get thrown when you try and take two different sized arrays and combine them. I'm not sure what's going on in line 61, but I'm guessing that's just reddit converting some multiplication signs to italics.
haha wow thanks. I have a matlab assignment that involves using whatever built in matlab function we want for calculating integral. i'm gonna use this and label my submission cumtrapz.zip 
why?
The bald and not excessively bald and not excessively smart hamster obeyed a terrified and not excessively terrified hamster.
I understand how it works. But I'm not going to read through more than 1 line of code on my lunch break to debug a matlab program when the poster can't figure out pastebin. It happens constantly and there should be big red letters before a self. "PASTING CODE. NO. BAD YOU"
Did you try, I dunno, actually sending something...?
Lol Yes, I finally got it working and for some reason it just wouldnt work in the command line. The second I wrote the actual code and ran it, it read data flawlessly :)
Thank you, so obvious but I completely over-thought that. I was trying to take the data and individual put each data point onto a different point in the image. How would I save a byte array to a file though? I am fairly new to matlab (just started in class a month ago) so the commands don't come naturally yet
 fid = fopen('image.jpg', 'w'); fwrite(fid, data, 'uint8'); fclose(fid); 
Post your code and people can be more helpful. 
I did actually try debugging. It completes the first two lines with no issues, it's only when it gets to the actual rectangle plotting that it starts having problems. I'm still confused on why the plotting works fine outside the function though . . .
I keep getting the error message "Subscripted assignment dimension mismatch at line 26, which is Ya(1,n)=[y1];
Are they linear? Just use rref or A\b. ??? Subscripted assignment dimension mismatch. Error in ==&gt; x at 22 Ya(1,n)=[y1]; 
OMG I WAS USING GOOGLE ALL DAY TO FIND THIS, THANK YOU!!!!!!!!!!!!!!
thank you so much. It worked, altough as you suspected, pretty inefficiently. I'll see if I can improve it though!
&gt; Is it just me or did you define y as a vector, then define it again in the loop as a matrix? What was the point of the first y? You never used it. This is okay--in MATLAB *everything* is a matrix, even a vector. So you can access the first column of a matrix by A(:,1). Basically he's building up a matrix y where the rows are N and C, and the columns are different timesteps, dt apart. 
I think your A matrix is probably not correct. Fixing some of the trivial errors (really, just replacing t=timestep/dt by t(i+1)=t(i)+dt; and plot(t,y(1,:)) instead of all the X and Ya stuff) results in something that blows up. What system are you trying to solve?
And all I saw was a bunch of junk code that wouldn't run as was. And more often than not the people that get the most help in /r/matlab are the ones that also post what they're trying to do. It's the technological equivalent of going: "I can't figure out why my German to English translation isn't working. Can anyone sort this out for me: himomimhavingagreattimeinamericawhendoyouthinkthatyouwillbeabletocomevisitmebecauseitsgreathereamericanfoodtastesgreatrightnowtheyhavedasbootonthetelevision" Look at my history of posting in /r/matlab. I know what I'm doing and it often takes a glance to know what is wrong. But if the code get posts and 1) doesn't work immediately and 2)i don't know what the hell it is supposed to do (hell maybe the assignment was "Make something long that doesn't run") I'm going to post a sarcastic short answer that both doesn't solve their problem but takes a general stab at it. Pastebin or the equivalent should be a very minimum before posting code.
Are you using case structures? http://www.mathworks.com/help/techdoc/matlab_prog/f10-61049.html#f10-61145
If it's all in one file, put it on [pastebin.com](http://pastebin.com/). If it's multiple files, check it into Git and put it on [GitHub](https://github.com/) -- or just do that anyway because you should really be using source control. Do you need to write an AI too, or just a two-player hotseat? 
Thank you so incredibly much! It makes sense, but I feel like it would never have actually occurred to me! 
If you have x = [height vector], and y = [velocity or acceleration vector], you could plot(x(end:-1:1), y(end:-1:1))
Hey, forgive me, I'm on a different account now. Idk how to prove it to you, but I don't think that it should matter anyways. I'll try replacing t. I'm attempting to solve for the function N and C and graph them separately. We will have a varying amount of time steps and dt's which will change the graphs, but I need the base function to work before I can worry about that. 
it doesn't work to change the vectors, because they are always put interms of the other vector, so unless the axis itself is flipped, it is no good.
You can use SET to change the axis directions: plot(x,y) set(gca, 'XDir', 'reverse') Alternatively, you can use PLOTTOOLS to do it. Look in the doc.
d'oh. You're right. Sorry :X
So because the person has a more fundamental misunderstanding than some basic syntax error, they don't deserve help, but do deserve sarcasm and unhelpful advice?
We actually still use this on some of the computers at my work...
&gt;&gt; I get an error when I call 'fun' to fmincon because it is trying to plug in [n1 n2] as the output of the objective function. Well, what is the exact error that you get?
Okay, so the problem goes like this, we have two equations that we need to solve that require the other's answer to be solved. the equations are as follows: dN(t)/dt=(((rho-Beta)/LAMBDA)*(N(t)))+(lambda*(C(t))) and dC(t)/dt=((Beta/LAMBDA)*(N(t)))-(lambda*(C(t))) We decided to split these two equations into two matrices such that the matrix A equals A=[((rho-Beta)/LAMBDA),lambda;(Beta/LAMBDA),-lambda] and that the matrix y equals y=[N,C] thus the initial equations become the following: dy/dt = A * y Now, I'm pretty competent with the math behind all of this, I'm just struggling to solve and plot for N and C individually. Any help would be appreciated! 
Thank you for being agreeable. Idk what it is, but the people that are already familiar with MatLab generally refuse to offer their insight and help. Once again, this is a separate account of my mine, so forgive any confusion that it may cause. 
Try giving the function as a function handle [x, fval, flag, output] = fmincon(@fun,x0,A,b,[],[],[],UB,@nonlcon,options);
We refuse to offer insight and help when the problem is unclear and the code that is given is useless. Use pastebin. Explain what you're trying to do and I have no problem helping.
uhh that is really messy and cant seem to edit it well..if anyone wants the mfile i can email it to you.
Glad to see the plots look the same.
I have no idea why they haven't changed this. Matlab is efficient at so many things, but the second plotting is involved the operations take 10x longer. 
Even at the time it had better plotting than excel :/
Ive never done this before, didn't realize it wasn't necessary to compile from xcode as well. Thanks! Here's another question. I am trying to include some external libraries from OpenCV so that I can do Haar detection. The header files are located in /usr/local/include, so in my mex command I added -I/usr/local/include. The libraries are located in /usr/local/lib, so I added -l/usr/local/lib/libopencv_core.dylib -l/usr/local/lib/libopencv_features2d.dylib -l/usr/local/lib/libopencv_highgui.dylib -l/usr/local/lib/libopencv_imgproc.dylib -l/usr/local/lib/libopencv_objdetect.dylib But when I try to run the command in Matlab, it says ld: library not found for -l/usr/local/lib/libopencv_core.dylib collect2: ld returned 1 exit status mex: link of ' "HaarDetection.mexmaci64"' failed. ??? Error using ==&gt; mex at 208 Unable to complete successfully. I checked and rechecked the path. Am I doing something wrong here?
Ermm if you mean the code stuff and how i drew it. It's here: http://pastebin.com/xaMqWsT5
Thanks that works. Do you by any chance know how scale the cube so that I can make it more of a rectangle? I am attemping to build a tennis court using streched out a number of cubes that would probably be stacked onto of each other.
 if (this happens) do this else do something else instead (ignores the first if)
The function loops 100 times, so the first if condition could still apply on the next pass. I need it to do something like: * if (this happens) * do this * else * do something else, never do first condition again.
Also just FYI, you can do save -ascii.
If you're on windows, you can spawn a MATLAB instance through COM. You might also be able to use the undocumented [Java to MATLAB](http://undocumentedmatlab.com/blog/jmi-java-to-matlab-interface/) interface.
I called up Matlab Customer Support. It turns out the license I have (provided by my university) does not give me access to Matlab's runtime compiler, which means that mex isn't going to work properly with external libraries from OpenCV. :( Also, you are correct - the right way is to use -L/usr/local/lib, and to get rid of the lib's before the dylib names (-lopencv_highgui instead of -llibopencv_highgui).
was excited to play with wavplay function, doesn't work on mac :(
Are you sure? I dont really buy that. The "matlab compiler" is for turning m code into external C code. For building a mex function which you are going to use in matlab you shouldn't need anything extra from MathWorks (just your own compiler). Sometimes you get problems linking with stuff that needs different versions from some things included in Matlab core, but generally it is OK... for example you can embed a Python interpreter in a mex function. Also looks like open cv should work: http://whatevericode.wordpress.com/2008/11/13/connecting-opencv-with-matlab-basic/ What errors do you get when you use the correct link line? I am pretty sure we should be able to get it to work with some combination of `LD_LIBRARY_PATH` and `-undefined dynamic_lookup`
The issue had to do with the fact that the compiler is associated with R2007a which is 32-bit, while I am working on a 64-bit machine with 64-bit libraries from OpenCV. They said the only way to get the 64-bit compiler would be by paying for it, but unfortunately my University's license does not provide it for standalone installations. Edit: The error was something like this: 1): Library not loaded: /usr/local/lib/libtiff.3.dylib Referenced from: /usr/local/lib/libopencv_highgui.2.3.dylib Reason: Incompatible library version: libopencv_highgui.2.3.dylib requires version 13.0.0 or later, but libtiff.3.dylib provides version 11.0.0
I think you are confused between Mex and Matlab Compiler... for mex files, which are compiled functions you call interactively from the Matlab interpreter, you do not need anything else. The mex.h and other headers you need should be in /Applications/MATLAB_R2011a.app/extern/include. The 2007 libraries you have under Matlab Component Runtime are something else - they are for compiling matlab code to a standalone executable that others can run without having their own Matlab license. Again - to make a mex function you call from Matlab you do not need any seperate product from Matlab... if you can pastebin your test function I can show you how to compile it probably (but it might be tomorrow now). 
Is the pitch altered? You might be playing at the wrong sample rate.
This is 99.99% a case of wrong sample rate. OP make sure you are using correct sample rate
Hello, woohoo, a question I know how to answer! %open a file to hold the output output_file = fopen ('thedata.txt','a'); % loop to get image files for analysis for images= 1:100 % or whatever filename=sprintf('Image%01d.tiff',images); % the %01d gets changed to whatever images is current_image = imread(filename,'tif'); % do some stuff, e.g. [x y intensity] = impixel(); %put x coordinate into a file fprintf (output_file,'%f', x); fprintf (output_file,'\r\n'); end 
Thanks! I'll try this out later :D
Here's the code: #include &lt;stdlib.h&gt; #include &lt;stdio.h&gt; #include &lt;math.h&gt; #include &lt;vector.h&gt; #include &lt;cv.h&gt; #include &lt;objdetect.hpp&gt; #include &lt;mex.h&gt; #include &lt;matrix.h&gt; using namespace cv; using namespace std; // define haar cascades #define HC_FRONTAL_FACE "/usr/local/share/OpenCV/haarcascades/haarcascade_frontalface_alt.xml" #define HC_EYES "/usr/local/share/OpenCV/haarcascades/haarcascade_eye.xml" #define HC_LEFT_EYE "/usr/local/share/OpenCV/haarcascades/haarcascade_mcs_lefteye.xml" #define HC_RIGHT_EYE "/usr/local/share/OpenCV/haarcascades/haarcascade_mcs_righteye.xml" #define HC_NOSE "/usr/local/share/OpenCV/haarcascades/haarcascade_mcs_nose.xml" #define HC_MOUTH "/usr/local/share/OpenCV/haarcascades/haarcascade_mcs_mouth.xml" void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[]) { // char *input_filename; // char *cascade_identifier; mexPrintf("Number of input arguments: %d\n", nrhs); // mxGetString(prhs[0], input_filename, 8); // mxGetString(prhs[1], cascade_identifier, 8); mxArray *outputRectangles = plhs[0]; // mexPrintf("%s\n%s", input_filename, cascade_identifier); } //CvSeq* HaarDetection(IplImage *img, const char * cascade_filename) { // CvMemStorage *storage = cvCreateMemStorage(0); // CvHaarClassifierCascade *cascade = (CvHaarClassifierCascade*)cvLoad(cascade_filename, 0, 0, 0); // CvSeq* output = cvHaarDetectObjects(img, cascade, storage, 1.1, 2, CV_HAAR_DO_CANNY_PRUNING, cvSize(40,40)); // // cvReleaseMemStorage(&amp;storage); // return output; //} Also, here's what I get in Matlab when I type "ver" MATLAB Version 7.12.0.635 (R2011a) MATLAB License Number: 6****** Operating System: Mac OS X Version: 10.6.8 Build: 10K549 Java VM Version: Java 1.6.0_31-b04-413-10M3623 with Apple Inc. Java HotSpot(TM) 64 Server VM mixed mode ------------------------------------------------------------------------------------- MATLAB Version 7.12 (R2011a) Simulink Version 7.7 (R2011a) Bioinformatics Toolbox Version 3.8 (R2011a+) Control System Toolbox Version 9.1 (R2011a) Curve Fitting Toolbox Version 3.1 (R2011a) DSP System Toolbox Version 8.0 (R2011a) Fixed-Point Toolbox Version 3.3 (R2011a) Image Processing Toolbox Version 7.2 (R2011a) Instrument Control Toolbox Version 2.12 (R2011a) Optimization Toolbox Version 6.0 (R2011a) Signal Processing Toolbox Version 6.15 (R2011a) SimMechanics Version 3.2.2 (R2011a) Simscape Version 3.5 (R2011a) Stateflow Version 7.7 (R2011a) Statistics Toolbox Version 7.5 (R2011a) Symbolic Math Toolbox Version 5.6 (R2011a) 
I use either direct 'imwrite' for images which do not have other plots on top of them or ['export_fig'](http://www.mathworks.com/matlabcentral/fileexchange/23629) with option '-native', this seems to make quite nice and tight outputs. Also if you don't need the axis, you could try axis off set(gcf,'color',[1 1 1])
This is the chief error that occurs with the inclusion of objdetect.hpp. I mentioned it earlier. 1): Library not loaded: /usr/local/lib/libtiff.3.dylib Referenced from: /usr/local/lib/libopencv_highgui.2.3.dylib Reason: Incompatible library version: libopencv_highgui.2.3.dylib requires version 13.0.0 or later, but libtiff.3.dylib provides version 11.0.0 No idea how to go about fixing this.
Ah - this is a classic problem with older matlab shared libs interfering with ones you want to use... you will see there is a libtiff in /Applications/MATLAB_R2011a.app/bin/maci64... `otool -L` on this file will give you the version. So the cleanest thing would be to build opencv against the same version of libtiff that matlab uses - but I'm not sure how easy that would be. More hackish things to try are simply removing libtiff.* from /Applications/MATLAB_R2011a.app/bin/maci64 (definitely keep a backup somewhere!) and possibly replacing them with the libtiff from opencv. Just make sure you have the originals to put back. In my experience Matlab is quite robust to fiddling around like this when necessary so it is worht a try...
What you need to do is add a delay block. This is because exp(-sT) has an inverse laplace xform of u(t-T). In addition, if you look at the taylor series expansion on an exponential, you find that it has an infinite number of poles meaning that it is impossible to represent that system with a characteristic equation or in matlab P/D. I would put in a transfer block with everything expect the exp and then after that connect a CT delay block. That should fix your problem
I usually would use a breakpoint, but this is in a myODE function, so it gets called TONS of times, and only after the Nth time does it give me an error, but the dbstop if error sounds really useful, thanks So I had if length(index) &gt; 1 || length(colArray(index).L) &gt; 1 || length(disc) &gt; 1 ||length(1:(disc-1))*colArray(index).L/(disc-1)) &gt; 1 disp(a ton of stuff) end right before the error throwing line, and that logical never got tripped, which is what's really throwing me off.
The Transfer Fcn block only works with a quotient of two polynomials. If you split up the TF into the polynomial and exponential parts, you can combine them later with a product block. 
Protip: using global in matlab is like setting a beartrap next to your bed. It screwed me up by just ignoring all my global variables when using the parallel-computing toolbox, presumably to prevent unprotected concurrent access (just provide a semaphore ffs). You can't even force the global var to be copied to a thread's workspace, so at least it's global within that subcontext. Not entirely relevant, but in any case: beware the global beartrap.
In such a case, "dbstop if error" should work. Another option is, if you know N, where N is the Nth time it runs, you can place a conditional break point. Right click the "-" sign for the breakpoint click location and say "N == 100" for example. This will work even if you did not have an error
Personally, I think this is pretty bad advice. For example: x = 1.4; y = 1; if (round(x) == y), disp('x == y is true'), end See nextInt's advice on using a comparison with a tolerance.
See the error telling you what line the error is on, and in what function. Go there. Look at the line. Your syntax is incorrect on that line.
try this: A(1:numel(C),:) = B(C,:);
Should be A(C,:)=B(C,:); now?
Hey thanks so much for the response! This worked perfectly, and literally cut the self time of the function in half. 
 for jj=k: % swap rows of a matrix
danke schöne
Upvote for edit
I am assuming you have access to you college library already? They are bound to have couple of Matlab textbooks. Start skimming the books, they usually do a very good job of getting you started. 
Yeah I'll have to go check the library out.
Thanks a bunch.
I think you're the only one that would know the answer to this question, seeing as we couldn't possibly know whether your simulations can be concatenated like that...
Are you sure you are using a Database and not just a matrix/vector? 
If you're running some sort of loop, you can use something like: if mod(i,100) == 0 save('CurrentData.mat', 'data you need to keep each step', 'other data you want') end That way, you're only saving what you need and it saves only every 100 steps. Beyond that, I think I need more info to be of any help. Good luck.
I learned matlab with a specific task in mind. The Project Euler (mentioned by swissmike) is a good start. The only other thing I can suggest is that the help menu in matlab is actually pretty good. In fact, there are even links to other similar functions. As well, there are some whole tutorials on how to do certain things in matlab - right in the help files. Also, learn how to use the scripting language, not just the command line. With the script, you can keep rerunning the same piece of code making small changes and even run only certain pieces in "cell mode." Good luck!
Not to take away from this, but make sure you learn the command line too. Only scripting is taught at my university, and I've run across too many people who hardly even know the command line exists. I've blown some minds when I want to do something like a simple vector multiplication, and do it right at the command line, instead of saving a script. Matlab is very powerful. Don't be afraid to try something that seems hard at first. 
Thank you. Then the next step would be to find the right function.. :) I &lt;3 Control of dead-time processes.. 
Check out fseek: http://www.mathworks.nl/help/techdoc/ref/fseek.html
seeding the random number generator.
We did figure that the seed must have been the same, but we're still curious as to how the same seed was selected. 
may help you: %random data T=[1;1;1]; N=[1;0;0]; %Parametric expressions for plane spanned by T and N funx=@(s,t) T(1)*s +N(1)*t; funy=@(s,t) T(2)*s +N(2)*t; funz=@(s,t) T(3)*s +N(3)*t; ezsurf(funx,funy,funz) %plot 
Thanks for the reply. This wouldn't save me from reading in the whole file in the first place though as far as I understand. Let's say I have a 200MB file of 16 bit integer samples, and I only want to read in the values from sample x until y (being only 2500 samples). From what I reckon I would nonetheless have to read from the beginning of the file, regardless in which interval of the file my samples of interest are. Or am I missing something?
You're not reading from a tape. As long as each sample has an equal length, you can specify to move to a certain specific location in the file e.g. fseek(fd, sample_length*150, 'bof'). This is from the C function http://linux.die.net/man/3/fseek Just try it.
Ah, I think I got it now. I use fopen(fid,...), then fseek(fid,...) to reposition the read-pointer and *then* fread(fid,...) to read the file from the repositioned pointer start until the position I specify. Is that about right? (I initially thought fseek would be used after the reading itself...) . 
That's awesome. You should make sure that it works on octave too, just in case it works too quickly on matlab.
Here's my seed string: RandStream.setDefaultStream(RandStream('mt19937ar','seed',round(sum(clock*1e5)))); If you are running multiple processes at the same time then you might want to add the process id to the rounded clock number (i.e. + getPid) where getPid.c is the following mex function: #include &lt;sys/types.h&gt; #include &lt;unistd.h&gt; #include "mex.h" void mexFunction(int nlhs, mxArray *plhs[],int nrhs, const mxArray *prhs[]) { unsigned int *pr; plhs[0] = mxCreateNumericMatrix(1, 1, mxUINT32_CLASS, mxREAL); pr = mxGetData(plhs[0]); *pr = (unsigned int)getpid(); } 
You need to change the figure color under [rendering](http://www.mathworks.com/help/techdoc/creating_plots/f3-36065.html#f3-110656). Uncheck the checkbox next to "Custom Color."
You can use the LTI system block included in the Control System Toolbox section of the library browser. You will need to run the model for 4200 seconds before anything happens (that's a huge delay, are you sure that's correct?) I created the system as such: s = zpk('s'); sys = (0.4/(2700*s+1))*exp(-4200*s); and I put sys in the LTI block mentioned above. 
Yeah this seems to be the way to do it. If anyone cares... I've gone over to a C++ codebase using OpenCV to grab videos.
I have a similar setup working: Can't remember if I found the mexopts somewhere or edited them myself: http://pastebin.com/BmNqY5iS 
Well, I base the function on a live test. It took about 1.5 hr before the temperature of the system rise 1K, so its a slow system.. Thanks allot for the LTI system, ill be trying it out.
That's different than what you have. In this system it does nothing for 1.5hrs, then you see how it behaves relative to the input. If you want it to take 1.5hrs to rise from the start of the simulation, rising the whole time, you want to change the time constant in the transfer function.
Ok, I wouldn't be surprised if my function is wrong, as I have no experience in the field.. I used the Two point method as shown here [http://i.imgur.com/QiXj7.jpg](http://i.imgur.com/QiXj7.jpg). I got the method from the book "Control of dead time processes" by Normey-Rico and Camacho There might be a better way to do this, but I can't find any other good methods. 
I looked at the book on amazon and he gives the example of talking between earth and moon, so I guess the book focuses on long time delay applications. Depending on what your plans are with the plant model, it may make more sense to break out the delay so you can change the plant and delay seperately, although you can tune this in the MATLAB window as well. You may also want to set initial conditions, you can do this by converting to statespace (sys = ss(oldsys);).
Hi, thanks for responding to my question, this is the first time I've had to sit down and take another crack at this problem so I apologize for my very belated response. This is definitely some of the most helpful advice I've gotten on this question. I was hoping you could clarify a few things. Do you mean for T to be a random vector defined in 3 dimensions, and for N to be a vector only defined in one dimension? It's clear I'm missing something here.
Well, im modeling a colant system for a powerplant. I need the delay to see how the PID controller react, and my plan is to verefy my tuningmethod in Simulink.. I can't get the LTI to work by the way. Do I paste "s = zpk('s'); sys = (0.4/(2700s+1))exp(-4200*s);" in the LTI system variable? 
&gt; guide win - it's just like being back in the days of Visual Basic!
Quite impressive. If you don't mind sharing your trade secrets, how did you manage to overlay a heatmap on an image? Is it actually just two images and one set to transparent? 
The data was taken using an arduino module (by requirement of the project), so we had to write a script to interface with the module (take 255 samples repeatedly), then we had to write a GUI to sample the sunlight, and then the one you see above to interpolate and display the data. The first GUI stored all of the samples in a large monstrosity of a cell array (but it was easy to sort through later) by allowing the user to section off portions of a map of the campus (the one shown above) and then click to signify a location of sampling (it was up to the user to be accurate). We used ginput() for all of the clicking, and this gave 'location' coordinates on the displayed map that we stored along with the sample data. The second GUI imported, read and accessed the cell array .mat file and then used a combination of meshgrid and the triscatteredinterp() class to display the color map of solar data on the original campus map. The more data, the more accurate becomes the interpolant generated by triscatteredinterp. The best part of that approach was that it didn't produce data for inadequately sampled areas (why there are blank areas around the edges).
Yeah sure! How should I do this? reddit isn't great for code formatting as I recall. 
This is great man. I wish my freshman MATLAB class was this in depth. We did a lot of learning but also went over way too many basics.
I'd actually be interested in seeing more of this. I'm an ChemE from Davis. :)
The level of detail was a blessing and a curse, my other classes suffered some neglect because of projects like these.
will do, check for a comment soon. 
Thank you for explaining all of that - it sounds like a great project to be a part of. But I have to ask...freshmen year of college undergrad? If so this is way more than I've ever had to do.
Good stuff! UI creation, Arduino interfacing; these are great building blocks for more advanced projects. You'll be tele-operating robots in no time! In the future, you may want to cut down on the word "data" in your programs and code. As in, never ever use the word again. In engineering terms, the word "data" is equivalent to the word "stuff," it tells you that there's some kind of information there (also, beware of the word "info,") but it's a weasel word and tells the observer nothing about what is actually represented. Am I looking at temperature? Potential generated power levels? Brightness/Intensity? Monsoon rainfall levels? All of these things are "data," and some of them are associated with the word "Solar," but there's no way to look at it for ten seconds and understand what's going on. Being more descriptive helps with maintainability too, a year from now you won't have nearly as much trouble looking at it again if the variables and labels are more specific. Sorry for the rant, but it's one of my biggest pet peeves as an engineering professional. I think it's worth stating if it helps someone be more detail-oriented in the future.
I absolutely agree! However, within the context of the project- Solar 'data' would have been contextually clear, as it was defined exactly how the stuff was collected, see the code/video in the comments somewhere. It would have been cumbersome to say "approximated average of solar voltages collected" in the place of "data" each time. 
Can you give me the codes plz? But seriously, that looks really nice. I've never used Matlab for network and OpenGL related stuff, how is it?
This will get the user input for the file name: strResponse = input(prompt, 's') This will import the file A = importdata(filename)
Thank You
i spent about 45 minutes going through mathworks and never saw the importdata function once so i decided to go to reddit
Actually it's not so nice. The network stuff is using Java classes and the OpenGL view is a bit slow. But it works and is portable (runs on Windows and Mac OS X).
Does this particular Android device have a gyro? I remember trying to do 3D orientation with just the accelerometer on the iPhone a couple years back and it didn't go so well.
The phone is a Samsung Galaxy S2 with a gyro and magnetometer.
The problem is that you are reading them into a matlab array (of characters). Every row (column) of an array has to have the same number of entries. If you read them into a cell array, it will do what you want. I forget the exact syntax, but just check out cell arrays. edit: something like this: fn = cell(25,1); for counter = 1:25 fn{counter} = fscanf(fo, '%s', 1); end Accessing fn with curly braces will output the value as a string, accessing with parenthesis gives it to you as a cell.
Ok so I'm using the command: !"C:\Program Files (x86)\foobar2000\foobar2000.exe" /command:Play I have it in a script and it works fine. I am trying to combine multiple commands into a function now, and when I enter that command in the function it tells me the syntax is wrong.
For your operation, try the following: %generate some random data to represent the metabolite data Met_Matrix = rand(24,98); %generate some random data to represent the sex of the mice male Sex_Matrix = rand(24,98); %round to make it (0) - male and (1) - female Sex_Matrix=round(Sex_Matrix); %join the two together Comb_Matrix = cat(3,Met_Matrix,Sex_Matrix); You may find that in practice you probably want to keep these separate and make the Sex_Matrix into a logical so you can index the metabolite matrix based upon sex. %Turn the matrix into a logical (i.e. 'true or false') Logical_Sex_Matrix=logical(Sex_Matrix); %Illustrate the power of the logical index Num_Fenale = sum(Met_Matrix(Logical_Sex_Matrix));
You can extend any matrix into a multidimensional array assuming the second matrix will also be 24x98 with the following code. %I'm doing this example with zeros. %Define initial matrix matrix = zeros(24,98); %Create third dimension matrix(:,:,2) = matrix; After you enter your data this will give you a multidimensional array where whenever you look at a mouse with its associated metabolites you can look at the third dimension and know its sex.
Totally agree, logical indexing seems like a much more elegant and useful solution here. 
http://www.mathworks.com/matlabcentral/cody I remember using excel to do equations and plotting in college. MATLAB was available but I really didn't know how to use it. Once you become familiar with it you will realize how much easier your life is compared to the students who don't.
thanks for the tip. 
Check out [Project Euler](http://projecteuler.net/).
Learn how to make a cost function and minimize it. This is useful on so many levels. Start with fminsearch or fminbound.
Um. You double click the installer. Follow the instructions in /crack/. It works.
One thing that will dramatically increase your matlab-fu is knowing how to handle a wide range of indexing operations. Learn about things like this: find any ismember unique exists deal myArray(myArray &gt; 3) Understand the various uses for the colon operator A(:) A(1,:) Realize that matlab stores N-dimensional arrays as a vector. So, I can do A = randn(3,3,3) I can then index into A like this: A(1,2,3) = 3 Or like this: A(17) = 1 Learning how to do some basic optimization will also come in very handy, as suggested by others. Plotting tools: plot, plot3, hist, bar, surf,mesh, loglog, stems In linear algebra, if you are using the inv() function, changes are you are doing something wrong (not always of course, but there is usually a faster/better numerically conditioned way of doing the same thing). Understand A \ b vs A / b. Learn to use pcg as well, very powerful. If you are trying to build tools, something that will be almost as valuable to you as MATLAB is learning LaTeX now. If you don't know, it's a way of writing documents. You basically write source code that compiles into a document. Let's you handle figures, references, etc. in ways that are vastly more powerful and flexible than something like MS Word. Also is a dream for type-setting mathematics. There is a bit of a learning curve, but will save you MASSIVE amounts of time on course reports, and even homework sets if you want your work to stand out to the faculty. Start here: tug.org Hope some of this helps. 
thanks a lot. I actually tried 0 when messing around, but found that that was only half of the problem: Saving a figure with hgsave puts the figure structure inside of another structure, while struct2handle expects just a figure struct. Anyway, thanks a lot. Wish there was like, even one example of its use anywhere.
Use your system's file search for things named "matlab" or "mathworks".
ive done that but then when it comes to opening matlab up, it just initializes but then shuts down right away
I don't use torrents anymore but I have the R2011b for Unix. It just worked. Have you tried opening a terminal window and launching 'matlab' from there. It might give you debug messages.
i would advice you to learn modeling in simulink. put together blocks that model differential equations. this really is something you have to do a lot in the fields you mentioned. try to combine models from all three fields. then you can describe nearly everything just by setting inputs on your model. for example, start with a compressor only using pressure and mass flow, then do the dynamics of the mechanical parts, finally do some thermodynamics and model for example the temperature exchange with the environment. you could, of course, also do that in matlab directly. get into object oriented programming in matlab. even while doing the aforementioned. anything else regarding vectors and stuff will come by itself.
does that mean you have a simulation in which the (n+1)th iteration doesn't need the data of the (n)th iteration? you can use the save if it does and you just want to be able to restart a simulation from a later state if it crashes. if the loops do not need the previous iteration's results, i would recommend you start as many matlab instances as you have processors in your computer (matlab only uses one processor at a time) or use the parallel processing toolbox. additionally, you should really revise your memory usage because it seems to me like you're storing way too much data. maybe you could slip in a "clear" from time to time? to be honest, matlab usually does not crash when you pay attention to the memory. but since i do not know anything about you program structure, these are only shots in the dark.
 subplot(2,2,1) subplot(2,2,2) subplot(1,2,2) This will do it for you. Each call to subplot is independent so You can change the size of the grid on each call. Additionally if you have fewer than 10 plots ou don't need commas subplot(3,3,1) Is the same as subplot(331)
Although both answers are correct, and I think bil's is more efficient than Grants, I vote for Grants because I find it more intuitive when reading it. Might be worth utilizing bil's to get your skills up.
As long as we're throwing out commas, we might as well through out parentheses. "subplot 331" is the same as "subplot(331)" Cheers :)
If you want good practice at manipulating strings and understanding system calls, write a function that removes spaces from filenames (think mp3s) and replaces them with underscores. be sure to catch the _-_ problem as well.
 if length(unique(V)) &lt; length(V) % do something interesting end unique() returns a vector with all the repeats removed.
of a particular number -- if sum(x==3)&gt;1 ... of any number -- if length(unique(x))&lt;length(x) ...
For the shear length of a vector - length(), size(), numel() all work. For wanting to know how many x's are in a vector, V, find(V == x) will give the locations of all x's OR ismember(V, x) will give a logical the size of V with 1's where the vector/matrix has the value x. Enjoy 
Yes.
Try using proteowizard to generate an mzXML file, which can easily be read by MATLAB using functions from the Bioinformatics library: http://www.mathworks.com/help/toolbox/bioinfo/ref/mzxmlread.html http://www.mathworks.com/help/toolbox/bioinfo/ref/mzxml2peaks.html Hope this helps.. 
Furthermore, if we want to get a list of the values that are repeated, we can use the extended output of the 'unique' function: x = randi(10,[15 1]) x = 5 5 5 4 6 6 9 8 7 4 9 6 4 10 9 [~,a] = unique(x); x(a) = [ ]; unique(x) ans = 4 5 6 9 
Try using a stiff solver like ode113 if you think you're hitting a limitation of ode45. In general, I haven't ever had to adjust the tolerance of ode45. Double check your function. 
Thanks, I had no idea there was such thing as 'stiffness' for ODEs. I'll be certain to give this a try. I'm also going to check the function gives the right rates for the initial value, since the function is very complicated. Edit: I'll also be sure to name one of my functions FloppyDonkeyDick
The original author is using the [Laplace Transform](http://en.wikipedia.org/wiki/Laplace_transform) to solve the DE system. Y1 and Y2 are defined in that "strange way" because the Laplace transform of y'(x) is s*Y - y(0). y(0) is given as an initial condition, and it looks like that means y(0) = 4. I think that Y2 is the Laplace transform of y''(x), and that means that y'(0) = 5. If you have never learned about the Laplace transform, this method will make life very difficult for you in trying to solve your DE. edit: source: I majored in math. What is your level and why are you working on this problem??
First, let me explain Y2: from the wiki link I gave above, you know that Y2 = s^2 *Y(s)-s*y(0) - y'(0) and that Y1 = s*Y(s)-y(0). So, consider what was written: Y2 = s*Y1 - 5, well, Y2 = s*(s*Y(s)-y(0))-5 = s^2 *Y(s) - s*y(0) - 5 (where the 5 is y'(0)). Indeed, they are the same. And setting X1 = 0 is definitely not the way to go. edit: Also, X1 should be of the variable s, not of t - I am, of course, assuming that X1 is the laplace transform of x'(t). - edit: added the ' in x'(t)
I'm still thinking about how to solve the original question. I think I need more info. You have a coupled system of DE's, (in x(t) and y(t)), but I'm not sure where this came from as there is no impulse (dirac delta fct) in there. Remember, the LT of dirac = 1, so if you want to solve for the dirac delta, you need to take the inverse LT of 1 somewhere. Can you provide me with more details of the question??
Well I am trying to find the impulse response, so x(s) = dirac()
I think you mean x(t) = delta(t), but a problem arises if you try to take the LT of x'(t), or any other derivative - ie. x'''(t). LT(x''') = s^3 X(t) - s^2 x(0) - s x'(0) - x''(0). If x(t) = delta(t), then x(0) = infinity, to say nothing of the derivatives, so the LT of x''' = infinity. This is problematic. EDIT: Sorry, messed up LT(x'''), but the conclusion still stands. EDIT2: delta(0) is only infinity in a very handwavy sense. We can't really treat it like that. I studied pure math, never physics or elec eng - so I'm a bit lost on the whole impulse-response thing. I'd probably have to look at the questions as well as your course reference to be of more help. Sorry
It looks like you got it working with xlswrite. For the record, fprintf only does text output. You just happened to get lucky that Excel would open it up as a tab-delimited file. Also, you don't have to use a for loop with fprintf for your 2D data (note the use of %f for floating point instead of %s for string data): fid = fopen('delete_this.txt','wt') Wt = W'; fprintf(fid, [repmat('%f\t',1,size(W,2)-1),'%f\n'],Wt{:}) fclose(fid) 
If you really want to avoid for loops, you can use sort: numberRemoved = 1; numberReplacing = 0; A(A == numberRemoved) = numberReplacing; sz = size(A); [~,I]=sort(A == numberReplacing); A = A(I + ones(sz(1),1)*sz(1)*(0:sz(2)-1));
A few ways to replace the 1s have already been mentioned. the easiest way to shift the matrixis with: circshift. I'm on my phone so I can't write up an example but I seem to remember the help documentation to be pretty good
You can plot you data within a loop and call drawnow to update the plot. That gives you an animation. Also you can save each plot as an image and combine those images to a movie using a program like ffmpeg.
 Thanks, I do not see the utility of drawnow - the documentation on it is somewhat vague - what does it do exactly? BTW also something like this may work apparently - saveas(gcf, [testIimage], ’png’); My question here is how do I tell it that I want, say, figure-2 to be returned from gcf? Thanks! 
Follow the tutorial m file here for nice and easy animated gifs from within matlab :) http://www.mathworks.com/matlabcentral/fileexchange/21944-animated-gif
Alas, I do not have the image processing toolbox good Sir.. :-/
iirc, you use "getframe" to screengrab your plots and store them in a variable inside your loop. Then you can use another command to convert that variable into a gif or avi (I think it's called "movie"?). So: for i = 1:50 plot(something) animationslides(i) = getframe; end movie(animationslides) Look up the documentation to getframe and movie to make sure you have the proper syntax and stuff.
To brush up I'd recommend [Khan Academy: Linear Algebra](http://www.khanacademy.org/math/linear-algebra) or [Paul's Notes](http://tutorial.math.lamar.edu/Classes/LinAlg/LinAlg.aspx) for a more thorough review. I like the PDF format for Paul's Notes, if you select E-Book Notes from the top center drop-down menu you'll get the full set of notes in one PDF. These [tutorials](http://www.math.siu.edu/matlab/tutorials.html) are good for learning how to do all the basics within MATLAB. You can work through each example step by step and check your work with the answers he gets for each command. There are also included .m files for examples given within the tutorial. I found it to be pretty helpful starting out. 
If you're ever plotting two closely related quantities, and want a quick and dirty way to check for overlap, compare their relative shape, etc, look into [uilineshift](http://www.mathworks.com/matlabcentral/fileexchange/23899) and [addaxis](http://www.mathworks.com/matlabcentral/fileexchange/9016), two of my favorite MATLAB File Exchange scripts. 
Gilbert Strang! ([here](http://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/video-lectures/)) and ([here](http://math.mit.edu/linearalgebra/)). Also, Hal Caswell does very cool matrix-based population dynamics modelling in [this book](http://www.amazon.ca/Matrix-Population-Models-Hal-Caswell/dp/0878930965). He's a little more demanding, but maybe it'd show yo more of exactly what you're interested in. (?)
Grab a copy of the Matrix Cookbook (PDF). The project's page seems to no longer be in service, but copies of it are abundant on Google search results.
If you want this to be cross-platform (although I doubt it), you might want to take a look at fullfile() as well.
Tutorials to help me 'learn the language' are just what I need, thanks!
You seem to be combining/confusing time and frequency representations of ordinary differential equations. You need to hit the books a bit before you can make your question coherent.
Yeah, I'm rather unsure as to how I would go about generating this sort of mesh within my (deformed) spheres. As said, the mesh we created for the sphere was done with the SPHERE command and after that all we did was applying differential equations to the results. Quite the novice at this type of programming! Hm. Got the tip to take all of the corners and compute the diagonals between these, choosing a common tip, [x0,y0,z0], (e.g the middle of the sphere, or anywhere within the sphere) and use a double for-loop where each volume is computed and added. Apparently this was done by taking the cross-product of each diagonal (in the "bottom" of each pyramid, 4 corners, 2 diagonals) dividing this by 6 and then multiplying (dot-product, I assume) with the vector containing of the mean of the four corners for each pyramid subtracted by [x0,y0,z0]. Any idea how one would do to do this smoothly in MATLAB? EDIT: Oh, and thanks for the tip! I really appreciate it!
Problem solved! Thank you very much!
Nice. Cheers!
Is this relevant to your interests: http://www.mathworks.co.uk/help/toolbox/stats/pdist.html
I've made some progress but still need help please. At the moment I need to find a way to terminate the while loop. Getting the 'exit' variable passed back into the main function would do that but I don't know how. Otherwise, an if loop could be used to check which key was pressed in the main function, but I don't know how to access the 'evnt.Key' variable needed for this. Thoughts? ---CODE--- data = magic(15); % for example [cwidth,cslip] = crackfilter(data); function [cwidth] = crackfilter(data) images=size(cwidth,2); [X Y]=meshgrid(0:images-1,1:size(cwidth,1)); fig=figure('Name','Crack Filtering','KeyPressFcn',@onclick); set(gcf,'Position',[0 50 500 500]) surf(X,Y,cwidth(:,:)); xlabel('Image Number'); ylabel('Patch Location'); title('Click on wild data point. Press delete to delete. Press return to stop.'); exit = 0; while exit == 0 % datacursormode on dcmObj = datacursormode(fig); set(dcmObj,'Enable','on',... 'SnapToDataVertex','on', ... 'DisplayStyle','window',... 'UpdateFcn',@datatextbox) pause hManager = uigetmodemanager(fig); set(hManager.WindowListenerHandles,'Enable','off'); set(fig,'KeyPressFcn',@onclick) end disp('END'); function exit = onclick(~,evnt) disp(evnt.Key); if strcmp(evnt.Key,'delete') info_struct = getCursorInfo(dcmObj); cwidth(info_struct.Position(2),info_struct.Position(1)+1) = NaN; % clf exit = 2 surf(X,Y,cwidth(:,:)); elseif strcmp(evnt.Key,'return') exit = 1 end end function [txt,pos] = datatextbox(~,event_obj) pos = get(event_obj,'Position'); txt = {['Image Number: ',num2str(pos(1))],... ['Distance: ',num2str(pos(2))]}; end end
seriously, could you use some formatting? it's impossible to see through this. if you want help, at least go through the effort and make it readable. apart from that you should check your equation. have you considered taking some paper and writing it down? you get zero because zero is a solution. correct me if i'm wrong but right now if you fill in the variables in num you get: 0=Y_s(s^3+9*s^2+26*s+23) that does give you a solution of Y_s=0. i've only done it quickly now so i might be wrong. but you should read up on that again. there's also a support for laplace transformation in the symbolic math toolbox. look up laplace(F) if you're interested. maybe we could help you more if you give a bit more (formatted) code on what exactly you're trying to transform and solve.
Could you also have size thresholds? Additionally, you know there will be a minimum non-object border around the suits (because of the white boards) - could you use this as a another way to categorize?
Yes, I do size thresholding using the blob analysis block (specify min and max size of blobs). I've looked into using the white boards to extract regions of interest, but I get clouds included in that (white) thresholding.
Hmm. So, the shapes are not round. Another thing I'd try is threshold by (1) ratio of length:width and (2) degree of roundedness (which can be found using regionprops:eccentricity). Both of these attributes should be known for the suits. Does this make sense? Cool project! 
I've been doing eccentricity already, but I'll try length/width ratio as well and see if that gets any better results. Thanks for the suggestion.
This all depends how you want the output really. Have a look at: http://www.mathworks.co.uk/help/toolbox/images/ref/bwtraceboundary.html http://www.mathworks.co.uk/help/toolbox/images/ref/bwperim.html You should be able to save the output from the first as something that could be imported into a CAD program - it will just be a list of connected X,Y locations.
I ended up using this .m function that uses ginput and a simple algorithm to figure out the closest data point to where the user clicked. http://www.mathworks.com/matlabcentral/fileexchange/3265-magnetginput There should be a way to do the same thing with datacursormode without using a separate .m function, however this .m file will work fine for now. 
How is koen formatted? For testing purposes I made koen =['m';'f';'m']; Also disp cannot be used like that I believe, try this: fprintf('m: %d (%d), k: %d (%d)',mand, pmand, kvinde, pkvinde)
Hey guys, thanks alot for taking the time to comment on this :) I did figure it out using this bit of code: if strcmp(k(i,1),'m'); mand=mand+1; else kvinde=kvinde+1; It's a very basic class for matlab, so I honestly do not have a broad knowledge of the various commands. Thanks again for your time :)
thanks for replying but i had figured it out. hadn't logged in for a while so just saw this.
Also if I remove the (Omega,param) part after jkorb in my nlinfit call it tells me that param is undefined..
Two things that I see: * your function signature is wrong. Use: function [ J ] = jkorb(param, omega) % params must come first * pass jkorb into nlinfit as a function handle: fit = nlinfit(Omega,GstarFFT,@jkorb,param);
What's actually happening here is some sort of optimization inside nlinfit (&gt;&gt; edit nlinfit.m to see inside it). Depending on your problem, you might have many many local minima in the parameter space. I don't know of any great way to figure out the best starting guess for your parameters besides just visual inspection or prior knowledge of the problem. If you have the optimization toolbox, you might look into lsqnonlin or lsqcurvefit for more power and control.
fft is the first that comes to mind. Try fft(pts-mean(pts)) or something. Getting the two distinct signals will be the tricky bit. An appropriate hough transform would do the job also, but would be fairly slow.
The signals look pretty widely separated in frequency, so Dickferrets suggestion about FFT will work nicely. Even if you're concerned about preserving phase (which you didn't specify so Im assuming it's not critical) the wide separation will make that not matter anyway. I wil tell you the simplest, roughest, dirtiest, but fastest and easiest way to filter these, however you may have another issue, the highest frequency is aliased, each point alternates high/low, which means there's missing information. Regardless, this looks like a simple low frequency signal modulated on a high carrier. It means you'll have an FFT peak all the way at the maximum bin. Anyways, the quick and dirty filter is take the FFT, look at it, there should be just a couple or few regions that contain large amplitudes. Create a new array of the same size, all equal to zero except in the indexes surrounding one peak or a tightly bunched group of peaks, set it to one. Multiply this by your FFT array. The result is a step-function bandpass filter that only picks out that narrow frequency range. The reverse FFT it. Repeat for each peak in the FFT. Sharp cutoffs like this have horrible phase effects, but it looks like your peaks will be so far apart it won't matter. If you don't like the result, then instead of a square wave, use a softer function, there are many to choose from. If you need to preserve the DC offset, you'll need to also keep the first few FFT bins too, so just set them to 1. 
Last time I had to do this I used [lxml](http://lxml.de)
This could work, and from the tutorial it looks pretty simple to integrate with what I need. Thanks.
You could write a script in Perl (or whatever language you feel most comfortable with) to get the data and format it in a Matlab-friendly way, then use system() to call the script. If you're using a *nix environment (can't comment on Windows), be forewarned that if you use system() for something REALLY convoluted (like, calling Make), Matlab prepends $LD_LIBRARY_PATH (maybe others) with some of its own stuff. Make hard links to your libraries.
Yes, it seems I will have to take the scripting way for this. I was hoping to do all this in Matlab and maybe learn something new in the process, but the information I need is all over the place in over a dozen sites. Didn't know about the prepending part, but I think I'm in the clear, most data is just numbers and tags that I have to cluster and do some linear regression on. I feel so stupid that I find that easier than gathering the data.
Regex.
http://www.regular-expressions.info/tutorial.html
My language is danish which is why the strings won't make sense: A = 'Priser' 'Åbningstider' 'Service' 'Beliggenhed' 'Varesortiment' B = 4.7000 5.8500 4.6500 5.0000 6.1000 Those are supposed to be exported to excel, so they align, where Priser is next to 4,7 and so on.
Excel can only contain 2-dimensional data - you'll need to reformat ExcelInfo before exporting. You can either create a 2-D cell array with the data where you want it, or use the options in xlswrite to put it where you like. ExcelInfo = {'Number of attendants'; 'Distribution of gender'; 'Men';'Percentage'; 'Women'; 'Percentage'; 'average age of attendants'} ExcelInfo(end+1:end+5) = A xlswrite('test.xls',ExcelInfo,'A1:A12') xlswrite('test.xls',B,'B8:B12') There may be a better way but I'm not too familiar with xlswrite. Why do you want to export to Excel anyway?
I'm taking a class in IT for business economics, and we have VBA and Matlab as the chosen software. So we have to first design an application that can create a survey in VBA, import it to Matlab, do some analysis on it, then export it to excel again. The problem is that while there are some questions and stats that will always be appear in the survey, like the number of attendants in the survey, the age and the gender of the various persons, the export function needs to take into hand that the name of the questions can vary. Therefore I have to someway be able to make an export function that can change the strings of the question names exported each time a different survey is exported. Edit: Thanks alot man, I tried it out just now by making different xlswrite for the Excelinfo, and then one for A and one for B, where I specify which range to put A and B into. It worked out :) Now I just need to figure out how to give the questions unlimited range without getting error messages in excel. I filled out the range to A8:A300 and after the first 5 questions, the rest came out like #I/T. But I'm getting the hang of this :)
It's a bit hack-y but _eval_ might be useful. Function example: % EF exports current figure with my favourite settings function ef(name) eval(['export_fig figures/' name ' -pdf -grey -transparent']) end Type 'help eval' for more info. This example concatenates strings and variables by putting them into an array. 
I'd be very interested in this.
I agree with the wiki idea. When there's something I need to figure out, I just google it (with nearly 100% success via googling coupled with Matlab help topics). It would be nice to have a wiki where I can directly search and reference a repository of info.
I would be very interested in this, and I would love to have a good Matlab ebook to recommend to friends.
Thanks for the suggestions, everyone. Interesting to hear perspectives. What's clear to me already is that people even here in r/matlab use Matlab very differently. For instance, excaza mentioned GUIs and while I have played around with GUIDE a bit, I have really never had the need for GUIs beyond uigetfile and questdlg in my own work. Ditto fofo314's comment on SVD, which is a function I'm certain I've never used personally, although I'm sure it's invoked in various toolboxes my code has had reason to interface with. I think I was envisioning something even more basic than what most of you suggested, really focusing on how to PROGRAM Matlab rather than actually USE Matlab (if that makes any sense). So I agree that spending lots of time on Matlab's various data types (numerical matrices, structures, cell matrices, strings, mix 'n' match) is essential, as is a treatment of programming concepts like functions and loops and all that syntax stuff. My highest hope was that we could get from the disp('Hello world!') stage up to something like reading in data from a .csv or .txt file, doing some basic processing on it (sorting, rejecting certain rows based on some criteria, calculating means and standard deviations and such), make a halfway-decent-looking plot of the output, and save the results in a data structure that could be read in later. Maybe I'm aiming too low, but I was hoping just to at least get everyone to the point where they could look up specific applications for their work in the Matlab help without getting totally confused by the syntax, and not lose anyone to technophobia-induced panic along the way. Anyway, this is all very helpful for planning general topics even if I don't quite reach the heights some of you aspired to (e.g., fscanf might be a bit tricky for my people, but hopefully I could at least get them up to textscan). And as for the wiki idea, I also like the idea of collating together the world's Matlab knowledge, although I also think the wiki format works better for those of us who already know the basics. I'm not really so concerned about the $3/copy or whatever I'd make from a book, but I think that for the absolute beginner who needs hand-holding, a linear format is best -- it's just too easy to click 11 links trying to figure out one thing and get lost in the morass of hypertext. So, maybe "for Dummies" in Volume 1, and then a more in-depth but still gentle introduction to specific topics in Volume 2, with supplemental information in a wiki? That should keep me busy for a few years... Anyway, I do appreciate the thoughts, and if anyone has more ideas (or wants to argue these points further), please let me know.
Pastebin. Mods. One again repeating my suggestion for big red letters over self.matlab posts about how pastebin works and to use it.
penis
well this is helpful 
Haha. Actually, it just means that the differential equation describing the physical process in question leads to a solution that may jump all over the place over a small period of time. The very nature of the equation can make render certain numerical methods unstable as a result. I'm finding it odd that you'd be getting complex values, though. : \
It doesn't look like you're far enough along for this part yet, but an easy way to figure out the angles of the axes of a set of data is to use principal component analysis, which can be done quickly in Matlab with: [A v]=eig(cov(data)); where data is an NxD array of N points in D dimensions, and A is an array of vectors representing the "principal axes" of the data.
In my 2011b installation I have it in "C:\Program Files\MATLAB\R2011b\toolbox\matlab\iofun\str2rng.m". The help for it says: str2rng Convert spreadsheet range string to numeric array. M = str2rng(RNG) converts a range in spreadsheet notation into a numeric range M = [R1 C1 R2 C2]. Example str2rng('A2..AZ10') returns the vector [1 0 9 51] str2rng will be removed in a future release. See also xlswrite, xlsread, wk1write, wk1read.
Sweet, thanks guys. 
Thanks - just found the Lawrence/Rabiner book at the campus library. I found a great pdf textbook [here](http://www.speech-recognition.de/), and used some of the examples on this site to put together some code that can recognize isolated words.
Thats the limitation of 32 bit processes on windows - they can only address up to 2GB (or so). If you want to access more memory you need to use the 64 bit version. Virtual memory (swap file) doesn't make any difference - and in any case would make Matlab impossibly slow to use.
Crap. I was afraid so. That's what the whole 3GB switch solution was about, but it didn't explain that in the help. Thanks!
Great, I will check the links out! I doubt that the course is an option though, but maybe some day down the line. Good to know they have one though. Thanks!
Thanks a bunch. I have yet to try this, but looks like its a fresh piece of code, so it must be working :). 
I assume that you edited this image, and thus you simply want to rename the ticks of the x-axis by illustrated fashion: set(gca, 'XTicks', 1:11, 'XTickLabels', [5:-1:0 1:5]) 'gca' stands for the current axis handle. 'XTicks' is the axis property for tick positions. 'XTickLabels' is for the labels themselves. Hope that helps.
Best of luck with the rest of it then!
I think you need to break the problem down a bit more. As a key point, what projection are you going to use for your map? As an initial comment - I'd suggest instead of your counter idea, I would write a script to round the input (long,lat) data (and divide by your desired resolution to start with). You can then use the command unique to create a list of grid points that contain data. From that list, you could run through all the unique values and count the number of times they are found in your initial data set. If you want to follow your initial method, you can just use for loops. (initialise an array with your counters using 'zeros', then run through all data pairs counting the distance from your (long,lat) point and threshold with your rounding value). 
I can't seem to get it to work. Here are my 4 lines of code that include 'set'. set(get(AXm1t1(1),'Ylabel'),'String','SG Displacement(mm)') set(get(AXm1t1(2),'Ylabel'),'String','Accelerometer Voltage(V)') set(H1,'LineStyle','-') set(H2,'LineStyle',':') Which one will I be modifying and how? I tried changing 'Ylabel' and 'linestyle' to 'YLim' and only got errors: Error using set Bad property value found. Object Name : line Property Name : 'YLimInclude'. Error in exp4cal (line 52) set(H1,'YLim','40') For the 'Ylabel' substitute and: Error using handle.handle/set Invalid or deleted object. Error in exp4cal (line 52) set(get(AXm1t1(1),'YLim'),'String','40') for the 'linestyle' error. Based off the error messages I think the first one is the one I should be modifying but I'm not sure how to fix it. 
Do you have access to any GIS-software? This is a very common GIS analys and can be done pretty simple in software like QGIS, ArcGIS. /r/GIS or /r/AskGIS could also help.
Method A: Plot the first line of each data type, call legend, then plot the rest: plot(x1(:,1), y1(:,1)); hold on; plot(x2(:,1), y2(:,1)); legend('Type1', 'Type2') for i = 2:100 plot(x1(:,i), y1(:,i)); plot(x2(:,i), y2(:,i)); end Method B: Dive into the lineseries properties and turn off its legend attributes (this one sucks). % Only doing a single line here, you get the idea plot(x1(:,1), y1(:,1), 'DisplayName', 'Type1'); hold on; for i=2:100 hLine = plot(x1(:,i), y1(:,i)); hAnnotation = get(hLine, 'Annotation'); hLegendEntry = get(hAnnotation, 'LegendInformation'); set(hLegendEntry, 'IconDisplayStyle', 'off'); end legend show 
Just download it. You're clearly not going to go designing NASA rovers on your own and it'll improve your skill set to where a company WILL pay a full seat for you.
forgive me but i don't know how. could you elaborate?
You pirate it. On sites with torrents or usenet.
I think he's suggesting that you pirate it. If the thought of pirating software offends you, you might try Octave instead as a free (thought not feature complete) alternative. Or go with a language that doesn't require large piles of cash just to do science. 
interesting, i see FreeMat and Octave are both contenders. do you have any experience with these free alternatives? what did you like/dislike about the ones you tried?
If you want to " brush up [your] matlab skills" octave will work just fine. You are not going to find any differences on the surface.
While I probably wouldn't be interested in this myself (I've been using MATLAB for some years now), I would like a good resource to be able to recommend to friends and colleagues. I myself learnt my first bits of MATLAB using this primer: http://www.math.toronto.edu/mpugh/primer.pdf It is quite a good concise example of 'beginners' MATLAB instruction. However, it lacks good examples, and is perhaps not very exciting/interesting. One of the hardest things I think people find with MATLAB is how to *use* it as a language. When I first started I tried to make complete programs, from data loading through to plotting/export, which I then ran as a black box (sort of C++ style); this failed to make use of the interactive possibilities the command window, scripts and cell mode offers. Other people overuse the command window, failing to save their lines of code as scripts or functions. It would be great to see introductory features being introduced through example projects, with good clean code and good programming practices being used from the start. Something a bit like this OpenCV book perhaps: http://www.packtpub.com/opencv-2-computer-vision-application-programming-cookbook/book 
Just a little simulation I wrote as a final project for Matlab class. I'm not sure how accurate it is to what really happened, but hopefully it will give some ideas and example code to those looking for help. Give it a run if you have Matlab open, too; It might be some mild fun. NOTE: Default settings generate a movie of simulation captures; This takes about 40 seconds on my shitty laptop for 10 captures.
of course. you have to give proof of student status (which i am not)
You should vectorize the *for* loops at lines 150-151. Would run faster.
ah...I missed the text since I was on my phone
I wrote this a while back, you might find it useful, let me know if you find any issues/bugs. function cLeg(style,text) % A function to do custom legends. % cLeg({'rx-','b.-.','xm:'},{'Red crosses on a solid line','Blue dots joined by dash-dotted line','Magenta crosses joined by a dotted lines'}) % cLeg({'rx-','b.-.','xm:','g.'},{'rx-','b.-.','xm:','g.'}) N=numel(text); held=ishold(gca); hold on for n=N:-1:1 temp(n)=plot(1,1,'visible','off'); end if ~held hold off end [~ , ~, H]=legend(text); for i=1:N col=regexp(style{i},'(r|g|b|c|m|y|k|w)','match','once'); line=regexp(style{i},'((--)|(-\.)|-|:)','match','once'); style{i}=strrep(style{i},'-.',''); mark=regexp(style{i},'(\+|o|\*|\.|x|s|d|\^|v|&gt;|&lt;|p|h)','match','once'); get(H(end-i),'type') if ~strcmp(get(H(i),'type'),'line') display('Warning - not a line! Support for patches needed') continue else if ~isempty(mark) set(H(i),'Marker',mark) else set(H(i),'Marker','none') end if ~isempty(col) set(H(i),'Color',col) else set(H(i),'Color','b') end if ~isempty(line) set(H(i),'LineStyle',line) else set(H(i),'LineStyle','none') end if ~isempty(mark) set(H(i),'Marker',mark) else set(H(i),'Marker','none') end end end end
Mah bad, I uploaded an old copy from before I fixed some things. If anyone uses fig = load(fig, '-mat') note that the data you actually want will be inside fig.hgS_070000 (for some cryptic reason.) Just gave this version a run on R2011a and it works. Hopefully I didn't use any features specific to my version :) (Script gives warning by design on first run, since it has to generate and save a .fig file)
Dear God, that gave me a bit of a PTSD flashback. I'd forgotten about it until just now, but I used that same primer back in college, when I had to learn a ridiculous amount of Matlab from scratch in a day or two for some assignments in a computer vision class (which I had, of course, procrastinated on). Anyway, I think you're right that it's a bit dry, and it seems to be for people who already know lots of math and at least some programming basics, but it does have a good structure that one could use for inspiration in writing a truly beginner-oriented Matlab text. Just need to make the prose a bit more friendly, add more examples, etc., as you said. Thanks for the memory jog, even if it was a bit traumatic for a second...
I have found only more of the same (PCA and DWT), plus the standard DCT. Any search for "PCA denoise" or "wavelet denoise" or "DCT denoise" returns enough results. My next step is to compare these methods, however before any comparison I would like to know if there are algorithms that are either more modern or lesser known, that can be applied. 
I solved this by passing part of the array through the functions instead of passing the whole thing, thus avoiding the bit issue altogether. But that wasn't my primary issue anyway. Code works great now. 
I would still like to hear others' input, but part of my problem was that Google appears to be top-ranking results based on previous searches. So since I searched for wavelets previously, wavelets and DWT always appear top ranked in search results. However searching on DuckDuckGo (and probably other non-Google search engines) brings up more variety of results. http://duckduckgo.com/?q=image+denoising+matlab
A quick Google Scholar search found: http://ieeexplore.ieee.org/xpl/login.jsp?tp=&amp;arnumber=5173518&amp;url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D5173518 http://ieeexplore.ieee.org/xpl/login.jsp?tp=&amp;arnumber=5617278&amp;url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D5617278 
Also, here's some MATLAB code for the TV denoising: http://visl.technion.ac.il/~gilboa/PDE-filt/tv_denoising.html
I would look up something called "Sparse Coding". It woeks very similar to JPEG2000 and has a large literature. I would recommend starting here: http://home.ustc.edu.cn/~tdwjl/2.%20Review_Paper_SIAM_Review.pdf and here: http://www.cs.technion.ac.il/~elad/publications/journals/2005/KSVD_Denoising_IEEE_TIP.pdf There is also LOTS of code to actually do these things in MATLAB (e.g. SparseLab, TFOCS, NESTA, KSVD, SparseNet....). 
Have you tried 'findobj' and appending legend enteries? Check MATLAB help, if you still have problem, let me now. I would be happy to help.
What type of data are you smoothing? I'm just familiar with the financial side, but there are specific ways to smooth data like historical stock prices (such as the expectation-maximization algorithm). 
I'd try a [kernel density estimator](http://en.wikipedia.org/wiki/Kernel_density_estimation) or a [neighbor smoother](http://en.wikipedia.org/wiki/K-nearest_neighbor_algorithm). It depends on the details. [This](http://en.wikipedia.org/wiki/Kernel_smoother) would be a good read too. These are all model-free methods. If you have a model in mind, it'd recommend a model dependent method. 
 I always use the 'diff' command to do this sort of stuff. Also near perfect in finding step changes. 
Try median filtering: [medfilt2](http://www.mathworks.com/help/toolbox/images/ref/medfilt2.html).
If you know the highest frequency you are interested in, you can use a simple low-pass filter to remove high frequency spikes. There should be some options in signal processing toolbox.
You know, using fewer for-loops is helpful in speeding up some processes, but at the end of the day often it's just the fastest way to hack something together, especially if you're only going to use it a few times. It's sometimes not worth figuring out a way to do it without forloops... just keep that in mind!
I did consider this, but I've only used filters in 1D vectors. Would it be possible to check all adjacent elements? Maybe run the filter through single rows, then along columns?
OK - I am not sure about denoising low bitrate sources specifically - but for denoising in general, the current state of the art are works by Mairal et al. ICCV 2009: http://www.di.ens.fr/willow/pdfs/iccv09a.pdf and BM3D (they have plenty of works about this, try the): http://www.cs.tut.fi/~foi/GCF-BM3D/ and more specifically: http://www.cs.tut.fi/~foi/GCF-BM3D/BM3D_TIP_2007.pdf Both are quite similar in their approach and are considered state of the art - their approach is to learn statistical regularities from the noisy image itself and then use this information to do some clever filtering methods. The predecessor to this approach is called Non-Local means, and it is quite an easy and interesting read. They all have matlab implementations - but not all the source code is always available (MEX files are, though). I implemented BM3D on my own once - it's a mess, but unless you do it it's very hard to understand what is going on. There are many other methods (some by me... :) ) to denoise images - if something interests you specifically from these, I can tell you more. 
I'll do that, thanks
nlinfit.
Yeah, check out level sets. Fella in my PhD office is working on them, though I don't know much about them myself. He is segmenting brain tumours on MRI scans, so the method should work for you.
 coeffs = zeros(200,3); for it = 1:200 coeffs(it,:) = nlinfit(x(it,:),y(it,:),f(x,y)); %insert appropriate syntax end Unless I'm missing your question.
Assuming you meant y=a x^b +c, the curve fitting toolbox *is* elegant and has may [built in fit functions](http://www.mathworks.com/help/toolbox/curvefit/bs9vw_1-1.html). If the x is a 200 x n matrix and y is a 200 x n matrix: f=fittype('power2'); for idx=1:200 model=fit(x(idx,:),y(idx,:),f); a(idx)=model.a; b(idx)=model.b; c(idx)=model.c; end
http://www.mathworks.com/support/product/product.html?product=SV&amp;BB=1 Not a user myself, but this is the tech support page for the student version. My may need to be logged in to your MW account to view that link, but it's pretty helpful. 
Since no one is giving feedback, I am going to chime in as a long time user of MATLAB (~8years). Never had any problems, never had to contact CS so I cannot really give feedback (that said the licensing and activation can get a bit annoying especially given how easy it is to pirate MATLAB)!
&gt; Let me know what we should keep doing, and what we can do better Can you please do something about your complete failure to support c++ compilers made in the last 5 years on linux and mac? In order to get mex working on a mac I had to: uninstall xcode 4, install xcode 3, run the mex configure script in matlab, and then reinstall xcode 4 again, without removing xcode 3. Linux requires some weird patching with LD_PRELOAD to run c++ that uses the standard io libraries (such as reading from files, or writing to screen). Doing this breaks the ability of mex files to write to the screen. Rolling back to the last support version of gcc (is it 4.2?) removes the ability to use templates correctly. 